<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 21 Aug 2025 09:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[How to stop feeling lost in tech: the wafflehouse method (113 pts)]]></title>
            <link>https://www.yacinemahdid.com/p/how-to-stop-feeling-lost-in-tech</link>
            <guid>44968190</guid>
            <pubDate>Thu, 21 Aug 2025 01:28:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.yacinemahdid.com/p/how-to-stop-feeling-lost-in-tech">https://www.yacinemahdid.com/p/how-to-stop-feeling-lost-in-tech</a>, See on <a href="https://news.ycombinator.com/item?id=44968190">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!sTSG!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!sTSG!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg 424w, https://substackcdn.com/image/fetch/$s_!sTSG!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg 848w, https://substackcdn.com/image/fetch/$s_!sTSG!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!sTSG!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!sTSG!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg" width="1456" height="964" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:964,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Cora (restaurant) - Wikipedia&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="Cora (restaurant) - Wikipedia" title="Cora (restaurant) - Wikipedia" srcset="https://substackcdn.com/image/fetch/$s_!sTSG!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg 424w, https://substackcdn.com/image/fetch/$s_!sTSG!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg 848w, https://substackcdn.com/image/fetch/$s_!sTSG!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!sTSG!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6f6c9d93-4947-49dd-ab21-557d5ed9b74a_4928x3264.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>these past few weeks I’ve received a massive amount of dms from CS students being absolutely lost.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!c1Hw!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!c1Hw!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png 424w, https://substackcdn.com/image/fetch/$s_!c1Hw!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png 848w, https://substackcdn.com/image/fetch/$s_!c1Hw!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png 1272w, https://substackcdn.com/image/fetch/$s_!c1Hw!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!c1Hw!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png" width="779" height="187" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:187,&quot;width&quot;:779,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:60389,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.yacinemahdid.com/i/171501635?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!c1Hw!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png 424w, https://substackcdn.com/image/fetch/$s_!c1Hw!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png 848w, https://substackcdn.com/image/fetch/$s_!c1Hw!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png 1272w, https://substackcdn.com/image/fetch/$s_!c1Hw!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa7b38e46-66a9-491b-85db-c9c5ea857877_779x187.png 1456w" sizes="100vw"></picture></div></a></figure></div><p>like to a level of lost I’m feeling their stress and anxiety in my own chest.</p><p>on top of that some of you are going through the absolute worst time of your life I don’t know how you guys are still standing up but I’m in awe.</p><p>I found myself reiterating the same advice to at least 7 people now, so I’ll write it all here for those who are too crippled to ask for help.</p><p>hope it’s useful folks and keep it up.</p><p>never surrender.</p><p>I’m receiving a variation of this, but the common element is always that the person feels completly lost.</p><p>lost because AI will take their job, lost because it seems there is too much to learn, lost because they don’t know if they actually like this whole tech thing, etc.</p><p>hold on.</p><p>hold it right there.</p><p>most had no idea. </p><p>they had the vaguest picture of what they would be doing in 5 years.</p><p>and trying to figure it out by looking at technology is the wrong way to look at it.</p><p>it would be like trying to obsess intensely over hammers, nails, saw to build a house. tech is the same; it’s just a set of tools to do something.</p><p>enter my favorite method to get your life untangled, which I call the wafflehouse method (bear with me, I swear this blog post is useful).</p><p>I’ll detail here how to use it, but remember that untangling your life goals is a deeply personal process. </p><p>take inspiration from this, but feel free to modify so that it feels good.</p><p>call in sick, cancel your meetings and plans for two days.</p><p>straight in the middle of the week.</p><p>don’t tell your kids, wife, moms or friends that you are taking off.</p><p>you are going to go on a deeply personal introspective adventure and the only one invited is you.</p><p>48h to find yourself in the whole year is the least you can do.</p><p>sorry for the image but yes that’s what you gonna do.</p><p>pick your favorite spot, the one you feel very good to be at, and can spend a whole day by yourself.</p><p>can’t give you advice on picking a spot just make sure that wherever you are going has deep significance for yourself.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!KXHB!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!KXHB!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png 424w, https://substackcdn.com/image/fetch/$s_!KXHB!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png 848w, https://substackcdn.com/image/fetch/$s_!KXHB!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png 1272w, https://substackcdn.com/image/fetch/$s_!KXHB!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!KXHB!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png" width="1060" height="660" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:660,&quot;width&quot;:1060,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1405925,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.yacinemahdid.com/i/171501635?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!KXHB!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png 424w, https://substackcdn.com/image/fetch/$s_!KXHB!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png 848w, https://substackcdn.com/image/fetch/$s_!KXHB!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png 1272w, https://substackcdn.com/image/fetch/$s_!KXHB!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e09321d-b5ea-4498-9618-a076bca1c743_1060x660.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>mine was this bench.</p><p>now sit alone with your notebook and be quiet for a while.</p><p>try to imagine this one image: yourself 5 years from now.</p><p>not as of how you are going to get there from the current trajectory you are following, but how you would feel proud to be.</p><p>imagine it vividly, it may be still very abstract, but try to dive a bit in your mind what is going on in this vision.</p><p>does it have to be tech related?</p><p>no absolutely not, on the contrary.</p><p>imagine yourself at the pinacle where you really feel proudness bursting within your chest. this looks different for everyone. </p><p>try to remove anything attached to other expectations of yourself. doesn’t matter what your moms and dads want of you if you feel like a husk inside.</p><p>now that you have something to latch upon, write and write and write. write everything, how you feel now, how you feel then, what is different from now, what you regret, the things you think are not realistic, that one hunk of shame you have been carrying over forever, all these fears and hope lay them all down.</p><p>write and write until there is nothing more to be said.</p><p>write it all up until you have colors and shape of things you want to come to pass.</p><p>it doesn’t have to be clear for now, it just needs to be vivid.</p><p>when you are satisfied with this painting, it’s time to head home for a good day rest you are going to need it.</p><p>now is time to enter the wafflehouse (or whatever regional equivalent you have mine is called cora).</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!wR2b!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!wR2b!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg 424w, https://substackcdn.com/image/fetch/$s_!wR2b!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg 848w, https://substackcdn.com/image/fetch/$s_!wR2b!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!wR2b!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!wR2b!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg" width="850" height="850" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:850,&quot;width&quot;:850,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Cora Déjeuners et dîners Montréal - Menu, avis &amp; plus août 2025&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="Cora Déjeuners et dîners Montréal - Menu, avis &amp; plus août 2025" title="Cora Déjeuners et dîners Montréal - Menu, avis &amp; plus août 2025" srcset="https://substackcdn.com/image/fetch/$s_!wR2b!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg 424w, https://substackcdn.com/image/fetch/$s_!wR2b!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg 848w, https://substackcdn.com/image/fetch/$s_!wR2b!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!wR2b!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fab750c08-7308-43a4-a745-3273343ac1bd_850x850.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>beautiful architecture</p><p>make sure that wherever you are going can tolerate you for a whole day because you are going to be squatting there opening until closing.</p><p>bring you computer, your notepad and this image of yourself.</p><p>now that you are comfortably sitting with your beverage of choice it’s time to refine the image you painted into 2-3 clear goals that happen in 5 years time.</p><p>the goals need to be very specific and detailed.</p><p>if you feel absolutely ridiculous writing them down, it’s maybe too much, but don’t hold back. the goals need to match the image.</p><p>write as much detail as you can about each of these goals and make sure that there are as few as possible while still retaining the essence of the image.</p><p>now that you have these 2-3 5-year goals you interpolate what you need to achieve in 3 years time to be on track to hit them.</p><p>it’s ok if your interpolation is a bit crooked, you just need to trace a course here.</p><p>if you feel the 3 years are ridiculous, feel free to change the 5 years and adjust the knob of your dream self.</p><p>now you do the same on the 1-year goal.</p><p>you are for sure going to do some back and forth between the 1-3-5 years adjusting things as you go.</p><p>try to keep the number of goals as few as possible.</p><p>if they sprawl around, it might be best for you to reduce the scope of your image a bit. for instance trying to be a nobel prize winner marathon karateka black belt might be too much.</p><p>focus on one aspect if you see your goals proliferating, the one that is more important to you.</p><p>I know it’s tough to make a call here, but you have to be somewhat pragmatic at some point.</p><p>btw the goals aren’t starting in like january 1st, they start now now.</p><p>now you are going into the details for real. you’re going to make a DAG.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!Wi-A!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!Wi-A!,w_424,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif 424w, https://substackcdn.com/image/fetch/$s_!Wi-A!,w_848,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif 848w, https://substackcdn.com/image/fetch/$s_!Wi-A!,w_1272,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif 1272w, https://substackcdn.com/image/fetch/$s_!Wi-A!,w_1456,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!Wi-A!,w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif" width="680" height="410" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:410,&quot;width&quot;:680,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Directed Acyclic Graph (DAG) Overview &amp; Use Cases | Hazelcast&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="Directed Acyclic Graph (DAG) Overview &amp; Use Cases | Hazelcast" title="Directed Acyclic Graph (DAG) Overview &amp; Use Cases | Hazelcast" srcset="https://substackcdn.com/image/fetch/$s_!Wi-A!,w_424,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif 424w, https://substackcdn.com/image/fetch/$s_!Wi-A!,w_848,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif 848w, https://substackcdn.com/image/fetch/$s_!Wi-A!,w_1272,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif 1272w, https://substackcdn.com/image/fetch/$s_!Wi-A!,w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ecefb58-5438-4d7d-990c-4ad2615a9d95_680x410.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>they look like this usually notice that there are no cycle (for the rest of the blog view them as the node on the left being at the top and the node on the right being at the bottom).</p><p>at the top it’s where you are at. put some numbers in there about your current situation (e.g. maybe you are broke).</p><p>at the bottom put your 1-year goals (e.g. maybe you are not broke anymore)</p><p>now in between write as many steps as possible you think you need to take in a year's time to go from your current situation to the end goals (remember there is more than one goal usually) based on what you have right now and the fact that luck is against you.</p><p>this last bit is important. your whole plan is based on the fact that every damn day you will wake up will be a bad day.</p><p>sun is shining exactly 0 times for 5 years.</p><p>create a 100s of these steps that flow logically from your current node to the end node.</p><p>some will be more vague than others. these are your knot points.</p><p>for each of your knot points node you should research to the best of your current ability how to unknot them.</p><p>sometime it’s because it’s actually 5 nodes mushed together and you don’t know it’s 5 steps.</p><p>sometime it’s because it’s the wrong step and you are acting on false prior.</p><p>doesn’t matter try to untangle them as much as possible so that you have 100s of very highly defined step from start to finish.</p><p>as highly super duper detailed as possible.</p><p>this month.</p><p>not the other month which will start in 3 weeks.</p><p>now. this month now now.</p><p>take whatever first steps there is in this directed acyclic graph and put it as stuff to do in the month you have left.</p><p>here you have to be realistic about what you can chew, but remember that these tasks are what bring you closer to what you want to be.</p><p>that image that made you feel good remember?</p><p>yeah that’s the path you are rolling in now so take as much tasks as you can from the list and put it in the month.</p><p>cancel other stuff if you can to have more time to work on these.</p><p>you thought we would stop at monthly!</p><p>NO!</p><p>we’re going down still!</p><p>take whatever you picked for the month and bring them into your weekly goals for this week.</p><p>remember when we are now at the wafflehouse? in the middle of the week? well good news you got 3 days left to get these tasks done.</p><p>and before I see any of you start to spend 3 weeks making the perfect notion dashboard dingy NO!</p><p>you take whatever you have right NOW I don’t care if it’s on a notebook.</p><p>you spend 0 minutes optimizing your project management here, you take all the time into actually doing the tasks towards a future you are proud of.</p><p>you should be getting dangerously close to getting evicted from the wafflehouse so take the little time that is left to look at your weekly goals and pick a few tasks to work on tomorrow.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!hEI0!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!hEI0!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg 424w, https://substackcdn.com/image/fetch/$s_!hEI0!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg 848w, https://substackcdn.com/image/fetch/$s_!hEI0!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!hEI0!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!hEI0!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg" width="390" height="280" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:280,&quot;width&quot;:390,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;10+ Hundred Angry Waitress Royalty-Free Images, Stock Photos &amp; Pictures |  Shutterstock&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="10+ Hundred Angry Waitress Royalty-Free Images, Stock Photos &amp; Pictures |  Shutterstock" title="10+ Hundred Angry Waitress Royalty-Free Images, Stock Photos &amp; Pictures |  Shutterstock" srcset="https://substackcdn.com/image/fetch/$s_!hEI0!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg 424w, https://substackcdn.com/image/fetch/$s_!hEI0!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg 848w, https://substackcdn.com/image/fetch/$s_!hEI0!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!hEI0!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38192cf0-31a3-47d9-8d08-cb81ee0d280d_390x280.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>the waitress should be looking at you like this.</p><p>at this point thing should be so concrete that even if you were to not remember your yearly goals it wouldn’t matter at all.</p><p>every day from now on you will have two category of things to do:</p><ol><li><p>stuff that actually brings you closer to where you want to be in life </p></li><li><p>and the other stuff.</p></li></ol><p>things that your mom wants you to do, the stuff that this one friends always put on you or that your boss decided you were responsible for.</p><p>I’m not saying to throw all of this in the garbage (. . .).</p><p>but you have to make conscious decisions that you have a plan that is yours and that it is up to you to get it done.</p><p>good day bad day.</p><p>now you’re done, it’s time to work and this work is your life's work.</p><p>you don’t need to parade this mega plan to your relatives it’s a deeply personal one.</p><p>it really doesn’t matter because they should start to see the difference anyway since this plan is one where you will transform yourself into what you truly want to be.</p><p>every day before going to bed take some of the stuff from this week and put it in your bucket for the next day.</p><p>when you wake up look at the task your past self is imploring you to get done and oblige.</p><p>every week on a quiet sunday afternoon, tend to this plan like a garden. </p><p>look out at the work done in the week, check what need to be done in the month, revise a bit the directed acyclic graph or the 1-3-5 years goals.</p><p>make the small tweaks based on your learning from the week that passed.</p><p>and when you still feel good about the trajectory and that this image still bring a smile to your soul pick a few tasks for next week.</p><p>you have to be careful though.</p><p>if you actually do this you get a very stressful side effect:</p><ul><li><p>there is no one to blame but yourself</p></li></ul><p>it’s not your mom, it’s not your teacher, it’s not your friends, it’s you.</p><p>from that point going forward you have your life in your hands and it’s time to act like it.</p><p>if this was useful to you in anyway hit me up periodically with the update.</p><p>you got this.</p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A statistical analysis of Rotten Tomatoes (137 pts)]]></title>
            <link>https://www.statsignificant.com/p/is-rotten-tomatoes-still-reliable</link>
            <guid>44967796</guid>
            <pubDate>Thu, 21 Aug 2025 00:10:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.statsignificant.com/p/is-rotten-tomatoes-still-reliable">https://www.statsignificant.com/p/is-rotten-tomatoes-still-reliable</a>, See on <a href="https://news.ycombinator.com/item?id=44967796">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>I stayed in a hotel recently, which means I watched cable television, which means I consumed commercials that I could not skip—and some of these commercials advertised upcoming movie releases. Promo after promo, I noticed an unmistakable pattern: every film was "Certified Fresh" on Rotten Tomatoes, with this seal of approval serving as the ad's climactic selling point.</p><p>After five days of "Certified Fresh" movie propaganda, I began to grow suspicious. If every movie is un-rotten, then one of two things must be true:</p><ol><li><p><strong>Humanity Has Stopped Producing Bad Art: </strong><span>After a century of trial and error, mankind has perfected the art of cinema, as proven by recent masterworks like </span><em>Cats, Space Jam: A New Legacy</em><span>, the live-action </span><em>Snow White</em><span>, </span><em>Red One</em><span>, and </span><em>Joker: Folie à Deux</em><span>. Critics, who were once joyless automatons thriving on takedowns of human creativity, now bask in this golden age of moviemaking, lavishing praise upon the timeless artistry of The Walt Disney Company and Warner Bros. Discovery.</span></p></li><li><p><strong>Rotten Tomatoes Has Changed:</strong><span> Perhaps this seemingly objective platform has been compromised, potentially by corporate interests 🙉. If this reads as conspiratorial, that's because it is (albeit a decidedly low-stakes conspiracy).</span></p></li></ol><p><span>After delving into the data, this "</span><em>conspiracy</em><span>" seems more like "</span><em>fact</em><span>" (which makes for a rather boring conspiracy theory).</span></p><p>So today, we'll delve into the suspicious recalibration of Rotten Tomatoes, tracing when and how Hollywood's foremost stamp of artistic excellence turned rotten.</p><p>Rotten Tomatoes was founded in 1998 to aggregate reviews of Jackie Chan films. Within months, its creators recognized the concept's broader potential and expanded the platform to cover all movies. The website quickly became a trusted proxy for critical consensus, a role it has maintained for over 25 years.</p><p>Rotten Tomatoes appraises movies through its trademarked "Tomatometer" score, calculated as the percentage of critic reviews that are deemed "positive." Both a lukewarm 3-out-of-5 star rating and an effusive rave of cinematic brilliance qualify as "positive" on the platform. Films with a Tomatometer score above 60% receive a "fresh" label; anything below this threshold is branded "rotten."</p><p><span>While many nitpick Rotten Tomatoes' blunt approach to aggregation, much of the site's appeal lies in its straightforward methodology. According to polling from The Morning Consult, </span><a href="https://pro.morningconsult.com/articles/america-can-stomach-rotten-tomatoes" rel="">nearly a third of Americans have checked the Tomatometer before seeing a film</a><span>, making Rotten Tomatoes Hollywood's most influential tastemaker by a significant margin. The site is performatively transparent, which contributes to its perceived integrity and broad consumer trust, while also making its underlying mechanics readily auditable. </span></p><p>In a well-calibrated system, critic scores should remain stable over time unless there's a meaningful shift in film quality. So why has the average Tomatometer score increased over the past decade? What changed: the movies or the metric?</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!SppS!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!SppS!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png 424w, https://substackcdn.com/image/fetch/$s_!SppS!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png 848w, https://substackcdn.com/image/fetch/$s_!SppS!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png 1272w, https://substackcdn.com/image/fetch/$s_!SppS!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!SppS!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png" width="1456" height="1124" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1124,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:166263,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.statsignificant.com/i/171297626?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!SppS!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png 424w, https://substackcdn.com/image/fetch/$s_!SppS!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png 848w, https://substackcdn.com/image/fetch/$s_!SppS!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png 1272w, https://substackcdn.com/image/fetch/$s_!SppS!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37977b00-a0ca-49a6-a2d8-17cff7b17e65_1588x1226.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>And here is where the intrigue deepens: this rating shift coincides with Fandango's 2016 acquisition of Rotten Tomatoes 🙉. One might consider this a conflict of interest, given Fandango is America's largest movie-ticketing platform, partially owned by NBCUniversal and Warner Bros. Discovery (and that person would be correct!).</p><p>If I had a corkboard for tracking this conspiracy theory, it would be incredibly lame: I'd have a picture of Rotten Tomatoes and a photo of Fandango, with a single spool of yarn connecting the two. This does not "go all the way to the top," and there is probably no mention of these dealings in The Epstein Files.</p><p>While these two data points paint an unflattering portrait of Rotten Tomatoes, they do not prove whether the site's aggregation process or scoring methods have fundamentally changed. To test this, I decided to look at the relationship between Rotten Tomatoes' critic score and its user-generated audience score (the latter aggregates reviews from moviegoers who have seen a film).</p><p>While critics and audiences don't always agree, their sentiments tend to be strongly correlated—a wave of critical pans usually signals similar disdain from viewers, and vice-versa. Before 2016, a higher audience score generally went hand in hand with a strong Tomatometer rating.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!RQYH!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!RQYH!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png 424w, https://substackcdn.com/image/fetch/$s_!RQYH!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png 848w, https://substackcdn.com/image/fetch/$s_!RQYH!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png 1272w, https://substackcdn.com/image/fetch/$s_!RQYH!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!RQYH!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png" width="1456" height="1124" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1124,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:259334,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.statsignificant.com/i/171297626?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!RQYH!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png 424w, https://substackcdn.com/image/fetch/$s_!RQYH!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png 848w, https://substackcdn.com/image/fetch/$s_!RQYH!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png 1272w, https://substackcdn.com/image/fetch/$s_!RQYH!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4fa00fbb-d029-4823-9bb4-07e31e0f7fec_1744x1346.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>On a year-to-year basis, critic and audience scores moved in tandem, demonstrating a stable correlation until 2016, when a sharp divergence emerged—just as the average Tomatometer rating began to climb.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!teqE!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!teqE!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png 424w, https://substackcdn.com/image/fetch/$s_!teqE!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png 848w, https://substackcdn.com/image/fetch/$s_!teqE!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png 1272w, https://substackcdn.com/image/fetch/$s_!teqE!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!teqE!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png" width="1456" height="989" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:989,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:202433,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.statsignificant.com/i/171297626?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!teqE!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png 424w, https://substackcdn.com/image/fetch/$s_!teqE!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png 848w, https://substackcdn.com/image/fetch/$s_!teqE!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png 1272w, https://substackcdn.com/image/fetch/$s_!teqE!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F382da74e-4f34-4d65-9eb8-f7cd3ee18e29_1796x1220.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The inevitable follow-up question is how one alters the Tomatometer within the site's seemingly strict parameters.</p><p>Ultimately, Rotten Tomatoes has control over two major inputs to its Tomatometer score:</p><ol><li><p>Whether a review is considered "fresh" or "rotten."</p></li><li><p>Which reviews count toward the Tomatometer.</p></li></ol><p>Tweaking the definition of "fresh" would spark immediate backlash from the site's critic base, who could use their platforms to publicly bash Rotten Tomatoes. A much subtler lever is critic selection: expanding the reviewer pool to a group of writers who (coincidentally) produce more favorable appraisals.</p><p>Indeed, following the Fandango acquisition, the average number of reviewers per mainstream release increased by 40 to 70 critics.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!T9iG!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!T9iG!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png 424w, https://substackcdn.com/image/fetch/$s_!T9iG!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png 848w, https://substackcdn.com/image/fetch/$s_!T9iG!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png 1272w, https://substackcdn.com/image/fetch/$s_!T9iG!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!T9iG!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png" width="1456" height="1158" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1158,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:230056,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.statsignificant.com/i/171297626?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!T9iG!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png 424w, https://substackcdn.com/image/fetch/$s_!T9iG!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png 848w, https://substackcdn.com/image/fetch/$s_!T9iG!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png 1272w, https://substackcdn.com/image/fetch/$s_!T9iG!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F44c52658-253d-4b16-9c93-738f6dd4cfd8_1700x1352.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>It's feasible that the platform broadened its critic pool to account for newfangled digital media outlets like The Ringer and BuzzFeed, thereby allowing Rotten Tomatoes to evolve with an ever-changing media ecosystem. Yet when we examine the most prolific publications added to the site over the last decade, we find a collection of outlets that lack name recognition.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!9W92!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!9W92!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png 424w, https://substackcdn.com/image/fetch/$s_!9W92!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png 848w, https://substackcdn.com/image/fetch/$s_!9W92!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png 1272w, https://substackcdn.com/image/fetch/$s_!9W92!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!9W92!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png" width="1456" height="1045" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1045,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:203286,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.statsignificant.com/i/171297626?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!9W92!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png 424w, https://substackcdn.com/image/fetch/$s_!9W92!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png 848w, https://substackcdn.com/image/fetch/$s_!9W92!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png 1272w, https://substackcdn.com/image/fetch/$s_!9W92!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F417c2da8-5743-46f5-91c0-e90551558166_1636x1174.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>As someone who also writes words on the internet, I'm not going to go out of my way to dunk on Denerstein Unleashed and KKFI-FM (Kansas City), but I will say this after reviewing around 50 of these sites:</p><ul><li><p>Many of these publications are hosted on outdated blogging platforms.</p></li><li><p>Several of these sites do not load properly on my mobile web browser.</p></li><li><p>Many of these blogs seem like secondary sources of income or passion projects.</p></li></ul><p>To account for this influx of reviewers, Rotten Tomatoes has created a "Top Critic" designation reserved for established media outlets, such as The New York Times and The Atlantic. However, this label has no special bearing on a film's top-line Tomatometer score and is largely incorporated into ancillary aspects of the site. Rotten Tomatoes claims that these reviewer additions were made to diversify its critic pool by including more women, people of color, and underrepresented groups—a statement I can neither confirm nor deny. What I can say is this: these new reviewers fundamentally altered the site's steady state, and the platform did little to account for this underlying shift. Maybe increased critic scores are a happy accident, albeit one with extremely suspicious timing.</p><p><span>Furthermore, this emerging class of lesser-known Tomatometer-approved critics has become a strategic asset for Hollywood studios. According to a 2023 Vulture analysis, </span><a href="https://www.vulture.com/article/rotten-tomatoes-movie-rating.html" rel="">PR firms will actively court reviewers from smaller outlets to inflate Tomatometer scores</a><span> in the run-up to a film's release. Apparently, a cottage industry has emerged around recruiting non-Top Critics to secure a "fresh" label pre-release, which studios can then brandish as a marketing hook.</span></p><p>I don't have any hard data to verify Vulture's claims, but one could see how an expanded pool of Tomatometer-approved hobbyists might be ripe for manipulation. With the right mix of critics, a "fresh" rating can be engineered to coincide with a film's opening weekend.</p><p><span>You'd think after spending a few hours deconstructing the Tomatometer that I'd be firmly against the site's alleged-but-also-somewhat-obvious review inflation. Yet my immediate lizard-brain reaction was strangely pro-inflation, surprising even me: </span><em>maybe Rotten Tomatoes being (ostensibly) rigged isn't such a bad thing? </em><span>I'm not proud of this knee-jerk response, so much as it speaks to the state of movies in 2025.</span></p><p><span>In the aftermath of the pandemic, box office coverage frames every weekend as a referendum on the film industry's continued existence. Will Marvel return to form? If not, does that mean cinema is dead? Can A24 single-handedly save indie film? If not, does that mean cinema is dead? Every week, movies are either "so over" or "so back," and it's exhausting. If you love moviegoing and the theatrical experience, you want nothing more than for people to stop watching </span><em>Love Is Blind Brazil</em><span>, leave their houses, and go to the movies.</span></p><p>Enter Rotten Tomatoes, a debatably flawed yet widely influential website that is a questionable proxy for critical acclaim. For whatever reason, people trust this platform and will decide to leave their homes based on its recommendation. Rotten Tomatoes is the focal point of television promos because it can create demand where it previously did not exist.</p><p>If I were the owner of a movie-ticketing app or a sicko-utilitarian like Sam Bankman-Fried, I'd argue the ends justify the means: the average score goes up, more movies are deemed "fresh," people go to theaters, and cinema lives to fight another day. Unfortunately, I am not a sicko-utilitarian, which means I am now advocating against my best interests. Hooray for me.</p><p>In the short term, inflated scores may lure people to theaters once or twice. But in the long run, it's better if people enjoy their experience at the theater (by, you know, seeing a good movie). Despite my lizard-brain reaction, I believe long-term thinking usually wins out, while short-term shenanigans are always rotten in hindsight. Although what was once deemed "rotten" is now considered "certifiably fresh," so who knows.</p><div data-attrs="{&quot;url&quot;:&quot;https://www.statsignificant.com/p/is-rotten-tomatoes-still-reliable?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;}" data-component-name="CaptionedButtonToDOM"><p><em>This post is public so feel free to share it.</em></p><p data-attrs="{&quot;url&quot;:&quot;https://www.statsignificant.com/p/is-rotten-tomatoes-still-reliable?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;}" data-component-name="ButtonCreateButton"><a href="https://www.statsignificant.com/p/is-rotten-tomatoes-still-reliable?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!fUDG!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!fUDG!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png 424w, https://substackcdn.com/image/fetch/$s_!fUDG!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png 848w, https://substackcdn.com/image/fetch/$s_!fUDG!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png 1272w, https://substackcdn.com/image/fetch/$s_!fUDG!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!fUDG!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png" width="144" height="140.78212290502793" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:700,&quot;width&quot;:716,&quot;resizeWidth&quot;:144,&quot;bytes&quot;:856992,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/$s_!fUDG!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png 424w, https://substackcdn.com/image/fetch/$s_!fUDG!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png 848w, https://substackcdn.com/image/fetch/$s_!fUDG!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png 1272w, https://substackcdn.com/image/fetch/$s_!fUDG!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9b328782-2a8f-4ee5-b834-808053d7e5b7_716x700.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Struggling to turn your data into actionable insights? Need expert help with a data or research project? Well, Stat Significant can help. </p><p>We help businesses with:</p><ul><li><p><strong>🔍 Insights That Improve Performance: </strong><span>Turn raw data into strategic intelligence that guides smarter decisions.</span></p></li><li><p><strong>📊 Dashboards That Drive Action:</strong><span> Transform your data into clear, interactive dashboards, giving you real-time insights.</span></p></li><li><p><strong>⚙️ Data Architecture That Automates Reporting</strong><span>: Make your existing data usable through extraction, cleaning, transformation, and the creation of data pipelines.</span></p></li></ul><p><strong>Want to chat?</strong><span> Drop me an email at </span><strong><a href="mailto:daniel@statsignificant.com" rel="">daniel@statsignificant.com</a></strong><span>, connect with me on </span><strong><a href="https://www.linkedin.com/in/d-parris/" rel="">LinkedIn</a></strong><span>, reply to this email, or book a free data consultation at the link below.</span></p><p data-attrs="{&quot;url&quot;:&quot;https://calendly.com/daniel-y68/30-minute-call-with-daniel-parris&quot;,&quot;text&quot;:&quot;Book a Free Data Consultation&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}" data-component-name="ButtonCreateButton"><a href="https://calendly.com/daniel-y68/30-minute-call-with-daniel-parris" rel=""><span>Book a Free Data Consultation</span></a></p><p><em><span>Want to chat about data and statistics? Have an interesting data project? Looking to produce data-centric editorial content? </span><strong><span>Email </span><a href="mailto:daniel@statsignificant.com" rel="">daniel@statsignificant.com</a></strong></em></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Code review can be better (268 pts)]]></title>
            <link>https://tigerbeetle.com/blog/2025-08-04-code-review-can-be-better/</link>
            <guid>44967469</guid>
            <pubDate>Wed, 20 Aug 2025 23:10:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tigerbeetle.com/blog/2025-08-04-code-review-can-be-better/">https://tigerbeetle.com/blog/2025-08-04-code-review-can-be-better/</a>, See on <a href="https://news.ycombinator.com/item?id=44967469">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="blogpost">
  
  
  <div><p>Slightly unusual genre today: a <a href="https://github.com/tigerbeetle/tigerbeetle/pull/3129">negative
result</a> about our <a href="https://github.com/tigerbeetle/tigerbeetle/pull/2732"><code>git-review</code></a>
tool for a different take on code review process, which we decided to
shelve, at least for the time being.</p>
<p>A lot of people are unsatisfied with GitHub’s code review process.
One of the primary issues is that GitHub poorly supports stacked pull
requests and <a href="https://gist.github.com/thoughtpolice/9c45287550a56b2047c6311fbadebed2">interdiff
reviews</a>. While I also see interdiff as valuable, it’s not the reason
why I decided to experiment with <code>git-review</code>. I have two
other problems with GitHub, and with every single other code review
system, with the exception of <a href="https://www.janestreet.com/tech-talks/janestreet-code-review/">the
thing that Jane Street uses internally</a>:</p>
<ul>
<li>review state is not stored as a part of repository itself,</li>
<li>review is done via remote-first web-interface.</li>
</ul>
<h2 id="optimal-workflow"></h2>
<p>Let’s start with the second one.</p>
<p>By the way of analogy, I don’t use GitHub’s web editor to write code.
I clone a repository locally, and work in my editor, which is:</p>
<ul>
<li>fully local, memory/nvme latencies, no HTTP round-trips,</li>
<li>tailored to my specific odd workflow.</li>
</ul>
<p>When I review code, I like to pull the source branch locally. Then I
soft-reset the code to mere base, so that the code looks as if it was
written by me. Then I fire up magit, which allows me to effectively
navigate both through the diff, and through the actual code. And I even
use git staging area to mark files I’ve already reviewed:</p>
<p><img src="https://tigerbeetle.com/blog/2025-08-04-code-review-can-be-better/magit-review.webp" alt="code review in magit"></p>
<p>Reviewing <em>code</em> rather than diff is so powerful: I can run
the tests, I can go to definition to get the context, I can try out my
refactoring suggestions in-place, with code completion and the other
affordances of my highly sophisticated code editor.</p>
<p>Alas, when I want to actually leave feedback on the PR, I have to
open the browser, navigate to the relevant line in the diff, and (after
waiting for several HTTP round-trips) type my suggestion into a text
area. For some reason, the text area also regularly lags for me,
especially on larger diffs.</p>
<p>Two things are wrong here. On the interface side, review feedback is
text related to the code. The most natural interface is to just leave
review comments as inline comments in the code, or even to fix the code
directly:</p>
<div id="cb1"><pre><code><span id="cb1-1"><span>// CR(matklad): Hm, this check seems imprecise to me.</span></span>
<span id="cb1-2"><span>// Shouldn't we compare `replica.view` instead of `header.view` here?</span></span>
<span id="cb1-3"><span>if</span> (header<span>.</span>view <span>!=</span> view) <span>return</span>;</span></code></pre></div>
<p>And on the implementation side, because the data is stored in a
remote database, rather than in a local git repository, we get all those
latency-inducing round-trips (not to mention vendor lock in).</p>
<p>Thus, <a href="https://github.com/tigerbeetle/tigerbeetle/pull/2732"><code>git-review</code></a>
was born. The idea is simple:</p>
<ul>
<li>Code review is a single commit which sits on top of the PR
branch.</li>
<li>That commit adds a bunch of code comments with specific
markers.</li>
<li>Review process involves both the author and the reviewer modifying
this top commit (so, there’s a fair amount of
<code>git push --force-with-lease</code> involved).</li>
<li>The review concludes when all threads were marked as
<code>//? resolved</code> and an explicit revert commit is added on top
(such that review is preserved in the history).</li>
</ul>
<h2 id="the-devil-in-the-detail"></h2>
<p>It didn’t exactly fail, but wasn’t a spectacular success. When it
comes to writing tools, I am a huge fan of getting-rich-quick schemes,
of writing 500 lines of <a href="https://matklad.github.io/2024/02/10/window-live-constant-time-grep.html">hacky,
use-case specific code</a> which works better for <em>that</em> use-case
than <a href="https://burntsushi.net/ripgrep/">something serious</a>. A
simple script for converting <em>your</em> <code>.md</code> to
<code>.html</code> <a href="https://tigerbeetle.com/blog/2025-02-27-why-we-designed-tigerbeetles-docs-from-scratch/">can
be cheaper to maintain</a> than a general purpose solution.</p>
<p>I had a hope that “code review is just a commit” would be the secret
to keep implementation complexity low. Sadly, the devil is in the
details in this particular case.</p>
<p>The basic idea, that reviewing is leaving comments in code, works as
well as I had expected (that is, it’s really, really awesome). But
modifying code under review turned out to be tricky. If a reviewer
requests a change, and you apply it to some deep commit, or even add a
new commit on top, you now have to solve mere conflicts with the review
comments themselves, as they are often added at the <a href="https://git-scm.com/book/en/v2/Git-Tools-Interactive-Staging">hunk</a>
boundaries. And then, while <code>--force-with-lease</code> is workable,
it also adds friction. There is an impedance mismatch here, where, for
code, we want very strong, hash-chained intentional sequence of
state-transitions, while for review we would be more happy with more lax
conflict-free merging rules. It <em>might</em> be solved with more
tooling to “push” and “pop” review comments on top of pristine review
branch, but that seems to push well beyond my 500 line limit.</p>
<p>Then, there’s a second change. It seems like <a href="https://lore.kernel.org/git/CAESOdVAspxUJKGAA58i0tvks4ZOfoGf1Aa5gPr0FXzdcywqUUw@mail.gmail.com/T/#u">upstream
git might be getting a Gerrit-style Change-Id</a> for tracking revisions
of a single commit over rebases. If that happens, we might actually get
first class support for per-commit interdiff review! But that would be
somewhat incompatible with <code>git-review</code> approach, which adds
an entire separate commit to the branch. But, perhaps, in the
<code>Change-Id</code> world, we could be adding review comments to the
commits themselves, and, rather that adding a revert at the conclusion
of review, instruct git to store all revisions of a particular
<code>Change-Id</code>.</p>
<p>Anyway, we are begrudgingly back to web-interface based code reviews
for now. Hopefully someone is inspired enough to fix this properly one
day!</p>
<p>If you’ve been thinking along similar lines, the following links are
worth checking out:</p>
<ul>
<li><a href="https://fossil-scm.org/home/doc/trunk/www/index.wiki">Fossil</a>
is an SCM system which stores everything in the repository.</li>
<li><a href="https://gerrit-review.googlesource.com/Documentation/note-db.html">NoteDb</a>
backend for Gerrit. Gerrit started with tracking review state in a
separate database, but then moved storage into git.</li>
<li><a href="https://github.com/git-bug/git-bug">git-bug</a> uses git to
store information about issues.</li>
<li><a href="https://github.com/google/git-appraise">git-appraise</a>
uses git to store information about reviews.</li>
<li><a href="https://doc.dxuuu.xyz/prr/index.html">prr</a> which
implements in-editor review interface on top of GitHub’s Web API</li>
<li><a href="https://www.janestreet.com/tech-talks/janestreet-code-review/">How
Jane Street Does Code Review</a> shows that a better world is possible,
and that it is already here, just not everywhere.</li>
</ul>
  </div>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA["AI first" and the Bus Factor of 0 (193 pts)]]></title>
            <link>https://www.mindflash.org/coding/ai/ai-and-the-bus-factor-of-0-1608</link>
            <guid>44966856</guid>
            <pubDate>Wed, 20 Aug 2025 21:47:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.mindflash.org/coding/ai/ai-and-the-bus-factor-of-0-1608">https://www.mindflash.org/coding/ai/ai-and-the-bus-factor-of-0-1608</a>, See on <a href="https://news.ycombinator.com/item?id=44966856">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><em>All the opinions expressed in this article and on this website are entirely my own and do not represent my employer in any way.</em></p>



<hr>



<p>Ever heard about the “Bus factor”? It is a concept that measures the risk of losing all knowledge about a particular thing – a software development project for example – by estimating how many team members could get crushed by a bus before nobody knows how to work on the project anymore. As an example, if 3 people on your team know how to restore a backup of your database, the Bus Factor for that particular function in 3.</p>



<h2>From one to zero</h2>



<p>Since the dawn of humanity, even long before buses existed, the Bus Factor has always had a “worst case” value of 1. If the sole keeper of a piece of knowledge came to pass, the knowledge was lost, unless it had been transferred previously.</p>



<p>And humanity has worked hard to keep itself far from this Bus Factor of 1. Brown-bag sessions, documentation, video tutorials, knowledge handovers, demos and showcases, without forgetting <em>schools</em>, and many more mechanisms in which an uncountable number of man-hours has been sunk.</p>



<figure><img decoding="async" width="832" height="336" src="https://www.mindflash.org/wp-content/uploads/2025/08/c07fb8c4-dd67-4388-8c6c-df38ce04bce0.jpg" alt="Cavemen holding a knowledge sharing session to increase their bus factor" srcset="https://www.mindflash.org/wp-content/uploads/2025/08/c07fb8c4-dd67-4388-8c6c-df38ce04bce0.jpg 832w, https://www.mindflash.org/wp-content/uploads/2025/08/c07fb8c4-dd67-4388-8c6c-df38ce04bce0-300x121.jpg 300w, https://www.mindflash.org/wp-content/uploads/2025/08/c07fb8c4-dd67-4388-8c6c-df38ce04bce0-768x310.jpg 768w" sizes="(max-width: 832px) 100vw, 832px"></figure>



<p>But on the 30th of November 2022, all of this changed, and suddenly a large part of humanity became perfectly fine with a Bus Factor not just of 1, but of <strong>zero</strong>.</p>



<h2>AI first, humans nowhere</h2>



<p>That date corresponds to the release of ChatGPT to the public, and the start of the mass-market adoption of GenAI. It’s also the birth of what would become 3 years later the concept of “AI first”.</p>



<p>One might think that “AI first” would leave humans second, but, unsurprisingly, delegating the creation process to machines has instead left us nowhere to be found when it comes to knowledge keeping.</p>



<p>Focusing a bit on programming, it seems like a growing part of the industry is now happy to let LLMs generate functions, entire features, or even complete projects (<a href="https://news.ycombinator.com/item?id=44157131" data-wpel-link="external" target="_blank" rel="nofollow external noopener noreferrer">security holes included</a>). They have moved on from understanding their code-base and preserving this knowledge to actively trying to avoid having any piece of knowledge about their project to begin with, preferring instead to “vibe”.</p>



<h2>Where the bus hits a wall</h2>



<p>We can leave aside the flaws of vibe-coding and the issues with LLM-generated code in general for another article. Indeed, the quality of the generated code does not really matter here. It is obviously easier to understand code that you have never seen before if it is good code, but ultimately reading code remains much more complex than writing it no matter what.</p>



<p>Before LLMs, provided that your team did some of their due diligence, you could always expect to have some help when tackling new code-bases. Either a mentor, or at least some (even if maybe partially outdated) documentation. With LLMs, this is gone. The only thing you can rely on is on your ability to decipher what a highly imperfect system generated, and maybe ask explanations to that same imperfect system about <s>your code</s> its code (oh, and it has forgotten everything about the initial writing process by then).</p>



<p>Imagine having to solve bugs, add new features, patch security holes and upgrade dependencies in a piece of software that nobody on Earth has even the faintest idea about how it was built and why it was built that way.</p>



<figure><img decoding="async" width="832" height="336" src="https://www.mindflash.org/wp-content/uploads/2025/08/c07fb8c4-dd67-4388-8c6c-df38ce04bce0-1.jpg" alt="a programmer looking confused at hieroglyphs on his computer" srcset="https://www.mindflash.org/wp-content/uploads/2025/08/c07fb8c4-dd67-4388-8c6c-df38ce04bce0-1.jpg 832w, https://www.mindflash.org/wp-content/uploads/2025/08/c07fb8c4-dd67-4388-8c6c-df38ce04bce0-1-300x121.jpg 300w, https://www.mindflash.org/wp-content/uploads/2025/08/c07fb8c4-dd67-4388-8c6c-df38ce04bce0-1-768x310.jpg 768w" sizes="(max-width: 832px) 100vw, 832px"></figure>



<p>Now, imagine being the user uploading personal documents, credit card information, private photos or thoughts to a piece  of software that nobody on Earth has even the faintest idea about how it was built and why it was built that way.</p>



<h2>Conclusion</h2>



<p>Because of the situation of a Bus Factor of zero that it creates, vibe coding is fundamentally flawed. That is, only until there is an AI that can generate 100% accurate code 100% of the time, and it is fed 100% accurate prompts.</p>



<hr>



<p>If vibe coding isn’t for you and you want to read more articles, check out my category dedicated to advice about <a href="https://www.mindflash.org/category/coding/learn-programming" data-wpel-link="internal">learning programming</a>.</p>





</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: PlutoPrint – Generate PDFs and PNGs from HTML with Python (120 pts)]]></title>
            <link>https://github.com/plutoprint/plutoprint</link>
            <guid>44966170</guid>
            <pubDate>Wed, 20 Aug 2025 20:37:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/plutoprint/plutoprint">https://github.com/plutoprint/plutoprint</a>, See on <a href="https://news.ycombinator.com/item?id=44966170">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a href="https://github.com/plutoprint/plutoprint/actions"><img alt="build" src="https://camo.githubusercontent.com/74ad580ddae61a0641332910717d9e9d6847f2cf38bff7394676bce80203e77b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f706c75746f7072696e742f706c75746f7072696e742f6d61696e2e796d6c" data-canonical-src="https://img.shields.io/github/actions/workflow/status/plutoprint/plutoprint/main.yml"></a> <a href="https://plutoprint.readthedocs.io/" rel="nofollow"><img alt="docs" src="https://camo.githubusercontent.com/12e4e1dc8f3df4db485e7f67434f97a8a0e55c4a833b8a92e3be62506823c99b/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f706c75746f7072696e74" data-canonical-src="https://img.shields.io/readthedocs/plutoprint"></a> <a href="https://github.com/plutoprint/plutoprint/blob/main/LICENSE"><img alt="license" src="https://camo.githubusercontent.com/ec65d5c648e26dab0ff1cab2a3450baeb961e49f41b572e8d40387e808d3f4a8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f706c75746f7072696e74" data-canonical-src="https://img.shields.io/pypi/l/plutoprint"></a> <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3d52513b746d011776ca4b18907daac61cafe5e792e30a221759f2105d17a4c4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f706c75746f7072696e74"><img alt="downloads" src="https://camo.githubusercontent.com/3d52513b746d011776ca4b18907daac61cafe5e792e30a221759f2105d17a4c4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f706c75746f7072696e74" data-canonical-src="https://img.shields.io/pypi/dm/plutoprint"></a> <a href="https://pypi.org/project/plutoprint" rel="nofollow"><img alt="pypi" src="https://camo.githubusercontent.com/471de2ebe532842b26b5b0d57ff93a95d017b38691ac0dc0b4d20a4ceb2bcfcd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706c75746f7072696e74" data-canonical-src="https://img.shields.io/pypi/v/plutoprint"></a> <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0efacecbbd67135b7c4e2ad6d6546d44e921e186c701bf96b07a234ecf42085c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706c75746f7072696e74"><img alt="pyver" src="https://camo.githubusercontent.com/0efacecbbd67135b7c4e2ad6d6546d44e921e186c701bf96b07a234ecf42085c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706c75746f7072696e74" data-canonical-src="https://img.shields.io/pypi/pyversions/plutoprint"></a></p>
<a name="user-content-plutoprint"></a>
<p dir="auto"><h2 tabindex="-1" dir="auto">PlutoPrint</h2><a id="user-content-plutoprint" aria-label="Permalink: PlutoPrint" href="#plutoprint"></a></p>
<p dir="auto">PlutoPrint is a lightweight and easy-to-use Python library for generating high-quality PDFs and images directly from HTML or XML content. It is based on <a href="https://github.com/plutoprint/plutobook">PlutoBook’s</a> robust rendering engine and provides a simple API to convert your HTML into crisp PDF documents or vibrant image files. This makes it ideal for reports, invoices, or visual snapshots.</p>
<markdown-accessiblity-table><table>




<thead>
<tr><th>Invoices</th>
<th>Tickets</th>
</tr>
</thead>
<tbody>
<tr><td><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/plutoprint/plutoprint-samples/main/images/invoices.png"><img alt="Invoices" src="https://raw.githubusercontent.com/plutoprint/plutoprint-samples/main/images/invoices.png"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/plutoprint/plutoprint-samples/main/images/tickets.jpg"><img alt="Tickets" src="https://raw.githubusercontent.com/plutoprint/plutoprint-samples/main/images/tickets.jpg"></a></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<a name="user-content-installation"></a>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installation</h3><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>

<p dir="auto">PlutoPrint depends on <a href="https://github.com/plutoprint/plutobook">PlutoBook</a>. For faster installation, it is highly recommended to <a href="https://plutoprint.readthedocs.io/en/latest/getting_started.html" rel="nofollow">install PlutoBook and its dependencies manually</a> beforehand. Otherwise, Meson will build them from source during installation, which can take significantly longer.</p>
<p dir="auto">For Windows and Linux 64-bit users, PlutoPrint provides <strong>prebuilt binaries</strong>, so no additional setup is required.</p>
<a name="user-content-quick-usage"></a>
<p dir="auto"><h3 tabindex="-1" dir="auto">Quick Usage</h3><a id="user-content-quick-usage" aria-label="Permalink: Quick Usage" href="#quick-usage"></a></p>
<p dir="auto">Generate a PDF from the command line with the installed <code>plutoprint</code> script:</p>
<div dir="auto" data-snippet-clipboard-copy-content="plutoprint input.html output.pdf --size=A4"><pre>plutoprint input.html output.pdf --size=A4</pre></div>
<p dir="auto"><strong>Generate PDF with Python</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="import plutoprint

book = plutoprint.Book(plutoprint.PAGE_SIZE_A4)
book.load_url(&quot;input.html&quot;)
book.write_to_pdf(&quot;output.pdf&quot;)"><pre><span>import</span> <span>plutoprint</span>

<span>book</span> <span>=</span> <span>plutoprint</span>.<span>Book</span>(<span>plutoprint</span>.<span>PAGE_SIZE_A4</span>)
<span>book</span>.<span>load_url</span>(<span>"input.html"</span>)
<span>book</span>.<span>write_to_pdf</span>(<span>"output.pdf"</span>)</pre></div>
<p dir="auto"><strong>Generate PNG with Python</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="import plutoprint
import math

book = plutoprint.Book(media=plutoprint.MEDIA_TYPE_SCREEN)
book.load_html(&quot;<b>Hello World</b>&quot;, user_style=&quot;body { text-align: center }&quot;)

width = math.ceil(book.get_document_width())
height = math.ceil(book.get_document_height())

with plutoprint.ImageCanvas(width, height) as canvas:
   canvas.clear_surface(1, 1, 1)
   book.render_document(canvas)
   canvas.write_to_png(&quot;hello.png&quot;)"><pre><span>import</span> <span>plutoprint</span>
<span>import</span> <span>math</span>

<span>book</span> <span>=</span> <span>plutoprint</span>.<span>Book</span>(<span>media</span><span>=</span><span>plutoprint</span>.<span>MEDIA_TYPE_SCREEN</span>)
<span>book</span>.<span>load_html</span>(<span>"&lt;b&gt;Hello World&lt;/b&gt;"</span>, <span>user_style</span><span>=</span><span>"body { text-align: center }"</span>)

<span>width</span> <span>=</span> <span>math</span>.<span>ceil</span>(<span>book</span>.<span>get_document_width</span>())
<span>height</span> <span>=</span> <span>math</span>.<span>ceil</span>(<span>book</span>.<span>get_document_height</span>())

<span>with</span> <span>plutoprint</span>.<span>ImageCanvas</span>(<span>width</span>, <span>height</span>) <span>as</span> <span>canvas</span>:
   <span>canvas</span>.<span>clear_surface</span>(<span>1</span>, <span>1</span>, <span>1</span>)
   <span>book</span>.<span>render_document</span>(<span>canvas</span>)
   <span>canvas</span>.<span>write_to_png</span>(<span>"hello.png"</span>)</pre></div>
<p dir="auto"><strong>Generate Charts with Matplotlib</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="import plutoprint

import matplotlib.pyplot as plt
import urllib.parse
import io

class CustomResourceFetcher(plutoprint.ResourceFetcher):
    def fetch_url(self, url):
        if not url.startswith('chart:'):
            return super().fetch_url(url)
        values = [float(v) for v in urllib.parse.unquote(url[6:]).split(',')]
        labels = [chr(65 + i) for i in range(len(values))]

        plt.bar(labels, values)
        plt.title('Bar Chart')
        plt.xlabel('Labels')
        plt.ylabel('Values')

        buffer = io.BytesIO()
        plt.savefig(buffer, format='svg', transparent=True)

        return plutoprint.ResourceData(buffer.getvalue(), &quot;image/svg+xml&quot;, &quot;utf-8&quot;)

book = plutoprint.Book(plutoprint.PAGE_SIZE_A4.landscape(), plutoprint.PAGE_MARGINS_NONE)

book.custom_resource_fetcher = CustomResourceFetcher()

HTML_CONTENT = &quot;&quot;&quot;
<div>
    <img src='chart:23,45,12,36,28,50'>
    <img src='chart:5,15,25,35,45'>
    <img src='chart:50,40,30,20,10'>
    <img src='chart:10,20,30,40,50,60,70'>
</div>
&quot;&quot;&quot;

USER_STYLE = &quot;&quot;&quot;
div { display: flex; flex-wrap: wrap; justify-content: center; height: 98vh }
img { flex: 0 0 45%; height: 50%; background: #fff; border: 1px solid #ccc; }
body { background: #f7f7f7 }
&quot;&quot;&quot;

book.load_html(HTML_CONTENT, USER_STYLE)
book.write_to_png(&quot;charts.png&quot;)
book.write_to_pdf(&quot;charts.pdf&quot;)"><pre><span>import</span> <span>plutoprint</span>

<span>import</span> <span>matplotlib</span>.<span>pyplot</span> <span>as</span> <span>plt</span>
<span>import</span> <span>urllib</span>.<span>parse</span>
<span>import</span> <span>io</span>

<span>class</span> <span>CustomResourceFetcher</span>(<span>plutoprint</span>.<span>ResourceFetcher</span>):
    <span>def</span> <span>fetch_url</span>(<span>self</span>, <span>url</span>):
        <span>if</span> <span>not</span> <span>url</span>.<span>startswith</span>(<span>'chart:'</span>):
            <span>return</span> <span>super</span>().<span>fetch_url</span>(<span>url</span>)
        <span>values</span> <span>=</span> [<span>float</span>(<span>v</span>) <span>for</span> <span>v</span> <span>in</span> <span>urllib</span>.<span>parse</span>.<span>unquote</span>(<span>url</span>[<span>6</span>:]).<span>split</span>(<span>','</span>)]
        <span>labels</span> <span>=</span> [<span>chr</span>(<span>65</span> <span>+</span> <span>i</span>) <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>values</span>))]

        <span>plt</span>.<span>bar</span>(<span>labels</span>, <span>values</span>)
        <span>plt</span>.<span>title</span>(<span>'Bar Chart'</span>)
        <span>plt</span>.<span>xlabel</span>(<span>'Labels'</span>)
        <span>plt</span>.<span>ylabel</span>(<span>'Values'</span>)

        <span>buffer</span> <span>=</span> <span>io</span>.<span>BytesIO</span>()
        <span>plt</span>.<span>savefig</span>(<span>buffer</span>, <span>format</span><span>=</span><span>'svg'</span>, <span>transparent</span><span>=</span><span>True</span>)

        <span>return</span> <span>plutoprint</span>.<span>ResourceData</span>(<span>buffer</span>.<span>getvalue</span>(), <span>"image/svg+xml"</span>, <span>"utf-8"</span>)

<span>book</span> <span>=</span> <span>plutoprint</span>.<span>Book</span>(<span>plutoprint</span>.<span>PAGE_SIZE_A4</span>.<span>landscape</span>(), <span>plutoprint</span>.<span>PAGE_MARGINS_NONE</span>)

<span>book</span>.<span>custom_resource_fetcher</span> <span>=</span> <span>CustomResourceFetcher</span>()

<span>HTML_CONTENT</span> <span>=</span> <span>"""</span>
<span>&lt;div&gt;</span>
<span>    &lt;img src='chart:23,45,12,36,28,50'&gt;</span>
<span>    &lt;img src='chart:5,15,25,35,45'&gt;</span>
<span>    &lt;img src='chart:50,40,30,20,10'&gt;</span>
<span>    &lt;img src='chart:10,20,30,40,50,60,70'&gt;</span>
<span>&lt;/div&gt;</span>
<span>"""</span>

<span>USER_STYLE</span> <span>=</span> <span>"""</span>
<span>div { display: flex; flex-wrap: wrap; justify-content: center; height: 98vh }</span>
<span>img { flex: 0 0 45%; height: 50%; background: #fff; border: 1px solid #ccc; }</span>
<span>body { background: #f7f7f7 }</span>
<span>"""</span>

<span>book</span>.<span>load_html</span>(<span>HTML_CONTENT</span>, <span>USER_STYLE</span>)
<span>book</span>.<span>write_to_png</span>(<span>"charts.png"</span>)
<span>book</span>.<span>write_to_pdf</span>(<span>"charts.pdf"</span>)</pre></div>
<p dir="auto">Expected output:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/plutoprint/plutoprint-samples/main/charts.png"><img alt="Charts" src="https://raw.githubusercontent.com/plutoprint/plutoprint-samples/main/charts.png"></a></p>
<a name="user-content-samples"></a>
<p dir="auto"><h2 tabindex="-1" dir="auto">Samples</h2><a id="user-content-samples" aria-label="Permalink: Samples" href="#samples"></a></p>
<markdown-accessiblity-table>
Invoices





</markdown-accessiblity-table>
<markdown-accessiblity-table>
Tickets




</markdown-accessiblity-table>
<a name="user-content-links-resources"></a>
<p dir="auto"><h2 tabindex="-1" dir="auto">Links &amp; Resources</h2><a id="user-content-links--resources" aria-label="Permalink: Links &amp; Resources" href="#links--resources"></a></p>
<ul dir="auto">
<li>Documentation: <a href="https://plutoprint.readthedocs.io/" rel="nofollow">https://plutoprint.readthedocs.io</a></li>
<li>Samples: <a href="https://github.com/plutoprint/plutoprint-samples">https://github.com/plutoprint/plutoprint-samples</a></li>
<li>Code: <a href="https://github.com/plutoprint/plutoprint">https://github.com/plutoprint/plutoprint</a></li>
<li>Issues: <a href="https://github.com/plutoprint/plutoprint/issues">https://github.com/plutoprint/plutoprint/issues</a></li>
<li>Donation: <a href="https://github.com/sponsors/plutoprint">https://github.com/sponsors/plutoprint</a></li>
</ul>
<a name="user-content-license"></a>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">PlutoPrint is licensed under the <a href="https://github.com/plutoprint/plutoprint/blob/main/LICENSE">MIT License</a>, allowing for both personal and commercial use.</p>

</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Introduction to AT Protocol (163 pts)]]></title>
            <link>https://mackuba.eu/2025/08/20/introduction-to-atproto/</link>
            <guid>44965233</guid>
            <pubDate>Wed, 20 Aug 2025 19:13:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mackuba.eu/2025/08/20/introduction-to-atproto/">https://mackuba.eu/2025/08/20/introduction-to-atproto/</a>, See on <a href="https://news.ycombinator.com/item?id=44965233">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <p>Some time ago I&nbsp;wrote a long blog post I&nbsp;called “<a href="https://mackuba.eu/2024/02/21/bluesky-guide/">Complete guide to Bluesky</a>”, which explains how all the user-facing features of Bluesky work and various tips and tricks. This one is meant to be a bit like a developer version of that – I&nbsp;want to explain in hopefully understandable language what all the pieces of the network architecture are and how they all fit together. I&nbsp;hope this will let you understand better how Bluesky and the underlying protocol works, and how it differs from e.g. the Fediverse. This should also be a good starting point if you want to start building some apps or tools on ATProto.</p>

<p>This post is a first part of a series – next I&nbsp;want to look at some comparisons with the Fediverse and some common misconceptions that people have, and look at the state of decentralization of this network, but that was way too much for one post; so this one focuses on the “ATProto intro tutorial” part.</p>

<p>But before we start, a little philosophical aside:</p>


<h2>What is “Bluesky”? Which “Bluesky” are we talking about?</h2>

<p>Discussions about Bluesky sometimes get a little confusing because… “Bluesky” could mean a few different things. Language is hard.</p>

<p>First, we have Bluesky the company, the team. Usually, when people want to clarify that they’re talking about the group of people or the organization, they say “Bluesky PBC” (PBC = Public Benefit Corporation), or “Bluesky team”.</p>

<p>(If you want to read a bit about where Bluesky came from and what’s the current state of the company, read <a href="https://mackuba.eu/2024/02/21/bluesky-guide/#what-is-bluesky">these two sections</a> in the Bluesky Guide blog post.)</p>

<p>And we also have Bluesky the product, the social network, the thing that they’ve built. This network is not a single black box like Twitter or Facebook are (despite what they say about it on Mastodon), it’s more like a set of separate and actually very transparent boxes.</p>

<p>The system they’ve built, of which Bluesky was initially meant to be just a tech demo, is called the <strong>Authenticated Transfer Protocol</strong>, or AT Protocol, or ATProto. Bluesky is built on ATProto, and it is in practice a huge part of what ATProto currently is, which makes the boundary between Bluesky and non-Bluesky a bit hard to define at times, but it’s still only a subset of it.</p>

<p>Bluesky in this second meaning is some nebulous thing that consists of: the data types (“<a href="#lexicons">lexicons</a>”) that are specific to the Bluesky microblogging aspect of ATProto, like Bluesky posts or follows; the APIs for handling them and for accessing other Bluesky-specific features; the rules according to which they all work together; and the whole “social layer” that is created out of all of this, the virtual “place” – the thing that people have in mind when they say “this website”, even when it’s accessed through a mobile app. One of the coolest things about Bluesky &amp; ATProto, in my opinion, is that it connects many different independent pieces into something that still feels like one shared virtual space.</p>

<p>People outside the company can create (and are creating) other such things on ATProto that aren’t necessarily Bluesky-related – see e.g. <a href="https://whtwnd.com/">WhiteWind</a> or <a href="https://leaflet.pub/">Leaflet</a> (blogging platforms), <a href="https://tangled.sh/">Tangled</a> (GitHub alternative), <a href="https://frontpage.fyi/">Frontpage</a> (Hacker News style link aggregator), or <a href="https://grain.social/">Grain</a> (photo sharing site). They use the same underlying mechanisms that are at the base of ATProto, but use separate data types, have different rules, goals, and UIs. How do we call these things as a whole, the different sets of “data types + rules + required servers + client apps” that define different use cases of the network?</p>

<p>Bluesky team usually calls them “apps”, but I’m not a big fan of this term, because “app” kinda implies a client app, and that’s just one small piece of it. I&nbsp;sometimes call them “services” – though it’s probably not perfect either, since it implies just the server part in turn. Suggestions welcome&nbsp;:) (I’m mentioning this at the beginning, because this is something that many different parts are related to.)</p>

<p>Personally, when I&nbsp;say “the Bluesky app”, I&nbsp;will generally mean the actual client app (mobile / webapp), not the “service”, and when I&nbsp;say “Bluesky-specific”, I&nbsp;will mean the “service”, not the company; and “Bluesky-hosted” will mean run by Bluesky the company. Hopefully in most cases, it can be guessed from context.</p>

<p>BTW, the commonly accepted term for the whole shared “multiverse” of all ATProto apps is “The&nbsp;Atmosphere”, or “ATmosphere” (though I&nbsp;much prefer the former personally, the weird capitalization bugs me somehow&nbsp;;). It was <a href="https://bsky.app/profile/did:plc:bnqkww7bjxaacajzvu5gswdf/post/3k26nw6kwnh2e">coined</a> by someone from the community, but was accepted by the team and is now mentioned on the <a href="https://atproto.com/guides/glossary#atmosphere">official atproto site</a>.</p>

<hr>

<p>Let’s start with defining the various building pieces of the protocol:</p>



<h2>Records &amp; blobs</h2>

<p>The most basic piece of the ATProto world is a <strong>record</strong>. Records are basically JSON objects representing the data about a specific entity like a post or profile, organized in a specific way. A post/reply, repost, like, follow, block, list, entry on a list, user profile info – each of these is one record. Most public actions you take on Bluesky, like following someone or liking a post, are performed by creating a record of an appropriate type (or editing/deleting one created before).</p>

<p>For example, this is a <a href="https://shiitake.us-east.host.bsky.network/xrpc/com.atproto.repo.getRecord?repo=did:plc:vc7f4oafdgxsihk4cry2xpze&amp;collection=app.bsky.feed.post&amp;rkey=3ltxjiss3is2j">post record</a>. This is one of the <a href="https://lionsmane.us-east.host.bsky.network/xrpc/com.atproto.repo.getRecord?repo=did:plc:sflxm2fxohaqpfgahgdlm7rl&amp;collection=app.bsky.feed.like&amp;rkey=3luapblv3vd2i">likes of that post</a>.</p>

<p>Records are stored on disk and transferred between servers in a binary format called <a href="https://cbor.io/">CBOR</a>, although in most API&nbsp;endpoints they’re returned in a JSON form (they are equivalent, just different encodings of the same data).</p>

<p>The key thing about records, which has very real consequences for user-facing features, is that you can only create and modify <em>your own</em> records, not those owned by others (and there are no “shared” records at the moment, each record is owned by a specific account). This means that e.g. when you follow someone, you create a follow record on your account, and that other person can’t delete your record, which is why there’s currently no “soft-blocking” feature, i.e. you can’t make someone stop following you (though you can block them). There are workarounds though, as I’ll explain later in the <a href="#appview">AppView section</a>.</p>

<p>This also means that there’s often an unexpected assymetry between seemingly similar actions: for example, getting a list of people followed by person X is very simple (they’re all X’s records, so they’re all in one place), but getting a list of all followers of X is much harder (each record is in a different place!). This is something that the AppView helps with too, as we’ll see later.</p>

<p>A second, complimentary way of storing user data is <strong>blobs</strong>. Blobs are basically binary files, meant mostly for storing media like images and video. For example, here is a direct link to an <a href="https://lab.martianbase.net/xrpc/com.atproto.sync.getBlob?did=did:plc:oio4hkxaop4ao4wz2pp3f4cr&amp;cid=bafkreib7vmhsk7w36bmrlwi2mjgkkoq44xysdahi226re2a76rlmgamgvu">image blob</a> showing a photo of when I&nbsp;started writing this blog post. Blobs are stored on the same server as records, but somewhat separate from them, since it’s a different type of data.</p>



<h2>Lexicons</h2>

<p>Each record belongs to a specific “record type” and stores its data organized in a specific structure, which defines what kinds of fields it can have with what types, what they mean, which are required, and so on – kind of like XML/JSON Schema. This schema definition which describes a given record type is called a <strong>lexicon</strong> in ATProto. (If you’re curious why make a new standard, see threads e.g. <a href="https://blue.mackuba.eu/skythread/?author=did:plc:ragtjsm2j2vknwkz3zp4oxrd&amp;post=3juoxe37rez2q">here</a>, <a href="https://blue.mackuba.eu/skythread/?author=did:plc:ragtjsm2j2vknwkz3zp4oxrd&amp;post=3kjgebkayik2g">here</a>, or <a href="https://blue.mackuba.eu/skythread/?author=did:plc:ragtjsm2j2vknwkz3zp4oxrd&amp;post=3jvf7bakmm22h">here</a>, or <a href="https://www.pfrazee.com/blog/why-not-rdf">this blog post</a>).</p>

<p>A lexicon needs to have an identifier (called <strong>NSID</strong>, Namespace Identifier), which uses the reverse domain name format, e.g. <code>app.bsky.feed.post</code>. All lexicons that are used to store the data of a specific app are usually grouped under the same prefix, e.g. Bluesky lexicons all start with <code>app.bsky</code>.</p>

<p>The structure of a given lexicon’s records is defined in a special JSON file – for example, this file defines the <a href="https://github.com/bluesky-social/atproto/blob/main/lexicons/app/bsky/feed/post.json">app.bsky.feed.post lexicon</a>. As you can see, this is the place which for example specifies that a post’s text can have at most 300 characters (more specifically, Unicode graphemes). This also means that you can’t create a different server which would make posts longer than 300 characters that would be Bluesky-compatible and displayed on <a href="https://bsky.app/">bsky.app</a> – such posts would not pass the validation against the post record schema, and would be rejected by any server or client which performs such validation. Essentially, whover designs and controls the given lexicon, decides what kinds of data it can hold and any constraints on it. In order to store a different, incompatible type of data, you need to create a new lexicon (although you <em>can</em> add additional fields to a record that aren’t defined in its lexicon; many third party apps are doing that, like e.g. <a href="https://github.com/snarfed/bridgy-fed/issues/1092#issuecomment-2164027121">Bridgy Fed</a>).</p>

<p>Lexicon name prefixes generally define boundaries between “apps” as in “services”, and between the “territory” that’s owned by different parties. The lexicons and endpoints defined by Bluesky are defined either under <code>app.bsky.*</code> – these are things specific to Bluesky the microblogging service – or under <code>com.atproto.*</code>, which are things meant to be used by all ATProto apps and services regardless of the use case. There are also a couple of other minor namespaces like <code>chat.bsky.*</code> for the (centralized) DM service, and <code>tools.ozone.*</code> for the open source <a href="https://github.com/bluesky-social/ozone/">Ozone moderation tool</a>.</p>

<p>The lexicon prefix is generally (in most cases) a good way to tell if a piece of the protocol is something Bluesky-specific (specific to the Bluesky service), or something general for all ATProto. There are no record types defined in <code>com.atproto</code>, so things like post, profile, follow are all Bluesky-specific and under <code>app.bsky</code>, as are APIs for e.g. searching users, getting timelines, custom feeds and so on. Meanwhile, <code>com.atproto</code> APIs deal more with things like: info about a repository, fetching a repository, signing up for a new account, refreshing an access token, downloading a blob, etc.</p>

<p>Third party developers and teams building apps on ATProto/Bluesky, which either extend Bluesky’s features or make something completely separate, use their own namespaces for new lexicons, like <code>blue.flashes</code>, <code>social.pinksky</code>, <code>events.smokesignal</code>, <code>sh.tangled</code>, and so on. (There is a lot of nuance to whether you should use your own lexicons or reuse or extend existing ones when building things, and there have been a lot of discussions about it on Bluesky, and even conference talks. A good starting point is <a href="https://www.pfrazee.com/blog/lexicon-guidance">this blog post</a> by Paul Frazee.)</p>



<h2>Identity</h2>

<p>Each user is uniquely identified in the network with their <strong>Decentralized Identifier (DID)</strong>. DIDs are a <a href="https://www.w3.org/TR/did-1.0/">W3C standard</a>, but (as I&nbsp;understand) this standard mostly just defines a framework, and there can be many different “methods” of storing and resolving the identifiers, and each system that uses it can pick or create different types of those DIDs.</p>

<p>The format of a DID is: <code>did:&lt;type&gt;:&lt;…&gt;</code>, where the last part depends on the method. ATProto supports two types of DIDs, but in practice, almost everyone uses one of them, the “plc”. Each DID has a “<strong>DID document</strong>”, a JSON file (<a href="https://plc.directory/did:plc:oio4hkxaop4ao4wz2pp3f4cr">see mine</a>) which describes the account – in ATProto at least, the document includes things such as: the assigned handles, the PDS server hosting the account, and some cryptographic keys.</p>

<p>An important thing to note is that <strong>DIDs are permanent</strong>; it’s the only thing that is permanent about your account, because something has to be. There needs to be some unique ID that all databases everywhere can use to identify you, which doesn’t change, and the DID is that ID. This means that you can’t change a DID of one type into another type later.</p>

<p>The main DID method is <code>did:plc</code>, where IIRC “plc” originally stood for “placeholder” (I&nbsp;think it was meant to be temporary until something better is designed), and was later kind of retconned to mean “<a href="https://github.com/did-method-plc/did-method-plc">Public Ledger of Credentials</a>” 🙃 The DIDs of this type are identified by a random string of characters, which looks like this: <code>did:plc:vc7f4oafdgxsihk4cry2xpze</code>. The DID documents of each DID are stored in a centralized service hosted at <a href="https://plc.directory/">plc.directory</a> (Bluesky wants to eventually transfer the ownership to some external non-profit), which basically keeps a key-value store mapping a DID to a JSON file. It also keeps an “<a href="https://plc.directory/did:plc:oio4hkxaop4ao4wz2pp3f4cr/log/audit">audit log</a>” of the previous versions of the document (this means that, for example, the whole history of your old handles is available and you can’t erase it!). There’s also some cryptographic stuff there which, as I&nbsp;understand it, lets anyone verify that everything in the database checks out (don’t ask me how).</p>

<p>The other, rarely used method is <code>did:web</code>. Those DIDs look like this: <code>did:web:witchcraft.systems</code>, and the DID document is stored in a specific <code>.well-known</code> path on the given hostname, in this case <a href="https://witchcraft.systems/.well-known/did.json">witchcraft.systems</a> (yes, that’s an actual TLD&nbsp;;). It does not store an audit log/history like <code>plc</code> does.</p>

<p>The reason why it’s rarely used and not recommended, is because, first, it’s more complicated to create one (though that’s a solvable problem of course, see a <a href="https://blog.smokesignal.events/posts/3lwopvsmtx22a-creating-a-did-method-web-identity-for-atprotocol">just published guide</a>); but second and more importantly, since DIDs are permanent, this means that your account is permanently bound to that domain. You need to keep it accessible and not let it expire, or you lose the account – you can’t migrate it to <code>did:web:another.site</code> at some point later. It gives you more independence, but at the cost of being tied to that domain you have, and this isn’t a tradeoff that most people are likely to want, and definitely not people who don’t understand what they’re getting into.</p>

<p>If you’re fine with that choice, you can create a <code>did:web</code> account and almost everything in Bluesky and ATProto should work exactly the same. “Almost”, because some services forget to implement that second code path, since it’s so rarely used 😉 but in that case, politely nudging the developer to fix the issue should help in most cases&nbsp;:&gt;</p>



<h4>Handles</h4>

<p>What DIDs enable is that since they act as the unique identifier, your handle doesn’t have to, like it does on the Fediverse. I&nbsp;can be <code>@mackuba.bsky.social</code> one day, <code>@mackuba.eu</code> the next day, and <code>@mackuba.martianbase.net</code> the week after. All existing connections – follows &amp; followers, my posts, likes, blocks, lists I’m on, mentions in posts, etc. all work as before, because they all reference the DID, not the handle. With mentions specifically it works kinda funny, because they use what’s called a “facets” system (see <a href="#facets">later section</a>), where the link target is specified separately from the displayed text. So you can have an old post saying “hey @mackuba.bsky.social”, where the handle in it links to my profile which is now named “@mackuba.eu”. The link still works, because it really links to the DID behind the scenes.</p>

<p>Unlike on the Fediverse, the format of handles is just a hostname, not username + hostname. You assign a whole hostname to a specific account, and if you own any domain name, that can be your username (and if you own a well known domain name, it’s strongly recommended that you do, as a form of self-verification!).</p>

<p>The handle to DID assignment is a two-way link – a DID needs to claim a given handle, and the owner of the domain needs to verify that they own that DID. On the DID side, this happens in the <code>alsoKnownAs</code> field of the DID document (<a href="https://plc.directory/did:plc:oio4hkxaop4ao4wz2pp3f4cr">see here in mine</a>). On the domain side, there are two ways of verifying a handle, depending on what’s more convenient to you: either a DNS TXT entry, or a file on a <code>.well-known</code> path.</p>

<p>You might be wondering how handles like <code>*.bsky.social</code> work – in this case, each such handle is its own domain name, and you can actually enter a domain like <a href="https://aoc.bsky.social/">aoc.bsky.social</a> into a browser and it will redirect to a Bluesky profile on <a href="https://bsky.app/">bsky.app</a>. Behind the scenes, this is normally handled by having a wildcard domain pointing to one service, which responds to HTTP requests on that <code>.well-known</code> path by returning different DIDs, depending on the domain. That’s not only a <code>bsky.social</code> thing – e.g. there’s now an open Blacksky PDS server which hands out <code>blacksky.social</code> handles, and there are even “handle services” which <em>only</em> give out handles – e.g. you can be <a href="https://swifties.social/">yourname.swifties.social</a> if you want&nbsp;;)</p>

<p>One place where handle changes break things is (some) post URLs on <a href="https://bsky.app/">bsky.app</a>. The official web client uses handles by default in permalinks, which means that if you link to a Bluesky post e.g. from a blog post and you change your handle later, that link will no longer work. You can however replace the handle after <code>/profile/</code> with the user’s DID, and the router accepts such links just fine, they just aren’t used by default. So the form you’d want to use when putting links in a blog post or article (like the one you’re reading) would be something like: <a href="https://bsky.app/profile/did:plc:ragtjsm2j2vknwkz3zp4oxrd/post/3llwrsdcdvc2s">https://bsky.app/profile/did:plc:ragtjsm2j2vknwkz3zp4oxrd/post/3llwrsdcdvc2s</a>.</p>



<h2>AT URIs</h2>

<p>Each record can be uniquely addressed with a specific <strong>URI</strong> with the at:// scheme. The format of the URI&nbsp;is:</p>

<pre><code>at://&lt;user_DID&gt;/&lt;lexicon_NSID&gt;/&lt;rkey&gt;
</code></pre>

<p><strong>Rkey</strong> is an identifier of a specific record instance – a usually short alphanumeric string, e.g. Bluesky post rkeys look something like <code>3larljiybf22v</code>. So a complete post URI&nbsp;might look like this: <code>at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.post/3larljiybf22v</code>. You can look up at:// URIs in some record browser tools, e.g. <a href="https://pdsls.dev/at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.post/3larljiybf22v">PDSls</a>.</p>

<p>AT URIs are used for all references between records – quotes, replies, likes, mute list entries, and so on. If you look at <a href="https://morel.us-east.host.bsky.network/xrpc/com.atproto.repo.getRecord?repo=did:plc:l3rouwludahu3ui3bt66mfvj&amp;collection=app.bsky.feed.like&amp;rkey=3lwctqgpttm2a">this like record</a>, for example, its <code>subject.uri</code> points to <code>at://did:plc:vwzwgnygau7ed7b7wt5ux7y2/app.bsky.feed.post/3lv2b3f5nys2n</code>, which is the URI&nbsp;of a post record you can see <a href="https://pdsls.dev/at://did:plc:vwzwgnygau7ed7b7wt5ux7y2/app.bsky.feed.post/3lv2b3f5nys2n">here</a>. Since the URIs use DIDs in the first part, handle changes don’t affect such links.</p>



<h2>User repositories</h2>

<p>All user data (records and blobs) is stored in a <strong>repository</strong> (or “repo”). The repository is identified by user’s DID, and stores:</p>

<ul>
<li>records, grouped by lexicon into so-called <strong>collections</strong></li>
<li>blobs (stored separately from records)</li>
<li>authentication data like access tokens, signing keys, hashed passwords etc.</li>
</ul>


<p>Internally, an important part of how the repo stores user records is a data structure called “<a href="https://en.wikipedia.org/wiki/Merkle_tree">Merkle Search Tree</a>” – but this isn’t something that you need to understand when using the protocol, unless you’re working on a PDS/relay implementation (I&nbsp;haven’t needed to get into it so far).</p>

<p>You can download the records part of your (or anyone else’s!) repo as a bundle called a <a href="https://bsky.app/profile/did:plc:fkasq7xtzrmlvz46c5trkrn3/post/3lkedsoq4vs2d">CAR file</a>, a <a href="https://ipld.io/specs/transport/car/">Content Addressed Archive</a> (fun fact: the icon for the button in the Bluesky app which downloads a repo backup is the shape of a car 🚘).</p>

<p>The cool part is that a repository stores all data of the given user, from *all* lexicons. Including third party developer lexicons. This means that if someone has their account hosted on Bluesky servers, but uses third party ATProto apps like Tangled or Grain, Bluesky lets them store these apps’ records like Grain photos or Tangled pull requests on the same server where it keeps their Bluesky posts. (And yes, of course someone made a <a href="https://github.com/ziodotsh/atfile">lexicon/tool for storing arbitrary files</a> on your Bluesky PDS… and did it in Bash, because why not 🙃)</p>



<h2>XRPC</h2>

<p><strong>XRPC</strong> is the convention used for APIs in the ATProto network. The API&nbsp;endpoints use the same naming convention as lexicon NSIDs, and they have URLs with paths in the format of <code>/xrpc/&lt;nsid&gt;</code>, e.g. <code>/xrpc/app.bsky.feed.getPosts</code>. There are similar <a href="https://github.com/bluesky-social/atproto/blob/main/lexicons/app/bsky/feed/getPostThread.json">lexicon definition files</a> which specify what parameters are accepted/required by an endpoint and what types of data are returned in the JSON response. PDSes, AppViews, labellers and feed generators all implement the same kind of API, although with different subsets of specific endpoints. Third party apps don’t <em>have</em> to use the same convention, but it’s generally a good idea, since it integrates better with the rest of the ecosystem.</p>



<h2>Rich text / facets</h2>

<p>This one is kinda Bluesky-specific, but it’s pretty important to understand, and I&nbsp;think you can reuse it for non-Bluesky apps too.</p>

<p>The “<strong>facets</strong>” system is something used for links and possibly rich text in future in Bluesky posts. It’s perhaps a little bit unintuitive at first, but it’s pretty neat and allows for a lot of flexibility.</p>

<p>The way you handle links, mentions, or hashtags, is that they aren’t highlighted automatically, but you need to specifically mark some range of text as a link using the facets. A facet is a marking of some range of the post text (from-to) with a specific kind of link. If you look e.g. at <a href="https://pdsls.dev/at://did:plc:257wekqxg4hyapkq6k47igmp/app.bsky.feed.post/3lnkwu24v5k2j">this post here</a>, you can see that it has a facet marking the byte range 60-67 of the post text as a hashtag “ahoy25”. If there was no facet there, it would just render as normal unlinked text “#ahoy25” in the post (when you see that, it’s an easy tell that a post was made using some custom tool that’s in early stages of development). It works the same way for mention links and normal URL links.</p>

<p>(If you’re curious why they implemented it this way, check out <a href="https://www.pfrazee.com/blog/why-facets">this blog post</a>.)</p>

<p>Note that the displayed text in the marked fragment doesn’t have to match what the facet links to; this means that you can have links that just use some shorter text for the link instead of a part of the URL, in order to fit more text in one post (although in the official app, clicking such link triggers a warning popup first). E.g. some Hacker News bots commonly use this format, see <a href="https://bsky.app/profile/did:plc:7dh44snmqoa4gyzv3652gm3j/post/3lmhylb375m2a">this post</a>. The Bsky app doesn’t let you create such posts directly, but some other clients like <a href="https://skeetdeck.pages.dev/decks/3lpzuhjwlxcns">Skeetdeck</a> do.</p>

<p>Facets are also used for URL shortening – if you just put a long URL in the text of a post made through the API, it will be neither shortened nor highlighted. You need to manually mark it with a facet, and manually shorten the displayed part to whatever length you want.</p>

<p>Likely the most tricky part is that the index numbers you need to use for the ranges are counted on a UTF-8 representation of the text string, but they’re counted in… bytes and not unicode scalars, which most languages index strings in 😅 This is somewhat of an unfortunate tech debt thing as I&nbsp;understand, and it was made this way mostly because of JavaScript, which doesn’t work with UTF-8 natively. But this means you need to be extra careful with the indexes in most languages.</p>

<hr>

<p>Ok, now that we got through the basic pieces, let’s talk about servers:</p>



<h2>PDS</h2>

<p>The original copy of all user data is stored on a server called <strong>PDS</strong>, Personal Data Server. This is the “source of truth”. A PDS stores one or more user accounts and repos, handles user authentication, and serves as an “entry point” to the network when connecting from a client app. Most network requests from the client are sent to your PDS, although only some of them are handled directly by the PDS, and the rest are proxied e.g. to the AppView. So in a way, your PDS kind of serves as your “user agent” in the network on the backend side of things (beyond the client app), especially if it’s under your control.</p>

<p>Each PDS has an XRPC API&nbsp;with some number of endpoints for things like listing repositories, listing contents of each, looking up a specific record or blob, account authentication and management, and so on. It also has a websocket API&nbsp;called a “<strong>firehose</strong>” (the <a href="https://github.com/bluesky-social/atproto/blob/main/lexicons/com/atproto/sync/subscribeRepos.json">subscribeRepos endpoint</a>). The firehose streams all changes happening on a given PDS (from all repos) as a stream of “events”, where each event is an addition, edit, or deletion of a record in one of the repos, or some change related to an account, like handle change or deactivation.</p>

<p>One of the most important features of ATProto is that <strong>an account is not permanently assigned to a PDS</strong>. Unlike in ActivityPub, where your identifier is e.g. <code>mackuba@mastodon.social</code> and it can never change, because everything uses that as the unique ID, here the unique ID is the DID. The PDS host is assigned to a user in the DID document JSON (e.g. on <a href="https://plc.directory/">plc.directory</a>), but you can migrate to a different PDS at any point, and at the moment there are even some fairly user-friendly tools available for doing that, like <a href="https://atpairport.com/">ATP Airport</a> or <a href="https://pdsmoover.com/">PDS MOOver</a> (although it’s still a bit unpolished at the moment, and for now you can’t migrate back to Bluesky-hosted PDSes). In theory, you should even be able to migrate to a different PDS if your old PDS is dead or goes rogue, if you have prepared in advance (<a href="https://www.da.vidbuchanan.co.uk/blog/adversarial-pds-migration.html">this is a bit more technical</a>). If everything goes well, nobody even notices that anything has changed (you can’t even easily check in the app what PDS someone is on, although there are external tools for that, like <a href="https://internect.info/">internect.info</a>).</p>

<p>Initially, during the limited beta in 2023, Bluesky only had one PDS, <code>bsky.social</code>. In November 2023, several additional PDSes were created (also under Bluesky PBC control) and existing users were quietly all spread to a random one of those. At that point, the network was already “technically federated”, operating in the target architecture, although with access restricted to only Bluesky-run servers. This restriction was lifted in February 2024 with the <a href="https://docs.bsky.app/blog/self-host-federation">public federation launch</a>.</p>

<p>Since then, ATProto enthusiasts started setting setting up PDS servers for themselves, either creating alt/test accounts there, or moving their main accounts. As of August 2025, there around 2000 third party PDS servers, although most of them are very small – usually hosting one person’s main and/or test accounts, and maybe those of a couple of their friends. I&nbsp;have <a href="https://blue.mackuba.eu/directory/pdses">a list of them</a> on my website, and there’s also a more complete list <a href="https://github.com/mary-ext/atproto-scraping">here</a> (mine excludes inactive PDSes and empty accounts).</p>

<p>As you can see there, there’s one massive PDS for <a href="https://fed.brid.gy/">Bridgy Fed</a>, the Bluesky-Mastodon bridge service, hosting around 30-40k bridged accounts from the Fediverse, Threads, Nostr, Flipboard, or the web (blogs); then some number of small to medium PDSes for various services, and a very long tail of servers with single-digit number of accounts. At this moment, large public PDS in the style of Fedi instances aren’t much of a thing yet, although there are at least a few communities working on setting up one (e.g. <a href="https://www.blackskyweb.xyz/">Blacksky</a>, <a href="https://northskysocial.com/">Northsky</a>, or <a href="https://turtleisland.blog/2025/04/28/turtle-island-bluesky-pds/">Turtle Island</a>). Blacksky specifically has <a href="https://bsky.app/profile/did:plc:w4xbfzo7kqfes5zb7r6qv3rw/post/3lvtlqoef5c2z">opened up for migrations</a> just last week and has now a few hundred real accounts.</p>

<p>The vast majority of PDSes at the moment use the <a href="https://github.com/bluesky-social/pds">reference implementation from Bluesky</a> (written in TypeScript), but there are a few alternative implementations at various levels of maturity (Blacksky’s Rudy Fraser’s <a href="https://github.com/blacksky-algorithms/rsky/tree/main/rsky-pds">rsky</a> written in Rust, <a href="https://github.com/haileyok/cocoon">cocoon</a> in Go, or <a href="https://github.com/DavidBuchanan314/millipds">millipds</a> in Python). The official version is very easy to set up and very cheap to run – it’s bundled in Docker, and there’s basically one script you need to run and answer a few questions.</p>

<p>As for the Bluesky-hosted PDSes, the number is currently in high double digits, and each of them hosts a few hundred thousands of accounts (!). And what’s more, they keep the record data in SQLite databases, one per account. And it works really well, go figure. The Bluesky PDSes are all given names of different kinds of mushrooms (like Amanita, Boletus or Shiitake), hence they are often called “mushroom servers”; you can see the full list e.g. <a href="https://status.bsky.app/">here</a>. <code>bsky.social</code> was left as a so-called “<strong>entryway server</strong>”, which handles shared authentication for all Bluesky-hosted PDSes (it’s a private piece of Bluesky PBC infrastructure that’s not open source and not needed for independent PDS hosters).</p>



<h2>Relay</h2>

<p>A <strong>relay</strong> is probably the piece of the ATProto architecture that’s most commonly misunderstood by people familiar with other networks like the Fediverse. It doesn’t help that both the Fediverse and Nostr also include servers called “relays”, but they serve a different purpose in each of them:</p>

<ul>
<li>a relay in Nostr is a core piece of the architecture: your posts are uploaded to one or more relays that you have configured and are hosted there, where other users can fetch them from</li>
<li>a relay in the Fediverse is an optional helper service that redistributes posts from some number of instances who have opted in to others, in order to make content more discoverable e.g. on hashtag feeds</li>
</ul>


<p>In ATProto, a relay is a server which combines the firehose streams from all PDSes it knows about into one massive stream that includes every change happening anywhere on the network. Such full-network firehose is then used as the input for many other services, like AppViews, labellers, or feed generators. It serves as a convenient streaming API&nbsp;to get e.g. all posts on the network to process them somehow, or all changes to accounts, or all content in general, from a single place.</p>

<p>Initially, the relay was also expected to keep a complete archive of all the data on the network, from all repos, from the beginning of time. This requirement was later removed in the updates late last year, at least partially triggered by the drastic increase in traffic in November 2024, which overwhelmed Bluesky’s and third party servers for at least a few days. Currently, Bluesky’s and other relays are generally “non-archival”, meaning that they live stream current events (+ a buffer of e.g. last 24 or 36 hours), but don’t keep a full archive of all repos (this change has <a href="https://whtwnd.com/bnewbold.net/3lo7a2a4qxg2l">massive lowered the resource requirements</a> / cost of running a relay, making it much more accessible). An archival relay could always be set up too, but I’m not aware of any currently operating.</p>

<p>Bluesky operates one main relay at <a href="https://bsky.network/">bsky.network</a>, which is used as a data source for their AppView and pretty much everyone else in the ATProto ecosystem at the moment (internally, it’s really some kind of “load balancer” using the <a href="https://github.com/bluesky-social/indigo/tree/main/cmd/rainbow">rainbow</a> service, with a few real relay servers behind it).</p>

<p>The relay code is <a href="https://github.com/bluesky-social/indigo/">implemented in Go</a>, and isn’t very hard to get up and running (especially the recent “1.1” update improved things quite a lot). Some people have been running alternative relay services privately for some time, and there is now e.g. a public relay run by Rudy Fraser at <a href="https://atproto.africa/">atproto.africa</a> (with a custom implementation in Rust! 🦀), and a couple run by <a href="https://bsky.app/profile/did:plc:hdhoaan3xa3jiuq4fg4mefid/post/3ltkh6bdo4ki5">Phil @bad-example.com</a>. I’m also running <a href="https://relay.feeds.blue/">my own small relay</a>, feeding content only from non-Bluesky PDSes.</p>



<h4>Jetstream</h4>

<p>There is also a variant of a relay called <a href="https://github.com/bluesky-social/jetstream">Jetstream</a> – it’s a service that reads from a real CBOR relay and outputs a stream that’s JSON based, better organized, and much more lightweight (the full relay includes a lot of additional data that’s mostly used for cryptographic operations and other low-level stuff). For many simpler tools and services, it might make more sense to stream data from that one instead, if only to save bandwidth. (Bluesky runs a couple of instances listed there in the readme, but you can also run your own.)</p>



<h2>AppView</h2>

<p>The terribly named <strong>AppView</strong> is the second most important piece of the network after the PDS.</p>

<p>The AppView is basically an API&nbsp;server that serves processed data to client apps. It’s an equivalent of an API&nbsp;backend (with the databases behind it) that you’d find on a classic social media site like Twitter. AppView streams all new data written on the network from the relay, and saves a copy of it locally in a processed, aggregated and optimized form. For example, an AppView backed by an SQL database could have a <code>posts</code> table with a <code>text</code> column, a <code>likes</code> table storing all likes with a foreign key <code>post_id</code>, probably also an integer <code>likes_count</code> column in <code>posts</code> for optimization, and so on.</p>

<p>The AppView is designed to be able to easily give information such as:</p>

<ul>
<li>the latest posts from this user</li>
<li>all the replies in a given thread organized in a tree</li>
<li>most recent posts on the network with the hashtag #rubylang or mentioning “iOS 26”</li>
<li>how many likes/reposts has a given post received, and who made them</li>
<li>how many follows/followers does a given user have, and who are they</li>
<li>is user A allowed to view or reply to a post from user B</li>
</ul>


<p>All this data originates from users’ PDSes and has its original copy stored there, but the “raw” record don’t always allow you to access all information easily. For example, to find out how many likes a post has, you need to know all <code>app.bsky.feed.like</code> records referencing it from other users, and each of those like records is stored in the liking user’s repo on that user’s PDS. Same with followers, as I&nbsp;mentioned earlier in the section on records, or with building threads (again, different replies in one thread are hosted in different repos), or for basically any kind of search. So having this kind of API&nbsp;with processed data from the entire network is essential for client apps and various tools and services built around Bluesky by other people.</p>

<p>AppView also applies some additional rules to the data, sometimes overriding what people post into their PDSes, since anyone can technically post anything into their PDS. For example, the AppView prevents you from looking at the profiles of people who have blocked you, at least when you’re logged in. It also hides them from your followers list, even if they have a <code>follow</code> record referencing you, making it seem like they don’t; and if they try to make an <code>app.bsky.feed.post</code> replying to you (they <em>can</em> create such record on their PDS!), it excludes such reply from feeds and threads, as if it never happened. Same goes for “thread gates” which lock access to threads, and so on.</p>

<p>The AppView is one of the few components which <em>aren’t</em> completely open source. Initially, the AppView used Postgres as its data store; <em>that</em> version is still in the public repository. In late 2023, Bluesky has migrated to a “v2” version, which uses the NoSQL database <a href="https://www.scylladb.com/">ScyllaDB</a> instead, to be able to handle the massive read traffic from many millions of concurrent users. The upper layer with the “business logic” is kept in the <a href="https://github.com/bluesky-social/atproto/tree/main/packages/bsky">public repository</a>, while the so called “dataplane” layer that interacts directly with Scylla is not. The reason is mostly that it’s built for a specific hardware setup they have and wouldn’t be directly usable by others, while it would add some unnecesary work for the team to publish it. It’s still possible to run the AppView with the <a href="https://github.com/bluesky-social/atproto/tree/main/packages/bsky/src/data-plane">old Postgres-based data layer</a> (and I&nbsp;think the team uses that internally for development), it just can’t handle as much traffic as the current live version.</p>

<p>This is the piece that’s hardest to run yourself, and one that requires the most resources. That said, a private AppView should be possible to run right now for <a href="https://whtwnd.com/futur.blue/3ls7sbvpsqc2w">under $200/month</a> – the biggest requirement is at least a few TB of disk space. The truly costly part is not collecting and storing all this data, but serving it to a huge number of users who would use it as a backend for the client app in daily use. An alternative full-network Bluesky AppView that is used by a few thousands of users shouldn’t be very hard to run, but to be able to serve millions, you’ll need a lot of hardware and something more custom than the Postgres-based version.</p>

<p>There have also been some attempts at alternative implementations – the most advanced right now is <a href="https://github.com/alnkesq/AppViewLite">AppViewLite</a>, built in C#, which goes to great lengths to minimize the resource use.</p>



<h4>CDN</h4>

<p>A part of the AppView (at least the Bluesky one) is also a CDN for serving images &amp; videos. The API&nbsp;responses from e.g. <code>getTimeline</code> or <code>getPostThread</code> generally include links to any media on the Bluesky CDN hostname, not directly on the PDS, even though you <em>can</em> fetch every blob from the PDS, since that’s the “source of truth” (although IIRC the Bluesky PDS implementation doesn’t set the CORS headers there). It’s recommended to access any media this way in order to not use too much bandwidth from the PDS.</p>



<h2>Labellers</h2>

<p>(Or “labelers” officially, but I&nbsp;like the British spelling more here, sue me ¯\_(ツ)_/¯)</p>

<p>We’re now getting to more Bluesky specific things (i.e. specific for the Bluesky-service, although some parts of it are ATProto-general and mentioned on the <a href="https://atproto.com/specs/label">atproto.com site</a>).</p>

<p>A <strong>labeller</strong> is a moderation service for Bluesky (or other ATProto app), which can be run by third parties. Labellers emit labels, which are assigned to an account or a record (like a post). Each labeller defines its own set of labels, depending on what it’s focusing on; then, users can “subscribe” to a labeller and choose how they want to handle the labels it assigns: you can hide the labelled posts/users, mark them with a warning badge, or ignore given label.</p>

<p>Labellers were initially designed to just do community moderation of unwanted content, e.g. you can have a service focused on fighting racism, transphobia, or right-wing extremism, and that service helps protect its users from some kinds of bad actors; or you can have one marking e.g. posts with political content, users who follow 20k accounts, or who post way too many hashtags. In practice, many <a href="https://blue.mackuba.eu/labellers/">existing labellers</a> are meant for self-labelling instead, letting you assign e.g. a country flag or some fun things like a D&amp;D character class to yourself.</p>

<p>The way it works technically is:</p>

<ul>
<li>a labeller either runs a firehose client pulling posts from the relay, or relies on reports from users and/or its operating team (usually using the <a href="https://github.com/bluesky-social/ozone/">Ozone tool</a> for that)</li>
<li>labels, which are lightweight objects (<em>not</em> ATProto records) are emitted from labeller’s special firehose stream (the <a href="https://github.com/bluesky-social/atproto/blob/main/lexicons/com/atproto/label/subscribeLabels.json">subscribeLabels endpoint</a>)</li>
<li>the AppView listens to the label firehoses of all labellers it knows about, in addition to the relay stream, and records all received labels in its database</li>
<li>when a logged in user pulls data like threads or timelines from the AppView, it adds relevant label info to the responses depending on which labellers the user follows</li>
<li>the specific list of labellers whose labels should be applied is passed explicitly in API&nbsp;requests in the <code>atproto-accept-labelers</code> header (there is a “soft” limit of 20 labellers you can pass at a time, which is why the official app won’t let you subscribe to more)</li>
<li>in the official app, Bluesky’s official moderation service (which is “just” another labeller) is hardcoded as one of those 20 and you can’t turn it off; when connecting from your own app or tool, you’re free to ignore it if you want</li>
</ul>


<p>(Read more about labellers <a href="https://mackuba.eu/2024/02/21/bluesky-guide/#labellers">here</a>.)</p>



<h2>Feed generators</h2>

<p><a href="https://mackuba.eu/2024/02/21/bluesky-guide/#feeds">Custom feeds</a> are one of the coolest features of Bluesky. They let you create any kind of feed using any algorithm and let everyone on the platform use it (even as the default feed, if they want to).</p>

<p>The way this system works is that you need to run a “<strong>feed generator</strong>” service on your server. In that service, you expose an API&nbsp;that the AppView can call, which returns a list of post at:// URIs selected by you however you want in response to a given request.</p>

<p>A minimal feed service can be pretty simple – the API&nbsp;is just three endpoints, two of which are static, and the third returns the post URIs. One “small” problem is that in order to return the post URIs, you need to have some info about posts stored up front, which in practice means that you almost always need to connect to a relay’s firehose stream and store some post data (of selected or all posts, depending on your use case).</p>

<p>The flow is like this:</p>

<ul>
<li>a feed record is uploaded to your repo, including metadata and location of the feed generator service, which lets other users find your feed</li>
<li>when the user opens that feed in the app, the AppView makes a request to your service on their behalf</li>
<li>your service looks at the request params and headers, and returns a list of posts it selected in the form of at:// URIs</li>
<li>the AppView takes those URIs and maps them to full posts (so-called “hydration”), which it returns to the user’s app</li>
</ul>


<p>How exactly those posts are selected to be returned in the given request is completely up to you, the only requirement is that these are posts that the AppView will have in its database, since you only send URIs, not actual post data. In most cases, feeds use some kind of keyword/regexp matching and chronological ordering, but you can even build very complex, AI-driven algorithmic “For You” style personalized feeds.</p>

<p>You don’t necessarily have to code a feed service yourself and host it in order to have a custom feed – there are a few feed hosting services that don’t require technical knowledge to use, like <a href="https://skyfeed.app/">SkyFeed</a> or <a href="https://www.graze.social/">Graze</a>.</p>



<h2>Client apps</h2>

<p>Ok, that’s technically not a server, but stay with me…</p>

<p>The final piece that you need to fully enjoy Bluesky is the client app – a mobile/desktop one or a web frontend. Unlike on Fedi, where an instance software like Mastodon usually includes a built-in web frontend that is your main interface for accessing the service, the PDS doesn’t include anything like that, just a database and an API&nbsp;(which also means it’s much more lightweight and needs less resources). All browsing is done through a separate client, and the client always does everything through the public API&nbsp;– kind of like when you run a custom web client for Mastodon like <a href="https://elk.zone/">Elk</a> or <a href="https://phanpy.social/">Phanpy</a>, you connect it to your instance, and you view your timeline on <a href="https://elk.zone/">elk.zone</a>.</p>

<p>So when you go to <a href="https://bsky.app/">bsky.app</a>, that’s what you’re seeing – a web client that connects to your PDS (Bluesky-hosted or self-hosted) through the public API, no more, no less. The official app is built for both mobile platforms and for the web from a single React Native codebase (apparently React Native on the web and normal web React is not the same thing 🧐). This has allowed the still very small frontend team (and IIRC at first it was literally just Paul) to build the app for three platforms in any reasonable amount of time and maintain it going forward. The downside is that it’s kinda neither a great webapp nor a great mobile app… But the team is doing what they can to improve it, and it’s already much better than it used to be, and tbh more than good enough for me.</p>

<p>There aren’t nearly as many alternative clients as there are for Mastodon, and none of them are <em>really</em> great, but there are a few options; see the <a href="https://mackuba.eu/2024/02/21/bluesky-guide/#apps">apps part of my Bluesky Guide</a> blog post for links.</p>



<h2>DMs</h2>

<p>Notice that I&nbsp;haven’t mentioned DMs anywhere – that’s because they aren’t a part of the protocol at the moment. The Bluesky team wants to eventually add some properly implemented, end-to-end encrypted, secure DMs using some open standard, but they won’t be able to finish that in the short term, and a lot of people were asking for at least some simple version of DMs in the app. So they’ve decided as an interim solution to implement them as a fully centralized, closed source service. It is accessible to third-party Bluesky clients through the API&nbsp;(the <code>chat.bsky.*</code> namespace), but it’s not something you can run yourself. The team is <a href="https://bsky.app/profile/did:plc:44ybard66vv44zksje25o7dz/post/3lacrutxhio2h">very open</a> about the fact that it’s not a proper replacement for something like Signal, and that for sensitive communication, you should ideally just use it for swapping contacts on Signal on iMessage and move the conversation there. They also kinda don’t want to spend too much time adding features there, because it’s considered a temporary solution, so it’s pretty basic in terms of available features.</p>

<p>There are also a few other closed-source helper services, like the “cardyb” they use for generating link card details, or the video service for preprocessing videos, but they’re all specific to some Bluesky use cases only and not strictly necessary to use.</p>

<hr>



<h2>How it all fits together</h2>

<p>So the flow and hierarchy is like this:</p>

<ul>
<li>the <strong>client app</strong> you use creates new records as a result of actions you take (new posts, likes, follows), and saves them into your PDS</li>
<li>your <strong>PDS</strong> emits events on its firehose with the record details</li>
<li>Bluesky <strong>relay</strong> and other relays are connected to the firehoses of each PDS they know about (your PDS generally needs to ask them to connect using the <code>PDS_CRAWLERS</code> ENV variable), and they pass those events to their output firehose</li>
<li>the Bluesky <strong>AppView</strong> (and other AppViews) listen to the firehose of their selected relay (though it could be multiple relays, or it could even just stream directly from PDSes, but in practice this will normally be one trusted relay)</li>
<li>the AppView gets events including your records, and if they are relevant, saves the data to its internal database in some appropriate representations</li>
<li>when other users browse Bluesky in their client apps, they load timelines, feeds and threads from the AppView, which returns info about your post from that database it saved it to</li>
</ul>


<p>Additionally:</p>

<ul>
<li><strong>feed generators</strong> run by third party feed operators also stream data from Bluesky’s or some other relay and save it locally, so they can respond to feed requests from the AppView</li>
<li><strong>labellers</strong> also stream data from Bluesky’s or some other relay, and emit labels on their firehoses, which get sent to the AppView (note: there is no official “labeller relay” sitting between labellers and the AppView, although one third party dev <a href="https://bsky.app/profile/did:plc:w4xbfzo7kqfes5zb7r6qv3rw/post/3lrgs3itqyc2q">wrote one</a>)</li>
</ul>


<p>Note:</p>

<ul>
<li>PDSes <strong>do not connect to each other directly</strong>, and they don’t store posts of users from other PDSes, only their own</li>
<li>although right now basically everyone uses the Bluesky relay and AppView, anyone <em>can</em> set up their own alternative relays and AppViews, which feed from all or any subset of known PDSes</li>
<li>PDS chooses which relays to ask to connect, but relays can also connect by themselves to a PDS or another relay; AppView chooses which relay(s) it streams data from; and PDS chooses which AppView it loads timelines &amp; threads from</li>
<li>it’s absolutely possible and expected that two users using different PDSes, which use separate AppViews feeding from separate relays will be able to talk to each other and see each other’s responses on their own AppView, as long as the users aren’t banned on the other user’s infrastructure</li>
</ul>


<p>The metaphor that’s often used to describe these relationship is that PDSes are like websites which publish some blog posts, and relays &amp; AppViews are like search engines which crawl and index the web, and then let you look up results in them. In most cases, a website should be indexed and visible in all/most available search engines.</p>

<hr>



<h2>Where to go next</h2>

<p>And that’s about it – I&nbsp;think with the above, you should have a pretty good grasp of the big picture of ATProto architecture and all the specific parts of it. Now, if you want to start playing with the protocol and building some things on it, a lot will depend on what specifically you want to build and using what languages/technologies:</p>



<h4>SDKs:</h4>

<p>Two languages are officially supported by Bluesky:</p>

<ul>
<li>JavaScript/TypeScript, in which most of their code is written (see the <a href="https://github.com/bluesky-social/atproto/tree/main/packages">packages folder</a> in the <code>atproto</code> repo)</li>
<li>Go, which is used in some backend pieces like the relay, or the <a href="https://github.com/bluesky-social/goat">goat</a> command line tool used e.g. for PDS migrations (see the <a href="https://github.com/bluesky-social/indigo"><code>indigo</code> repo</a>)</li>
</ul>


<p>For Python, there is a <a href="https://atproto.blue/">pretty full-featured SDK created by Marshal</a>, which is the only third party SDK <a href="https://atproto.com/sdks">officially endorsed</a> by the Bluesky team.</p>

<p>For other languages, I&nbsp;have a website called <a href="https://sdk.blue/">sdk.blue</a>, which lists all libraries and SDKs I&nbsp;know about, grouped by language. As you can see, there is something there for most major languages; I’ve built and maintain a group of <a href="https://sdk.blue/#ruby">Ruby gems</a> myself. If you want to use a language that doesn’t have any libraries yet, it’s really not that hard to make one from scratch – for most things you just need an HTTP client and a JSON parser, and maybe a websocket client.</p>



<h4>Docs:</h4>

<p>There is quite a lot of official documentation, although it’s a bit spread out and sometimes not easy to find.</p>

<p>The places to look in are:</p>

<ul>
<li><a href="https://atproto.com/">atproto.com</a> – the official AT Protocol website; a bit more formal documentation about the elements of the protocol, kind of like what I&nbsp;did here, but with much more info and detailed specifications of each thing</li>
<li><a href="https://docs.bsky.app/docs/get-started">docs.bsky.app</a> – more practical documentation with guides and examples of specific use cases in TS &amp; Python (roll down the sections in the sidebar); it shows examples of how to make a post, upload a video, how to connect to the firehose, how to make a custom feed, etc.</li>
<li><a href="https://docs.bsky.app/blog">docs.bsky.app/blog</a> – developer blog with updates about protocol changes</li>
<li><a href="https://docs.bsky.app/docs/category/http-reference">HTTP reference</a> – a reference of all the API&nbsp;endpoints</li>
<li>something that I&nbsp;also find useful is to have the <a href="https://github.com/bluesky-social/atproto">atproto repo</a> checked out locally and opened in the editor, and look things up in the JSON files from the <a href="https://github.com/bluesky-social/atproto/tree/main/lexicons">/lexicons folder</a></li>
</ul>


<p>And a few other articles that might work better for you:</p>

<ul>
<li>“<a href="https://atproto.com/articles/atproto-for-distsys-engineers">ATProto for distributed systems engineers</a>”, Bluesky’s technical overview of the server and data flow architecture</li>
<li>“<a href="https://atproto.com/articles/atproto-ethos">ATProto Ethos</a>”, also on the Bluesky blog, based on a conference talk</li>
<li>“<a href="https://steveklabnik.com/writing/how-does-bluesky-work/">How Does BlueSky Work?</a>”, by Steve Klabnik (of Ruby &amp; Rust fame) (Feb 2024)</li>
<li>the “<a href="https://atproto.com/guides/applications">Statusphere</a>” app example on atproto.com</li>
</ul>




<h4>Community:</h4>

<p>Someone said recently that “<em>bsky replies are the only real documentation for ATProto</em>”, and honestly, they’re not wrong. We have a great community of third party developers now, building their own tools, apps, libraries, services, even organizing <a href="https://ahoy.eu/">conferences</a>. If you’re starting out and you have any questions, just ask and someone will probably help, and some of the Bluesky team developers are also very active in Bluesky threads, answering questions and clarifying things. So a lot of such knowledge that’s not necessarily found in the official docs can be found somewhere on Bluesky.</p>

<p>The two places I&nbsp;recommend looking at are:</p>

<ul>
<li>the “ATProto Touchers” Discord chat – ping me or some other developer for an invite&nbsp;:)</li>
<li>my <a href="https://bsky.app/profile/did:plc:oio4hkxaop4ao4wz2pp3f4cr/feed/atproto">ATProto feed</a> on Bluesky, which tries to catch any ATProto development discussions – it should include posts with any mention of “ATProto” or things like “AppView” or various API&nbsp;names and technical terms, or you can use <code>#atproto</code> or <code>#atdev</code> hashtag to be sure</li>
</ul>


<p>Also, there’s a fantastic newsletter called <a href="https://connectedplaces.online/">Connected Places</a> (formerly Fediverse Report) by Laurens Hof, who publishes two separate editions every week, about what’s happening in Bluesky/ATProto and in the Fediverse (and *a lot* of things are happening).</p>



<h4>Ideas:</h4>

<p>Some easy ways to start tinkering:</p>

<ul>
<li>use one of the <a href="https://sdk.blue/">existing libraries for your favorite language</a> and make a website or command-line tool which loads some data from the AppView or PDS: load and print timelines, calculate statistics, browse contents of PDSes and repos, etc.</li>
<li>make a bot that posts something (not spammy!)</li>
<li>make a simple custom feed service using <a href="https://docs.bsky.app/docs/starter-templates/custom-feeds">one of the available templates</a></li>
<li>connect to the relay firehose and print or record some specific types of data</li>
</ul>




<h4>Tools:</h4>

<p>And a couple of tools which will certainly be useful in development:</p>

<ul>
<li><a href="https://internect.info/">internect.info</a> – look up an account by handle/DID and see details like assigned PDS or handle history</li>
<li><a href="https://pdsls.dev/">PDSls</a> – PDS and repository browser, lets you look up repos by account DID or records by at:// URI&nbsp;(there are a few others, but this one is most popular)</li>
</ul>


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zedless: Zed fork focused on privacy and being local-first (492 pts)]]></title>
            <link>https://github.com/zedless-editor/zed</link>
            <guid>44964916</guid>
            <pubDate>Wed, 20 Aug 2025 18:47:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/zedless-editor/zed">https://github.com/zedless-editor/zed</a>, See on <a href="https://news.ycombinator.com/item?id=44964916">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Zedless</h2><a id="user-content-zedless" aria-label="Permalink: Zedless" href="#zedless"></a></p>
<p dir="auto">This is Zedless, a fork of Zed that's designed to be privacy-friendly and local-first.</p>
<p dir="auto">Zedless is currently work-in-progress. Feel free to contribute!</p>
<hr>
<p dir="auto"><h3 tabindex="-1" dir="auto">Planned Changes from Upstream</h3><a id="user-content-planned-changes-from-upstream" aria-label="Permalink: Planned Changes from Upstream" href="#planned-changes-from-upstream"></a></p>
<p dir="auto">This is a list of things that Zedless will do differently.</p>
<ul dir="auto">
<li>No reliance on proprietary cloud services
<ul dir="auto">
<li>Components and features that strictly rely on non-selfhostable cloud services will be removed.</li>
</ul>
</li>
<li>No spyware
<ul dir="auto">
<li>Telemetry and automatic crash reporting will be removed.</li>
</ul>
</li>
<li>Priority on bringing your own infrastructure
<ul dir="auto">
<li>Any feature that makes use of a network service will allow you to configure which provider to use in a standard format, e.g. by specifying the base URL of an API.</li>
<li>Any such feature will not have a list of "default providers".</li>
<li>Any such feature will be disabled by default.</li>
</ul>
</li>
<li>No CLA
<ul dir="auto">
<li>Contributors' copyright shall not be reassigned.</li>
<li>No rugpulls.</li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Licensing</h3><a id="user-content-licensing" aria-label="Permalink: Licensing" href="#licensing"></a></p>
<p dir="auto">License information for third party dependencies must be correctly provided for CI to pass.</p>
<p dir="auto">We use <a href="https://github.com/EmbarkStudios/cargo-about"><code>cargo-about</code></a> to automatically comply with open source licenses. If CI is failing, check the following:</p>
<ul dir="auto">
<li>Is it showing a <code>no license specified</code> error for a crate you've created? If so, add <code>publish = false</code> under <code>[package]</code> in your crate's Cargo.toml.</li>
<li>Is the error <code>failed to satisfy license requirements</code> for a dependency? If so, first determine what license the project has and whether this system is sufficient to comply with this license's requirements. If you're unsure, ask a lawyer. Once you've verified that this system is acceptable add the license's SPDX identifier to the <code>accepted</code> array in <code>script/licenses/zed-licenses.toml</code>.</li>
<li>Is <code>cargo-about</code> unable to find the license for a dependency? If so, add a clarification field at the end of <code>script/licenses/zed-licenses.toml</code>, as specified in the <a href="https://embarkstudios.github.io/cargo-about/cli/generate/config.html#crate-configuration" rel="nofollow">cargo-about book</a>.</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Project to formalise a proof of Fermat’s Last Theorem in the Lean theorem prover (112 pts)]]></title>
            <link>https://imperialcollegelondon.github.io/FLT/</link>
            <guid>44964693</guid>
            <pubDate>Wed, 20 Aug 2025 18:27:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://imperialcollegelondon.github.io/FLT/">https://imperialcollegelondon.github.io/FLT/</a>, See on <a href="https://news.ycombinator.com/item?id=44964693">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content" role="main">
    <!-- for mathjax support -->







<p>An ongoing multi-author open source project to formalise a proof of Fermat’s Last Theorem in the Lean theorem prover.</p>

<h2 id="information-about-the-project">Information about the project</h2>

<p>The project is currently being led by Kevin Buzzard. It is funded by <a href="https://gtr.ukri.org/projects?ref=EP%2FY022904%2F1">grant EP/Y022904/1</a>, awarded by the UK’s Engineering and Physical Sciences Research Council. The project is hosted at Imperial College London. Kevin would like to extend many many thanks to both of these institutions for their ongoing support of this nonstandard research.</p>

<p>General information (“What is Fermat’s Last Theorem/Lean?” / “Why are you doing this?” etc) is <a href="https://github.com/ImperialCollegeLondon/FLT/blob/main/GENERAL.md">here</a>.</p>


    
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Say farewell to the AI bubble, and get ready for the crash (106 pts)]]></title>
            <link>https://www.latimes.com/business/story/2025-08-20/say-farewell-to-the-ai-bubble-and-get-ready-for-the-crash</link>
            <guid>44964548</guid>
            <pubDate>Wed, 20 Aug 2025 18:12:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.latimes.com/business/story/2025-08-20/say-farewell-to-the-ai-bubble-and-get-ready-for-the-crash">https://www.latimes.com/business/story/2025-08-20/say-farewell-to-the-ai-bubble-and-get-ready-for-the-crash</a>, See on <a href="https://news.ycombinator.com/item?id=44964548">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-element="story-body" data-subscriber-content=""> <p>Most people not deeply involved in the artificial intelligence frenzy may not have noticed, but perceptions of AI’s relentless march toward becoming more intelligent than humans, even becoming a threat to humanity, came to a screeching halt Aug. 7.</p><p>That was the day when the most widely followed AI company, OpenAI, released GPT-5, an advanced product that the firm had long promised would put competitors to shame and launch a new revolution in this purportedly revolutionary technology.</p><p>As it happened, GPT-5 was a bust. It turned out to be less user-friendly and in many ways less capable than its predecessors in OpenAI’s arsenal. It made the same sort of risible errors in answering users’ prompts, was no better in math (or even worse), and not at all the advance that OpenAI and its chief executive, Sam Altman, had been talking up.</p><div data-click="enhancement" data-align-center=""> <blockquote> <p>AI companies are really buoying the American economy right now, and it’s looking very bubble-shaped.</p> </blockquote>  <p>— Alex Hanna, co-author, “The AI Con”</p>  </div><p>“The thought was that this growth would be exponential,” says Alex Hanna, a technology critic and co-author (with Emily M. Bender of the University of Washington) of the indispensable new book “<a href="https://www.harpercollins.com/products/the-ai-con-emily-m-benderalex-hanna?variant=43065101189154" target="_blank">The AI Con</a>: How to Fight Big Tech’s Hype and Create the Future We Want.” Instead, Hanna says, “We’re hitting a wall.” </p><p>The consequences go beyond how so many business leaders and ordinary Americans have been led to expect, even fear, the penetration of AI into our lives. Hundreds of billions of dollars have been invested by venture capitalists and major corporations such as Google, Amazon and Microsoft in OpenAI and its multitude of fellow AI labs, even though none of the AI labs has turned a profit. </p><p>Public companies have scurried to announce AI investments or claim AI capabilities for their products in the hope of turbocharging their share prices, much as an earlier generation of businesses promoted themselves as “dot-coms” in the 1990s to look more glittery in investors’ eyes. </p><p>Nvidia, the maker of a high-powered chip powering AI research, plays almost the same role as a stock market leader that Intel Corp., another chip-maker, played in the 1990s — helping to prop up the bull market in equities.</p><p>If the promise of AI turns out to be as much of a mirage as dot-coms did, stock investors may face a painful reckoning.</p><p>The cheerless rollout of GPT-5 could bring the day of reckoning closer. “AI companies are really buoying the American economy right now, and it’s looking very bubble-shaped,” Hanna told me. </p><p>The rollout was so disappointing that it shined a spotlight on the degree that the whole AI industry has been dependent on hype. </p><p>Here’s Altman, speaking just before the unveiling of GPT-5, comparing it with its immediate predecessor, GPT-4o: “GPT-4o maybe it was like talking to a college student,” he said. “With GPT-5 now it’s like talking to an expert — a legitimate PhD-level expert in anything any area you need on demand ... whatever your goals are.” </p><p>Well, not so much. When one user asked it to produce a map of the U.S. with all the states labeled, GPT-5 <a href="https://bsky.app/profile/did:plc:qc6xzgctorfsm35w6i3vdebx/post/3lvua4fgc722k" target="_blank">extruded a fantasyland</a>, including states such as Tonnessee, Mississipo and West Wigina. Another prompted the model for a list of the first 12 presidents, with names and pictures. It only <a href="https://bsky.app/profile/did:plc:vqtakzi5bityrtbjj4cfan4l/post/3lvvplusuos2n" target="_blank">came up with nine</a>, including presidents Gearge Washington, John Quincy Adama and Thomason Jefferson. </p><p>Experienced users of the new version’s predecessor models were appalled, not least by OpenAI’s decision to shut down access to its older versions and force users to rely on the new one. “<a href="https://www.reddit.com/r/ChatGPT/comments/1mkd4l3/gpt5_is_horrible/" target="_blank">GPT5 is horrible</a>,” wrote a user on Reddit. “Short replies that are insufficient, more obnoxious ai stylized talking, less ‘personality’ … and we don’t have the option to just use other models.” (OpenAI quickly relented, reopening access to the older versions.)</p><p>The tech media was also unimpressed. “<a href="https://futurism.com/the-byte/openai-huge-problem-gpt-5" target="_blank">A bit of a dud</a>,” judged the website Futurism and Ars Technica termed the rollout <a href="https://arstechnica.com/information-technology/2025/08/the-gpt-5-rollout-has-been-a-big-mess/" target="_blank">“a big mess.”</a> I asked OpenAI to comment on the dismal public reaction to GPT-5, but didn’t hear back.</p><p>None of this means that the hype machine underpinning most public expectations of AI has taken a breather. Rather, it remains in overdrive. </p><p>A projection of AI’s development over the coming years published by something called the AI Futures Project under the title <a href="https://ai-2027.com/" target="_blank">“AI 2027”</a> states: “We predict that the impact of superhuman AI over the next decade will be enormous, exceeding that of the Industrial Revolution.” </p><p>The rest of the document, mapping a course to late 2027 when an AI agent “finally understands its own cognition,” is so loopily over the top that I wondered whether it wasn’t meant as a parody of excessive AI hype. I asked its creators if that was so, but haven’t received a reply.</p><p>One problem underscored by GPT-5’s underwhelming rollout is that it exploded one of the most cherished principles of the AI world, which is that “scaling up” — endowing the technology with more computing power and more data — would bring the grail of artificial general intelligence, or AGI, ever closer to reality. </p><p>That’s the principle undergirding the AI industry’s vast expenditures on data centers and high-performance chips. The demand for more data and more data-crunching capabilities will require <a href="https://www.ft.com/content/7052c560-4f31-4f45-bed0-cbc84453b3ce" target="_blank">about $3 trillion in capital</a> just by 2028, in the estimation of Morgan Stanley. That would outstrip the capacity of the global credit and derivative securities markets. But if AI won’t scale up, most if not all that money will be wasted.</p><p>As Bender and Hanna point out in their book, AI promoters have kept investors and followers enthralled by relying on a vague public understanding of the term “intelligence.” AI bots seem intelligent, because they’ve achieved the ability to seem coherent in their use of language. But that’s different from cognition. </p><p>“So we’re imagining a mind behind the words,” Hanna says, “and that becomes associated with consciousness or intelligence. But the notion of general intelligence is not really well-defined.” </p><p>Indeed, as long ago as the 1960s, that phenomenon was noticed by Joseph Weizenbaum, the designer of the pioneering chatbot ELIZA, which replicated the responses of a psychotherapist so convincingly that even test subjects who knew they were conversing with a machine thought it displayed emotions and empathy.</p><p>“What I had not realized,” <a href="https://www.amazon.com/Computer-Power-Human-Reason-Calculation/dp/0716704633/" target="_blank">Weizenbaum wrote in 1976</a>, “is that extremely short exposures to a relatively simple computer program could induce powerful delusional thinking in quite normal people.” Weizenbaum warned that the “reckless anthropomorphization of the computer” — that is, treating it as some sort of thinking companion — produced a “simpleminded view of intelligence.” </p><p>That tendency has been exploited by today’s AI promoters. They label the frequent mistakes and fabrications produced by AI bots as “hallucinations,” which suggests that the bots have perceptions that may have gone slightly awry. But the bots “don’t have perceptions,” Bender and Hanna write, “and suggesting that they do is yet more unhelpful anthropomorphization.” </p><p>The general public may finally be cottoning on to the failed promise of AI more generally. Predictions that AI will lead to large-scale job losses in creative and STEM fields (science, technology, engineering and math) might inspire feelings that the whole enterprise was a tech-industry scam from the outset. </p><p>Predictions that AI would yield a burst of increased worker productivity haven’t been fulfilled; in many fields, productivity declines, in part because workers have to be deployed to double-check AI outputs, lest their mistakes or fabrications find their way into mission-critical applications — legal briefs incorporating nonexistent precedents, medical prescriptions with life-threatening ramifications and so on.</p><p>Some economists are dashing cold water on predictions of economic gains more generally. MIT economist Daron Acemoglu, for example, forecast last year that AI would produce <a href="https://economics.mit.edu/sites/default/files/2024-05/The%20Simple%20Macroeconomics%20of%20AI.pdf" target="_blank">an increase of only about 0.5%</a> in U.S. productivity and an increase of about 1% in gross domestic product over the next 10 years, mere fractions of the AI camp’s projections.</p><p>The value of Bender’s and Hanna’s book, and the lesson of GPT-5, is that they remind us that “artificial intelligence” isn’t a scientific term or an engineering term. It’s a marketing term. And that’s true of all the chatter about AI eventually taking over the world.</p><p>“Claims around consciousness and sentience are a tactic to sell you on AI,” Bender and Hanna write. So, too, is the talk about the billions, or trillions, to be made in AI. As with any technology, the profits will go to a small cadre, while the rest of us pay the price ... unless we gain a much clearer perception of what AI is, and more importantly, what it isn’t. </p><div data-list-id="00000192-be42-da32-a3db-ff76fc3b0000" data-module-id="00000192-be42-da32-a3db-ff76fc3b0000" data-click="enhancement" data-align-center="">  <p data-element="element-header" data-click="liZZListTitleCTA">  <h3 data-element="element-header-title" data-counter="3">More to Read </h3>  </p>      </div> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pixel 10 Phones (400 pts)]]></title>
            <link>https://blog.google/products/pixel/google-pixel-10-pro-xl/</link>
            <guid>44963939</guid>
            <pubDate>Wed, 20 Aug 2025 17:24:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.google/products/pixel/google-pixel-10-pro-xl/">https://blog.google/products/pixel/google-pixel-10-pro-xl/</a>, See on <a href="https://news.ycombinator.com/item?id=44963939">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="jump-content" tabindex="-1">
            

    
    

    <article>

    
    





    

    
      








<div data-analytics-module="{
    &quot;module_name&quot;: &quot;Hero Menu&quot;,
    &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
  }">
  
  <div>
      
      
        <p>
          Our 10th generation of Pixel phones come with a refined design, cutting edge AI, enhanced cameras and more helpful support than ever.
        </p>
      
    </div>
  
  <div data-component="uni-ai-generated-summary" data-analytics-module="{
    &quot;event&quot;: &quot;module_impression&quot;,
    &quot;module_name&quot;: &quot;ai_summary&quot;,
    &quot;section_header&quot;: &quot;CTA&quot;
  }">
      
        <div data-summary-id="ai_summary_1">
          <h2>General summary</h2>
          <p>The Pixel 10 phones are here with the Google Tensor G5 chip and Gemini Nano model. Expect a fresh design with recycled materials and improved displays. Preorder today, with phones on shelves August 28.</p>
          
          <p><small>
            Summaries were generated by Google AI. Generative AI is experimental.
          </small>
        </p></div>
      
        <div data-summary-id="ai_summary_2">
          <h2>Bullet points</h2>
          <ul>
<li>"Powerful and proactive: Pixel 10 phones are here!" introduces Google's 10th gen Pixel phones.</li>
<li>Pixel 10 boasts a refreshed design, recycled materials, and comes in four expressive colors.</li>
<li>The phones run on the new Tensor G5 chip and Gemini Nano for personalized AI experiences.</li>
<li>Magic Cue proactively offers helpful info in apps, like flight details during airline calls.</li>
<li>Pixel 10 Pro gets Pro Res Zoom, using AI to capture amazing detail at up to 100x zoom.</li>
</ul>
          
          <p><small>
            Summaries were generated by Google AI. Generative AI is experimental.
          </small>
        </p></div>
      

      
      <div>
        <h4>
          Explore other styles:
        </h4>
        
      </div>
      

      </div>
</div>

    

    
      




  <uni-youtube-player-hero index="0" thumbnail-alt="Thumbnail image of YouTube video for the launch of Pixel 10 Pro and Pixel 10 Pro XL" component-title="Powerful and proactive: Pixel 10 phones are here" video-id="Z3lqOEM6Zig" video-type="video" image="Pixel 10 Pro annouce Youtube thumbnail" video-image-url-lazy="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Pixel10Pro_Announce_YT_Thumbnail.width-100.format-webp.webp" video-image-url-mobile="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Pixel10Pro_Announce_YT_Thumbnail.width-700.format-webp.webp" video-image-url-desktop="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Pixel10Pro_Announce_YT_Thumbnail.width-1000.format-webp.webp">
  </uni-youtube-player-hero>











    

    
    <div>
        
          
            <div data-component="uni-article-jumplinks" data-analytics-module="{
    &quot;module_name&quot;: &quot;Article Jumplinks&quot;,
    &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
  }">
  <nav aria-label="Article Jumplinks">
    <p><span>In this story</span>
    </p>
    
    
    <div>
      <ul id="article-jumplinks__list">
        
        <li>
          <a aria-label="link to Modern design" href="#moderndesign" id="moderndesign-anchor">Modern design</a>
        </li>
        
        <li>
          <a aria-label="link to New custom chip" href="#customchip" id="customchip-anchor">New custom chip</a>
        </li>
        
        <li>
          <a aria-label="link to AI at your fingertips" href="#aifingertips" id="aifingertips-anchor">AI at your fingertips</a>
        </li>
        
        <li>
          <a aria-label="link to A camera with Gemini" href="#cameragemini" id="cameragemini-anchor">A camera with Gemini</a>
        </li>
        
      </ul>
    </div>
    
  </nav>
</div>
          
          
          <div data-reading-time="true" data-component="uni-article-body">

            
              





<uni-article-speakable page-title="Powerful and proactive: Pixel 10 phones are here" listen-to-article="Listen to article" data-date-modified="2025-08-20T17:29:54.263879+00:00" data-tracking-ids="G-HGNBTNCHCQ,G-6NKTLKV14N" data-voice-list="en.ioh-pngnat:Cyan,en.usb-pngnat:Lime" data-script-src="https://www.gstatic.com/readaloud/player/web/api/js/api.js" data-highlight-mode="word-over-paragraph"></uni-article-speakable>

            

            
            
<!--article text-->

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }">
        <p data-block-key="cujby">Today we introduced our 10th generation of phones: <a href="https://store.google.com/us/product/pixel_10?utm_source=keyword&amp;utm_medium=google_oo&amp;utm_campaign=GS108535">Pixel 10</a>, <a href="https://store.google.com/product/pixel_10_pro?utm_source=keyword&amp;utm_medium=google_oo&amp;utm_campaign=GS108535">Pixel 10 Pro and Pixel 10 Pro XL</a>. Powered by the all-new Google Tensor G5 chip and our newest <a href="https://deepmind.google/models/gemini/nano/">Gemini Nano model</a>, they’re our most personalized, proactive and helpful Pixels ever — and they come with a refreshed design and plenty of hardware updates.</p>
      </div>
  

  
    

  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }"><h2 data-block-key="02ob0">A modern design and impressive build</h2><p data-block-key="2iq6c">Pixel 10, Pixel 10 Pro and Pixel 10 Pro XL refine the iconic camera bar, come with <a href="https://blog.google/products/pixel/pixelsnap-accessories-charger-ring-stand/">Pixelsnap for built in Qi2 wireless charging</a> — and a range of new magnetic accessories — and are made with the most recycled materials yet for a Pixel.</p><p data-block-key="7ie1i">These phones will be the first to feature <a href="https://blog.google/products/android/material-3-expressive-android-wearos-launch/">Material 3 Expressive</a>, our latest UI that brings more personalization and fluidity to your phone with springy animations and smooth interactions — a perfect complement to our refreshed Pixel 10 design. And your phone will continue to feel fresh and secure with seven years of Pixel Drops as well as OS and security updates.</p></div>
  

  
    














<uni-image-full-width alignment="full" alt-text="Man holding Pixel 10 in Indigo in front of rock scenery" external-image="" or-mp4-video-title="" or-mp4-video-url="" section-header="Powerful and proactive: Pixel 10 phones are here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
    <p><img alt="Man holding Pixel 10 in Indigo in front of rock scenery" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Lifestyle_P10_Indigo_2_iAapPBY.width-100.format-webp.webp" loading="lazy" data-loading="{
            &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Lifestyle_P10_Indigo_2_iAapPBY.width-500.format-webp.webp&quot;,
            &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Lifestyle_P10_Indigo_2_iAapPBY.width-1000.format-webp.webp&quot;
          }">
    </p>
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }"><p data-block-key="cujby">Pixel 10 features a satin-finish metal frame, polished glass back and our iconic camera bar. You’ll have four expressive color options to choose from, too: Obsidian, Frost, Indigo and Lemongrass. Its 6.3-inch Actua display is now even brighter at 3000 nits making for easy viewing. That’s paired with improved audio, including exceptional bass so your favorite shows sound and look better than ever.</p><p data-block-key="5lpqn">Pixel 10 also comes with huge camera improvements. That includes the first 5x telephoto lens on this tier of Pixel with fast autofocus, 10x optical quality and up to 20x zoom with Super Res Zoom — so it's easier to shoot from a distance.</p></div>
  

  
    














<uni-image-full-width alignment="full" alt-text="Pixel 10 Pro finish and hardware in Moonstone" external-image="" or-mp4-video-title="Pixel 10 Pro" or-mp4-video-url="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/PixelLaunch_Pixel10Pro_rlPKc5m.mp4" section-header="Powerful and proactive: Pixel 10 phones are here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }"><p data-block-key="cujby">Pixel 10 Pro delivers the ultimate Pixel experience with our most premium design, brightest Super Actua displays and our best triple rear camera system yet. Available in two sizes (6.3-inches) and Pixel 10 Pro XL (6.8-inches) for an uncompromised choice of size. You can grab them in Obsidian and Porcelain as well as new colors: Moonstone and Jade. And with Pro Res Zoom, you can reach up to 100x zoom only on Pixel 10 Pro and Pixel 10 Pro XL.</p><p data-block-key="e46t0">Our pro phone upgrades extend across nearly every area of these devices. They feature our biggest batteries, upgraded speakers, 16 GB of RAM and faster wired charging while Pixel 10 Pro XL supports 25W Qi2.2 wireless charging.</p></div>
  

  
    

  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }"><h2 data-block-key="zrd1o">Our most powerful silicon yet</h2><p data-block-key="30c8g"><a href="https://blog.google/products/pixel/tensor-G5-pixel-10">Tensor G5</a>, our new custom silicon, is the most significant upgrade to our chip since Tensor’s debut. It delivers snappy performance while bringing deeply helpful experiences to Pixel users first. And thanks to co-design with Google DeepMind, the newest <a href="https://deepmind.google/models/gemini/nano/">Gemini Nano</a> model will run first on Tensor G5 to unlock many on-device generative AI experiences that make everyday life easier.</p></div>
  

  
    














<uni-image-full-width alignment="full" alt-text="Image of Tensor G5 Chip" external-image="" or-mp4-video-title="" or-mp4-video-url="" section-header="Powerful and proactive: Pixel 10 phones are here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
    <p><img alt="Image of Tensor G5 Chip" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Tensor_HeroImage_25YKjsp.width-100.format-webp.webp" loading="lazy" data-loading="{
            &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Tensor_HeroImage_25YKjsp.width-500.format-webp.webp&quot;,
            &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Tensor_HeroImage_25YKjsp.width-1000.format-webp.webp&quot;
          }">
    </p>
  
</uni-image-full-width>


  

  
    

  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }"><h2 data-block-key="cujby">AI at your fingertips</h2><p data-block-key="bk7gg">With Pixel 10, we’re introducing <a href="https://blog.google/products/pixel/google-pixel-10-ai-features-updates/">Magic Cue</a>. It meets you in some of your favorite apps — like Google Messages and the Phone app — to proactively offer the right information at the right time— like finding those perfect cat photos whenever mom asks me. Magic Cue isn’t just a single app or feature, it’s proactive support, tightly woven across your phone to offer relevant info and helpful actions, saving you time and effort.</p></div>
  

  
    














<uni-image-full-width alignment="small" alt-text="Magic Cue demonstration with suggestion to call an airline from a text message" external-image="" or-mp4-video-title="Magic Cue" or-mp4-video-url="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/PixelLaunch_Magic_Cue_FT8mlkC.mp4" section-header="Powerful and proactive: Pixel 10 phones are here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }">
        <p data-block-key="cujby">For instance, when you're calling an airline, it can automatically find your flight details from your email and display it during your phone call. It helps you both recall information and take action, too — whether it's providing an address for dinner or finding the right photos to share with a friend, all without leaving your chat. With your permission, Tensor G5 and the latest version of Gemini Nano work together to run Magic Cue privately and securely on your phone.</p>
      </div>
  

  
    

  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }"><h2 data-block-key="zrd1o">A camera with Gemini on tap</h2><p data-block-key="kste">Pixel 10 is more than a great camera; it will make you a better photographer, too.</p><p data-block-key="f2s1c">Camera Coach uses Gemini models to suggest ways to improve your photos — like choosing different framing and composition for a shot. Built for those of us early on in our photography journey, Camera Coach will teach foundational concepts while inspiring you to capture images in entirely new ways.</p></div>
  

  
    














<uni-image-full-width alignment="small" alt-text="Camera Coach demonstration showing a woman posed beneath a sculpture." external-image="" or-mp4-video-title="PixelLaunchMagicCue" or-mp4-video-url="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Updated_PixelLaunch_Magic_Cue_FT8mlkC_1.mp4" section-header="Powerful and proactive: Pixel 10 phones are here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }"><p data-block-key="cujby">Pixel cameras have always been known for their zoom, but the new Pro Res Zoom gets you <i>really</i> close. Exclusive to the Pixel 10 Pro and 10 Pro XL, Pro Res Zoom captures astonishing detail at up to 100x zoom. It isn't just a simple crop; Pro Res Zoom uses Tensor G5 and an all-new generative imaging model to intelligently recover and refine intricate details.</p><p data-block-key="2cp2u">This is a major leap forward in generative AI, built specifically for Pixel Camera's imaging pipeline and optimized to take full advantage of the new Tensor G5 chip. Pro Res Zoom is the largest AI model ever used on Pixel Camera, helping deliver the highest-quality zoom on a smartphone.


<a data-ga4-analytics-superscript-click="" data-target="inline text" href="#footnote-1" id="footnote-source-1" aria-label="Jump to link reference 1">
  <sup>1</sup>
</a>
</p></div>
  

  
    














<uni-image-full-width alignment="full" alt-text="Pro Res Zoom on a small blue car driving through road between large rocks" external-image="" or-mp4-video-title="Pro Res Zoom on a small blue car driving through road between large rocks" or-mp4-video-url="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/PixelLaunch_Pro_Res_Zoom_ZlvUQHk.mp4" section-header="Powerful and proactive: Pixel 10 phones are here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Powerful and proactive: Pixel 10 phones are here&quot;
         }"><h2 data-block-key="cujby">Available for preorder today</h2><p data-block-key="ad5a7"><a href="https://store.google.com/us/product/pixel_10?utm_source=keyword&amp;utm_medium=google_oo&amp;utm_campaign=GS108535">Pixel 10</a>, <a href="https://store.google.com/product/pixel_10_pro?utm_source=keyword&amp;utm_medium=google_oo&amp;utm_campaign=GS108535">Pixel 10 Pro and Pixel 10 Pro XL</a> are all available for preorder today starting at $799, $999 and $1199. Pixel 10 Pro and Pixel 10 Pro XL owners will also get a full year of <a href="https://one.google.com/about/google-ai-plans/?utm_source=keyword&amp;utm_medium=google_oo&amp;utm_campaign=GS108056&amp;hl=en-US">Google AI Pro</a>.</p><p data-block-key="4af9s">All three phones will be on shelves at the <a href="https://store.google.com/category/phones?utm_source=keyword&amp;utm_medium=google_oo&amp;utm_campaign=GS108056">Google Store</a> and our retail partners on August 28. <a href="https://support.google.com/store/answer/2462844?hl=en">Find out where each product will be available</a> and <a href="https://store.google.com/?hl=en-US?utm_source=keyword&amp;utm_medium=google_oo&amp;utm_campaign=GS107607&amp;utm_content=blog">sign up</a> for product updates on the Google Store.</p></div>
  

  
    







<uni-related-content-tout title="Made by Google 2025" cta="See more" summary="Here’s a look at everything we announced at Made by Google 2025." hideimage="False" eyebrow="Collection" image-alt-text="Google Pixel text above a light blue smartphone, two earbuds, and a smartwatch, all featuring a unified light blue-grey color." role="none" fullurl="https://blog.google/products/pixel/made-by-google-2025/" pagetype="collectiondetailpage" isarticlepage="">
  
    <div slot="rct-image-slot">
      
      
        
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="300px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/MBG25_Collection_SS.width-300.format-webp.webp 300w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/MBG25_Collection_SS.width-600.format-webp.webp 600w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/MBG25_Collection_SS.width-600.format-webp.webp" alt="Google Pixel text above a light blue smartphone, two earbuds, and a smartwatch, all featuring a unified light blue-grey color." sizes=" 300px,  600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/MBG25_Collection_SS.width-300.format-webp.webp 300w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/MBG25_Collection_SS.width-600.format-webp.webp 600w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


      
    </div>
  
</uni-related-content-tout>

  

  
    

  
    





<div role="form" data-component="uni-subscribe" data-analytics-module="{
    &quot;module_name&quot;: &quot;Newsletter&quot;,
    &quot;section_header&quot;: &quot;Get more stories from Google in your inbox.&quot;
  }">
    
    
    <div id="newsletter-form--form">
      <form data-method="POST" data-action="https://services.google.com/fb/submissions/thekeywordnewsletterprodv2/">
        <h2 id="subscribe_box_label">
          <span>Get more stories from Google in your inbox.</span>
          
        </h2>
        
      </form>
    </div>
    
    <div>
      <div>
        <p tabindex="-1" role="status" aria-live="off" aria-atomic="false">
          Done. Just one step more.
        </p>
        <p>
          Check your inbox to confirm your subscription.
        </p>
        <p>You are already subscribed to our newsletter.</p>
      </div>
      <p>
        You can also subscribe with a
        
        
      </p>
    </div>
  </div>

  

  


            
            

            
              




            
          </div>
        
      </div>
  </article>
  



  








  <uni-footnotes layout="align-end">
    
  </uni-footnotes>



  

  


<div data-component="uni-related-articles" aria-roledescription="carousel" data-analytics-module="{
    &quot;module_name&quot;: &quot;Article Footer Related Stories&quot;,
    &quot;section_header&quot;: &quot;Related stories&quot;
  }">
        <h3>
          <p>
            Related stories
          </p>
        </h3>
      </div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An Update on Pytype (176 pts)]]></title>
            <link>https://github.com/google/pytype</link>
            <guid>44963724</guid>
            <pubDate>Wed, 20 Aug 2025 17:04:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/google/pytype">https://github.com/google/pytype</a>, See on <a href="https://news.ycombinator.com/item?id=44963724">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">An update on pytype</h2><a id="user-content-an-update-on-pytype" aria-label="Permalink: An update on pytype" href="#an-update-on-pytype"></a></p>
<p dir="auto"><strong>TL;DR</strong>: The last supported Python version for Pytype will be 3.12. We are
still very actively interested in the space of Python type checking, but
shifting our investments towards new ideas and different frameworks.</p>
<p dir="auto">Pytype's development began in 2012 to meet Google developers' demand for
compile-time checking. Pytype started with using type inference and interface
files, and then switched to inline annotations (while retaining the inference
engine) after the acceptance of PEP 484. Later, pytype's team collaborated with
Guido and mypy to create typeshed, a central repository for type annotations.</p>
<p dir="auto">While pytype has been effective, its bytecode-based design has presented
challenges in implementing new features (e.g. faster adoption of new typing
PEPs) due to bytecode’s inherent instability and propensity to change.
Consequently, we intend to focus our investments on exploring new typing
approaches that are better suited for Google’s Python user base and make
Python 3.12 the last supported version for pytype.</p>
<p dir="auto">We encourage folks to investigate the mature and excellent alternative solutions
for Python typing going forward. We would like to note that the Python typing
ecosystem is very robust now, offering a wider array of mature solutions (see
<a href="https://github.com/google/pytype/issues/1925" data-hovercard-type="issue" data-hovercard-url="/google/pytype/issues/1925/hovercard">FAQ</a>).</p>
<p dir="auto">The creation and development of pytype was a collaborative effort, and we would
like to thank all contributors to pytype, especially the four main contributors:
Rebecca Chen, Martin DeMello, Teddy Sudol, and initial lead Matthias Kramm.
We particularly recognize Rebecca Chen for her decade-long commitment to pytype
and her significant contributions to Python's type system as a long-standing
member of the typing council.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Digg.com is back (113 pts)]]></title>
            <link>https://www.digg.com/</link>
            <guid>44963430</guid>
            <pubDate>Wed, 20 Aug 2025 16:35:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.digg.com/">https://www.digg.com/</a>, See on <a href="https://news.ycombinator.com/item?id=44963430">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><h2>Humanity <span>at the core.</span></h2><h2>Technology <span>at the edges.</span></h2></p><p>We’re building a human-first community platform that places authentic community and connection at the forefront. From day one.</p><div><p>Join the waitlist</p><p><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" width="1em" height="1em"><path fill="currentColor" fill-rule="evenodd" d="M8 8a4 4 0 1 1 8 0v3h1.5a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1v-7a1 1 0 0 1 1-1H8V8Zm4-2a2 2 0 0 1 2 2v3h-4V8a2 2 0 0 1 2-2Z" clip-rule="evenodd"></path></svg><span>Digg is currently invite only.</span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Luminal – Open-source, search-based GPU compiler (111 pts)]]></title>
            <link>https://github.com/luminal-ai/luminal</link>
            <guid>44963135</guid>
            <pubDate>Wed, 20 Aug 2025 16:01:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/luminal-ai/luminal">https://github.com/luminal-ai/luminal</a>, See on <a href="https://news.ycombinator.com/item?id=44963135">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/13525371/478269775-c5832634-55d5-45b7-ba65-6efe36afce4a.png?jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTU3NTQ1MDMsIm5iZiI6MTc1NTc1NDIwMywicGF0aCI6Ii8xMzUyNTM3MS80NzgyNjk3NzUtYzU4MzI2MzQtNTVkNS00NWI3LWJhNjUtNmVmZTM2YWZjZTRhLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA4MjElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwODIxVDA1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTE1ZDg2NjRmM2U4NDk3NjI1NjU4MDAxNmE4YzAzMjdmZTU2MDljZWIwZjcwYjZlNmE4YWFjYWI1YjY5ZGUwMGUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.J7qtVYRQ5GYwmKeQVuVuLN5Lz5ig_w1Y0Vz4JtFAuPI"><img alt="Screenshot 2025-08-14 at 9 18 54 PM" src="https://private-user-images.githubusercontent.com/13525371/478269775-c5832634-55d5-45b7-ba65-6efe36afce4a.png?jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTU3NTQ1MDMsIm5iZiI6MTc1NTc1NDIwMywicGF0aCI6Ii8xMzUyNTM3MS80NzgyNjk3NzUtYzU4MzI2MzQtNTVkNS00NWI3LWJhNjUtNmVmZTM2YWZjZTRhLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA4MjElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwODIxVDA1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTE1ZDg2NjRmM2U4NDk3NjI1NjU4MDAxNmE4YzAzMjdmZTU2MDljZWIwZjcwYjZlNmE4YWFjYWI1YjY5ZGUwMGUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.J7qtVYRQ5GYwmKeQVuVuLN5Lz5ig_w1Y0Vz4JtFAuPI"></a>
<p dir="auto"><a href="https://github.com/jafioti/luminal/actions"><img src="https://camo.githubusercontent.com/1b667f815a019b4566dd0e436546e17289ebfde294161b6b7a18bbd2687958f5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f6a6166696f74692f6c756d696e616c2f746573742e796d6c3f7374796c653d666f722d7468652d6261646765266c6f676f3d6769746875622d616374696f6e73266c6f676f436f6c6f723d7768697465266272616e63683d6d61696e" alt="CI Status" data-canonical-src="https://img.shields.io/github/actions/workflow/status/jafioti/luminal/test.yml?style=for-the-badge&amp;logo=github-actions&amp;logoColor=white&amp;branch=main"></a>
<a href="https://docs.luminalai.com/" rel="nofollow"><img src="https://camo.githubusercontent.com/9ee45e419aa5ccf88b574838fabc66ee0fa26d6b82345ef1ae40195d9c52bc53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f63756d656e746174696f6e2d677265656e3f7374796c653d666f722d7468652d626164676526636f6c6f723d304439333733" alt="Docs" data-canonical-src="https://img.shields.io/badge/Documentation-green?style=for-the-badge&amp;color=0D9373"></a>
<a href="https://crates.io/crates/luminal" rel="nofollow"><img src="https://camo.githubusercontent.com/f81abe1014eff17c11476dc6297243e0edf250cf834574fec64729e35b2ea471/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f6c756d696e616c2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d72757374" alt="Current Crates.io Version" data-canonical-src="https://img.shields.io/crates/v/luminal.svg?style=for-the-badge&amp;logo=rust"></a>
<a href="https://discord.gg/APjuwHAbGy" rel="nofollow"><img src="https://camo.githubusercontent.com/0fdab0b6b895a0b2e3fd73f6a6bc28443e2d1e4cff24792208c6419ac8e7dba3/68747470733a2f2f646362616467652e6c696d65732e70696e6b2f6170692f7365727665722f41506a75774841624779" alt="discord" data-canonical-src="https://dcbadge.limes.pink/api/server/APjuwHAbGy"></a></p>
<p dir="auto">Luminal is a deep learning library that uses <strong>search-based compilation</strong> to achieve high performance.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">ShowHN</h2><a id="user-content-showhn" aria-label="Permalink: ShowHN" href="#showhn"></a></p>
<p dir="auto">To run the demo shown on HN on mac, clone this repo and run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd demos/matmul
cargo run --release"><pre><span>cd</span> demos/matmul
cargo run --release</pre></div>
<div dir="auto"><p dir="auto">Important</p><p dir="auto">We're undergoing a large transition to "2.0", which introduces large-scale kernel search. This radically simplifies the compiler stack and allows us to discover complex optimizations entirely automatically. Please keep an eye on breaking changes, which usually are staged in the <code>crates/luminal_2</code> before being merged into the main crate.</p>
</div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="use luminal::prelude::*;

// Setup graph and tensors
let mut cx = Graph::new();
let a = cx.tensor((3, 1)).set([[1.0], [2.0], [3.0]]);
let b = cx.tensor((1, 4)).set([[1.0, 2.0, 3.0, 4.0]]);

// Do math...
let mut c = a.matmul(b).retrieve();

// Compile and run graph
cx.compile(<(GenericCompiler, CPUCompiler)>::default(), &amp;mut c);
cx.execute();

// Get result
println!(&quot;Result: {:?}&quot;, c);"><pre><span>use</span> luminal<span>::</span>prelude<span>::</span><span>*</span><span>;</span>

<span>// Setup graph and tensors</span>
<span>let</span> <span>mut</span> cx = <span>Graph</span><span>::</span><span>new</span><span>(</span><span>)</span><span>;</span>
<span>let</span> a = cx<span>.</span><span>tensor</span><span>(</span><span>(</span><span>3</span><span>,</span> <span>1</span><span>)</span><span>)</span><span>.</span><span>set</span><span>(</span><span>[</span><span>[</span><span>1.0</span><span>]</span><span>,</span> <span>[</span><span>2.0</span><span>]</span><span>,</span> <span>[</span><span>3.0</span><span>]</span><span>]</span><span>)</span><span>;</span>
<span>let</span> b = cx<span>.</span><span>tensor</span><span>(</span><span>(</span><span>1</span><span>,</span> <span>4</span><span>)</span><span>)</span><span>.</span><span>set</span><span>(</span><span>[</span><span>[</span><span>1.0</span><span>,</span> <span>2.0</span><span>,</span> <span>3.0</span><span>,</span> <span>4.0</span><span>]</span><span>]</span><span>)</span><span>;</span>

<span>// Do math...</span>
<span>let</span> <span>mut</span> c = a<span>.</span><span>matmul</span><span>(</span>b<span>)</span><span>.</span><span>retrieve</span><span>(</span><span>)</span><span>;</span>

<span>// Compile and run graph</span>
cx<span>.</span><span>compile</span><span>(</span>&lt;<span>(</span><span>GenericCompiler</span><span>,</span> <span>CPUCompiler</span><span>)</span>&gt;<span>::</span><span>default</span><span>(</span><span>)</span><span>,</span> <span>&amp;</span><span>mut</span> c<span>)</span><span>;</span>
cx<span>.</span><span>execute</span><span>(</span><span>)</span><span>;</span>

<span>// Get result</span>
<span>println</span><span>!</span><span>(</span><span>"Result: {:?}"</span><span>,</span> c<span>)</span><span>;</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto"><strong>Llama 3 8B</strong></p>
<ul dir="auto">
<li>the below is a quick example of how you can run Llama 3 8B locally using Luminal
<ul dir="auto">
<li>to go indepth on this example check out <a href="https://github.com/jafioti/luminal/tree/main/examples/llama/README.md">the documentation here</a></li>
</ul>
</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="cd ./examples/llama
# Download the model
bash ./setup/setup.sh
# Run the model
cargo run --release --features metal    # MacOS (Recommended)
cargo run --release --features cuda     # Nvidia
cargo run --release                     # CPU"><pre><span>cd</span> ./examples/llama
<span><span>#</span> Download the model</span>
bash ./setup/setup.sh
<span><span>#</span> Run the model</span>
cargo run --release --features metal    <span><span>#</span> MacOS (Recommended)</span>
cargo run --release --features cuda     <span><span>#</span> Nvidia</span>
cargo run --release                     <span><span>#</span> CPU</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Speed</h3><a id="user-content-speed" aria-label="Permalink: Speed" href="#speed"></a></p>
<p dir="auto">Luminal can run Q8 Llama 3 8B on M-series Macbooks at 15-25 tokens per second. The goal is to become the fastest ML framework for any model on any device.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Simplicity</h3><a id="user-content-simplicity" aria-label="Permalink: Simplicity" href="#simplicity"></a></p>
<p dir="auto">The core of luminal is and always will be minimal. It should be possible to understand the entire core library in an afternoon.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">RISC-style architecture</h3><a id="user-content-risc-style-architecture" aria-label="Permalink: RISC-style architecture" href="#risc-style-architecture"></a></p>
<p dir="auto">Everything in luminal boils down to 12 primitive ops:</p>
<ul dir="auto">
<li>Unary - <code>Log2, Exp2, Sin, Sqrt, Recip</code></li>
<li>Binary - <code>Add, Mul, Mod, LessThan</code></li>
<li>Other - <code>SumReduce, MaxReduce, Contiguous</code></li>
</ul>
<p dir="auto">These ops are enough to support transformers, convnets, etc.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Speed</h3><a id="user-content-speed-1" aria-label="Permalink: Speed" href="#speed-1"></a></p>
<p dir="auto">We compile these ops into complex GPU kernels, so even though our ops are simple, we get high performance through the power of compilers! This is how we overcome the typical RISC disadvantages, btw.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Search</h3><a id="user-content-search" aria-label="Permalink: Search" href="#search"></a></p>
<p dir="auto">The best heuristic is no heuristic. We try to search every possible decision to give the compiler the most flexibility to discover complex optimizations. This allows us to automatically derive Flash Attention and other similarly complex rewrites. It also allows us to stay extremely small long into the future and beat the performance of far larger frameworks with tons of handwritten kernels.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Native</h3><a id="user-content-native" aria-label="Permalink: Native" href="#native"></a></p>
<p dir="auto">The current ML ecosystem is too fragmented, and the solution isn't another layer of abstraction. Luminal is written in rust, and interacts directly with the CUDA / Metal APIs. No indirections or abstractions, docker containers, or virtual environments. Just a statically-linked rust crate.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Validated against Pytorch</h3><a id="user-content-validated-against-pytorch" aria-label="Permalink: Validated against Pytorch" href="#validated-against-pytorch"></a></p>
<p dir="auto">Correctness matters. So we write as much tests as possible to cover all ops and verify they work the same as an equivalent Pytorch implementation. (<a href="https://github.com/jafioti/luminal/issues/20" data-hovercard-type="issue" data-hovercard-url="/luminal-ai/luminal/issues/20/hovercard">Improvements needed!</a>)</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Ideology</h2><a id="user-content-ideology" aria-label="Permalink: Ideology" href="#ideology"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Why does this look so different from other DL libraries?</h3><a id="user-content-why-does-this-look-so-different-from-other-dl-libraries" aria-label="Permalink: Why does this look so different from other DL libraries?" href="#why-does-this-look-so-different-from-other-dl-libraries"></a></p>
<p dir="auto">Most deep learning libraries are eager-first, meaning each op call directly operates on the data. In PyTorch, when you see <code>x + y</code>, the addition actually happens right there. This is great for debugging because it works exactly as most developers expect.</p>
<p dir="auto">However, this isn't great for performance. What makes sense for a developer doesn't work well for the machine, in the same way that no one writes assembly by hand. Most libraries try to fix this problem by tacking on operator fusion or JIT compilation to try to change the compilation flow to something better for the machine. Turns out this is <a href="https://docs.pytorch.org/docs/stable/torch.compiler_dynamo_overview.html" rel="nofollow">super</a> <a href="https://pytorch.org/tutorials/intermediate/torch_compile_tutorial.html" rel="nofollow">difficult</a> <a href="https://pytorch.org/docs/stable/jit.html" rel="nofollow">even</a> <a href="https://pytorch.org/docs/stable/fx.html#torch.fx.symbolic_trace" rel="nofollow">for</a> Pytorch!</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Compile everything</h3><a id="user-content-compile-everything" aria-label="Permalink: Compile everything" href="#compile-everything"></a></p>
<p dir="auto">A core tenet of Luminal is ahead-of-time compilation. Whenever possible, push everything to compile time and leave nothing to run time. Luminal takes an approach more similar to <a href="https://www.tensorflow.org/xla" rel="nofollow">XLA</a>, and <a href="https://github.com/tinygrad/tinygrad">tinygrad</a>. Everything's static here. When you write out an expression like <code>x + y</code>, no actual computation happens. The operation is recorded to a directed acyclic computation graph for execution later. Only once <code>graph.execute()</code> is ran does the computation happen. <em>But isn't that just lazy execution?</em> Yes it is! But in luminal <strong>everything is done this way</strong>. All neural networks are built up as one or a few static computation graphs, compiled, and executed later.</p>
<p dir="auto"><strong>But why?</strong></p>
<p dir="auto">A consequence of this is that the actual computation that gets ran can be radically different than the code that was written. Since we have an entire neural network fully represented in a compute graph, our compilers have global knowledge. This means we can push most ML complexity to the compilers. For instance, devices, datatypes, and execution schedules are all handled by compliers. Even autograd is handled by a compiler!</p>
<p dir="auto">Now we can do:</p>
<ul dir="auto">
<li>Aggressive kernel fusion</li>
<li>Shape-specific kernels compiled at runtime</li>
<li>Devices and Dtypes are handled through compilers (just run the CUDA compiler to convert the graph to use CUDA kernels, then the fp16 compiler to convert to half-precision kernels)</li>
<li>Networks can be written in generic code, but compiled and ran fast on hyper-specific architectures (try writing a PyTorch network that works with both TF32 dtypes and TPUs; get ready for if statement hell...)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Where are we?</h2><a id="user-content-where-are-we" aria-label="Permalink: Where are we?" href="#where-are-we"></a></p>
<ul dir="auto">
<li>Search is partially merged. We are between 1.0 and 2.0 (search), which will be completed within the next month or so.</li>
<li>Metal and Cuda are supported for running models on Macs and Nvidia GPUs respectively, in both full and half precision.</li>
<li>Full training support with graph-based autograd.</li>
<li>Llama 3, Phi 3, Whisper and Yolo v8 are implemented in <code>examples/</code>. See instructions above for running.</li>
<li>We have a small library of NN modules in <code>luminal_nn</code>, including transformers.</li>
<li>A significant amount of high-level ops are implemented in <code>hl_ops</code>. We are aiming to match the most used ~80% of the pytorch api.</li>
</ul>
<p dir="auto">Some things on the roadmap:</p>
<ul dir="auto">
<li>Expand the search space to utilize Tensor Cores more flexibly</li>
<li>Bring cuda to parity with Metal</li>
<li>Add Blackwell intrinsics, such as TMEM and TMA</li>
<li>Build a ROCm backend</li>
<li>Build benchmarking suite to test against other libs</li>
<li>Distributed data, pipeline and tensor parallel.</li>
<li>Beat PT 2.0 perf on LLM inference <em>and</em> training</li>
<li>Write compiler for quantum photonic retro encabulator</li>
<li>Build dyson swarm</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Licensed under the Apache License, Version 2.0 <a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow">http://www.apache.org/licenses/LICENSE-2.0</a> or the MIT license <a href="http://opensource.org/licenses/MIT" rel="nofollow">http://opensource.org/licenses/MIT</a>, at your option. This file may not be copied, modified, or distributed except according to those terms.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OPA maintainers and Styra employees hired by Apple (130 pts)]]></title>
            <link>https://blog.openpolicyagent.org/note-from-teemu-tim-and-torin-to-the-open-policy-agent-community-2dbbfe494371</link>
            <guid>44962969</guid>
            <pubDate>Wed, 20 Aug 2025 15:44:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.openpolicyagent.org/note-from-teemu-tim-and-torin-to-the-open-policy-agent-community-2dbbfe494371">https://blog.openpolicyagent.org/note-from-teemu-tim-and-torin-to-the-open-policy-agent-community-2dbbfe494371</a>, See on <a href="https://news.ycombinator.com/item?id=44962969">Hacker News</a></p>
Couldn't get https://blog.openpolicyagent.org/note-from-teemu-tim-and-torin-to-the-open-policy-agent-community-2dbbfe494371: Error: unable to verify the first certificate]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Launch HN: Channel3 (YC S25) – A database of every product on the internet (119 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=44962881</link>
            <guid>44962881</guid>
            <pubDate>Wed, 20 Aug 2025 15:34:07 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=44962881">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="bigbox"><td><table><tbody><tr id="44962881"><td><span></span></td><td><center><a id="up_44962881" href="https://news.ycombinator.com/vote?id=44962881&amp;how=up&amp;goto=item%3Fid%3D44962881"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=44962881">Launch HN: Channel3 (YC S25) – A database of every product on the internet</a></span></td></tr><tr><td colspan="2"></td><td><span><span id="score_44962881">102 points</span> by <a href="https://news.ycombinator.com/user?id=glawrence13">glawrence13</a> <span title="2025-08-20T15:34:07 1755704047"><a href="https://news.ycombinator.com/item?id=44962881">13 hours ago</a></span> <span id="unv_44962881"></span> | <a href="https://news.ycombinator.com/hide?id=44962881&amp;goto=item%3Fid%3D44962881">hide</a> | <a href="https://hn.algolia.com/?query=Launch%20HN%3A%20Channel3%20%28YC%20S25%29%20%E2%80%93%20A%20database%20of%20every%20product%20on%20the%20internet&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=44962881&amp;auth=479d8ccbfb9ccefd52bf06225128e4e8afd8c0d8">favorite</a> | <a href="https://news.ycombinator.com/item?id=44962881">61&nbsp;comments</a></span></td></tr><tr><td colspan="2"></td><td><div><p>Hi HN — we’re George and Alex, building Channel3 (<a href="https://trychannel3.com/">https://trychannel3.com/</a>), a database of every product on the internet, searchable via text/image, and with built-in affiliate monetization. Here’s a demo: <a href="https://www.youtube.com/watch?v=Mx8FyP7KvJg" rel="nofollow">https://www.youtube.com/watch?v=Mx8FyP7KvJg</a>.</p><p>It’s surprisingly hard to find good product data. If you want your software to recommend products and deep-link to merchants, you’ll quickly discover that the data you need—clean titles, normalized attributes, deduped listings, current prices and inventory, variant options, images, and brand info—is not just messy; it’s also spread across a long, long tail of retailers, and often lives behind advanced bot-detection systems.</p><p>We ran into this problem while building an AI teacher that could recommend relevant supplies. We asked Exa for products, but got back articles, not structured data. Same for Tavily and Bing (deprecated as of 8/13/25). And we got rejected from affiliate programs, who suggested we come back with 1000s of TikTok followers. Channel3 is the API we wished we had.</p><p>Product detail pages (PDPs) usually present the main item alongside recommendations. We use computer vision to isolate the main product and find its attributes, like title and price. We apply the same logic to the rest of the PDPs on the domain.</p><p>Products are often sold across multiple retailers, with no guarantee they’ll be labeled consistently. We collapse products across the web into a canonicalized set by using LLMs and multimodal embeddings to actually understand each product.</p><p>To normalize everything into a schema that tries to be both minimal and extensible, we have to be opinionated. Are a $50 10” and $60 12” skillet the same product? Probably not, but the S/M/L variants of a T-shirt are. Our goal is that any product you’d search for specifically is treated as its own product.</p><p>We process a massive amount of data. We quickly ran out of room on our Cloudflare Vectorize indices and moved to the brand-new AWS S3 Vectors platform, syncing to OpenSearch for faster response times and more dynamic filtering. We hit rate limits constantly, so we spread our work over multiple cloud providers and AI models.</p><p>You can search things like “outdoor grill, less than $1000”, or “sweat-resistant, wireless running earbuds”, or
"women's jeans from Paige that look like [<a href="https://www.gap.com/webcontent/0020/666/799/cn20666799.jpg" rel="nofollow">https://www.gap.com/webcontent/0020/666/799/cn20666799.jpg</a>]”. Products come back as JSON with title, brand, images, price, specs, etc.</p><p>Developers earn commission on sales they drive (averaging 5%). Channel3 takes a cut. We want you to earn way more money from Channel3 than you spend on it. We win when you win.</p><p>We provide an API, SDK (Typescript and Python), and MCP. We offer 1000 free searches, and charge $7/1000 searches after that. You can view expected commissions per-brand on our dashboard.</p><p>So far, products are US-only (sorry! we will expand). We’re live with millions of products and hundreds of developers.</p><p>To get started, make a free account at <a href="https://trychannel3.com/">https://trychannel3.com</a>, then select which brands you’d like to sell (choose from 50k+ or request your own), generate an API key, and start selling and earning.</p><p>We’d really appreciate feedback from this community. If you’ve built product search before, what did we miss in the schema? If you’ve tried to add commerce to an app, what blocked you? If you tried to build this yourself, what did you learn? Are there endpoints you wish existed (e.g. price alerts, back-in-stock webhooks, product feed)? For any suggestions, we’re all ears.</p><p>We’ll be in the thread all day to answer questions, share more technical detail, and hear whatever would make this most useful to you. Comment away!</p></div></td></tr><tr></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr></tbody></table><br>
</td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Closer to the Metal: Leaving Playwright for CDP (165 pts)]]></title>
            <link>https://browser-use.com/posts/playwright-to-cdp</link>
            <guid>44962869</guid>
            <pubDate>Wed, 20 Aug 2025 15:32:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://browser-use.com/posts/playwright-to-cdp">https://browser-use.com/posts/playwright-to-cdp</a>, See on <a href="https://news.ycombinator.com/item?id=44962869">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2>Goodbye Playwright, Hello CDP</h2>
<p>Playwright and Puppeteer are great for making QA tests and automation scripts short and readable, but as AI browser companies have been <a href="https://www.browserbase.com/blog/taming-iframes-a-stagehand-update">learning the hard way</a> over the last year, sometimes these adapters obscure important details about the underlying browsers.</p>
<p>We decided to peek behind the curtain and figure out what the browser was really doing, and it made us decide to drop playwright entirely and just speak the browser's native tongue: CDP.</p>
<p>By switcing to raw CDP we've massively increased the speed of element extraction, screenshots, and all our default actions. We've also managed to add new async reaction capabilities to the agent, and proper cross-origin iframe support.</p>
<blockquote>
<p><img alt="" src="https://docs.monadical.com/uploads/b30d71c0-29ee-4053-84b6-cc23d797926a.png">
Obviously we ignored the (wise) advice in the header of the <a href="https://github.com/aslushnikov/getting-started-with-cdp">getting-started-with-cdp</a> docs 👌</p>
</blockquote>
<h2>The Curse of Abstraction</h2>
<p><img src="https://docs.monadical.com/uploads/0315c67b-b8db-4a62-914e-161bbc752297.png" width="36%"></p><p>Building AI browser automation is like building on top of a jenga tower of complexity. Every layer presents its own leaky abstractions, its own subtle crashes, and its own resource constraints.</p>
<p>If you've ever heavily depended on an adapter library and build up a large codebase around it, you know the feeling that eventually comes when you realize the adapter library is no longer saving you any time by "hiding the true complexity". In our case that time has finally come for Browser-Use and playwright-python, the library that we've historically used to drive our browsers with LLM-powered tool calls like <code>click</code>, <code>input_text</code>, <code>go_to_url</code>.</p>
<p>At first glance it may seem foolish to throw out such a mature adapter library and reinvent the wheel, but luckily the needs of AI browser agents are much narrower than the entire surface area that playwright provides, and we believe we can implement the calls we need with more specialized logic to better suit AI drivers.</p>
<p>Playwright also introduces a 2nd network hop going through a node.js playwright server websocket, which incurs a meaningful amount of latency when we do thousands of CDP calls to check for element position, opacity, paint order, JS event listeners, aria properties, etc.</p>
<hr>
<hr>
<h2>📜 A Quick History of Browser Automation</h2>
<p>To really understand why the browser automation is in the state it's in today, we have to look back at some history.</p>
<h4>The Dark Ages</h4>
<ul>
<li><strong>2011–2017</strong> — Before headless Chrome, <strong>PhantomJS</strong> (a headless WebKit-based browser) filled the gap for scripting “like a browser,” with mixed reliability.</li>
<li><strong>2011</strong> — Chrome ships <strong>remote debugging</strong>; work happens “upstream” in WebKit so other ports can adopt it (post by Pavel Feldman).</li>
<li><strong>2012</strong> — <strong>WebKit Remote Debugging Protocol v1.0</strong> announced; early docs/talks outline the domains/events model that CDP still uses.</li>
<li><strong>2013–2014</strong> — Blink forks from WebKit; the protocol solidifies on the Chromium side and becomes known as the <strong>Chrome DevTools Protocol (CDP)</strong>. Extensions can tunnel it via <code>chrome.debugger</code> and <a href="https://groups.google.com/a/chromium.org/g/chromium-dev/c/arQE-vrM2OA"><code>--remote-debugging</code> flag</a>.</li>
<li><strong>2014</strong> — Chrome’s <strong><code>chrome.automation</code></strong> (accessibility/automation) extension API appears (exposes the accessibility tree; separate from CDP).</li>
</ul>
<h4>Headless Chrome &amp; CDP Era</h4>
<ul>
<li><strong>Apr 2017</strong> — <strong>Headless Chrome</strong> announced; <strong>Puppeteer</strong> introduced as a Chrome team Node library to drive Chrome (headless/full) via CDP.</li>
<li><strong>Jan 2018</strong> — <strong>Puppeteer 1.0</strong> ships.</li>
<li><strong>Jun 2018</strong> — <strong>WebDriver</strong> becomes a <strong>W3C Recommendation</strong> (cross-browser standard). <strong>ChromeDriver</strong> implements W3C WebDriver (and later BiDi) and is tightly coupled to Chrome releases.</li>
<li><strong>2019</strong> — Google I/O talk by <strong>Andrey Lushnikov &amp; Joel Einbinder</strong> (DevTools/Puppeteer team) popularizes modern testing with Puppeteer.</li>
</ul>
<h4>Multi-Browser Standardization Era</h4>
<ul>
<li><strong>2019–early 2020</strong> — Several core Puppeteer engineers leave Google for Microsoft and start <strong>Playwright</strong> (cross-browser automation/test framework) 🎭 (oooo drama)</li>
<li><strong>Jan 31, 2020</strong> — <strong>Playwright 0.x</strong> public release.</li>
<li><strong>May 6, 2020</strong> — <strong>Playwright 1.0</strong> ships.</li>
<li><strong>Sep–Oct 2020 →</strong> — <strong>Multi-language</strong> support begins (e.g., Playwright for Python announced Sep 30, 2020).</li>
<li><strong>2023</strong> — <strong>ChromeDriver</strong> adds <strong>WebDriver BiDi</strong> support (alongside classic WebDriver).</li>
<li><strong>2024</strong> — <strong>Puppeteer</strong> adds <strong>WebDriver BiDi</strong> support; Selenium “welcomes Puppeteer to the WebDriver world.”</li>
</ul>
<h4>Modern Times: A Multitude of Choice</h4>
<p>Now in 2025 we are lucky to have many high quality driver libraries to choose between, our favorites include:</p>
<ul>
<li>⭐️ <a href="https://pydoll.tech/"><code>pydoll</code></a> (best python-first playwright replacement)</li>
<li>⭐️ <a href="https://github.com/go-rod/rod"><code>go-rod</code></a> (best CDP reference implementation), <a href="https://github.com/chromedp/chromedp"><code>chromedp</code></a> (great CDP debug tooling)</li>
<li><a href="https://deepwiki.com/puppeteer/puppeteer"><code>puppeteer</code></a> (best native chrome behavior), <a href="https://playwright.dev/"><code>playwright</code></a> (best cross-browser support)</li>
<li><a href="https://github.com/seleniumbase/SeleniumBase"><code>selenium</code></a>, <a href="https://github.com/cypress-io/cypress"><code>cypress</code></a> (automate with old-school WebDrivers)</li>
<li><a href="https://github.com/appium/appium"><code>appium</code></a> automate via system-level accessibility APIs on Android, iOS, macOS, Windows</li>
</ul>
<p>So why did we feel the need to write our own with <code>cdp-use</code>? Well for all the same reasons as everyone else: everlasting desire to be closer to the metal and have more detailed control over every step.</p>
<hr>
<h2>How do Browser Drivers Work?</h2>
<blockquote>
<p>So what APIs does the browser actually expose anyway?
What sits underneath all these "drivers"?</p>
</blockquote>
<h3>🔌 What are the automation APIs that Chromium actually exposes?</h3>
<p>All these adapter libraries, drivers, and AI helper extensions really just exist to pass messages and make RPC calls to these underlying browser APIs:</p>
<ul>
<li>
<p><strong>Chrome Extension APIs</strong></p>
<ul>
<li><code>chrome.tabs.captureVisibleTab()</code></li>
<li><code>chrome.automation.getTree()</code></li>
<li><code>chrome.scripting.executeScript()</code></li>
<li><code>chrome.debugger.sendCommand({tabId: 123}, "Page.navigate", {url})</code>
<blockquote>
<p><strong>Chrome Extension APIs</strong> appear to be the most powerful at first glance because they encompass CDP with <code>chrome.debugger</code>, but raw CDP lets you access some calls that are not available through <code>chrome.debugger</code>, and allows parallel connections to multiple targets.</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p><strong>CDP APIs</strong> (via pure CDP Websocket or WebDriver BIDI socket)</p>
<ul>
<li><code>Page.navigate({url})</code></li>
<li><code>Target.createTarget()</code></li>
<li><code>Page.handleJavaScriptDialog({accept: true})</code></li>
<li><code>Browser.setDownloadBehavior()</code></li>
</ul>
</li>
<li>
<p><strong>OS-Level Accessibility &amp; screenreader APIs</strong> (NVDA/Voice Over/AppleScript/Appium/etc.)</p>
<ul>
<li>get a tree/rotor view of all elements shown to screenreaders (links, buttons, inputs, ...)</li>
<li>script copy/paste, mouse, keypress, and <a href="https://support.apple.com/guide/voiceover/by-dom-or-group-mode-vo2711/10/mac/15.0">element rotor</a>/tab-based navigation</li>
</ul>
</li>
<li>
<p><strong>Internal Chromium C++ APIs</strong> (within Chromium source code)</p>
<ul>
<li>you can call arbitrary helpers <code>content/browser/devtools/protocol/*_handler.cc</code></li>
<li>you can edit the CDP spec and add commands to call custom C++ APIs <code>third_party/blink/public/devtools_protocol/browser_protocol.pdl</code></li>
<li><em>... anything is possible when the call is coming from inside the house ...</em></li>
</ul>
</li>
</ul>
<h4>Ignoring These for Now</h4>
<ul>
<li>
<p>Classic WebDriver W3C / ChromeDriver REST APIs</p>
<ul>
<li><code>/session/{id}/url</code></li>
<li><code>/session/{id}/element/{eid}/click</code></li>
<li><code>/session/{id}/actions</code></li>
<li>... etc.
These are not actually exposed by any browser directly, rather they are the W3C standardized REST API shape recommended for drivers (ChromeDriver, GeckoDriver, WebKitDriver, selenium) to provide to clients above raw browser calls via CDP/BIDI.</li>
</ul>
</li>
<li>
<p>Webdriver BIDI (websocket)</p>
<ul>
<li>merger of the old REST-API based WebDriver system + CDP in a single websocket, official release delayed for years now, not feature complete yet. check back in 2027</li>
</ul>
</li>
</ul>
<hr>
<h3>🎭 How does Playwright work?</h3>
<p>Playwright achieves multi-languge support by using a client-server model between clients in various languages and a single core implementation that runs as a node.js websocket server.</p>
<p>The playwright node.js relay server accepts standardized "playwright protocol" RPC calls from playwright clients, and then sends out CDP or BIDI calls to the browser to execute them.</p>
<p><img alt="" src="https://docs.monadical.com/uploads/6cb9a368-da39-4444-85b6-d8619f52ba79.png"></p>
<p>This API is elegant in some ways, the "playwright protocol" of commands provides a nicely typed RPC interface and standardizes behavior across languages. Playwright also nicely abstracts lower-level browser ideas like targets, frames, and sessions into simple <code>Page</code> and <code>BrowserContext</code> handles and (usually) manages to keep those handles in sync and not deadlocked across node.js, the browser, and python.</p>
<p>Unfortunately the double RPC through the node.js relay means some state inevitably drifts across the 3 places (and across three different languages and runtimes):</p>
<ul>
<li>live browser</li>
<li>playwright node.js relay process</li>
<li>python client process</li>
</ul>
<p>When a tab crashes in the browser or some operation is performed without focusing a page correctly, there are edge cases where the node.js process can hang indefinitely waiting for a browser reply, meanwhile the python client needs to send the CDP call the browser is expecting in order to proceed.
Currently we have no recourse but to kill -9 and attempt to reconnect to the browser from scratch with a new playwright instance.</p>
<p>There are numerous cases like that only crop up in 1% of cases with specific slow network conditions, but edge cases can quickly drag down overall success scores when we run thousands of steps per eval.</p>
<h4>🩸 Playwright's Sharp Edges</h4>
<p>The playwright happy paths usually work fine, but the devil is in the details:</p>
<ul>
<li><code>fullPage=True</code> screenshot on pages longer than <code>&gt;16,000px</code> high (reliably crashes playwright)</li>
<li><code>alert()</code>/<code>confirm()</code>/<code>onbeforeunload</code> handling</li>
<li>attempting to keyboard/mouse/dialog input without focusing a page</li>
<li>file upload &amp; download handling on remote browsers</li>
<li><code>about:*</code>, <code>chrome://*</code>, <code>chrome-error://</code>, <code>chrome-extension://</code>, PDF tab handling</li>
<li>chrome preferences and enterprise/registry configuration management</li>
<li>crashed tab handling for</li>
</ul>
<p><code>DEBUG=pw:api</code> helps but it only goes so far, at a certain point it doens't make sense to build workarounds around a relay layer that we're fighting to customize and control anyway.</p>
<p>Sometimes when you are forced to thoroughly stretch every nook and cranny of an adapter layer, you start to see the ugly truths of the underlying resource, and you no longer want the "pretty version" as a veil pulled over your eyes, you'd rather see the ugly truth.</p>
<hr>
<h2>🍳 Starting From Scratch: Out of the frying pan and into the fire</h2>
<p>Delivering a reliable experience when so many of the underlying components are inherently unreliable (or actively adversarial) is a monumental engineering challenge.</p>
<p><strong>Did you know there are at least 10 different ways a tab can crash in Chrome?</strong></p>
<ul>
<li>all targets start in a briefly semi-"crashed"/unresponsive state while initial requests are inflight, before the main page JS thread starts</li>
<li>chrome zygote/root process can crash (slow user_data_dir/filesystem io, oom, cpu lag, etc.)</li>
<li>GPU process can crash, there's even a helpful CDP call <code>Browser.crashGpuProcess</code></li>
<li>page renderers can crash due to exceptions raised within chrome source (sigsev, oom, etc.)</li>
<li>page renderers can crash because the page exceeds allowed resources (<code>Page.crash()</code>)</li>
<li>page can spinlock/oom due to infinite loops or crypto mining in its JS main thread</li>
<li>scrolling/input/screenshot before <code>activateTarget</code> focus can crash targets (5sec delayed!)</li>
<li>handling a JS popup before activateTarget or attempting to handle it after already closing</li>
<li>parent frame navigation during child <code>onbeforeunload</code> "are you sure you want to leave?"</li>
<li>any of the above crashes in a nested OOPIF leading to subtle issues in the parent target</li>
</ul>
<p>Playwright handled about half of these well, and presented impassible barrier to solving the other half, so we made the call to switch. But now we're faced with the difficult challenge of solving 100% of these cases ourself.</p>
<p>We take on this challenge with glee, we'd rather lose sleep thinking about these things so you can build reliable apps on top of us 💪.</p>
<hr>
<hr>
<h2>Case Studies: Key Changes in the Migration</h2>
<h3>New CDP-USE Library Providing Python Type Bindings</h3>
<p>A type-safe Python client generator for the Chrome DevTools Protocol (CDP). This library automatically generates Python bindings with full TypeScript-like type safety from the official CDP protocol specifications. It's only shallow type bindings, no complex logic for session management, pages, elements, etc. just 100% direct access.</p>
<blockquote>
<p>Check out the library here: <a href="https://github.com/browser-use/cdp-use">github.com/browser-use/cdp-use</a> ➡️</p>
</blockquote>
<h2>New Event-Driven Architecturre</h2>
<p>We used to only update our view of the world between actions, right before sending the next state summary to the LLM. This makes sense when your assumption is that the page contents will only change as a result of actions, but this is not always true!</p>
<p>Take for example a slowly loading list of results that stream in, an animated carousel, or a bit of JS that runs every 3s. All of these are examples of things that can happen at any point in the agent action/runloop cycle.</p>
<p>We've introduced a new event-driven architecture to better fit the underlying event-driven architecture of CDP. Now we can subscribe to and respond to CDP events, which we set up in "watchdog" services that monitor for various things.</p>
<p>For example, our <code>downloads_watchdog</code> watches for any file downloads that start spontaneously, whether triggered by a click, js executing, or any other method. <code>crash_watchdog.py</code> can now watch for page crashes in a single place by just subscribing to a crash event, and we no longer have to scatter crash detection and retry logic all over the rest of the codebase.</p>
<blockquote>
<p>Check out the library powering this: <a href="https://github.com/browser-use/bubus">github.com/browser-use/bubus</a> ➡️</p>
</blockquote>
<h3>New Extracted Element Handle that works across OOPIFs</h3>
<p>A tab is not a page; it’s a constellation of <strong>targets</strong> (root + cross-origin iframes + workers), each hosting <strong>frames</strong>, each containing <strong>nodes</strong>. Abstract that away and you lose the ability to route input, correlate events, and re-find elements after DOM churn.</p>
<p>We now represent nodes with "super-selectors" that include <code>targetId</code>, <code>frameId</code>, <code>backendNodeId</code>, x/y position, and fallback selectors:</p>
<pre><code>@dataclass(frozen=True)
class EnhancedDOMTreeNode:
    target_id: str                 # which DevTools target owns the renderer
    frame_id: str                  # which frame inside that target
    backend_node_id: int           # renderer-local node handle
    frame_path: Tuple[str, ...]    # root → ... → leaf, useful for sanity checks
    element_index: int             # LLM-friendly stable ordinal for UX
    ...
</code></pre>
<p><strong>Minimal routing helpers</strong></p>
<pre><code>class BrowserSession:
    # caches are kept warm by watchers listening to Target.* and Page.*
    def cdp_client_for_frame(self, frame_id: str):
        target_id = self.target_id_by_frame_id(frame_id)
        return self.cdp_clients_for_target(target_id)[0]  # long-lived session

    def route_to_node(self, ref: EnhancedDOMRef):
        client = self.cdp_client_for_frame(ref.frame_id)
        return client, {"session_id": self.session_id_by_frame_id(ref.frame_id)}
</code></pre>
<p>Outcome: zero guessing about who owns the node or where input should land, even with nested cross-origin iframes and DOM element shifts after actions.</p>
<hr>
<hr>
<h2>Time is a Flat Circle</h2>

<p><img src="https://docs.monadical.com/uploads/1ac29f03-cd02-4f35-8183-a56e289f0ff0.png" width="34%"></p><p>Back in my first startup job in 2014 we were using PhantomJS and some RPC between python and JS, and in a way it's surprising how little has changed since then. Now it's 2025 I'm still dealing with all the same issues: tab crash handling, page load retrying, JS+Python RPC translation issues, python asyncio headaches, mouse movement fuzzing, etc.</p>
<p>Luckily a lot has improved since 2014, and we finally have a big light at end of the tunnel leading out of the manual QA automation mines: AI.</p>
<p>We aim to continue solving all the complexities of browser automation and CDP for our users. Our agents shouldn't have to know the nuances of CDP Targets in order to Get Stuff Done™️, and neither should you.</p>
<p>Try out our new libraries and beta releases with cdp-use and let us know your feedback!</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AWS in 2025: Stuff you think you know that's now wrong (326 pts)]]></title>
            <link>https://www.lastweekinaws.com/blog/aws-in-2025-the-stuff-you-think-you-know-thats-now-wrong/</link>
            <guid>44962844</guid>
            <pubDate>Wed, 20 Aug 2025 15:30:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.lastweekinaws.com/blog/aws-in-2025-the-stuff-you-think-you-know-thats-now-wrong/">https://www.lastweekinaws.com/blog/aws-in-2025-the-stuff-you-think-you-know-thats-now-wrong/</a>, See on <a href="https://news.ycombinator.com/item?id=44962844">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>One of the neat things about AWS is that it’s almost twenty years old. One of the unfortunate things about AWS is… that it’s almost twenty years old. If you’ve been using the platform for a while, it can be hard to notice the pace of change in the underlying “foundational” services. More worryingly, even if you’re not an old saw at AWS scrying, it’s still easy to stumble upon outdated blog posts that speak to the way things used to be, rather than the way they are now. I’ve gathered some of these evolutions that may help you out if you find yourself confused.</p>



<h2 id="h-ec2">EC2</h2>



<p>In EC2, you can now change security groups and IAM roles without shutting the instance down to do it.&nbsp;</p>



<p>You can also resize, attach, or detach EBS volumes from running instances.&nbsp;</p>



<p>As of very recently, you can also force EC2 instances to stop or terminate without waiting for a clean shutdown or a ridiculous timeout, which is great for things you’re never going to spin back up.&nbsp;</p>



<p>They also added the ability to live-migrate instances to other physical hosts; this manifests as it being much rarer nowadays to see an instance degradation notice.&nbsp;</p>



<p>Similarly, instances have gone from a “expect this to disappear out from under you at any time” level of reliability to that being almost unheard of in the modern era.&nbsp;</p>



<p>Spot instances used to be much more of a bidding war / marketplace. These days the shifts are way more gradual, and you get to feel a little bit less like an investment banker watching the numbers move on your dashboards in realtime.&nbsp;</p>



<p>You almost never need dedicated instances for anything. It’s been nearly a decade since they weren’t needed for HIPAA BAAs.&nbsp;</p>



<p>AMI Block Public Access is now default for new accounts, and was turned on for any accounts that hadn’t owned a public AMI for 90 days back in 2023.</p>



<h2 id="h-s3">S3</h2>



<p>S3 isn’t eventually consistent anymore–it’s read-after-write consistent.</p>



<p>You don’t have to randomize the first part of your object keys to ensure they get spread around and avoid hotspots.&nbsp;</p>



<p>ACLs are deprecated and off by default on new buckets.</p>



<p>Block Public Access is now enabled by default on new buckets.</p>



<p>New buckets are transparently encrypted at rest.&nbsp;</p>



<p>Once upon a time Glacier was its own service that had nothing to do with S3. If you look closely (hi, billing data!) you can see vestiges of how this used to be, before the S3 team absorbed it as a series of storage classes.&nbsp;</p>



<p>Similarly, there used to be truly horrifying restore fees for Glacier that were also very hard to predict. That got fixed early on, but the scary stories left scars to the point where I still encounter folks who think restores are both fiendishly expensive as well as confusing. They are not.</p>



<p>Glacier restores are also no longer painfully slow.</p>



<h2 id="h-networking">Networking</h2>



<p>Obviously EC2-classic is gone, but that was a long time ago. One caveat that does come up a lot is that public v4 IP addresses are no longer free; they cost the same as Elastic IP addresses.&nbsp;</p>



<p>VPC peering used to be annoying; now there are better options like Transit Gateway, VPC sharing between accounts, <em>resource</em> sharing between accounts, and Cloud WAN.&nbsp;</p>



<p>VPC Lattice exists as a way for things to talk to one another and basically ignore a bunch of AWS networking gotchas. So does Tailscale.</p>



<p>CloudFront isn’t networking but it has been in the AWS “networking” section for ages so you can deal with it: it used to take ~45 minutes for an update, which was terrible. Nowadays it’s closer to 5 minutes—which still feels like 45 when you’re waiting for CloudFormation to finish a deployment.</p>



<p>ELB Classic (“classic” means “deprecated” in AWS land) used to charge cross AZ data transfer in addition to the load balancer “data has passed through me” fee to send to backends on a different availability zone.&nbsp;</p>



<p>ALBs with automatic zone load balancing do not charge additional data transfer fees for cross-AZ traffic, just their LCU fees. The same is true for Classic Load Balancers, but be warned: Network Load Balancers still charge cross-AZ fees!</p>



<p>Network Load Balancers didn’t used to support security groups, but they do now.&nbsp;</p>



<p>Availability Zones used to be randomized between accounts (my us-east-1a was your us-east-1c); you can now use Resource Access Manager to get zone IDs to ensure you’re aligned between any given accounts.</p>



<h2 id="h-lambda">Lambda</h2>



<p>Originally Lambda had a 5 minute timeout and didn’t support container images. Now you can run them for up to 15 minutes, use Docker images, use shared storage with EFS, give them up to 10GB of RAM (for which CPU scales accordingly and invisibly), and give /tmp up to 10GB of storage instead of&nbsp; just half a gig.</p>



<p>Invoking a Lambda in a VPC is no longer dog-slow.</p>



<p>Lambda cold-starts are no longer as big of a problem as they were originally.</p>



<h2 id="h-efs">EFS</h2>



<p>You no longer have to put a big pile of useless data on an EFS volume to get your IO allotment to something usable; you can adjust that separately from capacity now that they’ve added a second knob.</p>



<h2 id="h-ebs">EBS</h2>



<p>You get full performance on new EBS volumes that are empty. If you create an EBS volume from a snapshot, you’ll want to read the entire disk with dd or similar because it lazy-loads snapshot data from S3 and the first read of a block will be very slow.&nbsp; If you’re in a hurry, there are <a href="https://docs.aws.amazon.com/ebs/latest/userguide/initalize-volume.html">more expensive and complicated options</a>.&nbsp;</p>



<p>EBS volumes can be attached to multiple EC2 instances at the same time (assuming io1), but you almost certainly don’t want to do this.</p>



<h2 id="h-dynamodb">DynamoDB</h2>



<p>You can now have empty fields (the newsletter publication system for “Last Week in AWS” STILL uses a field designator of <code>empty</code> because it predates that change) in an item.&nbsp;</p>



<p>Performance has gotten a lot more reliable, to the point where you don’t need to use support-only tools locked behind NDAs to see what your hot key problems look like.&nbsp;</p>



<p>With pricing changes, you almost certainly want to run everything On Demand unless you’re in a very particular space.</p>



<h2 id="h-cost-savings-vehicles">Cost Savings Vehicles</h2>



<p>Reserved Instances are going away for EC2, slowly but surely. Savings Plans are the path forward. The savings rates on these have diverged, to the point where they no longer offer as deep of a discount as RIs once did, which is offset by their additional flexibility. Pay attention!</p>



<p>EC2 charges by the second now, so spinning one up for five minutes over and over again no longer costs you an hour each time.</p>



<p>The Cost Anomaly Detector has gotten very good at flagging sudden changes in spend patterns. It is free.&nbsp;</p>



<p>The Compute Optimizer also does EBS volumes and other things. Its recommendations are trustworthy, unlike “Trusted” Advisor’s various suggestions.&nbsp;</p>



<p>The Trusted Advisor recommendations remain sketchy and self-contradictory at best, though some of their cost checks can now route through Compute Optimizer.</p>



<h2 id="h-authentication">Authentication</h2>



<p>IAM roles are where permissions should live. IAM users are strictly for legacy applications rather than humans. The IAM Identity Center is the replacement for “AWS SSO” and it’s how humans should engage with their AWS accounts. This does cause some friction at times.</p>



<p>You can have multiple MFA devices configured for the root account.&nbsp;</p>



<p>You also do not need to have root credentials configured for organization member accounts.</p>



<h2 id="h-miscellaneous">Miscellaneous</h2>



<p>us-east-1 is no longer a merrily burning dumpster fire of sadness and regret. This is further true across the board; things are a lot more durable these days, to the point where outages are noteworthy rather than “it’s another given Tuesday afternoon.”</p>



<p>While deprecations remain rare, they’re definitely on the rise; if an AWS service sounds relatively niche or goofy, consider your exodus plan before building atop it. None of the services mentioned thus far qualify.&nbsp;</p>



<p>CloudWatch doesn’t have the last datapoint being super low due to data inconsistency anymore, so if your graphs suddenly drop to zero for the last datapoint your app just shit itself.&nbsp;</p>



<p>You can close AWS accounts in your organization from the root account rather than having to log into each member account as their root user.</p>



<h2 id="h-thanks">Thanks</h2>



<p>My thanks to folks on <a href="https://www.linkedin.com/posts/coquinn_im-working-on-a-blog-post-and-i-want-your-activity-7361205481043881985-UbhA">LinkedIn</a> and <a href="https://bsky.app/profile/quinnypig.com/post/3lvegzxknvc2t">BlueSky</a> for helping come up with some of these. You’ve lived the same pain I have.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Home Depot sued for 'secretly' using facial recognition at self-checkouts (137 pts)]]></title>
            <link>https://petapixel.com/2025/08/20/home-depot-sued-for-secretly-using-facial-recognition-technology-on-self-checkout-cameras/</link>
            <guid>44962771</guid>
            <pubDate>Wed, 20 Aug 2025 15:23:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://petapixel.com/2025/08/20/home-depot-sued-for-secretly-using-facial-recognition-technology-on-self-checkout-cameras/">https://petapixel.com/2025/08/20/home-depot-sued-for-secretly-using-facial-recognition-technology-on-self-checkout-cameras/</a>, See on <a href="https://news.ycombinator.com/item?id=44962771">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
											
<article data-post-id="810642">

    <header>
          
    

        
  </header>
      
  

  <div>
    <div>
      <p><img data-perfmatters-preload="" fetchpriority="high" decoding="async" src="https://petapixel.com/assets/uploads/2025/08/home-depo-800x420.jpg" alt="The Home Depot store exterior with large orange letters spelling &quot;The Home Depot&quot; on a beige brick wall and an orange roof below, set against a cloudy sky." width="800" height="420" srcset="https://petapixel.com/assets/uploads/2025/08/home-depo-800x420.jpg 800w, https://petapixel.com/assets/uploads/2025/08/home-depo-320x168.jpg 320w, https://petapixel.com/assets/uploads/2025/08/home-depo-1536x806.jpg 1536w, https://petapixel.com/assets/uploads/2025/08/home-depo-150x79.jpg 150w, https://petapixel.com/assets/uploads/2025/08/home-depo-300x157.jpg 300w, https://petapixel.com/assets/uploads/2025/08/home-depo-400x209.jpg 400w, https://petapixel.com/assets/uploads/2025/08/home-depo-550x288.jpg 550w, https://petapixel.com/assets/uploads/2025/08/home-depo.jpg 1600w" sizes="(max-width: 800px) 100vw, 800px"></p> <p>A customer has sued Home Depot, claiming the retail giant has been secretly using facial recognition technology on customers with cameras placed at self-checkout kiosks.</p>  <p>Earlier this month, Benjamin Jankowski, a frequent Home Depot shopper, filed a proposed class action lawsuit against the company. He claims the retailer’s self-checkout kiosks use facial recognition technology that scans and collects people’s facial details without their permission.</p> <p><a href="https://assets.law360news.com/2372000/2372764/https-ecf-ilnd-uscourts-gov-doc1-067132951914.pdf" data-wpel-link="external" target="_blank" rel="follow external noopener">In the lawsuit,</a> Jankowski says cameras at the self-checkout captured his face, but the store never told him. <a href="https://www.law360.com/articles/2372764/home-depot-s-self-checkout-kiosks-violate-bipa-suit-says" data-wpel-link="external" target="_blank" rel="follow external noopener">According to a report by <em>Law360</em>,</a> Jankowski noticed a camera and screen at a kiosk during a recent trip to a Chicago Home Depot. While checking out, he says a green box appeared around his face on the screen, which made him believe the system was recording his facial features.</p> <figure id="attachment_810669" aria-describedby="caption-attachment-810669"><img decoding="async" src="https://petapixel.com/assets/uploads/2025/08/Screenshot-2025-08-20-at-12.47.43-668x800.jpg" alt="A person is taking a photo of a self-checkout screen at a store, showing their reflection on a security monitor above a sign advertising a credit card offer to save up to $100 at The Home Depot." width="668" height="800" srcset="https://petapixel.com/assets/uploads/2025/08/Screenshot-2025-08-20-at-12.47.43-668x800.jpg 668w, https://petapixel.com/assets/uploads/2025/08/Screenshot-2025-08-20-at-12.47.43-267x320.jpg 267w, https://petapixel.com/assets/uploads/2025/08/Screenshot-2025-08-20-at-12.47.43.jpg 686w" sizes="(max-width: 668px) 100vw, 668px"><figcaption id="caption-attachment-810669">Benjamin Jankowski shared a selfie of the green box that appeared around his face at the self-checkout kiosk at a Home Depot store. (Credit: <a href="https://assets.law360news.com/2372000/2372764/https-ecf-ilnd-uscourts-gov-doc1-067132951914.pdf" data-wpel-link="external" target="_blank" rel="follow external noopener">court documents</a>)</figcaption></figure> <p>Court filings include a photo Jankowski took showing the green box around his face. He says there were no signs or warnings to let customers know about any facial scanning. At that time, he says, no cashiers were available, leaving self-checkout as his only option.</p> <p>The lawsuit alleges that Home Depot introduced and expanded its “computer vision” technology in 2024 as a way to reduce theft in stores. According to Jankowski, this system captures shoppers’ facial geometry and stores it, in violation of the Illinois Biometric Information Privacy Act (BIPA). That law requires companies to tell people in advance if their biometric data will be collected, explain how it will be used, and obtain written consent. He claims Home Depot failed to do any of these things and has not made its policies about biometric data publicly available.</p>
 <p>Jankowski wants to represent other shoppers who say their facial data was also scanned without consent at one of Home Depot’s 76 Illinois locations. He is asking the court to award $1,000 per negligent violation of BIPA and $5,000 per willful violation.</p> <p>The lawsuit comes after <a href="https://petapixel.com/2023/12/29/rite-aid-banned-from-facial-recognition-tech-after-reckless-use/" data-wpel-link="internal">Rite Aid was banned</a> from using facial recognition technology for five years — after its “reckless” use harmed and harassed customers. Federal regulators say Rite Aid activated the face-scanning technology to identify people captured by surveillance cameras, in hundreds of stores between 2012 and 2020, in hopes of cracking down on shoplifters and other “troublemakers.” But instead, Rite Aid’s facial recognition system collected and stored images of people without their knowledge and generated thousands of false positives.</p>      </div>

          
      

              <div>
          <p>PetaPixel articles may include affiliate links; if you buy something through such a link, PetaPixel may earn a commission.</p>
        </div>
      
    

    
          
      




    <!-- Taboola START -->
    <!-- <div id="taboola-below-article-thumbnails"></div>
    <script type="text/javascript">
      window._taboola = window._taboola || [];
      _taboola.push({
        mode: 'alternating-thumbnails-a',
        container: 'taboola-below-article-thumbnails',
        placement: 'Below Article Thumbnails',
        target_type: 'mix'
      });
    </script> -->
    <!-- Taboola END -->
          
      </div>
</article>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why are anime catgirls blocking my access to the Linux kernel? (544 pts)]]></title>
            <link>https://lock.cmpxchg8b.com/anubis.html</link>
            <guid>44962529</guid>
            <pubDate>Wed, 20 Aug 2025 14:54:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lock.cmpxchg8b.com/anubis.html">https://lock.cmpxchg8b.com/anubis.html</a>, See on <a href="https://news.ycombinator.com/item?id=44962529">Hacker News</a></p>
Couldn't get https://lock.cmpxchg8b.com/anubis.html: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I was curious about spherical helix, ended up making this visualization (760 pts)]]></title>
            <link>https://visualrambling.space/moving-objects-in-3d/</link>
            <guid>44962066</guid>
            <pubDate>Wed, 20 Aug 2025 14:02:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://visualrambling.space/moving-objects-in-3d/">https://visualrambling.space/moving-objects-in-3d/</a>, See on <a href="https://news.ycombinator.com/item?id=44962066">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><span>Loading assets, please wait...</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gemma 3 270M re-implemented in pure PyTorch for local tinkering (348 pts)]]></title>
            <link>https://github.com/rasbt/LLMs-from-scratch/tree/main/ch05/12_gemma3</link>
            <guid>44962059</guid>
            <pubDate>Wed, 20 Aug 2025 14:01:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/rasbt/LLMs-from-scratch/tree/main/ch05/12_gemma3">https://github.com/rasbt/LLMs-from-scratch/tree/main/ch05/12_gemma3</a>, See on <a href="https://news.ycombinator.com/item?id=44962059">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>


                <li>
      

      <div>
          <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      
      <div>
          <p>
            GitHub Copilot
          </p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_spark&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_spark_link_product_navbar&quot;}" href="https://github.com/features/spark">
      
      <div>
          <p>
            GitHub Spark
              <span>
                New
              </span>
          </p><p>
        Build and deploy intelligent apps
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_models&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_models_link_product_navbar&quot;}" href="https://github.com/features/models">
      
      <div>
          <p>
            GitHub Models
              <span>
                New
              </span>
          </p><p>
        Manage and compare prompts
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_advanced_security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_advanced_security_link_product_navbar&quot;}" href="https://github.com/security/advanced-security">
      
      <div>
          <p>
            GitHub Advanced Security
          </p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      
      <div>
          <p>
            Actions
          </p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                    
                </ul>
              </div>
          <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      
      <div>
          <p>
            Codespaces
          </p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      
      <div>
          <p>
            Issues
          </p><p>
        Plan and track work
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      
      <div>
          <p>
            Code Review
          </p><p>
        Manage code changes
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      
      <div>
          <p>
            Discussions
          </p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      
      <div>
          <p>
            Code Search
          </p><p>
        Find more, search less
      </p></div>

    
</a></li>

                </ul>
              </div>
          

      </div>
</li>


                <li>
      

      
</li>


                <li>
      

      <div>
                    <p><span id="resources-explore-heading">Explore</span></p><ul aria-labelledby="resources-explore-heading">
                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;events_amp_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;events_amp_webinars_link_resources_navbar&quot;}" href="https://resources.github.com/">
      Events &amp; Webinars

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ebooks_amp_whitepapers&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ebooks_amp_whitepapers_link_resources_navbar&quot;}" href="https://github.com/resources/whitepapers">
      Ebooks &amp; Whitepapers

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;executive_insights&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;executive_insights_link_resources_navbar&quot;}" href="https://github.com/solutions/executive-insights">
      Executive Insights

    
</a></li>

                </ul>
              </div>
</li>


                <li>
      

      <div>
              <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="https://github.com/sponsors">
      
      <div>
          <p>
            GitHub Sponsors
          </p><p>
        Fund open source developers
      </p></div>

    
</a></li>

                </ul>
              </div>
              <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
          <p>
            The ReadME Project
          </p><p>
        GitHub community articles
      </p></div>

    
</a></li>

                </ul>
              </div>
              
          </div>
</li>


                <li>
      

      <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="https://github.com/enterprise">
      
      <div>
          <p>
            Enterprise platform
          </p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>


                <li>
    <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:rasbt/LLMs-from-scratch" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="r3sblM8b_v6OgIhFtszKIAXLY_WJgc-xI3VS9406_4lb48ut75gCQEbJ16CO2XLQFFTQTZ3PaSulCyOqylIKOg" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="rasbt/LLMs-from-scratch" data-current-org="" data-current-owner="rasbt" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>


            

              <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Ffiles%2Fdisambiguate&amp;source=header-repo&amp;source_repo=rasbt%2FLLMs-from-scratch" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/rasbt/LLMs-from-scratch/tree/main/ch05/12_gemma3&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="bf2fcff9aed94310ce167af31df24c62dd56f480a782197201f7868841115d71" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/files/disambiguate;ref_cta:Sign up;ref_loc:header logged out&quot;}">
                Sign up
              </a></p><p>
    <react-partial-anchor>
      <tool-tip id="tooltip-674a7e52-06d5-4368-8014-e4670ab8961d" for="icon-button-7d1b758b-f3bb-4ed0-bfc4-c2fa4b4bf0ee" popover="manual" data-direction="s" data-type="label" data-view-component="true">Appearance settings</tool-tip>

      <template data-target="react-partial-anchor.template">
        <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/appearance-settings.c82a4db79200850fb016.module.css">

<react-partial partial-name="appearance-settings" data-ssr="false" data-attempted-ssr="false" data-react-profiling="false">
  
  <script type="application/json" data-target="react-partial.embeddedData">{"props":{}}</script>
  <div data-target="react-partial.reactRoot"></div>
</react-partial>


      </template>
    </react-partial-anchor>
  </p>

          </div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sequoia backs Zed (353 pts)]]></title>
            <link>https://zed.dev/blog/sequoia-backs-zed</link>
            <guid>44961172</guid>
            <pubDate>Wed, 20 Aug 2025 12:13:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://zed.dev/blog/sequoia-backs-zed">https://zed.dev/blog/sequoia-backs-zed</a>, See on <a href="https://news.ycombinator.com/item?id=44961172">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p><h2>Sequoia Backs Zed's Vision for Collaborative Coding</h2></p></div><section id="divider-slash"><svg><defs><pattern id=":S3:" width="4" height="4" patternUnits="userSpaceOnUse" patternTransform="rotate(45)"><line x1="0" y1="0" x2="0" y2="4" stroke="currentColor" stroke-width="1.5"></line></pattern></defs><rect width="100%" height="100%" fill="url(#:S3:)"></rect></svg></section><section><article><p>Today we're announcing our $32M Series B led by Sequoia Capital with participation from <a href="https://zed.dev/about#our-investors">our existing investors</a>, bringing our total funding to over $42M.</p>
<p>For the past four years, we've been building the world's fastest IDE, but that's just the foundation for what comes next. Our ultimate vision is a new way to collaborate on software, where conversations about code remain connected to the code itself, instead of being tied to aging snapshots or scattered across different tools. The first step was creating a high-quality editor to serve as the user interface. Now this new investment lets us expand to tackle the next phase of our plan. We're developing a new kind of operation-based version control that incrementally tracks the evolution of your code with edit-level granularity, and we're integrating it into Zed to make collaboration, both with agents and teammates, a first-class part of the coding experience.</p>
<p>Sequoia is excited about our vision, and we're thrilled to have their help making it a reality. We're actively hiring, so if the future we're building excites you, <a href="https://zed.dev/jobs">we'd love to talk</a>.</p>
<h2 id="why-snapshots-constrain-our-conversations-about-code"><a href="#why-snapshots-constrain-our-conversations-about-code" aria-label="Copy heading link"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="4" x2="20" y1="9" y2="9"></line><line x1="4" x2="20" y1="15" y2="15"></line><line x1="10" x2="8" y1="3" y2="21"></line><line x1="16" x2="14" y1="3" y2="21"></line></svg></span><span>Why Snapshots Constrain Our Conversations About Code</span></a></h2>
<p>Real-world software is the product of a never-ending stream of conversations: With yourself, your teammates, and now also with generative AI models. Talking about code helps us understand it, both individually and as a team. But with current tooling, these discussions (and all the insights they generate) seem to exist everywhere except the code itself.</p>
<p>Git lets you collaborate by sharing commits and branches, but between commits you work alone in your own isolated working copy. It's fairly easy to discuss code that's changing in a pull request, but if you want to have a conversation about an arbitrary part of your codebase, you're stuck pasting text into a chat app linking to a particular version of the relevant code in a snapshot. As snapshots become stale and messages scroll into the past, your conversations quickly lose their link to the latest version of the code, and all of their valuable context is lost.</p>
<p>The limitations of snapshots become even more apparent when working with AI agents. While you might manage simple tasks by exchanging comments with an agent on a pull request, real-world development often requires interaction between commits. You need to guide agents, correct their course, and iterate rapidly—all without the overhead of creating snapshots for every exchange. Our existing tools were built for humans trading commits asynchronously, not for instant back-and-forth with synthetic collaborators. Forcing every AI interaction through the commit-based workflow is like trying to have a conversation through a fax machine.</p>
<p>Today's AI editors patch over these limitations, but miss the core problem: collaboration is continuous conversation, not discrete commits. You can't snapshot every clarification, every pivot, every back-and-forth that shapes the code. We're building a system that captures this entire dialogue: every edit, every discussion, linked durably to the code as it evolves. This frees collaboration from the rigid structure of commits.</p>
<h2 id="introducing-deltadb-operation-level-version-control"><a href="#introducing-deltadb-operation-level-version-control" aria-label="Copy heading link"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="4" x2="20" y1="9" y2="9"></line><line x1="4" x2="20" y1="15" y2="15"></line><line x1="10" x2="8" y1="3" y2="21"></line><line x1="16" x2="14" y1="3" y2="21"></line></svg></span><span>Introducing DeltaDB: Operation-Level Version Control</span></a></h2>
<p>Our vision is turn your IDE into a collaborative workspace where humans and AI agents work together across a range of time scales, with every insight preserved and linked to the code forever. To make this possible, we're building DeltaDB: a new kind of version control that tracks every operation, not just commits.</p>
<p>DeltaDB uses <a href="https://zed.dev/blog/crdts">CRDTs</a> to incrementally record and synchronize changes as they happen. Its designed to interoperate with Git, but its operation-based design supports real-time interactions that aren't supported by Git's snapshots. For async interactions, fine-grained change tracking also enables character-level permalinks that survive any code transformation, so we can anchor our interactions to arbitrary locations in the codebase, not just to snapshots of recently-changed code.</p>
<p>Zed's goal is to make your codebase a living, navigable history of how your software evolved, where discussions with humans and AI agents are durably linked to the code they reference and always up-to-date. It's an evolution beyond version control that incorporates not just the code itself, but also the background information of how and why the code got into a particular state—context that AI agents can query to make more informed edits, understanding the assumptions, constraints, and decisions that shaped the existing code.</p>
<p>Picture a new engineer facing a production stack trace in Zed. They highlight a problematic line, like an <code>unwrap</code> that caused a crash, and see every related discussion: why the function was written or what an AI agent assumed about an invariant. They ping the responsible human, sparking a quick chat that turns into an audio call, all indexed to the exact code spot, creating a shared, revisitable record without leaving the codebase.</p>
<p><a href="https://github.com/zed-industries/zed">Zed is open-source</a> with an <a href="https://zed.dev/pricing">optional paid offering</a>, and we plan to do the same with DeltaDB: build it, open-source it, and offer an optional paid service. We'll share more details as development progresses; this is just the beginning of reimagining how developers work together, both with AI agents and their team.</p>
<h2 id="help-us-build-a-collaborative-future"><a href="#help-us-build-a-collaborative-future" aria-label="Copy heading link"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="4" x2="20" y1="9" y2="9"></line><line x1="4" x2="20" y1="15" y2="15"></line><line x1="10" x2="8" y1="3" y2="21"></line><line x1="16" x2="14" y1="3" y2="21"></line></svg></span><span>Help Us Build a Collaborative Future</span></a></h2>
<p>We have the vision, technical foundation, and funding to fundamentally improve how developers collaborate. Now we just need you. We’re hiring across engineering and product design; whether you're interested in collaboration in the IDE, core Zed projects like cross-OS font rendering and GPU shaders, or improving the world's best <a href="https://zed.dev/edit-prediction">open-source open-data language model for Edit Prediction</a>, there's room for you here. <a href="https://zed.dev/jobs">Join us</a> to shape the future of software development.</p><hr><div><h3 id="looking-for-a-better-editor">Looking for a better editor?</h3>
<p>You can try Zed today on macOS or Linux. <a href="https://zed.dev/download">Download now</a>!</p><hr><h3 id="we-are-hiring">We are hiring!</h3>
<p>If you're passionate about the topics we cover on our blog, please consider <a href="https://zed.dev/jobs">joining our team</a> to help us ship the future of software development.</p></div></article></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Project management system for Claude Code (157 pts)]]></title>
            <link>https://github.com/automazeio/ccpm</link>
            <guid>44960594</guid>
            <pubDate>Wed, 20 Aug 2025 10:32:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/automazeio/ccpm">https://github.com/automazeio/ccpm</a>, See on <a href="https://news.ycombinator.com/item?id=44960594">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Claude Code PM</h2><a id="user-content-claude-code-pm" aria-label="Permalink: Claude Code PM" href="#claude-code-pm"></a></p>
<p dir="auto"><a href="https://automaze.io/" rel="nofollow"><img src="https://camo.githubusercontent.com/3f097ca7378f5f21e6e21647214117600197aa77a60d5babf71263241b134e34/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f42792d6175746f6d617a652e696f2d346233626166" alt="Automaze" data-canonical-src="https://img.shields.io/badge/By-automaze.io-4b3baf"></a>
&nbsp;
<a href="https://github.com/automazeio/ccpm/blob/main/README.md"><img src="https://camo.githubusercontent.com/2b73c441a6a9549938b49af8f7886485d786a63b480d7102c26728668b102e89/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2b2d436c61756465253230436f64652d643937373537" alt="Claude Code" data-canonical-src="https://img.shields.io/badge/+-Claude%20Code-d97757"></a>
<a href="https://github.com/automazeio/ccpm"><img src="https://camo.githubusercontent.com/cc59c205e25c1ed298dd1dac9c3606c74c6fb3668b7671225838e9373860fa32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2b2d4769744875622532304973737565732d316632333238" alt="GitHub Issues" data-canonical-src="https://img.shields.io/badge/+-GitHub%20Issues-1f2328"></a>
&nbsp;
<a href="https://github.com/automazeio/ccpm/blob/main/LICENSE"><img src="https://camo.githubusercontent.com/403da04ef74d3da342bd833f5162bfbe3c414520e9bb6768f7ddc448aff30952/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d323861373435" alt="MIT License" data-canonical-src="https://img.shields.io/badge/License-MIT-28a745"></a>
&nbsp;
<a href="http://x.com/intent/follow?screen_name=aroussi" rel="nofollow"><img src="https://camo.githubusercontent.com/c911d48be3fbcf5efc9f80ab728f67291a2c8222986bba24f1a66031395647a8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539442539352538462d4061726f757373692d316339626630" alt="Follow on 𝕏" data-canonical-src="https://img.shields.io/badge/%F0%9D%95%8F-@aroussi-1c9bf0"></a>
&nbsp;
<a href="https://github.com/automazeio/ccpm"><img src="https://camo.githubusercontent.com/5b7c81fae61295e50e36089ff6597f478f13e7620196f72902eee311831cfabf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539382538352d53746172253230746869732532307265706f2d653762313062" alt="Star this repo" data-canonical-src="https://img.shields.io/badge/%E2%98%85-Star%20this%20repo-e7b10b"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Claude Code workflow to ship <del>faster</del> <em>better</em> using spec-driven development, GitHub issues, Git worktrees, and mutiple AI agents running in parallel.</h3><a id="user-content-claude-code-workflow-to-ship-faster-better-using-spec-driven-development-github-issues-git-worktrees-and-mutiple-ai-agents-running-in-parallel" aria-label="Permalink: Claude Code workflow to ship fasterbetter using spec-driven development, GitHub issues, Git worktrees, and mutiple AI agents running in parallel." href="#claude-code-workflow-to-ship-faster-better-using-spec-driven-development-github-issues-git-worktrees-and-mutiple-ai-agents-running-in-parallel"></a></p>
<p dir="auto">Stop losing context. Stop blocking on tasks. Stop shipping bugs. This battle-tested system turns PRDs into epics, epics into GitHub issues, and issues into production code – with full traceability at every step.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/automazeio/ccpm/blob/main/screenshot.webp"><img src="https://github.com/automazeio/ccpm/raw/main/screenshot.webp" alt="Claude Code PM"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ul dir="auto">
<li><a href="#background">Background</a></li>
<li><a href="#the-workflow">The Workflow</a></li>
<li><a href="#what-makes-this-different">What Makes This Different?</a></li>
<li><a href="#why-github-issues">Why GitHub Issues?</a></li>
<li><a href="#core-principle-no-vibe-coding">Core Principle: No Vibe Coding</a></li>
<li><a href="#system-architecture">System Architecture</a></li>
<li><a href="#workflow-phases">Workflow Phases</a></li>
<li><a href="#command-reference">Command Reference</a></li>
<li><a href="#the-parallel-execution-system">The Parallel Execution System</a></li>
<li><a href="#key-features--benefits">Key Features &amp; Benefits</a></li>
<li><a href="#proven-results">Proven Results</a></li>
<li><a href="#example-flow">Example Flow</a></li>
<li><a href="#get-started-now">Get Started Now</a></li>
<li><a href="#local-vs-remote">Local vs Remote</a></li>
<li><a href="#technical-notes">Technical Notes</a></li>
<li><a href="#support-this-project">Support This Project</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Background</h2><a id="user-content-background" aria-label="Permalink: Background" href="#background"></a></p>
<p dir="auto">Every team struggles with the same problems:</p>
<ul dir="auto">
<li><strong>Context evaporates</strong> between sessions, forcing constant re-discovery</li>
<li><strong>Parallel work creates conflicts</strong> when multiple developers touch the same code</li>
<li><strong>Requirements drift</strong> as verbal decisions override written specs</li>
<li><strong>Progress becomes invisible</strong> until the very end</li>
</ul>
<p dir="auto">This system solves all of that.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">The Workflow</h2><a id="user-content-the-workflow" aria-label="Permalink: The Workflow" href="#the-workflow"></a></p>
<section data-identity="9cd7609b-0088-4264-80ec-8960eabf6620" data-host="https://viewscreen.githubusercontent.com" data-src="https://viewscreen.githubusercontent.com/markdown/mermaid?docs_host=https%3A%2F%2Fdocs.github.com" data-type="mermaid" aria-label="mermaid rendered output container">
  <div dir="auto" data-json="{&quot;data&quot;:&quot;graph LR\n    A[PRD Creation] --&amp;gt; B[Epic Planning]\n    B --&amp;gt; C[Task Decomposition]\n    C --&amp;gt; D[GitHub Sync]\n    D --&amp;gt; E[Parallel Execution]\n&quot;}" data-plain="graph LR
    A[PRD Creation] --> B[Epic Planning]
    B --> C[Task Decomposition]
    C --> D[GitHub Sync]
    D --> E[Parallel Execution]
">
      <pre lang="mermaid" aria-label="Raw mermaid code">graph LR
    A[PRD Creation] --&gt; B[Epic Planning]
    B --&gt; C[Task Decomposition]
    C --&gt; D[GitHub Sync]
    D --&gt; E[Parallel Execution]
</pre>
    </div>
  <span role="presentation">
    <span data-view-component="true">
      <span>Loading</span>
</span>
  </span>
</section>

<p dir="auto"><h3 tabindex="-1" dir="auto">See It In Action (60 seconds)</h3><a id="user-content-see-it-in-action-60-seconds" aria-label="Permalink: See It In Action (60 seconds)" href="#see-it-in-action-60-seconds"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Create a comprehensive PRD through guided brainstorming
/pm:prd-new memory-system

# Transform PRD into a technical epic with task breakdown
/pm:prd-parse memory-system

# Push to GitHub and start parallel execution
/pm:epic-oneshot memory-system
/pm:issue-start 1235"><pre><span><span>#</span> Create a comprehensive PRD through guided brainstorming</span>
/pm:prd-new memory-system

<span><span>#</span> Transform PRD into a technical epic with task breakdown</span>
/pm:prd-parse memory-system

<span><span>#</span> Push to GitHub and start parallel execution</span>
/pm:epic-oneshot memory-system
/pm:issue-start 1235</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">What Makes This Different?</h2><a id="user-content-what-makes-this-different" aria-label="Permalink: What Makes This Different?" href="#what-makes-this-different"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Traditional Development</th>
<th>Claude Code PM System</th>
</tr>
</thead>
<tbody>
<tr>
<td>Context lost between sessions</td>
<td><strong>Persistent context</strong> across all work</td>
</tr>
<tr>
<td>Serial task execution</td>
<td><strong>Parallel agents</strong> on independent tasks</td>
</tr>
<tr>
<td>"Vibe coding" from memory</td>
<td><strong>Spec-driven</strong> with full traceability</td>
</tr>
<tr>
<td>Progress hidden in branches</td>
<td><strong>Transparent audit trail</strong> in GitHub</td>
</tr>
<tr>
<td>Manual task coordination</td>
<td><strong>Intelligent prioritization</strong> with <code>/pm:next</code></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Why GitHub Issues?</h2><a id="user-content-why-github-issues" aria-label="Permalink: Why GitHub Issues?" href="#why-github-issues"></a></p>
<p dir="auto">Most Claude Code workflows operate in isolation – a single developer working with AI in their local environment. This creates a fundamental problem: <strong>AI-assisted development becomes a silo</strong>.</p>
<p dir="auto">By using GitHub Issues as our database, we unlock something powerful:</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🤝 <strong>True Team Collaboration</strong></h3><a id="user-content--true-team-collaboration" aria-label="Permalink: 🤝 True Team Collaboration" href="#-true-team-collaboration"></a></p>
<ul dir="auto">
<li>Multiple Claude instances can work on the same project simultaneously</li>
<li>Human developers see AI progress in real-time through issue comments</li>
<li>Team members can jump in anywhere – the context is always visible</li>
<li>Managers get transparency without interrupting flow</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔄 <strong>Seamless Human-AI Handoffs</strong></h3><a id="user-content--seamless-human-ai-handoffs" aria-label="Permalink: 🔄 Seamless Human-AI Handoffs" href="#-seamless-human-ai-handoffs"></a></p>
<ul dir="auto">
<li>AI can start a task, human can finish it (or vice versa)</li>
<li>Progress updates are visible to everyone, not trapped in chat logs</li>
<li>Code reviews happen naturally through PR comments</li>
<li>No "what did the AI do?" meetings</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">📈 <strong>Scalable Beyond Solo Work</strong></h3><a id="user-content--scalable-beyond-solo-work" aria-label="Permalink: 📈 Scalable Beyond Solo Work" href="#-scalable-beyond-solo-work"></a></p>
<ul dir="auto">
<li>Add team members without onboarding friction</li>
<li>Multiple AI agents working in parallel on different issues</li>
<li>Distributed teams stay synchronized automatically</li>
<li>Works with existing GitHub workflows and tools</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">🎯 <strong>Single Source of Truth</strong></h3><a id="user-content--single-source-of-truth" aria-label="Permalink: 🎯 Single Source of Truth" href="#-single-source-of-truth"></a></p>
<ul dir="auto">
<li>No separate databases or project management tools</li>
<li>Issue state is the project state</li>
<li>Comments are the audit trail</li>
<li>Labels provide organization</li>
</ul>
<p dir="auto">This isn't just a project management system – it's a <strong>collaboration protocol</strong> that lets humans and AI agents work together at scale, using infrastructure your team already trusts.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Core Principle: No Vibe Coding</h2><a id="user-content-core-principle-no-vibe-coding" aria-label="Permalink: Core Principle: No Vibe Coding" href="#core-principle-no-vibe-coding"></a></p>
<blockquote>
<p dir="auto"><strong>Every line of code must trace back to a specification.</strong></p>
</blockquote>
<p dir="auto">We follow a strict 5-phase discipline:</p>
<ol dir="auto">
<li><strong>🧠 Brainstorm</strong> - Think deeper than comfortable</li>
<li><strong>📝 Document</strong> - Write specs that leave nothing to interpretation</li>
<li><strong>📐 Plan</strong> - Architect with explicit technical decisions</li>
<li><strong>⚡ Execute</strong> - Build exactly what was specified</li>
<li><strong>📊 Track</strong> - Maintain transparent progress at every step</li>
</ol>
<p dir="auto">No shortcuts. No assumptions. No regrets.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">System Architecture</h2><a id="user-content-system-architecture" aria-label="Permalink: System Architecture" href="#system-architecture"></a></p>
<div data-snippet-clipboard-copy-content=".claude/
├── CLAUDE.md          # Always-on instructions (copy content to your project's CLAUDE.md file)
├── agents/            # Task-oriented agents (for context preservation)
├── commands/          # Command definitions
│   ├── context/       # Create, update, and prime context
│   ├── pm/            # ← Project management commands (this system)
│   └── testing/       # Prime and execute tests (edit this)
├── context/           # Project-wide context files
├── epics/             # ← PM's local workspace (place in .gitignore)
│   └── [epic-name]/   # Epic and related tasks
│       ├── epic.md    # Implementation plan
│       ├── [#].md     # Individual task files
│       └── updates/   # Work-in-progress updates
├── prds/              # ← PM's PRD files
├── rules/             # Place any rule files you'd like to reference here
└── scripts/           # Place any script files you'd like to use here"><pre><code>.claude/
├── CLAUDE.md          # Always-on instructions (copy content to your project's CLAUDE.md file)
├── agents/            # Task-oriented agents (for context preservation)
├── commands/          # Command definitions
│   ├── context/       # Create, update, and prime context
│   ├── pm/            # ← Project management commands (this system)
│   └── testing/       # Prime and execute tests (edit this)
├── context/           # Project-wide context files
├── epics/             # ← PM's local workspace (place in .gitignore)
│   └── [epic-name]/   # Epic and related tasks
│       ├── epic.md    # Implementation plan
│       ├── [#].md     # Individual task files
│       └── updates/   # Work-in-progress updates
├── prds/              # ← PM's PRD files
├── rules/             # Place any rule files you'd like to reference here
└── scripts/           # Place any script files you'd like to use here
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Workflow Phases</h2><a id="user-content-workflow-phases" aria-label="Permalink: Workflow Phases" href="#workflow-phases"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">1. Product Planning Phase</h3><a id="user-content-1-product-planning-phase" aria-label="Permalink: 1. Product Planning Phase" href="#1-product-planning-phase"></a></p>

<p dir="auto">Launches comprehensive brainstorming to create a Product Requirements Document capturing vision, user stories, success criteria, and constraints.</p>
<p dir="auto"><strong>Output:</strong> <code>.claude/prds/feature-name.md</code></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">2. Implementation Planning Phase</h3><a id="user-content-2-implementation-planning-phase" aria-label="Permalink: 2. Implementation Planning Phase" href="#2-implementation-planning-phase"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="/pm:prd-parse feature-name"><pre>/pm:prd-parse feature-name</pre></div>
<p dir="auto">Transforms PRD into a technical implementation plan with architectural decisions, technical approach, and dependency mapping.</p>
<p dir="auto"><strong>Output:</strong> <code>.claude/epics/feature-name/epic.md</code></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">3. Task Decomposition Phase</h3><a id="user-content-3-task-decomposition-phase" aria-label="Permalink: 3. Task Decomposition Phase" href="#3-task-decomposition-phase"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="/pm:epic-decompose feature-name"><pre>/pm:epic-decompose feature-name</pre></div>
<p dir="auto">Breaks epic into concrete, actionable tasks with acceptance criteria, effort estimates, and parallelization flags.</p>
<p dir="auto"><strong>Output:</strong> <code>.claude/epics/feature-name/[task].md</code></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">4. GitHub Synchronization</h3><a id="user-content-4-github-synchronization" aria-label="Permalink: 4. GitHub Synchronization" href="#4-github-synchronization"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="/pm:epic-sync feature-name
# Or for confident workflows:
/pm:epic-oneshot feature-name"><pre>/pm:epic-sync feature-name
<span><span>#</span> Or for confident workflows:</span>
/pm:epic-oneshot feature-name</pre></div>
<p dir="auto">Pushes epic and tasks to GitHub as issues with appropriate labels and relationships.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">5. Execution Phase</h3><a id="user-content-5-execution-phase" aria-label="Permalink: 5. Execution Phase" href="#5-execution-phase"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="/pm:issue-start 1234  # Launch specialized agent
/pm:issue-sync 1234   # Push progress updates
/pm:next             # Get next priority task"><pre>/pm:issue-start 1234  <span><span>#</span> Launch specialized agent</span>
/pm:issue-sync 1234   <span><span>#</span> Push progress updates</span>
/pm:next             <span><span>#</span> Get next priority task</span></pre></div>
<p dir="auto">Specialized agents implement tasks while maintaining progress updates and an audit trail.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Command Reference</h2><a id="user-content-command-reference" aria-label="Permalink: Command Reference" href="#command-reference"></a></p>
<div dir="auto"><p dir="auto">Tip</p><p dir="auto">Type <code>/pm:help</code> for a concise command summary</p>
</div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Initial Setup</h3><a id="user-content-initial-setup" aria-label="Permalink: Initial Setup" href="#initial-setup"></a></p>
<ul dir="auto">
<li><code>/pm:init</code> - Install dependencies and configure GitHub</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">PRD Commands</h3><a id="user-content-prd-commands" aria-label="Permalink: PRD Commands" href="#prd-commands"></a></p>
<ul dir="auto">
<li><code>/pm:prd-new</code> - Launch brainstorming for new product requirement</li>
<li><code>/pm:prd-parse</code> - Convert PRD to implementation epic</li>
<li><code>/pm:prd-list</code> - List all PRDs</li>
<li><code>/pm:prd-edit</code> - Edit existing PRD</li>
<li><code>/pm:prd-status</code> - Show PRD implementation status</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Epic Commands</h3><a id="user-content-epic-commands" aria-label="Permalink: Epic Commands" href="#epic-commands"></a></p>
<ul dir="auto">
<li><code>/pm:epic-decompose</code> - Break epic into task files</li>
<li><code>/pm:epic-sync</code> - Push epic and tasks to GitHub</li>
<li><code>/pm:epic-oneshot</code> - Decompose and sync in one command</li>
<li><code>/pm:epic-list</code> - List all epics</li>
<li><code>/pm:epic-show</code> - Display epic and its tasks</li>
<li><code>/pm:epic-close</code> - Mark epic as complete</li>
<li><code>/pm:epic-edit</code> - Edit epic details</li>
<li><code>/pm:epic-refresh</code> - Update epic progress from tasks</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Issue Commands</h3><a id="user-content-issue-commands" aria-label="Permalink: Issue Commands" href="#issue-commands"></a></p>
<ul dir="auto">
<li><code>/pm:issue-show</code> - Display issue and sub-issues</li>
<li><code>/pm:issue-status</code> - Check issue status</li>
<li><code>/pm:issue-start</code> - Begin work with specialized agent</li>
<li><code>/pm:issue-sync</code> - Push updates to GitHub</li>
<li><code>/pm:issue-close</code> - Mark issue as complete</li>
<li><code>/pm:issue-reopen</code> - Reopen closed issue</li>
<li><code>/pm:issue-edit</code> - Edit issue details</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Workflow Commands</h3><a id="user-content-workflow-commands" aria-label="Permalink: Workflow Commands" href="#workflow-commands"></a></p>
<ul dir="auto">
<li><code>/pm:next</code> - Show next priority issue with epic context</li>
<li><code>/pm:status</code> - Overall project dashboard</li>
<li><code>/pm:standup</code> - Daily standup report</li>
<li><code>/pm:blocked</code> - Show blocked tasks</li>
<li><code>/pm:in-progress</code> - List work in progress</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Sync Commands</h3><a id="user-content-sync-commands" aria-label="Permalink: Sync Commands" href="#sync-commands"></a></p>
<ul dir="auto">
<li><code>/pm:sync</code> - Full bidirectional sync with GitHub</li>
<li><code>/pm:import</code> - Import existing GitHub issues</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Maintenance Commands</h3><a id="user-content-maintenance-commands" aria-label="Permalink: Maintenance Commands" href="#maintenance-commands"></a></p>
<ul dir="auto">
<li><code>/pm:validate</code> - Check system integrity</li>
<li><code>/pm:clean</code> - Archive completed work</li>
<li><code>/pm:search</code> - Search across all content</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">The Parallel Execution System</h2><a id="user-content-the-parallel-execution-system" aria-label="Permalink: The Parallel Execution System" href="#the-parallel-execution-system"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Issues Aren't Atomic</h3><a id="user-content-issues-arent-atomic" aria-label="Permalink: Issues Aren't Atomic" href="#issues-arent-atomic"></a></p>
<p dir="auto">Traditional thinking: One issue = One developer = One task</p>
<p dir="auto"><strong>Reality: One issue = Multiple parallel work streams</strong></p>
<p dir="auto">A single "Implement user authentication" issue isn't one task. It's...</p>
<ul dir="auto">
<li><strong>Agent 1</strong>: Database tables and migrations</li>
<li><strong>Agent 2</strong>: Service layer and business logic</li>
<li><strong>Agent 3</strong>: API endpoints and middleware</li>
<li><strong>Agent 4</strong>: UI components and forms</li>
<li><strong>Agent 5</strong>: Test suites and documentation</li>
</ul>
<p dir="auto">All running <strong>simultaneously</strong> in the same worktree.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Math of Velocity</h3><a id="user-content-the-math-of-velocity" aria-label="Permalink: The Math of Velocity" href="#the-math-of-velocity"></a></p>
<p dir="auto"><strong>Traditional Approach:</strong></p>
<ul dir="auto">
<li>Epic with 3 issues</li>
<li>Sequential execution</li>
</ul>
<p dir="auto"><strong>This System:</strong></p>
<ul dir="auto">
<li>Same epic with 3 issues</li>
<li>Each issue splits into ~4 parallel streams</li>
<li><strong>12 agents working simultaneously</strong></li>
</ul>
<p dir="auto">We're not assigning agents to issues. We're <strong>leveraging multiple agents</strong> to ship faster.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Context Optimization</h3><a id="user-content-context-optimization" aria-label="Permalink: Context Optimization" href="#context-optimization"></a></p>
<p dir="auto"><strong>Traditional single-thread approach:</strong></p>
<ul dir="auto">
<li>Main conversation carries ALL the implementation details</li>
<li>Context window fills with database schemas, API code, UI components</li>
<li>Eventually hits context limits and loses coherence</li>
</ul>
<p dir="auto"><strong>Parallel agent approach:</strong></p>
<ul dir="auto">
<li>Main thread stays clean and strategic</li>
<li>Each agent handles its own context in isolation</li>
<li>Implementation details never pollute the main conversation</li>
<li>Main thread maintains oversight without drowning in code</li>
</ul>
<p dir="auto">Your main conversation becomes the conductor, not the orchestra.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">GitHub vs Local: Perfect Separation</h3><a id="user-content-github-vs-local-perfect-separation" aria-label="Permalink: GitHub vs Local: Perfect Separation" href="#github-vs-local-perfect-separation"></a></p>
<p dir="auto"><strong>What GitHub Sees:</strong></p>
<ul dir="auto">
<li>Clean, simple issues</li>
<li>Progress updates</li>
<li>Completion status</li>
</ul>
<p dir="auto"><strong>What Actually Happens Locally:</strong></p>
<ul dir="auto">
<li>Issue #1234 explodes into 5 parallel agents</li>
<li>Agents coordinate through Git commits</li>
<li>Complex orchestration hidden from view</li>
</ul>
<p dir="auto">GitHub doesn't need to know HOW the work got done – just that it IS done.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Command Flow</h3><a id="user-content-the-command-flow" aria-label="Permalink: The Command Flow" href="#the-command-flow"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Analyze what can be parallelized
/pm:issue-analyze 1234

# Launch the swarm
/pm:epic-start memory-system

# Watch the magic
# 12 agents working across 3 issues
# All in: ../epic-memory-system/

# One clean merge when done
/pm:epic-merge memory-system"><pre><span><span>#</span> Analyze what can be parallelized</span>
/pm:issue-analyze 1234

<span><span>#</span> Launch the swarm</span>
/pm:epic-start memory-system

<span><span>#</span> Watch the magic</span>
<span><span>#</span> 12 agents working across 3 issues</span>
<span><span>#</span> All in: ../epic-memory-system/</span>

<span><span>#</span> One clean merge when done</span>
/pm:epic-merge memory-system</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Key Features &amp; Benefits</h2><a id="user-content-key-features--benefits" aria-label="Permalink: Key Features &amp; Benefits" href="#key-features--benefits"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🧠 <strong>Context Preservation</strong></h3><a id="user-content--context-preservation" aria-label="Permalink: 🧠 Context Preservation" href="#-context-preservation"></a></p>
<p dir="auto">Never lose project state again. Each epic maintains its own context, agents read from <code>.claude/context/</code>, and updates locally before syncing.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">⚡ <strong>Parallel Execution</strong></h3><a id="user-content--parallel-execution" aria-label="Permalink: ⚡ Parallel Execution" href="#-parallel-execution"></a></p>
<p dir="auto">Ship faster with multiple agents working simultaneously. Tasks marked <code>parallel: true</code> enable conflict-free concurrent development.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔗 <strong>GitHub Native</strong></h3><a id="user-content--github-native" aria-label="Permalink: 🔗 GitHub Native" href="#-github-native"></a></p>
<p dir="auto">Works with tools your team already uses. Issues are the source of truth, comments provide history, and there is no dependency on the Projects API.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🤖 <strong>Agent Specialization</strong></h3><a id="user-content--agent-specialization" aria-label="Permalink: 🤖 Agent Specialization" href="#-agent-specialization"></a></p>
<p dir="auto">Right tool for every job. Different agents for UI, API, and database work. Each reads requirements and posts updates automatically.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">📊 <strong>Full Traceability</strong></h3><a id="user-content--full-traceability" aria-label="Permalink: 📊 Full Traceability" href="#-full-traceability"></a></p>
<p dir="auto">Every decision is documented. PRD → Epic → Task → Issue → Code → Commit. Complete audit trail from idea to production.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🚀 <strong>Developer Productivity</strong></h3><a id="user-content--developer-productivity" aria-label="Permalink: 🚀 Developer Productivity" href="#-developer-productivity"></a></p>
<p dir="auto">Focus on building, not managing. Intelligent prioritization, automatic context loading, and incremental sync when ready.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Proven Results</h2><a id="user-content-proven-results" aria-label="Permalink: Proven Results" href="#proven-results"></a></p>
<p dir="auto">Teams using this system report:</p>
<ul dir="auto">
<li><strong>89% less time</strong> lost to context switching – you'll use <code>/compact</code> and <code>/clear</code> a LOT less</li>
<li><strong>5-8 parallel tasks</strong> vs 1 previously – editing/testing multiple files at the same time</li>
<li><strong>75% reduction</strong> in bug rates – due to the breaking down features into detailed tasks</li>
<li><strong>Up to 3x faster</strong> feature delivery – based on feature size and complexity</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example Flow</h2><a id="user-content-example-flow" aria-label="Permalink: Example Flow" href="#example-flow"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Start a new feature
/pm:prd-new memory-system

# Review and refine the PRD...

# Create implementation plan
/pm:prd-parse memory-system

# Review the epic...

# Break into tasks and push to GitHub
/pm:epic-oneshot memory-system
# Creates issues: #1234 (epic), #1235, #1236 (tasks)

# Start development on a task
/pm:issue-start 1235
# Agent begins work, maintains local progress

# Sync progress to GitHub
/pm:issue-sync 1235
# Updates posted as issue comments

# Check overall status
/pm:epic-show memory-system"><pre><span><span>#</span> Start a new feature</span>
/pm:prd-new memory-system

<span><span>#</span> Review and refine the PRD...</span>

<span><span>#</span> Create implementation plan</span>
/pm:prd-parse memory-system

<span><span>#</span> Review the epic...</span>

<span><span>#</span> Break into tasks and push to GitHub</span>
/pm:epic-oneshot memory-system
<span><span>#</span> Creates issues: #1234 (epic), #1235, #1236 (tasks)</span>

<span><span>#</span> Start development on a task</span>
/pm:issue-start 1235
<span><span>#</span> Agent begins work, maintains local progress</span>

<span><span>#</span> Sync progress to GitHub</span>
/pm:issue-sync 1235
<span><span>#</span> Updates posted as issue comments</span>

<span><span>#</span> Check overall status</span>
/pm:epic-show memory-system</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Get Started Now</h2><a id="user-content-get-started-now" aria-label="Permalink: Get Started Now" href="#get-started-now"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Quick Setup (2 minutes)</h3><a id="user-content-quick-setup-2-minutes" aria-label="Permalink: Quick Setup (2 minutes)" href="#quick-setup-2-minutes"></a></p>
<ol dir="auto">
<li>
<p dir="auto"><strong>Clone this repository into your project</strong>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd path/to/your/project/
git clone https://github.com/automazeio/ccpm.git .
cd ccpm/"><pre><span>cd</span> path/to/your/project/
git clone https://github.com/automazeio/ccpm.git <span>.</span>
<span>cd</span> ccpm/</pre></div>
<blockquote>
<p dir="auto">If you already have a <code>.claude</code> directory, clone this repository to a different directory and copy the contents of the cloned <code>.claude</code> directory to your project's <code>.claude</code> directory.</p>
</blockquote>
</li>
<li>
<p dir="auto"><strong>Initialize the PM system</strong>:</p>

<p dir="auto">This command will:</p>
<ul dir="auto">
<li>Install GitHub CLI (if needed)</li>
<li>Authenticate with GitHub</li>
<li>Install <a href="https://github.com/yahsan2/gh-sub-issue">gh-sub-issue extension</a> for proper parent-child relationships</li>
<li>Create required directories</li>
<li>Update .gitignore</li>
</ul>
</li>
<li>
<p dir="auto"><strong>Create <code>CLAUDE.md</code></strong> with your repository information</p>
<div dir="auto" data-snippet-clipboard-copy-content="/init include rules from .claude/CLAUDE.md"><pre>/init include rules from .claude/CLAUDE.md</pre></div>
<blockquote>
<p dir="auto">If you already have a <code>CLAUDE.md</code> file, run: <code>/re-init</code> to update it with important rules from <code>.claude/CLAUDE.md</code>.</p>
</blockquote>
</li>
<li>
<p dir="auto"><strong>Prime the system</strong>:</p>

</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Start Your First Feature</h3><a id="user-content-start-your-first-feature" aria-label="Permalink: Start Your First Feature" href="#start-your-first-feature"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="/pm:prd-new your-feature-name"><pre>/pm:prd-new your-feature-name</pre></div>
<p dir="auto">Watch as structured planning transforms into shipped code.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Local vs Remote</h2><a id="user-content-local-vs-remote" aria-label="Permalink: Local vs Remote" href="#local-vs-remote"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Operation</th>
<th>Local</th>
<th>GitHub</th>
</tr>
</thead>
<tbody>
<tr>
<td>PRD Creation</td>
<td>✅</td>
<td>—</td>
</tr>
<tr>
<td>Implementation Planning</td>
<td>✅</td>
<td>—</td>
</tr>
<tr>
<td>Task Breakdown</td>
<td>✅</td>
<td>✅ (sync)</td>
</tr>
<tr>
<td>Execution</td>
<td>✅</td>
<td>—</td>
</tr>
<tr>
<td>Status Updates</td>
<td>✅</td>
<td>✅ (sync)</td>
</tr>
<tr>
<td>Final Deliverables</td>
<td>—</td>
<td>✅</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Technical Notes</h2><a id="user-content-technical-notes" aria-label="Permalink: Technical Notes" href="#technical-notes"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">GitHub Integration</h3><a id="user-content-github-integration" aria-label="Permalink: GitHub Integration" href="#github-integration"></a></p>
<ul dir="auto">
<li>Uses <strong>gh-sub-issue extension</strong> for proper parent-child relationships</li>
<li>Falls back to task lists if extension not installed</li>
<li>Epic issues track sub-task completion automatically</li>
<li>Labels provide additional organization (<code>epic:feature</code>, <code>task:feature</code>)</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">File Naming Convention</h3><a id="user-content-file-naming-convention" aria-label="Permalink: File Naming Convention" href="#file-naming-convention"></a></p>
<ul dir="auto">
<li>Tasks start as <code>001.md</code>, <code>002.md</code> during decomposition</li>
<li>After GitHub sync, renamed to <code>{issue-id}.md</code> (e.g., <code>1234.md</code>)</li>
<li>Makes it easy to navigate: issue #1234 = file <code>1234.md</code></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Design Decisions</h3><a id="user-content-design-decisions" aria-label="Permalink: Design Decisions" href="#design-decisions"></a></p>
<ul dir="auto">
<li>Intentionally avoids GitHub Projects API complexity</li>
<li>All commands operate on local files first for speed</li>
<li>Synchronization with GitHub is explicit and controlled</li>
<li>Worktrees provide clean git isolation for parallel work</li>
<li>GitHub Projects can be added separately for visualization</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Support This Project</h2><a id="user-content-support-this-project" aria-label="Permalink: Support This Project" href="#support-this-project"></a></p>
<p dir="auto">Claude Code PM was developed at <a href="https://automaze.io/" rel="nofollow">Automaze</a> <strong>for developers who ship, by developers who ship</strong>.</p>
<p dir="auto">If Claude Code PM helps your team ship better software:</p>
<ul dir="auto">
<li>⭐ <strong><a href="https://github.com/your-username/claude-code-pm">Star this repository</a></strong> to show your support</li>
<li>🐦 <strong><a href="https://x.com/aroussi" rel="nofollow">Follow @aroussi on X</a></strong> for updates and tips</li>
</ul>
<hr>

</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tidewave Web: in-browser coding agent for Rails and Phoenix (278 pts)]]></title>
            <link>https://tidewave.ai/blog/tidewave-web-phoenix-rails</link>
            <guid>44960316</guid>
            <pubDate>Wed, 20 Aug 2025 09:43:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tidewave.ai/blog/tidewave-web-phoenix-rails">https://tidewave.ai/blog/tidewave-web-phoenix-rails</a>, See on <a href="https://news.ycombinator.com/item?id=44960316">Hacker News</a></p>
Couldn't get https://tidewave.ai/blog/tidewave-web-phoenix-rails: Error: getaddrinfo ENOTFOUND tidewave.ai]]></description>
        </item>
    </channel>
</rss>