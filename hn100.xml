<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 10 Mar 2025 10:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Performance of the Python 3.14 tail-call interpreter (175 pts)]]></title>
            <link>https://blog.nelhage.com/post/cpython-tail-call/</link>
            <guid>43317592</guid>
            <pubDate>Mon, 10 Mar 2025 06:44:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.nelhage.com/post/cpython-tail-call/">https://blog.nelhage.com/post/cpython-tail-call/</a>, See on <a href="https://news.ycombinator.com/item?id=43317592">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p>About a month ago, the CPython project merged <a href="https://docs.python.org/3.14/whatsnew/3.14.html#whatsnew314-tail-call">a new implementation strategy</a> for their bytecode interpreter. The initial headline results <a href="https://github.com/python/cpython/pull/128718">were very impressive</a>, showing a 10-15% performance improvement <strong>on average</strong> across <a href="https://pyperformance.readthedocs.io/">a wide range of benchmarks</a> across a variety of platforms.</p>
<p>Unfortunately, as I will document in this post, these impressive performance gains turned out to be <strong>primarily due to inadvertently working around a regression in LLVM 19.</strong> When benchmarked against a better baseline (such GCC, clang-18, or LLVM 19 with certain tuning flags), the performance gain drops to 1-5% or so depending on the exact setup.</p>
<p>When the tail-call interpreter was announced, I was surprised and impressed by the performance improvements, but also confused: I‚Äôm not an expert, but I‚Äôm passingly-familiar with modern CPU hardware, compilers, and interpreter design, and I couldn‚Äôt explain why this change would be so effective. I became curious ‚Äì and perhaps slightly obsessed ‚Äì and the reports in this post are the result of a few weeks of off-and-on compiling and benchmarking and disassembly of dozens of different Python binaries, in an attempt to understand what I was seeing.</p>
<p>At the end, I <a href="#reflections">will reflect</a> on this situation as a case study in some of the challenges of benchmarking, performance engineering, and software engineering in general.</p>
<p>I also want to be clear that I still think the tail-calling interpreter is a great piece of work, as well as a genuine speedup (albeit more modest than initially hoped). I am also optimistic it‚Äôs a more robust approach than the older interpreter, in ways I‚Äôll explain in this post. I also really don‚Äôt want to blame anyone on the Python team for this error. This sort of confusion turns out to be very common ‚Äì I‚Äôve certainly misunderstood many a benchmark myself ‚Äì and I‚Äôll have some reflections on that topic at the end.</p>
<p>In addition, the impact of the LLVM regression doesn‚Äôt seem to have been known prior to this work (and the bug still isn‚Äôt fixed, as of this writing); thus, in that sense, the alternative (without this work) probably really was 10-15% slower, for builds using clang-19 or newer. For instance, Simon Willison <a href="https://simonwillison.net/2025/Feb/13/python-3140a5/">reproduced the 10% speedup</a> ‚Äúin the wild,‚Äù as compared to Python 3.13, using builds from <a href="https://github.com/astral-sh/python-build-standalone"><code>python-build-standalone</code></a>.</p>
<h2 id="performance-results">Performance results&nbsp;<a href="#performance-results"><i>	üîóÔ∏é</i></a> </h2>
<p>Here are my headline results. I benchmarked several builds of the CPython interpreter, using multiple different compilers and different configuration options, on two machines: an Intel server (a <a href="https://www.intel.com/content/www/us/en/products/sku/230580/intel-core-i513500-processor-24m-cache-up-to-4-80-ghz/specifications.html">Raptor Lake i5-13500</a> I maintain in Hetzner), and my Apple M1 Macbook Air. You can reproduce these builds <a href="https://github.com/nelhage/cpython-interp-perf/">using my <code>nix</code> configuration</a>, which I found essential for managing so many different moving pieces at once.</p>
<p>All builds use LTO and PGO. These configurations are:</p>
<ul>
<li><code>clang18</code>: Built using Clang 18.1.8, using computed gotos.</li>
<li><code>gcc</code> (Intel only): Built with GCC 14.2.1, using computed gotos.</li>
<li><code>clang19</code>: Built using Clang 19.1.7, using compute gotos.</li>
<li><code>clang19.tc</code>: Built using Clang 19.1.7, using the new tail-call interpreter.</li>
<li><code>clang19.taildup</code>: Built using Clang 19.1.7, computed gotos and some <code>-mllvm</code> tuning flags which work around the regression.</li>
</ul>
<p>I‚Äôve used <code>clang18</code> as the baseline, and reported the bottom-line ‚Äúaverage‚Äù reported by <code>pypeformance</code>/<code>pyperf compare_to</code>. You can find the complete output files and reports <a href="https://github.com/nelhage/cpython-interp-perf/tree/data/">on github</a>.</p>
<table>
<thead>
<tr>
<th>Platform</th>
<th>clang18</th>
<th>clang19</th>
<th>clang19.taildup</th>
<th>clang19.tc</th>
<th>gcc</th>
</tr>
</thead>
<tbody>
<tr>
<td>Raptor Lake i5-13500</td>
<td>(ref)</td>
<td>1.09x slower</td>
<td>1.01x faster</td>
<td>1.03x faster</td>
<td>1.02x faster</td>
</tr>
<tr>
<td>Apple M1 Macbook Air</td>
<td>(ref)</td>
<td>1.12x slower</td>
<td>1.02x slower</td>
<td>1.00x slower</td>
<td>N/A</td>
</tr>
</tbody>
</table>
<p>Observe that the tail-call interpreter still exhibits a speedup as compared to clang-18, but that it‚Äôs far less dramatic than the slowdown from moving to clang-19. The Python team has also observed larger speedups than I have (after accounting for the bug) on some other platforms.</p>
<h2 id="the-llvm-regression">The LLVM regression&nbsp;<a href="#the-llvm-regression"><i>	üîóÔ∏é</i></a> </h2>
<h2 id="a-brief-background">A brief background&nbsp;<a href="#a-brief-background"><i>	üîóÔ∏é</i></a> </h2>
<p>A classic bytecode interpreter consists of a <code>switch</code> statement inside of a <code>while</code> loop, looking something like so:</p>
<div><pre tabindex="0"><code data-lang="c++"><span><span><span>while</span> (true) {
</span></span><span><span>  opcode_t this_op <span>=</span> bytecode[pc<span>++</span>];
</span></span><span><span>  <span>switch</span> (this_op) {
</span></span><span><span>    <span>case</span> OP_IMM: {
</span></span><span><span>      <span>// push an immediate onto the stack
</span></span></span><span><span><span></span>      <span>break</span>;
</span></span><span><span>    }
</span></span><span><span>    <span>case</span> OP_ADD: {
</span></span><span><span>      <span>// handle the add
</span></span></span><span><span><span></span>      <span>break</span>;
</span></span><span><span>    }
</span></span><span><span>    <span>// etc
</span></span></span><span><span><span></span>  }
</span></span><span><span>}
</span></span></code></pre></div><p>Most compilers will compile the <code>switch</code> into a jump table ‚Äì they will emit a table containing the address of each <code>case OP_xxx</code> block, index into it with the opcode, and perform an indirect jump.</p>
<p>It‚Äôs <a href="https://link.springer.com/content/pdf/10.1007/3-540-44681-8_59.pdf">long been known</a> that you can speed up a bytecode interpreter of this style by replicating the jump table dispatch into the body of each opcode. That is, instead of ending each opcode with a <code>jmp loop_top</code>, each opcode contains a separate instance of the ‚Äúdecode next instruction and index through the jump table‚Äù logic.</p>
<p>Modern C compilers support <a href="https://gcc.gnu.org/onlinedocs/gcc/Labels-as-Values.html#Labels-as-Values">taking the address of labels</a>, and then using those labels in a ‚Äúcomputed goto,‚Äù in order to implement this pattern. Thus, many modern bytecode interpreters, including CPython (before the tail-call work), employ an interpreter loop that looks something like:</p>
<div><pre tabindex="0"><code data-lang="c++"><span><span><span>static</span> <span>void</span> <span>*</span>opcode_table[<span>256</span>] <span>=</span> {
</span></span><span><span>    [OP_IMM] <span>=</span> <span>&amp;&amp;</span>TARGET_IMM,
</span></span><span><span>    [OP_ADD] <span>=</span> <span>&amp;&amp;</span>TARGET_ADD,
</span></span><span><span>    <span>// etc
</span></span></span><span><span><span></span>};
</span></span><span><span>
</span></span><span><span><span>#define DISPATCH() goto *opcode_table[bytecode[pc++]]
</span></span></span><span><span><span></span>
</span></span><span><span>DISPATCH();
</span></span><span><span>
</span></span><span><span>TARGET_IMM: {
</span></span><span><span>    <span>// push an immediate onto the stack
</span></span></span><span><span><span></span>    DISPATCH();
</span></span><span><span>}
</span></span><span><span>TARGET_ADD: {
</span></span><span><span>    <span>// handle the add
</span></span></span><span><span><span></span>    DISPATCH();
</span></span><span><span>}
</span></span></code></pre></div><h2 id="computed-goto-in-llvm">Computed goto in LLVM&nbsp;<a href="#computed-goto-in-llvm"><i>	üîóÔ∏é</i></a> </h2>
<p>For performance reasons (performance of the compiler, not the generated code), it turns out that Clang and LLVM, internally, actually merges all of the <code>goto</code>s in the latter code into a <strong>single</strong> <a href="https://llvm.org/docs/LangRef.html#indirectbr-instruction"><code>indirectbr</code> LLVM instruction</a>, which each opcode will jump to. That is, the compiler takes our hard work, and deliberately rewrites into a control-flow-graph that looks essentially the same as the <code>switch</code>-based interpreter!</p>
<p>Then, during code generation, LLVM performs ‚Äútail duplication,‚Äù and copies the branch <strong>back</strong> into each location, restoring the original intent. This dance is documented, at a high level, <a href="https://blog.llvm.org/2010/01/address-of-label-and-indirect-branches.html">in an old LLVM blog post</a> introducing the new implementation.</p>
<h2 id="the-llvm-19-regression">The LLVM 19 regression&nbsp;<a href="#the-llvm-19-regression"><i>	üîóÔ∏é</i></a> </h2>
<p>The whole reason for the deduplicate-then-copy dance is that, for technical reasons, creating and manipulating the control-flow-graph containing many <code>indirectbr</code> instructions can be quite expensive.</p>
<p>In order to avoid catastrophic slowdowns (or memory usage) in certain cases, LLVM 19 implemented <a href="https://github.com/llvm/llvm-project/pull/78582">some limits on tail-duplication pass</a>, causing it to bail out if duplication would blow up the size of the IR past certain limits.</p>
<p>Unfortunately, on CPython those limits resulted in Clang <strong>leaving all of the dispatch jumps merged</strong>, and entirely undoing the whole purpose of the computed <code>goto</code>-based implementation! This bug was <a href="https://github.com/llvm/llvm-project/issues/106846">first identified</a> by another language implementation with a similar interpreter loop, but had not been known (as far as I can find) to affect CPython.</p>
<p>In addition to the performance impact, we can observe the bug directly by disassembling the resulting object code and counting the number of distinct indirect jumps:</p>
<div><pre tabindex="0"><code data-lang="shell"><span><span>$ objdump -S --disassemble<span>=</span>_PyEval_EvalFrameDefault <span>${</span>clang18<span>}</span>/bin/python3.14 | <span>\
</span></span></span><span><span><span></span>  egrep -c <span>'jmp\s+\*'</span>
</span></span><span><span><span>332</span>
</span></span><span><span>
</span></span><span><span>$ objdump -S --disassemble<span>=</span>_PyEval_EvalFrameDefault <span>${</span>clang19<span>}</span>/bin/python3.14 | <span>\
</span></span></span><span><span><span></span>  egrep -c <span>'jmp\s+\*'</span>
</span></span><span><span><span>3</span>
</span></span></code></pre></div><h3 id="further-weirdness">Further weirdness&nbsp;<a href="#further-weirdness"><i>	üîóÔ∏é</i></a> </h3>
<p>I am confident that the change to the tail-call duplication logic caused the regression: if <a href="#the-fix">you fix it</a>, performance matches clang-18. However, I can‚Äôt fully explain the <strong>magnitude</strong> of the regression.</p>
<p>Historically, the optimization of replicating the bytecode dispatch into each opcode has been cited to speed up interpreters anywhere from <a href="https://github.com/python/cpython/blob/c718c6be0f82af5eb0e57615ce323242155ff014/Misc/HISTORY#L15252-L15255">20%</a> to <a href="https://link.springer.com/content/pdf/10.1007/3-540-44681-8_59.pdf">100%</a>. However, on modern processors with improved branch predictors, <a href="https://inria.hal.science/hal-01100647/document">more recent work</a> finds a much smaller speedup, on the order of 2-4%.</p>
<p>We can verify this 2-4% number in practice, because Python still supports the ‚Äúold-style‚Äù interpreter, which uses a single <code>switch</code> statement, via a configuration option. Here‚Äôs what we see if we benchmark that interpreter (".nocg" for ‚Äúno computed gotos‚Äù in the following table):</p>
<table>
<thead>
<tr>
<th>Benchmark</th>
<th>clang18</th>
<th>clang18.nocg</th>
<th>clang19.nocg</th>
<th>clang19</th>
</tr>
</thead>
<tbody>
<tr>
<td>Performance change</td>
<td>(ref)</td>
<td>1.01x faster</td>
<td>1.02x slower</td>
<td>1.09x slower</td>
</tr>
</tbody>
</table>
<p>Notice that <code>clang19.nocg</code>" is only 2% slower than <code>clang18</code>, even though the base <code>clang19</code> build is 9% slower! I interpret that ‚Äú2%‚Äù as a fairer estimate for the cost/benefit of duplicating opcode dispatch, alone, and I don‚Äôt fully understand the other one.</p>
<h3 id="do-we-need-computed-gotos">Do we need computed gotos?&nbsp;<a href="#do-we-need-computed-gotos"><i>	üîóÔ∏é</i></a> </h3>
<p>I haven‚Äôt mentioned the <code>clang19.nocg</code> benchmark, which you may notice claims to be <strong>faster</strong> than <code>clang19</code>" It was at this point that I discovered an additional, and very funny, twist to the story.</p>
<p>I explained earlier that Clang and LLVM:</p>
<ol>
<li>Compiles the <code>switch</code> into a jump table and an indirect jump, very similar to the one we create by hand using computed gotos</li>
<li>Compiles computed gotos into a control-flow graph that closely resembles the classic <code>switch</code> graph, which a single instance of the opcode dispatch, and</li>
<li>Is able to reverse the transformation during codegen in order to duplicate the dispatch</li>
</ol>
<p>Those facts taken together, might lead you to ask, ‚ÄúCouldn‚Äôt we just start with the <code>switch</code>-based interpreter, and have the <strong>compiler</strong> do tail-duplication, and get the same benefits?‚Äù</p>
<p>And it turns out: Yes.</p>
<p>clang-18 (or clang-19 with appropriate flags), when presented with the ‚Äúclassic‚Äù <code>switch</code>-based interpreter, <strong>goes ahead and that replicates the dispatch logic into each the body of each opcode anyways</strong>. Here‚Äôs another table, showing the same builds with the number of indirect jumps, using the <code>objdump | grep</code> test from earlier:</p>
<table>
<thead>
<tr>
<th>Benchmark</th>
<th>clang18</th>
<th>clang18.nocg</th>
<th>clang19.nocg</th>
<th>clang19</th>
</tr>
</thead>
<tbody>
<tr>
<td># of indirect jumps</td>
<td>332</td>
<td>306</td>
<td>3</td>
<td>3</td>
</tr>
</tbody>
</table>
<p>Thus, there‚Äôs a case to be made that the entire ‚Äúcomputed goto‚Äù interpreter turns out to be entirely unnecessary complexity (at least for modern Clang). The compiler is perfectly capable of performing the same transformation itself, and (apparently) the computed gotos don‚Äôt even suffice to guarantee it!</p>
<p>That said, I did also test GCC, and GCC (at least as of 14.2.1) does not replicate the <code>switch</code>, but does implement the desired behavior for when using computed goto. So at least in that case we see the expected behavior.</p>
<h2 id="the-fix">The fix&nbsp;<a href="#the-fix"><i>	üîóÔ∏é</i></a> </h2>
<p><a href="https://github.com/llvm/llvm-project/pull/114990">LLVM pull request 114990</a> is open and should fix this regression. It has not yet merged as of this writing, but hopefully will soon. I have also benchmarked it and confirmed it restores the expected performance.</p>
<p>In the meanwhile, the <a href="https://github.com/llvm/llvm-project/pull/78582">PR that caused the regression</a> added a tunable option to choose the threshold at which tail-duplication will abort. We can restore similar behavior on clang-19 by simply setting that limit to a very large number<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup>.</p>
<h2 id="reflections">Reflections&nbsp;<a href="#reflections"><i>	üîóÔ∏é</i></a> </h2>
<p>I will freely admit that I got nerdsniped quite effectively by this topic, and have gone far deeper than was really necessary. That said, having done so, I think there are a number of interesting lessons and reflections to be taken away, which generalize to software engineering and performance engineering, and I will attempt to extract and meditate upon some of them.</p>
<h2 id="on-benchmarking">On benchmarking&nbsp;<a href="#on-benchmarking"><i>	üîóÔ∏é</i></a> </h2>
<p>When optimizing a system, we generally construct some set of benchmarks and benchmarking methodology, and then evaluate proposed changes using those benchmarks.</p>
<p>Any set of benchmarks or benchmark procedures embeds (often implicitly) what I like to call a ‚Äútheory of performance.‚Äù Your theory of performance is a set of beliefs and assumptions that answer questions like ‚Äúwhich variables (may) effect performance, in what ways?‚Äù and ‚Äúwhat is the relationship between results on benchmarks and the ‚Äútrue‚Äù performance in ‚Äúproduction‚Äù?‚Äù</p>
<p>The benchmarks ran on the tail-call interpreter showed a 10-15% speedup when compared with the old computed-goto interpreter. Those benchmarks were accurate, in that they were accurately measuring (as far as I know) the performance difference between those builds. However, in order to generalize those specific data points into the statement ‚ÄúThe tail-call interpreter is 10-15% faster than the computed-goto interpreter, more generally,‚Äù or even ‚ÄúThe tail-call interpreter will speed up Python by 10-15% for our users,‚Äù we need to bring in more assumptions and beliefs about the world. In this case, it turns out the story was more complex, and those broader claims were not true in full generality.</p>
<p>(Once again, I really don‚Äôt want to blame the Python developers! This stuff is <strong>hard</strong> and there are a million ways to get confused or to reach somewhat-incorrect conclusions. I had to do ~three weeks of intense benchmarking and experimenting to reach a better understanding. My point is that this is a very general challenge!)</p>
<h3 id="baselines">Baselines&nbsp;<a href="#baselines"><i>	üîóÔ∏é</i></a> </h3>
<p>This example highlights another recurring challenge, not only in software performance, but in many other domains: ‚ÄúWhat baseline do you compare against?‚Äù</p>
<p>Any time you propose a new solution or method for some problem, you typically have a way of running your new method, and producing some relevant performance metrics.</p>
<p>Once you have metrics for <strong>your</strong> system, however, you need to know what to compare them against, in order to decide if they‚Äôre any good! Even if you score well on some absolute scale (assuming there <strong>is</strong> a sensible absolute scale to evaluate), if your method is worse than an existing solution, it‚Äôs probably not that interesting.</p>
<p>Typically, you want to compare against ‚Äúthe current best-known approach.‚Äù But sometimes that can be hard to do! Even if you understand the current approach in theory, you may or may not be an expert in applying it in practice. In the case of software this may mean something like, tuning your operating system or compiler options or other flags. The current-best approach may have published benchmarks, but they‚Äôre not always relevant to you; for instance, maybe it was published years ago on older hardware, and so you can‚Äôt do an apples-to-apples comparison with the public numbers. Or maybe their tests were run at a scale you can‚Äôt afford to replicate.</p>
<p>I work in machine learning at Anthropic these days, and we see this all the time in ML papers. When a paper comes out claiming some algorithmic improvement or other advance, I‚Äôve noticed that the first detail our researchers ask is often not ‚ÄúWhat did they do?‚Äù but ‚ÄúWhat baseline did they compare against?‚Äù It‚Äôs easy to get impressive-looking results if you‚Äôre comparing against a poorly-tuned baseline, and that observation turns out to explain a surprising fraction of supposed improvements.</p>
<h2 id="on-software-engineering">On software engineering&nbsp;<a href="#on-software-engineering"><i>	üîóÔ∏é</i></a> </h2>
<p>One other highlight, for me, is just how complex and interconnected our software systems are, and how rapidly-moving, and how hard it is to keep track of all the pieces.</p>
<p>If you‚Äôd asked me, a month ago, to estimate the likelihood that an LLVM release caused a 10% performance regression in CPython and that no one noticed for five months, I‚Äôd have thought that a pretty unlikely state of affairs! Those are both widely-used projects, both of which care a fair bit about performance, and ‚Äúsurely‚Äù someone would have tested and noticed.</p>
<p>And probably that <strong>particular</strong> situation was quite unlikely! However, with so many different software projects out there, each moving so rapidly and depending on and being used by so many other projects, it becomes practically-inevitable that <strong>some</strong> regressions ‚Äúlike that one‚Äù happen, almost constantly.</p>
<h3 id="optimizing-compilers">Optimizing compilers&nbsp;<a href="#optimizing-compilers"><i>	üîóÔ∏é</i></a> </h3>
<p>The saga of the computed-goto interpreter illustrates recurring tensions and unresolved questions around optimizers and optimizing compilers, to which we don‚Äôt yet have agreed-upon answers as a field.</p>
<p>We generally expect our compilers to respect the programmer‚Äôs intent, and to compile the code that was written in a way that preserves the programmer‚Äôs intent.</p>
<p>We also, however, expect our compilers to optimize our code, and to transform it in potentially-complex-and-unintuitive ways in order to make it run faster.</p>
<p>These expectations are in tension, and we have a dearth of patterns and idioms to explain to the compiler ‚Äúwhy‚Äù we wrote code in various ways, and whether we were <strong>deliberately</strong> trying to trigger a certain output, or make a certain performance-related decision, or not.</p>
<p>Our compilers typically only <strong>promise</strong> to emit code with ‚Äúthe same behavior‚Äù as the code we write; performance is something of a best-effort feature on top of that guarantee.</p>
<p>Thus, we end up in this odd world where clang-19 compiles the computed-goto interpreter ‚Äúcorrectly‚Äù ‚Äì in the sense that the resulting binary produces all the same value we expect ‚Äì but at the same time it produces an output completely at odds with the intention of the optimization. Moreover, we also see other versions of the compiler applying optimizations to the ‚Äúnaive‚Äù <code>switch()</code>-based interpreter, which implement the exact same optimization we ‚Äúintended‚Äù to perform by rewriting the source code.</p>
<p>In hindsight, it appears that the ‚Äúcomputed goto‚Äù interpreter, at a source code level, and ‚Äúreplicating the dispatch at a machine-code level‚Äù end up being almost-orthogonal notions! We‚Äôve seen examples of every instance of the resulting 2x2 matrix! Because all of those <code>python</code> binaries compute the same values when run, our current tools are essentially unable to talk about the distinctions between them in a coherent way.</p>
<p>This confusion is one way in which I think the tail-calling interpreter (and the compiler features behind it) represent a genuine, and useful, advance in the state of the art. The tail-call interpreter is built on <a href="https://clang.llvm.org/docs/AttributeReference.html#musttail">the <code>musttail</code> attribute</a>, which represents a relatively new kind of compiler feature. <code>musttail</code> does not affect the ‚Äúobservable program behavior,‚Äù in the classic sense that compilers think, but is rather a conversation with the <strong>optimizer</strong>; it requires that the compiler be able to make certain optimizations, and requires that compilation fail if those optimizations don‚Äôt happen.</p>
<p>I‚Äôm hopeful this framework will turn out to be a much more robust style for writing performance-sensitive code, especially over time and as compilers evolve. I look forward to continued experiments with features in that category.</p>
<p>Concretely, I find myself wondering if it would be viable to replace the computed-goto interpreter with something like a (hypothetical) <code>[[clang::musttailduplicate]]</code> attribute on the interpreter <code>while</code> loop. I‚Äôm not expert enough in all the relevant IRs and passes to have confidence in this proposal, but perhaps someone with more familiarity can weigh in on the feasibility.</p>
<h2 id="one-more-note-on-nix">One more note: on <code>nix</code>&nbsp;<a href="#one-more-note-on-nix"><i>	üîóÔ∏é</i></a> </h2>
<p>I want to close with a call-out of how helpful <code>nix</code> was for this project. I have been experimenting with nix and NixOS for my personal infrastructure over the last year or so, but they turned out to be a total lifesaver for this investigation.</p>
<p>In the course of these experiments, I have built and benchmarked <strong>dozens</strong> of different Python interpreters, across four different compilers (<code>gcc</code>, <code>clang-18</code>, <code>clang-19</code>, and <code>clang-20</code>) and using numerous combinations of compiler flags. Managing all of that by hand would have strained my sanity, and I‚Äôm <strong>certain</strong> I would have made numerous mistakes during which I mixed up which compiler and which flags went into which build, and so on.</p>
<p>Using <code>nix</code>, I was able to keep all of these parallel versions straight, and build them in a reproducible, hermetic style. I was able to write some short abstractions which made them very easy to define, and then know with absolute confidence <strong>where</strong> any given build in my <code>nix</code> store came from, with which compilers and which flags. After a small amount of work to build some helper functions, the core definitions of my build matrix is <a href="https://github.com/nelhage/cpython-interp-perf/blob/afd2123bef6ec3fd872d628f2bb519b20684e161/python.nix#L105-L143">shockingly concise</a>; here‚Äôs a taste:</p>
<div><pre tabindex="0"><code data-lang="nixos"><span><span>{
</span></span><span><span>    base <span>=</span> callPackage buildPython { python3 <span>=</span> python313; };
</span></span><span><span>    optimized <span>=</span> withOptimizations base;
</span></span><span><span>    optLTO <span>=</span> withLTO optimized;
</span></span><span><span>
</span></span><span><span>    clang18 <span>=</span> withLLVM llvmPackages_18 optLTO;
</span></span><span><span>    clang19 <span>=</span> withLLVM llvmPackages_19 optLTO;
</span></span><span><span>    clang20 <span>=</span> withLLVM llvmPackages_20 optLTO;
</span></span><span><span>
</span></span><span><span>    clang18nozero <span>=</span> noZeroCallUsed clang18;
</span></span><span><span>    clang18nocg <span>=</span> withoutCG clang18;
</span></span><span><span>
</span></span><span><span>    clang19taildup <span>=</span> withTailDup clang19;
</span></span><span><span>}
</span></span></code></pre></div><p>I was even able to build a custom version of LLVM (with the bugfix patch), and do Python builds using that compiler. Doing so required <a href="https://github.com/nelhage/cpython-interp-perf/blob/afd2123bef6ec3fd872d628f2bb519b20684e161/llvm.nix#L14-L25">all of about 10 lines of code</a>.</p>
<p>That said, not everything was rosy. For one, <code>nix</code> is, by necessity, ‚Äúweird‚Äù in various ways compared to the ways ‚Äúnormal people‚Äù use software, and I worry that some of that weirdness may have affected some of my benchmarks or conclusions in ways I didn‚Äôt notice. For instance, early on I discovered that nix (by default) builds projects using certain hardening flags that <a href="https://github.com/python/cpython/issues/130961">disproportionately impact the tail-call interpreter</a>. I‚Äôve handled that one, but are there more?</p>
<p>In addition, Nix is incredibly extensible and customizable, but figuring out how to make a specific customization can be a real uphill battle, and involve a lot of trial and error and source-diving. My patched LLVM build ended up being pretty short and clean, but getting there required me to read a lot of <code>nixpkgs</code> source code, mixing and matching two under-documented extensibility mechanisms (<code>extend</code> and <code>overrideAttrs</code> ‚Äì not to be confused with <code>override</code>, used elsewhere), and one failed attempt which successfully patched <code>libllvm</code>, but then silently built a new <code>clang</code> against the unpatched version.</p>
<p>Still, <code>nix</code> was clearly enormously helpful here, and on net it definitely made this kind of multi-version exploration and debugging <strong>much</strong> saner than any other approach I can imagine.</p>



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Stanford researchers develop dual-antibody treatment for ALL SARS-CoV-2 variants (236 pts)]]></title>
            <link>https://www.science.org/doi/10.1126/scitranslmed.adq5720</link>
            <guid>43315634</guid>
            <pubDate>Mon, 10 Mar 2025 00:46:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.science.org/doi/10.1126/scitranslmed.adq5720">https://www.science.org/doi/10.1126/scitranslmed.adq5720</a>, See on <a href="https://news.ycombinator.com/item?id=43315634">Hacker News</a></p>
Couldn't get https://www.science.org/doi/10.1126/scitranslmed.adq5720: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[US added to international watchlist for rapid decline in civic freedoms (216 pts)]]></title>
            <link>https://www.theguardian.com/us-news/2025/mar/09/watchlist-decline-civic-freedoms-civicus</link>
            <guid>43315629</guid>
            <pubDate>Mon, 10 Mar 2025 00:45:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/us-news/2025/mar/09/watchlist-decline-civic-freedoms-civicus">https://www.theguardian.com/us-news/2025/mar/09/watchlist-decline-civic-freedoms-civicus</a>, See on <a href="https://news.ycombinator.com/item?id=43315629">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>The United States has been added to the Civicus Monitor Watchlist, which identifies countries that the global civil rights watchdog believes are currently experiencing a rapid decline in civic freedoms.</p><p><a href="https://www.civicus.org/" data-link-name="in body link">Civicus</a>, an international non-profit organization dedicated to ‚Äústrengthening citizen action and civil society around the world‚Äù, announced the inclusion of the US on the non-profit‚Äôs first watchlist of 2025 on Monday, alongside the Democratic Republic of the Congo, Italy, Pakistan and Serbia.</p><p>The watchlist is part of the Civicus Monitor, which <a href="https://monitor.civicus.org/watchlist-september-2024/faqs/" data-link-name="in body link">tracks developments in civic freedoms across 198 countries</a>. Other countries<a href="https://monitor.civicus.org/watchlist-september-2024/previous-countries/" data-link-name="in body link"> that have previously been featured</a> on the watchlist in recent years include Zimbabwe, Argentina, El Salvador and the United Arab Emirates.</p><p>Mandeep Tiwana, co-secretary general of Civicus, said that the watchlist ‚Äúlooks at countries where we remain concerned about deteriorating civic space conditions, in relation to freedoms of peaceful assembly, association and expression‚Äù.</p><p>The selection process, the website states, incorporates insights and data from Civicus‚Äôs global network of research partners and data.</p><p>The decision to add the US to the first 2025 watchlist was made in response to what the group described as the ‚ÄúTrump administration‚Äôs assault on democratic norms and global cooperation‚Äù.</p><p>In the news release announcing the US‚Äôs addition, the organization cited recent actions taken by the Trump administration that they argue will likely ‚Äúseverely impact constitutional freedoms of peaceful assembly, expression, and association‚Äù.</p><p>The group cited several of the administration‚Äôs actions such as the <a href="https://www.theguardian.com/us-news/2025/mar/07/who-are-federal-employees-trump-firing" data-link-name="in body link">mass termination of federal employees</a>, the appointment of <a href="https://www.theguardian.com/us-news/2024/dec/01/trump-picks-loyalist-kash-patel-to-run-fbi" data-link-name="in body link">Trump loyalists in key government positions</a>, the withdrawal from international efforts <a href="https://www.theguardian.com/us-news/2025/jan/20/trump-executive-order-who-withdrawal" data-link-name="in body link">such as the World Health Organization</a> and the <a href="https://www.nytimes.com/2025/02/04/us/politics/trump-united-nations-unrwa.html" data-link-name="in body link">UN Human Rights Council</a>, the <a href="https://www.theguardian.com/us-news/2025/jan/28/trump-pauses-grants-loans" data-link-name="in body link">freezing of federal</a> and <a href="https://www.theguardian.com/us-news/2025/feb/26/trump-usaid-cuts" data-link-name="in body link">foreign aid</a> and the attempted <a href="https://www.theguardian.com/us-news/2025/mar/05/diplomats-usaid-letter-rubio" data-link-name="in body link">dismantling of USAid</a>.</p><p>The organization warned that these decisions ‚Äúwill likely impact civic freedoms and reverse hard-won human rights gains around the world‚Äù.</p><p>The group also pointed to the administration‚Äôs <a href="https://www.theguardian.com/us-news/2025/mar/04/trump-university-funding-protests" data-link-name="in body link">crackdown on pro-Palestinian protesters</a>, and the Trump <a href="https://www.theguardian.com/us-news/2025/feb/25/white-house-press-pool" data-link-name="in body link">administration‚Äôs unprecedented decision to control media access to presidential briefings</a>, among others.</p><p>Civicus described Trump‚Äôs actions since taking office as an ‚Äúunparalleled attack on the rule of law‚Äù not seen ‚Äúsince the days of McCarthyism in the twentieth century‚Äù, stating that these moves erode the checks and balances essential to democracy.</p><p>‚ÄúRestrictive executive orders, unjustifiable institutional cutbacks, and intimidation tactics through threatening pronouncements by senior officials in the administration are creating an atmosphere to chill democratic dissent, a cherished American ideal,‚Äù Tiwana said.</p><p>In addition to the watchlist, the Civicus Monitor classifies the state of civic space in countries using <a href="https://monitor.civicus.org/about/how-it-works/ratings/" data-link-name="in body link">five ratings</a>: open, narrowed, obstructed, repressed and closed.</p><p>Currently, the US has a ‚Äúnarrowed‚Äù rating, which it also had during the Biden administration, meaning that while citizens can exercise their civic freedom, such as rights to association, peaceful assembly and expression, occasional violations occur.</p><p>For part of Trump‚Äôs first term, Tiwana said, the US had been categorized as ‚Äúobstructed‚Äù, due to the administration‚Äôs response to the <a href="https://www.theguardian.com/world/black-lives-matter-movement" data-link-name="in body link">Black Lives Matter</a> protests and <a href="https://www.theguardian.com/environment/2018/sep/20/keystone-pipeline-protest-activism-crackdown-standing-rock" data-link-name="in body link">restrictive state laws that were enacted limiting the rights of environmental justice protesters</a>, and other actions.</p><figure data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.NewsletterSignupBlockElement"><a data-ignore="global-link-styling" href="#EmailSignup-skip-link-15">skip past newsletter promotion</a><p id="EmailSignup-skip-link-15" tabindex="0" aria-label="after newsletter promotion" role="note">after newsletter promotion</p></figure><p>Under Joe Biden, the classification went back to ‚Äúnarrowed‚Äù, Tiwana, said, but as of Monday, the US has been placed on the watchlist as the group says it sees ‚Äúsignificant deterioration‚Äù in civic freedoms occurring.</p><p>Tiwana noted that the US is again seemingly headed toward the ‚Äúobstructed‚Äù category.</p><p>While the Trump administration often say they <a href="https://www.theguardian.com/us-news/live/2025/mar/05/trump-congress-speech-address-latest-updates?CMP=share_btn_url&amp;page=with%3Ablock-67c7b8698f08806c689201a0#block-67c7b8698f08806c689201a0" data-link-name="in body link">support fundamental freedoms and individual rights, like free speech</a>, Tiwana believes that the administration seem ‚Äúto be wanting to support these only for people who they see as agreeing with them‚Äù.</p><p>Historically, Tiwana said, the US has been ‚Äúconsidered the beacon of democracy and defense of fundamental freedoms‚Äù.</p><p>‚ÄúIt was an important pillar of <a href="https://www.theguardian.com/us-news/us-foreign-policy" data-link-name="in body link" data-component="auto-linked-tag">US foreign policy</a>, even though it was imperfect, both domestically and how the US promoted it abroad,‚Äù he added.</p><p>But Tiwana believes that the recent actions and statements made by this US administration could empower authoritarian regimes around the world, undermine constitutional principles, and embolden those who ‚Äúwant to accumulate power and increase their wealth and their ability to stay in power for as long as possible‚Äù.</p><p>Tiwana says that he and the organization want to draw attention to the fact that those in power in the US are, in his view, engaging in a ‚Äúzero-sum politics game‚Äù that is eroding ‚Äúconstitutional principles and frankly, engaging in, anti American behavior‚Äù.</p><p>‚ÄúWe urge the United States to uphold the rule of law and respect constitutional and international human rights norms,‚Äù said Tiwana.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Electronics-free old diesel trucks of the national radio astronomy observatory (247 pts)]]></title>
            <link>https://raoulpop.com/2012/04/15/chasing-rfi-waves-part-seven/</link>
            <guid>43315406</guid>
            <pubDate>Mon, 10 Mar 2025 00:16:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://raoulpop.com/2012/04/15/chasing-rfi-waves-part-seven/">https://raoulpop.com/2012/04/15/chasing-rfi-waves-part-seven/</a>, See on <a href="https://news.ycombinator.com/item?id=43315406">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			<p>Here is part seven (the final part) of my non-fiction work about the National Radio Astronomy Observatory (NRAO) in Green Bank, West Virginia.&nbsp;You can also read parts&nbsp;<a title="Chasing RFI Waves - Part One" href="https://raoulpop.com/2012/03/04/chasing-rfi-waves-part-one/" target="_blank">one</a>,&nbsp;<a title="Chasing RFI Waves - Part Two" href="https://raoulpop.com/2012/03/04/chasing-rfi-waves-part-two/" target="_blank">two</a>,&nbsp;<a title="Chasing RFI Waves - Part Three" href="https://raoulpop.com/2012/03/04/chasing-rfi-waves-part-three/" target="_blank">three</a>,&nbsp;<a title="Chasing RFI Waves - Part Four" href="https://raoulpop.com/2012/03/04/chasing-rfi-waves-part-four/" target="_blank">four</a>,&nbsp;<a title="Chasing RFI Waves ‚Äì Part&nbsp;Five" href="https://raoulpop.com/2012/04/01/chasing-rfi-waves-part-five/" target="_blank">five</a>&nbsp;and <a title="Chasing RFI Waves ‚Äì Part&nbsp;Six" href="https://raoulpop.com/2012/04/08/chasing-rfi-waves-part-six/" target="_blank">six</a>.</p>
<hr>
<h2>The NRAO fleet</h2>
<p>The cars used on the NRAO campus are different from what you might expect. You‚Äôll see photos of them below, and in case you‚Äôre wondering why they look so old, let me explain.</p>
<p><a href="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg"><img data-attachment-id="16359" data-permalink="https://raoulpop.com/2012/04/15/chasing-rfi-waves-part-seven/old-diesel-cars/#main" data-orig-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg" data-orig-size="1663,1248" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;3.2&quot;,&quot;credit&quot;:&quot;Raoul Pop&quot;,&quot;camera&quot;:&quot;C3000Z&quot;,&quot;caption&quot;:&quot;At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.&quot;,&quot;created_timestamp&quot;:&quot;1133444526&quot;,&quot;copyright&quot;:&quot;Copyright 2005 Raoul Pop&quot;,&quot;focal_length&quot;:&quot;19.1&quot;,&quot;iso&quot;:&quot;100&quot;,&quot;shutter_speed&quot;:&quot;0.002&quot;,&quot;title&quot;:&quot;Old diesel cars&quot;,&quot;latitude&quot;:&quot;38.430709283333&quot;,&quot;longitude&quot;:&quot;-79.817687633333&quot;}" data-image-title="Old diesel cars" data-image-description="<p>At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.</p>
" data-image-caption="" data-medium-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=600" data-large-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=696" title="Old diesel cars" alt="" src="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=696" srcset="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=584&amp;h=438 584w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=1168&amp;h=876 1168w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=300&amp;h=225 300w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=600&amp;h=450 600w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=768&amp;h=576 768w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2920.jpg?w=900&amp;h=675 900w" sizes="(max-width: 584px) 100vw, 584px"></a></p>
<p>Gasoline-powered cars generate more RFI than diesel-powered cars because they have spark plugs. That meant that NRAO had to purchase diesel cars when they bought their original fleet, and by the way, these cars are part of that original purchase. When NRAO wanted to renew their fleet, they found out they couldn‚Äôt, because the newer diesel-powered cars on the market were all using chips and various other electrical equipment (seat belt buzzers, door buzzers, etc.) that generated unwanted RFI. Any electrical ark (spark plugs, power lines, bad thermostats, etc.) generates broadband radio signals, at various frequencies throughout the spectrum but mostly at the lower frequencies, below 2 GHz or so.&nbsp;So that meant they had to stick with their original fleet, whose diesel engines used no computer chips whatsoever and generated little RFI. You may look at these cars and call them clunkers but to NRAO technicians and scientists, they‚Äôre reliable modes of transportation that do not interfere with their research.</p>
<p><a href="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg"><img data-attachment-id="16360" data-permalink="https://raoulpop.com/2012/04/15/chasing-rfi-waves-part-seven/old-diesel-cars-2/#main" data-orig-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg" data-orig-size="2048,1536" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;3.2&quot;,&quot;credit&quot;:&quot;Raoul Pop&quot;,&quot;camera&quot;:&quot;C3000Z&quot;,&quot;caption&quot;:&quot;At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.&quot;,&quot;created_timestamp&quot;:&quot;1133444672&quot;,&quot;copyright&quot;:&quot;Copyright 2005 Raoul Pop&quot;,&quot;focal_length&quot;:&quot;6.6&quot;,&quot;iso&quot;:&quot;100&quot;,&quot;shutter_speed&quot;:&quot;0.002&quot;,&quot;title&quot;:&quot;Old diesel cars&quot;,&quot;latitude&quot;:&quot;38.430709283333&quot;,&quot;longitude&quot;:&quot;-79.817687633333&quot;}" data-image-title="Old diesel cars" data-image-description="<p>At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.</p>
" data-image-caption="" data-medium-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=600" data-large-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=696" loading="lazy" title="Old diesel cars" alt="" src="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=696" srcset="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=584&amp;h=438 584w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=1168&amp;h=876 1168w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=300&amp;h=225 300w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=600&amp;h=450 600w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=768&amp;h=576 768w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2924.jpg?w=900&amp;h=675 900w" sizes="(max-width: 584px) 100vw, 584px"></a></p>
<p>You may see newer cars in the parking lot, but they‚Äôre not used on campus. Only these blue diesel cars can go under and around the telescopes without causing problems.</p>
<p><a href="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg"><img data-attachment-id="16361" data-permalink="https://raoulpop.com/2012/04/15/chasing-rfi-waves-part-seven/old-diesel-cars-3/#main" data-orig-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg" data-orig-size="2048,1536" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;3.6&quot;,&quot;credit&quot;:&quot;Raoul Pop&quot;,&quot;camera&quot;:&quot;C3000Z&quot;,&quot;caption&quot;:&quot;At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.&quot;,&quot;created_timestamp&quot;:&quot;1133444689&quot;,&quot;copyright&quot;:&quot;Copyright 2005 Raoul Pop&quot;,&quot;focal_length&quot;:&quot;6.6&quot;,&quot;iso&quot;:&quot;100&quot;,&quot;shutter_speed&quot;:&quot;0.002&quot;,&quot;title&quot;:&quot;Old diesel cars&quot;,&quot;latitude&quot;:&quot;38.430709283333&quot;,&quot;longitude&quot;:&quot;-79.817687633333&quot;}" data-image-title="Old diesel cars" data-image-description="<p>At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.</p>
" data-image-caption="" data-medium-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=600" data-large-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=696" loading="lazy" title="Old diesel cars" alt="" src="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=696" srcset="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=584&amp;h=438 584w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=1168&amp;h=876 1168w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=300&amp;h=225 300w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=600&amp;h=450 600w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=768&amp;h=576 768w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2925.jpg?w=900&amp;h=675 900w" sizes="(max-width: 584px) 100vw, 584px"></a></p>
<p>Because they have no new technology to warm up the engine block on cold mornings, they keep them plugged in whenever they‚Äôre parked, to make sure they can be started right away and to keep down on the wear and tear on the engines.</p>
<p><a href="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg"><img data-attachment-id="16362" data-permalink="https://raoulpop.com/2012/04/15/chasing-rfi-waves-part-seven/an-old-diesel-truck/#main" data-orig-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg" data-orig-size="1890,1512" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;3.6&quot;,&quot;credit&quot;:&quot;Raoul Pop&quot;,&quot;camera&quot;:&quot;C3000Z&quot;,&quot;caption&quot;:&quot;At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.&quot;,&quot;created_timestamp&quot;:&quot;1133444604&quot;,&quot;copyright&quot;:&quot;Copyright 2005 Raoul Pop&quot;,&quot;focal_length&quot;:&quot;6.6&quot;,&quot;iso&quot;:&quot;100&quot;,&quot;shutter_speed&quot;:&quot;0.0025&quot;,&quot;title&quot;:&quot;An old diesel truck&quot;,&quot;latitude&quot;:&quot;38.430709283333&quot;,&quot;longitude&quot;:&quot;-79.817687633333&quot;}" data-image-title="An old diesel truck" data-image-description="<p>At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.</p>
" data-image-caption="" data-medium-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=600" data-large-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=696" loading="lazy" title="An old diesel truck" alt="" src="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=696" srcset="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=584&amp;h=467 584w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=1168&amp;h=934 1168w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=300&amp;h=240 300w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=600&amp;h=480 600w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=768&amp;h=614 768w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2923.jpg?w=900&amp;h=720 900w" sizes="(max-width: 584px) 100vw, 584px"></a></p>
<p>We were ferried around the NRAO campus in one of these cars by Mr. Sizemore, and they‚Äôre quite comfortable.</p>
<p><a href="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg"><img data-attachment-id="16363" data-permalink="https://raoulpop.com/2012/04/15/chasing-rfi-waves-part-seven/inside-an-old-diesel-car/#main" data-orig-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg" data-orig-size="2048,1536" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;2.8&quot;,&quot;credit&quot;:&quot;Raoul Pop&quot;,&quot;camera&quot;:&quot;C3000Z&quot;,&quot;caption&quot;:&quot;At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.&quot;,&quot;created_timestamp&quot;:&quot;1133444705&quot;,&quot;copyright&quot;:&quot;Copyright 2005 Raoul Pop&quot;,&quot;focal_length&quot;:&quot;6.6&quot;,&quot;iso&quot;:&quot;100&quot;,&quot;shutter_speed&quot;:&quot;0.033333333333333&quot;,&quot;title&quot;:&quot;Inside an old diesel car&quot;,&quot;latitude&quot;:&quot;38.430709283333&quot;,&quot;longitude&quot;:&quot;-79.817687633333&quot;}" data-image-title="Inside an old diesel car" data-image-description="<p>At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.</p>
" data-image-caption="" data-medium-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=600" data-large-file="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=696" loading="lazy" title="Inside an old diesel car" alt="" src="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=696" srcset="https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=584&amp;h=438 584w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=1168&amp;h=876 1168w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=300&amp;h=225 300w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=600&amp;h=450 600w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=768&amp;h=576 768w, https://raoulpop.com/wp-content/uploads/2012/04/rpop-2005-2926.jpg?w=900&amp;h=675 900w" sizes="(max-width: 584px) 100vw, 584px"></a></p>
<p>One thing I can‚Äôt get used to in these old cars is the gear shifter. It‚Äôs so long and seems so awkwardly placed‚Ä¶</p>
<h2>More on the telescopes</h2>
<p>One of the telescopes on site is used as a teaching instrument. NRAO, being involved in both research and educational efforts, brings groups of school-age children on-site to teach them about radio astronomy. The telescope is not a fancy, cryogenically cooled machine but a simple wire-mesh dish with simple control and monitoring gear that the kids can play with. It‚Äôs fully functional though, and it does pick up many radio waves. It‚Äôs sufficient to teach radio astronomy and galactic coordinate systems and such.</p>
<p>The National Youth Science Camp is just up the road from NRAO. For two weeks each summer, groups of teachers (high school and college) come to NRAO for an intense course in radio astronomy. The staff turn on the knowledge firehose and ‚Äúreally pour it on them‚Äù, as Mr. Sizemore puts it. They have classes during the day and then do research at night with the telescopes. He says it‚Äôs not unusual at the end of two weeks to see them walking around the campus, muttering to themselves.</p>
<p>After they complete the course, they can bring their own students to NRAO (for a day or so) and use the 40-foot learning telescope to teach them about radio astronomy without much intervention from NRAO Staff.</p>
<p>As the young researchers sit and wait by the telescopes for the stars to come into position, they have nothing to do, so they doodle or draw. Sue Ann Heatherly, the NRAO Education Officer, loves to collect the better ones and she puts them up on the walls of various NRAO corridors.</p>
<p>As we drove around, Mr. Sizemore pointed to a dish and told me it was a polar mount, and that I will never see a dish built like that again. It‚Äôs mounted on the plane of the galaxy (Milky Way) not the earth coordinate system. It‚Äôs a right ascension and declination mount. If you were to stand on the axis of the telescope and look at the sky, you would be looking directly at Polaris, the North Star. (By comparison, the GBT (Green Bank Telescope) is mounted as an elevation and azimuth drive system, which is an earth based system. )&nbsp;The reason this telescope was built like this in the 1950s is because computer power at that time wasn‚Äôt fast enough to translate between the coordinates of the galaxy and the solar system in realtime. Now even a pocket calculator can do it.</p>
<p>Although the telescope has been sitting unused for 10 years, they recently brought it back online in order to do atmospheric research studies with MIT. The study involves bouncing radio signals off the&nbsp;satellites&nbsp;around the Earth, then measuring those signals to see how they were perturbed by the atmosphere. The MIT researchers brought their own trailer on-site, with their own receiver and computer equipment. After some work mitigating RFI leaks from the trailer, they were ready to go and NRAO was happy to see the telescope back in action.</p>
<p>When it comes to the GBT (Green Bank Telescope) one of the things NRAO doesn‚Äôt want to do with such a large telescope is to set up vibrations in the structure when it‚Äôs started and stopped. The way they handle that is to mount both forward and reverse motors at each drive wheel. In order to stop or start it, all the technicians have to do is to increase the current on the motors that move in the direction they need, and the structure will stop or start as fast or as slow as they want it. When you think about this and other precision equipment mounted on the dish, like the laser leveling equipment and the motors that power each plate in the dish, Mr. Sizemore likened the GBT to ‚Äúbuilding a battleship with the precision of a Swiss watch‚Äù.</p>
<p><a href="https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg"><img data-attachment-id="15818" data-permalink="https://raoulpop.com/2012/03/04/chasing-rfi-waves-part-one/a-radio-telescope-at-nrao/#main" data-orig-file="https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg" data-orig-size="1536,2048" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;11&quot;,&quot;credit&quot;:&quot;Raoul Pop&quot;,&quot;camera&quot;:&quot;C3000Z&quot;,&quot;caption&quot;:&quot;At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.&quot;,&quot;created_timestamp&quot;:&quot;1125924367&quot;,&quot;copyright&quot;:&quot;Copyright 2005 Raoul Pop&quot;,&quot;focal_length&quot;:&quot;6.6&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0.00125&quot;,&quot;title&quot;:&quot;A radio telescope at NRAO&quot;,&quot;latitude&quot;:&quot;38.430709292547&quot;,&quot;longitude&quot;:&quot;-79.81768764009&quot;}" data-image-title="A radio telescope at NRAO" data-image-description="<p>At the National Radio Astronomy Observatory (NRAO), in Green Bank, West Virginia, USA.</p>
" data-image-caption="" data-medium-file="https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=450" data-large-file="https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=675" loading="lazy" title="A radio telescope at NRAO" alt="" src="https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=696" srcset="https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=584&amp;h=778 584w, https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=1168&amp;h=1556 1168w, https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=225&amp;h=300 225w, https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=450&amp;h=600 450w, https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=768&amp;h=1024 768w, https://raoulpop.com/wp-content/uploads/2012/03/rpop-2005-2403.jpg?w=675&amp;h=900 675w" sizes="(max-width: 584px) 100vw, 584px"></a></p>
<p>Even the track of the telescope is leveled to within 1/5,000th of an inch, and the rest of the structure is comparable to that all the way up. What about the land settling over time, I asked? There are no such problems, he replied, because they went all the way down to bedrock when they laid the foundation (about 40 feet).</p>
<p>The local cement contractor had no competition when it came to the contract for laying the foundation. The closest competitor was about 40 miles away, on the other side of the mountain, so he got the contract and had to rent three additional cement mixer/pouring trucks in order to keep up with the demand. For the entire period (three or four weeks) that it took to pour the foundation, the man kept grinning as his trucks pulled into the construction site, because he stood to make a lot of money.</p>
<h2>The NRQZ monitoring station</h2>
<p>While I was on-site, Mr. Sizemore showed me his ‚Äúhiding place‚Äù ‚Äì his monitoring station. It‚Äôs a big trailer that can be hauled from place to place, but has been made stationary and hooked up to the power lines. That‚Äôs where he does most of his work. Here he monitors the gross violations of the Quiet Zone and also looks at the local environment: powerline noise, illegal use of radios, etc.</p>
<p>For example, at the time of my visit there, the amateur radio bands were being used improperly by a group of people and the signal was strong enough to overload the 140-foot telescope, so it became a serious problem. Wesley told me that the problem will likely be taken care of long before I write up about it, and the likely action taken will be that he calls the FCC in to enforce the rules in place. After 20 years on the job, Wesley has built up a network of contacts he can call upon when he needs help. One of those contacts is the man in charge of the Enforcement Bureau at the FCC, whom Wesley knew when he was still a satellite technician.</p>
<p>While I was recording our talk, I asked Wesley if he could see the interference generated by my recorder, and he worked up a quick setup to find the noise it created. Sure enough, he tuned into the noise generated by my iPod as it was recording our conversation within a couple of minutes.</p>
<p>One of the teaching tools he uses with school groups that visit NRAO is a metal trashcan (a Faraday cage with an antenna and amplifier mounted inside the lid). He takes his spectrum analyzer, connects it to the antenna and amplifier assembly, then gets a student volunteer to put in their phone or laptop or MP3 player, then he shows the whole group the interference those devices create. The only thing the antenna sees is the RFI generated by the device put in the trash can, because it‚Äôs a Faraday cage. Everyone is invariably wowed by this.</p>
<p>As we drove around the NRAO campus, we came across a car with a ‚Äú<a href="http://en.wikipedia.org/wiki/Cantenna" target="_blank">cantenna</a>‚Äù (a directional waveguide antenna for long-range WiFi), and I immediately pointed it out to Mr. Sizemore, as I knew he‚Äôd be on the lookout for WiFi transmissions in the area. Smirking, he admitted that was his service car, and he told me the story behind it. The FCC had donated it to NRAO, who had been using it to sniff out illegal transmissions. The car actually had antennas built into its roof and was already fitted with equipment for sniffing out radio transmissions. Mr. Sizemore outfitted it with WiFi ‚Äúsniffing‚Äù equipment as well: a laptop with NetStumbler and a bunch of other apps, a GPS device for marking the location of RFI-causing WiFi and a ‚Äúcantenna‚Äù on the roof, that he could rotate and point at various WiFi sources.</p>
<p>Before retiring from NRAO (years after my interviews with him), Mr. Sizemore <a href="http://www.usatoday.com/tech/science/2009-01-02-interference-hunters_N.htm?csp=34" target="_blank">outfitted a new Dodge Ram extended cab truck as an RFI vehicle</a>, a feat which was written up in USA Today.</p>
<h2>NRAO and the community</h2>
<p>As we drove around the campus, Mr. Sizemore pointed to the farmhouses that surrounded NRAO. When the government took over the land, they invoked the right of imminent domain, forcing the farmers to move. That generated animosity toward the observatory, because the land was fertile and it was good for farming.</p>
<p>With time, things got better, to the point where there was only one farmer left who couldn‚Äôt stand NRAO and wouldn‚Äôt ever let them step on his property. All of the powerlines and phone lines for NRAO were routed around his property.&nbsp;At one point, the man chased Mr. Sizemore‚Äôs predecessor off with a stick. If NRAO staff ever had to go visit him, they‚Äôd take a deputy sheriff with them. When Mr. Sizemore began working there, he knew to steer clear of the farm.</p>
<p>One day though, he got a call from the man. He had an outside TV amplifier, a tube-type amplifier made by a company called Blonder-Tongue, which had been struck by lightning. The old man couldn‚Äôt find anyone to repair it and he didn‚Äôt want to spend money to get a new one. He called the only one whom he knew could help. Mr. Sizemore was of course glad to do it, because he‚Äôd finally be able to atone for the bad blood between NRAO and the farmer.</p>
<p>He drove out to the man‚Äôs place, where he had to wait off the property for the amplifier to be brought to him (he still wasn‚Äôt allowed on the farm) and took it back to the lab to see what he could do.</p>
<p>He called Blonder-Tongue&nbsp;and was told they hadn‚Äôt made that amplifier model in 20 years, and they hadn‚Äôt serviced it for 10 years. They didn‚Äôt think they could help. Mr. Sizemore insisted he speak with a supervisor and as luck would have it, the repair supervisor was an elderly guy who remembered working on them when he‚Äôd started with the company. He said, ‚ÄúSend it to me, and I‚Äôll show these young technicians how things used to be.‚Äù Mr. Sizemore explained the entire situation to the man, about NRAO and the farmer, then mailed off the amplifier to the repair supervisor.</p>
<p>The amplifier came back repaired and it didn‚Äôt cost anything either. The old farmer was elated when he got it back. He put it back up and everything was fine until a week later, when he called Mr. Sizemore. You know the old saying about lightning not striking twice? Not true for the old man. His amplifier had been struck again.</p>
<p>He didn‚Äôt want to let Mr. Sizemore examine his property, to see if the lightning strikes could be prevented, so all he could do was to mail it off to Blonder-Tongue&nbsp;once more. Sure enough, it came back repaired as new again, at no charge. Thankfully, to the day of the interview, the amplifier evaded other lightning strikes so things were fine between NRAO and the old man.</p>
<p>Thanks to Mr. Sizemore‚Äôs efforts, NRAO enjoys a very good relationship with the community. Being an isolated rural community, where all they have is each other, they tend to pull together and help each other.</p>
<p>For example, some people had learned to recognize the interference from awry TV amplifiers, which would show up as a herringbone pattern on their sets, and would call Mr. Sizemore to let him know. They also knew what powerline interference looked like, because it would show up on their sets once again, generating a specific noise pattern.</p>
<p>The NRAO site is basically a wildlife preserve. They let the animals live and roam free. The only practice they instituted a few years back was a controlled deer hunt, because the deer population had gotten out of control. Before they began, the Wildlife Management Institute wanted to do a headcount of the deer, so they fitted a plane with thermal imaging equipment and started to fly over the NRAO site one night.</p>
<p>Because they hadn‚Äôt publicized this, the local people didn‚Äôt know what was happening and all they could see was a plane which kept circling over NRAO at night. They thought the plane was in trouble, so they all pulled together, drove to the local airport (next to NRAO) and shone their headlights on the landing strip, to help it land. Well, after a while, they figured out the plane wasn‚Äôt in trouble and went home, but let‚Äôs just say that the next time WMI decided to do nighttime wildlife studies, they publicized it widely, to make sure everyone knew what was going on.</p>
<h2>The NEACP encounters</h2>
<p>As we talk about flyovers, another good story is that of the NEACP encounters. When the Cold War was going on, the US Military always had an aircraft in the air at all times, an airborne command post (<a href="http://en.wikipedia.org/wiki/National_Emergency_Airborne_Command_Post" target="_blank">NEACP</a>: National Emergency Airborne Command Post). There were multiple such aircraft in service and one was in flight at all times. One would take off before one would land.</p>
<p>When they would fly over NRAO, all the radio equipment on board those planes (they used 1,000 Watt transmitters) would overload NRAO‚Äôs equipment with RFI. Mr. Sizemore found the number for <a href="http://en.wikipedia.org/wiki/Cheyenne_Mountain" target="_blank">CMOC</a> (Cheyenne Mountain Operations Center) and spoke to one of the people involved with NEACP. He introduced himself and said, ‚ÄúYou have this aircraft, using this callsign, operating at this frequency, at this location.‚Äù They got upset right away, because they didn‚Äôt want anyone to know what their routes were. They started questioning Mr. Sizemore about the source of his information, to which he simply replied, ‚ÄúI used a 300-foot telescope and I looked at your aircraft.‚Äù Then he continued to explain: ‚ÄúI have to track this source of interference down. That is my job. I have a solution. Let me send you my observing schedule every month, to tell you what frequencies I‚Äôll be observing on what days and tell you my station, and then you‚Äôll be able to avoid me. And if you can‚Äôt avoid me, you can let me know, and I‚Äôll tell the astronomers to take a coffee break.‚Äù</p>
<p>As a result of that phone call, Mr. Sizemore got the NEACP to avoid the Green Bank area, and when they couldn‚Äôt avoid it, he got a few calls from them when they had to pass over NRAO, after which he would quickly tell the astronomers to take a break, as their equipment would soon get overloaded, making the data unusable.</p>
<hr>
<p>That‚Äôs the end of part seven and the series. As mentioned at the start, this work is unfinished, and that‚Äôs why you don‚Äôt see a nice story arc with good closure, but I hope that what I‚Äôve published has proven enjoyable and interesting for you and has sparked your interest in radio astronomy and NRAO.&nbsp;You can also read parts&nbsp;<a title="Chasing RFI Waves - Part One" href="https://raoulpop.com/2012/03/04/chasing-rfi-waves-part-one/" target="_blank">one</a>, <a title="Chasing RFI Waves ‚Äì Part&nbsp;Two" href="https://raoulpop.com/2012/03/11/chasing-rfi-waves-part-two/" target="_blank">two</a>,&nbsp;<a title="Chasing RFI Waves - Part Three" href="https://raoulpop.com/2012/03/04/chasing-rfi-waves-part-three/" target="_blank">three</a>,&nbsp;<a title="Chasing RFI Waves - Part Four" href="https://raoulpop.com/2012/03/04/chasing-rfi-waves-part-four/" target="_blank">four</a>,&nbsp;<a title="Chasing RFI Waves ‚Äì Part&nbsp;Five" href="https://raoulpop.com/2012/04/01/chasing-rfi-waves-part-five/" target="_blank">five</a>, and&nbsp;<a title="Chasing RFI Waves ‚Äì Part&nbsp;Six" href="https://raoulpop.com/2012/04/08/chasing-rfi-waves-part-six/" target="_blank">six</a>.</p>
<p>I‚Äôd like to once again thank Wesley Sizemore, without whom this text would not be written (or edited properly). Thank you Mr. Sizemore!</p>
<p>Thank you for reading!</p>

			
			
<div>
	
	<hr>
	

	
	<h3>Discover more from Raoul Pop</h3>
	

	
	<p>Subscribe to get the latest posts sent to your email.</p>
	

	
	
	
</div>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tesla's team to suppress driving range complaints (2023) (399 pts)]]></title>
            <link>https://www.reuters.com/investigates/special-report/tesla-batteries-range/</link>
            <guid>43314781</guid>
            <pubDate>Sun, 09 Mar 2025 22:53:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/investigates/special-report/tesla-batteries-range/">https://www.reuters.com/investigates/special-report/tesla-batteries-range/</a>, See on <a href="https://news.ycombinator.com/item?id=43314781">Hacker News</a></p>
Couldn't get https://www.reuters.com/investigates/special-report/tesla-batteries-range/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Apple Exclaves (294 pts)]]></title>
            <link>https://randomaugustine.medium.com/on-apple-exclaves-d683a2c37194</link>
            <guid>43314657</guid>
            <pubDate>Sun, 09 Mar 2025 22:38:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://randomaugustine.medium.com/on-apple-exclaves-d683a2c37194">https://randomaugustine.medium.com/on-apple-exclaves-d683a2c37194</a>, See on <a href="https://news.ycombinator.com/item?id=43314657">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><div><div><div aria-hidden="false"><a rel="noopener follow" href="https://randomaugustine.medium.com/?source=post_page---byline--d683a2c37194---------------------------------------"><div><p><img alt="Random Augustine" src="https://miro.medium.com/v2/resize:fill:88:88/1*JzVOzY_-CTbUeQaYyCEWqQ.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a></div><figure></figure><h2 id="37a1">The Issue with Monolithic Operating System Kernels</h2><p id="294f">Modern operating systems typically divide their operations into two main protection domains: the <em>unprivileged domain</em> (user mode) and the <em>privileged domain</em> (kernel mode). Software spends most of its time running in user mode, where it is restricted from directly performing powerful operations such as accessing files or communicating on a network. To carry out these actions, software must temporarily elevate to kernel mode by making a <em>system call</em>, which is a request to the kernel to take over and perform the desired operation. For example, when a program wants to open a file, it makes a system call which switches the program to running kernel code in kernel mode. The kernel code verifies the program is allowed to access that file, and then returns a special handle representing the now opened file back to the program in user mode.</p><p id="ecd6">Most operating systems use a <em>monolithic kernel</em> design, where the kernel has unrestricted access to the entire system ‚Äî all hardware, memory, and user data. In an ideal world, where software is flawless and no one attempts to compromise security, this design may be satisfactory. However, software often contains bugs, and some of those bugs lead to security vulnerabilities. Given that monolithic kernels are large, they present more opportunities for these vulnerabilities to arise and be exploited. Once a vulnerability is successfully exploited, it can lead to a complete system compromise, as all the operating system‚Äôs functions are bundled together in the kernel‚Äôs single ‚Äúbasket of eggs‚Äù.</p><p id="3efb">An alternative kernel design, known as a <em>microkernel</em>, minimizes the functions within the kernel itself, pushing most operations into separate, unprivileged processes. This can improve security by isolating potential vulnerabilities. However, microkernels can suffer from performance issues, and push extra complexity onto the application software. As a result, monolithic kernels remain prevalent, and the vulnerabilities associated with them continue to be a problem.</p><p id="3cab">The kernel shared in common between iOS, macOS, tvOS, visionOS and watchOS ‚Äî named XNU ‚Äî is based on a microkernel called Mach. However, the way XNU has been implemented places all system functions within the same privileged scope and it effectively operates as a monolithic kernel. The XNU kernel, like all monolithic kernels, suffers from unfortunately common vulnerability discoveries.</p><h2 id="163d">Isolation Efforts</h2><p id="2632">Over the years, a variety of software and hardware-based mitigations have been developed to isolate some parts systems from their more vulnerable monolithic kernels. Below are some notable non-Apple examples:</p><ul><li id="321d">Microsoft Virtualisation-based Security (VBS) used for <em>Credential Guard </em>in Windows</li><li id="d52b">Intel Software Guard Extension (SGX) and VT-X2</li><li id="0d82">ARM TrustZone ‚Äî Powers features like Samsung Knox, Samsung Pay, Android Verified Boot, Android secure PIN entry</li></ul><p id="364d"><em>Apple has also increasingly attempted to isolate data from the kernel and these are covered below.</em></p><h2 id="910e">2013 ‚Äî Apple Secure Enclave</h2><p id="ebcc">In 2013 Apple released the iPhone 5s, the first iPhone containing a Secure Enclave. The Secure Enclave is implemented on a dedicated, hardened CPU core running a microkernel-based OS called <em>SepOS</em>. The underlying kernel in SepOS is <em>cL4</em>, Apple‚Äôs custom version of the L4-embedded microkernel. The Secure Enclave is used to store and protect sensitive data like encryption keys and biometric information (e.g., Face ID). The Secure Enclave operates independently of the iOS kernel and only provides its services to iOS through controlled, secure interactions. Even if the iOS kernel is compromised, the Secure Enclave remains largely unaffected unless an additional exploit targets it.</p><p id="438a">Do not confuse the Secure E<strong>n</strong>clave with the subject of this article, Secure E<strong>x</strong>claves!</p><h2 id="ec46">2017 ‚Äî Page Protection Layer</h2><p id="4afc">With the release of the iPhone 8 and iPhone X containing the A11 processor, Apple introduced a security feature known as the <em>Page Protection Layer (PPL)</em>. This hardware+software feature isolated a small part of the kernel and gave it privileges to modify memory page tables ‚Äî critical structures that manage memory access. The rest of the kernel lost the ability to directly modify these page tables. The PPL‚Äôs limited attack surface ensured that bypasses were infamously rare. While PPL added a layer of protection, it was only partly effective as the rest of the kernel still held most privileges required to compromise data without modifying page tables.</p><h2 id="5b0b">2021‚Äì2023 ‚Äî Secure Page Table Monitor</h2><p id="9c23">Following PPL, the release of the iPhone 13 containing the A15 processor introduced new functionality utilised in iOS 17: the <em>Secure Page Table Monitor</em> (SPTM). This replaced and improved upon the PPL by securing additional memory functions and dividing them into subsystems, further isolating small kernel components. Validation of code signatures, confirming that all code had been signed by Apple was also isolated.</p><p id="861b">Around this time, oblique references to <em>exclaves</em> began to surface in XNU source code. These exclaves were speculated to be the subsystems managed by SPTM. Then 2024 happened‚Ä¶</p><h2 id="1e82">2024 ‚Äî Exclaves: A major addition to XNU</h2><p id="7a85">With the release of XNU source code supporting M4 and A18 based systems (such as the iPhone 16), the curtain was partly pulled back on exclaves. (Exclaves are <em>not</em> active on prior processors).</p><p id="9904"><em>It is now clear that exclaves are part of a much larger redesign of XNU‚Äôs security model.</em></p></div><div><h2 id="5029">XNU Exclaves</h2><p id="6fc0"><em>Disclaimer: This analysis will not be 100% correct ‚Äî many parts of exclaves aren‚Äôt open sourced and their inner workings are only inferred or I am speculating.</em></p><figure><figcaption>Conclave of 2005: White smoke indicates a new Pope has been elected; in this case Pope Benedictus XVI</figcaption></figure><p id="fa62">Exclaves are a new set of features that represent a significant enhancement for XNU‚Äôs traditional monolithic kernel. Exclaves refer to resources that are isolated from XNU, protected even if the kernel is compromised. These resources are pre-defined when the OS is built, are identified by name or id, have different types, are initialised at boot time, and are organized into unique domains. SPTM protects exclave memory from XNU with new exclave-specific page types. Types of resources include:</p><ul><li id="6a35"><em>Shared memory buffers </em>that can be accessed by both the kernel and the exclave, with the option to make them read-only or read-write to XNU.</li><li id="b491"><em>Audio buffers</em> and <em>sensors</em> that are used for securing features like the camera and microphone access indicators.</li><li id="fbc6"><em>Conclaves</em> that group multiple resources into their own secure domains and their corresponding <em>Conclave Managers</em></li><li id="a21a"><em>Services</em> that can execute code within the exclave space when called upon by threads in XNU.</li></ul><figure><figcaption>Threads change context between different privilege levels and worlds</figcaption></figure><h2 id="b3dc">Secure Kernel ‚Äî seL4?</h2><p id="0de0">To allow for execution of exclave Services while isolated from XNU, Apple has introduced a new kernel called the Secure Kernel (SK). The SK image file contains a version string for ‚ÄúcL4‚Äù. While I have not attempted to disassemble SK, there are many indications that it is based on the seL4 kernel despite the ‚ÄúcL4‚Äù name. The IPC structures used by XNU to communicate with SK closely align with seL4 rather than L4-embedded used for the original SepOS cL4 kernel. Strings in SK frequently mention capabilities, frames, untyped memory, minting, and so on which are also more closely aligned with seL4.</p><p id="bfb2">Perhaps it isn‚Äôt a coincidence that the seL4 Foundation publicly announced that Apple had joined in April 2024. Incidentally, the kernel for the C1 processor, Apple‚Äôs new baseband chip, is also based on some version of L4 so Apple is heavily invested in this space.</p><h2 id="d6ec">Secure Worlds ‚Äî ARM TrustZone?</h2><p id="1ac5">As previously mentioned, SepOS runs on a dedicated processor for maximum isolation. In contrast, SK runs on the same high speed application processors as XNU/iOS. To make this possible, additional processor privilege levels are required ‚Äî likely supported by virtualization extensions, Apple specific additions to SPTM, or most likely via ARM‚Äôs <em>TrustZone</em> technology. The XNU source code contains several references regarding transitions to and from TrustZone‚Äôs concept of a <em>secure world</em>, and it would be the cleanest implementation method.</p><p id="3892">TrustZone divides the system into two worlds: the <em>Secure World</em> and the <em>Insecure World</em>. ARM provides several design patterns for TrustZone, and Apple appear to have been influenced by these. XNU (and iOS) run in the insecure world while SK operates in the secure world. SK provides a limited operating environment for exclaves, resources and services, differing from the Trusted Applications design pattern suggested by ARM. Given the isolated nature of exclave services and the limited attack surface of the Secure Kernel, escaping from the secure world to compromise XNU is likely to be much more difficult than exploiting it directly from the insecure world.</p><p id="b718">Apple <em>may</em> use SPTM to manage transitions between the secure and insecure worlds, though this is speculation on my part, as it is not open-sourced so disassembly of the binaries is required. The code refers to this transition as a <em>RINGGATE</em>.</p></div><div><h2 id="6c7b">A Deeper Dive</h2><figure></figure><h2 id="82fc">Domains and Resources</h2><p id="e4e9">XNU initialises a two-level kernel table structure to hold information on exclave <em>resources </em>discovered during boot. Each resource is exclusively of one resource type and holds information on a resource that exists in the secure world, or in both worlds.</p><p id="0856">The <em>root_table</em> identifies <em>domains</em> by name, with each domain referencing a second level table holding all the <em>resources</em> for that domain. Domains and their resources discovered so far include:</p><p id="1da3"><strong>com.apple.kernel </strong>‚Äî this domain contains many resources used by the kernel including:</p><ul><li id="329f">com.apple.service.ConclaveLauncherControl ‚Äî conclave launcher service</li><li id="7ba8">com.apple.service.ConclaveLauncher_Debug ‚Äî debug service</li><li id="4457">com.apple.service.ExclaveIndicatorController ‚Äî service for secure indicator lights</li><li id="e230">com.apple.service.LogServer_XNUProxy ‚Äî service for logging</li><li id="38ca">com.apple.service.FrameMint ‚Äî service used to boot ExclaveKit</li><li id="4245">com.apple.storage.backend ‚Äî Shared memory buffer used by exclave services to do file IO from XNU space via upcalls (more details below)</li><li id="95fc">Conclave Manager x ‚Äî One per conclave, used to control a conclave</li><li id="331b">Conclave Manager y ‚Ä¶</li></ul><p id="7718"><strong>com.apple.darwin </strong>‚Äî No open-source components use this domain</p><p id="b5b9"><strong>com.apple.conclave.name</strong> ‚Äî There is one domain per conclave.</p><ul><li id="06da">service_x</li><li id="e73c">service_y</li><li id="d0fb">audio buffer</li><li id="7502">shared memory buffer</li><li id="0c5d">etc</li></ul><p id="2f5a"><strong>com.apple.driver.<em>name</em> </strong>‚Äî One domain per device driver ‚Äî existence of these domains is based on comments, not actually seen in open-sourced code. I suspect these are just per-driver conclaves.</p><h2 id="9a8b">Conclaves</h2><p id="785f">A conclave is a type of resource that itself can contain multiple resources. However, it is much more than just a container of resources. Conclaves allow a group of services and other resources to have shared access to each other, and Mach tasks are limited in what (if any) conclaves they can call upon.</p><p id="a3d8">Each conclave has a <em>Conclave Manager</em> (another type of exclave resource), located in the kernel domain.</p><p id="eea9">Conclaves have a lifecycle, whereby their Conclave Manager is first <em>attached</em> to a Mach task, and are then <em>launched</em>. They can also be stopped and detached. States such as <em>launching</em> and <em>stopping</em> exist during transitions in the lifecycle.</p><h2 id="5805"><strong>Conclaves ‚Äî Spawning and Attaching</strong></h2><p id="7581">The XNU posix_spawn() function can call task_add_conclave() to attach a task and a conclave manager resource together. This is a 1:1 relationship ‚Äî only one task can be attached to a conclave manager and vice versa. Only launchd and tasks with the <em>com.apple.private.exclaves.conclave-spawn</em> entitlement may spawn a conclave. The <em>com.apple.private.exclaves.conclave-host </em>entitlement is largely similar, but I believe only entitles a task to attach itself, rather than being able to spawn a new task for this purpose.</p><p id="6ac1">The kernel looks up the associated conclave manager resource for the targeted conclave in the <em>com.apple.kernel</em> domain. It then saves a <em>tightbeam</em> endpoint to the conclave manager‚Äôs endpoint in the conclave‚Äôs resource struct. This endpoint is where all future control of the conclave is directed. Tightbeam appears to be an RPC framework for communication between exclave components.</p><p id="acb7">Note this attachment is to a <em>task</em> ‚Äî not a <em>thread</em>. Execution of services will be covered later.</p><p id="65a9">Conclave manager tasks are <em>not</em> allowed to have kernel domain privileges.</p><h2 id="d948"><strong>Conclaves ‚Äî Launching</strong></h2><p id="673f">Once attached, a conclave may be <em>launched</em>. The launch attempt must be performed from the conclave manager task attached to the conclave. Attempts to launch conclaves also wait until exclaves have fully booted (into state EXCLAVES_BS_BOOTED_EXCLAVEKIT ‚Äî more on this later).</p><p id="747d">A new mach trap (ie system call) for exclave functionality has been added to XNU and ends up in the <em>_exclaves_ctl_trap() </em>function. This call is overloaded and can perform different <em>operations</em> passed in as parameters. The relevant operation to launch a conclave is EXCLAVES_CTL_OP_LAUNCH_CONCLAVE.</p><p id="1ab0">The launch operation calls a redacted function, <em>conclave_launcher_conclavecontrol_launch() </em>and passes it the tightbeam connection to the conclave manager to perform the launch. I suspect this requests the initialisation of executable code and resources for the conclave within the secure world.</p><p id="d027">In production, conclave hosts can be <em>tainted</em> when launched, and an exit() may then cause a kernel panic.</p><h2 id="5d4d">A New Mach Trap / System Call</h2><p id="610a">As mentioned, the _exclaves_ctl_trap() function handles a new Mach trap for exclave functionality. The call is overloaded, with its action dependent on an operation parameter, and it generally verifies entitlements to the operations called. The operations are:</p><ul><li id="7707">EXCLAVES_CTL_OP_BOOT ‚Äî Called twice during the system boot process ‚Äî firstly to start exclaves boot stage 2, and then to boot stage ExclaveKit. The caller must be launchd or have the com.apple.private.exclaves.boot entitlement.</li></ul><p id="33ff"><em>All operations below, at minimum, require the current task to have the com.apple.private.exclaves.kernel-domain entitlement, or be the relevant conclave manager task</em></p><ul><li id="07d0">EXCLAVES_CTL_OP_LAUNCH_CONCLAVE ‚Äî launch a conclave, discussed earlier</li><li id="dea1">EXCLAVES_CTL_OP_LOOKUP_SERVICES ‚Äî lookup an exclave service and copy its struct to a userspace buffer. First it looks in the exclave domain of the current task, if that fails it checks the Darwin domain followed by kernel domain ‚Äî if it is entitled to do so</li><li id="5b78"><strong>EXCLAVES_CTL_OP_ENDPOINT_CALL</strong> ‚Äî calls the endpoint for an exclave service in the current task‚Äôs domain ‚Äî this will result in the current thread switching from kernel mode to the secure world and executing specific code there</li><li id="4b58">EXCLAVES_CTL_OP_NAMED_BUFFER_CREATE ‚Äî create a named buffer resource</li><li id="343b">EXCLAVES_CTL_OP_NAMED_BUFFER_COPYIN ‚Äî copy data from a userspace buffer to a kernel buffer (that is shared with exclaves)</li><li id="7e58">EXCLAVES_CTL_OP_NAMED_BUFFER_COPYOUT ‚Äî copy data from a kernel buffer (that is shared with exclaves) to a userspace buffer</li><li id="ed65">EXCLAVES_CTL_OP_AUDIO_BUFFER_CREATE ‚Äî can an audio buffer</li><li id="4258">EXCLAVES_CTL_OP_AUDIO_BUFFER_COPYOUT ‚Äî copy data from audio buffer to userspace buffer</li><li id="3d7d">EXCLAVES_CTL_OP_SENSOR_CREATE ‚Äî create a sensor resource (eg. camera, microphone)</li><li id="d56d">EXCLAVES_CTL_OP_SENSOR_START</li><li id="406f">EXCLAVES_CTL_OP_SENSOR_STOP</li><li id="3a23">EXCLAVES_CTL_OP_SENSOR_STATUS</li><li id="edf9">EXCLAVES_CTL_OP_NOTIFICATION_RESOURCE_LOOKUP ‚Äî create a notification resource ‚Äî TBD, but likely for coordination/scheduling</li></ul><h2 id="88a8">Downcalls ‚Äî running code in the secure world</h2><p id="c102">Downcalls are calls to exclave <em>Services‚Äô </em>endpoints in the secure world ‚Äî this is where secure world code execution happens.</p><p id="8349">There is a great deal of complexity in these calls, primarily around managing thread/IPC contexts and scheduling the current thread to execute code in the secure world.</p><ol><li id="1347">Downcalls switch the current thread into the secure world and start executing at an entry point in secure code, rather than asking some other thread to perform work on behalf of the current thread.</li><li id="ca8a">Calling tasks must have kernel domain entitlements or be the conclave manager task attached to the service‚Äôs conclave.</li><li id="237b">Conclaves have a maximum of 128 services that can be called</li><li id="ffd3">It appears that threads are scheduled into the secure kernel (via the sk_enter() function) by XNU. XNU appears to handle the scheduling of <em>all</em> threads in the secure world, with SK potentially not having any independent threads of its own.</li><li id="d4bf">A thread executing in the secure world can perform a temporary <em>upcall</em> to XNU, which returns the thread to kernel mode for the upcall, before a mandatory return <em>back</em> to the secure world context. More detail on upcalls will be provided further below.</li><li id="7c94">Threads executing in the secure world can do normal scheduler type things like yield, wait, be suspended, or be interrupted. When this happens, the thread leaves the secure world and returns to the XNU kernel context. From there it must be rescheduled back into the secure world by exclave scheduling code in XNU. The thread will continue to be rescheduled into the secure world as necessary until the downcall is completed.</li><li id="9e02">If a secure world thread is panic()ing on a CPU core (which will call on XNU to panic via SPTM), fresh tasks are no longer scheduled into the secure world on other cores and they wait for a timeout period. If everything goes correctly, the waiting threads will never finish their wait. However if the timeout expires, the waiting threads will then ‚Ä¶ panic() :)</li><li id="de4a">XNU appears to handle all interrupt processing, rather than SK. When XNU is finished handling an interrupt, the interrupted thread is returned to the secure world if it was executing there. Directing interrupts to either the insecure or secure kernel is an ARM TrustZone feature.</li><li id="d706">IPC structures for the downcall are setup with request and response buffers before entering the secure world through the redacted sk_enter() call.</li><li id="c8da">Interrupts and pre-emption are disabled while finalising the IPC request structure and calling sk_enter(). This is because there is only one of these structures <em>per core</em>. I suspect the redacted path travelled after calling sk_enter() and entering the secure world copies the request from the per-cpu structure into secure world memory, and then re-enables interrupts and pre-emption on the core. The alterative would be ugly. A similar process happens in reverse for protecting the per-cpu response structure.</li><li id="2e37">Disconcertingly, the downcall response can come back via a different CPU‚Äôs per-core response buffer, as the downcall may have been interrupted, upcalled, or yielded and needed rescheduling.</li><li id="1fdc">Coordination of a thread‚Äôs exclave status (to avoid SK re-entry etc) occurs via <em>th_exclaves_state</em> ‚Äî a bitfield in the thread structure.</li></ol><h2 id="3742">Upcalls ‚Äî Secure World calls to XNU</h2><p id="102d">A thread running in the secure world due to a downcall may need assistance from XNU and this can be achieved through an upcall to the exclaves upcall handler via the Tightbeam framework. Upcalls are limited to specific functions within XNU. A thread desiring an upcall returns to the insecure world where the specific upcall handler is called. While in this state, the thread cannot return to user mode (for obvious reasons) nor perform another downcall to the secure world, ie it is not allowed to ‚Äúre-enter‚Äù exclaves. Instead the thread will be returned to the secure world at the point where it performed the upcall.</p><p id="b346">Allowed upcalls discovered in the source end up inside the following functions:</p><p id="c245"><strong>Memory<br></strong>exclaves_memory_upcall_alloc(npages, kind, completion);<br>exclaves_memory_upcall_free(pages, npages, kind, completion);</p><p id="e369"><strong>File storage<br></strong>exclaves_storage_upcall_root(exclaveid, completion);<br>exclaves_storage_upcall_open(fstag, rootid, name, completion);<br>exclaves_storage_upcall_close(fstag, fileid, completion);<br>exclaves_storage_upcall_create(fstag, rootid, name, completion);<br>exclaves_storage_upcall_read(fstag, fileid, descriptor, completion);<br>exclaves_storage_upcall_write(fstag, fileid, descriptor, completion);<br>exclaves_storage_upcall_remove(fstag, rootid, name, completion);<br>exclaves_storage_upcall_sync(fstag, op, fileid, completion);<br>exclaves_storage_upcall_readdir(fstag, fileid, buf, length, completion);<br>exclaves_storage_upcall_getsize(fstag, fileid, completion);<br>exclaves_storage_upcall_sealstate(fstag, completion);</p><p id="6b87"><strong>DriverKit<br></strong>exclaves_driverkit_upcall_irq_register(id, index, completion);<br>exclaves_driverkit_upcall_irq_remove(id, index, completion);<br>exclaves_driverkit_upcall_irq_enable(id, index, completion);<br>exclaves_driverkit_upcall_irq_disable(id, index, completion);<br>exclaves_driverkit_upcall_timer_register(id, completion);<br>exclaves_driverkit_upcall_timer_remove(id, timer_id, completion);<br>exclaves_driverkit_upcall_timer_enable(id, timer_id, completion);<br>exclaves_driverkit_upcall_timer_disable(id, timer_id, completion);<br>exclaves_driverkit_upcall_timer_set_timeout(id, timer_id, duration,completion);<br>exclaves_driverkit_upcall_timer_cancel_timeout(id, timer_id, completion);<br>exclaves_driverkit_upcall_lock_wl(id, completion);<br>exclaves_driverkit_upcall_unlock_wl(id, completion);<br>exclaves_driverkit_upcall_async_notification_signal(id, notificationID, completion);<br>exclaves_driverkit_upcall_mapper_activate(id,mapperIndex, completion);<br>exclaves_driverkit_upcall_mapper_deactivate(id, mapperIndex, completion);<br>exclaves_driverkit_upcall_notification_signal(id, mask, completion);</p><p id="df95"><strong>DriverKit Apple Neural Engine<br></strong>exclaves_driverkit_upcall_ane_setpowerstate(id, desiredState, completion);<br>exclaves_driverkit_upcall_ane_worksubmit(id, requestID, taskDescriptorCount, submitTimestamp, completion);<br>exclaves_driverkit_upcall_ane_workbegin(id, requestID, beginTimestamp, completion);<br>exclaves_driverkit_upcall_ane_workend(id, requestID, completion);</p><p id="bda7"><strong>Conclaves<br></strong>exclaves_conclave_upcall_suspend(flags, completion);<br>exclaves_conclave_upcall_stop(flags, completion);<br>exclaves_conclave_upcall_crash_info(shared_buf, length, completion);</p><h2 id="9a54">The XNUProxy</h2><p id="83f9">References to XNUProxy abound, yet I haven‚Äôt been able to definitely pin down exactly what and where it is. Options I have considered include:</p><ul><li id="5dfd">It‚Äôs an exclave domain of its own, something like com.apple.xnuproxy</li><li id="83f2">It‚Äôs an exclave service or bunch of services that runs in the com.apple.kernel domain, serving particular types of downcalls.</li><li id="4bad">It‚Äôs a subsystem in SPTM for making downcalls to the secure world‚Ä¶</li></ul><p id="eadb">Comments in Exclaves_L4.h state that the XNU Proxy makes the following exclaves reachable (aside from testing ones, usually featuring the word ‚ÄúHELLO‚Äù in them):</p><ul><li id="8b3b">EXCLAVES_XNUPROXY_EXCLAVE_USERAPP/2/3 (templated user app‚Ä¶)</li><li id="9bce">EXCLAVES_XNUPROXY_EXCLAVE_AUDIODRIVER</li><li id="3801">EXCLAVES_XNUPROXY_EXCLAVE_EXCLAVEDRIVERKIT</li><li id="0ddb">EXCLAVES_XNUPROXY_EXCLAVE_SECURERTBUDDY_AOP (RT Buddy for Always On Processor)</li><li id="0b1b">EXCLAVES_XNUPROXY_EXCLAVE_SECURERTBUDDY_DCP (for Display Coprocessor)</li><li id="382f">EXCLAVES_XNUPROXY_EXCLAVE_CONCLAVECONTROL (conclave launcher control)</li><li id="858a">EXCLAVES_XNUPROXY_EXCLAVE_CONCLAVEDEBUG</li><li id="9042">EXCLAVES_XNUPROXY_EXCLAVE_SECURERTBUDDY_AOP_EDK (ExclaveDriverKit connection for Always On Processor)</li><li id="4164">EXCLAVES_XNUPROXY_EXCLAVE_SECURERTBUDDY_DCP_EDK (ExclaveDriverKit connection for Display CoProcessor)</li></ul><p id="569c">Note RTBuddys are for communicating with RTKit, yet another Apple Operating System, that runs on the Display Coprocessor, Apple Neural Engine, NVMe controller, SMC Controller, Smart Keyboards, Siri Remote, Apple Pencil, AirPods, AirTags‚Ä¶ and I assume the AOP.</p><h2 id="f4d0">Booting Stage 1</h2><p id="16de">Booting exclaves when the system is starting requires a delicately coordinated dance between the insecure and secure worlds. Anything going wrong usually ends up in a panic().</p><p id="a86e">Booting occurs in three stages. Stage one is not visible in the open-source, however is likely a secure boot process where SK is loaded into memory and its code signatures are verified before being made executable. At the end of a successful stage one boot, the boot status is EXCLAVES_BS_NOT_STARTED.</p><h2 id="323e">Booting Stage 2</h2><ol><li id="37a2">Initialises upcall server by creating a tightbeam endpoint for upcalls</li><li id="21cb">Enters secure world with a special call to collect boot information from secure kernel</li><li id="ba91">Enters secure world again with normal endpoint call but not sure why‚Ä¶ possibly to trigger the kernel domain to start</li><li id="970c">Initialises the exclave scheduler</li><li id="03dc">Initialises the XrtHostedXNU kext</li><li id="e824">Initialises callbacks (I think into the above kext)</li><li id="e021">Boots the scheduler ‚Äî sets up per-cpu request&amp;response for the boot CPU core only, and binds to the boot core</li><li id="4bbd">Loops, calling into the secure world to see if it needs memory allocations, until it responds that all exclaves are booted</li><li id="e12b">Initialises multicore by setting up per-cpu request&amp;response memory for all cores</li><li id="26e1">Initialises XNU Proxy ‚Äî creates a cache of buffers for IPC calls, creates some thread contexts, sets up a tightbeam endpoint for downcalls to the xnuproxy</li><li id="5696">Initialises an exclaves panic kernel thread</li><li id="3fbb">Discovers all static exclave resources and builds the root_table of domains and resources.</li><li id="8b15">Creates tightbeam endpoints for all Conclave Manager resources and calls an initialisation process for each one.</li><li id="6cfa">Populates a bitmap of valid conclave service ids (from 0 to 127) for each conclave.</li><li id="218a">At kernel build time, a list of boot tasks was stored in the __DATA_CONST segment. These are now sorted by priority and each boot task function is called. I likely only have a very partial picture here, but these tasks include creating an endpoint for each of the exclave indicator controller service, the storage backend service, the logserver, and for stackshots.</li><li id="653d">Boot status is now EXCLAVES_BS_BOOTED_STAGE_2</li></ol><h2 id="f7a7">Boot Stage 3 (Boot ExclaveKit)</h2><p id="0ce5">The stage makes multiple calls regarding ‚Äúframemint‚Äù. This is suggestive of the SK being based on seL4.</p><ol><li id="0a96">The ‚Äúcom.apple.service.FrameMint‚Äù service is looked up and a tightbeam endpoint is created for it</li><li id="f232">A redacted function, framemint_framemint__init() is called</li><li id="fbf0">A redacted framemint_framemint_populate() function is called but I guess this will be triggering all sorts of exciting activity to happen in the secure world</li><li id="8be5">Boot status is now EXCLAVES_BS_BOOTED_EXCLAVEKIT</li></ol><h2 id="52a1">SPTM memory typing</h2><p id="5f6e">SPTM ‚Äútypes‚Äù memory pages to control access to them via its different subsystems. Existing types included:</p><ul><li id="35d1">XNU_USER_EXEC</li><li id="32d2">XNU_USER_DEBUG</li><li id="67fb">XNU_USER_JIT</li><li id="af79">XNU_ROZONE</li><li id="e8c1">XNU_KERNEL_RESTRICTED</li><li id="34f9">+Types for TXM, DART, etc</li></ul><p id="09b3">Exclaves have added:</p><ul><li id="ecf2">SK_DEFAULT (exclusive to SK ‚Äî inaccessible to XNU)</li><li id="03d7">SK_IO (also exclusive to SK ‚Äî inaccessible to XNU)</li><li id="9983">SK_SHARED_RO (memory shared between SK and XNU (read only for XNU)</li><li id="63f8">SK_SHARED_RW (memory shared between SK and XNU (read+write for XNU)</li></ul></div><div><h2 id="faf5">Conclusions</h2><figure></figure><p id="091f">In the face of continued exploitation by advanced threat actors, Apple‚Äôs implementation of Exclaves represents a large investment to add extra defence in depth to their operating systems. By isolating sensitive resources, Apple is shrinking their potential attack surface and reducing the impact of any single kernel compromise. Defending monolithic kernels is a Sisyphean task, and exclaves represent one method of dealing with the challenge ‚Äî is it the right direction for the long term, or a temporary step? In my dreams, I imagine a future redesign using CHERI and a production implementation of ARM Morello üòä Regardless, it‚Äôs a defensive effort on a larger scale than any other end user device manufacturer is currently attempting.</p><p id="19f9">Critically, this article has not directly examined <em>what</em> is being moved from the kernel into exclaves. Build images indicate they are being used for secure camera/microphone indicators, some Apple Neural Engine functionality, some device drivers, components that talk to the Secure Enclave and so on. There may be many components that will benefit from future migration to exclaves and the overall effectiveness of exclaves may depend on an ongoing effort to maximise their usage. Everything XNU outside of exclaves will still be fair game.</p><p id="1328">I also suspect that exclaves may be used within Apple‚Äôs Private Cloud Compute infrastructure for cloud-based AI to provide a higher assurance of privacy in the face of external threats.</p><p id="ee04">I would particularly like to highlight the work of Dataflow Forensics and their much more advanced work dissecting SPTM without the benefit of source code. I enthusiastically await their promised blog post about exclaves and hope they will answer many of the remaining questions, provide gory disassembly explanations, and correct all my mistakes and assumptions!</p><h2 id="5698">To do (by someone much smarter than me!)‚Ä¶</h2><ul><li id="e1e2">ExclaveKit‚Ä¶</li><li id="9aac">ExclaveDriverKit‚Ä¶</li><li id="de31">Where does the ‚ÄúXNUProxy‚Äù really fit in?</li><li id="38d5">Disassembly to determine how XNU switches to the secure world, and if this involves SPTM, and/or TrustZone‚Ä¶</li><li id="caa3">Almost everything about the Secure Kernel‚Ä¶</li><li id="839a">Almost everything happening in the Secure World userspace‚Ä¶</li></ul><p id="786b"><em>This analysis was based on Apple‚Äôs Open Source XNU build 11215.*</em></p><p id="6a6f"><em>AI was used to improve my poor writing skills in the introductory sections.</em></p></div></div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[El Salvador's crypto experiment ends in failure (124 pts)]]></title>
            <link>https://www.economist.com/finance-and-economics/2025/03/02/el-salvadors-wild-crypto-experiment-ends-in-failure</link>
            <guid>43314334</guid>
            <pubDate>Sun, 09 Mar 2025 21:58:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.economist.com/finance-and-economics/2025/03/02/el-salvadors-wild-crypto-experiment-ends-in-failure">https://www.economist.com/finance-and-economics/2025/03/02/el-salvadors-wild-crypto-experiment-ends-in-failure</a>, See on <a href="https://news.ycombinator.com/item?id=43314334">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p><time datetime="2025-03-02T14:26:25.389Z"> <!-- -->Mar 2nd 2025</time></p></div><section><p data-component="paragraph"><span data-caps="initial">F</span><small>or much</small> of the time since Nayib Bukele became president in 2019, El Salvador has teetered on the brink of default. The warning signs were familiar: high debt and interest payments, exacerbated by a wide fiscal deficit; low dollar reserves; anaemic investment and <small>GDP </small>growth. Negotiations with the <small>IMF </small>over a bail-out were deadlocked. Mr Bukele‚Äôs relentless attacks on the judiciary, his opponents and the media did not inspire confidence.</p></section><p><h3 id="article-tags">Explore more</h3><nav aria-labelledby="article-tags"><a href="https://www.economist.com/topics/el-salvador" data-analytics="tags:el_salvador"><span>El Salvador</span></a><a href="https://www.economist.com/topics/cryptocurrency" data-analytics="tags:cryptocurrency"><span>Cryptocurrency</span></a><a href="https://www.economist.com/topics/finance-and-economics" data-analytics="tags:finance_and_economics"><span>Finance &amp; economics</span></a></nav></p><p>This article appeared in the Finance &amp; economics section of the print edition under the headline ‚ÄúBukele buckles‚Äù</p><div data-test-id="chapterlist" data-tracking-id="content-well-chapter-list"><div><hr data-testid="rule-accent"><div><h3><a href="https://www.economist.com/finance-and-economics" text="Finance &amp; economics" data-analytics="chapter_list_header:Finance &amp; economics">Finance &amp; economics</a></h3><p><span>March 8th 2025</span></p></div></div><ul><li><a href="https://www.economist.com/finance-and-economics/2025/03/05/trumps-tariffs-are-worse-than-anyone-imagined" id="6850b499-186d-4f83-9263-daf3c896c8e7" data-analytics="article:reports_headline:1" data-test-id="chapterlist-link-0"><span data-testid="right-london-5-false"><span>‚Üí</span></span><span>Trump‚Äôs tariff turbulence is worse than anyone imagined</span></a></li><li><a href="https://www.economist.com/finance-and-economics/2025/03/06/aid-cannot-make-poor-countries-rich" id="ed04bb02-4ec3-477b-be79-22a5afb09d55" data-analytics="article:reports_headline:2" data-test-id="chapterlist-link-1"><span data-testid="right-london-5-false"><span>‚Üí</span></span><span>Aid cannot make poor countries rich</span></a></li><li><a href="https://www.economist.com/finance-and-economics/2025/03/05/why-silver-is-the-new-gold" id="cd9fc145-ac01-4c5f-9fa0-f827e0fdd46d" data-analytics="article:reports_headline:3" data-test-id="chapterlist-link-2"><span data-testid="right-london-5-false"><span>‚Üí</span></span><span>Why silver is the new gold</span></a></li><li><a href="https://www.economist.com/finance-and-economics/2025/03/02/el-salvadors-wild-crypto-experiment-ends-in-failure" id="e1d275fc-7b3c-4e18-b9a2-7e0c201f425a" data-analytics="article:reports_headline:4" data-test-id="chapterlist-link-3"><span data-testid="right-economist-red-false"><span>‚Üí</span></span><span>El Salvador‚Äôs wild crypto experiment ends in failure&nbsp;</span></a></li><li><a href="https://www.economist.com/finance-and-economics/2025/03/06/it-is-not-the-economic-impact-of-tariffs-that-is-most-worrying" id="63f6f5b2-21e6-40cb-95e2-c3f1ef7f4a83" data-analytics="article:reports_headline:5" data-test-id="chapterlist-link-4"><span data-testid="right-london-5-false"><span>‚Üí</span></span><span>It is not the economic impact of tariffs that is most worrying</span></a></li></ul></div><div orientation="vertical" data-test-id="vertical"><div orientation="vertical"><figure><img loading="lazy" width="1280" height="1709" decoding="async" data-nimg="1" sizes="300px" srcset="https://www.economist.com/cdn-cgi/image/width=16,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 16w, https://www.economist.com/cdn-cgi/image/width=32,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 32w, https://www.economist.com/cdn-cgi/image/width=48,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 48w, https://www.economist.com/cdn-cgi/image/width=64,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 64w, https://www.economist.com/cdn-cgi/image/width=96,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 96w, https://www.economist.com/cdn-cgi/image/width=128,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 128w, https://www.economist.com/cdn-cgi/image/width=256,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 256w, https://www.economist.com/cdn-cgi/image/width=360,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 360w, https://www.economist.com/cdn-cgi/image/width=384,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 384w, https://www.economist.com/cdn-cgi/image/width=480,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 480w, https://www.economist.com/cdn-cgi/image/width=600,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 600w, https://www.economist.com/cdn-cgi/image/width=834,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 834w, https://www.economist.com/cdn-cgi/image/width=960,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 960w, https://www.economist.com/cdn-cgi/image/width=1096,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 1096w, https://www.economist.com/cdn-cgi/image/width=1280,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 1280w, https://www.economist.com/cdn-cgi/image/width=1424,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg 1424w" src="https://www.economist.com/cdn-cgi/image/width=1424,quality=80,format=auto/content-assets/images/20250308_DE_EU.jpg"></figure></div><div orientation="vertical"><h3 orientation="vertical">From the March 8th 2025 edition</h3><p orientation="vertical">Discover stories from this section and more in the list of contents</p><p><a href="https://www.economist.com/weeklyedition/2025-03-08" data-analytics="sidebar:weekly_edition"><span data-testid="right-economist-red-true"><span>‚áí</span></span><span>Explore the edition</span></a></p></div></div><div><a href="https://s100.copyright.com/AppDispatchServlet?publisherName=economist&amp;publication=economist&amp;title=El%20Salvador%E2%80%99s%20wild%20crypto%20experiment%20ends%20in%20failure%C2%A0&amp;publicationDate=2025-03-02&amp;contentID=%2Fcontent%2Fkbommn8aq9f8ug95pb7jg92ljpiv8pm1&amp;type=A&amp;orderBeanReset=TRUE" target="_blank" rel="noreferrer" data-analytics="end_of_article:reuse_this_content"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" data-testid="renew-outline"><path fill="var(--mb-colour-base-chicago-45)" d="M5.1 16.05a8.25 8.25 0 0 1-.825-1.95A7.696 7.696 0 0 1 4 12.05c0-2.233.775-4.133 2.325-5.7C7.875 4.783 9.767 4 12 4h.175l-1.6-1.6 1.4-1.4 4 4-4 4-1.4-1.4 1.6-1.6H12c-1.667 0-3.083.588-4.25 1.763C6.583 8.938 6 10.367 6 12.05c0 .433.05.858.15 1.275.1.417.25.825.45 1.225l-1.5 1.5ZM12.025 23l-4-4 4-4 1.4 1.4-1.6 1.6H12c1.667 0 3.083-.587 4.25-1.762C17.417 15.063 18 13.633 18 11.95c0-.433-.05-.858-.15-1.275-.1-.417-.25-.825-.45-1.225l1.5-1.5c.367.633.642 1.283.825 1.95.183.667.275 1.35.275 2.05 0 2.233-.775 4.133-2.325 5.7C16.125 19.217 14.233 20 12 20h-.175l1.6 1.6-1.4 1.4Z"></path></svg><span>Reuse this content</span></a></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple rearranged its XNU kernel with exclaves (105 pts)]]></title>
            <link>https://www.theregister.com/2025/03/08/kernel_sanders_apple_rearranges_xnu/</link>
            <guid>43314171</guid>
            <pubDate>Sun, 09 Mar 2025 21:40:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2025/03/08/kernel_sanders_apple_rearranges_xnu/">https://www.theregister.com/2025/03/08/kernel_sanders_apple_rearranges_xnu/</a>, See on <a href="https://news.ycombinator.com/item?id=43314171">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>Apple has been working to harden the XNU kernel that powers its various operating systems, including iOS and macOS, with a feature called "exclaves."</p>
<p>The term appears to have first surfaced <a target="_blank" rel="nofollow" href="https://github.com/apple-oss-distributions/Libc/commit/c5a3293354e22262702a3add5b2dfc9bb0b93b85">in a libc file</a> in Apple's open source software collection in 2023, and subsequently within iOS 17, released in September of that year, as later <a target="_blank" rel="nofollow" href="https://eclecticlight.co/2024/06/15/a-brief-history-of-mac-enclaves-and-exclaves/">noted</a> by Howard Oakley on his Eclectic Light Co blog.</p>
<p>Exclaves, Oakley observed last June, are believed to implement "domains isolated from the kernel that protect key functions in macOS even when the kernel becomes compromised. This in turn suggests that Apple is in the process of refactoring the kernel into a central microkernel with protected exclaves."</p>

    

<p>Current Apple chips have a <a target="_blank" rel="nofollow" href="https://support.apple.com/guide/security/secure-enclave-sec59b0b31ff/1/web/1">Secure Enclave</a>, a dedicated secure subsystem integrated into the device's system-on-chip (SoC). It's separate from the application processor kernel as a defense against compromise. It's used for operations that need strong security like the processing of encryption keys.</p>

        


        

<p>An <em>enclave</em> is defined as an area within a territorial boundary. So an <em>exclave</em> is an area outside of a boundary with ties to the main territory.</p>
<p>The XNU kernel, as Apple's <a target="_blank" rel="nofollow" href="https://github.com/apple-oss-distributions/xnu">documentation</a> explains, is "a hybrid kernel combining the Mach kernel developed at Carnegie Mellon University with components from FreeBSD and a C++ API for writing drivers called IOKit."</p>

        

<p>It is hybrid in the sense that it combines the Mach microkernel with the BSD monolithic kernel.</p>
<p>Each architectural approach has different disadvantages. Microkernel designs face the challenge of dealing with the overhead of inter-process communication (IPC) between user-space servers and the kernel. Monolithic designs operate in a shared address space, so security compromises are potentially more damaging ‚Äì once defenses have been bypassed, there's no further barrier to sensitive data.</p>
<p>According to a security researcher who has <a target="_blank" rel="nofollow" href="https://randomaugustine.medium.com/on-apple-exclaves-d683a2c37194">explored Apple's kernel fiddling</a> under the name Random Augustine, Apple's development of exclaves represents a major shift in its security architecture. Essentially, Apple is trying to realize the security advantages of a microkernel without tossing the monolithic aspects of XNU.</p>
<ul>

<li><a href="https://www.theregister.com/2025/03/05/apple_m3_ultra_mac_studio/">Run DeepSeek R1 on an Apple M3 Ultra Mac Studio? Sure, it'll just cost you $9,499-plus</a></li>

<li><a href="https://www.theregister.com/2025/03/05/apple_reportedly_ipt_complaint/">Apple drags UK government to court over 'backdoor' order</a></li>

<li><a href="https://www.theregister.com/2025/03/05/outlookcom_ios/">iOS users left refreshing in vain as Microsoft Outlook woes drag on</a></li>

<li><a href="https://www.theregister.com/2025/03/04/apple_iphone_16e_ifixit/">Apple dares users to fix 'budget' iPhone 16e themselves</a></li>
</ul>
<p>Based on the references to exclaves in the XNU source for Apple's Arm-compatible M4 chips and the A18 processors used in iPhone 16, our source argues that exclaves form the basis of a significant redesign of XNU's security model.</p>
<p>"In iOS 18, exclaves refer to specific resources that are separated from the main iOS kernel (XNU) and cannot be accessed by it, even if the kernel is compromised," the researcher explained in a document shared with <em>The Register</em>.</p>

        

<p>"These resources are predefined when the OS is built, are identified by name or id, have different types, are initialized at boot time, and are organized into unique domains."</p>
<p>These resources include:</p>
<ul>
<li>Shared memory buffers that can be accessed by both the kernel and the exclave, with the option to make them read-only or read-write to XNU.</li>

<li>Audio buffers and sensors that are used for securing features like the camera and microphone access indicators.</li>

<li>Conclaves that group multiple resources into their own secure domains.</li>

<li>Services that offer executable code within the exclave space when called upon by threads in XNU.</li>
</ul>
<p>These resources are protected from XNU via enclave-specific page-types via the Secure Page Table Monitor, a hardware security functionality introduced with the arrival of the A15 chip and iOS 17. This makes Apple's operating systems more secure by compartmentalizing sensitive services, such that the compromise of one doesn't process access to the entire kernel address space.</p>
<p>Apple has enabled the execution of exclave services via a new Secure Kernel (SK). The researcher Random Augustine has observed that while the SK image file contains a version string for "cL4," a possible reference to the L4-embedded used with the original SepOS (Secure Enclave Processor OS) cL4 kernel, the IPC structures used by XNU to communicate with SK look more like <a target="_blank" rel="nofollow" href="https://sel4.systems/">seL4</a>, a high-assurance microkernel.</p>
<blockquote>

<p>It's adding defense in depth and isolating more parts of the OS from each other</p>
</blockquote>
<p>Gernot Heiser, a computer science professor at UNSW Sydney and the founding chairman of the seL4 Foundation, <a target="_blank" rel="nofollow" href="https://bsky.app/profile/microkerneldude.bsky.social/post/3ljhapekfj22u">via Bluesky</a> has suggested that Apple's SK is probably not an seL4 adaptation, which would be a GPL violation, but rather is a fresh implementation.</p>
<p>The obvious reason Apple would undertake this work is to improve security generally, which benefits the super-corp and its customers. The less obvious reason is that AI workloads running on-device and communicating with Apple's Private Cloud Compute infrastructure potentially expand the attack surface, so it makes sense to mitigate the blast radius of attacks by adopting microkernel architecture.</p>
<p>"This isn't aimed at a particular vulnerability ‚Äì it's adding defense in depth and isolating more parts of the OS from each other," Random Augustine opined.</p>
<p>"So an attacker will need to find an extra vulnerability to attack things held in exclaves or to escape an exclave. Exclaves will likely be much harder to escape because they are running in a microkernel environment. Some of the code and libraries over there are also written in Swift which should increase memory safety."</p>
<p>Our source reports inquiring to an Apple engineer about why the iGiant hasn't been talking up this technology. The reason is, we're told, that Apple hasn't yet finished the project and likely doesn't yet have the confidence to make security claims.</p>
<p>Apple did not respond to a request for comment. ¬Æ</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Scientists discover an RNA that repairs DNA damage (130 pts)]]></title>
            <link>https://scitechdaily.com/scientists-just-discovered-an-rna-that-repairs-dna-damage-and-its-a-game-changer/</link>
            <guid>43313781</guid>
            <pubDate>Sun, 09 Mar 2025 21:02:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://scitechdaily.com/scientists-just-discovered-an-rna-that-repairs-dna-damage-and-its-a-game-changer/">https://scitechdaily.com/scientists-just-discovered-an-rna-that-repairs-dna-damage-and-its-a-game-changer/</a>, See on <a href="https://news.ycombinator.com/item?id=43313781">Hacker News</a></p>
Couldn't get https://scitechdaily.com/scientists-just-discovered-an-rna-that-repairs-dna-damage-and-its-a-game-changer/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Wine Releases Framework Mono 6.14 in Taking over the Mono Project (119 pts)]]></title>
            <link>https://www.phoronix.com/news/Wine-Framework-Mono-6.14</link>
            <guid>43313706</guid>
            <pubDate>Sun, 09 Mar 2025 20:55:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.phoronix.com/news/Wine-Framework-Mono-6.14">https://www.phoronix.com/news/Wine-Framework-Mono-6.14</a>, See on <a href="https://news.ycombinator.com/item?id=43313706">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="WINE" src="https://www.phoronix.com/assets/categories/wine.webp" width="100" height="100"></p><p>
Last year <a href="https://www.phoronix.com/news/Microsoft-Gives-Mono-To-Wine">Microsoft donated the Mono Project to Wine</a> for its stewardship under the WineHQ umbrella. Today marks the Framework Mono 6.14 release as the first major Mono release in five years and the first under the WineHQ organization.
</p><p>
Framework Mono 6.14 is out today as the newest for the Mono project now being developed and maintained by Wine developers and the broader open-source community. Today's release announcement notes:
</p><blockquote>"This is the first release of Framework Mono from its new home at Winehq. It includes work from the past 5 years that was never included in a stable release because no stable branch had been created in that time. Highlights are native support for ARM64 on macOS and many improvements to windows forms for X11."</blockquote>
<p>In addition to the native macOS ARM64 support and System.Windows.Forms improvements for X11, some of the other Mono 6.14 improvements carried out over the past half-decade include improved support for generated COM interfaces, many warning fixes, addressing common cases where processes would hang on exit, and more.
</p><p><img src="https://www.phoronix.net/image.php?id=2025&amp;image=mono" alt="Mono logo"></p>
<p>As for the "Framework Mono" name rather than just Mono, the release announcement explains:
</p><blockquote>"Framework Mono is the project previously hosted at https://github.com/mono/mono, which was then simply called Mono. I have made this change to distinguish it from "monovm" and "Wine Mono", which are different projects. Framework Mono is a cross-platform runtime compatible with .NET Framework."</blockquote>
<p>Downloads and more details on the Framework Mono 6.14 release via <a href="https://gitlab.winehq.org/mono/mono/-/releases/mono-6.14.0">WineHQ.org GitLab</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tesla Sales Fall Off a Cliff Globally, Including Germany, Australia, and China (205 pts)]]></title>
            <link>https://www.carscoops.com/2025/03/tesla-sales-falling-off-a-cliff-globally-including-germany-australia-and-china/</link>
            <guid>43313127</guid>
            <pubDate>Sun, 09 Mar 2025 20:00:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.carscoops.com/2025/03/tesla-sales-falling-off-a-cliff-globally-including-germany-australia-and-china/">https://www.carscoops.com/2025/03/tesla-sales-falling-off-a-cliff-globally-including-germany-australia-and-china/</a>, See on <a href="https://news.ycombinator.com/item?id=43313127">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                        
                        <p>
                            German sales were down by a massive 76.3% last month, with Australia posting a similar 71.9% decline                         </p>
                        <div>
                            
                            <p>March 6, 2025 at 09:53</p>
                            <p><a href="#thread__container">

                                <img width="24px" loading="lazy" height="22px" alt="comments" src="https://www.carscoops.com/wp-content/themes/carscoops/assets/images/icons/msg.png"> 
                                
                            </a></p>
                        </div>
                        <div>
                            <!--<img src="/assets/images/car.jpg" alt="" class="img-center">-->
                                                                                    
                            <picture><source type="image/webp" srcset="https://www.carscoops.com/wp-content/uploads/webp/2025/03/Tesla-China-Germany-Australia.webp 2560w, https://www.carscoops.com/wp-content/uploads/webp/2025/03/Tesla-China-Germany-Australia-400x225.webp 400w, https://www.carscoops.com/wp-content/uploads/webp/2025/03/Tesla-China-Germany-Australia-1024x576.webp 1024w, https://www.carscoops.com/wp-content/uploads/webp/2025/03/Tesla-China-Germany-Australia-768x432.webp 768w, https://www.carscoops.com/wp-content/uploads/webp/2025/03/Tesla-China-Germany-Australia-1536x864.webp 1536w, https://www.carscoops.com/wp-content/uploads/webp/2025/03/Tesla-China-Germany-Australia-2048x1152.webp 2048w" sizes="(min-width: 1300px) 832px, (min-width: 1055px) calc(100vw - 372px), 100vw"><img src="https://www.carscoops.com/wp-content/uploads/2025/03/Tesla-China-Germany-Australia-1024x576.jpg" srcset="https://www.carscoops.com/wp-content/uploads/2025/03/Tesla-China-Germany-Australia.jpg 2560w, https://www.carscoops.com/wp-content/uploads/2025/03/Tesla-China-Germany-Australia-400x225.jpg 400w, https://www.carscoops.com/wp-content/uploads/2025/03/Tesla-China-Germany-Australia-1024x576.jpg 1024w, https://www.carscoops.com/wp-content/uploads/2025/03/Tesla-China-Germany-Australia-768x432.jpg 768w, https://www.carscoops.com/wp-content/uploads/2025/03/Tesla-China-Germany-Australia-1536x864.jpg 1536w, https://www.carscoops.com/wp-content/uploads/2025/03/Tesla-China-Germany-Australia-2048x1152.jpg 2048w" sizes="(min-width: 1300px) 832px, (min-width: 1055px) calc(100vw - 372px), 100vw" alt=" Tesla Sales Fall Off A Cliff Globally, Including Germany, Australia, And China" width="2560" height="1440"></picture>                        </div>
                        
                        <p>
                            <h4>
                                by <a href="https://www.carscoops.com/author/bradcarscoops-com/"><span>Brad Anderson</span></a>
                            </h4>    
                        </p>
                    </div><div>
                        <!--
                        <div class="article__ads-panel_ inarticlead_ in-article1">
                            <div id='div-gpt-ad-3499414-6' ></div>
                        </div>-->
                        
                        
<div>
<ul>
<li>Tesla sales in Germany plunged by 59.5% in January 2025 and 76.3% in February.</li>



<li>In Australia, the EV maker‚Äôs deliveries dropped 65.5% in the first two months of 2025.</li>



<li>Tesla‚Äôs February 2025 sales in China fell 49.16%, signaling a market share decline.</li>
</ul>
</div>



<p>Tesla was proudly proclaiming less than a year ago that it would be selling 20 million electric vehicles annually by 2030. Fast forward to today, and things have taken a sharp downturn. After seemingly abandoning this lofty goal mid-2024, the company has also seen its first annual sales decline in a decade. Now, Tesla‚Äôs sales are continuing to slide in several major markets, including Germany, Australia, and, of course, China.</p>
		
		



<p><a href="https://www.carscoops.com/2025/03/tesla-sales-plunge-44-in-norway-despite-ev-market-soaring-by-53/">Earlier this week</a>, we reported that <a href="https://www.carscoops.com/tag/tesla/">Tesla</a> sales in Norway collapsed by 44.4% through January and February, despite the country‚Äôs overall EV market growing by 53.4%. Things are even worse in Germany. New data from the KBA ‚Äì Germany‚Äôs Federal Motor Transport Authority ‚Äì shows that in January 2025, Tesla sales plummeted by 59.5%, with just 1,277 new cars registered in the country.</p>



<p><strong>Read: <a href="https://www.carscoops.com/2025/02/tesla-sales-collapse-by-up-to-63-in-france-germany-and-uk/">Tesla Sales Crash Up To 63% In European Markets, Is Musk Or New Model Y To Blame?</a></strong></p>



<p>The situation only worsened in February. Sales were down a staggering 76.3% compared to February 2024, with just 1,429 units sold. Through January and February, Tesla has delivered 2,706 vehicles in <a href="https://www.carscoops.com/tag/germany/">Germany</a>, marking a massive 70.6% drop from the same period last year. Tesla‚Äôs decline is even more pronounced when you consider that overall BEV sales in Germany climbed 30.8% in February.</p>
		
		
		
		



<p><strong>Aussie Slowdown</strong></p>




        <a href="https://www.carscoops.com/wp-content/uploads/2025/01/Tesla-Model-Y-USA-9.jpg" data-type="inarticle-image-block"> 
            <figure>
                <picture>
                    <source type="image/webp" srcset="https://www.carscoops.com/wp-content/uploads/webp/2025/01/Tesla-Model-Y-USA-9.webp 1920w, https://www.carscoops.com/wp-content/uploads/webp/2025/01/Tesla-Model-Y-USA-9-400x225.webp 400w, https://www.carscoops.com/wp-content/uploads/webp/2025/01/Tesla-Model-Y-USA-9-1024x576.webp 1024w, https://www.carscoops.com/wp-content/uploads/webp/2025/01/Tesla-Model-Y-USA-9-768x432.webp 768w, https://www.carscoops.com/wp-content/uploads/webp/2025/01/Tesla-Model-Y-USA-9-1536x864.webp 1536w" sizes="(max-width: 1920px) 100vw, (max-width: 1535px) 100vw, (max-width: 1024px) 100vw, (max-width: 768px) 1000px, (max-width: 300px) 600px, (max-width: 200px) 200px"><img loading="lazy" decoding="async" src="https://www.carscoops.com/wp-content/uploads/2025/01/Tesla-Model-Y-USA-9-1024x576.jpg" srcset="https://www.carscoops.com/wp-content/uploads/2025/01/Tesla-Model-Y-USA-9.jpg 1920w, https://www.carscoops.com/wp-content/uploads/2025/01/Tesla-Model-Y-USA-9-400x225.jpg 400w, https://www.carscoops.com/wp-content/uploads/2025/01/Tesla-Model-Y-USA-9-1024x576.jpg 1024w, https://www.carscoops.com/wp-content/uploads/2025/01/Tesla-Model-Y-USA-9-768x432.jpg 768w, https://www.carscoops.com/wp-content/uploads/2025/01/Tesla-Model-Y-USA-9-1536x864.jpg 1536w" sizes="(max-width: 1920px) 100vw, (max-width: 1535px) 100vw, (max-width: 1024px) 100vw, (max-width: 768px) 1000px, (max-width: 300px) 600px, (max-width: 200px) 200px" alt=" Tesla Sales Fall Off A Cliff Globally, Including Germany, Australia, And China" width="1920" height="1080" data-src="https://www.carscoops.com/wp-content/uploads/2025/01/Tesla-Model-Y-USA-9-1024x576.jpg" data-type="inarticle-image">
                </picture>
            </figure>
        </a>  
        


<p><a href="https://www.carscoops.com/tag/australia/">Australia</a> isn‚Äôt much better. Data from the nation‚Äôs Electric Vehicle Council shows that Tesla shifted 1,592 vehicles in February, a massive 71.9% decline from the 5,665 sold in February 2024. Through the first two months of the year, Tesla delivered 2,331 vehicles to Australians, a 65.5% decline from the 6,772 vehicles sold over the same two months in 2024. </p>



<p>It‚Äôs worth mentioning that the highly anticipated, heavily updated Model Y has just started being sold in Australia‚Äîthough only in the premium (A$73,400) Launch Edition variant, with the standard version still unavailable. So, the sales slump isn‚Äôt entirely surprising. </p>



<p>Even so, the outgoing Model Y saw a 55.4% decline, shifting only 924 units. Meanwhile, sales of the refreshed Model 3 are down a dramatic 81.4%, with just 668 cars sold. It seems Australians aren‚Äôt quite as eager to embrace the ‚ÄúTesla dream‚Äù as they once were.</p>



<p><strong>Chinese Struggles</strong></p>
		
		



<p>And then there‚Äôs <a href="https://www.carscoops.com/tag/china/">China</a>, where things are also looking grim for Tesla in one of its most important markets worldwide. Preliminary data from China‚Äôs Passenger Car Association reveals that Tesla built and sold 30,688 vehicles in February 2025‚Äîa 49.16% drop from the 60,365 cars moved in February 2024. This total includes both domestic sales and exports, but it‚Äôs clear that Tesla‚Äôs Chinese market share is shrinking. When you factor in competition from local EV manufacturers, the picture becomes even murkier.</p>



<p>It‚Äôs safe to say that Tesla‚Äôs global growth trajectory has hit some roadblocks. While the company remains a leader in the electric vehicle space, its once-unassailable dominance in key markets is showing signs of distress. Whether it‚Äôs product fatigue, the controversial nature of its CEO, market saturation, or just bad timing‚Äîespecially with the transition surrounding its best-selling vehicle, the Model Y, the shine is definitely starting to wear off.</p>
		
		




        <a href="https://www.carscoops.com/wp-content/uploads/2020/10/tesla-model-s-cuts-prices-usa-china-6.jpg" data-type="inarticle-image-block"> 
            <figure>
                <picture>
                    <source type="image/webp" srcset="https://www.carscoops.com/wp-content/uploads/webp/2020/10/tesla-model-s-cuts-prices-usa-china-6.webp 1920w, https://www.carscoops.com/wp-content/uploads/webp/2020/10/tesla-model-s-cuts-prices-usa-china-6-400x174.webp 400w, https://www.carscoops.com/wp-content/uploads/webp/2020/10/tesla-model-s-cuts-prices-usa-china-6-768x333.webp 768w, https://www.carscoops.com/wp-content/uploads/webp/2020/10/tesla-model-s-cuts-prices-usa-china-6-1024x444.webp 1024w" sizes="(max-width: 1920px) 100vw, (max-width: 1535px) 100vw, (max-width: 1024px) 100vw, (max-width: 768px) 1000px, (max-width: 300px) 600px, (max-width: 200px) 200px"><img loading="lazy" decoding="async" src="https://www.carscoops.com/wp-content/uploads/2020/10/tesla-model-s-cuts-prices-usa-china-6-1024x444.jpg" srcset="https://www.carscoops.com/wp-content/uploads/2020/10/tesla-model-s-cuts-prices-usa-china-6.jpg 1920w, https://www.carscoops.com/wp-content/uploads/2020/10/tesla-model-s-cuts-prices-usa-china-6-400x174.jpg 400w, https://www.carscoops.com/wp-content/uploads/2020/10/tesla-model-s-cuts-prices-usa-china-6-768x333.jpg 768w, https://www.carscoops.com/wp-content/uploads/2020/10/tesla-model-s-cuts-prices-usa-china-6-1024x444.jpg 1024w" sizes="(max-width: 1920px) 100vw, (max-width: 1535px) 100vw, (max-width: 1024px) 100vw, (max-width: 768px) 1000px, (max-width: 300px) 600px, (max-width: 200px) 200px" alt=" Tesla Sales Fall Off A Cliff Globally, Including Germany, Australia, And China" width="1920" height="833" data-src="https://www.carscoops.com/wp-content/uploads/2020/10/tesla-model-s-cuts-prices-usa-china-6-1024x444.jpg" data-type="inarticle-image">
                </picture>
            </figure>
        </a>  
        
                        
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[With AI you need to think bigger (119 pts)]]></title>
            <link>https://rodyne.com/?p=1828</link>
            <guid>43312652</guid>
            <pubDate>Sun, 09 Mar 2025 19:18:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rodyne.com/?p=1828">https://rodyne.com/?p=1828</a>, See on <a href="https://news.ycombinator.com/item?id=43312652">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						
<p>I have noticed something in the past 12 months, something a little profound. I have noticed that I am no longer scared that a project will be too big or too complex for me, or that a project will use a technology or programming language I don‚Äôt know.</p>



<p>Things that have normally made me hesitate, were things that required a lot of research, for example I once had to walk away from a project as it required more than 4-layers on a PCB to route out the 484-pin BGA FPGA/processor. Back then each FPGA/processor chip was $50 and the board would have cost me about $200 and 3 weeks to get made, after that I would somehow have to assemble and test it or fork out another $100 for assembly. While I am usually pretty good, the chances of this working first or even second time were pretty low, as high speed circuits can be finicky. And even though the customer offered the use of their test equipment it meant I had to work in Christchurch!</p>



<p>I remember working through the specifications of the project at the time, seeing the 1000+ pages datasheet on the processor, the 200 page errata, the hundreds of posts from developers about issues, and the dozens of other design and programming guides and I just thought to myself, well yes maybe I could do it, but it would probably take 6-9 months and most of that would be study, trial and error, then at the end of it the prospect of using that particular processor on another job would be effectively zero. I walked away.</p>



<p>In another case I had a similar offer to replace a production system at a chemical factory, this was in 2012 and I was at the time full-on with other clients. I did however look at the system and its multitude of simple machine interfaces and, less simple external ERP systems, again totally do-able, but in this case the time I would need to dedicate to write the development would have left me a burnt out wreck. Again I had to walk away.</p>



<p>Fast forward to 2025 and me coming to the end of the longest contract of my career, I re-looked at the timings I had allocated for the above two projects with the better tools and AI available now and realised how much easier everything could have been. Just the other day I dusted off a project I did 14 years ago, a <a href="https://hackaday.com/2014/01/05/image-sensor-for-filling-wine-bottles/" target="_blank" rel="noreferrer noopener">fill level sensor</a> for a bottling machine. A guy wrote to me about five years ago about the project, which at the time was terribly primitive and used none-machine-learning, conventional programming to get levels and trigger an accept/reject action. I told him the sensor was now obsolete and possibly it could be done these days with a camera and a fast ML algorithm but I stopped short of any more information as quite frankly I was out of my depth.</p>



<p>As an experiment this weekend I re-created this system using an RPi5 compute module and a $20 camera sensor plugged into it. Within two hours I wrote my first machine learning, using the AI to assist me and got the camera on a RPi board to read levels of wine in wine bottles on my test rig. The original project took me six weeks solid! I again used the google Gemini 2.0 AI for this assignment and it had no problem explaining every line of code, every library, and every concept, and on the spectrum of AI‚Äôs Gemini is not considered the best.</p>



<p>I am now at a real impasse, towards the end of my career and knowing I could happily start it all again with a new insight and much bigger visions for what I could take on. It feels like wining the lottery two weeks before you die üôÇ</p>



<p>I am now re-examining some of the other things I often thought were too complex or too far above my abilities for hobby projects, and, so long as I can afford them, give them a go. It is an exciting time to be alive.</p>
											</div><div><p>
							This entry was posted in <a href="https://rodyne.com/?cat=1" rel="category">Uncategorized</a>. Bookmark the <a href="https://rodyne.com/?p=1828" title="Permalink to With AI You Need to Think Much Bigger!" rel="bookmark">permalink</a>.													</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An investigation into egg prices (140 pts)]]></title>
            <link>https://www.thebignewsletter.com/p/hatching-a-conspiracy-a-big-investigation</link>
            <guid>43311696</guid>
            <pubDate>Sun, 09 Mar 2025 17:49:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thebignewsletter.com/p/hatching-a-conspiracy-a-big-investigation">https://www.thebignewsletter.com/p/hatching-a-conspiracy-a-big-investigation</a>, See on <a href="https://news.ycombinator.com/item?id=43311696">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em><span>This issue is part one of a three-part series on the egg industry. It is written by </span><a href="https://www.antimonopoly.us/" rel="">antitrust lawyer Basel Musharbash</a><span>, based in part on a </span><a href="https://farmaction.us/wp-content/uploads/2024/09/Kings-Over-the-Necessaries-of-Life-Monopolization-and-the-Elimination-of-Competition-in-Americas-Agriculture-System_Farm-Action.pdf" rel="">report</a><span> he researched for Farm Action. </span></em></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png" width="585" height="544" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:544,&quot;width&quot;:585,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0fd6a10d-953f-418e-b9aa-4c349bf1c847_585x544.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>Over the past two months, egg prices have become a political football. Journalists are </span><a href="https://www.nytimes.com/2025/02/25/business/egg-prices-bird-flu-producers.html" rel="">reporting</a><span> in depth on the industry, egg consolidation has come up in Congressional antitrust </span><a href="https://x.com/matthewstoller/status/1889739042847175165" rel="">hearing</a><span>, and Donald Trump mentioned a plan to tackle egg prices in the State of the Union speech, putting his Secretary of Agriculture Brooke Rollins on notice that she has to get the price down. Most notably, earlier this week, the Capitol Forum reported the Department of Justice Antitrust Division is now investigating egg markets.</span></p><p><span>The reason is simple. For most Americans, eggs have always been cheap, and thus a key food staple. And now eggs are expensive, and sometimes in shortage. Over the past year egg prices have increased by 53%‚Äî </span><a href="https://www.desmoinesregister.com/story/money/business/retail/2025/02/13/iowans-pinched-by-higher-prices-for-eggs-other-grocery-items-cpi/78218383007/" rel="">jumping</a><span> 15% in January alone. As of the beginning of February, egg producers were charging wholesale buyers an </span><a href="https://quickstats.nass.usda.gov/results/DBEC53E8-A250-3541-9D57-1B36A7ED6B11" rel="">average of $5.95 for a dozen eggs</a><span>, and retailers were charging consumers anywhere </span><a href="https://thelistwire.usatoday.com/lists/average-egg-prices-in-united-states-bird-flu-outbreak/" rel="">between</a><span> </span><a href="https://eggprices.org/national-data" rel="">$4 and $9 a dozen</a><span> ‚Äî and sometimes even more.</span></p><p>The high prices, and sometimes shortages, are a problem in and of themselves, but they also represent that the American system has gone askew. If we can‚Äôt even get a cheap omelet or egg sandwich anymore, what can America do right?</p><p><span>The stated reason for the high price of eggs is something that happens periodically: an avian flu epidemic. Since 2022, outbreaks of bird flu on poultry farms have led to the culling of over </span><a href="https://www.aphis.usda.gov/livestock-poultry-disease/avian/avian-influenza/hpai-detections/commercial-backyard-flocks" rel="">115 million egg-laying hens</a><span>. This epidemic, according to the prevailing narrative, has driven egg prices up to record highs all on its own. As one industry executive </span><a href="https://www.nbcwashington.com/news/business/money-report/why-egg-prices-are-surging-but-chicken-prices-are-falling-its-an-act-of-god-event-says-trade-strategist/3206359/?os=ixglowljw0&amp;ref=app" rel="">put it</a><span>, it‚Äôs all just ‚Äúsupply disruption, ‚Äòact of God‚Äô type stuff.‚Äù The popular response to this story has been what you‚Äôd expect: Scientists are discussing flu vaccines for chickens, politicians are blaming each other about bird culls, and many are concerned about how the massive scale of today‚Äôs egg farms enables‚Äîand exacerbates‚Äîavian flu epidemics. And none of that is necessarily wrong.</span></p><p>But something doesn‚Äôt add up about this ‚Äúavian flu is the sole and natural cause of high egg prices‚Äù story. Despite the ‚Äúact of God‚Äù going on ‚Äî and the skyrocketing prices accompanying it ‚Äî egg production is actually . . . not down by all that much. 115 million hens is a lot of birds to cull, but it‚Äôs important to put the loss of those hens in context: They weren‚Äôt lost all at once. They were lost over three years. And there have always been around 300 million other hens alive and kicking to lay eggs for America‚Äînot to mention a continuous pipeline of 120-130 million female chicks (called ‚Äúpullets‚Äù) in the process of being raised into adult hens to replace the ones dying or aging out.</p><p>As a result of this pipeline, the effect of avian flu outbreaks on egg production, while not insignificant, has been relatively small. Monthly egg production during each of the last three years has averaged only 3-5% lower than it was in 2021, the year before the epidemic started. Meanwhile, demand for eggs has actually declined. According to private reports by the Egg Industry Center, Americans went from consuming around 206 shell eggs each in 2021 to consuming less than 190 shell eggs each in 2024 ‚Äî a ~7.5-percent nosedive. As many countries have closed their markets to American eggs since 2021 on account of the avian flu, egg exports have also fallen off a cliff ‚Äî going down by nearly half between 2021 and 2022 and staying there ever since. That dynamic, according to my analysis of USDA data, has shaved another ~2.5% off aggregate demand on U.S. egg production.</p><p><span>So, reports of an unprecedented egg ‚Äúshortage‚Äù are exaggerated. Nonetheless, egg prices ‚Äî and egg company profits ‚Äî have gone through the roof. Cal-Maine Foods ‚Äî the largest egg producer and the only one that publishes its financial data as a publicly traded company ‚Äî has been making more money than ever. It‚Äôs annual gross profits in the past three years have floated between</span><em><a href="https://irp.cdn-website.com/79e86203/files/uploaded/CALM_FY25_2Q_Investor_Presentation.pdf" rel=""> </a></em><a href="https://irp.cdn-website.com/79e86203/files/uploaded/CALM_FY25_2Q_Investor_Presentation.pdf" rel="">3 and 6 times</a><em> </em><span>what it used to earn before the avian flu epidemic started ‚Äî </span><a href="https://www.sec.gov/Archives/edgar/data/16160/000114036123040882/ny20009586x3_ars.pdf" rel="">breaking $1 billion</a><span> for the first time in the company‚Äôs history. All of this extra profit is coming from higher selling prices, which have been earning Cal-Maine </span><a href="https://irp.cdn-website.com/79e86203/files/uploaded/CALM_FY25_2Q_Investor_Presentation.pdf" rel="">unprecedented 70-145 percent margins </a><span>over farm production costs per dozen. Taking Cal-Maine as the ‚Äú</span><a href="https://www.egg-news.com/Share.aspx?Site_Copy_ID=246541" rel="">bellwether</a><span>‚Äù for the industry‚Äôs largest firms ‚Äî as people in the egg business do ‚Äî we can be pretty confident that the other large egg producers are also raking in profits off the relatively small dip in egg production.</span></p><p><span>High persistent profits are an anomaly for the industry. Historically, egg producers have responded to avian flu epidemics‚Äîand the temporary rise in egg prices that often accompanies them‚Äîby quickly rebuilding and expanding their flocks of egg-laying hens. ‚Äú</span><a href="https://www.jstor.org/stable/3298723?seq=9" rel="">Fowl plagues</a><span>‚Äù‚Äîas these epidemics used to be called‚Äîhave been with us since at least the 19</span><sup>th</sup><span> century. Most recently, large-scale avian flu epidemics hit egg farms in 2015 and 1983-1984. The egg industry responded to both of these destructive events by sprinting to rebuild and expand the egg-laying hen flock ‚Äî something which checked price increases and ultimately made sure prices went back to pre-epidemic levels within a reasonable time.</span></p><p><span>As Cal-Maine Foods explained in its </span><a href="https://www.sec.gov/Archives/edgar/data/16160/000114420407044438/v084606_10k.htm" rel="">2007 Annual Report</a><span>: ‚ÄúIn the past, during periods of high profitability, shell egg producers have tended to increase the number of layers in production with a resulting increase in the supply of shell eggs, which generally has caused a drop in shell egg prices until supply and demand return to balance.‚Äù</span></p><p><span>For example, immediately after the height of the avian flu epidemic in May 2015, egg producers started adding millions more pullets to their operations each month‚Äîultimately raising 15.3 million more pullets on their farms in 2015 than they did in 2014, and increasing that figure by another 8 million in 2016, according to my analysis of data from monthly USDA/NASS </span><a href="https://usda.library.cornell.edu/concern/publications/fb494842n?locale=en" rel="">Chicken and Eggs</a><span> reports. Altogether, producers added adult hens to their flocks at a prodigious rate of 4.15 million per month on average from August 2015 through February 2016, replacing nearly all of the hens lost to avian flu within 7 months.</span></p><p><span>As a result, the average wholesale price of eggs landed at $1.65 a dozen that year, only 40 percent higher than it did the year before. By the end of March 2016, monthly </span><a href="https://ers.usda.gov/sites/default/files/_laserfiche/outlooks/86282/LDPM-282-02.pdf?v=43404" rel="">egg production was higher</a><span> than it was in March 2014 ‚Äî and egg prices had not only returned to pre-epidemic levels, but were </span><a href="https://ers.usda.gov/sites/default/files/_laserfiche/outlooks/86282/LDPM-282-02.pdf?v=43404" rel="">dropping even lower</a><span>.</span></p><p><span>This time around, however, that‚Äôs not happening. Despite high profits, the egg industry has somehow maintained a stubborn deficit in egg production capacity. Hatcheries ‚Äî the firms that supply hens to egg producers ‚Äî have </span><em>throttled</em><span> the pipeline of hens instead of expanding it. According to the Egg Industry Center, the size of the flock of ‚Äúparent‚Äù hens ‚Äî the hens used by hatcheries to produce layer chicks for egg producers ‚Äî plummeted from 3.1 million hens in 2021, to 2.9 million in 2022, to 2.5 million hens in 2023 and 2024.</span></p><p>Meanwhile, hatcheries have been hatching significantly fewer parent chicks to replace aging ones ‚Äî nearly 380,000 (or 12 percent) fewer in 2022 compared to the year before, and even fewer parent chicks in 2023 and 2024 ‚Äî leaving the parent flock older and more likely to produce eggs that fail to hatch. That could explain why, although hatcheries reported producing 125-200 million more fertilized eggs to the USDA in each of the last three years compared to 2021, the number of eggs they‚Äôve placed in incubators and the number of chicks they‚Äôve hatched from those eggs has either declined or stayed basically steady with 2021 levels in every year since.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png" width="633" height="398" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:398,&quot;width&quot;:633,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:42479,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.thebignewsletter.com/i/158596127?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F11fc68b6-3f67-4bca-a924-aaaf5e5e952c_633x398.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>Chart by Basel Musharbash. Data from: Egg Industry Center, </span><em>U.S. Flock Trends and Projections</em><span> (Feb. 6, 2025). </span></figcaption></figure></div><p><span>As for egg producers themselves, you may be surprised to learn that they have added between 5 and 20 million </span><em>fewer</em><span> pullets to their farms in every one of the last three years than they did in 2021. As the USDA </span><a href="https://ers.usda.gov/sites/default/files/_laserfiche/outlooks/105496/LDP-M-342.pdf?v=17229" rel="">observed</a><span> with some astonishment at the end of 2022, ‚Äúproducers‚Äîdespite the record-high wholesale price [of eggs]‚Äîare taking a cautious approach to expanding production[.]‚Äù The </span><a href="https://ers.usda.gov/sites/default/files/_laserfiche/outlooks/103066/LDP-M-331.pdf?v=23912" rel="">following month</a><span>, it pared down its table-egg production forecast for the entirety of 2023 on account of ‚Äúthe industry‚Äôs [persisting] cautious approach to expanding production.‚Äù</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png" width="583" height="428" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:428,&quot;width&quot;:583,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:45038,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.thebignewsletter.com/i/158596127?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf9ff8c8-2fe4-49ca-994e-3cae4b3cd573_583x428.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>Chart by Basel Musharbash. Data compiled from USDA/NASS </span><a href="https://usda.library.cornell.edu/concern/publications/fb494842n?locale=en" rel="">Chicken and Eggs</a><span> reports for 2019-2024. </span></figcaption></figure></div><p>In other words, the only thing that the egg industry seems to have expanded in response to the avian flu epidemic is windfall profits ‚Äî which have likely amounted to more than $15 billion since the epidemic began (judging by the increase in the value of annual egg production since 2022), and appear to have been spent primarily on stock buybacks, dividends, and acquisitions of rivals instead of rebuilding and expanding flocks. When an industry starts profiting more from *not* producing than from producing, it‚Äôs a sign that something isn‚Äôt right. It could be an innocent bottleneck. But when it lasts for three years on end with no relief in sight, it's usually a sign of something else that‚Äôs pervasive in America ‚Äî monopolization.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png" width="538" height="353" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:353,&quot;width&quot;:538,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:44294,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.thebignewsletter.com/i/158596127?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F423ec08e-f387-4a71-b0be-ff2b15289bb4_538x353.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Chart by Basel Musharbash. Data compiled from the USDA/NASS QuickStats database.</figcaption></figure></div><p>As the coming installments in this series will detail, the fundamental problem in the egg supply chain today is the simple fact that every industry involved in turning an egg into a chicken and turning a chicken into an egg‚Äîfrom the breeders and hatcheries that create the hens to the producers who use the hens to make eggs‚Äîhas been hijacked by one or two financier-backed corporations, with the incentives flipped from competing entities seeking to produce more eggs to an oligopoly trying to restrain the production of eggs.</p><p><span>On one end of the egg supply chain, you have two companies who control chicken genetics, the billionaire-owned </span><a href="https://ew.group/en/growing-excellence-through-innovation/" rel="">Erich Wesjohann Group</a><span> and the private-equity-backed </span><a href="https://www.hendrix-genetics.com/en/" rel="">Hendrix Genetics</a><span>. Headquartered a short car trip apart in Cuxhaven, Germany, and Boxmeer, Netherlands, these private firms have systematically gained control over the supply of egg-laying hens to American producers over the past two decades by buying out or suppressing rivals and challengers. Today, no egg producer in this country can expand the number of hens in its flock ‚Äî or even replace the hens it already has when they age out or die ‚Äî without the cooperation of this duopoly. And, since the value of hens rises with the price of the eggs, when the price of eggs is high these two barons have a clear interest in keeping the supply of pullets to producers on a tight leash ‚Äî so the high prices stick.</span></p><p>On the other end of the egg supply chain, you have the largest egg producer in the country and the world, Cal-Maine Foods.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png" width="798" height="706" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:706,&quot;width&quot;:798,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:687619,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.thebignewsletter.com/i/158596127?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe39152a-cd81-4d01-b193-b4a6e045eb1a_798x706.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png" width="1013" height="180" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:180,&quot;width&quot;:1013,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fccb9f8c1-cc95-4761-86b3-b0431dfec212_1013x180.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>Cal-Maine isn‚Äôt just the largest egg producer and distributor, but has a range of coercive tools at its disposal to discipline smaller rivals in the industry. Through what looks like </span><a href="https://www.egg-news.com/news.aspx#:~:text=Cal%2DMaine%20is%20fairly%20unique%20in%20that%20it%20operates%20its%20own%20parent%20flocks%20capable%20of%20providing%20for%20the%20replacement%20requirements%20of%20the%20company." rel="">a special arrangement </a><span>with the chicken-genetics barons, Cal-Maine can expand its output faster and cheaper than any other egg producer. If a producer gets out of line and responds to high prices with flock expansions or discounting practices that Cal-Maine doesn‚Äôt approve of, Cal-Maine can flood the market with eggs‚Äîdepressing prices for everyone while capturing market share for itself. As a publicly-traded company with a low cost of capital from Wall Street, Cal-Maine can live with low egg prices for a long time. Not so for most of the 60 or so family-owned producers who make up the rest of the egg industry; they‚Äôre actual businesses that need to turn a profit.</span></p><p><span>The power wielded by these dominant firms ‚Äî EW Group, Hendrix, and Cal-Maine ‚Äî is not theoretical. Just last year, a federal jury found that, shortly after Cal-Maine rose to dominance in the late 1990s, its executives took over the leadership of a longstanding industry association called the United Egg Producers (UEP) and turned it into a cartel, the equivalent of what the presiding judge analogized to a ‚Äú</span><a href="https://storage.courtlistener.com/recap/gov.uscourts.ilnd.263305/gov.uscourts.ilnd.263305.713.0_5.pdf" rel="">mob boss</a><span>‚Äù for the industry. </span></p><p><span>Shortly after, other major egg producers that had long resisted joining the UEP ‚Äî like Rose Acre Farms ‚Äî gave up their independence and entered the UEP‚Äôs fold, until it finally represented producers accounting for more than 90% of the country‚Äôs egg supply. Cal-Maine‚Äôs executives then used the association as a ‚Äúbullhorn‚Äù to ‚Äú</span><a href="https://storage.courtlistener.com/recap/gov.uscourts.ilnd.263305/gov.uscourts.ilnd.263305.713.0_5.pdf" rel="">bark out orders</a><span>‚Äù at egg producers and ‚Äúcoordinate a conspiracy‚Äù to restrict the supply of eggs in the United States through a variety of strategies ‚Äî including throttling the replacement of hens lost to mortality and a fake ‚Äúanimal welfare‚Äù program designed to reduce overall flock numbers rather than improve hen‚Äôs lives.</span></p><p><span>An economist who helped plan the UEP cartel </span><a href="https://storage.courtlistener.com/recap/gov.uscourts.ilnd.263305/gov.uscourts.ilnd.263305.73.17.pdf" rel="">summed up</a><span> the economic rationale behind it pretty simply: ‚ÄúMore hens, less income!‚Äù And the conspiracy‚Äôs results proved he was right. Wholesale egg prices reached unprecedented heights over the course of the 2000s and then never came back down ‚Äî settling around a new, higher focal point 50 to 100 percent higher than the pre-conspiracy level for the next decade. Something similar could be happening with the current avian flu epidemic. Indeed, the new focal point appears to be already here: There was an argument that wholesale egg prices ‚Äúcollapsed‚Äù in 2023. In reality, they were on average 75% higher than wholesale egg prices before the epidemic‚Äôs onset in 2022.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png" width="1456" height="815" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:815,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:466622,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.thebignewsletter.com/i/158596127?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37428d11-6f31-4791-bbc9-b95e2e0898f8_3300x1847.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Chart by Basel Musharbash. Data from FRED/Bureau of Labor Statistics.</figcaption></figure></div><p><span>One way to understand the problem of eggs is consistent with similar problems we‚Äôre seeing in other parts of the economy. From </span><a href="https://www.thebignewsletter.com/p/big-bottle-the-baby-formula-nightmare" rel="">baby formula</a><span> to </span><a href="https://www.organizedmoney.fm/p/episode-11-the-great-american-drug" rel="">cancer drugs</a><span> to </span><a href="https://www.thebignewsletter.com/p/beef-is-expensive-so-why-are-cattle" rel="">beef</a><span>, shortages and supply shocks in concentrated industries are now routine.</span></p><p><span>In other words, the current egg crisis is what the Sovietization of American business looks like. We don‚Äôt have egg companies in the business of making eggs anymore. We have egg companies in the business of exploiting egg shortages, almost a private government of eggs. This dynamic is so extreme that the Agriculture Secretary had to go on something of a diplomatic mission to Cal-Maine </span><a href="https://www.wsj.com/opinion/agriculture-secretary-brooke-rollins-my-plan-to-lower-egg-prices-6be0f881" rel="">last month</a><span> to try to sweet-talk its executives into loosening their grip on the egg supply ‚Äî and walked out of her meeting saying the USDA is going </span><em>to pay egg producers </em><span>to rebuild the country‚Äôs hen flock</span><em> </em><span>at a time when rebuilding the hen flock is going to be more profitable for them than it has ever been.</span></p><p><span>So, that‚Äôs the broad-brush picture. To understand how we got to this place where shortages are more profitable than production, we have to start with the origins of the American egg business. After all, there‚Äôs a reason that a big cheap breakfast served in a diner on the roadside was such a big part of American culture, and why it‚Äôs such a shock to see </span><a href="https://www.bing.com/ck/a?!&amp;&amp;p=74f44fa39d6ae71279e54eab589a8d12d169cc12d2cb50f5e994a059d70fa3ecJmltdHM9MTc0MTMwNTYwMA&amp;ptn=3&amp;ver=2&amp;hsh=4&amp;fclid=1d483643-a4bf-6793-3287-226da5e86647&amp;psq=denny%27s+egg+surcharge&amp;u=a1aHR0cHM6Ly93d3cubXNuLmNvbS9lbi11cy9tb25leS9jb21wYW5pZXMvZGVubnktcy1yZXBvcnRlZGx5LWFkZHMtZWdnLXN1cmNoYXJnZS1hbWlkLXJpc2luZy1wcmljZXMtYW5kLWJpcmQtZmx1LXNob3J0YWdlcy9hci1BQTF6Sko1Yj9vY2lkPUJpbmdOZXdzU2VycA&amp;ntb=1" rel="">Denny‚Äôs levy an egg surcharge</a><span>. So let‚Äôs start with how the big fluffy omelet became so Americana.</span></p><p><strong>America as a Land of Egg Plenty</strong></p><p>Producing an egg seems simple. An ‚Äúold McDonald had a farm‚Äù kind of farmer breeds a lovely hen, grows it to adulthood, has it lay eggs, puts those eggs in a crate, and sends that crate to a grocery store in return for a negotiated price. And that‚Äôs basically how the industry worked until the middle of the 20th century. The essentials of that story remained on point, but the components were split up among a series of specialized operations.</p><p>If you abstract out what the egg farmer used to do all by himself, you get all the layers of the modern egg supply chain. First, as discussed above, there are breeders, who manage chicken genetics and produce ‚Äúparent stock,‚Äù or the stock of birds that are mated to produce the fertilized eggs that become table-egg laying hens. Second, there are hatcheries, who buy parent stock from breeders, mate them to produce fertilized eggs, incubate their eggs to hatch table-egg laying chicks, and then grow the chicks into hens. Third, there are egg producers, who buy table-egg laying chicks or hens from the hatcheries and use them to produce eggs (some producers also buy fertilized eggs from hatcheries and incubate them in-house). Fourth, there are the various distributors and processors who buy eggs from producers. And finally, there are market makers who survey buyers and sellers for information about egg prices and other market data points, and use that information to publish regular benchmarks for the market value of eggs.</p><p>So, to understand the story behind egg prices, we shouldn‚Äôt think about ‚Äúthe egg industry‚Äù or the ‚Äúegg market‚Äù but a series of linked industries and markets ‚Äî starting from the breeders and hatcheries, running through the egg producers and the egg buyers, all the way to the market makers ‚Äî the end result of which is the carton of eggs on the shelf. To get there, we have to start eighty years ago, when egg production was revolutionized by new technologies and techniques, and the modern egg supply chain was born.</p><p>In 1942, New Deal-era Secretary of Agriculture, and then Vice President, Henry A. Wallace built a new model for producing eggs. It was based on creating better birds through the ‚Äúhybridization‚Äù of chicken, which is the crossing of two or more pure breeds of chicken to create a ‚Äúhybrid‚Äù chicken with specific qualities. The resulting hens laid more or better eggs, required less feed, and were more adapted to specific production systems. After Wallace developed them, cross-breeding methods were shared with small breeders around the country through United States Department of Agriculture (USDA) extension offices at land grant colleges, which conducted basic research into the field and made breeding know-how and pure-bred stocks available to the public. Within a few years, dozens of other ‚Äúprimary breeders‚Äù emerged, creating a dynamic chicken genetics industry with many local and regional players.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png" width="977" height="757" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:757,&quot;width&quot;:977,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:703527,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.thebignewsletter.com/i/158596127?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F47771b50-323a-4ec3-adb6-144f3ec0e4a4_977x757.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>In 1940, FDR named Henry A. Wallace his Vice President. This picture is from July 19th, 1940, during a White House broadcast about New Deal Farm Programs.</figcaption></figure></div><p>These primary breeders developed branded strains of layer chickens and marketed them to thousands of hatcheries nationwide. The hatcheries bought ‚Äúparent stock‚Äù for branded strains of chicken from the primary breeders, mated them to produce fertilized eggs, incubated the eggs until they hatched, and then sold the resulting chicks and young hens (called ‚Äúpullets‚Äù) to farmers, which raised them into mature hens and then used them to produce eggs. As farmers got to know the different hybrid chicken brands, they selected among them for productivity and other characteristics that suited their production systems ‚Äî creating a virtuous feedback loop.</p><p><span>Soon, these developments led to a revolution in egg production both at home and around the world. The number of eggs laid per hen in the United States increased by almost </span><a href="https://dr.lib.iastate.edu/server/api/core/bitstreams/a27d90a4-042a-4230-964a-584f6dc75f90/content" rel="">44% between 1940 and 1955</a><span> ‚Äî more, in relative terms, than it would increase over the next four decades combined. Hybrid hens originating from the United States were soon introduced around the world, leading to a rapid expansion in global egg production‚Äînot to mention the explosion in cheap American diners dotting the new highway systems being built.</span></p><p>In tandem with the mid-century revolution in chicken breeding, there was a revolution in egg production systems. Poultry science departments at land-grant colleges engaged in continual field testing and production research to develop new equipment and systems for egg farmers, ultimately developing critical technologies like large-scale incubators to hatch eggs on a schedule, fine-sand blowers to clean eggs without breaking shells, and caged-rearing systems to mechanize feeding, watering, and egg-collection in their hen houses.</p><p><span>Although these innovations gave rise to some efficiencies of scale at the farm level and enabled the rise of factory-style hatcheries and egg production facilities, the industry as a whole remained highly decentralized at every stage of production and distribution well into the late 1970s. As late as 1978, most producers were still small, and most egg production still took place on farms with </span><a href="https://agcensus.library.cornell.edu/wp-content/uploads/1978-United_States-CHAPTER_1_State_Data-181-Table-18.pdf" rel="">fewer than 50,000 hens</a><span>. There were just </span><a href="https://link.springer.com/chapter/10.1007/978-1-4615-0811-3_49" rel="">34 ‚Äúbig‚Äù egg companies with 1 million or more egg-laying hens each</a><span>, and they accounted for only 27% of annual egg production.</span></p><p>Undergirding this system was law: Antitrust enforcement prevented the largest breeders, hatcheries, and egg producers from growing by serial acquisitions or by handicapping their rivals‚Äô access to customers or suppliers. For similar reasons, the markets into which egg producers sold their eggs‚Äîpackers, retailers, processors, wholesalers, and institutions‚Äîalso remained open and competitive, offering a wide diversity of potential buyers to egg producers of various sizes in every region of the country.</p><p><span>Because of the openness of the egg industry and the abundance of small producers with excess capacity, there was almost always a significant surplus of eggs in the country. When that surplus narrowed (whether because of long-term population growth or a sudden crisis, like an avian flu epidemic), elevated egg prices invited rapid expansions in egg output from new and existing producers that quickly brought prices back down. For example, during the </span><a href="https://www.jstor.org/stable/1349329?seq=2" rel="">avian flu epidemic of 1983-1984</a><span>, producers had to cull tens of millions of layer hens and other birds, including nearly every chicken in Pennsylvania. But retail egg prices rose by just 66 percent over a few months ‚Äî and promptly fell just as </span><a href="https://www.jstor.org/stable/1349329?seq=2" rel="">sharply over the next few months</a><span> as producers quickly replaced the hens they‚Äôd lost.</span></p><p><span>‚ÄúEggs,‚Äù </span><a href="https://ageconsearch.umn.edu/record/303075/files/nc-117-028.pdf___.YzJ1OmFlbHBlY29ub21pY2xpYmVydGllczpjOm86OGI0OTBiMDZkMmIxZmFlNTlkODZhYzY5MmEzODZjNjg6NjpiOGYyOmExMjQ1NWJhNGFmMjk3NmY3NDQ0NGNmMzQ4ODhjZDdmY2JmZTc1YjkxNTU4ZWYxYTk1YTdjZWYwYWRmZjRlMjk6cDpUOk4" rel="">said</a><span> a prominent agricultural economist in 1978, ‚Äúwill be processed and produced in this country if there is a fair return on investment. When the return [on eggs] becomes high,‚Äù he continued, ‚Äúthere will be expansion of production that will reduce prices.‚Äù And that was actually true: Higher prices routinely led farmers to get into the egg business to make money, and that in turn regularly reset the market with more supply. Price spikes were short-lived. Shortages were unheard of. America was a land of egg plenty.</span></p><p>Then, everything changed. </p><p><em><span>Stay tuned for part two of Hatching a Conspiracy, which will come next week. Hatching a Conspiracy is part of a new BIG project where we do deep investigative journalism on specific industries. If you‚Äôd like to support this work, </span><a href="https://www.thebignewsletter.com/subscribe" rel="">sign up as a paid subscriber for BIG</a><span>, or if you are already a paid subscriber, </span><a href="https://www.thebignewsletter.com/subscribe?gift=true" rel="">give a subscription</a><span> to someone who you think would like it.</span></em></p><p><em><span>Except where otherwise noted or linked, all statistical figures in Hatching a Conspiracy were derived by Basel Musharbash from analysis of data compiled from the USDA National Agricultural Statistics Service‚Äôs </span><a href="https://quickstats.nass.usda.gov/" rel="">QuickStats database</a><span>, </span><a href="https://usda.library.cornell.edu/concern/publications/fb494842n?locale=en" rel="">Chicken and Eggs</a><span> reports, and </span><a href="https://usda.library.cornell.edu/concern/publications/9306sz28s?locale=en&amp;page=5#release-items" rel="">Hatchery Production Annual Summary</a><span> reports, among others, as well as the USDA Economic Research Service‚Äôs </span><a href="https://www.ers.usda.gov/data-products/livestock-and-meat-international-trade-data" rel="">international trade data hub</a><span>. </span></em></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Nickel superconductor works above -233¬∞C threshold at normal pressure (118 pts)]]></title>
            <link>https://phys.org/news/2025-02-nickel-superconductor-233c-threshold-pressure.html</link>
            <guid>43311610</guid>
            <pubDate>Sun, 09 Mar 2025 17:43:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phys.org/news/2025-02-nickel-superconductor-233c-threshold-pressure.html">https://phys.org/news/2025-02-nickel-superconductor-233c-threshold-pressure.html</a>, See on <a href="https://news.ycombinator.com/item?id=43311610">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
										
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2025/nickel-superconductor-1.jpg" data-src="https://scx2.b-cdn.net/gfx/news/2025/nickel-superconductor-1.jpg" data-sub-html="Schematic of synthesizing (La,Pr)<sub>3</sub>Ni<sub>2</sub>O<sub>7</sub> on SrLaAlO<sub>4</sub> with gigantic-oxidative atomically layer-by-layer epitaxy (GOALL-Epitaxy). Credit: Guangdi Zhou et al">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2025/nickel-superconductor-1.jpg" alt="Nickel superconductor works above -233¬∞C threshold at normal pressure" title="Schematic of synthesizing (La,Pr)3Ni2O7 on SrLaAlO4 with gigantic-oxidative atomically layer-by-layer epitaxy (GOALL-Epitaxy). Credit: Guangdi Zhou et al" width="800" height="530">
             <figcaption>
                Schematic of synthesizing (La,Pr)<sub>3</sub>Ni<sub>2</sub>O<sub>7</sub> on SrLaAlO<sub>4</sub> with gigantic-oxidative atomically layer-by-layer epitaxy (GOALL-Epitaxy). Credit: Guangdi Zhou et al
            </figcaption>        </figure>
    </div><p>A team of engineers and physicists at Southern University of Science and Technology, in China, has created a nickel-based material that behaves as a superconductor above the -233¬∞C (40 K) threshold under ambient pressure. In their study <a href="https://www.nature.com/articles/s41586-025-08755-z" target="_blank">published</a> in <i>Nature</i>, the researchers synthesized thin films of bilayer nickelate (La‚ÇÇ.‚Çà‚ÇÖPr‚ÇÄ.‚ÇÅ‚ÇÖNi‚ÇÇO‚Çá) and found one that behaved as a high-temperature superconductor.</p>


										      
																					<p>The -233¬∞C threshold (40 K), often associated with the McMillan limit, marks a boundary beyond which conventional superconductivity theories become less predictive.</p>
<p>Scientists have been searching for a room-temperature superconductor that could revolutionize a wide range of technologies. The ability to achieve superconductivity without the need for costly and complex cooling systems would significantly reduce energy loss due to heat conversion in electrical transmission, leading to dramatic improvements in efficiency and cost reduction. This breakthrough could lead to advancements in numerous fields, including maglev trains, fusion reactors and MRI machine components. This new effort by the team in China represents another step in reaching the ultimate goal.</p>
<p>Until now, <a href="https://phys.org/tags/high-temperature+superconductors/" rel="tag">high-temperature superconductors</a> have primarily been based on copper and iron compounds, while nickelate superconductors required high-pressure conditions to function.</p>
<p>The newly discovered high-temperature nickelate superconductor emerged from the team's experiments with epitaxially grown bilayer nickelate thin films. Their work was part of a long-term project geared toward finding high-temperature superconductors based on nickel. The current research had been running for three years and involved growing nickelates with controlled rare-earth metal substitutions and precise oxygen content.</p>
<p>For this latest successful effort, the team substituted a portion of lanthanum with praseodymium in the nickelate structure. Testing showed it transitioned to a superconductor at approximately -228¬∞C.</p>
<p>The research team suggests their development of a nickel-based, high-temperature superconductor is likely to open the door to other possibilities, some nickel-based and others based on other metals. It might also help in research dedicated to understanding why some materials can transition into superconductors.</p>

																														
																				<div>
																						<p><strong>More information:</strong>
												Guangdi Zhou et al, Ambient-pressure superconductivity onset above 40 K in (La,Pr)<sub>3</sub>Ni<sub>2</sub>O<sub>7</sub> films, <i>Nature</i> (2025). <a data-doi="1" href="https://dx.doi.org/10.1038/s41586-025-08755-z" target="_blank">DOI: 10.1038/s41586-025-08755-z</a>. On <i>arXiv</i>: <a data-doi="1" href="https://dx.doi.org/10.48550/arxiv.2412.16622" target="_blank">DOI: 10.48550/arxiv.2412.16622</a>
</p><p>Elizabeth Gibney, 'Unconventional' nickel superconductor excites physicists, <i>Nature</i> (2025). <a data-doi="1" href="https://dx.doi.org/10.1038/d41586-025-00450-3" target="_blank">DOI: 10.1038/d41586-025-00450-3</a></p>

																						
																						
																					</div>
                               											
																															 <p>
												  ¬© 2025 Science X Network
											 </p>
										                                        
										<!-- print only -->
										<div>
											 <p><strong>Citation</strong>:
												Nickel superconductor works above -233¬∞C threshold at normal pressure (2025, February 21)
												retrieved 9 March 2025
												from https://phys.org/news/2025-02-nickel-superconductor-233c-threshold-pressure.html
											 </p>
											 <p>
											 This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
											 part may be reproduced without the written permission. The content is provided for information purposes only.
											 </p>
										</div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ecosia is teaming up with Qwant to build a European search index (273 pts)]]></title>
            <link>https://blog.ecosia.org/eusp/</link>
            <guid>43311573</guid>
            <pubDate>Sun, 09 Mar 2025 17:40:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.ecosia.org/eusp/">https://blog.ecosia.org/eusp/</a>, See on <a href="https://news.ycombinator.com/item?id=43311573">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <p>If you‚Äôve been following <a href="https://blog.ecosia.org/choice-screen/"><u>our work on the Digital Markets Act</u></a>, you know we‚Äôre always pushing for tech that‚Äôs more fair, competitive, and more democratic. We are proud to share the next step in our journey towards tech independence - building our very own search index! We've joined forces with our friends at Qwant to build the <a href="https://www.eu-searchperspective.com/" rel="noreferrer"><em>European Search Perspective</em></a> which will provide a solid foundation for future technologies, including AI infrastructure.</p><h2 id="what-is-a-search-index"><strong>What is a search index?</strong></h2><p>A search index is a database used by search engines to retrieve information and present them in the most relevant order; the same way libraries label and sort books.&nbsp;</p><p>Currently, we rely on a mix of both Google and Bing libraries to provide you with answers to your searches. Starting in 2025, our new index will be added into the database pool to serve results in both the French and German language. We are starting small and in the home countries of both Qwant and Ecosia respectively.&nbsp;</p><h2 id="why-build-our-own-search-index"><strong>Why build our own search index?</strong></h2><p>Through the <em>European Search Perspective </em>we‚Äôre aiming to build digital sovereignty within Europe and provide a transparent and secure data pool for emerging AI technologies. We will develop a privacy-first search index, which will be used by both Ecosia and Qwant, and unlike proprietary solutions, we are making the index available to others.&nbsp;</p><p>We‚Äôre excited to mark the next stage of tech autonomy because it means that we are giving ourselves more freedom to build the future of green tech that we want. The amount of climate impact Ecosia can bring about has always been dependent on how well our search engine works for you, so as we see it, developing this innovative technology is essential for the planet.&nbsp;</p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Europe bets once again on RISC-V for supercomputing (205 pts)]]></title>
            <link>https://www.theregister.com/2025/03/07/dare_europe_risc_v_project/</link>
            <guid>43311091</guid>
            <pubDate>Sun, 09 Mar 2025 17:04:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2025/03/07/dare_europe_risc_v_project/">https://www.theregister.com/2025/03/07/dare_europe_risc_v_project/</a>, See on <a href="https://news.ycombinator.com/item?id=43311091">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>A 38-strong group of tech players have founded a project with the snappy name Digital Autonomy with RISC-V in Europe, aka DARE, that aims to develop processor units to power the continent‚Äôs supercomputers and other high-performance machines.</p>
<p>If you're having deja vu, you're not alone: Europe has been <a target="_blank" href="https://www.theregister.com/2018/07/17/europes_exascale_supercomputer_chips/">talking about</a> and toying with <a target="_blank" href="https://www.theregister.com/2023/02/08/riscv_hpc/">using RISC-V</a> for <a target="_blank" href="https://www.theregister.com/2021/12/24/european_processor_initiative_phase_one_concludes/">supercomputing</a> for <a target="_blank" href="https://www.theregister.com/2022/02/08/eu_chip_projects/">some years</a>, even getting far as <a target="_blank" href="https://www.theregister.com/2021/09/22/first_riscv_epi_chip/">some silicon</a>, though turned to <a target="_blank" href="https://www.theregister.com/2024/05/14/sipearl_rhea1_specs/">Arm's architecture</a> for its <a target="_blank" href="https://www.nextplatform.com/2024/09/16/thinking-outside-of-the-box-with-the-jupiter-supercomputer-datacenter/">first exascale</a> system. The continent hasn't given up on RISC-V, though, certainly not with America in the state it's in.</p>
<p>The <a target="_blank" rel="nofollow" href="https://dare-riscv.eu/launch-of-dare-sga1-project/">DARE project</a> is supported by the EuroHPC Joint Undertaking and coordinated by the Barcelona Supercomputing Center (BSC-CNS). The project aims to create three chiplets ‚Äì individual chip dies that can be combined to form complete processor packages ‚Äì and has already picked leaders for each effort:</p>
<ol>
<li>A vector-math accelerator die tuned for high-performance computing (HPC) workloads, led by Barcelona-based chip designer Openchip</li>

<li>A next-gen inference chiplet from Dutch startup Axelera AI</li>

<li>A general-purpose processor die, driven by Germany's Codasip</li>
</ol>
<p>"DARE is daring to start from the top of the technological complexity pole and produce European-designed processors chips for supercomputers, paving the way for Europe's digital sovereignty," Osman Unsal, DARE principal investigator at BNC-CNS, said in a statement.</p>
<p>The first phase of this six-year endeavor is backed by ‚Ç¨240 million (¬£200 million, $260 million) in funding. DARE has given itself the goal of developing the three above-mentioned RISC-V chiplets in three years.</p>

    

<p>Axelera AI, which says it‚Äôs been <a target="_blank" rel="nofollow" href="https://www.axelera.ai/news/axelera-ai-secures-up-to-61-million-grant-to-develop-scalable-ai-chiplet-for-high-performance-computing">awarded</a> ‚Ç¨61.6 million (¬£52 million, $65 million) in funding from EuroHPC, appears to be the furthest along on its journey toward creating a datacenter-class RISC-V chip. While most of its current lineup is focused on running AI models at the network edge, we're told its upcoming Titania chiplet will be designed for server-grade workloads.</p>

        


        

<p>On the surface, Axelera's chips follow a similar formula as other AI ASICs, such as Google's tensor processing units. The Dutch outfit's current silicon feature four accelerator cores, each with a matrix multiply-accumulate (MAC) unit, a RISC-V control core to make the accelerator programmable, and some digital signal processors which handle neural network activation functions.</p>
<p>Like some other designs we've seen on the market, these MAC units, which are responsible for the bulk of today's AI processing, are embedded in a pool of SRAM enabling efficient streaming and crunching of matrices through the chips; it's classic in-memory processing you see more and more these days.</p>

        

<p>CEO Fabrizio Del Maffeo told <em>El Reg</em> Axelera's arrangement of its MAC units allows its quad-core AI processing units to achieve more than 200 INT8 trillion operations per second (TOPS) of inference performance while consuming just 15-20 watts of power.</p>
<p>The forthcoming Titania will take this same basic formula but scale it up, with more processing cores on-die and multi-die system-in-package designs.</p>
<p>Codasip already offers several 32-bit embedded-class and 64-bit application-grade RISC-V CPU cores, which appear to be aimed at network edge, IoT, and modest personal computing devices. In a <a target="_blank" rel="nofollow" href="https://codasip.com/press-release/2025/03/06/codasip-selected-to-design-a-high-end-risc-v-processor-for-the-eu-funded-dare-project/">press release</a>, the biz said the DARE project would provide it the resources to extend its portfolio to include high performance applications including "AI, big data processing, and supercomputing."</p>

        

<p>Little is known about Openchip's vector accelerator.</p>
<ul>

<li><a href="https://www.theregister.com/2025/02/26/europe_has_second_thoughts_about/">Under Trump 2.0, Europe's dependence on US clouds back under the spotlight</a></li>

<li><a href="https://www.theregister.com/2025/02/12/eu_plans_to_mobilize_200b/">EU plans to 'mobilize' ‚Ç¨200B to invest in AI to catch up with US and China</a></li>

<li><a href="https://www.theregister.com/2025/03/06/xen_seapath_open_source_hypervisors/">Xen Project delivers solid hypervisor update and keeps working on RISC-V port</a></li>

<li><a href="https://www.theregister.com/2025/02/11/nasa_radpc_firefly_moon_mission/">NASA's radiation tolerant RISC-V computer lives up to its name after surviving Van Allen belts</a></li>
</ul>
<p>Europe isn't alone in looking to the royalty free RISC-V ISA as the foundation of technological independence. India has <a target="_blank" href="https://www.theregister.com/2020/08/19/india_microprocessor_challenge_risc_v/">chosen</a> RISC-V in its quest to create highly capable domestic chip designs. China‚Äôs Alibaba last week <a target="_blank" href="https://www.theregister.com/2025/03/05/china_alibaba_risc_v_c930/">unveiled</a> a RISC-V CPU design called the XuanTie C930, which it claims can power PCs to automobiles, amid rumors that Beijing will soon issue guidance that suggests widespread domestic use of the instruction set.</p>
<p>While RISC-V is open and permissively licensed, American lawmakers have sometimes <a target="_blank" href="https://www.theregister.com/2023/11/07/proposed_restrictions_riscv/">called</a> for the US to prevent China's access to the tech. ¬Æ</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Evolving Agents Framework (124 pts)]]></title>
            <link>https://github.com/matiasmolinas/evolving-agents</link>
            <guid>43310963</guid>
            <pubDate>Sun, 09 Mar 2025 16:51:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/matiasmolinas/evolving-agents">https://github.com/matiasmolinas/evolving-agents</a>, See on <a href="https://news.ycombinator.com/item?id=43310963">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Evolving Agents Framework</h2><a id="user-content-evolving-agents-framework" aria-label="Permalink: Evolving Agents Framework" href="#evolving-agents-framework"></a></p>
<p dir="auto">A production-grade framework for creating, managing, and evolving AI agents with intelligent agent-to-agent communication. The framework enables you to build collaborative agent ecosystems that can semantically understand requirements, evolve based on past experiences, and communicate effectively to solve complex tasks.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/matiasmolinas/evolving-agents/blob/main/evolving-agents-logo.png"><img src="https://github.com/matiasmolinas/evolving-agents/raw/main/evolving-agents-logo.png" alt="Evolving Agents"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Key Features</h2><a id="user-content-key-features" aria-label="Permalink: Key Features" href="#key-features"></a></p>
<ul dir="auto">
<li><strong>Intelligent Agent Evolution</strong>: Reuse, adapt, or create agents based on semantic similarity to existing components</li>
<li><strong>Agent-to-Agent Communication</strong>: Enable specialized agents to delegate tasks and collaborate on complex problems</li>
<li><strong>Smart Library with Semantic Search</strong>: Find the most relevant tools and agents using OpenAI embeddings</li>
<li><strong>Self-improving System</strong>: Agents get better over time through continuous evolution and learning</li>
<li><strong>Human-readable YAML Workflows</strong>: Define complex agent collaborations with simple, version-controlled YAML</li>
<li><strong>Multi-Framework Support</strong>: Seamlessly integrate agents from different frameworks (BeeAI, OpenAI, etc.)</li>
<li><strong>Governance through Firmware</strong>: Enforce domain-specific rules across all agents</li>
<li><strong>ACP Integration</strong>: Support for BeeAI's Agent Communication Protocol in pre-alpha</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quick Start</h2><a id="user-content-quick-start" aria-label="Permalink: Quick Start" href="#quick-start"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Clone the repository
git clone https://github.com/matiasmolinas/evolving-agents-framework.git
cd evolving-agents-framework

# Install dependencies
pip install -r requirements.txt
pip install -e .

# Setup the agent library
python examples/setup_simplified_agent_library.py

# Run the comprehensive example
python examples/simplified_agent_communication.py"><pre><span><span>#</span> Clone the repository</span>
git clone https://github.com/matiasmolinas/evolving-agents-framework.git
<span>cd</span> evolving-agents-framework

<span><span>#</span> Install dependencies</span>
pip install -r requirements.txt
pip install -e <span>.</span>

<span><span>#</span> Setup the agent library</span>
python examples/setup_simplified_agent_library.py

<span><span>#</span> Run the comprehensive example</span>
python examples/simplified_agent_communication.py</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example: Agent Collaboration and Evolution</h2><a id="user-content-example-agent-collaboration-and-evolution" aria-label="Permalink: Example: Agent Collaboration and Evolution" href="#example-agent-collaboration-and-evolution"></a></p>
<p dir="auto">The framework lets you create agent ecosystems where specialized agents communicate and evolve:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import asyncio
from evolving_agents.smart_library.smart_library import SmartLibrary
from evolving_agents.core.llm_service import LLMService
from evolving_agents.core.system_agent import SystemAgent

async def main():
    # Initialize the framework components
    library = SmartLibrary(&quot;agent_library.json&quot;)
    llm = LLMService(provider=&quot;openai&quot;, model=&quot;gpt-4o&quot;)
    system = SystemAgent(library, llm)
    
    # 1. Ask the System Agent for an invoice analysis agent
    # The System Agent will decide whether to reuse, evolve, or create one
    result = await system.decide_and_act(
        request=&quot;I need an agent that can analyze invoices and extract the total amount&quot;,
        domain=&quot;document_processing&quot;,
        record_type=&quot;AGENT&quot;
    )
    
    print(f&quot;Decision: {result['action']}&quot;)  # 'reuse', 'evolve', or 'create'
    print(f&quot;Agent: {result['record']['name']}&quot;)
    
    # 2. Execute the agent with an invoice document
    invoice_text = &quot;&quot;&quot;
    INVOICE #12345
    Date: 2023-05-15
    Vendor: TechSupplies Inc.
    Total Due: $1,822.80
    &quot;&quot;&quot;
    
    execution = await system.execute_item(
        result['record']['name'], 
        invoice_text
    )
    
    print(&quot;\nInvoice Analysis Result:&quot;)
    print(execution[&quot;result&quot;])

if __name__ == &quot;__main__&quot;:
    asyncio.run(main())"><pre><span>import</span> <span>asyncio</span>
<span>from</span> <span>evolving_agents</span>.<span>smart_library</span>.<span>smart_library</span> <span>import</span> <span>SmartLibrary</span>
<span>from</span> <span>evolving_agents</span>.<span>core</span>.<span>llm_service</span> <span>import</span> <span>LLMService</span>
<span>from</span> <span>evolving_agents</span>.<span>core</span>.<span>system_agent</span> <span>import</span> <span>SystemAgent</span>

<span>async</span> <span>def</span> <span>main</span>():
    <span># Initialize the framework components</span>
    <span>library</span> <span>=</span> <span>SmartLibrary</span>(<span>"agent_library.json"</span>)
    <span>llm</span> <span>=</span> <span>LLMService</span>(<span>provider</span><span>=</span><span>"openai"</span>, <span>model</span><span>=</span><span>"gpt-4o"</span>)
    <span>system</span> <span>=</span> <span>SystemAgent</span>(<span>library</span>, <span>llm</span>)
    
    <span># 1. Ask the System Agent for an invoice analysis agent</span>
    <span># The System Agent will decide whether to reuse, evolve, or create one</span>
    <span>result</span> <span>=</span> <span>await</span> <span>system</span>.<span>decide_and_act</span>(
        <span>request</span><span>=</span><span>"I need an agent that can analyze invoices and extract the total amount"</span>,
        <span>domain</span><span>=</span><span>"document_processing"</span>,
        <span>record_type</span><span>=</span><span>"AGENT"</span>
    )
    
    <span>print</span>(<span>f"Decision: <span><span>{</span><span>result</span>[<span>'action'</span>]<span>}</span></span>"</span>)  <span># 'reuse', 'evolve', or 'create'</span>
    <span>print</span>(<span>f"Agent: <span><span>{</span><span>result</span>[<span>'record'</span>][<span>'name'</span>]<span>}</span></span>"</span>)
    
    <span># 2. Execute the agent with an invoice document</span>
    <span>invoice_text</span> <span>=</span> <span>"""</span>
<span>    INVOICE #12345</span>
<span>    Date: 2023-05-15</span>
<span>    Vendor: TechSupplies Inc.</span>
<span>    Total Due: $1,822.80</span>
<span>    """</span>
    
    <span>execution</span> <span>=</span> <span>await</span> <span>system</span>.<span>execute_item</span>(
        <span>result</span>[<span>'record'</span>][<span>'name'</span>], 
        <span>invoice_text</span>
    )
    
    <span>print</span>(<span>"<span>\n</span>Invoice Analysis Result:"</span>)
    <span>print</span>(<span>execution</span>[<span>"result"</span>])

<span>if</span> <span>__name__</span> <span>==</span> <span>"__main__"</span>:
    <span>asyncio</span>.<span>run</span>(<span>main</span>())</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Understanding the Comprehensive Example</h2><a id="user-content-understanding-the-comprehensive-example" aria-label="Permalink: Understanding the Comprehensive Example" href="#understanding-the-comprehensive-example"></a></p>
<p dir="auto">The framework includes a comprehensive example (<code>examples/simplified_agent_communication.py</code>) that demonstrates four key capabilities. This example shows in detail how the Evolving Agents Framework creates, manages, and evolves AI agents to handle real-world tasks.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Step 1: Setting Up the Agent Library</h3><a id="user-content-step-1-setting-up-the-agent-library" aria-label="Permalink: Step 1: Setting Up the Agent Library" href="#step-1-setting-up-the-agent-library"></a></p>
<p dir="auto">Before running the main example, we need to set up an initial library of agents and tools:</p>
<div dir="auto" data-snippet-clipboard-copy-content="python examples/setup_simplified_agent_library.py"><pre>python examples/setup_simplified_agent_library.py</pre></div>
<p dir="auto">This script creates a foundation of BeeAI-compatible agents and tools:</p>
<ul dir="auto">
<li><strong>DocumentAnalyzer Tool</strong>: A real BeeAI tool that uses an LLM to analyze documents and identify their type</li>
<li><strong>AgentCommunicator Tool</strong>: A real BeeAI tool that facilitates communication between agents</li>
<li><strong>SpecialistAgent</strong>: A BeeAI agent specialized in detailed document analysis</li>
<li><strong>CoordinatorAgent</strong>: A BeeAI agent that orchestrates the document processing workflow</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Step 2: Demonstrating the System Agent's Decision Logic</h3><a id="user-content-step-2-demonstrating-the-system-agents-decision-logic" aria-label="Permalink: Step 2: Demonstrating the System Agent's Decision Logic" href="#step-2-demonstrating-the-system-agents-decision-logic"></a></p>
<p dir="auto">The first part of the example demonstrates how the System Agent intelligently decides whether to reuse, evolve, or create a new agent based on semantic similarity:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# The System Agent dynamically decides what to do based on your request
invoice_agent_result = await system_agent.decide_and_act(
    request=&quot;I need an agent that can analyze invoices and extract the total amount&quot;,
    domain=&quot;document_processing&quot;,
    record_type=&quot;AGENT&quot;
)

print(f&quot;System Agent Decision: {invoice_agent_result['action']}&quot;)  # 'create', 'evolve', or 'reuse'"><pre><span># The System Agent dynamically decides what to do based on your request</span>
<span>invoice_agent_result</span> <span>=</span> <span>await</span> <span>system_agent</span>.<span>decide_and_act</span>(
    <span>request</span><span>=</span><span>"I need an agent that can analyze invoices and extract the total amount"</span>,
    <span>domain</span><span>=</span><span>"document_processing"</span>,
    <span>record_type</span><span>=</span><span>"AGENT"</span>
)

<span>print</span>(<span>f"System Agent Decision: <span><span>{</span><span>invoice_agent_result</span>[<span>'action'</span>]<span>}</span></span>"</span>)  <span># 'create', 'evolve', or 'reuse'</span></pre></div>
<p dir="auto">The System Agent implements a sophisticated decision mechanism:</p>
<ul dir="auto">
<li>If similarity ‚â• 0.8: Reuse an existing agent/tool</li>
<li>If 0.4 ‚â§ similarity &lt; 0.8: Evolve an existing agent/tool</li>
<li>If similarity &lt; 0.4: Create a new agent/tool</li>
</ul>
<p dir="auto">In the example, when we ask for an invoice analysis agent, it creates a new one. When we ask for a medical record analyzer, it evolves the existing SpecialistAgent (since it has a similarity score of around 0.46).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Step 3: Agent-to-Agent Communication with Workflows</h3><a id="user-content-step-3-agent-to-agent-communication-with-workflows" aria-label="Permalink: Step 3: Agent-to-Agent Communication with Workflows" href="#step-3-agent-to-agent-communication-with-workflows"></a></p>
<p dir="auto">The second part demonstrates how agents communicate with each other through workflows defined in YAML:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# A workflow where agents communicate with each other
workflow_yaml = &quot;&quot;&quot;
scenario_name: &quot;Document Processing with Agent Communication&quot;
domain: &quot;document_processing&quot;
description: &quot;Process documents by delegating specialized tasks to expert agents&quot;

steps:
  # Create the tools from the library
  - type: &quot;CREATE&quot;
    item_type: &quot;TOOL&quot;
    name: &quot;DocumentAnalyzer&quot;

  - type: &quot;CREATE&quot;
    item_type: &quot;TOOL&quot;
    name: &quot;AgentCommunicator&quot;

  # Create the agents from the library
  - type: &quot;CREATE&quot;
    item_type: &quot;AGENT&quot;
    name: &quot;SpecialistAgent&quot;
    config:
      memory_type: &quot;token&quot;

  # Create the coordinator agent with the tools
  - type: &quot;CREATE&quot;
    item_type: &quot;AGENT&quot;
    name: &quot;CoordinatorAgent&quot;
    config:
      memory_type: &quot;token&quot;

  # Execute with an invoice document
  - type: &quot;EXECUTE&quot;
    item_type: &quot;AGENT&quot;
    name: &quot;CoordinatorAgent&quot;
    user_input: &quot;Process this document: {invoice}&quot;
&quot;&quot;&quot;"><pre><span><span>#</span> A workflow where agents communicate with each other</span>
<span>workflow_yaml = """</span>
<span>scenario_name</span>: <span><span>"</span>Document Processing with Agent Communication<span>"</span></span>
<span>domain</span>: <span><span>"</span>document_processing<span>"</span></span>
<span>description</span>: <span><span>"</span>Process documents by delegating specialized tasks to expert agents<span>"</span></span>

<span>steps</span>:
  <span><span>#</span> Create the tools from the library</span>
  - <span>type</span>: <span><span>"</span>CREATE<span>"</span></span>
    <span>item_type</span>: <span><span>"</span>TOOL<span>"</span></span>
    <span>name</span>: <span><span>"</span>DocumentAnalyzer<span>"</span></span>

  - <span>type</span>: <span><span>"</span>CREATE<span>"</span></span>
    <span>item_type</span>: <span><span>"</span>TOOL<span>"</span></span>
    <span>name</span>: <span><span>"</span>AgentCommunicator<span>"</span></span>

  <span><span>#</span> Create the agents from the library</span>
  - <span>type</span>: <span><span>"</span>CREATE<span>"</span></span>
    <span>item_type</span>: <span><span>"</span>AGENT<span>"</span></span>
    <span>name</span>: <span><span>"</span>SpecialistAgent<span>"</span></span>
    <span>config</span>:
      <span>memory_type</span>: <span><span>"</span>token<span>"</span></span>

  <span><span>#</span> Create the coordinator agent with the tools</span>
  - <span>type</span>: <span><span>"</span>CREATE<span>"</span></span>
    <span>item_type</span>: <span><span>"</span>AGENT<span>"</span></span>
    <span>name</span>: <span><span>"</span>CoordinatorAgent<span>"</span></span>
    <span>config</span>:
      <span>memory_type</span>: <span><span>"</span>token<span>"</span></span>

  <span><span>#</span> Execute with an invoice document</span>
  - <span>type</span>: <span><span>"</span>EXECUTE<span>"</span></span>
    <span>item_type</span>: <span><span>"</span>AGENT<span>"</span></span>
    <span>name</span>: <span><span>"</span>CoordinatorAgent<span>"</span></span>
    <span>user_input</span>: <span><span>"</span>Process this document: {invoice}<span>"</span></span>
<span><span>"</span><span>"</span><span>"</span></span></pre></div>
<p dir="auto">In this workflow, the CoordinatorAgent delegates specialized tasks to the SpecialistAgent through the AgentCommunicator tool. The example shows a complete workflow execution for both an invoice and a medical record.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Step 4: Agent Evolution</h3><a id="user-content-step-4-agent-evolution" aria-label="Permalink: Step 4: Agent Evolution" href="#step-4-agent-evolution"></a></p>
<p dir="auto">The third part demonstrates how agents can be evolved to create enhanced versions:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Evolution workflow
evolution_workflow = &quot;&quot;&quot;
scenario_name: &quot;Enhanced Invoice Processing&quot;
domain: &quot;document_processing&quot;
description: &quot;Evolve the specialist agent to provide better invoice analysis&quot;

steps:
  # Define an evolved version of the specialist agent
  - type: &quot;DEFINE&quot;
    item_type: &quot;AGENT&quot;
    name: &quot;EnhancedInvoiceSpecialist&quot;
    from_existing_snippet: &quot;SpecialistAgent&quot;
    evolve_changes:
      docstring_update: &quot;Improved with enhanced invoice analysis capabilities including line item detection&quot;
    description: &quot;Enhanced specialist that provides more detailed invoice analysis with line item extraction&quot;

  # Create and execute the evolved agent
  - type: &quot;CREATE&quot;
    item_type: &quot;AGENT&quot;
    name: &quot;EnhancedInvoiceSpecialist&quot;
    config:
      memory_type: &quot;token&quot;

  # Test the evolved agent with an invoice
  - type: &quot;EXECUTE&quot;
    item_type: &quot;AGENT&quot;
    name: &quot;EnhancedInvoiceSpecialist&quot;
    user_input: &quot;{invoice}&quot;
&quot;&quot;&quot;"><pre><span><span>#</span> Evolution workflow</span>
<span>evolution_workflow = """</span>
<span>scenario_name</span>: <span><span>"</span>Enhanced Invoice Processing<span>"</span></span>
<span>domain</span>: <span><span>"</span>document_processing<span>"</span></span>
<span>description</span>: <span><span>"</span>Evolve the specialist agent to provide better invoice analysis<span>"</span></span>

<span>steps</span>:
  <span><span>#</span> Define an evolved version of the specialist agent</span>
  - <span>type</span>: <span><span>"</span>DEFINE<span>"</span></span>
    <span>item_type</span>: <span><span>"</span>AGENT<span>"</span></span>
    <span>name</span>: <span><span>"</span>EnhancedInvoiceSpecialist<span>"</span></span>
    <span>from_existing_snippet</span>: <span><span>"</span>SpecialistAgent<span>"</span></span>
    <span>evolve_changes</span>:
      <span>docstring_update</span>: <span><span>"</span>Improved with enhanced invoice analysis capabilities including line item detection<span>"</span></span>
    <span>description</span>: <span><span>"</span>Enhanced specialist that provides more detailed invoice analysis with line item extraction<span>"</span></span>

  <span><span>#</span> Create and execute the evolved agent</span>
  - <span>type</span>: <span><span>"</span>CREATE<span>"</span></span>
    <span>item_type</span>: <span><span>"</span>AGENT<span>"</span></span>
    <span>name</span>: <span><span>"</span>EnhancedInvoiceSpecialist<span>"</span></span>
    <span>config</span>:
      <span>memory_type</span>: <span><span>"</span>token<span>"</span></span>

  <span><span>#</span> Test the evolved agent with an invoice</span>
  - <span>type</span>: <span><span>"</span>EXECUTE<span>"</span></span>
    <span>item_type</span>: <span><span>"</span>AGENT<span>"</span></span>
    <span>name</span>: <span><span>"</span>EnhancedInvoiceSpecialist<span>"</span></span>
    <span>user_input</span>: <span><span>"</span>{invoice}<span>"</span></span>
<span><span>"</span><span>"</span><span>"</span></span></pre></div>
<p dir="auto">This evolution process takes an existing agent (SpecialistAgent) and creates an enhanced version (EnhancedInvoiceSpecialist) with improved capabilities specific to invoice analysis.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Step 5: Semantic Search with OpenAI Embeddings</h3><a id="user-content-step-5-semantic-search-with-openai-embeddings" aria-label="Permalink: Step 5: Semantic Search with OpenAI Embeddings" href="#step-5-semantic-search-with-openai-embeddings"></a></p>
<p dir="auto">The final part demonstrates how to find semantically similar components in the library:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Search for document processing agents
search_results = await library.semantic_search(
    query=&quot;agent that can process and understand documents&quot;,
    record_type=&quot;AGENT&quot;,
    threshold=0.3
)"><pre><span># Search for document processing agents</span>
<span>search_results</span> <span>=</span> <span>await</span> <span>library</span>.<span>semantic_search</span>(
    <span>query</span><span>=</span><span>"agent that can process and understand documents"</span>,
    <span>record_type</span><span>=</span><span>"AGENT"</span>,
    <span>threshold</span><span>=</span><span>0.3</span>
)</pre></div>
<p dir="auto">This shows how the framework uses OpenAI embeddings to find the most relevant agents for a given task, allowing you to discover and reuse existing components based on their semantic meaning rather than just exact keyword matches.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Agent Communication Protocol (ACP) Support</h2><a id="user-content-agent-communication-protocol-acp-support" aria-label="Permalink: Agent Communication Protocol (ACP) Support" href="#agent-communication-protocol-acp-support"></a></p>
<p dir="auto">The Evolving Agents Framework includes preliminary support for BeeAI's Agent Communication Protocol (ACP), a standardized approach for agent-to-agent communication.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">What is ACP?</h3><a id="user-content-what-is-acp" aria-label="Permalink: What is ACP?" href="#what-is-acp"></a></p>
<p dir="auto">The Agent Communication Protocol (ACP) is a protocol designed to standardize how agents communicate, enabling automation, agent-to-agent collaboration, UI integration, and developer tooling. Currently in pre-alpha, ACP extends the Model Context Protocol (MCP), leveraging the simplicity and versatility of JSON-RPC for efficient interactions between agents, platforms, and external services.</p>
<p dir="auto">For more information, see the <a href="https://docs.beeai.dev/acp/pre-alpha/introduction#relationship-with-mcp" rel="nofollow">official BeeAI ACP documentation</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">ACP Integration in Evolving Agents</h3><a id="user-content-acp-integration-in-evolving-agents" aria-label="Permalink: ACP Integration in Evolving Agents" href="#acp-integration-in-evolving-agents"></a></p>
<p dir="auto">Our framework provides a preliminary implementation of ACP that allows agents to communicate using standardized message formats:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Example: Using ACP for agent communication
from evolving_agents.acp.client import ACPClient
from evolving_agents.providers.acp_provider import ACPProvider

# Create an ACP client
acp_client = ACPClient(transport=&quot;memory&quot;)

# Register the ACP provider with your system
provider_registry = ProviderRegistry()
provider_registry.register_provider(ACPProvider(llm_service, acp_client))

# Process an ACP-enabled workflow
acp_workflow = &quot;&quot;&quot;
scenario_name: &quot;ACP Document Analysis&quot;
domain: &quot;document_processing&quot;
description: &quot;Process documents using ACP-enabled agents&quot;

steps:
  # Register agents with ACP
  - type: &quot;ACP_REGISTER&quot;
    name: &quot;AnalysisAgent&quot;

  - type: &quot;ACP_REGISTER&quot;
    name: &quot;SummaryAgent&quot;

  # Execute with ACP communication
  - type: &quot;ACP_COMMUNICATE&quot;
    sender: &quot;AnalysisAgent&quot;
    recipient: &quot;SummaryAgent&quot;
    message: &quot;Please analyze this document: {document_text}&quot;
&quot;&quot;&quot;

results = await workflow_processor.process_acp_workflow(acp_workflow)"><pre><span># Example: Using ACP for agent communication</span>
<span>from</span> <span>evolving_agents</span>.<span>acp</span>.<span>client</span> <span>import</span> <span>ACPClient</span>
<span>from</span> <span>evolving_agents</span>.<span>providers</span>.<span>acp_provider</span> <span>import</span> <span>ACPProvider</span>

<span># Create an ACP client</span>
<span>acp_client</span> <span>=</span> <span>ACPClient</span>(<span>transport</span><span>=</span><span>"memory"</span>)

<span># Register the ACP provider with your system</span>
<span>provider_registry</span> <span>=</span> <span>ProviderRegistry</span>()
<span>provider_registry</span>.<span>register_provider</span>(<span>ACPProvider</span>(<span>llm_service</span>, <span>acp_client</span>))

<span># Process an ACP-enabled workflow</span>
<span>acp_workflow</span> <span>=</span> <span>"""</span>
<span>scenario_name: "ACP Document Analysis"</span>
<span>domain: "document_processing"</span>
<span>description: "Process documents using ACP-enabled agents"</span>
<span></span>
<span>steps:</span>
<span>  # Register agents with ACP</span>
<span>  - type: "ACP_REGISTER"</span>
<span>    name: "AnalysisAgent"</span>
<span></span>
<span>  - type: "ACP_REGISTER"</span>
<span>    name: "SummaryAgent"</span>
<span></span>
<span>  # Execute with ACP communication</span>
<span>  - type: "ACP_COMMUNICATE"</span>
<span>    sender: "AnalysisAgent"</span>
<span>    recipient: "SummaryAgent"</span>
<span>    message: "Please analyze this document: {document_text}"</span>
<span>"""</span>

<span>results</span> <span>=</span> <span>await</span> <span>workflow_processor</span>.<span>process_acp_workflow</span>(<span>acp_workflow</span>)</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">ACP Features Currently Supported</h3><a id="user-content-acp-features-currently-supported" aria-label="Permalink: ACP Features Currently Supported" href="#acp-features-currently-supported"></a></p>
<ul dir="auto">
<li><strong>Message Types</strong>: Support for text and structured JSON messages</li>
<li><strong>Transport Layers</strong>: In-memory transport (with stubs for HTTP/SSE, WebSocket, and Stdio)</li>
<li><strong>Agent Registration</strong>: Register and discover agents through the ACP registry</li>
<li><strong>Workflow Integration</strong>: Define ACP-specific workflow steps in YAML</li>
<li><strong>Message History</strong>: Track message exchanges for debugging and analysis</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Next Steps for ACP Integration</h3><a id="user-content-next-steps-for-acp-integration" aria-label="Permalink: Next Steps for ACP Integration" href="#next-steps-for-acp-integration"></a></p>
<ol dir="auto">
<li><strong>Standard Compliance</strong>: Align our implementation with evolving ACP standards as they mature</li>
<li><strong>Transport Implementation</strong>: Complete HTTP/SSE and WebSocket transport implementations</li>
<li><strong>UI Integration</strong>: Add support for ACP-powered user interfaces</li>
<li><strong>Advanced Message Types</strong>: Expand support for more sophisticated message schemas</li>
<li><strong>Official Integration</strong>: Prepare for seamless transition to official BeeAI ACP implementation</li>
</ol>
<p dir="auto">As BeeAI's ACP moves from pre-alpha to more stable versions, we'll update our implementation to match the official standards while maintaining backward compatibility with existing workflows.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Implementation Details</h2><a id="user-content-implementation-details" aria-label="Permalink: Implementation Details" href="#implementation-details"></a></p>
<p dir="auto">The example uses real BeeAI agents and tools, not just simulations. The key components are:</p>
<ol dir="auto">
<li>
<p dir="auto"><strong>BeeAI ReActAgent Implementation</strong>: Fully functional agents that use the Reasoning + Acting (ReAct) pattern to solve tasks.</p>
</li>
<li>
<p dir="auto"><strong>LLM-based Tools</strong>: Tools that leverage language models to analyze documents and facilitate agent communication.</p>
</li>
<li>
<p dir="auto"><strong>Semantic Library</strong>: A smart storage system that tracks agent versions, performance metrics, and supports semantic search.</p>
</li>
<li>
<p dir="auto"><strong>YAML Workflow Definition</strong>: A declarative way to describe complex agent interactions.</p>
</li>
<li>
<p dir="auto"><strong>Provider Architecture</strong>: A pluggable system that supports multiple agent frameworks (currently BeeAI).</p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Known Issues</h2><a id="user-content-known-issues" aria-label="Permalink: Known Issues" href="#known-issues"></a></p>
<ol dir="auto">
<li>
<p dir="auto"><strong>Markdown Code Blocks</strong>: The LLM sometimes includes markdown formatting in its responses (like ```python), which can cause syntax errors when trying to execute the code.</p>
</li>
<li>
<p dir="auto"><strong>String Literal Handling</strong>: Some generated code may have syntax issues with string literals, especially when escaping special characters.</p>
</li>
<li>
<p dir="auto"><strong>Parameter Consistency</strong>: When evolving agents, parameter types and names may not always be consistently maintained.</p>
</li>
<li>
<p dir="auto"><strong>Medical Record Processing</strong>: In the current example workflow, there might be issues with the medical record processing not correctly analyzing medical record inputs.</p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Roadmap for Future Improvements</h2><a id="user-content-roadmap-for-future-improvements" aria-label="Permalink: Roadmap for Future Improvements" href="#roadmap-for-future-improvements"></a></p>
<ol dir="auto">
<li>
<p dir="auto"><strong>Enhanced Code Parsing</strong>: Add a more sophisticated code parsing system to better handle markdown and other formatting in the generated code.</p>
</li>
<li>
<p dir="auto"><strong>Code Validation</strong>: Add a validation step when loading agents and tools to ensure their code is well-formed and executable.</p>
</li>
<li>
<p dir="auto"><strong>Test Mode for Agents</strong>: Implement a "test mode" for agents where they can be checked for basic functionality before being added to the library.</p>
</li>
<li>
<p dir="auto"><strong>Error Analysis System</strong>: Add a system to record and analyze specific errors that agents encounter to better guide their evolution.</p>
</li>
<li>
<p dir="auto"><strong>Improved Cross-Domain Collaboration</strong>: Enhance the ability of agents from different domains to collaborate effectively.</p>
</li>
<li>
<p dir="auto"><strong>Agent Memory Persistence</strong>: Implement more sophisticated memory models that allow agents to retain knowledge across sessions.</p>
</li>
<li>
<p dir="auto"><strong>Self-improvement Metrics</strong>: Add quantitative measurements of agent improvement over time and across evolutions.</p>
</li>
<li>
<p dir="auto"><strong>Visual Debugging Tools</strong>: Create tools to visualize agent execution paths and communications for easier debugging.</p>
</li>
<li>
<p dir="auto"><strong>Full ACP Implementation</strong>: Complete the integration with BeeAI's Agent Communication Protocol as it moves beyond pre-alpha.</p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Core Components</h2><a id="user-content-core-components" aria-label="Permalink: Core Components" href="#core-components"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Smart Library</h3><a id="user-content-smart-library" aria-label="Permalink: Smart Library" href="#smart-library"></a></p>
<p dir="auto">The central repository for agents, tools, and firmware:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Store a component in the library
await library.create_record(
    name=&quot;InvoiceAnalyzer&quot;,
    record_type=&quot;TOOL&quot;,
    domain=&quot;finance&quot;,
    description=&quot;Analyzes and extracts data from invoice documents&quot;,
    code_snippet=tool_code,
    tags=[&quot;invoice&quot;, &quot;finance&quot;, &quot;extraction&quot;]
)

# Semantic search to find components
results = await library.semantic_search(
    query=&quot;tool that extracts data from invoices&quot;,
    record_type=&quot;TOOL&quot;,
    domain=&quot;finance&quot;
)"><pre><span># Store a component in the library</span>
<span>await</span> <span>library</span>.<span>create_record</span>(
    <span>name</span><span>=</span><span>"InvoiceAnalyzer"</span>,
    <span>record_type</span><span>=</span><span>"TOOL"</span>,
    <span>domain</span><span>=</span><span>"finance"</span>,
    <span>description</span><span>=</span><span>"Analyzes and extracts data from invoice documents"</span>,
    <span>code_snippet</span><span>=</span><span>tool_code</span>,
    <span>tags</span><span>=</span>[<span>"invoice"</span>, <span>"finance"</span>, <span>"extraction"</span>]
)

<span># Semantic search to find components</span>
<span>results</span> <span>=</span> <span>await</span> <span>library</span>.<span>semantic_search</span>(
    <span>query</span><span>=</span><span>"tool that extracts data from invoices"</span>,
    <span>record_type</span><span>=</span><span>"TOOL"</span>,
    <span>domain</span><span>=</span><span>"finance"</span>
)</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">System Agent</h3><a id="user-content-system-agent" aria-label="Permalink: System Agent" href="#system-agent"></a></p>
<p dir="auto">The orchestrator that decides whether to reuse, evolve, or create components:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Process a request using the system agent
result = await system_agent.decide_and_act(
    request=&quot;I need a tool to analyze medical records&quot;,
    domain=&quot;healthcare&quot;,
    record_type=&quot;TOOL&quot;
)

# Execute the resulting tool or agent
if result[&quot;action&quot;] in [&quot;reuse&quot;, &quot;evolve&quot;, &quot;create&quot;]:
    execution = await system_agent.execute_item(
        result[&quot;record&quot;][&quot;name&quot;],
        &quot;Patient has high blood pressure and diabetes&quot;
    )"><pre><span># Process a request using the system agent</span>
<span>result</span> <span>=</span> <span>await</span> <span>system_agent</span>.<span>decide_and_act</span>(
    <span>request</span><span>=</span><span>"I need a tool to analyze medical records"</span>,
    <span>domain</span><span>=</span><span>"healthcare"</span>,
    <span>record_type</span><span>=</span><span>"TOOL"</span>
)

<span># Execute the resulting tool or agent</span>
<span>if</span> <span>result</span>[<span>"action"</span>] <span>in</span> [<span>"reuse"</span>, <span>"evolve"</span>, <span>"create"</span>]:
    <span>execution</span> <span>=</span> <span>await</span> <span>system_agent</span>.<span>execute_item</span>(
        <span>result</span>[<span>"record"</span>][<span>"name"</span>],
        <span>"Patient has high blood pressure and diabetes"</span>
    )</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Workflow Processor</h3><a id="user-content-workflow-processor" aria-label="Permalink: Workflow Processor" href="#workflow-processor"></a></p>
<p dir="auto">Process YAML-defined agent workflows:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Initialize workflow processor
processor = WorkflowProcessor(system_agent)

# Process a workflow 
results = await processor.process_workflow(workflow_yaml)"><pre><span># Initialize workflow processor</span>
<span>processor</span> <span>=</span> <span>WorkflowProcessor</span>(<span>system_agent</span>)

<span># Process a workflow </span>
<span>results</span> <span>=</span> <span>await</span> <span>processor</span>.<span>process_workflow</span>(<span>workflow_yaml</span>)</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Provider Architecture</h3><a id="user-content-provider-architecture" aria-label="Permalink: Provider Architecture" href="#provider-architecture"></a></p>
<p dir="auto">Support for multiple agent frameworks:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Register providers
provider_registry = ProviderRegistry()
provider_registry.register_provider(BeeAIProvider(llm_service))
provider_registry.register_provider(ACPProvider(llm_service))  # ACP support

# Initialize system agent with providers
system = SystemAgent(library, llm, provider_registry=provider_registry)"><pre><span># Register providers</span>
<span>provider_registry</span> <span>=</span> <span>ProviderRegistry</span>()
<span>provider_registry</span>.<span>register_provider</span>(<span>BeeAIProvider</span>(<span>llm_service</span>))
<span>provider_registry</span>.<span>register_provider</span>(<span>ACPProvider</span>(<span>llm_service</span>))  <span># ACP support</span>

<span># Initialize system agent with providers</span>
<span>system</span> <span>=</span> <span>SystemAgent</span>(<span>library</span>, <span>llm</span>, <span>provider_registry</span><span>=</span><span>provider_registry</span>)</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Use Cases</h2><a id="user-content-use-cases" aria-label="Permalink: Use Cases" href="#use-cases"></a></p>
<ul dir="auto">
<li><strong>Document Processing</strong>: Create specialized agents for different document types that collaborate to extract and analyze information</li>
<li><strong>Healthcare</strong>: Medical agents communicating with pharmacy and insurance agents to coordinate patient care</li>
<li><strong>Financial Analysis</strong>: Portfolio management agents collaborating with market analysis agents</li>
<li><strong>Customer Service</strong>: Routing agents delegating to specialized support agents</li>
<li><strong>Multi-step Reasoning</strong>: Break complex problems into components handled by specialized agents</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Advanced Features</h2><a id="user-content-advanced-features" aria-label="Permalink: Advanced Features" href="#advanced-features"></a></p>
<ul dir="auto">
<li><strong>Firmware Injection</strong>: Enforce governance rules and constraints across all agents</li>
<li><strong>Version Control</strong>: Track the evolution of agents over time</li>
<li><strong>Cross-domain Collaboration</strong>: Enable agents from different domains to work together</li>
<li><strong>Observability</strong>: Monitor agent communications and decision processes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Contributions are welcome! Please feel free to submit a Pull Request.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto"><a href="https://github.com/matiasmolinas/evolving-agents/blob/main/LICENSE">Apache v2.0</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Star History</h2><a id="user-content-star-history" aria-label="Permalink: Star History" href="#star-history"></a></p>
<p dir="auto"><a href="https://star-history.com/#matiasmolinas/evolving-agents&amp;Timeline" rel="nofollow"><img src="https://camo.githubusercontent.com/0092e7edbb684a7a0a16a721f7fcaef31e543ed28382689dbf3aa714654f1fe3/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d6d61746961736d6f6c696e61732f65766f6c76696e672d6167656e747326747970653d54696d656c696e65" alt="Star History Chart" data-canonical-src="https://api.star-history.com/svg?repos=matiasmolinas/evolving-agents&amp;type=Timeline"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgements</h2><a id="user-content-acknowledgements" aria-label="Permalink: Acknowledgements" href="#acknowledgements"></a></p>
<ul dir="auto">
<li><a href="https://github.com/matiasmolinas">Matias Molinas</a> and <a href="https://github.com/ismaelfaro">Ismael Faro</a> for the original concept and architecture</li>
<li>BeeAI framework for integrated agent capabilities
Add to Conversation</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[It is as if you were on your phone (668 pts)]]></title>
            <link>http://pippinbarr.com/it-is-as-if-you-were-on-your-phone/info/</link>
            <guid>43308994</guid>
            <pubDate>Sun, 09 Mar 2025 13:40:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://pippinbarr.com/it-is-as-if-you-were-on-your-phone/info/">http://pippinbarr.com/it-is-as-if-you-were-on-your-phone/info/</a>, See on <a href="https://news.ycombinator.com/item?id=43308994">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      

      

<p><img src="http://pippinbarr.com/it-is-as-if-you-were-on-your-phone/info/images/it-is-as-if-you-were-on-your-phone-banner.png" alt="Banner image of It is as if you were being on your phone showing a simple interaction"></p>

<h2 id="play-online-for-phones-only"><a href="http://pippinbarr.com/it-is-as-if-you-were-on-your-phone/">Play Online</a> (for phones only)</h2>

<h2 id="description">Description</h2>

<p><em>Look at you! On your phone! But you‚Äôve got a secret! And you won‚Äôt tell! You‚Äôre not on your phone! It is only as if you were on your phone! You‚Äôre just pretending to be on your phone! On your phone!</em></p>

<p><em>It is as if you were on your phone</em> is an <em>almost speculative</em> game about an <em>incredibly near future</em> in which we‚Äôre all simultaneously under significant pressure to be on our phones all the time, but also to not be on our phones all the time. Our fingers want to touch the screen, our eyes want to watch the surface, our brains want to be occupied efficiently and always. But it‚Äôs also exhausting liking photos, swiping profiles, watching short-form video, and everything else we‚Äôre always doing. <em>It is as if you were on your phone</em> presents an alternative: <em>pretend</em> to be on your phone so that you pass as human, but actually do essentially nothing instead. Follow the prompts and be free.</p>

<p><em>It is as if you were on your phone</em> was created using <a href="https://p5js.org/">p5</a> along with <a href="https://hammerjs.github.io/">Hammer.js</a> for touch gestures.</p>

<h2 id="press">Press</h2>

<ul>
  <li>Iwan Morris. <a href="https://www.pocketgamer.com/its-as-if-you-were-on-your-phone/out-now-from-pippin-barr/">It‚Äôs As If You Were On Your Phone is a bizarre new introspective desktop mobile release</a>. Pocket Gamer. 6 March 2025.</li>
  <li>Jason Kottke. <a href="https://also.kottke.org/25/03/0046409-a-game-called-it-is">A game called ‚ÄúIt is as if you were on your phone‚Äù is designed to make you look like you‚Äôre on your phone.</a>. Kottke.org. 7 March 2025.</li>
</ul>

<p>Read the <a href="http://pippinbarr.com/it-is-as-if-you-were-on-your-phone/press">Press Kit</a> for press information.</p>

<h2 id="documentation">Documentation</h2>

<ul>
  <li>Read the <a href="http://pippinbarr.com/it-is-as-if-you-were-on-your-phone/process">Process Documentation</a> for todos and design explorations</li>
  <li>Read the <a href="https://github.com/pippinbarr/it-is-as-if-you-were-on-your-phone/commits/main">Commit History</a> for detailed, moment-to-moment insights into the development process</li>
  <li>Look at the <a href="https://github.com/pippinbarr/it-is-as-if-you-were-on-your-phone">Code Repository</a> for source code etc.</li>
</ul>

<h2 id="license">License</h2>
<p><em>It is as if you were on your phone</em> is licensed under a <a href="http://creativecommons.org/licenses/by-nc/3.0/">Creative Commons Attribution-NonCommercial 3.0 Unported License</a>.</p>



      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[US Ends Support For Ukrainian F-16s (1076 pts)]]></title>
            <link>https://ukrainetoday.org/us-ends-support-for-ukrainian-f-16s-but-french-mirages-will-be-salvation-forbes/</link>
            <guid>43307996</guid>
            <pubDate>Sun, 09 Mar 2025 11:08:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ukrainetoday.org/us-ends-support-for-ukrainian-f-16s-but-french-mirages-will-be-salvation-forbes/">https://ukrainetoday.org/us-ends-support-for-ukrainian-f-16s-but-french-mirages-will-be-salvation-forbes/</a>, See on <a href="https://news.ycombinator.com/item?id=43307996">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="page">
		<main id="main" role="main">

		
			<article id="post-245986">
			<figure>
			<img width="930" height="450" src="https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=930%2C450&amp;ssl=1" sizes="min(930px, 100vw)" loading="eager" decoding="async" title="US Ends Support for Ukrainian F-16s, But French Mirages Will Be Salvation ‚Äì Forbes">		</figure>
	
	
		

	<div>
		
<p><a href="https://www.unian.net/editor/ekaterina-girnyk">Ekaterina Girnyk</a>10:26, 08.03.25</p>







<p>The Donald Trump administration has cut off vital support for F-16 jamming capabilities.</p>



<figure><img data-recalc-dims="1" decoding="async" width="723" height="542" data-attachment-id="245987" data-permalink="https://ukrainetoday.org/us-ends-support-for-ukrainian-f-16s-but-french-mirages-will-be-salvation-forbes/image-6719/" data-orig-file="https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?fit=1200%2C900&amp;ssl=1" data-orig-size="1200,900" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?fit=300%2C225&amp;ssl=1" data-large-file="https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?fit=723%2C542&amp;ssl=1" src="https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=723%2C542&amp;ssl=1" alt="" srcset="https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=1024%2C768&amp;ssl=1 1024w, https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=300%2C225&amp;ssl=1 300w, https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=768%2C576&amp;ssl=1 768w, https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=800%2C600&amp;ssl=1 800w, https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=600%2C450&amp;ssl=1 600w, https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=400%2C300&amp;ssl=1 400w, https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?resize=200%2C150&amp;ssl=1 200w, https://i0.wp.com/ukrainetoday.org/wp-content/uploads/2025/03/image-220.png?w=1200&amp;ssl=1 1200w" sizes="(max-width: 723px) 100vw, 723px"></figure>



<p>The United States, having decided to end its support for Ukraine, cannot simply turn off the Ukrainian Air Force‚Äôs U.S.-designed&nbsp;<a href="https://www.unian.net/world/f-16-dlya-ukrainy-aviaekspert-nazval-veroyatnuyu-prichinu-zaderzhki-postavki-belgiyskih-istrebiteley-12937956.html" target="_blank" rel="noreferrer noopener">F-16</a>&nbsp;fighters . But the Trump administration has cut off vital support for their jamming capabilities, which could deprive the Ukrainian Air Force of a critical air countermeasure.</p>



<p><a href="https://www.forbes.com/sites/davidaxe/2025/03/07/france-to-the-rescue-french-made-mirage-2000-jets-could-become-ukraines-most-important-aerial-radar-jammers/" rel="noreferrer noopener" target="_blank">However, as Forbes</a>&nbsp;analyst David Ax writes&nbsp;, the Ukrainians are not powerless and can shift the burden of air jamming onto the French Dassault Mirage 2000 fighters.</p>



<p>As Aks points out, the Ukrainian Air Force is taking full advantage of the ability of F-16s equipped with AN/ALQ-131 pods to flood Russian radar screens with electronic noise. They act as ‚Äúflying air defenses‚Äù with advanced missile warning technology, notes the Conflict Intelligence Team.</p>



<p>But the Russian Air Force can circumvent the jamming by reprogramming its radars to different frequencies. As Axe points out, while the Biden Air Force was able to keep up with the Russian adaptation by constantly tweaking the AN/ALQ-131 frequencies, under Trump, Ukrainian pilots are not receiving updates, and the programs could soon become obsolete.</p>



<p>However, France‚Äôs Mirage 2000s are equipped with their own powerful jammers, and the Americans are not involved in their programming, the analyst notes.</p>



<p>The Mirage 2000-5F currently in service with the French Air Force flies with a combination of the Serval radar warning receiver, Sabre jammer and Eclair flare dispenser. This system was cutting edge in the 1980s, but within a generation it was falling behind.</p>



<p>‚ÄúRecognizing this weakness and understanding the seriousness of the Russian missile threat over Ukraine, the French Ministry of Defense promised to install new electronic countermeasures on the Mirage 2000s before handing them over to Ukraine. The ministry probably had in mind the predominantly analog Integrated Countermeasures Suite Mark 2 or the all-digital Integrated Countermeasures Suite Mark 3,‚Äù Ax notes.</p>



<p>Either system is an improvement over the older system and a potential replacement for the AN/ALQ-131, as the American pods lag behind the Russian adaptation. The French are firm allies of Ukraine and are willing to reprogram the jammers if necessary.</p>



<p>In the longer term, the Ukrainians could refit their F-16s with non-American electronic countermeasures, Axe notes. But that could take time and money that Ukraine cannot afford.</p>



<p>(C)UNIAN 2025</p>
		
		
		
			</div><!-- .entry-content -->

	<!-- .entry-footer -->

</article><!-- #post-## -->

			
<!-- #comments -->

		
		</main><!-- #main -->
	</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gleam v1.9.0 Released (219 pts)]]></title>
            <link>https://gleam.run/news/hello-echo-hello-git/</link>
            <guid>43307987</guid>
            <pubDate>Sun, 09 Mar 2025 11:06:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gleam.run/news/hello-echo-hello-git/">https://gleam.run/news/hello-echo-hello-git/</a>, See on <a href="https://news.ycombinator.com/item?id=43307987">Hacker News</a></p>
<div id="readability-page-1" class="page"><div class="page">
  <p>
    Published 08 Mar, 2025 by Louis Pilfold
  </p>
<p>Gleam is a type-safe and scalable language for the Erlang virtual machine and
JavaScript runtimes. Today Gleam <a href="https://github.com/gleam-lang/gleam/releases/tag/v1.9.0">v1.9.0</a> has been published. Let‚Äôs
take a look!</p>

<h2 id="echo-debug-printing">Echo debug printing</h2>

<p>There are debuggers you can use with Gleam, however the most popular ways
to understand the runtime behaviour of a Gleam program is through writing tests
and through print debugging.</p>

<p>The standard library function <code>io.debug</code> is most commonly used for print
debugging. It takes a value of any type, uses target specific runtime
reflection to turn it into a string of Gleam syntax, and then prints it to
standard-error. This works well, but there are some ways in which this function
is not optimal:</p>

<ul>
  <li>Functions don‚Äôt know anything about where they are called from, so it‚Äôs not
possible to print the location of the <code>io.debug</code> call along with the value
being printed.</li>
  <li>There‚Äôs no way for the compiler or build tool to know this is a special
function which is only for debugging, so they are unable to prevent you from
accidentally publishing packages that still have debug code in them.</li>
  <li>Runtime reflection is used to make a string representation of the value, so
any information that no longer exists after compile time cannot be used. This
results in <code>io.debug</code> relying on heuristics to decide how to show the value,
and this can be at-times incorrect.</li>
</ul>

<p>To improve on this the <code>echo</code> keyword has been introduced. Prefix an expression
with it and the value will be printed to standard-error, along with the path to
the file and line containing the echo expression, so you can click to jump to it
in your editor.</p>

<pre><code>pub fn main() {
  echo [1, 2, 3]
}
</code></pre>

<p>It can also be used in pipelines. Here the list returned by the first <code>list.map</code>
call will be printed.</p>

<pre><code>pub fn main() {
  [1, 2, 3]
  |&gt; list.map(fn(x) { x + 1 })
  |&gt; echo
  |&gt; list.map(fn(x) { x * 2 })
}
</code></pre>

<p>The build tool is aware this is for debugging, so it‚Äôll let you know if you
forget to remove it before publishing a package for others to use.</p>

<p>Currently it uses the same runtime reflection and heuristics to format the
output, but in future it‚Äôll be enhanced to make use of the compiler‚Äôs static
analysis.</p>

<p>Thank you <a href="https://github.com/giacomocavalieri">Giacomo Cavalieri</a>! We had all
manner of annoying CI-related problems when implementing the integration tests
for this feature, Jak‚Äôs a very patient and determined programmer indeed!</p>

<h2 id="git-dependencies">Git dependencies</h2>

<p>There are times when we wish to try out early prototype versions of libraries we
have made in our applications. It may be tempting to publish these unfinished
packages to the package manager, but this would be inappropriate! Only
production-ready packages should be published for other people to use, the Gleam
package ecosystem is to be high quality and easy to depend upon safely.</p>

<p>As a more suitable alternative the build tool now supports depending on packages
within git repositories. Add the git or HTTP URL of a repository along with a
tag, branch, or commit SHA, and the build tool will download it for you and then
treat it like a regular Gleam dependency package.</p>

<pre><code>[dependencies]
gleam_stdlib = { git = "https://github.com/gleam-lang/stdlib.git", ref = "957b83b" }
</code></pre>

<p>Thank you <a href="https://github.com/GearsDatapacks">Surya Rose</a> for this much
anticipated feature.</p>

<h2 id="more-powerful-bit-arrays-on-javascript">More powerful bit arrays on JavaScript</h2>

<p>Gleam‚Äôs bit array syntax allows you to construct and parse binary data in a way
that may be easier to understand than using binary operators. Historically bit
arrays had to be byte aligned, meaning they had to have a number of bits that
was divisible by 8. <a href="https://github.com/richard-viney">Richard Viney</a> has done
some incredible work and lifted this limitation. Thank you Richard!</p>

<p><a href="https://github.com/GearsDatapacks">Surya Rose</a> has also been lifting
JavaScript bit array restrictions, enabling the usage of dynamically sized
segments in bit array patterns. Thank you Surya!</p>

<h2 id="faster-list-pattern-matching-on-javascript">Faster list pattern matching on JavaScript</h2>

<p>The list type is one of Gleam‚Äôs primary data structures, it is used very heavily
in Gleam programs. <a href="https://github.com/yoshi-monster">yoshi~</a> has been working
hard to identify potential performance optimisations for the virtual-DOM
implementation of the <a href="https://github.com/lustre-labs/lustre">Lustre</a> framework,
and in the process they identified a way to improve the JavaScript code we
generate when pattern matching on lists.</p>

<p>Programs that compile to JavaScript and make heavy use of list prefix patterns
may now be up to twice as fast!</p>

<h2 id="go-to-type-definition">Go-to type definition</h2>

<p>Gleam‚Äôs built-in language server brings IDE-like functionality to all editors
that support the language server protocol. It has had support for go-to
definition for some time, but with this release <a href="https://github.com/giacomocavalieri">Giacomo Cavalieri</a>
has added support for go-to type definition. Place your cursor on an expression
and trigger the feature and the language server will identify the types of all
the values used in the expression and present their definitions for you to view
and to jump to. Thank you Jak!</p>

<h2 id="hexdocs-search-integration">HexDocs search integration</h2>

<p>When a Gleam package is published HTML documentation is generated and published
to HexDocs for users to read. HexDocs have been improving their search
functionality to search for types and functions with in packages themselves, and 
<a href="https://github.com/diemogebhardt">Diemo Gebhardt</a> has updated Gleam‚Äôs
documentation generator to implement the search index interface so Gleam
packages are included in the search. Thank you Diemo!</p>

<p>Another option for searching within Gleam packages is <a href="https://gloogle.run/search?q=fn(Int,%20Int)%20-%3E%20Order">Gloogle</a>,
a Gleam community project, which can even search by function type signature.</p>

<h2 id="custom-ca-certificates-support">Custom CA certificates support</h2>

<p>Some enterprise networks may perform TLS interception for security reasons. In
these environments custom CA certificates must be used as otherwise requests
will get TLS errors due to the unknown authority of the injected certificates.</p>

<p>The new <code>GLEAM_CACERTS_PATH</code> environment variable can be used to specify a
path to CA certificates for Gleam to use when interacting with the Hex package
manager servers, making Gleam usable in these enterprise environments.
Thank you <a href="https://github.com/winstxnhdw">winstxnhdw</a>!</p>

<h2 id="convert-to-and-from-pipeline-code-actions">Convert to and from pipeline code actions</h2>

<p>Gleam‚Äôs much-loved pipe syntax gives programmers another way to write nested
function calls so that they read top-to-botton and left-to-right.</p>

<p>Two new language server code actions have been added to help you refactor
between the pipe syntax and regular function call syntax. Triggering them on
these two code examples will edit your code to match the other.</p>

<pre><code>import gleam/list

pub fn main() {
  list.map([1, 2, 3], double)
}
</code></pre>
<pre><code>import gleam/list

pub fn main() {
  [1, 2, 3] |&gt; list.map(double)
}
</code></pre>

<p>You can also choose to pipe arguments other than the first by selecting them in
your editor before triggering the code action. Thank you <a href="https://github.com/giacomocavalieri">Giacomo Cavalieri</a>!</p>

<h2 id="generate-json-encoder-code-action">Generate JSON encoder code action</h2>

<p>Many Gleam programs make use of JSON, a common text-based data exchange format.
With this release the Gleam language server now offers a code action to generate
a function to convert a type into JSON using the <code>gleam_json</code> library. Given
this type definition:</p>

<pre><code>pub type Person {
  Person(name: String, age: Int)
}
</code></pre>

<p>If the code action is triggered on the type definition this function will be
generated:</p>

<pre><code>import gleam/json

fn encode_person(person: Person) -&gt; json.Json {
  json.object([
    #("name", json.string(person.name)),
    #("age", json.int(person.age)),
  ])
}
</code></pre>

<p>Thank you <a href="https://github.com/GearsDatapacks">Surya Rose</a> for this code action!</p>

<h2 id="inline-variable-code-action">Inline variable code action</h2>

<p>The Gleam language server now offers a code action that will inline a variable
that is used only once.</p>

<pre><code>import gleam/io

pub fn main() {
  let greeting = "Hello!"
  io.println(greeting)
}
</code></pre>

<p>If the code action is triggered on the <code>greeting</code> variable the code will be
edited like so:</p>

<pre><code>import gleam/io

pub fn main() {
  io.println("Hello!")
}
</code></pre>

<p>Thank you <a href="https://github.com/GearsDatapacks">Surya Rose</a>!</p>

<h2 id="generate-multi-variant-decoder-code-action">Generate multi-variant decoder code action</h2>

<p>Gleam‚Äôs <code>Dynamic</code> type represents data of unknown shape that comes from outside
of the Gleam program, for example data sent to a HTTP server as JSON. To convert
data from dynamic into known Gleam types the decoder API is used.</p>

<p>A previous release added convenient a code action which would generate a dynamic
decoder for a given type definition. With this release this code action has been
extended to support multi-variant custom types. For example, given this type
definition:</p>

<pre><code>pub type Person {
  Adult(age: Int, job: String)
  Child(age: Int, height: Float)
}
</code></pre>

<p>If the code action is triggered on it then this function will be generated:</p>

<pre><code>import gleam/dynamic/decode

fn person_decoder() -&gt; decode.Decoder(Person) {
  use variant &lt;- decode.field("type", decode.string)
  case variant {
    "adult" -&gt; {
      use age &lt;- decode.field("age", decode.int)
      use job &lt;- decode.field("job", decode.string)
      decode.success(Adult(age:, job:))
    }
    "child" -&gt; {
      use age &lt;- decode.field("age", decode.int)
      use height &lt;- decode.field("height", decode.float)
      decode.success(Child(age:, height:))
    }
    _ -&gt; decode.failure(todo as "Zero value for Person", "Person")
  }
}
</code></pre>

<p>Thank you <a href="https://github.com/GearsDatapacks">Surya Rose</a>!</p>

<h2 id="string-interpolate-code-action">String interpolate code action</h2>

<p>The language server now offers a convenient code action to interpolate a value
into a string easily. If the cursor is inside a literal string the language
server will offer to split it:</p>

<pre><code>"wibble | wobble"
//      ^ Triggering the action with the cursor
//        here will produce this:
"wibble " &lt;&gt; todo &lt;&gt; " wobble"
</code></pre>

<p>And if the cursor is selecting a valid Gleam name, the language server will
offer to interpolate it as a variable:</p>

<pre><code>"wibble wobble woo"
//      ^^^^^^ Triggering the code action if you're
//             selecting an entire name, will produce this:
"wibble " &lt;&gt; wobble &lt;&gt; " woo"
</code></pre>

<p>Thank you <a href="https://github.com/giacomocavalieri">Giacomo Cavalieri</a> for this!</p>

<h2 id="module-qualifier-hovering">Module qualifier hovering</h2>

<p>The language server can now show documentation for a module when hovering the
module qualifier of an imported type or value. Thank you <a href="https://github.com/GearsDatapacks">Surya Rose</a>!</p>

<h2 id="redundant-function-capture-removal">Redundant function capture removal</h2>

<p>Gleam‚Äôs function capture syntax is a shorthand for creating an anonymous
function that takes one argument and calls another function with that argument
and some other values. These two expressions are equivalent:</p>

<pre><code>let double = fn(number) { int.double(number, 2) }
let double = int.double(_, 2)
</code></pre>

<p>If the function capture syntax is used without any additional arguments, then it
is redundant and does nothing that referring the function directly wouldn‚Äôt do.</p>

<pre><code>let print = io.print(_)
</code></pre>

<p>The Gleam code formatter will now remove the redundant function capture syntax
for you, formatting it like so:</p>

<pre><code>let print = io.print
</code></pre>

<p>Thank you <a href="https://github.com/giacomocavalieri">Giacomo Cavalieri</a>!</p>

<h2 id="and-the-rest">And the rest</h2>

<p>And thank you to the bug fixers:
<a href="https://github.com/giacomocavalieri">Giacomo Cavalieri</a>,
<a href="https://github.com/lostkobrakai">LostKobrakai</a>,
<a href="https://github.com/lpil">Louis Pilfold</a>,
<a href="https://git.ahlcode.fi/nicd">Mikko Ahlroth</a>
<a href="https://github.com/mine-tech-oficial">Pedro Francisco</a>,
<a href="https://github.com/PgBiel">PgBiel</a>,
<a href="https://github.com/richard-viney">Richard Viney</a>, and
<a href="https://github.com/GearsDatapacks">Surya Rose</a>!</p>

<p>For full details of the many fixes and improvements they‚Äôve implemented see <a href="https://github.com/gleam-lang/gleam/blob/main/changelog/v1.9.md">the
changelog</a>.</p>

<h2 id="a-call-for-support">A call for support</h2>

<p>Gleam is not owned by a corporation; instead it is entirely supported by
sponsors, most of which contribute between $5 and $20 USD per month, and Gleam
is my sole source of income.</p>

<p>We have made great progress towards our goal of being able to appropriately pay
the core team members, but we still have further to go. Please consider
supporting <a href="https://github.com/sponsors/lpil">the project</a> or core team members 
<a href="https://github.com/sponsors/giacomocavalieri">Giacomo Cavalieri</a> and
<a href="https://github.com/sponsors/GearsDatapacks">Surya Rose</a> 
on GitHub Sponsors.</p>

<p><a href="https://github.com/sponsors/lpil" rel="noopener" target="_blank">
  <img src="https://gleam.run/images/community/github.svg" alt="GitHub Sponsors">
</a></p>

<p>Thank you to all our sponsors! And especially our top sponsor: Lambda.</p>



<ul>
  <li><a href="https://github.com/agundy">Aaron Gunderson</a></li>
  <li><a href="https://github.com/zeroows">Abdulrhman Alkhodiry</a></li>
  <li><a href="https://github.com/abeljim">Abel Jimenez</a></li>
  <li><a href="https://github.com/ad-ops">ad-ops</a></li>
  <li><a href="https://github.com/AdamBrodzinski">Adam Brodzinski</a></li>
  <li><a href="https://github.com/adjohnston">Adam Johnston</a></li>
  <li><a href="https://github.com/adam-wyluda">Adam Wy≈Çuda</a></li>
  <li><a href="https://github.com/thebugcatcher">Adi Iyengar</a></li>
  <li><a href="https://github.com/amouat">Adrian Mouat</a></li>
  <li><a href="https://github.com/JitPackJoyride">Ajit Krishna</a></li>
  <li><a href="https://github.com/Guria">Aleksei Gurianov</a></li>
  <li><a href="https://alembic.com.au/">Alembic</a></li>
  <li><a href="https://github.com/eelmafia">Alex</a></li>
  <li><a href="https://github.com/ahouseago">Alex Houseago</a></li>
  <li><a href="https://github.com/rawhat">Alex Manning</a></li>
  <li><a href="https://github.com/aexvir">Alex Viscreanu</a></li>
  <li><a href="https://github.com/akoutmos">Alexander Koutmos</a></li>
  <li><a href="https://github.com/muonoum">Alexander Stensrud</a></li>
  <li><a href="https://github.com/defgenx">Alexandre Del Vecchio</a></li>
  <li><a href="https://github.com/Acepie">Ameen Radwan</a></li>
  <li><a href="https://github.com/abueide">Andrea Bueide</a></li>
  <li><a href="https://github.com/AndreHogberg">AndreHogberg</a></li>
  <li><a href="https://github.com/andrewmuratov">Andrew Muratov</a></li>
  <li><a href="https://github.com/antharuu">Antharuu</a></li>
  <li><a href="https://github.com/anthony-khong">Anthony Khong</a></li>
  <li><a href="https://github.com/Illbjorn">Anthony Maxwell</a></li>
  <li><a href="https://github.com/amscotti">Anthony Scotti</a></li>
  <li><a href="https://github.com/aweagel">Arthur Weagel</a></li>
  <li><a href="https://github.com/aryairani">Arya Irani</a></li>
  <li><a href="https://github.com/azureflash">Azure Flash</a></li>
  <li><a href="https://github.com/chiroptical">Barry Moore</a></li>
  <li><a href="https://github.com/bartekgorny">Bartek G√≥rny</a></li>
  <li><a href="https://github.com/requestben">Ben Martin</a></li>
  <li><a href="https://github.com/bgmarx">Ben Marx</a></li>
  <li><a href="https://github.com/benmyles">Ben Myles</a></li>
  <li><a href="https://github.com/bbkane">Benjamin Kane</a></li>
  <li><a href="https://github.com/bcpeinhardt">Benjamin Peinhardt</a></li>
  <li><a href="https://github.com/bgwdotdev">bgw</a></li>
  <li><a href="https://github.com/bjartelund">Bjarte Aarmo Lund</a></li>
  <li><a href="https://github.com/00bpa">Bjoern Paschen</a></li>
  <li><a href="https://github.com/bmehder">Brad Mehder</a></li>
  <li><a href="https://github.com/brendisurfs">Brendan P. </a></li>
  <li><a href="https://github.com/brettkolodny">brettkolodny</a></li>
  <li><a href="https://github.com/brian-dawn">Brian Dawn</a></li>
  <li><a href="https://github.com/bglusman">Brian Glusman</a></li>
  <li><a href="https://github.com/bruce">Bruce Williams</a></li>
  <li><a href="https://github.com/nono">Bruno Michel</a></li>
  <li><a href="https://github.com/bucsi">bucsi</a></li>
  <li><a href="https://github.com/camray">Cam Ray</a></li>
  <li><a href="https://github.com/cameronpresley">Cameron Presley</a></li>
  <li><a href="https://github.com/carlomunguia">Carlo Munguia</a></li>
  <li><a href="https://github.com/csaltos">Carlos Saltos</a></li>
  <li><a href="https://github.com/chadselph">Chad Selph</a></li>
  <li><a href="https://github.com/ctdio">Charlie Duong</a></li>
  <li><a href="https://github.com/charlie-n01r">Charlie Govea</a></li>
  <li><a href="https://github.com/choonkeat">Chew Choon Keat</a></li>
  <li><a href="https://github.com/ceedon">Chris Donnelly</a></li>
  <li><a href="https://github.com/Morzaram">Chris King</a></li>
  <li><a href="https://github.com/chrislloyd">Chris Lloyd</a></li>
  <li><a href="https://github.com/utilForever">Chris Ohk</a></li>
  <li><a href="https://github.com/Chriscbr">Chris Rybicki</a></li>
  <li><a href="https://github.com/christophershirk">Christopher David Shirk</a></li>
  <li><a href="https://github.com/devries">Christopher De Vries</a></li>
  <li><a href="https://github.com/cdaringe">Christopher Dieringer</a></li>
  <li><a href="https://github.com/christopherhjung">Christopher Jung</a></li>
  <li><a href="https://github.com/christhekeele">Christopher Keele</a></li>
  <li><a href="https://github.com/specialblend">CJ Salem</a></li>
  <li><a href="https://github.com/clangley">clangley</a></li>
  <li><a href="https://github.com/CliffordAnderson">Clifford Anderson</a></li>
  <li><a href="https://github.com/coder">Coder</a></li>
  <li><a href="https://github.com/colelawrence">Cole Lawrence</a></li>
  <li><a href="https://github.com/insanitybit">Colin</a></li>
  <li><a href="https://github.com/Comamoca">Comamoca</a></li>
  <li><a href="https://github.com/Lucostus">Constantin (Cleo) Winkler</a></li>
  <li><a href="https://github.com/jcorentin">Corentin J.</a></li>
  <li><a href="https://github.com/sdaigo">Daigo Shitara</a></li>
  <li><a href="https://github.com/dvic">Damir Vandic</a></li>
  <li><a href="https://github.com/ddresselhaus">Dan Dresselhaus</a></li>
  <li><a href="https://github.com/strongoose">Dan Strong</a></li>
  <li><a href="https://github.com/DanielleMaywood">Danielle Maywood</a></li>
  <li><a href="https://github.com/pinnet">Danny Arnold</a></li>
  <li><a href="https://github.com/despairblue">Danny Martini</a></li>
  <li><a href="https://github.com/davydog187">Dave Lucia</a></li>
  <li><a href="https://github.com/dbernheisel">David Bernheisel</a></li>
  <li><a href="https://github.com/davidcornu">David Cornu</a></li>
  <li><a href="https://github.com/davesnx">David Sancho</a></li>
  <li><a href="https://github.com/dangdennis">Dennis Dang</a></li>
  <li><a href="https://github.com/dennistruemper">dennistruemper</a></li>
  <li><a href="https://github.com/diemogebhardt">Diemo Gebhardt</a></li>
  <li><a href="https://github.com/dmmulroy">Dillon Mulroy</a></li>
  <li><a href="https://github.com/gothy">Dima Utkin</a></li>
  <li><a href="https://github.com/poroh">Dmitry Poroh</a></li>
  <li><a href="https://github.com/DoctorCobweb">DoctorCobweb</a></li>
  <li><a href="https://github.com/floodfx">Donnie Flood</a></li>
  <li><a href="https://github.com/ds2600">ds2600</a></li>
  <li><a href="https://github.com/gdcrisp">Dylan Carlson</a></li>
  <li><a href="https://github.com/eberfreitas">√âber Freitas Dias</a></li>
  <li><a href="https://github.com/edhinrichsen">Ed Hinrichsen</a></li>
  <li><a href="https://github.com/edongashi">Edon Gashi</a></li>
  <li><a href="https://github.com/eeeli24">eeeli24</a></li>
  <li><a href="https://github.com/enoonan">Eileen Noonan</a></li>
  <li><a href="https://github.com/dropwhile">eli</a></li>
  <li><a href="https://github.com/Emma-Fuller">Emma</a></li>
  <li><a href="https://github.com/EMRTS">EMR Technical Solutions</a></li>
  <li><a href="https://github.com/yellowsman">Endo Shogo</a></li>
  <li><a href="https://github.com/ekosz">Eric Koslow</a></li>
  <li><a href="https://github.com/eterps">Erik Terpstra</a></li>
  <li><a href="https://liberapay.com/erikareads/">erikareads</a></li>
  <li><a href="https://github.com/ErikML">ErikML</a></li>
  <li><a href="https://github.com/erlend-axelsson">erlend-axelsson</a></li>
  <li><a href="https://github.com/oberernst">Ernesto Malave</a></li>
  <li><a href="https://github.com/EthanOlpin">Ethan Olpin</a></li>
  <li><a href="https://github.com/evaldobratti">Evaldo Bratti</a></li>
  <li><a href="https://github.com/evanj2357">Evan Johnson</a></li>
  <li><a href="https://github.com/evanasse">evanasse</a></li>
  <li><a href="https://github.com/fabridamicelli">Fabrizio Damicelli</a></li>
  <li><a href="https://github.com/fmesteban">Fede Esteban</a></li>
  <li><a href="https://github.com/yerTools">Felix Mayer</a></li>
  <li><a href="https://github.com/nandofarias">Fernando Farias</a></li>
  <li><a href="https://github.com/ffigiel">Filip Figiel</a></li>
  <li><a href="https://github.com/floriank">Florian Kraft</a></li>
  <li><a href="https://github.com/francishamel">Francis Hamel</a></li>
  <li><a href="https://github.com/Frank-III">frankwang</a></li>
  <li><a href="https://github.com/gvrooyen">G-J van Rooyen</a></li>
  <li><a href="https://github.com/gabrielvincent">Gabriel Vincent</a></li>
  <li><a href="https://github.com/gahjelle">Geir Arne Hjelle</a></li>
  <li><a href="https://github.com/brasilikum">Georg Hartmann</a></li>
  <li><a href="https://github.com/george-grec">George</a></li>
  <li><a href="https://github.com/gmartsenkov">Georgi Martsenkov</a></li>
  <li><a href="https://github.com/ggobbe">ggobbe</a></li>
  <li><a href="https://github.com/giacomocavalieri">Giacomo Cavalieri</a></li>
  <li><a href="https://github.com/giovannibonetti">Giovanni Kock Bonetti</a></li>
  <li><a href="https://github.com/GV14982">Graham Vasquez</a></li>
  <li><a href="https://github.com/grottohub">grotto</a></li>
  <li><a href="https://github.com/nirev">Guilherme de Maio</a></li>
  <li><a href="https://github.com/guillheu">Guillaume Heu</a></li>
  <li><a href="https://github.com/ghivert">Guillaume Hivert</a></li>
  <li><a href="https://github.com/hammad-r-javed">Hammad Javed</a></li>
  <li><a href="https://github.com/kwando">Hannes Nevalainen</a></li>
  <li><a href="https://github.com/ildorn">Hannes Schnaitter</a></li>
  <li><a href="https://github.com/oderwat">Hans Raaf</a></li>
  <li><a href="https://github.com/hayleigh-dot-dev">Hayleigh Thompson</a></li>
  <li><a href="https://github.com/hibachrach">Hazel Bachrach</a></li>
  <li><a href="https://github.com/hdahlheim">Henning Dahlheim</a></li>
  <li><a href="https://github.com/tudborg">Henrik Tudborg</a></li>
  <li><a href="https://github.com/henrysdev">Henry Warren</a></li>
  <li><a href="https://github.com/losfair">Heyang Zhou</a></li>
  <li><a href="https://github.com/hubertmalkowski">Hubert Ma≈Çkowski</a></li>
  <li><a href="https://github.com/human154">human154</a></li>
  <li><a href="https://github.com/hpiaia">Humberto Piaia</a></li>
  <li><a href="https://github.com/iainh">Iain H</a></li>
  <li><a href="https://github.com/Ian-GL">Ian Gonz√°lez</a></li>
  <li><a href="https://github.com/ianmjones">Ian M. Jones</a></li>
  <li><a href="https://github.com/igordsm">Igor Montagner</a></li>
  <li><a href="https://github.com/irumiha">Igor Rumiha</a></li>
  <li><a href="https://github.com/nilliax">ILLIA NEGOVORA</a></li>
  <li><a href="https://github.com/intarga">Ingrid</a></li>
  <li><a href="https://github.com/inoas">inoas</a></li>
  <li><a href="https://github.com/graphiteisaac">Isaac</a></li>
  <li><a href="https://github.com/isaacharrisholt">Isaac Harris-Holt</a></li>
  <li><a href="https://github.com/imcquee">Isaac McQueen</a></li>
  <li><a href="https://github.com/ismaelga">Ismael Abreu</a></li>
  <li><a href="https://github.com/bozso">Istv√°n Bozs√≥</a></li>
  <li><a href="https://github.com/ivarvong">Ivar Vong</a></li>
  <li><a href="https://github.com/jacobdalamb">Jacob Lamb</a></li>
  <li><a href="https://github.com/jakecleary">Jake Cleary</a></li>
  <li><a href="https://github.com/jzwood">Jake Wood</a></li>
  <li><a href="https://github.com/jakob753951">Jakob Ladegaard M√∏ller</a></li>
  <li><a href="https://github.com/jamesbirtles">James Birtles</a></li>
  <li><a href="https://github.com/jamesmacaulay">James MacAulay</a></li>
  <li><a href="https://github.com/janpieper">Jan Pieper</a></li>
  <li><a href="https://github.com/monzool">Jan Skriver S√∏rensen</a></li>
  <li><a href="https://github.com/MightyGoldenOctopus">Jean-Adrien Ducastaing</a></li>
  <li><a href="https://github.com/jlgeering">Jean-Luc Geering</a></li>
  <li><a href="https://github.com/okkdev">Jen Stehlik</a></li>
  <li><a href="https://github.com/jiangplus">jiangplus</a></li>
  <li><a href="https://github.com/hunkyjimpjorps">Jimpjorps‚Ñ¢</a></li>
  <li><a href="https://github.com/joeykilpatrick">Joey Kilpatrick</a></li>
  <li><a href="https://github.com/joeytrapp">Joey Trapp</a></li>
  <li><a href="https://github.com/johan-st">Johan Strand</a></li>
  <li><a href="https://github.com/JohnBjrk">John Bj√∂rk</a></li>
  <li><a href="https://github.com/johngallagher">John Gallagher</a></li>
  <li><a href="https://github.com/jmpavlick">John Pavlick</a></li>
  <li><a href="https://github.com/jrstrunk">John Strunk</a></li>
  <li><a href="https://github.com/xjojorx">Jojor</a></li>
  <li><a href="https://github.com/jonlambert">Jon Lambert</a></li>
  <li><a href="https://github.com/igern">Jonas E. P</a></li>
  <li><a href="https://github.com/JonasHedEng">Jonas Hedman Engstr√∂m</a></li>
  <li><a href="https://github.com/jooaf">jooaf</a></li>
  <li><a href="https://github.com/joseph-lozano">Joseph Lozano</a></li>
  <li><a href="https://github.com/joshocalico">Joshua Steele</a></li>
  <li><a href="https://github.com/Nineluj">Julian Hirn</a></li>
  <li><a href="https://liberapay.com/d2quadra/">Julian Lukwata</a></li>
  <li><a href="https://github.com/schurhammer">Julian Schurhammer</a></li>
  <li><a href="https://github.com/justinlubin">Justin Lubin</a></li>
  <li><a href="https://github.com/Neofox">J√©r√¥me Schaeffer</a></li>
  <li><a href="https://github.com/jkbrinso">Kemp Brinson</a></li>
  <li><a href="https://github.com/keroami">Kero van Gelder</a></li>
  <li><a href="https://github.com/kevinschweikert">Kevin Schweikert</a></li>
  <li><a href="https://github.com/hamptokr">Kramer Hampton</a></li>
  <li><a href="https://github.com/Bearfinn">Kritsada Sunthornwutthikrai</a></li>
  <li><a href="https://github.com/krystofrezac">Kry≈°tof ≈òez√°ƒç</a></li>
  <li><a href="https://github.com/krzysztofgb">Krzysztof G.</a></li>
  <li><a href="https://github.com/leostera">Leandro Ostera</a></li>
  <li><a href="https://github.com/leejarvis">Lee Jarvis</a></li>
  <li><a href="https://github.com/leonqadirie">Leon Qadirie</a></li>
  <li><a href="https://github.com/LeartS">Leonardo Donelli</a></li>
  <li><a href="https://github.com/defp">lidashuang</a></li>
  <li><a href="https://github.com/LilyRose2798">Lily Rose</a></li>
  <li><a href="https://github.com/nnuuvv">liv</a></li>
  <li><a href="https://github.com/wowi42">Lo√Øc Tosser</a></li>
  <li><a href="https://github.com/lucaspellegrinelli">Lucas Pellegrinelli</a></li>
  <li><a href="https://github.com/lbjarre">Lukas Bjarre</a></li>
  <li><a href="https://github.com/lukasmeihsner">Lukas Meihsner</a></li>
  <li><a href="https://github.com/lamdor">Luke Amdor</a></li>
  <li><a href="https://github.com/2kool4idkwhat">Luna</a></li>
  <li><a href="https://github.com/manuel-rubio">Manuel Rubio</a></li>
  <li><a href="https://github.com/ideaMarcos">Marcos</a></li>
  <li><a href="https://github.com/marcusandre">marcusandre</a></li>
  <li><a href="https://github.com/AYM1607">Mariano Uvalle</a></li>
  <li><a href="https://github.com/mariuskalvo">Marius Kalv√∏</a></li>
  <li><a href="https://github.com/markholmes">Mark Holmes</a></li>
  <li><a href="https://github.com/markmark206">Mark Markaryan</a></li>
  <li><a href="https://github.com/foresterre">Martijn Gribnau</a></li>
  <li><a href="https://github.com/Janiczek">Martin Janiczek</a></li>
  <li><a href="https://github.com/poelstra">Martin Poelstra</a></li>
  <li><a href="https://github.com/rechsteiner">Martin Rechsteiner </a></li>
  <li><a href="https://github.com/martonkaufmann">martonkaufmann</a></li>
  <li><a href="https://github.com/han-tyumi">Matt Champagne</a></li>
  <li><a href="https://github.com/mhheise">Matt Heise</a></li>
  <li><a href="https://github.com/m">Matt Mullenweg</a></li>
  <li><a href="https://github.com/matthewrobinsondev">Matt Robinson</a></li>
  <li><a href="https://github.com/matt-savvy">Matt Savoia</a></li>
  <li><a href="https://github.com/mattvanhorn">Matt Van Horn</a></li>
  <li><a href="https://github.com/mwhitworth">Matthew Whitworth</a></li>
  <li><a href="https://github.com/maxmcd">Max McDonnell</a></li>
  <li><a href="https://github.com/metame">metame</a></li>
  <li><a href="https://github.com/metatexx">METATEXX GmbH</a></li>
  <li><a href="https://github.com/amiroff">Metin Emiroƒülu</a></li>
  <li><a href="https://github.com/stunthamster">Michael Duffy</a></li>
  <li><a href="https://github.com/michaeljones">Michael Jones</a></li>
  <li><a href="https://github.com/monocursive">Michael Mazurczak</a></li>
  <li><a href="https://github.com/mrmcc3">Michael McClintock</a></li>
  <li><a href="https://github.com/karlsson">Mikael Karlsson</a></li>
  <li><a href="https://github.com/mroach">Mike Roach</a></li>
  <li><a href="https://liberapay.com/mikej/">Mikey J</a></li>
  <li><a href="https://github.com/MoeDevelops">MoeDev</a></li>
  <li><a href="https://github.com/rykawamu">MzRyuKa</a></li>
  <li><a href="https://github.com/n8nio">n8n - Workflow Automation</a></li>
  <li><a href="https://github.com/natanaelsirqueira">Natanael Sirqueira</a></li>
  <li><a href="https://github.com/nathanielknight">Nathaniel Knight</a></li>
  <li><a href="https://github.com/Kuuuuuuuu">Nayuki</a></li>
  <li><a href="https://github.com/NFIBrokerage">NFIBrokerage</a></li>
  <li><a href="https://github.com/nchapman">Nick Chapman</a></li>
  <li><a href="https://github.com/ndreynolds">Nick Reynolds</a></li>
  <li><a href="https://github.com/NicklasXYZ">Nicklas Sindlev Andersen</a></li>
  <li><a href="https://github.com/NicoVIII">NicoVIII</a></li>
  <li><a href="https://github.com/mrniket">Niket Shah</a></li>
  <li><a href="https://github.com/blink1415">Nikolai S. K.</a></li>
  <li><a href="https://github.com/ninanomenon">Ninaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</a></li>
  <li><a href="http://www.ninefx.com/">NineFX</a></li>
  <li><a href="https://github.com/nomio">Nomio</a></li>
  <li><a href="https://github.com/oceanlewis">Ocean</a></li>
  <li><a href="https://github.com/osebelin">Olaf Sebelin</a></li>
  <li><a href="https://github.com/OldhamMade">OldhamMade</a></li>
  <li><a href="https://github.com/CanadaHonk">Oliver Medhurst</a></li>
  <li><a href="https://github.com/otosky">Oliver Tosky</a></li>
  <li><a href="https://github.com/optizio">optizio</a></li>
  <li><a href="https://github.com/Davorak">Patrick Wheeler</a></li>
  <li><a href="https://github.com/pguse">Paul Guse</a></li>
  <li><a href="https://github.com/biernacki">Pawel Biernacki</a></li>
  <li><a href="https://github.com/Tulkdan">Pedro Correa</a></li>
  <li><a href="https://github.com/petejodo">Pete Jodo</a></li>
  <li><a href="https://github.com/pvsr">Peter Rice</a></li>
  <li><a href="https://github.com/philpax">Philpax</a></li>
  <li><a href="https://github.com/pierrot-lc">Pierrot</a></li>
  <li><a href="https://github.com/qdentity">Qdentity</a></li>
  <li><a href="https://github.com/raquentin">Race Williams</a></li>
  <li><a href="https://github.com/stoft">Rasmus</a></li>
  <li><a href="https://github.com/ray-delossantos">Ray</a></li>
  <li><a href="https://github.com/chouzar">Ra√∫l Chouza </a></li>
  <li><a href="https://github.com/renatillas">re.natillas</a></li>
  <li><a href="https://github.com/redmar">Redmar Kerkhoff</a></li>
  <li><a href="https://github.com/reillysiemens">Reilly Tucker Siemens</a></li>
  <li><a href="https://github.com/renatomassaro">Renato Massaro</a></li>
  <li><a href="https://github.com/renovatorruler">Renovator</a></li>
  <li><a href="https://github.com/richard-viney">Richard Viney</a></li>
  <li><a href="https://github.com/rico">Rico Leuthold</a></li>
  <li><a href="https://github.com/rinx">Rintaro Okamura</a></li>
  <li><a href="https://github.com/ripta">Ripta Pasay</a></li>
  <li><a href="https://github.com/robertwayne">Rob</a></li>
  <li><a href="https://github.com/TanklesXL">Robert Attard</a></li>
  <li><a href="https://github.com/rellen">Robert Ellen</a></li>
  <li><a href="https://github.com/malkomalko">Robert Malko</a></li>
  <li><a href="https://github.com/Papipo">Rodrigo √Ålvarez</a></li>
  <li><a href="https://liberapay.com/Karakunai/">Ronan Harris</a></li>
  <li><a href="https://github.com/rotabull">Rotabull</a></li>
  <li><a href="https://github.com/reinefjord">Rupus Reinefjord</a></li>
  <li><a href="https://github.com/ustitc">Ruslan Ustitc</a></li>
  <li><a href="https://github.com/mooreryan">Ryan Moore</a></li>
  <li><a href="https://github.com/samaaron">Sam Aaron</a></li>
  <li><a href="https://github.com/metruzanca">Sam Zanca</a></li>
  <li><a href="https://github.com/soulsam480">sambit</a></li>
  <li><a href="https://github.com/bkspace">Sammy Isseyegh</a></li>
  <li><a href="https://github.com/mrgleam">Santi Lertsumran</a></li>
  <li><a href="https://github.com/castletaste">Savva</a></li>
  <li><a href="https://github.com/sasa1977">Sa≈°a Juriƒá</a></li>
  <li><a href="https://github.com/scotttrinh">Scott Trinh</a></li>
  <li><a href="https://github.com/smweber">Scott Weber</a></li>
  <li><a href="https://github.com/scottwey">Scott Wey</a></li>
  <li><a href="https://github.com/star-szr">Scott Zhu Reeves</a></li>
  <li><a href="https://github.com/seanjensengrey">Sean Jensen-Grey</a></li>
  <li><a href="https://github.com/SeanRoberts">Sean Roberts</a></li>
  <li><a href="https://github.com/sporto">Sebastian Porto</a></li>
  <li><a href="https://github.com/sekunho">sekun</a></li>
  <li><a href="https://github.com/tehprofessor">Seve Salazar</a></li>
  <li><a href="https://github.com/codemonkey76">Shane Poppleton</a></li>
  <li><a href="https://github.com/honsq90">Shuqian Hon</a></li>
  <li><a href="https://github.com/sigmasternchen">Sigma</a></li>
  <li><a href="https://github.com/simonewebdesign">Simone Vittori</a></li>
  <li><a href="https://github.com/bytesource">Stefan</a></li>
  <li><a href="https://github.com/sthagen">Stefan Hagen</a></li>
  <li><a href="https://github.com/steinareliassen">Steinar Eliassen</a></li>
  <li><a href="https://github.com/Qard">Stephen Belanger</a></li>
  <li><a href="https://github.com/stvpwrs">Steve Powers</a></li>
  <li><a href="https://github.com/Strandinator">Strandinator</a></li>
  <li><a href="https://github.com/slafs">S≈Çawomir Ehlert</a></li>
  <li><a href="https://github.com/Theosaurus-Rex">Theo Harris</a></li>
  <li><a href="https://github.com/thomaswhyyou">Thomas</a></li>
  <li><a href="https://github.com/tcoopman">Thomas Coopman</a></li>
  <li><a href="https://github.com/ernstla">Thomas Ernst</a></li>
  <li><a href="https://github.com/tmbrwn">Tim Brown</a></li>
  <li><a href="https://github.com/timgluz">Timo Sulg</a></li>
  <li><a href="https://github.com/tomjschuster">Tom Schuster</a></li>
  <li><a href="https://github.com/tomekowal">Tomasz Kowal</a></li>
  <li><a href="https://github.com/tommaisey">tommaisey</a></li>
  <li><a href="https://github.com/ThisGuyCodes">Travis Johnson</a></li>
  <li><a href="https://github.com/TristanCacqueray">Tristan de Cacqueray</a></li>
  <li><a href="https://github.com/tsloughter">Tristan Sloughter</a></li>
  <li><a href="https://github.com/lucamtudor">Tudor Luca</a></li>
  <li><a href="https://github.com/tymak">tymak</a></li>
  <li><a href="https://github.com/upsidedownsweetfood">upsidedowncake</a></li>
  <li><a href="https://github.com/vvzen">Valerio Viperino</a></li>
  <li><a href="https://github.com/sandsower">Vic Valenzuela</a></li>
  <li><a href="https://github.com/rodrigues">Victor Rodrigues</a></li>
  <li><a href="https://github.com/PerpetualPossum">Viv Verner</a></li>
  <li><a href="https://github.com/yelps">Volker Rabe</a></li>
  <li><a href="https://github.com/Whoops">Walton Hoops</a></li>
  <li><a href="https://github.com/weizhliu">Weizheng Liu</a></li>
  <li><a href="https://github.com/enkerewpo">wheatfox</a></li>
  <li><a href="https://github.com/Willyboar">Willyboar</a></li>
  <li><a href="https://github.com/wilsonsilva">Wilson Silva</a></li>
  <li><a href="https://github.com/HymanZHAN">Xucong Zhan</a></li>
  <li><a href="https://github.com/yamen">Yamen Sader</a></li>
  <li><a href="https://github.com/Yasuo-Higano">Yasuo Higano</a></li>
  <li><a href="https://github.com/yoshi-monster">yoshi~ </a></li>
  <li><a href="https://github.com/gasparinzsombor">Zsombor Gasparin</a></li>
  <li><a href="https://github.com/zwubs">ZWubs</a></li>
  <li><a href="https://liberapay.com/~1814730/">~1814730</a></li>
  <li><a href="https://liberapay.com/~1847917/">~1847917</a></li>
  <li><a href="https://liberapay.com/~1867501/">~1867501</a></li>
</ul>



</div></div>]]></description>
        </item>
    </channel>
</rss>