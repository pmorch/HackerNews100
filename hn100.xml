<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 19 Apr 2025 10:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Show HN: New world record – verified Goldbach Conjecture up to 4*10^18+7*10^13 (104 pts)]]></title>
            <link>https://medium.com/@jay_gridbach/grid-computing-shatters-world-record-for-goldbach-conjecture-verification-1ef3dc58a38d</link>
            <guid>43734583</guid>
            <pubDate>Sat, 19 Apr 2025 06:11:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://medium.com/@jay_gridbach/grid-computing-shatters-world-record-for-goldbach-conjecture-verification-1ef3dc58a38d">https://medium.com/@jay_gridbach/grid-computing-shatters-world-record-for-goldbach-conjecture-verification-1ef3dc58a38d</a>, See on <a href="https://news.ycombinator.com/item?id=43734583">Hacker News</a></p>
Couldn't get https://medium.com/@jay_gridbach/grid-computing-shatters-world-record-for-goldbach-conjecture-verification-1ef3dc58a38d: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Cozy video games can quell stress and anxiety (416 pts)]]></title>
            <link>https://www.reuters.com/business/retail-consumer/cozy-video-games-can-quell-stress-anxiety-2025-01-27/</link>
            <guid>43733097</guid>
            <pubDate>Sat, 19 Apr 2025 00:21:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/business/retail-consumer/cozy-video-games-can-quell-stress-anxiety-2025-01-27/">https://www.reuters.com/business/retail-consumer/cozy-video-games-can-quell-stress-anxiety-2025-01-27/</a>, See on <a href="https://news.ycombinator.com/item?id=43733097">Hacker News</a></p>
Couldn't get https://www.reuters.com/business/retail-consumer/cozy-video-games-can-quell-stress-anxiety-2025-01-27/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Hypertext TV (163 pts)]]></title>
            <link>https://hypertext.tv/</link>
            <guid>43732805</guid>
            <pubDate>Fri, 18 Apr 2025 23:29:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hypertext.tv/">https://hypertext.tv/</a>, See on <a href="https://news.ycombinator.com/item?id=43732805">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="menu" aria-label="Menu Options" data-astro-cid-2j44jlrm="" id="menu" data-open="false">  <hr data-astro-cid-2j44jlrm=""> <p> <label role="menuitem" tabindex="-1" data-astro-cid-2j44jlrm=""> <span data-astro-cid-2j44jlrm="">Brightness</span>  </label> <label role="menuitem" tabindex="-1" data-astro-cid-2j44jlrm=""> <span data-astro-cid-2j44jlrm="">Color</span>  </label> <label role="menuitem" tabindex="-1" data-astro-cid-2j44jlrm=""> <span data-astro-cid-2j44jlrm="">Tint</span>  </label> <label role="menuitem" tabindex="-1" data-astro-cid-2j44jlrm=""> <span data-astro-cid-2j44jlrm="">Horizontal</span>  </label> <label role="menuitem" tabindex="-1" data-astro-cid-2j44jlrm=""> <span data-astro-cid-2j44jlrm="">Vertical</span>  </label></p><hr data-astro-cid-2j44jlrm=""> <p><a href="https://hypertext.tv/" role="menuitem" tabindex="-1" onclick="fathom.trackEvent('menu: click tv guide')" data-astro-cid-2j44jlrm="">TV Guide</a> <a href="https://hypertext.tv/test" role="menuitem" tabindex="-1" onclick="fathom.trackEvent('menu: click testing')" data-astro-cid-2j44jlrm="">Testing</a> <a href="https://hypertext.tv/credits" role="menuitem" tabindex="-1" onclick="fathom.trackEvent('menu: click credits')" data-astro-cid-2j44jlrm="">Credits</a></p><hr data-astro-cid-2j44jlrm=""> <p><a href="https://github.com/evadecker/hypertext.tv" role="menuitem" tabindex="-1" onclick="fathom.trackEvent('menu: click add website')" data-astro-cid-2j44jlrm="">Add a website</a> <a href="https://github.com/evadecker/hypertext.tv/issues" role="menuitem" tabindex="-1" onclick="fathom.trackEvent('menu: click report issue')" data-astro-cid-2j44jlrm="">Report an issue</a></p><hr data-astro-cid-2j44jlrm=""> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I passionately hate hype, especially the AI hype (173 pts)]]></title>
            <link>https://unixdigest.com/articles/i-passionately-hate-hype-especially-the-ai-hype.html</link>
            <guid>43732047</guid>
            <pubDate>Fri, 18 Apr 2025 21:32:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://unixdigest.com/articles/i-passionately-hate-hype-especially-the-ai-hype.html">https://unixdigest.com/articles/i-passionately-hate-hype-especially-the-ai-hype.html</a>, See on <a href="https://news.ycombinator.com/item?id=43732047">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>


<p>Published on <span id="pubdate">2024-08-21</span>. Modified on <span id="moddate">2024-08-23</span>.</p>
<p><span id="description">I truly and passionately hate hype. From the fakeness of it to the sheer stupidity it represents, but perhaps most of all, because of the devastating consequence it often results in.</span></p>

<p>Hype is basically to promote or publicize something extravagantly and the modern hype promoted by "Big Tech" is not much different from medieval <a href="https://en.wikipedia.org/wiki/Charlatan">charlatans</a>.</p>

<p>Hype begins by some company or industry wanting to earn a profit by some new product or service. Massive propaganda is launched which is then propagated by the media, who's objectivity and investigation procedure is totally sidestepped by yet another desperate craving for profit. Then all of this is followed-up by the majority of the masses, which unfortunately mostly consists of mindless sheeple that easily become dumpfounded by all of this, and as a result, start parroting the hype like lunatics.</p>

<p>Hype is always bad.</p>

<p>Hype hurts investors who end up loosing a lot of money because all the "golden" promises where exaggerated or simply fake.</p>

<p>Hype often hurts the medium to smaller businesses because rather than doing what actually works, procedures are changed and complication is introduced, very often resulting in vendor lock-in, higher financial expenses, less security and poorer end results.</p>

<p>Hype also hurts the individual. People who invest time and money in studying and learning the hyped up technology only to realize, often many years later, that better ways actually exist. This is when the old becomes new again and people discover things for the first time that has been obvious to the previous generations all along.</p>

<p>Often, the price that people end up paying is not only in the loss of time and money, but also in some of the most important valuables, namely privacy and personal freedom.</p>

<p>When hype is driven by big corporations or by governments, it is always bad. The reason is simple. The interest at hand is never the benefit of the people, it's the benefit of the company or ruling elite. It is always an exaggeration or a blatant lie. That is one of the reasons why we must always strive to think independently and avoid being swooped by the media and general opinions of the crowd.</p>

<blockquote>
  <p>In the world of tech, hype is rife. When a new technology emerges, people get overly enthusiastic and want to apply it everywhere—we've seen it with big data, AI, data science, blockchain, ChatGPT, and so on. I've seen companies hire as many as 70 people to build a product with the goal of following a trend without defining what the product would do or whether clients would want it.</p>
  <p>Just a few weeks ago, for example, a company reached out to me looking for advice on how they could use ChatGPT in their accounting software. They said this was because they were trying to raise funding, and investors wouldn't like it if they weren't using ChatGPT for something. I've documented many examples of this phenomenon in the context of AI in my book.</p>
  <p>— <a href="https://emaggiori.com/">Dr. Emmanuel Maggiori</a> (computer scientist)</p>
</blockquote>

<h2>The current AI hype</h2>

<p>In technology, AI is currently the new big hype. Before AI, it was "The Cloud", which unfortunately has still not settled, but are now also being interwoven with AI.</p>

<p>The term "Artificial Intelligence" (AI) is grossly misleading as no form or sort of intelligence exists at all. The only reason why this terminology is being used is because it is easier to sell. When most people think of AI they tend to think of something from science fiction.</p>

<p>In my humble opinion, about perhaps 10% of the AI hype is based upon useful facts, which is the relevant tools the technology provides, the rest is exaggerated rubbish.</p>

<p>Still, many companies (mainly in the US, but also elsewhere in the world) are firing people because they have been lead to believe that they can save money by utilizing AI rather than real people. This is a big mistake. While "AI" is certainly useful for a lot of minor tasks when used as tools, this is nothing but careless acts of greedy mismanagement.</p>

<p>AI functions greatly as a "search engine" replacement, but replacing customer and service people with AI is going to hurt the business in the long run. Nobody wants to talk to an AI when they need support. We all HATE that! It is bad enough that when you need service and support you end up talking to someone on the other side of the planet who's using some kind of answer sheet with absolutely no clue on how to really help you.</p>

<p>The least skilled, the least experienced, the least productive people will be the ones recommending AI the most. The people who actually think will be treated as either being stupid or totally backwards.</p>

<p>Last, but not least, a lot of the current AI products represents the biggest and most appalling examples of plagiarizing ever witnessed.</p>

<blockquote>
  <p>The marketing team in the company I work for is now labeling everything a computer does as "AI powered". Technology that existed decades ago is now suddenly "AI powered" - just because they are jumping on the hype wagon.</p>
</blockquote>

<p>It is a real shame that some of the most beneficial tools ever invented, such as computers, modern databases, data centers, etc. exist in an industry that has become so obsessed with hype and trends that it resembles the fashion industry.</p>

<p>Another major problem with this new round of hype is that it is taking place in the middle of a major inflation crisis and it is taking place in a time when we need to conserve resources, energy and water. Yet, if anything, AI is slowly becoming a major drain on both resources, energy and water (for cooling in data centers).</p>

<p>Take a step back, pause and breathe before you fall prey to all the hype. A lot of people is going to lose a lot of money. I can say that with complete conviction because most investments into AI have been made on false promises, promises that AI simply cannot and never will be able to fulfill.</p>

<h2>Recommended material</h2>

<ul>
  <li>
    <p><a href="https://www.youtube.com/watch?v=Nd7wrC62LEk&amp;t=602s">AI HYPE - Explained by Dr. Emmanuel Maggiori</a> (1 hour 20 min. YouTube video)</p>
    <p>Jesse Wright is joined by Dr. Emmanuel Maggiori, computer scientist and author of the book <a href="https://emaggiori.com/smart-until-dumb/">Smart Until It's Dumb: Why artificial intelligence keeps making epic mistakes (and why the AI bubble will burst)</a>, in a thought-provoking conversation about AI and the future of AI.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=VPSZFUiElls">The "Modern Day Slaves" Of The AI Tech World</a> (52 min. YouTube video).</p>
    <p>Meet the invisible workforce behind tech giants like Google, Facebook, Amazon, and Uber. These underpaid and disposable workers label images, moderate content, and train AI systems, often earning less than minimum wage. Their work is essential yet remains in the shadows, unacknowledged by the companies that depend on them.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=gSPjoNczOsI">Decoding AI: A Go Programmer's Perspective</a> (30 min. YouTube video).</p><p>This is a really good talk by Beth Anderson from BBC. It was presented at the newly held UK GopherCon.</p>
    <p>Beth debunks common myths and provides a candid look under the hood to reveal what the technologies are and how they work when we attempt to use them in production systems.</p>
    <p>Beth began her journey in the field of AI in the 90s when she studied Computer Science and Artificial Intelligence, culminating in a Master's thesis focused on machine learning—utilising convolutional neural networks to classify audio waveforms. Beth later joined the BBC's pioneering AI team, Datalab, developing recommendation engines and other tooling within the BBC. Beth is also involved with the BBC's AI&amp;ML community which is focused on the responsible use of AI within the organisation.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=Pv0cfsastFs">Beyond the Hype: A Realistic Look at Large Language Models</a> (40 min. YouTube video).</p>
    <p>This presentation by Jodie Burchell was recorded at GOTO Amsterdam 2024.</p>
    <p>Jodie Burchell is a data scientist and developer at JetBrains.</p>
    <p><i>If you've been remotely tuned in to the latest developments in large language models (LLMs), you've likely been inundated with news, ranging from claims that these models will replace numerous white-collar jobs to declarations of sentience and an impending AI apocalypse. At this stage, the hype surrounding these models has far surpassed the actual useful information available.</i></p>
    <p><i>In this talk, we'll cut through the noise and delve deep into the current applications, risks, and limitations of LLMs. We'll start with early research endeavours aimed at creating an "artificial brain" and trace the path that has led us to today's sophisticated text models. Along the way, we'll address how these models have been mistaken for intelligent systems.</i></p>
    <p><i>We'll shed light on the actual requirements for developing true artificial general intelligence, and see how far LLMs are from this goal. We'll end with a practical demonstration of how you can use LLMs in a way that plays to their strengths, by showing you how to build a system which leans into these models powerful natural language capabilities.</i></p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=dDUC-LqVrPU">Has Generative AI Already Peaked? - Computerphile</a> (13 min. YouTube video).</p>
    <p>The paper mentioned in the video is this one: <a href="https://arxiv.org/abs/2404.04125">No "Zero-Shot" Without Exponential Data: Pretraining Concept Frequency Determines Multimodal Model Performance</a> (PDF 47 MB).</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=20TAkcy3aBY&amp;t=223s">Jon Stewart On The False Promises of AI | The Daily Show</a> (11 min. YouTube video).</p>
  </li>
  <li>
    <p><a href="https://emaggiori.com/employed-in-tech-for-years-but-almost-never-worked/">I've been employed in tech for years, but I've almost never worked</a> by Dr. Emmanuel Maggiori.</p>
  </li>
</ul>

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Full Text Search of US Court records (293 pts)]]></title>
            <link>https://www.judyrecords.com/</link>
            <guid>43731552</guid>
            <pubDate>Fri, 18 Apr 2025 20:24:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.judyrecords.com/">https://www.judyrecords.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43731552">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

                        <p><a href="https://www.judyrecords.com/">judyrecords</a></p><form action="/" method="get">

<div>

        <p>
    

    <a href="https://www.judyrecords.com/info#searchTipsHeader">search tips</a>
</p></div>

</form>



            <p><span>740 million<span>+</span></span>
                <br><span>United States Court Cases</span>
            </p>

            <ul>

                <li><a href="https://www.judyrecords.com/">home</a></li>
                <li><a href="https://www.judyrecords.com/terms">terms</a></li>
                <li><a href="https://www.judyrecords.com/info">info</a></li>
                
                <li><a href="https://www.judyrecords.com/api">API</a></li>            </ul>

                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[15,000 lines of verified cryptography now in Python (365 pts)]]></title>
            <link>https://jonathan.protzenko.fr/2025/04/18/python.html</link>
            <guid>43731165</guid>
            <pubDate>Fri, 18 Apr 2025 19:28:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jonathan.protzenko.fr/2025/04/18/python.html">https://jonathan.protzenko.fr/2025/04/18/python.html</a>, See on <a href="https://news.ycombinator.com/item?id=43731165">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content">
        <article itemscope="" itemtype="http://schema.org/BlogPosting">

  

  <div itemprop="articleBody">
    <p>In November 2022, I opened <a href="https://github.com/python/cpython/issues/99108">issue 99108</a> on
Python’s GitHub repository, arguing that after a recent CVE in its implementation of
SHA3, Python should embrace verified code for all of its hash-related infrastructure.</p>

<p>As of last week, this issue is now closed, and every single hash and HMAC algorithm exposed by
default in Python is now provided by <a href="https://github.com/project-everest/hacl-star/">HACL*</a>, the
verified cryptographic library. There was no loss of functionality, and the transition was entirely
transparent for Python users. Python now vendors (includes in its repository) 15,000 lines of
verified C code from HACL*. Pulling newer versions from the upstream HACL* repository
is entirely automated and is done by invoking a script. HACL* was able to successfully implement
new features to meet all of the requirements of Python, such as: additional modes for the Blake2
family of algorithms, a new API for SHA3 that covers all Keccak variants, strict abstraction
patterns to deal with build system difficulties, proper error management (notably, allocation
failures), and instantiating HACL’s generic “streaming” functionality with the HMAC algorithm,
including an optimization that requires keeping two hash states at once.</p>

<p>This is the culmination of 2.5 years of work, and could not have happened without the invaluable
help of <a href="https://aymericfromherz.github.io/">Aymeric Fromherz</a>, who shouldered a lot of the
implementation burden. <a href="https://www.sonho.fr/">Son Ho</a> had a key contribution early on, generalizing
HACL’s “streaming” functionality to be able to handle block algorithms that require a “pre-input”.
This slightly obscure generalization was actually essential to implement a suitable, optimized HMAC
that keeps two hash states under the hood. On the Python side, Gregory P. Smith, Bénédikt Tran, and
later Chris Eibl were big champions and provided a lot of help. Finally, the HACS series of
workshops created connections (hello, Paul Kehrer!) and provided sufficient momentum to make this
happen. A warm thank you to both the Python and verified cryptographic communities!</p>

<p>As I oftentimes like to do, I’ll provide a little bit of a look behind the scenes, and comment on
some of the more interesting technical aspects that are too low-level for a research paper.</p>

<h2 id="a-primer-on-streaming-apis">A Primer on Streaming APIs</h2>

<p>Many cryptographic algorithms are <em>block</em> algorithms, meaning that they assume their input is
provided block by block, with special treatment for the first and last blocks. Well-known block
algorithms include hash algorithms, MAC algorithms (e.g. Poly1305, HMAC), and more. In practice, the
block API is not user-friendly: rarely does one have the data already chunked in blocks;
furthermore, computing a result (e.g., a hash) invalidates the state of the block algorithm, which
makes e.g. computing the intermediary hashes of the TLS transcript difficult.</p>

<p>For these reasons, cryptographic libraries typically expose <em>streaming</em> APIs, meaning clients can
provide inputs of any length; the library then takes care of buffering the input, flushing the
buffer as soon as a full block is obtained. A streaming API typically also allows extracting
intermediary hashes without invalidating the state.</p>

<p>Streaming APIs are hard, because they manipulate long-lived state with complex invariants: the
(unverified) reference implementation of SHA3 was hit with a <a href="https://nvd.nist.gov/vuln/detail/cve-2022-37454">bad
CVE</a> in 2022, which Python “inherited”, because it
vendored that very same SHA3 implementation.</p>

<p>Streaming APIs are hard also because the
underlying block algorithms differ in a myriad of different ways: all hash algorithms accept an
empty final block, <em>except</em> for Blake2; some need to retain the key at run-time (Poly1305), some can discard it
after initialization (HMAC, optimized); some need some initial input before processing the key
(Blake2), some don’t; and so on.</p>

<p>Given this inherent complexity, streaming algorithms are a good candidate for verification: we wrote
a <a href="https://arxiv.org/abs/2102.01644">research paper</a> in 2021 about this very problem.</p>

<h2 id="fully-generic-verification">Fully generic verification</h2>

<p>The main idea from the paper is that one can capture, using dependent types, what a block algorithm
<em>is</em>. Once that’s done, it suffices to author and verify a generic streaming construction once and
for all over an abstract definition of block algorithms. Then, just like you instantiate a template
in C++, you apply the generic streaming construction to a concrete block API and voilà – a
streaming API for that one block algorithm, “for free”.</p>

<p>The fist hitch is that there’s quite a big delta between what we presented in the paper (Listing
12), and <a href="https://github.com/hacl-star/hacl-star/blob/897e23d315c08f7a375408d60d1a4918477fcaa0/code/streaming/Hacl.Streaming.Interface.fsti#L254">what actually lives in the
repository</a>.
Specifically, capturing <em>any</em> block algorithm requires a lot of genericity.</p>
<ul>
  <li>The user may or may not specify the length of the final digest – for instance,
each SHA3 hash has a fixed output length, but the Shake variants produce a result whose length is
user-provided.</li>
  <li>The block algorithm may expect to receive a pre-input before the blocks of data. For e.g. SHA2,
the pre-input is empty, but for Blake2 in keyed hash mode, the pre-input is the key block.</li>
  <li>Blocks cannot be processed eagerly, because some algorithms (Blake2) do not allow for the final
block to be empty – this vastly complicates buffer management, and interacts with the pre-input.</li>
  <li>Some algorithms need to retain extra pieces of state: for instance, the key length for Blake2 can
be tweaked at initialization-time, but needs to be retained in the long-lived state.</li>
  <li>To avoid invalidating the block state upon intermediary digest extraction, our streaming API
copies the state under the hood – in some cases, it’s easier to stack-allocate this copy, but in
other cases, a heap-allocated copy makes more sense.</li>
  <li>In some cases, we wanted one API per algorithm (we have four APIs for
SHA2-{224,256,384,512}); in other cases, we wanted one API per algorithm family (we have one API
that covers all 6 Keccak algorithms: 4 variants of SHA3, and 2 variants of Shake).</li>
</ul>

<p>Getting to that level of genericity took multiple rounds, driven by the successive requirements of
Python. Ultimately, for HMAC, which was the final algorithm we landed in Python, we realized that
our proofs and definitions were generic enough that we did not need any further tweaks to
“instantiate” our generic streaming API with HMAC.</p>

<h2 id="a-bulletproof-build">A bulletproof build</h2>

<p>One highlight of submitting a PR to Python is that their infrastructure has more CI coverage than we
could possibly dream of: a complete build of Python runs over 50+ toolchains and architectures. The
flipside? We discovered some pretty annoying corner cases.</p>

<p>One particularly tricky build issue surfaced when dealing with HMAC. As a reminder,
<a href="https://en.wikipedia.org/wiki/HMAC">HMAC</a> is a generic construction that, given a hash algorithm,
provides a keyed message authentication code – in short, there is a high-level HMAC piece of code
that defers most of the work to individual hash algorithms. Each hash algorithm may itself come in a
variety of <em>implementations</em>: for instance, HMAC-Blake2b is implemented both by HMAC-Blake2b-32
(regular implementation) and HMAC-Blake2b-256 (AVX2 wide-vector implementation).</p>

<p>This already causes problems: <code>HMAC.c</code> may call functions from <code>Blake2b_256.c</code>, if Python is running
on a machine with AVX2. However, only <code>Blake2b_256.c</code> may be compiled with <code>-mavx2</code>: code from
<code>HMAC.c</code> will execute on all machines, even those without AVX2, meaning it must <em>not</em> be compiled
with <code>-mavx2</code>. So far, so good, and this is something we had done before.</p>

<p>The problem came with <code>HMAC.c</code> creating the initial state for <code>Blake2b_256.c</code>:</p>

<div><pre><code><span>#include</span> <span>&lt;immintrin.h&gt;</span><span>
</span>
<span>// ...</span>
  <span>__m256i</span> <span>*</span><span>blake2b_256_state</span> <span>=</span> <span>aligned_malloc</span><span>(</span><span>sizeof</span><span>(</span><span>__m256i</span><span>)</span><span>*</span><span>4</span><span>);</span>
<span>// ...</span>

</code></pre></div>

<p>Most toolchains were happy with this code – <code>immintrin.h</code> defines the type <code>__m256i</code>, and even
though <code>HMAC.c</code> cannot assume AVX2 instructions are available, it’s not to hard for a
compiler to zero-initialize <code>blake2b_256_state</code> without resorting to AVX2 instructions… except,
some older compilers refused to process the <code>immintrin.h</code> header unless <code>-mavx2</code> was used, which
defeated the whole purpose.</p>

<p>This required a considerable amount of refactoring to use the well-known “C abstract struct”
pattern, which essentially defines an abstract type in C.</p>

<div><pre><code><span>// Blake2b_256.h</span>
<span>typedef</span> <span>struct</span> <span>blake2b_256_st_s</span> <span>blake2b_256_st</span><span>;</span>
<span>blake2b_256_st</span> <span>*</span><span>blake2b_256_malloc</span><span>();</span>

<span>// Blake2b_256.c</span>
<span>#include</span> <span>&lt;immintrin.h&gt;</span><span>
</span><span>typedef</span> <span>struct</span> <span>blake2b_256_st_s</span> <span>{</span>
    <span>__m256i</span> <span>contents</span><span>[</span><span>4</span><span>];</span>
<span>}</span> <span>blake2b_256_st</span><span>;</span>

<span>// HMAC.c</span>
<span>blake2b_256_st</span> <span>*</span><span>blake2b_256_state</span> <span>=</span> <span>blake2b_256_malloc</span><span>();</span>
</code></pre></div>

<p>What made this extra difficult is that the C code is auto-generated from F*, which has a <em>very</em>
different notion of abstraction. The compiler that goes from F* to C,
<a href="https://github.com/FStarLang/karamel/">krml</a>, had to be overhauled to perform a much more
fine-grained analysis that handles various levels of visibility (public functions, library-internal
functions, translation-unit internal functions) even in the presence of such “abstract structs”.</p>

<h2 id="handling-memory-allocation-failures">Handling memory allocation failures</h2>

<p>While our original modeling of C in F* allowed reasoning about memory allocation failures, no one
had ever bothered to do so in practice. For Python, it was desirable to be able to propagate memory
allocation failures. This meant we had to refine our definition of a generic, mutable piece of state
(such as the block state); our definition of a block algorithm (such as SHA2-256); and our generic
streaming construction to all be able to propagate memory allocation failures all the way up to the
caller. Thankfully, this didn’t turn out to be a huge deal: we inserted <code>option</code> types all along the
way, and because we had one single generic streaming construction, the implementation and proofs had
to be updated only once for the 15+ concrete instances of the streaming API.</p>

<p>The presence of <code>option</code> types in the source compiles to tagged unions in the generated C; this is a
little verbose, and we may change our definition of a piece of state to feature a <code>has_failed</code>
run-time function that can assess whether a memory allocation failed, at the expense of more
complexity and verification effort.</p>

<h2 id="propagating-changes-from-upstream-hacl-to-python">Propagating changes from upstream HACL* to Python</h2>

<p>My initial Python PR contained a shell script that would fetch the required files from the upstream
HACL* repository; ditch a bunch of superfluous definitions in headers via well-crafted sed
invocations; and tweak a few include paths in-place, also using my favorite refactoring tool (yes,
sed). The benefit was the the initial PR was lean and clean.</p>

<p>Later on, once it became clear that the upstream code was maintainable and pretty stable, that pile
of seds was eliminated, on the basis that it’s not the end of the world if a header contains a few
extra definitions, and it all makes maintenance easier.</p>

<p>Now, anyone who wishes to refresh HACL* can run the shell script in their checkout of Python, and
provided they tweak the expected hash in Python’s SBOM (software bill of materials), they are good
to go and can integrate the latest improvements.</p>

<h2 id="conclusion">Conclusion</h2>

<p>I’m delighted to see such a large-scale integration of verified cryptographic code in a flagship
project like Python. This demonstrates that verified cryptographic is not only ready from an
academic perspective, but also mature enough to be integrated in real-world software while meeting
all engineering expectations. Thanks to everyone who helped along this journey!</p>

  </div>
</article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[There's Life Inside Earth's Crust (101 pts)]]></title>
            <link>https://www.noemamag.com/theres-life-inside-earths-crust/</link>
            <guid>43730701</guid>
            <pubDate>Fri, 18 Apr 2025 18:35:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.noemamag.com/theres-life-inside-earths-crust/">https://www.noemamag.com/theres-life-inside-earths-crust/</a>, See on <a href="https://news.ycombinator.com/item?id=43730701">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="article">

        <div role="group">
    <p>Credits</p>
    <p><span>Karen G. Lloyd is the Wrigley Chair in Environmental Studies and professor of Earth science at the University of Southern California. This essay is adapted from her forthcoming </span><a href="https://urldefense.com/v3/__https:/press.princeton.edu/books/hardcover/9780691236117/intraterrestrials__;!!LIr3w8kk_Xxm!vTg8t3-G7wboTS4DBsyBiTHmbbYYhj-LP6Xrl2oDkeVNQWut-i3mfJCBZ-Fgpx6HlrudjeMg3DkdOg$"><span>book</span></a><span> “Intraterrestrials: Discovering the Strangest Life on Earth” (Princeton University Press, 2025).</span></p>
</div>
<p>The way to spot a cold methane seep on the ocean floor is to look for the life that gathers around it, like antelopes at a savanna watering hole: clams, mussels, crabs, shrimp, fish, sea anemones and creepy, otherworldly worms. These seeps, exposed by movements of tectonic plates or other geological processes, allow ancient, deeply buried methane to burble through the Earth’s crust and into the water column, where it becomes a kind of manna from heaven — a highly energetic food in what is otherwise a barren desert. Single-celled microbes eat the gas; the crustaceans, worms and other creatures in turn eat the microbes. For microbiologists like myself, this motley crew of creatures is a precious sight, but not because I’m interested in studying them — it’s the tiny microbes I make these half-mile descents for.</p><p>Ever since I became a microbiologist, a series of questions has gnawed at me: Are there life-­forms hiding inside the Earth? And if there are, how do they survive? Would their nature be so strange that they change our conception of life itself?&nbsp;</p><p>The major categories of visible life on Earth have been pretty much settled for centuries. But it wasn’t until the 1980s that scientists found “intraterrestrials” — microscopic organisms living in what the biogeochemist David Valentine calls a “microbial purgatory deep below the Earth’s surface.” Soon followed by other revelations of life inside Earth’s crust, these discoveries revealed that we had been missing major branches on the tree of life. Indeed, these microbes proved that our assumptions about the boundaries of life were wrong — and wildly so.</p><p>As it turns out, much of Earth’s habitable space lies deep under thousands of feet of sediments and rock. You might think that any sad little trickle of life in that deep, dark underworld might like to clamber back up to the surface, desperate for life­giving sunlight. But anyone who’s traveled to a methane seep at the bottom of the sea knows the opposite is true: life flourishes in the dark, and it does so on terms antithetical to those that we who inhabit the thin green layer at the Earth’s surface know.</p><p>Intraterrestrials survive without sun and oxygen; instead, via thermodynamics (the art of moving energy around), they are able to respire most elements of the periodic table. Radioactive uranium doesn’t really have a “life support” ring to it, yet that’s just what it is for some intraterrestrials. Arsenic is poisonous to humans and many other creatures, but intraterrestrials respire it too, essentially cleaning up our toxic pollution. Gold is not very chemically reactive — that’s why humans use it in currency and jewelry. Yet there are microbes that consume it.&nbsp;</p><p>We know they are alive because we can see the effects of their respiration on the chemicals around them, and we can see that they are intact and not degraded. We know they must be refreshing their cellular biomass. But they are doing it immensely slowly — gradually replacing their parts, lipid by lipid, nucleotide by nucleotide. It takes roughly half a century for them to replace all their molecules.</p><!-- Quote Block Template -->

<figure>

  <blockquote>

    <p>
      “Are there life-­forms hiding inside the Earth? And if there are, how do they survive? Would their nature be so strange that they change our conception of life itself?”    </p>

    
    
  </blockquote>
</figure><p>These single-celled organisms can live for hundreds of thousands, perhaps millions, of years. (By contrast, the oldest multicellular organisms are trees, some of which can live to be thousands of years old, although none of the cells that compose them live for that long.) Theoretically, therefore, when I scoop deep sediment samples, I could be touching microbes that have been living and breathing continuously since well before humans were even a species.&nbsp;</p><p>By clinging to the bitter edge of what scientists ever would have guessed is the necessary amount of energy to support life, the intraterrestrials have earned a different relationship with time than we have. Indeed, many endure in environments where they don’t get enough energy to produce new cells, instead surviving on 0.00001­% of the power that supports all other known types of cell growth on Earth.&nbsp;</p><p>Here’s where the script of life really gets flipped, and where Darwinian evolution needs to be looked at anew. How does a species that doesn’t produce progeny for thousands of years or longer even evolve, given the importance of progeny in the process of evolution?</p><p>To answer this question, first we have to think about what these slow organisms would experience in their lifetimes. They aren’t concerned about the length of a day. They’re buried so deep that they can’t detect the sun anyway. They probably don’t even notice a change in seasons. However, they might care about other, longer geological rhythms: the opening and closing of oceanic basins through plate tectonics, the formation and subsidence of new island chains, new fluid flows brought on by the slow formation of cracks in Earth’s crust. The biology I was taught in school considered these events to be evolutionary drivers for a species, not individuals. For instance, Darwin’s finches evolved new beak shapes because they had become isolated on an island with a particular shape of seed to eat. This evolution happened over the geological timescale of island formation, but it occurred in a species lineage, not in an individual bird.</p><p>We know, however, that individuals are also capable of changing along with the rhythms of their environment. An arctic fox’s fur changes from white to brown when the snow melts every spring. Many people (not me, sadly) wake up at the same time each morning without the aid of an alarm. Daily and yearly rhythms seem like reasonable things for a person or an animal to keep track of. Ice ages, less so.</p><p>Anticipating environmental changes over timescales of eons seems ridiculous. A finch would not evolve the ability to swim because it anticipated that its island would subside into the sea in 100,000 years. But these scenarios may be reasonable for the interstellar travelers. They might count on island subsidence the way humans expect the sun to rise tomorrow.</p><hr><p>Buried in the deepest darkness underground, eating strange food, playing with the laws of thermodynamics and living on unrelatably long timescales, intraterrestrials have remained largely remote and aloof from humans. However, the microbes that dwell in the deep subsurface biosphere affect our lives in innumerable ways.</p><p>On a planetary scale, they play a key role in regulating Earth’s level of oxygenation. In addition, without the nutrients recycled by intraterrestrials in the seafloor, such as iron and nitrogen, phytoplankton would be severely limited in their ability to make oxygen for us. Intraterrestrials are also uniquely suited to detoxify our worst waste by breathing radioactive uranium, arsenic, organic carcinogens and other nasty stuff. So in effect, they have helped us develop as a species without poisoning ourselves.</p><p>Given how intrinsically entwined intraterrestrials are in Earth systems, they might also play an outsized role in how Earth responds to human-made climate change. Each time I climb inside a submersible and sink to the ocean floor or stick a probe into volcanic rock or drill into solid Arctic permafrost, I’m looking both backward into deep geologic history and forward into the future in search of evidence as to how great an impact intraterrestrials could have on our warming planet.</p><p>Some of the oldest permafrost in the world is in Siberia, where soils have been frozen solid for at least 1.1 million years. All signs point to the existence of living microbes there — their DNA is intact, not broken to bits like decayed body parts, and they have genes adapted to survive in the thin brine veins that run through permafrost. Much of the carbon on Earth’s surface is bound up in permafrost, so when it thaws, subsurface microbes might increase their metabolic activity, which would convert soil carbon to methane and carbon dioxide, both of which can exacerbate climate change. Almost every summer, new patches of previously frozen ground thaw, waking up new layers of microbes.&nbsp;</p><!-- Quote Block Template -->

<figure>

  <blockquote>

    <p>
      “It wasn’t until the 1980s that scientists found ‘intraterrestrials’ — microscopic organisms living in what the biogeochemist David Valentine calls a ‘microbial purgatory deep below the Earth’s surface.’”    </p>

    
    
  </blockquote>
</figure><p>Currently, about 1,600 petagrams of carbon are sequestered in permanently frozen soils in Siberia, Greenland, Canada, Alaska, Antarctica, high-altitude locations at lower latitudes and even underwater. This number is about twice the amount of carbon currently in the atmosphere. Turning it all into gas would be catastrophic.</p><p>Most global climate change scenario models do not consider the influence of permafrost intraterrestrials. It’s not that the modelers haven’t heard of permafrost microbes or that they don’t think they’re important. It’s that global climate models are not yet able to handle that level of nuance. That’s why I go out in the Arctic to struggle with flimsy drill rods in gusty winds and temperatures around -60 degrees Fahrenheit: to figure out not just how intraterrestrials withstand such harsh conditions, but also whether they are likely to contribute to our doom or perhaps take some of the sting out of climate change.</p><p>We do know that some types of microbes hold promise, a possible source of salvation. Microbes in deep aquifers and tiny rock fractures could play a role in a process called carbon capture and storage (CCS), which would remove some of the greenhouse gases from our atmosphere. Most of the excess green­house gases currently in our atmosphere came from burning fossil fuels that originated underground. CCS would return those gases underground, but for it to be successful, it has to be really deep — safely out of reach of the atmosphere for thousands of years.&nbsp;</p><p>If the subsurface were like an inert container, we could just pump that gas down there, sit back and watch the global temperature stabilize and the glaciers creep back to where they’re supposed to be. But Earth’s crust is not an empty vessel. In addition to all the chemicals in the rocks that might interact with the injected gases, mercurial intraterrestrials are also hiding in every crack and crevice.</p><p>Those microbes might suck up this extra carbon from CCS and help turn it into solid rock, making sure it stays well away from our atmosphere for a very long time. Or they might use hydrogen generated from rocks and combine it with carbon dioxide to make methane, which could escape and accelerate global warming. The science of intraterrestrials is far too young to make any clear predictions just yet.</p><hr><p>Of course, CCS becomes less critical if we are able to quickly shift away from fossil fuel to energy captured from the sun, wind, tides, temperature gradients, dams, plants and algae. And if those renewables stand a chance of one day replacing fossil fuels, their transport and storage must be flexible; flexibility requires good batteries, and good batteries need metals.</p><p>Intraterrestrials have an intimate relationship with a wide variety of metals, many of which are commercially relevant. When intraterrestrials breathe these metals, their respiration often changes the metals’ mineral forms and determines whether they stay sequestered in soil and rock or whether they leach out of it.</p><p>Currently, all the metals in the batteries that power our personal electronics (as well as the large lithium-ion batteries used for transportation and high-powered magnets for windmills, for example) are mined. However, a lot of Earth’s metals can be found in grapefruit-sized nodules at the bottom of the ocean and in metal-rich deposits near hydrothermal vents. The process by which these metals accumulate in this way is extremely slow: It takes about a million years to create a layer of metals on a nodule that is as thick as a layer of nail polish. In other words, these polymetallic nodules are not a renewable resource: If someone removed them, it would take longer than the human species has been in existence to detect a noticeable replenishment.</p><p>For decades, researchers and entrepreneurs have probed these deep-sea nodules to figure out if they could be profitably extracted. So far, it remains too expensive and difficult. In the past few years, however, precious metals have become increasingly important, drastically changing the economic calculus around deep-sea mining.</p><p>Polymetallic nodule mining at a large scale would involve ships lowering dredges the size of a couple trucks onto the seafloor, which then move along it, scooping up everything in the upper few inches. A lot of important biological and chemical processes happen in those upper layers, and nutrients from there travel to the surface ocean, stimulating photosynthesis, fueling fish populations and regulating the gases in our atmosphere.</p><p>Deep-sea mining would destroy these layers and much more. After the material dredged from the ocean floor is funneled back up to surface, polymetallic nodules will be separated from sediments that, if dumped overboard, would darken the upper ocean, harming marine animals and killing off phytoplankton, which sequesters greenhouse gases and makes the oxygen and food that support the abundant life in our oceans. Piping it back down to the seafloor would mitigate some of the harms, but there is no consensus on how deep the mining companies should go to release sediment.&nbsp;</p><!-- Quote Block Template -->

<figure>

  <blockquote>

    <p>
      “As it turns out, much of Earth’s habitable space lies deep under thousands of feet of sediments and rock.”    </p>

    
    
  </blockquote>
</figure><p>The amount of seafloor currently available for nodule exploration is more than four times larger than all the seafloor impacted by offshore oil and gas, and at least twice as large as what is currently dredged for bottom fisheries. The Clarion Clipperton Zone, where companies are currently conducting “small-scale” mining operations, is bigger than India and Pakistan combined. The entire footprint of current mining on land represents only about 3% of the area that may be covered by deep-sea mining if operations are scaled. As a result, hazards are going to pile up, with significant negative environmental consequences for the deep sea.</p><p>Polymetallic nodules are not the only targets for commercial mining in the deep sea. Polymetallic sulfides, otherwise known as hydrothermal vents, and cobalt-rich ferromanganese crusts are in the crosshairs too. Hydrothermal vents form when hot, metal-laden subsurface fluids shoot from the deep like a firehose into cold, oxygenated seawater, which forces metals in the fluids to precipitate.&nbsp;</p><p>Cobalt-rich ferromanganese crusts, by contrast, form in the areas of the seafloor where ocean currents have swept the area clean of any sediments. These currents expose basalt produced at mid-ocean spreading ridges, which can precipitate metals like cobalt, nickel, platinum, manganese, thallium and tellurium out of seawater. Both of these types of structures make good physical substrates for deep-sea mussels and clams, as well as provide metals that fuel microbial life in the ocean. Like polymetallic nodules, these ecosystems are quietly humming along at the seafloor, providing services that keep the whole ocean in proper balance.</p><p>Developing a deep-sea mining industry could wipe away towering spires of minerals built by microbial chemical reactions of deep, ancient fluids. It might destroy unknown intraterrestrials before we have a chance to discover them. Many of the geological, chemical, physical and biological pro­cesses happening right now in the deep sea — processes that have been occurring for millions or even billions of years —­ have yet to be documented. These could also be destroyed, and along with them, the life-giving functions they provide.</p><p>The deep sea is one of the least understood places on the planet. I love it because it sits at the sweet spot between mysteriousness and accessibility. But it is imperiled by growing demands for its bounty. Intraterrestrials — almost certainly the oldest life on Earth — can tell us much about how life and Earth co-evolved and the ecosystems that might carry genes or pro­cesses that are helpful for medicine or ameliorating climate change.&nbsp;</p><p>We only discovered these beings a few decades ago. So far, what we’ve learned about them is mind-blowing. And we learn more every day. Continuing to study them opens up pathways to understanding ways of living that seem completely alien to the life that exists on the surface of the Earth, as well as possibilities for existing in broader harmony with our planet.</p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Judge Rules Blanket Search of Cell Tower Data Unconstitutional (413 pts)]]></title>
            <link>https://www.404media.co/judge-rules-blanket-search-of-cell-tower-data-unconstitutional/</link>
            <guid>43730545</guid>
            <pubDate>Fri, 18 Apr 2025 18:16:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.404media.co/judge-rules-blanket-search-of-cell-tower-data-unconstitutional/">https://www.404media.co/judge-rules-blanket-search-of-cell-tower-data-unconstitutional/</a>, See on <a href="https://news.ycombinator.com/item?id=43730545">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <article>
          <div>
              
<!--kg-card-begin: html-->

<!--kg-card-end: html-->
<p><em>This article was produced in collaboration&nbsp;</em><a href="https://www.courtwatch.news/?ref=404media.co" rel="noopener noreferrer"><em>with Court Watch</em></a><em>, an independent outlet that unearths overlooked court records.&nbsp;</em><a href="https://www.courtwatch.news/?ref=404media.co" rel="noopener noreferrer"><em>Subscribe to them here</em></a><em>.</em></p><p>A judge in Nevada has ruled that “tower dumps”—the law enforcement practice of grabbing vast troves of private personal data from cell towers—is unconstitutional. The judge also ruled that the cops could, this one time, still use the evidence they obtained through this unconstitutional search.&nbsp;</p><p>Cell towers record the location of phones near them about every seven seconds. When the cops request a tower dump, they ask a telecom for the numbers and personal information of every single phone connected to a tower during a set time period. Depending on the area, these tower dumps can return tens of thousands of numbers.</p>
<!--kg-card-begin: html-->

<!--kg-card-end: html-->
<p>Cops have been able to sift through this data to solve crimes. But tower dumps are also a massive privacy violation that flies in the face of the Fourth Amendment, which protects people from unlawful search and seizure. When the cops get a tower dump they’re not just searching and seizing the data of a suspected criminal, they’re sifting through the information of everyone who was in the location.</p><p>A Nevada man, Cory Spurlock, is facing charges related to dealing marijuana and a murder-for-hire scheme. Cops used a tower dump to connect his cellphone with the location of some of the crimes he is accused of. Spurlock’s lawyers argued that the tower dump was an unconstitutional search and that the evidence obtained during it should not be. The cops got a warrant to conduct the tower dump but argued it wasn’t technically a “search” and therefore wasn’t subject to the Fourth Amendment.</p><p>U.S. District Juste Miranda M. Du rejected this argument, but wouldn’t suppress the evidence. “The Court finds that a tower dump is a search and the warrant law enforcement used to get it is a general warrant forbidden under the Fourth Amendment,” she said in a ruling filed on April 11. “That said, because the Court appears to be the first court within the Ninth Circuit to reach this conclusion and the good faith exception otherwise applies, the Court will not order any evidence suppressed.”</p><p>Du argued that the officers acted in good faith when they filed the warrant and that they didn’t know the search was unconstitutional when they conducted it. According to Du, the warrant wasn’t unconstitutional when a judge issued it.</p><p>Du’s ruling is the first time the United States Court of Appeals for the Ninth Circuit has ruled on the constitutionality of tower dumps, but this isn’t the first time a federal judge has weighed in. One in Mississippi <a href="https://www.courtwatch.news/p/exclusive-judge-rules-tower-dumps-unconstitutional?ref=404media.co"><u>came to the same conclusion</u></a> in February. A few weeks later, the Department of Justice <a href="https://www.courtwatch.news/p/exclusive-doj-to-appeal-tower-dump-ruling?ref=404media.co"><u>appealed the ruling</u></a>.</p><p>There’s a decent chance that one of these cases will wind its way up to the Supreme Court and that SCOTUS will have to make a ruling about tower dumps. The last time the issue was in front of them, they kicked the can back to the lower courts.</p><p>In 2018, the Supreme Court considered <a href="https://www.oyez.org/cases/2017/16-402?ref=404media.co"><em><u>Carpenter v. United States</u></em></a>, a case where the FBI used cell phone location data to investigate a series of robberies. The Court decided that law enforcement agencies violate the Fourth Amendment when they ask for cell phone location data without a warrant. But the ruling was narrow and the Court declined to rule on the issue of tower dumps.</p><p>According to the court records for Spurlock’s case, the tower dump that caught him captured the private data of 1,686 users. An expert who testified before the court about the dump noted that “the wireless company users whose phones showed up in the tower dump data did not opt in to sharing their location with their wireless provider, and indeed, could not opt out from appearing in the type of records received in response to [the] warrant.”</p>
<!--kg-card-begin: html-->

<!--kg-card-end: html-->

                    <div>
    <div>
      <p>About the author</p>
      <p>Matthew Gault is a writer covering weird tech, nuclear war, and video games. He’s worked for Reuters, Motherboard, and the New York Times.</p>
      
    </div>
      <p><img data-src="https://www.gravatar.com/avatar/87e07bd5bb3d003b0b135303a3e7f8b9?s=250&amp;r=x&amp;d=mp" alt="Matthew Gault" src="https://www.gravatar.com/avatar/87e07bd5bb3d003b0b135303a3e7f8b9?s=250&amp;r=x&amp;d=mp">  
      </p>
  </div>
          </div>
        </article>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I made a Doom-like game fit inside a QR code (429 pts)]]></title>
            <link>https://github.com/Kuberwastaken/backdooms</link>
            <guid>43729683</guid>
            <pubDate>Fri, 18 Apr 2025 16:40:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Kuberwastaken/backdooms">https://github.com/Kuberwastaken/backdooms</a>, See on <a href="https://news.ycombinator.com/item?id=43729683">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">The Backdooms: Running DOOM on a QR Code</h2><a id="user-content-the-backdooms-running-doom-on-a-qr-code" aria-label="Permalink: The Backdooms: Running DOOM on a QR Code" href="#the-backdooms-running-doom-on-a-qr-code"></a></p>
<p dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="https://github.com/Kuberwastaken/backdooms/blob/main/qrcode.png"><img src="https://github.com/Kuberwastaken/backdooms/raw/main/qrcode.png" alt="QR Code for The Backdooms"></a>
</p>
<p dir="auto">
    Yes, this is literally the entire game. You can <a href="https://scanqr.org/" rel="nofollow">scan it</a> to play.
</p>
<p dir="auto">
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/1fa4cef0c40c141ac0ed954ecdb8d2119b7b110a222d5feef9b9ff01e3363977/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d4b7562657277617374616b656e266d6573736167653d4261636b646f6f6d7326636f6c6f723d626c61636b266c6f676f3d676974687562"><img src="https://camo.githubusercontent.com/1fa4cef0c40c141ac0ed954ecdb8d2119b7b110a222d5feef9b9ff01e3363977/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d4b7562657277617374616b656e266d6573736167653d4261636b646f6f6d7326636f6c6f723d626c61636b266c6f676f3d676974687562" alt="Kuberwastaken - Backdooms" data-canonical-src="https://img.shields.io/static/v1?label=Kuberwastaken&amp;message=Backdooms&amp;color=black&amp;logo=github"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/90d2eb9460dae650d20e525e61ffe4973f067ee0dde23e1e5b706b5630d039e9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d31332e302d626c61636b"><img src="https://camo.githubusercontent.com/90d2eb9460dae650d20e525e61ffe4973f067ee0dde23e1e5b706b5630d039e9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d31332e302d626c61636b" alt="Version 13.0" data-canonical-src="https://img.shields.io/badge/version-13.0-black"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/56265e049c38cb332bf7419805d7c1d985832a34e869aef4801771fe9b416133/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c61636b"><img src="https://camo.githubusercontent.com/56265e049c38cb332bf7419805d7c1d985832a34e869aef4801771fe9b416133/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c61636b" alt="License MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-black"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Project Overview</h2><a id="user-content--project-overview" aria-label="Permalink: 🚀 Project Overview" href="#-project-overview"></a></p>
<p dir="auto"><strong>The Backdooms</strong> is a compressed, self-extracting and infinitely generating HTML game inspired by DOOM 1993 and The Backrooms that can be launched and played in a web browser directly from a QR code.</p>
<p dir="auto">This project was a week-long study I performed (now slightly longer) designed to push the limits of QR code storage and compression, to demonstrate an innovative method of hosting lightweight web applications entirely within a QR code.</p>
<hr>
<p dir="auto">
    <a href="https://kuberwastaken.github.io/backdooms" rel="nofollow">Play a slightly less compressed version of this game here</a>
    <br>
    <span>Yes, it's 8bit Undertale Music There</span>
</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">📜 Features</h2><a id="user-content--features" aria-label="Permalink: 📜 Features" href="#-features"></a></p>
<p dir="auto">✅ <strong>Fully Offline:</strong> No internet connection is required to play the game after scanning the QR code. The URL basically has the ENTIRE code to the game</p>
<p dir="auto">✅ <strong>Extreme Compression:</strong> Utilizes a combination of Zlib compression with Gzip Decompression stream along with base64 encoding to make the final result extremely compressed.</p>
<p dir="auto">✅ <strong>Self-Extracting Webpage:</strong> Uses the <code>DecompressionStream</code> API to dynamically decompress and execute the game within the browser.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">📦 Installation &amp; Dependencies</h2><a id="user-content--installation--dependencies" aria-label="Permalink: 📦 Installation &amp; Dependencies" href="#-installation--dependencies"></a></p>
<p dir="auto">Well, technically speaking, just a modern web browser.</p>
<p dir="auto">But if we do get into the nitty gritty of generating a QR code of a ≈ 2.5kb game:</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prerequisites</h3><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<ul dir="auto">
<li><strong>Python 3.7+</strong></li>
<li><code>qrcode</code> library (for generating QR codes)</li>
<li><code>pillow</code> (for QR code image handling)</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Install Dependencies</h3><a id="user-content-install-dependencies" aria-label="Permalink: Install Dependencies" href="#install-dependencies"></a></p>

<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">🛠️ Usage</h2><a id="user-content-️-usage" aria-label="Permalink: 🛠️ Usage" href="#️-usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">1️⃣ Convert Your Game to a QR Code</h3><a id="user-content-1️⃣-convert-your-game-to-a-qr-code" aria-label="Permalink: 1️⃣ Convert Your Game to a QR Code" href="#1️⃣-convert-your-game-to-a-qr-code"></a></p>
<p dir="auto">Run the script with the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="python3 QRGEN.py <your-game.html> <output-qrcode.png>"><pre>python3 QRGEN.py <span>&lt;</span>your-game.html<span>&gt;</span> <span>&lt;</span>output-qrcode.png<span>&gt;</span></pre></div>
<p dir="auto">Example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="python3 QRGEN.py EVEN-SMALLER-SLAMMER-BACKROOMS.html qrcode.png"><pre>python3 QRGEN.py EVEN-SMALLER-SLAMMER-BACKROOMS.html qrcode.png</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">2️⃣ Scan the QR Code</h3><a id="user-content-2️⃣-scan-the-qr-code" aria-label="Permalink: 2️⃣ Scan the QR Code" href="#2️⃣-scan-the-qr-code"></a></p>
<p dir="auto">Use a smartphone or QR scanner to open the game directly in a web browser.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">3️⃣ Play Instantly 🎮</h3><a id="user-content-3️⃣-play-instantly-" aria-label="Permalink: 3️⃣ Play Instantly 🎮" href="#3️⃣-play-instantly-"></a></p>
<p dir="auto">Enjoy <em>The Backdooms</em> without needing to download or install anything!</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔍 Technical Breakdown</h2><a id="user-content--technical-breakdown" aria-label="Permalink: 🔍 Technical Breakdown" href="#-technical-breakdown"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Compression Workflow</h3><a id="user-content-compression-workflow" aria-label="Permalink: Compression Workflow" href="#compression-workflow"></a></p>
<section data-identity="4a077bf4-deaa-438f-a48b-a67a51b6075d" data-host="https://viewscreen.githubusercontent.com" data-src="https://viewscreen.githubusercontent.com/markdown/mermaid?docs_host=https%3A%2F%2Fdocs.github.com" data-type="mermaid" aria-label="mermaid rendered output container">
  <div dir="auto" data-json="{&quot;data&quot;:&quot;flowchart TD\n    A[Read Input HTML] --&amp;gt; B[Compress with Zlib]\n    B --&amp;gt;|wbits=15| C[Base64 Encode]\n    C --&amp;gt; D[Embed in HTML Wrapper]\n    \n    subgraph browser[Browser Processing]\n        D --&amp;gt; E[DecompressionStream 'gzip']\n        E --&amp;gt; F{Format Mismatch}\n    end\n    \n    F --&amp;gt; G[Convert to Data URI]\n    G --&amp;gt; H{Fits QR Code?}\n    H --&amp;gt;|Yes| I[Generate QR]\n    H --&amp;gt;|No| J[Reduce HTML Size]\n    J --&amp;gt; A\n&quot;}" data-plain="flowchart TD
    A[Read Input HTML] --> B[Compress with Zlib]
    B -->|wbits=15| C[Base64 Encode]
    C --> D[Embed in HTML Wrapper]
    
    subgraph browser[Browser Processing]
        D --> E[DecompressionStream 'gzip']
        E --> F{Format Mismatch}
    end
    
    F --> G[Convert to Data URI]
    G --> H{Fits QR Code?}
    H -->|Yes| I[Generate QR]
    H -->|No| J[Reduce HTML Size]
    J --> A
">
      <pre lang="mermaid" aria-label="Raw mermaid code">flowchart TD
    A[Read Input HTML] --&gt; B[Compress with Zlib]
    B --&gt;|wbits=15| C[Base64 Encode]
    C --&gt; D[Embed in HTML Wrapper]
    
    subgraph browser[Browser Processing]
        D --&gt; E[DecompressionStream 'gzip']
        E --&gt; F{Format Mismatch}
    end
    
    F --&gt; G[Convert to Data URI]
    G --&gt; H{Fits QR Code?}
    H --&gt;|Yes| I[Generate QR]
    H --&gt;|No| J[Reduce HTML Size]
    J --&gt; A
</pre>
    </div>
  <span role="presentation">
    <span data-view-component="true">
      <span>Loading</span>
</span>
  </span>
</section>

<p dir="auto"><strong>Read Input HTML:</strong> The process starts by reading the given HTML content from a file or input source.</p>
<p dir="auto"><strong>Zlib Compression + GZip decompression:</strong> The HTML is compressed using Zlib and uses Decompressionstream from GZip for best compression</p>
<p dir="auto"><strong>Base64 Encoding:</strong> The compressed data is encoded in Base64, ensuring that it remains text-based and can be embedded in an HTML file safely.</p>
<p dir="auto"><strong>Embedding in HTML Wrapper:</strong> A JavaScript-based self-extracting HTML wrapper is created. This wrapper includes a DecompressionStream API function that automatically decompresses the content when opened in a browser.</p>
<p dir="auto"><strong>Data URI Conversion:</strong> The entire HTML is converted into a data:text/html;base64,... format, allowing it to be stored and shared easily without a physical file.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">QR Code Generation Logic</h3><a id="user-content-qr-code-generation-logic" aria-label="Permalink: QR Code Generation Logic" href="#qr-code-generation-logic"></a></p>
<p dir="auto">The system first tries to generate the smallest possible QR version using qr.make(fit=True), which dynamically adjusts the QR size based on content length.</p>
<p dir="auto">If the required version exceeds 40 (the QR code standard limit), it forces version 40 with fit=False.</p>
<p dir="auto">The lowest error correction level L (which allows the maximum data capacity) is used to fit as much data as possible.</p>
<p dir="auto">If the data is still too large for QR v40 with level L, the process fails, and an error is returned.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Outcome</h3><a id="user-content-outcome" aria-label="Permalink: Outcome" href="#outcome"></a></p>
<p dir="auto">If successful, a QR code is generated and displayed.</p>
<p dir="auto">If not, the process terminates with an error message indicating that the data is too large to be encoded in a QR code.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Understand the Frustration and Trial and Error</h2><a id="user-content-understand-the-frustration-and-trial-and-error" aria-label="Permalink: Understand the Frustration and Trial and Error" href="#understand-the-frustration-and-trial-and-error"></a></p>
<p dir="auto">Read about the development journey on my blog <a href="https://kuberwastaken.github.io/blog/Projects/How-I-Managed-To-Get-Doom-In-A-QR-Code" rel="nofollow">MindDump</a></p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">📜 License</h2><a id="user-content--license" aria-label="Permalink: 📜 License" href="#-license"></a></p>
<p dir="auto">This project is released under the <strong>MIT License</strong>—free to use, modify, and share.
It would make me EXTREMELY happy to see other QR games or even seeing better versions of DOOM in a QR code, given there's so little resources related to this</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">🙌 Credits</h2><a id="user-content--credits" aria-label="Permalink: 🙌 Credits" href="#-credits"></a></p>
<ul dir="auto">
<li>id Software for Developing DOOM</li>
<li>matttkc for putting this idea in my head 5 years ago</li>
<li>Toby Fox for the amazing music in Undertale, this game's GitHub hosted version uses an 8 bit version of Bonetrousle</li>
</ul>
<p dir="auto">Developed by <strong>Kuber Mehta</strong> :)</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A New ASN.1 API for Python (159 pts)]]></title>
            <link>https://blog.trailofbits.com/2025/04/18/sneak-peek-a-new-asn.1-api-for-python/</link>
            <guid>43728279</guid>
            <pubDate>Fri, 18 Apr 2025 14:11:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.trailofbits.com/2025/04/18/sneak-peek-a-new-asn.1-api-for-python/">https://blog.trailofbits.com/2025/04/18/sneak-peek-a-new-asn.1-api-for-python/</a>, See on <a href="https://news.ycombinator.com/item?id=43728279">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main role="main"><article><div><p>If you’ve ever worked with cryptography, PKI schemes, or low-level networking
in Python, you’ve likely encountered <a href="https://en.wikipedia.org/wiki/ASN.1">ASN.1</a>.
ASN.1 undergirds every TLS handshake (via <a href="https://en.wikipedia.org/wiki/X.509">X.509</a> path validation),
provides the serialization layer for core internet protocols like <a href="https://en.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol">LDAP</a>, <a href="https://en.wikipedia.org/wiki/Simple_Network_Management_Protocol">SNMP</a>,
and <a href="https://www.3gpp.org/">3GPP</a>, and generally operates as the <em>lingua franca</em> of cryptographic
primitive and protocol representation.</p><p>ASN.1’s critical role is complemented by a colorful security history:
implementations of ASN.1’s encoding rules have historically been a
rich source of
<a href="https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=asn.1">memory corruption and denial-of-service vulnerabilities</a>. Similarly,
ASN.1’s presence at the lowest layers of the internet’s protocols
makes performance and a lack of <a href="https://langsec.org/">parser differentials</a> a critical requirement.</p><p>Python has multiple excellent ASN.1 implementations (like <a href="https://pypi.org/project/pyasn1/">pyasn1</a>,
<a href="https://pypi.org/project/asn1/">asn1</a>, and
<a href="https://pypi.org/project/asn1tools/">asn1tools</a>), but these generally
fall into the latter category: being written purely in Python makes performance
a concern, and integration into a stack where other ASN.1 parsers are used
(e.g., at the X.509 layer) introduces a differential risk.</p><p>We’re changing that: with the help of funding from <a href="https://alpha-omega.dev/">Alpha-Omega</a>,
we’re building an ASN.1 API for <a href="https://cryptography.io/">PyCA Cryptography</a> that addresses
three key shortcomings in the Python ecosystem today:</p><ol><li><strong>Performance</strong>: This new API will use a <a href="https://github.com/alex/rust-asn1">pure Rust ASN.1 parser</a>,
giving us close-to-native parsing performance.</li><li><strong>Differential reduction</strong>: The parser mentioned above is already used
by <a href="https://cryptography.io/">PyCA Cryptography</a> for its X.509 APIs. This will reduce the need for
“mix and match” approaches to ASN.1 parsing, which in turn drive
differential vulnerabilities.</li><li><strong>Modernization</strong>: The new API will expose a declarative <a href="https://docs.python.org/3/library/dataclasses.html"><code>dataclasses</code></a>
style interface replete with type hints, making it familiar, idiomatic,
and compatible with type checkers.</li></ol><p>For example, an ASN.1 definition like this:</p><figure><pre tabindex="0"><code data-lang="asn.1"><span><span>Doohickies ::= SEQUENCE {
</span></span><span><span>    tschotchkes       OCTET STRING,
</span></span><span><span>    baubles           INTEGER,
</span></span><span><span>    knickknacks       UTF8String,
</span></span><span><span>    whatchamacallits  SEQUENCE OF OBJECT IDENTIFIER,
</span></span><span><span>    gizmos            SET OF GeneralizedTime OPTIONAL
</span></span><span><span>}</span></span></code></pre></figure><p>…will correspond to the following Python code:</p><figure><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> <span>datetime</span> <span>import</span> <span>datetime</span>
</span></span><span><span>
</span></span><span><span><span>from</span> <span>cryptography.hazmat</span> <span>import</span> <span>asn1</span>
</span></span><span><span>
</span></span><span><span><span>@asn1.sequence</span>
</span></span><span><span><span>class</span> <span>Doohickies</span><span>:</span>
</span></span><span><span>    <span>tschotchkes</span><span>:</span> <span>bytes</span>
</span></span><span><span>    <span>baubles</span><span>:</span> <span>int</span>
</span></span><span><span>    <span>knickknacks</span><span>:</span> <span>str</span>
</span></span><span><span>    <span>whatchamacallits</span><span>:</span> <span>list</span><span>[</span><span>asn1</span><span>.</span><span>ObjectIdentifier</span><span>]</span>
</span></span><span><span>    <span>gizmos</span><span>:</span> <span>set</span><span>[</span><span>datetime</span><span>]</span> <span>|</span> <span>None</span>
</span></span><span><span>
</span></span><span><span><span>doohickies</span> <span>=</span> <span>Doohickies</span><span>.</span><span>from_der</span><span>(</span><span>b</span><span>"..."</span><span>)</span>
</span></span><span><span><span>print</span><span>(</span><span>doohickies</span><span>.</span><span>tschotchkes</span><span>)</span>
</span></span><span><span><span>doohickies</span><span>.</span><span>to_der</span><span>()</span> <span># b"..."</span></span></span></code></pre></figure><p>This work is a logical continuation of our previous work on
<a href="https://blog.trailofbits.com/2024/01/25/we-build-x-509-chains-so-you-dont-have-to/">X.509 path validation</a>, as funded by the <a href="https://www.sovereign.tech/programs/fund">Sovereign Tech Fund</a>. It
reflects our ongoing commitment to improving the Python ecosystem, particularly
in the areas of cryptography and supply chain security.</p><p>Please <a href="mailto:ecosystem@trailofbits.com">get in touch</a> if you’re interested in learning more, or funding
similar work!</p><h2 id="some-quick-background-on-asn1">Some quick background on ASN.1</h2><p><a href="https://en.wikipedia.org/wiki/ASN.1">ASN.1</a>, or Abstract Syntax Notation One, is an <em>interface description language</em>
(IDL). That’s a fancy way of saying that it’s a syntax for describing
data structures in a language- and platform-agnostic manner.</p><p>Confusingly, ASN.1 is <strong>not itself</strong> a serialization format. Instead, it defines
<em>encoding rules</em>, which in turn define serialization and deserialization
of ASN.1 structures in different settings. In practice,
ASN.1 is synonymous<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup> with the <a href="https://en.wikipedia.org/wiki/X.690#DER_encoding">Distinguished Encoding Rules</a>, or DER.</p><figure><img src="https://blog.trailofbits.com/img/encoding-rules.png" alt="A helpful visual explanation of ASN.1’s different encoding rules"><figcaption>Figure 1: A helpful visual explanation of ASN.1's different encoding rules</figcaption></figure><p>We’ll treat “ASN.1” and “DER” as interchangeable for the purposes of this post.
Instead of delving too deeply into the intricacies of both
(<a href="https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/">Let’s Encrypt covers them excellently</a>), we’ll focus on the properties
of DER that have kept it relevant for decades:</p><ul><li><p><strong>DER is a <em>canonical</em> encoding:</strong> There’s only one way to encode a given ASN.1
structure in DER. In other words, the encoding of an ASN.1 structure in DER
is deterministic and can be round-tripped while preserving bit-for-bit
equality.</p></li><li><p><strong>DER is <em>relatively compact</em>:</strong> DER defines a binary format and, as a
consequence of being canonical, forbids non-minimal encodings of integers,
booleans, and times.</p></li><li><p><strong>DER is a <em>self-describing</em> and <em>self-delimiting</em> encoding:</strong> A given DER
message can be fully and soundly parsed without prior reference to a
schema or format description beyond the encoding rules of DER themselves.</p><p>These properties lend themselves naturally to what web developers would
call “progressive enhancement”: an application that consumes DER can
decode the specific structures it cares about while skipping the ones it
doesn’t, decoding only their length in order to jump ahead to the next one.</p></li><li><p><strong>DER supports <em>arbitrary-precision integers</em>:</strong> The <code>INTEGER</code> type in DER
is functionally unconstrained in size, which makes it suitable for
representing the kinds of large numbers that regularly appear in
cryptographic settings (e.g., primes).</p></li></ul><p>Put together, these properties make DER very popular in cryptographic,
networking, and telecommunications settings.</p><p>More precisely, it’s very popular in the guts of each of these settings:
ASN.1 is used to represent the X.509 certificates that secure the world’s TLS
traffic, is widely used with <a href="https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail#PEM_encoding">PEM-encoded</a> formats, and provides the
description and serialization for much of the internet’s lower protocol layers.</p><h2 id="motivating-an-asn1-library-for-python">Motivating an ASN.1 library for Python</h2><p>You might reasonably ask: why does Python need this?</p><p>After all, most Python developers aren’t touching ASN.1 on a daily basis, and
those that do are mostly doing so in predefined ways (such as X.509
certificates). Why does the ecosystem need <em>generic</em> support for ASN.1?</p><p>The answer to this is that, for better or worse, there are <em>many</em> situations
in which Python developers need to do ASN.1 encoding and decoding outside
of the “standard” shapes of X.509 and other well-known formats and protocols.</p><p>This can be seen in the <a href="https://sigstore.dev/">Sigstore</a> ecosystem: Sigstore is
<em>primarily</em> an ordinary <a href="https://datatracker.ietf.org/doc/html/rfc5280">RFC 5280</a>–style PKI, but it also includes some custom
<a href="https://datatracker.ietf.org/doc/html/rfc5280#section-4.2">X.509 extensions</a> for its own purposes. For example, an excerpt
of a <a href="https://search.sigstore.dev/?logIndex=147137139">Sigstore log entry</a> shows the following extensions:</p><figure><pre tabindex="0"><code data-lang="plaintext"><span><span>OIDC Issuer: https://token.actions.githubusercontent.com
</span></span><span><span>Runner Environment: github-hosted
</span></span><span><span>Source Repository URI: https://github.com/pypa/sampleproject
</span></span><span><span>Source Repository Ref: refs/heads/main
</span></span><span><span>Source Repository Owner URI: https://github.com/pypa</span></span></code></pre></figure><p>If we want to consume these from Python (e.g., for the purposes of verifying
a Sigstore certificate against a policy), we need to extract them:</p><figure><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> <span>cryptography</span> <span>import</span> <span>x509</span>
</span></span><span><span>
</span></span><span><span><span>raw_cert</span> <span>=</span> <span>b</span><span>"""
</span></span></span><span><span><span>-----BEGIN CERTIFICATE-----
</span></span></span><span><span><span>MIIGoTCCBiigAwIBAgITFai+PDKak1xA1HLq0mskqhDV5zAKBggqhkjOPQQDAzA3
</span></span></span><span><span><span>MRUwEwYDVQQKEwxzaWdzdG9yZS5kZXYxHjAcBgNVBAMTFXNpZ3N0b3JlLWludGVy
</span></span></span><span><span><span>bWVkaWF0ZTAeFw0yNDExMDYyMjM3MDdaFw0yNDExMDYyMjQ3MDdaMAAwWTATBgcq
</span></span></span><span><span><span>hkjOPQIBBggqhkjOPQMBBwNCAARbx1Fse2Ln00On5aFaL+lHNGFYLaqeKDduplZD
</span></span></span><span><span><span>PJS+w2PjYfNPL0g/n4sDWEQFZfyIExEWKulZ2GKNzAc0+SmUo4IFSDCCBUQwDgYD
</span></span></span><span><span><span>VR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBT/uSEI
</span></span></span><span><span><span>XmQzuRkppWXrTKVkfZFJbzAfBgNVHSMEGDAWgBTf0+nPViQRlvmo2OkoVaLGLhhk
</span></span></span><span><span><span>PzBhBgNVHREBAf8EVzBVhlNodHRwczovL2dpdGh1Yi5jb20vcHlwYS9zYW1wbGVw
</span></span></span><span><span><span>cm9qZWN0Ly5naXRodWIvd29ya2Zsb3dzL3JlbGVhc2UueW1sQHJlZnMvaGVhZHMv
</span></span></span><span><span><span>bWFpbjA5BgorBgEEAYO/MAEBBCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVi
</span></span></span><span><span><span>dXNlcmNvbnRlbnQuY29tMBIGCisGAQQBg78wAQIEBHB1c2gwNgYKKwYBBAGDvzAB
</span></span></span><span><span><span>AwQoNjIxZTQ5NzRjYTI1Y2U1MzE3NzNkZWY1ODZiYTNlZDhlNzM2YjNmYzAVBgor
</span></span></span><span><span><span>BgEEAYO/MAEEBAdSZWxlYXNlMCAGCisGAQQBg78wAQUEEnB5cGEvc2FtcGxlcHJv
</span></span></span><span><span><span>amVjdDAdBgorBgEEAYO/MAEGBA9yZWZzL2hlYWRzL21haW4wOwYKKwYBBAGDvzAB
</span></span></span><span><span><span>CAQtDCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29t
</span></span></span><span><span><span>MGMGCisGAQQBg78wAQkEVQxTaHR0cHM6Ly9naXRodWIuY29tL3B5cGEvc2FtcGxl
</span></span></span><span><span><span>cHJvamVjdC8uZ2l0aHViL3dvcmtmbG93cy9yZWxlYXNlLnltbEByZWZzL2hlYWRz
</span></span></span><span><span><span>L21haW4wOAYKKwYBBAGDvzABCgQqDCg2MjFlNDk3NGNhMjVjZTUzMTc3M2RlZjU4
</span></span></span><span><span><span>NmJhM2VkOGU3MzZiM2ZjMB0GCisGAQQBg78wAQsEDwwNZ2l0aHViLWhvc3RlZDA1
</span></span></span><span><span><span>BgorBgEEAYO/MAEMBCcMJWh0dHBzOi8vZ2l0aHViLmNvbS9weXBhL3NhbXBsZXBy
</span></span></span><span><span><span>b2plY3QwOAYKKwYBBAGDvzABDQQqDCg2MjFlNDk3NGNhMjVjZTUzMTc3M2RlZjU4
</span></span></span><span><span><span>NmJhM2VkOGU3MzZiM2ZjMB8GCisGAQQBg78wAQ4EEQwPcmVmcy9oZWFkcy9tYWlu
</span></span></span><span><span><span>MBgGCisGAQQBg78wAQ8ECgwIMTQ4OTk1OTYwJwYKKwYBBAGDvzABEAQZDBdodHRw
</span></span></span><span><span><span>czovL2dpdGh1Yi5jb20vcHlwYTAWBgorBgEEAYO/MAERBAgMBjY0NzAyNTBjBgor
</span></span></span><span><span><span>BgEEAYO/MAESBFUMU2h0dHBzOi8vZ2l0aHViLmNvbS9weXBhL3NhbXBsZXByb2pl
</span></span></span><span><span><span>Y3QvLmdpdGh1Yi93b3JrZmxvd3MvcmVsZWFzZS55bWxAcmVmcy9oZWFkcy9tYWlu
</span></span></span><span><span><span>MDgGCisGAQQBg78wARMEKgwoNjIxZTQ5NzRjYTI1Y2U1MzE3NzNkZWY1ODZiYTNl
</span></span></span><span><span><span>ZDhlNzM2YjNmYzAUBgorBgEEAYO/MAEUBAYMBHB1c2gwWQYKKwYBBAGDvzABFQRL
</span></span></span><span><span><span>DElodHRwczovL2dpdGh1Yi5jb20vcHlwYS9zYW1wbGVwcm9qZWN0L2FjdGlvbnMv
</span></span></span><span><span><span>cnVucy8xMTcxMzAzODk4MS9hdHRlbXB0cy8xMBYGCisGAQQBg78wARYECAwGcHVi
</span></span></span><span><span><span>bGljMIGKBgorBgEEAdZ5AgQCBHwEegB4AHYA3T0wasbHETJjGR4cmWc3AqJKXrje
</span></span></span><span><span><span>PK3/h4pygC8p7o4AAAGTA5/X5AAABAMARzBFAiA6nYK0GxqVzJutrjrYA1bAIKHU
</span></span></span><span><span><span>jGrsHMLrOJTTEUiERAIhAJZotATnSwlKt7C3Zwhx3fcSrhGfOakTlM2w+8qmltcj
</span></span></span><span><span><span>MAoGCCqGSM49BAMDA2cAMGQCMB+ilsPgy4ynUG9GtqDEBqW8+ZqjX6LpuxQqjCr7
</span></span></span><span><span><span>s4ytyt2ppFdgjrGrG1DY4nSZtQIwblrgq9t9izAMTkJeqhQBs2OUiyIJZipceD5v
</span></span></span><span><span><span>AAE/Nfgd/9uK0MZAHFsLgalqOBl8
</span></span></span><span><span><span>-----END CERTIFICATE-----
</span></span></span><span><span><span>"""</span>
</span></span><span><span>
</span></span><span><span><span>cert</span> <span>=</span> <span>x509</span><span>.</span><span>load_pem_x509_certificate</span><span>(</span><span>raw_cert</span><span>)</span>
</span></span><span><span>
</span></span><span><span><span># 1.3.6.1.4.1.57264.1.16 corresponds to Source Repository Owner URI above</span>
</span></span><span><span><span>ext</span> <span>=</span> <span>cert</span><span>.</span><span>extensions</span><span>.</span><span>get_extension_for_oid</span><span>(</span><span>x509</span><span>.</span><span>ObjectIdentifier</span><span>(</span><span>"1.3.6.1.4.1.57264.1.16"</span><span>))</span><span>.</span><span>value</span>
</span></span><span><span>
</span></span><span><span><span>ext</span><span>.</span><span>value</span> <span># =&gt; b'\x0c\x17https://github.com/pypa'</span></span></span></code></pre></figure><p>As we can see, the X.509 extension’s value is <em>itself</em> DER encoded, and
PyCA Cryptography’s APIs (rightfully) leave it up to us to interpret
it<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">2</a></sup>.</p><p>So, we need <em>some</em> kind of DER parser. Luckily, Python is a mature ecosystem,
and we can avail ourselves of <a href="https://pypi.org/project/pyasn1/"><code>pyasn1</code></a>:</p><figure><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> <span>pyasn1.codec.der.decoder</span> <span>import</span> <span>decode</span>
</span></span><span><span><span>from</span> <span>pyasn1.type.char</span> <span>import</span> <span>UTF8String</span>
</span></span><span><span>
</span></span><span><span><span>ext_value</span> <span>=</span> <span>decode</span><span>(</span><span>ext</span><span>.</span><span>value</span><span>,</span> <span>UTF8String</span><span>)[</span><span>0</span><span>]</span><span>.</span><span>decode</span><span>()</span>
</span></span><span><span>
</span></span><span><span><span>ext_value</span> <span># =&gt; 'https://github.com/pypa'</span></span></span></code></pre></figure><p>Now we have our inner extension value, and we can get on with our lives.</p><h2 id="but-why-a-_new_-library">But why a <em>new</em> library?</h2><p>But wait: if we have <a href="https://pypi.org/project/pyasn1/"><code>pyasn1</code></a>, why do we need a <em>new</em> ASN.1 library?</p><p>The answer to this is threefold, and is <em>not</em> a knock against <a href="https://pypi.org/project/pyasn1/"><code>pyasn1</code></a>
(which is an excellent library that performs its role admirably):</p><ol><li><p><strong>Performance</strong>: Python is not a fast language, and <a href="https://pypi.org/project/pyasn1/"><code>pyasn1</code></a> is written in
pure Python. The Python ecosystem has historically compensated for that by
putting performance-sensitive code in native extensions: at first C, but now
increasingly Rust. By leveraging <a href="https://github.com/alex/rust-asn1"><code>rust-asn1</code></a>, we can approach the
performance of native code without leaving the comforts of Python.</p></li><li><p><strong>Differential reduction</strong>: The ASN.1 ecosystem is notoriously
heterogenous, and implementations of ASN.1 vary widely in their conformance
to the strict requirements of DER.</p><p>In particular, many implementations have found it tempting to apply
<a href="https://en.wikipedia.org/wiki/Robustness_principle">Postel’s Law</a> to the parsing of incoming “DER” data, allowing improperly
canonicalized or outright malformed data so long as the user’s intent
can be inferred. This has had a <a href="https://alexgaynor.net/2025/mar/25/postels-law-and-the-three-ring-circus/">deleterious effect</a> on both
protocol evolution and security: protocols struggle to evolve under the
pressure of unspecified behavior, and <a href="https://langsec.org/">parser differentials</a> are a
<a href="https://github.blog/security/sign-in-as-anyone-bypassing-saml-sso-authentication-with-parser-differentials/">consistent source</a> of major security incidents.</p><p>For this reason, reducing the number of independent parsers for a single
format in a given codebase is generally a sound engineering choice.
PyCA Cryptography is already built up around <a href="https://github.com/alex/rust-asn1"><code>rust-asn1</code></a>,
so it makes sense to use the exact same parsing routines in a new ASN.1
library.</p></li><li><p><strong>Modernization</strong>: <a href="https://docs.python.org/3/library/dataclasses.html"><code>dataclasses</code></a> and <code>dataclass</code>-style declarative APIs
have taken the Python ecosystem by storm, and for good reason: they’re
uniform, integrate cleanly with type checkers<sup id="fnref:3"><a href="#fn:3" role="doc-noteref">3</a></sup>, and define
types as <em>code</em> rather than as <em>data</em>.</p><p><a href="https://pypi.org/project/pyasn1/"><code>pyasn1</code></a> has a fantastic declarative API, but that API predates
the dataclass concept and therefore needs to mix code and data to define
its types. Modernizing this API would be at least as difficult
(in our estimation) as creating a new one from <a href="https://github.com/alex/rust-asn1"><code>rust-asn1</code></a> but without
the performance and differential reduction benefits.</p></li></ol><h2 id="stay-tuned-for-more">Stay tuned for more</h2><p>This is just a sneak peek; watch this space for updates!</p><p>We’re still early in the development process for this work; our plan is as
follows:</p><ul><li>Build an initial version with support for <code>@asn1.sequence</code> and <code>@asn1.enum</code>
as the main decorators, along with support for ASN.1’s basic types
and modifiers (e.g., <code>OPTIONAL</code>, <code>DEFAULT</code>, <code>IMPLICIT</code>, and <code>EXPLICIT</code>).</li><li>Integrate this version into PyCA Cryptography, tentatively as
<code>cryptography.asn1</code> or <code>cryptography.hazmat.asn1</code> or similar, then work
on deduplicating types where possible. For example, the
<code>cryptography.x509.ObjectIdentifier</code> type is already present and should
be shared or reused across both APIs.</li><li>Get it released with a major version of PyCA Cryptography!</li></ul><p>We’d like to thank <a href="https://alpha-omega.dev/">Alpha-Omega</a> for funding this work, as well as
the <a href="https://cryptography.io/">PyCA Cryptography</a> maintainers for their support and design review.</p></div></article></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Math Lesson From Hitler’s Germany (2017) (141 pts)]]></title>
            <link>https://undark.org/2017/02/01/math-lesson-hitlers-germany/</link>
            <guid>43728130</guid>
            <pubDate>Fri, 18 Apr 2025 13:55:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://undark.org/2017/02/01/math-lesson-hitlers-germany/">https://undark.org/2017/02/01/math-lesson-hitlers-germany/</a>, See on <a href="https://news.ycombinator.com/item?id=43728130">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				
				<p><span>I</span><span>n 1934, David Hilbert</span>, by then a grand old man of German mathematics, was dining with Bernhard Rust, the Nazi minister of education. Rust asked, “How is mathematics at Göttingen, now that it is free from the Jewish influence?” Hilbert replied, “There is no mathematics in Göttingen anymore.”</p>
		<div>
																<p><img decoding="async" alt="" src="https://undark.org/wp-content/uploads/2017/02/hilbert.jpg"></p><div>
					<p>“There is no mathematics in Göttingen anymore”: the German math giant David Hilbert.</p><p><em>Visual: Shelby White and Leon Levy Archives Center, Institute for Advanced Study, Princeton, NJ, USA.</em></p>				</div>
			</div>
		
<p>Or so the story goes. It is folklore at this point, a story mathematicians tell one another over coffee while exchanging knowing looks. The details vary in different retellings, but every version has Hilbert speaking this truth to power: Nazis destroyed mathematics at the University of Göttingen. “It’s one of the most well-known stories in the history of science,” says Reinhard Siegmund-Schultze, a math historian at the University of Agder in Norway. “Göttingen was so dominant in mathematics internationally.”</p>
<p>
<a href="http://www.ams.org/notices/199510/maclane.pdf">In 1933, that dominance came crashing down</a>. On April 7, two months after Hitler became chancellor, Germany <a href="https://www.ushmm.org/learn/timeline-of-events/1933-1938/law-for-the-restoration-of-the-professional-civil-service">passed a law</a> making it illegal for Jews — or rather those considered Jewish by the Nazis — and Communists to hold civil service jobs, with a few exceptions including for people who had served Germany in World War I. That immediately forced several Göttingen mathematicians from their jobs. The crisis snowballed, and over the course of the year, a total of 18 left or were driven out.</p>
<p>By the time of Hilbert’s legendary dinner with Rust, Germany had lost its status as the world’s foremost country for mathematical research. America took its place — and today, though globalization has spread the wealth, the U.S. has retained its eminence. From <a href="http://www-history.mcs.st-andrews.ac.uk/Biographies/Bochner.html">Princeton</a> and <a href="http://www-groups.dcs.st-and.ac.uk/history/Biographies/Bers.html">Columbia</a> to <a href="http://www-history.mcs.st-and.ac.uk/Biographies/Tarski.html">Berkeley</a> and <a href="http://www-history.mcs.st-and.ac.uk/Biographies/Szego.html">Stanford</a>, it’s hard to find a great math department in the United States that was not <a href="http://www.ams.org/samplings/math-history/hmath1-bers16.pdf">shaped in part by European mathematicians</a> who came to or stayed in the U.S. because of the Nazis.</p>
<p>As a new administration with a pronounced anti-science bent takes power in the United States, some scholars are recalling what happened at Göttingen as a cautionary tale. Donald Trump is not Hitler, of course, and “history doesn’t repeat,” as Siegmund-Schultze puts it. Still, he quickly adds, “One also knows from pain that mankind doesn’t really learn from history. Otherwise we wouldn’t do all the same foolish things all the time.”</p>
<p>American democracy is far stronger and longer-lived than was Germany’s between the wars. But we should take the similarities seriously. “I think what you see in both cases is this disaffection of the lower middle class,” says Julia Ault, an expert on German history at the University of Utah. “Part of their status rests on being better than someone else.” Lower-middle-class Germans in 1930 might have felt a loss of status if they perceived Jews to be advancing more quickly than they were. Ault sees a parallel to what some white people in rural America feel: They perceive immigrants as coming in and rising more quickly than they are.</p>
<p>Rather than a drastic Nazi-style crackdown on free speech, what is alarming many scholars today is the idea of a <a href="https://en.oxforddictionaries.com/word-of-the-year/word-of-the-year-2016">post-truth world</a>, in which <a href="http://www.nbcnews.com/meet-the-press/wh-spokesman-gave-alternative-facts-inauguration-crowd-n710466">evidence doesn’t matter</a> if a story reinforces your beliefs.</p>
<p>“In some sense every scholar is at risk,” says Robbert Dijkgraaf, the current director of the Institute for Advanced Study, which attracted many of the scientists and mathematicians who fled Göttingen and other German universities in the 1930s. “It’s not so much that people are persecuted because of their beliefs, but there is a certain trend where careful reasoning, the search for truth, all the delicacies of having a balanced point of view, acting on facts, being honest about what you do and don’t know, your uncertainty, all these values we have in science and scholarship are at risk.”</p>
<p>The dismissal of experts and the appeals to populism are dangerous, says Ault. “It’s going to be hugely devastating to the EPA, to climate science.” Trump, who <a href="http://www.vox.com/energy-and-environment/2017/1/18/14313126/trump-pruitt-climate-hoax-lukewarmism">has called climate change a Chinese hoax</a>, has asked for the names of scientists who study global warming. His transition team <a href="https://www.washingtonpost.com/news/energy-environment/wp/2016/12/14/trump-transition-says-request-for-names-of-climate-scientists-was-not-authorized/?utm_term=.73b3c602f5b6">backpedaled on the request</a>, but it was <a href="http://www.npr.org/sections/thetwo-way/2016/12/13/505440178/department-of-energy-defies-trump-wont-name-climate-change-workers">unsettling for employees</a> of the Department of Energy. More recently, it was reported that his administration <a href="https://www.bostonglobe.com/news/politics/2017/01/24/trump-bans-epa-employees-from-updating-public-via-press-social-media/Anr90pkwhavC2kzK8pwsyK/story.html">issued</a> a temporary ban on external communication from the EPA and blocked the agency from awarding new grants or contracts. “It’s going to take most of our lifetimes to redo what’s going to get undone in the next four years,” Ault says. And for that reason, the political cataclysm that upended the mathematical world in the 1930s is no mere historical curiosity.</p>

		<div>
																									<div>
																																					<p><img decoding="auto" src="https://undark.org/wp-content/uploads/2017/02/Weyl-portrait-reading.jpg"></p><p>
										Left, Hermann Weyl, Hilbert’s successor at Göttingen and one of the German émigrés who helped build the Institute for Advanced Study.
																					<em>Visual: Shelby White and Leon Levy Archives Center, Institute for Advanced Study, Princeton, NJ, USA.</em>																			</p>
								
															</div>
																															<div>
																																					<p><img decoding="auto" src="https://undark.org/wp-content/uploads/2017/02/A-Flexner-B-color-300-dpi.jpg"></p><p>
										Right, Abraham Flexner, a founder and guiding spirit of the institute.
																					<em>Visual: Shelby White and Leon Levy Archives Center, Institute for Advanced Study, Princeton, NJ, USA.</em>																			</p>
								
															</div>
															</div>

		
<p>Carl Friedrich Gauss, one of the greatest mathematicians of all time, helped establish Göttingen’s prominence in the early to mid-19th century. The tradition was continued by a legion of people whose names are sprinkled throughout calculus and physics textbooks today: Riemann, Dirichlet, Schwarz, Klein, Minkowski, Landau, Noether, and Hilbert, who had to a large extent set the mathematical research agenda of the 20th century with his <a href="http://aleph0.clarku.edu/~djoyce/hilbert/">1900 list of 23 unsolved problems</a> he thought mathematicians should devote themselves to in the new century. Richard Courant, who was part of the 1933 flood of mathematicians leaving Göttingen and for whom a <a href="http://cims.nyu.edu/about/history.html">New York University institute of mathematical sciences is now named</a>, helped secure funding from the Rockefeller Foundation for a new building to house the mathematics institute at Göttingen. It opened in 1929, and for the next few years, mathematics in Göttingen continued to thrive.</p>
<p>Providentially, the institution that would in many ways take Göttingen’s place — as a home not just for world-class mathematicians but for German Jewish ones — was being born at just that moment, in Princeton, New Jersey.</p>
<p>The Institute for Advanced Study, known to mathematicians and scientists simply as “the institute,” <a href="https://www.ias.edu/about/mission-history">was founded in 1930</a> by the Bamberger family, who had sold their department store to Macy’s shortly before the stock market crash in 1929 and had thus managed to prosper through the Great Depression. At the time, many American <a href="http://www.newyorker.com/magazine/2005/10/10/getting-in">institutions of higher education were anti-Semitic</a>, and the Bambergers’ initial vision was to create a medical school that did not discriminate against Jews. Instead, Abraham Flexner, who had studied and written about medical and higher education, convinced them that an institute dedicated to basic research in mathematics and science was more important. He ended up joining them as a founder.</p>
<p>The institute opened in 1933 and was housed in Princeton University’s Fine Hall, home of its mathematics department, until the institute’s own facilities opened in 1939. (This has led to decades of <a href="https://www.ias.edu/about/faqs">confusion</a> about the institute’s relationship with Princeton. They are in the same town, but they have no formal affiliation.) The timing could not have been better for the German Jews whose jobs at home had been abolished. Flexner and the trustees decided, with the help of the Rockefeller Foundation, to create positions for exiled researchers at the institute.</p>
<p>It wasn’t an easy sell. American anti-Semitism was not the only issue; unemployment was high, and <a href="http://www.ams.org/samplings/math-history/hmath1-reingold13.pdf">some believed that</a> “every foreign scholar imported means an American out of a job,” as the MIT mathematics professor Norbert Wiener described it. He feared that “any appointment for more than a year would cause a feeling of resentment that would wreck our hopes of doing anything whatsoever.” Dijkgraaf, the IAS’s current director, says the institute had to walk a fine line. “All these efforts had to be done in a very subtle way,” he says. For one, each grant was fairly modest. But by getting a position at the institute, even a temporary one, a researcher “could at least get a visa and would have a foothold” as they worked to find jobs elsewhere in the U.S., says Dijkgraaf. “There was this joke that the institute was a little bit like an Ellis Island for these scholars at risk.”</p>
<p>In a 1939 report to the Institute for Advanced Study trustees, Flexner wrote, “Fifty years from now the historian looking backward will, if we act with courage and imagination, report that during our time the center of gravity in scholarship moved across the Atlantic to the United States.” And he was right. “In the end America profited hugely,” says Siegmund-Schultze, who adds that “many of these developments would have happened anyway even without the Nazis.” After all, America had more resources, the population was growing, and the nation was starting to replace private financing for the fundamental sciences with public financing — a large part of the reason the U.S. was able to retain its mathematical and scientific dominance after World War II. Nevertheless, America’s willingness to take in scholars fleeing the Nazis provided a boost to its rising scientific establishment and caused the balance of power to shift almost overnight.</p>
<p>“We now think of it as a given that the United States is a center of research and scholarship,” Dijkgraaf says. “It wasn’t at all in the 1930s. It was this brave act and this generosity that allowed this to happen.”</p>
<p>Albert Einstein is the most famous émigré scientist who ended up at the institute as a result of that generosity. Other luminaries included John von Neumann, a Hungarian mathematician, computer scientist, and physicist who worked on the Manhattan Project; Hermann Weyl, who had been Hilbert’s successor at Göttingen; and Kurt Gödel, who <a href="http://nautil.us/issue/2/uncertainty/the-deepest-uncertainty">changed the way mathematicians think about certainty</a>.</p>
<p>As that star-studded list suggests, taking in these refugees was not simply an act of generosity. Oswald Veblen, who had been influential in getting the institute to Princeton in the first place and had become one of the first scholars at the institute, “had a very clear vision that this was a win-win situation,” says Dijkgraaf. “He could help the refugees, but it was also a unique opportunity to strengthen mathematics in the United States.”</p>

		<div>
																																					<p><img decoding="auto" src="https://undark.org/wp-content/uploads/2017/02/Neumann-MS-final-1.jpg"></p><p>
										John von Neumann, who worked at Göttingen in the 1920s, became a pillar of the Institute for Advanced Study. He annotated this manuscript for publication. (From the institute’s Box 35, File: von Neumann, John: Publication of Collected Works.)
																			</p>
								
															</div>

		
<p>Institutions are fragile. They are easier to destroy than build. A few months of Hitler’s policies unraveled two centuries of mathematical progress in Göttingen. That university, and Germany more broadly, never fully recovered. As von Neumann correctly <a href="https://global.britannica.com/biography/John-von-Neumann">predicted</a> in 1933, “If these boys continue for only two more years (which is unfortunately very probable) they will ruin German science for a generation — at least.”</p>
<p>America benefited hugely from the intellects of displaced mathematicians and scientists 80 years ago. And while America’s scientific institutions are not facing the same sudden existential threat Göttingen did in April 1933, their work and their scholars can still be seriously undercut by anti-science and anti-intellectual policies. It would be a tragic irony if American mathematics and science, which owe much of their status and success to the German prejudices of another era, were brought low by a kindred set of attitudes in this one.</p>
<p><em>Evelyn Lamb is a writer based in Salt Lake City. She taught mathematics and math history at the college level before leaving academia to pursue writing full time. She was AAAS mass media fellow at Scientific American in 2012 and has written for outlets including Scientific American, Nature News, the Smithsonian Magazine website, and Slate.</em></p>

							</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Less Slow C++ (186 pts)]]></title>
            <link>https://github.com/ashvardanian/less_slow.cpp</link>
            <guid>43727743</guid>
            <pubDate>Fri, 18 Apr 2025 13:09:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ashvardanian/less_slow.cpp">https://github.com/ashvardanian/less_slow.cpp</a>, See on <a href="https://news.ycombinator.com/item?id=43727743">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Learning to Write <em>Less Slow</em> C, C++, and Assembly Code</h2><a id="user-content-learning-to-write-less-slow-c-c-and-assembly-code" aria-label="Permalink: Learning to Write Less Slow C, C++, and Assembly Code" href="#learning-to-write-less-slow-c-c-and-assembly-code"></a></p>
<blockquote>
<p dir="auto">The benchmarks in this repository don't aim to cover every topic entirely, but they help form a mindset and intuition for performance-oriented software design.
It also provides an example of using some non-<a href="https://en.wikipedia.org/wiki/Standard_Template_Library" rel="nofollow">STL</a> but de facto standard libraries in C++, importing them via CMake, and compiling from source.
For higher-level abstractions and languages, check out <a href="https://github.com/ashvardanian/less_slow.rs"><code>less_slow.rs</code></a> and <a href="https://github.com/ashvardanian/less_slow.py"><code>less_slow.py</code></a>.</p>
</blockquote>
<p dir="auto">Much modern code suffers from common pitfalls, such as bugs, security vulnerabilities, and <strong>performance bottlenecks</strong>.
University curricula often teach outdated concepts, while bootcamps oversimplify crucial software development principles.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ashvardanian/ashvardanian/blob/master/repositories/less_slow.cpp.jpg?raw=true"><img src="https://github.com/ashvardanian/ashvardanian/raw/master/repositories/less_slow.cpp.jpg?raw=true" alt="Less Slow C++"></a></p>
<p dir="auto">This repository offers practical examples of writing efficient C and C++ code.
It leverages C++20 features and is designed primarily for GCC and Clang compilers on Linux, though it may work on other platforms.
The topics range from basic micro-kernels executing in a few nanoseconds to more complex constructs involving parallel algorithms, coroutines, and polymorphism.
Some of the highlights include:</p>
<ul dir="auto">
<li><strong>100x cheaper random inputs?!</strong> Discover how input generation sometimes costs more than the algorithm.</li>
<li><strong>40x faster trigonometry:</strong> Speed-up standard library functions like <a href="https://en.cppreference.com/w/cpp/numeric/math/sin" rel="nofollow"><code>std::sin</code></a> in just 3 lines of code.</li>
<li><strong>4x faster lazy-logic</strong> with custom <a href="https://en.cppreference.com/w/cpp/ranges" rel="nofollow"><code>std::ranges</code></a> and iterators!</li>
<li><strong>Compiler optimizations beyond <code>-O3</code>:</strong> Learn about less obvious flags and techniques for another 2x speedup.</li>
<li><strong>Multiplying matrices?</strong> Check how a 3x3x3 GEMM can be 70% slower than 4x4x4, despite 60% fewer ops.</li>
<li><strong>Scaling AI?</strong> Measure the gap between theoretical <a href="https://en.wikipedia.org/wiki/Arithmetic_logic_unit" rel="nofollow">ALU</a> throughput and your <a href="https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms" rel="nofollow">BLAS</a>.</li>
<li><strong>How many if conditions are too many?</strong> Test your CPU's branch predictor with just 10 lines of code.</li>
<li><strong>Prefer recursion to iteration?</strong> Measure the depth at which your algorithm with <a href="https://en.wikipedia.org/wiki/Segmentation_fault" rel="nofollow"><code>SEGFAULT</code></a>.</li>
<li><strong>Why avoid exceptions?</strong> Take <code>std::error_code</code> or <a href="https://en.cppreference.com/w/cpp/utility/variant" rel="nofollow"><code>std::variant</code></a>-like wrappers?</li>
<li><strong>Scaling to many cores?</strong> Learn how to use <a href="https://en.wikipedia.org/wiki/OpenMP" rel="nofollow">OpenMP</a>, Intel's oneTBB, or your custom thread pool.</li>
<li><strong>How to handle <a href="https://www.json.org/json-en.html" rel="nofollow">JSON</a> avoiding memory allocations?</strong> Is it easier with C++ 20 or old-school C 99 tools?</li>
<li><strong>How to properly use STL's associative containers</strong> with custom keys and transparent comparators?</li>
<li><strong>How to beat a hand-written parser</strong> with <a href="https://en.cppreference.com/w/cpp/language/consteval" rel="nofollow"><code>consteval</code></a> RegEx engines?</li>
<li><strong>Is the pointer size really 64 bits</strong> and how to exploit <a href="https://en.wikipedia.org/wiki/Tagged_pointer" rel="nofollow">pointer-tagging</a>?</li>
<li><strong>How many packets is <a href="https://www.cloudflare.com/learning/ddos/glossary/user-datagram-protocol-udp/" rel="nofollow">UDP</a> dropping</strong> and how to serve web requests in <a href="https://en.wikipedia.org/wiki/Io_uring" rel="nofollow"><code>io_uring</code></a> from user-space?</li>
<li><strong>Scatter and Gather</strong> for 50% faster vectorized disjoint memory operations.</li>
<li><strong>Intel's oneAPI vs Nvidia's CCCL?</strong> What's so special about <code>&lt;thrust&gt;</code> and <code>&lt;cub&gt;</code>?</li>
<li><strong>CUDA C++, <a href="https://en.wikipedia.org/wiki/Parallel_Thread_Execution" rel="nofollow">PTX</a> Intermediate Representations, and SASS</strong>, and how do they differ from CPU code?</li>
<li><strong>How to choose between intrinsics, inline <code>asm</code>, and separate <code>.S</code> files</strong> for your performance-critical code?</li>
<li><strong>Tensor Cores &amp; Memory</strong> differences on CPUs, and Volta, Ampere, Hopper, and Blackwell GPUs!</li>
<li><strong>How coding FPGA differs from GPU</strong> and what is High-Level Synthesis, Verilog, and VHDL? 🔜 #36</li>
<li><strong>What are Encrypted Enclaves</strong> and what's the latency of Intel SGX, AMD SEV, and ARM Realm? 🔜 #31</li>
</ul>
<p dir="auto">To read, jump to the <a href="https://github.com/ashvardanian/less_slow.cpp/blob/main/less_slow.cpp"><code>less_slow.cpp</code> source file</a> and read the code snippets and comments.
Follow the instructions below to run the code in your environment and compare it to the comments as you read through the source.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Running the Benchmarks</h2><a id="user-content-running-the-benchmarks" aria-label="Permalink: Running the Benchmarks" href="#running-the-benchmarks"></a></p>
<p dir="auto">The project aims to be compatible with GCC, Clang, and MSVC compilers on Linux, MacOS, and Windows.
That said, to cover the broadest functionality, using GCC on Linux is recommended:</p>
<ul dir="auto">
<li>If you are on Windows, it's recommended that you set up a Linux environment using <a href="https://docs.microsoft.com/en-us/windows/wsl/install" rel="nofollow">WSL</a>.</li>
<li>If you are on MacOS, consider using the non-native distribution of Clang from <a href="https://brew.sh/" rel="nofollow">Homebrew</a> or <a href="https://www.macports.org/" rel="nofollow">MacPorts</a>.</li>
<li>If you are on Linux, make sure to install CMake and a recent version of GCC or Clang compilers to support C++20 features.</li>
</ul>
<p dir="auto">If you are familiar with C++ and want to review code and measurements as you read, you can clone the repository and execute the following commands.</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/ashvardanian/less_slow.cpp.git # Clone the repository
cd less_slow.cpp                                            # Change the directory

pip install cmake --upgrade                                 # PyPI has a newer version of CMake
sudo apt-get install -y build-essential g++                 # Install default build tools
sudo apt-get install -y pkg-config liburing-dev             # Install liburing for kernel-bypass
sudo apt-get install -y libopenblas-base                    # Install numerics libraries

cmake -B build_release -D CMAKE_BUILD_TYPE=Release          # Generate the build files
cmake --build build_release --config Release                # Build the project
build_release/less_slow                                     # Run the benchmarks"><pre>git clone https://github.com/ashvardanian/less_slow.cpp.git <span><span>#</span> Clone the repository</span>
<span>cd</span> less_slow.cpp                                            <span><span>#</span> Change the directory</span>

pip install cmake --upgrade                                 <span><span>#</span> PyPI has a newer version of CMake</span>
sudo apt-get install -y build-essential g++                 <span><span>#</span> Install default build tools</span>
sudo apt-get install -y pkg-config liburing-dev             <span><span>#</span> Install liburing for kernel-bypass</span>
sudo apt-get install -y libopenblas-base                    <span><span>#</span> Install numerics libraries</span>

cmake -B build_release -D CMAKE_BUILD_TYPE=Release          <span><span>#</span> Generate the build files</span>
cmake --build build_release --config Release                <span><span>#</span> Build the project</span>
build_release/less_slow                                     <span><span>#</span> Run the benchmarks</span></pre></div>
<p dir="auto">The build will pull and compile several third-party dependencies from the source:</p>
<ul dir="auto">
<li>Google's <a href="https://github.com/google/benchmark">Benchmark</a> is used for profiling.</li>
<li>Intel's <a href="https://github.com/uxlfoundation/oneTBB">oneTBB</a> is used as the Parallel STL backend.</li>
<li>Meta's <a href="https://github.com/facebookexperimental/libunifex">libunifex</a> is used for senders &amp; executors.</li>
<li>Eric Niebler's <a href="https://github.com/ericniebler/range-v3">range-v3</a> replaces <code>std::ranges</code>.</li>
<li>Victor Zverovich's <a href="https://github.com/fmtlib/fmt">fmt</a> replaces <code>std::format</code>.</li>
<li>Ash Vardanian's <a href="https://github.com/ashvardanian/stringzilla">StringZilla</a> replaces <code>std::string</code>.</li>
<li>Hana Dusíková's <a href="https://github.com/hanickadot/compile-time-regular-expressions">CTRE</a> replaces <code>std::regex</code>.</li>
<li>Niels Lohmann's <a href="https://github.com/nlohmann/json">json</a> is used for JSON deserialization.</li>
<li>Yaoyuan Guo's <a href="https://github.com/ibireme/yyjson">yyjson</a> for faster JSON processing.</li>
<li>Google's <a href="https://github.com/abseil/abseil-cpp">Abseil</a> replaces STL's associative containers.</li>
<li>Lewis Baker's <a href="https://github.com/lewissbaker/cppcoro">cppcoro</a> implements C++20 coroutines.</li>
<li>Jens Axboe's <a href="https://github.com/axboe/liburing">liburing</a> to simplify Linux kernel-bypass.</li>
<li>Chris Kohlhoff's <a href="https://github.com/chriskohlhoff/asio">ASIO</a> as a <a href="https://en.cppreference.com/w/cpp/experimental/networking" rel="nofollow">networking TS</a> extension.</li>
<li>Nvidia's <a href="https://github.com/nvidia/cccl">CCCL</a> for GPU-accelerated algorithms.</li>
<li>Nvidia's <a href="https://github.com/nvidia/cutlass">CUTLASS</a> for GPU-accelerated Linear Algebra.</li>
</ul>
<p dir="auto">To control the output or run specific benchmarks, use the following flags:</p>
<div dir="auto" data-snippet-clipboard-copy-content="build_release/less_slow --benchmark_format=json             # Output in JSON format
build_release/less_slow --benchmark_out=results.json        # Save the results to a file instead of `stdout`
build_release/less_slow --benchmark_filter=std_sort         # Run only benchmarks containing `std_sort` in their name"><pre>build_release/less_slow --benchmark_format=json             <span><span>#</span> Output in JSON format</span>
build_release/less_slow --benchmark_out=results.json        <span><span>#</span> Save the results to a file instead of `stdout`</span>
build_release/less_slow --benchmark_filter=std_sort         <span><span>#</span> Run only benchmarks containing `std_sort` in their name</span></pre></div>
<p dir="auto">To enhance stability and reproducibility, disable Simultaneous Multi-Threading <strong>(SMT)</strong> on your CPU and use the <code>--benchmark_enable_random_interleaving=true</code> flag, which shuffles and interleaves benchmarks as described <a href="https://github.com/google/benchmark/blob/main/docs/random_interleaving.md">here</a>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="build_release/less_slow --benchmark_enable_random_interleaving=true"><pre>build_release/less_slow --benchmark_enable_random_interleaving=true</pre></div>
<p dir="auto">Google Benchmark supports <a href="https://github.com/google/benchmark/blob/main/docs/perf_counters.md">User-Requested Performance Counters</a> through <code>libpmf</code>.
Note that collecting these may require <code>sudo</code> privileges.</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo build_release/less_slow --benchmark_enable_random_interleaving=true --benchmark_format=json --benchmark_perf_counters=&quot;CYCLES,INSTRUCTIONS&quot;"><pre>sudo build_release/less_slow --benchmark_enable_random_interleaving=true --benchmark_format=json --benchmark_perf_counters=<span><span>"</span>CYCLES,INSTRUCTIONS<span>"</span></span></pre></div>
<p dir="auto">Alternatively, use the Linux <code>perf</code> tool for performance counter collection:</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo perf stat taskset 0xEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFF build_release/less_slow --benchmark_enable_random_interleaving=true --benchmark_filter=super_sort"><pre>sudo perf stat taskset 0xEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFF build_release/less_slow --benchmark_enable_random_interleaving=true --benchmark_filter=super_sort</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Project Structure</h2><a id="user-content-project-structure" aria-label="Permalink: Project Structure" href="#project-structure"></a></p>
<p dir="auto">The primary file of this repository is clearly the <code>less_slow.cpp</code> C++ file with CPU-side code.
Several other files for different hardware-specific optimizations are created:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ tree .
.
├── CMakeLists.txt          # Build &amp; assembly instructions for all files
├── less_slow.cpp           # Primary CPU-side benchmarking code with the majority of examples
├── less_slow_amd64.S       # Hand-written Assembly kernels for 64-bit x86 CPUs
├── less_slow_aarch64.S     # Hand-written Assembly kernels for 64-bit Arm CPUs
├── less_slow.cu            # CUDA C++ examples for parallel algorithms for Nvidia GPUs
├── less_slow_sm70.ptx      # Hand-written PTX IR kernels for Nvidia Volta GPUs
└── less_slow_sm90a.ptx     # Hand-written PTX IR kernels for Nvidia Hopper GPUs"><pre>$ tree <span>.</span>
<span>.</span>
├── CMakeLists.txt          <span><span>#</span> Build &amp; assembly instructions for all files</span>
├── less_slow.cpp           <span><span>#</span> Primary CPU-side benchmarking code with the majority of examples</span>
├── less_slow_amd64.S       <span><span>#</span> Hand-written Assembly kernels for 64-bit x86 CPUs</span>
├── less_slow_aarch64.S     <span><span>#</span> Hand-written Assembly kernels for 64-bit Arm CPUs</span>
├── less_slow.cu            <span><span>#</span> CUDA C++ examples for parallel algorithms for Nvidia GPUs</span>
├── less_slow_sm70.ptx      <span><span>#</span> Hand-written PTX IR kernels for Nvidia Volta GPUs</span>
└── less_slow_sm90a.ptx     <span><span>#</span> Hand-written PTX IR kernels for Nvidia Hopper GPUs</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Memes and References</h2><a id="user-content-memes-and-references" aria-label="Permalink: Memes and References" href="#memes-and-references"></a></p>
<p dir="auto">Educational content without memes?!
Come on!</p>
<markdown-accessiblity-table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Google Benchmark Functionality</h2><a id="user-content-google-benchmark-functionality" aria-label="Permalink: Google Benchmark Functionality" href="#google-benchmark-functionality"></a></p>
<p dir="auto">This benchmark suite uses most of the features provided by Google Benchmark.
If you write a lot of benchmarks and avoid going to the full <a href="https://github.com/google/benchmark/blob/main/docs/user_guide.md">User Guide</a>, here is a condensed list of the most useful features:</p>
<ul dir="auto">
<li><code>-&gt;Args({x, y})</code> - Pass multiple arguments to parameterized benchmarks</li>
<li><code>BENCHMARK()</code> - Register a basic benchmark function</li>
<li><code>BENCHMARK_CAPTURE()</code> - Create variants of benchmarks with different captured values</li>
<li><code>Counter::kAvgThreads</code> - Specify thread-averaged counters</li>
<li><code>DoNotOptimize()</code> - Prevent compiler from optimizing away operations</li>
<li><code>ClobberMemory()</code> - Force memory synchronization</li>
<li><code>-&gt;Complexity(oNLogN)</code> - Specify and validate algorithmic complexity</li>
<li><code>-&gt;SetComplexityN(n)</code> - Set input size for complexity calculations</li>
<li><code>-&gt;ComputeStatistics("max", ...)</code> - Calculate custom statistics across runs</li>
<li><code>-&gt;Iterations(n)</code> - Control exact number of iterations</li>
<li><code>-&gt;MinTime(n)</code> - Set minimum benchmark duration</li>
<li><code>-&gt;MinWarmUpTime(n)</code> - To warm up the data caches</li>
<li><code>-&gt;Name("...")</code> - Assign custom benchmark names</li>
<li><code>-&gt;Range(start, end)</code> - Profile for a range of input sizes</li>
<li><code>-&gt;RangeMultiplier(n)</code> - Set multiplier between range values</li>
<li><code>-&gt;ReportAggregatesOnly()</code> - Show only aggregated statistics</li>
<li><code>state.counters["name"]</code> - Create custom performance counters</li>
<li><code>state.PauseTiming()</code>, <code>ResumeTiming()</code> - Control timing measurement</li>
<li><code>state.SetBytesProcessed(n)</code> - Record number of bytes processed</li>
<li><code>state.SkipWithError()</code> - Skip benchmark with error message</li>
<li><code>-&gt;Threads(n)</code> - Run benchmark with specified number of threads</li>
<li><code>-&gt;Unit(kMicrosecond)</code> - Set time unit for reporting</li>
<li><code>-&gt;UseRealTime()</code> - Measure real time instead of CPU time</li>
<li><code>-&gt;UseManualTime()</code> - To feed custom timings for GPU and IO benchmarks</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[IBM orders US sales to locate near customers, RTO for cloud staff, DEI purge (202 pts)]]></title>
            <link>https://www.theregister.com/2025/04/18/ibm_orders_us_sales_staff/</link>
            <guid>43727727</guid>
            <pubDate>Fri, 18 Apr 2025 13:08:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2025/04/18/ibm_orders_us_sales_staff/">https://www.theregister.com/2025/04/18/ibm_orders_us_sales_staff/</a>, See on <a href="https://news.ycombinator.com/item?id=43727727">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p><span>Exclusive</span> IBM, which employees wryly or ruefully say stands for I've Been Moved, is once again moving its employees.</p>
<p>On Tuesday, Big Blue shared new rules on where it expects its US sales staff to work: At least three days a week at a client, a flagship office, or a sales hub.</p>
<p>And the mainframe giant last week told all US Cloud employees, sales or otherwise, to return to the office at least three days per week at designated "strategic" locations.</p>

    

<p>Several current and former IBM employees who have spoken to <em>The Register</em> about IBM's work directives argue that these policies represent stealth layoffs because older (and presumably more highly compensated) employees tend to be less willing to uproot their lives, and families where applicable, than the "early professional hires" IBM has been courting <a target="_blank" href="https://www.theregister.com/2022/02/14/ibm_age_discrimination_court_documents/">at some legal risk</a>.</p>
<h3>US sales RTO – sorry, RTC</h3>
<p>In a staff memo seen by <em>The Register</em>, Adam Lawrence, general manager for IBM Americas, billed the return-to-office for most stateside sales personnel as a "return to client initiative."</p>
<p>Citing how "remarkable it is when our teams work side by side" at IBM's swanky Manhattan flagship office, <a target="_blank" rel="nofollow" href="https://newsroom.ibm.com/2024-09-06-ibm-unveils-new-flagship-office-at-one-madison-avenue-in-new-york-city">unveiled</a> in September 2024, Lawrence added IBM is investing in an Austin, Texas, office to be occupied in 2026.</p>

        


        

<p>Whether US sales staff end up working in NYC, Austin, or some other authorized location, Lawrence told them to brace for – deep breath – IBM's "new model" of "effective talent acquisition, deployment, and career progression." We're told that model is "centered on client proximity for those dedicated to specific clients, and anchored on core IBM locations for those dedicated to territories or those in above-market leadership roles."</p>
<p>The program requires most IBM US sales staff "to work at least three days a week from the client location where their assigned territory decision-makers work, a flagship office, or a sales hub." Those residing more than 50 miles from their assigned location will be offered relocation benefits to move. Sales hubs are an option only for those with more than one dedicated account.</p>

        

<p>IBM presently has five flagship offices for this purpose, one of each in: New York, Austin, Raleigh, Washington DC, and the San Francisco Bay Area. It also has eight sales hubs: Atlanta, Georgia; Boston, Massachusetts; Charlotte, North Carolina; Chicago, Illinois; Columbus, Ohio; Dallas, Texas; Los Angeles, California; and Seattle, Washington. Additional sales hubs may be added later.</p>
<p>Lawrence said Dallas-based workers involved with the Digital Sales center at that location will be moved to Austin in 2026.</p>
<p>The "return to client initiative" applies to sales people associated with US Enterprise, Strategic, and Horizon clients' sites. Those serving US National market territories, Canada, Latin America, US Federal markets, Technology Expert Labs Delivery, Web Methods, and Software Migration Project Office sellers are exempt.</p>

        

<p>By early May, managers are expected to discuss arrangements with team members; team member colocation decisions are due by early June.</p>
<p>As we <a target="_blank" href="https://www.theregister.com/2025/02/20/ibm_colocation_program_described_as/">reported</a> in February, IBM in 2024 began rolling out a co-location/return to office plan that started with managers and has now reached the corporation's broader workforce. Co-location expands on return to office directives by insisting that teams operate out of the same location – it's not enough to work out of any IBM office – and by requiring some workers who have never worked from an office to begin doing so.</p>
<ul>

<li><a href="https://www.theregister.com/2025/04/11/ibm_shareholders_asked_to_back/">IBM shareholders asked to back greater lobbying transparency</a></li>

<li><a href="https://www.theregister.com/2025/04/04/appeals_court_revives_ibm_lawsuit/">Appeals court revives lawsuit alleging IBM bilked pensioners</a></li>

<li><a href="https://www.theregister.com/2025/03/27/ibm_cuts_jobs_in_us/">IBM US cuts may run deeper than feared ‒ and the jobs are heading to India</a></li>

<li><a href="https://www.theregister.com/2025/03/20/ibm_cuts_us_jobs/">It looks like IBM is cutting jobs again, with Classic Cloud hit hard</a></li>
</ul>
<h3>US Cloud RTO and India</h3>
<p>IBM's office policy change reached US Cloud employees in an April 10 memo from Alan Peacock, general manager of IBM Cloud. Peacock set a July 1, 2025, deadline for US Cloud employees to work from an office at least three days per week, with relocating workers given until October 1, 2025.</p>
<p>The employee shuffling has been accompanied by <a target="_blank" href="https://www.theregister.com/2025/03/27/ibm_cuts_jobs_in_us/">rolling layoffs</a> in the US, but hiring in India – there are at least 10x as many open IBM jobs in India as there are in any other IBM location, according to the corporation's <a target="_blank" rel="nofollow" href="https://www.ibm.com/careers/search">career listings</a>. And earlier this week, IBM <a target="_blank" rel="nofollow" href="https://www.linkedin.com/posts/ibm_lucknowopeningteaser1920x1080mp4-activity-7317418941553733632-FbUr">said</a> it "is setting up a new software lab in Lucknow," India.</p>
<h3>DEI'ing inside</h3>
<p>This push to hire ever more in India is perhaps what IBM chief human resources officer Nickle LaMoreaux meant in a de-DEI memo earlier this month that equated inclusion with talent acquisition while deemphasizing diversity and equity, the two other elements of DEI.</p>
<p>Citing differing opinions about DEI programs and the need to be compliant "with all applicable laws, executive orders and government policies – even as they shift," LaMoreaux insisted that IBM's broad commitment to inclusion – which dates back to 1954 when chairman Thomas Watson Jr penned IBM Policy Letter #4 – has not changed.</p>
<p>But, she added, "practices are ever evolving" – as if efforts to hire underrepresented groups wax and wane like phases of the moon, outside of corporate control, rather than being deliberate executive-driven directives.</p>
<p>The opinion shaping IBM's realignment appears to be that of President Trump, who on January 20, announced an <a target="_blank" rel="nofollow" href="https://www.whitehouse.gov/presidential-actions/2025/01/ending-radical-and-wasteful-government-dei-programs-and-preferencing/">executive order</a> titled: "Ending radical and wasteful government DEI programs and preferencing." The order seeks to remove DEI considerations from the federal government, though it's not a done deal. Earlier this week, a federal judge <a target="_blank" rel="nofollow" href="https://apnews.com/article/trump-dei-chicago-women-diversity-f3c9773c8f8cb39f70b1250e80704789">blocked</a> the US Department of Labor from requiring that government contractors – like IBM – certify that they don't operate any DEI programs.</p>
<p>Whatever the outcome of that legal battle, the evolution described by LaMoreaux has already brought change.</p>
<p>"As a result, we have adjusted some of our programs and our communications over the past few months," explained LaMoreaux.</p>
<p>"For example, aspirational diversity goals are no longer part of the executive incentive program, which is instead focused on talent and innovation measures. You may also notice changes to our website designed to attract the most qualified talent pool, and to eliminate outdated content and terminology."</p>
<p>These website changes can be seen, for example, in the disappearance of a <a target="_blank" rel="nofollow" href="https://web.archive.org/web/20241104025317/https://www.ibm.com/blogs/nordic-msp/i-pledge-to-be-equal/">March 25, 2019 blog post</a> that at least until November 4, 2024 – one day before the US Presidential election – appeared at <a target="_blank" rel="nofollow" href="https://www.ibm.com/blogs/nordic-msp/i-pledge-to-be-equal/">this URL</a>.</p>
<p>The post began, "IBM has a continued commitment to diversity and inclusion. A decade before the Civil Rights Act, IBM’s chairman wrote Policy Letter #4 – history’s first corporate mandate on equal employment, for everyone."</p>
<p>IBM did not respond to a request for comment. ®</p>                                
                    </div></div>]]></description>
        </item>
    </channel>
</rss>