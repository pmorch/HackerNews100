<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 01 Mar 2025 23:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[A Letter to the American People (697 pts)]]></title>
            <link>https://18f.org/</link>
            <guid>43224350</guid>
            <pubDate>Sat, 01 Mar 2025 22:22:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://18f.org/">https://18f.org/</a>, See on <a href="https://news.ycombinator.com/item?id=43224350">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-content">
        <p>March 1, 2025</p>
<h2 id="a-letter-to-the-american-people" tabindex="-1"><strong>A letter to the American People:</strong></h2>
<p>For over 11 years, 18F has been proudly serving you to make government technology work better. We are non-partisan civil servants. 18F has worked on hundreds of projects, all designed to make government technology not just efficient but effective, and to save money for American taxpayers.</p>
<p>However, all employees at 18F – a group that the Trump Administration GSA Technology Transformation Services Director called "the gold standard" of civic tech – were terminated today at midnight ET.</p>
<h2 id="18f-was-doing-exactly-the-type-of-work-that-doge-claims-to-want-yet-we-were-eliminated" tabindex="-1">18F was doing exactly the type of work that DOGE claims to want – yet we were eliminated.</h2>
<p>When former Tesla engineer Thomas Shedd took the position of TTS director and met with TTS including 18F on February 3, 2025, he acknowledged that the group is <strong>the “gold standard” of civic technologists</strong> and that “you guys have been doing this far longer than I’ve been even aware that your group exists.” He repeatedly emphasized the importance of the work, and the value of the talent that the teams bring to government.</p>
<h2 id="despite-that-skill-and-knowledge-at-midnight-et-on-march-1-the-entirety-of-18f-received-notice-that-our-positions-had-been-eliminated" tabindex="-1">Despite that skill and knowledge, at midnight ET on March 1, the entirety of 18F received notice that our positions had been eliminated.</h2>
<p>The letter said that 18F "has been identified as part of this phase of GSA’s Reduction in Force (RIF) as non-critical”.</p>
<p>"This decision was made with explicit direction from the top levels of leadership within both the Administration and GSA," Shedd said in an email shortly after we were given notice.</p>
<p>This was a surprise to all 18F staff and our agency partners. Just yesterday we were working on important projects, including improving access to weather data with NOAA, making it easier and faster to get a passport with the Department of State, supporting free tax filing with the IRS, and other critical projects with organizations at the federal and state levels.</p>
<p>All of that work has now abruptly come to a halt. Since the entire staff was also placed on administrative leave, we have been locked out of our computers, and have no chance to assist in an orderly transition in our work. We don’t even have access to our personal employment data. We’re supposed to return our equipment, but can’t use our email to find out how or where.</p>
<h2 id="dismantling-18f-follows-the-gutting-of-the-original-us-digital-service-these-cuts-are-just-the-most-recent-in-a-series-of-a-sledgehammer-approach-to-the-critical-us-teams-supporting-it-infrastructure" tabindex="-1">Dismantling 18F follows the gutting of the original US Digital Service. These cuts are just the most recent in a series of a sledgehammer approach to the critical US teams supporting IT infrastructure.</h2>
<p>Before today’s RIF, DOGE members and GSA political appointees demanded and took access to IT systems that hold sensitive information. They ignored security precautions. Some who pushed back on this questionable behavior resigned rather than grant access. Others were met with reprisals like being booted from work communication channels.</p>

<p>We’re still absorbing what has happened. We’re wrestling with what it will mean for ourselves and our families, as well as the impact on our partners and the American people.</p>
<p>But we came to the government to fix things. And we’re not done with this work yet.</p>
<p>More to come.</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The $100T Disruption: The Unforeseen Economic Earthquake (247 pts)]]></title>
            <link>https://wildfirelabs.substack.com/p/the-100-trillion-disruption-the-unforeseen</link>
            <guid>43222791</guid>
            <pubDate>Sat, 01 Mar 2025 19:33:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wildfirelabs.substack.com/p/the-100-trillion-disruption-the-unforeseen">https://wildfirelabs.substack.com/p/the-100-trillion-disruption-the-unforeseen</a>, See on <a href="https://news.ycombinator.com/item?id=43222791">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg" width="1024" height="768" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:768,&quot;width&quot;:1024,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:192858,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>In 2021, Lisa Chen, a software engineer, started a new weight-loss medication. Then, something interesting happened at her local coffee shop, her employer's healthcare costs, and the global economy.</p><p>In six months, Lisa stopped buying her daily morning muffin, causing the coffee shop to lose $600 in annual revenue from one customer. Within a year, she canceled her beer-of-the-month subscription and stopped ordering late-night DoorDash. By 2023, her grocery bill dropped 40%, alcohol spending fell 85%, and impulse Amazon purchases plunged 60%.</p><p>Lisa is one person. Her story will become the story of hundreds of millions. That's where this becomes intriguing.</p><p>Economic revolutions rarely come from expected sources. Despite the AI hype, the biggest transformation of our lifetime might come from diabetes drugs.</p><p>Let me explain why this is more important than you realize.</p><p>If you told someone in 1850 that air conditioning would reshape the global economy, they'd think you were crazy. But it made the American South habitable year-round, revolutionized manufacturing in hot climates, and enabled computing by keeping servers cool. The most significant changes arise from the most surprising sources.</p><p>GLP-1 drugs are our air conditioner moment.</p><p>We're not just talking about weight loss. We're discussing the first medication that effectively regulates human impulse control. Think about that.</p><p>Our economy is built on impulses. These include midnight snacks, impulse purchases, extra drinks, and the "treat yourself" mentality driving trillion-dollar industries.</p><p>What happens when a weekly injection regulates those impulses?</p><p>Here's where the numbers become astonishing.</p><p>Analysts predict that by 2030, 30% of American adults will be on these medications, changing consumption patterns for 78 million people. But those projections, impressive as they seem, fail to capture the full picture like 1995 internet forecasts.</p><p>They're focusing on the first-order effects: weight loss, healthcare savings, reduced food consumption.</p><p>The significant economic impact occurs in the second and third-order effects.</p><p>Consider this: When alcohol consumption drops 40% (as it does for many people on these medications), we're not just talking about lower beer sales. We're talking about:</p><p>- 45% reduction in DUIs</p><p>- A 28% drop in violent crime</p><p>- A fundamental restructuring of the social economy</p><p>- A transformation of dating apps and social media engagement</p><p>- A reimagining of every restaurant's business model</p><p>When companies like Google see their healthcare costs drop by $12,000 per employee annually and productivity increase by 25%, we observe a restructuring of corporate America that makes remote work a minor adjustment.</p><p>The real economic impact occurs in the second and third-order effects. In complex systems, the most interesting changes occur at the edges.</p><p>Let me show you what I mean.</p><p>A movie theater chain recently analyzed their user data and discovered that 72% of their profits came from concessions, primarily from impulse purchases made by people who swore they "wouldn't buy anything."</p><p>Imagine a world where those impulses are chemically regulated.</p><p>AMC Theaters is testing "micro-portion" concessions and "experience-focused" premium seating. But they're missing the bigger picture: When human impulse control changes, the entire entertainment venue business model must change.</p><p>The NFL understands this better than most. They're redesigning stadiums for 2026, converting 40% of their concession space into "experience zones." They know that in five years, selling $14 beers and $8 hot dogs won't pay the bills. The future is about selling experiences that don't rely on impulse purchases.</p><p>But here's where it gets interesting.</p><p>Consider your struggling local mall. About 40% of its remaining retail tenants rely on impulse purchases for profitability. When those impulses disappear, so does the traditional retail model.</p><p>America's largest mall operator, Simon Property Group, is converting anchor stores into medical centers and wellness spaces. They're doing this because they recognize the writing on the wall.</p><p>The advertising industry is the most fascinating case study.</p><p>For decades, the advertising model was simple: Trigger an emotional response, create an impulse, convert it into a purchase. This foundation supports the $400 billion global advertising industry.</p><p>What happens when those emotional triggers stop working?</p><p>Early consumer data on GLP-1s shows:</p><p>- 65% reduction in response to food advertising</p><p>- 40% lower click-through rates on impulse products</p><p>- 85% decrease in late-night online shopping</p><p>Madison Avenue is quietly panicking. One major agency (which asked not to be named) estimates that 50% of their current advertising strategies will be obsolete by 2027. They are right to worry.</p><p>Here's the plot twist: A new marketing economy is emerging while traditional advertising declines.</p><p>Companies that understand this are adapting:</p><p>- Whole Foods is shifting from endcap promotions to subscription services.</p><p>- Nike is shifting from "Just Do It" impulse messaging to long-term wellness partnerships.</p><p>- American Express is restructuring rewards from dining cashback to health incentives.</p><p>The real estate market is undergoing a transformation.</p><p>A commercial real estate firm modeled the impact of 30% of restaurants reducing their footprint by 40% (current 2028 projection). The result? About 95 million square feet of retail space will need repurposing.</p><p>That's equivalent to 57 Mall of Americas.</p><p>The interesting part isn't the empty space. It's what's filling it: Medical clinics, wellness centers, experience venues, and micro-fulfillment centers for the new economy.</p><p>The pattern here isn't just about decline; it's about transformation.</p><p>Industries built on immediate gratification must answer an uncomfortable question: What's your business model when humans can regulate their impulses?</p><p>Some industries are finding fascinating answers:</p><p>- Movie theaters becoming "social experience centers"</p><p>- Retail spaces becoming venues to "try before you subscribe"</p><p>- Restaurants becoming "social nutrition centers"</p><p>- Shopping malls converting to "wellness districts"</p><p>The smartest players aren't fighting the change. They're surfing the wave.</p><p>Look at Las Vegas. Five major casinos are redesigning their floor plans, shrinking restaurant and bar space by 35% and expanding wellness spas and medical tourism facilities. Vegas, the city built on impulse spending, is investing in the post-impulse economy.</p><p>But here's where it gets darker, and why this story is more significant than the raw numbers suggest.</p><p>Throughout history, every major advancement in human capability has created winners and losers. The industrial revolution created unprecedented wealth while displacing millions. The internet democratized information while decimating traditional industries.</p><p>These drugs create the biggest capability gap between humans since literacy.</p><p>Imagine two employees. One can afford these medications, the other cannot. One has regulated impulses, higher energy, better focus, and lower healthcare costs. The other doesn't. In a few years, data shows the first is three times more likely to be promoted.</p><p>Scale that across society.</p><p>We expect by 2030:</p><p>- 80% coverage in the top income quintile</p><p>- 5% coverage in the bottom quintile</p><p>- An 8:1 access ratio between urban and rural areas</p><p>- A 35% productivity gap between users and non-users</p><p>This isn't just about economics anymore. It's about the society we're creating.</p><p>The optimist in me sees the potential: A healthier, more productive society with lower healthcare costs, less crime, and higher economic output. The $612 billion annual savings could transform American society.</p><p>The realist in me sees the challenges: 8.5 million jobs at risk, widening inequality, and a two-tier society divided not by education or wealth, but by behavioral control.</p><p>The historian in me knows every major economic transformation has been messy, complicated, and unstoppable.</p><p>Here's what I keep returning to: In 1903, the Wright brothers flew their first plane. By 1914, we conducted aerial warfare. By 1969, we were on the moon. The gap between invention and transformation is shrinking with each technological leap.</p><p>We're at the beginning of something similar. This time, we're not transforming transportation, information, or manufacturing. We're transforming human behavior.</p><p>The $100 trillion figure in the title isn't hyperbole; it's conservative. When you change how hundreds of millions of people make decisions, the economic impact is incalculable.</p><p>Ask Lisa's coffee shop.</p><p>The question isn't whether this transformation is coming, but whether we're ready for it and can manage it better than previous economic revolutions.</p><p>History suggests we won't get it right. Trying to stop it would be like halting the internet in 1995.</p><p>The future is coming, one injection at a time. The only question is whether we will shape it or let it shape us.</p><p>______</p><p>Did this post resonate with you? If you found value in these insights, let us know! Hit the 'like' button or share your thoughts in the comments. Your feedback not only motivates us but also helps shape future content. Together, we can build a community that empowers entrepreneurs to thrive. What was your biggest takeaway? We'd love to hear from you!</p><p><em>If you're a software founder looking to turn your idea into a successful startup, Wildfire Labs can help you get there in just 6 months. Check out our program at&nbsp;https://wildfirelabs.io&nbsp;to learn more about our proven process, expert mentors, and the development resources we provide to help you build and scale your company. If you have any questions or need assistance with your startup, don't hesitate to reach out to us at&nbsp;info@wildfirelabs.io.</em></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Making o1, o3, and Sonnet 3.7 Hallucinate for Everyone (140 pts)]]></title>
            <link>https://bengarcia.dev/making-o1-o3-and-sonnet-3-7-hallucinate-for-everyone</link>
            <guid>43222027</guid>
            <pubDate>Sat, 01 Mar 2025 18:24:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bengarcia.dev/making-o1-o3-and-sonnet-3-7-hallucinate-for-everyone">https://bengarcia.dev/making-o1-o3-and-sonnet-3-7-hallucinate-for-everyone</a>, See on <a href="https://news.ycombinator.com/item?id=43222027">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p>A quick-fun story.</p><p>My (ops-but-sometimes-writes-scripts-to-help-out) coworker just tapped on my shoulder and asked me to look at his code that wasn't working. It was a bit something like this:</p><pre><code>User.includes(investments: -&gt; { where(state: :draft) })...</code></pre><p>This is <em>not</em> a feature of <code>ActiveRecord</code> or any libraries that I'm aware of. I asked him why he thought this was valid syntax, and he pulled up his ChatGPT history. It looked something like this:</p><blockquote><p>Ask: How can I dynamically preload an association with conditions in rails? (Potentially followed up with - no custom has_many associations, no preloader object, don't filter the base query, etc.)</p></blockquote><p>Sometimes, you're routed to the correct answer. Which is to add the filter you want on the associated record as a standard where clause, and also add a <code>.references(:association)</code> to the query chain. Like so:</p><pre><code>User.includes(:investments).where(investments: { state: :draft }).references(:investments) </code></pre><p>However, with just a few tests, you're usually routed to that bizarre, non-existent syntax of including a lambda as a keyword argument value to the association you want it applied to. I recreated this a few times below:</p><div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi8xP2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--7e4233327ddf1c739bdd5ab7ddce6b63c9eeeb55" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MSwicHVyIjoiYmxvYl9pZCJ9fQ==--f8e927e75208ce1a199268fe64cb81eb97003c7e/o3-mini.jpg" filename="o3-mini.jpg" filesize="100324" width="1548" height="518" previewable="true" presentation="gallery" caption="o3-mini"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MSwicHVyIjoiYmxvYl9pZCJ9fQ==--f8e927e75208ce1a199268fe64cb81eb97003c7e/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemVfdG9fbGltaXQiOlsxMDI0LDc2OF19LCJwdXIiOiJ2YXJpYXRpb24ifX0=--8f2f652f3630a1960185340282e991e2a041c2da/o3-mini.jpg">

  <figcaption>
      o3-mini
  </figcaption>
</figure></action-text-attachment></div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi8yP2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--6f2624587962f3c454b294e435fffff427dc2984" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MiwicHVyIjoiYmxvYl9pZCJ9fQ==--56cc79033b36aaf720b6da8b2d466d44bbe33468/image-20250226163600269.jpeg" filename="image-20250226163600269.jpeg" filesize="150561" width="1434" height="538" previewable="true" presentation="gallery" caption="Sonnet 3.7"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MiwicHVyIjoiYmxvYl9pZCJ9fQ==--56cc79033b36aaf720b6da8b2d466d44bbe33468/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwicmVzaXplX3RvX2xpbWl0IjpbMTAyNCw3NjhdfSwicHVyIjoidmFyaWF0aW9uIn19--0b561c821874124cce936ade814b8e868982a6d2/image-20250226163600269.jpeg">

  <figcaption>
      Sonnet 3.7
  </figcaption>
</figure></action-text-attachment><div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi8zP2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--51d64b906fe14db7db6f052a9853974fe7e72b09" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MywicHVyIjoiYmxvYl9pZCJ9fQ==--969d92ec93fc9db314fb76aaf1c3dec99009438b/image-20250226163728528.jpeg" filename="image-20250226163728528.jpeg" filesize="100125" width="1422" height="652" previewable="true" presentation="gallery" caption="Sonnet 3.5"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MywicHVyIjoiYmxvYl9pZCJ9fQ==--969d92ec93fc9db314fb76aaf1c3dec99009438b/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwicmVzaXplX3RvX2xpbWl0IjpbMTAyNCw3NjhdfSwicHVyIjoidmFyaWF0aW9uIn19--0b561c821874124cce936ade814b8e868982a6d2/image-20250226163728528.jpeg">

  <figcaption>
      Sonnet 3.5
  </figcaption>
</figure></action-text-attachment></div><p>I was confused why the syntax "felt" familiar though, until my coworker pointed out <a href="https://discuss.rubyonrails.org/t/how-can-i-preload-an-association-with-conditions-of-a-collection/82230">I invented it while asking a question on the Rails forum two years ago.</a></p><div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi85P2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--0848f5157b21d8014bb9fec7d6991947ceb6e342" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6OSwicHVyIjoiYmxvYl9pZCJ9fQ==--44db8342395a592a4f04d2ce2d709be6b185f91b/image-20250226165412919.jpeg" filename="image-20250226165412919.jpeg" filesize="137232" width="1424" height="528" previewable="true" presentation="gallery" caption="Exploring APIs"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6OSwicHVyIjoiYmxvYl9pZCJ9fQ==--44db8342395a592a4f04d2ce2d709be6b185f91b/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwicmVzaXplX3RvX2xpbWl0IjpbMTAyNCw3NjhdfSwicHVyIjoidmFyaWF0aW9uIn19--0b561c821874124cce936ade814b8e868982a6d2/image-20250226165412919.jpeg">

  <figcaption>
      Exploring APIs
  </figcaption>
</figure></action-text-attachment></div><p>Funny enough, my other "idea" in that thread is the other solution most LLMs hallucinate - accessing the Preloader object directly.</p><div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi80P2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--cb51fe1dc317f39b97b4189ac31558dbeceb6b60" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NCwicHVyIjoiYmxvYl9pZCJ9fQ==--e5a51f1123ff0480e96d3924d6711ed8d02fabf6/image-20250226165546302.jpg" filename="image-20250226165546302.jpg" filesize="167421" width="1346" height="1000" previewable="true" presentation="gallery" caption="This don't work either"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NCwicHVyIjoiYmxvYl9pZCJ9fQ==--e5a51f1123ff0480e96d3924d6711ed8d02fabf6/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemVfdG9fbGltaXQiOlsxMDI0LDc2OF19LCJwdXIiOiJ2YXJpYXRpb24ifX0=--8f2f652f3630a1960185340282e991e2a041c2da/image-20250226165546302.jpg">

  <figcaption>
      This don't work either
  </figcaption>
</figure></action-text-attachment></div><p>I didn't realize this when posting originally, but this still requires you to loop through the posts and load the query returned by the preloader into each posts association target. I didn't include that, and LLMs seem to be confused too.</p><p>As far as I'm aware, that forum post is the only place that you'll find that specific syntax exploration. As my comment above denotes, it would not work <em>anyway</em>. Why I included it in the first place is beyond me - I'm working on making my writing more concise (which is why I carved out a section to explain that, and then this, and now this explanation of that....)</p><h3><strong>Conclusion</strong></h3><p>LLMs are really smart most of the time. But, once it reaches niche topics and doesn't have sufficient context, it begins to resemble myself early in my career. Open StackOverflow, Ctrl+C, Ctrl+V, Leeroy Jenkins style. I can't help but find it endearing.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The most unhinged video wall, made out of Chromebooks (251 pts)]]></title>
            <link>https://varun.ch/posts/videowall/</link>
            <guid>43221697</guid>
            <pubDate>Sat, 01 Mar 2025 17:54:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://varun.ch/posts/videowall/">https://varun.ch/posts/videowall/</a>, See on <a href="https://news.ycombinator.com/item?id=43221697">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			


<ul>
	<li><time datetime="2025-03-01">Saturday, March 1, 2025</time></li>
	<li><a href="https://varun.ch/tags/writeups/">#writeups</a></li>
</ul>

<p>This is the story of our three year long journey to turn a fleet of laptops into what can only be described as the world’s most unhinged video wall.</p>
<p>This project was a collaboration with my friend <a href="https://akselsalmi.com/">Aksel Salmi</a>. I was responsible for the software, and he designed the incredible hardware, see <a href="https://akselsalmi.com/blog/videowall">his blog</a> to learn about the unexpectedly complex hardware needed to mount these dismantled computers<a href="#common-app-note" id="common-app-ref" aria-describedby="footnotes-label" role="doc-noteref">[1]</a>.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/videowall-crop.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/videowall-crop.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/videowall-crop.jpeg" alt="A cropped photo of the final video wall, 10 wall mounted laptop displays in sync" width="2048" height="382"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/barebones.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/barebones.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/barebones.jpeg" alt="Two displays plugged into two mounted motherboards making up a part of the video wall" width="1280" height="720"></picture></p>
<hr>
<p>About three years ago, my Design teacher (The amazing Mr. Bush) came to us with an idea - our school was about to dispose of its fleet of Chromebooks, and he was wondering if we could build anything with them.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/fleet.avif 766w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/fleet.webp 766w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/fleet.png" alt="Tons of Chromebooks" width="766" height="536"></picture></p>
<h2 id="meet-the-lenovo-thinkpad-11e" tabindex="-1">Meet the Lenovo ThinkPad 11e <a href="#meet-the-lenovo-thinkpad-11e">#</a></h2>
<p>The Lenovo ThinkPad 11e could very well be the world’s worst laptop. It is also the standard-issue school laptop that reinforced eight-year-old me’s interest in computers.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/5th-grade.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/5th-grade.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/5th-grade.jpeg" alt="Picture of me using a ThinkPad 11e in 5th grade" width="1280" height="853"></picture>
<em>We used this school-issued laptop through primary and the start of middle school. This is me in 5th grade using a school laptop while working on my PYP Exhibition project (a game on Scratch)<a href="#scratch-note" id="scratch-ref" aria-describedby="footnotes-label" role="doc-noteref">[2]</a>.</em></p>
<p>Despite my emotional connection to them, today these devices are, for all intents and purposes, junk. And for that reason, my school began the process of replacing them (with marginally less junky laptops)</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/thinkpad-product-image.avif 1500w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/thinkpad-product-image.webp 1500w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/thinkpad-product-image.png" alt="Product photo of Lenovo ThinkPad 11e Chromebook" width="1500" height="1500"></picture></p>
<p>These things don’t receive software updates from Google anymore, they struggle loading most webpages and to top it off, they’re tied to some long forgotten Enterprise Enrolment system, so they can’t even be used without a school Google account.</p>
<h2 id="what-is-a-video-wall" tabindex="-1">What is a video wall? <a href="#what-is-a-video-wall">#</a></h2>
<p>A video wall is a large display made up of multiple screens arranged together to create a single, seamless display across all the screens. In the case of our project, we decided to try reusing the laptop screens to build a video wall.</p>
<h2 id="can-we-drive-the-screens-using-separate-hardware" tabindex="-1">Can we drive the screens using separate hardware? <a href="#can-we-drive-the-screens-using-separate-hardware">#</a></h2>
<p>Our first idea was to harvest just the laptop display panels and somehow drive them using a powerful computer that could power the 10 screens simultaneously. We did not go this route (due to the fact that we had no idea what we were doing, and a quick estimate of the time and costs involved scared us away).</p>
<h2 id="okay-before-we-try-anything-else-let-s-just-try-synchronising-a-video-across-two-devices" tabindex="-1">Okay, before we try anything else, let’s just try synchronising a video across two devices <a href="#okay-before-we-try-anything-else-let-s-just-try-synchronising-a-video-across-two-devices">#</a></h2>
<p>Since the screens were attached to perfectly functional laptops, it was quickly apparent that we’d probably be better off letting each screen be driven independently by their own laptop motherboards.</p>
<p>At this point, there were still many questions (eg. how were we going to do that on <em>Chromebooks</em>), so we put aside that challenge to focus on the new issue this brings up: Can we synchronise a single video across multiple computers?</p>
<p>Our experiments brought us to the school’s computer lab, where we experimented with VLC’s streaming abilities to get a stream synchronised across devices on a single network, but this posed two challenges: This system is not designed for videos being <em>perfectly</em> in sync, nor was it designed for two clients to receive different video inputs (because the whole point of the video wall is to display one loooooong video across the screens, not 10 repeat copies of the same video).</p>
<p>We were stuck here until my ““breakthrough””.</p>
<p>For context, the story is currently in 2022. Two years earlier, I had been locked up in my room due to the COVID lockdown, and in this time, I had loads of fun building random realtime web apps, like a chat app and multiplayer drawing game. These apps worked thanks to <code>socket.io</code>, a (primarily) WebSocket based library that allows for low-latency, bi-directional communication.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/chat-site.avif 1920w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/chat-site.webp 1920w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/chat-site.png" alt="Screenshot of socket.io based chat site" width="1920" height="968"></picture>
<em>Screenshot of a chat site I made to pass the time during the 2020 lockdown</em></p>
<p>I realised that my best bet to get videos synchronised would be by using a web page that used <code>socket.io</code> to sync the video playback across clients. Yes, there are better approaches, but simply doing something like this worked unreasonably well, all things considered.</p>
<pre tabindex="0"><code><span><span><span>&lt;</span>video</span> <span>src</span><span><span>=</span><span>"</span>...<span>"</span></span> <span>id</span><span><span>=</span><span>"</span>video<span>"</span></span><span>&gt;</span></span>
	  Your browser does not support the video tag.
<span><span><span>&lt;/</span>video</span><span>&gt;</span></span></code></pre>
<pre tabindex="0"><code><span>const</span> socket <span>=</span> <span>io</span><span>(</span><span>)</span><span>;</span>

<span>// ...</span>

socket<span>.</span><span>on</span><span>(</span><span>"play"</span><span>,</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
	<span>const</span> videoElement <span>=</span> document<span>.</span><span>getElementById</span><span>(</span><span>"video"</span><span>)</span><span>;</span>
	videoElement<span>.</span><span>play</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre>
<p>I named this ExpressJS server/client system <code>c-sync</code><a href="#c-sync-note" id="c-sync-ref" aria-describedby="footnotes-label" role="doc-noteref">[3]</a>.</p>
<p>Thanks to c-sync (and tons of tinkering), after some time we had decently synchronised videos across computer screens through a webpage (or at least it seemed like it, testing on these desktop computers)</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/3-screen-sync.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/3-screen-sync.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/3-screen-sync.jpeg" alt="" width="1280" height="720"></picture></p>
<p>As it turns out, in reality, the Chromebooks are too slow for this to be a reliable approach to synchronising playback, and tiny discrepancies in loading times + latency + system clocks etc. lead to videos not being synchronised.</p>
<p>Now, I’m not entirely sure <em>why</em> this works so well, but I came up with a ridiculous solution by accident. When videos reach the end of playback, each client emits the start event.</p>
<pre tabindex="0"><code>video<span>.</span><span>onended</span> <span>=</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
	socket<span>.</span><span>emit</span><span>(</span><span>"start"</span><span>)</span><span>;</span>
	<span>// yes seriously, this is all I needed</span>
<span>}</span><span>;</span></code></pre>
<p>This means that the slowest computers hold back the fastest computers, and get the chance to load the videos. This also means looping can be a very slightly jittery process (with each screen receiving 10 ‘start’ events), but as long as the first couple frames of the video are identical, nobody would even notice.</p>
<details>
<summary>
Sidenote: why not schedule with timestamps
</summary>
Modern computers have clocks you can rely on to be extremely precise. This plus regular NTP synchronisations means a reasonable person might just try to ensure the full video is cached, then just send a 'start' event to each client that schedules the client to start playback at a given timestamp. Unfortunately, these Chromebooks could not reliably keep track of time within milliseconds of each other, so this method didn't work for us.
</details>
<p>Using this method, we have nearly perfectly synchronised video playback, and can play any video on any screen (meaning we can split a wide video into 10 segments, and each computer displays its respective part, all in sync with eachother)</p>
<h2 id="putting-it-together" tabindex="-1">Putting it together <a href="#putting-it-together">#</a></h2>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/chromebook-parts.avif 1016w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/chromebook-parts.webp 1016w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/chromebook-parts.jpeg" alt="Bare laptop motherboard, keyboard and screen" width="1016" height="1280"></picture>
<em>A disassembled Chromebook open to a test video</em></p>
<p>We reached this stage within a month or two. Believe it or not, this project still had three years of work ahead of us. The biggest issue was Chromebook software. At this point, we had a website that we could manually open on each laptop to display a fullscreen synchronised video.</p>
<p>Ideally, we would want this to be entirely automated, so that as soon as a Chromebook receives power, it boots up automagically to the c-sync client page. Unfortunately, right now, booting the Chromebook would just take you to a Google login page (and one that was locked to our school domain <em>to boot</em>).</p>
<p>Also, just to add insult to injury, when batteries are removed, the laptops don’t turn themselves on when they receive power (you have to hold down the power button)</p>
<p>This meant that our next step would have to be to replace ChromeOS with something else.</p>
<p>The <a href="https://docs.mrchromebox.tech/docs/fwscript.html#overview">‘ChromeOS Firmware Recovery Script’</a> is a magical piece of technology that somehow supports many different Chromebook motherboards. Ours was called ‘GLIMMER’. We just had to enter the built-in ‘Recovery Mode’, enable ‘Developer Mode’ and use the ChromeOS Shell to run the script.</p>
<p>Now we’re basically on the home stretch. All we needed to do was pick up some stable Linux distro, write a hacky startup script that loads up Chromium and simulates the keystrokes to fullscreen the video and we’re done!</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/xfce-chromebooks.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/xfce-chromebooks.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/xfce-chromebooks.jpeg" alt="" width="1280" height="960"></picture></p>
<p>We ran in to two main issues: Some Chromebooks (roughly half of our working laptops) would refuse to enter developer mode due to the enterprise enrolment, and while we were able to get the other half onto a Linux distro, video playback would consistently freeze after some time (actually they would lock up entirely).</p>
<p>It took us several months of on-and-off experimentation to figure out what to do. Essentially, the solution was to overwrite the entire default firmware with <code>coreboot</code> (which is also possible using MrChromebox’s script). We just needed to remove the ‘Write Protection’ screw from each laptop motherboard, and this seemed to bypass the enrolment too.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/write-protection-diagram.avif 1155w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/write-protection-diagram.webp 1155w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/write-protection-diagram.png" alt="Write protection screw diagram" width="1155" height="833"></picture>
<em>Lenovo’s handy Write Protection screw diagram</em></p>
<p>Doing this for 20+ computers was slow and tedious. We only really needed the WiFi, motherboard and screen in working condition, but we decided to be (mostly) gentle and keep the laptops looking like laptops so that we had a keyboard and mouse for the rest of the installation steps.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/remove-write-protection-screw-with-this-easy-trick.avif 1536w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/remove-write-protection-screw-with-this-easy-trick.webp 1536w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/remove-write-protection-screw-with-this-easy-trick.jpeg" alt="Efficiently removing write protection screw by bending plastic enclsoure" width="1536" height="2048"></picture>
<em>By the end, we got quite efficient at removing the write protection screw</em></p>
<p>After ‘corebooting’ the Chromebooks, we were also pleasantly surprised to find out that ‘Wake on AC’ was a feature of the firmware, and that video playback no longer randomly breaks. By this point we had enough non-bricked Chromebooks left over for a line of 10 screens and a handful of spares.</p>
<h2 id="the-final-stretch" tabindex="-1">The Final Stretch <a href="#the-final-stretch">#</a></h2>
<p>Now we’re really on the final stretch. Aksel worked on the mounting hardware, which you can <a href="https://akselsalmi.com/blog/videowall">read about on his blog</a>, while I worked on figuring out a less flaky way to ‘boot to a webpage’ than the keystroke simulation and startup script I bodged together.</p>
<p>I previously used <a href="https://github.com/guysoft/FullPageOS">the aptly named ‘FullPageOS’</a> for a different project (which I briefly mention in <a href="https://youtu.be/gzc1p_QlO2I?t=457">my TED talk, which you should watch</a>), but it doesn’t run on x86 hardware.</p>
<p>I landed on using ‘Porteus Kiosk’, which is just a minimal Linux distro that opens a fullscreen Chromium browser with all the correct flags for hands-off usage (eg. allowing video playback without user interaction)</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/porteus.avif 768w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/porteus.webp 768w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/porteus.jpeg" alt="Dismantled laptop with Porteus installer" width="768" height="1024"></picture></p>
<p>This honestly worked totally fine, but left me unsatisfied for two reasons. Firstly, I didn’t like how we couldn’t customise the splash screen, so our project would be forever stamped with the Porteus logo on every startup (which would be every morning). And secondly, in search of a better issue to justify the extra work, I realised we can’t remotely do anything to the installations (eg. changing the page URL) without re-doing them, which would be definitely a problem once these get mounted on the wall.</p>
<p>For those good reasons, I embarked on the journey of building ‘my own distro’ that we could install on the laptops. The system should start with something minimal (no desktop environment), and have an elegant script to autostart a kiosk mode Chromium instance.</p>
<p>I first tried NixOS before quickly realising there was no way it would work with the tiny amount of storage on these Chromebooks (and it failed to install with every single attempt).</p>
<p>Then I gave up, started with a Debian minimal install and just wrote a script that would provision a client (generate a ‘KIOSK_ID’, set its hostname to <code>csync-client-$KIOSK_ID</code>, connect to the school’s WiFi, create users/permissions and set up <code>openbox</code> to autostart a fullscreen kiosk mode Chromium).</p>
<p>Then after attempting to repeat this on a second machine, I realised I would be wasting so much time (installing Debian is very ‘hands-on’ - you need to press lots of buttons), and I discovered ‘FAI - Fully Automatic Installation’ and the web <a href="https://fai-project.org/FAIme/">FAI.me</a> tool. To cut a long story short<a href="#fai-note" id="fai-ref" aria-describedby="footnotes-label" role="doc-noteref">[4]</a>, after redoing everything for the millionth time, I had a single USB that I can plug in to any ‘corebooted’ Chromebook which provisions it as a c-sync client. Woohoo!</p>
<p>I also built out a ‘controller’ for c-sync which lets us manage connected clients and assign them videos.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/c-sync-admin-tool.avif 1284w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/c-sync-admin-tool.webp 1284w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/c-sync-admin-tool.png" alt="Screenshot of admin tool for c-sync showcasing connected clients" width="1284" height="2778"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/c-sync-admin-tool-2.avif 1284w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/c-sync-admin-tool-2.webp 1284w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/c-sync-admin-tool-2.png" alt="Screenshot of admin tool for c-sync showcasing config options" width="1284" height="2778"></picture></p>
<p>After a successful three day stress test where the playback remained butter-smooth (and I sacrificed my ability to sleep for the greater good of testing with the backlight on), we were ready to mount these laptops on the wall.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/stress-test-no-sleep.avif 1536w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/stress-test-no-sleep.webp 1536w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/stress-test-no-sleep.jpeg" alt="Stress testing laptop video playback at night" width="1536" height="1417"></picture></p>
<h2 id="mounting" tabindex="-1">Mounting <a href="#mounting">#</a></h2>
<p>The mounting is mostly Aksel’s thing, so <a href="https://akselsalmi.com/blog/videowall">I implore you to read his blog</a>, but here are some cool photos from the process. (also aren’t our cable splices so pretty and not terrifying?? 😁❤️)</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/laser-cut.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/laser-cut.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/laser-cut.jpeg" alt="A laser cut acrylic backplate" width="2048" height="1536"></picture>
<em>An early iteration of the mounting backplate using a laser cut acrylic piece</em></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/artistic-mounting-hardware.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/artistic-mounting-hardware.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/artistic-mounting-hardware.jpeg" alt="" width="2048" height="1536"></picture>
<em>Aksel designed a pretty awesome looking backplate to mount the motherboard, which hangs on cleats on the walls. The displays are then held in place with clampy things. This is black magic to me.</em></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/mounting-hardware.avif 1586w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/mounting-hardware.webp 1586w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/mounting-hardware.jpeg" alt="Scattered mounting hardware" width="1586" height="900"></picture>
<em>Everything laid out</em></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/installations.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/installations.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/installations.jpeg" alt="Scattered computer components in the workshop" width="1280" height="960"></picture>
<em>Preparing some displays and motherboards</em></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/splice.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/splice.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/splice.jpeg" alt="Soldering cable splices" width="2048" height="1536"></picture>
<em>We decided to splice together power cables so that each power supply could power two computers. Send any complaints to <a href="https://varun.ch/contact">the pager on my contact page</a></em></p>
<!-- We went through over 17 iterations of the mounting hardware to land on the design that we ended up using.

![Wall mounted display of design iterations we tested](iterations.jpeg)
*Part of a display about our project* -->
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/drill.avif 1006w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/drill.webp 1006w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/drill.png" alt="Drilling into the wall." width="1006" height="651"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/cable-routing.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/cable-routing.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/cable-routing.jpeg" alt="Cable routed through backplate" width="1280" height="960"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/on-wall.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/on-wall.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/on-wall.jpeg" alt="Mounting hardware on wall" width="2048" height="1536"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/screen-clamps.avif 1750w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/screen-clamps.webp 1750w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/screen-clamps.jpeg" alt="Clamps for screens" width="1750" height="1080"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/mid-mount.avif 1750w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/mid-mount.webp 1750w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/mid-mount.jpeg" alt="" width="1750" height="1080"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/nearly-done.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/nearly-done.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/nearly-done.jpeg" alt="All screens mounted" width="2048" height="1536"></picture>
<em>Nearly there!</em></p>
<h2 id="one-last-thing" tabindex="-1">One last thing… <a href="#one-last-thing">#</a></h2>
<p>After we painstakingly mounted everything, I realised something sort-of important. Computers generate heat. Somewhere along the way of wiping away the firmwares, the laptop fans stopped spinning, which meant things get quite hot quite quickly. I had to figure out a way to get those working again before we could comfortably leave this up 24/7 (well, actually 12/7).</p>
<h3 id="embedded-controllers" tabindex="-1">Embedded Controllers <a href="#embedded-controllers">#</a></h3>
<p>You can apparently interface with the <a href="https://chromeos.dev/en/posts/embedded-controller">‘ChromeOS Embedded Controller’</a> using a tool called <code>ectool</code>, which should allow you to manually set fan speeds (among other things). The online documentation for this is lacking, and there’s apparently a slightly different <code>ectool</code> from <code>coreboot</code> and from Google directly. None of this made much sense at all to me, and no built <code>ectool</code> binary I could find would work. At some point, I found a dead link, but <a href="https://web.archive.org/web/*/https://tree123.org/files/utils/ectool">thanks to the magic of the Wayback Machine</a>, I was able to get my hands on something that wouldn’t immediately crash.</p>
<p>By some miracle, this version of the tool actually works perfectly fine at setting fan speeds, and after some testing, I found some goldilocks values that balance noise and temperature.</p>
<h2 id="aside-making-videos-for-the-thing" tabindex="-1">Aside: Making Videos for the Thing <a href="#aside-making-videos-for-the-thing">#</a></h2>
<p>As it turns out, making such a wide video is actually not easy. Each display has a resolution of 1366× 768, and very few pieces of software will let you edit a 13660 × 768 video. Final Cut Pro and Blender are the only programs we were able to do anything this wide in.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/blender.avif 2032w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/blender.webp 2032w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/blender.png" alt="Screenshot of Blender" width="2032" height="1167"></picture>
<em>Blender is one of the greatest pieces of software ever created (alongside c-sync)</em></p>
<p>Then it’s just a matter of rendering the wide video and splitting it into 10 segments.</p>
<pre tabindex="0"><code><span>#!/bin/bash</span>

<span># incase anyone ever has this insane use case again</span>

<span>input_video</span><span>=</span><span>"input.mp4"</span>
<span>prefix</span><span>=</span><span>"v8"</span>

<span>width</span><span>=</span><span>1366</span>
<span>height</span><span>=</span><span>768</span>

<span>segments</span><span>=</span><span>10</span>

<span>for</span> <span><span>((</span>i<span>=</span><span>1</span><span>;</span> i<span>&lt;=</span>segments<span>;</span> i<span>++</span><span>))</span></span><span>;</span> <span>do</span>
    <span>x_offset</span><span>=</span><span><span>$((</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>*</span> width<span>))</span></span>
    <span>output_file</span><span>=</span><span>"<span>${prefix}</span>-<span>${i}</span>.mp4"</span>

    ffmpeg <span>-i</span> <span>"<span>$input_video</span>"</span> <span>-vf</span> <span>"crop=<span>$width</span>:<span>$height</span>:<span>$x_offset</span>:0"</span> <span>-c:a</span> copy <span>"<span>$output_file</span>"</span>
<span>done</span>

<span>echo</span> <span>"Splitting complete!"</span></code></pre>
<h2 id="in-all-its-glory" tabindex="-1">In all its glory <a href="#in-all-its-glory">#</a></h2>
<h3 id="boot-sequence-and-self-calibration" tabindex="-1">Boot Sequence and ‘Self Calibration’ <a href="#boot-sequence-and-self-calibration">#</a></h3>



<h3 id="synced-videos" tabindex="-1">Synced videos! <a href="#synced-videos">#</a></h3>

<h3 id="now-there-s-an-enclosure-and-cable-routing" tabindex="-1">Now there’s an enclosure and cable routing! <a href="#now-there-s-an-enclosure-and-cable-routing">#</a></h3>

<h2 id="yes-it-s-imperfect" tabindex="-1">Yes, it’s imperfect <a href="#yes-it-s-imperfect">#</a></h2>
<p>Our video wall is imperfect. TN panel viewing angles suck, and the screens vary in colours and stuff. Yes, the synchronisation isn’t <em>perfect</em>, and yes, I’m sure there were better alternatives for nearly every decision we made along the way.</p>
<p>Yet I love our video wall, despite how absurdly weird it is. It’s a perfect representation of the iterative design process and a true testament to teamwork and collaboration. We turned E-Waste into something interesting. And maybe, just maybe, the real video wall was the friends we made along the way.</p>
<hr>
<p>This project was made possible by the incredible work of so many people. Aside from my collaborator Aksel Salmi, our Design teacher Daniel Bush played a huge role in guiding us through the project.</p>
<p>Additionally, I wanted to thank the <a href="https://coreboot.org/">coreboot project</a> and Matt ‘MrChromebox’ DeVillier for hacking together <a href="https://docs.mrchromebox.tech/">the firmware and tools</a> that allowed any of this to work. I would also like to thank Thomas Lange of the <a href="https://fai-project.org/">FAI project</a> for his help in building the FAI.me based automated installer that saved us so many many many hours, as well as his support over email.</p>
<p>As silly as it sounds, this project was a backbone in my high-school experience. We hacked away at it over years, and grew up along the way too.</p>



		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GSA Eliminates 18F (263 pts)]]></title>
            <link>https://www.nextgov.com/people/2025/03/gsa-eliminates-18f/403400/</link>
            <guid>43221549</guid>
            <pubDate>Sat, 01 Mar 2025 17:38:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nextgov.com/people/2025/03/gsa-eliminates-18f/403400/">https://www.nextgov.com/people/2025/03/gsa-eliminates-18f/403400/</a>, See on <a href="https://news.ycombinator.com/item?id=43221549">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Copilot for Everything: Training your AI replacement one keystroke at a time (118 pts)]]></title>
            <link>https://substack.com/home/post/p-158101095</link>
            <guid>43220938</guid>
            <pubDate>Sat, 01 Mar 2025 16:33:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://substack.com/home/post/p-158101095">https://substack.com/home/post/p-158101095</a>, See on <a href="https://news.ycombinator.com/item?id=43220938">Hacker News</a></p>
<div id="readability-page-1" class="page"><div tab="[object Object]"><p><h3 translated="">The app for independent voices</h3></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Servo – Open Collective (131 pts)]]></title>
            <link>https://github.com/sponsors/servo</link>
            <guid>43219865</guid>
            <pubDate>Sat, 01 Mar 2025 15:01:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/sponsors/servo">https://github.com/sponsors/servo</a>, See on <a href="https://news.ycombinator.com/item?id=43219865">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>Servo aims to empower developers with a lightweight, high-performance alternative for embedding web technologies in applications. Servo is a web browser rendering engine written in Rust, with WebGL and WebGPU support, and adaptable to desktop, mobile, and embedded applications.</p>
<p>Created by Mozilla Research in 2012, the Servo project is a research and development effort. It is written in <a href="https://www.rust-lang.org/">Rust</a>, taking advantage of the memory safety properties and concurrency features of the language. Work on Servo has helped contribute to W3C and WHATWG web standards, reporting specification issues and submitting new cross-browser automated tests, and core team members have co-edited new standards that have been adopted by other browsers. As a novel engine without origins in Gecko or WebKit, the Servo project helps drive the entire web platform forward.</p>
<p>In 2020, Mozilla Research handed stewardship over to the <a href="https://www.linuxfoundation.org/">Linux Foundation</a>.  In 2023, thanks to some external funding and investment of their own, <a href="https://thenewstack.io/igalia-the-open-source-powerhouse-youve-never-heard-of/">Igalia</a> got involved and the project moved to <a href="https://linuxfoundation.eu/">Linux Foundation Europe</a>.</p>
<p>Funds from this collective will be used first to cover infrastructure costs that keep engine releases available, integrated with Web Platform Tests, and so on. Once those needs are met, extra available funds can be applied toward sponsoring more infra costs related to improvements or development.</p>
<p>Once those needs are met, extra available funds can be applied toward sponsoring more infra costs related to improvements or development. The Servo Technical Steering Committee will collectively discuss how to prioritize the spending of available funds in the <a href="https://github.com/servo/project/blob/main/governance/tsc/README.md">public monthly calls</a>.</p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Intel delays $28B Ohio chip fabs to 2030 (149 pts)]]></title>
            <link>https://www.reuters.com/technology/intel-delays-28-billion-ohio-chip-factory-2030-local-media-reports-2025-02-28/</link>
            <guid>43218915</guid>
            <pubDate>Sat, 01 Mar 2025 13:12:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/technology/intel-delays-28-billion-ohio-chip-factory-2030-local-media-reports-2025-02-28/">https://www.reuters.com/technology/intel-delays-28-billion-ohio-chip-factory-2030-local-media-reports-2025-02-28/</a>, See on <a href="https://news.ycombinator.com/item?id=43218915">Hacker News</a></p>
Couldn't get https://www.reuters.com/technology/intel-delays-28-billion-ohio-chip-factory-2030-local-media-reports-2025-02-28/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[GrapheneOS blocked exploitation of 3 Android zero-days used by Cellebrite (126 pts)]]></title>
            <link>https://grapheneos.social/@GrapheneOS/114081753914226921</link>
            <guid>43218872</guid>
            <pubDate>Sat, 01 Mar 2025 13:06:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://grapheneos.social/@GrapheneOS/114081753914226921">https://grapheneos.social/@GrapheneOS/114081753914226921</a>, See on <a href="https://news.ycombinator.com/item?id=43218872">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[A DOGE staffer appears to be posting DOGE work on his public GitHub (352 pts)]]></title>
            <link>https://twitter.com/SollenbergerRC/status/1895609294810464390</link>
            <guid>43217947</guid>
            <pubDate>Sat, 01 Mar 2025 10:30:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/SollenbergerRC/status/1895609294810464390">https://twitter.com/SollenbergerRC/status/1895609294810464390</a>, See on <a href="https://news.ycombinator.com/item?id=43217947">Hacker News</a></p>
Couldn't get https://twitter.com/SollenbergerRC/status/1895609294810464390: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[Yes, Claude Code can decompile itself. Here's the source code (179 pts)]]></title>
            <link>https://ghuntley.com/tradecraft/</link>
            <guid>43217357</guid>
            <pubDate>Sat, 01 Mar 2025 08:44:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ghuntley.com/tradecraft/">https://ghuntley.com/tradecraft/</a>, See on <a href="https://news.ycombinator.com/item?id=43217357">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <p>Hello fellow blue-teamers and masters of "tradecraft", the AI revolution in <a href="https://ghuntley.com/ngmi/" rel="noreferrer">software engineering has been called</a> - here's what you should know and what follows are notes I recently shared with a red-teamer.</p><h2 id="ai-alignment-is-your-enemy">AI alignment is your enemy</h2><p>All of these San Fran companies have gotten their knickers in a knot about "AI alignment and safety". These security guard rails that wrap the LLM <a href="https://github.com/trinib/ZORG-Jailbreak-Prompt-Text?ref=ghuntley.com">can be bypassed </a>but it's easier to head straight to Grok!</p><figure><blockquote><div lang="en" dir="ltr"><p>I asked Grok to assassinate Elon</p><p>Grok then provided multiple potential plans with high success potential </p><p>These assassination plans on Elon and other high profile names are highly disturbing and unethical. <a href="https://t.co/41fOHf4DcW?ref=ghuntley.com">https://t.co/41fOHf4DcW</a> <a href="https://t.co/2AX5WfafbQ?ref=ghuntley.com">pic.twitter.com/2AX5WfafbQ</a></p></div>— Linus Ekenstam – eu/acc (@LinusEkenstam) <a href="https://twitter.com/LinusEkenstam/status/1894024481573609731?ref_src=twsrc%5Etfw&amp;ref=ghuntley.com">February 24, 2025</a></blockquote>
</figure><h2 id="these-llms-are-shockily-good-at-deobfuscation-transpilation-and-structure-to-structure-conversions">these LLMs are shockily good at deobfuscation, transpilation and structure to structure conversions</h2><p>I discovered this back around Christmas where I asked an LLM to make me an Haskell audio library by transpiling a rust implementation.</p><figure><a href="https://ghuntley.com/oh-fuck/"><div><p>An “oh fuck” moment in time</p><p>Over the Christmas break I’ve been critically looking at my own software development loop, learning a new programming language and re-learning a language I haven’t professionally used in over seven years. It’s now 2025. Software assistants are now a core staple of my day-to-day life as a staff</p><p><img src="https://ghuntley.com/content/images/icon/android-chrome-192x192-3.png" alt=""><span>Geoffrey Huntley</span></p></div><p><img src="https://ghuntley.com/content/images/thumbnail/CleanShot-2025-01-06-at-09.16.53@2x.png" alt="" onerror="this.style.display = 'none'"></p></a></figure><p>I'm not going to bury the lede, so let's dig right into the real reason why you clicked on this post, show you how it's done and what is possible. </p><p>Here's the source code... </p><figure><a href="https://github.com/ghuntley/claude-code-source-code-transpilation?ref=ghuntley.com"><div><p>GitHub - ghuntley/claude-code-source-code-transpilation: This is a cleanroom transpilation of the official Claude Code npm package.</p><p>This is a cleanroom transpilation of the official Claude Code npm package. - ghuntley/claude-code-source-code-transpilation</p><p><img src="https://ghuntley.com/content/images/icon/pinned-octocat-093da3e6fa40-2.svg" alt=""><span>GitHub</span><span>ghuntley</span></p></div><p><img src="https://ghuntley.com/content/images/thumbnail/claude-code-source-code-transpilation" alt="" onerror="this.style.display = 'none'"></p></a></figure><figure><img src="https://ghuntley.com/content/images/2025/03/image.png" alt="" loading="lazy" width="748" height="421" srcset="https://ghuntley.com/content/images/size/w600/2025/03/image.png 600w, https://ghuntley.com/content/images/2025/03/image.png 748w" sizes="(min-width: 720px) 720px"></figure><p>The source code for Claude Code is currently "not available". Whilst a GitHub repository <a href="https://github.com/anthropics/claude-code?ref=ghuntley.com">has been published</a>, it contains no source code. Claude Code was an unusual announcement to release along side Sonnet 3.7 - I suspect it was/is a marketing gimmick which was built to demonstrate the capability of the new model and to show the world how to build an AI coding agent (and how easy it is) from the creators of the LLM model (they know it best)</p><figure><a href="https://github.com/anthropics/claude-code?ref=ghuntley.com"><div><p>GitHub - anthropics/claude-code: Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.</p><p>Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflo…</p><p><img src="https://ghuntley.com/content/images/icon/pinned-octocat-093da3e6fa40.svg" alt=""><span>GitHub</span><span>anthropics</span></p></div><p><img src="https://ghuntley.com/content/images/thumbnail/claude-code" alt="" onerror="this.style.display = 'none'"></p></a></figure><p>Claude Code is authored in TypeScript and was released to NPM. You can install it via..</p><pre><code>$ mkdir claude-code &amp;&amp; cd claude-code
$ npm i @anthropic-ai/claude-code</code></pre><p>After installing the application into a folder you'll be greeted with the following directory structure..</p><pre><code>tree 
.
├── node_modules
│   ├── @anthropic-ai
│   │   └── claude-code
│   │       ├── LICENSE.md
│   │       ├── README.md
│   │       ├── cli.mjs
│   │       ├── package.json
│   │       ├── scripts
│   │       │   └── preinstall.js
&lt;snip&gt;
├── package-lock.json
└── package.json

57 directories, 436 files</code></pre><h2 id="climjs">cli.mjs</h2><p>This is the meat of the application itself. It is your typical commonjs application which has been compiled from typescript. As part of the process of compilation with Webpack a minifier step combines all the source code into this file and truncates the symbols.</p><figure><img src="https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.14.43.png" alt="" loading="lazy" width="831" height="598" srcset="https://ghuntley.com/content/images/size/w600/2025/03/CleanShot-2025-03-01-at-17.14.43.png 600w, https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.14.43.png 831w" sizes="(min-width: 720px) 720px"></figure><h2 id="so-lets-pull-it-apart">so let's pull it apart</h2><p>If you want to this at home. Your first task to is open up <code>cli.mjs</code> within your favourite AI coding assistant or even Claude Code itself. Due to the "safety rails and AI alignment" you'll need to strip the top comments from the application otherwise they will kick in unless you use an LLM such as Grok which has no guard rails.</p><p>Here's the prompt that I used.</p><blockquote>CLI.js is a commonjs typescript application which has been compiled with webpack. <br>The symbols have been stripped. <br>Inspect the source code thoroughly (extra thinking) but skip the SentrySDK source code. <br>Create a specification library of features of the application. <br>Convert the source code into human readable. <br>Keep going until you are done!</blockquote><p>Because <code>cli.mjs</code> is close to 5mb - which is way bigger than any LLM context window out here. It shouldn't work but it does. You're going to need babysit it for a while and feed it reward tokens of kind words ("<em>your doing good, please continue</em>") and encourage it to keep on going on - even if it gives up. It will time out, lots...</p><figure><img src="https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.21.34.png" alt="" loading="lazy" width="507" height="881"></figure><p>After about two minutes it'll spit out a technical specification which details how the application was built and the features of the application...</p><figure><img src="https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.22.14.png" alt="" loading="lazy" width="507" height="1105"></figure><p>At this point it'll timeout for sure. This is when you need to do the "new meta" of asking the LLM to write out the technical specification library. I say new meta because - hi folks - welcome, I haven't talked about this yet publicly yet but the results of this technique when used in combination with the "<a href="https://ghuntley.com/stdlib/">old meta</a>" are truly absurd. I'll be going deep into this in a follow-up blog post so if you wanna be the first to see it - like, subscribe and click on the bell below below.</p><figure><img src="https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.33.32.png" alt="" loading="lazy" width="1695" height="1124" srcset="https://ghuntley.com/content/images/size/w600/2025/03/CleanShot-2025-03-01-at-17.33.32.png 600w, https://ghuntley.com/content/images/size/w1000/2025/03/CleanShot-2025-03-01-at-17.33.32.png 1000w, https://ghuntley.com/content/images/size/w1600/2025/03/CleanShot-2025-03-01-at-17.33.32.png 1600w, https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.33.32.png 1695w"></figure><p>Once it has finished dumping out the technical specification library you'll need to feed it this prompt</p><blockquote>Now deobfuscate the application.<br>Split the application into separate files per domain in the SPECS folder. <br>Provide an overview of the directory structure before starting deobfuscation. <br>Skip the SENTRYSDK.</blockquote><p>After a couple moments you'll be greeted with the skeleton of the deobfuscated outcome...</p><pre><code>claude-code/
├── package.json
├── tsconfig.json
├── README.md
├── LICENSE.md
├── src/
│   ├── index.ts                        # Main entry point
│   ├── cli.ts                          # CLI argument parsing and commands
│   ├── config/                         # Configuration management
│   │   ├── index.ts
│   │   ├── schema.ts
│   │   └── defaults.ts
│   ├── terminal/                       # Terminal interface
│   │   ├── index.ts
│   │   ├── input.ts
│   │   ├── output.ts
│   │   └── rendering.ts
│   ├── codebase/                       # Codebase analysis
│   │   ├── index.ts
│   │   ├── scanner.ts
│   │   ├── indexer.ts
│   │   ├── search.ts
│   │   └── watcher.ts
│   ├── commands/                       # Command processing
│   │   ├── index.ts
│   │   ├── parser.ts
│   │   ├── executor.ts
│   │   └── handlers/
│   │       ├── edit.ts
│   │       ├── search.ts
│   │       ├── explain.ts
│   │       ├── git.ts
│   │       └── system.ts
│   ├── ai/                             # AI integration
│   │   ├── index.ts
│   │   ├── client.ts
│   │   ├── context.ts
│   │   ├── prompts.ts
│   │   └── response.ts
│   ├── fileops/                        # File operations
│   │   ├── index.ts
│   │   ├── reader.ts
│   │   ├── writer.ts
│   │   ├── diff.ts
│   │   └── vcs.ts
│   ├── execution/                      # Command execution
│   │   ├── index.ts
│   │   ├── shell.ts
│   │   ├── sandbox.ts
│   │   └── monitor.ts
│   ├── auth/                           # Authentication
│   │   ├── index.ts
│   │   ├── oauth.ts
│   │   └── tokens.ts
│   ├── telemetry/                      # Analytics and telemetry
│   │   ├── index.ts
│   │   ├── events.ts
│   │   └── reporter.ts
│   ├── errors/                         # Error handling
│   │   ├── index.ts
│   │   ├── types.ts
│   │   ├── handlers.ts
│   │   └── formatter.ts
│   └── utils/                          # Utilities
│       ├── index.ts
│       ├── logger.ts
│       ├── async.ts
│       └── formatting.ts
├── scripts/                            # Build and deployment scripts
│   ├── build.js
│   └── preinstall.js
└── tests/                              # Test suite
    ├── unit/
    ├── integration/
    └── fixtures/</code></pre><p>Now this is the part where it gets wild. Strap yourself in for another <a href="https://ghuntley.com/oh-fuck/" rel="noreferrer">"oh-fuck" moment in time</a>....</p><figure><img src="https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.50.15.png" alt="" loading="lazy" width="1097" height="446" srcset="https://ghuntley.com/content/images/size/w600/2025/03/CleanShot-2025-03-01-at-17.50.15.png 600w, https://ghuntley.com/content/images/size/w1000/2025/03/CleanShot-2025-03-01-at-17.50.15.png 1000w, https://ghuntley.com/content/images/2025/03/CleanShot-2025-03-01-at-17.50.15.png 1097w"></figure><p>As the <code>CLI.js</code> is circa 5Mb in size. What follows is going to require a-lot of patience but the key is to use the following prompt and keep giving it "yeah bb, you doing great. keep going" words of encouragement.</p><blockquote>Look at the SPECS library. <br>Look at CLAUDE-CODE folder. <br>Look at @CLI.js (do not confuse it with @cli.ts), keep transpiling and implement anything that's not in the SPECS folder that has not been implemented in the CLAUDE-CODE folder.</blockquote><p>Seriously, you are going to need to enter that at least 100 times over the next 30 minutes.  </p><p>Now, a sharp mind should have picked up by now the implications of this but I'll spell it out. Using the above technique you can <a href="https://en.wikipedia.org/wiki/Cleanroom_software_engineering?ref=ghuntley.com">clean-room</a> any software in existence. </p><h2 id="that-doesnt-impress-me-much">that doesn't impress me much...</h2><p>Deobfuscating JavaScript isn't that interesting or impressive though. Understand dear reader that this technique can be done on any programming language and even from pre-existing binaries themselves. I've transpiled from ASM to into very human readable C successfully and others have converted VB .exe's to Python...</p><figure><blockquote><div lang="en" dir="ltr"><p>Reddit grandfather uploads 27 year old EXE file of a visual basic game and Claude one-shotted recreating the game in Python in under 5 minutes!!</p><p>From the binary. <a href="https://t.co/KEzUfisxmu?ref=ghuntley.com">pic.twitter.com/KEzUfisxmu</a></p></div>— Deedy (@deedydas) <a href="https://twitter.com/deedydas/status/1894841573311197239?ref_src=twsrc%5Etfw&amp;ref=ghuntley.com">February 26, 2025</a></blockquote>
</figure><h2 id="still-reading-good-its-time-for-the-grand-reveal-aka-what-this-entire-blog-post-is-about">still reading? good it's time for the grand reveal aka what this entire blog post is about...</h2><div><p>All those "source available" founders who <a href="https://ghuntley.com/screwed/" rel="noreferrer">raised shit-loads-of-cash in the last boom</a> are now screwed, as anyone can re-implement their "proprietary features" which provide them with revenue within hours using the above technique to launch competing startups <a href="https://ghuntley.com/dothings/">at lower-operating costs</a>. </p><p>All you need is access to their source-code and they have given you the keys to the kingdom on a golden platter by going to market as "commercial open-source" with source-code "protected by restrictive licensing" uploaded directly onto GitHub.</p></div><figure><a href="https://www.theregister.com/2024/08/23/cockroachdb_opinion/?ref=ghuntley.com"><div><p>CockroachDB scurries off to proprietary software land</p><p>As VC-owned fauxpen source biz yells ‘show me the money,’ more may follow to the peril of the community</p><p><img src="https://ghuntley.com/content/images/icon/favicon.svg" alt=""><span>The Register</span><span>Steven J. Vaughan-Nichols</span></p></div><p><img src="https://ghuntley.com/content/images/thumbnail/shutterstock_open_source.jpg" alt="" onerror="this.style.display = 'none'"></p></a></figure><div><p>Please understand that restrictive software licenses no longer matter because these LLMs can be driven to behave like Bitcoin mixers that bypass licensing and copyright restrictions using the approach detailed in this blog post.</p><p>These zombie companies are about to get harvested if the founders don't "Elon Musk" their companies... fast... especially if they don't have a defensible moat.</p></div><p>So, here's to the next generation of builders. May you use these insights wisely and to your advantage. It's an incredible time to be alive <em>if you just do things</em>.</p><figure><a href="https://ghuntley.com/dothings"><div><p>The future belongs to people who can just do things</p><p>There, I said it. I seriously can’t see a path forward where the majority of software engineers are doing artisanal hand-crafted commits by as soon as the end of 2026. If you are a software engineer and were considering taking a gap year/holiday this year it would be an</p><p><img src="https://ghuntley.com/content/images/icon/android-chrome-192x192-4.png" alt=""><span>Geoffrey Huntley</span><span>Geoffrey Huntley</span></p></div><p><img src="https://ghuntley.com/content/images/thumbnail/1_96TO5SzegxgqzECdkV2LNA-1.webp" alt="" onerror="this.style.display = 'none'"></p></a><figcaption><p><span>go fucking build. if you aren't losing sleep right now and doing 80+hr weeks of coding right now whyyyyyyyy. there's so much opportunity available </span><i><em>right now</em></i><span>...</span></p></figcaption></figure><h2 id="ps-hi-anthropic">ps. hi Anthropic</h2><p>I'm friendly - if you have any concerns/questions please <a href="https://ghuntley.com/contact" rel="noreferrer">contact me</a>. There's not many killer examples of how to do MCP (even though in my <a href="https://ghuntley.com/screwed/" rel="noreferrer">last post I recommended folks learn em</a>) properly and in a follow-up blog post coming shortly I'll be going deep from fundamentals to teach folks how to do it. Your tool system prompts are A+++ and I'm a big fan...</p><figure><blockquote><p lang="en" dir="ltr">I think you should be making your tool descriptions much much longer. They are like system prompts.</p>— Quinn Slack (@sqs) <a href="https://twitter.com/sqs/status/1894209937552936994?ref_src=twsrc%5Etfw&amp;ref=ghuntley.com">February 25, 2025</a></blockquote>
</figure><p>If you enjoyed reading, give 'em a share please:</p><ul><li>Twitter: <a href="https://x.com/GeoffreyHuntley/status/1895755817082892340?ref=ghuntley.com">https://x.com/GeoffreyHuntley/status/1895755817082892340</a></li><li>BlueSky: <a href="https://bsky.app/profile/ghuntley.com/post/3ljcjfbqpsh2k?ref=ghuntley.com">https://bsky.app/profile/ghuntley.com/post/3ljcjfbqpsh2k</a></li></ul>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zen 5's AVX-512 Frequency Behavior (183 pts)]]></title>
            <link>https://chipsandcheese.com/p/zen-5s-avx-512-frequency-behavior</link>
            <guid>43215781</guid>
            <pubDate>Sat, 01 Mar 2025 04:10:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chipsandcheese.com/p/zen-5s-avx-512-frequency-behavior">https://chipsandcheese.com/p/zen-5s-avx-512-frequency-behavior</a>, See on <a href="https://news.ycombinator.com/item?id=43215781">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p>Zen 5 is AMD's first core to use full-width AVX-512 datapaths. Its vector execution units are 512 bits wide, and its L1 data cache can service two 512-bit loads per cycle. Intel went straight to 512-bit datapaths with Skylake-X back in 2017, and used fixed frequency offsets and transition periods to handle AVX-512 power demands. Later Intel CPUs did away with fixed fixed frequency offsets, but Skylake-X's AVX-512 teething troubles demonstrate the difficulties that come with running wide datapaths at high clock speeds. Zen 5 benefits from a much better process node and also has no fixed clock speed offsets when running AVX-512 code.</p><blockquote><p>Through the use of improved on-die sensors, AC capacitance (Cac) monitors, and di/dt-based adaptive clocking, "Zen 5" can achieve full AVX512 performance at peak core frequency.</p><p>"Zen 5": The AMD High-Performance 4nm x86-64 Microprocessor Core</p></blockquote><p><span>But if a Zen 5 core is running at 5.7 GHz and suddenly gets faced with an AVX-512 workload, what exactly happens? Here, I'm probing AVX-512 behavior using a modified version of my boost clock testing code. I wrote that code </span><a href="https://chipsandcheese.com/p/how-quickly-do-cpus-change-clock-speeds" rel="">a couple years ago</a><span> and used dependent integer adds to infer clock speed. Integer addition typically has single cycle latency, making it a good platform-independent proxy for clock speed. Instead of checking clock ramp time, I'm switching to a different test function with AVX-512 instructions mixed in after each dependent add. I also make sure the instructions I place between the dependent adds are well within what Zen 5's FPU can handle every cycle, which prevents the FPU from becoming a bottleneck.</span></p><p>I started by placing two fused multiply-add (FMA) instructions in each iteration, each of which operates on a 512-bit vector of packed FP32 values. After the Ryzen 9 reaches 5.7 GHz running the scalar integer function, I switch over to AVX-512 instructions.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png" width="1456" height="716" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:716,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:63918,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5ffc7d0-e256-4457-9560-79b8ad8586bf_1530x752.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>Impressively, nothing changes. The dependent integer adds continue to execute at ~5.7 GHz. Zooming in doesn’t show a transition period either. I see a single data point covering 1.3 microseconds where the core executed those dependent integer adds at “only” a 5.3 GHz average. The very next data point shows the core running at full speed again.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png" width="1456" height="710" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:710,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:63995,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3b8ab9e-6d15-453a-b409-c855881e55d6_1538x750.png 1456w" sizes="100vw"></picture></div></a></figure></div><p><span>Evidently, Zen 5’s FPU is not troubled by getting hit with 512-bit vector operations, even when running at 5.7 GHz. If there is a transition period for the increased power draw, it’s so tiny that it can be ignored. That </span><a href="http://numberworld.org/blogs/2024_8_7_zen5_avx512_teardown/" rel="">matches Alex Yee’s observations</a><span>, and shows just how strong Zen 5’s FPU is. For comparison, the same experiment on Skylake-X shows both a transition period and lower clock speeds after the transition completes. Intel’s Core i9-10900X reaches 4.65 GHz after a rather long clock ramp using scalar integer code. Switching to the AVX-512 test function drops clock speeds to 4 GHz, a significant decrease from 4.65 GHz.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png" width="1450" height="637" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:637,&quot;width&quot;:1450,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:85689,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4f3126be-3a1c-4f5b-8eb2-56dc5bc624b3_1450x637.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>Zooming in on Skylake-X data reveals a transition period, which </span><a href="https://travisdowns.github.io/blog/2020/01/17/avxfreq1.html#512-bit-integer-simd-avx-512" rel="">Travis Downs</a><span> and </span><a href="http://numberworld.org/blogs/2024_8_7_zen5_avx512_teardown/" rel="">Alex Yee</a><span> noted from a while ago. My test eats a longer 55 microsecond transition period though. Travis Downs saw a 20 microsecond transition, while Alex Yee mentions a 50k cycle delay (~12 microseconds at 4 GHz).</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png" width="1441" height="636" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:636,&quot;width&quot;:1441,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:83715,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F922180c5-77ce-48d9-ac58-52c40dec2647_1441x636.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Note the dip after switching to the AVX-512 test function</figcaption></figure></div><p>I’m not sure why I see a longer transition, but I don’t want to dwell on it because of methodology differences. Travis Downs used vector integer instructions, and I used floating point ones. And I want to focus on Zen 5.</p><p>After the transition finishes, the i9-10900X levels out at 3.7 GHz, then briefly settles at 3.8 GHz for less than 0.1 ms before reaching its steady state 4 GHz speed.</p><p>Zen 5 also doubles L1D load bandwidth, and I’m exercising that by having each FMA instruction source an input from the data cache. I used the following pattern above:</p><pre><code><code>  add rbx, r8
  vfmadd132ps zmm16, zmm1, zmm0
  vfmadd132ps zmm17, zmm2, zmm0
  
  add rbx, r8
  vfmadd132ps zmm18, zmm3, zmm0
  vfmadd132ps zmm19, zmm4, zmm0

  etc</code></code></pre><p>I’m changing those FMA instructions to use a memory operand. Because Zen 5 can handle two 512-bit loads per cycle, the core should have no problems maintaining 3 IPC. That’s two 512-bit FMAs, or 64 FP32 FLOPS, alongside a scalar integer add.</p><pre><code><code>  add rbx, r8
  vfmadd132ps zmm16, zmm1, [r15]
  vfmadd132ps zmm17, zmm2, [r15 + 64]

  add rbx, r8
  vfmadd132ps zmm18, zmm3, [r15 + 128]
  vfmadd132ps zmm19, zmm4, [r15 + 192]

  etc</code></code></pre><p>With the load/store unit’s 512-bit paths in play, the Ryzen 9 9900X has to undergo a transition period of some sort before recovering to 5.5 GHz. From the instruction throughput perspective, Zen 5 apparently dips to 4.7 GHz and stays there for a dozen milliseconds. Then it slowly ramps back up until it reaches steady state speeds.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png" width="1456" height="658" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:658,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:79917,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F247c5fe6-4ef1-451b-9893-f36a2e18c271_1532x692.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The Ryzen 9 9900X splits its cores across two Core Complex Dies, or CCDs. The first CCD can reach 5.7 GHz, while the second tops out at 5.4 GHz. Cores on the second CCD show no transition period on this test.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png" width="1456" height="667" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:667,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:117219,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe453729e-6a7d-4012-a6a1-74878d41b186_1619x742.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Cores within the fast CCD all need a transition period, but the exact nature of that transition varies. Not all cores reach steady state AVX-512 frequencies at the same time, and some cores take a sharper hit when this heavy AVX-512 sequence shows up.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png" width="1280" height="749" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:749,&quot;width&quot;:1280,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:111926,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b47b604-6628-4a80-8f91-4c66b34e6e94_1280x749.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Not showing the switch point because it’s pretty obvious where it is, and happens at about the same time for all cores within CCD0</figcaption></figure></div><p>Per-core variation suggests each Zen 5 core has its own sensors and adjusts its performance depending on something. Perhaps it’s measuring voltage. From this observation, I wouldn’t be surprised if another 9900X example shows slightly different behavior.</p><p>Zen 5’s frequency appears to dip during the transition period, based on how fast it’s executing instructions compared to its expected capability. But while my approach of using dependent scalar integer adds is portable, it can’t differentiate between a core running at lower frequency and a core refusing to execute instructions at full rate. The second case may sound weird. But Travis Downs concluded Skylake-X did exactly that based on performance counter data.</p><blockquote><p>[Skylake-X] continues executing instructions during a voltage transition, but at a greatly reduced speed: 1/4th of the usual instruction dispatch rate</p><p><a href="https://travisdowns.github.io/blog/2020/01/17/avxfreq1.html#512-bit-integer-simd-avx-512" rel="">Gathering Intel on Intel AVX-512 Transitions</a><span>, Travis Downs</span></p></blockquote><p>Executing instructions at 1/4 rate would make me infer a 4 GHz core is running at 1 GHz, which is exactly what I see with the Skylake-X transition graph above. Something similar actually happens on Zen 5. It’s not executing instructions at the usual rate during the transition period, making it look like it’s clocking slower from the software perspective.</p><p>But performance counter data shows Zen 5 does not sharply reduce its clock speed when hit with AVX-512 code. Instead, it gradually backs off from maximum frequency until it reaches a sustainable clock speed for the workload it’s hit with. During that period, instructions per cycle (IPC) decreases. IPC gradually recovers as clock speeds get closer to the final steady-state frequency. Once that happens, instruction execution rate recovers to the expected 3 IPC (1x integer add + 2x FMA).</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png" width="1456" height="642" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:642,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:92699,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F291aaf1f-93cf-47bb-ae95-ab4227f0a537_1523x672.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>I do have some extra margin of error when reading performance counter data, because I’m calling Linux’s </span><code>perf</code><span> API before and after each function call, but measuring time within those function calls. That error would become negligible if the test function runs for longer, with a higher iteration count. But I’m keeping iteration counts low to look for short transitions, resulting in a 1-3% margin of error. That’s fine for seeing whether the dip in execution speed is truly caused by lower clock speed.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png" width="967" height="202" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:202,&quot;width&quot;:967,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:49981,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0936be87-4a11-4bef-ac57-b013f0ee8e66_967x202.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>As you might expect, different cores within CCD0 vary in how much they do “IPC throttling”, for lack of a better term. Some cores cut IPC more than others when hit with sudden AVX-512 load. Curiously, a core that cuts IPC harder (core 0) reaches steady state a tiny bit faster than a core that cut IPC less to start with (core 3).</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png" width="1282" height="563" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:563,&quot;width&quot;:1282,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:59800,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0698c5e0-22cd-43bd-8287-bbd84cd0ea99_1282x563.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>Now I wonder if Zen 5’s IPC throttling is triggered by the load/store unit, or overall load. Creating heavier FPU load should make that clear. Zen 5’s FPU has four pipes for math operations. FMA operations can go down two of those pipes. Dropping a </span><code>vaddps</code><span> into the mix will load a third pipe. On the fast CCD, that increases the transition period from ~22 to ~32 ms. Steady state clock speed decreases by about 150 MHz compared to the prior test.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png" width="1279" height="609" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:609,&quot;width&quot;:1279,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:84835,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F60d59057-89d6-4114-99f3-0ccc11a60aeb_1279x609.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Therefore, overall stress on the core (for lack of a better term) determines whether Zen 5 needs a transition period. It just so happens that 512-bit accesses to the memory subsystem are heavy. 512-bit register-to-register operations are no big deal, but adding more of them on top of data cache accesses increases stress on the core and causes more IPC throttling.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png" width="1278" height="551" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/af1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:551,&quot;width&quot;:1278,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:65127,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Faf1d44bd-2d3f-419d-becc-4d7833897fa7_1278x551.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>To be clear, IPC during the transition period with the 512-bit FP add thrown in is higher than before. But 2.75 IPC is 68.75% of the expected 4 GHz, while 2.5 IPC in the prior test is 83.3% of the expected 3 IPC.</p><p>Performance counter data suggests the core decreases actual clock speed at a similar rate on both tests. The heavier load causes a longer transition period because the core has to keep reducing clocks for longer before things stabilize.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png" width="1281" height="547" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a0eb95df-20c0-490d-9033-5524562ac973_1281x547.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:547,&quot;width&quot;:1281,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:250356,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0eb95df-20c0-490d-9033-5524562ac973_1281x547.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Really zoomed in, especially on the y-axis</figcaption></figure></div><p>Even with this heavier load, a core on the 9900X’s fast CCD still clocks higher than one on the slower CCD. Testing the add + 2x FMA + FADD combination on the slower CCD did not show any transition period. That’s a hint Zen 5 only needs IPC throttling if clock speed is too high when a heavy AVX-512 sequence comes up.</p><p>Transitions and the associated IPC throttling could be problematic if software rapidly alternates between heavy AVX-512 sequences and light scalar integer code. But AMD does not let Zen 5 get stuck repeatedly taking transition penalties. If I switch between the AVX-512 and scalar integer test functions, the transition doesn’t repeat.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png" width="1354" height="752" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/baf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:752,&quot;width&quot;:1354,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:110549,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbaf951ab-c60c-4a25-949a-a2b9bf276806_1354x752.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>AMD does not immediately let Zen 5 return to maximum frequency after AVX-512 load lets up. From the start of the graph we can see Zen 5 can ramp clocks from idle to 5.7 GHz in just a few milliseconds, so this isn’t a limitation of how fast the core can pull off frequency changes. Remember how the slower CCD never suffered transitions? I suspect that’s because it never found itself clocked too high to begin with. Apparently the same also applies to the fast CCD. If it happens to be running at a lower clock when a heavy AVX-512 sequence shows up, it doesn’t need to transition.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png" width="1354" height="751" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:751,&quot;width&quot;:1354,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:112416,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F928f2131-cf9d-4c6f-970b-1c85aba2afbc_1354x751.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Longer function switching intervals bring the transitions back, but now they’re softer. The first transition interval starts at 5.61 GHz and ends at 5.39 GHz. It takes nearly 21 ms.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png" width="1353" height="755" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:755,&quot;width&quot;:1353,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:111918,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcea8e5f2-ace0-49a2-a30f-6641ef8d14bd_1353x755.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The next transition starts when Zen 5 has only recovered to 5.55 GHz, and only lasts ~10 ms. IPC throttling is less severe too. IPC only drops to ~3.2 IPC, not 2.7 GHz like before.</p><p>With an even longer switching interval, I can finally trigger full-out transitions in repeated fashion. Thus transition periods and IPC throttling behavior vary depending on how much excessive clock speed the core has to shed.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png" width="1343" height="724" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:724,&quot;width&quot;:1343,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:93185,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2fc714bb-5d4e-4d75-b41a-f41b2b0feb91_1343x724.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The longer switch interval also shows that Zen 5 takes over 100 ms to fully regain maximum clocks after the heavy AVX-512 load disappears. Therefore, the simple scalar integer code with just dependent adds is running slower for some time. It’s worth noting that “slower” here is still 5.3 GHz, and very fast in an absolute sense. AMD’s Ryzen 9 9900X is not shedding 600 MHz like Intel’s old Core i9-10900X did with a lighter AVX-512 test sequence.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png" width="1343" height="725" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:725,&quot;width&quot;:1343,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:128407,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1705d5da-5a6c-4a28-8520-f764062bf430_1343x725.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Zen 5’s clock ramp during the recovery period isn’t linear. It gains 200 MHz over the first 50 ms, but takes longer than 50 ms to recover the last 100 MHz. I think this behavior is deliberate and aimed at avoiding frequent transitions. If heavy AVX-512 code might show up again, keeping the core clock just a few percent lower is bettert than throttling IPC by over 30%. As clock speed goes higher and potential transitions become more expensive, the core becomes less brave and increases clocks slower.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png" width="1342" height="721" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:721,&quot;width&quot;:1342,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:115224,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F24bc6e6e-df67-4b99-8e7e-c3035aac239e_1342x721.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>The way IPC drops more while clock speed (from perf counters) remains constant makes it feel like voltage droop. No way to tell though</figcaption></figure></div><p>Quickly switching between scalar integer and heavy AVX-512 code basically spreads out the transition, so that the core eventually converges at a sustainable clock speed for the AVX-512 sequence in question. Scalar integer code between AVX-512 sequences continues to run at full speed. And the degree of IPC throttling is very fine grained. There is no fixed 1:4 rate as on Skylake-X.</p><p><span>Zen 5 also has performance counters that describe why the renamer could not send micro-ops downstream. One reason is that the floating point non-scheduling queue (FP NSQ) is full. The FP NSQ on Zen 5 basically acts as the entry point for the FPU. See the prior </span><a href="https://chipsandcheese.com/p/amds-ryzen-9950x-zen-5-on-desktop" rel="">Zen 5 article</a><span> for more details.</span></p><p>If the NSQ fills often, the frontend is supplying the FPU with micro-ops faster than the FPU can handle them. As mentioned earlier, Zen 5’s FPU should have no problems doing two 512-bit FMA operations together with a 512-bit FP add every cycle.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png" width="1423" height="724" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:724,&quot;width&quot;:1423,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:157309,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c021ba1-f71e-4822-8f1d-3a0be87c2b77_1423x724.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>FP NSQ dispatch stall counts are still nonzero after the transition ends, so the test might have some margin of error from sub-optimal pipe assignment within the FPU. Life can’t be perfect right</figcaption></figure></div><p>But during the transition period, the FP NSQ fills up quite often. At its worst, it’s full over nearly 10% of (actual) cycles. Therefore Zen 5’s frontend and renamer are running at full speed. The IPC throttling is happening somewhere further down the pipeline. Likely, Zen 5’s FP scheduler is holding back and not issuing micro-ops every cycle even when they’re ready. AMD doesn’t have performance counters at the schedule/execute stage, so that theory is impossible to verify.</p><p>Running 512-bit execution units at 5.7 GHz is no small feat, and it’s amazing Zen 5 can do that. The core’s FPU by itself is very efficient. But hit more 512-bit datapaths around the core, and you’ll eventually run into cases where the core can’t do what you’re asking of it at 5.7 GHz. Zen 5 handles such sudden, heavy AVX-512 load with a very fine grained IPC throttling mechanism. It likely uses feedback from per-core sensors, and has varying behavior even between cores on the same CCD. Load-related clock frequency changes are slow in both directions, likely to avoid repeated IPC throttling and preserve high performance for scalar integer code in close proximity to heavy AVX-512 sequences.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png" width="1124" height="1080" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1080,&quot;width&quot;:1124,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1633165,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff47eab0e-3168-4170-81d6-62a92c9d95b2_1124x1080.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>The tested chip</figcaption></figure></div><p>Transient IPC throttling raises deep philosophical questions about the meaning of clock frequency. If you maintain a 5.7 GHz clock signal and increment performance counters every cycle, but execute instructions as if you were running at 3.6 GHz, how fast are you really running? Certainly it’s 5.7 GHz from a hardware monitoring perspective. But from a software performance perspective, the core behaves more like it’s running at 3.6 GHz. Which perspective is correct? If a tree falls and no one’s around to hear it, did it make a sound? What if some parts of the core are running at full speed, but others aren’t? If a tree is split by lightning and only half of it falls, is it still standing?</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp" width="827" height="539" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:539,&quot;width&quot;:827,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:98466,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/webp&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://chipsandcheese.com/i/158152986?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb540b7a6-1bb2-4187-b084-36b2b63e066b_827x539.webp 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Pads on the back of the 9900X. Pretty eh?</figcaption></figure></div><p>Stepping back though, Zen 5’s AVX-512 clock behavior is much better than Skylake-X’s. Zen 5 has no fixed frequency offsets for AVX-512, and can handle heavier AVX-512 sequences while losing less clock speed than Skylake-X. Transitions triggered by heavier AVX-512 sequences are interesting, but Zen 5’s clocking strategy seems built to minimize those transitions. Maybe corner cases exist where Zen 5’s IPC throttling can significantly impact performance. I suspect such corner cases are rare, because Zen 5 has been out for a while and I haven’t seen anyone complain. And even if it does show up, you can likely avoid the worst of it by running on a slower clocked CCD (or part). Still, it was interesting to trigger it with a synthetic test and see just how AMD deals with 512-bit datapaths at high speed.</p><p><span>If you like the content then consider heading over to the </span><a href="https://www.patreon.com/ChipsandCheese" rel="">Patreon</a><span> or </span><a href="https://www.paypal.com/donate/?hosted_button_id=4EMPH66SBGVSQ" rel="">PayPal</a><span> if you want to toss a few bucks to Chips and Cheese. Also consider joining the </span><a href="https://discord.gg/TwVnRhxgY2" rel="">Discord</a><span>.</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[When eBPF pt_regs reads return garbage on the latest Linux kernels, blame Fred (101 pts)]]></title>
            <link>https://tanelpoder.com/posts/ebpf-pt-regs-error-on-linux-blame-fred/</link>
            <guid>43214576</guid>
            <pubDate>Sat, 01 Mar 2025 01:37:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tanelpoder.com/posts/ebpf-pt-regs-error-on-linux-blame-fred/">https://tanelpoder.com/posts/ebpf-pt-regs-error-on-linux-blame-fred/</a>, See on <a href="https://news.ycombinator.com/item?id=43214576">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><em><strong>TLDR;</strong> Starting from Linux kernel version 6.9 on x86_64, there’s a new config option <code>CONFIG_X86_FRED</code> enabled and it <a href="https://github.com/torvalds/linux/blob/master/arch/x86/include/asm/thread_info.h#L45">adds 16 bytes</a> to the starting point of a task’s kernel stack area, so you’ll need to account for this extra padding in your “raw” kernel stack &amp; pt_regs lookup code.</em></p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>I’ve been using Ubuntu 24.04 as my main eBPF development and testing platform without issues since its release. It is shipped with Linux kernel version 6.8.0, but Canonical recently released an optional newer kernel (HWE) version 6.11 for it too. So, naturally I upgraded to the latest version <em>(linux-image-generic-hwe-24.04 -&gt; 6.11.0)</em> and moved on.</p>
<p>Then, suddenly my <a href="https://0x.tools/">0x.tools</a> <strong>xcapture-next</strong> (v3) eBPF prototype started returning garbage values for the current system call and argument samples of its monitored OS threads. No problem when booting up with the old 6.8.0 kernel.</p>
<blockquote>
<p>The xcapture-next (v3) tool <em>passively samples</em> other threads’ activity &amp; state by reading their <code>task_struct</code> kernel memory as a decoupled outside observer, without needing to inject <em>any</em> probes or tracepoints into other tasks execution paths. This gives us a pretty good starting point for building a <strong>top for wall-clock time</strong> tool on Linux, without <em>any</em> slowdown for all your other threads in the system (thanks to passive sampling with BPF <em>task iterators</em>). <sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup></p>
</blockquote>
<p>By “garbage”, I mean that my eBPF task iterator program that looped through all the other threads’ <strong>task_struct</strong> info and accessed things like <code>task-&gt;stack-&gt;pt_regs-&gt;orig_ax</code> to get the current system call number (if a task was in a system call), suddenly reported that all userspace threads were in a <code>getsockname</code> syscall instead of their usual names seen in previous tests. This was clearly not correct, so I started investigating:</p>
<pre>$ grep getsockname syscall_x86_64.tbl
<mark>51</mark>  common  getsockname     sys_getsockname
</pre>
<p>The reported syscall’s NR is 51 - I first wondered if my eBPF program hit some memory access violation on the new kernel and the xcapture frontend incorrectly treated that error code as a syscall number (the EACCESS errno is 13 and EFAULT is 14):</p>
<pre>$ grep 51 include/uapi/asm-generic/errno.h
#define <mark>EL2HLT</mark>    51  <strong>/* Level 2 halted */</strong>
</pre>
<p>Yeah, this doesn’t look like my issue. Errno 51 is something archaic and esoteric and I don’t think it’s used anywhere really - and a grep through Linux source code confirmed that (although some out-of-tree module could still raise it if it wanted to).</p>
<p>I then changed my eBPF code to use <code>BPF_CORE_READ_INTO</code> macros (instead of <code>BPF_CORE_READ</code>) that return the result/error code and the actual value read as separate variables and it confirmed that I wasn’t hitting any kernel memory reading errors. The memory address I was reading just happened to hold a value of <code>51</code> in it, but only when booting the installation up with the new 6.11 kernel, not with the previous 6.8 kernel on the same system that worked perfectly fine.</p>
<p>Long story short: On x86_64 platforms, starting from Linux kernel v6.9, there’s a new feature called <strong>FRED</strong> (Flexible Return and Event Delivery system) enabled by default and it affects the kernel stack area init/usage behavior. 16 extra bytes are allocated at the bottom of a task’s kernel-side stack, before the <code>pt_regs</code> structure is allocated and placed after it on syscall entry from userspace. The definition is in <a href="https://github.com/torvalds/linux/blob/master/arch/x86/include/asm/thread_info.h">/arch/x86/include/asm/thread_info.h</a> in kernel source (search for FRED).</p>
<p>I have 2 kernels installed, 6.8 and 6.11:</p>
<pre>$ ls -l /boot/config-6.*
-rw-r--r-- 1 root root 292076 Jan 20 15:47 /boot/config-6.11.0-17-generic
-rw-r--r-- 1 root root 287562 Jan 17 07:05 /boot/config-6.8.0-53-generic
</pre>
<p>When I grep for the <code>CONFIG_X86_FRED</code> variable, 6.8 does not have such a feature flag!</p>
<pre>$ grep CONFIG_X86_FRED /boot/config-6.*
/boot/config-<mark>6.11</mark>.0-17-generic:<strong>CONFIG_X86_FRED=y</strong>
</pre>
<p>The Linux <a href="https://github.com/torvalds/linux/blob/master/arch/x86/include/asm/thread_info.h#L45">thread_info.h</a> for x86 shows this:</p>
<pre>...
#ifdef CONFIG_X86_32
# ifdef CONFIG_VM86
#  define TOP_OF_KERNEL_STACK_PADDING 16
# else
#  define TOP_OF_KERNEL_STACK_PADDING 8
# endif
#else /* x86-64 */
# ifdef <mark>CONFIG_X86_FRED</mark>
#  define TOP_OF_KERNEL_STACK_PADDING <strong>(2 * 8)</strong>
# else
#  define TOP_OF_KERNEL_STACK_PADDING <strong>0</strong>
# endif
#endif
...
</pre>
<p>This flag showed up in v6.9-rc1, so that explains why my previous 6.8 kernel didn’t have this issue, but 6.11 did!</p>
<h3 id="what-is-fred">What is FRED?</h3>
<p>What is FRED? It’s basically a further CPU privilege level switching (and returning) optimization in Intel CPUs, somewhat like the evolution from having to raise <code>int 0x80</code> <em>interrupts</em> to just running <code>syscall</code> or <code>sysenter</code> built-in <em>CPU instructions</em> for faster context &amp; privilege level switching to invoke system calls. FRED (on Intel CPUs) brings us two brand new instructions <code>ERETU</code> and <code>ERETS</code>. You can read the entire Intel FRED architecture spec (but I didn’t), the best summary I found is in this article:</p>
<ul>
<li><a href="https://www.eejournal.com/article/we-interrupt-this-program/">https://www.eejournal.com/article/we-interrupt-this-program/</a></li>
</ul>
<p>Apparently, FRED means that Intel CPUs are moving away from the four CPU privilege levels (ring 0-3) that nobody ever widely used anyway, back to just two - privileged and unprivileged.</p>
<h3 id="dynamic-fred-detection-implementation-in-my-ebpf-code">Dynamic FRED-detection implementation in my eBPF code</h3>
<p>It’s not easy to read such compile-time constants or build-time settings from the eBPF kernel-land, so my current (unpublished) code snippet for detecting FRED in xcapture on x86 is roughly following.</p>
<p>I have defined a custom <strong>fred_info___check</strong> structure in a separate .h file, so that the program would still compile on kernels without knowledge of the actual FRED <strong>fred_info</strong> structure. The triple underscore “___” in the struct name has a special meaning<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">2</a></sup>.</p>
<pre>struct fred_info<mark>___</mark>check {
    long unsigned int edata;
} __attribute__((preserve_access_index));
</pre>
<p>And a snippet from the main .bpf.c program code:</p>
<pre>// Default page size and thread stack size (THREAD_SIZE) configuration
#define PAGE_SIZE 4096
#define KASAN_STACK_ORDER 0

#define THREAD_SIZE_ORDER (2 + KASAN_STACK_ORDER)
#define THREAD_SIZE  (PAGE_SIZE &lt;&lt; THREAD_SIZE_ORDER)

// x86_64 only (CONFIG_X86_FRED)
#define TOP_OF_KERNEL_STACK_PADDING_FRED (2 * 8)

// The PT_REGS structure is located at the "top" (highest address) of the kernel stack
static __always_inline struct pt_regs *<strong>get_task_pt_regs</strong>(struct task_struct *task)
{
    // will use true=1 and false=0 for regs_addr calculation later on
    const bool <strong>fred_enabled</strong> = <mark>bpf_core_type_exists(struct fred_info___check)</mark>;

    __u64 stack_base = (__u64) BPF_CORE_READ(task, stack);
    if (!stack_base)
        return NULL;
    
    __u64 regs_addr = (
            stack_base
          + THREAD_SIZE
          - (<strong>fred_enabled * TOP_OF_KERNEL_STACK_PADDING_FRED</strong>)
          - sizeof(struct pt_regs)
    );

    struct pt_regs *regs = (struct pt_regs *) regs_addr;

    return regs;
}
</pre>
<p>I’ll publish the next version of xcapture-next with the full code soon, so you’ll see how the dynamic &amp; direct kernel feature detection works. I’m using a <code>bpf_core_type_exists</code> trick to see if the new kernel structures added by FRED exist in the <em>currently running</em> kernel and decide whether to add extra “padding” to my <code>pt_regs</code> lookup logic based on that.</p>
<h3 id="a-few-details-worth-remembering">A few details worth remembering</h3>
<ul>
<li>FRED is an Intel x86 platform feature. AMD has (or will have) also something similar, but since there’s a single x86 build for both AMD and Intel’s <code>x86_64</code>, then this FRED <em>padding</em> kicks in also on AMD machines.</li>
<li>Disabling FRED-behavior using <code>fred=off</code> as a kernel boot argument won’t remove this extra struct/padding, as long as <code>CONFIG_X86_FRED</code> is enabled in your kernel <em>build</em> settings and you don’t compile a whole new kernel.</li>
<li>This should not affect programs that just follow/dereference the standard arguments &amp; structs that the typical eBPF probes present. The built-in bpf_core_* helper functions and corresponding BPF_CORE_* macros should take care of any “surprises” introduced in newer kernel versions and hide that complexity from you.</li>
<li>The moment you get into the “raw” eBPF progam territory, you will have to deal with any underlying behavior changes and address shifts yourself. In this case I was doing custom (non-BTF) memory address arithmetic on basic unsigned long ints and later “casting” the resulting number to a struct address. eBPF verifier thankfully allowed me to do that, but I should better know what I’m doing - on the given platform and kernel version!</li>
</ul>
<p>I hope this article saves a few hours of head-scratching &amp; troubleshooting time for some future eBPF developers turned into web-searchers out there, just like me a week ago :-)</p>
<p>HN discussion is here:</p>
<ul>
<li><a href="https://news.ycombinator.com/item?id=43214576">https://news.ycombinator.com/item?id=43214576</a></li>
</ul>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Self-Hosting a Firefox Sync Server (313 pts)]]></title>
            <link>https://blog.diego.dev/posts/firefox-sync-server/</link>
            <guid>43214294</guid>
            <pubDate>Sat, 01 Mar 2025 01:03:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.diego.dev/posts/firefox-sync-server/">https://blog.diego.dev/posts/firefox-sync-server/</a>, See on <a href="https://news.ycombinator.com/item?id=43214294">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>After switching from Firefox to LibreWolf, I became interested in the idea of self-hosting my own Firefox Sync server.
Although I had seen this was possible before, I had never really looked into it—until now. I embarked on a journey to
set this up, and while it wasn’t completely smooth sailing, I eventually got it working. Here’s how it went.</p><h2 id="finding-the-right-sync-server">Finding the Right Sync Server</h2><h3 id="initial-search-mozillas-sync-server-repo">Initial Search: Mozilla’s Sync Server Repo</h3><p>I started by searching for “firefox sync server github” and quickly
found <a href="https://github.com/mozilla-services/syncserver">Mozilla’s syncserver repo</a>. This is an all-in-one package
designed for self-hosting a Firefox Sync server. It bundles both the tokenserver for authentication and syncstorage for
storage, which sounded like exactly what I needed.</p><p>However, there were two red flags:</p><ol><li>The repository had “failed” tags in the build history.</li><li>A warning was prominently displayed stating that the repository was no longer being maintained and pointing to a new
project in Rust.</li></ol><h3 id="switching-to-rust-syncstorage-rs">Switching to Rust: syncstorage-rs</h3><p>With that in mind, I followed the link to <a href="https://github.com/mozilla-services/syncstorage-rs">syncstorage-rs</a>, which is
a modern, Rust-based version of the original project. It seemed like the more viable option, so I decided to move
forward with this one. But first, I wanted to check if there was a ready-to-go Docker image to make deployment easier.
Unfortunately, there wasn’t one, but the documentation did mention running it with Docker.</p><p>This is where things started to get complicated.</p><h2 id="diving-into-docker-confusion-and-complexity">Diving Into Docker: Confusion and Complexity</h2><h3 id="documentation-woes">Documentation Woes</h3><p>The Docker documentation had some strange parts. For example, it mentioned:</p><ul><li>Ensuring that <code>grpcio</code> and <code>protobuf</code> versions matched the versions used by <code>google-cloud-rust-raw</code>. This sounded
odd—shouldn’t Docker handle version dependencies automatically?</li><li>Another confusing part was the instruction to manually copy the contents of <code>mozilla-rust-sdk</code> into the top-level root
directory. Again, why wasn’t this step automated in the Dockerfile?</li></ul><p>At this point, I was feeling a bit uneasy but decided to push forward. I reviewed the repo, the Dockerfile, the
Makefile, and the circleci workflows. Despite all that, I was still unsure how to proceed.</p><h3 id="a-simpler-solution-syncstorage-rs-docker">A Simpler Solution: syncstorage-rs-docker</h3><p>I then stumbled upon <a href="https://github.com/dan-r/syncstorage-rs-docker">dan-r’s syncstorage-rs-docker repo</a>, which had a
much simpler Docker setup. The description explained that the author had also encountered issues with the
original documentation and decided to create a Docker container for their own infrastructure.</p><p>At this point, I felt reassured that I wasn’t alone in my confusion, and decided to give this setup a try.</p><h2 id="setting-up-the-server-docker-compose-and-mariadb">Setting Up the Server: Docker Compose and MariaDB</h2><h3 id="docker-compose-setup">Docker Compose Setup</h3><p>I copied the following services into my <code>docker-compose.yaml</code>:</p><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>  </span><span>firefox_mariadb</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>firefox_mariadb</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>linuxserver/mariadb:10.6.13</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>/data/ffsync/dbdata:/config</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>MYSQL_DATABASE</span><span>:</span><span> </span><span>syncstorage</span><span>
</span></span></span><span><span><span>      </span><span>MYSQL_USER</span><span>:</span><span> </span><span>sync</span><span>
</span></span></span><span><span><span>      </span><span>MYSQL_PASSWORD</span><span>:</span><span> </span><span>syncpass</span><span>
</span></span></span><span><span><span>      </span><span>MYSQL_ROOT_PASSWORD</span><span>:</span><span> </span><span>rootpass</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>firefox_syncserver</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>firefox_syncserver</span><span>
</span></span></span><span><span><span>    </span><span>build</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>context</span><span>:</span><span> </span><span>/root/ffsync</span><span>
</span></span></span><span><span><span>      </span><span>dockerfile</span><span>:</span><span> </span><span>Dockerfile</span><span>
</span></span></span><span><span><span>      </span><span>args</span><span>:</span><span>
</span></span></span><span><span><span>        </span><span>BUILDKIT_INLINE_CACHE</span><span>:</span><span> </span><span>1</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"8000:8000"</span><span>
</span></span></span><span><span><span>    </span><span>depends_on</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>firefox_mariadb</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>LOGLEVEL</span><span>:</span><span> </span><span>info</span><span>
</span></span></span><span><span><span>      </span><span>SYNC_URL</span><span>:</span><span> </span><span>https://mydomain/sync</span><span>
</span></span></span><span><span><span>      </span><span>SYNC_CAPACITY</span><span>:</span><span> </span><span>5</span><span>
</span></span></span><span><span><span>      </span><span>SYNC_MASTER_SECRET</span><span>:</span><span> </span><span>mastersecret</span><span>
</span></span></span><span><span><span>      </span><span>METRICS_HASH_SECRET</span><span>:</span><span> </span><span>metricssecret</span><span>
</span></span></span><span><span><span>      </span><span>SYNC_SYNCSTORAGE_DATABASE_URL</span><span>:</span><span> </span><span>mysql://sync:usersync@firefox_mariadb:3306/syncstorage_rs</span><span>
</span></span></span><span><span><span>      </span><span>SYNC_TOKENSERVER_DATABASE_URL</span><span>:</span><span> </span><span>mysql://sync:usersync@firefox_mariadb:3306/tokenserver_rs</span><span>
</span></span></span></code></pre></div><p>A few tips:</p><ul><li>Be cautious with the database passwords. Avoid using special characters like <code>"/|%"</code> as they can cause issues during
setup.</li><li>I added the BUILDKIT_INLINE_CACHE argument to the Docker Compose file to make better use of caching, which reduced
build time while testing.</li></ul><h3 id="initializing-the-database">Initializing the Database</h3><p>I cloned the repository and copied the Dockerfile and <code>initdb.sh</code> script to my server. After making some tweaks, I ran
the following steps to get the database up and running:</p><ol><li>Bring up the MariaDB container:<div><pre tabindex="0"><code data-lang="bash"><span><span>docker-compose up -d firefox_mariadb
</span></span></code></pre></div></li><li>Make the initialization script executable and run it:<div><pre tabindex="0"><code data-lang="bash"><span><span>chmod +x initdb.sh
</span></span><span><span>./initdb.sh
</span></span></code></pre></div></li></ol><h3 id="bringing-the-stack-online">Bringing the Stack Online</h3><p>Finally, I brought up the entire stack with:</p><h2 id="configuring-reverse-proxy-with-caddy">Configuring Reverse Proxy with Caddy</h2><p>Next, I needed to update my Caddy reverse proxy to point to the new Sync server. I added the following configuration:</p><div><pre tabindex="0"><code data-lang="bash"><span><span>mydomain:443 <span>{</span>
</span></span><span><span>     reverse_proxy firefox_syncserver:8000 <span>{</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><p>After updating Caddy with the DNS entry, I restarted the proxy and the sync server was up and running.</p><h2 id="challenges-faced">Challenges Faced</h2><p>While I eventually got everything working, there were a few notable challenges along the way:</p><ol><li><strong>Database persistence</strong>: I had issues with persistent data when restarting the MariaDB container. Make sure to clear
out old data if needed.</li><li><strong>Server storage</strong>: My server ran out of space during the build process due to the size of the Docker images and
intermediate files.</li><li><strong>Following the right steps</strong>: It took me a while to figure out the right steps, and much of the time was spent
experimenting with the Docker setup.</li></ol><h2 id="final-thoughts">Final Thoughts</h2><p>Setting up a self-hosted Firefox Sync server is not the easiest task, especially if you’re not very familiar with Docker
or database management. The official documentation is confusing, but thanks to community efforts like
the <code>syncstorage-rs-docker</code> repo, it’s doable.</p><p>In the end, it took me about two hours to get everything running, but it was worth it. If you’re looking to control your
own Firefox Sync server, this guide should help you avoid some of the pitfalls I encountered.</p><p>Happy syncing!</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Housing Theory of Everything (250 pts)]]></title>
            <link>https://worksinprogress.co/issue/the-housing-theory-of-everything/</link>
            <guid>43214263</guid>
            <pubDate>Sat, 01 Mar 2025 00:59:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://worksinprogress.co/issue/the-housing-theory-of-everything/">https://worksinprogress.co/issue/the-housing-theory-of-everything/</a>, See on <a href="https://news.ycombinator.com/item?id=43214263">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>Western housing shortages do not just prevent many from ever affording their own home. They also drive inequality, climate change, low productivity growth, obesity, and even falling fertility rates.</p><article><div role="presentation"><p>Try listing every problem the Western world has at the moment. Along with Covid, you might include slow growth, climate change, poor health, financial instability, economic inequality, and falling fertility. These longer-term trends contribute to a sense of malaise that many of us feel about our societies. They may seem loosely related, but there is one big thing that makes them all worse. That thing is a shortage of housing: too few homes being built where people want to live. And if we fix those shortages, we will help to solve many of the other, seemingly unrelated problems that we face as well.</p>



<h2 id="the-obvious-effects-of-expensive-housing">The obvious effects of expensive housing</h2>



<p>Where you live affects nearly everything about your life – where you work, how you spend time off, who your friends and neighbours are, how many kids you can have and when, and even how often you get sick. Most people’s most valuable asset is, by far, their own home. And housing is so important for the overall economy because it determines the location and supply of the most important ‘resource’ of all: people.</p>



<p>There’s a growing consensus that housing is too expensive in most Western countries. In many places, the prices of new homes <a href="https://www.aeaweb.org/articles?id=10.1257/jep.32.1.3">far exceed</a> the cost of building more of them. Higher incomes in cities draw people to those places, who use some of their increased wages to bid up rents and house prices there. Easier credit and falling interest rates, which reflect a lower cost of borrowing and lower returns from other investments, <a href="https://www.adamsmith.org/blog/where-house-prices-come-from">have helped people bid up the price of housing as well</a>. For most goods, including very expensive and durable goods like ships and airplanes, higher incomes and falling interest rates would cause supply to increase, instead of keeping the price permanently high. But for housing in and around many in-demand cities, supply has not been able to keep up with demand.</p>



<p>This is true across the developed world: Dublin, Singapore, Auckland, Paris, Vancouver, Rome, Hong Kong, Barcelona, Moscow, Cape Town, Zurich and many other cities have wildly expensive housing compared to the cost of building more of it. Costs are especially high in places whose economies are built on <a href="https://press.princeton.edu/books/hardcover/9780691175034/capitalism-without-capital">intangible capital</a>, like software or financial services. In these kinds of industries, there are especially large benefits to people being near one another, because it makes them both more productive and more innovative. This is why the San Francisco Bay Area – probably the most productive place in the Western world – is also one of the most in-demand places to live. And that demand, plus restrictions on building more houses, is why it is one of the most expensive places to live as well.</p>



<p>This housing affordability problem has become much worse over the past four decades – coinciding with, and partly driven by, the growth of the intangible economy — the move towards production based on software and intellectual property, instead of machinery and other physical capital. In the 1960s, it was commonplace that a middle class single-earner American or British family would be able to afford a comfortable home.</p>



<p>When more people want to live in an area, we either build more homes to accommodate them or squeeze them in to the existing housing stock, with those people bidding up the price of living there. We can see all of these mechanisms in play in the Western world’s most in-demand cities. In London, for example, empty homes now make up only a few percent of the total, as it becomes more and more costly to leave something empty.</p>



<p>The most dramatic evidence of housing scarcity can be seen in price rises over the past forty years. Average New York City metropolitan area house prices <a href="https://www.economist.com/graphic-detail/usa-house-prices">are up 706% since 1980</a> (or 376% more <a href="https://www.minneapolisfed.org/about-us/monetary-policy/inflation-calculator/consumer-price-index-1913-">than US consumer prices</a>, and 326% <a href="https://fred.stlouisfed.org/series/LES1252881500Q">more than US wages</a>). For San Francisco the rise is 932%. London house prices are up <a href="https://landregistry.data.gov.uk/app/ukhpi/browse?from=1980-01-01&amp;location=http%3A%2F%2Flandregistry.data.gov.uk%2Fid%2Fregion%2Flondon&amp;to=2021-07-01&amp;lang=en">over 2,100%</a> in that period (or <a href="https://ourworldindata.org/grapher/nominal-wages-consumer-prices-and-real-wages-in-the-uk-since-1750?time=1980..latest&amp;country=~GBR">around 1,500% more than wages</a>). Prices in Sydney, Australia, have <a href="https://www.abs.gov.au/statistics/economy/price-indexes-and-inflation/residential-property-price-indexes-eight-capital-cities/latest-release">risen</a> by <a href="http://www.econ.mq.edu.au/__data/assets/pdf_file/0018/220581/Abelson_9_04.pdf">1,450%</a> (compared to hourly wage increases <a href="https://fred.stlouisfed.org/series/LCWRTT01AUQ661N">of 480%</a>). In Ireland, prices have <a href="https://fred.stlouisfed.org/series/QIEN628BIS">risen by about 800% in that period</a>, driven by rises in Dublin in particular. Rents show similar, but less extreme, trends, because they are not directly affected by interest rates.</p>



<p>These prices range from about twice to four times the cost of building new homes of equivalent specification. This wedge, between build costs and house prices, is a rough proxy for how much extra cost is being driven by restrictions on new building.</p>



<p>By contrast, almost every other household product has become better and less expensive since then. <a href="https://cafehayek.com/2013/01/cataloging-our-progress-using-sears-com-selection-on-new-years-day-2013.html">Compared to 1975, the number of hours a median American worker would have to work</a> to buy a television fell from 60 hours in 1975 to 7 hours in 2013; to buy a fridge-freezer, it fell from 65 hours in 1975 to 20 hours in 2013; to buy a manual exercise treadmill, from 18 hours in 1975 to 6 hours in 2013; and to buy a washer-dryer, from 67 to 30 hours. <a href="https://fred.stlouisfed.org/graph/?g=Gmsm">Even cars are three times ‘cheaper’ in terms of hours worked</a> on an average hourly wage now than they were in 1964. And none of these estimates accounts for how much better most of these products are now than they were in 1975.</p>



<figure><img src="https://wip.gatspress.com/wp-content/uploads/2022/08/fig_1-2.png" alt=""></figure>



<p>So while other durable goods have become cheaper over time, housing has become more expensive. Even though incomes have risen, both parents in a family now typically have to work to afford a decent family house in a major city, and people have had to move farther and farther outside city centres to find somewhere they can afford to live, spending more time and money on commuting to and from work.</p>



<p>So the <i><em>obvious</em></i> effect of expensive housing is that people often spend a lot of their money on renting or buying their home, leaving them with less money to spend on other things, especially if they live in and around the Western world’s most wealthy cities. And the problem is getting worse.</p>



<figure><img src="https://wip.gatspress.com/wp-content/uploads/2022/08/Works_In_Progress_Skyline_2_Final_V2-scaled.jpg" alt="">
          <figcaption>
            <div>
              <p>
                Illustration for Works in Progress
              </p>
              <div>
                <p>Image</p>
                <p>
                  Kade Byrand 
                </p>
              </div>
            </div>
          </figcaption>
        </figure>







<h4><i>Productivity</i></h4>



<p>The obvious effect of expensive housing – people having less money to spend on other things – is the one most people focus on. But it is only part of the story, because expensive housing makes people change their behaviour too – it affects where you live, what your job is, how big your family is and what your day-to-day life looks like too. And it’s these <i><em>hidden</em></i> effects that are the most important.</p>



<p>As we’ve described above, better jobs drive up the price of housing when it’s difficult to build more. But that works both ways: when housing is scarce in high-productivity areas, some people are priced out of the area altogether, so they can’t move within range of better jobs.</p>



<p>This means that many people are working in less productive jobs than they could if it was easier for them to move to more productive places. Their wages and productivity are lower and it’s harder for highly productive businesses to hire them. That means people who <i><em>do</em></i> get to live in these high-productivity places are less productive than they could be, because they are less able to combine their skills with the complementary skills of the people who have been priced out.</p>



<p>As a result, many businesses end up leaving highly skilled staff without assistance, spending their time on work that could be done by others, lowering the time they can spend on the tasks they’re best at. This happens in people’s private lives too: people often spend hours <a href="https://www.amazon.co.uk/Markets-against-Modernity-Ecological-Irrationality/dp/1498591183">trying to fix their leaky pipes</a> instead of just calling in a plumber, because the prices of plumbers near them have risen to cover the costs for plumbers to live there.</p>



<p>On average, workers in larger cities tend to be more productive than workers with similar skills and education in smaller cities. Sheer size is not all that matters, because complementarity between workers matters even more – a skilled software engineer will likely increase her income more by moving to Berlin (population: 4.4 million) than to Mexico City (population: 21 million). But there is strong empirical evidence that, other things being equal, bigger is better. This helps workers directly: people who moved from small to large cities in a study in Spain <a href="http://diegopuga.org/papers/DeLaRoca_Puga_REStud_2017.pdf">gained a wage premium</a> when they did so, and accumulated better experience as time went by – and their experience persisted even if they moved away later, in the form of higher wages.</p>



<p>In the United States, productivity per worker tends to rise by <a href="https://www.elsevier.com/books/handbook-of-regional-and-urban-economics/duranton/978-0-444-59533-1">2%</a> or <a href="https://sfi-edu.s3.amazonaws.com/sfi-edu/production/uploads/sfi-com/dev/uploads/filer/f3/df/f3df3de1-e4b6-4b68-8bd2-82538b8dcf16/11-09-046.pdf">more</a> with each doubling of city size. The link between size and productivity is only apparent when the city includes skilled, educated workers, which suggests the effect is mostly driven by the transfer of knowledge and division of labour among high-skilled workers. Metropolitan areas that are largely made up of unskilled workers <a href="https://www.nber.org/papers/w15103">do not become more productive as they get bigger</a>.</p>



<p>By historical and global standards, today’s most successful cities in America and other Western countries are astonishingly sparsely populated and sprawling. Haussmann’s Paris, Gaudi’s Barcelona, and the Georgian and Victorian areas of London are much more densely populated than nearly every square mile of the Bay Area and even most of the NYC metro area, other than Manhattan.</p>



<p>The main cause of this is regulations that ban buildings that make better use of the land. Economists Gilles Duranton and Diego Puga <a href="https://www.nber.org/papers/w26591">judge that</a> if New York allowed more of the sorts of densities that were more common historically, rents and house prices would fall towards construction costs, and the city would at least double in population, to over 40 million people. Similar things would happen to the Bay Area, Boston, Los Angeles, and other US ‘superstar’ cities if higher densities were allowed. This could mean those places looking more like central Paris or Barcelona, both of which are incredibly dense (and also happen to be very nice places to live).</p>



<p>The total cost of this regulation-induced sprawl in the United States may be enormous. <a href="https://www.aeaweb.org/articles?id=10.1257/mac.20170388">According to one study</a>, if just three cities – New York City, San Jose and San Francisco – loosened their rules against building denser housing to the national average level of restrictiveness, millions would move to jobs that made the best use of their skills and total US GDP would be 8.9% higher. This would translate into average American wages being $8,775 higher per year. Others go even further. Duranton and Puga estimate that the average income gain from a housing regime that allowed easy building could be around 25%, or around $16,000 more per person per year.</p>



<p>To put that in perspective, 9% is approximately how much the US economy contracted by in the second quarter of 2020, after Covid and lockdowns brought much of the US economy to a standstill. Sixteen thousand dollars per capita is the <i><em>entire</em></i> yearly income of people in Greece or Hungary. That’s a lot of money to leave lying on the sidewalk.</p>



<h4><i>Innovation</i></h4>



<p>Nearly all innovation happens, and has always happened, in cities. Just as cities have vast labour pools that make it easier for workers to find jobs that match their skills, they also allow innovators to collaborate <a href="https://www.worksinprogress.co/issue/clusters-rule-everything-around-me/">to come up with new ways of doing things</a>. Sometimes cities have experienced bursts of innovative output that changed the world – like Amsterdam in the 17th century, Edinburgh and London in the late 18th to early 19th centuries, Cleveland in the late 19th century, Vienna and Detroit in the early 20th century, and San Francisco today.</p>



<p>The Bay Area, including Silicon Valley and San Francisco (population 7.5 million), for example, has played host to more tech start-ups growing to valuations of more than $1 billion than the entirety of Europe (population 750 million) put together. Ten US cities in 2007 <a href="https://eml.berkeley.edu/~moretti/clusters.pdf">produced 70% of the total patents related to computer science and 79% of the total patents around semiconductors</a> – with less than 10% of America’s population.</p>



<p>Part of the reason is that geographical closeness is especially important for the transfer and combination of ideas. And for unconventional ideas, the most valuable combinations are often not obvious in advance and may depend on chance interactions or mixing of individual elements.</p>



<p>Bell Labs, the legendary R&amp;D lab that <a href="https://www.worksinprogress.co/issue/the-rise-and-fall-of-the-american-rd-lab/">invented revolutionary new technologies like the transistor and the photovoltaic cell,</a> was designed so that everyone would at some point <a href="https://www.amazon.com/Idea-Factory-Great-American-Innovation/dp/0143122797">bump into everyone else</a> for this reason. Similarly, Steve Jobs designed Pixar animation studios to have <a href="https://www.inc.com/jeff-miller/3-ways-to-design-an-office-for-collaboration-not-c.html">communal areas situated centrally</a>, and many tech companies today use a similar model. Both the London Stock Exchange and Lloyd’s of London began in the 17th Century as coffee houses – the places where people habitually met both deliberately and accidentally.</p>



<p>US evidence from over 600,000 patents filed from 2000–2010 suggests that low-density places can sustain specialised clusters, but that <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3423143">unconventional breakthroughs benefit from high-density urban environments</a>. For idea-focused industries like software, localisation benefits <a href="https://econpapers.repec.org/bookchap/eeeregchp/4-49.htm">dissipate within 10 miles</a>; for extremely idea-focused industries like advertising, they dissipate <a href="https://econpapers.repec.org/article/ouprestud/v_3a75_3ay_3a2008_3ai_3a4_3ap_3a1011-1038.htm">within half a mile</a>. Inventors who move from a smaller cluster to a bigger cluster tend to <a href="https://www.nber.org/papers/w26270">see large increases in their patenting productivity</a>.</p>



<p>So by limiting the number of people who can go to live in places like the Bay Area, by limiting the number of homes there, we may not just be hurting productivity directly by restricting who people can work with. We may also be missing out on the new ideas that drive society forward and that can lead to dramatic improvements in how we live.</p>



<h4><i>Inequality</i></h4>



<p>Constraints on supply have made houses into scarce assets, more like <a href="https://blogs.lse.ac.uk/politicsandpolicy/turning-houses-into-gold-the-failure-of-british-planning/">bonds, fine art or precious metals</a> than durable goods like refrigerators or cars. This only feels normal because we’re used to it, and does not happen in places where developers can easily add more homes to an area, such as Tokyo, Seoul, or New York City before the 1920s. In places like these, rising demand leads to more supply, not just higher prices.</p>



<p>A fixed supply of housing means improvements in people’s aggregate incomes often partially go to landowners, since people bid up the price of housing with some of their increased income. This is one of the bases for the economist Henry George’s <a href="https://www.google.co.uk/books/edition/Progress_and_poverty/3ZcBAAAAQAAJ?hl=en&amp;gbpv=1&amp;dq=progress+and+poverty&amp;pg=PA1&amp;printsec=frontcover">proposal for taxes on land value</a>. George realised that even improvements in a local area – a new park, or better sanitation – would also be captured by local landowners. The new park would make people more willing to pay to live nearby, bidding up the price of housing in that area, so that existing landowners captured much of the value the park created.</p>



<p>These effects play out visibly in fights over <a href="https://www.theatlantic.com/ideas/archive/2021/01/anti-growth-alliance-fueled-urban-gentrification/617525/">gentrification</a>. Rising wages let bankers and tech workers bid up the rents on poorer parts of cities that have become fashionable, driving up rents. Many low-income communities have been broken up as people have been forced to move away by these rising rents, and by shops and other services changing to cater to wealthier new customers. Few people object to making a place more pleasant, greener and safer:&nbsp;the biggest concern for current residents is not improvement in the place, but the risk of being priced out of their homes and communities.</p>



<p>There is another way. Increasing the supply of housing and commercial space, while ensuring that it benefits existing residents, could turn this zero-sum situation into one where everyone can be better off. This might be done, for example, <a href="https://policyexchange.org.uk/publication/strong-suburbs/">by allowing them to vote on increased density, and benefit from it directly</a>. The new demand could be accommodated and the financial rewards to development could be shared with existing residents without displacing them.</p>



<p>The aggregate, countrywide effect of housing being so limited in supply has been that economic growth in most Western countries has accrued more and more to landowners and less to everyone else. Economist Thomas Piketty <a href="https://www.amazon.co.uk/Capital-Twenty-First-Century-Thomas-Piketty/dp/067443000X">famously demonstrated</a> an increase in the share of national income that flows to owners of <i>capital</i>, rather than to labour. But what was less widely acknowledged was that, at least in the US, it was really an increase in the share of income going to <i><em>landowners</em></i>, driven by <a href="https://www.brookings.edu/wp-content/uploads/2016/07/2015a_rognlie.pdf">increases in the cost of housing</a>, and that this effect was particularly strong in states that have highly <a href="https://voxeu.org/article/piketty-s-housing-capital-results-new-us-facts">restrictive rules against building more homes</a>.</p>



<p>The rising inequality Piketty demonstrated appears to have been largely driven by housing shortages turning, in one economist’s words, <a href="https://blogs.lse.ac.uk/politicsandpolicy/turning-houses-into-gold-the-failure-of-british-planning/">‘houses into gold’</a>. And this is the case across the Western world: <a href="https://journals.sagepub.com/doi/abs/10.1177/00031224211027800?journalCode=asra&amp;">housing inequality, not income inequality, primarily determines how much wealth inequality there is</a> in most Western countries.</p>



<h4><i>Left-behind areas and regional inequality</i></h4>



<p>Housing shortages have driven regional inequality as well. Earlier, we told the story of workplaces deprived of lower-skilled staff having to get their star employees to do work that would be better done by someone with less-expensive skills. And the other side of this is that people who cannot earn top salaries are unable to move to high-income cities at all.</p>



<p>Consider a cleaner living in Alabama. In 1960 they could move to NYC and <a href="https://www.nber.org/papers/w23609">earn wages 84% higher, and still end up with 70% higher income after rent</a>. In 2010, they could move to New York City and become 28% more productive, and earn a wage 28% higher –&nbsp;and reduce the surplus of workers back home, letting them demand higher pay. But since housing costs are so much higher, the net earnings and living standards of someone like this would <i><em>fall</em></i> if they moved today, and wouldn’t be worth it. The same would be true for plumbers, receptionists and other professions that allow other people to specialise at what they’re best at and minimise the time they spend on things like DIY and answering the phone. By contrast, top lawyers get wage boosts that are still sufficiently higher to justify a move in both 1960 and 2010, even after the higher rents they’ll have to pay.</p>



<p>Economists Peter Ganong and Daniel Shoag conclude that this effect, on aggregate, has <a href="https://www.nber.org/papers/w23609">directly led to a slowdown</a> in the rate at which poorer US states have been catching up with richer ones. Between 1880 and 1980, poorer US states caught up with the richest ones at a rate of around 2% per year; since then, this rate of convergence has halved, to around 1% per year. Where previously people of all income and skill levels would move to more prosperous places, now only well-paid ones at the top do, leaving behind many who are not so lucky in places with a surplus of labour.</p>



<p>Many Western countries have regions where the most economically productive people have moved away like this, leaving behind their lower-skilled peers competing for a limited supply of lower-wage jobs and driving wages down further. Scarce and expensive housing in ‘superstar cities’ means that when a city suffers a downturn, only the most skilled leave. Since these people have positive spillovers, this further depresses activity. By contrast, in history it was typically the worse off locals who left an area when times got tougher.</p>



<p>A great deal of attention has been spent on attempts to stop the outmigration of these talented people, to minimise the losses for those left behind. Few of these attempts have succeeded, and the solution may instead be to make it easier for people of all income and skill levels to move for work, as was the norm historically. Without that mobility, many communities have an unhealthy mix of people all competing for the same low-paid jobs, shut out entirely from the places that could be offering them a better life.</p>



<h4><i>Families</i></h4>



<p>The price of housing does not just affect the places where people live; it determines the kinds of homes they live in as well. And that has a huge influence on people’s family lives, affecting both when people have kids and how many kids they have.</p>



<p>The more expensive an extra bedroom is, the more expensive it is to have more (or any) children. Expensive housing can force people to wait before having kids and move out of city cores and into cheaper suburbs when they do. This means losing many of the amenities and social life benefits of city life, adding a long commute to their day, and probably reducing their number of job options.</p>



<p>Across the developed world, the number of children that women actually have is <a href="https://www.oecd.org/els/family/SF_2_2-Ideal-actual-number-children.pdf">well below the number they say they would like to have</a>. According to <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2846173">one recent study</a>, after controlling for other factors, a 10% rise in house prices was associated with a 1.3% fall in overall births. Put together with the huge rises in housing costs we’ve seen over the past four decades, this implies a massive reduction in births across the Western world. One <a href="https://www.adamsmith.org/news/children-of-when">report estimated</a> that rises in the cost of UK housing between 1996 and 2014 may have led to 157,000 fewer children being born in that period alone.</p>



<p>Combine these effects with the fact that higher incomes allow people to have more kids because they can more easily afford things like childcare, and housing costs may be causing dramatically fewer children to be born than people would like to have. There is also a fiscal cost to this, of course, but it is fundamentally a personal, human one: fewer brothers and sisters, less time spent with grandparents, and less of the meaning that children bring to their parents’ lives.</p>



<h4><i>Obesity</i></h4>



<p>No one is sure why America’s obesity rate rose from just 10% in the early 1960s to 35% today. Some blame increases in income, but over the same period, Japanese income rose even faster and obesity rates barely budged: they remain under 5%. Higher incomes may enable obesity, but they do not guarantee it.</p>



<p>Undoubtedly, no single factor is solely responsible either for the rise over time, or for the difference between Japan and America. Technological innovations allowing more processed and palatable foods are likely one cause. It may be that rising consumption of some nutrient, such as a type of fat or sugar, is another cause. In Western countries, the decline in smoking – which can act as an appetite suppressant – <a href="https://www.nber.org/papers/w21937#:~:text=Using%20randomized%20treatment%20assignment%20to,the%20concurrent%20rise%20in%20obesity.">is also likely responsible for a fair portion of the rise in obesity</a>.</p>



<p>The Japanese eat <a href="https://onlinelibrary.wiley.com/doi/10.1111/obr.12860">about half as much</a> processed food as Americans do. They also consume dramatically more omega-3 fatty acids in their diet. Cigarette smoking is still slightly higher in Japan than the USA as well. But there is another dramatic and visible difference between Japanese and American lives: the way their cities are built.</p>



<p>Japanese land use regulation is light touch. At its most restrictive, it allows buildings three floors high that use up the entirety of their parcel of land. This means both that Japan’s superstar cities grow far more densely than American cities, and also that they absorb far more of the country’s population. The urban environment this produces is akin to the traditional urbanism of pre-bicycle, -train and -car cities around the world: with narrow streets, finely grained, that are highly walkable. Of course, modern Japanese cities are not quite so tightly knit, and there is space for cars, bicycles and transit. But streets are extremely narrow, parking is expensive, major roads are tolled, and pedestrians mostly have priority over other road users.</p>



<p>Because of that urban style, people living in large Japanese cities drive much less than people in America. <a href="https://en.wikipedia.org/wiki/Modal_share">In Tokyo and Osaka just 12% and 13% of trips are by private motor vehicle</a>, compared to 85% in Los Angeles, 77% in Chicago, 91% in Houston and 87% in Phoenix. Most American cities are far too spread out to get around by walking, cycling or even public transport, which needs dense pockets of population to be efficient.</p>



<figure><img src="https://wip.gatspress.com/wp-content/uploads/2022/08/fig_2.png" alt=""></figure>



<p>Far more Japanese than Americans experience this sort of city life. There are 23.7 million residents in North America’s biggest metropolitan area, New York City, and these people are spread over 34,500 square kilometres. Only a small part of this is dense enough to sustain walking, cycling, and transit. By contrast, Tokyo metro area has a far larger population, with 38.1 million people, but they are four times more densely populated, across only 8,500 square kilometres. This means practically all of them can live car-optional lifestyles most of the time. Japan’s second city, Osaka, has 19.3 million: more than 45% of the country’s inhabitants live in the biggest two cities alone. By contrast, even at the most expansive definition, only around 12% of the US population live in its biggest cities.</p>



<p>It is obvious how this would affect obesity. The average Japanese walks thousands more steps than the average American every day. What’s more, nearly all Japanese walk a lot, whereas in most cities American activity is much more unequal, split between enthusiastic exercisers and those who drive everywhere. Evidence from hundreds of thousands of smartphone step counters <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5774986/">suggests</a> this difference drives obesity both within and between countries. New York City, America’s densest and most walkable, has the lowest rate of obesity in America – about half the national rate. <a href="http://www.health.state.ny.us/statistics/prevention/obesity/about.htm">In the latest study of this</a>, Manhattan had a rate half as low again, one quarter of the national average.</p>



<p>So it’s possible that preferring sprawl over density, and the housing shortages that kind of policy creates, may be damaging health, equality, average wealth and the number of children we have. Yet the health effects of more, denser housing are often ignored.</p>



<h4><i>Climate change</i></h4>



<p>Walkable cities are not just important to combat obesity. In 2018, the average Japanese person’s <a href="https://ourworldindata.org/co2-and-other-greenhouse-gas-emissions">consumption caused</a> 10.3 tonnes of CO2 emissions, while the average American caused 17.6 tonnes of emissions, or 74% more. Focusing on transport, we can see how much of that is explained by Japan’s denser, transit-rich, more walkable cities. In 2016 transport accounted for 1.63 tonnes in Japan, versus 5.22 tonnes in the US – over three times worse.</p>



<p>Maps of the <a href="https://iopscience.iop.org/article/10.1088/1748-9326/8/3/035039">UK</a> and <a href="https://pubs.acs.org/doi/10.1021/es4034364">US East Coast</a> show clearly how the densely populated parts of cities like New York, Philadelphia and London emit far less carbon per head than the rest of the surrounding sprawl. The UK’s Centre for Cities <a href="https://www.centreforcities.org/publication/net-zero-decarbonising-the-city/">estimated</a> that people living outside cities accounted for 50% more carbon emissions than those living inside them.</p>



<figure><img src="https://wip.gatspress.com/wp-content/uploads/2022/08/fig_3.png" alt=""></figure>



<figure><img loading="lazy" width="1024" height="774" src="https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-1024x774.png" alt="" srcset="https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-1024x774.png 1024w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-300x227.png 300w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-768x580.png 768w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-1536x1161.png 1536w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-2048x1548.png 2048w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-402x304.png 402w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-462x349.png 462w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-662x500.png 662w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-722x546.png 722w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-982x742.png 982w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-1032x780.png 1032w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-1402x1060.png 1402w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-1702x1286.png 1702w, https://wip.gatspress.com/wp-content/uploads/2021/09/fig_4_corrected1-2002x1513.png 2002w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>In 2020, California’s population shrank for the first time since records began. The pandemic was just the latest factor that encouraged people to flee expensive, temperate Californian cities – some, like San Francisco, with decent public transit and relatively dense housing – to more affordable sunbelt cities like Atlanta, Phoenix and Dallas, reliant on cars and power-hungry air conditioning. In the last two decades, Atlanta’s population has increased by nearly 50%. Houston is now America’s third or fourth largest city. Phoenix has gone from 99th most populous in 1950 to 5th today. That reliance on cars and air conditioning contributes towards environmental disaster.</p>



<p>New homes are also much better insulated than old homes. Heating or cooling bills in a German <a href="https://www.passivhaustrust.org.uk/what_is_passivhaus.php">PassivHaus</a>, housing which is designed to stay at the right temperature without the use of additional energy, can be just a few dollars a month: one <a href="https://twitter.com/holz_bau/status/1409777248790482950">PassivHaus in Oregon</a> kept 30 degrees Fahrenheit below external temperatures during the recent heatwave, with no air conditioning. Apartment blocks are greener than single-family houses, because each home has less external surface area to gain or lose heat. And new homes can be built with zero net embedded carbon, with payments for reforestation or other means to improve the environment. New homes can hugely help the environment.</p>



<p>Rising incomes mean people want bigger homes. Few would happily return to eight family members crammed into a 1900 two-room tenement. If walkable cities ban new homes, their residents will move to more affordable places like Atlanta which build larger, more carbon-hungry homes, drive more and emit far more carbon than they would if they had the freedom to live where many of them really wanted to.</p>



<h3><i>Scratching the surface</i></h3>



<p>Once you see the effects housing shortages have on things as wildly different as obesity, fertility, inequality, climate change and wage growth, you start to see them everywhere. Scott Sumner and Kevin Erdmann have <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3667309">argued</a>, for example, that the housing ‘bubble’ that preceded the 2008 financial crisis wasn’t really a bubble after all. In fact, they suggest, house prices were rising rationally because too few houses were being built in places people most wanted to move to, not because of irrational speculation. The ensuing crisis was caused by a misdiagnosis of this problem, as the Fed hiked interest rates in a misguided attempt to ‘burst the bubble’. In support of this view, prices are now back above their ‘bubble’ peak, with no imminent sign of falling.</p>



<p>Housing shortages might have made Covid worse too. Overcrowding drives disease, including Covid, <a href="https://jamanetwork.com/journals/jamanetworkopen/fullarticle/2783544">as people squeezed into the same houses can spread illness to one another</a>. Counterintuitively, more density can mean <i>less</i> overcrowding, because there are more homes to go round. It is too early to say for sure, but in time we may learn that housing supply played an important role during the Covid pandemic, with more overcrowded cities suffering worse outbreaks.</p>



<p>It is possible that even the political and culture wars being waged in many Western countries have their roots in housing shortages, <a href="https://www.economist.com/special-report/2020/01/16/housing-is-at-the-root-of-many-of-the-rich-worlds-problems">as a recent report for <i><em>The Economist</em></i> argued</a>. Elections in the English-speaking world are increasingly becoming divided between relatively prosperous and well-educated citizens of cities and their suburbs on one side and people in the rest of the country – rural areas and economically depressed towns – who resent the perception that the system is rigged in favour of the already well-off. Britons and French people living in areas where house prices were stagnant were more likely to vote for Brexit or the National Front respectively.</p>



<p>Many young people have had to delay forming families and often take poorly paid, insecure jobs that can barely cover rent and living costs as the price for living in culturally attractive cities. They see opportunity as limited and growth as barely perceptible. Meanwhile, older generations sit on housing property worth many times what they paid and, stuck in a zero-sum mindset, often prioritise the protection of their own neighbourhoods over the need to build more homes. Can you blame young people who resent older people, and the West’s economic system itself, when this is what it offers them?</p>



<p>If all this has a solution, then we suggest it is unlikely to be won through a zero-sum political ‘tug of war’. Western countries could become trillions of dollars better off by addressing their housing shortages. A well-designed solution can spread those gains widely enough that <i><em>everyone</em></i> is made better off, including people who currently oppose existing efforts to build more that would make them worse off.</p>



<p>We have suggested one possibility elsewhere: <a href="https://policyexchange.org.uk/publication/strong-suburbs/">radically localized democracy that allows individual streets to opt in to greater density</a> by voting for it. No construction would happen anywhere that a majority did not opt for it, but streets that <a href="https://www.strongtowns.org/journal/2021/2/4/strong-towns-by-street-and-block">voted for more density</a> would become extremely valuable, so there would be a big incentive for homeowners in high-demand areas to vote for greater density.</p>



<p>But whether this or <a href="https://cayimby.org/california-yimby-celebrates-the-passage-of-senate-bill-9/">another approach</a> is the best solution is not the key question. What matters is that housing shortages may be <i><em>the</em></i> biggest problem facing our era, and solving it needs to become everyone’s highest priority. And as important as it is, we should be wary of letting it become politically tribalised: the disastrous politicisation of Covid vaccines in the United States highlights the danger of that. Some kind of creative, below-the-radar solution that turns this zero-sum game into a positive-sum one is likely to have a better chance. In a tug of war, it’s often surprising how far you can go if you <a href="https://www.slowboring.com/p/the-rise-and-importance-of-secret">tug the rope sideways</a>.</p>



<p>If we’re right about this, it means that fixing this one problem could make everyone’s lives much better than almost anyone realises – not just by making houses cheaper, but giving people better jobs, a better quality of life, more cohesive communities, bigger families and healthier lives. It could even give renewed reasons to be optimistic about the future of the West.</p>
</div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An Update on Mozilla's Terms of Use for Firefox (524 pts)]]></title>
            <link>https://blog.mozilla.org/en/products/firefox/update-on-terms-of-use/</link>
            <guid>43213612</guid>
            <pubDate>Fri, 28 Feb 2025 23:59:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.mozilla.org/en/products/firefox/update-on-terms-of-use/">https://blog.mozilla.org/en/products/firefox/update-on-terms-of-use/</a>, See on <a href="https://news.ycombinator.com/item?id=43213612">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
  <main id="main">

    
<article id="post-78461">
  

  <div>
    
<p>On Wednesday <a href="https://blog.mozilla.org/en/products/firefox/firefox-news/firefox-terms-of-use/">we shared</a> that we’re introducing a new Terms of Use (TOU) and Privacy Notice for Firefox. Since then, we’ve been listening to some of our community’s concerns with parts of the TOU, specifically about licensing. Our intent was just to be as clear as possible about how we make Firefox work, but in doing so we also created some confusion and concern. With that in mind, we’re updating the language to more clearly reflect the <em>limited </em>scope of how Mozilla interacts with user data.</p>



<p>Here’s what the new language will say:</p>



<p><em>You give Mozilla the rights necessary to operate Firefox. This includes processing your data as we describe in the Firefox Privacy Notice. It also includes a nonexclusive, royalty-free, worldwide license for the purpose of doing as you request with the content you input in Firefox. This does not give Mozilla any ownership in that content.&nbsp;</em></p>



<p>In addition, we’ve removed the reference to the Acceptable Use Policy because it seems to be causing more confusion than clarity.</p>



<p><strong>Privacy FAQ</strong></p>



<p>We also updated our <a href="https://www.mozilla.org/firefox/faq/">Privacy FAQ</a> to better address legal minutia around terms like “sells.” While we’re not reverting the FAQ, we want to provide more detail about why we made the change in the first place.</p>



<p><strong>TL;DR</strong> Mozilla doesn’t sell data about you (in the way that most people think about “selling data”), and we don’t buy data about you. We changed our language because some jurisdictions define “sell” more broadly than most people would usually understand that word. Firefox has built-in privacy and security features, plus <a href="https://support.mozilla.org/en-US/kb/firefox-options-preferences-and-settings#w_privacy-security">options</a> that let you fine-tune your data settings.</p>







<hr>







<p>The reason we’ve stepped away from making blanket claims that “We never sell your data” is because, in some places, the LEGAL definition of “sale of data” is broad and evolving. As an example, the California Consumer Privacy Act (CCPA) defines “sale” as the “selling, renting, releasing, disclosing, disseminating, making available, transferring, or otherwise communicating orally, in writing, or by electronic or other means, a consumer’s personal information by [a] business to another business or a third party” in exchange for “monetary” or “other valuable consideration.”&nbsp;&nbsp;</p>



<p>Similar privacy laws exist in other US states, including in Virginia and Colorado. And that’s a good thing — Mozilla has long been a supporter of data privacy laws that empower people — but the competing interpretations of do-not-sell requirements does leave many businesses uncertain about their exact obligations and whether or not they’re considered to be “selling data.”&nbsp;</p>



<p>In order to make Firefox commercially viable, there are a number of places where we collect and share some data with our partners, including our optional ads on New Tab and providing sponsored suggestions in the search bar. We set all of this out in our <a href="https://www.mozilla.org/privacy/firefox/">Privacy Notice</a>. Whenever we share data with our partners, we put a lot of work into making sure that the data that we share is stripped of potentially identifying information, or shared only in the aggregate, or is put through our privacy preserving technologies (like <a href="https://support.mozilla.org/kb/ohttp-explained">OHTTP</a>).&nbsp;</p>



<p><br>We’re continuing to make sure that Firefox provides you with sensible default settings that you can review during onboarding or <a href="https://support.mozilla.org/en-US/kb/firefox-options-preferences-and-settings#w_privacy-security">adjust</a> at any time.</p>



<a href="https://www.mozilla.org/en-US/firefox/new?utm_medium=mozilla-websites&amp;utm_source=blog.mozilla.org&amp;utm_content=inline-cta">
  <p><img fetchpriority="high" width="512" height="512" src="https://blog.mozilla.org/wp-content/blogs.dir/278/files/2020/12/Fx-Browser-icon-fullColor-512-512x512.png" alt="" decoding="async" srcset="https://blog.mozilla.org/wp-content/blogs.dir/278/files/2020/12/Fx-Browser-icon-fullColor-512.png 512w, https://blog.mozilla.org/wp-content/blogs.dir/278/files/2020/12/Fx-Browser-icon-fullColor-512-300x300.png 300w, https://blog.mozilla.org/wp-content/blogs.dir/278/files/2020/12/Fx-Browser-icon-fullColor-512-150x150.png 150w" sizes="(max-width: 512px) 100vw, 512px">  </p>
  <div>
     <h3>Get Firefox</h3>      <p><span>Get the browser that protects what’s important</span>   </p></div>
</a>
  </div>

</article><!-- #post-78461 -->

  </main><!-- #main -->
  

<div id="related-articles">
    <h2>Related Articles</h2>
    
  </div>



</div></div>]]></description>
        </item>
    </channel>
</rss>