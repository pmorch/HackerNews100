<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 26 Dec 2024 17:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Show HN: A singing synthesizer for the browser with automatic 3-part harmony (124 pts)]]></title>
            <link>https://pbat.ch/recurse/demos/trio/</link>
            <guid>42513276</guid>
            <pubDate>Thu, 26 Dec 2024 05:14:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pbat.ch/recurse/demos/trio/">https://pbat.ch/recurse/demos/trio/</a>, See on <a href="https://news.ycombinator.com/item?id=42513276">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Differential Growth Addon for Blender (184 pts)]]></title>
            <link>https://boris.okunskiy.name/posts/blender-differential-growth</link>
            <guid>42513157</guid>
            <pubDate>Thu, 26 Dec 2024 04:41:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://boris.okunskiy.name/posts/blender-differential-growth">https://boris.okunskiy.name/posts/blender-differential-growth</a>, See on <a href="https://news.ycombinator.com/item?id=42513157">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><a href="https://github.com/inca/blender-differential-growth/releases/latest">Latest Release</a> ¬∑ <a href="https://www.youtube.com/watch?v=Q-nu3SOcvOg">Tutorial Video</a></p>
<p>There‚Äôs something inexplicably fascinating about the shapes and patterns occurring in nature.</p>
<figure>
    <picture>
        <source srcset="https://boris.okunskiy.name/media/posts/lichen1-transparent.webp" type="image/webp">
        <source srcset="https://boris.okunskiy.name/media/posts/lichen1-transparent.png" type="image/png">
        <img src="https://boris.okunskiy.name/media/posts/lichen1-transparent.png" width="640" alt="Foliose lichen mesh">
    </picture>
    <figcaption>
        <a href="https://en.wikipedia.org/wiki/Xanthoria_parietina" target="_blank">Xanthoria foliose lichen</a>
        mesh, procedurally generated.
    </figcaption>
</figure>
<p>People have always been attracted to organic forms, as is evidenced by an endless number of various design elements found in human craft and art since prehistoric times; the ‚ÄúMother Nature‚Äù has always been a source of inspiration and symbolism for people throughout the globe. The desire to contemplate and reflect upon the organic processes seems to be an inherent part of human nature.</p>
<p>In search for beauty people have come up with a large number of tools and ways to produce organic patterns.</p>
<p>Today I‚Äôm proud to introduce my humble contribution to the generative art ecosystem ‚Äî <a href="https://github.com/inca/blender-differential-growth">Differential Growth Addon</a> for <a href="https://www.blender.org/">Blender</a>. Fully in-line with Blender Manifesto, it‚Äôs open source, completely free to use and built with tons of love.</p>
<p>A few examples follow.</p>
<figure>
    <video controls="" autoplay="" loop="">
        <source src="https://boris.okunskiy.name/media/posts/dg-lettuce.mp4" type="video/mp4">
    </video>
    <figcaption>
    Lettuce-like form produced from a unit circle with standard settings and gradually reducing Split Radius, resulting in finer detalization towards the end of simulation.
    </figcaption>
</figure>
<figure>
    <video controls="" autoplay="" loop="">
        <source src="https://boris.okunskiy.name/media/posts/dg-lichen.mp4" type="video/mp4">
    </video>
    <figcaption>
    Lichen-like form produced by inhibiting inner growth and limiting Z movement.
    </figcaption>
</figure>
<figure>
    <video controls="" autoplay="" loop="">
        <source src="https://boris.okunskiy.name/media/posts/dg-algae.mp4" type="video/mp4">
    </video>
    <figcaption>
    Algae-like form produced by adding growth along Z+ and inhibiting inner growth.
    </figcaption>
</figure>
<p>If you like what you see, please feel free to grab the latest <a href="https://github.com/inca/blender-differential-growth/releases/latest">release</a> from GitHub. The star üåü is also a great way to show your appreciation.</p>
<p>Also please consider joining <a href="https://github.com/inca/blender-differential-growth/discussions">discussions</a> where you can ask questions, help fellow artists, share the amazing things you create ‚Äî or just say hi.</p>
<p>Most importantly, have fun!</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Minecraft server written in COBOL (159 pts)]]></title>
            <link>https://github.com/meyfa/CobolCraft</link>
            <guid>42513022</guid>
            <pubDate>Thu, 26 Dec 2024 03:59:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/meyfa/CobolCraft">https://github.com/meyfa/CobolCraft</a>, See on <a href="https://news.ycombinator.com/item?id=42513022">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">CobolCraft</h2><a id="user-content-cobolcraft" aria-label="Permalink: CobolCraft" href="#cobolcraft"></a></p>
<p dir="auto"><a href="https://github.com/meyfa/CobolCraft/actions/workflows/build.yml"><img src="https://github.com/meyfa/CobolCraft/actions/workflows/build.yml/badge.svg" alt="Build"></a>
<a href="https://github.com/meyfa/CobolCraft/actions/workflows/test.yml"><img src="https://github.com/meyfa/CobolCraft/actions/workflows/test.yml/badge.svg" alt="Test"></a></p>
<p dir="auto">A Minecraft server written in COBOL. It supports Minecraft 1.21.4 (the latest version at time of writing).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto">The following features are already working:</p>
<ul>
<li> infinite terrain generation and dynamic chunk loading</li>
<li> persisting world and player data to disk</li>
<li> support for Minecraft's file formats (import existing worlds)</li>
<li> multiplayer (up to 10 concurrent players)</li>
<li> ping/server status (i.e., show as online in the server list)</li>
<li> breaking and placing blocks</li>
<li> block interaction (right-clicking, e.g., to open doors)</li>
<li> player inventory (limited to creative mode)</li>
<li> chat</li>
<li> commands (in-game and via an interactive console)</li>
<li> configuration via server.properties</li>
<li> whitelist (persistent; stored in whitelist.json)</li>
</ul>
<p dir="auto">Note that blocks with multiple states, orientations, or interactive blocks require large amounts of specialized code
to make them behave properly, which is way beyond the scope of this project.
Some are supported, however:</p>
<ul dir="auto">
<li>torches (all variants)</li>
<li>slabs (all variants)</li>
<li>stairs (non-connecting)</li>
<li>rotated pillars, such as logs or basalt</li>
<li>buttons (non-interactive)</li>
<li>doors (including interaction)</li>
<li>trapdoors (including interaction)</li>
<li>beds</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How-to</h2><a id="user-content-how-to" aria-label="Permalink: How-to" href="#how-to"></a></p>
<p dir="auto">CobolCraft was developed using GnuCOBOL and is meant to be run on Linux.
Support for other operating systems such as Windows has not been tested.
However, it is possible to use Docker for a platform-independent deployment.</p>
<p dir="auto">To deploy on Linux, make sure all prerequisites are installed:</p>
<ul dir="auto">
<li><code>cobc</code> (e.g., from the <code>gnucobol</code> APT package on Debian)</li>
<li><code>make</code></li>
<li><code>g++</code></li>
<li><code>zlib</code> (e.g. <code>zlib1g-dev</code> on Debian)</li>
<li><code>curl</code> (needed to download the official server .jar)</li>
<li>a recent version of Java (needed to extract data from the server .jar)</li>
</ul>
<p dir="auto">Then execute <code>make</code> to build, followed by <code>make run</code> to start a server on port 25565.</p>
<p dir="auto">Or, using Docker:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker build -t cobolcraft .
docker run --rm --interactive --tty \
     --publish 25565:25565 \
     --volume server.properties:/server.properties \
     --volume whitelist.json:/whitelist.json \
     --volume save:/save \
    cobolcraft"><pre>docker build -t cobolcraft <span>.</span>
docker run --rm --interactive --tty \
     --publish 25565:25565 \
     --volume server.properties:/server.properties \
     --volume whitelist.json:/whitelist.json \
     --volume save:/save \
    cobolcraft</pre></div>
<p dir="auto">To configure the server, edit the <code>server.properties</code> file.
This file is generated automatically on first run with default values for all supported options:</p>
<ul dir="auto">
<li><code>server-port</code> (default: 25565)</li>
<li><code>white-list</code> (default: false)</li>
<li><code>motd</code> (default: "CobolCraft")</li>
</ul>
<p dir="auto">Note: By default, the server is only accessible via localhost (i.e., only on your own system via <code>localhost:25565</code>).
To make it accessible from the outside (your local network, via VPN, port forwarding, on a rented server, ...), you
can start the Docker container like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run --rm -it -p 0.0.0.0:25565:25565 cobolcraft"><pre>docker run --rm -it -p 0.0.0.0:25565:25565 cobolcraft</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Why?</h2><a id="user-content-why" aria-label="Permalink: Why?" href="#why"></a></p>
<p dir="auto">Well, there are quite a lot of rumors and stigma surrounding COBOL.
This intrigued me to find out more about this language, which is best done with some sort of project, in my opinion.
You heard right - I had no prior COBOL experience going into this.</p>
<p dir="auto">Writing a Minecraft server was perhaps not the best idea for a first COBOL project, since COBOL is intended for
business applications, not low-level data manipulation (bits and bytes) which the Minecraft protocol needs lots of.
However, quitting before having a working prototype was not on the table! A lot of this functionality had to be
implemented completely from scratch, but with some clever programming, data encoding and decoding is not just fully
working, but also quite performant.</p>
<p dir="auto">If you too have never written COBOL before but are interested in CobolCraft, I recommend reading the GnuCOBOL
Programmer's Guide:
<a href="https://gnucobol.sourceforge.io/HTML/gnucobpg.html" rel="nofollow">https://gnucobol.sourceforge.io/HTML/gnucobpg.html</a></p>
<p dir="auto">To learn more about the Minecraft protocol, you can refer to <a href="https://wiki.vg/Protocol" rel="nofollow">https://wiki.vg/Protocol</a>.
In some cases, it may be helpful to look at real server traffic to better understand the flow of information.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Program Overview</h2><a id="user-content-program-overview" aria-label="Permalink: Program Overview" href="#program-overview"></a></p>
<p dir="auto">This section provides a high-level overview of CobolCraft from a software design viewpoint.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Source Components</h3><a id="user-content-source-components" aria-label="Permalink: Source Components" href="#source-components"></a></p>
<p dir="auto">The program entrypoint is <code>main.cob</code>.
The remaining COBOL sources are located in the <code>src/</code> directory, including <code>src/server.cob</code>, which contains the bulk
of CobolCraft.</p>
<p dir="auto">These sources are located in the <code>cpp/</code> directory and get compiled into a shared library (<code>.so</code> on Linux).</p>
<p dir="auto">TCP sockets are managed by the CBL_GC_SOCKET socket library located in the <code>CBL_GC_SOCKET/</code> directory.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Packet Blobs</h3><a id="user-content-packet-blobs" aria-label="Permalink: Packet Blobs" href="#packet-blobs"></a></p>
<p dir="auto">CobolCraft makes use of network data captured from an instance of the official server application via Wireshark.
This data is located in the <code>blobs/</code> directory and is decoded at run-time.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Data Extraction</h3><a id="user-content-data-extraction" aria-label="Permalink: Data Extraction" href="#data-extraction"></a></p>
<p dir="auto">The official Minecraft (Java Edition) server and client applications contain large amounts of data such as:</p>
<ul dir="auto">
<li>block and item types</li>
<li>entity types</li>
<li>biomes</li>
</ul>
<p dir="auto">Fortunately, the freely available server .jar offers a command-line interface for extracting this data as JSON.
The CobolCraft <code>Makefile</code> has a target that downloads the .jar and extracts the JSON data from it.
The JSON files are evaluated at runtime using a custom-built generic JSON parser, such that CobolCraft can
inter-operate successfully with the Minecraft client without distributing potentially copyrighted material.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Legal Notices</h2><a id="user-content-legal-notices" aria-label="Permalink: Legal Notices" href="#legal-notices"></a></p>
<p dir="auto">This project (except 3rd-party contents as stated below) is licensed under the MIT License.
See LICENSE for further information.</p>
<p dir="auto">This project includes the 3rd-party CBL_GC_SOCKET shared library, licensed under the LGPL v3.
See CBL_GC_SOCKET/COPYING.lesser for further information.
Note that line 939 of <code>CBL_GC_SOCKET/cob_socket.cpp</code> has been modified (compared to the original distribution of that
library) to fix improper <code>snprintf</code> usage.</p>
<p dir="auto">"Minecraft" is a trademark of Mojang Synergies AB.
CobolCraft is neither affiliated with nor endorsed by Mojang.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Blackcandy: Self hosted music streaming server (499 pts)]]></title>
            <link>https://github.com/blackcandy-org/blackcandy</link>
            <guid>42512896</guid>
            <pubDate>Thu, 26 Dec 2024 03:17:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/blackcandy-org/blackcandy">https://github.com/blackcandy-org/blackcandy</a>, See on <a href="https://news.ycombinator.com/item?id=42512896">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/blackcandy-org/black_candy/master/app/assets/images/logo.svg"><img alt="Black Candy logo" width="200" src="https://raw.githubusercontent.com/blackcandy-org/black_candy/master/app/assets/images/logo.svg"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Black Candy</h2><a id="user-content-black-candy" aria-label="Permalink: Black Candy" href="#black-candy"></a></p>
<p dir="auto"><a href="https://github.com/blackcandy-org/black_candy/actions/workflows/ci.yml"><img src="https://github.com/blackcandy-org/black_candy/actions/workflows/ci.yml/badge.svg" alt="CI"></a>
<a href="https://coveralls.io/github/blackcandy-org/black_candy?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8ca1d878ecb6847c9042ccf042ef27695f509adff2c9545fdf367f41a8869545/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f626c61636b63616e64792d6f72672f626c61636b63616e64792f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/blackcandy-org/blackcandy/badge.svg?branch=master"></a>
<a href="https://github.com/testdouble/standard"><img src="https://camo.githubusercontent.com/5338a68a0f130dc684279ff3e42e45c9c74006018a1bdeaac76905979b3ccd49/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d7374616e646172642d627269676874677265656e2e737667" alt="Ruby Style Guide" data-canonical-src="https://img.shields.io/badge/code_style-standard-brightgreen.svg"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/35a0f5dee1d6ea31fe1f598aa4be82b94628bd1f322a60ef969788f300794243/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f626c61636b63616e64792f626c61636b63616e6479"><img src="https://camo.githubusercontent.com/35a0f5dee1d6ea31fe1f598aa4be82b94628bd1f322a60ef969788f300794243/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f626c61636b63616e64792f626c61636b63616e6479" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/blackcandy/blackcandy"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/blackcandy-org/blackcandy/master/docs/images/screenshot_main.png"><img src="https://raw.githubusercontent.com/blackcandy-org/blackcandy/master/docs/images/screenshot_main.png" alt="Screenshot"></a></p>
<p dir="auto">Black Candy is a self-hosted music streaming server, your personal music center.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Try The Demo</h2><a id="user-content-try-the-demo" aria-label="Permalink: Try The Demo" href="#try-the-demo"></a></p>
<p dir="auto">Please visit <a href="https://demo.blackcandy.org/" rel="nofollow">https://demo.blackcandy.org</a> and use demo user (email: <a href="mailto:admin@admin.com">admin@admin.com</a>, password: foobar) to log in. And feel free to try it.</p>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">This demo user does not have administrator privileges. So you cannot experience all the features in Black Candy. And all music in the demo are from <a href="https://freemusicarchive.org/" rel="nofollow">Free Music Archive</a>. You can check their <a href="https://github.com/blackcandy-org/blackcandy/blob/master/docs/demo_music_licenses.md">licenses</a>.</p>
</div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">Black Candy uses docker image to install easily. You can run Black Candy like this.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest 

# Or pull from Docker Hub.
docker run -p 3000:3000 blackcandy/blackcandy:latest "><pre>docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest 

<span><span>#</span> Or pull from Docker Hub.</span>
docker run -p 3000:3000 blackcandy/blackcandy:latest </pre></div>
<p dir="auto">That's all. Now, you can access either <a href="http://localhost:3000/" rel="nofollow">http://localhost:3000</a> or <a href="http://host-ip:3000/" rel="nofollow">http://host-ip:3000</a> in a browser, and use initial admin user to log in (email: <a href="mailto:admin@admin.com">admin@admin.com</a>, password: foobar).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Upgrade</h2><a id="user-content-upgrade" aria-label="Permalink: Upgrade" href="#upgrade"></a></p>
<div dir="auto"><p dir="auto">Important</p><p dir="auto">If you upgrade to a major version, you need to read the upgrade guide carefully before upgrade. Because there are some breaking changes in a major version.</p>
<ul dir="auto">
<li>See <a href="https://github.com/blackcandy-org/blackcandy/blob/master/docs/v3_upgrade.md">V3 Upgrade</a> for upgrade from V2 release.</li>
<li>See <a href="https://github.com/blackcandy-org/blackcandy/blob/master/docs/edge_upgrade.md">Edge Upgrade</a> for upgrade from edge release to latest stable release.</li>
</ul>
</div>
<p dir="auto">Upgrade Black Candy is pull new image from remote. Then remove an old container and create a new one.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker pull ghcr.io/blackcandy-org/blackcandy:latest
docker stop <your_blackcandy_container>
docker rm <your_blackcandy_container>
docker run <OPTIONS> ghcr.io/blackcandy-org/blackcandy:latest "><pre>docker pull ghcr.io/blackcandy-org/blackcandy:latest
docker stop <span>&lt;</span>your_blackcandy_container<span>&gt;</span>
docker rm <span>&lt;</span>your_blackcandy_container<span>&gt;</span>
docker run <span>&lt;</span>OPTIONS<span>&gt;</span> ghcr.io/blackcandy-org/blackcandy:latest </pre></div>
<p dir="auto">With docker compose, you can upgrade Black Candy like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker pull ghcr.io/blackcandy-org/blackcandy:latest
docker-compose down
docker-compose up"><pre>docker pull ghcr.io/blackcandy-org/blackcandy:latest
docker-compose down
docker-compose up</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Mobile Apps</h2><a id="user-content-mobile-apps" aria-label="Permalink: Mobile Apps" href="#mobile-apps"></a></p>
<p dir="auto">Black Candy mobile apps are available in the following app stores:</p>
<p dir="auto"><a href="https://apps.apple.com/app/blackcandy/id6444304071" rel="nofollow"><img src="https://raw.githubusercontent.com/blackcandy-org/ios/master/images/appstore_badge.png" alt="Get it on App Store" height="50"></a>
<a href="https://f-droid.org/packages/org.blackcandy.android/" rel="nofollow"><img src="https://raw.githubusercontent.com/blackcandy-org/android/master/images/fdroid_badge.png" alt="Get it on F-Droid" height="50"></a></p>
<p dir="auto">For Android app, you can also download APK from <a href="https://github.com/blackcandy-org/android/releases/latest">GitHub Release</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Configuration</h2><a id="user-content-configuration" aria-label="Permalink: Configuration" href="#configuration"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Port Mapping</h3><a id="user-content-port-mapping" aria-label="Permalink: Port Mapping" href="#port-mapping"></a></p>
<p dir="auto">Black Candy exports the 3000 port. If you want to be able to access it from the host, you can use the <code>-p</code> option to map the port.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest"><pre>docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Media Files Mounts</h3><a id="user-content-media-files-mounts" aria-label="Permalink: Media Files Mounts" href="#media-files-mounts"></a></p>
<p dir="auto">You can mount media files from host to container and use <code>MEDIA_PATH</code> environment variable to set the media path for black candy.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -v /media_data:/media_data -e MEDIA_PATH=/media_data ghcr.io/blackcandy-org/blackcandy:latest   "><pre>docker run -v /media_data:/media_data -e MEDIA_PATH=/media_data ghcr.io/blackcandy-org/blackcandy:latest   </pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Use PostgreSQL As Database</h3><a id="user-content-use-postgresql-as-database" aria-label="Permalink: Use PostgreSQL As Database" href="#use-postgresql-as-database"></a></p>
<p dir="auto">Black Candy use SQLite as database by default. Because SQLite can simplify the process of installation, and it's an ideal choice for self-hosted small server. If you think SQLite is not enough, or you are using some cloud service like heroku to host Black Candy, you can also use PostgreSQL as database.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -e DB_ADAPTER=postgresql -e DB_URL=postgresql://yourdatabaseurl ghcr.io/blackcandy-org/blackcandy:latest "><pre>docker run -e DB_ADAPTER=postgresql -e DB_URL=postgresql://yourdatabaseurl ghcr.io/blackcandy-org/blackcandy:latest </pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to Persist Data</h3><a id="user-content-how-to-persist-data" aria-label="Permalink: How to Persist Data" href="#how-to-persist-data"></a></p>
<p dir="auto">All the data that need to persist in Black Candy are stored in <code>/app/storage</code>, So you can mount this directory to host to persist data.</p>
<div dir="auto" data-snippet-clipboard-copy-content="mkdir storage_data

docker run -v ./storage_data:/app/storage ghcr.io/blackcandy-org/blackcandy:latest "><pre>mkdir storage_data

docker run -v ./storage_data:/app/storage ghcr.io/blackcandy-org/blackcandy:latest </pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Nginx To Send File</h3><a id="user-content-nginx-to-send-file" aria-label="Permalink: Nginx To Send File" href="#nginx-to-send-file"></a></p>
<p dir="auto">Black Candy supports use Nginx to delivery audio file to the client. It's a more effective way than handled by Black Candy backend. And Black Candy docker image is also ready for <a href="https://github.com/nginx-proxy/nginx-proxy">nginx-proxy</a>, which means you can set up a Nginx proxy for Black Candy easily.</p>
<p dir="auto">You can use docker-compose to set up those services. The docker-compose.yml file looks like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="version: '3'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - &quot;80:80&quot;
    volumes:
      - ./blackcandy.local:/etc/nginx/vhost.d/blackcandy.local:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /media_data:/media_data # Keep the path of media files in container the same as blackcandy container.

  app:
    image: ghcr.io/blackcandy-org/blackcandy:latest 
    volumes:
      - ./storage_data:/app/storage
      - /media_data:/media_data
    environment:
      VIRTUAL_HOST: blackcandy.local
      MEDIA_PATH: /media_data
      NGINX_SENDFILE: &quot;true&quot; # Don't forget to set `NGINX_SENDFILE` environment variable to true to enable nginx sendfile."><pre><span>version</span>: <span><span>'</span>3<span>'</span></span>

<span>services</span>:
  <span>nginx-proxy</span>:
    <span>image</span>: <span>nginxproxy/nginx-proxy</span>
    <span>ports</span>:
      - <span><span>"</span>80:80<span>"</span></span>
    <span>volumes</span>:
      - <span>./blackcandy.local:/etc/nginx/vhost.d/blackcandy.local:ro</span>
      - <span>/var/run/docker.sock:/tmp/docker.sock:ro</span>
      - <span>/media_data:/media_data </span><span><span>#</span> Keep the path of media files in container the same as blackcandy container.</span>

  <span>app</span>:
    <span>image</span>: <span>ghcr.io/blackcandy-org/blackcandy:latest </span>
    <span>volumes</span>:
      - <span>./storage_data:/app/storage</span>
      - <span>/media_data:/media_data</span>
    <span>environment</span>:
      <span>VIRTUAL_HOST</span>: <span>blackcandy.local</span>
      <span>MEDIA_PATH</span>: <span>/media_data</span>
      <span>NGINX_SENDFILE</span>: <span><span>"</span>true<span>"</span></span> <span><span>#</span> Don't forget to set `NGINX_SENDFILE` environment variable to true to enable nginx sendfile.</span></pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="# Get the default sendfile config for blackcandy. This file need to mount to nginx proxy container to add custom configuration for nginx.
curl https://raw.githubusercontent.com/blackcandy-org/blackcandy/v3.0.0/config/nginx/sendfile.conf > blackcandy.local

docker-compose up"><pre><span><span>#</span> Get the default sendfile config for blackcandy. This file need to mount to nginx proxy container to add custom configuration for nginx.</span>
curl https://raw.githubusercontent.com/blackcandy-org/blackcandy/v3.0.0/config/nginx/sendfile.conf <span>&gt;</span> blackcandy.local

docker-compose up</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Logging</h3><a id="user-content-logging" aria-label="Permalink: Logging" href="#logging"></a></p>
<p dir="auto">Black Candy logs to <code>STDOUT</code> by default. So if you want to control the log, Docker already supports a lot of options to handle the log in the container. See: <a href="https://docs.docker.com/config/containers/logging/configure/" rel="nofollow">https://docs.docker.com/config/containers/logging/configure/</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Environment Variables</h2><a id="user-content-environment-variables" aria-label="Permalink: Environment Variables" href="#environment-variables"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Name</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>DB_URL</td>
<td></td>
<td>The URL of PostgreSQL database. You must set this environment variable if you use PostgreSQL as database.</td>
</tr>
<tr>
<td>MEDIA_PATH</td>
<td></td>
<td>You can use this environment variable to set media path for Black Candy, otherwise you can set media path in settings page.</td>
</tr>
<tr>
<td>DB_ADAPTER</td>
<td>"sqlite"</td>
<td>There are two adapters are supported, "sqlite" and "postgresql".</td>
</tr>
<tr>
<td>NGINX_SENDFILE</td>
<td>false</td>
<td>Whether enable Nginx sendfile.</td>
</tr>
<tr>
<td>SECRET_KEY_BASE</td>
<td></td>
<td>When the SECRET_KEY_BASE environment variable is not set, Black candy will generate SECRET_KEY_BASE environment variable every time when service start up. This will cause old sessions invalid, You can set your own SECRET_KEY_BASE environment variable on docker service to avoid it.</td>
</tr>
<tr>
<td>FORCE_SSL</td>
<td>false</td>
<td>Force all access to the app over SSL.</td>
</tr>
<tr>
<td>DEMO_MODE</td>
<td>false</td>
<td>Whether to enable demo mode, when demo mode is on, all users cannot access administrator privileges, even user is admin. And also users cannot change their profile.</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Edge Version</h2><a id="user-content-edge-version" aria-label="Permalink: Edge Version" href="#edge-version"></a></p>
<p dir="auto">The edge version of Black Candy base on master branch, which means it's not stable, you may encounter data loss or other issues. However, I don't recommend normal user using an edge version. But if you are a developer who wants to test or contribute to Black Candy, you can use the edge version.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker pull ghcr.io/blackcandy-org/blackcandy:edge"><pre>docker pull ghcr.io/blackcandy-org/blackcandy:edge</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development</h2><a id="user-content-development" aria-label="Permalink: Development" href="#development"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Requirements</h3><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<ul dir="auto">
<li>Ruby 3.3</li>
<li>Node.js 20</li>
<li>libvips</li>
<li>FFmpeg</li>
</ul>
<p dir="auto">Make sure you have installed all those dependencies.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Install gem dependencies</h3><a id="user-content-install-gem-dependencies" aria-label="Permalink: Install gem dependencies" href="#install-gem-dependencies"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Install JavaScript dependencies</h3><a id="user-content-install-javascript-dependencies" aria-label="Permalink: Install JavaScript dependencies" href="#install-javascript-dependencies"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Database Configuration</h3><a id="user-content-database-configuration" aria-label="Permalink: Database Configuration" href="#database-configuration"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="rails db:prepare
rails db:seed"><pre>rails db:prepare
rails db:seed</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Start all services</h3><a id="user-content-start-all-services" aria-label="Permalink: Start all services" href="#start-all-services"></a></p>
<p dir="auto">After you‚Äôve set up everything, now you can run <code>./bin/dev</code> to start all services you need to develop.
Then visit <a href="http://localhost:3000/" rel="nofollow">http://localhost:3000</a> use initial admin user to log in (email: <a href="mailto:admin@admin.com">admin@admin.com</a>, password: foobar).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running tests</h3><a id="user-content-running-tests" aria-label="Permalink: Running tests" href="#running-tests"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Running all test
$ rails test:all 

# Running lint
$ rails lint:all"><pre><span><span>#</span> Running all test</span>
$ rails test:all 

<span><span>#</span> Running lint</span>
$ rails lint:all</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Integrations</h2><a id="user-content-integrations" aria-label="Permalink: Integrations" href="#integrations"></a></p>
<p dir="auto">Black Candy support get artist and album image from Discogs API. You can create an API token from Discogs and set Discogs token on Setting page to enable it.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sponsorship</h2><a id="user-content-sponsorship" aria-label="Permalink: Sponsorship" href="#sponsorship"></a></p>
<p dir="auto">This project is supported by:</p>
<p dir="auto"><a href="https://www.digitalocean.com/" rel="nofollow"><img src="https://camo.githubusercontent.com/6fbfffc4bceb6b40e0f244330c13a2671e243a7c9e849033e20869b6445910a5/68747470733a2f2f6f70656e736f757263652e6e7963332e63646e2e6469676974616c6f6365616e7370616365732e636f6d2f6174747269627574696f6e2f6173736574732f5356472f444f5f4c6f676f5f686f72697a6f6e74616c5f626c75652e737667" width="200px" data-canonical-src="https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg"></a>
<a href="https://www.jetbrains.com/community/opensource" rel="nofollow"><img src="https://camo.githubusercontent.com/61be5a726132ae9b0cd6c732c6b20acf80fde151b7530c9b798a7517c6d2f6dd/68747470733a2f2f7265736f75726365732e6a6574627261696e732e636f6d2f73746f726167652f70726f64756374732f636f6d70616e792f6272616e642f6c6f676f732f6a625f7371756172652e737667" data-canonical-src="https://resources.jetbrains.com/storage/products/company/brand/logos/jb_square.svg"></a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bird flu kills more than half the big cats at a Washington sanctuary (145 pts)]]></title>
            <link>https://www.cnn.com/2024/12/25/us/bird-flu-washington-cats-cases/index.html</link>
            <guid>42512772</guid>
            <pubDate>Thu, 26 Dec 2024 02:39:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2024/12/25/us/bird-flu-washington-cats-cases/index.html">https://www.cnn.com/2024/12/25/us/bird-flu-washington-cats-cases/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=42512772">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/cm547x82h000y3b6mgeh5hfsd@published" data-name="still_21224701_23728.426_still.jpg" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="1080" data-original-width="1920" data-url="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=original" data-editable="lede" data-freewheel-lede="true">
       <picture><source height="383" width="680" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_383,w_680,c_fill/f_webp" type="image/webp"><source height="653" width="1160" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_653,w_1160,c_fill/f_webp" type="image/webp"><source height="605" width="1075" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_605,w_1075,c_fill/f_webp" type="image/webp"><source height="833" width="1480" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_833,w_1480,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_833,w_1480,c_fill" alt="Twenty big cats at the Wild Felid Advocacy Center of Washington have died after contracting bird flu." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="1080" width="1920"></picture>
    </div><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                  <p><cite>
      <span data-editable="location"></span>
      <span data-editable="source">CNN</span>
        &nbsp;‚Äî&nbsp;
    </cite>
</p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm548gm4o001a3b6mzpwbwov9@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Bird flu has been on the rise in Washington state and one sanctuary was hit hard: 20 big cats ‚Äì more than half of the facility‚Äôs population ‚Äì died over the course of weeks.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547w5dd00073b6mxjogyui4@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The Wild Felid Advocacy Center of Washington announced the deaths Friday on <a href="https://www.facebook.com/WildFelidAdvocacyCenter" target="_blank">Facebook</a>. The nonprofit sanctuary is in Shelton, about 22 miles northwest of Olympia.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547u5dy00003b6mbwnsviwy@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            ‚ÄúIt‚Äôs been one big nightmare. I never thought something like this would happen to us,‚Äù the center‚Äôs director and cofounder Mark Mathews told CNN affiliate <a href="https://komonews.com/news/local/avian-influenza-bird-flu-wild-felid-advocacy-center-mark-matthews-co-founder-december-washington-department-fish-and-wildlife-cougar-bird-droppings" target="_blank">KOMO</a>. ‚ÄúMaybe only in a facility that had cats near each other, and ours are spread out over five acres.‚Äù
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wd2s000d3b6mj9zguppc@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            It is currently unknown exactly how the big cats contracted bird flu, but Mathews said the first death occurred around Thanksgiving.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm548hmc9001c3b6mgfvvv9q4@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The 20 animals that died include: five African Servals, four bobcats, four cougars, two Canada Lynxes, one Amur-Bengal tiger mix and other species of big cats.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wcif000b3b6mxh7stxpx@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            ‚ÄúTabbi, she was my favorite tiger,‚Äù Mathews told KOMO. ‚ÄúBefore Thanksgiving, we had 37 cats. Today, we have 17 cats, (including) four recovering.‚Äù
    </p>

  


    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wjpu000g3b6mi5tsq9jm@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The sanctuary is under quarantine and closed to the public to prevent further spread of the bird flu, it said in a statement. The center said it is working with federal and state animal health officials, disinfecting each enclosure and working with veterinarians on ‚Äúprevention strategies while they oversee treatment to protect animal welfare.‚Äù
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000l3b6m4oczeysb@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The sanctuary hopes to reopen in the new year, according to the center‚Äôs <a href="https://www.wildfelids.org/index.html" target="_blank">website</a>.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000m3b6m110w3q1r@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            While it is unknown how the big cats contracted the bird flu, the sanctuary said it ‚Äúspreads primarily through respiratory secretions and bird-to-bird contact and can also be contracted by carnivorous mammals that ingest birds or other products,‚Äù the center <a href="https://www.facebook.com/WildFelidAdvocacyCenter" target="_blank">said in its statement</a>.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000o3b6m45mkxmz3@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Cats are particularly vulnerable to bird flu, which can cause subtle initial symptoms that may ‚Äúprogress rapidly, often resulting in death within 24 hours due to pneumonia-like conditions,‚Äù the center said. Symptoms include low energy, swelling of body parts, lack of coordination and diarrhea in pet birds, while cats and dogs may experience a fever, lethargy and low appetite, among other symptoms, according to the <a href="https://www.avma.org/resources-tools/animal-health-and-welfare/animal-health/avian-influenza/avian-influenza-companion-animals" target="_blank">American Veterinary Medical Association</a>.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm5481kvh00003b6m0zvbyps4@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            ‚ÄúUsually, when a vet comes out and they do immobilization, they start to feel better, and with Harley (the cougar), it was different because he made it pretty obvious he wasn‚Äôt feeling better after his treatment,‚Äù sanctuary employee Jolie Connolly-Poe told KOMO.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000q3b6mew5iuq4r@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The Washington Department of Fish and Wildlife <a href="https://wdfw.medium.com/avian-influenza-cases-increase-in-washington-a5cb8600ab0d" target="_blank">reported earlier this month</a> bird flu cases have been on the uptick across the state. It also confirmed two cougars contracted bird flu in another part of the state.
    </p>

  


    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000r3b6marffzvwi@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            ‚Äú(I‚Äôm) feeling devastated, kind of in shock. It just feels terrible that you take such good care of them, and then something unforeseen takes its toll real fast,‚Äù Connolly-Poe said. The center is ‚Äújust taking good care of those recovering.‚Äù
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000s3b6m4qc0is9i@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            In the 20 years since the sanctuary opened, Mathews told KOMO there hasn‚Äôt been an instance like this before. The center is taking additional precautions to avoid a further spread of bird flu as they prepare to disinfect everything.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000t3b6m0d4rod2c@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The <a href="https://www.cdc.gov/bird-flu/virus-transmission/avian-in-other-animals.html" target="_blank">US Centers for Disease Control and Prevention</a> said it‚Äôs ‚Äúrare for people to be infected with bird flu viruses through contact with infected wild, stray, feral, or domestic mammals‚Äù but it is possible if there is ‚Äúprolonged and unprotected exposure‚Äù to the sick animal.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000u3b6mbtutn7g6@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            There have been two instances of bird flu being passed to a human from mammals, according to the CDC: one in 2016 involving a cat and the other in 2024 involving a cow.
    </p>

              </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Siyuan: Privacy-first, self-hosted personal knowledge management software (179 pts)]]></title>
            <link>https://github.com/siyuan-note/siyuan</link>
            <guid>42512713</guid>
            <pubDate>Thu, 26 Dec 2024 02:26:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/siyuan-note/siyuan">https://github.com/siyuan-note/siyuan</a>, See on <a href="https://news.ycombinator.com/item?id=42512713">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">
<p dir="auto">
<a href="https://github.com/siyuan-note/siyuan/blob/master/README_zh_CN.md">‰∏≠Êñá</a> | <a href="https://github.com/siyuan-note/siyuan/blob/master/README_ja_JP.md">Êó•Êú¨Ë™û</a>
</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ul dir="auto">
<li><a href="#-introduction">üí° Introduction</a></li>
<li><a href="#-features">üîÆ Features</a></li>
<li><a href="#-architecture-and-ecosystem">üèóÔ∏è Architecture and Ecosystem</a></li>
<li><a href="#-star-history">üåü Star History</a></li>
<li><a href="#%EF%B8%8F-roadmap">üó∫Ô∏è Roadmap</a></li>
<li><a href="#-download-setup">üöÄ Download Setup</a>
<ul dir="auto">
<li><a href="#app-market">App Market</a></li>
<li><a href="#installation-package">Installation Package</a></li>
<li><a href="#docker-hosting">Docker Hosting</a></li>
<li><a href="#unraid-hosting">Unraid Hosting</a></li>
<li><a href="#insider-preview">Insider Preview</a></li>
</ul>
</li>
<li><a href="#%EF%B8%8F-community">üèòÔ∏è Community</a></li>
<li><a href="#%EF%B8%8F-development-guide">üõ†Ô∏è Development Guide</a></li>
<li><a href="#-faq">‚ùì FAQ</a>
<ul dir="auto">
<li><a href="#how-does-siyuan-store-data">How does SiYuan store data?</a></li>
<li><a href="#does-it-support-data-synchronization-through-a-third-party-sync-disk">Does it support data synchronization through a third-party sync disk?</a></li>
<li><a href="#is-siyuan-open-source">Is SiYuan open source?</a></li>
<li><a href="#how-to-upgrade-to-a-new-version">How to upgrade to a new version?</a></li>
<li><a href="#what-if-some-blocks-such-as-paragraph-blocks-in-list-items-cannot-find-the-block-icon">What if some blocks (such as paragraph blocks in list items) cannot find the block icon?</a></li>
<li><a href="#what-should-i-do-if-the-data-repo-key-is-lost">What should I do if the data repo key is lost?</a></li>
<li><a href="#do-i-need-to-pay-for-it">Do I need to pay for it?</a></li>
</ul>
</li>
<li><a href="#-acknowledgement">üôè Acknowledgement</a>
<ul dir="auto">
<li><a href="#contributors">Contributors</a></li>
</ul>
</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">üí° Introduction</h2><a id="user-content--introduction" aria-label="Permalink: üí° Introduction" href="#-introduction"></a></p>
<p dir="auto">SiYuan is a privacy-first personal knowledge management system, support fine-grained block-level reference and Markdown
WYSIWYG.</p>
<p dir="auto">Welcome to <a href="https://liuyun.io/" rel="nofollow">SiYuan English Discussion Forum</a> to learn more.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/25962b05bb71cf84f8bc0a05549b652e4c39a7d0f1c10e2a7de8204373066a11/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032342f30312f66656174757265302d316f7242526c492e706e67"><img src="https://camo.githubusercontent.com/25962b05bb71cf84f8bc0a05549b652e4c39a7d0f1c10e2a7de8204373066a11/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032342f30312f66656174757265302d316f7242526c492e706e67" alt="feature0.png" data-canonical-src="https://b3logfile.com/file/2024/01/feature0-1orBRlI.png"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/76b1284aaab42bf1e1f44a6f97fde5e415bb6e51832d8cfa23192502d459d633/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032342f30322f66656174757265352d312d7559596a4171792e706e67"><img src="https://camo.githubusercontent.com/76b1284aaab42bf1e1f44a6f97fde5e415bb6e51832d8cfa23192502d459d633/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032342f30322f66656174757265352d312d7559596a4171792e706e67" alt="feature51.png" data-canonical-src="https://b3logfile.com/file/2024/02/feature5-1-uYYjAqy.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üîÆ Features</h2><a id="user-content--features" aria-label="Permalink: üîÆ Features" href="#-features"></a></p>
<p dir="auto">Most features are free, even for commercial use.</p>
<ul dir="auto">
<li>Content block
<ul dir="auto">
<li>Block-level reference and two-way links</li>
<li>Custom attributes</li>
<li>SQL query embed</li>
<li>Protocol <code>siyuan://</code></li>
</ul>
</li>
<li>Editor
<ul dir="auto">
<li>Block-style</li>
<li>Markdown WYSIWYG</li>
<li>List outline</li>
<li>Block zoom-in</li>
<li>Million-word large document editing</li>
<li>Mathematical formulas, charts, flowcharts, Gantt charts, timing charts, staffs, etc.</li>
<li>Web clipping</li>
<li>PDF Annotation link</li>
</ul>
</li>
<li>Export
<ul dir="auto">
<li>Block ref and embed</li>
<li>Standard Markdown with assets</li>
<li>PDF, Word and HTML</li>
<li>Copy to WeChat MP, Zhihu and Yuque</li>
</ul>
</li>
<li>Database
<ul dir="auto">
<li>Table view</li>
</ul>
</li>
<li>Flashcard spaced repetition</li>
<li>AI writing and Q/A chat via OpenAI API</li>
<li>Tesseract OCR</li>
<li>Multi-tab, drag and drop to split screen</li>
<li>Template snippet</li>
<li>JavaScript/CSS snippet</li>
<li>Android/iOS/HarmonyOS App</li>
<li>Docker deployment</li>
<li><a href="https://github.com/siyuan-note/siyuan/blob/master/API.md">API</a></li>
<li>Community marketplace</li>
</ul>
<p dir="auto">Some features are only available to paid members, for more details please refer to <a href="https://b3log.org/siyuan/en/pricing.html" rel="nofollow">Pricing</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üèóÔ∏è Architecture and Ecosystem</h2><a id="user-content-Ô∏è-architecture-and-ecosystem" aria-label="Permalink: üèóÔ∏è Architecture and Ecosystem" href="#Ô∏è-architecture-and-ecosystem"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dc452f94331daee42f37747cec0027711ac2a06ecd20c487c26e71eb11ba76cc/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032332f30352f53695975616e5f417263682d536775387658542e706e67"><img src="https://camo.githubusercontent.com/dc452f94331daee42f37747cec0027711ac2a06ecd20c487c26e71eb11ba76cc/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032332f30352f53695975616e5f417263682d536775387658542e706e67" alt="SiYuan Arch" title="SiYuan Arch" data-canonical-src="https://b3logfile.com/file/2023/05/SiYuan_Arch-Sgu8vXT.png"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Project</th>
<th>Description</th>
<th>Forks</th>
<th>Stars</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/88250/lute">lute</a></td>
<td>Editor engine</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/f5be27ebc967356b4ad56357489745cd168222c8f14716d915d36301b23925eb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f38383235302f6c757465"><img src="https://camo.githubusercontent.com/f5be27ebc967356b4ad56357489745cd168222c8f14716d915d36301b23925eb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f38383235302f6c757465" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/88250/lute"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/1cea1a3887633e55b429edd402f6f9266476dc31a60cea65ac289a82551a75fd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f38383235302f6c757465"><img src="https://camo.githubusercontent.com/1cea1a3887633e55b429edd402f6f9266476dc31a60cea65ac289a82551a75fd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f38383235302f6c757465" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/88250/lute"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/siyuan-chrome">chrome</a></td>
<td>Chrome/Edge extension</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/594f2c68cf4b2527223aaf931ca57e5ef8064acc68f2a91d39fb38529e7488d3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d6368726f6d65"><img src="https://camo.githubusercontent.com/594f2c68cf4b2527223aaf931ca57e5ef8064acc68f2a91d39fb38529e7488d3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d6368726f6d65" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/siyuan-chrome"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dff4280191d0968f9f0949a1ca5d4d0ede251a1c0450927442ba624a49ecf3c0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d6368726f6d65"><img src="https://camo.githubusercontent.com/dff4280191d0968f9f0949a1ca5d4d0ede251a1c0450927442ba624a49ecf3c0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d6368726f6d65" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/siyuan-chrome"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/bazaar">bazaar</a></td>
<td>Community marketplace</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/22c5780723e5c3fb239876099668dd931aec5ad8a7c29c2a9cc39815afbff0b9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f62617a616172"><img src="https://camo.githubusercontent.com/22c5780723e5c3fb239876099668dd931aec5ad8a7c29c2a9cc39815afbff0b9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f62617a616172" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/bazaar"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/05a35d5d71e8e0cc61d32b4bee326b890db3809c980a85e69bf6fdbd8bcf07ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f62617a616172"><img src="https://camo.githubusercontent.com/05a35d5d71e8e0cc61d32b4bee326b890db3809c980a85e69bf6fdbd8bcf07ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f62617a616172" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/bazaar"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/dejavu">dejavu</a></td>
<td>Data repo</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6ffd8bb609e1d3d7f19199060f940653686a2cf8c322dbbc36a565d90685a329/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f64656a617675"><img src="https://camo.githubusercontent.com/6ffd8bb609e1d3d7f19199060f940653686a2cf8c322dbbc36a565d90685a329/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f64656a617675" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/dejavu"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ab7ed4246fd7b23a1b86667bc3cac2cbf27019065687b6e62f13e0fc0c392aec/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f64656a617675"><img src="https://camo.githubusercontent.com/ab7ed4246fd7b23a1b86667bc3cac2cbf27019065687b6e62f13e0fc0c392aec/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f64656a617675" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/dejavu"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/petal">petal</a></td>
<td>Plugin API</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c54906f43194c7eee0717839c89e22911c23ee8141d17dde20ebd5f338965c3e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f706574616c"><img src="https://camo.githubusercontent.com/c54906f43194c7eee0717839c89e22911c23ee8141d17dde20ebd5f338965c3e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f706574616c" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/petal"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/78007eb27f7c3ff7539a4dfd688133f3d1fb5fa652a7932a05ab2e5af4290ca3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f706574616c"><img src="https://camo.githubusercontent.com/78007eb27f7c3ff7539a4dfd688133f3d1fb5fa652a7932a05ab2e5af4290ca3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f706574616c" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/petal"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/siyuan-android">android</a></td>
<td>Android App</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/5cb4ed6a4aa44b70bcb44d842a562896a8bbe42c30c3ed3c404a660df0f24dd1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d616e64726f6964"><img src="https://camo.githubusercontent.com/5cb4ed6a4aa44b70bcb44d842a562896a8bbe42c30c3ed3c404a660df0f24dd1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d616e64726f6964" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/siyuan-android"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3c3034ef8578773d6e2bd3aba592fb954cedc1c6080a76792701e698004825db/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d616e64726f6964"><img src="https://camo.githubusercontent.com/3c3034ef8578773d6e2bd3aba592fb954cedc1c6080a76792701e698004825db/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d616e64726f6964" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/siyuan-android"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/siyuan-ios">ios</a></td>
<td>iOS App</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/daf7fe21ecf8a4daeb29a4cc4ed4f8ad3c171f1b66c9171abdbfe0d1c178148d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d696f73"><img src="https://camo.githubusercontent.com/daf7fe21ecf8a4daeb29a4cc4ed4f8ad3c171f1b66c9171abdbfe0d1c178148d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d696f73" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/siyuan-ios"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/54a15d0bdcf8d8d63a7f291f618187c3fc78fb27a8583c4caa6b13cbfe7df42d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d696f73"><img src="https://camo.githubusercontent.com/54a15d0bdcf8d8d63a7f291f618187c3fc78fb27a8583c4caa6b13cbfe7df42d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d696f73" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/siyuan-ios"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/siyuan-harmony">harmony</a></td>
<td>HarmonyOS App</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/725e8548d907b38fcea7b2ec1fd9f1a551a57d47b4340e7b5b158964018648d6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d6861726d6f6e79"><img src="https://camo.githubusercontent.com/725e8548d907b38fcea7b2ec1fd9f1a551a57d47b4340e7b5b158964018648d6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d6861726d6f6e79" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/siyuan-harmony"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/8cc5ce0713e89b1d60078cf2647fa5556a22dab0bb4682eacc9cf9d2ba94c418/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d6861726d6f6e79"><img src="https://camo.githubusercontent.com/8cc5ce0713e89b1d60078cf2647fa5556a22dab0bb4682eacc9cf9d2ba94c418/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d6861726d6f6e79" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/siyuan-harmony"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/riff">riff</a></td>
<td>Spaced repetition</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ca034cf1bd77aebe364dd74d1270ebc999489f05b5339c73d710ecd2bae954c3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f72696666"><img src="https://camo.githubusercontent.com/ca034cf1bd77aebe364dd74d1270ebc999489f05b5339c73d710ecd2bae954c3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f72696666" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/riff"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fbc6c499dd662edd655a9a737b3e69782e36203f2a563ddc2eea8a2435fcc456/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f72696666"><img src="https://camo.githubusercontent.com/fbc6c499dd662edd655a9a737b3e69782e36203f2a563ddc2eea8a2435fcc456/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f72696666" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/riff"></a></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">üåü Star History</h2><a id="user-content--star-history" aria-label="Permalink: üåü Star History" href="#-star-history"></a></p>
<a href="https://star-history.com/#siyuan-note/siyuan&amp;Date" rel="nofollow">
 <themed-picture data-catalyst-inline="true"><picture>
   <source media="(prefers-color-scheme: dark)" srcset="https://camo.githubusercontent.com/faee1df33c69dfdb3652b10aef42a3c54a5ec71b35a03c2df3783906e24fa6d2/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d73697975616e2d6e6f74652f73697975616e26747970653d44617465267468656d653d6461726b" data-canonical-src="https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date&amp;theme=dark">
   <source media="(prefers-color-scheme: light)" srcset="https://camo.githubusercontent.com/5841ff204a75071a15494eddf62aab809db6c32000ddd21d3ab09c2af6ba0adb/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d73697975616e2d6e6f74652f73697975616e26747970653d44617465" data-canonical-src="https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date">
   <img alt="Star History Chart" src="https://camo.githubusercontent.com/5841ff204a75071a15494eddf62aab809db6c32000ddd21d3ab09c2af6ba0adb/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d73697975616e2d6e6f74652f73697975616e26747970653d44617465" data-canonical-src="https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date">
 </picture></themed-picture>
</a>
<p dir="auto"><h2 tabindex="-1" dir="auto">üó∫Ô∏è Roadmap</h2><a id="user-content-Ô∏è-roadmap" aria-label="Permalink: üó∫Ô∏è Roadmap" href="#Ô∏è-roadmap"></a></p>
<ul dir="auto">
<li><a href="https://github.com/orgs/siyuan-note/projects/1">SiYuan development plan and progress</a></li>
<li><a href="https://github.com/siyuan-note/siyuan/blob/master/CHANGELOG.md">SiYuan changelog</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">üöÄ Download Setup</h2><a id="user-content--download-setup" aria-label="Permalink: üöÄ Download Setup" href="#-download-setup"></a></p>
<p dir="auto">It is recommended to give priority to installing through the application market on the desktop and mobile, so that you can upgrade the version with one click in the future.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">App Market</h3><a id="user-content-app-market" aria-label="Permalink: App Market" href="#app-market"></a></p>
<p dir="auto">Mobile:</p>
<ul dir="auto">
<li><a href="https://apps.apple.com/us/app/siyuan/id1583226508" rel="nofollow">App Store</a></li>
<li><a href="https://play.google.com/store/apps/details?id=org.b3log.siyuan" rel="nofollow">Google Play</a></li>
<li><a href="https://f-droid.org/packages/org.b3log.siyuan" rel="nofollow">F-Droid</a></li>
</ul>
<p dir="auto">Desktop:</p>
<ul dir="auto">
<li><a href="https://apps.microsoft.com/detail/9p7hpmxp73k4" rel="nofollow">Microsoft Store</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installation Package</h3><a id="user-content-installation-package" aria-label="Permalink: Installation Package" href="#installation-package"></a></p>
<ul dir="auto">
<li><a href="https://b3log.org/siyuan/en/download.html" rel="nofollow">B3log</a></li>
<li><a href="https://github.com/siyuan-note/siyuan/releases">GitHub</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Docker Hosting</h3><a id="user-content-docker-hosting" aria-label="Permalink: Docker Hosting" href="#docker-hosting"></a></p>
<details>
<summary>Docker Deployment</summary>
<p dir="auto"><h4 tabindex="-1" dir="auto">Overview</h4><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">The easiest way to serve SiYuan on a server is to deploy it through Docker.</p>
<ul dir="auto">
<li>Image name <code>b3log/siyuan</code></li>
<li><a href="https://hub.docker.com/r/b3log/siyuan" rel="nofollow">Image URL</a></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">File structure</h4><a id="user-content-file-structure" aria-label="Permalink: File structure" href="#file-structure"></a></p>
<p dir="auto">The overall program is located under <code>/opt/siyuan/</code>, which is basically the structure under the resources folder of the Electron installation package:</p>
<ul dir="auto">
<li>appearance: icon, theme, languages</li>
<li>guide: user guide document</li>
<li>stage: interface and static resources</li>
<li>kernel: kernel program</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Entrypoint</h4><a id="user-content-entrypoint" aria-label="Permalink: Entrypoint" href="#entrypoint"></a></p>
<p dir="auto">The entry point is set when building the Docker image: <code>ENTRYPOINT ["/opt/siyuan/entrypoint.sh"]</code>. This script allows changing the <code>PUID</code> and <code>PGID</code> of the user that will run inside the container. This is especially relevant to solve permission issues when mounting directories from the host. The <code>PUID</code> (User ID) and <code>PGID</code> (Group ID) can be passed as environment variables, making it easier to ensure correct permissions when accessing host-mounted directories.</p>
<p dir="auto">Use the following parameters when running the container with <code>docker run b3log/siyuan</code>:</p>
<ul dir="auto">
<li><code>--workspace</code>: Specifies the workspace folder path, mounted to the container via <code>-v</code> on the host</li>
<li><code>--accessAuthCode</code>: Specifies the access authorization code</li>
</ul>
<p dir="auto">More parameters can be found using <code>--help</code>. Here‚Äôs an example of a startup command with the new environment variables:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -d \
  -v workspace_dir_host:workspace_dir_container \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=workspace_dir_container \
  --accessAuthCode=xxx"><pre>docker run -d \
  -v workspace_dir_host:workspace_dir_container \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=workspace_dir_container \
  --accessAuthCode=xxx</pre></div>
<ul dir="auto">
<li><code>PUID</code>: Custom user ID (optional, defaults to <code>1000</code> if not provided)</li>
<li><code>PGID</code>: Custom group ID (optional, defaults to <code>1000</code> if not provided)</li>
<li><code>workspace_dir_host</code>: The workspace folder path on the host</li>
<li><code>workspace_dir_container</code>: The path of the workspace folder in the container, as specified in <code>--workspace</code></li>
<li><code>accessAuthCode</code>: Access authorization code (please <strong>be sure to modify</strong>, otherwise anyone can access your data)</li>
</ul>
<p dir="auto">To simplify things, it is recommended to configure the workspace folder path to be consistent on the host and container, such as having both <code>workspace_dir_host</code> and <code>workspace_dir_container</code> configured as <code>/siyuan/workspace</code>. The corresponding startup command would be:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -d \
  -v /siyuan/workspace:/siyuan/workspace \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=/siyuan/workspace/ \
  --accessAuthCode=xxx"><pre>docker run -d \
  -v /siyuan/workspace:/siyuan/workspace \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=/siyuan/workspace/ \
  --accessAuthCode=xxx</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Docker Compose</h4><a id="user-content-docker-compose" aria-label="Permalink: Docker Compose" href="#docker-compose"></a></p>
<p dir="auto">For users running Siyuan with Docker Compose, the environment variables <code>PUID</code> and <code>PGID</code> can be passed to customize the user and group IDs. Here's an example of a Docker Compose configuration:</p>
<div dir="auto" data-snippet-clipboard-copy-content="version: &quot;3.9&quot;
services:
  main:
    image: b3log/siyuan
    command: ['--workspace=/siyuan/workspace/', '--accessAuthCode=${AuthCode}']
    ports:
      - 6806:6806
    volumes:
      - /siyuan/workspace:/siyuan/workspace
    restart: unless-stopped
    environment:
      # A list of time zone identifiers can be found at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=${YOUR_TIME_ZONE}
      - PUID=${YOUR_USER_PUID}  # Customize user ID
      - PGID=${YOUR_USER_PGID}  # Customize group ID"><pre><span>version</span>: <span><span>"</span>3.9<span>"</span></span>
<span>services</span>:
  <span>main</span>:
    <span>image</span>: <span>b3log/siyuan</span>
    <span>command</span>: <span>['--workspace=/siyuan/workspace/', '--accessAuthCode=${AuthCode}']</span>
    <span>ports</span>:
      - <span>6806:6806</span>
    <span>volumes</span>:
      - <span>/siyuan/workspace:/siyuan/workspace</span>
    <span>restart</span>: <span>unless-stopped</span>
    <span>environment</span>:
      <span><span>#</span> A list of time zone identifiers can be found at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</span>
      - <span>TZ=${YOUR_TIME_ZONE}</span>
      - <span>PUID=${YOUR_USER_PUID}  </span><span><span>#</span> Customize user ID</span>
      - <span>PGID=${YOUR_USER_PGID}  </span><span><span>#</span> Customize group ID</span></pre></div>
<p dir="auto">In this setup:</p>
<ul dir="auto">
<li><code>PUID</code> and <code>PGID</code> are set dynamically and passed to the container</li>
<li>If these variables are not provided, the default <code>1000</code> will be used</li>
</ul>
<p dir="auto">By specifying <code>PUID</code> and <code>PGID</code> in the environment, you avoid the need to explicitly set the <code>user</code> directive (<code>user: '1000:1000'</code>) in the compose file. The container will dynamically adjust the user and group based on these environment variables at startup.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">User Permissions</h4><a id="user-content-user-permissions" aria-label="Permalink: User Permissions" href="#user-permissions"></a></p>
<p dir="auto">In the image, the <code>entrypoint.sh</code> script ensures the creation of the <code>siyuan</code> user and group with the specified <code>PUID</code> and <code>PGID</code>. Therefore, when the host creates a workspace folder, pay attention to setting the user and group ownership of the folder to match the <code>PUID</code> and <code>PGID</code> you plan to use. For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="chown -R 1001:1002 /siyuan/workspace"><pre>chown -R 1001:1002 /siyuan/workspace</pre></div>
<p dir="auto">If you use custom <code>PUID</code> and <code>PGID</code> values, the entrypoint script will ensure that the correct user and group are created inside the container, and ownership of mounted volumes will be adjusted accordingly. There‚Äôs no need to manually pass <code>-u</code> in <code>docker run</code> or <code>docker-compose</code> as the environment variables will handle the customization.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Hidden port</h4><a id="user-content-hidden-port" aria-label="Permalink: Hidden port" href="#hidden-port"></a></p>
<p dir="auto">Use NGINX reverse proxy to hide port 6806, please note:</p>
<ul dir="auto">
<li>Configure WebSocket reverse proxy <code>/ws</code></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Note</h4><a id="user-content-note" aria-label="Permalink: Note" href="#note"></a></p>
<ul dir="auto">
<li>Be sure to confirm the correctness of the mounted volume, otherwise the data will be lost after the container is deleted</li>
<li>Do not use URL rewriting for redirection, otherwise there may be problems with authentication, it is recommended to configure a reverse proxy</li>
<li>If you encounter permission issues, verify that the <code>PUID</code> and <code>PGID</code> environment variables match the ownership of the mounted directories on your host system</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Limitations</h4><a id="user-content-limitations" aria-label="Permalink: Limitations" href="#limitations"></a></p>
<ul dir="auto">
<li>Does not support desktop and mobile application connections, only supports use on browsers</li>
<li>Export to PDF, HTML and Word formats is not supported</li>
<li>Import Markdown file is not supported</li>
</ul>
</details>
<p dir="auto"><h3 tabindex="-1" dir="auto">Unraid Hosting</h3><a id="user-content-unraid-hosting" aria-label="Permalink: Unraid Hosting" href="#unraid-hosting"></a></p>
<details>
<summary>Unraid Deployment</summary>
<p dir="auto">Note: First run <code>chown -R 1000:1000 /mnt/user/appdata/siyuan</code> in the terminal</p>
<p dir="auto">Template reference:</p>
<div data-snippet-clipboard-copy-content="Web UI: 6806
Container Port: 6806
Container Path: /home/siyuan
Host path: /mnt/user/appdata/siyuan
PUID: 1000
PGID: 1000
Publish parameters: --accessAuthCode=******(Access authorization code)"><pre><code>Web UI: 6806
Container Port: 6806
Container Path: /home/siyuan
Host path: /mnt/user/appdata/siyuan
PUID: 1000
PGID: 1000
Publish parameters: --accessAuthCode=******(Access authorization code)
</code></pre></div>
</details>
<p dir="auto"><h3 tabindex="-1" dir="auto">Insider Preview</h3><a id="user-content-insider-preview" aria-label="Permalink: Insider Preview" href="#insider-preview"></a></p>
<p dir="auto">We release insider preview before major updates, please visit <a href="https://github.com/siyuan-note/insider">https://github.com/siyuan-note/insider</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üèòÔ∏è Community</h2><a id="user-content-Ô∏è-community" aria-label="Permalink: üèòÔ∏è Community" href="#Ô∏è-community"></a></p>
<ul dir="auto">
<li><a href="https://liuyun.io/" rel="nofollow">English Discussion Forum</a></li>
<li><a href="https://liuyun.io/article/1687779743723" rel="nofollow">User community summary</a></li>
<li><a href="https://github.com/siyuan-note/awesome">Awesome SiYuan</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">üõ†Ô∏è Development Guide</h2><a id="user-content-Ô∏è-development-guide" aria-label="Permalink: üõ†Ô∏è Development Guide" href="#Ô∏è-development-guide"></a></p>
<p dir="auto">See <a href="https://github.com/siyuan-note/siyuan/blob/master/.github/CONTRIBUTING.md">Development Guide</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">‚ùì FAQ</h2><a id="user-content--faq" aria-label="Permalink: ‚ùì FAQ" href="#-faq"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How does SiYuan store data?</h3><a id="user-content-how-does-siyuan-store-data" aria-label="Permalink: How does SiYuan store data?" href="#how-does-siyuan-store-data"></a></p>
<p dir="auto">The data is saved in the workspace folder, in the workspace data folder:</p>
<ul dir="auto">
<li><code>assets</code> is used to save all inserted assets</li>
<li><code>emojis</code> is used to save emoji images</li>
<li><code>snippets</code> is used to save code snippets</li>
<li><code>storage</code> is used to save query conditions, layouts and flashcards, etc.</li>
<li><code>templates</code> is used to save template snippets</li>
<li><code>widgets</code> is used to save widgets</li>
<li><code>plugins</code> is used to save plugins</li>
<li><code>public</code> is used to save public data</li>
<li>The rest of the folders are the notebook folders created by the user, files with the suffix of <code>.sy</code> in the notebook folder are used to save the document data, and the data format is JSON</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Does it support data synchronization through a third-party sync disk?</h3><a id="user-content-does-it-support-data-synchronization-through-a-third-party-sync-disk" aria-label="Permalink: Does it support data synchronization through a third-party sync disk?" href="#does-it-support-data-synchronization-through-a-third-party-sync-disk"></a></p>
<p dir="auto">Data synchronization through third-party synchronization disks is not supported, otherwise data may be corrupted.</p>
<p dir="auto">Although it does not support third-party sync disks, it supports connect with third-party cloud storage (Member's privileges).</p>
<p dir="auto">In addition, you can also consider manually exporting and importing data to achieve data synchronization:</p>
<ul dir="auto">
<li>Desktop: <kbd>Settings</kbd> - <kbd>Export</kbd> - <kbd>Export Data</kbd> / <kbd>Import Data</kbd></li>
<li>Mobile: <kbd>Right column</kbd> - <kbd>About</kbd> - <kbd>Export Data</kbd> / <kbd>Import Data</kbd></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Is SiYuan open source?</h3><a id="user-content-is-siyuan-open-source" aria-label="Permalink: Is SiYuan open source?" href="#is-siyuan-open-source"></a></p>
<p dir="auto">SiYuan is completely open source, and contributions are welcome:</p>
<ul dir="auto">
<li><a href="https://github.com/siyuan-note/siyuan">User Interface and Kernel</a></li>
<li><a href="https://github.com/siyuan-note/siyuan-android">Android</a></li>
<li><a href="https://github.com/siyuan-note/siyuan-ios">iOS</a></li>
<li><a href="https://github.com/siyuan-note/siyuan-harmony">HarmonyOS</a></li>
<li><a href="https://github.com/siyuan-note/siyuan-chrome">Chrome Clipping Extension</a></li>
</ul>
<p dir="auto">For more details, please refer to <a href="https://github.com/siyuan-note/siyuan/blob/master/.github/CONTRIBUTING.md">Development Guide</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to upgrade to a new version?</h3><a id="user-content-how-to-upgrade-to-a-new-version" aria-label="Permalink: How to upgrade to a new version?" href="#how-to-upgrade-to-a-new-version"></a></p>
<ul dir="auto">
<li>If installed via app store, please update via app store</li>
<li>If it is installed through the installation package on the desktop, you can open the option of <kbd>Settings</kbd> - <kbd>About</kbd> - <kbd>Automatically download update installation package</kbd>, so that SiYuan will automatically download The latest version of the installation package and prompts to install</li>
<li>If it is installed by manual installation package, please download the installation package again to install</li>
</ul>
<p dir="auto">You can <kbd>Check update</kbd> in <kbd>Settings</kbd> - <kbd>About</kbd> - <kbd>Current Version</kbd>, or pay attention to <a href="https://b3log.org/siyuan/en/download.html" rel="nofollow">Official Download</a> or <a href="https://github.com/siyuan-note/siyuan/releases">GitHub Releases</a> to get the new version.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">What if some blocks (such as paragraph blocks in list items) cannot find the block icon?</h3><a id="user-content-what-if-some-blocks-such-as-paragraph-blocks-in-list-items-cannot-find-the-block-icon" aria-label="Permalink: What if some blocks (such as paragraph blocks in list items) cannot find the block icon?" href="#what-if-some-blocks-such-as-paragraph-blocks-in-list-items-cannot-find-the-block-icon"></a></p>
<p dir="auto">The first sub-block under the list item is the block icon omitted. You can move the cursor into this block and trigger its block menu with <kbd>Ctrl+/</kbd> .</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">What should I do if the data repo key is lost?</h3><a id="user-content-what-should-i-do-if-the-data-repo-key-is-lost" aria-label="Permalink: What should I do if the data repo key is lost?" href="#what-should-i-do-if-the-data-repo-key-is-lost"></a></p>
<ul dir="auto">
<li>
<p dir="auto">If the data repo key is correctly initialized on multiple devices before, the key is the same on all devices and can be set in <kbd>Settings</kbd> - <kbd>About</kbd> - <kbd>Data repo key</kbd> - <kbd>Copy key string</kbd> retrieve</p>
</li>
<li>
<p dir="auto">If it has not been configured correctly before (for example, the keys on multiple devices are inconsistent) or all devices are unavailable and the key string cannot be obtained, you can reset the key by following the steps below:</p>
<ol dir="auto">
<li>Manually back up the data, you can use <kbd>Export Data</kbd> or directly copy the <kbd>workspace/data/</kbd> folder on the file system</li>
<li><kbd>Settings</kbd> - <kbd>About</kbd> - <kbd>Data rep key</kbd> - <kbd>Reset data repo</kbd></li>
<li>Reinitialize the data repo key. After initializing the key on one device, other devices import the key</li>
<li>The cloud uses the new synchronization directory, the old synchronization directory is no longer available and can be deleted</li>
<li>The existing cloud snapshots are no longer available and can be deleted</li>
</ol>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Do I need to pay for it?</h3><a id="user-content-do-i-need-to-pay-for-it" aria-label="Permalink: Do I need to pay for it?" href="#do-i-need-to-pay-for-it"></a></p>
<p dir="auto">Most features are free, even for commercial use.</p>
<p dir="auto">Member's privileges can only be used after payment, please refer to <a href="https://b3log.org/siyuan/en/pricing.html" rel="nofollow">Pricing</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üôè Acknowledgement</h2><a id="user-content--acknowledgement" aria-label="Permalink: üôè Acknowledgement" href="#-acknowledgement"></a></p>
<p dir="auto">The birth of SiYuan is inseparable from many open source projects and contributors, please refer to the project source code kernel/go.mod, app/package.json and project homepage.</p>
<p dir="auto">The growth of SiYuan is inseparable from user feedback and promotion, thank you for everyone's help to SiYuan ‚ù§Ô∏è</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Contributors</h3><a id="user-content-contributors" aria-label="Permalink: Contributors" href="#contributors"></a></p>
<p dir="auto">Welcome to join us and contribute code to SiYuan together.</p>
<a href="https://github.com/siyuan-note/siyuan/graphs/contributors">
   <img src="https://camo.githubusercontent.com/57f5e75e1a049a4e2d9bdd2415a8b8eab69cdd8042d79d8af4d6236333a075de/68747470733a2f2f636f6e747269622e726f636b732f696d6167653f7265706f3d73697975616e2d6e6f74652f73697975616e" data-canonical-src="https://contrib.rocks/image?repo=siyuan-note/siyuan">
</a>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Egui ‚Äì An immediate mode GUI written in Rust (267 pts)]]></title>
            <link>https://www.egui.rs/</link>
            <guid>42512636</guid>
            <pubDate>Thu, 26 Dec 2024 02:06:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.egui.rs/">https://www.egui.rs/</a>, See on <a href="https://news.ycombinator.com/item?id=42512636">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <canvas id="the_canvas_id"></canvas>

    <div id="center_text">
        <p>
            Loading‚Ä¶
        </p>
        
    </div>

    

    <!-- this is the JS generated by the `wasm-bindgen` CLI tool -->
    

    





</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Seconds Since the Epoch (186 pts)]]></title>
            <link>https://aphyr.com/posts/378-seconds-since-the-epoch</link>
            <guid>42512371</guid>
            <pubDate>Thu, 26 Dec 2024 00:59:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://aphyr.com/posts/378-seconds-since-the-epoch">https://aphyr.com/posts/378-seconds-since-the-epoch</a>, See on <a href="https://news.ycombinator.com/item?id=42512371">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <p>This is not at all news, but it comes up often enough that I think there should be a concise explanation of the problem. People, myself included, like to say that POSIX time, also known as Unix time, is the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date">number</a> <a href="https://www.gnu.org/software/coreutils/manual/html_node/Seconds-since-the-Epoch.html">of</a> <a href="https://man7.org/linux/man-pages/man2/time.2.html">seconds</a> <a href="https://pkg.go.dev/time#Unix">since</a> <a href="https://dev.mysql.com/doc/refman/8.4/en/datetime.html">the</a> <a href="https://ruby-doc.org/core-3.0.0/Time.html">Unix</a> <a href="https://docs.datastax.com/en/cql-oss/3.x/cql/cql_reference/timestamp_type_r.html">epoch</a>, which was 1970-01-01 at 00:00:00.</p>
<p>This is not true. Or rather, it isn‚Äôt true in the sense most people think. For example, it is presently 2024-12-25 at 18:54:53 UTC. The POSIX time is 1735152686. It has been 1735152715 seconds since the POSIX epoch. The POSIX time number is twenty-nine seconds lower.</p>
<p>This is because POSIX time is derived <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/FIPS/fipspub151-1.pdf">in IEEE 1003.1</a> from <a href="https://en.wikipedia.org/wiki/Coordinated_Universal_Time">Coordinated Universal Time</a>. The standard assumes that every day is exactly 86,400 seconds long. Specifically:</p>
<blockquote>
<p>The <em>time()</em> function returns the value of time in <b>seconds since the Epoch</b>.</p>
</blockquote>
<p>Which is defined as:</p>
<blockquote>
<p><b>seconds since the Epoch.</b> A value to be interpreted as the number of seconds between a specified time and the Epoch. A Coordinated Universal Time name (specified in terms of seconds (<em>tm_sec</em>), minutes (<em>tm_min</em>), hours (<em>tm_hour</em>), days since January 1 of the year (<em>tm_yday</em>), and calendar year minus 1900
(<em>tm_year</em>)) is related to a time represented as <em>seconds since the Epoch</em> according to the expression below.</p>
<p>If year &lt; 1970 or the value is negative, the relationship is undefined. If year ‚â• 1970 and the value is non-negative, the value is related to a Coordinated Universal Time name according to the expression:</p>
<p><em>tm_sec</em> + <em>tm_min</em> * 60 + <em>tm_hour</em> * 3600 + <em>tm_yday</em> * 86400 +
(<em>tm_year</em>-70) * 31536000 + ((<em>tm_year</em> - 69) / 4) * 86400</p>
</blockquote>
<p>The length of the day is not 86,400 seconds, and in fact changes over time. To keep UTC days from drifting too far from solar days, astronomers periodically declare a <a href="https://en.wikipedia.org/wiki/Leap_second">leap second</a> in UTC. Consequently, every few years POSIX time jumps backwards, <a href="https://marc.info/?l=linux-kernel&amp;m=134113577921904">wreaking</a> <a href="https://www.zdnet.com/article/qantas-suffers-delays-due-to-linux-leap-second-bug/">utter</a> <a href="https://blog.cloudflare.com/how-and-why-the-leap-second-affected-cloudflare-dns/">havoc</a>. Someday it might jump forward.</p>
<h2><a href="#archaeology" id="archaeology">Archaeology</a></h2>
<p>Appendix B of IEEE 1003 has a fascinating discussion of leap seconds:</p>
<blockquote>
<p>The concept of leap seconds is added for precision; at the time this standard was published, 14 leap seconds had been added since January 1, 1970. These 14 seconds are ignored to provide an easy and compatible method of computing time differences.</p>
</blockquote>
<p>I, too, love to ignore things to make my life easy. The standard authors knew ‚Äúseconds since the epoch‚Äù were not, in fact, seconds since the epoch. And they admit as much:</p>
<blockquote>
<p>Most systems‚Äô notion of ‚Äútime‚Äù is that of a continuously-increasing value, so this value should increase even during leap seconds. However, not only do most systems not keep track of leap seconds, but most systems are probably not synchronized to any standard time reference. Therefore, it is inappropriate to require that a time represented as seconds since the Epoch precisely represent the number of seconds between the referenced time and the Epoch.</p>
<p>It is sufficient to require that applications be allowed to treat this time as if it represented the number of seconds between the referenced time and the Epoch. It is the responsibility of the vendor of the system, and the administrator of the system, to ensure that this value represents the number of seconds between the referenced time and the Epoch as closely as necessary for the application being run on that system‚Ä¶.</p>
</blockquote>
<p>I imagine there was some debate over this point. The appendix punts, saying that vendors and administrators must make time align ‚Äúas closely as necessary‚Äù, and that ‚Äúthis value should increase even during leap seconds‚Äù. The latter is achievable, but the former is arguably impossible: the standard requires POSIX clocks be twenty-nine seconds off.</p>
<blockquote>
<p>Consistent interpretation of seconds since the Epoch can be critical to certain types of distributed applications that rely on such timestamps to synchronize events. The accrual of leap seconds in a time standard is not predictable. The number of leap seconds since the Epoch will likely increase. The standard is
more concerned about the synchronization of time between applications of astronomically short duration and the Working Group expects these concerns to become more critical in the future.</p>
</blockquote>
<p>In a sense, the opposite happened. Time synchronization is <em>always</em> off, so systems generally function (however incorrectly) when times drift a bit. But leap seconds are rare, and the linearity evoked by the phrase ‚Äúseconds since the epoch‚Äù is so deeply baked in to our intuition, that software can accrue serious, unnoticed bugs. Until a few years later, one of those tiny little leap seconds takes down a big chunk of the internet.</p>
<h2><a href="#what-to-do-instead" id="what-to-do-instead">What To Do Instead</a></h2>
<p>If you just need to compute the duration between two events on one computer, use <a href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux_for_real_time/7/html/reference_guide/sect-posix_clocks#sect-POSIX_clocks">CLOCK_MONOTONIC</a>. If you don‚Äôt need to exchange timestamps with other systems that assume POSIX time, use <a href="https://www.ipses.com/eng/in-depth-analysis/standard-of-time-definition/">TAI, GPS, or maybe LORAN</a>. If you do need rough alignment with other POSIX-timestamp systems, <a href="https://developers.google.com/time/smear">smear leap seconds</a> over a longer window of time. Libraries like <a href="https://github.com/qntm/t-a-i">qntm‚Äôs t-a-i</a> can convert back and forth between POSIX and TAI.</p>
<p>There‚Äôs an ongoing effort to <a href="https://www.timeanddate.com/news/astronomy/end-of-leap-seconds-2022">end leap seconds</a>, hopefully <a href="https://www.bipm.org/documents/20126/64811223/Resolutions-2022.pdf/281f3160-fc56-3e63-dbf7-77b76500990f">by 2035</a>. It‚Äôll require additional work to build conversion tables into everything that relies on the ‚Äú86,400 seconds per day‚Äù assumption, but it should also make it much simpler to ask questions like ‚Äúhow many seconds between these two times‚Äù. At least for times after 2035!</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Server-Sent Events (SSE) Are Underrated (289 pts)]]></title>
            <link>https://igorstechnoclub.com/server-sent-events-sse-are-underrated/</link>
            <guid>42511318</guid>
            <pubDate>Wed, 25 Dec 2024 21:35:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://igorstechnoclub.com/server-sent-events-sse-are-underrated/">https://igorstechnoclub.com/server-sent-events-sse-are-underrated/</a>, See on <a href="https://news.ycombinator.com/item?id=42511318">Hacker News</a></p>
Couldn't get https://igorstechnoclub.com/server-sent-events-sse-are-underrated/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Air missile accident emerges as probable cause of Azerbaijan E190tragedy (197 pts)]]></title>
            <link>https://www.euronews.com/2024/12/25/azerbaijani-passenger-plane-crashes-near-kazakh-city-of-aktau</link>
            <guid>42511267</guid>
            <pubDate>Wed, 25 Dec 2024 21:25:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.euronews.com/2024/12/25/azerbaijani-passenger-plane-crashes-near-kazakh-city-of-aktau">https://www.euronews.com/2024/12/25/azerbaijani-passenger-plane-crashes-near-kazakh-city-of-aktau</a>, See on <a href="https://news.ycombinator.com/item?id=42511267">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[I thought I found a bug (102 pts)]]></title>
            <link>https://www.os2museum.com/wp/i-thought-i-found-a-bug/</link>
            <guid>42510776</guid>
            <pubDate>Wed, 25 Dec 2024 19:55:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.os2museum.com/wp/i-thought-i-found-a-bug/">https://www.os2museum.com/wp/i-thought-i-found-a-bug/</a>, See on <a href="https://news.ycombinator.com/item?id=42510776">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						
<p>So I was working on improving a DOS emulator, when I found that something seemingly trivial wasn‚Äôt working right when COMMAND.COM was asked to do the following:</p>



<pre>echo AB&gt; foo.txt<br>echo CD&gt;&gt; foo.txt</pre>



<p>Instead of ABCD, foo.txt contained ABBC.</p>



<p>I verified that yes, the right data was being passed to <code>fwrite()</code>, with the big caveat that what COMMAND.COM was doing wasn‚Äôt quite as straightforward as one might think:</p>



<ul>
<li>Open foo.txt</li>



<li>Write ‚ÄòAB‚Äô</li>



<li>Close foo.txt</li>



<li>Open foo.txt</li>



<li>Seek one byte backward from the end of the file</li>



<li>Read one byte</li>



<li>Write ‚ÄòCD‚Äô</li>



<li>Close foo.txt</li>
</ul>



<p>The reason for the complexity is that COMMAND.COM tries to deal with a case that the file ends with a Ctrl-Z character (which wasn‚Äôt the case for me), and if so, the Ctrl-Z needs to be deleted. Somehow the seek/read/write sequence was confusing things. But why?</p>



<p>Sitting down with a debugger, I could just see how the C run-time library (Open Watcom) could be fixed to avoid this problem. But I could not shake a nagging feeling that such a basic bug would have had to be discovered and fixed years ago.</p>



<p>So I proceeded to write a simple test program which I could try with other compilers. </p>



<p>To my great surprise, the venerable Microsoft Visual C++ 6.0 as well as IBM C/C++ 3.6 for Windows both only wrote ‚ÄòAB‚Äô to the output file! The ‚ÄòCD‚Äô never got written at all.</p>



<p>I added further logging to determine that in both cases, the second <code>fwrite()</code> reported that it wrote zero bytes. But that‚Äôs where things got a bit weird.</p>



<p>For the Microsoft runtime, <code>ferror()</code> was set but <code>errno</code> was zero. For the IBM runtime, <code>ferror()</code> was clear but <code>errno</code> was set to 41. Which according to IBM‚Äôs <code>errno.h</code> header means <code>EPUTANDGET</code>‚Ä¶ and what does that error even mean?</p>



<p>At this point, I knew I was doing something wrong. But what? For once, stackoverflow <a href="https://stackoverflow.com/questions/23843587/fwrite-doesnt-work-directly-after-fread">actually had the right answer</a>! Amazing, that almost never happens.</p>



<h3>Why Oh Why?</h3>



<p>Of course one has to wonder‚Ä¶ why is it like this? Having basic file I/O functions behave in this non-obvious way (either quietly failing or not writing the expected data, depending on the sequence of other function calls) is clearly sub-optimal.</p>



<p>It is obvious that it would not be rocket science for the C library to keep a record of whether the most recent I/O was a read or a write, and perform the appropriate flush or seek when switching directions. Indeed it‚Äôs clear that for example the IBM C runtime keeps track internally, and issues a very specific error when the correct sequencing is violated.</p>



<p>The closest thing to an answer that I‚Äôve been able to find is that ‚Äúit‚Äôs always been this way‚Äù.</p>



<p>With a caveat that ‚Äúalways‚Äù means since circa 1979, not always always. Looking at the 1978 edition of K&amp;R, it‚Äôs obvious why: The original K&amp;R library only supported the read (<code>"r"</code>), write (<code>"w"</code>), and append (<code>"a"</code>) modes for <code>fopen()</code>, with append being effectively a write. There was no update mode, (<code>"r+"</code>) and hence reads and writes could not be mixed at all! That is very likely part of the puzzle.</p>



<p>By the time the oldest preserved ANSI C draft rolled out, the behavior was already set in stone. Consider how little things have changed over the years:</p>



<blockquote>
<p>When a file is opened with update mode (<em><code>'+'</code></em> as the second or third character in the mode argument), both input and output may be performed on the associated stream.  However, output may not be directly followed by input without an intervening call to the <em><code>fflush</code></em> function or to a file positioning function (<em><code>fseek</code></em>, <em><code>fsetpos</code></em>, or <em><code>rewind</code></em>), and input may not be directly followed by output without an intervening call to a file positioning function, unless the input operation encounters end-of-file. Opening a file with update mode may open or create a binary stream in some implementations.</p>
<cite>ANSI X3J11 C draft, 1988</cite></blockquote>



<p>The ANSI C Rationale contains the following text:</p>



<blockquote>
<p>A change of input/output direction on an update file is only allowed following a<br><em><code>fsetpos</code></em>, <em><code>fseek</code></em>, <em><code>rewind</code></em>, or <em><code>fflush</code></em> operation, since these are precisely the functions<br>which assure that the I/O buffer has been flushed.</p>
</blockquote>



<p>The implication is that when the buffer I/O contains data, it‚Äôs not safe to switch read/write direction.</p>



<p>The published ANSI C89/ISO C90 is near identical to the draft Standard and does not bear repeating here. In C99, ‚Äúmay not‚Äù was replaced with ‚Äúshall not‚Äù but little else changed:</p>



<blockquote>
<p>When a file is opened with update mode (<em><code>'+'</code></em> as the second or third character in the above list of mode argument values), both input and output may be performed on the associated stream. However, output shall not be directly followed by input without an intervening call to the <em><code>fflush</code></em> function or to a file positioning function (<em><code>fseek</code></em>, <em><code>fsetpos</code></em>, or <em><code>rewind</code></em>), and input shall not be directly followed by output without an intervening call to a file positioning function, unless the input operation encounters end-of-file. Opening (or creating) a text file with update mode may instead open (or create) a binary stream in some implementations.</p>
<cite>ISO C99, 1999</cite></blockquote>



<p>Fast forward another (almost) quarter century, and we have this:</p>



<blockquote>
<p>When a file is opened with update mode (‚Äô+‚Äô as the second or third character in the previously described list of mode argument values), both input and output may be performed on the associated stream. However, output shall not be directly followed by input without an intervening call to the <em><code>fflush</code></em> function or to a file positioning function (<em><code>fseek</code></em>, <em><code>fsetpos</code></em>, or <em><code>rewind</code></em>), and input shall not be directly followed by output without an intervening call to a file positioning function, unless the input operation encounters end-of-file. Opening (or creating) a text file with update mode may instead open (or create) a binary stream in some implementations.</p>
<cite>ISO C23, 2024</cite></blockquote>



<p>As far as Standard C is concerned, this has provably not changed since 1988 until present.</p>



<p>But of course the ANSI X3J11 Committee did not invent the C library. It worked on the basis of earlier documents, namely the elusive 1984 <em>/usr/group Standard</em> in case of the library.</p>



<p>While I couldn‚Äôt find a copy of the <em>/usr/group Standard</em>, the /usr/group committee likewise didn‚Äôt create the C library but rather tried to standardize existing implementations. Which means that the answer might lie in old UNIX manuals.</p>



<p>Even System V is too new and we have to look further back. The <a href="http://www.bitsavers.org/pdf/att/unix/System_III/UNIX_Users_Manual_Release_3_Jun80.pdf#page=503&amp;zoom=auto,-170,7">AT&amp;T UNIX System III manual</a> contains the following text in the <code>fread</code> manual page:</p>



<blockquote>
<p>When a file is opened for update, both input and output may be done on<br>the resulting stream. However, output may not be directly followed by<br>input without an intervening <em><code>fseek</code></em> or <em><code>rewind</code></em>, and input may not be directly<br>followed by output without an intervening <em><code>fseek</code></em>, <em><code>rewind</code></em>, or an input opera-<br>tion which encounters end of file.</p>
<cite>AT&amp;T UNIX System III manual, 1980</cite></blockquote>



<p>Hmm, that text from 1980 is rather similar to what ended up in ANSI C89. Sure, there was no <code>fsetpos()</code> yet (an ANSI C invention), and the text is oddly missing any mention of <code>fflush()</code>, even though flushing almost certainly made it OK to switch from writing to reading even then.</p>



<p>But it‚Äôs obvious that the restriction on switching between reading and writing on C library streams has been there for a very, very long time.</p>



<p>7th Edition UNIX (1979), even in the updated documentation from 1983, <a href="https://bitsavers.org/pdf/att/unix/7th_Edition/UNIX_Programmers_Manual_Seventh_Edition_Vol_1_1983.pdf#page=277&amp;zoom=auto,-158,783">does not mention update mode for <code>fopen()</code></a> and hence does not offer any advice on switching read/write directions.</p>



<h3>Current Practice</h3>



<p>At least Linux (glibc) and FreeBSD allow free intermixing of reads and writes. The FreeBSD man page for <code>fopen()</code> states:</p>



<blockquote>
<p>Reads and writes may be intermixed on read/write streams in any order, and do not require an intermediate seek as in previous versions of <em>stdio</em>. This is not portable to other systems, however; ISO/IEC 9899:1990 (‚ÄúISO C90‚Äù) and IEEE Std 1003.1 (‚ÄúPOSIX.1‚Äù) both require that a file positioning function intervene between output and input, unless an input operation encounters end-of-file.</p>
</blockquote>



<p>In contrast, Microsoft‚Äôs library documentation (as of 2024) mirrors ISO C and states that flushing or seeking is required when changing read/write direction.</p>



<p>On the one hand, transparently handling the direction switching in the library is not outrageously difficult. On the other hand, doing so encourages programmers to write non-conforming C code which will fail in rather interesting ways on other implementations. As always, there are tradeoffs.</p>



<h3>Old Source</h3>



<p>Looking at historic source code proved quite interesting.</p>



<p>In 32V UNIX from 1979, <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=32V/usr/src/libc/stdio/fopen.c">fopen</a> clearly opens files for either reading or writing, but not both (and any mode other than ‚Äòw‚Äô or ‚Äòa‚Äô means implicitly ‚Äòr‚Äô!).</p>



<p>V6 UNIX from 1975 is too old to even have <code>fopen()</code>. System III from 1980 on the other hand supports update mode, and <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=SysIII/usr/src/lib/libc/pdp11/stdio/endopen.c">opening streams</a> for update sets an explicit <code>_IORW</code> flag (and, as mentioned above, the System III documentation demands extra care when switching I/O direction).</p>



<p>Things get confusing with V7 UNIX from 1979. Although the documentation does not show any update mode option for <code>fopen()</code>, the <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/libc/stdio/endopen.c">actual implementation</a> supports it. In fact the V7 code from 1979 is nearly identical to what was in System III a year later. Why? I don‚Äôt know.</p>



<p>And then there‚Äôs the <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=2BSD/src/libNS/fopen.c">2BSD code</a>, again from 1979. While the BSD <code>fopen()</code> has no provision for indicating update mode with the ‚Äò+‚Äô character, it allows specifying open modes like <code>"rw"</code>, setting both the <code>_IOREAD</code> and <code>_IOWRT</code> flags. In fact the 2BSD <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=2BSD/man/fopen.u">man page for fopen</a> explicitly lists <code>"rw"</code> and <code>"ra"</code> as supported open modes which allow both reading and writing, but there is nothing said about whether mixing <code>fread()</code> and <code>fwrite()</code> freely is allowed. There is also an <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=2BSD/src/libNS/READ_ME">explanatory README file</a> with a note from November 1978 describing the change to allow mixed read and write access.</p>



<p>A 1977 paper by Dennis M. Ritchie <a href="http://roguelife.org/~fujita/COOKIES/HISTORY/V6/newgear.html"><em>A New Input-Output Package</em></a> is quite clear that when <code>fopen()</code> was first conceived, a stream would support either reading or writing, but not both. It is also clear that users found this too restrictive and by 1979, there were at least two different implementations (AT&amp;T and BSD) which allowed mixed read/write streams.</p>



<p>Notably in the BSD implementation, <code>fopen()</code> was modified to allow both reading and writing but <code>fread()</code> and <code>fwrite()</code> were not. It is not clear to me if the BSD code was robust enough to allow free mixing of reads and writes. The AT&amp;T documentation has always been clear that it‚Äôs not allowed.</p>



<p>And as far as Standard C and POSIX are concerned, that has not changed until today. To write portable code, it is necessary to take some action when changing read/write direction. A dummy call such as</p>



<pre>fseek( f, 0, SEEK_CUR );</pre>



<p>is entirely sufficient to get the stream into a state where switching between reading and writing is safe.</p>



<p>I suppose oddities like this just happen when you have nearly nearly 50 years of history behind you.</p>




											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Into CPS, Never to Return (118 pts)]]></title>
            <link>https://bernsteinbear.com/blog/cps/</link>
            <guid>42510696</guid>
            <pubDate>Wed, 25 Dec 2024 19:43:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bernsteinbear.com/blog/cps/">https://bernsteinbear.com/blog/cps/</a>, See on <a href="https://news.ycombinator.com/item?id=42510696">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <p>CPS, or continuation-passing style, is an intermediate representation for
programs, particularly functional programs. It‚Äôs used in compilers for
languages such as SML and Scheme.</p>

<p>In CPS, there are two rules: first, that function/operator arguments must
always be <em>trivial</em>; second, that function calls do not return. From this, a
lot falls out.</p>

<p>In this post, we‚Äôll introduce CPS by building a simple (Plotkin<sup id="fnref:plotkin" role="doc-noteref"><a href="#fn:plotkin" rel="footnote">1</a></sup>) CPS
transform from a small Scheme-like language. We‚Äôll sketch some optimizations on
the IR. Then we‚Äôll look at a couple of the common ways to actually compile the
IR for execution.</p>

<h2 id="mini-scheme">Mini-Scheme</h2>

<p>We have integers: <code>5</code></p>

<p>We have some operations on the integers: <code>(+ 1 2)</code>, <code>(&lt; 3 4)</code> (returns 1 or 0)</p>

<p>We can bind variables: <code>(let ((x 1)) x)</code> / <code>(letrec ...)</code> ?</p>

<p>We can create single-parameter functions<sup id="fnref:more-parameters" role="doc-noteref"><a href="#fn:more-parameters" rel="footnote">2</a></sup>: <code>(lambda (x) (+ x 1))</code>
and they can close over variables</p>

<p>We can call functions: <code>(f x)</code></p>

<p>We can branch: <code>(if (&lt; x y) x y)</code> (where we have decided to use 0 and 1 as
booleans)</p>

<h2 id="how-do-i">How do I‚Ä¶?</h2>

<p>We‚Äôre going to implement a recursive function called <code>cps</code> incrementally,
starting with the easy forms of the language and working up from there. Many
people like implementing the compiler both in Scheme and for Scheme but I find
that all the quasiquoting makes everything fussier than it should be and
obscures the lesson, so we‚Äôre doing it in Python.</p>

<p>This means we have a nice clear separation of code and data. Our Python code is
the compiler and we‚Äôll lean on Python lists for S-expressions. Here‚Äôs what some
sample Scheme programs might look like as Python lists:</p>

<div><pre><code><span>5</span>

<span>[</span><span>"+"</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>]</span>

<span>[</span><span>"let"</span><span>,</span> <span>[[</span><span>"x"</span><span>,</span> <span>1</span><span>]],</span> <span>"x"</span><span>]</span>

<span>[</span><span>"lambda"</span><span>,</span> <span>[</span><span>"x"</span><span>],</span> <span>[</span><span>"+"</span><span>,</span> <span>"x"</span><span>,</span> <span>1</span><span>]]</span>
</code></pre></div>

<p>Our <code>cps</code> function will take two arguments. The first argument, <code>exp</code>, is the
expression to compile. The second argument, <code>k</code>, is a <em>continuation</em>. We have
to do <em>something</em> with our values, but CPS requires that functions never
returns. So what do we do? Call another function, of course.</p>

<p>This means that the top-level invocation of <code>cps</code> will be passed some useful
top-level continuation like <code>print-to-screen</code> or <code>write-to-file</code>. All child
invocations of <code>cps</code> will be passed either that continuation, a manufactured
continuation, or a continuation variable.</p>

<div><pre><code><span>cps</span><span>([</span><span>"+"</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>],</span> <span>"$print-to-screen"</span><span>)</span>
<span># ...or...
</span><span>cps</span><span>([</span><span>"+"</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>],</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>"v"</span><span>],</span> <span>...])</span>
</code></pre></div>

<p>So a continuation is just another function. Kind of.</p>

<p>While you totally can generate real first-class functions for use as
continuations, it can often be useful to <em>partition</em> your CPS IR by separating
them. All real (user) functions will take a continuation as a last
parameter‚Äîfor handing off their return values‚Äî and can arbitrarily escape,
whereas all continuations are generated and allocated/freed in a stack-like
manner. (We could even implement them using a native stack if we wanted. See
‚ÄúPartitioned CPS‚Äù and ‚ÄúRecovering the stack‚Äù from <a href="https://matt.might.net/articles/cps-conversion/">Might‚Äôs page</a>.)</p>

<p>For this reason we syntactically distinguish IR function forms <code>["fun", ["x",
"k"], ...]</code> from IR continuation forms <code>["cont", ["x"], ...]</code>. Similarly, we
distinguish function calls <code>["f", "x"]</code> from continuation calls <code>["$call-cont",
"k", "x"]</code> (where <code>$call-cont</code> is a special form known to the compiler).</p>

<p>Let‚Äôs look at how we compile integers into CPS:</p>

<div><pre><code><span>def</span> <span>cps</span><span>(</span><span>exp</span><span>,</span> <span>k</span><span>):</span>
    <span>match</span> <span>exp</span><span>:</span>
        <span>case</span> <span>int</span><span>(</span><span>_</span><span>):</span>
            <span>return</span> <span>[</span><span>"$call-cont"</span><span>,</span> <span>k</span><span>,</span> <span>exp</span><span>]</span>
    <span>raise</span> <span>NotImplementedError</span><span>(</span><span>type</span><span>(</span><span>exp</span><span>))</span>  <span># TODO
</span>
<span>cps</span><span>(</span><span>5</span><span>,</span> <span>"k"</span><span>)</span>  <span># ["$call-cont", "k", 5]
</span></code></pre></div>

<p>Integers satisfy the <em>trivial</em> requirement. So does all constant data (if we
had strings, floats, etc), variable references, and even lambda expressions.
None of these require recursive evaluation, which is the core of the triviality
requirement. All of this requires that our nested AST get linearized into a
sequence of small operations.</p>

<p>Variables are similarly straightforward to compile. We leave the variable names
as-is for now in our IR, so we need not keep an environment parameter around.</p>

<div><pre><code><span>def</span> <span>cps</span><span>(</span><span>exp</span><span>,</span> <span>k</span><span>):</span>
    <span>match</span> <span>exp</span><span>:</span>
        <span>case</span> <span>int</span><span>(</span><span>_</span><span>)</span> <span>|</span> <span>str</span><span>(</span><span>_</span><span>):</span>
            <span>return</span> <span>[</span><span>"$call-cont"</span><span>,</span> <span>k</span><span>,</span> <span>exp</span><span>]</span>
    <span>raise</span> <span>NotImplementedError</span><span>(</span><span>type</span><span>(</span><span>exp</span><span>))</span>  <span># TODO
</span>
<span>cps</span><span>(</span><span>"x"</span><span>,</span> <span>"k"</span><span>)</span>  <span># ["$call-cont", "k", "x"]
</span></code></pre></div>

<p>Now let‚Äôs look at function calls. Function calls are the first type of
expression that requires recursively evaluating subexpressions. To evaluate <code>(f
x)</code>, for example, we evaluate <code>f</code>, then <code>x</code>, then do a function call. The order
of evaluation is not important to this post; it is a semantic property of the
language being compiled.</p>

<p>To convert to CPS, we have to both do recursive compilation of the arguments
and also synthesize our first continuations!</p>

<p>To evaluate a subexpression, which could be arbitrarily complex, we have to
make a recursive call to <code>cps</code>. Unlike normal compilers, this doesn‚Äôt return a
value. Instead, you pass it a continuation (does the word ‚Äúcallback‚Äù help
here?) to do future work when that value has a name. To generate
compiler-internal names, we have a <code>gensym</code> function that isn‚Äôt interesting and
returns unique strings.</p>

<p>The only thing that differentiates it from, for example, a JavaScript callback,
is that it‚Äôs not a Python function but instead a function in the generated
code.</p>

<div><pre><code><span>def</span> <span>cps</span><span>(</span><span>exp</span><span>,</span> <span>k</span><span>):</span>
    <span>match</span> <span>exp</span><span>:</span>
        <span>case</span> <span>[</span><span>func</span><span>,</span> <span>arg</span><span>]:</span>
            <span>vfunc</span> <span>=</span> <span>gensym</span><span>()</span>
            <span>varg</span> <span>=</span> <span>gensym</span><span>()</span>
            <span>return</span> <span>cps</span><span>(</span><span>func</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>vfunc</span><span>],</span>
                              <span>cps</span><span>(</span><span>arg</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>varg</span><span>],</span>
                                        <span>[</span><span>vfunc</span><span>,</span> <span>varg</span><span>,</span> <span>k</span><span>]])])</span>
    <span># ...
</span>
<span>cps</span><span>([</span><span>"f"</span><span>,</span> <span>1</span><span>],</span> <span>"k"</span><span>)</span>
<span># ["$call-cont", ["cont", ["v0"],
#            ["$call-cont", ["cont", ["v1"],
#                       ["v0", "v1", "k"]],
#                     1]],
#          "f"]
</span></code></pre></div>

<p>Note that our generated function call from <code>(f x)</code> now also has a continuation
argument that was not there before. This is because <code>(f x)</code> does not <em>return</em>
anything, but instead passes the value to the given continuation.</p>

<p>Calls to primitive operators like <code>+</code> are our other interesting case. Like
function calls, we evaluate the operands recursively and pass in an additional
continuation argument. Note that not all CPS implementations do this for simple
math operators; some choose to allow simple arithmetic to actually ‚Äúreturn‚Äù
values.</p>

<div><pre><code><span>def</span> <span>gensym</span><span>():</span> <span>...</span>

<span>def</span> <span>cps</span><span>(</span><span>exp</span><span>,</span> <span>k</span><span>):</span>
    <span>match</span> <span>exp</span><span>:</span>
        <span>case</span> <span>[</span><span>op</span><span>,</span> <span>x</span><span>,</span> <span>y</span><span>]</span> <span>if</span> <span>op</span> <span>in</span> <span>[</span><span>"+"</span><span>,</span> <span>"-"</span><span>]:</span>
            <span>vx</span> <span>=</span> <span>gensym</span><span>()</span>
            <span>vy</span> <span>=</span> <span>gensym</span><span>()</span>
            <span>return</span> <span>cps</span><span>(</span><span>x</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>vx</span><span>],</span>
                           <span>cps</span><span>(</span><span>y</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>vy</span><span>],</span>
                                   <span>[</span><span>f</span><span>"$</span><span>{</span><span>op</span><span>}</span><span>"</span><span>,</span> <span>vx</span><span>,</span> <span>vy</span><span>,</span> <span>k</span><span>]])])</span>
    <span># ...
</span>
<span>cps</span><span>([</span><span>"+"</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>],</span> <span>"k"</span><span>)</span>
<span># ["$call-cont", ["cont", ["v0"],
#            ["$call-cont", ["cont", ["v1"],
#                       ["$+", "v0", "v1", "k"]],
#                     2]],
#          1]
</span></code></pre></div>

<p>We also create a special form for the operator in our CPS IR that begins with
<code>$</code>. So <code>+</code> gets turned into <code>$+</code> and so on. This helps distinguish operator
invocations from function calls.</p>

<p>Now let‚Äôs look at creating functions. Lambda expressions such as <code>(lambda (x)
(+ x 1))</code> need to create a function at run-time and that function body contains
some code. To ‚Äúreturn‚Äù, we use <code>$call-cont</code> as usual, but we have to also
remember to create a new <code>fun</code> form with a continuation parameter (and then
thread that through to the function body).</p>

<div><pre><code><span>def</span> <span>cps</span><span>(</span><span>exp</span><span>,</span> <span>k</span><span>):</span>
    <span>match</span> <span>exp</span><span>:</span>
        <span>case</span> <span>[</span><span>"lambda"</span><span>,</span> <span>[</span><span>arg</span><span>],</span> <span>body</span><span>]:</span>
            <span>vk</span> <span>=</span> <span>gensym</span><span>(</span><span>"k"</span><span>)</span>
            <span>return</span> <span>[</span><span>"$call-cont"</span><span>,</span> <span>k</span><span>,</span>
                        <span>[</span><span>"fun"</span><span>,</span> <span>[</span><span>arg</span><span>,</span> <span>vk</span><span>],</span> <span>cps</span><span>(</span><span>body</span><span>,</span> <span>vk</span><span>)]]</span>
    <span># ...
</span>
<span>cps</span><span>([</span><span>"lambda"</span><span>,</span> <span>[</span><span>"x"</span><span>],</span> <span>"x"</span><span>],</span> <span>"k"</span><span>)</span>
<span># ["$call-cont", "k",
#                ["fun", ["x", "k0"],
#                        ["$call-cont", "k0", "x"]]]
</span></code></pre></div>

<p>Alright, last in this mini language is our <code>if</code> expression: <code>(if cond iftrue
iffalse)</code> where all of <code>cond</code>, <code>iftrue</code>, and <code>iffalse</code> can be arbitrarily
nested expressions. This just means we call <code>cps</code> recursively three times.</p>

<p>We also add this new compiler builtin called <code>($if cond iftrue iffalse)</code>
that takes one trivial expression‚Äîthe condition‚Äîand decides which of the
branches to execute. This is roughly equivalent to a machine code conditional
jump.</p>

<p>The straightforward implementation works just fine, but can you see what might
go wrong?</p>

<div><pre><code><span>def</span> <span>cps</span><span>(</span><span>exp</span><span>,</span> <span>k</span><span>):</span>
    <span>match</span> <span>exp</span><span>:</span>
        <span>case</span> <span>[</span><span>"if"</span><span>,</span> <span>cond</span><span>,</span> <span>iftrue</span><span>,</span> <span>iffalse</span><span>]:</span>
            <span>vcond</span> <span>=</span> <span>gensym</span><span>()</span>
            <span>return</span> <span>cps</span><span>(</span><span>cond</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>vcond</span><span>],</span>
                                <span>[</span><span>"$if"</span><span>,</span> <span>vcond</span><span>,</span>
                                   <span>cps</span><span>(</span><span>iftrue</span><span>,</span> <span>k</span><span>),</span>
                                   <span>cps</span><span>(</span><span>iffalse</span><span>,</span> <span>k</span><span>)]])</span>
        <span># ...
</span>
<span>cps</span><span>([</span><span>"if"</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>],</span> <span>"k"</span><span>)</span>
<span># ["$call-cont", ["cont", ["v0"],
#                  ["$if", "v0",
#                              ["$call-cont", "k", 2],
#                              ["$call-cont", "k", 3]]],
#                1]
</span></code></pre></div>

<p>The problem is that our continuation, <code>k</code>, need not be a continuation
variable‚Äîit could be an arbitrary complicated expression. Our implementation
copies it into the compiled code <em>twice</em>, which in the worst case could lead to
exponential program growth. Instead, let‚Äôs bind it to a name and then use the
name twice.</p>

<div><pre><code><span>def</span> <span>cps</span><span>(</span><span>exp</span><span>,</span> <span>k</span><span>):</span>
    <span>match</span> <span>exp</span><span>:</span>
        <span>case</span> <span>[</span><span>"if"</span><span>,</span> <span>cond</span><span>,</span> <span>iftrue</span><span>,</span> <span>iffalse</span><span>]:</span>
            <span>vcond</span> <span>=</span> <span>gensym</span><span>()</span>
            <span>vk</span> <span>=</span> <span>gensym</span><span>(</span><span>"k"</span><span>)</span>
            <span>return</span> <span>[</span><span>"$call-cont"</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>vk</span><span>],</span>
                        <span>cps</span><span>(</span><span>cond</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>vcond</span><span>],</span>
                                      <span>[</span><span>"$if"</span><span>,</span> <span>vcond</span><span>,</span>
                                        <span>cps</span><span>(</span><span>iftrue</span><span>,</span> <span>vk</span><span>),</span>
                                        <span>cps</span><span>(</span><span>iffalse</span><span>,</span> <span>vk</span><span>)]])],</span>
                        <span>k</span><span>]</span>
        <span># ...
</span>
<span>cps</span><span>([</span><span>"if"</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>],</span> <span>"k"</span><span>)</span>
<span># ["$call-cont", ["cont", ["k1"],
#                  ["$call-cont", ["cont", ["v0"],
#                                   ["$if", "v0",
#                                     ["$call-cont", "k1", 2],
#                                     ["$call-cont", "k1", 3]]],
#                                   1]],
#                  "k"]
</span></code></pre></div>

<p>Last, <code>let</code> can be handled by using a continuation, as we‚Äôve bound temporary
variables in previous examples. You could also handle it by desugaring it into
<code>((lambda (x) body) value)</code> but that will generate a lot more administrative
overhead for your optimizer to get rid of later.</p>

<div><pre><code><span>def</span> <span>cps</span><span>(</span><span>exp</span><span>,</span> <span>k</span><span>):</span>
    <span>match</span> <span>exp</span><span>:</span>
        <span>case</span> <span>[</span><span>"let"</span><span>,</span> <span>[</span><span>name</span><span>,</span> <span>value</span><span>],</span> <span>body</span><span>]:</span>
            <span>return</span> <span>cps</span><span>(</span><span>value</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>name</span><span>],</span>
                               <span>cps</span><span>(</span><span>body</span><span>,</span> <span>k</span><span>)])</span>
        <span># ...
</span>
<span>cps</span><span>([</span><span>"let"</span><span>,</span> <span>[</span><span>"x"</span><span>,</span> <span>1</span><span>],</span> <span>[</span><span>"+"</span><span>,</span> <span>"x"</span><span>,</span> <span>2</span><span>]],</span> <span>"k"</span><span>)</span>
<span># ['$call-cont', ['cont', ['x'],
#                 ['$call-cont', ['cont', ['v0'],
#                                 ['$call-cont', ['cont', ['v1'],
#                                                 ['$+', 'v0', 'v1', 'k']],
#                                  2]],
#                  'x']],
#  1]
</span></code></pre></div>

<p>There you have it. A working Mini-Scheme to CPS converter. My implementation is
~30 lines of Python code. It‚Äôs short and sweet but you might have noticed some
shortcomings‚Ä¶</p>

<!--
* alphatisation gives you SSA-like
-->



<p>Now, you might have noticed that we‚Äôre giving names to a lot of trivial
expressions‚Äîunnecessary <code>cont</code> forms used like <code>let</code> bindings. Why name the
integer <code>3</code> if it‚Äôs trivial?</p>

<p>One approach people take to avoid this is <em>meta-continuations</em>, which I think
many people call the ‚Äúhigher-order transform‚Äù. Instead of always generating
<code>cont</code>s, we can sometimes pass in a compiler-level (in this case, Python)
function instead.</p>

<p>See <a href="https://matt.might.net/articles/cps-conversion/">Matt Might‚Äôs article</a> and what I think is a working <a href="https://github.com/edu-ucsd-cse-231/fa12-schemec/blob/755992dbb38ee73abb608d2ff4f8c2c59428fa16/schemec/cps.py">Python
implementation</a>.</p>

<!--
TODO: demo in Python
-->

<p>This approach, though occasionally harder to reason about and more complex,
cuts down on a significant amount of code before it is ever emitted. For
few-pass compilers, for resource-constrained environments, for enormous
programs, ‚Ä¶ this makes a lot of sense.</p>

<p>Another approach, potentially easier to reason about, is to lean on your
optimizer. You‚Äôll probably want an optimizer anyway, so you might as well use
it to cut down your intermediate code too.</p>

<!--
* Olin Shivers and "functions rule the world" guy
* Hedgehog knows one great thing
-->

<h2 id="optimizations">Optimizations</h2>

<p>Just like any IR, it‚Äôs possible to optimize by doing recursive rewrites. We
won‚Äôt implement any here (for now‚Ä¶ maybe I‚Äôll come back to this) but will
sketch out a few common ones.</p>

<p>The simplest one is probably constant folding, like turning <code>(+ 3 4)</code> into <code>7</code>.
The CPS equivalent looks kind of like this:</p>

<div><pre><code><span>[</span><span>"$+"</span><span>,</span> <span>"3"</span><span>,</span> <span>"4"</span><span>,</span> <span>"k"</span><span>]</span>  <span># =&gt; ["$call-cont", "k", 7]
</span><span>[</span><span>"$if"</span><span>,</span> <span>1</span><span>,</span> <span>"t"</span><span>,</span> <span>"f"</span><span>]</span>  <span># =&gt; t
</span><span>[</span><span>"$if"</span><span>,</span> <span>0</span><span>,</span> <span>"t"</span><span>,</span> <span>"f"</span><span>]</span>  <span># =&gt; f
</span></code></pre></div>

<p>An especially important optimization, particularly if using the simple CPS
transformation that we‚Äôve been using, is beta reduction. This is the process of
turning expressions like <code>((lambda (x) (+ x 1)) 2)</code> into <code>(+ 2 1)</code> by
substituting the <code>2</code> for <code>x</code>. For example, in CPS:</p>

<div><pre><code><span>[</span><span>"$call-cont"</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>"k1"</span><span>],</span>
                 <span>[</span><span>"$call-cont"</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>"v0"</span><span>],</span>
                                  <span>[</span><span>"$if"</span><span>,</span> <span>"v0"</span><span>,</span>
                                    <span>[</span><span>"$call-cont"</span><span>,</span> <span>"k1"</span><span>,</span> <span>2</span><span>],</span>
                                    <span>[</span><span>"$call-cont"</span><span>,</span> <span>"k1"</span><span>,</span> <span>3</span><span>]]],</span>
                                  <span>1</span><span>]],</span>
                 <span>"k"</span><span>]</span>

<span># into
</span><span>[</span><span>"$call-cont"</span><span>,</span> <span>[</span><span>"cont"</span><span>,</span> <span>[</span><span>"v0"</span><span>],</span>
                 <span>[</span><span>"$if"</span><span>,</span> <span>"v0"</span><span>,</span>
                   <span>[</span><span>"$call-cont"</span><span>,</span> <span>"k"</span><span>,</span> <span>2</span><span>],</span>
                   <span>[</span><span>"$call-cont"</span><span>,</span> <span>"k"</span><span>,</span> <span>3</span><span>]]],</span>
                 <span>1</span><span>]</span>

<span># into
</span><span>[</span><span>"$if"</span><span>,</span> <span>1</span><span>,</span>
  <span>[</span><span>"$call-cont"</span><span>,</span> <span>"k"</span><span>,</span> <span>2</span><span>],</span>
  <span>[</span><span>"$call-cont"</span><span>,</span> <span>"k"</span><span>,</span> <span>3</span><span>]]</span>

<span># into (via constant folding)
</span><span>[</span><span>"$call-cont"</span><span>,</span> <span>"k"</span><span>,</span> <span>2</span><span>]</span>
</code></pre></div>

<p>Substitution has to be scope-aware, and therefore requires threading an
environment parameter through your optimizer.</p>

<blockquote>
  <p>As an aside: even if you ‚Äúalphatise‚Äù your expressions to make them have
unique variable bindings and names, you might accidentally create second
bindings of the same names when substituting. For example:</p>

  <div><pre><code><span># substitute(haystack, name, replacement)
</span><span>substitute</span><span>([</span><span>"+"</span><span>,</span> <span>"x"</span><span>,</span> <span>"x"</span><span>],</span> <span>"x"</span><span>,</span> <span>[</span><span>"let"</span><span>,</span> <span>[</span><span>"x0"</span><span>,</span> <span>1</span><span>],</span> <span>"x0"</span><span>])</span>
</code></pre></div>

  <p>This would create two bindings of <code>x0</code>, which violates the global uniqueness
property.</p>
</blockquote>

<p>You may not always want to perform this rewrite. To avoid code blowup, you may
only want to substitute if the function or continuation‚Äôs parameter name
appears zero or one times in the body. Or, if it occurs more than once,
substitute only if the expression being substituted is an integer/variable.
This is a simple heuristic that will avoid some of the worst-case scenarios but
may not be maximally beneficial‚Äîit‚Äôs a local optimum.</p>

<p>Another thing to be aware of is that substitution may change evaluation order.
So even if you only have one parameter reference, you may not want to
substitute:</p>

<div><pre><code><span>((</span><span>lambda</span> <span>(</span><span>f</span><span>)</span> <span>(</span><span>begin</span> <span>(</span><span>g</span><span>)</span> <span>f</span><span>))</span>
 <span>(</span><span>do-a-side-effect</span><span>))</span>
</code></pre></div>

<p>As the program is right now, <code>do-a-side-effect</code> will be called before <code>g</code> and
the result will become <code>f</code>. If you substitute <code>do-a-side-effect</code> for <code>f</code> in
your optimizer, <code>g</code> will be called before <code>do-a-side-effect</code>. You can be more
aggressive if your analyzer tells you what functions are side-effect free, but
otherwise‚Ä¶ be careful with function calls.</p>

<p>There are also more advanced optimizations but they go beyond an introduction
to CPS and I don‚Äôt feel confident enough to sketch them out.</p>

<!--
free variable analysis / closure conversion / direct calls / webs

anchor pointing (?)

more advanced stuff like loop invariant code motion
-->

<p>Alright, we‚Äôve done a bunch of CPS‚ÜíCPS transformations. Now we would like
to execute the optimized code. To do that, we have to transform out of CPS into
something designed to be executed.</p>

<h2 id="to-c-perchance-to-dream">To C, perchance to dream</h2>

<p>In this section we‚Äôll list a couple of approaches to generating executable code
from CPS but we won‚Äôt implement any.</p>

<p>You can generate naive C code pretty directly from CPS. The <code>fun</code> and <code>cont</code>
forms become top-level C functions. In order to support closures, you need to
do free variable analysis and <a href="https://matt.might.net/articles/compiling-scheme-to-c/">allocate closure structures</a> for each.
(See also <a href="https://bernsteinbear.com/blog/scrapscript-baseline/">the approach in scrapscript</a> in the section called
‚Äúfunctions‚Äù.) Then you can do a very generic calling convention where you pass
closures around. Unfortunately, this is not very efficient and doesn‚Äôt
guarantee tail-call elimination.</p>

<p>To support tail-call elimination, you can use <a href="https://eli.thegreenplace.net/2017/on-recursion-continuations-and-trampolines/">trampolines</a>. This
mostly involves allocating a frame-like closure on the heap with each
tail-call. If you have a garbage collector, this isn‚Äôt too bad; the frames do
not live very long. In fact, if you <a href="https://gist.github.com/tekknolagi/4e75221ff49eb0056f6372974cd267b9">instrument the factorial
example</a> in Eli‚Äôs blog post, you can see that the
trampoline frames live only until the next one gets allocated.</p>

<p>This observation led to the development of the <a href="https://dl.acm.org/doi/10.1145/214448.214454">Cheney on the MTA</a>
algorithm, which uses the C call stack as a young generation for the garbage
collector. It uses <code>setjmp</code> and <code>longjmp</code> to unwind the stack. This approach is
used in <a href="https://call-cc.org/">CHICKEN Scheme</a> and <a href="https://justinethier.github.io/cyclone/">Cyclone Scheme</a>. Take a look at
<a href="https://github.com/justinethier/nugget/blob/0c4e3e9944684ea83191671d58b5c8c342f64343/cheney-on-the-mta/cboyer13.c#L656">Baker‚Äôs 1994 implementation</a>.</p>

<p>If you don‚Äôt want to do any of this trampoline stuff, you can also do the One
Big Switch approach which stuffs each of the <code>fun</code>s and <code>cont</code>s into a <code>case</code>
in a massive <code>switch</code> statement. Calls become <code>goto</code>s. You can manage your
stack roots pretty easily in one contiguous array. However, as you might
imagine, larger Scheme programs might cause trouble with some C compilers.</p>

<p>Last, you need not generate C. You can also do your own lowering from CPS into
a lower-level IR and then to some kind of assembly language.</p>

<!--
TODO: Kelsey's thing about lambdas all the way to the metal
-->

<h2 id="wrapping-up">Wrapping up</h2>

<p>You have seen how to produce CPS, how to optimize it, and how to eliminate it.
There‚Äôs much more to learn, if you are interested. Please send me material if
you find it useful.</p>

<p>I had originally planned to write a CPS-based optimizer and code generator for
scrapscript but I got stuck on the finer details of compiling pattern matching
to CPS. Maybe I will return to this in the future by desugaring it to nested
<code>if</code>s or something.</p>

<p>Check out <a href="https://github.com/tekknolagi/plotkin-cps/">the code</a>.</p>

<h2 id="acknowledgements">Acknowledgements</h2>

<p>Thanks to <a href="https://vaibhavsagar.com/">Vaibhav Sagar</a> and <a href="https://akkartik.name/">Kartik
Agaram</a> for giving feedback on this post. Thanks to
<a href="https://www.khoury.northeastern.edu/~shivers/">Olin Shivers</a> for an excellent
course on compiling functional programming languages.</p>

<h2 id="see-also">See also</h2>

<ul>
  <li><a href="https://bernsteinbear.com/assets/img/nobrainer-cps.pdf">No-Brainer CPS Conversion</a> (PDF) by Davis,
Meehan, and Shivers</li>
  <li>Richard Kelsey has a <a href="https://bernsteinbear.com/assets/img/kelsey-ssa-cps.pdf">nice paper</a> (PDF) on
transforming CPS to SSA form. Unfortunately, I have tried to implement it and
it is not as simple as it looks. I think I‚Äôm missing something.</li>
  <li><a href="https://matt.might.net/articles/cps-conversion/">Scheme implementation</a> of naive CPS and hybrid/meta-continuations
by Matt Might</li>
  <li><a href="https://web.archive.org/web/20101006080406/http://www.iro.umontreal.ca:80/~boucherd/mslug/meetings/20041020/minutes-en.html">90 minute Scheme to C compiler</a> with <a href="http://churchturing.org/y/90-min-scc.pdf">slide deck</a> (PDF) by Marc Feeley</li>
  <li><a href="https://bernsteinbear.com/assets/img/orbit.pdf">The Orbit paper</a> (PDF) which lays out a bunch of
interesting optimizations. It‚Äôs very terse.</li>
  <li><a href="https://github.com/barak/scheme2c">scheme2c</a> by Joel Bartlett</li>
  <li><a href="https://bernsteinbear.com/assets/img/prescheme.pdf">PreScheme</a> (PDF) by Richard Kelsey which lets you
write your compiler and runtime not in C but in a low-level Scheme-like
language</li>
  <li><a href="https://bernsteinbear.com/assets/img/parenthec.pdf">ParentheC</a> (PDF), which I should read at some
point, and <a href="https://legacy.cs.indiana.edu/classes/b521/notes.html">implementation</a></li>
  <li>Appel‚Äôs <a href="https://www.cambridge.org/core/books/compiling-with-continuations/7CA9C36DCE78AD82218E745F43A4E740">Compiling with Continuations</a></li>
  <li><a href="https://dl.acm.org/doi/10.1145/96709.96711">An algorithm for optimal lambda calculus reduction</a> by Lamping, which
opens the doors to interaction nets/combinators and all sorts of
not-very-well-understood things</li>
  <li><a href="https://github.com/SaberVM/FVM">FVM</a>, a nascent VM designed as a compile
target for functional languages</li>
</ul>

<!--
Calysto
https://github.com/Calysto/calysto_scheme/blob/0aa9eca2c3e0cc58406ec154b56aeb4aeb3041a1/calysto_scheme/src/translate_rm.py
-->

<!--
https://www.brics.dk/RS/01/49/BRICS-RS-01-49.pdf
-->


        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Portspoof: Emulate a valid service on all 65535 TCP ports (316 pts)]]></title>
            <link>https://github.com/drk1wi/portspoof</link>
            <guid>42509953</guid>
            <pubDate>Wed, 25 Dec 2024 17:44:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/drk1wi/portspoof">https://github.com/drk1wi/portspoof</a>, See on <a href="https://news.ycombinator.com/item?id=42509953">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Portspoof</h2><a id="user-content-portspoof" aria-label="Permalink: Portspoof" href="#portspoof"></a></p>
<p dir="auto">Portspoof software overview (<a href="https://drk1wi.github.io/portspoof/" rel="nofollow">https://drk1wi.github.io/portspoof/</a>)</p>
<p dir="auto">** Short description:**</p>
<p dir="auto">The Portspoof program primary goal is to enhance OS security through a set of following techniques:</p>
<ul dir="auto">
<li>
<p dir="auto">All 65535 TCP ports are always open</p>
<p dir="auto">Instead of informing an attacker that a particular port is in a CLOSED or FILTERED state Portspoof will return SYN+ACK for every port connection attempt/</p>
<p dir="auto">As a result it is impractical to use stealth (SYN, ACK, etc.) port scanning against your system, since all ports are always reported as OPEN:</p>
<div data-snippet-clipboard-copy-content=" **`nmap -p 1-20 127.0.0.1`**
 Starting Nmap 6.47 ( http://nmap.org )
 Nmap scan report for 127.0.0.1
 Host is up (0.0018s latency).
 PORT   STATE SERVICE
 1/tcp  open  tcpmux
 2/tcp  open  compressnet
 3/tcp  open  compressnet
 4/tcp  open  unknown
 5/tcp  open  unknown
 6/tcp  open  unknown
 7/tcp  open  echo
 8/tcp  open  unknown
 9/tcp  open  discard
 10/tcp open  unknown
 11/tcp open  systat
 12/tcp open  unknown
 13/tcp open  daytime
 14/tcp open  unknown
 15/tcp open  netstat
 16/tcp open  unknown
 17/tcp open  qotd
 18/tcp open  unknown
 19/tcp open  chargen
 20/tcp open  ftp-data"><pre><code> **`nmap -p 1-20 127.0.0.1`**
 Starting Nmap 6.47 ( http://nmap.org )
 Nmap scan report for 127.0.0.1
 Host is up (0.0018s latency).
 PORT   STATE SERVICE
 1/tcp  open  tcpmux
 2/tcp  open  compressnet
 3/tcp  open  compressnet
 4/tcp  open  unknown
 5/tcp  open  unknown
 6/tcp  open  unknown
 7/tcp  open  echo
 8/tcp  open  unknown
 9/tcp  open  discard
 10/tcp open  unknown
 11/tcp open  systat
 12/tcp open  unknown
 13/tcp open  daytime
 14/tcp open  unknown
 15/tcp open  netstat
 16/tcp open  unknown
 17/tcp open  qotd
 18/tcp open  unknown
 19/tcp open  chargen
 20/tcp open  ftp-data
</code></pre></div>
</li>
<li>
<p dir="auto">Every open TCP port emulates a service</p>
<p dir="auto">Portspoof has a huge database of dynamic service signatures, that will be used to generate fake banners and fool scanners.</p>
<p dir="auto">Scanning software usually tries to determine a service version that is running on an open port. Portspoof will respond to every service probe with a valid service signature, that is dynamically generated based on a service signature regular expression database.</p>
<p dir="auto">As a result an attacker will not be able to determine which port numbers your system is truly using:</p>
<div data-snippet-clipboard-copy-content=" **`nmap -F -sV 127.0.0.1`**
 Starting Nmap 6.47 ( http://nmap.org )
 Stats: 0:00:30 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan
 Nmap scan report for 127.0.0.1
 Host is up (0.21s latency).
 PORT      STATE SERVICE          VERSION
 7/tcp     open  http             Milestone XProtect video surveillance http interface (tu-ka)
 9/tcp     open  ntop-http        Ntop web interface 1ey (Q)
 13/tcp    open  ftp              VxWorks ftpd 6.a
 21/tcp    open  http             Grandstream VoIP phone http config 6193206
 22/tcp    open  http             Cherokee httpd X
 23/tcp    open  ftp              MacOS X Server ftpd (MacOS X Server 790751705)
 25/tcp    open  smtp?
 26/tcp    open  http             ZNC IRC bouncer http config 0.097 or later
 37/tcp    open  finger           NetBSD fingerd
 53/tcp    open  ftp              Rumpus ftpd
 79/tcp    open  http             Web e (Netscreen administrative web server)
 80/tcp    open  http             BitTornado tracker dgpX
 81/tcp    open  hosts2-ns?
 88/tcp    open  http             3Com OfficeConnect Firewall http config
 106/tcp   open  pop3pw?
 110/tcp   open  ipp              Virata-EmWeb nbF (HP Laserjet 4200 TN http config)
 111/tcp   open  imap             Dovecot imapd
 113/tcp   open  smtp             Xserve smtpd
 119/tcp   open  nntp?
 135/tcp   open  http             netTALK Duo http config
 139/tcp   open  http             Oversee Turing httpd kC (domain parking)
 143/tcp   open  crestron-control TiVo DVR Crestron control server
 144/tcp   open  http             Ares Galaxy P2P httpd 7942927
 179/tcp   open  http             WMI ViH (3Com 5500G-EI switch http config)
 199/tcp   open  smux?
 389/tcp   open  http-proxy       ziproxy http proxy
 427/tcp   open  vnc              (protocol 3)
 443/tcp   open  https?
 444/tcp   open  snpp?
 445/tcp   open  http             Pogoplug HBHTTP QpwKdZQ
 465/tcp   open  http             Gordian httpd 322410 (IQinVision IQeye3 webcam rtspd)
 513/tcp   open  login?
 514/tcp   open  finger           ffingerd
 515/tcp   open  pop3             Eudora Internet Mail Server X pop3d 4918451
 543/tcp   open  ftp              Dell Laser Printer z printer ftpd k
 544/tcp   open  ftp              Solaris ftpd
 548/tcp   open  http             Medusa httpd Elhmq (Sophos Anti-Virus Home http config)
 554/tcp   open  rtsp?
 587/tcp   open  http-proxy       Pound http proxy
 631/tcp   open  efi-webtools     EFI Fiery WebTools communication
 646/tcp   open  ldp?
 873/tcp   open  rsync?
 990/tcp   open  http             OpenWrt uHTTPd
 993/tcp   open  ftp              Konica Minolta bizhub printer ftpd
 995/tcp   open  pop3s?
 1025/tcp  open  sip-proxy        Comdasys SIP Server D
 1026/tcp  open  LSA-or-nterm?
 1027/tcp  open  IIS?
 1028/tcp  open  rfidquery        Mercury3 RFID Query protocol
 1029/tcp  open  smtp-proxy       ESET NOD32 anti-virus smtp proxy
 1110/tcp  open  http             qhttpd
 1433/tcp  open  http             ControlByWeb WebRelay-Quad http admin
 1720/tcp  open  H.323/Q.931?
 1723/tcp  open  pptp?
 1755/tcp  open  http             Siemens Simatic HMI MiniWeb httpd
 1900/tcp  open  tunnelvision     Tunnel Vision VPN info 69853
 2000/tcp  open  telnet           Patton SmartNode 4638 VoIP adapter telnetd
 2001/tcp  open  dc?
 2049/tcp  open  nfs?
 2121/tcp  open  http             Bosch Divar Security Systems http config
 2717/tcp  open  rtsp             Darwin Streaming Server 104621400
 3000/tcp  open  pop3             Solid pop3d
 3128/tcp  open  irc-proxy        muh irc proxy
 3306/tcp  open  ident            KVIrc fake identd
 3389/tcp  open  ms-wbt-server?
 3986/tcp  open  mapper-ws_ethd?
 4899/tcp  open  printer          QMC DeskLaser printer (Status o)
 5000/tcp  open  http             D-Link DSL-eTjM http config
 5009/tcp  open  airport-admin?
 5051/tcp  open  ssh              (protocol 325257)
 5060/tcp  open  http             apt-cache/apt-proxy httpd
 5101/tcp  open  ftp              OKI BVdqeC-ykAA VoIP adapter ftpd kHttKI
 5190/tcp  open  http             Conexant-EmWeb JqlM (Intertex IX68 WAP http config; SIPGT TyXT)
 5357/tcp  open  wsdapi?
 5432/tcp  open  postgresql?
 5631/tcp  open  irc              ircu ircd
 5666/tcp  open  litecoin-jsonrpc Litecoin JSON-RPC f_
 5800/tcp  open  smtp             Lotus Domino smtpd rT Beta y
 5900/tcp  open  ftp
 6000/tcp  open  http             httpd.js (Songbird WebRemote)
 6001/tcp  open  daap             mt-daapd DAAP TGeiZA
 6646/tcp  open  unknown
 7070/tcp  open  athinfod         Athena athinfod
 8000/tcp  open  amanda           Amanda backup system index server (broken: libsunmath.so.1 not found)
 8008/tcp  open  http?
 8009/tcp  open  ajp13?
 8080/tcp  open  http             D-Link DGL-4300 WAP http config
 8081/tcp  open  http             fec ysp (Funkwerk bintec R232B router; .h.K...z)
 8443/tcp  open  smtp
 8888/tcp  open  smtp             OpenVMS smtpd uwcDNI (OpenVMS RVqcGIr; Alpha)
 9100/tcp  open  jetdirect?
 9999/tcp  open  http             Embedded HTTPD 3BOzejtHW (Netgear MRd WAP http config; j)
 10000/tcp open  http             MikroTik router http config (RouterOS 0982808)
 32768/tcp open  filenet-tms?
 49152/tcp open  unknown
 49153/tcp open  http             ASSP Anti-Spam Proxy httpd XLgR(?)?
 49154/tcp open  http             Samsung AllShare httpd
 49155/tcp open  ftp              Synology DiskStation NAS ftpd
 49156/tcp open  aspi             ASPI server 837305
 49157/tcp open  sip              AVM FRITZ!Box |"><pre><code> **`nmap -F -sV 127.0.0.1`**
 Starting Nmap 6.47 ( http://nmap.org )
 Stats: 0:00:30 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan
 Nmap scan report for 127.0.0.1
 Host is up (0.21s latency).
 PORT      STATE SERVICE          VERSION
 7/tcp     open  http             Milestone XProtect video surveillance http interface (tu-ka)
 9/tcp     open  ntop-http        Ntop web interface 1ey (Q)
 13/tcp    open  ftp              VxWorks ftpd 6.a
 21/tcp    open  http             Grandstream VoIP phone http config 6193206
 22/tcp    open  http             Cherokee httpd X
 23/tcp    open  ftp              MacOS X Server ftpd (MacOS X Server 790751705)
 25/tcp    open  smtp?
 26/tcp    open  http             ZNC IRC bouncer http config 0.097 or later
 37/tcp    open  finger           NetBSD fingerd
 53/tcp    open  ftp              Rumpus ftpd
 79/tcp    open  http             Web e (Netscreen administrative web server)
 80/tcp    open  http             BitTornado tracker dgpX
 81/tcp    open  hosts2-ns?
 88/tcp    open  http             3Com OfficeConnect Firewall http config
 106/tcp   open  pop3pw?
 110/tcp   open  ipp              Virata-EmWeb nbF (HP Laserjet 4200 TN http config)
 111/tcp   open  imap             Dovecot imapd
 113/tcp   open  smtp             Xserve smtpd
 119/tcp   open  nntp?
 135/tcp   open  http             netTALK Duo http config
 139/tcp   open  http             Oversee Turing httpd kC (domain parking)
 143/tcp   open  crestron-control TiVo DVR Crestron control server
 144/tcp   open  http             Ares Galaxy P2P httpd 7942927
 179/tcp   open  http             WMI ViH (3Com 5500G-EI switch http config)
 199/tcp   open  smux?
 389/tcp   open  http-proxy       ziproxy http proxy
 427/tcp   open  vnc              (protocol 3)
 443/tcp   open  https?
 444/tcp   open  snpp?
 445/tcp   open  http             Pogoplug HBHTTP QpwKdZQ
 465/tcp   open  http             Gordian httpd 322410 (IQinVision IQeye3 webcam rtspd)
 513/tcp   open  login?
 514/tcp   open  finger           ffingerd
 515/tcp   open  pop3             Eudora Internet Mail Server X pop3d 4918451
 543/tcp   open  ftp              Dell Laser Printer z printer ftpd k
 544/tcp   open  ftp              Solaris ftpd
 548/tcp   open  http             Medusa httpd Elhmq (Sophos Anti-Virus Home http config)
 554/tcp   open  rtsp?
 587/tcp   open  http-proxy       Pound http proxy
 631/tcp   open  efi-webtools     EFI Fiery WebTools communication
 646/tcp   open  ldp?
 873/tcp   open  rsync?
 990/tcp   open  http             OpenWrt uHTTPd
 993/tcp   open  ftp              Konica Minolta bizhub printer ftpd
 995/tcp   open  pop3s?
 1025/tcp  open  sip-proxy        Comdasys SIP Server D
 1026/tcp  open  LSA-or-nterm?
 1027/tcp  open  IIS?
 1028/tcp  open  rfidquery        Mercury3 RFID Query protocol
 1029/tcp  open  smtp-proxy       ESET NOD32 anti-virus smtp proxy
 1110/tcp  open  http             qhttpd
 1433/tcp  open  http             ControlByWeb WebRelay-Quad http admin
 1720/tcp  open  H.323/Q.931?
 1723/tcp  open  pptp?
 1755/tcp  open  http             Siemens Simatic HMI MiniWeb httpd
 1900/tcp  open  tunnelvision     Tunnel Vision VPN info 69853
 2000/tcp  open  telnet           Patton SmartNode 4638 VoIP adapter telnetd
 2001/tcp  open  dc?
 2049/tcp  open  nfs?
 2121/tcp  open  http             Bosch Divar Security Systems http config
 2717/tcp  open  rtsp             Darwin Streaming Server 104621400
 3000/tcp  open  pop3             Solid pop3d
 3128/tcp  open  irc-proxy        muh irc proxy
 3306/tcp  open  ident            KVIrc fake identd
 3389/tcp  open  ms-wbt-server?
 3986/tcp  open  mapper-ws_ethd?
 4899/tcp  open  printer          QMC DeskLaser printer (Status o)
 5000/tcp  open  http             D-Link DSL-eTjM http config
 5009/tcp  open  airport-admin?
 5051/tcp  open  ssh              (protocol 325257)
 5060/tcp  open  http             apt-cache/apt-proxy httpd
 5101/tcp  open  ftp              OKI BVdqeC-ykAA VoIP adapter ftpd kHttKI
 5190/tcp  open  http             Conexant-EmWeb JqlM (Intertex IX68 WAP http config; SIPGT TyXT)
 5357/tcp  open  wsdapi?
 5432/tcp  open  postgresql?
 5631/tcp  open  irc              ircu ircd
 5666/tcp  open  litecoin-jsonrpc Litecoin JSON-RPC f_
 5800/tcp  open  smtp             Lotus Domino smtpd rT Beta y
 5900/tcp  open  ftp
 6000/tcp  open  http             httpd.js (Songbird WebRemote)
 6001/tcp  open  daap             mt-daapd DAAP TGeiZA
 6646/tcp  open  unknown
 7070/tcp  open  athinfod         Athena athinfod
 8000/tcp  open  amanda           Amanda backup system index server (broken: libsunmath.so.1 not found)
 8008/tcp  open  http?
 8009/tcp  open  ajp13?
 8080/tcp  open  http             D-Link DGL-4300 WAP http config
 8081/tcp  open  http             fec ysp (Funkwerk bintec R232B router; .h.K...z)
 8443/tcp  open  smtp
 8888/tcp  open  smtp             OpenVMS smtpd uwcDNI (OpenVMS RVqcGIr; Alpha)
 9100/tcp  open  jetdirect?
 9999/tcp  open  http             Embedded HTTPD 3BOzejtHW (Netgear MRd WAP http config; j)
 10000/tcp open  http             MikroTik router http config (RouterOS 0982808)
 32768/tcp open  filenet-tms?
 49152/tcp open  unknown
 49153/tcp open  http             ASSP Anti-Spam Proxy httpd XLgR(?)?
 49154/tcp open  http             Samsung AllShare httpd
 49155/tcp open  ftp              Synology DiskStation NAS ftpd
 49156/tcp open  aspi             ASPI server 837305
 49157/tcp open  sip              AVM FRITZ!Box |
</code></pre></div>
<p dir="auto">By using those two techniques together:</p>
<ul dir="auto">
<li>your attackers will have a tough time while trying to identify your real services.</li>
<li>the only way to determine if a service is emulated is through a protocol probe (imagine probing protocols for 65k open ports!).</li>
<li>it takes more than 8hours and 200MB of sent data in order to properly go through the reconessaince phase for your system ( nmap -sV -p - equivalent).</li>
</ul>
<p dir="auto">*** Art of Active (Offensive) Defense***</p>
<p dir="auto">Portspoof can be used as an 'Exploitation Framework Frontend', that turns your system into responsive and aggressive machine. In practice this usually means exploiting your attackers' tools and exploits...
<em>At the moment there are few example exploits in the configuration file (portspoof.conf)</em></p>
<p dir="auto">Portspoof is meant to be a lightweight, fast, portable and secure addition to any firewall system or security system.</p>
<p dir="auto">The general goal of the program is to make the reconessaince phase slow and bothersome for your attackers as much it is only possible.
This is quite a change to the standard 5s Nmap scan, that will give a full view of your systems running services.</p>
<p dir="auto">The most important features that this software has:</p>
<ul dir="auto">
<li>it will add some real pain to your attackers reconessaince phase.</li>
<li>it is a userland software and does not require root privileges !</li>
<li>it binds to just ONE tcp port per a running instance !</li>
<li>it is easily customizable through your iptables rules</li>
<li>marginal CPU and memory usage (multithreaded)</li>
<li>more than 9000 dynamic service signatures to feed your attackers scanning software !</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Author:</h2><a id="user-content-author" aria-label="Permalink: Author:" href="#author"></a></p>
<p dir="auto">Piotr Duszy≈Ñski (<a href="https://twitter.com/drk1wi" rel="nofollow">@drk1wi</a>).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Commercial Usage</h2><a id="user-content-commercial-usage" aria-label="Permalink: Commercial Usage" href="#commercial-usage"></a></p>
<p dir="auto">Portspoof is licensed under <a href="https://github.com/drk1wi/portspoof/blob/master/COPYRIGHT.GPL">this License</a> .</p>
<p dir="auto">For commercial, legitimate applications, please contact the author for the appropriate licensing arrangements.</p>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>