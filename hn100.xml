<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 18 May 2024 05:00:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Multi AI Agent Systems Using OpenAI's New GPT-4o Model (134 pts)]]></title>
            <link>https://github.com/metaskills/experts</link>
            <guid>40395107</guid>
            <pubDate>Fri, 17 May 2024 23:25:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/metaskills/experts">https://github.com/metaskills/experts</a>, See on <a href="https://news.ycombinator.com/item?id=40395107">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Multi AI Agent Systems <br>using OpenAI's Assistants API (Experts.js)</h2><a id="user-content-multi-ai-agent-systems-using-openais-assistants-api-expertsjs" aria-label="Permalink: Multi AI Agent Systems using OpenAI's Assistants API (Experts.js)" href="#multi-ai-agent-systems-using-openais-assistants-api-expertsjs"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/metaskills/experts/blob/main/docs/images/logo.png"><img src="https://github.com/metaskills/experts/raw/main/docs/images/logo.png" alt="Experts.js"></a></p>
<p dir="auto">Experts.js is the easiest way to create and deploy <a href="https://platform.openai.com/docs/assistants/how-it-works" rel="nofollow">OpenAI's Assistants</a> and link them together as Tools to create a Panel of Experts system with expanded memory and attention to detail.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Overview</h2><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">The new Assistants API from OpenAI sets a new industry standard, significantly advancing beyond the widely adopted Chat Completions API. It represents a major leap in the usability of AI agents and the way engineers interact with LLMs. Paired with the cutting-edge <a href="https://openai.com/index/hello-gpt-4o/" rel="nofollow">GPT-4o</a> model, Assistants can now reference attached files &amp; images as knowledge sources within a managed context window called a <a href="#threads">Thread</a>. Unlike <a href="https://openai.com/index/introducing-gpts/" rel="nofollow">Custom GPTs</a>, Assistants support instructions up to 256,000 characters, integrate with 128 tools, and utilize the innovative <a href="https://platform.openai.com/docs/assistants/tools/file-search/vector-stores" rel="nofollow">Vector Store</a> API for efficient file search on up to 10,000 files per assistant.</p>
<p dir="auto">Experts.js aims to simplify the usage of this new API by removing the complexity of managing <a href="https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps" rel="nofollow">Run</a> objects and allowing Assistants to be linked together as Tools.</p>
<div dir="auto" data-snippet-clipboard-copy-content="const thread = Thread.create();
const assistant = await MyAssistant.create();
const output = await assistant.ask(&quot;Say hello.&quot;, thread.id);
console.log(output) // Hello"><pre><span>const</span> <span>thread</span> <span>=</span> <span>Thread</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
<span>const</span> <span>assistant</span> <span>=</span> <span>await</span> <span>MyAssistant</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
<span>const</span> <span>output</span> <span>=</span> <span>await</span> <span>assistant</span><span>.</span><span>ask</span><span>(</span><span>"Say hello."</span><span>,</span> <span>thread</span><span>.</span><span>id</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span>output</span><span>)</span> <span>// Hello</span></pre></div>
<p dir="auto">More importantly, Experts.js introduces Assistants as <a href="#tools">Tools</a>, enabling the creation of <a href="https://twitter.com/AndrewYNg/status/1790769732146307308" rel="nofollow">Multi AI Agent Systems</a>. Each Tool is an LLM-backed Assistant that can take on specialized roles or fulfill complex tasks on behalf of their parent <a href="#assistants">Assistant</a> or Tool. Allowing for complex orchestration workflows or choreographing a series of tightly knit tasks. Shown here is an example of a company assistant with a product catalog tool which itself has a LLM backed tool to create OpenSearch queries.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/metaskills/experts/blob/main/docs/images/panel-of-experts-company-apparel-after.webp"><img src="https://github.com/metaskills/experts/raw/main/docs/images/panel-of-experts-company-apparel-after.webp" alt="Multi AI Agent Systems with OpenAI Assistants API"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">Install via npm. Usage is very simple, there are only three objects to import.</p>

<div dir="auto" data-snippet-clipboard-copy-content="import { Assistant, Tool, Thread } from &quot;experts&quot;;"><pre><span>import</span> <span>{</span> <span>Assistant</span><span>,</span> <span>Tool</span><span>,</span> <span>Thread</span> <span>}</span> <span>from</span> <span>"experts"</span><span>;</span></pre></div>
<ul dir="auto">
<li><a href="#assistants">Assistants</a> - The main object that represents an AI agent.</li>
<li><a href="#tools">Tools</a> - An Assistant that can be used by other Assistants.</li>
<li><a href="#threads">Threads</a> - A managed context window for your agents.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Assistants</h2><a id="user-content-assistants" aria-label="Permalink: Assistants" href="#assistants"></a></p>
<p dir="auto">The constructor of our <a href="https://platform.openai.com/docs/assistants/how-it-works/creating-assistants" rel="nofollow">Assistant</a> facade object requires a name, description, and instructions. The third argument is a set of options which directly maps to all the request body options outlined in the <a href="https://platform.openai.com/docs/api-reference/assistants/createAssistant" rel="nofollow">create assistant</a> documentation. All examples in Experts.js are written in ES6 classes for simplicity. The default model is <code>gpt-4o</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="class MyAssistant extends Assistant {
  constructor() {
    const name = &quot;My Assistant&quot;;
    const description = &quot;...&quot;;
    const instructions = &quot;...&quot;
    super(name, description, instructions, {
      model: &quot;gpt-4-turbo&quot;,
      tools: [{ type: &quot;file_search&quot; }],
      temperature: 0.1,
      tool_resources: {
        file_search: {
          vector_store_ids: [process.env.VECTOR_STORE_ID],
        },
      },
    });
  }
}

const assistant = await MyAssistant.create();"><pre><span>class</span> <span>MyAssistant</span> <span>extends</span> <span>Assistant</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>name</span> <span>=</span> <span>"My Assistant"</span><span>;</span>
    <span>const</span> <span>description</span> <span>=</span> <span>"..."</span><span>;</span>
    <span>const</span> <span>instructions</span> <span>=</span> <span>"..."</span>
    <span>super</span><span>(</span><span>name</span><span>,</span> <span>description</span><span>,</span> <span>instructions</span><span>,</span> <span>{</span>
      <span>model</span>: <span>"gpt-4-turbo"</span><span>,</span>
      <span>tools</span>: <span>[</span><span>{</span> <span>type</span>: <span>"file_search"</span> <span>}</span><span>]</span><span>,</span>
      <span>temperature</span>: <span>0.1</span><span>,</span>
      <span>tool_resources</span>: <span>{</span>
        <span>file_search</span>: <span>{</span>
          <span>vector_store_ids</span>: <span>[</span><span>process</span><span>.</span><span>env</span><span>.</span><span>VECTOR_STORE_ID</span><span>]</span><span>,</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>const</span> <span>assistant</span> <span>=</span> <span>await</span> <span>MyAssistant</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span></pre></div>
<p dir="auto">The Experts.js async <code>create()</code> function will:</p>
<ul dir="auto">
<li>Find or create your assistant by name.</li>
<li>Updates the assistants configurations to latest. <a href="https://github.com/metaskills/experts/issues/2" data-hovercard-type="issue" data-hovercard-url="/metaskills/experts/issues/2/hovercard">(pending)</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Simple Ask Interface</h3><a id="user-content-simple-ask-interface" aria-label="Permalink: Simple Ask Interface" href="#simple-ask-interface"></a></p>
<p dir="auto">The <code>ask()</code> function is a simple interface to ask or instruct your assistant(s). It requires a message and a thread identifier. More on <a href="#threads">Threads</a> below. The message can be a string or native OpenAI message object. This is where Experts.js really shines. You never have to manage <a href="https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps" rel="nofollow">Run</a> objects or their <a href="https://platform.openai.com/docs/assistants/how-it-works/run-steps" rel="nofollow">Run Steps</a> directly.</p>
<div dir="auto" data-snippet-clipboard-copy-content="const output = await assistant.ask(&quot;...&quot;, threadID)
const output = await assistant.ask({ role: &quot;user&quot;, content: &quot;...&quot; }, threadID);"><pre><span>const</span> <span>output</span> <span>=</span> <span>await</span> <span>assistant</span><span>.</span><span>ask</span><span>(</span><span>"..."</span><span>,</span> <span>threadID</span><span>)</span>
<span>const</span> <span>output</span> <span>=</span> <span>await</span> <span>assistant</span><span>.</span><span>ask</span><span>(</span><span>{</span> <span>role</span>: <span>"user"</span><span>,</span> <span>content</span>: <span>"..."</span> <span>}</span><span>,</span> <span>threadID</span><span>)</span><span>;</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Adding Tools</h3><a id="user-content-adding-tools" aria-label="Permalink: Adding Tools" href="#adding-tools"></a></p>
<p dir="auto">Normal OpenAI <a href="https://platform.openai.com/docs/assistants/tools/function-calling" rel="nofollow">tools and function calling</a> are supported via our constructors options object via <code>tools</code> and <code>tool_resources</code>. Experts.js also supports adding <a href="#assistants">Assistants</a> as Tools. More information on using Assistants as <a href="#tools">Tools</a> can be found in the next section. Use the <code>addAssistantTool</code> function to add an Assistant as a Tool.</p>
<div dir="auto" data-snippet-clipboard-copy-content="class MainAssistant extends Assistant {
  constructor() {
    const name = &quot;Company Assistant;
    const description = &quot;...&quot;;
    const instructions = &quot;...&quot;;
    super(name, description, instructions);
    this.addAssistantTool(ProductsTools);
  }
}"><pre><span>class</span> <span>MainAssistant</span> <span>extends</span> <span>Assistant</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>name</span> <span>=</span> <span>"Company Assistant;</span>
<span>    const description = "</span><span>.</span><span>.</span><span>.</span>"<span>;</span>
    <span>const</span> <span>instructions</span> <span>=</span> <span>"..."</span><span>;</span>
    <span>super</span><span>(</span><span>name</span><span>,</span> <span>description</span><span>,</span> <span>instructions</span><span>)</span><span>;</span>
    <span>this</span><span>.</span><span>addAssistantTool</span><span>(</span><span>ProductsTools</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Streaming &amp; Events</h3><a id="user-content-streaming--events" aria-label="Permalink: Streaming &amp; Events" href="#streaming--events"></a></p>
<p dir="auto">By default all Experts.js leverages the <a href="https://platform.openai.com/docs/api-reference/assistants-streaming/events" rel="nofollow">Assistants Streaming Events</a>. These allow your applications to receive text, image, and tool outputs via OpenAI's server-send events. We lever the <a href="https://github.com/openai/openai-node/blob/master/helpers.md">openai-node</a> stream helpers and surface these and more so you can be in control of all events in your agentic applications.</p>
<div dir="auto" data-snippet-clipboard-copy-content="const assistant = await MainAssistant.create();
assistant.on(&quot;textDelta&quot;, (delta, _snapshot) => {
  process.stdout.write(delta.value)
});"><pre><span>const</span> <span>assistant</span> <span>=</span> <span>await</span> <span>MainAssistant</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
<span>assistant</span><span>.</span><span>on</span><span>(</span><span>"textDelta"</span><span>,</span> <span>(</span><span>delta</span><span>,</span> <span>_snapshot</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>process</span><span>.</span><span>stdout</span><span>.</span><span>write</span><span>(</span><span>delta</span><span>.</span><span>value</span><span>)</span>
<span>}</span><span>)</span><span>;</span></pre></div>
<p dir="auto">All openai-node <a href="https://github.com/openai/openai-node/blob/master/helpers.md">streaming events</a> are supported via our Assistant's <code>on()</code> function. The available event names are: <code>event</code>, <code>textDelta</code>, <code>textDone</code>, <code>imageFileDone</code>, <code>toolCallDelta</code>, <code>runStepDone</code>, <code>toolCallDone</code>, and <code>end</code></p>
<div dir="auto"><p dir="auto">Important</p><p dir="auto">OpenAI's server-send events are not async/await friendly.</p>
</div>
<p dir="auto">If your listeners need to perform work in an async fashion, such as redirecting tool outputs, consider using our extensions to these events. They are called in this order after the Run has been completed. The available async event names are: <code>textDoneAsync</code>, <code>imageFileDoneAsync</code>, <code>runStepDoneAsync</code>, <code>toolCallDoneAsync</code>, and <code>endAsync</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Advanced Features</h3><a id="user-content-advanced-features" aria-label="Permalink: Advanced Features" href="#advanced-features"></a></p>
<p dir="auto">If you want to lazily standup additional resources when an assistant's <code>create()</code> function is called, implement the <code>beforeInit()</code> function in your class. This is an async method that will be called before the assistant is created.</p>
<div dir="auto" data-snippet-clipboard-copy-content="async beforeInit() {
  await this.#createFileSearch();
}"><pre><span>async</span> <span>beforeInit</span><span>(</span><span>)</span> <span>{</span>
  <span>await</span> <span>this</span><span>.</span>#<span>createFileSearch</span><span>(</span><span>)</span><span>;</span>
<span>}</span></pre></div>
<p dir="auto">All Assistant events receive an extra Experts'js metadata argument. An object that contains the Run's <code>stream</code>. This allows you to use the <a href="https://github.com/openai/openai-node/blob/master/helpers.md#assistant-methods">openai-node's helper functions</a> such as <code>currentEvent</code>, <code>finalMessages</code>, etc.</p>
<div dir="auto" data-snippet-clipboard-copy-content="assistant.on(&quot;endAsync&quot;, async (metadata) => {
  await metadata.stream.finalMessages();
});"><pre><span>assistant</span><span>.</span><span>on</span><span>(</span><span>"endAsync"</span><span>,</span> <span>async</span> <span>(</span><span>metadata</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>await</span> <span>metadata</span><span>.</span><span>stream</span><span>.</span><span>finalMessages</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tools</h2><a id="user-content-tools" aria-label="Permalink: Tools" href="#tools"></a></p>
<p dir="auto">Using an <a href="#assistants">Assistant</a> as a Tool is central focal point of the Experts.js framework. Tools are a subclass of Assistant and encapsulate the interface for their parent objects. In this way Experts.js tools are reusable components in your agentic architecture. Our examples illustrate a basic message passing pattern, for brevity. You should leverage all of OpenAI's <a href="https://platform.openai.com/docs/assistants/tools/function-calling" rel="nofollow">tool and function calling</a> features to their fullest.</p>
<div dir="auto" data-snippet-clipboard-copy-content="class EchoTool extends Tool {
  constructor() {
    const name = &quot;Echo Tool&quot;;
    const description = &quot;Echo&quot;;
    const instructions = &quot;Echo the same text back to the user&quot;;
    super(name, description, instructions, {
      parentsTools: [
        {
          type: &quot;function&quot;,
          function: {
            name: EchoTool.toolName,
            description: description,
            parameters: {
              type: &quot;object&quot;,
              properties: { message: { type: &quot;string&quot; } },
              required: [&quot;message&quot;],
            },
          },
        },
      ],
    });
  }
}"><pre><span>class</span> <span>EchoTool</span> <span>extends</span> <span>Tool</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>name</span> <span>=</span> <span>"Echo Tool"</span><span>;</span>
    <span>const</span> <span>description</span> <span>=</span> <span>"Echo"</span><span>;</span>
    <span>const</span> <span>instructions</span> <span>=</span> <span>"Echo the same text back to the user"</span><span>;</span>
    <span>super</span><span>(</span><span>name</span><span>,</span> <span>description</span><span>,</span> <span>instructions</span><span>,</span> <span>{</span>
      <span>parentsTools</span>: <span>[</span>
        <span>{</span>
          <span>type</span>: <span>"function"</span><span>,</span>
          <span>function</span>: <span>{</span>
            <span>name</span>: <span>EchoTool</span><span>.</span><span>toolName</span><span>,</span>
            <span>description</span>: <span>description</span><span>,</span>
            <span>parameters</span>: <span>{</span>
              <span>type</span>: <span>"object"</span><span>,</span>
              <span>properties</span>: <span>{</span> <span>message</span>: <span>{</span> <span>type</span>: <span>"string"</span> <span>}</span> <span>}</span><span>,</span>
              <span>required</span>: <span>[</span><span>"message"</span><span>]</span><span>,</span>
            <span>}</span><span>,</span>
          <span>}</span><span>,</span>
        <span>}</span><span>,</span>
      <span>]</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span></pre></div>
<div dir="auto"><p dir="auto">Caution</p><p dir="auto">It is critical that your tool's function name use the <code>toolName</code> getter. Experts.js converts this to a snake_case string and uses the name to find the the right tool and call it.</p>
</div>
<p dir="auto">As such, Tool class names are important and help OpenAI's models decide which tool to call. So pick a good name for your tool class. For example, <code>ProductsOpenSearchTool</code> will be <code>products_open_search</code> and clearly helps the model infer along with the tool's description what role it performs.</p>
<p dir="auto">Tools are added to your <a href="#assistants">Assistant</a> via the <code>addAssistantTool</code> function. This function will add the tool to the assistant's tools array and update the assistant's configuration.</p>
<div dir="auto" data-snippet-clipboard-copy-content="class MainAssistant extends Assistant {
  constructor() {
    const name = &quot;Company Assistant;
    const description = &quot;...&quot;;
    const instructions = &quot;...&quot;;
    super(name, description, instructions);
    this.addAssistantTool(EchoTool);
  }
}"><pre><span>class</span> <span>MainAssistant</span> <span>extends</span> <span>Assistant</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>name</span> <span>=</span> <span>"Company Assistant;</span>
<span>    const description = "</span><span>.</span><span>.</span><span>.</span>"<span>;</span>
    <span>const</span> <span>instructions</span> <span>=</span> <span>"..."</span><span>;</span>
    <span>super</span><span>(</span><span>name</span><span>,</span> <span>description</span><span>,</span> <span>instructions</span><span>)</span><span>;</span>
    <span>this</span><span>.</span><span>addAssistantTool</span><span>(</span><span>EchoTool</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span></pre></div>
<p dir="auto">Your Tool assistant response will automatically be submitted as the output for the parent Assistant or Tool.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Non-LLM Tools</h3><a id="user-content-non-llm-tools" aria-label="Permalink: Non-LLM Tools" href="#non-llm-tools"></a></p>
<p dir="auto">By default Tools are backed by an LLM <code>model</code> and perform all the same lifecycles events, runs, etc as Assistants. However, you can create a Tool that does not use any of the core Assistant's features by setting the <code>llm</code> option to <code>false</code>. When doing so, you must implement the <code>ask()</code> function in your Tool. The return value will be submitted as the tool's output.</p>
<div dir="auto" data-snippet-clipboard-copy-content="class AnswerTwoTool extends Tool {
  constructor() {
    // ...
    super(name, description, instructions, {
      llm: false,
      parentsTools: [...],
    });
  }
  async ask(message) {
    return ...;
  }
}"><pre><span>class</span> <span>AnswerTwoTool</span> <span>extends</span> <span>Tool</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>// ...</span>
    <span>super</span><span>(</span><span>name</span><span>,</span> <span>description</span><span>,</span> <span>instructions</span><span>,</span> <span>{</span>
      <span>llm</span>: <span>false</span><span>,</span>
      <span>parentsTools</span>: <span>[</span>...<span>]</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>
  <span>async</span> <span>ask</span><span>(</span><span>message</span><span>)</span> <span>{</span>
    <span>return</span> ...<span>;</span>
  <span>}</span>
<span>}</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Controlling Output</h3><a id="user-content-controlling-output" aria-label="Permalink: Controlling Output" href="#controlling-output"></a></p>
<p dir="auto">In complex workflows, a LLM backed Tool can be used to convert human or other LLM instructions into executable code and the result of that code (not the LLM output) would need to be submitted for your Tool's parent's outputs. For example, the <code>ProductsOpenSearchTool</code> could convert messages into OpenSearch queries, execute them, and return the results. Sub classes can implement the <code>answered()</code> function to control the output. In this case, the <code>output</code> would be an OpenSearch query and the tools outputs now contain the results of that LLM-generated query.</p>
<div dir="auto" data-snippet-clipboard-copy-content="async answered(output) {
  const args = JSON.parse(output);
  return await this.opensearchQuery(args);
}"><pre><span>async</span> <span>answered</span><span>(</span><span>output</span><span>)</span><span></span> <span>{</span>
  <span>const</span> <span>args</span> <span>=</span> <span>JSON</span><span>.</span><span>parse</span><span>(</span><span>output</span><span>)</span><span>;</span>
  <span>return</span> <span>await</span> <span>this</span><span>.</span><span>opensearchQuery</span><span>(</span><span>args</span><span>)</span><span>;</span>
<span>}</span></pre></div>
<p dir="auto">Alternatively, LLM backed Tools could opt to redirect their own tool outputs back to their parent Assistant or Tool. Thus ignoring the LLM output. This also allows for all of a Tools tool outputs to be submitted as the parent's output. More on why this is important in the <a href="#product-catalog">product catalog</a> example below.</p>
<div dir="auto" data-snippet-clipboard-copy-content="class ProductsTool extends Tool {
  constructor() {
    // ...
    super(name, description, instructions, {
      temperature: 0.1,
      tools: [{ type: &quot;code_interpreter&quot; }],
      outputs: &quot;tools&quot;,
      parentsTools: [...],
    });
    this.addAssistantTool(ProductsOpenSearchTool);
    this.on(&quot;imageFileDoneAsync&quot;, this.imageFileDoneAsync.bind(this));
  }
}"><pre><span>class</span> <span>ProductsTool</span> <span>extends</span> <span>Tool</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>// ...</span>
    <span>super</span><span>(</span><span>name</span><span>,</span> <span>description</span><span>,</span> <span>instructions</span><span>,</span> <span>{</span>
      <span>temperature</span>: <span>0.1</span><span>,</span>
      <span>tools</span>: <span>[</span><span>{</span> <span>type</span>: <span>"code_interpreter"</span> <span>}</span><span>]</span><span>,</span>
      <span>outputs</span>: <span>"tools"</span><span>,</span>
      <span>parentsTools</span>: <span>[</span>...<span>]</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
    <span>this</span><span>.</span><span>addAssistantTool</span><span>(</span><span>ProductsOpenSearchTool</span><span>)</span><span>;</span>
    <span>this</span><span>.</span><span>on</span><span>(</span><span>"imageFileDoneAsync"</span><span>,</span> <span>this</span><span>.</span><span>imageFileDoneAsync</span><span>.</span><span>bind</span><span>(</span><span>this</span><span>)</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Threads</h2><a id="user-content-threads" aria-label="Permalink: Threads" href="#threads"></a></p>
<p dir="auto">OpenAI's Assistants API introduces a new resource called <a href="https://platform.openai.com/docs/assistants/how-it-works/managing-threads-and-messages" rel="nofollow">Threads</a> which messages &amp; files are stored within. Essentially, threads are a managed context window (memory) for your agents. Creating a new thread with Experts.js is as easy as:</p>
<div dir="auto" data-snippet-clipboard-copy-content="const thread = Thread.create();
console.log(thread.id) // thread_abc123"><pre><span>const</span> <span>thread</span> <span>=</span> <span>Thread</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span>thread</span><span>.</span><span>id</span><span>)</span> <span>// thread_abc123</span></pre></div>
<p dir="auto">You can also create a thread with messages, files, or tool resources to start a conversation. We support OpenAI's thread create request body outlined in their <a href="https://platform.openai.com/docs/api-reference/threads" rel="nofollow">Threads API</a> reference.</p>
<div dir="auto" data-snippet-clipboard-copy-content="const thread = await Thread.create({
  messages: [
    { role: &quot;user&quot;, content: &quot;My name is Ken&quot; },
    { role: &quot;user&quot;, content: &quot;Oh, my last name is Collins&quot; },
  ],
});
const output = await assistant.ask(&quot;What is my full name?&quot;, thread.id);
console.log(output) // Ken Collins"><pre><span>const</span> <span>thread</span> <span>=</span> <span>await</span> <span>Thread</span><span>.</span><span>create</span><span>(</span><span>{</span>
  <span>messages</span>: <span>[</span>
    <span>{</span> <span>role</span>: <span>"user"</span><span>,</span> <span>content</span>: <span>"My name is Ken"</span> <span>}</span><span>,</span>
    <span>{</span> <span>role</span>: <span>"user"</span><span>,</span> <span>content</span>: <span>"Oh, my last name is Collins"</span> <span>}</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
<span>const</span> <span>output</span> <span>=</span> <span>await</span> <span>assistant</span><span>.</span><span>ask</span><span>(</span><span>"What is my full name?"</span><span>,</span> <span>thread</span><span>.</span><span>id</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span>output</span><span>)</span> <span>// Ken Collins</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Thread Management &amp; Locks</h3><a id="user-content-thread-management--locks" aria-label="Permalink: Thread Management &amp; Locks" href="#thread-management--locks"></a></p>
<p dir="auto">By default, each <a href="#tools">Tool</a> in Experts.js has its own thread &amp; context. This avoids a potential <a href="https://platform.openai.com/docs/assistants/how-it-works/thread-locks" rel="nofollow">thread locking</a> issue which happens if a <a href="#tools">Tool</a> were to share an <a href="#assistants">Assistant's</a> thread still waiting for tool outputs to be submitted. The following diagram illustrates how Experts.js manages threads on your behalf to avoid this problem:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/metaskills/experts/blob/main/docs/images/panel-of-experts-thread-management.webp"><img src="https://github.com/metaskills/experts/raw/main/docs/images/panel-of-experts-thread-management.webp" alt="Panel of Experts Thread Management"></a></p>
<p dir="auto">All questions to your experts require a thread ID. For chat applications, the ID would be stored on the client. Such as a URL path parameter. With Expert.js, no other client-side IDs are needed. As each <a href="#assistants">Assistant</a> calls an LLM backed <a href="#tools">Tool</a>, it will find or create a thread for that tool as needed. Experts.js stores this parent -&gt; child thread relationship for you using OpenAI's <a href="https://platform.openai.com/docs/api-reference/threads/modifyThread" rel="nofollow">thread metadata</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Examples</h2><a id="user-content-examples" aria-label="Permalink: Examples" href="#examples"></a></p>
<p dir="auto">To see code examples of these and more in action, please take a look at our <a href="https://github.com/metaskills/experts/tree/main/test/uat">test suite</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Product Catalog</h3><a id="user-content-product-catalog" aria-label="Permalink: Product Catalog" href="#product-catalog"></a></p>
<p dir="auto">In the <a href="#overview">Overview</a> section we showed a three-tiered agent system that can answer the following types of questions. The examples uses most, if not all, the features of the Experts.js framework.</p>
<ul dir="auto">
<li>What is the total amount of products available?</li>
<li>Show me a bar chart image with totals of all top level categories.</li>
<li>Find men's accessories for a sophisticated comic book enthusiast.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Streaming From Express</h3><a id="user-content-streaming-from-express" aria-label="Permalink: Streaming From Express" href="#streaming-from-express"></a></p>
<p dir="auto">Basic example using the <code>textDelta</code> event to stream responses from an Express route.</p>
<div dir="auto" data-snippet-clipboard-copy-content="import express from &quot;express&quot;;
import { MainAssistant } from &quot;../experts/main.js&quot;;

const assistant = await MainAssistant.create();

messagesRouter.post(&quot;&quot;, async (req, res, next) => {
  res.setHeader(&quot;Content-Type&quot;, &quot;text/plain&quot;);
  res.setHeader(&quot;Transfer-Encoding&quot;, &quot;chunked&quot;);
  assistant.on(&quot;textDelta&quot;, (delta, _snapshot) => {
    res.write(delta.value);
  });
  await assistant.ask(req.body.message.content, req.body.threadID);
  res.end();
});"><pre><span>import</span> <span>express</span> <span>from</span> <span>"express"</span><span>;</span>
<span>import</span> <span>{</span> <span>MainAssistant</span> <span>}</span> <span>from</span> <span>"../experts/main.js"</span><span>;</span>

<span>const</span> <span>assistant</span> <span>=</span> <span>await</span> <span>MainAssistant</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>

<span>messagesRouter</span><span>.</span><span>post</span><span>(</span><span>""</span><span>,</span> <span>async</span> <span>(</span><span>req</span><span>,</span> <span>res</span><span>,</span> <span>next</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>res</span><span>.</span><span>setHeader</span><span>(</span><span>"Content-Type"</span><span>,</span> <span>"text/plain"</span><span>)</span><span>;</span>
  <span>res</span><span>.</span><span>setHeader</span><span>(</span><span>"Transfer-Encoding"</span><span>,</span> <span>"chunked"</span><span>)</span><span>;</span>
  <span>assistant</span><span>.</span><span>on</span><span>(</span><span>"textDelta"</span><span>,</span> <span>(</span><span>delta</span><span>,</span> <span>_snapshot</span><span>)</span> <span>=&gt;</span> <span>{</span>
    <span>res</span><span>.</span><span>write</span><span>(</span><span>delta</span><span>.</span><span>value</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
  <span>await</span> <span>assistant</span><span>.</span><span>ask</span><span>(</span><span>req</span><span>.</span><span>body</span><span>.</span><span>message</span><span>.</span><span>content</span><span>,</span> <span>req</span><span>.</span><span>body</span><span>.</span><span>threadID</span><span>)</span><span>;</span>
  <span>res</span><span>.</span><span>end</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Messages With Images</h3><a id="user-content-messages-with-images" aria-label="Permalink: Messages With Images" href="#messages-with-images"></a></p>
<p dir="auto">The Assistant's API supports messages with images using either the <code>image_url</code> or <code>image_file</code> content types. Since our <code>ask()</code> function supports strings or native OpenAI message objects.</p>
<div dir="auto" data-snippet-clipboard-copy-content="const output = await assistant.ask(
  { 
    role: &quot;user&quot;, 
    content: [
      { type: &quot;text&quot;, text: &quot;Tell me about this image.&quot; },
      { type: &quot;image_file&quot;, image_file: { file_id: file.id detail: &quot;high&quot; } },
    ],
  },
  threadID
);"><pre><span>const</span> <span>output</span> <span>=</span> <span>await</span> <span>assistant</span><span>.</span><span>ask</span><span>(</span>
  <span>{</span> 
    <span>role</span>: <span>"user"</span><span>,</span> 
    <span>content</span>: <span>[</span>
      <span>{</span> <span>type</span>: <span>"text"</span><span>,</span> <span>text</span>: <span>"Tell me about this image."</span> <span>}</span><span>,</span>
      <span>{</span> <span>type</span>: <span>"image_file"</span><span>,</span> <span>image_file</span>: <span>{</span> <span>file_id</span>: <span>file</span><span>.</span><span>id</span> <span>detail</span>: <span>"high"</span> <span>}</span> <span>}</span><span>,</span>
    <span>]</span><span>,</span>
  <span>}</span><span>,</span>
  <span>threadID</span>
<span>)</span><span>;</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Vector Store</h3><a id="user-content-vector-store" aria-label="Permalink: Vector Store" href="#vector-store"></a></p>
<p dir="auto">Using a <a href="https://platform.openai.com/docs/assistants/tools/file-search/vector-stores" rel="nofollow">Vector Store</a> for file search is easy using OpenAI's interface via our third configuration option. You could alternatively create your vector store on-demand using our <code>beforeInit()</code> function described in <a href="#advanced-features">Advanced Features</a>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="
class VectorSearchAssistant extends Assistant {
  constructor() {
    const name = &quot;Vector Search Assistant&quot;;
    const description = &quot;...&quot;;
    const instructions = &quot;...&quot;
    super(name, description, instructions, {
      tools: [{ type: &quot;file_search&quot; }],
      temperature: 0.1,
      tool_resources: {
        file_search: {
          vector_store_ids: [process.env.VECTOR_STORE_ID],
        },
      },
    });
  }
}"><pre><span>class</span> <span>VectorSearchAssistant</span> <span>extends</span> <span>Assistant</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>name</span> <span>=</span> <span>"Vector Search Assistant"</span><span>;</span>
    <span>const</span> <span>description</span> <span>=</span> <span>"..."</span><span>;</span>
    <span>const</span> <span>instructions</span> <span>=</span> <span>"..."</span>
    <span>super</span><span>(</span><span>name</span><span>,</span> <span>description</span><span>,</span> <span>instructions</span><span>,</span> <span>{</span>
      <span>tools</span>: <span>[</span><span>{</span> <span>type</span>: <span>"file_search"</span> <span>}</span><span>]</span><span>,</span>
      <span>temperature</span>: <span>0.1</span><span>,</span>
      <span>tool_resources</span>: <span>{</span>
        <span>file_search</span>: <span>{</span>
          <span>vector_store_ids</span>: <span>[</span><span>process</span><span>.</span><span>env</span><span>.</span><span>VECTOR_STORE_ID</span><span>]</span><span>,</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Token Usage Metrics</h3><a id="user-content-token-usage-metrics" aria-label="Permalink: Token Usage Metrics" href="#token-usage-metrics"></a></p>
<p dir="auto">Using the <a href="#streaming--events">Streaming &amp; Events</a> feature to report token usage allows you to have per-assistant metrics.</p>
<div dir="auto" data-snippet-clipboard-copy-content="class MyAssistant extends Assistant {
  constructor() {
    // ...
    super(name, description, instructions);
    this.on(&quot;runStepDone&quot;, this.#reportUsage.bind(this));
  }

  #reportUsage(runStep) {
    if (!runStep?.usage?.total_tokens) return;
    const iT = runStep.usage.prompt_tokens;
    const oT = runStep.usage.completion_tokens;
    const tT = runStep.usage.total_tokens;
    console.log({ InTokens: iT, OutTokens: oT, TotalTokens: tT });
  }
}"><pre><span>class</span> <span>MyAssistant</span> <span>extends</span> <span>Assistant</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>// ...</span>
    <span>super</span><span>(</span><span>name</span><span>,</span> <span>description</span><span>,</span> <span>instructions</span><span>)</span><span>;</span>
    <span>this</span><span>.</span><span>on</span><span>(</span><span>"runStepDone"</span><span>,</span> <span>this</span><span>.</span>#<span>reportUsage</span><span>.</span><span>bind</span><span>(</span><span>this</span><span>)</span><span>)</span><span>;</span>
  <span>}</span>

  #<span>reportUsage</span><span>(</span><span>runStep</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>!</span><span>runStep</span><span>?.</span><span>usage</span><span>?.</span><span>total_tokens</span><span>)</span> <span>return</span><span>;</span>
    <span>const</span> <span>iT</span> <span>=</span> <span>runStep</span><span>.</span><span>usage</span><span>.</span><span>prompt_tokens</span><span>;</span>
    <span>const</span> <span>oT</span> <span>=</span> <span>runStep</span><span>.</span><span>usage</span><span>.</span><span>completion_tokens</span><span>;</span>
    <span>const</span> <span>tT</span> <span>=</span> <span>runStep</span><span>.</span><span>usage</span><span>.</span><span>total_tokens</span><span>;</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>{</span> <span>InTokens</span>: <span>iT</span><span>,</span> <span>OutTokens</span>: <span>oT</span><span>,</span> <span>TotalTokens</span>: <span>tT</span> <span>}</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development Setup</h2><a id="user-content-development-setup" aria-label="Permalink: Development Setup" href="#development-setup"></a></p>
<p dir="auto">This project leverages <a href="https://containers.dev/" rel="nofollow">Dev Containers</a> meaning you can open it in any supporting IDE to get started right away. This includes using <a href="https://www.youtube.com/watch?v=b1RavPr_878" rel="nofollow">VS Code with Dev Containers</a> which is the recommended approach.</p>
<p dir="auto">Once opened in your development container, create a <code>.env.development.local</code> file with your OpenAI API key and <a href="https://postimages.org/" rel="nofollow">postimage.org</a> API key:</p>
<div data-snippet-clipboard-copy-content="OPENAI_API_KEY=sk-...
POST_IMAGES_API_KEY=..."><pre><code>OPENAI_API_KEY=sk-...
POST_IMAGES_API_KEY=...
</code></pre></div>
<p dir="auto">Now you can run the following commands:</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Scratch</h2><a id="user-content-scratch" aria-label="Permalink: Scratch" href="#scratch"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="const thread = Thread.create();
const assistant = await MyAssistant.create();
const output = assistant.ask(&quot;Hi, how are you?&quot;, thread.id);"><pre><span>const</span> <span>thread</span> <span>=</span> <span>Thread</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
<span>const</span> <span>assistant</span> <span>=</span> <span>await</span> <span>MyAssistant</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
<span>const</span> <span>output</span> <span>=</span> <span>assistant</span><span>.</span><span>ask</span><span>(</span><span>"Hi, how are you?"</span><span>,</span> <span>thread</span><span>.</span><span>id</span><span>)</span><span>;</span></pre></div>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ex-OpenAI staff must sign lifetime no-criticism contract or forfeit all equity (410 pts)]]></title>
            <link>https://x.com/KelseyTuoc/status/1791584357184127269</link>
            <guid>40394778</guid>
            <pubDate>Fri, 17 May 2024 22:34:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://x.com/KelseyTuoc/status/1791584357184127269">https://x.com/KelseyTuoc/status/1791584357184127269</a>, See on <a href="https://news.ycombinator.com/item?id=40394778">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[ILGPU: Write GPU programs with C# and F# (108 pts)]]></title>
            <link>https://github.com/m4rs-mt/ILGPU</link>
            <guid>40393873</guid>
            <pubDate>Fri, 17 May 2024 20:25:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/m4rs-mt/ILGPU">https://github.com/m4rs-mt/ILGPU</a>, See on <a href="https://news.ycombinator.com/item?id=40393873">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">ILGPU</h2><a id="user-content-ilgpu" aria-label="Permalink: ILGPU" href="#ilgpu"></a></p>
<p dir="auto"><a href="https://github.com/m4rs-mt/ILGPU/actions/workflows/ci.yml?query=branch%3Amaster+event%3Apush"><img src="https://github.com/m4rs-mt/ILGPU/actions/workflows/ci.yml/badge.svg?style=flat&amp;branch=master&amp;event=push" alt="CI"></a>
<a href="https://www.nuget.org/packages/ilgpu/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/ab7d6d92fc8d163d24e7255a2706c9387cb979179f926f98ca7c363e95d6880d/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f696c6770753f7374796c653d666c6174266c6162656c3d72656c65617365" alt="" data-canonical-src="https://img.shields.io/nuget/v/ilgpu?style=flat&amp;label=release"></a>
<a href="https://www.nuget.org/packages/ilgpu/absoluteLatest" rel="nofollow"><img src="https://camo.githubusercontent.com/4f0b4aa6546e54c438fa7f4fc014e4968480e7a364f7e5ee2a5c795b9ae9be73/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f696c6770753f7374796c653d666c6174266c6162656c3d7072652d72656c65617365" alt="" data-canonical-src="https://img.shields.io/nuget/vpre/ilgpu?style=flat&amp;label=pre-release"></a>
<a href="#preview-versions"><img src="https://camo.githubusercontent.com/59b01ea3210b94189510273a4106159795780aa9237b5a70124ca5b47d2b2fc9/68747470733a2f2f696d672e736869656c64732e696f2f666565647a2f767072652f696c6770752f707265766965772f696c6770753f7374796c653d666c617426636f6c6f723d626c7565266c6162656c3d70726576696577" alt="" data-canonical-src="https://img.shields.io/feedz/vpre/ilgpu/preview/ilgpu?style=flat&amp;color=blue&amp;label=preview"></a></p>
<p dir="auto">ILGPU is a JIT (just-in-time) compiler for high-performance GPU programs written in .Net-based languages.
ILGPU is entirely written in C# without any native dependencies.
It offers the flexibility and the convenience of C++ AMP on the one hand and the high performance of Cuda programs on the other hand.
Functions in the scope of kernels do not have to be annotated (default C# functions) and are allowed to work on value types.
All kernels (including all hardware features like shared memory and atomics) can be executed and debugged on the CPU using the integrated multi-threaded CPU accelerator.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">ILGPU.Algorithms</h2><a id="user-content-ilgpualgorithms" aria-label="Permalink: ILGPU.Algorithms" href="#ilgpualgorithms"></a></p>
<p dir="auto">Real-world applications typically require a standard library and a set of standard algorithms that "simply work".
The ILGPU Algorithms library meets these requirements by offering a set of auxiliary functions and high-level algorithms (e.g. sorting or prefix sum).
All algorithms can be run on all supported accelerator types.
The CPU accelerator support is especially useful for kernel debugging.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Community</h2><a id="user-content-community" aria-label="Permalink: Community" href="#community"></a></p>
<p dir="auto"><a href="https://discord.gg/X6RBCff" rel="nofollow"><img src="https://camo.githubusercontent.com/4204acb8f33b2c8edbfffeda265095ee7460dcf890d136627a4cd60719a46c7a/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3531313539383535323137393533393938383f6c6162656c3d494c475055" alt="Discord" data-canonical-src="https://img.shields.io/discord/511598552179539988?label=ILGPU"></a></p>
<p dir="auto">The ILGPU community provides immediate help, feedback and suggestions via Discord ASAP.
Log on to the server and you can get started right away.</p>
<p dir="auto">There are weekly <em>talk-to-dev</em> meetings on the Discord server.
Don't hesitate to join the meeting if you have any questions or suggestions or just want to talk to one of the contributors.
Check out the <em>welcome</em> channel on our Discord server for more information.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">ILGPU Samples</h2><a id="user-content-ilgpu-samples" aria-label="Permalink: ILGPU Samples" href="#ilgpu-samples"></a></p>
<p dir="auto">The sample projects demonstrate the basic usage of ILGPU to help you get started with high performance GPU programming.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Build Instructions</h2><a id="user-content-build-instructions" aria-label="Permalink: Build Instructions" href="#build-instructions"></a></p>
<p dir="auto">ILGPU requires Visual Studio 2022 (or higher) and/or a .NET 6.0 SDK toolchain.</p>
<p dir="auto">Use the provided Visual Studio solution to build the ILGPU libs
in the desired configurations (Debug/Release).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tests</h2><a id="user-content-tests" aria-label="Permalink: Tests" href="#tests"></a></p>
<p dir="auto">Sometimes the XUnit test runner stops execution when all tests are run in parallel.
This is not a problem related to the internal tests, but a known XUnit/Visual Studio problem.
If the tests stop unexpectedly, you can simply run the remaining tests again to continue working.</p>
<p dir="auto">Note: You can unload ILGPU.Tests.Cuda (for example) if you do not have a Cuda-capable device to
execute the Cuda test cases.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Related Information</h2><a id="user-content-related-information" aria-label="Permalink: Related Information" href="#related-information"></a></p>
<ul dir="auto">
<li>ILGPU Homepage (<a href="http://www.ilgpu.net/" rel="nofollow">www.ilgpu.net</a>)</li>
<li>Latest ILGPU Samples (<a href="https://github.com/m4rs-mt/ILGPU/tree/master/Samples">https://github.com/m4rs-mt/ILGPU/tree/master/Samples</a>)</li>
<li>Latest ILGPU Documentation (<a href="https://github.com/m4rs-mt/ILGPU/tree/master/Docs">https://github.com/m4rs-mt/ILGPU/tree/master/Docs</a>)</li>
<li>Nuget (<a href="https://www.nuget.org/packages/ILGPU" rel="nofollow">https://www.nuget.org/packages/ILGPU</a>)</li>
<li>Release (<a href="https://github.com/m4rs-mt/ILGPU/releases/">https://github.com/m4rs-mt/ILGPU/releases/</a>)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Preview versions</h2><a id="user-content-preview-versions" aria-label="Permalink: Preview versions" href="#preview-versions"></a></p>
<p dir="auto">Preview/Daily builds are distributed using <a href="https://feedz.io/" rel="nofollow">https://feedz.io/</a>. To pull preview versions into your project, use the following NuGet.config file:</p>
<div dir="auto" data-snippet-clipboard-copy-content="<?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?>
<configuration>
  <packageSources>
    <add key=&quot;ilgpu&quot; value=&quot;https://f.feedz.io/ilgpu/preview/nuget/index.json&quot; />
  </packageSources>
</configuration>"><pre>&lt;?<span>xml</span><span> version</span>=<span><span>"</span>1.0<span>"</span></span><span> encoding</span>=<span><span>"</span>utf-8<span>"</span></span>?&gt;
&lt;<span>configuration</span>&gt;
  &lt;<span>packageSources</span>&gt;
    &lt;<span>add</span> <span>key</span>=<span><span>"</span>ilgpu<span>"</span></span> <span>value</span>=<span><span>"</span>https://f.feedz.io/ilgpu/preview/nuget/index.json<span>"</span></span> /&gt;
  &lt;/<span>packageSources</span>&gt;
&lt;/<span>configuration</span>&gt;</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Symbols</h2><a id="user-content-symbols" aria-label="Permalink: Symbols" href="#symbols"></a></p>
<p dir="auto">Symbols for ILGPU can be <a href="https://docs.microsoft.com/en-us/visualstudio/debugger/specify-symbol-dot-pdb-and-source-files-in-the-visual-studio-debugger" rel="nofollow">loaded in VS2022</a>.
For official releases, ensure that the built-in <code>NuGet.org Symbol Server</code> is enabled. For preview release symbols, add the link:</p>
<div data-snippet-clipboard-copy-content="https://f.feedz.io/ilgpu/preview/symbols"><pre><code>https://f.feedz.io/ilgpu/preview/symbols
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Source Link</h2><a id="user-content-source-link" aria-label="Permalink: Source Link" href="#source-link"></a></p>
<p dir="auto">ILGPU also provides Source Link support for a better debugging experience. Make sure <code>Enable Source Link support</code> is activated in <a href="https://docs.microsoft.com/en-us/visualstudio/debugger/general-debugging-options-dialog-box" rel="nofollow">VS2022 options</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">General Contribution Guidelines</h2><a id="user-content-general-contribution-guidelines" aria-label="Permalink: General Contribution Guidelines" href="#general-contribution-guidelines"></a></p>
<ul dir="auto">
<li>Make sure that you agree with the general coding style (in terms of braces, whitespaces etc.).</li>
<li>Make sure that ILGPU compiles without warnings in all build modes (Debug, DebugVerification and Release).</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">References</h2><a id="user-content-references" aria-label="Permalink: References" href="#references"></a></p>
<ul dir="auto">
<li>Parallel Thread Execution ISA 7.0
<ul dir="auto">
<li>NVIDIA</li>
</ul>
</li>
<li>A Graph-Based Higher-Order Intermediate Representation
<ul dir="auto">
<li>Roland Leissa, Marcel Koester, and Sebastian Hack</li>
</ul>
</li>
<li>Target-Specific Refinement of Multigrid Codes
<ul dir="auto">
<li>Richard Membarth, Philipp Slusallek, Marcel Koester, Roland Leissa, and Sebastian Hack</li>
</ul>
</li>
<li>Code Refinement of Stencil Codes
<ul dir="auto">
<li>Marcel Koester, Roland Leissa, Sebastian Hack, Richard Membarth, and Philipp Slusallek</li>
</ul>
</li>
<li>Simple and Efficient Construction of Static Single Assignment Form
<ul dir="auto">
<li>Matthias Braun, Sebastian Buchwald, Sebastian Hack, Roland Leissa, Christoph Mallon and Andreas Zwinkau</li>
</ul>
</li>
<li>A Simple, Fast Dominance Algorithm
<ul dir="auto">
<li>Keith D. Cooper, Timothy J. Harvey and Ken Kennedy</li>
</ul>
</li>
<li>Fast Half Float Conversions
<ul dir="auto">
<li>Jeroen van der Zijp</li>
</ul>
</li>
<li>Identifying Loops In Almost Linear Time
<ul dir="auto">
<li>G. Ramalingam</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License information</h2><a id="user-content-license-information" aria-label="Permalink: License information" href="#license-information"></a></p>
<p dir="auto">ILGPU is licensed under the University of Illinois/NCSA Open Source License.
Detailed license information can be found in LICENSE.txt.</p>
<p dir="auto">Copyright (c) 2016-2024 ILGPU Project. All rights reserved.</p>
<p dir="auto">Originally developed by Marcel Koester.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License information of required dependencies</h2><a id="user-content-license-information-of-required-dependencies" aria-label="Permalink: License information of required dependencies" href="#license-information-of-required-dependencies"></a></p>
<p dir="auto">Different parts of ILGPU require different third-party libraries.</p>
<ul dir="auto">
<li>ILGPU Dependencies
<ul dir="auto">
<li>System.Collections.Immutable
(<a href="https://www.nuget.org/packages/System.Collections.Immutable" rel="nofollow">https://www.nuget.org/packages/System.Collections.Immutable</a>)</li>
<li>System.Memory
(<a href="https://www.nuget.org/packages/System.Memory" rel="nofollow">https://www.nuget.org/packages/System.Memory</a>)</li>
<li>System.Reflection.Metadata
(<a href="https://www.nuget.org/packages/System.Reflection.Metadata" rel="nofollow">https://www.nuget.org/packages/System.Reflection.Metadata</a>)</li>
<li>System.Runtime.CompilerServices.Unsafe
(<a href="https://www.nuget.org/packages/system.runtime.CompilerServices.Unsafe/" rel="nofollow">https://www.nuget.org/packages/system.runtime.CompilerServices.Unsafe/</a>)</li>
</ul>
</li>
</ul>
<p dir="auto">Detailed copyright and license information of these dependencies can be found in
LICENSE-3RD-PARTY.txt.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI departures: Why can’t former employees talk? (258 pts)]]></title>
            <link>https://www.vox.com/future-perfect/2024/5/17/24158478/openai-departures-sam-altman-employees-chatgpt-release</link>
            <guid>40393121</guid>
            <pubDate>Fri, 17 May 2024 18:55:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.vox.com/future-perfect/2024/5/17/24158478/openai-departures-sam-altman-employees-chatgpt-release">https://www.vox.com/future-perfect/2024/5/17/24158478/openai-departures-sam-altman-employees-chatgpt-release</a>, See on <a href="https://news.ycombinator.com/item?id=40393121">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p id="7gyUXK">On Monday, OpenAI <a href="https://openai.com/index/hello-gpt-4o/">announced</a> exciting new product news: ChatGPT can now talk like a human. </p>
<p id="3Tw63C">It has a cheery, slightly ingratiating feminine voice that sounds impressively non-robotic, and a bit familiar if you’ve seen a certain 2013 Spike Jonze film. “Her,” <a href="https://twitter.com/sama/status/1790075827666796666">tweeted</a> OpenAI CEO Sam Altman, referencing the movie in which a man falls in love with an <a href="https://www.vox.com/2023/4/28/23702644/artificial-intelligence-machine-learning-technology" data-source="encore">AI</a> assistant voiced by Scarlett Johansson.</p>
<p id="upMvhq">But the product release of ChatGPT 4o was quickly overshadowed by much bigger news out of OpenAI: the resignation of the company’s co-founder and chief scientist, Ilya Sutskever, who also led its superalignment team, as well as that of his co-team leader Jan Leike (who we put on the <a href="https://www.vox.com/23924475/jan-leike-superalignment-team-openai-safety-future-perfect-50-2023">Future Perfect 50 list last year</a>).</p>
<p id="41uCPu">The resignations didn’t come as a total surprise. Sutskever <a href="https://www.theguardian.com/technology/article/2024/may/15/open-ai-cofounder-ilya-sutskever">had been involved</a> in the boardroom revolt that led to Altman’s temporary firing last year, before the CEO quickly returned to his perch. Sutskever publicly regretted his actions and backed Altman’s return, but he’s been mostly <a href="https://www.nytimes.com/2024/05/14/technology/ilya-sutskever-leaving-openai.html">absent from the company since</a>, even as other members of OpenAI’s policy, alignment, and safety teams <a href="https://futurism.com/openai-safety-worker-quit-confidence-agi">have departed.</a> </p>
<p id="fKUWT5">But what has really stirred speculation was the radio silence from former employees. Sutskever <a href="https://twitter.com/ilyasut/status/1790517455628198322">posted</a> a pretty typical resignation message, saying “I’m confident that OpenAI will build AGI that is both safe and beneficial…I am excited for what comes next.” </p>
<p id="q7F0ch">Leike ... didn’t. His resignation message <a href="https://x.com/janleike/status/1790603862132596961">was simply</a>: “I resigned.” After several days of fervent speculation, he <a href="https://x.com/janleike/status/1791498174659715494">expanded on this</a> on Friday morning, explaining that he was worried OpenAI had shifted away from a <a href="https://www.vox.com/e/23922519">safety-focused culture</a>.</p>
<p id="EP9kny">Questions arose immediately: Were they forced out? Is this delayed fallout of Altman’s brief firing last fall? Are they resigning in protest of some secret and dangerous new OpenAI project? Speculation filled the void because no one who had once worked at OpenAI was talking. </p>
<p id="5ubMOp">It turns out there’s a very clear reason for that. I have seen the extremely restrictive off-boarding agreement that contains nondisclosure and non-disparagement provisions former OpenAI employees are subject to. It forbids them, for the rest of their lives, from criticizing their former employer. Even acknowledging that the NDA exists is a violation of it. </p>
<p id="pWOMw7">If a departing employee declines to sign the document, or if they violate it, they can lose all vested equity they earned during their time at the company, which is likely worth millions of dollars. One former employee, Daniel Kokotajlo, who posted that he quit OpenAI “due to losing confidence that it would behave responsibly around the time of AGI,” has <a href="https://www.lesswrong.com/posts/kovCotfpTFWFXaxwi/simeon_c-s-shortform?commentId=G97BaFw83cvegttbv">confirmed publicly</a> that he had to surrender what would have likely turned out to be a huge sum of money in order to quit without signing the document. </p>
<p id="dEJ8Q1">While nondisclosure agreements aren’t unusual in highly competitive Silicon Valley, putting an employee’s already-vested equity at risk for declining or violating one is. For workers at startups like OpenAI, equity is a vital form of compensation, one that can dwarf the salary they make. Threatening that potentially life-changing money is a very effective way to keep former employees quiet. (OpenAI did not respond to a request for comment.)</p>
<p id="bgvwPS">All of this is highly ironic for a company that initially advertised itself as <em>Open</em>AI — that is, as committed in its mission statements to building powerful systems in a transparent and accountable manner. </p>
<p id="hDbkIt">OpenAI long ago <a href="https://news.ycombinator.com/item?id=34979981">abandoned</a> the idea of open-sourcing its models, <a href="https://www.businessinsider.com/sam-altman-openai-not-best-name-for-company-2024-3">citing</a> safety concerns. But now it has shed the most senior and respected members of its safety team, which should inspire some skepticism about whether safety is really the reason why OpenAI has become so closed.</p>
<h3 id="KqEynO">The tech company to end all tech companies</h3>
<p id="oMVUFU">OpenAI has spent a long time occupying an unusual position in tech and policy circles. Their releases, from DALL-E to ChatGPT, are often very cool, but by themselves they would hardly attract the near-religious fervor with which the company is often discussed. </p>
<p id="WkIEfI">What sets OpenAI apart is the <a href="https://openai.com/about/">ambition of its mission</a>: “to ensure that artificial general intelligence — AI systems that are generally smarter than humans — benefits all of humanity.” Many of its employees believe that this aim is within reach; that with perhaps one more decade (or even less) — and <a href="https://www.technologyreview.com/2024/05/16/1092458/unlocking-the-trillion-dollar-potential-of-generative-ai/">a few trillion dollars</a> — the company will succeed at developing AI systems that make most human labor obsolete. </p>
<p id="T8Ig1a">Which, as the company itself has long said, is as risky as it is exciting. </p>
<p id="J8VBOV">“Superintelligence will be the most impactful technology humanity has ever invented, and could help us solve many of the world’s most important problems,” a recruitment page for Leike and Sutskever’s team at OpenAI <a href="https://openai.com/index/introducing-superalignment/">states</a>. “But the vast power of superintelligence could also be very dangerous, and could lead to the disempowerment of humanity or even human extinction. While superintelligence seems far off now, we believe it could arrive this decade.”</p>
<p id="wUNvHo">Naturally, if artificial superintelligence in our lifetimes is possible (and experts are <a href="https://spectrum.ieee.org/many-experts-say-we-shouldnt-worry-about-superintelligent-ai-theyre-wrong">divided</a>), it would have enormous implications for humanity. OpenAI has historically positioned itself as <a href="https://www.calcalistech.com/ctechnews/article/3b1maj8w5">a responsible actor</a> trying to transcend mere commercial incentives and bring AGI about for the benefit of all. And they’ve said they are willing to do that even if that requires <a href="https://openai.com/global-affairs/our-approach-to-frontier-risk/">slowing down development</a>, missing out on profit opportunities, or allowing external oversight. </p>
<p id="d7MqFq">“We don’t think that AGI should be just a Silicon Valley thing,” OpenAI co-founder Greg Brockman <a href="https://www.vox.com/future-perfect/2019/4/17/18301070/openai-greg-brockman-ilya-sutskever">told me in 2019</a>, in the much calmer pre-ChatGPT days. “We’re talking about world-altering technology. And so how do you get the right representation and governance in there? This is actually a really important focus for us and something we really want broad input on.”</p>
<p id="jkCMqJ">OpenAI’s unique corporate structure — a capped-profit company ultimately controlled by a nonprofit — was supposed to increase accountability. “No one person should be trusted here. I don’t have super-voting shares. I don’t want them,” Altman assured Bloomberg’s Emily Chang <a href="https://www.bloomberg.com/news/videos/2023-06-22/openai-ceo-sam-altman-on-the-future-of-ai">in 2023</a>. “The board can fire me. I think that’s important.” (As the board <a href="https://www.vox.com/future-perfect/2023/11/21/23971765/openai-sam-altman-microsoft">found out</a> last November, it <em>could</em> fire Altman, but it couldn’t make the move stick. After his firing, Altman <a href="https://www.businessinsider.com/timeline-sam-altman-openai-shock-firing-microsoft-switch-2023-11#:~:text=Altman%20and%20Brockman%20joined%20Microsoft,Szymon%20Sidor%2C%20and%20Jakub%20Pachocki.">made a deal</a> to effectively take the company to <a href="https://www.vox.com/microsoft" data-source="encore">Microsoft</a>, before being ultimately reinstated with most of the board resigning.) </p>
<p id="a191Lu">But there was no stronger sign of OpenAI’s commitment to its mission than the prominent roles of people like Sutskever and Leike, technologists with a long history of commitment to safety and an apparently genuine willingness to ask OpenAI to change course if needed. When I said to Brockman in that 2019 interview, “You guys are saying, ‘We’re going to build a general artificial intelligence,’” Sutskever cut in. “We’re going to do everything that can be done in that direction while also making sure that we do it in a way that’s safe,” he told me.</p>
<p id="sNhWtG">Their departure doesn’t herald a change in OpenAI’s mission of building artificial general intelligence — that <a href="https://twitter.com/sama/status/1790518321881985365">remains</a> the goal. But it almost certainly heralds a change in OpenAI’s interest in safety work; the company hasn’t announced who, if anyone, will lead the superalignment team. </p>
<p id="SRkXT6">And it makes it clear that OpenAI’s concern with external oversight and transparency couldn’t have run all that deep. If you want external oversight and opportunities for the rest of the world to play a role in what you’re doing, making former employees sign extremely restrictive NDAs doesn’t exactly follow.</p>
<h3 id="A4HZ9j">Changing the world behind closed doors</h3>
<p id="TuRtzJ">This contradiction is at the heart of what makes OpenAI profoundly frustrating for those of us who care deeply about ensuring that AI really does go well and benefits humanity. Is OpenAI a buzzy, if midsize tech company that makes a chatty personal assistant, or a trillion-dollar effort to create an AI god? </p>
<p id="cLoN3X">The company’s leadership says they want to transform the world, that they want to be accountable when they do so, and that they welcome the world’s input into how to do it justly and wisely.</p>
<p id="XoCLEo">But when there’s real money at stake — and there are <a href="https://www.wsj.com/tech/ai/sam-altman-seeks-trillions-of-dollars-to-reshape-business-of-chips-and-ai-89ab3db0">astounding sums</a> of real money at stake in the race to dominate AI — it becomes clear that they probably never intended for the world to get all <em>that </em>much input. Their process ensures former employees — those who know the most about what’s happening inside OpenAI — can’t tell the rest of the world what’s going on. </p>
<p id="AAnHuH">The website may have <a href="https://openai.com/">high-minded ideals</a>, but their termination agreements are full of hard-nosed legalese. It’s hard to exercise accountability over a company whose former employees are restricted to saying “I resigned.”  </p>
<p id="NwOpF9">ChatGPT’s new cute voice may be charming, but I’m not feeling especially enamored.</p>
<p id="BBU90B"><em>A version of this story originally appeared in the </em><a href="https://www.vox.com/future-perfect"><em><strong>Future Perfect</strong></em></a><em> newsletter. </em><a href="https://www.vox.com/pages/future-perfect-newsletter-signup"><em><strong>Sign up here!</strong></em></a></p>
  <div data-cid="site/article_footer-1715998970_755_373114" data-cdata="{&quot;base_type&quot;:&quot;Entry&quot;,&quot;id&quot;:23922519,&quot;timestamp&quot;:1715966400,&quot;published_timestamp&quot;:1715966400,&quot;show_published_and_updated_timestamps&quot;:false,&quot;title&quot;:&quot;ChatGPT can talk, but OpenAI employees sure can’t &quot;,&quot;type&quot;:&quot;Article&quot;,&quot;url&quot;:&quot;https://www.vox.com/future-perfect/2024/5/17/24158478/openai-departures-sam-altman-employees-chatgpt-release&quot;,&quot;entry_layout&quot;:{&quot;key&quot;:&quot;unison_standard&quot;,&quot;layout&quot;:&quot;unison_main&quot;,&quot;template&quot;:&quot;standard&quot;},&quot;additional_byline&quot;:null,&quot;authors&quot;:[{&quot;id&quot;:5296687,&quot;name&quot;:&quot;Kelsey Piper&quot;,&quot;url&quot;:&quot;https://www.vox.com/authors/kelsey-piper&quot;,&quot;twitter_handle&quot;:&quot;&quot;,&quot;profile_image_url&quot;:&quot;https://cdn.vox-cdn.com/thumbor/LHe6jPR2UsTRjhjaRJg5wRJrEBw=/512x512/cdn.vox-cdn.com/author_profile_images/191475/Screen_Shot_2018-09-25_at_11.18.29_AM.0.png&quot;,&quot;title&quot;:&quot;&quot;,&quot;email&quot;:&quot;&quot;,&quot;short_author_bio&quot;:&quot;is a senior writer at Future Perfect, Vox’s effective altruism-inspired section on the world’s biggest challenges. She explores wide-ranging topics like climate change, artificial intelligence, vaccine development, and factory farms, and also writes the Future Perfect newsletter.&quot;}],&quot;byline_enabled&quot;:true,&quot;byline_credit_text&quot;:&quot;By&quot;,&quot;byline_serial_comma_enabled&quot;:true,&quot;comment_count&quot;:0,&quot;comments_enabled&quot;:false,&quot;legacy_comments_enabled&quot;:false,&quot;coral_comments_enabled&quot;:false,&quot;coral_comment_counts_enabled&quot;:false,&quot;commerce_disclosure&quot;:null,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;cross_community&quot;:false,&quot;internal_groups&quot;:[{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:112404,&quot;timestamp&quot;:1715986804,&quot;title&quot;:&quot;Approach — Connects something to larger stakes&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;&quot;,&quot;slug&quot;:&quot;approach-connects-something-to-larger-stakes&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:835,&quot;always_show&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;}],&quot;image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/73354159/GettyImages_1258459514.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;Sam Altman (left), CEO of artificial intelligence company OpenAI, and the company’s co-founder and then-chief scientist Ilya Sutskever, speak together at Tel Aviv University in Tel Aviv on June 5, 2023.&quot;,&quot;credit&quot;:&quot;Jack Guez/AFP via Getty Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:2520,&quot;top_left_y&quot;:1520,&quot;bottom_right_x&quot;:3480,&quot;bottom_right_y&quot;:2480},&quot;bounds&quot;:[0,0,6000,4000],&quot;uploaded_size&quot;:{&quot;width&quot;:6000,&quot;height&quot;:4000},&quot;focal_point&quot;:null,&quot;image_id&quot;:73354159,&quot;alt_text&quot;:&quot;Altman and Sutskever sitting in chairs.&quot;},&quot;hub_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/73354159/GettyImages_1258459514.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;Sam Altman (left), CEO of artificial intelligence company OpenAI, and the company’s co-founder and then-chief scientist Ilya Sutskever, speak together at Tel Aviv University in Tel Aviv on June 5, 2023.&quot;,&quot;credit&quot;:&quot;Jack Guez/AFP via Getty Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:2520,&quot;top_left_y&quot;:1520,&quot;bottom_right_x&quot;:3480,&quot;bottom_right_y&quot;:2480},&quot;bounds&quot;:[0,0,6000,4000],&quot;uploaded_size&quot;:{&quot;width&quot;:6000,&quot;height&quot;:4000},&quot;focal_point&quot;:null,&quot;image_id&quot;:73354159,&quot;alt_text&quot;:&quot;Altman and Sutskever sitting in chairs.&quot;},&quot;lede_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;Sam Altman (left), CEO of artificial intelligence company OpenAI, and the company’s co-founder and then-chief scientist Ilya Sutskever, speak together at Tel Aviv University in Tel Aviv on June 5, 2023.&quot;,&quot;credit&quot;:&quot;Jack Guez/AFP via Getty Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:2520,&quot;top_left_y&quot;:1520,&quot;bottom_right_x&quot;:3480,&quot;bottom_right_y&quot;:2480},&quot;bounds&quot;:[0,0,6000,4000],&quot;uploaded_size&quot;:{&quot;width&quot;:6000,&quot;height&quot;:4000},&quot;focal_point&quot;:null,&quot;image_id&quot;:73354160,&quot;alt_text&quot;:&quot;Altman and Sutskever sitting in chairs.&quot;},&quot;group_cover_image&quot;:null,&quot;picture_standard_lead_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;Sam Altman (left), CEO of artificial intelligence company OpenAI, and the company’s co-founder and then-chief scientist Ilya Sutskever, speak together at Tel Aviv University in Tel Aviv on June 5, 2023.&quot;,&quot;credit&quot;:&quot;Jack Guez/AFP via Getty Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:2520,&quot;top_left_y&quot;:1520,&quot;bottom_right_x&quot;:3480,&quot;bottom_right_y&quot;:2480},&quot;bounds&quot;:[0,0,6000,4000],&quot;uploaded_size&quot;:{&quot;width&quot;:6000,&quot;height&quot;:4000},&quot;focal_point&quot;:null,&quot;image_id&quot;:73354160,&quot;alt_text&quot;:&quot;Altman and Sutskever sitting in chairs.&quot;,&quot;picture_element&quot;:{&quot;loading&quot;:&quot;eager&quot;,&quot;html&quot;:{},&quot;alt&quot;:&quot;Altman and Sutskever sitting in chairs.&quot;,&quot;default&quot;:{&quot;srcset&quot;:&quot;https://cdn.vox-cdn.com/thumbor/CTXaAuKordt2aYixhKgF7RmZbyY=/0x0:6000x4000/320x240/filters:focal(2520x1520:3480x2480)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/qbitHhw3F95-gukUqVZ7uEtEJUs=/0x0:6000x4000/620x465/filters:focal(2520x1520:3480x2480)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 620w, https://cdn.vox-cdn.com/thumbor/rpfR5Mvgi3V21S2pI2_BzEtkiyg=/0x0:6000x4000/920x690/filters:focal(2520x1520:3480x2480)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/PJi4Mw8bpWtwD0BYLbOISPvB3CA=/0x0:6000x4000/1220x915/filters:focal(2520x1520:3480x2480)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 1220w, https://cdn.vox-cdn.com/thumbor/mrWKk5vUBDMBencAkYZhz9sX2CY=/0x0:6000x4000/1520x1140/filters:focal(2520x1520:3480x2480)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 1520w&quot;,&quot;webp_srcset&quot;:&quot;https://cdn.vox-cdn.com/thumbor/HcMNhERWWJKlHIntaSMMqiSbcoQ=/0x0:6000x4000/320x240/filters:focal(2520x1520:3480x2480):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/OSNiPFP2gEfOflTdAknwbwNrzvI=/0x0:6000x4000/620x465/filters:focal(2520x1520:3480x2480):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 620w, https://cdn.vox-cdn.com/thumbor/oio7Qkna5aglJJac7AwmrfFYQGc=/0x0:6000x4000/920x690/filters:focal(2520x1520:3480x2480):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/HuofiOttN-lffWlWzTXs-V9aPxA=/0x0:6000x4000/1220x915/filters:focal(2520x1520:3480x2480):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 1220w, https://cdn.vox-cdn.com/thumbor/pg_qbIIP0-chY4S0agU1t3NKSOQ=/0x0:6000x4000/1520x1140/filters:focal(2520x1520:3480x2480):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg 1520w&quot;,&quot;media&quot;:null,&quot;sizes&quot;:&quot;(min-width: 809px) 485px, (min-width: 600px) 60vw, 100vw&quot;,&quot;fallback&quot;:&quot;https://cdn.vox-cdn.com/thumbor/V-JiUwoC0XNUz32Job-o3TYCf6M=/0x0:6000x4000/1200x900/filters:focal(2520x1520:3480x2480)/cdn.vox-cdn.com/uploads/chorus_image/image/73354160/GettyImages_1258459514.0.jpg&quot;},&quot;art_directed&quot;:[]}},&quot;image_is_placeholder&quot;:false,&quot;image_is_hidden&quot;:false,&quot;network&quot;:&quot;vox&quot;,&quot;omits_labels&quot;:false,&quot;optimizable&quot;:false,&quot;promo_headline&quot;:&quot;ChatGPT can talk, but OpenAI employees sure can’t&nbsp;&quot;,&quot;recommended_count&quot;:0,&quot;recs_enabled&quot;:false,&quot;slug&quot;:&quot;future-perfect/2024/5/17/24158478/openai-departures-sam-altman-employees-chatgpt-release&quot;,&quot;dek&quot;:&quot;Why is OpenAI’s superalignment team imploding? &quot;,&quot;homepage_title&quot;:&quot;ChatGPT can talk, but OpenAI employees sure can’t&nbsp;&quot;,&quot;homepage_description&quot;:&quot;Why is OpenAI’s superalignment team imploding?&quot;,&quot;show_homepage_description&quot;:false,&quot;title_display&quot;:&quot;ChatGPT can talk, but OpenAI employees sure can’t&nbsp;&quot;,&quot;pull_quote&quot;:null,&quot;voxcreative&quot;:false,&quot;show_entry_time&quot;:true,&quot;show_dates&quot;:true,&quot;paywalled_content&quot;:false,&quot;paywalled_content_box_logo_url&quot;:&quot;&quot;,&quot;paywalled_content_page_logo_url&quot;:&quot;&quot;,&quot;paywalled_content_main_url&quot;:&quot;&quot;,&quot;article_footer_body&quot;:&quot;We believe that everyone deserves to understand the world that they live in. That kind of knowledge helps create better citizens, neighbors, friends, parents, and stewards of this planet. Producing deeply researched, explanatory journalism takes resources. <a href=\&quot;http://vox.com/pages/support-now?itm_campaign=evergreen&amp;itm_medium=site&amp;itm_source=footer\&quot;>You can support this mission by making a financial gift to Vox today. Will you join us?</a> \r\n&quot;,&quot;article_footer_header&quot;:&quot;<a href=\&quot;http://vox.com/pages/support-now?itm_campaign=evergreen&amp;itm_medium=site&amp;itm_source=footer\&quot;>Will you support Vox today?</a>&quot;,&quot;use_article_footer&quot;:true,&quot;article_footer_cta_annual_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 1,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 99546\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 100,\r\n      \&quot;plan_id\&quot;: 99547\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 150,\r\n      \&quot;plan_id\&quot;: 99548\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 200,\r\n      \&quot;plan_id\&quot;: 99549\r\n    }\r\n  ]\r\n}&quot;,&quot;article_footer_cta_button_annual_copy&quot;:&quot;year&quot;,&quot;article_footer_cta_button_copy&quot;:&quot;Yes, I'll give&quot;,&quot;article_footer_cta_button_monthly_copy&quot;:&quot;month&quot;,&quot;article_footer_cta_default_frequency&quot;:&quot;monthly&quot;,&quot;article_footer_cta_monthly_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 0,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 5,\r\n      \&quot;plan_id\&quot;: 99543\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 10,\r\n      \&quot;plan_id\&quot;: 99544\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 25,\r\n      \&quot;plan_id\&quot;: 99545\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 46947\r\n    }\r\n  ]\r\n}&quot;,&quot;article_footer_cta_once_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 0,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 20,\r\n      \&quot;plan_id\&quot;: 69278\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 48880\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 100,\r\n      \&quot;plan_id\&quot;: 46607\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 250,\r\n      \&quot;plan_id\&quot;: 46946\r\n    }\r\n  ]\r\n}&quot;,&quot;use_article_footer_cta_read_counter&quot;:true,&quot;use_article_footer_cta&quot;:true,&quot;groups&quot;:[{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:76815,&quot;timestamp&quot;:1715966413,&quot;title&quot;:&quot;Future Perfect&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/future-perfect&quot;,&quot;slug&quot;:&quot;future-perfect&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:1871,&quot;always_show&quot;:false,&quot;description&quot;:&quot;Finding the best ways to do good. &quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/16290809/future_perfect_sized.0.jpg&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:true},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:27524,&quot;timestamp&quot;:1715966413,&quot;title&quot;:&quot;Technology&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/technology&quot;,&quot;slug&quot;:&quot;technology&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:24635,&quot;always_show&quot;:false,&quot;description&quot;:&quot;Uncovering and explaining how our digital world is changing — and changing us.&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:80311,&quot;timestamp&quot;:1715966413,&quot;title&quot;:&quot;Artificial Intelligence&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/artificial-intelligence&quot;,&quot;slug&quot;:&quot;artificial-intelligence&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:441,&quot;always_show&quot;:false,&quot;description&quot;:&quot;Vox's coverage of how AI is shaping everything from text and image generation to how we live. &quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:102794,&quot;timestamp&quot;:1715966413,&quot;title&quot;:&quot;Innovation&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/innovation&quot;,&quot;slug&quot;:&quot;innovation&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:253,&quot;always_show&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false}],&quot;featured_placeable&quot;:false,&quot;video_placeable&quot;:false,&quot;disclaimer&quot;:null,&quot;volume_placement&quot;:&quot;lede&quot;,&quot;video_autoplay&quot;:false,&quot;youtube_url&quot;:&quot;http://bit.ly/voxyoutube&quot;,&quot;facebook_video_url&quot;:&quot;&quot;,&quot;play_in_modal&quot;:true,&quot;user_preferences_for_privacy_enabled&quot;:false,&quot;show_branded_logos&quot;:true}">
       <!-- end of .contribute--frequency-container -->

      <div>
        <p><label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$5</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$10</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$25</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$50</span><span>/month</span>
                </p>
              </label>
            

            <label tabindex="0">
              
              <span>Other</span>
            </label>
          </p>
        </div>

        

        <a href="https://vox.memberful.com/checkout?plan=" id="contribute--submit">
          <p>
            Yes, I'll give $5<span>/month</span>
          </p>
        </a>

        <p>
          Yes, I'll give $5<span>/month</span>
        </p>

        <div>
            <p>
              <span>
                We accept credit card, Apple Pay, and
              </span>
              <span>
                Google Pay. You can also contribute via
              </span>
            </p>
            <p><a href="https://www.paypal.com/donate/?hosted_button_id=VSP4PYJX98SHL" target="_blank">
              <img src="https://cdn.vox-cdn.com/uploads/chorus_asset/file/22734206/paypal_logo.png" alt="" width="136" height="42">
            </a>
          </p></div>

      </div> <!-- end of .right-column -->

 <!-- end of .c-article-footer-cta -->

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HIV Life Cycle – animated and narrated [video] (180 pts)]]></title>
            <link>https://vimeo.com/260291607</link>
            <guid>40393107</guid>
            <pubDate>Fri, 17 May 2024 18:53:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://vimeo.com/260291607">https://vimeo.com/260291607</a>, See on <a href="https://news.ycombinator.com/item?id=40393107">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="wrap">
            <div id="topnav_outer_wrap">
                
                                
                





<div id="topnav_desktop" role="banner">

                            <a href="https://vimeo.com/" alt="Go to Vimeo home page" aria-label="Go to Vimeo home page" data-fatal-attraction="container:top_nav|component:vimeo_home" data-gtm-click="top_nav_home_click">
                                    <svg alt="Vimeo" width="100" height="40"><path d="M22.448 14.575c-.104 2.17-1.618 5.146-4.544 8.912-3.03 3.942-5.59 5.912-7.686 5.912-1.297 0-2.397-1.204-3.3-3.6-.6-2.2-1.202-4.398-1.794-6.598-.664-2.396-1.38-3.6-2.147-3.6-.166 0-.747.354-1.753 1.05l-1.048-1.35c1.1-.965 2.19-1.93 3.257-2.905 1.463-1.265 2.573-1.94 3.3-2.002 1.732-.166 2.8 1.017 3.205 3.558.435 2.74.736 4.44.902 5.115.498 2.27 1.048 3.402 1.65 3.402.466 0 1.172-.737 2.105-2.21.934-1.473 1.432-2.593 1.504-3.37.133-1.277-.365-1.91-1.506-1.91-.53 0-1.08.125-1.65.364 1.1-3.59 3.186-5.333 6.277-5.23 2.273.073 3.35 1.556 3.227 4.46m13.755 7.034c-.933 1.764-2.22 3.37-3.86 4.803-2.24 1.93-4.47 2.905-6.7 2.905-1.037.002-1.826-.33-2.376-.994-.55-.663-.81-1.535-.777-2.603.03-1.1.372-2.8 1.025-5.104.654-2.303.976-3.537.976-3.703 0-.86-.3-1.297-.902-1.297-.198 0-.77.353-1.702 1.048l-1.152-1.35c1.07-.962 2.137-1.927 3.206-2.902 1.43-1.266 2.5-1.94 3.205-2.002 1.1-.103 1.91.23 2.428.976.518.747.705 1.722.58 2.915-.435 2.034-.902 4.607-1.4 7.73-.03 1.43.488 2.146 1.556 2.146.467 0 1.297-.498 2.5-1.483.996-.82 1.815-1.598 2.45-2.324l.942 1.244m-4.357-17.8c-.03.83-.446 1.628-1.255 2.395-.9.86-1.97 1.296-3.204 1.296-1.9 0-2.822-.83-2.75-2.49.032-.86.54-1.69 1.526-2.49.985-.797 2.074-1.19 3.278-1.19.705 0 1.286.27 1.753.82.467.54.684 1.1.653 1.66m35.612 17.8c-.933 1.763-2.22 3.37-3.86 4.802-2.24 1.93-4.47 2.904-6.7 2.904-2.168.002-3.216-1.202-3.153-3.598.03-1.07.238-2.355.622-3.85.384-1.503.59-2.665.623-3.505.03-1.265-.353-1.898-1.152-1.898-.87 0-1.91 1.036-3.112 3.1-1.276 2.168-1.96 4.274-2.064 6.308-.073 1.43.072 2.54.425 3.298-2.324.064-3.963-.32-4.886-1.15-.83-.737-1.212-1.95-1.15-3.652.03-1.068.198-2.137.488-3.205.29-1.07.457-2.023.488-2.853.062-1.234-.384-1.857-1.35-1.857-.84 0-1.74.955-2.706 2.853-.966 1.9-1.505 3.89-1.61 5.956-.06 1.867.053 3.174.364 3.9-2.293.062-3.92-.415-4.876-1.452-.798-.86-1.16-2.18-1.1-3.942.032-.86.188-2.075.457-3.62.28-1.546.425-2.75.457-3.62.062-.603-.083-.903-.446-.903-.197 0-.768.34-1.702 1.015l-1.203-1.348c.168-.135 1.216-1.1 3.156-2.905 1.4-1.297 2.354-1.97 2.852-2.002.872-.073 1.567.29 2.106 1.08.53.787.8 1.69.8 2.727 0 .332-.032.654-.105.954.497-.766 1.08-1.43 1.752-2 1.537-1.34 3.26-2.086 5.157-2.252 1.64-.135 2.8.25 3.505 1.152.57.736.83 1.784.8 3.153.237-.198.486-.416.746-.654.767-.903 1.514-1.62 2.25-2.148 1.235-.902 2.52-1.4 3.86-1.504 1.597-.135 2.75.25 3.454 1.152.602.726.87 1.774.8 3.143-.032.933-.26 2.28-.675 4.065-.416 1.773-.624 2.8-.624 3.07-.03.695.03 1.182.197 1.442.166.27.57.394 1.203.394.467 0 1.297-.497 2.5-1.482.996-.82 1.816-1.598 2.45-2.324l.963 1.254m18.765-.052c-.965 1.598-2.874 3.195-5.706 4.793-3.538 2.032-7.127 3.05-10.758 3.05-2.706 0-4.636-.904-5.808-2.7-.83-1.233-1.234-2.696-1.203-4.407.03-2.698 1.234-5.27 3.6-7.71 2.603-2.665 5.674-4.003 9.21-4.003 3.27 0 5 1.328 5.208 3.994.135 1.702-.798 3.445-2.8 5.24-2.137 1.96-4.824 3.215-8.06 3.744.6.83 1.504 1.245 2.707 1.245 2.396 0 5.02-.613 7.863-1.837 2.033-.86 3.63-1.753 4.803-2.676l.945 1.265m-11.36-5.228c.032-.892-.33-1.35-1.1-1.35-.994 0-2.01.686-3.048 2.066-1.038 1.38-1.567 2.697-1.598 3.962-.02 0-.02.218 0 .643 1.63-.6 3.05-1.514 4.242-2.738.966-1.058 1.463-1.92 1.505-2.583m24.946 1.868c-.135 3.072-1.265 5.717-3.402 7.947-2.135 2.23-4.79 3.35-7.955 3.35-2.635 0-4.637-.85-6.006-2.55-.997-1.267-1.557-2.854-1.65-4.752-.166-2.863.86-5.498 3.1-7.894 2.408-2.665 5.427-3.993 9.057-3.993 2.334 0 4.098.788 5.3 2.344 1.132 1.443 1.65 3.29 1.557 5.55m-5.664-.185c.03-.903-.094-1.733-.374-2.48-.28-.747-.695-1.13-1.224-1.13-1.702 0-3.102.923-4.202 2.76-.933 1.503-1.43 3.11-1.504 4.812-.03.84.114 1.577.446 2.21.364.736.882 1.1 1.556 1.1 1.505 0 2.79-.883 3.86-2.656.892-1.472 1.38-3.008 1.44-4.615h.002z" fill="#112233"></path></svg>
                            </a>
            <a href="https://vimeo.com/stock">
                <svg alt="Vimeo" width="170" height="40" data-name="Layer 1" viewBox="0 0 780 120"><path d="M471.9 70.31c-12.14-2.74-24.28-3.9-24.28-12 0-6.5 8.82-7.66 13.59-7.66 7.22 0 13.73 2.17 15.17 10h17.2c-2-16.62-15.9-23-31.22-23-13.58 0-31.21 5.05-31.21 21.38 0 15.17 11.85 19.51 24 22.11s24 3.76 24.42 12.43c.43 8.52-10.4 9.82-16.62 9.82-8.81 0-16-3.46-16.9-13h-16.49c.29 17.63 14.31 26 33.09 26 15.46 0 33.38-6.5 33.38-24.28-.03-14.72-12.14-19.05-24.13-21.8zM525.66 17.28h-16.48v22.4h-12.42V52h12.42v44c.29 12.43 3.47 19.08 20.67 19.08 3.61 0 7.08-.58 10.69-.87v-12.68a28.52 28.52 0 0 1-6.94.57c-7.37 0-7.94-3.47-7.94-10.26V52h14.88V39.68h-14.88zM580.85 37.66c-24 0-37.71 16.47-37.71 39.3 0 23 13.73 39.45 37.71 39.45S618.57 99.94 618.57 77c0-22.87-13.73-39.34-37.72-39.34zm0 65.74c-14.73 0-21.24-13.4-21.24-26.4s6.51-26.3 21.24-26.3S602.1 64.1 602.1 77s-6.51 26.4-21.25 26.4zM662.79 50.66c9.1 0 15.75 4.91 17.05 14h16.47c-1.59-18.35-16.33-27-33.67-27-24.56 0-36.85 17.63-36.85 40.17 0 22 12.86 38.58 36.27 38.58 19.22 0 31.22-10.69 34.25-30.06h-16.47c-1.59 10.7-8.24 17.05-17.78 17.05-14.3 0-19.79-13.15-19.79-25.57 0-22.69 11.99-27.17 20.52-27.17zM742.26 67.13l28.61-27.45h-20.23l-29.76 30.2V11.21H704.4v103.18h16.48V87.65l9.82-9.53 22.83 36.27h20.09l-31.36-47.26z" fill="#fff"></path><path d="M117.25 26.72a18.37 18.37 0 0 0 13.14-5.31q4.92-4.69 5.13-9.8a9.62 9.62 0 0 0-2.67-6.84 9.08 9.08 0 0 0-7.18-3.37 20.91 20.91 0 0 0-13.45 4.9q-6.06 4.91-6.26 10.21-.4 10.22 11.29 10.21zM386.12 38.25q-22.38 0-37.15 16.39Q335.2 69.4 336.24 87c.05.86.12 1.7.22 2.53l-1.54.68q-17.46 7.52-32.23 7.51-7.4 0-11.09-5.12 19.9-3.27 33-15.35 12.4-11.03 11.54-21.47-1.23-16.37-21.34-16.38-21.8 0-37.8 16.42-14.56 15-14.77 31.6a37.57 37.57 0 0 0 .27 5.37c-2.29 1.51-4 2.27-5.2 2.27q-3.9 0-4.92-1.63c-.69-1.09-1-3.06-.83-5.93q0-1.64 2.57-12.57t2.77-16.67q.4-8.37-3.28-12.88-4.32-5.52-14.17-4.7a30.42 30.42 0 0 0-15.8 6.16 54.57 54.57 0 0 0-9.23 8.82c-1.1 1-2.12 1.86-3.08 2.67q.19-8.41-3.28-12.93-4.32-5.53-14.38-4.72a36.46 36.46 0 0 0-21.13 9.24 37.67 37.67 0 0 0-7.19 8.21 18.15 18.15 0 0 0 .41-3.9A19.42 19.42 0 0 0 162.5 43q-3.28-4.82-8.62-4.41-3.07.21-11.69 8.21-11.91 11.08-12.93 11.9l4.92 5.54c3.83-2.76 6.16-4.15 7-4.15q2.25 0 1.85 3.68a114.11 114.11 0 0 1-1.89 14.84c-.7 3.94-1.2 7.33-1.52 10.19l-.18.15q-7.39 6.08-10.26 6.07c-4.38 0-6.5-2.92-6.37-8.79q3.08-19.22 5.76-31.69.81-7.36-2.37-12t-10-4q-4.32.4-13.14 8.21L97 52.39c-.41-9.68-4.82-14.66-13.28-14.91q-19-.6-25.74 21.46a17.19 17.19 0 0 1 6.76-1.5q7 0 6.16 7.84-.46 4.72-6.2 13.81t-8.62 9.06q-3.69 0-6.77-14-1-4.11-3.69-21-2.47-15.54-13.14-14.52Q28 39 18.94 46.84q-6.57 6-13.34 11.9l4.3 5.54Q16.05 60 17.07 60q4.71 0 8.81 14.76l7.38 27.06q5.52 14.76 13.51 14.76 12.92 0 31.55-24.24 13.1-16.84 17-28.5c3.44-2.55 5.57-3.84 6.35-3.84q3.69 0 3.69 5.33 0 1-4 15.18t-4.2 20.92q-.21 6.57 3.18 10.66c2.25 2.74 5.51 4.11 9.75 4.11q13.75 0 27.5-11.9c.82-.71 1.61-1.44 2.39-2.18a16.51 16.51 0 0 0 3.77 7.56q5.93 6.34 20 5.93-1.89-4.52-1.47-16a59.7 59.7 0 0 1 6.57-24.43q6-11.68 11.1-11.7 6 0 5.55 7.59a53.13 53.13 0 0 1-2 11.71 55.23 55.23 0 0 0-2 13.13q-.41 10.47 4.71 15 5.73 5.13 20.05 4.72-2.13-4.71-1.72-13.54.6-12.52 8.44-25.86 7.41-12.72 12.76-12.73 5 0 4.74 7.8a74.94 74.94 0 0 1-2.56 14.36 74.61 74.61 0 0 0-2.57 15.79q-.41 14.78 12.94 14.77 13.74 0 27.5-11.9l.44-.4c.32.54.64 1.08 1 1.6q7.19 11.08 23.81 11.08 22.36 0 44.13-12.5c1.63-.92 3.17-1.83 4.65-2.75a29.43 29.43 0 0 0 3.24 5.18q8.42 10.45 24.63 10.45 19.5 0 32.64-13.73a48.79 48.79 0 0 0 14-32.58q.61-13.93-6.36-22.75-7.49-9.65-21.85-9.67zm-97.76 46.56a11.12 11.12 0 0 1 0-2.66q.19-7.75 6.55-16.23t12.5-8.48c3.15 0 4.65 1.85 4.51 5.52q-.19 4.08-6.14 10.62a46.25 46.25 0 0 1-17.42 11.23zM391 69.85a39 39 0 0 1-6 18.92q-6.57 10.91-15.81 10.9-4.11 0-6.36-4.52a17.66 17.66 0 0 1-1.85-9.05 39.81 39.81 0 0 1 6.16-19.74q6.86-11.31 17.33-11.31c2.19 0 3.86 1.54 5 4.63A25.82 25.82 0 0 1 391 69.85z" fill="#00adef"></path></svg>
            </a>
        
                            <nav role="navigation" aria-label="Main menu">
                <ul role="menubar">
                                                                                            <li data-menu-id="solutions" data-fatal-attraction-impression="container:top_nav|component:solutions_menu|keyword:solutions_hover">
                            <a onclick="event.preventDefault();event.target.blur();" href="#" rel="toggle" role="button" aria-owns="topnav_solutions">
                                Solutions                                                                    
                                                            </a>
                                                                                        
                            
                        </li>
                                                                                            <li data-menu-id="features" data-fatal-attraction-impression="container:top_nav|component:features_menu|keyword:livestream_highlight">
                            <a onclick="event.preventDefault();event.target.blur();" data-bp-hover="location:global_nav|name:expand_global_nav_option|copy:features|feature:features" href="#" rel="toggle" role="button" aria-owns="topnav_features">
                                Features                                                                    
                                                            </a>
                                                                                        
                            
                        </li>
                                                                                            <li data-menu-id="resources" data-fatal-attraction-impression="container:top_nav|component:resources_menu|keyword:resources_hover">
                            <a onclick="event.preventDefault();event.target.blur();" data-bp-hover="location:global_nav|name:expand_global_nav_option|copy:resources|feature:resources" href="#" rel="toggle" role="button" aria-owns="topnav_resources">
                                Resources                                                                    
                                                            </a>
                                                                                        
                            
                        </li>
                                                                                            <li data-menu-id="watch">
                            <a data-bp-hover="location:global_nav|name:expand_global_nav_option|copy:watch|feature:watch" href="#" rel="toggle" role="button" aria-owns="topnav_watch">
                                Watch                                                                    
                                                            </a>
                                                                                        
                            
                        </li>
                                                                                            <li data-menu-id="pricing">
                            <a data-gtm-click="top_nav_pricing_click" data-fatal-attraction="container:top_nav|component:pricing" data-bp-click="location:global_nav|target:upgrade_page|name:select_global_nav_option|copy:upgrade|feature:upgrade|target_path:/upgrade" href="https://vimeo.com/upgrade" rel="toggle" role="button" aria-owns="topnav_pricing">
                                Pricing                                                            </a>
                                                        
                        </li>
                                                                                            <li data-menu-id="contact_sales">
                            <a data-gtm-click="top_nav_contact_sales_click" data-fatal-attraction="container:top_nav|component:contact_sales|keyword:contact_sales" href="https://vimeo.com/enterprise/contact-us?mkc=368tnc" rel="toggle" role="button" aria-owns="topnav_contact_sales">
                                Contact Sales                                                            </a>
                                                        
                        </li>
                                    </ul>
            </nav><!-- /.topnav_desktop_menu -->
        
                                                                            
                                    
                            <div>
                                                
                                                        <ul role="menu">
                                                            <li data-menu-id="login">
                                    <a onclick="(function(event) { if (window.handleJoinLogin) { handleJoinLogin(event, `log_in`); }})(event)" data-ga-event-click="top_nav|login" data-fatal-attraction="container:top_nav|component:login|target:/log_in" data-gtm-click="top_nav_login_click" href="https://vimeo.com/log_in" rel="toggle" role="button" aria-owns="topnav_login">
                                        Log in                                    </a>
                                </li>
                                                            <li data-menu-id="join">
                                    <a onclick="(function(event) { if (window.handleJoinLogin) { handleJoinLogin(event, `join`); }})(event)" data-ga-event-click="top_nav|join" data-fatal-attraction="container:top_nav|component:join|target:/join" data-gtm-click="top_nav_join_click" href="https://vimeo.com/join" rel="toggle" role="button" aria-owns="topnav_join">
                                        Join                                    </a>
                                </li>
                                                    </ul>
                                                                                                
                    
                    
                            </div><!-- /.topnav_menu_right -->
            </div>

    <!-- Wayfinder nav will be rendered inside this div -->
<div id="topnav" role="navigation" aria-label="Main menu">
        <a href="https://vimeo.com/" alt="Go to Vimeo home page" aria-label="Go to Vimeo home page" data-fatal-attraction="container:top_nav|component:vimeo_home" data-gtm-click="top_nav_home_click">
            <svg alt="Vimeo" width="78px" height="27px" fill="none"><path fill="#112233" fill-rule="evenodd" d="M24.73 2.414c-.027.64-.352 1.252-.978 1.84a3.52 3.52 0 0 1-2.5.995c-1.484 0-2.201-.638-2.149-1.915.025-.663.423-1.302 1.191-1.915C21.062.807 21.915.5 22.854.5c.546 0 1.002.211 1.367.632.364.422.533.85.508 1.282Zm.838 16.974c-.146.137-.295.271-.449.404-1.746 1.487-3.49 2.23-5.234 2.23-.809 0-1.427-.256-1.856-.769-.43-.513-.632-1.178-.605-2 .025-.845.292-2.153.8-3.923.508-1.769.762-2.718.762-2.846 0-.666-.235-1-.703-1-.147 0-.55.24-1.206.717-.495 1.458-1.574 3.241-3.237 5.349-2.365 3.03-4.366 4.545-6.003 4.545-1.014 0-1.872-.922-2.573-2.768L3.86 14.252c-.52-1.844-1.08-2.768-1.676-2.768-.13 0-.586.27-1.366.808L0 11.252c.858-.743 1.705-1.486 2.539-2.23 1.145-.976 2.004-1.489 2.577-1.54 1.354-.129 2.188.783 2.5 2.736.338 2.106.572 3.417.704 3.93.39 1.747.82 2.62 1.289 2.62.364 0 .91-.567 1.64-1.7.728-1.134 1.119-1.997 1.171-2.59.104-.978-.286-1.468-1.17-1.468-.418 0-.847.094-1.289.28.855-2.76 2.489-4.1 4.9-4.023 1.61.046 2.453.978 2.53 2.794l1.165-1.04c1.12-.975 1.953-1.488 2.501-1.54.859-.076 1.49.172 1.894.748.403.576.553 1.323.45 2.243-.34 1.56-.705 3.54-1.095 5.943-.026 1.1.378 1.649 1.211 1.649.364 0 1.015-.38 1.954-1.14l.033-.027c.06-.536.156-1.173.289-1.91.215-1.19.334-2.117.36-2.783.051-.46-.067-.69-.352-.69-.156 0-.6.259-1.329.778l-.937-1.04c.13-.1.95-.846 2.461-2.231 1.094-1 1.836-1.513 2.226-1.539.677-.051 1.224.224 1.64.827.418.603.626 1.302.626 2.098 0 .256-.026.5-.077.73.39-.589.846-1.103 1.367-1.54 1.198-1.025 2.54-1.603 4.023-1.731 1.277-.103 2.188.192 2.736.885.441.565.65 1.373.624 2.425.183-.153.378-.32.587-.5.598-.693 1.184-1.245 1.757-1.655.963-.693 1.967-1.078 3.008-1.155 1.25-.103 2.148.191 2.695.882.468.562.677 1.367.626 2.414-.027.717-.202 1.758-.528 3.126-.326 1.367-.488 2.153-.488 2.357-.026.538.026.908.156 1.113.13.204.442.306.937.306.223 0 .552-.142.989-.425a6.886 6.886 0 0 1-.051-1.008c.025-2.077.963-4.052 2.813-5.926 2.03-2.051 4.427-3.078 7.187-3.078 2.552 0 3.906 1.024 4.063 3.071.104 1.305-.626 2.649-2.188 4.031-1.667 1.51-3.764 2.47-6.29 2.88.469.64 1.172.959 2.11.959 1.875 0 3.92-.469 6.134-1.41.098-.04.195-.081.29-.122a8.317 8.317 0 0 1-.039-.48c-.13-2.202.676-4.227 2.423-6.072 1.874-2.049 4.23-3.073 7.07-3.073 1.822 0 3.202.603 4.14 1.806.886 1.102 1.29 2.524 1.211 4.265-.104 2.357-.99 4.394-2.656 6.11-1.667 1.717-3.738 2.575-6.211 2.575-2.058 0-3.62-.654-4.688-1.96a5.46 5.46 0 0 1-.621-.968c-.28.17-.573.341-.88.512-2.76 1.563-5.561 2.344-8.4 2.344-2.109 0-3.62-.693-4.531-2.077a5.18 5.18 0 0 1-.19-.298l-.083.072c-1.745 1.487-3.49 2.23-5.234 2.23-1.694 0-2.514-.922-2.462-2.768.026-.822.189-1.808.488-2.962.3-1.154.462-2.051.489-2.692.026-.974-.274-1.463-.902-1.463-.68 0-1.489.797-2.43 2.387-.993 1.668-1.53 3.284-1.607 4.849-.052 1.104.057 1.951.329 2.54-1.817.052-3.09-.244-3.817-.885-.65-.564-.948-1.5-.896-2.81.026-.82.153-1.641.384-2.462.23-.821.357-1.552.384-2.195.052-.949-.3-1.424-1.056-1.424-.653 0-1.358.732-2.113 2.195a11.052 11.052 0 0 0-1.252 4.58c-.052 1.437.041 2.437.28 3.002-1.788.051-3.057-.32-3.808-1.114-.343-.366-.584-.836-.722-1.412Zm32.733-7.345c.025-.688-.26-1.033-.858-1.033-.781 0-1.574.53-2.38 1.59-.806 1.059-1.222 2.073-1.247 3.043-.015 0-.015.166 0 .498a8.804 8.804 0 0 0 3.315-2.106c.753-.816 1.144-1.48 1.17-1.992Zm14.764-.614a4.78 4.78 0 0 1 .293 1.908c-.053 1.234-.43 2.416-1.133 3.547-.833 1.364-1.836 2.044-3.008 2.044-.521 0-.925-.282-1.21-.848-.261-.488-.379-1.054-.352-1.697.05-1.31.441-2.544 1.172-3.701.859-1.414 1.952-2.122 3.28-2.122.417 0 .736.29.958.868Z" clip-rule="evenodd"></path></svg>
            <svg alt="V" width="24px" height="21px" fill="none"><path fill="#112233" fill-rule="evenodd" d="M23.978 4.891c-.107 2.348-1.738 5.562-4.892 9.642-3.262 4.261-6.022 6.392-8.28 6.392-1.397 0-2.58-1.297-3.547-3.893L5.322 9.895C4.604 7.3 3.835 6.002 3.012 6.002c-.18 0-.808.38-1.883 1.136L0 5.676a303.794 303.794 0 0 0 3.501-3.139C5.08 1.166 6.265.445 7.056.372c1.867-.18 3.016 1.103 3.447 3.849.466 2.962.789 4.805.97 5.526.538 2.459 1.13 3.686 1.777 3.686.502 0 1.256-.797 2.262-2.391 1.005-1.595 1.543-2.808 1.615-3.642.144-1.376-.395-2.066-1.615-2.066-.575 0-1.166.133-1.776.396 1.18-3.882 3.432-5.768 6.757-5.66 2.465.073 3.627 1.68 3.485 4.821" clip-rule="evenodd"></path></svg>
        </a>
        
    </div>

    



    


    
<!-- /* Responsive Top Nav (Explore, LOHP, Watch, tc) *-->
<nav id="topnav_mobile" role="banner">

    <div>
        
                                <svg data-action="menu.open" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
                <title>Menu</title>
                <path id="Rectangle-4" d="M7,8H25a1,1,0,0,1,1,1h0a1,1,0,0,1-1,1H7A1,1,0,0,1,6,9H6A1,1,0,0,1,7,8Z"></path>
                <path d="M7,15H25a1,1,0,0,1,1,1h0a1,1,0,0,1-1,1H7a1,1,0,0,1-1-1H6A1,1,0,0,1,7,15Z"></path>
                <path d="M7,22H25a1,1,0,0,1,1,1h0a1,1,0,0,1-1,1H7a1,1,0,0,1-1-1H6A1,1,0,0,1,7,22Z"></path>
            </svg>

                        <div>
                <a href="https://vimeo.com/search">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
                        <title>Search</title>
                        <path d="M26.74,25.32l-4.53-4.53a1,1,0,0,0-.21-.14A9,9,0,1,0,20.65,22a1,1,0,0,0,.14.21l4.53,4.53a1,1,0,0,0,1.41-1.41ZM15,22a7,7,0,1,1,7-7A7,7,0,0,1,15,22Z"></path>
                    </svg>
                </a>
                                
            </div>
            <!-- Vimeo Logo -->
            
            </div>

        <div>
            <div>
                <div>
                                                                    <a>
                            <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 441 124.682" width="86px" height="27px">
                                <g>
                                    <path d="M120.481,27.326c5.462,0,10.188-1.91,14.174-5.728c3.547-3.379,5.392-6.906,5.54-10.583c0.143-2.492-0.815-4.951-2.88-7.378C135.244,1.217,132.662,0,129.562,0c-5.32,0-10.155,1.767-14.511,5.288c-4.356,3.527-6.608,7.204-6.75,11.022C108.002,23.656,112.067,27.326,120.481,27.326z"></path>
                                    <path d="M434.079,50.16c-5.319-6.925-13.145-10.395-23.475-10.395c-16.097,0-29.455,5.896-40.083,17.688c-9.902,10.614-14.478,22.265-13.733,34.944c0.049,0.932,0.132,1.84,0.229,2.738c-0.554,0.241-1.093,0.483-1.662,0.724c-12.556,5.411-24.147,8.11-34.775,8.11c-5.32,0-9.307-1.839-11.96-5.521c14.316-2.355,26.206-7.876,35.662-16.568c8.854-7.955,12.989-15.689,12.4-23.197c-0.887-11.78-8.562-17.676-23.034-17.676c-15.65,0-29.235,5.909-40.75,17.714c-10.484,10.783-15.805,22.148-15.947,34.103c-0.04,2.005,0.066,3.932,0.3,5.789c-2.477,1.632-4.352,2.456-5.613,2.456c-2.81,0-4.576-0.582-5.314-1.76c-0.737-1.178-1.035-3.308-0.887-6.401c0-1.178,0.919-5.695,2.771-13.565c1.845-7.87,2.841-13.864,2.99-17.987c0.291-6.025-0.894-10.66-3.547-13.896c-3.101-3.974-8.194-5.663-15.281-5.074c-5.902,0.447-11.592,2.66-17.054,6.647c-3.249,2.363-6.569,5.534-9.961,9.521c-1.185,1.036-2.291,2-3.327,2.88c0.143-6.051-1.036-10.705-3.54-13.954c-3.107-3.987-8.272-5.683-15.508-5.094c-8.415,0.738-16.02,4.065-22.809,9.967c-2.958,2.511-5.54,5.469-7.753,8.861c0.291-1.327,0.44-2.731,0.44-4.207c0-4.576-1.185-8.602-3.547-12.071s-5.462-5.055-9.301-4.757c-2.213,0.149-6.42,3.101-12.621,8.854c-8.569,7.974-13.216,12.259-13.954,12.841l5.313,5.98c4.136-2.984,6.647-4.479,7.534-4.479c1.618,0,2.285,1.327,1.994,3.975c-0.143,3.831-0.822,9.164-2.039,16.012c-0.754,4.243-1.298,7.904-1.638,10.988c-0.066,0.055-0.129,0.109-0.196,0.164c-5.32,4.375-9.009,6.556-11.074,6.556c-4.725,0-7.016-3.158-6.867-9.488c2.213-13.824,4.285-25.222,6.207-34.199c0.583-5.294-0.266-9.592-2.55-12.906c-2.291-3.314-5.87-4.744-10.737-4.304c-3.107,0.298-7.832,3.249-14.181,8.86c-2.205,2-4.41,3.996-6.615,5.993c-0.437-10.447-5.204-15.822-14.329-16.09c-13.669-0.44-22.931,7.275-27.779,23.158c2.504-1.074,4.938-1.618,7.301-1.618c5.016,0,7.229,2.822,6.64,8.453c-0.297,3.411-2.511,8.375-6.64,14.899c-4.136,6.523-7.236,9.786-9.301,9.786c-2.66,0-5.094-5.023-7.307-15.081c-0.745-2.951-2.071-10.491-3.987-22.614c-1.773-11.236-6.499-16.485-14.174-15.747c-3.249,0.298-8.123,3.249-14.614,8.86C9.669,53.318,4.867,57.597,0,61.875l4.641,5.98c4.42-3.094,7.003-4.647,7.741-4.647c3.385,0,6.55,5.313,9.501,15.929c2.653,9.733,5.307,19.468,7.961,29.202c3.974,10.621,8.841,15.929,14.588,15.929c9.281,0,20.627-8.719,34.038-26.154C87.892,85.987,93.99,75.74,96.8,67.354c3.72-2.748,6.018-4.146,6.853-4.146c2.653,0,3.987,1.922,3.987,5.754c0,0.738-1.443,6.2-4.324,16.381c-2.88,10.182-4.395,17.709-4.537,22.575c-0.149,4.726,0.997,8.557,3.43,11.508c2.434,2.952,5.941,4.428,10.524,4.428c9.89,0,19.779-4.278,29.675-12.835c0.881-0.772,1.738-1.557,2.573-2.352c0.783,3.312,2.124,6.045,4.07,8.15c4.259,4.569,11.456,6.706,21.592,6.408c-1.353-3.249-1.884-9.003-1.586-17.274c0.44-9.152,2.809-17.941,7.094-26.355s8.278-12.627,11.98-12.627c4.285,0,6.285,2.731,5.987,8.193c-0.149,3.696-0.874,7.903-2.175,12.628c-1.307,4.725-2.032,9.449-2.174,14.174c-0.298,7.534,1.392,12.919,5.081,16.168c4.116,3.689,11.334,5.392,21.638,5.094c-1.541-3.392-2.162-8.266-1.864-14.621c0.44-9.003,3.482-18.304,9.113-27.902c5.333-9.151,9.922-13.733,13.772-13.733c3.56,0,5.263,2.809,5.113,8.414c-0.148,3.688-1.074,8.854-2.771,15.494c-1.695,6.641-2.621,12.316-2.764,17.041c-0.297,10.628,4.35,15.936,13.955,15.936c9.889,0,19.779-4.278,29.675-12.835c0.164-0.144,0.316-0.293,0.479-0.438c0.34,0.586,0.688,1.168,1.068,1.732c5.165,7.967,13.734,11.954,25.695,11.954c16.09,0,31.966-4.492,47.616-13.488c1.756-0.99,3.422-1.979,5.017-2.97c0.986,1.991,2.138,3.866,3.502,5.591c6.052,7.521,14.912,11.281,26.575,11.281c14.025,0,25.767-4.938,35.216-14.815c9.449-9.876,14.466-21.598,15.061-35.163C441.387,64.684,439.102,56.503,434.079,50.16z M305.118,90.003c-0.084-1.909-0.084-2.867,0-2.867c0.143-5.579,2.505-11.417,7.074-17.514s9.062-9.146,13.488-9.146c3.392,0,5.01,1.987,4.867,5.948c-0.149,2.938-2.362,6.764-6.634,11.462C318.606,83.324,312.341,87.362,305.118,90.003z M415.918,73.868c-0.297,7.1-2.434,13.902-6.42,20.413c-4.725,7.845-10.414,11.76-17.055,11.76c-2.958,0-5.249-1.624-6.867-4.88c-1.476-2.809-2.142-6.064-1.993-9.767c0.291-7.54,2.505-14.64,6.647-21.3c4.866-8.136,11.067-12.207,18.601-12.207c2.356,0,4.168,1.67,5.424,4.997S416.067,69.875,415.918,73.868z"></path>
                                </g>
                            </svg>
                        </a>

                                                </div>

                <ul id="menu_list">
                                                                        <li>
                                <a data-breeze-ignore="" data-fatal-attraction="container:top_nav|component:join|target:/join" data-gtm-click="top_nav_join_click" id="js-join-link" href="https://vimeo.com/join">
                                    Join                                </a>
                            </li>
                                                    <li>
                                <a data-breeze-ignore="" data-fatal-attraction="container:top_nav|component:login|target:/log_in" data-gtm-click="top_nav_login_click" id="js-login-link" href="https://vimeo.com/log_in">
                                    Login                                </a>
                            </li>
                                                                                                                <li>
                                                    
                                                </li>
                                                                    <li>
                                                    
                                                </li>
                                                                    <li>
                                                    
                                                </li>
                                                                    <li>
                                                    
                                                </li>
                                                                    <li>
                                                    <a data-gtm-click="top_nav_pricing_click" data-fatal-attraction="container:top_nav|component:pricing" data-bp-click="location:global_nav|target:upgrade_page|name:select_global_nav_option|copy:upgrade|feature:upgrade|target_path:/upgrade" href="https://vimeo.com/upgrade">
                                                                Pricing                            </a>
                                                </li>
                                                                    <li>
                                                    <a data-gtm-click="top_nav_contact_sales_click" data-fatal-attraction="container:top_nav|component:contact_sales|keyword:contact_sales" href="https://vimeo.com/enterprise/contact-us?mkc=368tnc">
                                                                Contact Sales                            </a>
                                                </li>
                                                                <li>
                            <a href="https://vimeo.com/search">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
                                    <title>Search</title>
                                    <path d="M26.74,25.32l-4.53-4.53a1,1,0,0,0-.21-.14A9,9,0,1,0,20.65,22a1,1,0,0,0,.14.21l4.53,4.53a1,1,0,0,0,1.41-1.41ZM15,22a7,7,0,1,1,7-7A7,7,0,0,1,15,22Z"></path>
                                </svg>
                                Search                            </a>
                        </li>
                                    </ul>
            </div>
            <div>
                        <p><a href="https://vimeo.com/upload" data-breeze-ignore="" data-fatal-attraction="container:top_nav|keyword:upload" data-gtm-click="top_nav_upload_click" id="js-upload-link">
                            <span>
                                <svg width="23" height="17" viewBox="0 0 30 22">
                                    <path d="M9.583 4.923A8.2 8.2 0 0124.778 9.39 5.7 5.7 0 0122.7 20.4l-16-.001A5.7 5.7 0 116.7 9h1.682a8.162 8.162 0 011.2-4.077zm-3.636 5.34A4.501 4.501 0 006.7 19.2h16a4.5 4.5 0 00.799-8.93A7 7 0 109.65 10.2H6.7a4.53 4.53 0 00-.753.063zm9.633.859V19.2h-1v-8.093l-3.043 3.043-.707-.707L15.073 9.2l4.242 4.243-.707.707-3.028-3.028z" fill="#FFF" fill-rule="evenodd"></path>
                                </svg>
                            </span>
                            <span>Upload</span>
                        </a>
                    </p></div>
        </div>

        <section>
        <div>
            <h2>More stuff</h2>
        </div>

        <ul>
                            <li>
                                            <a data-action="menu.close" href="https://vimeo.com/terms">
                            Terms of Service                        </a>
                                                        </li>
                            <li>
                                            <a data-action="menu.close" href="https://vimeo.com/privacy">
                            Privacy Policy                        </a>
                                                        </li>
                            <li>
                                            <a data-action="menu.close" href="https://vimeo.com/dmca">
                            Copyright                        </a>
                                                        </li>
                            <li>
                                            <a data-action="menu.close" href="https://vimeo.com/cookie_policy">
                            Cookies                        </a>
                                                        </li>
                            <li>
                                            
                            Desktop site                        
                                                        </li>
                            <li>
                                            <a language="" href="#">
                            Language                        </a>
                                                                
                                    </li>
                            <li>
                                            <a data-action="menu.close" href="https://vimeo.zendesk.com/hc/en-us">
                            FAQ                        </a>
                                                        </li>
                            <li>
                                            <a data-action="menu.close" href="https://vimeo.zendesk.com/hc/">
                            Help                        </a>
                                                        </li>
                    </ul>


        <p>TM + © 2024 Vimeo.com, Inc.</p>
    </section>


        </nav>


            </div>

            <div>
                
        <div>

        

        <p>
            Watch in our app        </p>

        <p><a href="https://vimeo.com/mobileredirects?type=store&amp;app=vimeo&amp;af_ad=vimeo_watch_in_our_app_blue&amp;af_adset=app_banner_small&amp;af_dp=vimeo%3A%2F%2Fvideos%2F260291607&amp;af_force_deeplink=true&amp;c=clip_page_app_banner&amp;pid=vimeo_mobile_web">
            <span>Open in app</span>
        </a>

    </p></div>




    

<!--[if lte IE 9]>
    <script>window.location = window.location + '?lite=1';</script>
<![endif]-->



<main id="main">
    
</main>





            </div>

                                                

                                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Thinking out loud about 2nd-gen email (243 pts)]]></title>
            <link>https://gabrielsieben.tech/2024/05/17/thinking-out-loud-2nd-gen-email/</link>
            <guid>40392709</guid>
            <pubDate>Fri, 17 May 2024 18:16:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gabrielsieben.tech/2024/05/17/thinking-out-loud-2nd-gen-email/">https://gabrielsieben.tech/2024/05/17/thinking-out-loud-2nd-gen-email/</a>, See on <a href="https://news.ycombinator.com/item?id=40392709">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		
<p><em>Note: This is just me, thinking out loud; you absolutely do not need to think that I have carefully thought this through, or that this is a good idea. With expectations set as low as possible, let’s continue.</em></p>



<p>There are many old pieces of tech still in use, but there’s one that grinds my gears every time I try to use it: Email.</p>



<p>For users, email works pretty well. Sometimes it sends too many emails to Junk, but Email is old, reliable, easy to understand, and relatively easy to search. It’s a good system, and I’m not eager to replace it with Slack anytime soon.</p>



<p>However… the backend for email, is a mess. In escalating order (and “we” is used in a very imprecise, broad hand-waving sense for technologists):</p>



<ul>
<li>Many things in Email have no spec; even basic things. For example: When you reply, are you replying at the top of the message, or the bottom? It might even be a political question, <a href="https://web.archive.org/web/20041224190115/http://lists.suse.com/archive/suse-linux-e/2002-Oct/1698.html">depending on who you ask</a>. This has been worked around by email clients basically guessing the order and rarely even showing the email’s original text, putting layers between the user and the actual message.</li>



<li>What HTML are you allowed to put in an email? Well… it depends. When there’s no spec, and Microsoft Outlook <a href="https://www.hteumeuleu.com/2020/outlook-rendering-engine/">abuses the Microsoft Word HTML renderer, it gets ugly</a>. There’s no guarantee the receiver even has an HTML renderer, and then it’s even more ugly.</li>



<li>How do you encrypt an email, from the provider itself? <a href="https://moxie.org/2015/02/24/gpg-and-me.html">Well, we invented this thing called OpenPGP, but almost nobody used it. Then it turned out to have major flaws.</a></li>



<li><a href="https://dmarcian.com/history-of-spf/">We couldn’t always make sure emails were authentic. So we invented SPF.</a></li>



<li><a href="https://postmarkapp.com/glossary/dkim-domainkeys-identified-mail">Then it turned out SPF didn’t fix everything. So we invented DKIM.</a></li>



<li><a href="https://dmarc.org/overview/">Then it turned out DKIM didn’t fix everything. So we invented DMARC.</a></li>



<li><a href="https://www.zone.eu/blog/2024/05/17/bimi-and-dmarc-cant-save-you/">And then it turns out DKIM itself has major flaws that also bypass DMARC by extension.</a> </li>



<li><a href="https://postmarkapp.com/blog/what-the-heck-is-bimi">Also, because we threw on yet another layer called BIMI, which itself relies on DMARC, when DMARC relies on DKIM, and DKIM has flaws, then it’s exceedingly bad for users.</a></li>



<li><a href="https://dmarc.org/stats/dmarc/">Even if your sender has DMARC, 68.2% of records have their policy set to <code>p=none</code>. This tells DMARC to basically… do nothing!</a> (Sure, it technically speaking notifies the domain owner, but it’s clear the domain owners don’t care.)</li>



<li>Did I mention all of the above, plus aggressive anti-spam policies, makes self-hosting email insanely difficult?</li>



<li>Last, but not least, there’s the inane juggling of IP reputation. Some IP addresses are “cleaner” than other addresses, especially on shared systems like SendGrid or AWS SES. This makes signing up for a mass-mailing account, for whatever reason, messy; and causes countless surprise instances of legitimate emails going to Junk. Combine that with IP Address depletion, and the number of mostly clean addresses is shrinking over time.</li>
</ul>



<p>My gut reaction to the above is that we’ve got a lousy spec, with decades of cruft and unofficial spec, and we aren’t that great at securing it, or making sure messages are authentic. So… could we do better?</p>



<p>Thus the hypothetical: <em>2nd-gen email</em>.</p>



<p>Your initial reaction might be: That would be pointless, because not everyone would opt into it, and it would break compatibility all over the place. My thought is… that’s not necessarily a given. Imagine this:</p>



<ul>
<li>We create a new DNS record, called <code>MX2</code>. Most email services, then, would have an <code>MX2</code> and <code>MX</code> record. Older services only have <code>MX</code>.</li>



<li>If an ancient, 20 year old email client, tries to send a message – it finds the <code>MX</code> record and sends the message just like normal. A modern client sees the <code>MX2</code> and sends the message there if it exists; otherwise, it falls back to <code>MX</code>.</li>



<li>From there, the email services which implement <code>MX2</code> would publish a public date, on which all messages sent to them by the old <code>MX</code> record, will be automatically sent to Junk. If just Microsoft and Google alone agreed on such a date, that would be 40% of global email traffic.</li>
</ul>



<p>If the above looks slightly familiar, it’s because this strategy already worked, in a sense, with the transition from HTTP to HTTPS. We threw away a multi-decade-old protocol, for a new and more secure one. We set browsers to automatically upgrade the connection wherever possible, and now warn users about insecure connections when accessing HTTP (especially on login pages). Nevertheless – users can still visit HTTP pages, ancient browsers still work on HTTP, but most websites have gotten the memo and upgraded to HTTPS anyway. </p>



<p>The incentive to upgrading to <code>MX2</code> would be simple: Your messages, while they still would arrive, would go to Junk automatically past the publicly posted date. No business wants that, even if users are already trained to expect, and act, like that can happen. Thus, the incentive to upgrade without truly breaking any day-to-day compatibility.</p>



<p>Personally, I think that such a transition could go even faster than the HTTP to HTTPS transition. Self-hosted email is not very popular in part because of the complexity of the current email system, so between Microsoft, Google, Amazon, Zoho, GoDaddy, Gandhi, Wix, Squarespace, MailChimp, SparkPost, and SendGrid – you have most of the email market covered for the US; anyone not in the above list would quickly fold. The relative centralization of email, ironically, makes a mass upgrade to email much more achievable.</p>



<p>What would a 2nd-gen email prioritize then? Everyone has different priorities, but I’d personally suggest the following which would hopefully win a broad enough consensus if this idea goes anywhere (though experts, of which I am not one, would have plenty of their own ideas):</p>



<ol>
<li>A standardized HTML specification for email; complete with a test suite for conformance. Or, maybe we just declare a version of the HTML5 spec to be officially binding and that’s the end of it.</li>



<li>Headers for email chain preferences, or other email-specific preferences (i.e. Is this email chain a top-reply chain, or a bottom-reply chain? The client shouldn’t need to guess, or worse, ignore it.)</li>



<li>If an email has a rich, HTML view; it should be required to come with a text-only, non-HTML copy of the body as well; for accessibility, compatibility, and privacy reasons.</li>



<li>All MX2 records must have a public key embedded in the record. To send an email from the domain:<p>– A hash of the email content, and all headers, is created.<br>– This hash is then encrypted with the private key, corresponding to the record’s public key.<br>– This header is then added to the email, as the only permitted untrusted header.<br>– When an email is received, the header containing the hash is decrypted with the DNS public key, and the rest of the email is checked against the hash for integrity and authenticity. </p></li>



<li>Point #4 is a lot like DKIM and DMARC right now, except:<p>– There would always be an automatic reject policy (<code>p=reject</code>) . Currently, only 19.6% of email services which even have DKIM are this stringent.<br>– If headers do need to be added to an email, the spec can carefully define carve-outs for where untrusted data can go (i.e. if the spam filter wanted to add a header).<br>– There also could be standardized carve-outs for, say, appending untrusted data from the receiving server to a message body (i.e. your business could add data to the body’s top or bottom indicating that the message from an external recipient and you have legal obligations, but your email client can also clearly show that this was not part of the original message and is not signed).<br>– As such, the signing would not need to work around email compatibility to such an extent as DKIM, reducing the likelihood of critical flaws. </p></li>



<li>By simplifying the stack to the above, eliminating SPF, DKIM, and DMARC (and their respective configuration options), and standardizing on one record (MX2) for the future, running your own self-hosted email stack would become much easier. Additionally, the additional authenticity verifications would hopefully allow spam filters to be significantly less aggressive by authenticating against domains instead of IPs.</li>



<li>Point #6 is the biggest change – we’re no longer authenticating, or caring, about the IP Address that’s sending the email. Every email can and always would be verified against the domain using MX2 records and the public keys in them. Send a fake spam email? It doesn’t have a signature, so it gets tossed without any heuristics. Send a real spam email? Block that domain when there’s complaints. Go after the registrar (or treat domains belonging to that registrar as suspicious) if needed. This would mostly eliminate the need for IP reputation by replacing it with domain reputation – which, at least to me, is a far superior standard with more understandable and controllable outcomes(1).</li>



<li>Clients which implement MX2 can, optionally, have an updated encryption scheme to replace OpenPGP. Something like Apple’s Contact Key Verification. Hopefully there would be forward secrecy this time.</li>
</ol>



<div><p>If you have got great counterarguments, let me hear them.</p><p>(1) This would, perhaps, be the one and only “new feature” we could advertise to users. Not getting emails? You can just type in the name of the website, and always receive the emails.</p></div>



<p><em>Edit 1, for clarification: For bulk senders, there would be multiple MX2 records on the domain, each containing a public key for every authorized sender. One of those records would have a marker indicating it as suitable for incoming mail.</em></p>
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I built a website to create financial models for any stock online (169 pts)]]></title>
            <link>https://www.useequityval.com/</link>
            <guid>40392548</guid>
            <pubDate>Fri, 17 May 2024 17:59:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.useequityval.com/">https://www.useequityval.com/</a>, See on <a href="https://news.ycombinator.com/item?id=40392548">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div role="navigation" aria-label="Navbar"><p><img src="https://www.useequityval.com/logo.png" alt="equityvalLogo"></p></div><div><h2>Stock valuation for the<!-- --> <span>everyday investor</span></h2><p>Create, save, and share valuation models for any public company to inform your next investment decision<!-- --> </p></div><div><h2>The one stop shop researching your next great investment</h2><div><div><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><circle cx="12" cy="12" r="4"></circle></svg><div><h3>Fully Customizable Models</h3><p>Edit every input for a DCF model to fine tune your model to your exact assumptions.</p></div></div><div><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="6"></circle><circle cx="12" cy="12" r="2"></circle></svg><div><h3>Accurate Data</h3><p>Get the most up to date and accurate data for any public company to enhance your research.</p></div></div><div><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="7" height="9" x="3" y="3" rx="1"></rect><rect width="7" height="5" x="14" y="3" rx="1"></rect><rect width="7" height="9" x="14" y="12" rx="1"></rect><rect width="7" height="5" x="3" y="16" rx="1"></rect></svg><div><h3>Model Dashboard</h3><p>Save your models to view and tweak your models at any time.</p></div></div></div></div><div id="trial"><h3>Create a model with the most popular stocks</h3></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The case against dual axis charts (and what to use instead) (2018) (107 pts)]]></title>
            <link>https://blog.datawrapper.de/dualaxis/</link>
            <guid>40391614</guid>
            <pubDate>Fri, 17 May 2024 16:30:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.datawrapper.de/dualaxis/">https://blog.datawrapper.de/dualaxis/</a>, See on <a href="https://news.ycombinator.com/item?id=40391614">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

                            

                                    <p>The case against dual axis charts</p>
                
                





                
<div><figure><img width="1024" height="343" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1024x343.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1024x343.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1024x343.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-300x101.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-768x258.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-700x235.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1400x469.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-480x161.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-960x322.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-60x20.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-120x40.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-70x23.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-140x47.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-160x54.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-320x107.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-850x285.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1240x416.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-640x215.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1280x429.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-305x102.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-610x205.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-100x34.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-200x67.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-380x127.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-760x255.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-335x112.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-670x225.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-450x151.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-900x302.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1024x343.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-300x101.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-768x258.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-700x235.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1400x469.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-480x161.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-960x322.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-60x20.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-120x40.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-70x23.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-140x47.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-160x54.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-320x107.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-850x285.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1240x416.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-640x215.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-1280x429.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-305x102.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-610x205.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-100x34.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-200x67.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-380x127.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-760x255.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-335x112.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-670x225.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-450x151.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3-900x302.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index-f3.png 1500w"></figure></div>



<p><strong>Tl;dr: We believe that charts with two different y-axes make it hard for most people to intuitively make right statements about two data series. We recommend two alternatives strongly: using two charts instead of one and using indexed charts.</strong></p>



<p id="fnref1">From time to time we get an email asking if it’s possible in our data visualization tool <a href="https://www.datawrapper.de/" target="_blank" rel="noopener noreferrer">Datawrapper</a> to create charts with two different y-axes (also called double Y charts, dual axis charts, dual-scale data charts or superimposed charts). It is not – and we won’t add it any time soon. We’re sorry if that makes our user’s life harder, but we agree with the many chart experts<sup><a href="#fn1">[1]</a></sup>&nbsp;who make cases against dual axis charts. We hope you’ll hear us out.</p>



<p>We will first look at situations when people want to use dual axis charts, then we explain their problems, and afterward we’ll look at four alternatives:</p>



<h2 id="Why-people-use-dual-axis-charts">Why people use dual axis charts</h2>



<p>Why do people use dual axis charts? We looked around and found that most people used them to show…</p>



<p><strong>1 …two data series with the same measure, but different magnitudes</strong>, e.g. the global GDP on one axis and the GDP of Germany on the other one:</p>



<figure><img width="1024" height="360" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1024x360.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1024x360.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index2.png 1500w"></figure>



<p><strong>2 …two data series that show the relative and the absolute values of something</strong>, e.g. the GDP per capita on one axis and the absolute GDP on the other one:</p>



<figure><img width="1024" height="360" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1024x360.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1024x360.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index3.png 1500w"></figure>



<p><strong>3 …two data series for totally different values</strong>, e.g. the GDP of a country on one axis and the life expectancy of that country on the other one:</p>



<figure><img width="1024" height="360" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1024x360.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1024x360.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index4.png 1500w"></figure>



<p><strong>4 …one data series, but the y-axis shows different scales</strong>, e.g. the values in Fahrenheit on one axis and in Celsius on the other one:</p>



<figure><img width="1024" height="360" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1024x360.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1024x360.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index5.png 1500w"></figure>



<p>As you can see, dual axis charts are often used to show two different data series with a&nbsp;<strong>different magnitude (=number range) and/or measure (GDP, life expectancy, etc)</strong>. Often, their goal is to&nbsp;<strong>compare two trends with each other</strong>. Giving readers the possibility to do so makes a lot of sense –&nbsp;but there are some reasons why a dual axis chart is not the way to go. In fact, of these four use cases, we think that only the last dual axis chart can be used without any doubt, since it only uses the second Y-axis to show an alternative scale and not a second data series.</p>



<p>Let’s have a look at the problems with dual axis charts before thinking about alternatives:</p>



<h2 id="The-problems-with-dual-axis-charts">The problems with dual axis charts</h2>



<p>Here’s the problem in a nutshell:&nbsp;<strong>The scales of dual axis charts are arbitrary and can therefore (deliberately) mislead readers about the relationship between the two data series.</strong></p>



<p>Let’s use some real&nbsp;<a href="https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2016&amp;start=1960&amp;view=chart" target="_blank" rel="noreferrer noopener">Worldbank data</a>&nbsp;for the German GDP and the global GDP between 2004 and 2016 to explain that:</p>



<figure><img width="1024" height="360" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1024x360.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1024x360.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index6.png 1500w"></figure>



<p>This chart has two different y-axes: The left axis shows the global GDP with a range from $40 to $80 trillion. The right axis shows the German GDP with a range between $2.5 and $4 trillion. The measure (US-Dollar) is the same, but we have a wildly different magnitude. A second axis sounds like a good solution –&nbsp;but there are three problems we have with them:</p>



<h3 id="Zero-baselines-at-different-heights-can-mislead">Zero baselines at different heights can mislead</h3>



<p>The proportions of the two scales are often different from each other in dual axis charts. If the left axis would go down to zero, the chart would be twice as long. If the right axis would go down to zero, the chart would be almost three times as long. This is how both axes look like when we extend them to zero:</p>



<figure><img width="1024" height="862" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1024x862.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1024x862.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1024x862.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-300x252.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-768x646.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-700x589.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1400x1178.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-480x404.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-960x808.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-60x50.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-120x101.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-70x59.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-140x118.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-160x135.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-320x269.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-850x715.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1240x1043.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-640x538.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1280x1077.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-305x257.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-610x513.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-100x84.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-200x168.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-380x320.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-760x639.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-335x282.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-670x564.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-450x379.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-900x757.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1024x862.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-300x252.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-768x646.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-700x589.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1400x1178.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-480x404.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-960x808.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-60x50.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-120x101.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-70x59.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-140x118.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-160x135.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-320x269.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-850x715.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1240x1043.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-640x538.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-1280x1077.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-305x257.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-610x513.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-100x84.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-200x168.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-380x320.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-760x639.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-335x282.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-670x564.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-450x379.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12-900x757.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index12.png 1500w"></figure>



<p>So while&nbsp;<strong>the chart looks like</strong>&nbsp;the German GDP and the global GDP go up at roughly the same rate (at least until 2014), they don’t. The global GDP increased by 80% until 2014; the GDP of Germany by 40%.</p>



<p>Most readers are used to line charts with just one scale. So when they see a line chart with two scales, their intuition goes into the normal “that’s how I read a line chart”-mode: “Oh, two lines, cool, same rate, interesting”. Readers actively need to remind themselves that these two lines have less of a relationship than they’re used to seeing in a line chart.</p>



<p>So how small is the relationship between these two lines? Let’s go crazy. Nothing really matters, right?&nbsp;<strong>We can make&nbsp;<a href="http://www.tylervigen.com/spurious-correlations" target="_blank" rel="noreferrer noopener">all kinds of statements</a>&nbsp;with our two data sets if we just tweak the scales a little bit:</strong></p>



<figure><img width="1024" height="914" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1024x914.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1024x914.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1024x914.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-300x268.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-768x686.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-700x625.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1400x1250.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-480x428.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-960x857.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-60x54.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-120x107.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-70x62.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-140x125.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-160x143.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-320x286.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-850x759.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1240x1107.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-640x571.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1280x1143.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-305x272.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-610x545.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-100x89.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-200x179.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-380x339.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-760x678.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-335x299.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-670x598.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-450x402.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-900x803.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1024x914.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-300x268.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-768x686.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-700x625.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1400x1250.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-480x428.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-960x857.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-60x54.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-120x107.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-70x62.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-140x125.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-160x143.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-320x286.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-850x759.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1240x1107.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-640x571.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-1280x1143.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-305x272.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-610x545.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-100x89.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-200x179.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-380x339.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-760x678.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-335x299.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-670x598.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-450x402.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9-900x803.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index9.png 1500w"></figure>



<p>But that’s a problem we can solve, isn’t it? We can just set the zero baseline to the same height. Except:</p>



<h3 id="Even-zero-baselines-at-the-same-height-can-mislead">Even zero baselines at the same height can mislead</h3>



<p>This is how the chart looks like with the same baseline. (Meaning, if we extended both y-axes to zero, they would have the same height.) In the best case, our readers will now think: “Seems like the global GDP increased more than the German GDP”. Yes! Success! Except, in the worst case, our readers will think: “In the first years, the German GDP was higher than the global GDP. And then in 2011, the two GDP’s were the same:”</p>



<figure><img width="1024" height="865" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1024x865.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1024x865.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1024x865.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-300x253.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-768x649.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-700x591.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1400x1183.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-480x405.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-960x811.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-60x51.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-120x101.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-70x59.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-140x118.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-160x135.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-320x270.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-850x718.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1240x1047.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-640x541.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1280x1081.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-305x258.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-610x515.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-100x84.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-200x169.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-380x321.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-760x642.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-335x283.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-670x566.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-450x380.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-900x760.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1024x865.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-300x253.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-768x649.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-700x591.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1400x1183.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-480x405.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-960x811.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-60x51.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-120x101.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-70x59.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-140x118.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-160x135.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-320x270.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-850x718.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1240x1047.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-640x541.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-1280x1081.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-305x258.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-610x515.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-100x84.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-200x169.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-380x321.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-760x642.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-335x283.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-670x566.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-450x380.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11-900x760.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index11.png 1500w"></figure>



<p>Why would anyone think that? Because humans have a tendency to set things in relation&nbsp;<a href="https://en.wikipedia.org/wiki/Principles_of_grouping#Proximity" target="_blank" rel="noreferrer noopener">if they’re close-by</a>, and this relationship becomes a huge part of the meaning they see in things. Data points and data series are not an exception to this rule. We automatically compare lines and points with each other; and it’s hard to remember that different scales are involved.&nbsp;<strong>If things look close-by on a chart, it’s hard to constantly remember that actually, they are miles apart.</strong></p>



<h3 id="They’re-just-hard-to-read">They’re just hard to read</h3>



<p>“Ha,” you might say, “readers just need to look closer. I stared at this chart for a minute and I figured everything out.” Well, good for you.&nbsp;<strong>But most of our readers don’t like to do math in their heads. (Which is ok: Our job is to do the math for them.)</strong></p>



<p>A&nbsp;<a href="https://www.lri.fr/~isenberg/publications/papers/Isenberg_2011_ASO.pdf" target="_blank" rel="noreferrer noopener">study from 2011</a>&nbsp;backs up that claim. Petra Isenberg, Anastasia Bezerianos, Pierre Dragicevic and Jean-Daniel Fekete showed 15 people four different charts that all showed values in different magnitudes, and observed how well these people could read the charts. One of them was a chart with a dual axis, which the researchers call “superimposed chart”. That’s what they found out:</p>



<blockquote><p>We found across the board that the superimposed chart performed poorly both in terms of accuracy and time. Participants’ feedback from the questionnaire was also clearly against the superimposed chart and it was ranked lowest by all but one participant. Participants called it very confusing and demanding too much concentration or reflection to decipher the non-monotonic and discontinuous nature of the two scales.&nbsp;</p><cite><a rel="noreferrer noopener" href="https://www.lri.fr/~isenberg/publications/papers/Isenberg_2011_ASO.pdf" target="_blank"><em>– A Study on Dual-Scale Data Charts</em></a></cite></blockquote>



<p>The researchers go on and recommend to avoid dual axis charts altogether. We agree. We tried to show here that the danger of dual axis charts is that they’re not intuitive. Chart designers have the freedom to manipulate axes as they wish, which can lead to first visual impressions which are way off what the data actually says.</p>



<h2 id="Alternatives">Alternatives</h2>



<p>However, there’s hope! There are alternatives. Here we will present four of them: Creating two charts, indexed charts, labeling and connected scatterplots.</p>



<h3 id="Solution-1-Side-by-side-charts">Solution 1: Side-by-side charts</h3>



<p>If the problem is that the two lines create meaning because they’re so close together, let’s separate them! The first solution is to create two different charts with our two data series, also called side-by-side-charts. The advantage is that –&nbsp;like with a dual axis chart – side-by-side charts&nbsp;<strong>don’t care how much the numbers differ</strong>: We can create two different axes for two different charts. The disadvantage is that two charts might need more space than one chart.</p>



<figure><img width="1024" height="360" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1024x360.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1024x360.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index7.png 1500w"></figure>



<h3 id="Solution-2-Indexed-charts">Solution 2: Indexed charts</h3>



<p>If we want to keep both data series in one chart, we can create an indexed chart. That’s a chart that doesn’t tell us anything about absolute numbers, but&nbsp;<strong>shows the relative change of our data series over time</strong>: By what&nbsp;<em>percentage</em>&nbsp;a variable increased or decreased over time. Labeling or tooltips can bring back information about the absolute numbers. And one can even show more than two data series in the same chart, as happened in&nbsp;<a href="https://river.datawrapper.de/_/OBiUu" target="_blank" rel="noreferrer noopener">this chart</a>&nbsp;by my co-worker Gregor, who compares the growth and decline of several cryptocurrencies with each other.<br>This approach works only for data series with a similar rate of change, though. Cole Nussbaumer Knaflic makes that point really well in&nbsp;<a href="http://www.storytellingwithdata.com/blog/2016/2/1/be-gone-dual-y-axis" target="_blank" rel="noreferrer noopener">one of her articles</a>: If one of data series changes by +10000% and the other one by just +5%, the latter line will almost be invisible.</p>



<figure><img width="1024" height="442" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1024x442.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1024x442.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1024x442.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-300x129.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-768x331.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-700x302.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1400x604.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-480x207.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-960x414.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-60x26.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-120x52.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-70x30.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-140x60.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-160x69.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-320x138.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-850x367.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1240x535.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-640x276.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1280x552.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-305x132.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-610x263.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-100x43.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-200x86.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-380x164.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-760x328.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-335x144.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-670x289.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-450x194.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-900x388.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1024x442.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-300x129.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-768x331.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-700x302.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1400x604.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-480x207.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-960x414.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-60x26.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-120x52.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-70x30.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-140x60.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-160x69.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-320x138.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-850x367.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1240x535.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-640x276.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-1280x552.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-305x132.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-610x263.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-100x43.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-200x86.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-380x164.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-760x328.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-335x144.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-670x289.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-450x194.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10-900x388.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index10.png 1500w"></figure>



<h3 id="Solution-3-Prioritizing-labeling">Solution 3: Prioritizing &amp; labeling</h3>



<p>The third idea to prevent a dual axis is to just show one line: the more important data series of the two. We can then use chart annotations to add information about the data we leave out (the other data series). That’s also a&nbsp;<a href="http://www.storytellingwithdata.com/blog/2016/2/1/be-gone-dual-y-axis" target="_blank" rel="noreferrer noopener">recommendation by Cole Nussbaumer Knaflic</a>, although she called it “not exactly the eloquent solution I was imagining”. Indeed, this solution won’t work well for most data (including ours), but&nbsp;<strong>can be a great alternative for dual axis charts that present absolute and relative numbers of the same measure</strong>. For example, the following chart shows the unemployment&nbsp;<em>rate</em>&nbsp;in the US, but gives information about the absolute numbers in form of annotations:</p>



<figure><img width="1024" height="360" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1024x360.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1024x360.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1024x360.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-300x105.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-768x270.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-700x246.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1400x492.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-480x169.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-960x337.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-60x21.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-120x42.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-70x25.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-140x49.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-160x56.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-320x112.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-850x299.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1240x436.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-640x225.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-1280x450.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-305x107.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-610x214.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-100x35.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-200x70.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-380x134.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-760x267.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-335x118.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-670x235.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-450x158.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14-900x316.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index14.png 1500w"></figure>



<h3 id="Solution-4-Connected-Scatterplot">Solution 4: Connected Scatterplot</h3>



<p id="fnref2">Here it gets fancy: A connected scatterplot keeps one variable on the y-axis – but instead of time, it places the second variable on the x-axis. Suddenly, time doesn’t move from left to right, but wiggles through space. It’s really unintuitive,<sup><a href="#fn2">[2]</a></sup>&nbsp;but also lots of fun. <a href="http://stephanieevergreen.com/two-alternatives-to-using-a-second-y-axis/" target="_blank" rel="noopener noreferrer">Stephanie Evergreen recommends it as an alternative to a dual axis chart</a> in one of her articles. In our case, a connected scatterplot might be overkill; but we’ve seen <a href="https://archive.nytimes.com/www.nytimes.com/imagepages/2010/05/02/business/02metrics.html" target="_blank" rel="noopener noreferrer">cases</a> in which they are the best chart type for showing an insight.</p>



<figure><img width="1024" height="495" src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1024x495.png" data-src="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1024x495.png" alt="" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1024x495.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-300x145.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-768x371.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-700x338.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1400x677.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-480x232.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-960x464.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-60x29.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-120x58.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-70x34.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-140x68.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-160x77.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-320x155.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-850x411.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1240x599.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-640x309.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1280x619.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-305x147.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-610x295.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-100x48.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-200x97.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-380x184.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-760x367.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-335x162.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-670x324.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-450x218.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-900x435.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13.png 1500w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1024x495.png 1024w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-300x145.png 300w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-768x371.png 768w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-700x338.png 700w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1400x677.png 1400w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-480x232.png 480w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-960x464.png 960w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-60x29.png 60w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-120x58.png 120w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-70x34.png 70w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-140x68.png 140w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-160x77.png 160w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-320x155.png 320w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-850x411.png 850w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1240x599.png 1240w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-640x309.png 640w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-1280x619.png 1280w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-305x147.png 305w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-610x295.png 610w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-100x48.png 100w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-200x97.png 200w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-380x184.png 380w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-760x367.png 760w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-335x162.png 335w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-670x324.png 670w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-450x218.png 450w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13-900x435.png 900w, https://blog.datawrapper.de/wp-content/uploads/2020/08/full-180508_index13.png 1500w"></figure>



<p>Of the four alternatives we show here, the first two will be useful in most cases. Let us know if we missed anything! We hope we could make our concerns understandable and show some ways how you can visualise your data even without a dual axis chart.</p>



    <ol id="footnotes-block_5f2546a16722f">

                           
            <li id="fn1"><p>Here are articles by smart people who have opinions about using dual axis charts:<br>
<strong><a href="https://www.perceptualedge.com/articles/visual_business_intelligence/dual-scaled_axes.pdf" target="_blank" rel="noopener noreferrer">Dual-Scaled Axes in Graphs Are They Ever the Best Solution?</a></strong> by Stephen Few. Looks first at column charts, then at line charts with dual axes and concludes that he “cannot think of a situation that warrants them in light of other, better solutions.”<br>
<strong><a href="http://stephanieevergreen.com/two-alternatives-to-using-a-second-y-axis" target="_blank" rel="noopener noreferrer">Two Alternatives to Using a Second Y-Axis</a></strong> by Stephanie Evergreen. Explains two alternatives to a second Y-axis, two side-by-side graphs and a connected scatterplot.<br>
<strong><a href="http://www.storytellingwithdata.com/blog/2016/2/1/be-gone-dual-y-axis" target="_blank" rel="noopener noreferrer">Be gone, dual y-axis!</a></strong> by Cole Nussbaumer Knaflic. Shows a case when indexed charts as an alternative for dual axis charts fail, and suggests a labeled chart instead.<br>
<strong><a href="https://stackoverflow.com/a/3101876" target="_blank" rel="noopener noreferrer">Hadley Wickham’s arguments against dual axis charts</a></strong> on StackOverflow. Gives four arguments why it’s not possible to create dual axis charts with his charting library ggplot2.<br>
<strong><a href="http://freerangestats.info/blog/2016/08/18/dualaxes" target="_blank" rel="noopener noreferrer">Dual axes time series plots may be ok sometimes after all</a></strong> by<br>
Peter Ellis. Makes arguments against side-by-side charts, indexed charts, and connected scatterplots, and explains Do’s and Don’ts of creating dual axis charts.&nbsp;<a href="#fnref1">↩︎</a></p>
</li>
                               
            <li id="fn2"><p>Note that both the dual axis chart and the connected scatterplots are not intuitive, but differently so: The dual axis chart <strong>promises the reader to be easily decipherable</strong>, since it looks like the common line-chart that readers have seen so often and learned how to read. Quickly glancing at a dual axis chart for a second can plant misleading statements in a reader’s mind. Glancing at a connected scatterplot, on the other side, just ends in a confused face and the realisation “I need to take my time to understand this chart”. It’s not intuitive, but it also doesn’t lead to intuitive (and wrong) insights.&nbsp;<a href="#fnref2">↩︎</a></p>
</li>
                    
    </ol>

            
            
<div>

    <hr>

    
        <div>

            <div><picture>
			
			<source media="(min-width: 575px)" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2021/10/20210827-D81_2273-200x200.jpg 1x, https://blog.datawrapper.de/wp-content/uploads/2021/10/20210827-D81_2273-400x400.jpg 2x">
            <source media="(min-width: 200px)" data-srcset="https://blog.datawrapper.de/wp-content/uploads/2021/10/20210827-D81_2273-100x100.jpg 1x, https://blog.datawrapper.de/wp-content/uploads/2021/10/20210827-D81_2273-200x200.jpg 2x">
            <img alt="Profile image of Lisa Muth of the Datawrapper team" data-src="https://blog.datawrapper.de/wp-content/uploads/2021/10/20210827-D81_2273-200x200.jpg" src="https://blog.datawrapper.de/wp-content/uploads/2021/10/20210827-D81_2273-200x200.jpg">
		</picture></div>

            <div>

                <p>Lisa Charlotte Muth</p>
                <p>(she/her, <a href="https://twitter.com/lisacmuth">@lisacmuth</a>, <a href="https://vis.social/@lisacmuth">@lisacmuth@vis.social</a>) is Datawrapper’s head of communications. She writes about best practices in data visualization and thinks of new ways to excite you about charts and maps. Lisa lives in Berlin.</p>

            </div>

        </div>
        

</div>




            
            
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Trial HIV Vaccine Triggered Elusive and Essential Antibodies in Humans (198 pts)]]></title>
            <link>https://corporate.dukehealth.org/news/trial-hiv-vaccine-triggered-elusive-and-essential-antibodies-humans</link>
            <guid>40390820</guid>
            <pubDate>Fri, 17 May 2024 15:15:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://corporate.dukehealth.org/news/trial-hiv-vaccine-triggered-elusive-and-essential-antibodies-humans">https://corporate.dukehealth.org/news/trial-hiv-vaccine-triggered-elusive-and-essential-antibodies-humans</a>, See on <a href="https://news.ycombinator.com/item?id=40390820">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <div>
    <div>
                                    <a href="https://www.youtube.com/watch?v=kdgLGwd7Tr8" data-lity="">
                        <span>
                                                    </span>
                                <p><img data-nmc-src="/sites/default/files/api/images/aspect:1.51-width:680-position:center/oembed_thumbnails/X6reDMepjJVKVG7FR07gqCsQTh8n7VWNe89lcw5Tfnk.jpg" alt="" src="https://corporate.dukehealth.org/sites/default/files/api/images/aspect:1.51-width:680-position:center/oembed_thumbnails/X6reDMepjJVKVG7FR07gqCsQTh8n7VWNe89lcw5Tfnk.jpg">
</p>
                                    </a>
                                            </div>
    <div>
                    <p><img data-nmc-src="/sites/default/files/api/images/aspect:1.51-width:680-position:center/oembed_thumbnails/X6reDMepjJVKVG7FR07gqCsQTh8n7VWNe89lcw5Tfnk.jpg" alt="" src="https://corporate.dukehealth.org/sites/default/files/api/images/aspect:1.51-width:680-position:center/oembed_thumbnails/X6reDMepjJVKVG7FR07gqCsQTh8n7VWNe89lcw5Tfnk.jpg">
</p>
            </div>
    
</div>

    
    <p><span>
    <h4>Contact</h4>
                        

            </span></p><p><span>DURHAM, N.C. – An HIV vaccine candidate developed at the&nbsp;</span><a href="https://dhvi.duke.edu/"><span>Duke Human Vaccine Institute</span></a><span> triggered low levels of an elusive type of broadly neutralizing HIV antibodies among a small group of people enrolled in a 2019 clinical trial.</span></p><p><span>The finding, reported May 17 in the journal Cell, not only provides proof that a vaccine can elicit these antibodies to fight diverse strains of HIV, but that it can also initiate the process within weeks, setting in motion an essential immune response.&nbsp;</span></p><p><span>The vaccine candidate targets an area on the HIV-1 outer envelope called the membrane proximal external region (MPER), which remains stable even as the virus mutates. Antibodies against this stable region in the HIV outer coat can block infection by many different circulating strains of HIV.</span></p><p><span>“This work is a major step forward as it shows the feasibility of inducing antibodies with immunizations that neutralize the most difficult strains of HIV,” said senior author&nbsp;</span><a href="https://medicine.duke.edu/profile/barton-ford-haynes"><span>Barton F. Haynes</span></a><span>, M.D., director of the Duke Human Vaccine Institute (DHVI). “Our next steps are to induce more potent neutralizing antibodies against other sites on HIV to prevent virus escape.&nbsp;We are not there yet, but the way forward is now much clearer.”</span></p><p><span>The research team analyzed data from a phase 1 clinical trial of a vaccine candidate developed by Haynes and S. Munir Alam, Ph.D., at DHVI.&nbsp;</span></p><p><span>Twenty healthy, HIV-negative people enrolled in the trial. Fifteen participants received two of four planned doses of the investigational vaccine, and five received three doses.&nbsp;</span></p><p><span>After just two immunizations, the vaccine had a 95% serum response rate and a 100% blood CD4+ T-cell response rate -- two key measurements that demonstrated strong immune activation. Most of the serum responses mapped to the portion of the virus targeted by the vaccine.</span></p><p><span>Importantly, broadly neutralizing antibodies were induced after just two doses.</span></p><p><span>The trial was halted when one participant experienced a non-life-threatening allergic reaction, similar to rare incidences reported with COVID-19 vaccinations. The team investigated the cause of the event, which was likely from an additive.</span></p><p><span>“To get a broadly neutralizing antibody, a series of events needs to happen, and it typically takes several years post-infection,” said lead author&nbsp;</span><a href="https://dhvi.duke.edu/profile/wilton-bryan-williams"><span>Wilton Williams</span></a><span>, Ph.D., associate professor in Duke’s&nbsp;</span><a href="https://surgery.duke.edu/"><span>Department of Surgery</span></a><span> and member of DHVI. “The challenge has always been to recreate the necessary events in a shorter space of time using a vaccine. It was very exciting to see that, with this vaccine molecule, we could actually get neutralizing antibodies to emerge within weeks.”</span></p><p><span>Other features of the vaccine were also promising, most notably how the crucial immune cells remained in a state of development that allowed them to continue acquiring mutations, so they could evolve along with the ever-changing virus.</span></p><p><span>The researchers said there is more work to be done to create a more robust response, and to target more regions of the virus envelope. A successful HIV vaccine will likely have at least three components, all aimed at distinct regions of the virus.</span></p><p><span>“Ultimately, we will need to hit all the sites on the envelope that are vulnerable so that the virus cannot escape,” Haynes said. ”But this study demonstrates that broadly neutralizing antibodies can indeed be induced in humans by vaccination. Now that we know that induction is possible, we can replicate what we have done here with immunogens that target the other vulnerable sites on the virus envelope.”</span></p><p><span>In addition to Haynes and Williams, study authors include S. Munir Alam, Gilad Ofek, Nathaniel Erdmann, David Montefiori, Michael S. Seaman, Kshitij Wagh, Bette Korber, Robert J. Edwards, Katayoun Mansouri, Amanda Eaton, Derek W. Cain, Mitchell Martin, Robert Parks, Maggie Barr, Andrew Foulger, Kara Anasti, Parth Patel, Salam Sammour, Ruth J. Parsons, Xiao Huang, Jared Lindenberger, Susan Fetics, Katarzyna Janowska, Aurelie Niyongabo, Benjamin M. Janus, Anagh Astavans, Christopher B. Fox, Ipsita Mohanty, Tyler Evangelous, Yue Chen, Madison Berry, Helene Kirshner, Elizabeth Van Itallie, Kevin Saunders, Kevin Wiehe, Kristen W. Cohen, M. Juliana McElrath, Lawrence Corey, Priyamvada Acharya, Stephen R. Walsh, and Lindsey R. Baden.</span></p><p><span>The study received funding support from the National Institute of Allergy and Infectious Diseases, part of the National Institutes of Health (AI100645, AI144371, AI170752), and from the Bill &amp; Melinda Gates Foundation (OPP1094352/INV-007688).</span></p><p><span>The content of this press release is solely the responsibility of DHVI and does not necessarily represent the official views of the National Institutes of Health.</span></p>


    

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bend: a high-level language that runs on GPUs (via HVM2) (681 pts)]]></title>
            <link>https://github.com/HigherOrderCO/Bend</link>
            <guid>40390287</guid>
            <pubDate>Fri, 17 May 2024 14:23:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/HigherOrderCO/Bend">https://github.com/HigherOrderCO/Bend</a>, See on <a href="https://news.ycombinator.com/item?id=40390287">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Bend</h2><a id="user-content-bend" aria-label="Permalink: Bend" href="#bend"></a></p>
<p dir="auto">Bend is a massively parallel, high-level programming language.</p>
<p dir="auto">Unlike low-level alternatives like CUDA and Metal, Bend has the feeling and
features of expressive languages like Python and Haskell, including fast object
allocations, higher-order functions with full closure support, unrestricted
recursion, even continuations. Yet, it runs on massively parallel hardware like
GPUs, with near-linear speedup based on core count, and zero explicit parallel
annotations: no thread spawning, no locks, mutexes, atomics. Bend is powered by
the <a href="https://github.com/HigherOrderCO/hvm">HVM2</a> runtime.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">A Quick Demo</h2><a id="user-content-a-quick-demo" aria-label="Permalink: A Quick Demo" href="#a-quick-demo"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/VictorTaelin/media/blob/main/bend_live_demo.gif?raw=true"><img src="https://github.com/VictorTaelin/media/raw/main/bend_live_demo.gif?raw=true" alt="Bend live demo" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Using Bend</h2><a id="user-content-using-bend" aria-label="Permalink: Using Bend" href="#using-bend"></a></p>
<blockquote>
<p dir="auto">Currently not working on Windows, please use <a href="https://learn.microsoft.com/en-us/windows/wsl/install" rel="nofollow">WSL2</a> as a workaround.</p>
</blockquote>
<p dir="auto">First, install <a href="https://www.oreilly.com/library/view/rust-programming-by/9781788390637/e07dc768-de29-482e-804b-0274b4bef418.xhtml" rel="nofollow">Rust nightly</a>. Then, install both HVM2 and Bend with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cargo +nightly install hvm
cargo +nightly install bend-lang"><pre>cargo +nightly install hvm
cargo +nightly install bend-lang</pre></div>
<p dir="auto">Finally, write some Bend file, and run it with one of these commands:</p>
<div dir="auto" data-snippet-clipboard-copy-content="bend run    <file.hvm> # uses the Rust interpreter (sequential)
bend run-c  <file.hvm> # uses the C interpreter (parallel)
bend run-cu <file.hvm> # uses the CUDA interpreter (massively parallel)"><pre>bend run    <span>&lt;</span>file.hvm<span>&gt;</span> <span><span>#</span> uses the Rust interpreter (sequential)</span>
bend run-c  <span>&lt;</span>file.hvm<span>&gt;</span> <span><span>#</span> uses the C interpreter (parallel)</span>
bend run-cu <span>&lt;</span>file.hvm<span>&gt;</span> <span><span>#</span> uses the CUDA interpreter (massively parallel)</span></pre></div>
<p dir="auto">You can also compile <code>Bend</code> to standalone C/CUDA files with <code>gen-c</code> and
<code>gen-cu</code>, for maximum performance. But keep in mind our code gen is still on its
infancy, and is nowhere as mature as SOTA compilers like GCC and GHC.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Parallel Programming in Bend</h2><a id="user-content-parallel-programming-in-bend" aria-label="Permalink: Parallel Programming in Bend" href="#parallel-programming-in-bend"></a></p>
<p dir="auto">To write parallel programs in Bend, all you have to do is... <strong>nothing</strong>. Other
than not making it <em>inherently sequential</em>! For example, the expression:</p>

<p dir="auto">Can <strong>not</strong> run in parallel, because <code>+4</code> depends on <code>+3</code> which
depends on <code>(1+2)</code>. But the following expression:</p>

<p dir="auto">Can run in parallel, because <code>(1+2)</code> and <code>(3+4)</code> are independent; and it <em>will</em>,
per Bend's fundamental pledge:</p>
<blockquote>
<p dir="auto">Everything that <strong>can</strong> run in parallel, <strong>will</strong> run in parallel.</p>
</blockquote>
<p dir="auto">For a more complete example, consider:</p>
<div dir="auto" data-snippet-clipboard-copy-content="def sum(depth, x):
  switch depth:
    case 0:
      return x
    case _:
      fst = sum(depth-1, x*2+0) # adds the fst half
      snd = sum(depth-1, x*2+1) # adds the snd half
      return fst + snd
    
def main:
  return sum(30, 0)"><pre><span>def</span> <span>sum</span>(<span>depth</span>, <span>x</span>):
  <span>switch</span> <span>depth</span>:
    <span>case</span> <span>0</span>:
      <span>return</span> <span>x</span>
    <span>case</span> <span>_</span>:
      <span>fst</span> <span>=</span> <span>sum</span>(<span>depth</span><span>-</span><span>1</span>, <span>x</span><span>*</span><span>2</span><span>+</span><span>0</span>) <span># adds the fst half</span>
      <span>snd</span> <span>=</span> <span>sum</span>(<span>depth</span><span>-</span><span>1</span>, <span>x</span><span>*</span><span>2</span><span>+</span><span>1</span>) <span># adds the snd half</span>
      <span>return</span> <span>fst</span> <span>+</span> <span>snd</span>
    
<span>def</span> <span>main</span>:
  <span>return</span> <span>sum</span>(<span>30</span>, <span>0</span>)</pre></div>
<p dir="auto">This code adds all numbers from 0 up to (but not including) 2^30. But, instead
of a loop, we use a recursive divide-and-conquer approach. Since this approach
is <em>inherently parallel</em>, Bend will run it multi-threaded. Some benchmarks:</p>
<ul dir="auto">
<li>
<p dir="auto">CPU, Apple M3 Max, 1 thread: <strong>3.5 minutes</strong></p>
</li>
<li>
<p dir="auto">CPU, Apple M3 Max, 16 threads: <strong>10.26 seconds</strong></p>
</li>
<li>
<p dir="auto">GPU, NVIDIA RTX 4090, 32k threads: <strong>1.88 seconds</strong></p>
</li>
</ul>
<p dir="auto">That's a <strong>111x speedup</strong> by doing nothing. No thread spawning, no explicit
management of locks, mutexes. We just asked bend to run our program on RTX, and
it did. Simple as that. (Note that, for now, Bend only supports 24-bit machine
ints (<code>u24</code>), thus, results are always <code>mod 2^24</code>. We plan to 64-bit numbers on
the upcoming weeks.)</p>
<p dir="auto">Bend isn't limited to a specific paradigm, like tensors or matrices. Any
concurrent system, from shaders to Erlang-like actor models can be emulated on
Bend. For example, to render images in real time, we could simply allocate an
immutable tree on each frame:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# given a shader, returns a square image
def render(depth, shader):
  bend d = 0, i = 0:
    when d < depth:
      color = (fork(d+1, i*2+0), fork(d+1, i*2+1))
    else:
      width = depth / 2
      color = demo_shader(i % width, i / width)
  return color

# given a position, returns a color
# for this demo, it just busy loops
def demo_shader(x, y):
  bend i = 0:
    when i < 5000:
      color = fork(i + 1)
    else:
      color = 0x000001
  return color

# renders a 256x256 image using demo_shader
def main:
  return render(16, demo_shader)"><pre><span># given a shader, returns a square image</span>
<span>def</span> <span>render</span>(<span>depth</span>, <span>shader</span>):
  <span>bend</span> <span>d</span> <span>=</span> <span>0</span>, <span>i</span> <span>=</span> <span>0</span>:
    <span>when</span> <span>d</span> <span>&lt;</span> <span>depth</span>:
      <span>color</span> <span>=</span> (<span>fork</span>(<span>d</span><span>+</span><span>1</span>, <span>i</span><span>*</span><span>2</span><span>+</span><span>0</span>), <span>fork</span>(<span>d</span><span>+</span><span>1</span>, <span>i</span><span>*</span><span>2</span><span>+</span><span>1</span>))
    <span>else</span>:
      <span>width</span> <span>=</span> <span>depth</span> <span>/</span> <span>2</span>
      <span>color</span> <span>=</span> <span>demo_shader</span>(<span>i</span> <span>%</span> <span>width</span>, <span>i</span> <span>/</span> <span>width</span>)
  <span>return</span> <span>color</span>

<span># given a position, returns a color</span>
<span># for this demo, it just busy loops</span>
<span>def</span> <span>demo_shader</span>(<span>x</span>, <span>y</span>):
  <span>bend</span> <span>i</span> <span>=</span> <span>0</span>:
    <span>when</span> <span>i</span> <span>&lt;</span> <span>5000</span>:
      <span>color</span> <span>=</span> <span>fork</span>(<span>i</span> <span>+</span> <span>1</span>)
    <span>else</span>:
      <span>color</span> <span>=</span> <span>0x000001</span>
  <span>return</span> <span>color</span>

<span># renders a 256x256 image using demo_shader</span>
<span>def</span> <span>main</span>:
  <span>return</span> <span>render</span>(<span>16</span>, <span>demo_shader</span>)</pre></div>
<p dir="auto">And it would actually work. Even involved algorithms, such as a <a href="https://github.com/HigherOrderCO/Bend/blob/main/examples/bitonic_sort.bend">Bitonic Sort
using tree rotations</a>, parallelize well on Bend.
Long-distance communication is performed by <em>global beta-reduction</em> (as per the
<a href="https://github.com/VictorTaelin/Interaction-Calculus">Interaction Calculus</a>),
and synchronized correctly and efficiently by
<a href="https://github.com/HigherOrderCO/HVM">HVM2</a>'s <em>atomic linker</em>.</p>
<ul dir="auto">
<li>
<p dir="auto">To jump straight into action, check Bend's <a href="https://github.com/HigherOrderCO/bend/blob/main/GUIDE.md">GUIDE.md</a>.</p>
</li>
<li>
<p dir="auto">For an extensive list of features, check <a href="https://github.com/HigherOrderCO/bend/blob/main/FEATURES.md">FEATURES.md</a>.</p>
</li>
<li>
<p dir="auto">To understand the tech behind Bend, check HVM2's <a href="https://paper.higherorderco.com/" rel="nofollow">paper</a>.</p>
</li>
<li>
<p dir="auto">Bend is developed by <a href="https://higherorderco.com/" rel="nofollow">HigherOrderCO.com</a> - join our <a href="https://discord.higherorderco.com/" rel="nofollow">Discord</a>!</p>
</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[BIMI and DMARC Can't Save You: The Overlooked DKIM Exploit (116 pts)]]></title>
            <link>https://www.zone.eu/blog/2024/05/17/bimi-and-dmarc-cant-save-you/</link>
            <guid>40389753</guid>
            <pubDate>Fri, 17 May 2024 13:42:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.zone.eu/blog/2024/05/17/bimi-and-dmarc-cant-save-you/">https://www.zone.eu/blog/2024/05/17/bimi-and-dmarc-cant-save-you/</a>, See on <a href="https://news.ycombinator.com/item?id=40389753">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><strong>Analysts at Zone.eu, one of the leading domain registrars and web hosting providers in Europe, have observed a vulnerability affecting the global e-mail ecosystem, stemming from unaddressed warnings in the DomainKeys Identified Mail (DKIM) standard that puts billions of users in risk.</strong></p>



<p>This is not an issue in a particular software product but rather a vulnerability resulting from loose interpretations of the standard across numerous implementations that span the vast e-mail ecosystem.</p>



<p>Using this vulnerability, attackers can create forged emails that still pass DKIM’s cryptographic checks that can then be easily replayed to reach the intended victim. These bogus emails are likely to also pass DMARC (Domain-based Message Authentication Reporting and Conformance) policies. Significant amount of organisations worldwide expect DMARC to prevent certain types of phishing attacks both against themselves but also against their recipients.</p>



<p>The severity of this problem has significantly increased with the advent of BIMI (Brand Indicators for Message Identification). BIMI depends on DMARC to verify the authenticity of messages. As a result, if the message passes all these checks, some email services like for example Apple Mail and Gmail will display a brand logo, but this time next to a forged email. Users are instructed by the UI to trust BIMI-branded e-mails, making these modified letters especially legitimate-looking and trustworthy.</p>



<p>BIMI in Gmail and Apple Mail:<br><img fetchpriority="high" decoding="async" width="840" height="120" src="https://www.zone.eu/static/sites/2/2024/05/BIMI-examples1715952591.jpg" alt="" srcset="https://www.zone.eu/static/sites/2/2024/05/BIMI-examples1715952591.jpg 1355w, https://www.zone.eu/static/sites/2/2024/05/BIMI-examples1715952591-300x43.jpg 300w, https://www.zone.eu/static/sites/2/2024/05/BIMI-examples1715952591-1024x147.jpg 1024w, https://www.zone.eu/static/sites/2/2024/05/BIMI-examples1715952591-768x110.jpg 768w" sizes="(max-width: 840px) 100vw, 840px"></p>



<p>We have confirmed that these attacks are usable in practice by modifying DKIM-signed email messages sent by multiple Fortune 500 companies (among others), for whom email integrity is essential. The forged emails arrived in the victims’ inboxes without any difficulty until recently. Though considering the size of the ecosystem this weakness will linger for a while.</p>



<p>The importance of this issue must be recognized even if a sender or receiver has not implemented BIMI. This is a problem with DKIM, as these forgeries pass DKIM and DMARC. If phishing campaigns take advantage of this vulnerability, it can lead to a global increase in the risk of credentials and data being stolen. Hardening DKIM implementations against such attacks is critical on its own.</p>



<div>
<p>Google’s comment about this issue:</p>



<blockquote>
<p>“The risks identified in this research show why the DKIM length feature is not supported for Gmail senders. Given how interconnected the email ecosystem is, we encourage all email providers to follow this approach. We thank the researchers for drawing attention to this important issue.”</p>
</blockquote>
</div>


<h2 id="h-technical-synopsis">Technical synopsis</h2>


<p>The DKIM standard (RFC 6376) specifies a parameter for defining e-mail body length (“l=”); this tag informs the verifier of an e-mail message of the number of octets in the body of the received e-mail.</p>



<p>The risks of using the body length limit (“l=” tag) have been known at least since the DKIM standard was published (see <a href="https://datatracker.ietf.org/doc/html/rfc6376#section-8.2">RFC 6376 section 8.2</a>), but the described security considerations are incomplete as it looks at the “l=” tag in isolation. Our approach is to find letters that have signatures with the “l=” tag and then to either modify an existing Content-Type header or to add a new one to then replace the displayed content.</p>



<p>In our tests, many senders that use the “l=” tag do not sign the Content-Type header, allowing the attacker to replace it with a specially crafted value without breaking the signature. Unfortunately even if the header is signed, it is usually not over-signed/double-signed to protect against adding an additional (unsigned) Content-Type header to the letter. How to handle multiple Content-Type headers in a single email message is not well-defined, and as such, implementations and resulting dangers differ.</p>



<p>Our approach to exploiting this weakness is replacing the boundary value in the Content-Type header in MIME multipart emails and adding a new MIME structure that uses the modified boundary at the end of the email. Such modification renders the existing MIME structure into a non-visible comment and forces the email client to treat the added structure as the “real” email content. This results in a larger impact and differs from other previously described approaches.</p>



<p>Simplified illustration of the described attack:</p>



<p><br><img decoding="async" width="840" height="316" src="https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1.webp" alt="" srcset="https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1.webp 2047w, https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1-300x113.webp 300w, https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1-1024x385.webp 1024w, https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1-768x289.webp 768w, https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1-1536x578.webp 1536w, https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1-1264x476.webp 1264w, https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1-900x340.webp 900w, https://www.zone.eu/static/sites/2/2024/05/dkim-blogpost-1-600x226.webp 600w" sizes="(max-width: 840px) 100vw, 840px"></p>



<p>Original email content (with annotations):</p>



<div>
<pre title="Original email content (with annotations)"><code>DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=domain.com; l=1234; s=test;
  h=date:from:to:message-id:subject:mime-version; &lt;-- Content-Type not signed
  bh=kDDbMi...; b=K8S4Yk2XjoIvBh...
Content-Type: multipart/mixed; boundary="abc"

&lt;&lt;&lt;Multipart Comment start
This is a multi-part message
&gt;&gt;&gt;Multipart Comment end

--abc
Message MIME structure
--abc--[1234 byte cutoff]</code></pre>
</div>



<div>
<p>Modified email content (with annotations):</p>



<div>
<pre title="Modified email content (with annotations)"><code>DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=domain.com; l=1234; s=test;
  h=date:from:to:message-id:subject:mime-version;
  bh=kDDbMi...; b=K8S4Yk2XjoIvBh...
Content-Type: multipart/mixed; boundary="abc--" &lt;-- modified boundary

[Multipart Comment start]
This is a multi-part message

--abc
Message MIME structure
[Multipart Comment end]
--abc--[1234 byte cutoff]

Faked message MIME structure

--abc----</code></pre>
</div>
</div>



<p>It should be noted that the first line in this forged MIME structure is still signed, which would bypass simple checks against displaying unsigned content. Such an email still of course passes the signature check, but the client uses the appended MIME structure as the email content, completely ignoring the original content.</p>



<p>If the Content-Type header is part of the DKIM signature, adding an additional Content-Type still enables the vulnerability with many email clients.</p>



<p>Modified email content:</p>



<div>
<pre title="Modified email content"><code>DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=domain.com; l=1234; s=test;
  h=date:from:to:message-id:subject:mime-version:content-type;
  bh=kDDbMi...; b=K8S4Yk2XjoIvBh...
Content-Type: multipart/mixed; boundary="def" &lt;-- prepended boundary
Content-Type: multipart/mixed; boundary="abc"</code></pre>
</div>



<p>The signature validation passes as only the bottom Content-Type value will be included in the signature. Still, the email client might use the topmost value when parsing the MIME structure, making the attack viable.</p>



<p>To mitigate this, the Content-Type header should be protected in the signature (must be added twice to the “h=” tag)</p>



<div>
<pre><code>  h=date:from:to:message-id:subject:mime-version:content-type:content-type;</code></pre>
</div>



<p>In this case, any additional Content-Type header added to the message would invalidate the DKIM signature. This does make the signature more fragile, but if the “l=” tag is to be used, this is better than alternatives.</p>





<p>This is not the first time someone has drawn attention to issues like these, but it has gotten significantly more serious. Similar attacks have been previously described by Stephen Ullrich (<a href="https://noxxi.de/research/breaking-dkim-on-purpose-and-by-chance.html">“Breaking DKIM – on Purpose and by Chance”</a>), and the team at Valimail (<a href="https://www.valimail.com/blog/breaking-dkim-or-simply-misunderstanding-how-it-works-in-practice/">“DKIM Fallacies: Debunking Rumors of DKIM’s Vulnerabilities”</a>). This issue can also probably be combined with other “reskin” attacks such as <a href="https://lutrasecurity.com/en/articles/kobold-letters/">Kobold letters</a>, making such malleability even more dangerous.</p>



<p>The issues with DKIM signatures do not end here. We have observed senders that only sign the first byte in the body with “l=1” (like for example Maropost), which is dangerous on its own. This is also one more reason DKIM assessors should ignore signatures using the “l=” tag.</p>



<p>The oldest malleable letter we have found (that still has the corresponding public key published) is from 2014 and was sent by Microsoft, in addition to the “l=” tag it also uses SHA1. Keys that have been used for RSA-SHA1 signatures should be discarded and the corresponding public keys removed from DNS. This further highlights the issues with extremely long-lived key material.</p>



<p>Unfortunately it’s not the only problem with old key material. A fair amount of senders still use poorly generated or weak 512-bit RSA keys. As desribed by Hanno Böck (<a href="https://16years.secvuln.info/">“16 years of CVE-2008-0166 – Debian OpenSSL Bug”</a>), 0.24% of Tranco’s Top 1 Million list still have weak Debian keys published, which is quite dangerous.</p>


<h2 id="h-practical-examples-and-impact">Practical examples and impact</h2>


<p>Analyzing our email traffic we’ve found multiple prominent examples such as tesla.com, trendmicro.com, bloomberg.net, dell.com, cisco.com, ups.com, dhl.com, ebay.com, panasonic.com, whirlpool.com, hilton.com, norton.com, avast.com, radissonhotels.com that have all sent malleable letters. We would say they’re valuable targets for making forgeries.</p>



<p>So far we have observed millions of DKIM signatures with the length tag, from 3040 different domains, of which 32 pass BIMI checks and have a valid VMC. This contradicts Valimail’s claim that “almost no senders today use the attribute.”</p>



<p>Modified DHL letters (screenshots from Gmail):<br><img loading="lazy" decoding="async" width="840" height="472" src="https://www.zone.eu/static/sites/2/2024/05/BIMI-malicious1715952648.jpg" alt="" srcset="https://www.zone.eu/static/sites/2/2024/05/BIMI-malicious1715952648.jpg 879w, https://www.zone.eu/static/sites/2/2024/05/BIMI-malicious1715952648-300x169.jpg 300w, https://www.zone.eu/static/sites/2/2024/05/BIMI-malicious1715952648-768x432.jpg 768w" sizes="(max-width: 840px) 100vw, 840px"></p>


<h2 id="h-mitigation">Mitigation</h2>


<p>The key to fixing this vulnerability and avoiding these attacks is already present in the DKIM standard section under “Security Considerations”: <a href="https://datatracker.ietf.org/doc/html/rfc6376#section-8.2">8.2. Misuse of Body Length Limits (“l=” Tag)</a>.</p>



<p>We quote: “To avoid this attack, Signers should be extremely wary of using this tag, and Assessors might wish to ignore signatures that use the tag.” This suggestion must be strictly interpreted, definitely more so than the current wording suggests. Initially at least in the context of BIMI, but ideally it should be completely ignored.</p>



<p>At the same time assessors should currently start rejecting letters with old DKIM signatures in order to mitigate misuse of old signatures, be it this attack or any similar ones. This should however be a temporary solution until the length tag and weak signatures (SHA1-RSA or ≤1024-bit keys) can be completely deprecated and ignored.</p>



<p>E-mail senders, especially those who have used the “l=” tag, should rotate their DKIM keys periodically. If this is not done, old e-mails containing the “l=” tag can still be used to create new forgeries. There are more reasons to rotate DKIM keys than just this vulnerability.</p>


<h2 id="timeline">Timeline</h2>


<ul>
<li>2024-01-26 – Apple and Google was informed about the problem</li>



<li>2024-01-31 – CERT-EE was informed about the problem</li>



<li>2024-02-02 – Microsoft was informed about the problem</li>



<li>2024-02-08 – Google has confirmed the problem exists</li>



<li>2024-03-05 – Apple has confirmed that they’re planning on addressing the issue</li>



<li>2024-03-07 – Google has confirmed the problem will be fixed</li>



<li>2024-03-21 – Microsoft does not consider this an issue</li>



<li>2024-04-05 – Google seems to have implemented mitigations against this problem</li>



<li>2024-05-07 – Google proposes public disclosure on the 17th of May</li>
</ul>





<p><strong>This issue was observed by Zone.eu analysts Silver Asu (silver@zone.eu) and Andris Reinman (andris@zone.eu). Taavi Eomäe (taavi@zone.eu) coordinated the disclosure between parties alongside CERT-EE (cert@cert.ee). We thank everyone, including Apple and Google, who collaborated with us in mitigating this issue.</strong></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Beekeeper furious over destruction of $2M honey crop (158 pts)]]></title>
            <link>https://www.rnz.co.nz/news/business/516930/beekeeper-steven-brown-furious-over-destruction-of-2m-honey-crop</link>
            <guid>40389548</guid>
            <pubDate>Fri, 17 May 2024 13:18:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.rnz.co.nz/news/business/516930/beekeeper-steven-brown-furious-over-destruction-of-2m-honey-crop">https://www.rnz.co.nz/news/business/516930/beekeeper-steven-brown-furious-over-destruction-of-2m-honey-crop</a>, See on <a href="https://news.ycombinator.com/item?id=40389548">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
<div itemscope="" itemtype="http://schema.org/ImageObject">
<p><img loading="lazy" src="https://media.rnztools.nz/rnz/image/upload/s--wi-55uaW--/ar_16:10,c_fill,f_auto,g_auto,q_auto,w_1050/v1715797082/4KQ3RU0_bees4_jpg" width="1050" height="550" alt="Beekeeper Steven Brown - Springbank Honey hives destroyed cos of American Foulbrood"></p><p>
<span itemprop="caption">Honey producer Steven Brown watches boxes of honey burn. </span>
<span>Photo: <span itemprop="copyrightHolder">Facebook / Steven Brown</span></span>
</p>
</div>
<p>Beekeepers say New Zealand needs a new approach to a hive-destroying disease that is leaving those affected out of pocket, uncompensated and devastated.</p>
<p>Honey producer Springbank Honey of North Canterbury was ordered to burn more than 10,000 of its beehives and beekeeping equipment after American Foulbrood (AFB) was identified through spore testing.</p>
<p>AFB is a bacterial disease spread by spores that could be viable for up to 40 years. It is considered one of the <a href="https://www.rnz.co.nz/news/country/483881/increase-in-disease-for-beehives-concerning-as-more-than-3000-destroyed-in-one-year">most widespread and destructive honey bee brood diseases</a> in the world.</p>
<p>The family-owned honey business, operating near Rangiora in North Canterbury, runs 3000 organic beehives and processes honey too.</p>
<p>Co-owner Steven Brown said burning thousands of beehives over Mother's Day weekend had left the family "devastated".</p>
<p>"By next year, when we don't have boxes for our honey crop, we're probably going to be losing over $5-6 million," Brown said.</p>
<p>"The loss of the boxes is one thing, but without the boxes for the hives we won't have a honey crop."</p>


<p>Brown said it would cost around $2 million to replace it all, made more difficult by the fact that there was no compensation or insurance available for beekeepers.</p>
<p>Burning the hives was more painful when other countries used tools like vaccines, antibiotics and sterilisation - measures prohibited in New Zealand and in some export markets.</p>
<p>"Most farmers vaccinate their cows for diseases every single year, but it's illegal to vaccinate the hive," Brown said.</p>
<p>"I don't understand why we have our heads in the sand and live like it's 200 years ago without these amazing abilities of giving a vaccine and stopping disease; instead we burn things."</p>
<div itemscope="" itemtype="http://schema.org/ImageObject">
<p><img loading="lazy" src="https://media.rnztools.nz/rnz/image/upload/s--uMzaQteX--/ar_16:10,c_fill,f_auto,g_auto,q_auto,w_1050/v1715797082/4KQ3RU0_bees1_jpg" width="1050" height="1312" alt="Beekeeper Steven Brown's hives"></p><p>
<span itemprop="caption"> </span>
<span>Photo: <span itemprop="copyrightHolder">Facebook / Steven Brown</span></span>
</p>
</div>
<p>The order to destroy the hives by fire came from the levy-run management agency that enforces the national pest management plan rules, including auditing beekeepers, monitoring for the disease and eliminating it.</p>
<p>Brown said the new government needed to "shut down immediately" the outdated pest management plan and the agency.</p>
<p>"The plan was supposed to reduce AFB by 5 percent per year, they haven't complied with that. It's gone rampant throughout New Zealand," he said.</p>
<p>"I want the Biosecurity Act changed, but the one we're operating under, the pest management plan, the [Biosecurity] Minister needs to stop that immediately."</p>
<div itemscope="" itemtype="http://schema.org/ImageObject">
<p><img loading="lazy" src="https://media.rnztools.nz/rnz/image/upload/s--HipuqcWp--/ar_16:10,c_fill,f_auto,g_auto,q_auto,w_1050/v1715797082/4KQ3RU0_bees2_jpg" width="1050" height="1312" alt="Beekeeper Steven Brown's hives"></p><p>
<span itemprop="caption">More boxes are added to the bonfire. </span>
<span>Photo: <span itemprop="copyrightHolder">Facebook / Steven Brown</span></span>
</p>
</div>
<h3>Agency aims for support</h3>
<p>But the management agency's general manager, Niha Long said it aimed to support beekeepers impacted by the disease.</p>
<p>She acknowledged how "upsetting" it would be for social media users to view the burning beehives - but burning was the only method at hand.</p>
<p>"The only way to destroy the spores is through burning, so we cannot use antibiotics unlike other countries in the world due to market access," Long said.</p>
<p>She said the agency was not there to make beekeepers' operations harder.</p>
<p>"We acknowledge that it is a significant impact on the beekeeper, but we're not here - contrary to popular belief - to make a beekeeper's life difficult," she said.</p>
<p>"We're here to work with the beekeeper and that is the nature of the relationship we've attempted to have with this beekeeper [Springbank Honey].</p>
<p>"AFB will happen if you're a beekeeper, at some point in your journey, and getting AFB is not the problem - what can be a problem for us is the beekeepers's action or inaction after you've found it."</p>
<div itemscope="" itemtype="http://schema.org/ImageObject">
<p><img loading="lazy" src="https://media.rnztools.nz/rnz/image/upload/s--IjU0-JU6--/ar_16:10,c_fill,f_auto,g_auto,q_auto,w_1050/v1715797083/4KQ3RU0_bees3_jpg" width="1050" height="1312" alt="Springbank Honey hives destroyed - due to American Foulbrood . Beekeeper Steven Brown"></p><p>
<span itemprop="caption"> </span>
<span>Photo: <span itemprop="copyrightHolder">Facebook / Steven Brown</span></span>
</p>
</div>
<p>She said the law and the pest management plan put legal obligations on its registered, levy-paying beekeepers.</p>
<p>"It dictates each beekeeper's responsibility for eliminating AFB, so I'd like to emphasise that that is each beekeeper's responsibility through a set of legal obligations."</p>
<p>Long said fewer than eight percent of the country's 8000 beekeepers were currently affected - and there were 2900 reports of AFB made in the past year to May, down 15 percent on the 3449 reports the year before.</p>


<h3>NZ 'pretty much alone'</h3>
<p>NZ Beekeeping Incorporated president Jane Lorimer said New Zealand was "pretty much alone" in the response to burn hives and equipment on positive spore tests.</p>
<p>But she said beekeepers generally still followed the rules.</p>
<p>"Beekeepers have to notify and then destroy hives within seven days after finding the disease - and most beekeepers, including Steve, usually comply with that regulation.</p>
<p>"We're going to seek some clarification around the Biosecurity Act and the Pest Management plan and how the two legal aspects integrate."</p>
<p>It was seeking clarification around how the Biosecurity Act and the pest management plans' legal aspects integrated.</p>
<p>She said the government review into the legislation was an opportunity to improve transparency for the sector.</p>
<p>"We hope that the Minister will take into consideration our suggestions [in the review] and make changes accordingly. Part of that is an appeal process as well, there's nothing within the order in council about appealing what's happening when a beekeeper's asked to destroy equipment they've found spores in.</p>
<p>"This isn't the first case where beekeepers had been told to destroy beekeeping equipment that they'd found spores in."</p>
<p>Lorimer said it was <a href="https://www.rnz.co.nz/news/country/509715/beekeepers-deliver-stinging-response-to-apiculture-nz-plan">a difficult time for the industry</a>, and the number of commercial beehives had halved in the past two years.</p>



    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Toon3D: Seeing Cartoons from a New Perspective (344 pts)]]></title>
            <link>https://toon3d.studio/</link>
            <guid>40389445</guid>
            <pubDate>Fri, 17 May 2024 13:04:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://toon3d.studio/">https://toon3d.studio/</a>, See on <a href="https://news.ycombinator.com/item?id=40389445">Hacker News</a></p>
<div id="readability-page-1" class="page">

  


  <div>
            
            

            <p><span>* Equal contribution,</span>
              <span><sup>1</sup><a href="https://www.teton.ai/">Teton.ai</a>,</span>
              <span><sup>2</sup>UC Berkeley</span>
            </p>

            
          </div>

  <div>
        <h2>
          <b>TLDR</b><br><i>Humans can perceive 3D world from images that aren't 3D consistent, but why can't
            machines?</i><br>COLMAP cannot reconstruct non-geometric hand-drawn images even with perfect
          correspondences!<br><span>Toon3D</span> can recover camera poses and dense geometry
          with piecewise-rigid deformable optimization.<br>
        </h2>
        <p><img src="https://toon3d.studio/static/images/teaser.png">
      </p></div>


  <div>
          <p>
            <!-- We run <span class="my-method-name">Toon3D</span> on 12 popular cartoon scenes. -->
            <!-- We
            align backprojected monocular depth predictions with a piecewise-rigid deformation at 3D keypoints. We refine
            the aligned
            point clouds with Gaussian optimization. These scenes have sparse viewpoints as input,
            ranging from only 4 to as many as 12 hand-drawn images. Press the button to move the cameras between two
            viewpoints! -->
            Hand-drawn scenes are not 3D consistent, so we create <span>Toon3D</span> to recover
            camera poses and dense geometry! We do this with a piecewise-rigid deformation optimization at hand-labeled
            keypoints and using monocular depth as a prior. Now we can interpolate novel views never before seen! Press
            the button to move the cameras between two
            viewpoints! <i>Note that we reconstruct the scenes with more than two hand-drawn images, but this demo shows
              a smooth transition between just two of the inputs views.</i>
          </p>
          </div>
  


  <div>
          <h2>Abstract</h2>
          <p>
              We propose <span>Toon3D</span>. In this work, we recover the underlying 3D
              structure of non-geometrically consistent scenes. We focus our analysis on hand-drawn images from cartoons
              and anime. Many cartoons are created by artists without a 3D rendering engine, which means that any new
              image of a scene is hand-drawn. The hand-drawn images are usually faithful representations of the world,
              but only in a qualitative sense, since it is difficult for humans to draw multiple perspectives of an
              object or scene 3D consistently. Nevertheless, people can easily perceive 3D scenes from inconsistent
              inputs! In this work, we correct for 2D drawing inconsistencies to recover a plausible 3D structure such
              that the newly warped drawings are consistent with each other. Our pipeline consists of a user-friendly
              annotation tool, camera pose estimation, and image deformation to recover a dense structure. Our method
              warps images to obey a perspective camera model, enabling our aligned results to be plugged into
              novel-view synthesis reconstruction methods to experience cartoons from viewpoints never drawn before.
            </p>
        </div>

  <div>
      <!-- Abstract. -->
      <div>
          <h2>Cartoon Reconstruction</h2>
          <p>
              (Left) We first recover camera poses and aligned point clouds. (Right) Then we initialize Gaussians from
              our dense point
              cloud and optimize Gaussian Splatting with the recovered
              cameras. Our method has depth regularization and is built on <a href="https://docs.nerf.studio/">Nerfstudio</a>. Here we show fly-through renders of our scenes.
          </p>
          <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
            <source src="https://toon3d.studio/static/assets/bobs-burgers-side-by-side.mp4" type="video/mp4">
          </video>
        </div>
      <div>
        <div>
          <p>Here is the gallery of all our scenes. Can you guess which is which? Click to reveal names.</p>
          </div>
        <div id="results-carousel">
          <p>
            <h4>Bob's Burgers
            </h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/bobs-burgers.mp4" type="video/mp4">
            </video>
            <h4>Family Guy</h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/family-guy-house.mp4" type="video/mp4">
            </video>
          </p>
          <p>
            <h4>SpongeBob
              SquarePants</h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/krusty-krab.mp4" type="video/mp4">
            </video>
            <br>
            <h4>Rick and Morty
            </h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/smith-residence.mp4" type="video/mp4">
            </video>
          </p>
          <p>
            <h4>Simpsons</h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/simpsons-house.mp4" type="video/mp4">
            </video>
            <br>
            <h4>Spirited Away
            </h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/spirited-away.mp4" type="video/mp4">
            </video>
          </p>
          <p>
            <h4>Futurama</h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/planet-express.mp4" type="video/mp4">
            </video>
            <br>
            <h4>Family Guy</h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/family-guy-dining.mp4" type="video/mp4">
            </video>
          </p>
          <p>
            <h4>Avatar</h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/avatar-house.mp4" type="video/mp4">
            </video>
            <br>
            <h4>BoJack Horseman
            </h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/bojack-room.mp4" type="video/mp4">
            </video>
          </p>
          <p>
            <h4>Magic School Bus
            </h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/magic-school-bus.mp4" type="video/mp4">
            </video>
            <br>
            <h4>Scooby-Doo</h4>
            <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
              <source src="https://toon3d.studio/static/assets/mystery-machine.mp4" type="video/mp4">
            </video>
          </p>
        </div>
      </div>
    </div>

  <div>
      <div>
          <h2>Method</h2>
          <p>
              We first predict the depth of each image with <a href="https://github.com/prs-eth/Marigold">Marigold</a>
              and obtain candidate transient masks with <a href="https://segment-anything.com/">SAM</a>. We then label
              images with the <span>Toon3D
                Labeler</span> to obtain correspondences and mark transient regions. We optimize camera poses and warp
              images to obtain calibrated, perspective cameras. Finally, we can initialize Gaussians with the aligned
              dense point cloud and run refinement.
            </p>
        </div>
      <div>
        <div>
          <h4>Overview</h4>
          <div>
            <p><img src="https://toon3d.studio/static/images/method.png">
            </p>
          </div>
        </div>
        <div>
          <h4>Toon3D Labeler</h4>
          
        </div>
      </div>
      <p>Here you can see the two major steps of our method. The sparse alignment video shows rough camera parameter
          estimation. The dense alignment video shows various layers used in the method (e.g., cameras, sparse
          correspondences, warping meshes, etc.) and how they align in 3D.</p>
      <!-- Columns container -->
      <div>
        <div>
          <h4>Sparse Alignment</h4>
          
        </div>
        <div>
          <h4>Dense Alignment</h4>
          
        </div>
      </div>
    </div>


  <div>
          <h2>Explore Inside Rick and Morty's House</h2>
          <p>We reconstruct inside the Rick and Morty house by labeling between walls and ceilings to connect the
              rooms. In the first video, we show the point cloud &amp; cameras and our custom labeling interface. In the
              second video, you can scrub the slider to
              see a walkthrough inside the house! The closest camera's image is shown in the bottom right corner.</p>
          <!-- Columns container -->
          
        </div>

  <div>
      <div>
          <h2>Point Clouds and Cameras</h2>
          <p>
              Here we show point clouds and recovered cameras for the 12 cartoon scenes in the <span>Toon3D Dataset</span>. Click the icons to explore our scenes!
            </p>
        </div>
      <div>

            <p>
              Click a scene icon to start!
            </p>

            
            

            

            

          </div>
    </div>


  <div>
          <h2>Sparse-View Reconstruction</h2>
          <p>
              We can reconstruct scenes from few images and with large
              viewpoint changes. Where COLMAP may fail, we can intervene with the <span>Toon3D
                Labeler</span> to obtain human-labeled correspondences. Here we show a
              fly-through rendering for two rooms ("Living room" and "Bedroom 2") of <a href="https://www.airbnb.com/rooms/833261990707199349">this Airbnb listing</a>.
            </p>
        </div>

  <div>
      <div>
          <h2>Visualizing Inconsistencies</h2>
          <p>
              Cartoons are hand-drawn so we need to warp the images to be 3D consistent. The first item is a video that
              shows the warp taking place during alignment optimization.
              The next two items are images which show the original and warped drawings, as well as the overlap between
              the two. Blurry
              regions indicate where a lot of warp occured.
            </p>
        </div>
      <div id="blender-carousel">
            <p>
              <h4>Video</h4>
              <video poster="" autoplay="" controls="" muted="" loop="" playsinline="" height="100%">
                <source src="https://toon3d.studio/static/assets/visualizing-inconsistencies-3.mp4" type="video/mp4">
              </video>
            </p>
            <div>
              <h4>Image</h4>
              <p><img src="https://toon3d.studio/static/assets/visualizing-inconsistencies-1.png">
            </p></div>
            <div>
              <h4>Image</h4>
              <p><img src="https://toon3d.studio/static/assets/visualizing-inconsistencies-2.png">
            </p></div>
          </div>
    </div>

  <!-- Multi-View Consistent Inpainting. -->
  <div>
          <h2>Reconstructing Paintings</h2>
          <p>
              We can reconstruct paintings with <span>Toon3D</span> even though the paintings are
              hand-drawn. We predict the depth of each image, then align and warp point clouds. Finally we use Gaussian
              refinement to create the video shown below.
            </p>
        </div>
  <!--/ Multi-View Consistent Inpainting. -->



  <div id="BibTeX">
      <h2>BibTeX</h2>
      <p>Please consider citing our work if you find it useful.</p>
      <pre><code>@inproceedings{weber2023toon3d,
  title = {Toon3D: Seeing Cartoons from a New Perspective},
  author = {Ethan Weber* and Riley Peterlinz* and Rohan Mathur and
    Frederik Warburg and Alexei A. Efros and Angjoo Kanazawa},
  booktitle = {arXiv},
  year = {2024},
}
</code></pre>
    </div>

  <div>
          <!-- <h2 class="title is-3">Acknowledgements</h2> -->

          <p>
              We would like to thank Qianqian Wang, Justin Kerr, Brent Yi, David McAllister, Matthew Tancik, Evonne Ng,
              Anjali Thakrar, Christian Foley,
              Abhishek Kar, Georgios Pavlakos, the Nerfstudio team, and the KAIR lab for discussions, feedback, and
              technical support. We also thank Ian Mitchell and Roland Jose for helping to label points.
            </p>
        </div>


  



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[LoRA Learns Less and Forgets Less (138 pts)]]></title>
            <link>https://arxiv.org/abs/2405.09673</link>
            <guid>40389421</guid>
            <pubDate>Fri, 17 May 2024 13:00:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2405.09673">https://arxiv.org/abs/2405.09673</a>, See on <a href="https://news.ycombinator.com/item?id=40389421">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
    <div><p><span>Authors:</span><a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Biderman,+D">Dan Biderman</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Ortiz,+J+G">Jose Gonzalez Ortiz</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Portes,+J">Jacob Portes</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Paul,+M">Mansheej Paul</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Greengard,+P">Philip Greengard</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Jennings,+C">Connor Jennings</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=King,+D">Daniel King</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Havens,+S">Sam Havens</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Chiley,+V">Vitaliy Chiley</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Frankle,+J">Jonathan Frankle</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Blakeney,+C">Cody Blakeney</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Cunningham,+J+P">John P. Cunningham</a></p></div>            
    <p><a href="https://arxiv.org/pdf/2405.09673">View PDF</a>
    <a href="https://arxiv.org/html/2405.09673v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>Low-Rank Adaptation (LoRA) is a widely-used parameter-efficient finetuning method for large language models. LoRA saves memory by training only low rank perturbations to selected weight matrices. In this work, we compare the performance of LoRA and full finetuning on two target domains, programming and mathematics. We consider both the instruction finetuning ($\approx$100K prompt-response pairs) and continued pretraining ($\approx$10B unstructured tokens) data regimes. Our results show that, in most settings, LoRA substantially underperforms full finetuning. Nevertheless, LoRA exhibits a desirable form of regularization: it better maintains the base model's performance on tasks outside the target domain. We show that LoRA provides stronger regularization compared to common techniques such as weight decay and dropout; it also helps maintain more diverse generations. We show that full finetuning learns perturbations with a rank that is 10-100X greater than typical LoRA configurations, possibly explaining some of the reported gaps. We conclude by proposing best practices for finetuning with LoRA.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Dan Biderman [<a href="https://arxiv.org/show-email/7e018ac3/2405.09673">view email</a>]      <br>    <strong>[v1]</strong>
        Wed, 15 May 2024 19:27:45 UTC (6,178 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Non-Euclidean Doom: what happens to a game when pi is not 3.14159 (2022) [video] (416 pts)]]></title>
            <link>https://media.ccc.de/v/mch2022-236-non-euclidean-doom-what-happens-to-a-game-when-pi-is-not-3-14159-</link>
            <guid>40389267</guid>
            <pubDate>Fri, 17 May 2024 12:43:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://media.ccc.de/v/mch2022-236-non-euclidean-doom-what-happens-to-a-game-when-pi-is-not-3-14159-">https://media.ccc.de/v/mch2022-236-non-euclidean-doom-what-happens-to-a-game-when-pi-is-not-3-14159-</a>, See on <a href="https://news.ycombinator.com/item?id=40389267">Hacker News</a></p>
<div id="readability-page-1" class="page">

<div>
<ol>
<li>
<a href="https://media.ccc.de/b">
browse
</a>
</li>
<li>
<span></span>
<a href="https://media.ccc.de/b/conferences">
conferences
</a>
</li>
<li>
<span></span>
<a href="https://media.ccc.de/b/conferences/camp-NL">
camp-NL
</a>
</li>
<li>
<span></span>
<a href="https://media.ccc.de/b/conferences/camp-NL/mch2022">
mch2022
</a>
</li>
<li>
<span></span>
event
</li>
</ol>
</div>

<div>

<p>
<span></span>
<a href="https://media.ccc.de/search?p=Luke+Gotszling">Luke Gotszling</a>

</p>

<p><a href="https://media.ccc.de/c/MCH2022/MCH2022%20Curated%20content" rel="tag">MCH2022 Curated content</a>
Playlists:
<a href="https://media.ccc.de/v/mch2022-236-non-euclidean-doom-what-happens-to-a-game-when-pi-is-not-3-14159-/playlist">'MCH2022' videos starting here</a>
/
<a data-method="get" href="https://media.ccc.de/v/mch2022-236-non-euclidean-doom-what-happens-to-a-game-when-pi-is-not-3-14159-/audio">audio</a></p>
<!-- %h3 About -->
<p>We all know that the value of pi is a constant with a particular immutable value. Anyone who has done any graphical programming also knows that visual rendering relies not just on pi but trigonometry more broadly as well as other mathematical techniques. If we look into the source code of the first person shooter Doom we find that the value of pi used in the game is wrong. In this talk I will explore what happens when we subtly and not so subtly break math in the source.</p>

<p>Doom is a well known classic first person shooter game with source code released under the GPL in 1999. In this talk I will begin by exploring what happens to the game when we make the value of pi even more wrong. What about when we change other trigonometric functions and constants to incorrect values? How will our familiar understanding and ability to traverse this virtual world change when we do this. Are there any interesting gaming possibilities with non-Euclidean geometries? A brief segway will cover some optimization tricks made to enable the game to run well on hardware available at the time. At the end I will provide a link to other games and public source code repositories that also use an incorrect value of pi. Pointers will also be provided to allow the audience to compile their own incorrect math version of the game.</p>

<h3>Download</h3>
<div>
<p>
<h4>Audio</h4>
</p>

</div>
<!-- %h3 Embed/Share -->

<h3>Tags</h3>

</div>





</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why neural networks struggle with the Game of Life (2020) (108 pts)]]></title>
            <link>https://bdtechtalks.com/2020/09/16/deep-learning-game-of-life/</link>
            <guid>40388013</guid>
            <pubDate>Fri, 17 May 2024 09:26:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bdtechtalks.com/2020/09/16/deep-learning-game-of-life/">https://bdtechtalks.com/2020/09/16/deep-learning-game-of-life/</a>, See on <a href="https://news.ycombinator.com/item?id=40388013">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            
<figure><img fetchpriority="high" decoding="async" width="696" height="464" data-attachment-id="8258" data-permalink="https://bdtechtalks.com/2020/09/16/deep-learning-game-of-life/game-of-life-neural-networks/" data-orig-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?fit=3456%2C2304&amp;ssl=1" data-orig-size="3456,2304" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="game of life neural networks" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?fit=300%2C200&amp;ssl=1" data-large-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?fit=696%2C464&amp;ssl=1" src="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=696%2C464&amp;ssl=1" alt="game of life neural networks" srcset="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=1536%2C1024&amp;ssl=1 1536w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=2048%2C1365&amp;ssl=1 2048w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=696%2C464&amp;ssl=1 696w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=1068%2C712&amp;ssl=1 1068w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=630%2C420&amp;ssl=1 630w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?resize=1920%2C1280&amp;ssl=1 1920w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-neural-networks.jpg?w=1392&amp;ssl=1 1392w" sizes="(max-width: 696px) 100vw, 696px" data-recalc-dims="1"></figure>



<p><em>This article is part of our&nbsp;<a href="https://bdtechtalks.com/tag/ai-research-papers/">reviews of AI research papers</a>, a series of posts that explore the latest findings in artificial intelligence.</em></p>



<p>The Game of Life is a grid-based automaton that is very popular in discussions about science, computation, and artificial intelligence. It is an interesting idea that shows how very simple rules can yield very complicated results.</p>



<p>Despite its simplicity, however, the Game of Life remains a challenge to <a href="https://bdtechtalks.com/2019/08/05/what-is-artificial-neural-network-ann/">artificial neural networks</a>, AI researchers at Swarthmore College and the Los Alamos National Laboratory have shown in a recent paper. Titled, “<a href="https://arxiv.org/abs/2009.01398" target="_blank" rel="noreferrer noopener">It’s Hard for Neural Networks To Learn the Game of Life</a>,” their research investigates how neural networks explore the Game of Life and why they often miss finding the right solution.</p>



<p>Their findings highlight some of the key issues with <a href="https://bdtechtalks.com/2019/02/15/what-is-deep-learning-neural-networks/">deep learning models</a> and give some interesting hints at what could be the next direction of research for the AI community.</p>



<h2>What is the Game of Life?</h2>



<p>British mathematician John Conway invented <a rel="noreferrer noopener" href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" target="_blank">the Game of Life</a> in 1970. Basically, the Game of Life tracks the on or off state—the life—of a series of cells on a grid across timesteps. At each timestep, the following simple rules define which cells come to life or stay alive, and which cells die or stay dead:</p>



<ol type="1"><li>If a live cell has less than two live neighbors, it dies of underpopulation.</li><li>If a live cell has more than three live neighbors, it dies of overpopulation.</li><li>If a live cell has exactly two or three live neighbors, it survives.</li><li>If a dead cell has three live neighbors, it will come to life.</li></ol>



<p>Based on these four simple rules, you can adjust the initial state of your grid to create interesting stable, oscillating, and gliding patterns.</p>



<p>For instance, this is what’s called the glider gun.</p>



<figure><img decoding="async" width="696" height="392" data-attachment-id="8251" data-permalink="https://bdtechtalks.com/2020/09/16/deep-learning-game-of-life/game-of-life-glider-gun/" data-orig-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?fit=1280%2C720&amp;ssl=1" data-orig-size="1280,720" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="game of life glider gun" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?fit=696%2C392&amp;ssl=1" src="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?resize=696%2C392&amp;ssl=1" alt="game of life glider gun" srcset="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?resize=696%2C392&amp;ssl=1 696w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?resize=1068%2C601&amp;ssl=1 1068w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-glider-gun.gif?resize=747%2C420&amp;ssl=1 747w" sizes="(max-width: 696px) 100vw, 696px" data-recalc-dims="1"></figure>



<p>You can also use the Game of Life to create very complex pattern, such as this one.</p>



<figure><img decoding="async" width="640" height="360" data-attachment-id="8252" data-permalink="https://bdtechtalks.com/2020/09/16/deep-learning-game-of-life/game-of-life-complex-pattern/" data-orig-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-complex-pattern.gif?fit=640%2C360&amp;ssl=1" data-orig-size="640,360" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="game of life complex pattern" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-complex-pattern.gif?fit=300%2C169&amp;ssl=1" data-large-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-complex-pattern.gif?fit=640%2C360&amp;ssl=1" src="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/game-of-life-complex-pattern.gif?resize=640%2C360&amp;ssl=1" alt="game of life complex pattern" data-recalc-dims="1"></figure>



<p>Interestingly, no matter how complex a grid becomes, you can predict the state of each cell in the next timestep with the same rules.</p>



<p>With neural networks being <a href="https://bdtechtalks.com/2020/09/07/prediction-machines-review-ai-business/">very good prediction machines</a>, the researchers wanted to find out whether deep learning models could learn the underlying rules of the Game of Life.</p>



<figure><p><span><iframe loading="lazy" width="696" height="392" src="https://www.youtube.com/embed/ouipbDkwHWA?version=3&amp;rel=1&amp;showsearch=0&amp;showinfo=1&amp;iv_load_policy=1&amp;fs=1&amp;hl=en-US&amp;autohide=2&amp;wmode=transparent" allowfullscreen="true" sandbox="allow-scripts allow-same-origin allow-popups allow-presentation allow-popups-to-escape-sandbox"></iframe></span>
</p></figure>



<h2>Artificial neural networks vs the Game of Life</h2>



<p>There are a few reasons the Game of Life is an interesting experiment for neural networks. “We already know a solution,” Jacob Springer, a computer science student at Swarthmore College and co-author of the paper, told <em>TechTalks</em>. “We can write down by hand a neural network that implements the Game of Life, and therefore we can compare the learned solutions to our hand-crafted one. This is not the case in.”</p>



<p>It is also very easy to adjust the flexibility of the problem in the Game of Life by modifying the number of timesteps in the future the target deep learning model must predict.</p>



<p>Also, unlike domains such as <a href="https://bdtechtalks.com/2019/01/14/what-is-computer-vision/">computer vision</a> or <a href="https://bdtechtalks.com/2018/02/20/ai-machine-learning-nlg-nlp">natural language processing</a>, if a neural network has learned the rules of the Game of Life it will reach 100 percent accuracy. “There’s no ambiguity. If the network fails even once, then it is has not correctly learned the rules,” Springer says.</p>



<p>In their work, the researchers first created a small <a href="https://bdtechtalks.com/2020/01/06/convolutional-neural-networks-cnn-convnets/">convolutional neural network</a> and manually tuned its parameters to be able to predict the sequence of changes in the Game of Life’s grid cells. This proved that there’s a minimal neural network that can represent the rule of the Game of Life.</p>



<div><figure><img loading="lazy" decoding="async" data-attachment-id="8255" data-permalink="https://bdtechtalks.com/2020/09/16/deep-learning-game-of-life/jacob-springer/" data-orig-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?fit=1396%2C1396&amp;ssl=1" data-orig-size="1396,1396" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;1.8&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;iPhone XR&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1579024458&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;4.25&quot;,&quot;iso&quot;:&quot;25&quot;,&quot;shutter_speed&quot;:&quot;0.0081967213114754&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="jacob-springer" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?fit=300%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?fit=696%2C696&amp;ssl=1" src="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?resize=539%2C539&amp;ssl=1" alt="" width="539" height="539" srcset="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?resize=1024%2C1024&amp;ssl=1 1024w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?resize=300%2C300&amp;ssl=1 300w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?resize=150%2C150&amp;ssl=1 150w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?resize=768%2C768&amp;ssl=1 768w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?resize=696%2C696&amp;ssl=1 696w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?resize=1068%2C1068&amp;ssl=1 1068w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?resize=420%2C420&amp;ssl=1 420w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/jacob-springer.jpg?w=1396&amp;ssl=1 1396w" sizes="(max-width: 539px) 100vw, 539px" data-recalc-dims="1"><figcaption>Jacob Springer, computer science student at Swarthmore College</figcaption></figure></div>



<p>Then, they tried to see if the same neural network could reach optimal settings when trained from scratch. They initialized the parameters to random values and trained the neural network on 1 million randomly generated examples of the Game of Life. The only way the neural network could reach 100 percent accuracy would be to converge on the hand-crafted parameter values. This would imply that the AI model had managed to parameterize the rules underlying the Game of Life.</p>



<p>But in most cases the trained neural network did not find the optimal solution, and the performance of the network decreased even further as the number of steps increased. The result of training the neural network was largely affected by the chosen set training examples as well as the initial parameters.</p>



<p>Unfortunately, you never know what the initial weights of the neural network should be. The most common practice is to pick random values from a normal distribution, therefore settling on the right initial weights becomes a game of luck. As for the training dataset, in many cases, it isn’t clear which samples are the right ones, and in others, there’s not much of a choice.</p>



<p>“For many problems, you don’t have a lot of choice in dataset; you get the data that you can collect, so if there is a problem with your dataset, you may have trouble training the neural network,” Springer says.</p>



<h2>The performance of larger neural networks</h2>



<figure><img loading="lazy" decoding="async" width="696" height="278" data-attachment-id="8254" data-permalink="https://bdtechtalks.com/2020/09/16/deep-learning-game-of-life/image/" data-orig-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?fit=5384%2C2148&amp;ssl=1" data-orig-size="5384,2148" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="convolutional neural network game of life" data-image-description="" data-image-caption="<p>Left: A manually tuned convolutional neural network can predict outcomes in the Game of Life with perfect accuracy.<br />
Right: But in practice, when training the network from scratch, you’ll need a much larger neural network to obtain equal results</p>
" data-medium-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?fit=300%2C120&amp;ssl=1" data-large-file="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?fit=696%2C278&amp;ssl=1" src="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=696%2C278&amp;ssl=1" alt="convolutional neural network game of life" srcset="https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=1024%2C409&amp;ssl=1 1024w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=300%2C120&amp;ssl=1 300w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=768%2C306&amp;ssl=1 768w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=1536%2C613&amp;ssl=1 1536w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=2048%2C817&amp;ssl=1 2048w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=696%2C278&amp;ssl=1 696w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=1068%2C426&amp;ssl=1 1068w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=1053%2C420&amp;ssl=1 1053w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?resize=1920%2C766&amp;ssl=1 1920w, https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/09/image.png?w=1392&amp;ssl=1 1392w" sizes="(max-width: 696px) 100vw, 696px" data-recalc-dims="1"><figcaption>Left: A manually tuned convolutional neural network can predict outcomes in the Game of Life with perfect accuracy.
Right: But in practice, when training the network from scratch, you’ll need a much larger neural network to obtain equal results</figcaption></figure>



<p>In <a href="https://bdtechtalks.com/2017/08/28/artificial-intelligence-machine-learning-deep-learning/">machine learning</a>, one of the popular ways to improve the accuracy of a model that is underperforming is to increase its complexity. And this technique worked with the Game of Life. As the researchers added more layers and parameters to the neural network, the results improved and the training process eventually yielded a solution that reached near-perfect accuracy.</p>



<p>But a larger neural network also means an increase in the cost of training and running the deep learning model.</p>



<p>On the one hand, this shows the flexibility of large neural networks. Although a huge deep learning model might not be the most optimal architecture to address your problem, it has a greater chance of finding a good solution. But on the other, it proves that there is likely to be a smaller deep learning model that can provide the same or better results—if you can find it.</p>



<p>These findings are in line with “<a href="https://arxiv.org/pdf/1803.03635.pdf" target="_blank" rel="noreferrer noopener">The Lottery Ticket Hypothesis</a>,” presented at the ICLR 2019 conference by AI researchers at MIT CSAIL. The hypothesis suggested that for each large neural network, there are smaller sub-networks that can converge on a solution if their parameters have been initialized on lucky, winning values, thus the “lottery ticket” nomenclature.</p>



<figure><p><span><iframe loading="lazy" width="696" height="392" src="https://www.youtube.com/embed/s7DqRZVvRiQ?version=3&amp;rel=1&amp;showsearch=0&amp;showinfo=1&amp;iv_load_policy=1&amp;fs=1&amp;hl=en-US&amp;autohide=2&amp;wmode=transparent" allowfullscreen="true" sandbox="allow-scripts allow-same-origin allow-popups allow-presentation allow-popups-to-escape-sandbox"></iframe></span>
</p></figure>



<p>“The lottery ticket hypothesis proposes that when training a convolutional neural network, small lucky subnetworks quickly converge on a solution,” the authors of the Game of Life paper write. “This suggests that rather than searching extensively through weight-space for an optimal solution, gradient-descent optimization may rely on lucky initializations of weights that happen to position a subnetwork close to a reasonable local minima to which the network converges.”</p>



<h2>What are the implications for AI research?</h2>



<p>“While Conway’s Game of Life itself is a toy problem and has few direct applications, the results we report here have implications for similar tasks in which a neural network is trained to predict an outcome which requires the network to follow a set of local rules with multiple hidden steps,” the AI researchers write in their paper.</p>



<p>These findings can apply to machine learning models used logic or math solvers, weather and fluid dynamics simulations, and logical deduction in language or image processing.</p>



<p>“Given the difficulty that we have found for small neural networks to learn the Game of Life, which can be expressed with relatively simple symbolic rules, I would expect that most sophisticated symbol manipulation would be even more difficult for neural networks to learn, and would require even larger neural networks,” Springer said. “Our result does not necessarily suggest that neural networks cannot learn and execute symbolic rules to make decisions, however, it suggests that these types of systems may be very difficult to learn, especially as the complexity of the problem increases.”</p>



<p>The researchers further believe that their findings apply to other fields of machine learning that do not necessarily rely on clear-cut logical rules, such as image and audio classification.</p>



<p>For the moment, we know that, in some cases, increasing the size and complexity of our neural networks can solve the problem of poorly performing deep learning models. But we should also consider the <a href="https://bdtechtalks.com/2019/11/25/ai-research-neural-networks-compute-costs/">negative impact of using larger neural networks</a> as the go-to method to overcome impasses in machine learning research. One outcome can be <a href="https://www.pcmag.com/news/ai-could-save-the-world-if-it-doesnt-ruin-the-environment-first">greater energy consumption and carbon emissions</a> caused from the compute resources required to train large neural networks. On the other hand, it can result in the collection of larger training datasets instead of relying on finding ideal distribution strategies across smaller datasets, which might not be feasible in domains where data is subject to ethical considerations and privacy laws. And finally, the general trend toward endorsing overcomplete and very large deep learning models can <a href="https://bdtechtalks.com/2019/08/26/deepmind-mustafa-suleyman-commercial-ai/">consolidate AI power in large tech companies</a> and make it harder for smaller players to enter the deep learning research space.</p>



<p>“We hope that this paper will promote research into the limitations of neural networks so that we can better understand the flaws that necessitate overcomplete networks for learning. We hope that our result will drive development into better learning algorithms that do not face the drawbacks of gradient-based learning,” the authors of the paper write.</p>



<p>“I think the results certainly motivate research into improved search algorithms, or for methods to improve the efficiency of large networks,” Springer said.</p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DNA confirms there IS a big cat roaming the British countryside (148 pts)]]></title>
            <link>https://www.discoverwildlife.com/animal-facts/mammals/big-cat-british-countryside</link>
            <guid>40387889</guid>
            <pubDate>Fri, 17 May 2024 09:08:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.discoverwildlife.com/animal-facts/mammals/big-cat-british-countryside">https://www.discoverwildlife.com/animal-facts/mammals/big-cat-british-countryside</a>, See on <a href="https://news.ycombinator.com/item?id=40387889">Hacker News</a></p>
<div id="readability-page-1" class="page"><div type="content-body" ngh="33"><storefront-content-body _nghost-purplestorefront-c1960323246="" ngh="32"><article _ngcontent-purplestorefront-c1960323246="" id="sprylab_purple_content"><div _ngcontent-purplestorefront-c1960323246=""><p><strong>The DNA of a big cat in the&nbsp;<em>Panthera</em>&nbsp;genus&nbsp;–&nbsp;probably a leopard&nbsp;–&nbsp;has been identified from a swab taken from a dead sheep in the Lake District.</strong></p>



<p>This is the first time that big cat DNA has been found on a carcass in the UK. The analysis was carried out at a&nbsp;<a href="https://warwick.ac.uk/fac/sci/lifesci/research/archaeobotany/ecological_forensics/cats/">laboratory</a>&nbsp;at the University of Warwick run by Prof Robin Allaby.&nbsp;</p>



<p>Allaby told BBC Wildlife that it was very hard to lift DNA from swabs taken from carcasses but there was no doubt in this case.&nbsp;“It makes me a convert [to the existence of non-native big cats in the UK],”&nbsp;Allaby said.&nbsp;“Until now, I have remained open-minded, I think that’s my job as a scientist.”</p>



<ul>
<li><a href="https://www.discoverwildlife.com/animal-facts/mammals/which-big-cat-has-the-strongest-bite">Which big cat has the strongest bite?</a></li>
</ul>



<p>Allaby has previously identified a bit of a claw that was sent to him from someone who wished to remain anonymous from the north of England as also belong to a cat in the Panthera genus.</p>



<p>Allaby started up the testing service 12 years ago when a&nbsp;<a href="https://www.discoverwildlife.com/animal-facts/mammals/roe-deer-facts">roe deer</a> <a href="https://www.discoverwildlife.com/animal-facts/mammals/roe-deer-facts">carcass</a>&nbsp;that had been scavenged was discovered in a small valley near Stroud in Gloucestershire.&nbsp;“All we found on that one was<a href="https://www.countryfile.com/wildlife/mammals/fox-guide-behaviour-mating-diet-identification"> fox</a> [DNA], which are a really underestimated predator,”&nbsp;Allaby said.</p>



<p>In the most recent case, the <a href="https://www.countryfile.com/wildlife/mammals/native-british-sheep-breeds-and-how-to-recognise-them">sheep</a> carcass was discovered by Cumbrian resident Sharon Larkin-Snowden in an undisclosed upland location. Larkin-Snowden told Rick Minter’s&nbsp;<a href="https://bigcatconversations.com/ep110-panthera-cumbria-dna-developments/">Big Cat Conversations</a>&nbsp;podcast that she chanced across the dead sheep one morning in October last year.&nbsp;</p>



<p>Larkin-Snowden said the carcass was fresh and that she had disturbed whatever had been feeding on, which she then saw running towards a stone wall before disappearing over it.</p>



<p>“I assumed at first it was a <a href="https://www.countryfile.com/animals/pets/the-life-of-a-border-collie-photographer-amy-bateman">sheepdog</a>, but then I did a double take and realised it was a black cat,”&nbsp;she said.&nbsp;“It was big&nbsp;–&nbsp;the size of a German shepherd dog.”</p>



<p>Rick Minter, who has received more than 1,000 reports of people’s encounters with <a href="https://www.discoverwildlife.com/animal-facts/mammals/facts-about-big-cats">big cats</a>, said the animal was most likely to have been a<a href="https://www.discoverwildlife.com/animal-facts/mammals/leopard-facts"> leopard.</a></p>



<ul>
<li><a href="https://www.discoverwildlife.com/animal-facts/mammals/what-is-a-black-panther">What is a black panther?</a></li>
</ul>



<p>Of the five species in the&nbsp;<em>Panthera</em>&nbsp;genus&nbsp;–&nbsp;<a href="https://www.discoverwildlife.com/animal-facts/mammals/facts-about-lions">lion</a>, leopard, <a href="https://www.discoverwildlife.com/animal-facts/mammals/facts-about-tigers">tiger</a>, <a href="https://www.discoverwildlife.com/animal-facts/mammals/facts-about-jaguars">jaguar </a>and <a href="https://www.discoverwildlife.com/animal-facts/mammals/facts-about-snow-leopards">snow leopard</a>&nbsp;–&nbsp;the only other cat that has a similar melanistic form is the jaguar, and they don’t appear to be in the British countryside, he added.</p>



<p>This news follows the 2022&nbsp;<a href="https://www.discoverwildlife.com/news/new-dna-evidence-confirms-presence-of-big-cats-in-the-uk">discovery of strands of black animal hair on a barbwire fence in Gloucestershire apparently belonging to a big cat</a></p>
</div></article><!----></storefront-content-body><!----><!----></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to read C type declarations (2003) (131 pts)]]></title>
            <link>http://www.unixwiz.net/techtips/reading-cdecl.html</link>
            <guid>40387812</guid>
            <pubDate>Fri, 17 May 2024 08:57:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.unixwiz.net/techtips/reading-cdecl.html">http://www.unixwiz.net/techtips/reading-cdecl.html</a>, See on <a href="https://news.ycombinator.com/item?id=40387812">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="pagecontent">

<p>
Even relatively new C programmers have no trouble reading simple
C declarations such as
</p>

<pre><span>int      foo[5];     </span>// <i>foo is an array of 5 ints</i>
<span>char    *foo;        </span>// <i>foo is a pointer to char</i>
<span>double   foo();      </span>// <i>foo is a function returning a double</i>
</pre>

<p>
but as the declarations get a bit more involved, it's more difficult
to know exactly what you're looking at.
</p>

<pre><span>char *(*(**foo[][8])())[]; </span>// <i>huh ?????</i>
</pre>

<p>
It turns out that the rules for reading an arbitrarily-complex C variable
declaration are easily learned by even beginning programmers (though how
to actually <i>use</i> the variable so declared may be well out of reach).
</p>

<p>
This Tech Tip shows how to do it.
</p>

<h2 id="types">Basic and Derived Types</h2>

<p>
In addition to one variable name, a declaration is composed of one
"basic type" and zero or more "derived types", and it's crucial to
understand the distinction between them.
</p>

<p>
The complete list of basic types is:
</p>

<blockquote>
<table>
<tbody><tr>	<td> • <span>char</span>
	</td><td> • <span>signed char</span>
	</td><td> • <span>unsigned char</span>
	</td><td> &nbsp;	</td></tr>
<tr>	<td> • <span>short</span>
	</td><td> • <span>unsigned short</span>
	</td><td> &nbsp;
	</td><td> &nbsp;	</td></tr>
<tr>	<td> • <span>int</span>
	</td><td> • <span>unsigned int</span>
	</td><td> &nbsp;
	</td><td> &nbsp;	</td></tr>
<tr>	<td> • <span>long</span>
	</td><td> • <span>unsigned long</span>
	</td><td> &nbsp;
	</td><td> &nbsp;	</td></tr>
<tr>	<td> • <span>float</span>
	</td><td> • <span>double</span>
	</td><td> • <span>void</span>
	</td><td> &nbsp;	</td></tr>
<tr>	<td> • <span>struct <i>tag</i></span>&nbsp;&nbsp;&nbsp;
	</td><td> • <span>union <i>tag</i></span>&nbsp;&nbsp;&nbsp;
	</td><td> • <span>enum <i>tag</i></span>&nbsp;&nbsp;&nbsp;
	</td><td> &nbsp;	</td></tr>

<tr>	<td> • <span>long long</span>
	</td><td> • <span>unsigned long long&nbsp;</span>
	</td><td> • <span>long double</span>
	</td><td> &nbsp; &nbsp; <i>ANSI/ISO C only</i>			</td></tr>
</tbody></table>
</blockquote>

<p>
A declaration can have exactly <b>one</b> basic type, and it's always on
the far left of the expression.
</p>

<p>
The "basic types" are augmented with "derived types", and C has
three of them:
</p>

<dl>
<dt>
<b>* &nbsp; pointer to...</b>
</dt>
<dd>This is denoted by the familiar <b>*</b> character, and it should be
self evident that a pointer always has to point <b><i>to</i></b> something.
</dd>

<dt>
<b>[] &nbsp; array of...</b>
</dt>
<dd>"Array of" can be undimensioned -- <b>[]</b> -- or dimensioned -- <b>[10]</b> --
but the sizes don't really play significantly into reading a declaration.
We typically include the size in the description. It should be clear
that arrays have to be "arrays <b><i>of</i></b>" something.
</dd>

<dt>
<b>() &nbsp; function returning...</b>
</dt>
<dd>
This is usually denoted by a pair of parentheses together - <b>()</b> -
though it's also possible to find a prototype parameter list inside.
Parameters lists (if present) don't really play into reading a
declaration, and we typically ignore them. We'll note that parens
used to represent "function returning" are different than those
used for grouping: grouping parens <i>surround</i> the variable name,
while "function returning" parens are always on the right.
</dd>

<dd>
Functions are meaningless unless they <i>return</i> something (and we
accommodate the <b>void</b> type by waving the hand and pretend that
it's "returning" void).
</dd>

</dl>

<p>
A derived type <i>always</i> modifies something that follows, whether it be
the basic type or another derived type, and to make a declaration read
properly one must always include the preposition ("to", "of", "returning").
Saying "pointer" instead of "pointer to" will make your declarations fall
apart.
</p>

<p>
It's possible that a type expression may have no derived types (e.g.,
<span><b>"int i"</b></span> describes "i is an int"), or it can have
many. Interpreting the derived types is usually the sticking point when
reading a complex declaration, but this is resolved with operator
precedence in the next section.
</p>

<h2>Operator Precedence</h2>

<p>
Almost every C programmer is familiar with the operator precedence
tables, which give rules that say (for instance) multiply and divide
have higher precedence than ("are preformed before") addition or subtraction,
and parentheses can be used to alter the grouping.
This seems natural for "normal" expressions, but the same rules do
indeed apply to declarations - they are <i>type</i> expressions rather
than <i>computational</i> ones.
</p>

<p>
The "array of" <b>[]</b> and "function returning" <b>()</b> type operators
have higher precedence than "pointer to" <b>*</b>, and this leads to some
fairly straightforward rules for decoding.
</p>

<p>
<i>Always</i> start with the variable name:
</p>

<blockquote>
<b>foo is</b> ...
</blockquote>

<p>
and <i>always</i> end with the basic type:
</p>

<blockquote>
foo is ... <b>int</b>
</blockquote>

<p>
The "filling in the middle" part is usually the trickier part, but it
can be summarize with this rule:
</p>

<blockquote>
"go right when you can, go left when you must"
</blockquote>

<p>
Working your way out from the variable name, honor the precedence rules
and consume derived-type tokens to the right as far as possible without
bumping into a grouping parenthesis. Then go left to the matching paren.
</p>

<h2>A simple example</h2>

<p>
We'll start with a simple example:
</p>

<pre><span>long **foo[7];</span>
</pre>

<p>
We'll approach this systematically, focusing on just one or two small
part as we develop the description in English. As we do it, we'll
show the focus of our attention in <span>red</span>,
and <strike>strike out</strike> the parts we've finished with.
</p>

<dl>
<dt>
<span>long</span> **<span>foo</span> [7];
</dt>
<dd>
Start with the variable name and end with the basic type:
</dd>
<dd>
<span>foo is</span> ... <span>long</span>
</dd>

<dt>
<span>long</span> ** <span>foo</span><span>[7]</span>;
</dt>

<dd>At this point, the variable name is touching two derived types:
"array of 7" and "pointer to", and the rule is to go right when you can,
so in this case we consume the "array of 7"
</dd>

<dd>
<span>foo is</span>
<span>array of 7</span>
...
<span>long</span>
</dd>

<dt>
<span>long</span> *<span>*</span> <span>foo[7]</span>;
</dt>
<dd>Now we've gone as far right as possible, so the innermost part
is only touching the "pointer to" - consume it.
</dd>

<dd>
<span>foo is</span>
<span>array of 7</span>
<span>pointer to</span>
...
<span>long</span>
</dd>

<dt>
<span>long</span>
<span>*</span>
<span>*foo[7]</span>;
</dt>
<dd>
The innermost part is now only touching a "pointer to", so consume it also.
</dd>

<dd>
<span>foo is</span>
<span>array of 7</span>
<span>pointer to</span>
<span>pointer to</span>
<span>long</span>
</dd>
</dl>

<p>
This completes the declaration!
</p>

<h2>A hairy example</h2>

<p>
To really test our skills, we'll try a very complex declaration that very
well may never appear in real life (indeed: we're hard-pressed to think
of how this could actually be used). But it shows that the rules scale
to very complex declarations.
</p>

<dl>
<dt>
<span>char</span> *(*(**<span>foo</span> [][8])())[];
</dt>
<dd>
All declaration start out this way: "variable name is .... basictype"
</dd>
<dd>
<span>foo is</span> ... <span>char</span>
</dd>

<dt>
<span>char</span> *(*(**<span>foo</span><span>[]</span> [8])())[];
</dt>
<dd>
The innermost part touches "array of" and "pointer to" - go right.
</dd>
<dd>
<span>foo is</span>
<span>array of </span>
...
<span>char</span>
</dd>

<dt>
<span>char</span> *(*(**<span>foo[]</span><span>[8]</span>)())[];
</dt>
<dd>
It's common in a declaration to alternate right and left, but this is not the
rule: the rule is to go as far right as we can, and here we find that the innermost
part still touches "array of" and "pointer to". Again, go right.
</dd>
<dd>
<span>foo is</span>
<span>array of </span>
<span>array of 8</span>
...
<span>char</span>
</dd>

<dt>
<span>char</span> *(*(*<span>*</span> <span>foo[][8]</span>)())[];
</dt>
<dd>
Now we've hit parenthesis used for grouping, and this halts our march to the right.
So we have to backtrack to collect all the parts to the left (but only as far as
the paren). This consumes the "pointer to":
</dd>

<dd>
<span>foo is</span>
<span>array of</span>
<span>array of 8</span>
<span>pointer to</span>
...
<span>char</span>
</dd>

<dt>
<span>char</span> *(*(<span>*</span> <span>*foo[][8]</span>)())[];
</dt>
<dd>
Again we are backtracking to the left, so we consume the next "pointer to":
</dd>

<dd>
<span>foo is</span>
<span>array of</span>
<span>array of 8</span>
<span>pointer to</span>
<span>pointer to</span>
...
<span>char</span>
</dd>

<dt>
<span>char</span> *(*<span>(**foo[][8])</span><span>()</span>)[];
</dt>
<dd>
After consuming the "pointer to" in the previous step, this finished off the
entire parenthesized subexpression, so we "consume" the parens too. This
leaves the innermost part touching "function returning" on the right, and
"pointer to" on the left - go right:
</dd>

<dd>
<span>foo is</span>
<span>array of</span>
<span>array of 8</span>
<span>pointer to</span>
<span>pointer to</span>
<span>function returning</span>
...
<span>char</span>
</dd>

<dt>
<span>char</span> *(<span>*</span> <span>(**foo[][8])()</span> )[];
</dt>
<dd>
Again we hit grouping parenthesis, so backtrack to the left:
</dd>

<dd>
<span>foo is</span>
<span>array of</span>
<span>array of 8</span>
<span>pointer to</span>
<span>pointer to</span>
<span>function returning</span>
<span>pointer to</span>
...
<span>char</span>
</dd>

<dt>
<span>char</span> * <span>(*(**foo[][8])())</span><span>[]</span>;
</dt>
<dd>
Consuming the grouping parentheses, we then find that the innermost part is
touching "array of" on the right, and "pointer to" on the left. Go right:
</dd>

<dd>
<span>foo is</span>
<span>array of</span>
<span>array of 8</span>
<span>pointer to</span>
<span>pointer to</span>
<span>function returning</span>
<span>pointer to</span>
<span>array of</span>
...
<span>char</span>
</dd>

<dt>
<span>char</span> <span>*</span> <span>(*(**foo[][8])())[]</span>;
</dt>
<dd>
Finally we're left with only "pointer to" on the left: consume it to
finish the declaration.
</dd>

<dd>
<span>foo is</span>
<span>array of</span>
<span>array of 8</span>
<span>pointer to</span>
<span>pointer to</span>
<span>function returning</span>
<span>pointer to</span>
<span>array of</span>
<span>pointer to</span>
<span>char</span>
</dd>
</dl>


<p>
We have no idea how this variable is useful, but at least we can
describe the type correctly.
</p>

<p>
Note that example won't compile unless it's <u>initialized</u> to provide the dimension of the innermost array,
though none of this changes the fact that nobody would ever <i>actually</i> use this for anything:
</p>

<pre>
// explicit initialization
char *(*(**foo[][8])())[] <b>= { 0 };</b>

// implicit init from function call

<b>void myfunction(</b>char *(*(**foo[][8])())[]<b>)</b>
{
	...
}
</pre>

<h2>Abstract Declarators</h2>

<p>
The C standard describes an "abstract declarator", which is used when a
type needs to be described but not associated with a variable name. These
occur in two places -- casts, and as arguments to <b>sizeof</b> -- and they
can look intimidating:
</p>

<blockquote>
<span>int (*(*)())()</span>
</blockquote>

<p>
To the obvious question of "where does one start?", the answer is
"find where the variable name would go, then treat it like a normal
declaration".  There is only one place where a variable name could
possibly go, and locating it is actually straightforward. Using the
syntax rules, we know that:
</p>

<ul>
<li>to the right of all the "pointer to" derived type tokens
</li><li>to the left of all "array of" derived type tokens
</li><li>to the left of all "function returning" derived type tokens
</li><li>inside all the grouping parentheses
</li></ul>

<p>
Looking at the example, we see that the rightmost "pointer to" sets
one boundary, and the leftmost "function returning" sets another one:
</p>

<blockquote>
<span>
<span>int (*(*</span><span> • ) • </span><span>())()</span>
</span>
</blockquote>

<p>
The red • indicators show the only two places that could possibly hold
the variable name, but the leftmost one is the only one that fits the
"inside the grouping parens" rule. This gives us our declaration as:
</p>

<blockquote>
<span>int (*(*foo)())()</span>
</blockquote>

<p>
which our "normal" rules describe as:
</p>

<blockquote>
<b>foo is a pointer to function returning pointer to function returning int</b>
</blockquote>

<h2>Semantic restrictions/notes</h2>

<p>
Not all combinations of derived types are allowed, and it's possible
to create a declaration that perfectly follows the syntax rules but is
nevertheless not legal in C (e.g., <i>syntactically</i> valid but
<i>semantically</i> invalid). We'll touch on them here.
</p>

<dl>
<dt>Can't have arrays of functions
</dt>
<dd>Use "array of pointer to function returning..." instead.
</dd>

<dt>Functions can't return functions
</dt>
<dd>Use "function returning pointer to function returning..." instead.
</dd>

<dt>Functions can't return arrays
</dt>
<dd>Use "function returning pointer to array of..." instead.
</dd>

<dt>In arrays, only the leftmost [] can be undimensioned
</dt>
<dd>C supports multi-dimensional arrays (e.g.,
<span><b>char foo[1][2][3][4]</b></span>), though in practice
this often suggests poor data structuring. Nevertheless, when there
is more than one array dimension, only the leftmost one is allowed to
be empty.
<span><b>char foo[]</b></span> and
<span><b>char foo[][5]</b></span> are legal, but
<span><b>char foo[5][]</b></span>
is not.
</dd>

<dt>"void" type is restricted
</dt>
<dd>
Since <b>void</b> is a special pseudo-type, a variable with this basic type is
only legal with a final derived type of "pointer to" or "function returning".
It's not legal to have "array of void" or to declare a variable of just
type "void" without any derived types.
</dd>

<dd>
<pre><b>void *foo;</b>            // legal
<b>void foo();</b>           // legal
<b>void foo;</b>             // not legal
<b>void foo[];</b>           // not legal
</pre>
</dd>

</dl>

<h2>Adding calling-convention types </h2>

<p>
On the Windows platform, it's common to decorate a function declaration
with an indication of its <i>calling convention</i>. These tell the compiler
which mechanism should be used to call the function in question, and the
method used to call the function <em>must</em> be the same one which the
function expects. They look like:
</p>

<pre>extern int <b>__cdecl</b> main(int argc, char **argv);

extern BOOL <b>__stdcall</b> DrvQueryDriverInfo(DWORD dwMode, PVOID pBuffer,
                              DWORD cbBuf, PDWORD pcbNeeded);
</pre>

<p>
These decorations are very common in Win32 development, and are
straightforward enough to understand. More information can be found
in <a href="http://www.unixwiz.net/techtips/win32-callconv.html">Unixwiz.net
Tech Tip: Using Win32 calling conventions</a>
</p>

<p>
Where it gets somewhat more tricky is when the calling convention
must be incorporated into a pointer (including via a typedef), because
the tag doesn't seem to fit into the normal scheme of things. These
are often used (for instance) when dealing with the <b>LoadLibrary()</b>
and <b>GetProcAddress()</b> API calls to call a function from a freshly-loaded
DLL.
</p>

<p>
We commonly see this with typedefs:
</p>

<pre>typedef BOOL (<b>__stdcall</b> *PFNDRVQUERYDRIVERINFO)(
    DWORD   dwMode,
    PVOID   pBuffer,
    DWORD   cbBuf,
    PDWORD  pcbNeeded
    );

...

/* get the function address from the DLL */
pfnDrvQueryDriverInfo = (PFNDRVRQUERYDRIVERINFO)
	GetProcAddress(hDll, "DrvQueryDriverInfo")
</pre>

<p>
The calling convention is an attribute of the <i>function</i>,
not the <i>pointer</i>, so in the usual reading puts it after
the pointer but inside the grouping parenthesis:
</p>

<blockquote>
BOOL (<b>__stdcall</b> *foo)(...);
</blockquote>

<p>
is read as:
</p>

<blockquote>
foo is a pointer <br>
to a __stdcall function <br>
returning BOOL.
</blockquote>

<!--
<h1>"const" and "volatile"</h1>

These type qualifiers add a complication because they can apply to
either the basic type or the derived type.

<ul>
<li>If the qualifier is directly before or directly after the basic type,
it modifies the basic type, so these two are identical:

<pre class="codeblock">
int const ...;
const int ...;
</pre>

<li>
These qualifiers are otherwise consumed and read where they are found.
</ul>
-->



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Welcome to the Parallel Future of Computation (152 pts)]]></title>
            <link>https://hvm-page.pages.dev</link>
            <guid>40387394</guid>
            <pubDate>Fri, 17 May 2024 07:37:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hvm-page.pages.dev">https://hvm-page.pages.dev</a>, See on <a href="https://news.ycombinator.com/item?id=40387394">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><main><section id="hero"><div><p><h2>WELCOME TO <br>THE PARALLEL <br>FUTURE OF COMPUTATION</h2></p></div><img alt="Logo" fetchpriority="high" width="400" height="400" decoding="async" data-nimg="1" srcset="https://hvm-page.pages.dev/_next/image?url=%2Flogo.gif&amp;w=640&amp;q=75 1x, https://hvm-page.pages.dev/_next/image?url=%2Flogo.gif&amp;w=828&amp;q=75 2x" src="https://hvm-page.pages.dev/_next/image?url=%2Flogo.gif&amp;w=828&amp;q=75"></section><section><div><p><span>BEND</span></p><h2 id="parallel-programming-language">A PARALLEL LANGUAGE</h2><p>With <b>Bend</b> you can write parallel code for multi-core CPUs/GPUs without being a C/CUDA expert with 10 years of experience. It feels just like Python!</p><p>No need to deal with the complexity of concurrent programming: locks, mutexes, atomics... <b>any</b> work that can be done in parallel<!-- --> <b>will </b>be done in parallel.</p></div><div><p><img alt="Example program - Simple parallel sum" fetchpriority="high" width="908" height="511" decoding="async" data-nimg="1" src="https://hvm-page.pages.dev/bend-card-image.svg"></p></div></section><section><div><p><span>HVM</span></p><h2>A PARALLEL RUNTIME</h2><p>In 1997, Yves Lafont devised a concurrent computation model,<b> Interaction Combinators</b>, which surpasses Turing Machines and the λ-Calculus in fundamental aspects.<!-- --> <a target="_blank" href="https://www.sciencedirect.com/science/article/pii/S0890540197926432">[1]</a></p><p>Based on that model, we built <b>HVM</b>: a compiler and evaluator for high-level languages that automatically achieves near-ideal speedup, up to 1000+ threads.<!-- --> <a target="_blank" href="https://paper.higherorderco.com/">[2]</a></p><p><b>Bend</b> is made from scratch to harness its power!</p></div><div><p><img alt="Comparison chart between processors" fetchpriority="high" width="908" height="511" decoding="async" data-nimg="1" src="https://hvm-page.pages.dev/performance-card-image.svg"></p><p><span><div><p><span>Comparison Chart</span><span>Tree Radix Sort, 1 million branches</span></p></div></span></p></div></section><section><h2>HOW IS<br> IT POSSIBLE?</h2><p><video muted="" loop="" controls=""><source src="https://hvm-page.pages.dev/HVM-explanation.mp4" type="video/mp4">Your browser does not support the video tag.</video></p></section><section><span>HVM | Bend | Kind</span><h2>OUR PROJECTS</h2></section><div><h2>BE A PART <br>OF THE PARALLEL <br>FUTURE OF COMPUTERS</h2><p><a href="https://discord.higherorderco.com/"><img alt="X Icon" loading="lazy" width="37" height="34" decoding="async" data-nimg="1" src="https://hvm-page.pages.dev/discord-icon.svg"></a><a href="https://hvm-page.pages.dev/cdn-cgi/l/email-protection#2645494852474552664e4f414e4354495442435445490845494b"><img alt="Email Icon" loading="lazy" width="37" height="34" decoding="async" data-nimg="1" src="https://hvm-page.pages.dev/mail.svg"></a></p></div></main></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ADSL works over wet string (2017) (202 pts)]]></title>
            <link>https://www.revk.uk/2017/12/its-official-adsl-works-over-wet-string.html</link>
            <guid>40387318</guid>
            <pubDate>Fri, 17 May 2024 07:24:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.revk.uk/2017/12/its-official-adsl-works-over-wet-string.html">https://www.revk.uk/2017/12/its-official-adsl-works-over-wet-string.html</a>, See on <a href="https://news.ycombinator.com/item?id=40387318">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-5029701509758256719" itemprop="description articleBody"><p>
Broadband services are a wonderful innovation of our time, using multiple frequency&nbsp;<i>bands</i>&nbsp;(hence the name) to carry signals over wires (usually copper, sometimes aluminium). One of the key aspects of the technology is its ability to adapt to the length and characteristics of the <i>line</i>&nbsp;on which it is deployed.</p><p>

We have seen faults on broadband circuits that manifest as the system adapting to much lower speeds, this is a key factor as a service can work, but unusually slowly, over very bad lines.</p><p>

It has always been said that ADSL will work over a bit of wet string.</p><p>

Well one of our techies (<a href="http://www.aa.net.uk/">www.aa.net.uk</a>) took it upon himself to try it today at the office, and well done.</p><p>

He got some proper string, and made it wet...</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYcBN70mIYdRYigskEuV8PDE0yPRs7zbyzDkzGun0h-y4fopOv6C3J3wpbluSvkfJD3HicV2NgH7LwAa4ROvo8m3wzA2uIhIthODnRtTbaotQl-2Ul17FeGaS-BgW_Pm90WDzAekueXfn8/s1600/DQziME8WsAAT8ZP.jpg-large.jpeg" imageanchor="1"><img data-original-height="1600" data-original-width="1600" height="400" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYcBN70mIYdRYigskEuV8PDE0yPRs7zbyzDkzGun0h-y4fopOv6C3J3wpbluSvkfJD3HicV2NgH7LwAa4ROvo8m3wzA2uIhIthODnRtTbaotQl-2Ul17FeGaS-BgW_Pm90WDzAekueXfn8/s400/DQziME8WsAAT8ZP.jpg-large.jpeg" width="398"></a></p>
<p>
It turns out he needed salty water to get anywhere.</p><p>

A 2m length...</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhzfxiXpSYRB2FnNaoG__p1X5ksR9YZZCgLjqO0fRSh1Mzbj8_eKyCWgWXSs6wq62qT6m5KqMztxpvDgfabiV3m2nCutk9alzjrCHZBwbl-DbaPbOzv5GGzY6jb0UOQXeDlAfCqGIiglzmL/s1600/DQ3XL2hXcAAhodq.jpg-large.jpeg" imageanchor="1"><img data-original-height="1600" data-original-width="900" height="400" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhzfxiXpSYRB2FnNaoG__p1X5ksR9YZZCgLjqO0fRSh1Mzbj8_eKyCWgWXSs6wq62qT6m5KqMztxpvDgfabiV3m2nCutk9alzjrCHZBwbl-DbaPbOzv5GGzY6jb0UOQXeDlAfCqGIiglzmL/s400/DQ3XL2hXcAAhodq.jpg-large.jpeg" width="225"></a><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg_gPzLHD7Pd0gXBoMSPzHBfgyr-uvdRDZW9MOGNImhV52TQ__qhq8SSZ2jejJMAS-n6wRr8eTskizEgMe2kZs6wu6JRzengVCeKOD_fxt3nQQceEkihdfyGneVDGDx3u_0mopFy9RzJQkH/s1600/DQ3MsLnWsAAmJs7.jpg-large.jpeg" imageanchor="1"><img data-original-height="1600" data-original-width="900" height="400" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg_gPzLHD7Pd0gXBoMSPzHBfgyr-uvdRDZW9MOGNImhV52TQ__qhq8SSZ2jejJMAS-n6wRr8eTskizEgMe2kZs6wu6JRzengVCeKOD_fxt3nQQceEkihdfyGneVDGDx3u_0mopFy9RzJQkH/s400/DQ3MsLnWsAAmJs7.jpg-large.jpeg" width="225"></a></p>
<p>
And the result - it works!!! Not even that slow (3½Mb/s down) though slow uplink. Don't dare touch the string though...</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjBR2f_22FYsSlVy42w7VznpfqOFsNM0_028eo23bUhJFDubCwDAMTQaSow9vM3z64MNJtysx8hF1PvcDBaPEPR04o7hdwifiCJfzc7qgWih-xC_7U55JZED8LFSMdfZN4NDjNfct155RPw/s1600/DQ3NL95XUAAabAq.jpg-large.jpeg" imageanchor="1"><img data-original-height="900" data-original-width="1600" height="225" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjBR2f_22FYsSlVy42w7VznpfqOFsNM0_028eo23bUhJFDubCwDAMTQaSow9vM3z64MNJtysx8hF1PvcDBaPEPR04o7hdwifiCJfzc7qgWih-xC_7U55JZED8LFSMdfZN4NDjNfct155RPw/s400/DQ3NL95XUAAabAq.jpg-large.jpeg" width="400"></a></p>
<p>
So, there you go, ADSL over 2m of literal "wet string". Well done all for testing this. It shows the importance of handling faults that seem to just be "low speed".</p><p>

As a bonus, fit tin cans to both ends and you get voice as well as broadband on the same wet string!
</p>
</div></div>]]></description>
        </item>
    </channel>
</rss>