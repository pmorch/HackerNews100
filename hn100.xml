<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 02 Jul 2023 17:00:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[/u/spez is right about feudalism and that's why Reddit is doomed (120 pts)]]></title>
            <link>https://maya.land/monologues/2023/07/01/spez-feudalism-reddit.html</link>
            <guid>36561166</guid>
            <pubDate>Sun, 02 Jul 2023 13:11:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://maya.land/monologues/2023/07/01/spez-feudalism-reddit.html">https://maya.land/monologues/2023/07/01/spez-feudalism-reddit.html</a>, See on <a href="https://news.ycombinator.com/item?id=36561166">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <p>Since Elon Musk bought Twitter, people have been making a lot of comparisons between internet institutions – particularly various social media things – and premodern political forms and figures.</p>

<p>These comparisons typically rely on the level of understanding of antiquity or of medieval life you’d expect to get from <a href="https://www.dk.com/us/book/9781465481542-dkfindout-castles/">DKfindout! Castles</a>. I am not a historian, but I know, like, just about enough to be embarrassed for the speakers.</p>

<p>So in this post, I want to talk a bit about how the relevant historical phenomena worked, a bit about why feudalism tends to be a pretty bad comparison to internet stuff, and a bit about why Reddit CEO Steve Huffman is – still! – maybe more correct than he knows when he compares moderators to landed gentry… in a way that suggests the end coming for Reddit as-we-know-it<sup id="fnref:medieval" role="doc-noteref"><a href="#fn:medieval">1</a></sup>.</p>

<h2 id="medieval-sociopolitics-in-my-blog-its-more-likely-than-you-think">Medieval sociopolitics? In <em>my</em> blog? It’s more likely than you think</h2>

<p>Feudalism is such a shit concept to work with that if you look it up in the Encyclopedia Britannica, instead of getting a history of feudalism, you get <a href="https://www.britannica.com/topic/feudalism">a history of the term’s use in history, how it has always been an awkward oversimplification, and how it only got muddier over time</a>. Everything I can find goes to great pains to explain that any summary you can give will erase a lot of very important variance over time and place, and that even within one state at one time <a href="https://en.wikipedia.org/wiki/Feudalism_in_the_Holy_Roman_Empire#Types">shit could get stupid complicated</a>.</p>

<p>However! If I am to claim that internet comparisons to feudalism are bad, then I need to evaluate charitably what they might best mean, squinted at under flattering light.</p>

<p>To that end, let’s try and disentangle two parts. <a href="https://acoup.blog/2022/09/23/collections-teaching-paradox-crusader-kings-iii-part-iia-rascally-vassals/">Bret Devereaux, actual historian</a><sup id="fnref:bret" role="doc-noteref"><a href="#fn:bret">2</a></sup>:</p>

<blockquote>
  <p>Veteran readers of the blog will already know that I generally avoid the terms ‘feudal’ and ‘feudalism,’ as do many medievalists these days. The problem is that ‘feudalism’ comes to conflate two very different systems: manorialism, the economic system which structured the relations between peasant farmers (mostly serfs) and their elite landlords, and vassalage, the political system which structured relations between elites. But these systems and the relationships they structured were very different and their conflation together as a single system is a modern, not medieval, construction.</p>
</blockquote>

<p>Okay. Manorialism and vassalage. This sounds doable, right?</p>

<p>Here follows sketched-out summary.</p>

<h2 id="manorialism">Manorialism</h2>

<ul>
  <li><a href="https://acoup.blog/2020/07/24/collections-bread-how-did-they-make-it-part-i-farmers/">Premodern subsistence farmers, on their own, don’t optimize for producing a surplus, but instead on increasing their resiliency.</a><sup id="fnref:europe" role="doc-noteref"><a href="#fn:europe">3</a></sup> This is because having a surplus – whether in goods or money – is, in their context, both more difficult and less useful than you might expect. To increase resiliency, they can employ less facially efficient farming methods that will diversify their risks, and when times are good, they can invest any small surplus in social relations.</li>
  <li><a href="https://acoup.blog/2020/07/31/collections-bread-how-did-they-make-it-part-ii-big-farms/">Large landholders rely on the desperation of the little people to make it possible for them to secure enough borrowed/bought/forced labor to make those larger holdings produce</a>.</li>
  <li>The relationship between the small farmers and the elites is the exchange of “labor, deference and some support” for “[military or political] protection […], some access to farming capital and most importantly the implied promise that in a catastrophe the big landholder would come to the ‘rescue’.”-</li>
  <li>This relationship is largely exploitative. In many places and times, it relies on a lot of “non-free labor”. The non-free-ness of it all is enforced with violence or the threat of violence, whether state violence or not.</li>
  <li>The manorial relationship also “[serves] to reorient production away from subsistence and towards surplus” to support elite lifestyles. “[Doing] anything that isn’t farming means somehow forcing subsistence farmers to work more and harder in order to generate the surplus to provide for those people who do the activities which in turn the subsistence farmers might benefit from not at all.”</li>
</ul>

<h2 id="vassalage">Vassalage</h2>

<p>It is with some trepidation that I will point to non-popular-history<sup id="fnref:pop" role="doc-noteref"><a href="#fn:pop">4</a></sup>, “Fiefs and vassals : the medieval evidence reinterpreted”, by Susan Reynolds<sup id="fnref:admit" role="doc-noteref"><a href="#fn:admit">5</a></sup>. If anyone with a relevant degree wants to tell me I’m wrong in my summary or choice of source, they are welcome<sup id="fnref:google" role="doc-noteref"><a href="#fn:google">6</a></sup>.</p>

<p>She reiterates the thing about feudalism being a blob of concept that confuses more than it elucidates. She extends that to vassalage and fiefs, saying that, well, we might have hoped they would be more dependable concepts since they’re smaller in scope, but that was wrong. To the extent that we can pin down little bits of them with adequate definition, she says they aren’t as generally useful as they’ve been made out to be.</p>

<p>So in as far as we are here to make a comparison between vassalage and anything internet, it is probably fair to say that we are making it to a kind of 16th-century historical myth-narrative rather than a usefully abstracted description of real social relations.</p>

<p>Of this vassalage narrative, then:</p>

<ul>
  <li>Vassalage denotes the relation between a lord and his free or noble follower. This was undertaken with oath and ceremony. It obligated the lord to “protect and maintain his vassal”, and obligated the vassal to provide military aid and attend at the lord’s court. (The latter obligations were also sort of implied outside of vassalage relationships if you were otherwise propertied enough to be <em>able</em> to provide demanded knights, for instance.)</li>
  <li>It hacked a state structure into existence through personal relations when “there was [supposedly] no idea of the state and very little idea of impersonal, public obligations at all”<sup id="fnref:publica" role="doc-noteref"><a href="#fn:publica">7</a></sup>.</li>
  <li>In the modern mind, there are nice crisp distinctions between “rent” and “tax”. This is because we like to imagine we have a crisp concept of “ownership” of land distinct from jurisdiction. In fief-holding Europe, it’s more accurate to say that the <em>classic</em> ideological structure dictates that the land belongs to God, and God says kings have charge of bits of it, and the kings say lords have charge of bits of those bits, and the lords may say various non-lords have charge of bits… Rent-y-tax-y obligations are owed back up chain, and rights-like obligations exist along it. However, this <em>idea</em> obscures that folks down the chain may often feel that their land is more meaningfully theirs by <em>custom</em> than by the higher layers’ authority, and the language in primary sources doesn’t dictate clean lines.</li>
  <li>“[In] an age of low literacy, few records, and poor communications, great men needed to use personal loyalties, ceremonies, and <em>ad hominem</em> rewards to maintain and extend their power over the land; and that, since rulers, nobles, and most free men lived off the work of a dependent peasantry, rulers could maintain, control, and reward their followers by delegating control over land and peasants to them. It also seems clear that, as collective activity became more organized, as bureaucracy developed, and as literacy increased the range and power of propaganda, so government relied less on direct interpersonal relations.”</li>
</ul>

<h2 id="one-more-thing-state-capacity">One more thing: state capacity</h2>

<p>There’s this book called <a href="https://en.wikipedia.org/wiki/Seeing_Like_a_State">Seeing Like A State</a> by James C. Scott. If you’re not in the mood to read it, read <a href="https://www.ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility/">the first chunk of this blog post</a>, but mentally credit it with a bunch of examples Rao doesn’t include in the summary. This section is kind of cribbed from parts of it.</p>

<p>So – why did our mythically-feudal king need vassals, if other states didn’t always have them?</p>

<p>A state needs revenue, and in the premodern era, that’s got to come “mainly from levies on commerce and land, the major sources of wealth.” This turns out to be at least as complicated as taxes today, if for very different reasons. Knowing <em>from a distance</em> what taxes you should demand is hard. Take too little, and your state is feeble. Take too much, and you’ll have a whole new set of problems: flight, resistance, etc.</p>

<p>The local systems of measurement may vary from tiny place to tiny place – and even if you have more abstract ones to hand, local practices and land quality may mean that “two acres” in one place might acceptably be taxed far more highly than in another. So you can see why there was so much pressure to standardize the measures in the early modern era, right?</p>

<p>But it wasn’t <em>just</em> the measures getting standardized – it was also the rights people had.</p>

<p>Scott gives an example amalgamated from Southeast Asian practices. You might have land that’s parceled out among families during the main growing season, but reparceled out every seven years. After the main-season crop is harvested, then everything is common land, so anybody in the village gets to graze their animals and plant dry-season crops. But you might only be allowed to graze a certain number of animals, and that right might be transferable among the villagers, but not to outsiders. You might get to gather firewood for your own use but not for commercial sale – customs where fruit belongs to the family who planted a tree, even if not on their current parcel, but <em>fallen</em> fruit is fair game for anyone – rules about who gets branches that broke off of trees in storms… Rules “riven with inequalities based on gender, status, and lineage.”…</p>

<p>And <em>all</em> of this varying wildly from place to place.</p>

<p>Now: how could you as the king figure out how much rent-tax to demand directly from each of these people? Maybe you can figure out to some approximation the overall productivity of the overall land associated with the community, but actually extracting resources has to come from these households, right? And none of the inequalities are clear to you as an outsider – and <em>everyone will lie to you</em> and to your representatives because <em><a href="https://www.youtube.com/watch?v=ICUwC-f8iYg">fuck tha rent</a></em>.</p>

<p>And do you have the <em>capacity</em> to go around enforcing all this? To send people from your royal court out to each little hamlet, figure out how much to demand, and punish those who don’t meet the demand?</p>

<p>This points to an important function of the local feudal hierarchy, looked at from the perspective of <a href="https://en.wikipedia.org/wiki/State_capacity">state capacity</a>. If the vassal is around in the community to be able to figure out the local practices and maximize the rent-tax he can extract from the little people, then the king can extract value from the vassal and thus indirectly the region, even without having a bureaucracy under his own control that knows every town’s Local Fruit-Gathering Rules.</p>

<p>One of the main themes of Scott’s book is that throughout history, it is infeasible for states to build the Local Fruit-Gathering Rulebook at scale if they want to increase their centralized power and do Bigger Things. So what they actually do is come through and force people to stop measuring things the ways they have and to use standard measures, to stop thinking about property rights the ways they have and to use standard property rights, to stop using names the ways they have and to use patronyms… and while everyone hitting the pointy end of it <em>hates</em> this stuff, it makes it so much easier for the top-level state to do its state business that it can expand its state aspirations and be Bigger<sup id="fnref:scott" role="doc-noteref"><a href="#fn:scott">8</a></sup>. The capacity of the state isn’t just a function of the kind of bureaucracy you can build if you can force people to become more governable.</p>

<h2 id="why-this-stuff-doesnt-map-well-onto-the-internet">Why this stuff doesn’t map well onto the internet</h2>

<p>I would hope that everything I’m about to write is self-evident – so self-evident that you might as well skip this section. However, I would also have hoped that “people who want to sign up for an account on a new web service instead of using an old web service they don’t like as much anymore” would not consider it appropriate to term themselves “refugees”, so forgive me some obvious points.</p>

<ul>
  <li>The business at scale in social media is advertising. I haven’t given up hope on <a href="https://en.wikipedia.org/wiki/The_Long_Tail_(book)">the long tail</a>, <a href="https://www.honest-broker.com/p/where-did-the-long-tail-go">Gioiaian jeremiads notwithstanding</a>, but at scale, today, direct monetization pales in comparison to advertising’s revenues. This means that the economic productivity of social media use is indirect and highly mediated. Also, the business models are often opaque. This is a lot harder to track than wheat farms in medieval France somewhere. <strong>Comparisons risk implying we understand more than we accurately do</strong> about just who’s generating value and just how. (…more on this.)</li>
  <li>In the settled medieval context, there are subsistence farmers, and there are people eating surplus that subsistence farmers were squeezed into producing. Other food sources do not exist at the scale needed for the population. Reliable sources assure me the eventual consequence of going without food is death. Social media – the whole user-content internet – is only one of a whole host of entertainments, information sources, and communication options available to the kind of person who has internet access. Breaking one’s e.g. YouTube habit may be unpleasant or difficult, but it is not inherently life-or-death. <strong>When we make comparisons between our info-luxuries and survival necessities, we ratchet up the stakes in these conversations way too high</strong>, way too fast… and we also distract from <a href="https://apnews.com/article/technology-health-eating-disorders-center-government-and-politics-0c8ae73f44926fa3daf66bd7caf3ad43">actual life-or-death issues at play</a>.</li>
  <li>Over my lifetime, there have been a number of attempts at manufacturing digital scarcity. They have been pretty embarrassing and not made too much of a dent. That doesn’t mean that there are <em>no</em> relevant scarcities to bear in mind – money on offer for advertising, eyeball-hours monetizable on the other end – but <strong>naive analogies between, like, namespaces and <em>arable land holdings</em> often get pretty silly</strong>.</li>
  <li>I am not in debt bondage to Instagram. You are not a LinkedIn serf. Yes, there are relevant “<a href="https://doctorow.medium.com/facebooks-war-on-switching-costs-27fa4aeb7978">switching costs</a>” to this stuff. Those are notable because they operate in contrast to the general idea of businesses offering freely substitutable goods and services, not because <em>someone will come recapture you if you try to leave</em>. When someone writes a “Why I’m Leaving Twitter” post, they do not then have to go defend their violation of an oath of homage on the battlefield! <strong>If we pretend that we’re less free to leave than we are, we distort reality in ways that only benefit the big platforms.</strong></li>
  <li>If you are a premodern small farmer, you are subject to the varying jurisdictions that cover the land you live on and farm<sup id="fnref:transhumance" role="doc-noteref"><a href="#fn:transhumance">9</a></sup>. The social ties associated with your local community are essential to your survival. If you are an internet user today, you <a href="https://xkcd.com/1810/">have clicked through more terms of service than you can count</a>, migrated through more dead sites than you remember, and your ability to feed yourself is extraordinarily unlikely to be truly predicated on the particular group of otherwise-strangers with whom you interact on any given app<sup id="fnref:networking" role="doc-noteref"><a href="#fn:networking">10</a></sup>. <strong>There are a lot more options to the modern internet user than acquiescence or revolt-in-place.</strong></li>
  <li>The jurisdiction associated with lords’ enfiefed land is a burden, not a perk. <strong>Having to deal with little people problems is not a longed-for opportunity to get to tell people what to do – it is part of the trade-off necessary to get to extract rents/taxes from them.</strong> Remember: these are <em>actually</em> inherited positions, not first-mover-benefits-maintained-over-time. I am sure you can find an example of some medieval baron getting petty about dumb shit (send it to me!), but for the most part, everything I’ve read suggests they are trying to further delegate this work to <em>their</em> retainers so they have more time for… you know, falconry. Fulfilling their other obligations. Flexing on other rich people. 1% problems.</li>
</ul>

<h2 id="so-if-its-that-bad-why-do-people-keep-making-the-comparison">So if it’s that bad, why do people keep making the comparison?</h2>

<p>Reynolds’ book begins:</p>

<blockquote>
  <p>Feudalism, to any members of the general public who ever refer to it, stands for any hierarchical and oppressive system. Bosses or landlords who bully their employees or tenants are being feudal. If they bully them fiercely they are worse: they are positively medieval.</p>
</blockquote>

<p>To some extent, that’s the long and the short of it. The kind of person who imagines that the Dark Ages are called that because they weren’t yet Enlightened is not trying to make a historically-grounded point about political theory. They’re trying to say that something <em>sucks</em>. Anyone who grew up in a liberal democracy absorbed quite a lot of civic ideology about what makes governments legitimate; therefore, any authority that the speaker had no hand in appointing is a likely target of this condemnation. “Someone who isn’t me has power and control and I don’t like it”. That’s a fair thing to want to express, even if I’m salty about inaccuracy of comparison.</p>

<p>So… okay, so what? I didn’t get thousands of words into this just because <a href="https://xkcd.com/386/">someone said something obviously wrong about a medieval thing on the internet</a>.</p>

<p>Can we redeem this desire to compare the two?</p>

<p>How far can we get with a comparison if we try to say <code>/u/spez</code> is right?</p>

<h2 id="steve-my-liege-a-word">Steve, my liege, a word</h2>

<p>Steve Huffman (<a href="https://old.reddit.com/user/spez"><code>/u/spez</code></a>) is the CEO of Reddit. Reddit is a social media site that is somewhat unlike its competitor social media sites in form, but which is trying to have its business become publicly traded. It therefore needs to become more like those other sites – at least in profitability narrative. Reddit makes <a href="https://www.theverge.com/2021/8/12/22621445/reddit-valuation-revenue-funding-round">most of its revenue from advertising</a>. It relies on a vast amount of unpaid volunteer moderation labor – <a href="https://clivethompson.medium.com/reddit-moderators-do-over-3-4-million-in-free-labor-every-year-d3571235c32c">$3.4 million’s worth a year</a>, by one estimate. Some of Huffman’s IPO-minded moves have proven <a href="https://health.wusf.usf.edu/npr-health/2023-07-01/reddit-says-new-accessibility-tools-for-moderators-are-coming-mods-are-skeptical">very hostile</a> to the moderators, who have been protesting by taking subreddits dark – restricting access or posting or otherwise <a href="https://www.cnn.com/2023/06/23/tech/reddit-john-oliver-protest/index.html">creatively disrupting their function</a>.</p>

<p>And then Steve forces my hand, <em>makes</em> me write all this, by <a href="https://www.nbcnews.com/tech/tech-news/reddit-protest-blackout-ceo-steve-huffman-moderators-rcna89544">saying the following</a>:</p>

<blockquote>
  <p>If you’re a politician or a business owner, you are accountable to your constituents. So a politician needs to be elected, and a business owner can be fired by its shareholders.</p>
</blockquote>

<blockquote>
  <p>And I think, on Reddit, the analogy is closer to the landed gentry: The people who get there first get to stay there and pass it down to their descendants, and that is not democratic.</p>
</blockquote>

<p>There is obviously a lot about this that immediately sounds alarms, right?</p>

<ul>
  <li>Look, I’m even less of a lawyer than I am a historian, but if “a business owner can be fired by its shareholders” then they weren’t actually the <em>owner</em> of the business, no? They were, like, a CEO or something?</li>
  <li>Conflating citizens and shareholders is a classic American thought disease. Polysyllabic cringe.</li>
  <li>It sounds like Steve thinks that “gentry” operated on <a href="https://www.history.com/this-day-in-history/settlers-race-to-claim-land">Oklahoma land grab rules</a>.</li>
  <li>While <em>I</em> am willing to get hype about the general idea of property inheritance being so anti-democratic in nature that a democratic society must expropriate that property to function, I am guessing Steve Huffman, <a href="https://duckduckgo.com/?t=ffab&amp;q=steve+huffman+net+worth&amp;ia=web">estimated net worth in the millions</a> Steve Huffman, is not too married to what that implies, and really intends only to speak of inherited <em>authority</em>.</li>
</ul>

<p>But… fine. Come at me, Huffman.</p>

<h3 id="what-can-we-get-from-comparing-moderators-to-feudal-lords">What can we get from comparing moderators to feudal lords?</h3>

<h4 id="you-need-manorialism-to-make-little-farmers-produce-surplus-and-you-need-moderation-to-make-openly-hosted-user-generated-content-ad-monetizable">You need manorialism to make little farmers produce surplus, and you need moderation to make openly hosted user-generated content ad-monetizable</h4>

<p>Our subsistence farming household does not really want to produce the kind of surplus that can then be rent-taxed away, so the feudal structure has to force that to happen to exist. There’s real production, valuable activity, going on no matter what – but to make your state a Thing you need to beat that production into a useful shape.</p>

<p>Small, closed groups of internet users often function on top of internet infrastructure without explicit internal moderation. You, the reader, are probably in a number of group texts from which you have never formally banned a member for spam.</p>

<p>The openness of a platform can create a lot <em>more</em> monetizable engagement than the group chats. There are many of you who will never get to snigger at the jokes in my group chats, and <a href="https://en.wikipedia.org/wiki/Homo_economicus">Homo economicus</a> might see that as lost opportunity to engage-and-advertise-and-monetize, if he squints. A missed opportunity for extractable surplus – because, like the subsistence farmers trying to maximize resilience instead of production, my friends are not sharing bad puns with an eye toward anyone’s ad revenue.</p>

<p>However, open, public internet infrastructure has its own downward tendencies. Whenever a truly unmoderated hosting service opens on the internet, there is a clock ticking down until that service is first used to host <a href="https://www.techdirt.com/2022/11/02/hey-elon-let-me-help-you-speed-run-the-content-moderation-learning-curve/">content related to child sexual abuse.</a> The openness can create an economic opportunity, but you need moderation to make that hold together – even just on the legal front.</p>

<p>Or just imagine an ad equilibrium. You, a user, are probably willing to tolerate a certain amount of promotional stuff in a Web Thing before you go off and find another Web Thing; call it an ad-viewing threshold. Variable by individual, but probably measurable in aggregate. Promotional material that is posted by a user and shown to you counts against your threshold, and any ad space bought with the platform on your feed also counts against your threshold, but only the latter makes the platform money. If the platform has enough would-be paid-advertisers to max out whatever it estimates its users’ ad-viewing threshold to be, then it has a strong incentive to go and hunt down any user content on its platform that has even a hint of promotion and hide it from sight. Maybe it’ll get those users to give up and pay them, but even if it doesn’t, it stops them from displacing monetizable ads under your threshold<sup id="fnref:unicode" role="doc-noteref"><a href="#fn:unicode">11</a></sup>.</p>

<p>So even if a moderator isn’t engaging with the ad infrastructure of a site, and <em>even if they’re not explicitly dealing with maintaining a high bar of “advertiser-friendliness”</em>, their role functions to make the thing stick together in the open way that produces the engagement-surplus that attracts ad money.</p>

<h4 id="local-variance-in-custom-makes-it-really-hard-to-moderate-from-outside-the-community">Local variance in custom makes it really hard to moderate from outside the community…</h4>

<p>If you ask heavy-use Redditors about their use of the site, many will, unprompted, bring up that the main big subreddits are trash and, while they might <em>also</em> subscribe to <code>/r/gifs</code> or whatever, they’re really <em>there</em> for the niche communities that are quite different – in both tone and content. Yes, it’s impressive that the recommendation algorithms on short-form video platforms can deduce my susceptibility to <a href="https://www.instagram.com/nicole_coenen/">thirst-trappy woodcutter lady content</a>, but the level of specificity in which such content is arranged on Reddit is far more impressive (sometimes horrifying in its specificity, if we’re being honest). These are far more diverse in intent and effect than the “communities” of shared engagement that arise around algorithmically recommended topics.</p>

<p>Maintaining engagement on <code>/r/AskHistorians</code> requires a very different standard of post and comment moderation than e.g. <code>/r/circlejerkaustralia</code>; they are trying to be different things, people <em>go</em> to them for different things, and the rules that will best encourage posters to post and consumers to consume are different.</p>

<p>How would you do that in a scalable way from the outside? Hell, set aside trying to keep things on-topic – from the outside, how can you keep up with the ever-shifting dog whistles and coded signifiers of bigotry that accompany the first encroachments of <a href="https://en.wiktionary.org/wiki/Nazi_bar">Nazis into your bar</a>? Maybe advertisers won’t understand either to care about the first wave, but you better believe they won’t like the media coverage of the later ones…</p>

<p>In an environment as heterogeneous and nichey as Reddit has been: you can’t. It works about as well as compiling the Local Fruit-Gathering Rules with the Firewood Addenda for every village in your nation. So if you’re going to have heterogeneous and nichey social media, you need moderation to be heterogeneous and nichey, enacted by the kind of person Scott calls a “local tracker”. <strong>Reddit as it has existed does not have the “state capacity” to do this any other way.</strong> Maybe, at least for the high-engagement subreddits that it considers most important, it can <em>replace</em> the local trackers with more compliant ones – but it can’t go without them. The king of Reddit, today, needs somebody to go be baron. If he couldn’t get them for free, he’d have to pay them.</p>

<h4 id="but-if-you-can-rent-tax-from-outside-the-community-you-can-shift-the-balance-of-power">…but if you can rent-tax from outside the community, you can shift the balance of power</h4>

<p>Reddit does not pay its moderators. It is not fully accurate to say that Reddit even confers the status and control that moderators possess, because that status and control is scoped to their moderated communities, and thus principally a function of community prominence. Anyone can be <em>a</em> mod; being a moderator of something that <em>matters</em> is something different entirely, and it’s Reddit’s userbase that makes <em>that</em> happen. On Reddit, many communities are extremely fungible; use the site long enough and you’ll observe schisms and migrations to new bits of namespace. We can argue that there is <em>some</em> extent to which community prominence is driven by the desirability of the community name, which is a bit conferred by Reddit – if I’m looking for an X subreddit, I’m going to look for <code>/r/X</code> before <code>/r/originalX</code>, <code>/r/seriousX</code>, <code>/r/XUncensored</code> etc., so there’s <em>something</em> meaningful to who gets to keep running <code>/r/X</code> – but in practice this is moderately fluid, as genres of content merge and divide even without explicit mod drama.</p>

<p>So if I were going to pin down what Reddit “gives” its mods, I would probably put it something like this: The ability to create and grow an online community with a bunch of useful (and not free-to-operate!) infrastructure and with intercommunity discovery among a large existing userbase.</p>

<p>What Reddit <em>gets</em> from its mods is – following the above – the ability to make the money that it makes from ads.</p>

<p>So how do you know whether that’s a fair trade?</p>

<p>It isn’t disqualifying to our comparison that the mods/lords don’t get paid in the same kind of thing that the company/king gets. For example, it was fairly common for the king to principally extract <em>military</em> support from the lords, rather than the same kind of rent-taxes the lords extracted from the commoners. However, this dynamic was always a bit in flux; making your vassals mad by giving them a shitty trade-off posed risks the king had to deal with in much the same way that the lords had to contend with the risk of overtaxing the populace. No one involved was <em>stupid</em>, and all the weird ideological language about divine right of kings shouldn’t make you think that people weren’t looking out for their own interests.</p>

<p>But crucially – the lords knew what kind of revenues they were getting from their lands, and they knew what the king was getting from them in turn. Maybe they’d lie to the king about the exact surpluses they’d extracted, just like the farmers would lie as much as possible about how much surplus there <em>was</em> – but their local control meant they had the local knowledge necessary to piece together the situation themselves.</p>

<p>So you can <em>imagine</em> that maybe the status quo <em>is</em> a fair trade – maybe the costs of running Reddit (data centers, engineers, lawyers), minus the ad revenue pretty much balance what Reddit gets from the mods in return for the chance to run their little communities. But how do you <em>know</em>?</p>

<p>A mod might be able to estimate how replaceable the job they do is, how replaceable their <em>community</em> is, and start trying to figure out what their leverage is…</p>

<p>But how do they estimate Reddit’s end of the deal?</p>

<p>Let’s talk about online advertising platforms for a second. (Sorry.)</p>

<p>YouTube does some revenue-sharing with video creators, so the amount of information exposed illustrates some interesting dynamics. First, remember: <em>many videos lose YouTube money, possibly even most.</em> They don’t ever get enough monetizable engagement to pay for their own (secret) marginal contributions to operating costs. Video hosting is expensive! But where there <em>is</em> monetizable engagement, the fact that we have <em>some</em> numbers doesn’t clear as much up as you might think.</p>

<p>Let’s say there’s some genre of enterprise software that’s hugely profitable to sell, but niche in potential customers; to advertise products of this kind, you need to reach people who work at companies who have jobs where they can influence buying decisions. Let’s say you are trying to sell one of these products. You know that the kind of person with the kind of job that makes them useful to influence likely uses some <em>other</em> kind of software – <a href="https://en.wikipedia.org/wiki/Tableau_Software">Tableau</a>, maybe. Now let’s say that <em>I</em> run a YouTube channel with Tableau tutorials. You and your competitors want to advertise on my channel <em>so bad</em>. Maybe you don’t specifically know about my channel, and you’re letting YouTube figure out the eligibility of where to put your ads – but that’s the advertising opportunity that might <em>work</em> for your business, so if YouTube is willing to offer you that specificity, it’s gonna be valuable to you, and that means it’s gonna be <em>pricey</em>. If YouTube is revenue-sharing <em>honestly</em>, then <em>that</em> means that <em>I</em> am gonna get a way bigger cut per video than the creator of a <em>equally watched</em> channel that doesn’t imply some super-valuable advertising opportunity. And indeed, we see some amount of that: “best short term insurance plans” as keywords gets a <a href="https://en.wikipedia.org/wiki/Cost_per_impression">CPM</a> about <a href="https://vloggerpro.com/youtube-niches-with-high-cpm/">50 times higher than “best USB mic”</a>, and some of that trickles down to the actual video creators.</p>

<p>But this can be alienated in ways that give the advertising platform a leg up. Let’s say that there’s a Norwegian law news channel that, like, <em>every</em> Norwegian lawyer watches religiously. It doesn’t post much, maybe, so it doesn’t get a ton of traffic, but the correlation is flawless. Norway has a high CPM, law has a high CPM, so let’s just say that intersection is a super valuable advertising target. Furthermore, though, this channel is so <em>boring</em> and <em>specific</em> that probably anyone who watches it much <em>is</em> a Norwegian lawyer. YouTube keeps track of those accounts. Let’s say there’s a <em>second</em> channel that’s all about… I dunno, drama commentary about the <a href="https://en.wikipedia.org/wiki/Norwegian_National_Opera_and_Ballet">Norwegian National Opera and Ballet</a>, and it just so happens that – unbeknownst to either the law news channel or the opera drama channel – Norwegian lawyers eat this opera drama shit up. This second channel might not have any high-CPM topics associated with it – but <em>if</em> YouTube lets advertisers target by “likely to be a Norwegian lawyer” rather than keywords associated with the actual opera video, then the <em>signal</em> about target demographics gathered from the law news channel combined with the <em>engagement</em> generated by the opera drama channel creates very profitable advertising opportunities for YouTube. Should the law news channel get a cut of the law-targeted ads on the opera drama channel because its content provided the signal that let that targeting happen<sup id="fnref:targeting" role="doc-noteref"><a href="#fn:targeting">12</a></sup>? Should the opera drama channel be paid better for desirability of the eyeball-hours it attracts, independently of opera drama keyword CPM? Does either channel have accurate information on how competitive its market is? If neither channel knows about the correlation, how incentivized is YouTube to remunerate them for the profitability of the intersection?</p>

<p>Maybe YouTube has the data it could crunch to figure out the marginal contributions there, but this begins to <em>sound</em> a bit like… parcels of land that maybe you can farm on <em>some</em> of the year, but during the <em>dry</em> season your <em>neighbors</em> can graze their <em>animals</em> on, but then with <em>trees</em> that the <em>old</em> tenants get to harvest… Right?</p>

<p>Substitute “subreddit” for “YouTube channel” and mix in that Reddit doesn’t have to share its detailed ad numbers, and you start to see how <strong>any given moderator of any given community can’t know whether they’re being exploited or how badly</strong>, even if as a whole it seems like mods produce way more value for Reddit than they benefit from. <em>Your</em> subreddit might marginally make Reddit a ton of money or might <em>lose</em> Reddit money, and you have no visibility into which.</p>

<p>The real dynamics of online advertising are fundamentally hidden from the creators of content and from volunteer moderators, and this means that no one can negotiate from their own actual value in the market. The illegibility of local variation may have meant that feudal lords were necessary to the feudal state, and the illegibility of local custom may similarly have meant that community-embedded moderators are necessary to Reddit as it exists today, but <strong>these platforms have information asymmetry</strong> that weights the balance of power heavily toward them. That’s kinda wild, and I can’t think of a parallel that real landed gentry had to put up with.</p>

<h4 id="the-tension-between-custom-and-putative-authority-seems-important-for-understanding-feudalism-and-moderator-revolt">The tension between custom and putative authority seems important for understanding feudalism and moderator revolt</h4>

<p>Let’s say the king comes to you, a feudal lord, and tells you that <a href="https://daily.jstor.org/peter-the-greats-beard-tax/">you’ve got to shave your beard</a>. Maybe he bothers justifying it, whatever. You don’t <em>want</em> to shave your beard. “You know, your Majesty,” you say, “this new law seems pretty risky. Obviously <em>I</em> would never, but, uh, what if the rest of the lords tell you to, you know. Fuck off?”</p>

<p>One thing the king <em>might</em> say is “Well, my good man, who would <em>definitely</em> never say such a thing himself, they only matter because <em>I</em> say they do. Because God says <em>I</em> matter, and <em>I</em> delegated authority <em>to</em> them. And they know that, so they know that it would be both inherently ridiculous and self-defeating to go against me. Like, what would they be without me? Nothing. Peasants in violation of <a href="https://en.wikipedia.org/wiki/Sumptuary_law#Scotland">sumptuary law</a>.”</p>

<p>You are not totally confident in this description of affairs. It sort of seems to you that the tenant farmers under you are mostly under your control because everyone’s used to it and because you pay men with pointy metal things to tidy up the exceptions, not because you have a royal stamp of officialdom. Sure, <em>technically</em> you are <em>under</em> this king, but is that really relevant to how the yearly harvest gets brought in and taxed? If that royal stamp were revoked, wouldn’t you still be able to exploit the local farmers all the same?</p>

<p>But it’s a little ambiguous. Even if the king’s authority seems like a fiction, if he has the military power to come in, squash you, and give your fief to the neighboring Baron Dogface, then… well, the little people would probably shrug and pay rent-tax to Dogface and try to get on with their own lives.</p>

<p>So who does a subreddit belong to?</p>

<p>Imagine starting one, hyping it up, patiently providing four-fifths of the content until people show up, moderating spam, moderating jerks, growing it gradually over time. Setting rules, establishing tone, running the weekly topical threads. Would you feel like that <code>/r/whateverItWas</code> existed because of <em>Reddit the company</em>? Would you feel like it fundamentally belonged to his Royal Highness Steve, and Steve was just delegating it to you to run? No! You started it! You shaped it! You collaborated with the people it attracted to make it what it is! Even those users – they could switch <em>tomorrow</em> to <code>/r/whateverItWasTwo</code> and you couldn’t do a thing about it – if they decided they didn’t like your vision for <code>/r/whateverItWas</code>, they <em>would</em>, so the fact that they’re still here is a kind of voting with your feet, it <em>validates</em> what you’re doing… To the extent that <code>/r/whateverItWas</code> exists as a <em>thing</em> within Reddit as a whole, to be run or misrun, managed or mismanaged? It feels like <em>yours</em>.</p>

<p>But at the same time, to an external observer – you can see how they would feel that this is pretty silly, right? The thing that’s “yours” is nothing but rows and columns in Reddit’s databases<sup id="fnref:rdbms" role="doc-noteref"><a href="#fn:rdbms">13</a></sup>, a series of flags giving you the power to moderate. The only thing you have is set in Reddit’s systems, a permission to edit stuff under a certain scope a bit differently than other users, wo<em>wee</em> aren’t you important. It’s not you who has a license to the user posts, it’s not you who controls anything but a tiny little square of grass Reddit let you mow. You’re gonna <em>protest</em> over that? The world at large already doesn’t understand why you might volunteer for this work, why you might care enough to do it unpaid – you seem like a schmuck to them, a victim.</p>

<p><strong>But not to Steve.</strong></p>

<p>Steve is calling you landed gentry not because he’s <em>really</em> proposing to make things more <em>democratic.</em> Plenty of the protesting subreddits <em>voted</em> to protest – and even if Reddit vomits some PR about how that only reflects, like, <a href="https://en.wikipedia.org/wiki/1%25_rule">the 9% rather than the 90%</a> that never vote, it’s not really a convincing argument, is it? Steve is calling you landed gentry because <strong>he knows you work for him, making him money, and he wishes that you understood your authority to be delegated from him as your liege lord</strong>. Steve is annoyed that you feel like you have your own thing by local custom when what he sees is a bunch of flags in tables that are getting in the way of his business decisions<sup id="fnref:annoyed" role="doc-noteref"><a href="#fn:annoyed">14</a></sup>.</p>

<p>And I’m pretty sure Steve would like to modernize this whole feudal mess and remove the locality of your control.</p>

<h3 id="the-early-modern-state-comes-to-reddit">The early modern state comes to Reddit</h3>

<p>If we go back to Seeing Like A State for a minute… Technologies and practices that enabled central control were critical in the progression of the early modern state. Get rid of all that local variation in law and standardize it. Get rid of all those confusing local measurements. Bulldoze weird little windy streets and create boulevards that will make it easier to subdue local resistance. Propagandize to center your own importance. Use new media to extend your influence and control. Now you don’t need those local trackers like you once did, now you can administer your state more effectively centrally.</p>

<p>You know who’s managed this beautifully?</p>

<p>TikTok.</p>

<p>TikTok is really good at making people <em>feel</em> like they are seeing hyper-individualized content, but never allowing any explicit division of spaces within it. Without that division, no local norms can be established, no real preference expressed, and thus the tone of content is often uncannily homogeneous across wildly variant topics. This is what you’d expect: the unsteerable algorithmic recommendation feed feels like the final form of <a href="https://www.roughtype.com/?p=8724">content collapse</a>.</p>

<p>If I were a profit-maximizing social media company trying to expand my “state capacity”, I would be throwing money at every feature I could that took explicit navigation away from users, instead offering them frictionless spoon-feeding. Why? Social media that is homogenized (standard language!) is easier to moderate at scale. Moderation that is opaque (downweighting within hidden rankings) is easier to enact without objection, and tunably toward my engagement goals. Without even a sense of search keywords, I would increase the opacity of my advertising even further, obscuring from content creators the value I extract from them. These moves parallel the ones that Scott outlines early modern states taking to pull themselves out of dependency on local trackers. Remember: you don’t have to come up with a bureaucracy that can better handle the nation you have <em>if you can change the nation itself</em> to make it more governable.</p>

<p>And don’t you see those moves coming to Reddit?</p>

<p>I mean, maybe you <em>don’t</em> – Reddit has been pretty clever in allowing power users to maintain the old view characterized by explicit control even while it funnels new eyeballs toward recsys pablum. Part of Reddit’s whole IPO story <em>has</em> to be proving that it can provide a beautifully monetizable spoon-fed Infinite Recommended Content Feed just like Instagram or TikTok or Twitter or whatever – that’s just how social media companies are structured now. But especially if you’re used to using <code>https://old.reddit.com/</code> or one of the very good third party apps that has existed – pop open a private window and navigate to the normal home page. Doesn’t that look a <em>bit</em> like they’re trying to navigate away from how Reddit has always been and towards e.g. Twitter?</p>

<p>So maybe Reddit moderators <em>are</em> like feudal lords in that they have been the necessary structure that allowed Reddit communities to be so <em>wildly</em> different all this time.</p>

<p>And maybe we need to lean into those metaphorical comparisons to imagine what’s coming next. Bloggers invoking the high-level “enclosure of the commons” are phoning it in. Let’s talk <a href="https://en.wikipedia.org/wiki/Enclosure#The_end_of_the_Open_Field_system">conversion of copyholders into leaseholders to remove customary rights</a>.</p>

<p>And maybe we need to look at the ways those metaphorical comparisons <em>don’t</em> hold to imagine our ways <em>out</em>. Premodern subsistence farmers and early modern state subjects didn’t have all the options we do. You can’t bootstrap an alternate state by, like, automating crossposting, but on the internet all <em>kinds</em> of things are possible. (Hell, reminds one a bit of <a href="https://www.vice.com/en/article/z4444w/how-reddit-got-huge-tons-of-fake-accounts--2">Reddit’s own fakery</a>, dunnit?)</p>

<p>So as a non-moderator, as a <em>peasant</em>, as an <em>un-titled pleb</em>, I’d like to thank Steve for issuing the most CEO-flavored version of the age-old phpBB “the mods are mad with power!” complaint I’ve ever heard in my goddamn life.</p>

<p>Long live the King.</p>

<hr>


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing as a form of thinking (122 pts)]]></title>
            <link>https://lopespm.com/notes/2023/07/02/writing-as-a-form-of-thinking.html</link>
            <guid>36560254</guid>
            <pubDate>Sun, 02 Jul 2023 10:56:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lopespm.com/notes/2023/07/02/writing-as-a-form-of-thinking.html">https://lopespm.com/notes/2023/07/02/writing-as-a-form-of-thinking.html</a>, See on <a href="https://news.ycombinator.com/item?id=36560254">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Large language models (LLM) like ChatGPT triggered a remarkable societal and computational shift that feels comparable to the impact from the initial internet era with its first impressive search engines like Google. LLMs are the toast of the town.</p>

<p>Writing emails, reports, school homework, analysis, code, summaries. The list goes on.</p>

<p>Save from when you would delegate this task to another fellow human, long hours would be passed in the past trying to conjure a piece of text that could communicate something to another entity. Now this can be made at scale, at low cost, with low effort.</p>

<p>Since we are still liable for the results of this tool, i.e. it’s still our name on the email sender, so instead of just sending that email, we might first read that LLM output, interpret it, understand it, and then send it.</p>

<h2 id="more-than-just-text">More than just text</h2>

<p>Text is a form of communication. If something, or someone wrote it for us, certain decisions were made along the way to convey the goal that we gave. Out of the many paths possible to crystallize that piece of knowledge into a piece text, one of them was chosen.</p>

<p>I would claim that something gets lost on that delegation.</p>

<p>The writing process is more than just the production of text. Many time it requires the exploration of different perspectives, thinking deeply and coming to terms that we don’t know enough about a subject and need to learn more about it.</p>

<p>For example, it’s essential for me to have a notebook at hand to take notes during meetings and formal discussions. I write phrases, loose words, make small diagrams, jot down some reminders. Some of them are never to be re-read again, others I revisit to structure them down into a concise structure. Most of all, they help me think about a problem.</p>

<p>Same holds for notes and articles. I start with a cloud of loosely held ideas that are related, which I attempt to refine into a structured form. Similar to the <a href="https://en.wikipedia.org/wiki/Double_Diamond_(design_process_model)">double diamond</a> process.</p>

<p>Same for books. Several times I’ve come to terms that I learned close to nothing about a book read one month before. Or conversations. Or movies. Or experiences.</p>

<p>This is, <a href="https://www.youtube.com/watch?v=otazg3TuPWM">except</a> if I reflected or acted about them. Except if I wrote down my conclusions about them.</p>

<blockquote>
  <p>For me, taking notes helps make sure that I’m really thinking hard about what’s in there. If I disagree with the book, sometimes it takes a long time to read the books because I’m writing so much in the margin</p>

  <p><em>― <a href="https://youtu.be/eTFy8RnUkoU?t=11">Bill Gates</a></em></p>
</blockquote>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[64bit computing on a budget (131 pts)]]></title>
            <link>https://virtuallyfun.com/2023/07/01/64bit-computing-on-a-budget/</link>
            <guid>36560242</guid>
            <pubDate>Sun, 02 Jul 2023 10:54:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://virtuallyfun.com/2023/07/01/64bit-computing-on-a-budget/">https://virtuallyfun.com/2023/07/01/64bit-computing-on-a-budget/</a>, See on <a href="https://news.ycombinator.com/item?id=36560242">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>With all that <a href="https://virtuallyfun.com/2023/05/15/windows-2000-64-bit-for-alpha-axp/">Dec Alpha talk</a>, and how hard it is to get hardware, and how seemingly exclusionary it is, I thought I would try to touch on a more available 64bit ‘risc’ platform, for the masses!</p>
<p>While a couple years ago I had touched on running <a rel="noreferrer noopener" href="https://virtuallyfun.com/2020/07/24/windows-10-on-the-raspberry-pi-4/" data-type="URL" data-id="/2020/07/24/windows-10-on-the-raspberry-pi-4/" target="_blank">Windows 10 on the Raspberry Pi 4</a>, in the brave new world of 2023 getting ahold of a pi4 is expensive, hard to find, and kind of depressive, which lead me to this (old) but exciting project, the <a href="https://renegade-project.tech/en/home" target="_blank" rel="noreferrer noopener">Renegade Project</a>!</p>
<p>Long story short, there exists enough drivers &amp; information to facilitate a port to the Snapdragon 845, a 64bit System On a Chip( SOAC!), meaning that if you have a device with this chip it *can* be slightly possible to install Windows 10 onto it.</p>
<figure><a href="https://renegade-project.tech/en/state"><img decoding="async" width="921" height="428" src="https://virtuallyfun.com/wp-content/uploads/2023/07/renegade-system-matrix.png" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/renegade-system-matrix.png 921w, http://virtuallyfun.com/wp-content/uploads/2023/07/renegade-system-matrix-300x139.png 300w, http://virtuallyfun.com/wp-content/uploads/2023/07/renegade-system-matrix-768x357.png 768w, http://virtuallyfun.com/wp-content/uploads/2023/07/renegade-system-matrix-500x232.png 500w" sizes="(max-width: 921px) 100vw, 921px"></a><figcaption>system compatibility matrix, for ants.</figcaption></figure>
<p>Glancing at the system matrix, to me the glaring hole is Charging. 3 systems outright support it, all of them from Xiaomi, the <a href="https://renegade-project.tech/en/devices/xiaomi/polaris">Xiaomi Mix 2s</a>, Xiaomi Mix 3 &amp; the <a href="https://renegade-project.tech/en/devices/xiaomi/beryllium">Xiaomi PocoPhone F1</a>. Looking around eBay to start this adventure I found a PocoPhone F1!</p>
<h2>Getting the Phone</h2>
<figure><a href="https://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-ebay-listing.png"><img decoding="async" loading="lazy" width="901" height="431" src="https://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-ebay-listing.png" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-ebay-listing.png 901w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-ebay-listing-300x144.png 300w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-ebay-listing-768x367.png 768w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-ebay-listing-500x239.png 500w" sizes="(max-width: 901px) 100vw, 901px"></a></figure>
<p>This seemed like a good start, 29.99, 128GB of flash storage, and I’d later learn 6GB of RAM. The first problem came from Xiaomi. Turns out that the phone was still locked, the seller had neglected to logout from his Xiaomi account. Even worse though he had forgotten his login and password. Calling Xiaomi support was basically worthless. Without unlocking the phone on a reset to root the phone lead me to this:</p>
<div>
<figure><a href="https://virtuallyfun.com/wp-content/uploads/2023/07/locked-pocophone2.jpg"><img decoding="async" loading="lazy" width="384" height="512" src="https://virtuallyfun.com/wp-content/uploads/2023/07/locked-pocophone2.jpg" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/locked-pocophone2.jpg 384w, http://virtuallyfun.com/wp-content/uploads/2023/07/locked-pocophone2-225x300.jpg 225w" sizes="(max-width: 384px) 100vw, 384px"></a><figcaption>Locked!</figcaption></figure></div>
<p>I got lucky however after talking to the seller, he agreed to go above and beyond and we were able to unlock the phone together. So everything went well. If you do buy one of these phones used, MAKE SURE TO CHECK THE XIOAMI login id! It has to be unlocked and blank so you can register it and get the unlock. It will require a valid email &amp; phone number + sim for it to send/receive SMS codes.</p>
<p>Access to the site is very up &amp; down, so I archived what <a rel="noreferrer noopener" href="https://archive.org/details/miflash_unlock_en_7.6.602.42" target="_blank">I had downloaded to unlock the phone here</a>. <a href="https://archive.org/details/miflash_unlock_en_7.6.602.42" target="_blank" rel="noreferrer noopener">miflash_unlock_en_7.6.602.42.7z</a></p>
<p>I should add that we’ve cleared the first few hurdles of precuring the device and unlocking it. And I’m glossing over stuff. Getting to this point was not easy and took a week. The unlock process is not intuitive, and I’m sure many phones are sold out there that have their google access wiped, but have not been logged out all the way, or the flash erased. I can’t show you mine as I ended up erasing Android but be aware of this!</p>
<h2>Getting ready for Windows</h2>
<p>Basically on the Android side there is three main modes, the boot, the recovery and the ‘fastboot’ mode. Holding power &amp; down brings you to fastboot, where using the fastboot tool you can load an image from your PC into ram and execute it. <a href="https://github.com/edk2-porting/edk2-msm" target="_blank" rel="noreferrer noopener">EDK2 UEFI firmware</a>, is the first part or the renegade project you’ll encouter. It’s really powerful, allowing you to not only boot into Windows, but it also supports a linux disk target mode, allowing you to partition and access the flash directly from a PC. Naturally this is SUPER dangerous, and <a href="https://archive.org/details/pocophone-f1-modem-files" target="_blank" rel="noreferrer noopener">backup your modem files</a>!</p>
<p>With the phone unlocked softbooting E2DK you can put it into a target disk mode, connect it to a pc and partition away!</p>
<div>
<figure><a href="https://virtuallyfun.com/wp-content/uploads/2023/07/disk-host-mode-reduced.jpg"><img decoding="async" loading="lazy" width="467" height="865" src="https://virtuallyfun.com/wp-content/uploads/2023/07/disk-host-mode-reduced.jpg" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/disk-host-mode-reduced.jpg 467w, http://virtuallyfun.com/wp-content/uploads/2023/07/disk-host-mode-reduced-162x300.jpg 162w" sizes="(max-width: 467px) 100vw, 467px"></a><figcaption>disk mode… for ants!</figcaption></figure></div>
<p><a rel="noreferrer noopener" href="https://renegade-project.tech/en/install" target="_blank">The guide</a> (section 1.2) advices pushing the disk tools to the phone booted up in <a rel="noreferrer noopener" href="https://archive.org/download/miflash_unlock_en_7.6.602.42/twrp-3.7.0_9-0-beryllium.img" target="_blank">twrp-3.7.0_9-0-beryllium.img</a>. Honestly its easier to just partition it on your computer. HOWEVER if you were to use Windows, there is a slight issue:</p>
<p><strong><span>The device may no longer be able to boot into fastboot mode</span></strong></p>
<p>I ran into this issue and thought I had bricked my phone. I was actually in the middle of researching how to do a physical hard reset, <a href="https://www.youtube.com/watch?v=IlAaRQBtHKw" target="_blank" rel="noreferrer noopener">and place it into EDL mode</a> (taking it apart and finding which pads to short, when I found this section of the troubleshooting guide, where it’s the partition names. So instead, I ended up doing the partitioning on a Virtual Machine using VMware and Ubuntu.</p>
<pre><code>(parted) print
print
Model: SAMSUNG KLUDG4U1EA-B0C1 (scsi)
Disk /dev/block/sda: 123GB
Sector size (logical/physical): 4096B/4096B
Partition Table: gpt
Disk Flags:

Number  Start   End     Size    File system  Name        Flags
 1      24.6kB  41.0kB  16.4kB               switch
 2      41.0kB  73.7kB  32.8kB               ssd
 3      73.7kB  524kB   451kB                bk01
 4      524kB   786kB   262kB                bk02
 5      786kB   1049kB  262kB                bk03
 6      1049kB  1573kB  524kB                keystore
 7      1573kB  2097kB  524kB                frp
 8      2097kB  4194kB  2097kB               bk04
 9      4194kB  8389kB  4194kB               misc
10      8389kB  16.8MB  8389kB               logfs
11      16.8MB  33.6MB  16.8MB               oops
12      33.6MB  50.3MB  16.8MB               devinfo
13      50.3MB  67.1MB  16.8MB               bk05
14      67.1MB  134MB   67.1MB  ext4         persist
15      134MB   201MB   67.1MB  ext4         persistbak
16      201MB   268MB   67.1MB               logdump
17      268MB   403MB   134MB                minidump
18      403MB   1275MB  872MB   ext4         cust
19      1275MB  1342MB  67.1MB               recovery
20      1342MB  1611MB  268MB   ext4         cache
21      1611MB  123GB   121GB                userdata</code></pre>
<p>Before I did anything, this is what the phone partition table looked like. It’s an exceptional amount. The new parted v 3.0 that is recommended to use, doesn’t support the resize command so I had to manually do the numbers after destroying partition 21.</p>
<p>Originally, I had made a 32Gb partition to keep some Android functionality but somewhere it just stopped booting. But I didn’t care.</p>
<pre><code>rm 21
mkpart userdata ext4 1611MB 32G
mkpart esp fat32 32G 32.5G
set 22 esp on
mkpart win ntfs 32.5GB 123G

21      1611MB  32.0GB  30.4GB  ext4         userdata
22      32.0GB  32.5GB  499MB   fat32        esp         boot, esp
23      32.5GB  123GB   90.5GB  ntfs         win         msftdata</code></pre>
<p>Obviously dont follow this. I’m only providing output as an example.</p>
<p>If I were more patient, I guess I would have dd’d the entire phone to get a full entire backup. But I didn’t get this phone to run Android, so I really don’t care.</p>
<p>There is a LOT of disks being presented to Windows, in case you ever wondered how those 128GB flash devices get sold with only 114GB of user space. </p>
<figure><a href="https://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-disk-partitions.png"><img decoding="async" loading="lazy" width="887" height="108" src="https://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-disk-partitions.png" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-disk-partitions.png 887w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-disk-partitions-300x37.png 300w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-disk-partitions-768x94.png 768w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-f1-disk-partitions-500x61.png 500w" sizes="(max-width: 887px) 100vw, 887px"></a><figcaption>So many partitions!</figcaption></figure>
<p>And even that 112GB is actually usable!</p>
<p>Remember the system partition needs the boot,esp flags, and the windows partition is msftdata. Also make sure the partition names are either single words, or NO words. Spaces will kill the fastboot mode.</p>
<p>I put all the disks that are presented in offline mode, so I don’t get confused. Make sure you are going to mess with the right volumes when formatting after the partitioning. This is NOT for the novice, it would be easy to not only brick the phone but screw up your existing install. If you have physical disks attached you don’t absolutely need, remove them or put them offline to make sure you don’t screw up.</p>
<p>I used diskpart to select the appropriate volumes and format them.</p>
<pre><code>select disk 8
select volume 5
format quick fs=fat32 label="System"
assign letter="S"
select volume 6
format quick fs=ntfs label="Windows"
assign letter="W"</code></pre>
<p>This isn’t a guide, just a reflection of what I went through.</p>
<p>With the disk now formatted, it’s a matter of selecting an OS to install.</p>
<p>I had really bad luck picking random versions of Windows, so I looked until I could find a confirmed working version in this video, <a rel="noreferrer noopener" href="https://www.youtube.com/watch?v=t81-Ji17fGM" target="_blank">Rodando o Windows 10 ARM nativamente em um Dispositivo Android (Pocophone F1 + UEFI)</a>. Long story short, it’s Windows build 210521-1658 with version <a rel="noreferrer noopener" href="https://github.com/edk2-porting/edk2-msm/releases/tag/v0.4" target="_blank">0.4 of the bootloader</a>. Long story short I messed with LOTS of Windows on ARM driver sets, before I finally had the brave idea to just load it with no drivers:</p>
<div>
<figure><a href="https://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-booted-to-windows.jpg"><img decoding="async" loading="lazy" width="491" height="945" src="https://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-booted-to-windows.jpg" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-booted-to-windows.jpg 491w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-booted-to-windows-156x300.jpg 156w" sizes="(max-width: 491px) 100vw, 491px"></a><figcaption>booted</figcaption></figure></div>
<p>But that image is far too stale, and expires out very quickly, reducing any useful functionality once it’s connected to the internet. So it’s something that probably could be fixed, but it’s far easier to just grab an image that’s newer.</p>
<p>The x86_64 image I’m using now is 19045.3031, so I guessed to pick something comparable on ARM64. I used something called <a href="https://archive.org/details/19045.3031_arm64_en-us_professional" target="_blank" rel="noreferrer noopener">19045.3031_arm64_en-us_professional</a>, although it too was out of date, but Windows update brought it up to 22H2 19045.3086 . I had tried the downloader tool and apply all the updates offline, but I had issues. I suspect now in retrospect it was drivers.</p>
<p>Another thing I learned the hard way is that some of these images have multiple OS images installed. I guess it’s de-duplication, along with compression, but be sure to index the image first! I accidentally installed a Home version. Yuck.</p>
<pre><code>dism /Get-ImageInfo /imagefile:install.wim

Index : 1
Name : Windows 10 Home
Description : Windows 10 Home
Size : 17,706,743,995 bytes

Index : 4
Name : Windows 10 Pro
Description : Windows 10 Pro
Size : 17,836,320,420 bytes</code></pre>
<p>So just don’t go wildly apply image #1. I wasted too much time on that one.</p>
<p>But in the release I’m using it’s image #1. I checked. Trust me.</p>
<pre><code>dism /apply-image /ImageFile:10.0.21390.1.co_release.210521-1658_arm64fre\install.wim /index:4 /ApplyDir:W:\</code></pre>
<p>The S volume needs to be populated with the UEFI boot files. I had foolishly thought the boot.wim file would include the boot files, but instead bcdboot can set it up based on the location of a Windows install.</p>
<pre><code>bcdboot W:\Windows /s S: /f UEFI</code></pre>
<p>The next thing to do is install the drivers.</p>
<p>I was lucky enough to get some insight into some driver combination to work, and I came up with this much:</p>
<pre>minimal 2210.1-fix
USB beryllium v2.0rc2
FG beryllium v2.0rc2</pre>
<p>The key of course is that there is a minimal set in 2210.1-fix that will bring the system up with working USB. The FG package brings in enough of the power management to know the battery status.</p>
<pre><code>dism /Image:W: /Add-Driver /Driver:drivers /Recurse</code></pre>
<p>The drivers are not signed, so that means we need to change a bunch of boot flags. I also turned on debugging so have Windows dump core files, so you can run analysts on them with <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-tools" target="_blank" rel="noreferrer noopener">Windgb</a>.</p>
<pre><code>S:
cd S:\EFI\Microsoft\Boot
bcdedit /store BCD /set "{default}" testsigning on
bcdedit /store BCD /set "{default}" nointegritychecks on
bcdedit /store BCD /set "{default}" recoveryenabled no
bcdedit /store BCD /set "{default}" debug on</code></pre>
<p>Of course the catch being that with no drivers loaded it’s in a super basic mode, with no USB, no touch screen, no power management, no wifi no nothing. So it’s a brick. But at least we’ve reproduced enough to show that you can boot Windows.</p>
<p>Sadly, loading all the drives from <a href="https://github.com/edk2-porting/WOA-Drivers/releases/tag/2210.1-fix" target="_blank" rel="noreferrer noopener">2210.1-fix</a> or beryllium <a href="https://github.com/edk2-porting/WOA-Drivers/releases/tag/v2.0rc2" target="_blank" rel="noreferrer noopener">v2.0rc2</a> lead to this:</p>
<figure><a href="https://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-crashed.jpg"><img decoding="async" loading="lazy" width="567" height="408" src="https://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-crashed.jpg" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-crashed.jpg 567w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-crashed-300x216.jpg 300w, http://virtuallyfun.com/wp-content/uploads/2023/07/pocophone-crashed-417x300.jpg 417w" sizes="(max-width: 567px) 100vw, 567px"></a><figcaption>the cracked glass adds to the feeling.</figcaption></figure>
<p>Add in a much needed OTG adapter and a mouse or keyboard, and you can complete the installation. </p>
<figure><a href="https://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-Surface-scaled-1.jpg"><img decoding="async" loading="lazy" width="592" height="546" src="https://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-Surface-scaled-1.jpg" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-Surface-scaled-1.jpg 592w, http://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-Surface-scaled-1-300x277.jpg 300w, http://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-Surface-scaled-1-325x300.jpg 325w" sizes="(max-width: 592px) 100vw, 592px"></a></figure>
<p>However, since I left off the majority of the device drivers as I didn’t want to spend forever trying to track it down, I used a random USB to Ethernet adapter and thankfully It just worked!</p>
<figure><a href="https://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-pocophone.png"><img decoding="async" loading="lazy" width="1024" height="597" src="https://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-pocophone-1024x597.png" alt="" srcset="http://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-pocophone-1024x597.png 1024w, http://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-pocophone-300x175.png 300w, http://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-pocophone-768x448.png 768w, http://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-pocophone-500x292.png 500w, http://virtuallyfun.com/wp-content/uploads/2023/07/Windows-10-on-pocophone.png 1282w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Accessing the phone over RDP.</figcaption></figure>
<p>I added a fancy USB 3.0 ‘dock’ with USB-C connector that you can plug a charger into, so that not only can the phone stay connected to power, but there is room for the Ethernet. It also has HDMI, perhaps is the drivers were more stable, it could be a viable desktop? And I have what I wanted, which was a non Intel/AMD 64bit platform that is hopefully more reliable than the Alpha64 platform, and maybe something to do some kind of contrast of the past vs future</p>
<p>This was NOT a simple thing to go through. I would be extremely hesitant to advise other people to follow suit. But in the off chance anyone who wants to do it, might have a better idea of what is involved.</p>
<p>Read the <a rel="noreferrer noopener" href="https://renegade-project.tech/en/Troubleshooting" target="_blank">Troubleshooting guide</a> &amp; the <a rel="noreferrer noopener" href="https://renegade-project.tech/en/install" target="_blank">Installation guide</a>. Keep notes! I would have absolutely given up, without keeping notes.</p>
<p>Even simple tracking of disasters like this at least helped me along:</p>
<pre><code>210521-1658<br>10.0.21390.1.co_release.210521-1658_arm64fre</code></pre>
<div>
<div>
<pre><code>boot-beryllium Version 0.4.1.img</code></pre>
<pre><code>boot-beryllium-ebbg Release - 2210.1.img</code></pre>
<pre><code>boot-beryllium-ebbg Release - 2210.1.img

boot-beryllium-ebbg Release - 2210.1.img

boot-beryllium-ebbg Release - 2210.1.img

boot-beryllium-ebbg Release - 2210.1.img</code></pre>
</div>
<div>
<pre><code>no drivers</code></pre>
<pre><code>
no drivers</code></pre>
<pre><code>
v1.1.1


v1.1


FocalTechTouch v2.0rc1


v2.0rc1</code></pre>
</div>
<div>
<pre><code>INTERNAL_POWER_ERROR</code></pre>
<pre><code>
installer


SYSTEM THREAD EXCEPTION NOT HANDLED


SYSTEM THREAD EXCEPTION NOT HANDLED

installer


SYSTEM THREAD EXCEPTION NOT HANDLED</code></pre>
</div>
</div>
<p>Sorry the table doesn’t format well.</p>
<p>TL;DR don’t do it, unless you don’t mind spending too much time on this. Get a used Surface X instead.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Drastic increase in Tor clients from Germany (195 pts)]]></title>
            <link>https://metrics.torproject.org/userstats-relay-country.html?start=2019-01-01&amp;end=2023-07-02&amp;country=de&amp;events=off</link>
            <guid>36560136</guid>
            <pubDate>Sun, 02 Jul 2023 10:29:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://metrics.torproject.org/userstats-relay-country.html?start=2019-01-01&#x26;end=2023-07-02&#x26;country=de&#x26;events=off">https://metrics.torproject.org/userstats-relay-country.html?start=2019-01-01&#x26;end=2023-07-02&#x26;country=de&#x26;events=off</a>, See on <a href="https://news.ycombinator.com/item?id=36560136">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Flattening ASTs (and Other Compiler Data Structures) (191 pts)]]></title>
            <link>https://www.cs.cornell.edu/~asampson/blog/flattening.html</link>
            <guid>36559346</guid>
            <pubDate>Sun, 02 Jul 2023 08:03:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cs.cornell.edu/~asampson/blog/flattening.html">https://www.cs.cornell.edu/~asampson/blog/flattening.html</a>, See on <a href="https://news.ycombinator.com/item?id=36559346">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
<figure>
<img src="https://www.cs.cornell.edu/~asampson/media/flattening/normal.png" alt="a normal AST">
<img src="https://www.cs.cornell.edu/~asampson/media/flattening/flat.png" alt="a flat AST">
<figcaption>Normal and flattened ASTs for the expression <code>a * b + c</code>.</figcaption>
</figure>

<p><a href="https://en.wikipedia.org/wiki/Region-based_memory_management">Arenas, a.k.a. regions,</a> are everywhere in modern language implementations.
One form of arenas is both super simple and surprisingly effective for compilers and compiler-like things.
Maybe because of its simplicity, I haven’t seen the basic technique in many compiler courses—or anywhere else in a CS curriculum for that matter.
This post is an introduction to the idea and its many virtues.</p>

<p><em>Arenas</em> or <em>regions</em> mean many different things to different people, so I’m going to call the specific flavor I’m interested in here <em>data structure flattening</em>.
Flattening uses an arena that only holds one type, so it’s actually just a plain array, and you can use array indices where you would otherwise need pointers.
We’ll focus here on flattening abstract syntax trees (ASTs), but the idea applies to any pointer-laden data structure.</p>

<p>To learn about flattening, we’ll build a basic interpreter twice:
first the normal way and then the flat way.
Follow along with the code in <a href="https://github.com/sampsyo/flatcalc">this repository</a>, where you can <a href="https://github.com/sampsyo/flatcalc/compare/main...flat#diff-42cb6807ad74b3e201c5a7ca98b911c5fa08380e942be6e4ac5807f8377f87fc">compare and contrast the two branches</a>.
The key thing to notice is that the changes are pretty small,
but we’ll see that they make a microbenchmark go 2.4× faster.
Besides performance, flattening also brings some ergonomics advantages that I’ll outline.</p>

<h2 id="a-normal-ast">A Normal AST</h2>

<p>Let’s start with the textbook way to represent an AST. Imagine the world’s simplest language of arithmetic expressions, where all you can do is apply the four basic binary arithmetic operators to literal integers. Some “programs” you can write in this language include <code>42</code>, <code>0 + 14 * 3</code>, and <code>(100 - 16) / 2</code>.</p>

<p>Maybe the clearest way to write the AST for this language would be as an ML type declaration:</p>

<div><pre><code><span>type</span> <span>binop</span> <span>=</span> <span>Add</span> <span>|</span> <span>Sub</span> <span>|</span> <span>Mul</span> <span>|</span> <span>Div</span>
<span>type</span> <span>expr</span> <span>=</span> <span>Binary</span> <span>of</span> <span>binop</span> <span>*</span> <span>expr</span> <span>*</span> <span>expr</span>
          <span>|</span> <span>Literal</span> <span>of</span> <span>int</span>
</code></pre></div>

<p>But for this post, we’ll use Rust instead. Here are <a href="https://github.com/sampsyo/flatcalc/blob/c5bbe7bd79f98a3b857f0432d4739a3f4f6241bd/src/main.rs#L10-L24">the equivalent types in Rust</a>:</p>

<div><pre><code><span>enum</span> <span>BinOp</span> <span>{</span> <span>Add</span><span>,</span> <span>Sub</span><span>,</span> <span>Mul</span><span>,</span> <span>Div</span> <span>}</span>
<span>enum</span> <span>Expr</span> <span>{</span>
    <span>Binary</span><span>(</span><span>BinOp</span><span>,</span> <span>Box</span><span>&lt;</span><span>Expr</span><span>&gt;</span><span>,</span> <span>Box</span><span>&lt;</span><span>Expr</span><span>&gt;</span><span>),</span>
    <span>Literal</span><span>(</span><span>i64</span><span>),</span>
<span>}</span>
</code></pre></div>

<p>If you’re not a committed Rustacean, <code>Box&lt;Expr&gt;</code> may look a little weird, but that’s just Rust for “a plain ol’ pointer to an <code>Expr</code>.” In C, we’d write <code>Expr*</code> to mean morally the same thing; in Java or Python or OCaml, it would just be <code>Expr</code> because everything is a reference by default.<sup id="fnref:inline" role="doc-noteref"><a href="#fn:inline" rel="footnote">1</a></sup></p>

<p>With the AST in hand, we can write all the textbook parts of a language implementation, like a <a href="https://github.com/sampsyo/flatcalc/blob/c5bbe7bd79f98a3b857f0432d4739a3f4f6241bd/src/main.rs#L28-L50">parser</a>, a <a href="https://github.com/sampsyo/flatcalc/blob/c5bbe7bd79f98a3b857f0432d4739a3f4f6241bd/src/main.rs#L139-L155">pretty-printer</a>, and an <a href="https://github.com/sampsyo/flatcalc/blob/c5bbe7bd79f98a3b857f0432d4739a3f4f6241bd/src/main.rs#L52-L67">interpreter</a>.
All of them are thoroughly unremarkable.
The whole interpreter is just one method on <code>Expr</code>:</p>

<div><pre><code><span>fn</span> <span>interp</span><span>(</span><span>&amp;</span><span>self</span><span>)</span> <span>-&gt;</span> <span>i64</span> <span>{</span>
    <span>match</span> <span>self</span> <span>{</span>
        <span>Expr</span><span>::</span><span>Binary</span><span>(</span><span>op</span><span>,</span> <span>lhs</span><span>,</span> <span>rhs</span><span>)</span> <span>=&gt;</span> <span>{</span>
            <span>let</span> <span>lhs</span> <span>=</span> <span>lhs</span><span>.interp</span><span>();</span>
            <span>let</span> <span>rhs</span> <span>=</span> <span>rhs</span><span>.interp</span><span>();</span>
            <span>match</span> <span>op</span> <span>{</span>
                <span>BinOp</span><span>::</span><span>Add</span> <span>=&gt;</span> <span>lhs</span><span>.wrapping_add</span><span>(</span><span>rhs</span><span>),</span>
                <span>BinOp</span><span>::</span><span>Sub</span> <span>=&gt;</span> <span>lhs</span><span>.wrapping_sub</span><span>(</span><span>rhs</span><span>),</span>
                <span>BinOp</span><span>::</span><span>Mul</span> <span>=&gt;</span> <span>lhs</span><span>.wrapping_mul</span><span>(</span><span>rhs</span><span>),</span>
                <span>BinOp</span><span>::</span><span>Div</span> <span>=&gt;</span> <span>lhs</span><span>.checked_div</span><span>(</span><span>rhs</span><span>)</span><span>.unwrap_or</span><span>(</span><span>0</span><span>),</span>
            <span>}</span>
        <span>}</span>
        <span>Expr</span><span>::</span><span>Literal</span><span>(</span><span>num</span><span>)</span> <span>=&gt;</span> <span>*</span><span>num</span><span>,</span>
    <span>}</span>
<span>}</span>
</code></pre></div>

<p>My language has keep-on-truckin’ semantics; every expression eventually evaluates to an <code>i64</code>, even if it’s not the number you wanted.<sup id="fnref:arith" role="doc-noteref"><a href="#fn:arith" rel="footnote">2</a></sup></p>

<p>For extra credit, I also wrote a little <a href="https://github.com/sampsyo/flatcalc/blob/c5bbe7bd79f98a3b857f0432d4739a3f4f6241bd/src/main.rs#L118-L136">random program generator</a>. It’s also not all that interesting to look at; it just uses a recursively-increasing probability of generating a literal so it eventually terminates. Using fixed PRNG seeds, the random generator enables some easy <a href="https://github.com/sampsyo/flatcalc/blob/c5bbe7bd79f98a3b857f0432d4739a3f4f6241bd/Makefile#L4">microbenchmarking</a>. By generating and then immediately evaluating an expression, we can measure the performance of AST manipulation without the I/O costs of parsing and pretty-printing.</p>

<p>You can check out <a href="https://github.com/sampsyo/flatcalc">the relevant repo</a> and try it out:</p>

<div><pre><code><span>$ </span><span>echo</span> <span>'(29 * 3) - 9 * 5'</span> | cargo run
<span>$ </span>cargo run gen_interp  <span># Generate and immediately evaluate a random program.</span>
</code></pre></div>

<h2 id="flattening-the-ast">Flattening the AST</h2>

<p>The <em>flattening</em> idea has two pieces:</p>

<ul>
  <li>Instead of allocating <code>Expr</code> objects willy-nilly on the heap, we’ll pack them into a single, contiguous array.</li>
  <li>Instead of referring to children via pointers, <code>Exprs</code> will refer to their children using their indices in that array.</li>
</ul>

<figure>
<img src="https://www.cs.cornell.edu/~asampson/media/flattening/flat.png" alt="the same flat AST from earlier">
</figure>

<p>Let’s look back at the doodle from the top of the post.
We want to use a single <code>Expr</code> array to hold all our AST nodes.
These nodes still need to point to each other; they’ll now do that by referring to “earlier” slots in that array.
Plain old integers will take the place of pointers.</p>

<p>If that plan sounds simple, it is—it’s probably even simpler than you’re thinking.
The main thing we need is an array of <code>Expr</code>s.
I’ll use Rust’s <a href="https://doc.rust-lang.org/rust-by-example/generics/new_types.html">newtype idiom</a> to declare our arena type, <a href="https://github.com/sampsyo/flatcalc/blob/25f10b44252a2191ba6d0b5445f929096ad59361/src/main.rs#L37"><code>ExprPool</code></a>, as a shorthand for an <code>Expr</code> vector:</p>

<div><pre><code><span>struct</span> <span>ExprPool</span><span>(</span><span>Vec</span><span>&lt;</span><span>Expr</span><span>&gt;</span><span>);</span>
</code></pre></div>

<p>To keep things fancy, we’ll also give a <a href="https://github.com/sampsyo/flatcalc/blob/25f10b44252a2191ba6d0b5445f929096ad59361/src/main.rs#L32">name</a> to the plain old integers we’ll use to index into an <code>ExprPool</code>:</p>



<p>The idea is that, everywhere we previously used a pointer to an <code>Expr</code> (i.e., <code>Box&lt;Expr&gt;</code> or sometimes <code>&amp;Expr</code>), we’ll use an <code>ExprRef</code> instead.
<code>ExprRef</code>s are just 32-bit unsigned integers, but by giving them this special name, we’ll avoid confusing them with other <code>u32</code>s.
Most importantly, we need to change the definition of <code>Expr</code> itself:</p>

<div><pre><code> enum Expr {
<span>-    Binary(BinOp, Box&lt;Expr&gt;, Box&lt;Expr&gt;),
</span><span>+    Binary(BinOp, ExprRef, ExprRef),
</span>     Literal(i64),
 }
</code></pre></div>

<p>Next, we need to add utilities to <code>ExprPool</code> to create <code>Expr</code>s (allocation) and look them up (dereferencing).
In my implementation, these little functions are called <code>add</code> and <code>get</code>, and <a href="https://github.com/sampsyo/flatcalc/blob/25f10b44252a2191ba6d0b5445f929096ad59361/src/main.rs#L45-L55">their implementations</a> are extremely boring.
To use them, we need to look over our code and find every place where we create new <code>Expr</code>s or follow a pointer to an <code>Expr</code>.
For example, our <code>parse</code> function <a href="https://github.com/sampsyo/flatcalc/blob/c5bbe7bd79f98a3b857f0432d4739a3f4f6241bd/src/main.rs#L28-L50">used to be a method on <code>Expr</code></a>, but we’ll make it <a href="https://github.com/sampsyo/flatcalc/blob/25f10b44252a2191ba6d0b5445f929096ad59361/src/main.rs#L57-L81">a method on <code>ExprPool</code> instead</a>:</p>

<div><pre><code><span>-fn parse(tree: Pair&lt;Rule&gt;) -&gt; Self {
</span><span>+fn parse(&amp;mut self, tree: Pair&lt;Rule&gt;) -&gt; ExprRef {
</span></code></pre></div>

<p>And where we used to return a newly allocated <code>Expr</code> directly, we’ll now wrap that in <code>self.add()</code> to return an <code>ExprRef</code> instead.
Here’s the <code>match</code> case for constructing a literal expression:</p>

<div><pre><code> Rule::number =&gt; {
     let num = tree.as_str().parse().unwrap();
<span>-    Expr::Literal(num)
</span><span>+    self.add(Expr::Literal(num))
</span> }
</code></pre></div>

<p>Our interpreter <a href="https://github.com/sampsyo/flatcalc/blob/25f10b44252a2191ba6d0b5445f929096ad59361/src/main.rs#L83-L98">gets the same treatment</a>.
It also becomes an <code>ExprPool</code> method, and we have to add <code>self.get()</code> to go from an <code>ExprRef</code> to an <code>Expr</code> we can pattern-match on:</p>

<div><pre><code><span>-fn interp(&amp;self) -&gt; i64 {
</span><span>+fn interp(&amp;self, expr: ExprRef) -&gt; i64 {
</span><span>-    match self {
</span><span>+    match self.get(expr) {
</span></code></pre></div>

<p>That’s about it.
I think it’s pretty cool how few changes are required—see for yourself in <a href="https://github.com/sampsyo/flatcalc/compare/main...flat#diff-42cb6807ad74b3e201c5a7ca98b911c5fa08380e942be6e4ac5807f8377f87fc">the complete diff</a>.
You replace <code>Box&lt;Expr&gt;</code> with <code>ExprRef</code>, insert <code>add</code> and <code>get</code> calls in the obvious places, and you’ve got a flattened version of your code.
Neat!</p>

<h2 id="but-why">But Why?</h2>

<p>Flattened ASTs come with a bunch of benefits.
The classic ones most people cite are all about performance:</p>

<ol>
  <li><strong>Locality.</strong>
Allocating normal pointer-based <code>Expr</code>s runs the risk of <a href="https://en.wikipedia.org/wiki/Fragmentation_(computing)">fragmentation</a>.
Flattened <code>Expr</code>s are packed together in a contiguous region of memory, which is good for <a href="https://en.wikipedia.org/wiki/Locality_of_reference#Types_of_locality">spatial locality</a>.
Your data caches will work better because <code>Expr</code>s are more likely to share a cache line,
and even simple <a href="https://en.wikipedia.org/wiki/Prefetching">prefetchers</a> will do a better job of predicting which <code>Expr</code>s to load before you need them.
<a href="https://dl.acm.org/doi/10.1145/582419.582421">A sufficiently smart memory allocator might achieve the same thing</a>, especially if you allocate the whole AST up front and never add to it, but using a dense array removes all uncertainty.</li>
  <li><strong>Smaller references.</strong>
Normal data structures use pointers for references; on modern architectures, those are always 64 bits.
After flattening, you can use smaller integers—if you’re pretty sure you’ll never need more than 4,294,967,295 AST nodes,
you can get by with 32-bit references, like we did in our example.
That’s a 50% space savings for all your references, which could amount to a substantial overall memory reduction in pointer-heavy data structures like ASTs.
Smaller memory footprints mean less bandwidth pressure and even better spatial locality.
And you might save even more if you can get away with 16- or even 8-bit references for especially small data structures.</li>
  <li><strong>Cheap allocation.</strong>
In flatland, there is no need for a call to <code>malloc</code> every time you create a new AST node.
Instead, provided you pre-allocate enough memory to hold everything, allocation can entail just <a href="https://docs.rs/bumpalo/latest/bumpalo/">bumping the tail pointer</a> to make room for one more <code>Expr</code>.
Again, <a href="https://dl.acm.org/doi/10.1145/582419.582421">a really fast <code>malloc</code> might be hard to compete with</a>—but you basically can’t beat bump allocation on sheer simplicity.</li>
  <li><strong>Cheap deallocation.</strong>
Our flattening setup assumes you never need to free individual <code>Expr</code>s.
That’s probably true for many, although not all, language implementations:
you might build up new subtrees all the time, but you don’t need to reclaim space from many old ones.
ASTs tend to “die together,” i.e., it suffices to deallocate the entire AST all at once.
While freeing a normal AST entails traversing all the pointers to free each <code>Expr</code> individually, you can deallocate a flattened AST in one fell swoop by just freeing the whole <code>ExprPool</code>.</li>
</ol>

<p>I think it’s interesting that many introductions to arena allocation tend to focus on cheap deallocation (#4) as the main reason to do it.
<a href="https://en.wikipedia.org/wiki/Region-based_memory_management">The Wikipedia page</a>, for example, doesn’t (yet!) mention locality (#1 or #2) at all.
You can make an argument that #4 might be the <em>least</em> important for a compiler setting—since ASTs tend to persist all the way to the end of compilation, you might not need to free them at all.</p>

<p>Beyond performance, there are also ergonomic advantages:</p>

<ol>
  <li><strong>Easier lifetimes.</strong>
In the same way that it’s easier for your computer to free a flattened AST all at once, it’s also easier for <em>humans</em> to think about memory management at the granularity of an entire AST.
An AST with <em>n</em> nodes has just one lifetime instead of <em>n</em> for the programmer to think about.
This simplification is quadruply true in Rust, where lifetimes are not just in the programmer’s head but in the code itself.
Passing around a <code>u32</code> is way less fiddly than carefully managing lifetimes for all your <code>&amp;Expr</code>s: your code can rely instead on the much simpler lifetime of the <code>ExprPool</code>.
I suspect this is why the technique is so popular in Rust projects.
As a Rust partisan, however, I’ll argue that the same simplicity advantage applies in C++ or any other language with manual memory management—it’s just latent instead of explicit.</li>
  <li><strong>Convenient deduplication.</strong>
A flat array of <code>Expr</code>s can make it fun and easy to implement <a href="https://en.wikipedia.org/wiki/Hash_consing">hash consing</a> or even simpler techniques to avoid duplicating identical expressions.
For example, if we notice that we are using <code>Literal</code> expressions for the first 128 nonnegative integers a lot, we could reserve the first 128 slots in our <code>ExprPool</code> just for those.
Then, when someone needs the integer literal expression <code>42</code>, our <code>ExprPool</code> don’t need to construct a new <code>Expr</code> at all—we can just produce <code>ExprRef(42)</code> instead.
This kind of game is possible with a normal pointer-based representation too, but it probably requires some kind of auxiliary data structure.</li>
</ol>

<h2 id="performance-results">Performance Results</h2>

<p>Since we have two implementations of the same language, let’s measure those performance advantages.
For a microbenchmark, I randomly generated a program with about 100 million AST nodes and fed it directly into the interpreter (the parser and pretty printer are not involved).
This benchmark is not very realistic: <em>all it does</em> is generate and then immediately run one enormous program.
Some caveats include:</p>

<ul>
  <li>I <a href="https://github.com/sampsyo/flatcalc/blob/2703833615dec76cec4e71419e4073e5bc69dcb0/src/main.rs#L42">reserved enough space</a> in the <code>Vec&lt;Expr&gt;</code> to hold the whole program; in the real world, sizing your arena requires more guesswork.</li>
  <li>I expect this microbenchmark to over-emphasize the performance advantages of cheap allocation and deallocation, because it does very little other work.</li>
  <li>I expect it to under-emphasize the impact of locality, because the program is so big that only a tiny fraction of it will fit the CPU cache at a time.</li>
</ul>

<p>Still, maybe we can learn something.</p>

<figure>
<img src="https://www.cs.cornell.edu/~asampson/media/flattening/standard.png" alt="bar chart comparing the execution time of our normal and flat (and extra-flat) interpreters">
</figure>

<p>I used <a href="https://github.com/sharkdp/hyperfine">Hyperfine</a> to compare the average running time over 10 executions on my laptop.<sup id="fnref:setup" role="doc-noteref"><a href="#fn:setup" rel="footnote">3</a></sup>
Here’s a graph of the running times (please ignore the “extra-flat” bar; we’ll cover that next).
The plot’s error bars show the standard deviation over the 10 runs.
In this experiment, the normal version took 3.1 seconds and the flattened version took 1.3 seconds—a 2.4× speedup.
Not bad for such a straightforward code change!</p>

<p>Of that 2.4× performance advantage, I was curious to know how much comes from each of the four potential advantages I mentioned above.
Unfortunately, I don’t know how to isolate most of these effects—but #4, cheaper deallocation, is especially enticing to isolate.
Since our interpreter is so simple, it seems silly that we’re spending <em>any</em> time on freeing our <code>Expr</code>s after execution finishes—the program is about to shut down anyway, so leaking that memory is completely harmless.</p>

<figure>
<img src="https://www.cs.cornell.edu/~asampson/media/flattening/nofree.png" alt="bar chart comparing versions of our interpreters with and without deallocation">
</figure>

<p>So let’s build versions of both of our interpreters that skip deallocation altogether<sup id="fnref:forget" role="doc-noteref"><a href="#fn:forget" rel="footnote">4</a></sup> and see how much time they save.
Unsurprisingly, the “no-free” version of the flattened interpreter takes about the same amount of time as the standard version, suggesting that it doesn’t spend much time on deallocation anyway.
For the normal interpreter, however, skipping deallocation takes the running time from 3.1 to 1.9 seconds—it was spending around 38% of its time just on freeing memory!</p>

<p>Even comparing the “no-free” versions head-to-head, however, the flattened interpreter is still 1.5× faster than the normal one.
So even if you don’t care about deallocation, the other performance ingredients, like locality and cheap allocation, still have measurable effects.</p>

<h2 id="bonus-exploiting-the-flat-representation">Bonus: Exploiting the Flat Representation</h2>

<p>So far, flattening has happened entirely “under the hood”:
arenas and integer offsets serve as drop-in replacements for normal allocation and pointers.
What could we do if we broke this abstraction layer—if we exploited stuff about the flattened representation that <em>isn’t</em> true about normal AST style?</p>

<figure>
<img src="https://www.cs.cornell.edu/~asampson/media/flattening/flat.png" alt="that same flat AST, yet again">
</figure>

<p>The idea is to build a third kind of interpreter that exploits an extra fact about <code>ExprPool</code>s that arises from the way we built it up.
Because <code>Expr</code>s are immutable, we have to construct trees of them “bottom-up”:
we have to create all child <code>Expr</code>s before we can construct their parent.
If we build the expression <code>a * b</code>, <code>a</code> and <code>b</code> must appear earlier in their <code>ExprPool</code> than the <code>*</code> that refers to them.
Let’s bring that doodle back again: visually, you can imagine that reference arrows always go <em>backward</em> in the array, and data always flows <em>forward</em>.</p>

<p>Let’s write <a href="https://github.com/sampsyo/flatcalc/blob/2703833615dec76cec4e71419e4073e5bc69dcb0/src/main.rs#L100-L124">a new interpreter</a> that exploits this invariant.
Instead of starting at the root of the tree and recursively evaluating each child, we can start at the beginning of the <code>ExprPool</code> and scan from left to right.
This iteration is guaranteed to visit parents after children, so we can be sure that the results for subexpressions will be ready when we need them.
Here’s <a href="https://github.com/sampsyo/flatcalc/blob/2703833615dec76cec4e71419e4073e5bc69dcb0/src/main.rs#L100-L124">the whole thing</a>:</p>

<div><pre><code><span>fn</span> <span>flat_interp</span><span>(</span><span>self</span><span>,</span> <span>root</span><span>:</span> <span>ExprRef</span><span>)</span> <span>-&gt;</span> <span>i64</span> <span>{</span>
    <span>let</span> <span>mut</span> <span>state</span><span>:</span> <span>Vec</span><span>&lt;</span><span>i64</span><span>&gt;</span> <span>=</span> <span>vec!</span><span>[</span><span>0</span><span>;</span> <span>self</span><span>.0</span><span>.len</span><span>()];</span>
    <span>for</span> <span>(</span><span>i</span><span>,</span> <span>expr</span><span>)</span> <span>in</span> <span>self</span><span>.0</span><span>.into_iter</span><span>()</span><span>.enumerate</span><span>()</span> <span>{</span>
        <span>let</span> <span>res</span> <span>=</span> <span>match</span> <span>expr</span> <span>{</span>
            <span>Expr</span><span>::</span><span>Binary</span><span>(</span><span>op</span><span>,</span> <span>lhs</span><span>,</span> <span>rhs</span><span>)</span> <span>=&gt;</span> <span>{</span>
                <span>let</span> <span>lhs</span> <span>=</span> <span>state</span><span>[</span><span>lhs</span><span>.0</span> <span>as</span> <span>usize</span><span>];</span>
                <span>let</span> <span>rhs</span> <span>=</span> <span>state</span><span>[</span><span>rhs</span><span>.0</span> <span>as</span> <span>usize</span><span>];</span>
                <span>match</span> <span>op</span> <span>{</span>
                    <span>BinOp</span><span>::</span><span>Add</span> <span>=&gt;</span> <span>lhs</span><span>.wrapping_add</span><span>(</span><span>rhs</span><span>),</span>
                    <span>BinOp</span><span>::</span><span>Sub</span> <span>=&gt;</span> <span>lhs</span><span>.wrapping_sub</span><span>(</span><span>rhs</span><span>),</span>
                    <span>BinOp</span><span>::</span><span>Mul</span> <span>=&gt;</span> <span>lhs</span><span>.wrapping_mul</span><span>(</span><span>rhs</span><span>),</span>
                    <span>BinOp</span><span>::</span><span>Div</span> <span>=&gt;</span> <span>lhs</span><span>.checked_div</span><span>(</span><span>rhs</span><span>)</span><span>.unwrap_or</span><span>(</span><span>0</span><span>),</span>
                <span>}</span>
            <span>}</span>
            <span>Expr</span><span>::</span><span>Literal</span><span>(</span><span>num</span><span>)</span> <span>=&gt;</span> <span>num</span><span>,</span>
        <span>};</span>
        <span>state</span><span>[</span><span>i</span><span>]</span> <span>=</span> <span>res</span><span>;</span>
    <span>}</span>
    <span>state</span><span>[</span><span>root</span><span>.0</span> <span>as</span> <span>usize</span><span>]</span>
<span>}</span>
</code></pre></div>

<p>We use a dense <code>state</code> table to hold one result value per <code>Expr</code>.
The <code>state[i] = res</code> line fills this vector up whenever we finish an expression.
Critically, there’s no recursion—binary expressions can get the value of their subexpressions by looking them up directly in <code>state</code>.
At the end, when <code>state</code> is completely full of results, all we need to do is return the one corresponding to the requested expression, <code>root</code>.</p>

<p>This “extra-flat” interpreter has two potential performance advantages over the recursive interpreter:
there’s no stack bookkeeping for the recursive calls,
and the linear traversal of the <code>ExprPool</code> could be good for locality.
On the other hand, it has to randomly access a really big <code>state</code> vector, which could be bad for locality.</p>

<figure>
<img src="https://www.cs.cornell.edu/~asampson/media/flattening/standard.png" alt="the same bar chart comparing the execution time for normal, flat, and extra-flat interpreters">
</figure>

<p>To see if it wins overall, let’s return to our bar chart from earlier.
The extra-flat interpreter takes 1.2 seconds, compared to 1.3 seconds for the recursive interpreter for the flat AST.
That’s marginal compared to how much better flattening does on its own than the pointer-based version,
but an 8.2% performance improvement ain’t nothing.</p>

<p>My favorite observation about this technique, due to <a href="https://old.reddit.com/r/ProgrammingLanguages/comments/mrifdr/treewalking_interpreters_and_cachelocality/gumsi2v/">a Reddit comment</a> by <a href="https://craftinginterpreters.com/">Bob Nystrom</a>, is that it essentially reinvents the idea of a <a href="https://en.wikipedia.org/wiki/Bytecode">bytecode</a> interpreter.
The <code>Expr</code> structs are bytecode instructions, and they contain variable references encoded as <code>u32</code>s.
You could make this interpreter even better by swapping out our simple <code>state</code> table for some kind of stack, and then it would <em>really</em> be no different from a bytecode interpreter you might design from first principles.
I just think it’s pretty nifty that “merely” changing our AST data structure led us directly from the land of tree walking to the land of bytecode.</p>

<h2 id="further-reading">Further Reading</h2>

<p>I <a href="https://discuss.systems/@adrian/109990979464062464">asked on Mastodon</a> a while back for pointers to other writing about data structure flattening,
and folks really came through (thanks, everybody!).
Here are some other places it came up in a compilers context:</p>

<ul>
  <li>Mike Pall <a href="http://lua-users.org/lists/lua-l/2009-11/msg00089.html">attributes some of LuaJIT’s performance</a> to its “linear, pointer-free IR.” It’s pointer-free because it’s flattened.</li>
  <li>Concordantly, <a href="https://blog.nelhage.com/post/why-sorbet-is-fast/">a blog post explaining the performance of the Sorbet type-checker for Ruby</a> extols the virtues of using packed arrays and replacing 64-bit pointers with 32-bit indices.</li>
  <li>The Oil shell project has a <a href="https://github.com/oilshell/oil/wiki/Compact-AST-Representation">big collection of links</a> all about “compact AST representation,” much of which boils down to flattening.</li>
</ul>

<p>Beyond just language implementation, similar concepts show up in other performance-oriented domains.
I admit that I understand this stuff less, especially the things from the world of video games:</p>

<ul>
  <li><a href="http://iu-parfunc.github.io/gibbon/">A line of work</a> from Purdue and Indiana is about compiling programs to operate directly on serialized data. <a href="https://drops.dagstuhl.de/opus/volltexte/2017/7273/pdf/LIPIcs-ECOOP-2017-26.pdf">Gibbon</a> in particular is pretty much a translator from “normal”-looking code to flattened implementations.</li>
  <li>Flattening-like ideas appear a lot in <em>data-oriented design</em>, a broadly defined concept that I only partially understand. For example, <a href="https://andrewkelley.me/">Andrew Kelley</a> argues in <a href="https://vimeo.com/649009599#t=850s">a talk on the topic</a> for using indices in place of pointers.</li>
  <li>Check out this <a href="https://manishearth.github.io/blog/2021/03/15/arenas-in-rust/">overview of arena libraries in Rust</a> and its discussion of the ergonomics of arena-related lifetimes.</li>
  <li>Here’s <a href="https://floooh.github.io/2018/06/17/handles-vs-pointers.html">a post comparing handles vs. pointers in game development</a> that advocates for packing homogeneously typed objects into arrays and using indices to refer to them.</li>
  <li>Similar ideas show up in <a href="https://en.wikipedia.org/wiki/Entity_component_system"><em>entity-component systems</em> (ECS)</a>, a big idea from game development that I also don’t completely understand. <a href="https://ajmmertens.medium.com/building-an-ecs-2-archetypes-and-vectorization-fe21690805f9">This post</a> covers many of the same locality-related themes as we did above.</li>
</ul>

<p>After I published this post, many people pointed me toward <a href="https://recursion.wtf/posts/rust_schemes/">a post from last year by Inanna Malick</a> that shows the same technique applied to same kind of toy “calculator” language implemented in Rust.
That post also uses <em>recursion schemes</em>, an elegant idea from the Haskell world that helps abstract over different concrete representations.
I highly recommend checking that post out.</p>



</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Functional Introduction To Computer Science (142 pts)]]></title>
            <link>https://cs.uwaterloo.ca/~plragde/flaneries/FICS/</link>
            <guid>36558759</guid>
            <pubDate>Sun, 02 Jul 2023 06:14:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/">https://cs.uwaterloo.ca/~plragde/flaneries/FICS/</a>, See on <a href="https://news.ycombinator.com/item?id=36558759">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><span>8.1</span></p><div><p><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;<span>← prev</span>&nbsp;&nbsp;<span>up</span>&nbsp;&nbsp;<a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Introduction.html" title="forward to &quot;1 Introduction&quot;" data-pltdoc="x">next →</a></span>&nbsp;</p></div><p>(a flânerie by Prabhakar Ragde)</p><p>This work is licensed under a <a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.
Please do not post exercise solutions to any public forum
or publicly-accessible software repository.</p><p>This is a complete draft of Part I. For Part II, look <a href="https://cs.uwaterloo.ca/~plragde/flane/FICS2">here</a>.</p><table><tbody><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Introduction.html" data-pltdoc="x">1<span>&nbsp;</span>Introduction</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Introduction.html#%28part._.Required_background%29" data-pltdoc="x">1.1<span>&nbsp;</span>Required background</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Introduction.html#%28part._.Design_philosophy%29" data-pltdoc="x">1.2<span>&nbsp;</span>Design philosophy</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html" data-pltdoc="x">2<span>&nbsp;</span>Starting out with Racket</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.Functions_in_mathematics%29" data-pltdoc="x">2.1<span>&nbsp;</span>Functions in mathematics</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.Function_application_in_.Racket%29" data-pltdoc="x">2.2<span>&nbsp;</span>Function application in Racket</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.Dr.Racket_s_.Interactions_window%29" data-pltdoc="x">2.3<span>&nbsp;</span>DrRacket’s Interactions window</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.Function_definitions_in_.Racket%29" data-pltdoc="x">2.4<span>&nbsp;</span>Function definitions in Racket</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.Dr.Racket_s_.Definitions_window%29" data-pltdoc="x">2.5<span>&nbsp;</span>DrRacket’s Definitions window</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.More_types_of_data%29" data-pltdoc="x">2.6<span>&nbsp;</span>More types of data</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.Conditional_expressions%29" data-pltdoc="x">2.7<span>&nbsp;</span>Conditional expressions</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.The_design_recipe%29" data-pltdoc="x">2.8<span>&nbsp;</span>The design recipe</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Starting_out_with_Racket.html#%28part._.An_extended_example%29" data-pltdoc="x">2.9<span>&nbsp;</span>An extended example</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Syntax_and_semantics.html" data-pltdoc="x">3<span>&nbsp;</span>Syntax and semantics</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Syntax_and_semantics.html#%28part._.Syntax_and_grammar%29" data-pltdoc="x">3.1<span>&nbsp;</span>Syntax and grammar</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Syntax_and_semantics.html#%28part._.A_semantic_model%29" data-pltdoc="x">3.2<span>&nbsp;</span>A semantic model</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Structures.html" data-pltdoc="x">4<span>&nbsp;</span>Structures</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Structures.html#%28part._.Struct.Syn.Sem%29" data-pltdoc="x">4.1<span>&nbsp;</span>Syntax and semantics</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Structures.html#%28part._.Simulating_natural_numbers%29" data-pltdoc="x">4.2<span>&nbsp;</span>Simulating natural numbers</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Structures.html#%28part._.Correctness%29" data-pltdoc="x">4.3<span>&nbsp;</span>Correctness</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Lists.html" data-pltdoc="x">5<span>&nbsp;</span>Lists</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Lists.html#%28part._.Sequences%29" data-pltdoc="x">5.1<span>&nbsp;</span>Sequences</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Lists.html#%28part._.Lists_in_.Racket%29" data-pltdoc="x">5.2<span>&nbsp;</span>Lists in Racket</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Lists.html#%28part._.Sets%29" data-pltdoc="x">5.3<span>&nbsp;</span>Sets</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Lists.html#%28part._.Representing_sets_using_ordered_lists%29" data-pltdoc="x">5.4<span>&nbsp;</span>Representing sets using ordered lists</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Lists.html#%28part._.List_abbreviations%29" data-pltdoc="x">5.5<span>&nbsp;</span>List abbreviations</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Functional_Abstraction.html" data-pltdoc="x">6<span>&nbsp;</span>Functional Abstraction</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Functional_Abstraction.html#%28part._.A_first_example%29" data-pltdoc="x">6.1<span>&nbsp;</span>A first example</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Functional_Abstraction.html#%28part._.More_functional_abstraction%29" data-pltdoc="x">6.2<span>&nbsp;</span>More functional abstraction</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Functional_Abstraction.html#%28part._.Functions_are_values%29" data-pltdoc="x">6.3<span>&nbsp;</span>Functions are values</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Functional_Abstraction.html#%28part._.Syntax_and_semantics_of_.I.S.L_%29" data-pltdoc="x">6.4<span>&nbsp;</span>Syntax and semantics of ISL+</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Functional_Abstraction.html#%28part._.Local_bindings_and_scope%29" data-pltdoc="x">6.5<span>&nbsp;</span>Local bindings and scope</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Functional_Abstraction.html#%28part._.Still_more_functional_abstraction%29" data-pltdoc="x">6.6<span>&nbsp;</span>Still more functional abstraction</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Functional_Abstraction.html#%28part._.Simplifying_.Racket%29" data-pltdoc="x">6.7<span>&nbsp;</span>Simplifying Racket</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Efficient_Representations.html" data-pltdoc="x">7<span>&nbsp;</span>Efficient Representations</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Efficient_Representations.html#%28part._.Unary_representation_reviewed%29" data-pltdoc="x">7.1<span>&nbsp;</span>Unary representation reviewed</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Efficient_Representations.html#%28part._.Binary_representation_introduced%29" data-pltdoc="x">7.2<span>&nbsp;</span>Binary representation introduced</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Efficient_Representations.html#%28part._.Implementing_addition%29" data-pltdoc="x">7.3<span>&nbsp;</span>Implementing addition</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Efficient_Representations.html#%28part._.Space_and_time_analysis%29" data-pltdoc="x">7.4<span>&nbsp;</span>Space and time analysis</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Efficient_Representations.html#%28part._.Representing_integers%29" data-pltdoc="x">7.5<span>&nbsp;</span>Representing integers</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Trees.html" data-pltdoc="x">8<span>&nbsp;</span>Trees</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Trees.html#%28part._.From_lists_to_trees%29" data-pltdoc="x">8.1<span>&nbsp;</span>From lists to trees</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Trees.html#%28part._.Braun_trees%29" data-pltdoc="x">8.2<span>&nbsp;</span>Braun trees</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Trees.html#%28part._.Tree-structured_data%29" data-pltdoc="x">8.3<span>&nbsp;</span>Tree-structured data</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Trees.html#%28part._.Binary_search_trees%29" data-pltdoc="x">8.4<span>&nbsp;</span>Binary search trees</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Generative_Recursion.html" data-pltdoc="x">9<span>&nbsp;</span>Generative Recursion</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Generative_Recursion.html#%28part._.Greatest_common_divisor%29" data-pltdoc="x">9.1<span>&nbsp;</span>Greatest common divisor</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Generative_Recursion.html#%28part._.Sorting%29" data-pltdoc="x">9.2<span>&nbsp;</span>Sorting</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Generative_Recursion.html#%28part._.Insertion_and_selection_sort%29" data-pltdoc="x">9.2.1<span>&nbsp;</span>Insertion and selection sort</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Generative_Recursion.html#%28part._.Treesort%29" data-pltdoc="x">9.2.2<span>&nbsp;</span>Treesort</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Generative_Recursion.html#%28part._.Quicksort%29" data-pltdoc="x">9.2.3<span>&nbsp;</span>Quicksort</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Generative_Recursion.html#%28part._.Bottom-up_mergesort%29" data-pltdoc="x">9.2.4<span>&nbsp;</span>Bottom-up mergesort</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Generative_Recursion.html#%28part._.Top-down_mergesort%29" data-pltdoc="x">9.2.5<span>&nbsp;</span>Top-down mergesort</a></p></td></tr><tr><td></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Interpreters.html" data-pltdoc="x">10<span>&nbsp;</span>Interpreters</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Interpreters.html#%28part._.Evaluating_arithmetic_expressions%29" data-pltdoc="x">10.1<span>&nbsp;</span>Evaluating arithmetic expressions</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Interpreters.html#%28part._.Adding_local_names%29" data-pltdoc="x">10.2<span>&nbsp;</span>Adding local names</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Interpreters.html#%28part._.Adding_second-class_functions%29" data-pltdoc="x">10.3<span>&nbsp;</span>Adding second-class functions</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Interpreters.html#%28part._.Adding_first-class_functions%29" data-pltdoc="x">10.4<span>&nbsp;</span>Adding first-class functions</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Interpreters.html#%28part._.Interlude__programs_that_don_t_terminate%29" data-pltdoc="x">10.5<span>&nbsp;</span>Interlude: programs that don’t terminate</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Interpreters.html#%28part._.Deferring_substitution%29" data-pltdoc="x">10.6<span>&nbsp;</span>Deferring substitution</a></p></td></tr><tr><td><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Interpreters.html#%28part._.What_s_next_%29" data-pltdoc="x">10.7<span>&nbsp;</span>What’s next?</a></p></td></tr></tbody></table><div><p><span>&nbsp;&nbsp;</span><span>&nbsp;&nbsp;<span>← prev</span>&nbsp;&nbsp;<span>up</span>&nbsp;&nbsp;<a href="https://cs.uwaterloo.ca/~plragde/flaneries/FICS/Introduction.html" title="forward to &quot;1 Introduction&quot;" data-pltdoc="x">next →</a></span>&nbsp;</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GPT-Migrate converts repos from one lang/framework to another (185 pts)]]></title>
            <link>https://github.com/0xpayne/gpt-migrate</link>
            <guid>36558032</guid>
            <pubDate>Sun, 02 Jul 2023 03:46:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/0xpayne/gpt-migrate">https://github.com/0xpayne/gpt-migrate</a>, See on <a href="https://news.ycombinator.com/item?id=36558032">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">GPT-Migrate</h2>
<h3 tabindex="-1" dir="auto">◐ &nbsp; Easily migrate your codebase from one framework or language to another. &nbsp; ◑</h3>
<p dir="auto">If you've ever faced the pain of migrating a codebase to a new framework or language, this project is for you.</p>
<details open="">
  <summary>
    
    <span aria-label="Video description GPT-Migrate.mp4">GPT-Migrate.mp4</span>
    <span></span>
  </summary>

  <video src="https://user-images.githubusercontent.com/25165841/250232917-bcc99ce8-99b7-4e3d-a653-f89e163ed825.mp4" data-canonical-src="https://user-images.githubusercontent.com/25165841/250232917-bcc99ce8-99b7-4e3d-a653-f89e163ed825.mp4" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto">Migration is a costly, tedious, and non-trivial problem. Do not trust the current version blindly and please use responsibly. Please also be aware that costs can add up quickly as GPT-Migrate is designed to write (and potentially re-write) the entirety of a codebase.</p>
<p dir="auto">However, with the collective brilliance of the OSS community and the current state of LLMs, it is also a very tractable problem.</p>
<h2 tabindex="-1" dir="auto"><g-emoji alias="zap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png">⚡️</g-emoji> Usage</h2>
<ol dir="auto">
<li>
<p dir="auto">Install Docker and ensure that it's running. It's also recommended that you use at least GPT-4, preferably GPT-4-32k.</p>
</li>
<li>
<p dir="auto">Set your <a href="https://platform.openai.com/account/api-keys" rel="nofollow">OpenAI API key</a> and install the python requirements:</p>
</li>
</ol>
<p dir="auto"><code>export OPENAI_API_KEY=&lt;your key&gt;</code></p>
<p dir="auto"><code>pip install -r requirements.txt</code></p>
<ol start="3" dir="auto">
<li>Run the main script with the target language you want to migrate to:</li>
</ol>
<p dir="auto"><code>python main.py --targetlang nodejs</code></p>
<ol start="4" dir="auto">
<li>(Optional) If you'd like GPT-Migrate to validate the unit tests it creates against your app before it tests the migrated app with them, please have your existing app exposed and use the <code>--sourceport</code> flag.</li>
</ol>
<p dir="auto">By default, this script will execute the flask-nodejs benchmark. You can specify the language, source directory, and many other things using the options guide below.</p>
<h2 tabindex="-1" dir="auto"><g-emoji alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png">💡</g-emoji> Options</h2>
<p dir="auto">You can customize the behavior of GPT-Migrate by passing the following options to the <code>main.py</code> script:</p>
<ul dir="auto">
<li>
<p dir="auto"><code>--model</code>: The Large Language Model to be used. Default is <code>"gpt-4-32k"</code>.</p>
</li>
<li>
<p dir="auto"><code>--temperature</code>: Temperature setting for the AI model. Default is <code>0</code>.</p>
</li>
<li>
<p dir="auto"><code>--sourcedir</code>: Source directory containing the code to be migrated. Default is <code>"../benchmarks/flask-nodejs/source"</code>.</p>
</li>
<li>
<p dir="auto"><code>--sourcelang</code>: Source language or framework of the code to be migrated. No default value.</p>
</li>
<li>
<p dir="auto"><code>--sourceentry</code>: Entrypoint filename relative to the source directory. For instance, this could be an <code>app.py</code> or <code>main.py</code> file for Python. Default is <code>"app.py"</code>.</p>
</li>
<li>
<p dir="auto"><code>--targetdir</code>: Directory where the migrated code will live. Default is <code>"../benchmarks/flask-nodejs/target"</code>.</p>
</li>
<li>
<p dir="auto"><code>--targetlang</code>: Target language or framework for migration. Default is <code>"nodejs"</code>.</p>
</li>
<li>
<p dir="auto"><code>--operating_system</code>: Operating system for the Dockerfile. Common options are <code>'linux'</code> or <code>'windows'</code>. Default is <code>'linux'</code>.</p>
</li>
<li>
<p dir="auto"><code>--testfiles</code>: Comma-separated list of files that have functions to be tested. For instance, this could be an <code>app.py</code> or <code>main.py</code> file for a Python app where your REST endpoints are. Include the full relative path. Default is <code>"app.py"</code>.</p>
</li>
<li>
<p dir="auto"><code>--sourceport</code>: (Optional) Port for testing the unit tests file against the original app. No default value.</p>
</li>
<li>
<p dir="auto"><code>--targetport</code>: Port for testing the unit tests file against the migrated app. Default is <code>8080</code>.</p>
</li>
<li>
<p dir="auto"><code>--step</code>: Step to run. Options are <code>'setup'</code>, <code>'migrate'</code>, <code>'test'</code>, <code>'all'</code>. Default is <code>'all'</code>.</p>
</li>
</ul>
<p dir="auto">For example, to migrate a Python codebase to Node.js, you might run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="python main.py --sourcedir /path/to/my-python-app --sourceentry app.py --targetdir /path/to/my-nodejs-app --targetlang nodejs"><pre>python main.py --sourcedir /path/to/my-python-app --sourceentry app.py --targetdir /path/to/my-nodejs-app --targetlang nodejs</pre></div>
<p dir="auto">This will take the Python code in <code>./my-python-app</code>, migrate it to Node.js, and write the resulting code to <code>./my-nodejs-app</code>.</p>
<h4 tabindex="-1" dir="auto">GPT-assisted debugging</h4>
<details open="">
  <summary>
    
    <span aria-label="Video description GPT-Migrate-debugging.mp4">GPT-Migrate-debugging.mp4</span>
    <span></span>
  </summary>

  <video src="https://user-images.githubusercontent.com/25165841/250233075-eff1a535-f40e-42e4-914c-042c69ba9195.mp4" data-canonical-src="https://user-images.githubusercontent.com/25165841/250233075-eff1a535-f40e-42e4-914c-042c69ba9195.mp4" controls="controls" muted="muted">

  </video>
</details>

<h2 tabindex="-1" dir="auto">🤖 How it Works</h2>
<p dir="auto">For migrating a repo from <code>--sourcelang</code> to <code>--targetlang</code>...</p>
<ol dir="auto">
<li>GPT-Migrate first creates a Docker environment for <code>--targetlang</code>, which is either passed in or assessed automatically by GPT-Migrate.</li>
<li>It evaluates your existing code recursively to identify 3rd-party <code>--sourcelang</code> dependencies and selects corresponding <code>--targetlang</code> dependencies.</li>
<li>It recursively rebuilds new <code>--targetlang</code> code from your existing code starting from your designated <code>--sourceentry</code> file. This step can be started from with the <code>--step migrate</code> option.</li>
<li>It spins up the Docker environment with the new codebase, exposing it on <code>--targetport</code> and iteratively debugging as needed.</li>
<li>It develops unit tests using Python's unittest framework, and optionally tests these against your existing app if it's running and exposed on <code>--sourceport</code>, iteratively debugging as needed. This step can be started from with the <code>--step test</code> option.</li>
<li>It tests the new code on <code>--targetport</code> against these unit tests.</li>
<li>It iteratively debugs the code for for you with context from logs, error messages, relevant files, and directory structure. It does so by choosing one or more actions (move, create, or edit files) then executing them. If it wants to execute any sort of shell script (moving files around), it will first ask for clearance. Finally, if at any point it gets stuck or the user ends the debugging loop, it will output directions for the user to follow to move to the next step of the migration.</li>
<li>The new codebase is completed and exists in <code>--targetdir</code>.</li>
</ol>
<h3 tabindex="-1" dir="auto"><g-emoji alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png">📝</g-emoji> Prompt Design</h3>
<p dir="auto">Subprompts are organized in the following fashion:</p>
<ul dir="auto">
<li><code>HIERARCHY</code>: this defines the notion of preferences. There are 4 levels of preference, and each level prioritized more highly than the previous one.</li>
<li><code>p1</code>: Preference Level 1. These are the most general prompts, and consist of broad guidelines.</li>
<li><code>p2</code>: Preference Level 2. These are more specific prompts, and consist of guidelines for certain types of actions (e.g., best practices and philosophies for writing code).</li>
<li><code>p3</code>: Preference Level 3. These are even more specific prompts, and consist of directions for specific actions (e.g., creating a certain file, debugging, writing tests).</li>
<li><code>p4</code>: Preference Level 4. These are the most specific prompts, and consist of formatting for output.</li>
</ul>
<p dir="auto">Prompts are a combination of subprompts. This concept of tagging and composability can be extended to other properties as well to make prompts even more robust. This is an area we're highly interested in actively exploring.</p>
<h2 tabindex="-1" dir="auto">📈 Performance</h2>
<p dir="auto">GPT-Migrate is currently in development alpha and is not yet ready for production use. For instance, on the relatively simple benchmarks, it gets through "easy" languages like python or javascript without a hitch ~50% of the time, and cannot get through more complex languages like C++ or Rust without some human assistance.</p>
<h2 tabindex="-1" dir="auto">✅ Benchmarks</h2>
<p dir="auto">We're actively looking to build up a robust benchmark repository. If you have a codebase that you'd like to contribute, please open a PR! The current benchmarks were built from scratch: REST API apps which have a few endpoints and dependency files.</p>
<h2 tabindex="-1" dir="auto">📣 Call to Action</h2>
<p dir="auto">We're looking for talented contributors. Whether you have a particular passion about a specific language or framework, want to help in creating a more robust test suite, or generally have interesting ideas on how to make this better, we'd love to have you!</p>
<h2 tabindex="-1" dir="auto">Join the conversation on <a href="https://twitter.com/joshpxyne/status/1675254164165910528" rel="nofollow">Twitter</a>!</h2>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Look at Bluesky (143 pts)]]></title>
            <link>https://juliette.page/blog/bluesky.html</link>
            <guid>36557378</guid>
            <pubDate>Sun, 02 Jul 2023 01:50:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://juliette.page/blog/bluesky.html">https://juliette.page/blog/bluesky.html</a>, See on <a href="https://news.ycombinator.com/item?id=36557378">Hacker News</a></p>
<div id="readability-page-1" class="page">
<header>
<a href="https://juliette.page/">Home</a>
</header>

<p id="tagline">An overly complicated social networking platform</p>
<p>Bluesky is a platform that competes with Mastodon. It runs the Authenticated Transfer Protocol, atproto. Atproto is a new protocol like ActivityPub for federated, decentralized, social networking. In atproto, usernames are domains which lead to cryptographic urls called DID. DID which stands for Decentralized Identifier is another specification. That all just means that my username would be @juliette.page and my DID would be something like at://did:plc:1231. A benefit of atproto users is that they are transferable without needing an active server, so for example if your server goes down thats not a problem you can just migrate to a different one and you’re all good! All of the user data is stored in data repositories.</p>
<p>A problem with the system of having a domain as a username is that people can claim it who don’t have access to that username. For example, someone was able to get the AWS S3 domain as their handle!</p> 
<p>Data repositories are signed, “git like”, public databases. Everything in them can be verified by other sources. However, that means interactions, such as user likes, blocks, follows, etc are all public. With no means to make them private. Which could lead to harassment! </p>
<p>Atproto also has the ability to create custom algorithms for timeline sorting! Which is a neat feature. But runs into the problem of algorithms being hijacked to show inappropriate/offensive/bigoted content.</p>
<p>Overall, Bluesky has some features that make it better than Mastodon, for example the algorithms and the ability to migrate servers while the server being done. But also it’s a group of overly complicated specifications that could’ve just been extensions to the ActivityPub protocol rather than a whole new protocol! </p>



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[After September 1, 2023, all Gfycat content and data will be deleted (249 pts)]]></title>
            <link>https://gfycat.com/</link>
            <guid>36557287</guid>
            <pubDate>Sun, 02 Jul 2023 01:34:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gfycat.com/">https://gfycat.com/</a>, See on <a href="https://news.ycombinator.com/item?id=36557287">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main"><section><p><h2>Service Notice</h2></p><p><h2>The Gfycat service is being discontinued. Please save or delete your Gfycat content by visiting https://www.gfycat.com and logging in to your account. After September 1, 2023, all Gfycat content and data will be deleted from gfycat.com</h2></p></section><section><p><a href="https://gfycat.com/discover/trending-gifs"><h2>Featured Trending GIFs</h2></a></p><div><p><a href="https://gfycat.com/discover/trending-gifs">See more trending GIFs<span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 34" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M2.092.364L.37 2.074a.948.948 0 0 0-.37.733c0 .304.123.612.37.794L13.845 17.03.37 30.4c-.247.241-.37.486-.37.79 0 .308.123.55.37.795l1.722 1.648a.97.97 0 0 0 .74.367c.307 0 .554-.123.798-.367l16-15.872a.946.946 0 0 0 .37-.731c0-.305-.123-.61-.37-.795L3.63.364C3.386.123 3.139 0 2.832 0a.976.976 0 0 0-.74.364z" fill-rule="nonzero"></path></svg></span></a></p></div></section><div><section><div><a href="https://gfycat.com/popular-gifs"><h2>Popular GIFs</h2></a></div><div><p><a href="https://gfycat.com/popular-gifs">See more popular GIFs<span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 34" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M2.092.364L.37 2.074a.948.948 0 0 0-.37.733c0 .304.123.612.37.794L13.845 17.03.37 30.4c-.247.241-.37.486-.37.79 0 .308.123.55.37.795l1.722 1.648a.97.97 0 0 0 .74.367c.307 0 .554-.123.798-.367l16-15.872a.946.946 0 0 0 .37-.731c0-.305-.123-.61-.37-.795L3.63.364C3.386.123 3.139 0 2.832 0a.976.976 0 0 0-.74.364z" fill-rule="nonzero"></path></svg></span></a></p></div></section><section><div><a href="https://gfycat.com/gaming"><h2>Gaming GIFs</h2></a></div><div><p><a href="https://gfycat.com/gaming">See more gaming GIFs<span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 34" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M2.092.364L.37 2.074a.948.948 0 0 0-.37.733c0 .304.123.612.37.794L13.845 17.03.37 30.4c-.247.241-.37.486-.37.79 0 .308.123.55.37.795l1.722 1.648a.97.97 0 0 0 .74.367c.307 0 .554-.123.798-.367l16-15.872a.946.946 0 0 0 .37-.731c0-.305-.123-.61-.37-.795L3.63.364C3.386.123 3.139 0 2.832 0a.976.976 0 0 0-.74.364z" fill-rule="nonzero"></path></svg></span></a></p></div></section><section><p><a href="https://gfycat.com/featured/reactions"><h2>Reaction GIFs</h2></a></p><div><p><a href="https://gfycat.com/featured/reactions">See more reaction GIFs<span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 34" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M2.092.364L.37 2.074a.948.948 0 0 0-.37.733c0 .304.123.612.37.794L13.845 17.03.37 30.4c-.247.241-.37.486-.37.79 0 .308.123.55.37.795l1.722 1.648a.97.97 0 0 0 .74.367c.307 0 .554-.123.798-.367l16-15.872a.946.946 0 0 0 .37-.731c0-.305-.123-.61-.37-.795L3.63.364C3.386.123 3.139 0 2.832 0a.976.976 0 0 0-.74.364z" fill-rule="nonzero"></path></svg></span></a></p></div></section><section><div><a href="https://gfycat.com/stickers"><h2>Sticker GIFs</h2></a></div><div><p><a href="https://gfycat.com/stickers">See more sticker GIFs<span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 34" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M2.092.364L.37 2.074a.948.948 0 0 0-.37.733c0 .304.123.612.37.794L13.845 17.03.37 30.4c-.247.241-.37.486-.37.79 0 .308.123.55.37.795l1.722 1.648a.97.97 0 0 0 .74.367c.307 0 .554-.123.798-.367l16-15.872a.946.946 0 0 0 .37-.731c0-.305-.123-.61-.37-.795L3.63.364C3.386.123 3.139 0 2.832 0a.976.976 0 0 0-.74.364z" fill-rule="nonzero"></path></svg></span></a></p></div></section></div><div><p><h2>Current trending tags</h2></p><div><h2>Gfycat Pro</h2><p>No ads, always HD experience with Gfycat Pro.</p><p><a href="https://gfycat.com/pro">Get Pro now</a></p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[China Has $3T of ‘Hidden’ Currency Reserves, Setser Says (109 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2023-06-30/china-has-3-trillion-of-hidden-currency-reserves-setser-says</link>
            <guid>36557122</guid>
            <pubDate>Sun, 02 Jul 2023 01:07:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2023-06-30/china-has-3-trillion-of-hidden-currency-reserves-setser-says">https://www.bloomberg.com/news/articles/2023-06-30/china-has-3-trillion-of-hidden-currency-reserves-setser-says</a>, See on <a href="https://news.ycombinator.com/item?id=36557122">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Intro to Cryptography [pdf] (2011) (160 pts)]]></title>
            <link>https://www.cs.umd.edu/~waa/414-F11/IntroToCrypto.pdf</link>
            <guid>36557077</guid>
            <pubDate>Sun, 02 Jul 2023 01:02:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cs.umd.edu/~waa/414-F11/IntroToCrypto.pdf">https://www.cs.umd.edu/~waa/414-F11/IntroToCrypto.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=36557077">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Oregon County Sues BP, Chevron, Shell, Exxon for $51B Climate Damages (192 pts)]]></title>
            <link>https://carboncredits.com/oregon-county-sues-oil-companies-shell-bp-exxon-chevron-for-51b-climate-damages/</link>
            <guid>36556844</guid>
            <pubDate>Sun, 02 Jul 2023 00:28:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://carboncredits.com/oregon-county-sues-oil-companies-shell-bp-exxon-chevron-for-51b-climate-damages/">https://carboncredits.com/oregon-county-sues-oil-companies-shell-bp-exxon-chevron-for-51b-climate-damages/</a>, See on <a href="https://news.ycombinator.com/item?id=36556844">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-td-block-uid="tdi_94"><p><span>An Oregon county filed a lawsuit against oil and gas companies and industry, blaming them and seeking $51 billion in damages for the deadly 2021 Pacific Northwest heat wave that killed about 800 people.</span></p>
<p><span>Multnomah County, which includes Portland, sued 17 companies, including Shell, Exxon Mobil, Chevron, BP, among others. The county said these fossil fuel companies and other entities in the industry are the ones to blame for the deadly heat dome.</span></p>
<p><span>A heat dome event happens when a high-pressure system prevents cooler winds from blowing and also prevents clouds from forming.&nbsp;</span></p>
<h2><span>The $51 Billion Heat Dome Damages</span></h2>
<p><span>Multnomah County is seeking<strong> $50 million</strong> from the defendants for actual damages from the <a href="https://eos.org/articles/in-the-pacific-northwest-2021-was-the-hottest-year-in-a-millennium#:~:text=A%201%2C000%2Dyear%20temperature%20record,in%20the%20decades%20to%20come." target="_blank" rel="noopener">2021 record-breaking heat wave</a>. Temperatures in the region reached 116°F, killing 69 people in the county. This is the hottest temperature ever recorded in the county’s history.&nbsp;</span></p>
<p><span>The plaintiff also asked for <strong>$1.5 billion</strong> in future damages and <strong>$50 billion</strong> abatement fund to “weatherproof” the county. The fund will also be for public health services needed for future extreme weather events resulting from fossil fuel use.&nbsp;</span></p>
<p><span>Emergency departments in the county were flooded with patients suffering from heat-related illness.&nbsp;</span></p>
<p><span>Apart from Oregon, hundreds of people also died because of the event in </span><a href="https://www.washington.edu/news/2023/04/06/washington-states-2021-heat-wave-contributed-to-159-excess-injury-deaths-over-three-weeks/" target="_blank" rel="noopener"><span>Washington</span></a><span> and </span><a href="https://science.gc.ca/site/science/en/blogs/science-health/surviving-heat-impacts-2021-western-heat-dome-canadahttps://science.gc.ca/site/science/en/blogs/science-health/surviving-heat-impacts-2021-western-heat-dome-canada" target="_blank" rel="noopener"><span>British Columbia</span></a><span>.&nbsp;</span></p>
<p><span>Researchers composed of climate scientists said that the heat wave was due to excessive carbon emissions from burning fossil fuels.&nbsp;</span></p>
<p><span>According to these climate experts, the 2021 heat dome was “virtually impossible” if not because of global warming. Their <a href="https://www.nature.com/articles/s41558-022-01520-4" target="_blank" rel="noopener">study</a> showed that the heat wave was at least 150x less likely to occur if temperatures hadn’t heated that much caused by human-related carbon emissions.&nbsp;&nbsp;</span></p>
<p><span>After the 2021 heat dome, the county has spent more to prepare for similar events in the future – expanding shelter, increasing supplies, and staffing up.&nbsp;</span></p>
<h2><span>Climate Lawsuits Against Big Oil&nbsp;</span></h2>
<p><span>The Oregon county accused the big oil companies, and other entities including McKinsey &amp; Company, for committing negligence and fraud. They said the companies knew that their fossil fuel products will cause warming and will have a negative impact. Yet, they continue to deceive the public about it.&nbsp;&nbsp;</span></p>
<p><span>As per their </span><a href="https://www.multco.us/multnomah-county/news/multnomah-county-sues-oil-companies-over-2021-heat-dome-disaster" target="_blank" rel="noopener"><span>statement</span></a><span>:</span></p>
<p><i><span>“We are confident that, once we show what the fossil fuel companies knew about global warming and when, and what they did to deny, delay and deceive the public, the jury will not let the fossil fuel companies get away with their reckless misconduct.”&nbsp;</span></i></p>
<p><span>Oregon taxpayers paid for all the heat-related emergencies and expenses during the event, including air conditioning and cooling centers.</span></p>
<p><img decoding="async" src="https://firstdraftnews.org/wp-content/uploads/2021/07/2021-06-30T234741Z_1492449881_RC2W8O9E6RNZ_RTRMADP_3_CANADA-USA-WEATHER-900x505.jpg?x21167" alt="Record-breaking heat wave in North Pacific " width="900" height="505" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20900%20505'%3E%3C/svg%3E" data-lazy-src="https://firstdraftnews.org/wp-content/uploads/2021/07/2021-06-30T234741Z_1492449881_RC2W8O9E6RNZ_RTRMADP_3_CANADA-USA-WEATHER-900x505.jpg?x21167"></p>
<p><span>The Oregon lawsuit is similar to climate litigations filed by other local and state governments since 2017. It’s the 36th time a municipality has sued oil and gas companies for alleged damages caused by global warming.&nbsp;</span></p>
<p><span>It comes after the US </span><a href="https://carboncredits.com/will-big-oil-pay-climate-damages/"><span>Supreme Court sided with Colorado’s governments</span></a><span> demanding oil giants to pay for their climate damages.</span></p>
<p>Last year at climate summit, <a href="https://carboncredits.com/4-key-takeaways-from-cop27-summit/">COP27</a>, Climate TRACE, an NGO tracking emissions, analyzed 72,612 individual sources of CO2.&nbsp;Their study revealed that fossil fuel emissions could be up to <strong>3x higher</strong> than what oil and gas companies claim. They found that <strong>50%</strong> of the largest emitters are oil and gas fields.</p>
<p>According to an <a href="https://www.carbonbrief.org/analysis-global-co2-emissions-from-fossil-fuels-hit-record-high-in-2022/" target="_blank" rel="noopener">analysis</a>, global carbon emissions from fossil fuels hit record high in 2022 as shown below, at 40.5 gigatons of CO2.</p>
<figure id="attachment_12742" aria-describedby="caption-attachment-12742"><picture decoding="async">
<source type="image/webp" data-lazy-srcset="https://carboncredits.b-cdn.net/wp-content/uploads/2023/06/global-carbon-emissions-from-fossi-lfuels-2022.jpg.webp 747w, https://carboncredits.b-cdn.net/wp-content/uploads/2023/06/global-carbon-emissions-from-fossi-lfuels-2022-300x241.jpg.webp 300w, https://carboncredits.b-cdn.net/wp-content/uploads/2023/06/global-carbon-emissions-from-fossi-lfuels-2022-696x559.jpg.webp 696w" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20747%20600'%3E%3C/svg%3E" data-lazy-sizes="(max-width: 747px) 100vw, 747px">
<img decoding="async" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20747%20600'%3E%3C/svg%3E" alt="global carbon emissions from fossi lfuels 2022" width="747" height="600" data-lazy-srcset="https://carboncredits.b-cdn.net/wp-content/uploads/2023/06/global-carbon-emissions-from-fossi-lfuels-2022.jpg 747w, https://carboncredits.b-cdn.net/wp-content/uploads/2023/06/global-carbon-emissions-from-fossi-lfuels-2022-300x241.jpg 300w, https://carboncredits.b-cdn.net/wp-content/uploads/2023/06/global-carbon-emissions-from-fossi-lfuels-2022-696x559.jpg 696w" data-lazy-sizes="(max-width: 747px) 100vw, 747px" data-lazy-src="https://carboncredits.b-cdn.net/wp-content/uploads/2023/06/global-carbon-emissions-from-fossi-lfuels-2022.jpg">
</picture>
<figcaption id="caption-attachment-12742">Source: Carbon Brief</figcaption></figure>
<h2><span>Baseless, Unproductive Claims</span></h2>
<p><span>In response to the lawsuit, Chevron’s legal representative said the claims are baseless and counterproductive in “advancing international policy solutions”.&nbsp;</span></p>
<p><span>Shell also responded saying that the court isn’t the right venue in tackling climate change. Rather, this issue needs collaboration from all sectors and a “smart government policy” as the right way to find solutions.&nbsp;</span></p>
<p><span>Exxon’s spokesperson said that this kind of lawsuit won’t be helpful in addressing climate change, and will just waste time and resources. The oil giant further stated that it won’t impact their commitment to invest billions to reach global <a href="https://carboncredits.com/what-does-net-zero-emissions-really-mean/">net zero emissions.</a>&nbsp;</span></p>
<p><span>If big oil companies ended up paying the damages, it can make the cost of doing fossil fuel business more expensive, as per a </span><a href="https://blogs.law.columbia.edu/climatechange/2023/05/12/cities-counties-and-states-score-major-procedural-win-in-climate-liability-suits-against-fossil-fuel-companies/" target="_blank" rel="noopener"><span>climate law fellow </span></a><span>at Columbia University’s Sabin Center for Climate Change Law.</span></p>
<p><span>In effect, alternatives to fossil fuels will be more cost-competitive. This may not be a direct effect of climate change, but it could be a crucial turn of event.</span></p>
<p><span>Multnomah County brought the lawsuit in state court and has secured outside lawyers for the case.&nbsp;</span></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[C++ GPT-2 inference engine (106 pts)]]></title>
            <link>https://github.com/a1k0n/a1gpt</link>
            <guid>36556293</guid>
            <pubDate>Sat, 01 Jul 2023 23:11:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/a1k0n/a1gpt">https://github.com/a1k0n/a1gpt</a>, See on <a href="https://news.ycombinator.com/item?id=36556293">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">a1gpt</h2>
<p dir="auto">throwaway C++ GPT-2 inference engine from @a1k0n w/ minimal but optimized BLAS
ops for AVX and Apple Silicon</p>
<p dir="auto">no external dependencies except for accelerate framework on macos</p>
<h2 tabindex="-1" dir="auto">build / run</h2>
<ul dir="auto">
<li>First, download and convert the model</li>
</ul>
<p dir="auto"><code>$ python3 scripts/download_and_convert_gpt2.py</code></p>
<p dir="auto">This will require <code>numpy</code> and <code>huggingface_hub</code> to be installed in Python</p>
<ul dir="auto">
<li>CMake and build</li>
</ul>
<p dir="auto">note: RelWithDebInfo is the default build type, so it should run pretty quick</p>
<div data-snippet-clipboard-copy-content="$ mkdir build
$ cd build
$ cmake ..
-- The CXX compiler identification is GNU 11.3.0
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: a1gpt/build
$ make -j
[ 12%] Building CXX object CMakeFiles/bpe_test.dir/bpe_test.cpp.o
[ 25%] Building CXX object CMakeFiles/bpe_test.dir/bpe.cpp.o
[ 37%] Building CXX object CMakeFiles/gpt2.dir/main.cpp.o
[ 50%] Building CXX object CMakeFiles/gpt2.dir/model_load_gpt2.cpp.o
[ 62%] Building CXX object CMakeFiles/gpt2.dir/model.cpp.o
[ 75%] Building CXX object CMakeFiles/gpt2.dir/bpe.cpp.o
[ 87%] Linking CXX executable bpe_test
[100%] Linking CXX executable gpt2
[100%] Built target bpe_test
[100%] Built target gpt2
$ ./gpt2 &quot;provide your own prompt here&quot;"><pre><code>$ mkdir build
$ cd build
$ cmake ..
-- The CXX compiler identification is GNU 11.3.0
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: a1gpt/build
$ make -j
[ 12%] Building CXX object CMakeFiles/bpe_test.dir/bpe_test.cpp.o
[ 25%] Building CXX object CMakeFiles/bpe_test.dir/bpe.cpp.o
[ 37%] Building CXX object CMakeFiles/gpt2.dir/main.cpp.o
[ 50%] Building CXX object CMakeFiles/gpt2.dir/model_load_gpt2.cpp.o
[ 62%] Building CXX object CMakeFiles/gpt2.dir/model.cpp.o
[ 75%] Building CXX object CMakeFiles/gpt2.dir/bpe.cpp.o
[ 87%] Linking CXX executable bpe_test
[100%] Linking CXX executable gpt2
[100%] Built target bpe_test
[100%] Built target gpt2
$ ./gpt2 "provide your own prompt here"
</code></pre></div>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Beyond Markdown (2018) (117 pts)]]></title>
            <link>https://johnmacfarlane.net/beyond-markdown.html</link>
            <guid>36556261</guid>
            <pubDate>Sat, 01 Jul 2023 23:06:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://johnmacfarlane.net/beyond-markdown.html">https://johnmacfarlane.net/beyond-markdown.html</a>, See on <a href="https://news.ycombinator.com/item?id=36556261">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
<p><em>This essay was originally posted at <a href="https://talk.commonmark.org/t/beyond-markdown/2787">https://talk.commonmark.org/t/beyond-markdown/2787</a> in April, 2018.</em></p>
<p>In developing Commonmark, we have tried, as far as possible, to remain faithful to John Gruber’s original Markdown syntax description. We have diverged from it only occasionally, in the interest of removing ambiguity and increasing uniformity, and with the addition of a few syntax elements that are now virtuously ubiquitous (like fenced code blocks and shortcut reference links).</p>
<p>There are very good reasons for being conservative in this way. But this respect for the past has made the CommonMark spec a very complicated beast. There are <a href="http://spec.commonmark.org/0.28/#emphasis-and-strong-emphasis">17 principles governing emphasis</a>, for example, and <a href="https://github.com/commonmark/CommonMark/issues/475">these rules still leave cases undecided</a>. The <a href="http://spec.commonmark.org/0.28/#list-items">rules for list items</a> and <a href="http://spec.commonmark.org/0.28/#html-blocks">HTML blocks</a> are also very complex. All of these rules lead to unexpected results sometimes, and they make writing a parser for CommonMark a complex affair. I despair, at times, of getting to a spec that is worth calling 1.0.</p>
<p>What if we weren’t chained to the past? What if we tried to create a light markup syntax that keeps what is good about Markdown, while revising some of the features that have led to bloat and complexity in the CommonMark spec?</p>
<p>Let me be clear up front that I’m not suggesting any change in the goals of the Commonmark project. If these reflections lead to anything, it should probably be an entirely new project under a new name. And, being realistic, the burdens of maintaining backwards compatibility are light in comparison with the enormous practical costs of moving existing systems to a new light markup language. Still…I think it can be useful to daydream.</p>
<p>In what follows, I’ll go through the six features of Markdown that I think have created the most difficulties, and I’ll suggest how each pain point can be fixed.</p>
<h2 id="emphasis">1. Emphasis</h2>
<p>In Markdown, emphasis is created by surrounding text with <code>*</code> or <code>_</code> characters, <code>*like this*</code>. Strong emphasis is created by doubling these, <code>**like this**</code>. That all sounds very simple, and it’s visually clear which one is strong emphasis.</p>
<p>Unfortunately, these simple statements aren’t enough to pin down the syntax. Consider, for example,</p>
<pre><code>**this* text**</code></pre>
<p>Our simple rules are consistent with both of these readings:</p>
<ol type="1">
<li><code>&lt;strong&gt;this* text&lt;/strong&gt;</code></li>
<li><code>&lt;em&gt;&lt;em&gt;this&lt;/em&gt; text&lt;/em&gt;*</code></li>
</ol>
<p>So, to fully specify emphasis parsing, we need additional rules. The 17 discouragingly complex rules in the CommonMark spec are intended to force the sorts of readings that humans will find most natural.</p>
<p>It seems to me that the use of doubled characters for strong emphasis, and the possibility of emphasizing even part of a word, as in <code>fan*tas*tic</code>, have made the problem of specifying emphasis parsing far worse, by vastly increasing the ambiguities the spec must resolve. Depending on context, a string of three <code>***</code> in the middle of a word might be any of the following:</p>
<ol type="1">
<li>A <code>*</code> character followed by the beginning of strong emphasis.</li>
<li>The end of strong emphasis followed by a <code>*</code> character.</li>
<li>The end of normal emphasis, a <code>*</code> character, then the beginning of normal emphasis.</li>
<li>The end of strong emphasis followed by the beginning of normal emphasis.</li>
<li>The end of normal emphasis followed by the beginning of strong emphasis.</li>
<li>The end of normal emphasis followed by a literal <code>**</code>.</li>
<li>A literal <code>**</code> followed by the beginning of normal emphasis.</li>
<li>Literal <code>***</code>.</li>
</ol>
<h3 id="how-to-fix-emphasis">How to fix emphasis</h3>
<p>To dramatically reduce ambiguities, we can remove the doubled character delimiters for strong emphasis. Instead, use a single <code>_</code> for regular emphasis, and a single <code>*</code> for strong emphasis. Emphasis would now start with a left-flanking but not right-flanking delimiter and end with a right-flanking but not left-flanking delimiter of the same kind.</p>
<p>For intraword emphasis, we’d require a special syntax:</p>
<pre><code>fan~_tas_~tic</code></pre>
<p>Intraword emphasis is extremely rare, so it’s a good tradeoff to make it a little harder, in exchange for simplifying the rules (and conceptual model) for emphasis in general. The special character <code>~</code> here acts like a space for purposes of parsing emphasis (allowing the intraword <code>_</code> to start and end emphasis), but isn’t rendered as a space. (It thus behaves like an escaped space does in reStructuredText.)</p>
<p><em>Added 2022-04-22:</em> This would also give us a way to express something that is currently <em>inexpressible</em> in commonmark: <code>a&lt;em&gt;[b]&lt;/em&gt;c</code>. There is currently <em>no way to write</em> this with commonmark’s rules, since in <code>a*[b]*c</code> the first <code>*</code> is right-flanking and the second <code>*</code> is left-flanking. But with the proposed syntax, it could be written as <code>a~_[b]_~c</code>.</p>
<h2 id="reference-links">2. Reference links</h2>
<p>The usual treatment of reference links makes it impossible to classify any syntax element until the whole document has been parsed. For example, consider</p>
<pre><code>[foo][bar][baz]

[bar]: url</code></pre>
<p>This is interpreted as</p>
<pre><code>&lt;p&gt;&lt;a href="url"&gt;foo&lt;/a&gt;[baz]&lt;/p&gt;</code></pre>
<p>But suppose we define a link for <code>baz</code> instead of <code>bar</code>:</p>
<pre><code>[foo][bar][baz]

[baz]: url</code></pre>
<p>Then we get:</p>
<pre><code>&lt;p&gt;[foo]&lt;a href="url"&gt;bar&lt;/a&gt;&lt;/p&gt;</code></pre>
<p>So, we can’t tell whether <code>[foo]</code> is literal bracketed text or a link with link description <code>foo</code> until we’ve parsed the entire document.</p>
<p>This makes syntax highlighting very difficult, and it also complicates writing parsers. For example, you can’t parse links, then resolve references in the AST after the document is parsed.</p>
<h3 id="how-to-fix-reference-links">How to fix reference links</h3>
<p>Make reference links recognizable by their shape alone, independent of what references are defined in the document. Thus,</p>
<pre><code>[foo][bar][baz]</code></pre>
<p>would be parsed as a link with link text <code>foo</code> to whatever URL is defined for reference <code>bar</code> (or to nothing, if none is defined), followed by literal text <code>[baz]</code>.</p>
<p>Shortcut references like</p>
<pre><code>[foo]

[foo]: url</code></pre>
<p>would have to be disallowed (unless we were willing to force writers to escape all literal bracket characters). The compact form could be used instead:</p>
<pre><code>[foo][]

[foo]: url</code></pre>
<p>This is a bit more typing, but it makes it clear and unambiguous that there is a link.</p>
<h2 id="indented-code-blocks-and-lists">3. Indented code blocks and lists</h2>
<p>Parsing indented code blocks is straightforward, but their presence complicates the rules for list items.</p>
<p>In specifying the syntax for list items, we need to say how far content must be indented in order to be considered part of the list item. The original Markdown syntax documents hinted at a “four-space rule,” requiring four spaces indentation, but implementations rarely followed that, and most people find it counterintuitive that</p>
<pre><code>- a
  - b</code></pre>
<p>wouldn’t be considered a nested list. So, in CommonMark, we surveyed a large number of possible rules, eventually ending up with a rule requiring the contents of the list item to be indented at least to the level of the first non-space content after the list marker:</p>
<pre><code>  -  Item

     ^-- contents must be indented to here.</code></pre>
<p>This is not a bad rule, but it adds complexity: one has to keep track not just of the position of the list marker, but of the position of the first non-space content that follows it. And then one needs special rules for cases like empty list items and list items that begin with indented code. Finally, many people still find it surprising that, for example, this isn’t a nested list:</p>
<pre><code>- a
 - b</code></pre>
<p>Thus one might ask: why not just require that the contents of a list item be indented at least one space past the list marker? That’s the obvious minimal rule. What blocks this is the presence of indented code blocks. If block-level content under a list item begins at one space indent after the list marker, then indented code would have to be indented five spaces past the list marker. Not only is that incompatible with the eight spaces indicated in the original Markdown syntax description, it leads to terrible results with longer list markers:</p>
<pre><code>99.  Here's my list item.

     And this is indented code! Even though it
     lines up with the paragraph above!</code></pre>
<p>To sum up: most of the complexity in the rules for list items is motivated by the need to deal with indented code blocks.</p>
<h3 id="how-to-fix-indented-code-blocks-and-lists">How to fix indented code blocks and lists</h3>
<p>Fenced code blocks are now usually preferred to indented code blocks, because you can specify a syntax for highlighting and you needn’t indent/deindent when copying and pasting code. Since we have fenced code blocks, we don’t need indented code blocks. So, we can just get rid of them.</p>
<p>This frees up indentation to be used more flexibly to indicate list nesting, and we can embrace the simple, obvious rule that the contents of a list item must be indented at least one space relative to the list marker.</p>
<p>Another advantage of removing indented code blocks is that initial indentation can now be ignored in general, except insofar as it affects lists.</p>
<h2 id="raw-html">4. Raw HTML</h2>
<p>From the beginning, you could insert raw HTML into Markdown documents, and it would be passed through verbatim. The idea is that you could drop back to raw HTML for anything that can’t be expressed in plain text.</p>
<p>This sounds simpler than it is. From the beginning, <code>Markdown.pl</code> distinguished between inline and block level HTML. Inline HTML tags were passed through verbatim, but their contents could be interpreted as Markdown:</p>
<pre><code>&lt;em&gt;**hi**&lt;/em&gt;</code></pre>
<p>would give you</p>
<pre><code>&lt;em&gt;&lt;strong&gt;hi&lt;/strong&gt;&lt;/em&gt;</code></pre>
<p>Block-level HTML content, it was stipulated, should be separated by blank lines, and the start and end tags should not be indented. In such HTML blocks, everything would be passed through verbatim, and not interpreted as Markdown. So,</p>
<pre><code>&lt;div&gt;
*hello*
&lt;/div&gt;</code></pre>
<p>would just give you</p>
<pre><code>&lt;div&gt;
*hello*
&lt;/div&gt;</code></pre>
<p>This raised several problems. First, how do we identify block-level content? Do we need to hard-code a list of HTML elements that may change as HTML evolves? What about elements like <code>&lt;del&gt;</code> that can occur in inline or block contexts?</p>
<p>Second, what about block-level HTML that is not properly separated and indented?</p>
<pre><code>hi &lt;div&gt;
  hello&lt;/div&gt;</code></pre>
<p>Should parsers just treat it as inline HTML and generate invalid HTML?</p>
<p>Third, how do we identify the end of an HTML block? Given that tags can be nested, this requires nontrivial HTML parsing. The released version of <code>Markdown.pl</code> produced invalid HTML for a doubly-nested <code>&lt;div&gt;</code> element; a beta version designed to fix this problem had serious performance issues.</p>
<p>CommonMark’s spec for HTML blocks was designed to make it easy to parse raw HTML blocks (without indefinite lookahead or full implementation of HTML parsing), and also to make it possible for authors to include CommonMark content inside block-level HTML tags, if they wanted to. But the result is rather complex: seven distinct pairs of start and end conditions. The rules for inline HTML are also complex, with a large number of definitions.</p>
<p>In addition, as Markdown has become useful not just for creating HTML, but for creating documents in a number of different formats, the way HTML is singled out for raw pass-through has come to seem a bit arbitrary. Those who author in other formats would benefit from a way to pass through raw content, too.</p>
<h3 id="how-to-fix-raw-html">How to fix raw HTML</h3>
<p>Instead of passing through raw HTML, we should introduce a special syntax that allows passing through raw content of any format. For this we can overload our existing containers for raw strings: code spans and code blocks:</p>
<pre><code>This is raw HTML: `&lt;img src="myimage.jpg"&gt;`{=html}.

And here's an HTML block:

```{=html}
&lt;div id="main"&gt;
 &lt;div class="article"&gt;
```</code></pre>
<p>But we can do LaTeX too:</p>
<pre><code>```{=latex}
\begin{tikzpicture}
\node[inner sep=0pt] (russell) at (0,0)
    {\includegraphics[width=.25\textwidth]{bertrand_russell.jpg}};
\node[inner sep=0pt] (whitehead) at (5,-6)
    {\includegraphics[width=.25\textwidth]{alfred_north_whitehead.jpg}};
\draw[&lt;-&gt;,thick] (russell.south east) -- (whitehead.north west)
    node[midway,fill=white] {Principia Mathematica};
\end{tikzpicture}
```</code></pre>
<p>We could even pass through different raw content to different formats, for example including HTML and LaTeX versions of a complex figure.</p>
<h2 id="lists-and-blank-lines">5. Lists and blank lines</h2>
<p>Can a list interrupt a paragraph, like this?</p>
<pre><code>Paragraph test.
- Item one
- Item two</code></pre>
<p>The original Markdown syntax documentation does not settle this, but <code>Markdown.pl</code> and its test suite require a blank line between paragraph text and a following list. As the test suite indicates, this requirement was introduced in order to avoid accidental creation of lists by things like:</p>
<pre><code>I think he weighed 200 pounds, maybe even
220.  But he was no more than five feet tall.</code></pre>
<p>However, one exception was made: when the paragraph text is <em>itself</em> part of a list item, no blank line is required.</p>
<pre><code>-   Paragraph one

    paragraph two
    - sublist item one
    - sublist item two</code></pre>
<p>If this exception were not made, then we would not be able to recognize a nested list in this kind of case:</p>
<pre><code>- a
  - b
  - c
- d</code></pre>
<p>In thinking about the CommonMark spec for list items, we realized that the <code>Markdown.pl</code> behavior violates what we called the <em>principle of uniformity,</em> which says that the contents of a list item should have the same meaning they would have outside of the list item. This principle implies that if</p>
<pre><code>a
- b
- c</code></pre>
<p>does not contain a list, then</p>
<pre><code>- a
  - b
  - c
- d</code></pre>
<p>does not contain a sublist. We think that the principle of uniformity is important. Indeed, the way we specify list items and block quotes presupposes it. This means that we faced a choice: either require a blank line between paragraph text and a following list, or allow lists to interrupt paragraphs, and risk accidental interpretation of paragraph text as a list. We took the first option to be off the table, since it is very common in Markdown to have tight sublists without a preceding blank line. So we opted for the second option, mitigating the damage with an ugly heuristic (we only allow an ordered list to interrupt a paragraph when the list number is <code>1</code>).</p>
<h3 id="how-to-fix-lists-and-blank-lines">How to fix lists and blank lines</h3>
<p>We should require a blank line between paragraph text and a list. Always. That means, even in sublists. So, to create a tight list with a sublist, you’d write:</p>
<pre><code>- a

  - b
  - c

- d</code></pre>
<p>We’ll say a list is tight if it contains at least one pair of items with no blank line between, so in the above example, the inner list is tight and the outer list is not. To get both lists tight:</p>
<pre><code>- a

  - b
  - c
- d</code></pre>
<h2 id="attributes">6. Attributes</h2>
<p>Markdown offers no general way to add attributes (such as classes or identifiers) to elements. This deprives it of a native way of creating internal links to sections of a document. (Many implementations have introduced subtly different ways of automatically generating identifiers from headers.) It also deprives it of a natural extension mechanism. Markdown has containers for inlines (e.g.&nbsp;emphasis), blocks (e.g.&nbsp;block quote), and raw inline content (code spans), and raw block content (code blocks). If arbitrary attributes could be attached to these, they could be manipulated by filters to produce very flexible output. For example, one could treat a block quote with the class “warning” as a warning admonition, or one could treat a code block with the class “dot” as a graphviz dot diagram, to be rendered as an image. Currently, though, the only way to attach attributes to an element is to drop down to raw HTML.</p>
<h3 id="how-to-fix-attributes">How to fix attributes</h3>
<p>Introduce a syntax for an attribute specification. Following pandoc, use braces <code>{}</code> for this. An identifier is indicated with <code>#</code>. A bare word is treated as a class (or, an initial <code>.</code> could be required as in pandoc). Use <code>=</code> for an arbitrary key/value attribute.</p>
<p>Allow attributes to be added on the line <em>before</em> any block element and directly <em>after</em> any inline element:</p>
<pre><code>{#myheader}
# The *Blue Title*{blue position=left}</code></pre>
<p>Here the identifier <code>myheader</code> is added to the header block, and the class <code>blue</code> and key/value attribute <code>position=left</code> are added to the emphasized text <code>Blue Title</code>.</p>
<p>Attributes specifiers must fit on one line, but several may be used (and will then be combined):</p>
<pre><code>{#mywarning}
{warning}
&gt; Don't try this at home!
&gt; It might be dangerous.</code></pre>
<p>Perhaps it would be helpful to add a syntax for unadorned inline spans, and a fenced generic block container, as in pandoc. But we can use emphasis for an inline container and block quote for a block container, so this wouldn’t be absolutely necessary.</p>
<h2 id="summary-of-recommendations">Summary of recommendations</h2>
<ol type="1">
<li><p>Emphasis</p>
<ol type="a">
<li>Use distinct characters for emphasis and strong emphasis.</li>
<li>Don’t use doubled-character delimiters.</li>
<li>Simplify emphasis rules.</li>
<li>Introduce special syntax for intraword emphasis, with <code>~</code> behaving like a space as far as parsing emphasis goes, but render as nothing.</li>
</ol></li>
<li><p>Reference links</p>
<ol type="a">
<li>Don’t make parsing something as a link depend on whether a reference link definition exists elsewhere in the document.</li>
<li>Remove shortcut reference links.</li>
</ol></li>
<li><p>Code</p>
<ol type="a">
<li>Remove indented code blocks. Use only fenced blocks for code.</li>
</ol></li>
<li><p>Lists</p>
<ol type="a">
<li>Use a simple rule for determining what belongs under a list item: anything indented at all with respect to the list marker belongs in the item.</li>
<li>Require a blank line between paragraph content and a following list.</li>
<li>Revise rules for tight lists: a list is tight if any two items lack a blank line between them.</li>
</ol></li>
<li><p>HTML</p>
<ol type="a">
<li>Remove automatic pass-through of raw HTML. Things like <code>&lt;br&gt;</code> will now be treated as regular text and escaped.</li>
<li>Introduce an explicit syntax for passing through raw content in an arbitrary format. In inline contexts, a code span followed by <code>{=FORMAT}</code>; in block contexts, a fenced code block with info string <code>{=FORMAT}</code>.</li>
</ol></li>
<li><p>Attributes</p>
<ol type="a">
<li>Introduce a uniform attribute syntax, like this: <code>{class #identifier key=value}</code>.</li>
<li>Allow attributes on any block element. The identifier must appear by itself on the line before the block element. Multiple attributes can be specified on successive lines; they will be combined.</li>
<li>Allow attributes on any inline element. The identifier must appear immediately after (and adjacent to) the inline element to which it is to apply.</li>
</ol></li>
</ol>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fake reviews are illegal and subject to big fines under new FTC rules (550 pts)]]></title>
            <link>https://www.washingtonpost.com/technology/2023/06/30/fake-reviews-online-ftc/</link>
            <guid>36556228</guid>
            <pubDate>Sat, 01 Jul 2023 23:02:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.washingtonpost.com/technology/2023/06/30/fake-reviews-online-ftc/">https://www.washingtonpost.com/technology/2023/06/30/fake-reviews-online-ftc/</a>, See on <a href="https://news.ycombinator.com/item?id=36556228">Hacker News</a></p>
Couldn't get https://www.washingtonpost.com/technology/2023/06/30/fake-reviews-online-ftc/: Error [ERR_FR_TOO_MANY_REDIRECTS]: Maximum number of redirects exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[How I changed my D-Link camera to a locally managed IP camera (291 pts)]]></title>
            <link>https://github.com/bmork/defogger</link>
            <guid>36555507</guid>
            <pubDate>Sat, 01 Jul 2023 21:35:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/bmork/defogger">https://github.com/bmork/defogger</a>, See on <a href="https://news.ycombinator.com/item?id=36555507">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">D-Link DCS-8000LH</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/5244688931d03820c3c14ba9290d133b3cf658fa6c2306b730c3531018425f30/68747470733a2f2f65752e646c696e6b2e636f6d2f756b2f656e2f70726f64756374732f2d2f6d656469612f70726f647563742d70616765732f6463732f383030306c682f6463735f383030306c685f66726f6e742e706e67"><img src="https://camo.githubusercontent.com/5244688931d03820c3c14ba9290d133b3cf658fa6c2306b730c3531018425f30/68747470733a2f2f65752e646c696e6b2e636f6d2f756b2f656e2f70726f64756374732f2d2f6d656469612f70726f647563742d70616765732f6463732f383030306c682f6463735f383030306c685f66726f6e742e706e67" alt="D-Link DCS-8000LH" data-canonical-src="https://eu.dlink.com/uk/en/products/-/media/product-pages/dcs/8000lh/dcs_8000lh_front.png"></a></p>
<p dir="auto">These are random notes descibing how I changed my D-Link DCS-8000LH
from a cloud camera to a locally managed IP camera, streaming H.264
MPEG-TS over HTTP and HTTPS. Some of the tools and ideas might work
for other cameras too, given some model specific adaptation.</p>
<p dir="auto">Complete defogging requires modifying one of the file systems in the
camera.  This implies a slight risk of ending up with a brick. You
have now been warned...</p>
<p dir="auto">This is tested and developed on firmware versions v2.01.03 and
v2.02.02 only.  The final complete procedure has only been tested with
v2.02.02. It should work fine with v2.01.03 and other versions, in
theory, but could fail like anything untested.  Please let me know if
you have an original v2.01.03 firmware update from D-Link, or any
other version for that matter, or know where firmware updates can be
downloaded.</p>
<p dir="auto">The v2.02.02 update is available from
<a href="https://mydlinkmpfw.auto.mydlink.com/DCS-8000LH/DCS-8000LH_Ax_v2.02.02_3014.bin" rel="nofollow">https://mydlinkmpfw.auto.mydlink.com/DCS-8000LH/DCS-8000LH_Ax_v2.02.02_3014.bin</a>
at the time of writing. But I assume this link stops working as soon
as there is a newer version available.</p>
<h2 tabindex="-1" dir="auto">Changelog</h2>
<ul dir="auto">
<li>v0.01 (20190515) - initial published version</li>
<li>v0.02 (20190515) - added RTSP support and information</li>
</ul>
<h2 tabindex="-1" dir="auto">Problem</h2>
<p dir="auto">My D-Link DCS-8000LH came with firmware version 2.01.03 from factory.
This firmware is locked to the <a href="https://www.mydlink.com/" rel="nofollow"><strong>mydlink</strong></a>
app/cloud service.  It does not provide a local NIPCA compatible HTTP
API or similar, and it does not stream video over HTTP, HTTPS or RTSP.</p>
<p dir="auto">Additionally, there is no way to downgrade the firmware.  In fact,
there is no documented way to install any firmware image at all,
except trusting the "mydlink" cloud service to do it for you.</p>
<h2 tabindex="-1" dir="auto">Solution</h2>
<h4 tabindex="-1" dir="auto">Primary goals achieved:</h4>
<ul dir="auto">
<li>configuration of network and admin password via Bluetooth LE, without
registering with D-Link or using the <a href="https://www.mydlink.com/" rel="nofollow"><strong>mydlink</strong></a> app at all</li>
<li>streaming MPEG-TS directly from camera over HTTP and HTTPS</li>
<li>direct RTSP streaming</li>
<li>NIPCA API configuration over HTTP and HTTPS, supporting settings
like LED, nightmode, etc</li>
</ul>
<h4 tabindex="-1" dir="auto">And some extra goodies which came for free</h4>
<ul dir="auto">
<li>Firmware upgrades and downgrades via HTTP</li>
<li>telnet server with a root account (admin/PIN Code)</li>
<li>easy access to serial console, using the same root account</li>
<li>running arbitrary commands on the camera using Bluetooth</li>
</ul>
<p dir="auto">Read on for all the gory details...</p>
<h3 tabindex="-1" dir="auto">Requirements</h3>
<ul dir="auto">
<li>a Linux PC with a Bluetooth controller</li>
<li>python3 with @IanHarvey's
<a href="https://ianharvey.github.io/bluepy-doc/index.html" rel="nofollow"><strong>bluepy</strong></a>
library</li>
<li>WiFi network with WPA2-PSK and a known password</li>
<li>mksquashfs from the squashfs-tools package</li>
<li>a tftp server or web server accepting file uploads (for backups)</li>
<li>guts :-)</li>
</ul>
<p dir="auto">Most recent Linux distros will probably do. The bluepy library can be
installed using pip if it is not available as a distro package.  Other
types of WiFi networks might work, but has not been tested with the
provided tools.  The squashfs-tools are only necessary if you want to
rebuild the "mydlink" alternative file system.  I assume you can even
run the tools without installing Linux, by using a Linux "Live"
CD/DVD/USB stick.</p>
<p dir="auto">This was developed and tested on Debian Buster.</p>
<h3 tabindex="-1" dir="auto">Camera configuration using the Bluetooth LE GATT API</h3>
<p dir="auto">The "mydlink" app uses Bluetooth LE for camera setup, authenticated by
the camera pincode.  This repo includes an alternative python script
with a few extra goodies, but needing a better name:
<a href="https://github.com/bmork/defogger/blob/master/dcs8000lh-configure.py"><strong>dcs8000lh-configure.py</strong></a></p>
<p dir="auto">(Why not an Android app?  Because it would take me much more time to
write. Should be fairly easy to do though, for anyone with enough
interest.  You can find all the necessary protocol details here and in
the python code. Please let me know if you are interested)</p>
<p dir="auto">The script does not support scanning for the simple reason that this
would require root access for not real gain.  You have to provide the
<strong>PIN Code</strong> from the camera label
anyway.  Reading the <strong>MAC ID</strong> as well is simple enough
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3d60e9ce4d86b619250f09dee7ca094f922067b9702df75c6b40694343c5fbf2/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d6c6162656c2e6a7067"><img src="https://camo.githubusercontent.com/3d60e9ce4d86b619250f09dee7ca094f922067b9702df75c6b40694343c5fbf2/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d6c6162656c2e6a7067" alt="camera label" data-canonical-src="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-label.jpg"></a></p>
<p dir="auto">The <strong>PIN Code</strong> and <strong>MAC</strong> is also printed on the code card that
came with the camera:
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6e7195feb91e23ff11aee043c48383df3a93295c753d4fd0718d36f31f18ab94/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d636f64652d636172642e6a7067"><img src="https://camo.githubusercontent.com/6e7195feb91e23ff11aee043c48383df3a93295c753d4fd0718d36f31f18ab94/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d636f64652d636172642e6a7067" alt="code card" data-canonical-src="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-code-card.jpg"></a></p>
<p dir="auto">Note that the command line <strong>address</strong> paramenter must be formatted as
<strong>01:23:45:67:89:AB</strong> instead of the <strong>0123456789AB</strong> format printed
on the label.</p>
<p dir="auto">Current script help text at the time of writing shows what the script
can do:</p>
<div data-snippet-clipboard-copy-content="$ ./dcs8000lh-configure.py -h
usage: dcs8000lh-configure.py [-h] [--essid ESSID] [--wifipw WIFIPW]
                              [--survey] [--netconf] [--sysinfo]
                              [--command COMMAND] [--telnetd] [--lighttpd]
                              [--rtsp] [--unsignedfw] [--attrs] [-V]
                              address pincode

IPCam Bluetooth configuration tool.

positional arguments:
  address            IPCam Bluetooth MAC address (01:23:45:67:89:AB)
  pincode            IPCam PIN Code (6 digits)

optional arguments:
  -h, --help         show this help message and exit
  --essid ESSID      Connect to this WiFi network
  --wifipw WIFIPW    Password for ESSID
  --survey           List WiFi networks seen by the IPCam
  --netconf          Print current network configuration
  --sysinfo          Dump system configuration
  --command COMMAND  Run command on IPCam
  --telnetd          Start telnet server on IPCam
  --lighttpd         Start web server on IPCam
  --rtsp             Enable access to RTSP server on IPCam
  --unsignedfw       Allow unsigned firmware
  --attrs            Dump IPCam GATT characteristics
  -V, --version      show program's version number and exit"><pre><code>$ ./dcs8000lh-configure.py -h
usage: dcs8000lh-configure.py [-h] [--essid ESSID] [--wifipw WIFIPW]
                              [--survey] [--netconf] [--sysinfo]
                              [--command COMMAND] [--telnetd] [--lighttpd]
                              [--rtsp] [--unsignedfw] [--attrs] [-V]
                              address pincode

IPCam Bluetooth configuration tool.

positional arguments:
  address            IPCam Bluetooth MAC address (01:23:45:67:89:AB)
  pincode            IPCam PIN Code (6 digits)

optional arguments:
  -h, --help         show this help message and exit
  --essid ESSID      Connect to this WiFi network
  --wifipw WIFIPW    Password for ESSID
  --survey           List WiFi networks seen by the IPCam
  --netconf          Print current network configuration
  --sysinfo          Dump system configuration
  --command COMMAND  Run command on IPCam
  --telnetd          Start telnet server on IPCam
  --lighttpd         Start web server on IPCam
  --rtsp             Enable access to RTSP server on IPCam
  --unsignedfw       Allow unsigned firmware
  --attrs            Dump IPCam GATT characteristics
  -V, --version      show program's version number and exit
</code></pre></div>
<h4 tabindex="-1" dir="auto">Real session excample after a clean upgrade to firmware v2.02.02, followed by factory reset</h4>
<ol dir="auto">
<li>Start by making sure the camera can see our WiFi network.  This
also verifies that we can connect and authenticate against the
Bluetooth LE IPCam service, without making any changes to any
camera settings:</li>
</ol>
<div data-snippet-clipboard-copy-content="$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --survey
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
DCS-8000LH-BBCC is scanning for WiFi networks...
{'I': 'AirLink126FD4', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '47'}
{'I': 'Antiboks', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '73'}
{'I': 'ASV17', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '47'}
{'I': 'ASV17-dlink', 'M': '0', 'C': '6', 'S': '4', 'E': '2', 'P': '57'}
{'I': 'DIRECT-33-HP%20ENVY%205000%20series', 'M': '0', 'C': '1', 'S': '4', 'E': '2', 'P': '46'}
{'I': 'fjorde123', 'M': '0', 'C': '1', 'S': '4', 'E': '2', 'P': '55'}
{'I': 'JOJ', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '48'}
{'I': 'Kjellerbod', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '75'}
{'I': 'Landskap_24', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '46'}
{'I': 'mgmt', 'M': '0', 'C': '1', 'S': '4', 'E': '2', 'P': '72'}
{'I': 'Rindedal', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '68'}
{'I': 'risikovirus', 'M': '0', 'C': '1', 'S': '4', 'E': '2', 'P': '45'}
{'I': 'risikovirus%20WIFI', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '45'}
{'I': 'Stavik2014', 'M': '0', 'C': '6', 'S': '4', 'E': '2', 'P': '47'}
{'I': 'TomterNett1', 'M': '0', 'C': '6', 'S': '4', 'E': '2', 'P': '44'}
{'I': 'VIF', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '47'}
Done."><pre><code>$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --survey
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
DCS-8000LH-BBCC is scanning for WiFi networks...
{'I': 'AirLink126FD4', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '47'}
{'I': 'Antiboks', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '73'}
{'I': 'ASV17', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '47'}
{'I': 'ASV17-dlink', 'M': '0', 'C': '6', 'S': '4', 'E': '2', 'P': '57'}
{'I': 'DIRECT-33-HP%20ENVY%205000%20series', 'M': '0', 'C': '1', 'S': '4', 'E': '2', 'P': '46'}
{'I': 'fjorde123', 'M': '0', 'C': '1', 'S': '4', 'E': '2', 'P': '55'}
{'I': 'JOJ', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '48'}
{'I': 'Kjellerbod', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '75'}
{'I': 'Landskap_24', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '46'}
{'I': 'mgmt', 'M': '0', 'C': '1', 'S': '4', 'E': '2', 'P': '72'}
{'I': 'Rindedal', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '68'}
{'I': 'risikovirus', 'M': '0', 'C': '1', 'S': '4', 'E': '2', 'P': '45'}
{'I': 'risikovirus%20WIFI', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '45'}
{'I': 'Stavik2014', 'M': '0', 'C': '6', 'S': '4', 'E': '2', 'P': '47'}
{'I': 'TomterNett1', 'M': '0', 'C': '6', 'S': '4', 'E': '2', 'P': '44'}
{'I': 'VIF', 'M': '0', 'C': '11', 'S': '4', 'E': '2', 'P': '47'}
Done.
</code></pre></div>
<ol start="2" dir="auto">
<li>We're going to use the 'Kjellerbod' network, so that looks good.
Select it and give the associated WiFi password to the camera:</li>
</ol>
<div data-snippet-clipboard-copy-content="$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --essid Kjellerbod --wifipw redacted
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
DCS-8000LH-BBCC is scanning for WiFi networks...
Will configure: M=0;I=Kjellerbod;S=4;E=2;K=redacted
Done."><pre><code>$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --essid Kjellerbod --wifipw redacted
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
DCS-8000LH-BBCC is scanning for WiFi networks...
Will configure: M=0;I=Kjellerbod;S=4;E=2;K=redacted
Done.
</code></pre></div>
<ol start="3" dir="auto">
<li>Verify that the camera connected to the Wifi network and got an
address.  If not, go back and try again, making sure you are using
the correct WiFi password:</li>
</ol>
<div data-snippet-clipboard-copy-content="$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --netconf
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
wifi link is Up
wifi config: {'M': '0', 'I': 'Kjellerbod', 'S': '4', 'E': '2'}
ip config: {'I': '192.168.2.37', 'N': '255.255.255.0', 'G': '192.168.2.1', 'D': '148.122.16.253'}
Done."><pre><code>$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --netconf
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
wifi link is Up
wifi config: {'M': '0', 'I': 'Kjellerbod', 'S': '4', 'E': '2'}
ip config: {'I': '192.168.2.37', 'N': '255.255.255.0', 'G': '192.168.2.1', 'D': '148.122.16.253'}
Done.
</code></pre></div>
<p dir="auto"><strong>WARNING</strong>: You must make a backup of your device at this point if
you haven't done so already.  See the <a href="#Backup"><strong>Backup</strong></a> section
below.  I only skipped it in this example because I already had a
complete backup of my camera.</p>
<ol start="4" dir="auto">
<li>We need HTTP NIPCA API for the remaining tasks, so temporarily
start lighttpd on the camera:</li>
</ol>
<div data-snippet-clipboard-copy-content="$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --lighttpd
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
Attempting to run '[ $(tdb get HTTPServer Enable_byte) -eq 1 ] || tdb set HTTPServer Enable_byte=1' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Attempting to run '/etc/rc.d/init.d/extra_lighttpd.sh start' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Done."><pre><code>$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --lighttpd
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
Attempting to run '[ $(tdb get HTTPServer Enable_byte) -eq 1 ] || tdb set HTTPServer Enable_byte=1' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Attempting to run '/etc/rc.d/init.d/extra_lighttpd.sh start' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Done.
</code></pre></div>
<p dir="auto">Note that this implicitly changes a couple of settings which are
stored in the <a href="#Partitions">"db"</a> NVRAM partition, and therefore will persist until
the next factory reset:</p>
<ul dir="auto">
<li>extra_lighttpd.sh will exit without doing anything unless
<strong>HTTPServer Enable</strong> is set</li>
<li>the admin password is set both because we're abusing that BLE
request, and because we need it for the HTTP API access.  The
script only supports setting the password to the <strong>PIN Code</strong>.</li>
</ul>
<p dir="auto"><em>This password restriction is because I'm lazy - there is nothing in
the camera or protocol preventing the password from being set to
something else. But the script would then need the new password as
an additional input parameter for most commands</em></p>
<ol start="5" dir="auto">
<li>Disable firmware signature verification. Only firmwares signed by
D-Link are accepted by default. This feature can be disabled by
changing a variable in the <a href="#Partitions">"db"</a> NVRAM partition:</li>
</ol>
<div data-snippet-clipboard-copy-content="$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456  --unsignedfw 
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
Attempting to run 'tdb set SecureFW _TrustLevel_byte=0' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Done."><pre><code>$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456  --unsignedfw 
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
Attempting to run 'tdb set SecureFW _TrustLevel_byte=0' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Done.
</code></pre></div>
<ol start="6" dir="auto">
<li>The final step is the dangerous one.  It replaces the file system
on the <a href="#Partitions"><strong>userdata</strong></a> partition with our home cooked one.  The D-Link
firmware uses this partition exclusively for the "mydlink" cloud
tools, which we don't need.  The rest of the system is not touched
by our firmware update.  The camera will therefore run exactly the
same kernel and rootfs as before the update, whatever version they
were.  I.e., the firmware version does not change - only the
"mydlink" version.</li>
</ol>
<p dir="auto"><strong>NOTE</strong>; You need to <a href="#BuildFirmware">build</a> a <strong>fw.tar</strong> firmware
update image first.</p>
<div data-snippet-clipboard-copy-content="$ curl --http1.0 -u admin:123456 --form upload=@fw.tar http://192.168.2.37/config/firmwareupgrade.cgi
upgrade=ok"><pre><code>$ curl --http1.0 -u admin:123456 --form upload=@fw.tar http://192.168.2.37/config/firmwareupgrade.cgi
upgrade=ok
</code></pre></div>
<p dir="auto">See the section on <a href="#Errors">error handling</a> if the upgrade request
returned anything else.</p>
<p dir="auto">The camera will reboot automatically at this point, assuming the
update was successful.  From now both with telnetd and lighttpd
running, and with external access to the RTSP server. All services
will use the same <strong>admin:PIN Code</strong> account for authentication.</p>
<p dir="auto">So we now have access to direct <a href="#Streaming">streaming</a> over HTTP,
HTTPS and RTSP without ever having been in contact with the
<a href="https://www.mydlink.com/" rel="nofollow"><strong>mydlink</strong></a> service!</p>
<h3 tabindex="-1" dir="auto"><a name="user-content-Streaming"></a>Streaming video locally</h3>
<p dir="auto">Which was the whole point of all this... We can now stream directly
from the camera using for example:</p>
<h4 tabindex="-1" dir="auto">HTTP or HTTPS</h4>
<div data-snippet-clipboard-copy-content="vlc https://192.168.2.37/video/mpegts.cgi
vlc https://192.168.2.37/video/flv.cgi"><pre><code>vlc https://192.168.2.37/video/mpegts.cgi
vlc https://192.168.2.37/video/flv.cgi
</code></pre></div>
<p dir="auto">Authenticate using the <strong>admin</strong> user with <strong>PIN Code</strong> as password</p>
<p dir="auto">AFAICS, this camera does not support MJPEG encoding. But you can
always use ffmpeg to transcode the H.264 anyway.  Looking closer at a
stream sample:</p>
<div data-snippet-clipboard-copy-content="$ curl --insecure -u admin:123456 https://192.168.2.37/video/mpegts.cgi>/tmp/stream
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0 93.1G    0  438k    0     0  92872      0  12d 11h  0:00:04  12d 11h 92853^C

$ mediainfo /tmp/stream 
General
ID                                       : 1 (0x1)
Complete name                            : /tmp/stream
Format                                   : MPEG-TS
File size                                : 500 KiB
Duration                                 : 5 s 433 ms
Overall bit rate mode                    : Variable
Overall bit rate                         : 752 kb/s

Video
ID                                       : 257 (0x101)
Menu ID                                  : 1 (0x1)
Format                                   : AVC
Format/Info                              : Advanced Video Codec
Format profile                           : High@L4
Format settings, CABAC                   : Yes
Format settings, ReFrames                : 1 frame
Format settings, GOP                     : M=1, N=30
Codec ID                                 : 27
Duration                                 : 5 s 450 ms
Width                                    : 1 280 pixels
Height                                   : 720 pixels
Display aspect ratio                     : 16:9
Frame rate mode                          : Variable
Color space                              : YUV
Chroma subsampling                       : 4:2:0
Bit depth                                : 8 bits
Scan type                                : Progressive

Audio
ID                                       : 256 (0x100)
Menu ID                                  : 1 (0x1)
Format                                   : AAC
Format/Info                              : Advanced Audio Codec
Format version                           : Version 2
Format profile                           : LC
Muxing mode                              : ADTS
Codec ID                                 : 15
Duration                                 : 3 s 456 ms
Bit rate mode                            : Variable
Channel(s)                               : 1 channel
Channel positions                        : Front: C
Sampling rate                            : 16.0 kHz
Frame rate                               : 15.625 FPS (1024 spf)
Compression mode                         : Lossy"><pre><code>$ curl --insecure -u admin:123456 https://192.168.2.37/video/mpegts.cgi&gt;/tmp/stream
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0 93.1G    0  438k    0     0  92872      0  12d 11h  0:00:04  12d 11h 92853^C

$ mediainfo /tmp/stream 
General
ID                                       : 1 (0x1)
Complete name                            : /tmp/stream
Format                                   : MPEG-TS
File size                                : 500 KiB
Duration                                 : 5 s 433 ms
Overall bit rate mode                    : Variable
Overall bit rate                         : 752 kb/s

Video
ID                                       : 257 (0x101)
Menu ID                                  : 1 (0x1)
Format                                   : AVC
Format/Info                              : Advanced Video Codec
Format profile                           : High@L4
Format settings, CABAC                   : Yes
Format settings, ReFrames                : 1 frame
Format settings, GOP                     : M=1, N=30
Codec ID                                 : 27
Duration                                 : 5 s 450 ms
Width                                    : 1 280 pixels
Height                                   : 720 pixels
Display aspect ratio                     : 16:9
Frame rate mode                          : Variable
Color space                              : YUV
Chroma subsampling                       : 4:2:0
Bit depth                                : 8 bits
Scan type                                : Progressive

Audio
ID                                       : 256 (0x100)
Menu ID                                  : 1 (0x1)
Format                                   : AAC
Format/Info                              : Advanced Audio Codec
Format version                           : Version 2
Format profile                           : LC
Muxing mode                              : ADTS
Codec ID                                 : 15
Duration                                 : 3 s 456 ms
Bit rate mode                            : Variable
Channel(s)                               : 1 channel
Channel positions                        : Front: C
Sampling rate                            : 16.0 kHz
Frame rate                               : 15.625 FPS (1024 spf)
Compression mode                         : Lossy
</code></pre></div>
<h4 tabindex="-1" dir="auto">RTSP</h4>
<p dir="auto">Direct RTSP access is also supported, using the same <strong>admin</strong> user.</p>
<p dir="auto">The RTSP URLs are configurable, so the proper way to use RTSP is to
first check the URL of the wanted profile using the NIPCA API:</p>
<div data-snippet-clipboard-copy-content="$ curl -u admin:123456 --insecure 'https://192.168.2.37/config/rtspurl.cgi?profileid=1'
profileid=1
urlentry=live/profile.0
video_codec=H264
audio_codec=OPUS"><pre><code>$ curl -u admin:123456 --insecure 'https://192.168.2.37/config/rtspurl.cgi?profileid=1'
profileid=1
urlentry=live/profile.0
video_codec=H264
audio_codec=OPUS
</code></pre></div>
<p dir="auto">and then connect to this RTSP URL:</p>
<div data-snippet-clipboard-copy-content="$ vlc rtsp://192.168.2.37/live/profile.0"><pre><code>$ vlc rtsp://192.168.2.37/live/profile.0
</code></pre></div>
<p dir="auto">Note that persistent RTSP access can be enabled with original
unmodified D-Link firmware, using the Bluetooth <strong>--rtsp</strong> option.
This modifies the necessary settings.  The <strong>rtspd</strong> service is
already started by default in the original firmware.</p>
<p dir="auto">So there is no need to mess with the firmware at all if all you want
is RTSP.</p>
<h4 tabindex="-1" dir="auto"><a name="user-content-Errors"></a>Errors during firmware update via HTTP</h4>
<p dir="auto">The <strong>firmwareupgrade.cgi</strong> script running in the camera isn't much
smarter than the rest of the system, so there are a few important
things keep in mind.  These are found by trial-and-error:</p>
<ul dir="auto">
<li>HTTP/1.1 might not work - the firmwareupgrade.cgi script does not support <strong>100 Continue</strong> AFAICS</li>
<li>The firmware update image should be provided as a <strong>file</strong> input field from a form</li>
<li>The field name must be <strong>upload</strong>.</li>
</ul>
<p dir="auto">Use the exact curl command provided above, replacing only the PIN
Code, IP address and firmware filename.  This should work.  Anything
else might not.</p>
<p dir="auto">The camera must be manually rebooted by removing power or pressing
reset if the firmware upgrade fails for any reason. The
<strong>firmwareupgrade.cgi</strong> script stops most processes, inluding the
Bluetooth handler, and fails to restart them on errors.</p>
<p dir="auto">There will be no permanent harm if the upload fails.  But note that
you have to repeat the <strong>--lighttpd</strong> step after rebooting the camera,
before you can retry. It does not start automatically until we've
installed our modified "mydlink" alternative.</p>
<p dir="auto">The contents of the fw.tar file must obviously be a valid, encrypted,
firmware update intended for the specified hardware.  It must also be
signed.  But the signing key can be unknown to the camera provided the
previous <strong>--unsignedfw</strong> request above was successful.</p>
<p dir="auto">The <a href="https://github.com/bmork/defogger/blob/master/Makefile"><strong>Makefile</strong></a> provided here shows how to <a href="#BuildFirmware">build</a> a valid firmware
update, but for the DCS-8000LH only!  It does not support any other
model. It will create a new throwaway signing key if it canæt find a
real one, and include the associated public key in the archive in case
you want to verify the signature manually.</p>
<p dir="auto">Note that the encryption key might be model specific.  I do not know
this as I have no other model to look at.  Please let me know if you
have any information on this topic.</p>
<p dir="auto">The encryption key is part ot the <a href="#Partitions"><strong>pib</strong></a> partition, and can be
read from a shell using</p>

<p dir="auto">Or you can simply look at your partition backup.  The key is stored as
a plain text <em>RSA PRIVATE KEY</em> PEM blob, so it is easy to spot. This
repo includes a copy of my <a href="https://github.com/bmork/defogger/blob/master/keys/DCS-8000LH-PriKey.pem">key</a> as I see
no point in attempting to keep a well known shared key like this one
"secret"</p>
<h3 tabindex="-1" dir="auto"><a name="user-content-Backup"></a>Backup</h3>
<p dir="auto">Create a backup of everything <em>before</em> you mess up.  Restoring will be
hard anyway, so don't rely on that.  But you can forget about
restoring at all unless you have a backup, so make it anyway.</p>
<p dir="auto">Note that the <a href="#Partitions"><strong>pib</strong></a> partition contains data which are
specific to <strong>your</strong> camera, and cannot be restored from any other
source!  This includes</p>
<ul dir="auto">
<li>model number</li>
<li>hardware revision</li>
<li>mac address</li>
<li>feature bits</li>
<li>private keys, pincode and passwords</li>
</ul>
<p dir="auto">Well, OK, we can restore most of the <a href="#Partitions"><strong>pib</strong></a>  using information from
the <a href="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-label.jpg" rel="nofollow">camera label</a>, but
it's better to avoid having to do that...</p>
<p dir="auto">A backup is also useful for analyzing the file systems offline.</p>
<p dir="auto">Making a backup without networking is inconvenient, so setup
networking first. In theory, you could dump the flash to the serial
console. But this would be very time consuming and tiresome.</p>
<p dir="auto">The D-Link firmware provides a selection of network file transfer
tools. Pick anyone you like:</p>
<ul dir="auto">
<li>tftp</li>
<li>wget</li>
<li>curl</li>
<li>...and probably more</li>
</ul>
<p dir="auto">I've been using tftp for my backups because it is simple. You'll
obviously need a tftp server for this. Google for instructions on
setting that up.  You could alternatively set up a web server and use
wget or curl to post the files there, but this is more complx to set
up IMHO.</p>
<p dir="auto">Here is one example of how to enable temporary telnet access and
copying all camera flash partitions to a tftp server:</p>
<div data-snippet-clipboard-copy-content="$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --telnetd
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
Adding the 'admin' user as an alias for 'root'
Attempting to run 'grep -Eq ^admin: /etc/passwd||echo admin:x:0:0::/:/bin/sh >>/etc/passwd' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Setting the 'admin' user password to '123456'
Attempting to run 'grep -Eq ^admin:x: /etc/passwd&amp;&amp;echo admin:123456|chpasswd' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Starting telnetd
Attempting to run 'pidof telnetd||telnetd' on DCS-8000LH-BBCC by abusing the 'set admin password' request
 

Attempting to run '[ $(tdb get HTTPServer Enable_byte) -eq 1 ] || tdb set HTTPServer Enable_byte=1' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Attempting to run '/etc/rc.d/init.d/extra_lighttpd.sh start' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Done.


$ telnet 192.168.2.37
Trying 192.168.2.37...
Connected to 192.168.2.37.
Escape character is '^]'.
localhost login: admin
Password: 


BusyBox v1.22.1 (2019-02-14 17:06:35 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.


# for i in 0 1 2 3 4 5 6 7 8; do tftp -l /dev/mtd${i}ro -r mtd$i -p 192.168.2.1; done`"><pre><code>$ ./dcs8000lh-configure.py B0:C5:54:AA:BB:CC 123456 --telnetd
Connecting to B0:C5:54:AA:BB:CC...
Verifying IPCam service
Connected to 'DCS-8000LH-BBCC'
Adding the 'admin' user as an alias for 'root'
Attempting to run 'grep -Eq ^admin: /etc/passwd||echo admin:x:0:0::/:/bin/sh &gt;&gt;/etc/passwd' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Setting the 'admin' user password to '123456'
Attempting to run 'grep -Eq ^admin:x: /etc/passwd&amp;&amp;echo admin:123456|chpasswd' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Starting telnetd
Attempting to run 'pidof telnetd||telnetd' on DCS-8000LH-BBCC by abusing the 'set admin password' request
 

Attempting to run '[ $(tdb get HTTPServer Enable_byte) -eq 1 ] || tdb set HTTPServer Enable_byte=1' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Attempting to run '/etc/rc.d/init.d/extra_lighttpd.sh start' on DCS-8000LH-BBCC by abusing the 'set admin password' request
Done.


$ telnet 192.168.2.37
Trying 192.168.2.37...
Connected to 192.168.2.37.
Escape character is '^]'.
localhost login: admin
Password: 


BusyBox v1.22.1 (2019-02-14 17:06:35 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.


# for i in 0 1 2 3 4 5 6 7 8; do tftp -l /dev/mtd${i}ro -r mtd$i -p 192.168.2.1; done`
</code></pre></div>
<p dir="auto">Change 192.168.2.37 to the address of your camera and 192.168.2.1 to
the address of your tftp server. Note that most tftp servers require
existing and writable destination files. Refer to your tftp server docs
for details.</p>
<h2 tabindex="-1" dir="auto">All the gory details</h2>
<h3 tabindex="-1" dir="auto">Restoring original D-Link firmware</h3>
<p dir="auto">The D-Link firmware, including the mydlink tools in the
<a href="#Partitions"><strong>userdata</strong></a> partition, can be restored by doing a
manual firmware upgrade providing a firmware update from D-Link.  Real
example, going back to v2.02.02:</p>
<div data-snippet-clipboard-copy-content="$ curl --http1.0 -u admin:123456 --form upload=@DCS-8000LH_Ax_v2.02.02_3014.bin http://192.168.2.37/config/firmwareupgrade.cgi
curl: (52) Empty reply from server"><pre><code>$ curl --http1.0 -u admin:123456 --form upload=@DCS-8000LH_Ax_v2.02.02_3014.bin http://192.168.2.37/config/firmwareupgrade.cgi
curl: (52) Empty reply from server
</code></pre></div>
<p dir="auto">I don't know why I got that <strong>Empty reply</strong> warning instead of the
expected <strong>upgrade=ok</strong>, but update went fine so I guess it can safely
be ignored. Might be a side effect of rewriting the root file system,
which the firmwareupgrade.cgi script is running from.</p>
<h3 tabindex="-1" dir="auto">Serial console</h3>
<p dir="auto">Useful for fw greater than v2.02.02. The serial console is used to temporally
enable the webservice of the camera. Then, the fw can be downloaded using defogging procedure
and further flash the custom fw.tar firmware.</p>
<p dir="auto">There is a 4 hole female header with 2 mm spacing in the bottom of the
camera. This header is easily accessible without opening the case at
all. But you will need to remove the bottom label to find it:
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b4e18c41addca19b895a207850e8018ed1c8c33be1f2e032f8d883133560f7d1/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d6c6162656c2d72656d6f7665642e6a7067"><img src="https://camo.githubusercontent.com/b4e18c41addca19b895a207850e8018ed1c8c33be1f2e032f8d883133560f7d1/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d6c6162656c2d72656d6f7665642e6a7067" alt="label removed" data-canonical-src="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-label-removed.jpg"></a></p>
<p dir="auto">Take a picure of the lable or save the information somewhere else
first, in case you make the it unreadable in the process.</p>
<p dir="auto">Mate with a 3 (or 4) pin male 2 mm connector, or use sufficiently
solid wires.  The pins need to be 6-10 mm long.  The pins will mess up the QR code, but the rest of the label can be left intact if you're careful:
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/754a1734b411c0cc154dccb0cdc32205ad14787834c2364d25ee1afdb034798c/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d6c6162656c2d776974682d73657269616c2d70696e732e6a7067"><img src="https://camo.githubusercontent.com/754a1734b411c0cc154dccb0cdc32205ad14787834c2364d25ee1afdb034798c/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d6c6162656c2d776974682d73657269616c2d70696e732e6a7067" alt="header with pins" data-canonical-src="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-label-with-serial-pins.jpg"></a></p>
<p dir="auto">The pinout seen from egde to center of camera  is:</p>
<table>
<thead>
<tr>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
</tr>
</thead>
<tbody>
<tr>
<td>3.3V</td>
<td>TX</td>
<td>RX</td>
<td>GND</td>
</tr>
</tbody>
</table>
<p dir="auto">and the serial port parameters are 57600 8N1.</p>
<p dir="auto">You obviously need a 3.3V TTL adapter for this, Look at for example
at the generic OpenWrt console instructions if you need guidance.
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3a21813ffb894a078773408e4bc0a5e918a159d8b733b07e9037f4a14f8506d3/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d73657269616c2d636f6e6e65637465642e6a7067"><img src="https://camo.githubusercontent.com/3a21813ffb894a078773408e4bc0a5e918a159d8b733b07e9037f4a14f8506d3/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d73657269616c2d636f6e6e65637465642e6a7067" alt="USB ttl adapter connected" data-canonical-src="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-serial-connected.jpg"></a></p>
<p dir="auto">Do not connect the 3.3V pin.  All USB TTL adapters are powered by the
USB bus.</p>
<h3 tabindex="-1" dir="auto">Opening the case</h3>
<p dir="auto">Remove the top and bottom parts of the sylinder.  I assume the two
remaning halves of the sylinder are simple held together by clips, but
I did not verify this after discovering the easily accessible console
header.</p>
<p dir="auto">The top lid is clipped on:
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/cbe28bf86a3750c73fe4344e9fa1dcf4bc4b96fc74601d864f7d6631b00499b3/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d746f702d6c69642e6a7067"><img src="https://camo.githubusercontent.com/cbe28bf86a3750c73fe4344e9fa1dcf4bc4b96fc74601d864f7d6631b00499b3/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d746f702d6c69642e6a7067" alt="top lid" data-canonical-src="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-top-lid.jpg"></a></p>
<p dir="auto">The bottom cover is held in place by two screws under the label:
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b4e18c41addca19b895a207850e8018ed1c8c33be1f2e032f8d883133560f7d1/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d6c6162656c2d72656d6f7665642e6a7067"><img src="https://camo.githubusercontent.com/b4e18c41addca19b895a207850e8018ed1c8c33be1f2e032f8d883133560f7d1/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d6c6162656c2d72656d6f7665642e6a7067" alt="bottom cover" data-canonical-src="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-label-removed.jpg"></a></p>
<p dir="auto">Removing the bottom cover reveals the reset button and the console header:
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/d75ff10cb9ce671f921c6f4acaa7991c1eb3e328528e15ca5af04e3ca252f495/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d626f74746f6d2d776974686f75742d636f7665722e6a7067"><img src="https://camo.githubusercontent.com/d75ff10cb9ce671f921c6f4acaa7991c1eb3e328528e15ca5af04e3ca252f495/68747470733a2f2f7777772e6d6f726b2e6e6f2f7e626a6f726e2f646373383030306c682f646373383030306c682d626f74746f6d2d776974686f75742d636f7665722e6a7067" alt="bottom removed" data-canonical-src="https://www.mork.no/~bjorn/dcs8000lh/dcs8000lh-bottom-without-cover.jpg"></a></p>
<h3 tabindex="-1" dir="auto">U-Boot</h3>
<p dir="auto">My DCS-8000LH came with this boot loader:</p>
<p dir="auto"><code>U-Boot 2014.01-rc2-V1.1 (Jun 06 2018 - 03:44:37)</code></p>
<p dir="auto">But it is patched/configured to require a password for access to the
U-Boot prompt. Fortunately, D-Link makes the password readily
available in their GPL package :-) It is found in the file
<code>DCS-8000LH-GPL/configs/gpl_defconfig</code>:</p>
<p dir="auto"><code>ALPHA_FEATURES_UBOOT_LOGIN_PASSWORD="alpha168"</code></p>
<p dir="auto">Enter <strong>alpha168</strong> password when you see</p>
<p dir="auto"><code>Press ESC to abort autoboot in 3 seconds</code></p>
<p dir="auto">and you'll get a <code>rlxboot#</code> prompt, with access to these U-Boot commands :</p>
<div data-snippet-clipboard-copy-content="rlxboot# ?
?       - alias for 'help'
base    - print or set address offset
bootm   - boot application image from memory
bootp   - boot image via network using BOOTP/TFTP protocol
cmp     - memory compare
coninfo - print console devices and information
cp      - memory copy
crc32   - checksum calculation
echo    - echo args to console
editenv - edit environment variable
efuse   - efuse readall | read addr
env     - environment handling commands
fephy   - fephy read/write
go      - start application at address 'addr'
help    - print command description/usage
imxtract- extract a part of a multi-image
loadb   - load binary file over serial line (kermit mode)
loadx   - load binary file over serial line (xmodem mode)
loady   - load binary file over serial line (ymodem mode)
loop    - infinite loop on address range
md      - memory display
mm      - memory modify (auto-incrementing address)
mw      - memory write (fill)
nm      - memory modify (constant address)
ping    - send ICMP ECHO_REQUEST to network host
printenv- print environment variables
reset   - Perform RESET of the CPU
setenv  - set environment variables
setethaddr- set eth address
setipaddr- set ip address
sf      - SPI flash sub-system
source  - run script from memory
tftpboot- boot image via network using TFTP protocol
tftpput - TFTP put command, for uploading files to a server
tftpsrv - act as a TFTP server and boot the first received file
update  - update image
version - print monitor, compiler and linker version"><pre><code>rlxboot# ?
?       - alias for 'help'
base    - print or set address offset
bootm   - boot application image from memory
bootp   - boot image via network using BOOTP/TFTP protocol
cmp     - memory compare
coninfo - print console devices and information
cp      - memory copy
crc32   - checksum calculation
echo    - echo args to console
editenv - edit environment variable
efuse   - efuse readall | read addr
env     - environment handling commands
fephy   - fephy read/write
go      - start application at address 'addr'
help    - print command description/usage
imxtract- extract a part of a multi-image
loadb   - load binary file over serial line (kermit mode)
loadx   - load binary file over serial line (xmodem mode)
loady   - load binary file over serial line (ymodem mode)
loop    - infinite loop on address range
md      - memory display
mm      - memory modify (auto-incrementing address)
mw      - memory write (fill)
nm      - memory modify (constant address)
ping    - send ICMP ECHO_REQUEST to network host
printenv- print environment variables
reset   - Perform RESET of the CPU
setenv  - set environment variables
setethaddr- set eth address
setipaddr- set ip address
sf      - SPI flash sub-system
source  - run script from memory
tftpboot- boot image via network using TFTP protocol
tftpput - TFTP put command, for uploading files to a server
tftpsrv - act as a TFTP server and boot the first received file
update  - update image
version - print monitor, compiler and linker version
</code></pre></div>
<p dir="auto">Using the boot loader for image manipulation will be hard though,
since the camera has no ethernet, USB or removable flash and the boot
loader has no WiFi driver.  It is probably possible to load an image
over serial, but I don't have the patience for that...</p>
<p dir="auto">The environment is fixed and pretty clean:</p>
<div data-snippet-clipboard-copy-content="rlxboot# printenv
=3
addmisc=setenv bootargs ${bootargs}console=ttyS0,${baudrate}panic=1
baudrate=57600
bootaddr=(0xBC000000 + 0x1e0000)
bootargs=console=ttyS1,57600 root=/dev/mtdblock8 rts_hconf.hconf_mtd_idx=0 mtdparts=m25p80:256k(boot),128k(pib),1024k(userdata),128k(db),128k(log),128k(dbbackup),128k(logbackup),3072k(kernel),11264k(rootfs)
bootcmd=bootm 0xbc1e0000
bootfile=/vmlinux.img
ethact=r8168#0
ethaddr=00:00:00:00:00:00
load=tftp 80500000 ${u-boot}
loadaddr=0x82000000
stderr=serial
stdin=serial
stdout=serial

Environment size: 533/131068 bytes"><pre><code>rlxboot# printenv
=3
addmisc=setenv bootargs ${bootargs}console=ttyS0,${baudrate}panic=1
baudrate=57600
bootaddr=(0xBC000000 + 0x1e0000)
bootargs=console=ttyS1,57600 root=/dev/mtdblock8 rts_hconf.hconf_mtd_idx=0 mtdparts=m25p80:256k(boot),128k(pib),1024k(userdata),128k(db),128k(log),128k(dbbackup),128k(logbackup),3072k(kernel),11264k(rootfs)
bootcmd=bootm 0xbc1e0000
bootfile=/vmlinux.img
ethact=r8168#0
ethaddr=00:00:00:00:00:00
load=tftp 80500000 ${u-boot}
loadaddr=0x82000000
stderr=serial
stdin=serial
stdout=serial

Environment size: 533/131068 bytes
</code></pre></div>
<p dir="auto">So we can get ourselves a root shell:</p>
<div data-snippet-clipboard-copy-content="rlxboot# setenv bootargs ${bootargs} init=/bin/sh
rlxboot# ${bootcmd}"><pre><code>rlxboot# setenv bootargs ${bootargs} init=/bin/sh
rlxboot# ${bootcmd}
</code></pre></div>
<p dir="auto">Nothing is mounted or started since /sbin/init is skipped altogether
in this case.  Not even /sys and /proc.  We can emulate a semi-normal
system by running</p>
<p dir="auto"><code>/etc/rc.d/rcS</code></p>
<p dir="auto">as the first command.  And then run for example</p>
<p dir="auto"><code>telnetd -l /bin/sh</code></p>
<p dir="auto">to enable temporary passwordless telnet into the camera instead of/in
addition to the serial console. This is futile unless you have
networking of course.  Use the much simpler Bluetooth procedure described
above. Or the "mydlink" app if you prefer to establish a network connection
to your camera.</p>
<p dir="auto">Then run the following commands:</p>
<p dir="auto"><code>grep -Eq ^admin: /etc/passwd || echo admin:x:0:0::/:/bin/sh &gt;&gt;/etc/passwd</code></p>
<p dir="auto"><code>grep -Eq ^admin:x: /etc/passwd &amp;&amp; echo "admin:$(pibinfo Pincode)" | chpasswd</code></p>
<p dir="auto"><code>tdb set HTTPServer Enable_byte=1"</code></p>
<p dir="auto"><code>tdb set HTTPAccount AdminPasswd_ss="$(pibinfo Pincode)"</code></p>
<p dir="auto"><code>/etc/rc.d/init.d/extra_lighttpd.sh start</code></p>
<p dir="auto">on the local machine, run</p>
<p dir="auto"><code>$ curl --http1.0 -u admin:CAMPIN --form upload=@DCS-8000LH_Ax_v2.02.02_3014.bin http://CAM.IP/config/firmwareupgrade.cgi curl: (52) Empty reply from server</code></p>
<p dir="auto">this will downgrade the firmware to 2.02.02.</p>
<p dir="auto">Repeat the bluetooth hack or using serial to re-enable lighttpd server on your camera and run
the following command on your local machine.</p>
<p dir="auto"><code>$ curl --http1.0 -u admin:CAMPIN --form upload=@fw.tar http://CAM.IP/config/firmwareupgrade.cgi</code>
About 1 min later, the camera will reboot.
After the reboot process, you will have a cam with all the goodies mentioned above with fw 2.02.02.</p>
<h3 tabindex="-1" dir="auto">OEM boot log</h3>
<div data-snippet-clipboard-copy-content="U-Boot 2014.01-rc2-V1.1 (Jun 06 2018 - 03:44:37)

rx5281 prid=0xdc02
DRAM:  64 MiB @ 800 MHz
Skipping flash_init
Flash: 0 Bytes
flash status is 0, 2, 0
SF: Detected W25Q128FV with page size 256 Bytes, erase size 64 KiB, total 16 MiB
Using default environment

In:    serial
Out:   serial
Err:   serial
Net:   Realtek PCIe GBE Family Controller mcfg = 0024
no hw config header
new_ethaddr = 00:00:00:00:00:00
r8168#0
no hw config header
Press ESC to abort autoboot in 3 seconds## Booting kernel from Legacy Image at bc1e0000 ...
get header OKimage_get_kernel check hcrc
image_get_kernel print contents
   Image Name:   linux_3.10
   Created:      2018-06-05  19:44:27 UTC
   Image Type:   MIPS Linux Kernel Image (uncompressed)
   Data Size:    1662157 Bytes = 1.6 MiB
   Load Address: 804d4960
   Entry Point:  804d4960
   Verifying Checksum ... OK
   Loading Kernel Image ... OK

Starting kernel ...

Linux version 3.10.27 (jenkins@DMdssdFW1) (gcc version 4.8.5 20150209 (prerelease) (Realtek RSDK-4.8.5p1 Build 2278) ) #1 PREEMPT Wed Jun 6 03:36:32 CST 2018
prom cpufreq = 500000000
prom memsize = 67108864
hw_ver: 0x1, hw_rev: 0x2, isp_ver: 0x0
bootconsole [early0] enabled
CPU revision is: 0000dc02
Determined physical RAM map:
 memory: 04000000 @ 00000000 (usable)
Reserved contiguous memory at 0x4f3000
Zone ranges:
  Normal   [mem 0x00000000-0x03ffffff]
Movable zone start for each node
Early memory node ranges
  node   0: [mem 0x00000000-0x03ffffff]
icache: 32kB/32B, dcache: 16kB/32B, scache: 0kB/0B
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 16256
Kernel command line: console=ttyS1,57600 root=/dev/mtdblock8 rts_hconf.hconf_mtd_idx=0 mtdparts=m25p80:256k(boot),128k(pib),1024k(userdata),128k(db),128k(log),128k(dbbackup),128k(logbackup),3072k(kernel),11264k(rootfs)
PID hash table entries: 256 (order: -2, 1024 bytes)
Dentry cache hash table entries: 8192 (order: 3, 32768 bytes)
Inode-cache hash table entries: 4096 (order: 2, 16384 bytes)
Memory: 48600k/65536k available (3844k kernel code, 16936k reserved, 888k data, 192k init, 0k highmem)
SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
Preemptible hierarchical RCU implementation.
NR_IRQS:49
Calibrating delay loop... 498.89 BogoMIPS (lpj=2494464)
pid_max: default: 32768 minimum: 301
Mount-cache hash table entries: 512
pinctrl core: initialized pinctrl subsystem
regulator-dummy: no parameters
NET: Registered protocol family 16
rtsxb2 registered with IRQs
INFO: initializing USB host ...
INFO: initializing spi host ...0
spi platform id is 0
INFO: initializing I2C master ...
INFO: initializing DMA controller ...
INFO: initializing SD controller ...
INFO: initializing snd device ...
snd resvd mem size : 1048576
INFO: initializing pinctrl device ...
pinctrl_platform pinctrl_platform: rtspc registered with IRQs
INFO: initializing ethernet devices ...
INFO: initializing dwc_otg devices ...
INFO: initializing USB phy ...
INFO: initializing ISP device ...
isp resvd mem addr : 0x005f3000, size : 0xa00000
ISP camera platform devices added
INFO: initializing watchdog controller ...
INFO: initializing PWM controller ...
INFO: initializing crypto device ...
INFO: initializing pmu device ...
bio: create slab <bio-0> at 0
rts_dmac rts_dmac: DesignWare DMA Controller, 1 channels
INFO: realtek DMA engine inited
SCSI subsystem initialized
spic-platform spic-platform.0: master is unqueued, this is deprecated
INFO:allocate spi master 0, 0
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
usbphy-platform usbphy-platform: Initialized Realtek IPCam USB Phy module
Linux video capture interface: v2.00
Advanced Linux Sound Architecture Driver Initialized.
Bluetooth: Core ver 2.16
NET: Registered protocol family 31
Bluetooth: HCI device and connection manager initialized
Bluetooth: HCI socket layer initialized
Bluetooth: L2CAP socket layer initialized
Bluetooth: SCO socket layer initialized
NET: Registered protocol family 2
TCP established hash table entries: 512 (order: 0, 4096 bytes)
TCP bind hash table entries: 512 (order: -1, 2048 bytes)
TCP: Hash tables configured (established 512 bind 512)
TCP: reno registered
UDP hash table entries: 256 (order: 0, 4096 bytes)
UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)
NET: Registered protocol family 1
RPC: Registered named UNIX socket transport module.
RPC: Registered udp transport module.
RPC: Registered tcp transport module.
RPC: Registered tcp NFSv4.1 backchannel transport module.
squashfs: version 4.0 (2009/01/31) Phillip Lougher
NFS: Registering the id_resolver key type
Key type id_resolver registered
Key type id_legacy registered
jffs2: version 2.2. (NAND) © 2001-2006 Red Hat, Inc.
msgmni has been set to 94
NET: Registered protocol family 38
Block layer SCSI generic (bsg) driver version 0.4 loaded (major 253)
io scheduler noop registered
io scheduler deadline registered
io scheduler cfq registered (default)
Serial: 8250/16550 driver, 3 ports, IRQ sharing disabled
serial8250: ttyS0 at MMIO 0x18810000 (irq = 6) is a 16550A
console [ttyS1] enabled, bootconsole disabled
console [ttyS1] enabled, bootconsole disabled
serial8250: ttyS1 at MMIO 0x18810100 (irq = 6) is a 16550A
serial8250: ttyS2 at MMIO 0x18810200 (irq = 6) is a 16550A
dbg_iomem initialized!
m25p80 spi0.0: unrecognized id mx25l12845e
m25p80 spi0.0: found w25q128fv, expected m25p80
m25p80 spi0.0: w25q128fv (16384 Kbytes)
9 cmdlinepart partitions found on MTD device m25p80
Creating 9 MTD partitions on &quot;m25p80&quot;:
0x000000000000-0x000000040000 : &quot;boot&quot;
0x000000040000-0x000000060000 : &quot;pib&quot;
0x000000060000-0x000000160000 : &quot;userdata&quot;
0x000000160000-0x000000180000 : &quot;db&quot;
0x000000180000-0x0000001a0000 : &quot;log&quot;
0x0000001a0000-0x0000001c0000 : &quot;dbbackup&quot;
0x0000001c0000-0x0000001e0000 : &quot;logbackup&quot;
0x0000001e0000-0x0000004e0000 : &quot;kernel&quot;
0x0000004e0000-0x000000fe0000 : &quot;rootfs&quot;
invalid hconf_mtd_idx!
hconf init failed
rtl8168 Gigabit Ethernet driver 8.038.00-NAPI loaded
rtl8168 rtl8168 (unregistered net_device): Get invalid MAC address from flash!
eth%d: 0xb8400000, 00:00:00:00:00:00, IRQ 10
PPP generic driver version 2.4.2
PPP MPPE Compression module registered
NET: Registered protocol family 24
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
ehci-rts: ehci-rts platform driver
ehci-platform ehci-platform: EHCI Host Controller
ehci-platform ehci-platform: new USB bus registered, assigned bus number 1
ehci-platform ehci-platform: irq 11, io mem 0x18100000
ehci-platform ehci-platform: USB 2.0 started, EHCI 1.00
usb usb1: New USB device found, idVendor=1d6b, idProduct=0002
usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb1: Product: EHCI Host Controller
usb usb1: Manufacturer: Linux 3.10.27 ehci_hcd
usb usb1: SerialNumber: ehci-platform
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 1 port detected
ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
ohci-platform ohci-platform: Generic Platform OHCI Controller
ohci-platform ohci-platform: new USB bus registered, assigned bus number 2
ohci-platform ohci-platform: irq 11, io mem 0x18180000
usb usb2: New USB device found, idVendor=1d6b, idProduct=0001
usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb2: Product: Generic Platform OHCI Controller
usb usb2: Manufacturer: Linux 3.10.27 ohci_hcd
usb usb2: SerialNumber: ohci-platform
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 1 port detected
dwc_otg: version 3.10b 20-MAY-2013
Core Release: 3.10a
Setting default values for core params
WARN::dwc_otg_set_param_dev_tx_fifo_size:6354: Value is larger then power-on FIFO size

WARN::dwc_otg_set_param_dev_tx_fifo_size:6354: Value is larger then power-on FIFO size

Using Buffer DMA mode
Periodic Transfer Interrupt Enhancement - disabled
Multiprocessor Interrupt Enhancement - disabled
OTG VER PARAM: 0, OTG VER FLAG: 0
Shared Tx FIFO mode
usbcore: registered new interface driver usb-storage
g_mass_storage gadget: Mass Storage Function, version: 2009/09/11
g_mass_storage gadget: Number of LUNs=1
 lun0: LUN: removable file: (no medium)
g_mass_storage gadget: Mass Storage Gadget, version: 2009/09/11
g_mass_storage gadget: g_mass_storage ready
usb device pull 1
i2c /dev entries driver
Unable to read RTP_REG_CHIP_VERSION reg
rtp_mfd 0-0030: pre_init() failed: -140
rtp_mfd: probe of 0-0030 failed with error -140
Stopped watchdog timer
timer margin: 8 sec
nf_conntrack version 0.5.0 (759 buckets, 3036 max)
ip_tables: (C) 2000-2006 Netfilter Core Team
TCP: cubic registered
NET: Registered protocol family 17
Bluetooth: RFCOMM TTY layer initialized
Bluetooth: RFCOMM socket layer initialized
usb 1-1: new high-speed USB device number 2 using ehci-platform
Bluetooth: RFCOMM ver 1.11
Bluetooth: BNEP (Ethernet Emulation) ver 1.3
Bluetooth: BNEP filters: protocol multicast
Bluetooth: BNEP socket layer initialized
Key type dns_resolver registered
ALSA device list:
  No soundcards found.
VFS: Mounted root (squashfs filesystem) readonly on device 31:8.
Freeing unused kernel memory: 192K (804b0000 - 804e0000)
usb 1-1: New USB device found, idVendor=0bda, idProduct=b720
usb 1-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3
usb 1-1: Product: 802.11n WLAN Adapter
usb 1-1: Manufacturer: Realtek
usb 1-1: SerialNumber: 00e04c000001
init started: BusyBox v1.22.1 (2018-06-06 03:10:44 CST)
starting pid 54, tty '': '/etc/rc.d/rcS start'
mount: mounting none on /proc/bus/usb failed: No such file or directory
rm: can't remove '/dev/mtd9': No such file or directory
mknod: /dev/console: File exists
soc-audio soc-audio.0: ASoC: machine RLX_INTERN_CARD should use snd_soc_register_card()
soc-audio soc-audio.0:  rlx-codec-digital <-> pcm-platform mapping ok
soc-audio soc-audio.0:  rlx-codec-analog <-> pcm-platform mapping ok
pinctrl_platform pinctrl_platform: request() failed for pin 0
pinctrl_platform pinctrl_platform: pin-0 (pinctrl-rts:0) status -16
request GPIO failed
sd-platform: probe of rts3901-sdhc failed with error -16
rtscam:rtscam_soc_probe
rtscam:rtscam_hx280_probe
rtscam:hx280enc:HW at base <0x18060000> with ID <0x48314810>
rtscam:rtscam_jpgenc_probe
rtscam:rtstream_init
rtscam:begin to load fw from isp.fw
rtscam:Load firmware size : 131072.
rtscam:Found ISP 1.006 device
rtscam:video device <rts3901-isp> registered
rtscam:rts3901-isp initialized
Setup db... ok.
Startting dbd... Password for 'root' changed
ok.
set the date to default:
Wed Jun  6 00:00:00 UTC 2018
No SD Device Path Exists.
rc.sysinit start ok.
============ normal mode ===============
dbd(181) is already running.
Startting tz_dst... ok.
setsystz ok
Startting watchDog... ok.
Startting avcd... 
mic vol = 80
avcd ok.
starting create_certificate...get server.pem... ok.
Startting dbus-daemon... ok.
Startting bluetoothd... sendCmd : 0
Open /tmp/ap_list fail: No such file or directory
main[283] Fail to get channel of Kjellerbod network
configure : 
 			Wireless : essid: Kjellerbod, encryp_method: AES, auth_method: WPA2PSK 
 			Network  : dhcp_enable: 1, hostname: DCS-8000LH 
Open /proc/sys/net/ipv6/conf/wlan0/autoconf fail: No such file or directory
killall: rtspd: no process killed
killall: udhcpc: no process killed
killall: wifiAutoReconnect: no process killed
sendCmd : 0
sendCmd : 0
/bin/sh: dibbler-client: not found
killall: orthrus: no process killed
killall: orthrusipv6: no process killed
killall: pppd: no process killed
killall: zcip: no process killed
wlan1 MAC [b2:c5:54:4c:cc:73]
23186 wpa_supplicant -B -c /tmp/wpa_supplicant.conf -i wlan0 -P /tmp/wpa_supplicant.pid
rfkill: Cannot open RFKILL control device
ioctl[SIOCSIWAP]: Operation not permitted
udhcpc (v1.22.1) started
/sbin/udhcpc.sh: line 1: /etc/rc.d/init.d/zcip.sh: not found
Sending discover...
Sending discover...
Sending select for 192.168.2.37...
Lease of 192.168.2.37 obtained, lease time 432000
ifdown: interface wlan1 not configured
cat: can't open '/tmp/wifi-led.pid': No such file or directory
sh: you need to specify whom to kill
deleting routers
route: ioctl 0x890c failed: No such process
adding dns 148.122.16.253
adding dns 148.122.164.253
start network services, ...
Startting mDNSResponder... ok.
Starting rtspd... ok.
Startting ntpd... disabled.
Startting firewall...ok.
/etc/rc.d/rcS: /etc/rc.d/rcS.d/S24network.sh: line 5: /etc/rc.d/init.d/network_services_ipv6.sh: not found
Starting Apple Darwin Multicast DNS / DNS Service Discovery daemon: mdnsd.
Jun  6 02:00:32 mDNSResponder: mDNSResponder (Engineering Build) (Jun  6 2018 03:55:36) starting
Jun  6 02:00:32 mDNSResponder: mDNS_AddDNSServer: Lock not held! mDNS_busy (0) mDNS_reentrancy (0)
Jun  6 02:00:32 mDNSResponder: mDNS_AddDNSServer: Lock not held! mDNS_busy (0) mDNS_reentrancy (0)
Jun  6 02:00:32 mDNSResponder: WARNING: mdnsd continuing as root because user &quot;nobody&quot; does not exist
Startting ntpd... disabled.
Startting db_analysis... ok.
Startting firewall...ok.
rtspd(1011 878) is already running.
Startting myDlinkEvent... ok.
2018-06-06 02:00:37 | INFO    | tcp_listen               |  176| listening 127.0.0.1:7000
2018-06-06 02:00:37 | INFO    | http_listen              |   40| waiting new connections ...
rc.local start ok.
starting pid 1157, tty '': '/bin/busybox getty -L ttyS1 57600 vt100'

localhost login: May  6 22:34:35 mDNSResponder: mDNS_Execute: mDNSPlatformRawTime went backwards by 438780374 ticks; setting correction factor to -1542198966
May  6 22:34:37 mDNSResponderPosix: mDNSCoreReceive: mDNSPlatformRawTime went backwards by 438777274 ticks; setting correction factor to 1206127822"><pre><code>U-Boot 2014.01-rc2-V1.1 (Jun 06 2018 - 03:44:37)

rx5281 prid=0xdc02
DRAM:  64 MiB @ 800 MHz
Skipping flash_init
Flash: 0 Bytes
flash status is 0, 2, 0
SF: Detected W25Q128FV with page size 256 Bytes, erase size 64 KiB, total 16 MiB
Using default environment

In:    serial
Out:   serial
Err:   serial
Net:   Realtek PCIe GBE Family Controller mcfg = 0024
no hw config header
new_ethaddr = 00:00:00:00:00:00
r8168#0
no hw config header
Press ESC to abort autoboot in 3 seconds## Booting kernel from Legacy Image at bc1e0000 ...
get header OKimage_get_kernel check hcrc
image_get_kernel print contents
   Image Name:   linux_3.10
   Created:      2018-06-05  19:44:27 UTC
   Image Type:   MIPS Linux Kernel Image (uncompressed)
   Data Size:    1662157 Bytes = 1.6 MiB
   Load Address: 804d4960
   Entry Point:  804d4960
   Verifying Checksum ... OK
   Loading Kernel Image ... OK

Starting kernel ...

Linux version 3.10.27 (jenkins@DMdssdFW1) (gcc version 4.8.5 20150209 (prerelease) (Realtek RSDK-4.8.5p1 Build 2278) ) #1 PREEMPT Wed Jun 6 03:36:32 CST 2018
prom cpufreq = 500000000
prom memsize = 67108864
hw_ver: 0x1, hw_rev: 0x2, isp_ver: 0x0
bootconsole [early0] enabled
CPU revision is: 0000dc02
Determined physical RAM map:
 memory: 04000000 @ 00000000 (usable)
Reserved contiguous memory at 0x4f3000
Zone ranges:
  Normal   [mem 0x00000000-0x03ffffff]
Movable zone start for each node
Early memory node ranges
  node   0: [mem 0x00000000-0x03ffffff]
icache: 32kB/32B, dcache: 16kB/32B, scache: 0kB/0B
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 16256
Kernel command line: console=ttyS1,57600 root=/dev/mtdblock8 rts_hconf.hconf_mtd_idx=0 mtdparts=m25p80:256k(boot),128k(pib),1024k(userdata),128k(db),128k(log),128k(dbbackup),128k(logbackup),3072k(kernel),11264k(rootfs)
PID hash table entries: 256 (order: -2, 1024 bytes)
Dentry cache hash table entries: 8192 (order: 3, 32768 bytes)
Inode-cache hash table entries: 4096 (order: 2, 16384 bytes)
Memory: 48600k/65536k available (3844k kernel code, 16936k reserved, 888k data, 192k init, 0k highmem)
SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
Preemptible hierarchical RCU implementation.
NR_IRQS:49
Calibrating delay loop... 498.89 BogoMIPS (lpj=2494464)
pid_max: default: 32768 minimum: 301
Mount-cache hash table entries: 512
pinctrl core: initialized pinctrl subsystem
regulator-dummy: no parameters
NET: Registered protocol family 16
rtsxb2 registered with IRQs
INFO: initializing USB host ...
INFO: initializing spi host ...0
spi platform id is 0
INFO: initializing I2C master ...
INFO: initializing DMA controller ...
INFO: initializing SD controller ...
INFO: initializing snd device ...
snd resvd mem size : 1048576
INFO: initializing pinctrl device ...
pinctrl_platform pinctrl_platform: rtspc registered with IRQs
INFO: initializing ethernet devices ...
INFO: initializing dwc_otg devices ...
INFO: initializing USB phy ...
INFO: initializing ISP device ...
isp resvd mem addr : 0x005f3000, size : 0xa00000
ISP camera platform devices added
INFO: initializing watchdog controller ...
INFO: initializing PWM controller ...
INFO: initializing crypto device ...
INFO: initializing pmu device ...
bio: create slab &lt;bio-0&gt; at 0
rts_dmac rts_dmac: DesignWare DMA Controller, 1 channels
INFO: realtek DMA engine inited
SCSI subsystem initialized
spic-platform spic-platform.0: master is unqueued, this is deprecated
INFO:allocate spi master 0, 0
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
usbphy-platform usbphy-platform: Initialized Realtek IPCam USB Phy module
Linux video capture interface: v2.00
Advanced Linux Sound Architecture Driver Initialized.
Bluetooth: Core ver 2.16
NET: Registered protocol family 31
Bluetooth: HCI device and connection manager initialized
Bluetooth: HCI socket layer initialized
Bluetooth: L2CAP socket layer initialized
Bluetooth: SCO socket layer initialized
NET: Registered protocol family 2
TCP established hash table entries: 512 (order: 0, 4096 bytes)
TCP bind hash table entries: 512 (order: -1, 2048 bytes)
TCP: Hash tables configured (established 512 bind 512)
TCP: reno registered
UDP hash table entries: 256 (order: 0, 4096 bytes)
UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)
NET: Registered protocol family 1
RPC: Registered named UNIX socket transport module.
RPC: Registered udp transport module.
RPC: Registered tcp transport module.
RPC: Registered tcp NFSv4.1 backchannel transport module.
squashfs: version 4.0 (2009/01/31) Phillip Lougher
NFS: Registering the id_resolver key type
Key type id_resolver registered
Key type id_legacy registered
jffs2: version 2.2. (NAND) © 2001-2006 Red Hat, Inc.
msgmni has been set to 94
NET: Registered protocol family 38
Block layer SCSI generic (bsg) driver version 0.4 loaded (major 253)
io scheduler noop registered
io scheduler deadline registered
io scheduler cfq registered (default)
Serial: 8250/16550 driver, 3 ports, IRQ sharing disabled
serial8250: ttyS0 at MMIO 0x18810000 (irq = 6) is a 16550A
console [ttyS1] enabled, bootconsole disabled
console [ttyS1] enabled, bootconsole disabled
serial8250: ttyS1 at MMIO 0x18810100 (irq = 6) is a 16550A
serial8250: ttyS2 at MMIO 0x18810200 (irq = 6) is a 16550A
dbg_iomem initialized!
m25p80 spi0.0: unrecognized id mx25l12845e
m25p80 spi0.0: found w25q128fv, expected m25p80
m25p80 spi0.0: w25q128fv (16384 Kbytes)
9 cmdlinepart partitions found on MTD device m25p80
Creating 9 MTD partitions on "m25p80":
0x000000000000-0x000000040000 : "boot"
0x000000040000-0x000000060000 : "pib"
0x000000060000-0x000000160000 : "userdata"
0x000000160000-0x000000180000 : "db"
0x000000180000-0x0000001a0000 : "log"
0x0000001a0000-0x0000001c0000 : "dbbackup"
0x0000001c0000-0x0000001e0000 : "logbackup"
0x0000001e0000-0x0000004e0000 : "kernel"
0x0000004e0000-0x000000fe0000 : "rootfs"
invalid hconf_mtd_idx!
hconf init failed
rtl8168 Gigabit Ethernet driver 8.038.00-NAPI loaded
rtl8168 rtl8168 (unregistered net_device): Get invalid MAC address from flash!
eth%d: 0xb8400000, 00:00:00:00:00:00, IRQ 10
PPP generic driver version 2.4.2
PPP MPPE Compression module registered
NET: Registered protocol family 24
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
ehci-rts: ehci-rts platform driver
ehci-platform ehci-platform: EHCI Host Controller
ehci-platform ehci-platform: new USB bus registered, assigned bus number 1
ehci-platform ehci-platform: irq 11, io mem 0x18100000
ehci-platform ehci-platform: USB 2.0 started, EHCI 1.00
usb usb1: New USB device found, idVendor=1d6b, idProduct=0002
usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb1: Product: EHCI Host Controller
usb usb1: Manufacturer: Linux 3.10.27 ehci_hcd
usb usb1: SerialNumber: ehci-platform
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 1 port detected
ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
ohci-platform ohci-platform: Generic Platform OHCI Controller
ohci-platform ohci-platform: new USB bus registered, assigned bus number 2
ohci-platform ohci-platform: irq 11, io mem 0x18180000
usb usb2: New USB device found, idVendor=1d6b, idProduct=0001
usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb2: Product: Generic Platform OHCI Controller
usb usb2: Manufacturer: Linux 3.10.27 ohci_hcd
usb usb2: SerialNumber: ohci-platform
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 1 port detected
dwc_otg: version 3.10b 20-MAY-2013
Core Release: 3.10a
Setting default values for core params
WARN::dwc_otg_set_param_dev_tx_fifo_size:6354: Value is larger then power-on FIFO size

WARN::dwc_otg_set_param_dev_tx_fifo_size:6354: Value is larger then power-on FIFO size

Using Buffer DMA mode
Periodic Transfer Interrupt Enhancement - disabled
Multiprocessor Interrupt Enhancement - disabled
OTG VER PARAM: 0, OTG VER FLAG: 0
Shared Tx FIFO mode
usbcore: registered new interface driver usb-storage
g_mass_storage gadget: Mass Storage Function, version: 2009/09/11
g_mass_storage gadget: Number of LUNs=1
 lun0: LUN: removable file: (no medium)
g_mass_storage gadget: Mass Storage Gadget, version: 2009/09/11
g_mass_storage gadget: g_mass_storage ready
usb device pull 1
i2c /dev entries driver
Unable to read RTP_REG_CHIP_VERSION reg
rtp_mfd 0-0030: pre_init() failed: -140
rtp_mfd: probe of 0-0030 failed with error -140
Stopped watchdog timer
timer margin: 8 sec
nf_conntrack version 0.5.0 (759 buckets, 3036 max)
ip_tables: (C) 2000-2006 Netfilter Core Team
TCP: cubic registered
NET: Registered protocol family 17
Bluetooth: RFCOMM TTY layer initialized
Bluetooth: RFCOMM socket layer initialized
usb 1-1: new high-speed USB device number 2 using ehci-platform
Bluetooth: RFCOMM ver 1.11
Bluetooth: BNEP (Ethernet Emulation) ver 1.3
Bluetooth: BNEP filters: protocol multicast
Bluetooth: BNEP socket layer initialized
Key type dns_resolver registered
ALSA device list:
  No soundcards found.
VFS: Mounted root (squashfs filesystem) readonly on device 31:8.
Freeing unused kernel memory: 192K (804b0000 - 804e0000)
usb 1-1: New USB device found, idVendor=0bda, idProduct=b720
usb 1-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3
usb 1-1: Product: 802.11n WLAN Adapter
usb 1-1: Manufacturer: Realtek
usb 1-1: SerialNumber: 00e04c000001
init started: BusyBox v1.22.1 (2018-06-06 03:10:44 CST)
starting pid 54, tty '': '/etc/rc.d/rcS start'
mount: mounting none on /proc/bus/usb failed: No such file or directory
rm: can't remove '/dev/mtd9': No such file or directory
mknod: /dev/console: File exists
soc-audio soc-audio.0: ASoC: machine RLX_INTERN_CARD should use snd_soc_register_card()
soc-audio soc-audio.0:  rlx-codec-digital &lt;-&gt; pcm-platform mapping ok
soc-audio soc-audio.0:  rlx-codec-analog &lt;-&gt; pcm-platform mapping ok
pinctrl_platform pinctrl_platform: request() failed for pin 0
pinctrl_platform pinctrl_platform: pin-0 (pinctrl-rts:0) status -16
request GPIO failed
sd-platform: probe of rts3901-sdhc failed with error -16
rtscam:rtscam_soc_probe
rtscam:rtscam_hx280_probe
rtscam:hx280enc:HW at base &lt;0x18060000&gt; with ID &lt;0x48314810&gt;
rtscam:rtscam_jpgenc_probe
rtscam:rtstream_init
rtscam:begin to load fw from isp.fw
rtscam:Load firmware size : 131072.
rtscam:Found ISP 1.006 device
rtscam:video device &lt;rts3901-isp&gt; registered
rtscam:rts3901-isp initialized
Setup db... ok.
Startting dbd... Password for 'root' changed
ok.
set the date to default:
Wed Jun  6 00:00:00 UTC 2018
No SD Device Path Exists.
rc.sysinit start ok.
============ normal mode ===============
dbd(181) is already running.
Startting tz_dst... ok.
setsystz ok
Startting watchDog... ok.
Startting avcd... 
mic vol = 80
avcd ok.
starting create_certificate...get server.pem... ok.
Startting dbus-daemon... ok.
Startting bluetoothd... sendCmd : 0
Open /tmp/ap_list fail: No such file or directory
main[283] Fail to get channel of Kjellerbod network
configure : 
 			Wireless : essid: Kjellerbod, encryp_method: AES, auth_method: WPA2PSK 
 			Network  : dhcp_enable: 1, hostname: DCS-8000LH 
Open /proc/sys/net/ipv6/conf/wlan0/autoconf fail: No such file or directory
killall: rtspd: no process killed
killall: udhcpc: no process killed
killall: wifiAutoReconnect: no process killed
sendCmd : 0
sendCmd : 0
/bin/sh: dibbler-client: not found
killall: orthrus: no process killed
killall: orthrusipv6: no process killed
killall: pppd: no process killed
killall: zcip: no process killed
wlan1 MAC [b2:c5:54:4c:cc:73]
23186 wpa_supplicant -B -c /tmp/wpa_supplicant.conf -i wlan0 -P /tmp/wpa_supplicant.pid
rfkill: Cannot open RFKILL control device
ioctl[SIOCSIWAP]: Operation not permitted
udhcpc (v1.22.1) started
/sbin/udhcpc.sh: line 1: /etc/rc.d/init.d/zcip.sh: not found
Sending discover...
Sending discover...
Sending select for 192.168.2.37...
Lease of 192.168.2.37 obtained, lease time 432000
ifdown: interface wlan1 not configured
cat: can't open '/tmp/wifi-led.pid': No such file or directory
sh: you need to specify whom to kill
deleting routers
route: ioctl 0x890c failed: No such process
adding dns 148.122.16.253
adding dns 148.122.164.253
start network services, ...
Startting mDNSResponder... ok.
Starting rtspd... ok.
Startting ntpd... disabled.
Startting firewall...ok.
/etc/rc.d/rcS: /etc/rc.d/rcS.d/S24network.sh: line 5: /etc/rc.d/init.d/network_services_ipv6.sh: not found
Starting Apple Darwin Multicast DNS / DNS Service Discovery daemon: mdnsd.
Jun  6 02:00:32 mDNSResponder: mDNSResponder (Engineering Build) (Jun  6 2018 03:55:36) starting
Jun  6 02:00:32 mDNSResponder: mDNS_AddDNSServer: Lock not held! mDNS_busy (0) mDNS_reentrancy (0)
Jun  6 02:00:32 mDNSResponder: mDNS_AddDNSServer: Lock not held! mDNS_busy (0) mDNS_reentrancy (0)
Jun  6 02:00:32 mDNSResponder: WARNING: mdnsd continuing as root because user "nobody" does not exist
Startting ntpd... disabled.
Startting db_analysis... ok.
Startting firewall...ok.
rtspd(1011 878) is already running.
Startting myDlinkEvent... ok.
2018-06-06 02:00:37 | INFO    | tcp_listen               |  176| listening 127.0.0.1:7000
2018-06-06 02:00:37 | INFO    | http_listen              |   40| waiting new connections ...
rc.local start ok.
starting pid 1157, tty '': '/bin/busybox getty -L ttyS1 57600 vt100'

localhost login: May  6 22:34:35 mDNSResponder: mDNS_Execute: mDNSPlatformRawTime went backwards by 438780374 ticks; setting correction factor to -1542198966
May  6 22:34:37 mDNSResponderPosix: mDNSCoreReceive: mDNSPlatformRawTime went backwards by 438777274 ticks; setting correction factor to 1206127822
</code></pre></div>
<h3 tabindex="-1" dir="auto"><a name="user-content-Partitions"></a>Partitions</h3>
<p dir="auto">The D-Link DCS-8000LH partitions are:</p>
<div data-snippet-clipboard-copy-content="# cat /proc/mtd 
dev:    size   erasesize  name
mtd0: 00040000 00010000 &quot;boot&quot;
mtd1: 00020000 00010000 &quot;pib&quot;
mtd2: 00100000 00010000 &quot;userdata&quot;
mtd3: 00020000 00010000 &quot;db&quot;
mtd4: 00020000 00010000 &quot;log&quot;
mtd5: 00020000 00010000 &quot;dbbackup&quot;
mtd6: 00020000 00010000 &quot;logbackup&quot;
mtd7: 00300000 00010000 &quot;kernel&quot;
mtd8: 00b00000 00010000 &quot;rootfs&quot;"><pre><code># cat /proc/mtd 
dev:    size   erasesize  name
mtd0: 00040000 00010000 "boot"
mtd1: 00020000 00010000 "pib"
mtd2: 00100000 00010000 "userdata"
mtd3: 00020000 00010000 "db"
mtd4: 00020000 00010000 "log"
mtd5: 00020000 00010000 "dbbackup"
mtd6: 00020000 00010000 "logbackup"
mtd7: 00300000 00010000 "kernel"
mtd8: 00b00000 00010000 "rootfs"
</code></pre></div>
<p dir="auto">Or as seen by the driver with start and end addresses:</p>
<div data-snippet-clipboard-copy-content="9 cmdlinepart partitions found on MTD device m25p80
Creating 9 MTD partitions on &quot;m25p80&quot;:
0x000000000000-0x000000040000 : &quot;boot&quot;
0x000000040000-0x000000060000 : &quot;pib&quot;
0x000000060000-0x000000160000 : &quot;userdata&quot;
0x000000160000-0x000000180000 : &quot;db&quot;
0x000000180000-0x0000001a0000 : &quot;log&quot;
0x0000001a0000-0x0000001c0000 : &quot;dbbackup&quot;
0x0000001c0000-0x0000001e0000 : &quot;logbackup&quot;
0x0000001e0000-0x0000004e0000 : &quot;kernel&quot;
0x0000004e0000-0x000000fe0000 : &quot;rootfs&quot;"><pre><code>9 cmdlinepart partitions found on MTD device m25p80
Creating 9 MTD partitions on "m25p80":
0x000000000000-0x000000040000 : "boot"
0x000000040000-0x000000060000 : "pib"
0x000000060000-0x000000160000 : "userdata"
0x000000160000-0x000000180000 : "db"
0x000000180000-0x0000001a0000 : "log"
0x0000001a0000-0x0000001c0000 : "dbbackup"
0x0000001c0000-0x0000001e0000 : "logbackup"
0x0000001e0000-0x0000004e0000 : "kernel"
0x0000004e0000-0x000000fe0000 : "rootfs"
</code></pre></div>
<p dir="auto">Partition usage:</p>
<table>
<thead>
<tr>
<th>number</th>
<th>name</th>
<th>start</th>
<th>end</th>
<th>size</th>
<th>fstype</th>
<th>contents</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>"boot"</td>
<td>0x000000</td>
<td>0x040000</td>
<td>0x40000</td>
<td>boot</td>
<td>U-Boot</td>
</tr>
<tr>
<td>1</td>
<td>"pib"</td>
<td>0x040000</td>
<td>0x060000</td>
<td>0x20000</td>
<td>raw</td>
<td>device info</td>
</tr>
<tr>
<td>2</td>
<td>"userdata"</td>
<td>0x060000</td>
<td>0x160000</td>
<td>0x100000</td>
<td>squashfs</td>
<td>mydlink (/opt)</td>
</tr>
<tr>
<td>3</td>
<td>"db"</td>
<td>0x160000</td>
<td>0x180000</td>
<td>0x20000</td>
<td>tar.gz</td>
<td>non-volatile data</td>
</tr>
<tr>
<td>4</td>
<td>"log"</td>
<td>0x180000</td>
<td>0x1a0000</td>
<td>0x20000</td>
<td>raw?</td>
<td>empty</td>
</tr>
<tr>
<td>5</td>
<td>"dbbackup"</td>
<td>0x1a0000</td>
<td>0x1c0000</td>
<td>0x20000</td>
<td>tar.gz</td>
<td>copy of "db"</td>
</tr>
<tr>
<td>6</td>
<td>"logbackup"</td>
<td>0x1c0000</td>
<td>0x1e0000</td>
<td>0x20000</td>
<td>raw?</td>
<td>empty</td>
</tr>
<tr>
<td>7</td>
<td>"kernel"</td>
<td>0x1e0000</td>
<td>0x4e0000</td>
<td>0x300000</td>
<td>uImage</td>
<td>Linux 3.10</td>
</tr>
<tr>
<td>8</td>
<td>"rootfs"</td>
<td>0x4e0000</td>
<td>0xfe0000</td>
<td>0xb00000</td>
<td>squashfs</td>
<td>rootfs (/)</td>
</tr>
</tbody>
</table>
<p dir="auto">The D-Link firmware updates I have looked at will replace the
"userdata", "kernel" and "rootfs" partitions, but leave other
partitions unchanged. I imagine that the "boot" partition might be
upgraded too if deemed necessary by D-Link. But it was not touched
when going from 2.01.03 to 2.02.02.</p>
<p dir="auto">The "log" and "logbackup" appear to be currently unused.  But I am
reluctant trusting this, given their names.  I guess they could be
cleaned and overwritten anytime.  They are too small to be very useful
anyway.  You can't put any writable file system om them with only two
erase blocks.</p>
<h3 tabindex="-1" dir="auto">Backing up dynamic data</h3>
<p dir="auto">This is not necessary for system operation as any non-volatile data is
saved in the <a href="#Partitions"><strong>db</strong></a> partition anyway.  But it can still be useful to
have a copy of the system state for offline studying, so I also like
to save a working copy of /tmp:</p>
<div data-snippet-clipboard-copy-content="tar zcvf /tmp/tmp.tgz /tmp/
tftp -l /tmp/tmp.tgz -r tmp.tgz -p 192.168.2.1"><pre><code>tar zcvf /tmp/tmp.tgz /tmp/
tftp -l /tmp/tmp.tgz -r tmp.tgz -p 192.168.2.1
</code></pre></div>
<h3 tabindex="-1" dir="auto">Why can we run the NIPCA webserver before we modify the firmware?</h3>
<p dir="auto">D-Link left all the webserver parts in the firmware, including all the
NIPCA CGI tools. The only change they made was disabling the startup
script.</p>
<p dir="auto">The webserver can be enabled and started manually from the shell by
running:</p>
<div data-snippet-clipboard-copy-content="tdb set HTTPServer Enable_byte=1
/etc/rc.d/init.d/extra_lighttpd.sh start"><pre><code>tdb set HTTPServer Enable_byte=1
/etc/rc.d/init.d/extra_lighttpd.sh start
</code></pre></div>
<p dir="auto">This is precisely what our Bluetooth tool does when it is called with
the <strong>--lighttpd</strong> option.</p>
<p dir="auto">The <code>HTTPServer Enable_byte</code> is persistent, so setting is only
necessary once. Unless you do a factory reset.</p>
<h3 tabindex="-1" dir="auto">What's the problem with the RTSP server in the unmodified firmware?</h3>
<p dir="auto">The original D-Link firmware is already running <strong>rtspd</strong>, but it is only
listening on the loopback address 127.0.0.1.  It is probably intended
as a backend server for the <strong>mydlink</strong> services.</p>
<p dir="auto">We can make rtspd listen on all addresses by clearing the <strong>RTPServer
RejectExtIP</strong> setting.  Both rtspd and the firewall need a restart for
this to have an effect.  Enabling <strong>RTPServer Authenticate</strong> is
probably a good idea when doing this, to prevent the camera from
streaming to anyone who can connect.</p>
<div data-snippet-clipboard-copy-content="tdb set RTPServer RejectExtIP_byte=0
tdb set RTPServer Authenticate_byte=1
/etc/rc.d/init.d/firewall.sh reload
/etc/rc.d/init.d/rtspd.sh restart"><pre><code>tdb set RTPServer RejectExtIP_byte=0
tdb set RTPServer Authenticate_byte=1
/etc/rc.d/init.d/firewall.sh reload
/etc/rc.d/init.d/rtspd.sh restart
</code></pre></div>
<p dir="auto">These settings are persistent as usual, so they only need to be
modified after factory resets. Changing the settings and then
rebooting the camera will therefore enable remote RTSP access, since
both services are running by default in the D-Link firmware.</p>
<h3 tabindex="-1" dir="auto">The "userdata" file system</h3>
<p dir="auto">The <a href="#Partitions"><strong>userdata</strong></a> you backed up as <strong>mtd2</strong> contains a xz compressed
squasfs file system, with most of the mydlink cloud tools. The file
system can be unpacked on a Linux system using unsquashfs:</p>
<div data-snippet-clipboard-copy-content="$ unsquashfs mtd2
Parallel unsquashfs: Using 4 processors
15 inodes (22 blocks) to write

[=============================================================================================================================================================================================================|] 22/22 100%

created 12 files
created 1 directories
created 3 symlinks
created 0 devices
created 0 fifos
$ ls -la squashfs-root/
total 1156
drwxr-xr-x  2 bjorn bjorn    340 Feb 14 10:58 .
drwxrwxrwt 41 root  root    2280 May 13 15:13 ..
-rwxr-xr-x  1 bjorn bjorn  13184 Feb 14 10:58 ca-refresh
-rwxr-xr-x  1 bjorn bjorn 273692 Feb 14 10:58 cda
lrwxrwxrwx  1 bjorn bjorn      9 May 13 15:13 cert -> /tmp/cert
-rwxr-xr-x  1 bjorn bjorn   5991 Feb 14 10:58 client-ca.crt.pem
lrwxrwxrwx  1 bjorn bjorn      7 May 13 15:13 config -> /tmp/db
-rwxr-xr-x  1 bjorn bjorn 436428 Feb 14 10:58 da_adaptor
-rwxr-xr-x  1 bjorn bjorn      4 Feb 14 10:58 dcp_version
-rwxr-xr-x  1 bjorn bjorn    814 Feb 14 10:58 device.cfg
lrwxrwxrwx  1 bjorn bjorn     17 May 13 15:13 lib -> /var/libevent/lib
-rwxr-xr-x  1 bjorn bjorn      5 Feb 14 10:58 m2m
-rwxr-xr-x  1 bjorn bjorn   6220 Feb 14 10:58 mydlink_watchdog.sh
-rwxr-xr-x  1 bjorn bjorn   1034 Feb 14 10:58 opt.local
-rwxr-xr-x  1 bjorn bjorn 171828 Feb 14 10:58 sa
-rwxr-xr-x  1 bjorn bjorn 242028 Feb 14 10:58 strmsvr
-rwxr-xr-x  1 bjorn bjorn     10 Feb 14 10:58 version"><pre><code>$ unsquashfs mtd2
Parallel unsquashfs: Using 4 processors
15 inodes (22 blocks) to write

[=============================================================================================================================================================================================================|] 22/22 100%

created 12 files
created 1 directories
created 3 symlinks
created 0 devices
created 0 fifos
$ ls -la squashfs-root/
total 1156
drwxr-xr-x  2 bjorn bjorn    340 Feb 14 10:58 .
drwxrwxrwt 41 root  root    2280 May 13 15:13 ..
-rwxr-xr-x  1 bjorn bjorn  13184 Feb 14 10:58 ca-refresh
-rwxr-xr-x  1 bjorn bjorn 273692 Feb 14 10:58 cda
lrwxrwxrwx  1 bjorn bjorn      9 May 13 15:13 cert -&gt; /tmp/cert
-rwxr-xr-x  1 bjorn bjorn   5991 Feb 14 10:58 client-ca.crt.pem
lrwxrwxrwx  1 bjorn bjorn      7 May 13 15:13 config -&gt; /tmp/db
-rwxr-xr-x  1 bjorn bjorn 436428 Feb 14 10:58 da_adaptor
-rwxr-xr-x  1 bjorn bjorn      4 Feb 14 10:58 dcp_version
-rwxr-xr-x  1 bjorn bjorn    814 Feb 14 10:58 device.cfg
lrwxrwxrwx  1 bjorn bjorn     17 May 13 15:13 lib -&gt; /var/libevent/lib
-rwxr-xr-x  1 bjorn bjorn      5 Feb 14 10:58 m2m
-rwxr-xr-x  1 bjorn bjorn   6220 Feb 14 10:58 mydlink_watchdog.sh
-rwxr-xr-x  1 bjorn bjorn   1034 Feb 14 10:58 opt.local
-rwxr-xr-x  1 bjorn bjorn 171828 Feb 14 10:58 sa
-rwxr-xr-x  1 bjorn bjorn 242028 Feb 14 10:58 strmsvr
-rwxr-xr-x  1 bjorn bjorn     10 Feb 14 10:58 version
</code></pre></div>
<p dir="auto">The primary entry point here is the <strong>opt.local</strong> init-script.  This
is also the only required file.  The <strong>version</strong> file is read by the
Bluetooth API, and reported as the mydlink version, which makes it
useful for verifying a modified camera.  Our alternate
<a href="#Partitions"><strong>userdata</strong></a> file system contains only these two
files. But one could imagine including a number of other useful tools,
like tcpdump, a ssh server etc.</p>
<p dir="auto">It is also possible to keep all the D-Link files, if that's
wanted. The original <strong>opt.local</strong> script can be modified to leave
mydlink support running while still starting other features.  We could
even add our own non-volatile setting to choose one or the other, or
both, and making it a configuration thing. Fantasy is the only
limiting factor.</p>
<p dir="auto">Repacking the files into a camera compatible squashfs file system:</p>
<div data-snippet-clipboard-copy-content="mksquashfs squashfs-root mtd2.new -all-root -comp xz"><pre><code>mksquashfs squashfs-root mtd2.new -all-root -comp xz
</code></pre></div>
<p dir="auto">Note that <strong>xz</strong> compression is required.  No other compression is
supported AFAIK.</p>
<p dir="auto">There are simpler ways to write the new file system to the camera than
creating a firmware update package, if you just want to test it. One
example:</p>
<div data-snippet-clipboard-copy-content="tftp -r mtd2.new -l /tmp/mtd2.new -g 192.168.2.1
cat /tmp/mtd2.new >/dev/mtdblock2 "><pre><code>tftp -r mtd2.new -l /tmp/mtd2.new -g 192.168.2.1
cat /tmp/mtd2.new &gt;/dev/mtdblock2 
</code></pre></div>
<p dir="auto">But DON'T do that unless you both have a backup and know what you are
doing...</p>
<p dir="auto">You should reboot the camera after doing this, unless you make sure
you stop any process running from the previous /opt system and remount
it properly.</p>
<h3 tabindex="-1" dir="auto"><a name="user-content-NIPCA"></a>Using NIPCA to manage the camera</h3>
<p dir="auto">The local web server provides a direct camera management API, but not
a web GUI application. All API requests require authentication. We
have added a single admin user, using the pincode from the camera
label as passord.  More users can be adding if necessary, even by
using the API itself.</p>
<p dir="auto">Read the NIPCA reference spec for usage, or look at the script names
under <strong>/var/www</strong> in the <a href="#Partitions"><strong>rootfs</strong></a> and simply try
them out. Most API endpoints return a list of current settings. Some
of the settings can be set by GET requests by providing the new values
as URL parameters.</p>
<p dir="auto">A few NIPCA references of different age:</p>
<ul dir="auto">
<li><a href="http://gurau-audibert.hd.free.fr/josdblog/wp-content/uploads/2013/09/CGI_2121.pdf" rel="nofollow">http://gurau-audibert.hd.free.fr/josdblog/wp-content/uploads/2013/09/CGI_2121.pdf</a></li>
<li><a href="https://docplayer.net/33354138-Network-ip-camera-application-programming-interface-nipca.html" rel="nofollow">https://docplayer.net/33354138-Network-ip-camera-application-programming-interface-nipca.html</a></li>
<li>ftp://ftp.dlink.net.pl/dcs/dcs-2132L/documentation/DCS-2132L_NIPCA_support table_1-9-5_20131211.pdf</li>
<li><a href="https://www.airlivecam.eu/data/IP%20Camera%20Open%20API.doc" rel="nofollow">https://www.airlivecam.eu/data/IP%20Camera%20Open%20API.doc</a></li>
</ul>
<p dir="auto">Google for more. Be aware that a most of these settings depend on the
hardware.  There is obviously no point in trying to manage an SD card
slot of the DCS-8000LH...</p>
<p dir="auto">A few of examples, using curl to read and set configuration variables:</p>
<div data-snippet-clipboard-copy-content="$ curl -u admin:123456 http://192.168.2.37/common/info.cgi
model=DCS-8000LH
product=Wireless Internet Camera
brand=D-Link
version=2.02
build=02
hw_version=A
nipca=1.9.7
name=DCS-8000LH
location=
macaddr=B0:C5:54:AA:BB:CC
ipaddr=192.168.2.37
netmask=255.255.255.0
gateway=192.168.2.1
wireless=yes
inputs=0
outputs=0
speaker=no
videoout=no
pir=no
icr=yes
ir=yes
mic=yes
led=no
td=no
playing_music=no
whitelightled=no

$ curl -u admin:123456 'http://192.168.2.37/config/datetime.cgi' 
method=1
timeserver=ntp1.dlink.com
timezone=1
utcdate=2019-05-09
utctime=13:25:14
date=2019-05-09
time=15:25:14
dstenable=yes
dstauto=yes
offset=01:00
starttime=3.2.0/02:00:00
stoptime=11.1.0/02:00:00

$ curl -u admin:123456 http://192.168.2.37/config/led.cgi?led=off
led=off"><pre><code>$ curl -u admin:123456 http://192.168.2.37/common/info.cgi
model=DCS-8000LH
product=Wireless Internet Camera
brand=D-Link
version=2.02
build=02
hw_version=A
nipca=1.9.7
name=DCS-8000LH
location=
macaddr=B0:C5:54:AA:BB:CC
ipaddr=192.168.2.37
netmask=255.255.255.0
gateway=192.168.2.1
wireless=yes
inputs=0
outputs=0
speaker=no
videoout=no
pir=no
icr=yes
ir=yes
mic=yes
led=no
td=no
playing_music=no
whitelightled=no

$ curl -u admin:123456 'http://192.168.2.37/config/datetime.cgi' 
method=1
timeserver=ntp1.dlink.com
timezone=1
utcdate=2019-05-09
utctime=13:25:14
date=2019-05-09
time=15:25:14
dstenable=yes
dstauto=yes
offset=01:00
starttime=3.2.0/02:00:00
stoptime=11.1.0/02:00:00

$ curl -u admin:123456 http://192.168.2.37/config/led.cgi?led=off
led=off
</code></pre></div>
<p dir="auto">Most camera settings can be controlled using this API and e.g curl for
the command line.  There are also packages implementing API clients,
like for example this nodejs one: <a href="https://www.npmjs.com/package/nipca" rel="nofollow">https://www.npmjs.com/package/nipca</a></p>
<h3 tabindex="-1" dir="auto">Bluetooth LE GATT API</h3>
<p dir="auto">The Bluetooth service is in a "locked" mode by default. This is
controlled by the "Ble Mode" persistent setting stored in the <strong>db</strong>
partition. If true ("1"), then most of the Bluetooth commands are
rejected.  But changing the setting manually will not help much, since
the system automatically enter lock mode 180 seconds after the last
Bluetooth client disconnected.</p>
<p dir="auto">The challenge -&gt; response unlock method described below is much more
useful.</p>
<h4 tabindex="-1" dir="auto">Converting the PIN Code to a Bluetooth unlock key</h4>
<p dir="auto">Most Bluetooth commands are rejected when locked.  Access to the full
Bluetooth API can be unlocked by using the PIN Code printed on the
camera label.  This code is not sent directly over the air
though. Instead it is combined with a random challenge.</p>
<p dir="auto">Both the random challenge and the matching key are generated by the
application <code>sbin/gen_bt_config</code> on the camera side.  The key is
calculated by taking the first 16 bytes of the base64 encoded md5
digest of</p>
<ul dir="auto">
<li>model string + '-'  four last mac digits (or Bluetooth device name?)</li>
<li>PIN Code</li>
<li>challenge.</li>
</ul>
<p dir="auto">Note that this application depends on bluetooth libraries, which are
not in /lib. So we have to set LD_LIBRARY_PATH to run it manually:</p>
<div data-snippet-clipboard-copy-content="# LD_LIBRARY_PATH=/var/bluetooth/lib sbin/gen_bt_config update_key_only
In main:182: modelStr = 'DCS-8000LH'
In main:183: mac = 'b0:c5:54:ab:cd:ef'
In update_ble_key:87: key data = 'DCS-8000LH-CDEF012345b2gaescrbldchnik'"><pre><code># LD_LIBRARY_PATH=/var/bluetooth/lib sbin/gen_bt_config update_key_only
In main:182: modelStr = 'DCS-8000LH'
In main:183: mac = 'b0:c5:54:ab:cd:ef'
In update_ble_key:87: key data = 'DCS-8000LH-CDEF012345b2gaescrbldchnik'
</code></pre></div>
<p dir="auto">I've slightly obfuscated my data here - the pincode in the above case
is <code>012345</code>, and the dynamically generated challenge is
<code>b2gaescrbldchnik</code>. The generated challenge and key are stored in
<code>/tmp/db/db.xml</code> and can be read directly from there:</p>
<div data-snippet-clipboard-copy-content="# grep Key /tmp/db/db.xml |tail -2
<ChallengeKey type=&quot;3&quot; content=&quot;b2gaescrbldchnik&quot; />
<Key type=&quot;5&quot; content=&quot;jrtY6nONQ5rV+2Ph&quot; />"><pre><code># grep Key /tmp/db/db.xml |tail -2
&lt;ChallengeKey type="3" content="b2gaescrbldchnik" /&gt;
&lt;Key type="5" content="jrtY6nONQ5rV+2Ph" /&gt;
</code></pre></div>
<p dir="auto">Or you can read them using the same tools the Bluetooth system uses:</p>
<div data-snippet-clipboard-copy-content="# tdb get Ble ChallengeKey_ss
b2gaescrbldchnik
# mdb get ble_key
jrtY6nONQ5rV+2Ph"><pre><code># tdb get Ble ChallengeKey_ss
b2gaescrbldchnik
# mdb get ble_key
jrtY6nONQ5rV+2Ph
</code></pre></div>
<p dir="auto">Yes, the D-Link code does actually use tdb for the first one and mdb
for the second.  I have absolutely no idea why,... It is possible to
read the key using tdb too:</p>
<div data-snippet-clipboard-copy-content="# tdb get Ble Key_ss
jrtY6nONQ5rV+2Ph"><pre><code># tdb get Ble Key_ss
jrtY6nONQ5rV+2Ph
</code></pre></div>
<p dir="auto">Generating the same key by hand on a Linux system is simple:</p>
<div data-snippet-clipboard-copy-content="$ echo -n 'DCS-8000LH-CDEF012345b2gaescrbldchnik' | md5sum | xxd -r -p | base64 | cut -c-16
jrtY6nONQ5rV+2Ph"><pre><code>$ echo -n 'DCS-8000LH-CDEF012345b2gaescrbldchnik' | md5sum | xxd -r -p | base64 | cut -c-16
jrtY6nONQ5rV+2Ph
</code></pre></div>
<h4 tabindex="-1" dir="auto">Characteristic UUIDs</h4>
<p dir="auto">D-Link is using the GATT BlueZ example plugin, patching it to add
their camera specific endpoints.  This means that we can find all the
API "documentation" in the
<code>DCS-8000LH-GPL/package/bluez_utils/feature-patch/5.28/customized-mydlink.patch</code>
file in the GPL archive.</p>
<p dir="auto">This defines a number of 16bit UUIDs with mostly nonsense names:</p>
<div data-snippet-clipboard-copy-content="+#define IPCAM_UUID		0xD001
+#define A000_UUID		0xA000
+#define A001_UUID		0xA001
+#define A100_UUID		0xA100
+#define A101_UUID		0xA101
+#define A102_UUID		0xA102
+#define A103_UUID		0xA103
+#define A104_UUID		0xA104
+#define A200_UUID		0xA200
+#define A201_UUID		0xA201
+#define A300_UUID		0xA300
+#define A301_UUID		0xA301
+#define A302_UUID		0xA302
+#define A303_UUID		0xA303
+#define A304_UUID		0xA304"><pre><code>+#define IPCAM_UUID		0xD001
+#define A000_UUID		0xA000
+#define A001_UUID		0xA001
+#define A100_UUID		0xA100
+#define A101_UUID		0xA101
+#define A102_UUID		0xA102
+#define A103_UUID		0xA103
+#define A104_UUID		0xA104
+#define A200_UUID		0xA200
+#define A201_UUID		0xA201
+#define A300_UUID		0xA300
+#define A301_UUID		0xA301
+#define A302_UUID		0xA302
+#define A303_UUID		0xA303
+#define A304_UUID		0xA304
</code></pre></div>
<p dir="auto"><code>IPCAM_UUID</code> is registered as the <code>GATT_PRIM_SVC_UUID</code>, which means
that it shows up as a primary GATT service we can look for when
looking for a supported camera.</p>
<p dir="auto">The rest of the UUIDs are characteristics of this primary service. The
API is based on reading or writing these characteristics.</p>
<h4 tabindex="-1" dir="auto">Data formatting</h4>
<p dir="auto">Both input and output parameters are sent as ascii strings using
key=value pairs joined by <code>;</code>, with an exception for the nested KV
pairs in the WiFi survey results.  All keys are single upper case
characters. Key names are somewhat reused, so the exact meaning depend
on the characteristic.</p>
<p dir="auto">Values are either integers, including boolean 0/1, or some set of
ascii text.</p>
<p dir="auto">Three real examples, read from 0xA001, 0xA200 and 0xA104:</p>
<div data-snippet-clipboard-copy-content="M=1;C=b2gaescrbldchnik
N=DCS-8000LH;P=1;T=1557349762;Z=CET-1CEST,M3.5.0,M10.5.0/3;F=2.01.03;H=A1;M=B0C554ABCDEF;V=3.0.0-b71
I=192.168.2.37;N=255.255.255.0;G=192.168.2.1;D=148.122.16.253"><pre><code>M=1;C=b2gaescrbldchnik
N=DCS-8000LH;P=1;T=1557349762;Z=CET-1CEST,M3.5.0,M10.5.0/3;F=2.01.03;H=A1;M=B0C554ABCDEF;V=3.0.0-b71
I=192.168.2.37;N=255.255.255.0;G=192.168.2.1;D=148.122.16.253
</code></pre></div>
<h4 tabindex="-1" dir="auto">Listing characteristics</h4>
<p dir="auto">The <strong>gattool</strong> Linux command line tool is useful for exploring
Bluetooth LE devices.  You can look for primary services and list
associated characteristics of a service:</p>
<div data-snippet-clipboard-copy-content="[B0:C5:54:AA:BB:CC][LE]> primary 
attr handle: 0x0001, end grp handle: 0x0008 uuid: 00001800-0000-1000-8000-00805f9b34fb
attr handle: 0x0010, end grp handle: 0x0010 uuid: 00001801-0000-1000-8000-00805f9b34fb
attr handle: 0x0011, end grp handle: 0x002e uuid: 0000d001-0000-1000-8000-00805f9b34fb
[B0:C5:54:AA:BB:CC][LE]> characteristics 0x0011
handle: 0x0012, char properties: 0x12, char value handle: 0x0013, uuid: 0000a000-0000-1000-8000-00805f9b34fb
handle: 0x0015, char properties: 0x0a, char value handle: 0x0016, uuid: 0000a001-0000-1000-8000-00805f9b34fb
handle: 0x0017, char properties: 0x02, char value handle: 0x0018, uuid: 0000a100-0000-1000-8000-00805f9b34fb
handle: 0x0019, char properties: 0x0a, char value handle: 0x001a, uuid: 0000a101-0000-1000-8000-00805f9b34fb
handle: 0x001b, char properties: 0x08, char value handle: 0x001c, uuid: 0000a102-0000-1000-8000-00805f9b34fb
handle: 0x001d, char properties: 0x02, char value handle: 0x001e, uuid: 0000a103-0000-1000-8000-00805f9b34fb
handle: 0x001f, char properties: 0x02, char value handle: 0x0020, uuid: 0000a104-0000-1000-8000-00805f9b34fb
handle: 0x0021, char properties: 0x0a, char value handle: 0x0022, uuid: 0000a200-0000-1000-8000-00805f9b34fb
handle: 0x0023, char properties: 0x08, char value handle: 0x0024, uuid: 0000a201-0000-1000-8000-00805f9b34fb
handle: 0x0025, char properties: 0x0a, char value handle: 0x0026, uuid: 0000a300-0000-1000-8000-00805f9b34fb
handle: 0x0027, char properties: 0x02, char value handle: 0x0028, uuid: 0000a301-0000-1000-8000-00805f9b34fb
handle: 0x0029, char properties: 0x08, char value handle: 0x002a, uuid: 0000a302-0000-1000-8000-00805f9b34fb
handle: 0x002b, char properties: 0x08, char value handle: 0x002c, uuid: 0000a303-0000-1000-8000-00805f9b34fb
handle: 0x002d, char properties: 0x02, char value handle: 0x002e, uuid: 0000a304-0000-1000-8000-00805f9b34fb"><pre><code>[B0:C5:54:AA:BB:CC][LE]&gt; primary 
attr handle: 0x0001, end grp handle: 0x0008 uuid: 00001800-0000-1000-8000-00805f9b34fb
attr handle: 0x0010, end grp handle: 0x0010 uuid: 00001801-0000-1000-8000-00805f9b34fb
attr handle: 0x0011, end grp handle: 0x002e uuid: 0000d001-0000-1000-8000-00805f9b34fb
[B0:C5:54:AA:BB:CC][LE]&gt; characteristics 0x0011
handle: 0x0012, char properties: 0x12, char value handle: 0x0013, uuid: 0000a000-0000-1000-8000-00805f9b34fb
handle: 0x0015, char properties: 0x0a, char value handle: 0x0016, uuid: 0000a001-0000-1000-8000-00805f9b34fb
handle: 0x0017, char properties: 0x02, char value handle: 0x0018, uuid: 0000a100-0000-1000-8000-00805f9b34fb
handle: 0x0019, char properties: 0x0a, char value handle: 0x001a, uuid: 0000a101-0000-1000-8000-00805f9b34fb
handle: 0x001b, char properties: 0x08, char value handle: 0x001c, uuid: 0000a102-0000-1000-8000-00805f9b34fb
handle: 0x001d, char properties: 0x02, char value handle: 0x001e, uuid: 0000a103-0000-1000-8000-00805f9b34fb
handle: 0x001f, char properties: 0x02, char value handle: 0x0020, uuid: 0000a104-0000-1000-8000-00805f9b34fb
handle: 0x0021, char properties: 0x0a, char value handle: 0x0022, uuid: 0000a200-0000-1000-8000-00805f9b34fb
handle: 0x0023, char properties: 0x08, char value handle: 0x0024, uuid: 0000a201-0000-1000-8000-00805f9b34fb
handle: 0x0025, char properties: 0x0a, char value handle: 0x0026, uuid: 0000a300-0000-1000-8000-00805f9b34fb
handle: 0x0027, char properties: 0x02, char value handle: 0x0028, uuid: 0000a301-0000-1000-8000-00805f9b34fb
handle: 0x0029, char properties: 0x08, char value handle: 0x002a, uuid: 0000a302-0000-1000-8000-00805f9b34fb
handle: 0x002b, char properties: 0x08, char value handle: 0x002c, uuid: 0000a303-0000-1000-8000-00805f9b34fb
handle: 0x002d, char properties: 0x02, char value handle: 0x002e, uuid: 0000a304-0000-1000-8000-00805f9b34fb
</code></pre></div>
<p dir="auto">It is also possible to read and write characteristics using this tool,
but this can be a bit cumbersome unless you are fluent in ASCII coding
;-)</p>
<h4 tabindex="-1" dir="auto">The IPCam characteristics</h4>
<p dir="auto">Guessed meanings of each characteristic, based on the source code and
some trial and error. Not necessarily how D-Link would describe them:</p>
<table>
<thead>
<tr>
<th>UUID</th>
<th>op</th>
<th>description</th>
<th>format</th>
<th>keys</th>
</tr>
</thead>
<tbody>
<tr>
<td>A000</td>
<td>read</td>
<td>last status</td>
<td>C=%d;A=%d;R=%d</td>
<td>C: uuid, A: mode, R: state</td>
</tr>
<tr>
<td>A000</td>
<td>notify</td>
<td>last status</td>
<td>C=%d;A=%d;R=%d</td>
<td>C: uuid, A: mode, R: state</td>
</tr>
<tr>
<td>A001</td>
<td>read</td>
<td>challenge</td>
<td>M=%d;C=%s</td>
<td>M: opmode, C: challenge</td>
</tr>
<tr>
<td>A001</td>
<td>write</td>
<td>auth</td>
<td>M=%d;K=%s</td>
<td>M: opmode, K: key</td>
</tr>
<tr>
<td>A100</td>
<td>read</td>
<td>wifi survey</td>
<td>N=%d;P=%d;...</td>
<td></td>
</tr>
<tr>
<td>A101</td>
<td>read</td>
<td>wifi config</td>
<td>M=%s;I=%s;S=%s;E=%s</td>
<td>M: opmode, I: essid, S: 4 , E: 2</td>
</tr>
<tr>
<td>A101</td>
<td>write</td>
<td>wifi config</td>
<td>M=%s;I=%s;S=%s;E=%s;K=%s</td>
<td>M: opmode, I: essid, S: 4 , E: 2, K: password</td>
</tr>
<tr>
<td>A102</td>
<td>write</td>
<td>wifi connect</td>
<td>C=%d</td>
<td>C: connect (0/1)</td>
</tr>
<tr>
<td>A103</td>
<td>read</td>
<td>wifi status</td>
<td>S=%d</td>
<td>S: wifi link status (0,1,?)</td>
</tr>
<tr>
<td>A104</td>
<td>read</td>
<td>ip config</td>
<td>I=%s;N=%s;G=%s;D=%s</td>
<td>I: address, N: netmask, G: gateway, D: DNS-server</td>
</tr>
<tr>
<td>A200</td>
<td>read</td>
<td>system info</td>
<td>N=%s;P=%d;T=%d;Z=%s;F=%s;H=%s;M=%s;V=%s</td>
<td>N: devicename, P: haspin (0/1), T: time (unix epoch), Z: timezone, F: fwver, H: hwver, M: macaddr, V:mydlinkver</td>
</tr>
<tr>
<td>A200</td>
<td>write</td>
<td>name and time</td>
<td>N=%s;T=%d;Z=%s</td>
<td>N: devicename, T: time (unix epoch), Z: timezone</td>
</tr>
<tr>
<td>A201</td>
<td>write</td>
<td>admin password</td>
<td>P=%s;N=%s</td>
<td>P: current password, N: new password</td>
</tr>
<tr>
<td>A300</td>
<td>read</td>
<td>reg state</td>
<td>G=%d</td>
<td>G: registration state (0/1)</td>
</tr>
<tr>
<td>A300</td>
<td>write</td>
<td>reg state</td>
<td>G=%d</td>
<td>G: registration state (0/1)</td>
</tr>
<tr>
<td>A301</td>
<td>read</td>
<td>provisioning</td>
<td>N=%s;T=%s;U=%s</td>
<td>N: username, T: footprint, U: portal</td>
</tr>
<tr>
<td>A302</td>
<td>write</td>
<td>restart mydlink</td>
<td>C=%d</td>
<td>C: restart (0/1)</td>
</tr>
<tr>
<td>A303</td>
<td>write</td>
<td>register</td>
<td>S=%s;M=%s</td>
<td>S: , M:  (written to /tmp/mydlink/reg_info, and then kill -USR1 <code>pidof da_adaptor</code>)</td>
</tr>
<tr>
<td>A304</td>
<td>read</td>
<td>register</td>
<td>S=%d;E=%d</td>
<td>S: , E:  (cat /tmp/mydlink/reg_st)</td>
</tr>
</tbody>
</table>
<p dir="auto">The UUIDs from 0xA300 to 0xA304 are all related to the mydlink cloud
service, and therefore not of much use to us.  I haven't bothered
trying to figure out exactly how they are used.</p>
<p dir="auto">We could in theory use the 0xA303 request which simply calls
<strong>/opt/opt.local restart</strong>.  But with the gaping 0xA201 hole,
allowing <strong>any</strong> command, there isn't much need for this one...</p>
<p dir="auto">A few more details on the more complex characteristics:</p>
<h5 tabindex="-1" dir="auto">A000</h5>
<p dir="auto">The only characteristic sent as notifications.  But it can also be
read directly for syncronous operations.</p>
<p dir="auto">The value is the state to the last Bluetooth action:</p>
<div data-snippet-clipboard-copy-content="&quot;C=%d;A=%d;R=%d&quot;, last_action_status.uuid, last_action_status.mode, last_action_status.state"><pre><code>"C=%d;A=%d;R=%d", last_action_status.uuid, last_action_status.mode, last_action_status.state
</code></pre></div>
<h5 tabindex="-1" dir="auto">A100</h5>
<p dir="auto">The wifi survey scan results are split in 128 byte "pages", where each
page starts with the total number of pages and the current page
number.  The characteristic value must be read as many times as the
given total.</p>
<p dir="auto">For example, reading 3 pages:</p>
<div data-snippet-clipboard-copy-content="[B0:C5:54:AA:BB:CC][LE]> char-read-hnd 0x0018
Characteristic value/descriptor: 4e 3d 33 3b 50 3d 31 3b 4c 3d 49 3d 41 6e 74 69 62 6f 6b 73 2c 4d 3d 30 2c 43 3d 36 2c 53 3d 34 2c 45 3d 32 2c 50 3d 36 32 26 4c 3d 49 3d 41 53 56 31 37 2c 4d 3d 30 2c 43 3d 31 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 34 36 26 4c 3d 49 3d 41 53 56 31 37 2d 64 6c 69 6e 6b 2c 4d 3d 30 2c 43 3d 36 2c 53 3d 34 2c 45 3d 32 2c 50 3d 36 38 26 4c 3d 49 3d 66 6a 6f 72 64 65 31 32 33 2c 4d 3d 30 
[B0:C5:54:AA:BB:CC][LE]> char-read-hnd 0x0018
Characteristic value/descriptor: 4e 3d 33 3b 50 3d 32 3b 2c 43 3d 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 35 38 26 4c 3d 49 3d 4a 4f 4a 2c 4d 3d 30 2c 43 3d 31 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 34 37 26 4c 3d 49 3d 4b 6a 65 6c 6c 65 72 62 6f 64 2c 4d 3d 30 2c 43 3d 36 2c 53 3d 34 2c 45 3d 32 2c 50 3d 36 32 26 4c 3d 49 3d 6d 67 6d 74 2c 4d 3d 30 2c 43 3d 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 37 34 26 4c 3d 49 3d 52 69 
[B0:C5:54:AA:BB:CC][LE]> char-read-hnd 0x0018
Characteristic value/descriptor: 4e 3d 33 3b 50 3d 33 3b 6e 64 65 64 61 6c 2c 4d 3d 30 2c 43 3d 31 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 36 32 "><pre><code>[B0:C5:54:AA:BB:CC][LE]&gt; char-read-hnd 0x0018
Characteristic value/descriptor: 4e 3d 33 3b 50 3d 31 3b 4c 3d 49 3d 41 6e 74 69 62 6f 6b 73 2c 4d 3d 30 2c 43 3d 36 2c 53 3d 34 2c 45 3d 32 2c 50 3d 36 32 26 4c 3d 49 3d 41 53 56 31 37 2c 4d 3d 30 2c 43 3d 31 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 34 36 26 4c 3d 49 3d 41 53 56 31 37 2d 64 6c 69 6e 6b 2c 4d 3d 30 2c 43 3d 36 2c 53 3d 34 2c 45 3d 32 2c 50 3d 36 38 26 4c 3d 49 3d 66 6a 6f 72 64 65 31 32 33 2c 4d 3d 30 
[B0:C5:54:AA:BB:CC][LE]&gt; char-read-hnd 0x0018
Characteristic value/descriptor: 4e 3d 33 3b 50 3d 32 3b 2c 43 3d 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 35 38 26 4c 3d 49 3d 4a 4f 4a 2c 4d 3d 30 2c 43 3d 31 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 34 37 26 4c 3d 49 3d 4b 6a 65 6c 6c 65 72 62 6f 64 2c 4d 3d 30 2c 43 3d 36 2c 53 3d 34 2c 45 3d 32 2c 50 3d 36 32 26 4c 3d 49 3d 6d 67 6d 74 2c 4d 3d 30 2c 43 3d 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 37 34 26 4c 3d 49 3d 52 69 
[B0:C5:54:AA:BB:CC][LE]&gt; char-read-hnd 0x0018
Characteristic value/descriptor: 4e 3d 33 3b 50 3d 33 3b 6e 64 65 64 61 6c 2c 4d 3d 30 2c 43 3d 31 31 2c 53 3d 34 2c 45 3d 32 2c 50 3d 36 32 
</code></pre></div>
<p dir="auto">These strings are decoded as:</p>
<div data-snippet-clipboard-copy-content="N=3;P=1;L=I=Antiboks,M=0,C=6,S=4,E=2,P=62&amp;L=I=ASV17,M=0,C=11,S=4,E=2,P=46&amp;L=I=ASV17-dlink,M=0,C=6,S=4,E=2,P=68&amp;L=I=fjorde123,M=0
N=3;P=2;,C=1,S=4,E=2,P=58&amp;L=I=JOJ,M=0,C=11,S=4,E=2,P=47&amp;L=I=Kjellerbod,M=0,C=6,S=4,E=2,P=62&amp;L=I=mgmt,M=0,C=1,S=4,E=2,P=74&amp;L=I=Ri
N=3;P=3;ndedal,M=0,C=11,S=4,E=2,P=62"><pre><code>N=3;P=1;L=I=Antiboks,M=0,C=6,S=4,E=2,P=62&amp;L=I=ASV17,M=0,C=11,S=4,E=2,P=46&amp;L=I=ASV17-dlink,M=0,C=6,S=4,E=2,P=68&amp;L=I=fjorde123,M=0
N=3;P=2;,C=1,S=4,E=2,P=58&amp;L=I=JOJ,M=0,C=11,S=4,E=2,P=47&amp;L=I=Kjellerbod,M=0,C=6,S=4,E=2,P=62&amp;L=I=mgmt,M=0,C=1,S=4,E=2,P=74&amp;L=I=Ri
N=3;P=3;ndedal,M=0,C=11,S=4,E=2,P=62
</code></pre></div>
<p dir="auto">Which, when joined after removing the N/P paging info, becomes::</p>
<div data-snippet-clipboard-copy-content="L=I=Antiboks,M=0,C=6,S=4,E=2,P=62&amp;L=I=ASV17,M=0,C=11,S=4,E=2,P=46&amp;L=I=ASV17-dlink,M=0,C=6,S=4,E=2,P=68&amp;L=I=fjorde123,M=0,C=1,S=4,E=2,P=58&amp;L=I=JOJ,M=0,C=11,S=4,E=2,P=47&amp;L=I=Kjellerbod,M=0,C=6,S=4,E=2,P=62&amp;L=I=mgmt,M=0,C=1,S=4,E=2,P=74&amp;L=I=Rindedal,M=0,C=11,S=4,E=2,P=62"><pre><code>L=I=Antiboks,M=0,C=6,S=4,E=2,P=62&amp;L=I=ASV17,M=0,C=11,S=4,E=2,P=46&amp;L=I=ASV17-dlink,M=0,C=6,S=4,E=2,P=68&amp;L=I=fjorde123,M=0,C=1,S=4,E=2,P=58&amp;L=I=JOJ,M=0,C=11,S=4,E=2,P=47&amp;L=I=Kjellerbod,M=0,C=6,S=4,E=2,P=62&amp;L=I=mgmt,M=0,C=1,S=4,E=2,P=74&amp;L=I=Rindedal,M=0,C=11,S=4,E=2,P=62
</code></pre></div>
<p dir="auto">And after splitting this on &amp; we get the final result:</p>
<div data-snippet-clipboard-copy-content="L=I=Antiboks,M=0,C=6,S=4,E=2,P=62
L=I=ASV17,M=0,C=11,S=4,E=2,P=46
L=I=ASV17-dlink,M=0,C=6,S=4,E=2,P=68
L=I=fjorde123,M=0,C=1,S=4,E=2,P=58
L=I=JOJ,M=0,C=11,S=4,E=2,P=47
L=I=Kjellerbod,M=0,C=6,S=4,E=2,P=62
L=I=mgmt,M=0,C=1,S=4,E=2,P=74
L=I=Rindedal,M=0,C=11,S=4,E=2,P=62"><pre><code>L=I=Antiboks,M=0,C=6,S=4,E=2,P=62
L=I=ASV17,M=0,C=11,S=4,E=2,P=46
L=I=ASV17-dlink,M=0,C=6,S=4,E=2,P=68
L=I=fjorde123,M=0,C=1,S=4,E=2,P=58
L=I=JOJ,M=0,C=11,S=4,E=2,P=47
L=I=Kjellerbod,M=0,C=6,S=4,E=2,P=62
L=I=mgmt,M=0,C=1,S=4,E=2,P=74
L=I=Rindedal,M=0,C=11,S=4,E=2,P=62
</code></pre></div>
<p dir="auto">So each L entry is made up of the same set of keys:</p>
<ul dir="auto">
<li>I: essid</li>
<li>M: opmode? or authalg? (always 0 in the sample)</li>
<li>C: channel (2.4 GHz only)</li>
<li>S: key_mgmt/auth_alg/proto?</li>
<li>E: key_mgmt/auth_alg/proto?</li>
<li>P: relative signal. Higher is better. dBm + 100?</li>
</ul>
<p dir="auto">Still need to figure out the mapping of the M,S,E keys to
wpa_supplicant config settings. I assume they represent enums.  But we
can simply treat them as opaque values since we only use the survey
data to help setup WiFi anyway. We copy these to the setup request,
and do not need to know what they mean.</p>
<p dir="auto">FWIW, my example setting <code>M=0;I=Kjellerbod;S=4;E=2</code>
is mapped to this wpa_supplicant configuration:</p>
<div data-snippet-clipboard-copy-content="# cat /tmp/wpa_supplicant.conf 
ctrl_interface=/var/run/wpa_supplicant
device_type=4-0050F204-3
model_name=DCS-8000LH
manufacturer=D-Link
os_version=01020300
config_methods=push_button virtual_push_button
eapol_version=1
network={
        scan_ssid=1
        ssid=&quot;Kjellerbod&quot;
        key_mgmt=WPA-PSK
        auth_alg=OPEN
        proto=RSN
        psk=&quot;redeacted&quot;
}"><pre><code># cat /tmp/wpa_supplicant.conf 
ctrl_interface=/var/run/wpa_supplicant
device_type=4-0050F204-3
model_name=DCS-8000LH
manufacturer=D-Link
os_version=01020300
config_methods=push_button virtual_push_button
eapol_version=1
network={
        scan_ssid=1
        ssid="Kjellerbod"
        key_mgmt=WPA-PSK
        auth_alg=OPEN
        proto=RSN
        psk="redeacted"
}
</code></pre></div>
<h5 tabindex="-1" dir="auto">A201</h5>
<p dir="auto">This write request allows setting an admin password, used for example
by the webserver. It takes the old and new passwords as unencoded
input, verifies that the old password matches, and then change the
admin password to the provided new one.</p>
<p dir="auto">The initial password is empty, which prevents webserver
authentication. Simply provide an empty string for the old password in
the first request: <strong>P=;N=newpassword</strong></p>
<p dir="auto">But this request is much more useful in other ways.... The new passord
(N_str) is processed like this (after slight compression of the
interesting code lines):</p>
<div dir="auto" data-snippet-clipboard-copy-content="	snprintf(cmd, sizeof(cmd), &quot;mdb set admin_passwd %s&quot;, N_str);
	snprintf(cmdbuf, sizeof(cmdbuf), &quot;%s > %s 2>&amp;1&quot;, cmd, p_name);
	fp = popen(cmdbuf, &quot;r&quot;);"><pre>	<span>snprintf</span>(<span>cmd</span>, <span>sizeof</span>(<span>cmd</span>), <span>"mdb set admin_passwd %s"</span>, <span>N_str</span>);
	<span>snprintf</span>(<span>cmdbuf</span>, <span>sizeof</span>(<span>cmdbuf</span>), <span>"%s &gt; %s 2&gt;&amp;1"</span>, <span>cmd</span>, <span>p_name</span>);
	<span>fp</span> <span>=</span> <span>popen</span>(<span>cmdbuf</span>, <span>"r"</span>);</pre></div>
<p dir="auto">You don't have to be a security expert to see the problem here. But
one mans bug is another mans feature :-)</p>
<h5 tabindex="-1" dir="auto">A303</h5>
<p dir="auto">The two strings S and M are url decoded and checked for special
characters.  Then the <strong>orginal</strong> url encoded strings are written to
<strong>/tmp/mydlink/reg_info</strong> and SIGUSR1 is sent to the <strong>da_adaptor</strong>
process.  Presumably triggering it to reread the reg_info file.</p>
<p dir="auto">It is pretty safe to assume that this provides some registration info
to the mydlink system, allowing it to connect to the cloud service.</p>
<p dir="auto">The set of allowed characters is rather interesting:</p>
<div data-snippet-clipboard-copy-content=" &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 !\&quot;#$%&amp;'()*+,-./:;<=>?@[\\]^_`{|}~&quot;"><pre><code> "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 !\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~"
</code></pre></div>
<p dir="auto">Which initially made me think that this was an obvious security hole,
since I missed the point that it's the url encoded strings that are
used on the command line.</p>
<p dir="auto">But given the quality of the rest of the code here, I would be very
surprised if there isn't an issue or ten in the da_adaptor code
allowing this to be abused. It's just a bit harder to figure out
without the source code.</p>
<h3 tabindex="-1" dir="auto">Firmware updates</h3>
<p dir="auto">There are at least two shell scripts providing a firmware update
service in the D-Link firmware:</p>
<ul dir="auto">
<li>/var/www/config/firmwareupgrade.cgi</li>
<li>/sbin/fwupdate</li>
</ul>
<p dir="auto">They are both pretty similar and obviously come from the same source.
The main difference is that firmwareupgrade.cgi provides the NIPCA
firmwareupgrade service, while fwupdate is a command line tool.</p>
<p dir="auto">The web service is most interesting for us, providing both the upload
and upgrade in one simple tool.  The fwupdate tool is used by the
mydlink cloud tool <strong>da_adaptor</strong> , via an fw_upgrade symlink.</p>
<h4 tabindex="-1" dir="auto">Signed and encrypted</h4>
<p dir="auto">Looking at the contents of a firmware update from D-Link can be
demotivating at the beginning:</p>
<div data-snippet-clipboard-copy-content="$ tar xvf DCS-8000LH_Ax_v2.02.02_3014.bin 
update.bin.aes
update.aes
aes.key.rsa
certificate.info
sign.sha1.rsa

$ file *
aes.key.rsa:      data
certificate.info: ASCII text
sign.sha1.rsa:    data
update.aes:       data
update.bin.aes:   data

$ ls -l
total 10956
-rw-r--r-- 1 bjorn bjorn      128 Feb 14 10:58 aes.key.rsa
-rw-r--r-- 1 bjorn bjorn      130 Feb 14 10:58 certificate.info
-rw-r--r-- 1 bjorn bjorn      128 Feb 14 10:58 sign.sha1.rsa
-rw-r--r-- 1 bjorn bjorn 10268368 Feb 14 10:58 update.aes
-rw-r--r-- 1 bjorn bjorn   936464 Feb 14 10:58 update.bin.aes"><pre><code>$ tar xvf DCS-8000LH_Ax_v2.02.02_3014.bin 
update.bin.aes
update.aes
aes.key.rsa
certificate.info
sign.sha1.rsa

$ file *
aes.key.rsa:      data
certificate.info: ASCII text
sign.sha1.rsa:    data
update.aes:       data
update.bin.aes:   data

$ ls -l
total 10956
-rw-r--r-- 1 bjorn bjorn      128 Feb 14 10:58 aes.key.rsa
-rw-r--r-- 1 bjorn bjorn      130 Feb 14 10:58 certificate.info
-rw-r--r-- 1 bjorn bjorn      128 Feb 14 10:58 sign.sha1.rsa
-rw-r--r-- 1 bjorn bjorn 10268368 Feb 14 10:58 update.aes
-rw-r--r-- 1 bjorn bjorn   936464 Feb 14 10:58 update.bin.aes
</code></pre></div>
<p dir="auto">So all the interesting stuff is AES encrypted, and the AES key is RSA
encrypted.  The only directly readable file is this one, and it
doesn't tell us much:</p>
<div data-snippet-clipboard-copy-content="$ cat certificate.info 
Publisher:DMdssdFW1
Supported Models:DCS-8000LH,DCS-8000LH
Firmware Version:1.0.0
Target:update.bin
Build No:3014
Contents:update"><pre><code>$ cat certificate.info 
Publisher:DMdssdFW1
Supported Models:DCS-8000LH,DCS-8000LH
Firmware Version:1.0.0
Target:update.bin
Build No:3014
Contents:update
</code></pre></div>
<p dir="auto">Not much we can do about this then.  Or so it seems...  Until we look
at <strong>firmwareupgrade.cgi</strong>, or <strong>fwupdate</strong> which has almost the same
code:</p>
<div dir="auto" data-snippet-clipboard-copy-content="verifyFirmware() {
	result=uploadSign
	#tar tf &quot;$UPLOADBIN&quot; > /dev/null 2> /dev/null || return 1
	fw_sign_verify.sh &quot;$UPLOADBIN&quot; /etc/db/verify.key > /dev/null 2> /dev/null || return 1
	return 0
}

decryptFirmware() {
	result=uploadDecrypt
	pibinfo PriKey > $dir/decrypt.key 2> /dev/null
	fw_decrypt.sh $dir/decrypt.key $out > /dev/null 2> /dev/null || return 1
	return 0
}"><pre><span>verifyFirmware</span>() {
	result=uploadSign
	<span><span>#</span>tar tf "$UPLOADBIN" &gt; /dev/null 2&gt; /dev/null || return 1</span>
	fw_sign_verify.sh <span><span>"</span><span>$UPLOADBIN</span><span>"</span></span> /etc/db/verify.key <span>&gt;</span> /dev/null <span>2&gt;</span> /dev/null <span>||</span> <span>return</span> 1
	<span>return</span> 0
}

<span>decryptFirmware</span>() {
	result=uploadDecrypt
	pibinfo PriKey <span>&gt;</span> <span>$dir</span>/decrypt.key <span>2&gt;</span> /dev/null
	fw_decrypt.sh <span>$dir</span>/decrypt.key <span>$out</span> <span>&gt;</span> /dev/null <span>2&gt;</span> /dev/null <span>||</span> <span>return</span> 1
	<span>return</span> 0
}</pre></div>
<p dir="auto">Can it be that simple?  Yes, it is.</p>
<p dir="auto">Looking further at the <strong>fw_sign_verify.sh</strong> and <strong>fw_decrypt.sh</strong>,
used by both update tools, confirms it.  The firmware is verified by
using the RSA public key in <strong>/etc/db/verify.key</strong> to decrypt the hash
in <strong>sign.sha1.rsa</strong>.  Then it is decrypted using a key from the
factory data <strong>pib</strong> partition.</p>
<h4 tabindex="-1" dir="auto">Further unpacking the firmware update</h4>
<p dir="auto">So we have the keys and the hashing algorithms we need to both verify
and decrypt this firmware.  We can run the commands found in
<strong>fw_decrypt.sh</strong> to get the real contents (slightly adapted to modern
openssl versions):</p>
<div data-snippet-clipboard-copy-content="$ openssl rsautl -decrypt -in aes.key.rsa -inkey decrypt.key -out aes.key

$ openssl aes-128-cbc -v -md md5 -kfile aes.key -nosalt -d -in update.bin.aes -out update.bin
bufsize=8192
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
bytes read   :   936464
bytes written:   936454

$ openssl aes-128-cbc -v -md md5 -kfile aes.key -nosalt -d -in update.aes -out update
bufsize=8192
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
bytes read   : 10268368
bytes written: 10268355

$ file update.bin update
update.bin: POSIX shell script, ASCII text executable
update:     data"><pre><code>$ openssl rsautl -decrypt -in aes.key.rsa -inkey decrypt.key -out aes.key

$ openssl aes-128-cbc -v -md md5 -kfile aes.key -nosalt -d -in update.bin.aes -out update.bin
bufsize=8192
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
bytes read   :   936464
bytes written:   936454

$ openssl aes-128-cbc -v -md md5 -kfile aes.key -nosalt -d -in update.aes -out update
bufsize=8192
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
bytes read   : 10268368
bytes written: 10268355

$ file update.bin update
update.bin: POSIX shell script, ASCII text executable
update:     data
</code></pre></div>
<p dir="auto">OK, the <strong>update</strong> file is still in an unknown format, but at least
we have the tool used to write it to the system. And it is a shell
script, so we have the source to look at too!  But 936454 bytes is a
hell of a shell script, and this is of course because most of it is an
uuencoded binary.  So we don't know exactly what that does.  But it is
named ddPack so a fair guess is that it is a tool for dd'ing multiple
file systems or other images packed as a single file.  That's really
enough info.</p>
<p dir="auto">binwalk shows that the <strong>update</strong> file is just two squashfs systems
and a kernel, with a 1024 header of some sort.  The header presumably
tells ddPack how it should apply these three images:</p>
<div data-snippet-clipboard-copy-content="$ binwalk update

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
1024          0x400           Squashfs filesystem, little endian, version 4.0, compression:xz, size: 338755 bytes, 16 inodes, blocksize: 131072 bytes, created: 2019-02-14 09:58:28
340992        0x53400         uImage header, header size: 64 bytes, header CRC: 0x675F081D, created: 2019-02-14 09:31:53, image size: 1661571 bytes, Data Address: 0x804D4960, Entry Point: 0x804D4960, data CRC: 0x73083021, OS: Linux, CPU: MIPS, image type: OS Kernel Image, compression type: none, image name: &quot;linux_3.10&quot;
2002627       0x1E8EC3        Squashfs filesystem, little endian, version 4.0, compression:xz, size: 8265620 bytes, 2145 inodes, blocksize: 131072 bytes, created: 2019-02-14 09:58:45"><pre><code>$ binwalk update

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
1024          0x400           Squashfs filesystem, little endian, version 4.0, compression:xz, size: 338755 bytes, 16 inodes, blocksize: 131072 bytes, created: 2019-02-14 09:58:28
340992        0x53400         uImage header, header size: 64 bytes, header CRC: 0x675F081D, created: 2019-02-14 09:31:53, image size: 1661571 bytes, Data Address: 0x804D4960, Entry Point: 0x804D4960, data CRC: 0x73083021, OS: Linux, CPU: MIPS, image type: OS Kernel Image, compression type: none, image name: "linux_3.10"
2002627       0x1E8EC3        Squashfs filesystem, little endian, version 4.0, compression:xz, size: 8265620 bytes, 2145 inodes, blocksize: 131072 bytes, created: 2019-02-14 09:58:45
</code></pre></div>
<p dir="auto">But we can easily guess that without knowing anything about the
header.  There is only one alternative:</p>
<ul dir="auto">
<li>The kernel goes into the <strong>kernel</strong> partition</li>
<li>The 8265620 bytes squasfs system goes into the <strong>rootfs</strong> partition</li>
<li>The remaining squasfs system goes into the <strong>userdata</strong> partition</li>
</ul>
<p dir="auto">So there is no need to analyze ddPack.  We have the necessary entry
points for <strong>fwupdate</strong> or <strong>firmwareupgrade.cgi</strong> in the
<strong>update.bin</strong> script, and that's what we needed to know for the next
step:</p>
<h4 tabindex="-1" dir="auto">Creating our own firmware updates</h4>
<p dir="auto">We do have shell access, so we can simply write the file systems we
want to flash as shown earlier.  We don't need to use the D-Link
scripts.  But where's the fun in that?</p>
<p dir="auto">There is one challenge here: The D-Link tools are expecting signed and
encrypted firmware updates.  They will run their verifyFirmware() and
decryptFirmware() functions, and fail the update if any of the returns
an error.</p>
<p dir="auto">But bailing out on verification errors is only the default setting, as
illustrated by this code from <strong>fwupdate</strong> (there is code with similar
functionality in <strong>firmwareupgrade.cgi</strong>):</p>
<div dir="auto" data-snippet-clipboard-copy-content="        TrustLevel=`tdb get SecureFW _TrustLevel_byte`
        verifyFirmware
        ret=$?
        case $ret in
                2)
                        sign=&quot;not_signed&quot;
                ;;
                0)
                        sign=&quot;trust&quot;
                ;;
                *)
                        sign=&quot;untrust&quot;
                ;;
        esac    
        if [ &quot;$do_up&quot; = &quot;1&quot; -a &quot;$ret&quot; != &quot;0&quot; -a &quot;$TrustLevel&quot; = &quot;1&quot; ]; then
                echo &quot;3&quot;
                return 1
        fi"><pre>        TrustLevel=<span><span>`</span>tdb get SecureFW _TrustLevel_byte<span>`</span></span>
        verifyFirmware
        ret=<span>$?</span>
        <span>case</span> <span>$ret</span> <span>in</span>
                2)
                        sign=<span><span>"</span>not_signed<span>"</span></span>
                ;;
                0)
                        sign=<span><span>"</span>trust<span>"</span></span>
                ;;
                <span>*</span>)
                        sign=<span><span>"</span>untrust<span>"</span></span>
                ;;
        <span>esac</span>    
        <span>if</span> [ <span><span>"</span><span>$do_up</span><span>"</span></span> <span>=</span> <span><span>"</span>1<span>"</span></span> <span>-a</span> <span><span>"</span><span>$ret</span><span>"</span></span> <span>!=</span> <span><span>"</span>0<span>"</span></span> <span>-a</span> <span><span>"</span><span>$TrustLevel</span><span>"</span></span> <span>=</span> <span><span>"</span>1<span>"</span></span> ]<span>;</span> <span>then</span>
                <span>echo</span> <span><span>"</span>3<span>"</span></span>
                <span>return</span> 1
        <span>fi</span></pre></div>
<p dir="auto">So we don't need to sign the firmware if we change the <strong>SecureFW
_TrustLevel</strong> setting.  Or we can even sign it with a key unknown to
the camera if we like.  Which can be useful if we ever replace the
[<strong>rootfs</strong>]](#Partitions), since it will allow us to install our own verification
key and use it with D-Links tools.</p>
<p dir="auto">But what about the encryption?  This cannot be disabled.  This gets
even better: The decrypting key so graciously provided to us in the
<a href="#Partitions"><strong>pib</strong></a> partition is an RSA private key. So not only can we decrypt
the firmware with it, but we can also encrypt! Nice.</p>
<p dir="auto">The <a href="https://github.com/bmork/defogger/blob/master/Makefile"><strong>Makefile</strong></a> in this repo has examples of how to use this to
create firmware update images which are accepted by the <strong>fwupdate</strong>
and <strong>firmwareupgrade.cgi</strong> tools.  It uses an alternatative
<a href="https://github.com/bmork/defogger/blob/master/update.sh"><strong>update.bin</strong></a> made to modify only the <a href="#Partitions"><strong>userdata</strong></a> partition.  This
way we can install our own code in the camera, but still leave the
D-Link camera OS unmodified.</p>
<h4 tabindex="-1" dir="auto"><a name="user-content-BuildFirmware"></a>Bulding the example firmware update in this repo</h4>
<p dir="auto">Rebuilding the example is as easy as typing <strong>make</strong>.  The Makefile is a
noisy one, so you can see all that's going on:</p>
<div data-snippet-clipboard-copy-content="$ make
echo &quot;WARNING: keys/DCS-8000LH-sign.pem is missing - using a new abitrary key instead&quot;
WARNING: keys/DCS-8000LH-sign.pem is missing - using a new abitrary key instead
[ -f random-signkey.pem ] || openssl genrsa -out random-signkey.pem
Generating RSA private key, 2048 bit long modulus (2 primes)
...............................................................................................................................+++++
........................................................................................................................................................+++++
e is 65537 (0x010001)
openssl rsa -pubout -in random-signkey.pem -out verify.key
writing RSA key
echo &quot;Publisher:DMdssdFW1&quot; >certificate.info
echo &quot;Supported Models:DCS-8000LH,DCS-8000LH&quot; >>certificate.info
echo &quot;Firmware Version:1.0.0&quot; >>certificate.info
echo &quot;Target:update.bin&quot; >>certificate.info
echo &quot;Build No:9999&quot; >>certificate.info
echo &quot;Contents:update&quot; >>certificate.info
openssl rand 16 > aes.key
openssl rsautl -encrypt -in aes.key -inkey keys/DCS-8000LH-PriKey.pem -out aes.key.rsa
sed -ne 's/&quot;//g' -e 's/^VERSION *= *//p' dcs8000lh-configure.py >version
mksquashfs version opt.local opt.squashfs -all-root -comp xz
Parallel mksquashfs: Using 4 processors
Creating 4.0 filesystem on opt.squashfs, block size 131072.
[===============================================================================================================================================================================================================|] 2/2 100%

Exportable Squashfs 4.0 filesystem, xz compressed, data block size 131072
        compressed data, compressed metadata, compressed fragments, compressed xattrs
        duplicates are removed
Filesystem size 1.08 Kbytes (0.00 Mbytes)
        60.69% of uncompressed filesystem size (1.79 Kbytes)
Inode table size 98 bytes (0.10 Kbytes)
        100.00% of uncompressed inode table size (98 bytes)
Directory table size 46 bytes (0.04 Kbytes)
        100.00% of uncompressed directory table size (46 bytes)
Number of duplicate files found 0
Number of inodes 3
Number of files 2
Number of fragments 1
Number of symbolic links  0
Number of device nodes 0
Number of fifo nodes 0
Number of socket nodes 0
Number of directories 1
Number of ids (unique uids + gids) 1
Number of uids 1
        root (0)
Number of gids 1
        root (0)
openssl aes-128-cbc -md md5 -kfile aes.key -nosalt -e -out update.aes -in opt.squashfs
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
sed  -e &quot;s/@@MODEL@@/\&quot;DCS-8000LH\&quot;/&quot; -e &quot;s/@@MD5SUM@@/\&quot;f1a1d3952c1630e5adb53e7f93b59d5e\&quot;/&quot; -e &quot;s/@@VERSION@@/\&quot;1.0.0-9999\&quot;/&quot; update.sh >update.bin
openssl aes-128-cbc -md md5 -kfile aes.key -nosalt -e -out update.bin.aes -in update.bin
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
openssl dgst -sha1 update.aes | cut -d' ' -f2 > update.sha1
cat update.bin.aes aes.key.rsa certificate.info update.sha1 | openssl dgst -sha1 | cut -d' ' -f2 > sign.sha1
openssl rsautl -sign -inkey random-signkey.pem -out sign.sha1.rsa -in sign.sha1
tar cvf fw.tar certificate.info aes.key.rsa sign.sha1.rsa update.aes update.bin.aes verify.key
certificate.info
aes.key.rsa
sign.sha1.rsa
update.aes
update.bin.aes
verify.key
"><pre><code>$ make
echo "WARNING: keys/DCS-8000LH-sign.pem is missing - using a new abitrary key instead"
WARNING: keys/DCS-8000LH-sign.pem is missing - using a new abitrary key instead
[ -f random-signkey.pem ] || openssl genrsa -out random-signkey.pem
Generating RSA private key, 2048 bit long modulus (2 primes)
...............................................................................................................................+++++
........................................................................................................................................................+++++
e is 65537 (0x010001)
openssl rsa -pubout -in random-signkey.pem -out verify.key
writing RSA key
echo "Publisher:DMdssdFW1" &gt;certificate.info
echo "Supported Models:DCS-8000LH,DCS-8000LH" &gt;&gt;certificate.info
echo "Firmware Version:1.0.0" &gt;&gt;certificate.info
echo "Target:update.bin" &gt;&gt;certificate.info
echo "Build No:9999" &gt;&gt;certificate.info
echo "Contents:update" &gt;&gt;certificate.info
openssl rand 16 &gt; aes.key
openssl rsautl -encrypt -in aes.key -inkey keys/DCS-8000LH-PriKey.pem -out aes.key.rsa
sed -ne 's/"//g' -e 's/^VERSION *= *//p' dcs8000lh-configure.py &gt;version
mksquashfs version opt.local opt.squashfs -all-root -comp xz
Parallel mksquashfs: Using 4 processors
Creating 4.0 filesystem on opt.squashfs, block size 131072.
[===============================================================================================================================================================================================================|] 2/2 100%

Exportable Squashfs 4.0 filesystem, xz compressed, data block size 131072
        compressed data, compressed metadata, compressed fragments, compressed xattrs
        duplicates are removed
Filesystem size 1.08 Kbytes (0.00 Mbytes)
        60.69% of uncompressed filesystem size (1.79 Kbytes)
Inode table size 98 bytes (0.10 Kbytes)
        100.00% of uncompressed inode table size (98 bytes)
Directory table size 46 bytes (0.04 Kbytes)
        100.00% of uncompressed directory table size (46 bytes)
Number of duplicate files found 0
Number of inodes 3
Number of files 2
Number of fragments 1
Number of symbolic links  0
Number of device nodes 0
Number of fifo nodes 0
Number of socket nodes 0
Number of directories 1
Number of ids (unique uids + gids) 1
Number of uids 1
        root (0)
Number of gids 1
        root (0)
openssl aes-128-cbc -md md5 -kfile aes.key -nosalt -e -out update.aes -in opt.squashfs
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
sed  -e "s/@@MODEL@@/\"DCS-8000LH\"/" -e "s/@@MD5SUM@@/\"f1a1d3952c1630e5adb53e7f93b59d5e\"/" -e "s/@@VERSION@@/\"1.0.0-9999\"/" update.sh &gt;update.bin
openssl aes-128-cbc -md md5 -kfile aes.key -nosalt -e -out update.bin.aes -in update.bin
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
openssl dgst -sha1 update.aes | cut -d' ' -f2 &gt; update.sha1
cat update.bin.aes aes.key.rsa certificate.info update.sha1 | openssl dgst -sha1 | cut -d' ' -f2 &gt; sign.sha1
openssl rsautl -sign -inkey random-signkey.pem -out sign.sha1.rsa -in sign.sha1
tar cvf fw.tar certificate.info aes.key.rsa sign.sha1.rsa update.aes update.bin.aes verify.key
certificate.info
aes.key.rsa
sign.sha1.rsa
update.aes
update.bin.aes
verify.key

</code></pre></div>
<p dir="auto">This will produce a new <strong>fw.tar</strong> firmware update image.</p>
<h2 tabindex="-1" dir="auto">Contact</h2>
<p dir="auto">Please contact me on <a href="mailto:bjorn@mork.no">bjorn@mork.no</a> if you have questions, comments or
just want to say hi.</p>
<p dir="auto">But please note that I won't be able to provide any support for this.
I am making this information available for educational purposes.  If
you find it useful, then great!  If you brick a camera, then I am
truly sorry about that.  But there isn't much I can do about it....</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to 1.5x your salary through negotiation (184 pts)]]></title>
            <link>https://careercutler.substack.com/p/how-you-can-15x-your-salary-through</link>
            <guid>36554909</guid>
            <pubDate>Sat, 01 Jul 2023 20:37:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://careercutler.substack.com/p/how-you-can-15x-your-salary-through">https://careercutler.substack.com/p/how-you-can-15x-your-salary-through</a>, See on <a href="https://news.ycombinator.com/item?id=36554909">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>Negotiation 😱</p><p>You may have already tensed up just from that word.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif" width="480" height="400" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/eb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:400,&quot;width&quot;:480,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2923368,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/gif&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb39b33c-92f8-4122-b78d-5cee01de21a1_480x400.gif 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>You’ve probably read a ton of resources on it already. </p><p>But when it comes down to actually doing it, like me, you end up sifting through all your past saved resources, taking phrases from one book or article and wording from another. Just winging it.</p><p>No more! This guide will succinctly take you through the beginning of the process all the way to the end. We’ll handle edge cases and what to do when things go wrong at each step of the way.</p><p><span>Through that, you’ll learn </span><strong>how</strong><span> </span><strong>you can potentially 1.5x your salary through proper negotiation, even without competing offers (and yes, I do have proof of this happening)</strong><span>.</span></p><ul><li><p>A mindset to relieve stress from the negotiation</p></li><li><p>How to increase your salary even without competing offers and the exact wording you can use</p></li><li><p>Personally vetted bonus resources</p></li></ul><p><span>The dreaded question. </span><strong>The negotiation actually begins here.</strong></p><p>This question is super frustrating but handling it well can really set you up for success.</p><blockquote><p>“Yeah, I have some thoughts around it but I was actually wondering what the salary range for the position is?”</p></blockquote><p> Most states are required by law to tell you now, and I’ve never had a recruiter decline to share this.</p><p>If the top of the range is lower than you were hoping, be honest and tell them.</p><blockquote><p>“I see. I actually had a number in mind that was higher than the top of the range. Do you think there would be additional flexibility?”</p></blockquote><p>Otherwise, it was matching or it exceeded your expectations. You can say…</p><blockquote><p>“Cool, that’s within what I was thinking. I was leaning toward { top end of the range }.”</p></blockquote><p>The truth is, recruiters just want to know if this will be a waste of time based on your expectations. That’s why they ask you.</p><p>However, they often “double dip” and try to get you to give a number first rather than offering their range. But when you ask for the range in response, it’s almost certain they will tell you. </p><p>I’ve never had this happen, but if they’re refusing to give a range, you can…</p><ul><li><p>Ask for them to map the position to a FANG company</p><ul><li><p>This works because you have more data on FANG companies. If they say it matches an L5 at a FANG then you can expect something in that range.</p></li></ul></li><li><p><span>Give a </span><strong>HIGH </strong><span>anchor salary</span></p><ul><li><p>Do this when you have a rough idea of their salary range and you know that the number you give will be just barely above the top of their range.</p></li></ul></li><li><p>Delay the conversation</p></li></ul><blockquote><p>“I’d like to wait on sharing my salary expectations until I have more discussions with the team about the role expectations.”</p></blockquote><p>Negotiation can be stressful just thinking about it.</p><p>I think the top 3 reasons for this are that we worry about…</p><ul><li><p>Losing the offer</p></li><li><p>Coming off as greedy</p></li><li><p>Not knowing what to say</p></li></ul><p>Here’s what I’ve found helpful to get past these worries.</p><ul><li><p><strong>Losing the offer: </strong><span>Approach the conversation with a collaborative mindset. Imagine you are chatting with a friend. It’s not like the movies. </span><strong>It’s a conversation, not a negotiation</strong><span>.</span></p></li><li><p><strong>Coming off as greedy: </strong><span>Understand that the recruiter is on your side in that they want you to accept an offer. It’s their job to help you feel comfortable doing it.  Asking for more increases your perceived value and helps you gain respect. Finally, if you have a genuine personal reason like student loans, medical bills, wanting to buy a house, needing to take care of kids, etc. you can be honest about this to come off as less greedy. </span></p></li><li><p><strong>Not knowing what to say: </strong><span>This article contains over 10 examples of how to phrase things. But in general, if you approach it with collaboration and empathy first, it will come naturally.</span></p></li></ul><p>You’ve got the offer and you’re ready to talk to the recruiter. </p><p><span>Between the two, I’d recommend chatting on the </span><strong>phone </strong><span>instead of email for 2 reasons.</span></p><ol><li><p>Text in email can often come across less personal. It can put you two on opposite sides of the table. Chatting on the phone brings personability into it and will make it more collaborative.</p></li><li><p>Chatting on the phone will help build your skills in the long term for these types of conversations.</p></li></ol><p>Regardless, it’s better to negotiate than not at all. So you can’t go wrong!</p><p>The below advice will apply to either choice.</p><p>The start of the conversation is the most important.</p><p>It sets the tone and can get the recruiter on your side.</p><p><strong>You want to make the conversation as collaborative as possible. It’s just a conversation with a friend.</strong></p><p>Here’s how:</p><ol><li><p>Do some small talk initially. Ask how they are and see if you can find a common interest in what they bring up to talk about for 30 seconds - 1 minute.</p></li><li><p>Once you move to business talk, express happiness with the process led by the recruiter and the company.</p></li></ol><blockquote><p><span>“I wanted to thank you again for all your help through this process and for building a great experience for me as I met the team </span><strong>(this makes the recruiter feel great)</strong><span>. I’m super excited about the opportunity to work with everyone </span><strong>(this shows your happiness with the company)</strong><span>.”</span></p><p><em>You can say any variation of this that makes you feel comfortable.</em></p></blockquote><p>That’s it! Now we get into the ask.</p><p><strong>Too often I see advice saying that unless you have other offers, you can’t negotiate. This is plain wrong.</strong></p><p>Just by receiving an offer, you have leverage. Here’s how:</p><ul><li><p><strong>Time:</strong><span> The company wants you to sign as quickly as possible</span></p></li><li><p><strong>Loss:</strong><span> The company has declared they want YOU over another candidate (or they may not have other candidates at all)</span></p></li><li><p><strong>Investment:</strong><span> The company wants you to be as invested as possible. Additionally, they have spent thousands of dollars getting to this point. If you don’t accept and they have no other candidates, they will have to keep spending time and money.</span></p></li></ul><p><strong>Knowing the leverage you have, here are the options for negotiation:</strong></p><ol><li><p><strong>Time:</strong><span> Offering to “accept right now” at a certain compensation</span></p></li></ol><blockquote><p>“The number I had in mind was closer to $200,000. Do you think we’d be able to bridge that gap? If we could, I’d feel comfortable signing right now.”</p></blockquote><ol start="2"><li><p><strong>Loss:</strong><span> Mentioning you have other upcoming interviews</span></p><ol><li><p>This one is incredibly powerful because the company does not want to get into a bidding war. Make sure you prepare extra hard for your interview to maximize the value of this one and ensure the company views you highly.</p></li></ol></li></ol><blockquote><p>“I have a few more interviews with Adobe and Pinterest to finish up this week and next week. After I hear back, I think I’d have a bit more clarity. However, I’d love to get your thoughts on if we can get the offer to $200,000. If you think we could get there, I’d be excited to drop the interviews and accept right now.”</p></blockquote><ol start="3"><li><p><strong>Investment: </strong><span>The company benefits from you being more invested</span></p></li></ol><blockquote><p>“I’m super happy with how the interview process went and I’m excited to bring { skillset that you have that the company is looking for } to the company. I’m the type that intends to stay at a company for multiple years. I also get very passionate on the day-to-day, and I’d like the compensation to reflect that investment. The number I had in mind was $200,000. Do you think we could bridge the gap to that number?”</p></blockquote><p><span>I mixed the wording a little bit across each example to show you it doesn’t need to be exact. It’s more important how you say it. Focus on </span><strong>empathy and collaboration</strong><span>.</span></p><p>Getting another offer increases your leverage. </p><p>⬆️ More leverage = ✅ Easier negotiation</p><p>The main thing here is to keep it collaborative and think about what you actually want.</p><ul><li><p>Will you take the highest offer you get?</p></li><li><p>Do you know you’ll never accept one company regardless of how much they offer?</p></li><li><p>Do you want a different compensation structure (higher cash, lower equity)?</p></li></ul><p>You have the power here. You just need to be upfront about what you want and ask the recruiter if they can match or do better. Here are some examples:</p><ul><li><p><strong>Change compensation structure</strong></p></li></ul><blockquote><p>“I’d like to join your company; however, what’s making the decision challenging is I have another offer that is offering a much higher salary. I know that here we like to give a lot of equity. For me, what would make me most comfortable is moving some of the equity to more cash compensation. Do you think that would be possible?”</p></blockquote><ul><li><p><strong>Increase the total offer</strong></p></li></ul><blockquote><p><span>“Right now I’m between you and one other company. The other company offered $200,000 in total compensation. I’d really like to make it work with { Company you are talking to } though because I feel really aligned with { what you like about the company }. The compensation is an important part for me because I really want to buy a house in the next year </span><strong>(this sentence is optional and can be replaced by any personal reason. It helps make you come off less greedy and gives them an emotional reason)</strong><span>. Do you think we’d be able to increase the salary to match the other offer?”</span></p></blockquote><p>Sometimes you’ll work with companies that seemingly really want to stick to their initial offer. They will make it seem like the offer they gave is the best offer they can do and there is nothing more that’s possible. </p><p><strong>This is rarely ever true.</strong></p><p>Maybe they are right that the base salary is the highest they can give.</p><p><strong>But negotiation isn’t just about base salary.</strong></p><p>You can also negotiate…</p><ul><li><p>Additional equity</p></li><li><p>A signing bonus</p></li><li><p>A relocation bonus</p></li><li><p>Extra time off (if not unlimited)</p></li><li><p>Remote work options</p></li></ul><p><span>Again, Bring those into the conversation using </span><strong>empathy and collaboration</strong><span>.</span></p><blockquote><p>“I understand we aren’t able to increase the base salary. However, I still feel like there’s a gap and I’d really like to make something work. What else do you think would be possible?”</p><p><em>You can leave it here or you can mention any of the above factors to negotiate.</em></p></blockquote><ul><li><p>Ask for the salary range before sharing your expectations.</p></li><li><p>Make negotiating easier by building leverage</p><ul><li><p>Get other offers</p></li><li><p>Line up interviews to use your future interviews as leverage</p></li><li><p>Your willingness to “sign right now” rather than wait</p></li><li><p>Prepare extra hard for the interviews to make them really want you</p></li><li><p>If you’re working now, use your current salary to get at least 10% more</p></li></ul></li><li><p>Treat any negotiation like a conversation. It's not like the movies. Just chat with them and tell them what you would expect based on your experience and what you will bring to the team.</p></li><li><p>Don’t be afraid of negotiation. If you treat it like a conversation, there’s practically no way your offer gets rescinded. If it does, that’s a red flag for the company. If anything, negotiation increases your perceived value and builds respect.</p></li></ul><ul><li><p>YouTube videos</p><ul><li><p><a href="https://www.youtube.com/watch?v=fyn0CKPuPlA" rel="">Exponent Salary Negotiation Video with example conversations</a></p></li><li><p><a href="https://www.youtube.com/watch?v=sJ5Shzq68Ac" rel="">Chloe Shih Salary Negotiation Video</a></p></li><li><p>There are a lot more out there but I’ve personally vetted these as giving really good advice</p></li></ul></li><li><p><span>If you haven’t got the job offer yet and want some tips for that, </span><a href="https://careercutler.substack.com/p/advice-for-job-seekers-in-a-layoff" rel="">check my article with in-depth advice here</a><span>. There is a </span><a href="https://docs.google.com/document/d/1NkeYSZj9AjLTfB-hLA_b4q3-jh-MxG1g8y1wSXvMcVs/edit#heading=h.4j9t90j40w8j" rel="">section on negotiation in the interview strategy doc provided</a><span>.</span></p></li></ul><p>If you found this post valuable and you are currently not subscribed, hit the button below to have these delivered to you every Sunday.</p><p>You can also hit the like button at the bottom of this email to help support me. It really helps!</p><p><span>Finally, if you’d like more personal and specific advice, feel free to </span><a href="https://calendly.com/engineer-coach-jordan" rel="">schedule a coaching session with me on Calendly here</a><span>.</span></p><div data-attrs="{&quot;url&quot;:&quot;https://careercutler.substack.com/p/how-you-can-15x-your-salary-through?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;}" data-component-name="CaptionedButtonToDOM"><p>Thank you for reading High Growth Engineer. This post is public so feel free to share it.</p><p data-attrs="{&quot;url&quot;:&quot;https://careercutler.substack.com/p/how-you-can-15x-your-salary-through?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;}" data-component-name="ButtonCreateButton"><a href="https://careercutler.substack.com/p/how-you-can-15x-your-salary-through?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p></div></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Twitter bug causes self-DDoS, related to Musk’s emergency blocks, rate limits (162 pts)]]></title>
            <link>https://waxy.org/2023/07/twitter-bug-causes-self-ddos-possibly-causing-elon-musks-emergency-blocks-and-rate-limits-its-amateur-hour/</link>
            <guid>36554362</guid>
            <pubDate>Sat, 01 Jul 2023 19:54:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://waxy.org/2023/07/twitter-bug-causes-self-ddos-possibly-causing-elon-musks-emergency-blocks-and-rate-limits-its-amateur-hour/">https://waxy.org/2023/07/twitter-bug-causes-self-ddos-possibly-causing-elon-musks-emergency-blocks-and-rate-limits-its-amateur-hour/</a>, See on <a href="https://news.ycombinator.com/item?id=36554362">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
<main id="main" role="main">
<article id="post-46811">

<div>
<p>For the last two days, Elon Musk has claimed that Twitter is under attack from “<a href="https://twitter.com/elonmusk/status/1674887204580073474">several hundred organizations</a>” who were conducting “<a href="https://twitter.com/elonmusk/status/1674942336583757825">EXTREME levels of data scraping</a>,” forcing them to bring “large numbers of servers online on an emergency basis” and enact emergency measures.</p>
<p>Yesterday, Twitter started <a href="https://www.theverge.com/2023/6/30/23779764/twitter-blocks-unregistered-users-account-tweets">blocking all logged-out access</a> to Twitter, requiring signing in to view any tweet or profile. Elon Musk <a href="https://twitter.com/elonmusk/status/1674865731136020505">called it</a> a “temporary emergency measure,” claiming they “were getting data pillaged so much that it was degrading service for normal users!”</p>
<p>Apparently, it didn’t stop the crush of traffic and, this morning, Musk announced they escalated their actions against supposed “extreme levels of data scraping” by rate-limiting the number of tweets you can view.</p>
<figure><a href="https://twitter.com/elonmusk/status/1675187969420828672"><img decoding="async" width="554" height="265" src="https://waxy.org/wp-content/uploads/2023/07/image.png" alt="" srcset="https://waxy.org/wp-content/uploads/2023/07/image.png 554w, https://waxy.org/wp-content/uploads/2023/07/image-300x144.png 300w" sizes="(max-width: 554px) 100vw, 554px"></a></figure>
<p>Immediately, Twitter users started seeing “Rate Limit Exceeded” messages and every trending topic was about the collapse of Twitter:</p>
<figure><img decoding="async" loading="lazy" width="730" height="411" src="https://waxy.org/wp-content/uploads/2023/07/image-1.png" alt="" srcset="https://waxy.org/wp-content/uploads/2023/07/image-1.png 730w, https://waxy.org/wp-content/uploads/2023/07/image-1-300x169.png 300w" sizes="(max-width: 730px) 100vw, 730px"></figure>
<p>Are shadowy AI companies scraping Twitter for training data? Maybe!</p>
<p>But on Mastodon this morning, web developer Sheldon Chang <a href="https://sfba.social/@sysop408/110639435788921057">noticed</a> another source of unusual traffic: a bug in Twitter’s web app that is <strong>constantly sending requests to Twitter in an infinite loop</strong>:</p>
<blockquote>
<p>This is hilarious. It appears that Twitter is DDOSing itself.</p>
<p>The Twitter home feed’s been down for most of this morning. Even though nothing loads, the Twitter website never stops trying and trying.</p>
<p>In the first video, notice the error message that I’m being rate limited. Then notice the jiggling scrollbar on the right.</p>
<p>The second video shows why it’s jiggling. Twitter is firing off about 10 requests a second to itself to try and fetch content that never arrives because Elon’s latest genius innovation is to block people from being able to read Twitter without logging in.</p>
<p>This likely created some hellish conditions that the engineers never envisioned and so we get this comedy of errors resulting in the most epic of self-owns, the self-DDOS.</p>
<p>Unbelievable. It’s amateur hour.</p>
</blockquote>
<p>He <a href="https://sfba.social/@sysop408/110639474671754723">posted a video</a> of the bug in action, sending hundreds of requests a minute.</p>
<blockquote>
<figure><video controls="" src="https://waxy.org/wp-content/uploads/2023/07/twitter_loop.mp4"></video></figure>
</blockquote>
<p>On Twitter, software engineer Nelson Minar <a href="https://twitter.com/nelson/status/1675168548958924800">independently</a> reproduced the bug with his own video capture.</p>
<figure><a href="https://twitter.com/nelson/status/1675168548958924800"><img decoding="async" loading="lazy" width="591" height="254" src="https://waxy.org/wp-content/uploads/2023/07/image-2.png" alt="" srcset="https://waxy.org/wp-content/uploads/2023/07/image-2.png 591w, https://waxy.org/wp-content/uploads/2023/07/image-2-300x129.png 300w" sizes="(max-width: 591px) 100vw, 591px"></a></figure>
<hr>
<p>It’s currently unclear when this bug went into production, or how much it’s actually impacting their traffic, so it’s hard to determine whether this bug inadvertently inspired Twitter to block unregistered access and add rate limits, or if the bug was triggered by the rollout of those changes.</p>
<p>On Bluesky, Twitter’s former head of trust and safety Yoel Roth <a href="https://bsky.link/?url=https://bsky.app/profile/yoyoel.com/post/3jzid6t7kwv25">wrote</a>, “For anyone keeping track, this isn’t even the first time they’ve completely broken the site by bumbling around in the rate limiter. There’s a reason the limiter was one of the most locked down internal tools. Futzing around with rate limits is probably the easiest way to break Twitter.”</p>
<p><a href="https://sfba.social/@sysop408/110639609718939225">Sheldon suspects</a> the bug was related to yesterday’s decision to block unregistered users from accessing Twitter, but <a href="https://sfba.social/@sysop408/110640529859605266">in a followup</a>, wrote that it’s “probably not the cause of their scraping panic and most of these requests are being blocked.”</p>
<p>It seems very likely that <a href="https://www.engadget.com/twitter-shut-off-its-free-api-and-its-breaking-a-lot-of-apps-222011637.html?guccounter=1&amp;guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&amp;guce_referrer_sig=AQAAANLvtUj121h_L-UH13CO5isVKgC1qi7lzrhXGpDQXqIGso1Qb_6K1GSfvxHw0vBMxuWO1fSZSFOHLDHBchMN-Zws0Vpb778fDspy8e4KcvJy8DSLtvANP1X5X0P4PZJ8hEcmi-gqbwRSRdTSTcEOR3xz0ko47hvEOwaLLLg6CZWD">killing free access to the Twitter API</a> led to a big increase in scraping, since countless businesses, organizations, and individuals used it for their projects. It’s also plausible that these issues are entirely unrelated.</p>
<p>Still, how funny would it be if this “emergency,” from start to finish, was brought on by a Javascript bug that caused Twitter to DDOS itself, spawning all of these truly terrible decisions? At this point in Twitter’s downward spiral, nothing would surprise me.</p>
<p>If you know more, leave a comment or <a href="https://waxy.org/cdn-cgi/l/email-protection#076b68604770667f7e29687560">get in touch</a>. Confidentiality guaranteed.</p>
</div>
</article>

</main>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bluesky facing degraded performance due to record high traffic (177 pts)]]></title>
            <link>https://bsky.app/profile/bsky.app/post/3jzi4yw3nqu2h</link>
            <guid>36554053</guid>
            <pubDate>Sat, 01 Jul 2023 19:26:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bsky.app/profile/bsky.app/post/3jzi4yw3nqu2h">https://bsky.app/profile/bsky.app/post/3jzi4yw3nqu2h</a>, See on <a href="https://news.ycombinator.com/item?id=36554053">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Workers with less experience gain the most from generative AI (147 pts)]]></title>
            <link>https://mitsloan.mit.edu/ideas-made-to-matter/workers-less-experience-gain-most-generative-ai</link>
            <guid>36553987</guid>
            <pubDate>Sat, 01 Jul 2023 19:20:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mitsloan.mit.edu/ideas-made-to-matter/workers-less-experience-gain-most-generative-ai">https://mitsloan.mit.edu/ideas-made-to-matter/workers-less-experience-gain-most-generative-ai</a>, See on <a href="https://news.ycombinator.com/item?id=36553987">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                            

            
              <p>Generative artificial intelligence may be able to <a aria-label="Opens in a new window" href="https://mackinstitute.wharton.upenn.edu/wp-content/uploads/2023/01/Christian-Terwiesch-Chat-GTP.pdf" target="_blank">pass the bar exam</a> or <a aria-label="Opens in a new window" href="https://www.cnn.com/2023/01/19/tech/chatgpt-future-davos/index.html" target="_blank">help CEOs write speeches</a>. But those results have been generated in a controlled setting, and with relatively little at stake.</p>

<p>In the real world, enterprises face the age-old question of technology innovation: How will generative AI <a aria-label="Opens in a new window" href="https://mitsloan.mit.edu/ideas-made-to-matter/new-book-explores-how-ai-really-changes-way-we-work" target="_blank">affect workers</a>, particularly those with limited experience?</p>

      

<p>According to a new <a aria-label="Opens in a new window" href="https://danielle-li.github.io/assets/docs/GenerativeAIatWork.pdf" target="_blank">paper</a> by MIT Sloan associate professor&nbsp; MIT Sloan PhD candidate <a aria-label="Opens in a new window" href="https://sites.google.com/view/lindsey-raymond/" target="_blank">Lindsey Raymond</a>, and Stanford University professor <a aria-label="Opens in a new window" href="https://www.brynjolfsson.com/" target="_blank">Erik Brynjolfsson</a>, PhD ’91, inexperienced workers actually stand to benefit the most from generative AI.</p>

<p>The co-authors found that contact center agents with access to a conversational assistant saw a 14% boost in productivity, with the largest gains impacting new or low-skilled workers. In other words, the workers were upskilled, not replaced, thanks to the technology.</p>

<p>“Generative AI seems to be able to decrease inequality in productivity, helping lower-skilled workers significantly but with little effect on high-skilled workers,” Li said. “Without access to an AI tool, less-experienced workers would slowly get better at their jobs. Now they can get better faster.”</p>

<h2><strong>A different kind of disruption</strong></h2>

<p>Generative AI is the latest in a line of technologies to disrupt the workplace. Computers that can complete data entry, bookkeeping, and basic assembly-line tasks have been replacing or augmenting workers for decades. More recently, computerization has streamlined research and analysis, helping workers do more in less time.</p>

<p>Many of these technologies work when provided with explicit instructions, Li said: If you provide the right input, the computer will give you the right output. The subset of generative AI known as large language models is different, though, as it can infer the relationships between the inputs and outputs. (“Language” is a bit of a misnomer, as models can also analyze audio and visual files, computer code, protein sequences, and many other data sources.)</p>

<p>“If you give a large language model enough pictures of your mother and pictures of women who aren’t your mother, it will be able to figure out whether a single picture is your mother,” Li said. “What’s the impact of a technology that can do that?”</p>

<h2><strong>Room for improvement in the contact center</strong></h2>

<p>To study the impact of large language models, the researchers looked at a customer contact center at a Fortune 500 company that sells software to small businesses in the U.S. Eighty-three percent of the agents were based outside the U.S.</p>

  <section data-size="small" data-sdp-id="56925">

    

          
  
    <svg data-num-count="3" data-size="small" alt="14%" viewBox="0 0 444 254" width="444px" height="254px" preserveAspectRatio="xMaxYMax" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><linearGradient id="data_point--gradient_56925" x1="0" x2="1"><stop stop-color="#ec0044" offset="0"></stop><stop stop-color="#f9917c" offset="1"></stop></linearGradient><mask id="data_point--mask_56925"><text><tspan data-number-slot="" data-enabled="true" y="242"></tspan><tspan data-number-slot="1" data-enabled="true" y="242">1</tspan><tspan data-number-slot="2" data-enabled="true" y="242">4</tspan><tspan data-number-slot="" data-enabled="true" y="242">%</tspan></text></mask></defs><rect x="0" y="0" width="444" height="250" fill="url(#data_point--gradient_56925)" mask="url(#data_point--mask_56925)"></rect></svg>

          
  
    <p>Contact center agents with access to an AI assistant were 14% more productive, with low-skilled workers improving the most. </p>

    </section><p>Average contact centers have much room for improvement, the researchers write. Supervisors can spend up to 20 hours each week training low performers. Improvement comes from experience, which often means dealing with stressed-out customers. This can lead to employee burnout and extraordinarily high turnover; annually, up to 60% of contact center workers leave, and companies spend as much as $20,000 to replace each employee.</p>

<p>“Highly skilled workers are good at reading customers’ frustration — and that can take getting yelled at for six months,” Li said.</p>

<p>An abundance of data is another reason contact centers are a good testing ground for generative AI. As anyone who has called a helpline knows, conversations between agents and customers are routinely recorded for quality assurance purposes.</p>

<p>That gives generative AI models access to a large training data set, which can be used to provide agents with recommended responses to common customer questions or links to relevant product documentation.</p>

<p>Li and her co-authors emphasized that the generative AI model was meant to augment and not outright replace the contact center employees. The model offered recommendations only if it was “sufficiently confident” in its answers, which reduced the number of incorrect responses. In addition, workers weren’t required to use the recommendations. They followed them 38% of the time, which is consistent with the industry average for generative AI tools, Li said.</p>

<h2><strong>Gains in efficiency and customer sentiment</strong></h2>

<p>Workers using the generative AI model increased the number of customer chats resolved per hour by 13.8%, the researchers found. Within two months, they were resolving 2.5 chats per hour, compared with 1.7 for colleagues not using the model, who needed eight months to hit the higher threshold. In addition, workers using the AI model spent an average of 35 minutes on each chat, compared with 40 minutes for their colleagues who lacked a model. (These figures also account for the fact that workers often manage more than one chat at once.)</p>

<p>As noted, productivity gains were highest among workers with the least experience, who resolved 35% more chats per hour when they used the generative model. Productivity was essentially flat for workers with the most skills and experience.</p>

<p>Using the generative AI model also led to improved customer sentiment. Requests to speak to a manager declined by 25%, and transfers to other departments tended to happen earlier in the conversation, which suggests that the AI model was able to help workers better match a customer’s problem to the right business unit for a solution.</p>

<p>“The large effects on the lower-skilled workers tell us a lot about how we’re changing what workers are saying,” Li said. “It’s not just a recommendation that they always follow. It’s not just auto-complete. It seems that the model was changing [how they responded], leaving the customer thinking the situation has been resolved.”</p>

<h2><strong>Important findings, uncertain implications </strong></h2>

<p>The paper’s findings show a clear benefit to using generative AI in the context of the contact center. They also raise a lot of questions, Li said.</p>

  <section><header><h3>Related Articles</h3>
    </header><p>
                    <a title="Study: Industry now dominates AI research " href="https://mitsloan.mit.edu/ideas-made-to-matter/study-industry-now-dominates-ai-research" data-dynamic="false" data-image-enabled="true" target="_blank">
                                    <figure data-slot="first" aria-label="A business person with a face made of circuit board towers over a smaller academic person with a face made of circuit board"></figure><span data-slot="first">Study: Industry now dominates AI research </span>
            </a>
                    <a title="Why companies need artificial intelligence explainability" href="https://mitsloan.mit.edu/ideas-made-to-matter/why-companies-need-artificial-intelligence-explainability" data-dynamic="false" data-image-enabled="true" target="_blank">
                                    <figure data-slot="second" aria-label="A question mark on a robot's face with network imagery"></figure><span data-slot="second">Why companies need artificial intelligence explainability</span>
            </a>
                    <a title="The hidden work created by artificial intelligence programs" href="https://mitsloan.mit.edu/ideas-made-to-matter/hidden-work-created-artificial-intelligence-programs" data-dynamic="false" data-image-enabled="true" target="_blank">
                                    <figure data-slot="third" aria-label="An illustration of a person using a flashlight to cast a beam a light amongst a sky of binary code"></figure><span data-slot="third">The hidden work created by artificial intelligence programs</span>
            </a>
            </p>
</section><p>First, it isn’t clear who benefits from the productivity gains. Are contact center agents paid more when their performance improves, or do the developers of the AI model get a bonus? If workers can resolve more chats per hour, does a company hire fewer agents? Will contact center volumes increase as customers begin to realize the experience is better than it used to be?</p>

<p>It’s also worth exploring whether workers are learning from the AI model’s recommendations or simply following instructions. Are they becoming what Li described as a “small business owner whisperer,” learning how to diagnose customers’ specific problems? Or are they more like programmers copying code snippets from GitHub or drivers getting to their destination faster using Waze —&nbsp;using the provided recommendations to augment their work without thinking about how to solve the larger problem.</p>

<p>“If you’re just typing the recommendations, then you may not necessarily be learning. You’re more productive, but the source of your productivity resides in the technology,” Li said.</p>

<p>On the other hand, if companies take the time to teach workers how the technology can augment what they do, “workers start to learn faster, “ Li said. “And being faster at learning is going to make a big difference.”</p>

<p><a aria-label="Opens in a new window" href="https://mitsloan.mit.edu/ideas-made-to-matter/why-generative-ai-needs-a-creative-human-touch" target="_blank">Read next: why generative AI needs a creative human touch</a></p>


                            
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[“It appears that Twitter is DDoSing itself” (387 pts)]]></title>
            <link>https://sfba.social/@sysop408/110639474671754723</link>
            <guid>36553762</guid>
            <pubDate>Sat, 01 Jul 2023 18:58:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sfba.social/@sysop408/110639474671754723">https://sfba.social/@sysop408/110639474671754723</a>, See on <a href="https://news.ycombinator.com/item?id=36553762">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Twitter Is DDOSing Itself (1236 pts)]]></title>
            <link>https://sfba.social/@sysop408/110639435788921057</link>
            <guid>36553236</guid>
            <pubDate>Sat, 01 Jul 2023 18:17:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sfba.social/@sysop408/110639435788921057">https://sfba.social/@sysop408/110639435788921057</a>, See on <a href="https://news.ycombinator.com/item?id=36553236">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[The complex history of the Intel i960 RISC processor (116 pts)]]></title>
            <link>http://www.righto.com/2023/07/the-complex-history-of-intel-i960-risc.html</link>
            <guid>36552844</guid>
            <pubDate>Sat, 01 Jul 2023 17:49:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.righto.com/2023/07/the-complex-history-of-intel-i960-risc.html">http://www.righto.com/2023/07/the-complex-history-of-intel-i960-risc.html</a>, See on <a href="https://news.ycombinator.com/item?id=36552844">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-2731307596521436851" itemprop="description articleBody">



<p>The Intel i960 was a remarkable 32-bit processor of the 1990s with a confusing set of versions.
Although it is now mostly forgotten (outside the many people who used it as an embedded processor), it has a complex history.
It had a shot at being Intel's flagship processor until x86 overshadowed it.
Later, it was the world's best-selling RISC processor.
One variant was a <b>33</b>-bit processor with a decidedly non-RISC object-oriented instruction set;
it became a military standard and was used in the F-22 fighter plane.
Another version powered Intel's short-lived Unix servers.
In this blog post, I'll take a look at the history of the i960, explain its different variants, and examine silicon dies.
This chip has a lot of mythology and confusion (especially on <a href="https://en.wikipedia.org/wiki/Intel_i960">Wikipedia</a>), so I'll
try to clear things up.</p>
<h2>Roots: the iAPX 432</h2>
<p><a href="https://static.righto.com/images/960-overview/intel432.jpg"><img alt="&quot;Intel 432&quot;: Cover detail from Introduction to the iAPX 432 Architecture." height="215" src="https://static.righto.com/images/960-overview/intel432-w450.jpg" title="&quot;Intel 432&quot;: Cover detail from Introduction to the iAPX 432 Architecture." width="450"></a></p>
<p>The ancestry of the i960 starts in 1975, when Intel set out to design a "micro-mainframe",
a revolutionary processor that would bring the power of mainframe computers to microprocessors.
This project, eventually called the iAPX 432, was a huge leap in features and complexity.
Intel had just released the popular 8080 processor in 1974, an 8-bit processor that kicked off the hobbyist computer era with computers
such as the Altair and IMSAI.
However, 8-bit microprocessors were toys compared to 16-bit minicomputers like the PDP-11, let alone mainframes like the 32-bit IBM System/370.
Most companies were gradually taking minicomputer and mainframe features and putting them into microprocessors, but
Intel wanted to leapfrog to a mainframe-class 32-bit processor.
The processor would make programmers much more productive by bridging the "semantic gap" between high-level languages and simple processors, implementing many features directly into the processor.</p>
<!-- https://www.google.com/books/edition/Journal_of_Pascal_and_Ada/d0UsAQAAIAAJ?hl=en&gbpv=1&bsq=ada+dominant+programming+language&dq=ada+dominant+programming+language&printsec=frontcover -->
<!-- https://books.google.com/books?id=1mQDa_UuMbYC&pg=PA51&dq=ada+dominant+programming+language&hl=en&sa=X&ved=2ahUKEwjkx535sLX_AhUfFlkFHemmCtoQ6AF6BAgFEAI#v=onepage&q=ada%20dominant%20programming%20language&f=false -->

<!--
The [June 1981](https://www.computer.org/csdl/magazine/co/1981/06) issue of IEEE Computer was devoted to highly positive coverage of the Ada language.
-->

<p>The <a href="https://homes.cs.washington.edu/~levy/capabook/Chapter9.pdf">432 processor</a> included memory management, process management, and interprocess communication.
These features were traditionally part of the operating system, but Intel built them in the processor,
calling this the "<a href="http://www.bitsavers.org/components/intel/iAPX_432/171821-001_Introduction_to_the_iAPX_432_Architecture_Aug81.pdf">Silicon Operating System</a>".
The processor was also one of the first to implement the new IEEE 754 floating-point standard, still in use by most processors.
The 432 also had support for fault tolerance and multi-processor systems.
One of the most unusual features of the 432 was that instructions weren't byte aligned. Instead, instructions were between 6 and 321 bits long,
and you could jump into the middle of a byte.
Another unusual feature was that the 432 was a stack-based machine, pushing and popping values on an in-memory stack, rather than
using general-purpose registers.</p>
<p>The 432 provided hardware support for object-oriented programming, built around
an unforgeable object pointer called an Access Descriptor.
Almost every structure in a 432 program and in the system itself is a separate object.
The processor provided fine-grain security and access control by
checking every object access to ensure that the user had permission and was not exceeding the bounds of the object.
This made buffer overruns and related classes of bugs impossible, unlike modern processors.</p>
<!-- Ada and iAPX 432 developed in parallel https://books.google.com/books?id=DT4EAAAAMBAJ&pg=PA39&dq=iapx+432+ada&hl=en&sa=X&ved=2ahUKEwiV2citlqr_AhXWlWoFHfE9AyUQuwV6BAgKEAY#v=onepage&q=iapx%20432%20ada&f=false -->

<p><a href="https://static.righto.com/images/960-overview/iapx432.jpg"><img alt="This photo from the Intel 1981 annual report shows Intel's 432-based development computer and three of the engineers." height="469" src="https://static.righto.com/images/960-overview/iapx432-w350.jpg" title="This photo from the Intel 1981 annual report shows Intel's 432-based development computer and three of the engineers." width="350"></a></p><p>This photo from the Intel 1981 annual report shows Intel's 432-based development computer and three of the engineers.</p>
<p>The new, object-oriented Ada language was the primary programming language for the 432.
The US Department of Defense developed the Ada language in the late 1970s and early 1980s to provide a common language for
embedded systems, using the latest ideas from object-oriented programming.
Proponents expected Ada to become the dominant computer language for the 1980s and beyond.
In 1979, Intel realized that Ada was a good target for the iAPX 432, since they had similar object and task models.
Intel <a href="https://www.computer.org/csdl/magazine/co/1981/06/01667402/13rRUB7a19L">decided to</a>
"establish itself as an early center of Ada technology by using the language as the
primary development and application language for the
new iAPX 432 architecture."
The iAPX 432's operating system (<a href="http://www.bitsavers.org/components/intel/iAPX_432/172103-002_iMAX_432_Reference_Manual_May82.pdf">iMAX 432</a>) and other software were written in Ada, using one of the first Ada compilers.</p>
<p>Unfortunately, iAPX 432 project was way too ambitious for its time.
After a couple of years of slow progress, Intel realized that they needed a stopgap processor to counter competitors such as Zilog and Motorola.
Intel quickly designed a 16-bit processor that they could sell until the 432 was ready.
This processor was the Intel 8086 (1978), which lives on in the x86 architecture used by most computers today.
Critically, the importance of the 8086 was not recognized at the time.
In 1981, IBM selected Intel's 8088 processor (a version of the 8086 with an 8-bit bus) for the IBM PC.
In time, the success of the IBM PC and compatible systems led to Intel's dominance of the microprocessor market, but in 1981
Intel viewed the IBM PC as just another design win.
As Intel VP Bill Davidow later said, "We knew it was an important win. We didn't realize it was the only win."</p>
<!-- Creating the Digital Future, p27 -->

<p><a href="https://static.righto.com/images/960-overview/ibm-pc.jpg"><img alt="Caption: IBM chose Intel's high performance 8088 microprocessor as the central processing unit for the IBM Personal Computer, introduced in 1981. Seven Intel peripheral components are also integrated into the IBM Personal Computer.  From Intel's 1981 annual report." height="328" src="https://static.righto.com/images/960-overview/ibm-pc-w350.jpg" title="Caption: IBM chose Intel's high performance 8088 microprocessor as the central processing unit for the IBM Personal Computer, introduced in 1981. Seven Intel peripheral components are also integrated into the IBM Personal Computer.  From Intel's 1981 annual report." width="350"></a></p><p>Caption: IBM chose Intel's high performance 8088 microprocessor as the central processing unit for the IBM Personal Computer, introduced in 1981. Seven Intel peripheral components are also integrated into the IBM Personal Computer.  From <a href="https://www.intel.com/content/www/us/en/history/history-1981-annual-report.html">Intel's 1981 annual report</a>.</p>
<p>Intel finally released the iAPX 432 in 1981.
Intel's <a href="https://www.intel.com/content/www/us/en/history/history-1981-annual-report.html">1981 annual report</a> shows the
importance of the 432 to Intel.
A section titled "The Micromainframe™ Arrives" enthusiastically described the iAPX 432 and how it would "open the door to applications not previously feasible".
To Intel's surprise, the iAPX 432 ended up as "one of the great disaster stories of modern computing" as
the New York Times <a href="https://archive.nytimes.com/www.nytimes.com/library/tech/98/04/biztech/articles/05merced.html">put it</a>.
The processor was so complicated that it was split across two very large chips:<span id="fnref:size"><a href="#fn:size">1</a></span> one
to decode instructions and a second to execute them
Delivered years behind schedule, the micro-mainframe's performance was dismal, much worse than competitors and even the stopgap 8086.<span id="fnref:432"><a href="#fn:432">2</a></span>
Sales were minimal and the 432 quietly dropped out of sight.</p>
<p><a href="https://static.righto.com/images/960-overview/432-dies.jpg"><img alt="My die photos of the two chips that make up the iAPX 432 General Data Processor. Click for a larger version." height="289" src="https://static.righto.com/images/960-overview/432-dies-w600.jpg" title="My die photos of the two chips that make up the iAPX 432 General Data Processor. Click for a larger version." width="600"></a></p><p>My die photos of the two chips that make up the iAPX 432 General Data Processor. Click for a larger version.</p>
<h2>Intel picks a 32-bit architecture (or two, or three)</h2>
<p>In 1982, Intel still didn't realize the importance of the x86 architecture.
The follow-on 186 and 286 processors were released but without much success at first.<span id="fnref:286"><a href="#fn:286">3</a></span>
Intel was working on the 386, a 32-bit successor to the 286, but their main customer IBM was very unenthusiastic.<span id="fnref:ibm286"><a href="#fn:ibm286">4</a></span>
Support for the 386 was so weak that the 386 team worried that the project might be dead.<span id="fnref:386-oral-history"><a href="#fn:386-oral-history">5</a></span>
Meanwhile, the 432 team continued their work.
Intel also had a third processor design in the works, a 32-bit VAX-like processor codenamed P4.<span id="fnref:processor-numbers"><a href="#fn:processor-numbers">6</a></span></p>
<p>Intel recognized that developing three unrelated 32-bit processors was impractical and formed a task force to develop a
Single High-End Architecture (SHEA).
The task force didn't achieve a single architecture, but they decided to
merge the 432 and the P4 into a processor codenamed the P7, which would become the i960.
They also decided to continue the 386 project.
(Ironically, in 1986, Intel started yet another 32-bit processor, the unrelated <a href="https://spectrum.ieee.org/intel-i860">i860</a>, bringing
the number of 32-bit architectures back to three.)</p>
<p>At the time, the 386 team felt that they were treated as the
"stepchild" while the P7 project was the focus of Intel's attention.
This would change as the sales of x86-based personal computers climbed and money poured into Intel.
The 386 team would soon transform from stepchild to king.<span id="fnref2:386-oral-history"><a href="#fn:386-oral-history">5</a></span></p>
<h2>The first release of the i960 processor</h2>
<p>Meanwhile,
the 1980 paper <a href="https://inst.eecs.berkeley.edu/~n252/paper/RISC-patterson.pdf">The case for the Reduced Instruction Set Computer</a>
proposed a revolutionary new approach for computer architecture: building Reduced Instruction Set Computers (RISC) instead of
Complex Instruction Set Computers (CISC).
The paper argued that the trend toward increasing complexity was doing more harm than good.
Instead, since "every transistor is precious" on a VLSI chip, the instruction set should be simplified,
only adding features that quantitatively improved performance.</p>
<p>The RISC approach became very popular in the 1980s.
Processors that followed the RISC philosophy generally converged on an approach with
32-bit easy-to-decode instructions,
a load-store architecture (separating computation instructions from instructions that accessed memory),
straightforward instructions that executed in one clock cycle,
and implementing instructions directly rather than through microcode.</p>
<p>The P7 project combined the RISC philosophy and the ideas from the 432 to create Intel's first RISC chip, originally called
the 80960<span id="fnref:80960"><a href="#fn:80960">7</a></span> and later the i960.
The chip, announced in 1988, was significant enough for coverage in the <a href="https://www.nytimes.com/1988/04/06/business/company-news-a-new-family-of-intel-chips.html">New York Times</a>.
Analysts said that the chip was marketed as an embedded controller to avoid stealing sales from the 80386.
However, Intel's claimed motivation was the size of the embedded market;
Intel chip designer Steve McGeady <a href="https://archive.org/details/198902ByteMagazineVol1402PersonalWorkstationMacSE/page/n13/mode/2up?q=embedded+80960+29000">said at the time</a>, "I'd rather put an 80960 in every antiskid braking system than in every Sun workstation.”
Nonetheless, Intel also used the i960 as a workstation processor, as will be described in the next section.</p>
<p>The block diagram below shows the microarchitecture of the original i960 processors.
The microarchitecture of the i960 followed most (but not all) of the common RISC design:
a large register set, mostly one-cycle instructions,
a load/store architecture, simple instruction formats, and a pipelined architecture.
The Local Register Cache contains four sets of the 16 local registers. These "<a href="https://en.wikipedia.org/wiki/Register_window">register windows</a>" allow the registers to be switched during
function calls without the delay of saving registers to the stack.
The micro-instruction ROM and sequencer hold microcode for complex instructions; microcode is highly unusual for a RISC processor.
The chip's Floating Point Unit<span id="fnref:fp-80387"><a href="#fn:fp-80387">8</a></span> and Memory Management Unit are advanced features for the time.</p>
<p><a href="https://static.righto.com/images/960-overview/arch-xa.jpg"><img alt="The microarchitecture of the i960 XA. FPU is Floating Point Unit. IEU is Instruction Execution Unit. MMU is Memory Management Unit. From the 80960 datasheet." height="288" src="https://static.righto.com/images/960-overview/arch-xa-w600.jpg" title="The microarchitecture of the i960 XA. FPU is Floating Point Unit. IEU is Instruction Execution Unit. MMU is Memory Management Unit. From the 80960 datasheet." width="600"></a></p><p>The microarchitecture of the i960 XA. <i>FPU</i> is Floating Point Unit. <i>IEU</i> is Instruction Execution Unit. <i>MMU</i> is Memory Management Unit. From the <a href="http://www.bitsavers.org/components/intel/i960/271159-001_80960XA_Advance_Information_Oct90.pdf">80960 datasheet</a>.</p>
<p>It's interesting to compare the i960 to the 432: the programmer-visible architectures are completely different, while the instruction
sets are almost identical.<span id="fnref:instruction-set-note"><a href="#fn:instruction-set-note">9</a></span>
Architecturally, the 432 is a stack-based machine with no registers, while the i960 is a load-store machine with many registers.
Moreover, the 432 had complex variable-length instructions, while the i960 uses simple fixed-length load-store instructions.
At the low level, the instructions are different due to the extreme architectural differences between the processors,
but otherwise, the instructions are remarkably similar, modulo some name changes.</p>
<p>The key to understanding the i960 family is that there are four architectures, ranging from a straightforward RISC processor to
a 33-bit processor implementing the 432's complex instruction set and object model.<span id="fnref:myers"><a href="#fn:myers">10</a></span>
Each architecture adds additional functionality to the previous one:</p>
<ul>
<li>
The Core architecture consists of a "RISC-like" core.
</li><li>
The Numerics architecture extends Core with floating-point.
</li><li>
The Protected architecture extends Numerics with paged memory management, Supervisor/User protection, string instructions,
process scheduling, interprocess communication for OS, and symmetric multiprocessing.
</li><li>
The Extended architecture extends Protected with object addressing/protection and interprocess communication for applications.
This architecture used an extra tag bit, so registers, the bus, and memory were 33 bits wide instead of 32.
</li></ul>

<p>These four versions were sold as the KA (Core), KB (Numerics), MC (Protected), and XA (Extended).
The KA chip cost $174 and the KB version cost $333 while MC was aimed at the military market and cost a whopping $2400.
The most advanced chip (XA) was, at first, kept proprietary for use by BiiN (discussed below), but was later sold to the military.
The military versions weren't secret, but it is very hard to find documentation on them.<span id="fnref:extended"><a href="#fn:extended">11</a></span></p>
<!-- https://www.google.com/books/edition/Circuit_Cellar_Ink/NoBVAAAAYAAJ?hl=en&gbpv=1&bsq=%22mc%22 -->

<!-- https://books.google.com/books?id=ADoEAAAAMBAJ&pg=PT43&dq=intel+%2280960%22&hl=en&sa=X&ved=2ahUKEwjIwIzbwab_AhWjSDABHUlEBS8Q6AF6BAgBEAI#v=onepage&q=intel%20%2280960%22&f=false -->

<p>The strangest thing about these four architectures is that the chips were <em>identical</em>, using the same die.
In other words, the simple Core chip included all the circuitry for floating point, memory management, and objects; these features just weren't used.<span id="fnref:features"><a href="#fn:features">12</a></span>
The die photo below shows the die, with the main functional
units labeled.
Around the edge of the die are the bond pads that connect the die to the external pins.
Note that the right half of the chip has almost no bond pads. As a result, the packaged IC had many unused pins.<span id="fnref:no-connection"><a href="#fn:no-connection">13</a></span></p>
<p><a href="https://static.righto.com/images/960-overview/80960MC-labeled.jpg"><img alt="The i960 KA/KB/MC/XA with the main functional blocks labeled. Click this image (or any other) for a larger version. Die image courtesy of Antoine Bercovici.  Floorplan from The 80960 microprocessor architecture." height="603" src="https://static.righto.com/images/960-overview/80960MC-labeled-w600.jpg" title="The i960 KA/KB/MC/XA with the main functional blocks labeled. Click this image (or any other) for a larger version. Die image courtesy of Antoine Bercovici.  Floorplan from The 80960 microprocessor architecture." width="600"></a></p><p>The i960 KA/KB/MC/XA with the main functional blocks labeled. Click this image (or any other) for a larger version. Die image courtesy of Antoine Bercovici.  Floorplan from <a href="https://archive.org/details/80960microproces0000myer/page/15/mode/1up">The 80960 microprocessor architecture</a>.</p>
<p>One advanced feature of the i960 is register scoreboarding, visible in the upper-left corner of the die.
The idea is that loading a register from memory is slow, so to improve performance, the processor executes the following instructions
while the load completes, rather than waiting.
Of course, an instruction can't be executed if it uses a register that is being loaded, since the value isn't there.
The solution is a "scoreboard" that tracks which registers are valid and which are still being loaded, and blocks an instruction
if the register isn't ready.
The i960 could handle up to three outstanding reads, providing a significant performance gain.</p>
<p>The most complex i960 architecture is the Extended architecture, which provides the object-oriented system.
This architecture is designed around an unforgeable pointer called an Access Descriptor that provides protected access to
an object.
What makes the pointer unforgeable is that it is 33 bits long with an extra bit that indicates an Access Descriptor.
You can't set this bit with a regular 32-bit instruction. Instead, an Access Descriptor can only be created with a special
privileged instruction, "Create AD".<span id="fnref:objects-432"><a href="#fn:objects-432">14</a></span></p>
<p><a href="https://static.righto.com/images/960-overview/object-diagram.jpg"><img alt="An Access Descriptor is a pointer to an object table. From BiiN Object Computing." height="249" src="https://static.righto.com/images/960-overview/object-diagram-w550.jpg" title="An Access Descriptor is a pointer to an object table. From BiiN Object Computing." width="550"></a></p>
<p>The diagram above shows how objects work.
The 33-bit Access Descriptor (AD) has its tag bit set to 1, indicating that it is a valid Access Descriptor.
The Rights field controls what actions can be performed by this object reference.
The AD's Object Index references the Object Table that holds information about each object.
In particular, the Base Address and Size define the object's location in memory and ensure that an access cannot exceed
the bounds of the object.
The Type Definition defines the various operations that can be performed on the object.
Since this is all implemented by the processor at the instruction level, it provides strict security.</p>
<h2>Gemini and BiiN</h2>
<p>The i960 was heavily influenced by a partnership called Gemini and then BiiN.
In 1983, near the start of the i960 project, Intel formed a partnership with Siemens to build high-performance fault-tolerant servers.
In this partnership, Intel would provide the hardware while Siemens developed the software.
This partnership allowed Intel to move beyond the chip market to the potentially-lucrative systems market, while adding powerful systems to
Siemens' product line.
The Gemini team contained many of the people from the 432 project and wanted to continue the 432's architecture.
Gemini worked closely with the developers of the i960 to ensure the new processor would meet their needs; both teams worked
in the same building at Intel's Jones Farm site in Oregon.</p>
<p><a href="https://static.righto.com/images/960-overview/biin60.jpg"><img alt="The BiiN 60 system. From BiiN 60 Technical Overview." height="440" src="https://static.righto.com/images/960-overview/biin60-w400.jpg" title="The BiiN 60 system. From BiiN 60 Technical Overview." width="400"></a></p>
<p>In 1988, shortly after the announcement of the i960 chips, the Intel/Siemens partnership was spun off into a company called BiiN.<span id="fnref:biin"><a href="#fn:biin">15</a></span>
BiiN announced two high-performance, fault-tolerant, multiprocessor systems.
These systems used the i960 XA processor<span id="fnref:xa"><a href="#fn:xa">16</a></span> and took full advantage of the object-oriented model
and other features provided by its Extended architecture.
The <a href="https://books.google.com/books?id=pDsEAAAAMBAJ&amp;pg=PA35">BiiN 20</a> was designed for departmental computing and cost $43,000 to $80,000. It supported 50 users (connected by terminals) on one 5.5-MIPS i960 processor.
The larger BiiN 60 handled up to 1000 terminals and cost $345,000 to $815,000.
The Unix-compatible BiiN operating system (BiiN/OS) and utilities were written in 2 million lines of Ada code.</p>
<p>BiiN described many <a href="https://books.google.com/books?id=pFcxi38ScwAC&amp;pg=PP10">potential markets</a> for these systems: government, factory automation, financial services, on-line transaction processing,
manufacturing, and health care.
Unfortunately, as <a href="https://www.cs.drexel.edu/~jjohnson/2012-13/fall/cs281/resources/Embedded_Processors_(ExtremeTech).pdf">ExtremeTech put it</a>, "the market for fault-tolerant Unix workstations was approximately nil."
BiiN was shut down in 1989, just 15 months after its creation as profitability kept becoming more distant.
BiiN earned the nickname "Billions invested in Nothing"; the actual investment was 1700 person-years and $430 million.</p>
<!-- https://www.google.com/books/edition/Entrepreneurship_and_Innovation_in_Secon/OgUJJPuDvfQC?hl=en&gbpv=1&bsq=960 -->

<!--
![The BiiN 20 system. From <a href="https://archive.org/details/bub_gb_pDsEAAAAMBAJ_2/page/n33/mode/2up">InfoWorld</a>.](biin20.jpg "w300")
-->

<!-- BiiN is discussed in detail in https://ieeexplore.ieee.org/document/63665 -->

<!--
![The process control block. From <a href="http://www.bitsavers.org/components/intel/i960/271081-001_80960MC_Programmers_Reference_Manual_Jul88.pdf">80960MC Programmer's Reference Manual</a>.](process-control-block.jpg "w400")
-->

<!--
You might argue that these instructions are essentially subroutines in ROM, built up from RISC instructions.
For the most part, that's true.
However, the process scheduling operations are tied into an internal processor timer, so there is some hardware support.
-->

<!--
[PC Magazine](https://books.google.com/books?id=oabZ_SN3dxEC&pg=PA51&hl=en&sa=X&ved=2ahUKEwjE5Zf31cb-AhUMkYkEHZt2C_wQ6AF6BAgBEAI#v=onepage&q&f=false)
states that the 386 team moved to the i960 after the 386 project (so presumably around 1985).
Wikipedia [states](https://en.wikipedia.org/wiki/Intel_i960#End_of_development) that the i960 team was moved to the Pentium Pro
team in 1990.
Glenn Hinton i960CA then Pentium Pro senior architect. https://www.anandtech.com/show/16438/new-intel-ceo-making-waves-rehiring-retired-cpu-architects
Gurbir Singh and Nitin Sarangdhar designed the i960 bus and moved to Pentium Pro team.
-->

<h2>The superscalar i960 CA</h2>
<p>One year after the first i960, Intel released the groundbreaking i960 CA.
This chip was the world's first superscalar microprocessor, able to execute more than one instruction per clock cycle.
The chip had three execution units that could operate in parallel:
an integer execution unit, a multiply/divide unit, and an address generation unit that could also do integer arithmetic.<span id="fnref:ca"><a href="#fn:ca">17</a></span>
To keep the execution units busy, the i960 CA's instruction sequencer examined four instructions at once and determined which ones could be issued in parallel without
conflict.
It could issue two instructions and a branch each clock cycle, using branch prediction to speculatively execute branches out of order.</p>
<p><a href="https://static.righto.com/images/960-overview/80960CA-labeled.jpg"><img alt="The i960 CA die, with functional blocks labeled. Photo courtesy of Antoine Bercovici. Functional blocks from the datasheet." height="457" src="https://static.righto.com/images/960-overview/80960CA-labeled-w700.jpg" title="The i960 CA die, with functional blocks labeled. Photo courtesy of Antoine Bercovici. Functional blocks from the datasheet." width="700"></a></p><p>The i960 CA die, with functional blocks labeled. Photo courtesy of Antoine Bercovici. Functional blocks from <a href="http://datasheets.chipdb.org/Intel/80960/PRODBREF/272211_3.PDF">the datasheet</a>.</p>
<p>Following the CA, several other superscalar variants were produced:
the CF had more cache, the military MM implemented the Protected architecture (memory management and a floating point unit),
and the military MX implemented the Extended architecture (object-oriented).</p>
<p>The image below shows the 960 MX die with the main functional blocks labeled.
(I think the MM and MX used the same die but I'm not sure.<span id="fnref:mm"><a href="#fn:mm">18</a></span>)
Like the i960 CA, this chip has multiple functional units that can be operated in parallel for its superscalar execution.
Note the wide buses between various blocks, allowing high internal bandwidth.
The die was too large for the optical projection of the mask, with the result that the corners of the circuitry needed to be rounded off.</p>
<p><a href="https://static.righto.com/images/960-overview/die-labeled.jpg"><img alt="The i960MX die with the main functional blocks labeled. This is a die photo I took, with labels based on my reverse engineering." height="699" src="https://static.righto.com/images/960-overview/die-labeled-w600.jpg" title="The i960MX die with the main functional blocks labeled. This is a die photo I took, with labels based on my reverse engineering." width="600"></a></p><p>The i960MX die with the main functional blocks labeled. This is a die photo I took, with labels based on my reverse engineering.</p>
<p>The block diagram of the i960 MX shows the complexity of the chip and how it is designed for parallelism.
The register file is the heart of the chip. It is multi-ported so up to 6 registers can be accessed at the same time.
Note the multiple, 256-bit wide buses between the register file and the various functional units.
The chip has two buses: a high-bandwidth Backside Bus between the chip and its external cache and private memory;
and a New Local Bus, which runs at half the speed and connects the chip to main memory and I/O.
For highest performance, the chip's software would access its private memory over the high-speed bus, while using the
slower bus for I/O and shared memory accesses.</p>
<p><a href="https://static.righto.com/images/960-overview/960mx-block-diagram.jpg"><img alt="A functional block diagram of the i960 MX. From Intel Military and Special Projects Handbook, 1993." height="405" src="https://static.righto.com/images/960-overview/960mx-block-diagram-w700.jpg" title="A functional block diagram of the i960 MX. From Intel Military and Special Projects Handbook, 1993." width="700"></a></p><p>A functional block diagram of the i960 MX. From Intel Military and Special Projects Handbook, 1993.</p>
<h2>Military use and the JIAWG standard</h2>
<p>The i960 had a special role in the US military.
In 1987 the military <a href="https://people.cs.kuleuven.be/~dirk.craeynest/ada-belgium/archive/ase/ase02_01/docs/pol_hist/policy/3405-1.txt">mandated</a> the use of Ada as the single, common computer programming language for Defense computer resources in most cases.<span id="fnref:ada"><a href="#fn:ada">19</a></span>
In 1989, the military created the JIAWG standard, which selected two 32-bit instruction set architectures for military avionics.
These architectures were the i960's Extended architecture (implemented by the i960 XA) and the MIPS architecture (based on a RISC project at Stanford).<span id="fnref:standard"><a href="#fn:standard">20</a></span>
The superscalar i960 MX processor described earlier soon became a popular JIAWG-compliant processor, since it had higher performance than the XA.</p>
<!-- Ada seems destined to become the dominant programming language of the 1980s. -->
<!-- https://www.computer.org/csdl/magazine/co/1981/06/01667393/13rRUB7a13Y -->

<!--
I should point out that you didn't need to use an Extended architecture chip to run Ada; there were Ada compilers
available for all the i960 processors, although without the hardware enforcement that the Extended architecture processors provided.
-->
<!-- http://intel-vintage-developer.eu5.org/DESIGN/I960/DEVTOOLS/I960.HTM -->

<p>Hughes designed a modular avionics processor that used the i960 XA and later the MX.
A dense module called the HAC-32 contained two i960 MX processors, 2 MB of RAM, and an I/O controller in a 2"×4" multi-chip module, slightly bigger than a credit card.
This module had bare dies bonded to the substrate, maximizing the density.
In the photo below, the two largest dies are the i960 MX while the numerous gray rectangles are memory chips.
This module was used in F-22's Common Integrated Processor, the RAH-66 Comanche helicopter (which was canceled), the F/A-18's Stores Management Processor
(the computer that controls attached weapons), and the AN/ALR-67 radar computer.</p>
<p><a href="https://static.righto.com/images/960-overview/hughes.jpg"><img alt="The Hughes HAC-32. From Avionics Systems Design." height="413" src="https://static.righto.com/images/960-overview/hughes-w600.jpg" title="The Hughes HAC-32. From Avionics Systems Design." width="600"></a></p>
<p>The military market is difficult due to the long timelines of military projects, unpredictable volumes, and the risk
of cancellations.
In the case of the F-22 fighter plane, the project started in 1985 when the Air Force sent out proposals for a new Advanced Tactical Fighter.
Lockheed built a YF-22 prototype, first flying it in 1990.
The Air Force selected the YF-22 over the competing YF-23 in 1991 and the project moved to full-scale development.
During this time, at least three generations of processors became obsolete.
In particular, the i960MX was out of production by the time the F-22 first flew in <a href="https://www.militaryaerospace.com/computers/article/16710716/f22-avionics-designers-rely-on-obsolescent-electronics-but-plan-for-future-upgrades">1997</a>.
At one point, the military had to pay Intel $22 million to restart the i960 production line.
In 2001, the Air Force started a switch to the PowerPC processor, and finally the plane entered military service in 2005.
The F-22 illustrates how the fast-paced obsolescence of processors is a big problem for decades-long military projects.</p>
<!--
The i960 production line was permanently [shut down](https://www.gao.gov/assets/gao-04-391.pdf) in January 2004 after the Air Force made its last purchase of 820 chips.
-->

<p><a href="https://static.righto.com/images/960-overview/cip.jpg"><img alt="The Common Integrated Processor for the F-22, presumably with i960 MX chips inside. It is the equivalent of two Cray supercomputers and was the world's most advanced, high-speed computer system for a fighter aircraft. Source: NARA/Hughes Aircraft Co./T.W. Goosman." height="325" src="https://static.righto.com/images/960-overview/cip-w500.jpg" title="The Common Integrated Processor for the F-22, presumably with i960 MX chips inside. It is the equivalent of two Cray supercomputers and was the world's most advanced, high-speed computer system for a fighter aircraft. Source: NARA/Hughes Aircraft Co./T.W. Goosman." width="500"></a></p><p>The Common Integrated Processor for the F-22, presumably with i960 MX chips inside. It is the equivalent of two Cray supercomputers and was the world's most advanced, high-speed computer system for a fighter aircraft. Source: <a href="https://nara.getarchive.net/media/a-close-up-view-of-the-common-integrated-processor-which-was-developed-for-704456">NARA/Hughes Aircraft Co./T.W. Goosman</a>.</p>
<p>Intel charged thousands of dollars for each i960 MX and each F-22 contained a cluster of 35 i960 MX processors, so the military
market was potentially lucrative. The Air Force originally planned to buy 750 planes, but cut this down to just 187, which must
have been a blow to Intel.
As for the Comanche helicopter, the Army planned to buy 1200 of them, but the program was canceled entirely after building two prototypes.
The point is that the military market is risky and low volume even in the best circumstances.<span id="fnref:tredennick"><a href="#fn:tredennick">21</a></span>
In 1998, Intel decided to <a href="https://www.militaryaerospace.com/computers/article/16710194/intel-set-to-quit-military-business">leave</a> the military business entirely, joining AMD and Motorola.</p>
<!--
The i960 MX was also used in the [MLRS rocket system](https://apps.dtic.mil/sti/pdfs/ADA295248.pdf) while its [ATACMS missile](https://archive.org/details/DTIC_ADA298330/page/n272/mode/1up) used
dual i960s.
-->

<p>Foreign militaries also made use of the i960. In 2008 a businessman was sentenced to <a href="https://www.justice.gov/archive/opa/pr/2008/June/08-ag-540.html">35 months in prison</a> for illegally exporting hundreds of i960 chips into India for use in the radar for the Tejas Light Combat Aircraft.</p>
<!-- http://archive.indianexpress.com/news/exhal-staffer-pleads-guilty-in-us-to-illegal-exports-for-indian-missile-programme/284734/0 -->
<!-- https://www.globalsecurity.org/military/world/india/lca-design.htm -->

<h2>i960: the later years</h2>
<p>By 1990, the i960 was selling well, but the landscape at Intel had changed.
The 386 processor was enormously successful, due to the Compaq Deskpro 386 and other systems, leading to Intel's first
billion-dollar quarter.
The 8086 had started as a stopgap processor to fill a temporary marketing need, but
now the x86 was Intel's moneymaking engine.
As part of a reorganization, the i960 project was transferred to Chandler, Arizona.
Much of the i960 team in Oregon moved to the newly-formed Pentium Pro team, while others ended up on the 486 DX2 processor.
This wasn't the end of the i960, but the intensity had reduced.</p>
<p>To reduce system cost, Intel produced versions of the i960 that had a 16-bit bus, although the processor was 32 bits internally.
(This is the same approach that Intel used with the 8088 processor, a version of the 8086 processor with an 8-bit bus instead
of 16.)
The i960 SB had the "Numerics" architecture, that is, with a floating-point unit.
Looking at the die below, we can see that the SB design is rather "lazy", simply the previous die (KA/KB/MC/XA) with a thin layer of circuitry around
the border to implement the 16-bit bus.
Even though the SB didn't support memory management or objects, Intel didn't remove that circuitry.
The process was reportedly moved from 1.5 microns to 1 micron, shrinking the die to 270 mils square.</p>
<!-- "Intel adds low-end, high-end 960 processors" from Microprocessor Reports -->

<p><a href="https://static.righto.com/images/960-overview/960SB.jpg"><img alt="Comparison of the original i960 die and the i960 SB. Photos courtesy of Antoine Bercovici." height="391" src="https://static.righto.com/images/960-overview/960SB-w700.jpg" title="Comparison of the original i960 die and the i960 SB. Photos courtesy of Antoine Bercovici." width="700"></a></p><p>Comparison of the original i960 die and the i960 SB. Photos courtesy of Antoine Bercovici.</p>
<p>The next chip, the i960 SA, was the 16-bit-bus "Core" architecture, without floating point.
The SA was based on the SB but Intel finally removed unused functionality from the die, making the die about 24% smaller.
The diagram below shows how the address translation, translation lookaside buffer, and floating point unit were removed,
along with much of the microcode (yellow).
The instruction cache tags (purple), registers (orange), and execution unit (green) were moved to fit into the
available space.
The left half of the chip remained unchanged.
The driver circuitry around the edges of the chip was also tightened up, saving a bit of space.</p>
<p><a href="https://static.righto.com/images/960-overview/SB-SA.jpg"><img alt="This diagram compares the SB and SA chips. Photos courtesy of Antoine Bercovici." height="383" src="https://static.righto.com/images/960-overview/SB-SA-w700.jpg" title="This diagram compares the SB and SA chips. Photos courtesy of Antoine Bercovici." width="700"></a></p><p>This diagram compares the SB and SA chips. Photos courtesy of Antoine Bercovici.</p>
<p>Intel introduced the high-performance Hx family around 1994.
This family was superscalar like the CA/CF, but the Hx chips also had a faster clock, had much more cache, and included additional functionality such
as timers and a guarded memory unit.
The Jx family was introduced as the midrange, cost-effective line, faster and better than the original chips but not superscalar like the Hx.
Intel attempted to move the i960 into the I/O controller market with the Rx family and the VH.<span id="fnref:vh"><a href="#fn:vh">23</a></span>
This was part of Intel's Intelligent Input/Output specification (I2O), which was a failure overall.</p>
<p>For a while, the i960 was a big success in the marketplace and was used in many products. Laser printers and graphical terminals were key applications, both taking
advantage of the i960's high speed to move pixels.
The i960 was the world's best-selling RISC chip in <a href="https://www.intc.com/filings-reports/all-sec-filings/content/0000050863-95-000004/10-K.txt">1994</a>.
However, without focused development, the performance of the i960 fell behind the competition, and its market share rapidly dropped.</p>
<p><a href="https://static.righto.com/images/960-overview/market-share.jpg"><img alt="Market share of embedded RISC processors. From ExtremeTech." height="211" src="https://static.righto.com/images/960-overview/market-share-w350.jpg" title="Market share of embedded RISC processors. From ExtremeTech." width="350"></a></p><p>Market share of embedded RISC processors. From <a href="https://www.cs.drexel.edu/~jjohnson/2012-13/fall/cs281/resources/Embedded_Processors_(ExtremeTech).pdf">ExtremeTech</a>.</p>
<p>By the late 1990s, the i960 was described with terms such as "aging", "venerable", and "medieval".
In 1999, <a href="https://websrv.cecs.uci.edu/~papers/mpr/MPR/19990510/130601.pdf">Microprocessor Report</a> described the situation:
"The i960
survived on cast-off semiconductor processes two to three
generations old; the i960CA is still built in a 1.0-micron process (perhaps by little old ladies with X-Acto knives)."<span id="fnref:rubylith"><a href="#fn:rubylith">22</a></span></p>
<p>One of the strongest competitors was DEC's powerful StrongARM processor design, a descendant of the ARM chip.
Even Intel's top-of-the-line i960HT
<a href="https://websrv.cecs.uci.edu/~papers/mpr/MPR/ARTICLES/100201.pdf">fared pitifully</a>
against the StrongARM, with worse cost, performance, and power consumption.
In 1997, DEC sued Intel, claiming that the Pentium infringed ten of DEC's patents.
As part of the complex but mutually-beneficial <a href="https://www.nytimes.com/1997/10/28/business/intel-and-digital-settle-lawsuit-and-make-deal.html">1997 settlement</a>, Intel obtained rights to the StrongARM chip.
As Intel turned its embedded focus from i960 to StrongARM,
<a href="https://techmonitor.ai/technology/intel_speeds_up_the_i960_chip_by_adding_more_cache">one writer</a> wrote, "Things are looking somewhat bleak for Intel Corp's ten-year-old i960 processor."
The i960 limped on for another decade until
Intel officially <a href="https://www.theregister.com/2006/05/18/intel_cans_386_486_960_cpus/">ended production</a> in 2007.</p>
<!--
Ironically, the i960 outlasted the StrongARM, which Intel [abandoned](https://www.infoworld.com/article/2678798/intel-puts-strongarm-on-death-row.html) in 2004 for the follow-on XScale architecture.

-->

<!--
    [Fred Pollack](https://ieeexplore.ieee.org/author/37724570200), manager of the i960 architecture, became architecture
    manager of the Pentium Pro in 1990.
    Glenn Hinton, who led the superscalar i960 CA design, moved to the Pentium Pro team.
    Gurbir Singh and Nitin Sarangdhar, who designed the i960 bus, also moved to Pentium Pro team.
    Randy Steck, who (I think) designed the i960 MM, became project leader for the Pentium Pro.
    Bob Bentley moved from validation manager of the i960 to Director of pre-silicon validation for the Pentium Pro in 1992.
    The 486DX2 team was formed from engineeres from the i960 according to the book [Entrepreneurship and Innovation in Second Tier Regions](https://www.google.com/books/edition/Entrepreneurship_and_Innovation_in_Secon/OgUJJPuDvfQC?hl=en&gbpv=1&pg=PA102&printsec=frontcover).
    -->

<!--
The i960 didn't end at that point of course; new engineers were brought in create the Hx and Hx processors, such as
Richard Brunner who joined Intel from DEC in 1992.
-->
<!-- https://www.linkedin.com/in/randy-steck-430821/details/experience/ -->

<h2>RISC or CISC?</h2>
<p>The i960 challenges the definitions of RISC and CISC processors.<span id="fnref:risc"><a href="#fn:risc">24</a></span>
It is generally considered a RISC processor, but its architect
says "RISC techniques were used for high performance, CISC techniques for ease of use."<span id="fnref:upr"><a href="#fn:upr">25</a></span>
John Mashey of MIPS described it as on the RISC/CISC border<span id="fnref:mashey"><a href="#fn:mashey">26</a></span>
while Steve Furber (co-creator of ARM) <a href="https://amzn.to/3JyCoix">wrote</a> that it "includes many RISC ideas, but it is not a simple chip" with "many
complex instructions which make recourse to microcode" and a design that "is more reminiscent of a complex,
mainframe architecture than a simple, pipelined RISC."
And they were talking about the i960 KB with the simple Numerics architecture, not the complicated Extended architecture!</p>
<p>Even the basic Core architecture has many non-RISC-like features.
It has microcoded instructions that take multiple cycles (such as integer multiplication),
numerous addressing modes<span id="fnref:addressing"><a href="#fn:addressing">27</a></span>, and unnecessary instructions (e.g. AND NOT as well as NOT AND).
It also has a large variety of datatypes, even more than the 432:
integer (8, 16, 32, or 64 bit), ordinal (8, 16, 32, or 64 bit),
decimal digits, bit fields, triple-word (96 bits), and quad-word (128 bits).
The Numerics architecture adds floating-point reals (32, 64, or 80 bit) while the Protected architecture adds byte strings
with decidedly CISC-like instructions to act on them.<span id="fnref:string"><a href="#fn:string">28</a></span></p>
<p>When you get to the Extended architecture with objects, process management, and interprocess communication instructions, the
large instruction set seems obviously CISC.<span id="fnref:instruction-set"><a href="#fn:instruction-set">29</a></span> (The instruction set is essentially the same as 432 and the 432 is an extremely CISC processor.)
You could argue that the i960 Core architecture is RISC and the Extended architecture is CISC, but the problem is that they are identical chips.</p>
<p>Of course, it doesn't really matter if the i960 is considered RISC, CISC, or CISC instructions running on a RISC core.
But the i960 shows that RISC and CISC aren't as straightforward as they might seem.</p>
<h2>Summary</h2>
<p>The i960 chips can be confusing since there are four architectures, along with scalar vs. superscalar, and multiple families over time.
I've made the table below to summarize the i960 family and the approximate dates.
The upper entries are the scalar families while the lower entries are superscalar.
The columns indicate the four architectural variants; although the i960 started with four variants, eventually Intel
focused on only the Core.
Note that each "x" family represents multiple chips.</p>


<table>
<tbody><tr><th>Core</th><th>Numerics</th><th>Protected</th><th>Extended</th><th></th></tr>
<tr><td>KA</td><td>KB</td><td>MC</td><td>XA</td><td>Original (1988)</td></tr>
<tr><td>SA</td><td>SB</td><td>&nbsp;</td><td>&nbsp;</td><td>Entry level, 16-bit data bus (1991)</td></tr>
<tr><td>Jx</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>Midrange (1993-1998)</td></tr>
<tr><td>Rx,VH</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>I/O interface (1995-2001)</td></tr>
<tr><td>CA,CF</td><td>&nbsp;</td><td>MM</td><td>MX</td><td>Superscalar (1989-1992)</td></tr>
<tr><td>Hx</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>Superscalar, higher performance (1994)</td></tr>
</tbody></table>

<!--
I should point out that the Berkeley RISC paper considers one justification for an instruction to be that it is "unsynthesizable",
that you can't replace it with multiple simpler instructions
This condition is met by the instructions for unforgeable object pointers, since they need to be implemented by the
processor. (That is, the instructions are needed for security and can't be replaced by other instructions, just like
a Supervisor Call instruction.)
Thus, you could argue that these instructions satisfy the RISC philosophy.
The Berkeley RISC paper also "allows" instructions that provide a strong performance benefit such as floating point,
although putting floating point in a RISC chip was controversial with many people.
-->

<p>Although the i960 is now mostly forgotten, it was an innovative processor for the time.
The first generation was Intel's first RISC chip, but pushed the boundary of RISC with many CISC-like features.
The i960 XA literally set the standard for military computing, selected by the JIAWG as the military's architecture.
The i960 CA provided a performance breakthrough with its superscalar architecture.
But Moore's Law means that competitors can rapidly overtake a chip, and the i960 ended up as history.</p>
<p>Thanks to Glen Myers, Kevin Kahn, Steven McGeady, and others from Intel for answering my questions about the i960.
I plan to write more, so
follow me on Twitter <a href="https://twitter.com/kenshirriff">@kenshirriff</a> or <a href="http://www.righto.com/feeds/posts/default">RSS</a> for updates.
I've also started experimenting with Mastodon recently as <a href="https://oldbytes.space/@kenshirriff">@<span data-cfemail="8de6e8e3fee5e4ffffe4ebebcde2e1e9eff4f9e8fea3fefdeceee8">[email&nbsp;protected]</span></a>
and Bluesky as <a href="https://staging.bsky.app/profile/righto.com">@righto.com</a> so you can follow me there too.</p>
<h2>Notes and references</h2>


</div></div>]]></description>
        </item>
    </channel>
</rss>