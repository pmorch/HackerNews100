<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 04 Apr 2025 18:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Why does Britain feel so poor? (170 pts)]]></title>
            <link>https://martinrobbins.substack.com/p/von-6-why-does-britain-feel-so-poor</link>
            <guid>43581672</guid>
            <pubDate>Fri, 04 Apr 2025 12:59:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://martinrobbins.substack.com/p/von-6-why-does-britain-feel-so-poor">https://martinrobbins.substack.com/p/von-6-why-does-britain-feel-so-poor</a>, See on <a href="https://news.ycombinator.com/item?id=43581672">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><span>Britain is a rich country with the world’s 6th largest economy and the highest tax income for decades, which raises a simple question - why do we seem so broke? Tom Calver, Data Editor at The Times, </span><a href="https://x.com/TomHCalver/status/1903752785012682961" rel="">tackled the question last week</a><span>. The big picture is pretty simple: we have a huge debt burden sucking over £100bn out of the budget every year (more than the entire education budget and nearly double the defence budget); and that would be okay-ish if the economy were growing, but it’s not. </span></p><p>That creates what Calver calls, in the kind of obscure jargon popular among data nerds, “a uniquely shit set of circumstances for the government.” It also raises the next question: why aren’t we growing? The answer broadly comes down to two things.</p><p><span>First, we have the lowest rate of investment (public and private) in the G7, with some trailing off since Brexit.  There are many compelling examples of this, but a fun one was presented in </span><a href="https://bsky.app/profile/roadscholar.bsky.social/post/3lkxbjp2u7k2p" rel="">a thread by Michael Dnes</a><span> this week: it turns out that over two thirds of the growth in Britain’s motorway network since 2012 has come not from actually building new roads, but because the Ordnance Survey are more accurate at measuring them.  </span></p><p><span>Second, the public sector is getting less and less value for money. In statistical terms, “</span><a href="https://x.com/TomHCalver/status/1903752785012682961" rel="">productivity is about 9 per cent lower than it was in 2019</a><span>,” but we can see that viscerally in e.g. the state of the NHS, a near-£200bn black hole into which tens of billions of additional spending has been poured with </span><a href="https://ifs.org.uk/articles/there-really-nhs-productivity-crisis" rel="">sluggish improvement to show for it</a><span>. I’m in favour of increased defence spending, but even I have to admit that procurement right now is a disaster, and that without serious reform the extra cash could be spaffed up the wall on things like the </span><a href="https://james1940.substack.com/p/getting-ready-for-war?utm_source=publication-search" rel="">helicopter debacle recounted by James Holland</a><span>:</span></p><blockquote><p>The purchasing of new helicopters two-and-a-half years ago, for example, was halted at the last moment because the MOD suddenly decided some competition was needed. It wasn’t. Two – foreign - firms who subsequently tendered for the contract then pulled out at the last minute, wasting valuable time, money and effort, and presumably had entered the bid in the first place only to undermine that of the original British firm. The RAF still doesn’t have any of these new helicopters. </p></blockquote><p><span>What the government gets for the money it spends has been in decline for some time, and is often shockingly poor compared to other nations. HS2 is an </span><a href="https://www.samdumitriu.com/p/britains-infrastructure-is-too-expensive" rel="">order of magnitude more expensive</a><span> than high speed rail projects run by comparable European powers. The new nuclear power station at Hinckley Point C is coming in at </span><a href="https://www.samdumitriu.com/p/visiting-the-worlds-most-expensive" rel="">four times the cost of comparable projects elsewhere</a><span>. These two projects </span><em>alone</em><span> represent an overspend of perhaps £60-70bn versus our competitors, which is the equivalent of cutting a penny from the base rate of income tax… for over a </span><em>decade</em><span>. Obviously that’s a gross simplification - Hinckley Point C is in part privately financed - but it gives you some idea of the sheer </span><em>scale</em><span> of waste.</span></p><p>One reason for this is that parts of the British state are fundamentally misaligned with goals like ‘improving living standards’ or ‘increasing wealth’, whether that’s through hand-wringingly incompetent procurement processes, long-term failure to invest in the infrastructure and management required to support ‘moar frontline staff!!’, acute treasury brain, or endless cohorts of committees and quangos. </p><p><span>Speaking at a </span><a href="https://www.theguardian.com/uk-news/2024/nov/07/cost-of-shed-to-protect-bat-colony-near-hs2-has-topped-100m-chair-says" rel="">rail conference last year</a><span>, HS2 Chair Sir Jon Thompson said: “To build a railway between Euston and Curzon Street in Birmingham, I need 8,276 consents from other public bodies, planning, transport, the Environment Agency or Natural England. They don’t care whether parliament did or didn’t approve building a railway.”</span></p><p>Imagine for a moment the sheer human effort, the cost, the entire lives consumed by the gigantic national project of ticking each of those 8,276 checkboxes. It is absolutely correct that we have additional checks and balances, but this is an organically-grown system operating with no overall oversight or coherent strategy, spawning busy-work for thousands of people, much of it duplicated, unnecessary or redundant, much of it - like the infamous bat tunnel - having little provable benefit for things like environmental protection in the first place. </p><p><span>Indeed, improving things like the environment </span><em>is not the de facto goal of this system</em><span>, it is not what it was ‘designed’ or incentivised to accomplish. If it were, much of the money would be far better spent. I cannot stress this enough: this is not a battle between, say, infrastructure and the environment. It’s a battle between people who think we can do both, better; and people who seriously believe that a bat tunnel is the best way to spend £120m to support wildlife, a proposition for which no compelling evidence has ever been provided. </span></p><p><span>Meanwhile, local government </span><a href="https://martinrobbins.substack.com/p/the-death-of-a-playground" rel="">veers towards bankruptcy,</a><span> in large part because they’re mandated to write blank cheques for social care with no support or strategy from central government. Individual cases in Central Bedfordshire are now costing up to £750,000 per year, a quarter of the entire libraries and leisure budget and an amount that is rising rapidly with no apparent ceiling. As I wrote previously, “In a single year, residential care costs for children have increased by £2,000 per child… per </span><em>week</em><span>,” taking the </span><em>average</em><span> cost for a single case from ~£200,000 to ~£300,000 per child per year, again with little explanation as to where the money is going or how this is even possible. </span></p><p><span>Similarly, “school transport costs have increased by over 100% - from £9m to £20m - in just 4 years” - that’s driven by an unexplained rise in the number of SEND pupils eligible for support and it amounts to roughly the same as - deep breath - the transport, roads, parking, libraries, leisure, housing benefit, public protection and safety budgets </span><em>combined</em><span>. Central Bedfordshire Council is not an outlier here - collectively, </span><a href="https://www.theguardian.com/education/2025/mar/30/english-councils-send-debt-analysis" rel="">council overspends on SEND services are set to hit £2bn in the next year, risking further bankruptcies</a><span>. Again this is not about pitting children against libraries, but asking if we seriously believe we’re addressing either of these things well? </span></p><p>There’s a growing tendency for political commentators to talk about the need to raise taxes this year to fix failing public services, and I get it, I really do. Many of these entrenched problems require up-front capital investment to fix or reform broken systems. But they’re overlooking a major issue: to many voters this will sound bonkers given the endemic problems above; and no amount of ‘but actually other countries have a higher tax burden’ or ‘taxes are still lower than they were in the 70s’ is going to persuade them otherwise. </p><p><span>That’s before we consider an inconvenient truth about those nations with higher tax burdens - they fall more heavily on middle earners, because (‘eat the rich’ fantasies aside) you simply can’t get that much money without a broad base of people and businesses to provide it. </span><a href="https://ifs.org.uk/taxlab/taxlab-key-questions/how-do-uk-tax-revenues-compare-internationally" rel="">Per the Institute for Fiscal Studies</a><span> (my italics):</span></p><blockquote><p><span>If the UK were to adopt the income tax and [national insurance] rates of one of its higher-tax European neighbours, it would, in most cases and unsurprisingly, have higher tax rates and raise more revenue from both middle and high earners. </span><em>But the difference in the tax levied would be larger for the median worker than for one near the top of the distribution</em><span>. This is because </span><strong>average tax rates</strong><span> rise more quickly with income in the UK, and are already higher at the top relative to the median, than in most of the European countries that raise more revenue overall.</span></p></blockquote><p><span>Advocates of tax rises point out that actually, middle income families face lower taxes than in many other developed nations, and that’s absolute true, but it overlooks a glaring problem: housing costs. Britain’s houses are </span><a href="https://news.sky.com/story/uk-spends-more-on-housing-than-almost-any-other-developed-country-and-gets-the-least-value-from-it-too-13099925" rel="">cramped, ancient and in the wrong places</a><span> leaving workers with longer, more expensive commutes. And we get to pay more for the privilege, almost single-handedly reversing the relative wealth of </span><a href="https://www.theguardian.com/business/2025/jan/13/uk-low-middle-income-families-poorer-oecd-counterparts-study-western-europe" rel="">many British families</a><span> versus their European counterparts. It’s a cliché that every other policy problem in Britain resolves to a housing problem, but in this case punishing rents and mortgage payments are consuming a large percentage of the income that other countries would tax. </span></p><p><span>Asking this of middle income voters at a time when trust in </span><em>all</em><span> political parties is at historic lows and standards of living are being eroded is a recipe for outright militancy. </span></p><p><span>If anything is done on taxes, it </span><em>has</em><span> to be coupled with serious, once-in-a-generation reforms that stop the state from simply bleeding out the extra cash, and visibly improve the fabric of people’s lives. That means things like a total rethink of local government funding, a massive expansion of house building, ripping up procurement processes, far more radical reforms of planning, and an integrated strategy for social care. </span></p><p><span>Labour need to put forward an epoch-defining deal for the public to sign up to, not just incremental tweaks and budgetary fixes in response to whatever the OBR says this week. The current level of ambition, of </span><em>vision</em><span>, just doesn’t match up to the situation we’re in. </span></p><p>In short, it’s time for Starmer and Reeves to go big or go home. If they don’t they lose anyway, so go out in style. To quote Jack London: “I shall not waste my days in trying to prolong them. I shall use my time.”</p><p><span>Another plug for my new podcast with </span></p><p><span>. This week: the Lower Thames Crossing, affordable housing, and an interview with Joe Hill, policy director at the Reform think-tank, on “Everythingism”. Also I go on an unsolicited rant about Maidenhead NIMBYs. </span></p><p>Ben Ansell has a fascinating essay on what he calls ‘chaos chasers’. In a nutshell, “people whose lives are easy and vote for disruptive populism on the assumption it won’t change anything about their lives. These people believe in FADFO - Fuck Around, Don’t Find Out.”</p><p>Ben’s post largely looked at voters in the context of populism, but I think this applies neatly to other areas so I left a comment, which I’ve reproduced (lightly edited) below: </p><blockquote><p>This is fascinating and I think it applies strongly in the activist space as well. The term I've always used for it is 'escalators' - people or organisations who, given a crisis, will always try to increase the complexity or drama involved instead of breaking it down and working towards a solution. So with e.g. climate activism, you can see this in protest groups who wrap the whole thing up with ending capitalism, solving Gaza, minority rights and god knows what else, until there's a massive intractable knot of stuff that precludes any notion of actually fixing it.</p><p>It's almost like they *want* a gigantic omnicrisis because that's more exciting than just boring old climate change. So they go and scream at people on the M25 and it feels like that's... sort of the point, to go out and do chaotic, shouty, cathartic stuff without any risk that you might have to actually take responsibility for a real problem or fix it.</p><p>And inevitably the kinds of activists doing this are often time-rich, privileged types who are relatively insulated from the consequences, which is why I think the Just Stop Oil jail sentences were quite triggering for some of these groups - they were shocked that doing something illegal and disruptive might actually result in serious consequences. There's a sense of "yes but surely prison isn't for real people like me?"</p></blockquote><p>Not all activists, obviously, but a certain percentage do just seem to want the world to burn, and in my experience it’s usually the ones who are most comfortable in it.</p><p>Chris Spargo relaunched his YouTube channel this year with an epic series of videos on… I guess the best description I can come up with is ‘the fabric of British society’. He combines the production values of early Tom Scott (which is a complement, it’s still very personal and not overproduced) with a curiosity about the sorts of topics that quietly permeate our environment but rarely get discussed. </p><p>Why do so many supermarkets have clock towers? Why do we think cheese &amp; onion crisp packets should be green? And in the latest video, why is a mysterious symbol carved into thousands of walls and buildings across the UK? It’s addictive stuff. </p><div id="youtube2-sWxXyR4ifbk" data-attrs="{&quot;videoId&quot;:&quot;sWxXyR4ifbk&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/sWxXyR4ifbk?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p>Behind the Bastards has been one of my favourite podcasts for several years, and they have an absolute banger of a 4-part series on the Zizians, a cult-like offshoot of the Rationalist movement linked to a string of deaths in the United States. What makes the series particularly good is that it properly identifies the Rationalist traits that made it such a fertile breeding ground for this kind of group in the first place. </p><p>A few points stuck out to me. One is how so much of the discussion around AI and the singularity was monopolised by fringe characters with little experience of developing the technology or using it in real, practical environments, distorting public perceptions of the field. </p><p>Another is on the dangers of overthinking. A major problem smart people seem to have, which you see a lot in e.g. conspiracy theorists - is an inability to turn their brains off after a certain point. The real world is messy, and behind any truth you’ll find a web of open questions and contradictions. Think too hard, or too obsessively, and you’ll wind up on a doomed attempt to resolve all of them, plummeting down the rabbit hole until you land in a parody of thought. </p><p>The consequences can be highly disturbing, as Robert explores. It’s well worth a listen on whatever Podcast app you use, or on YouTube below. </p><div id="youtube2-9mJAerUL-7w" data-attrs="{&quot;videoId&quot;:&quot;9mJAerUL-7w&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/9mJAerUL-7w?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p><span>That’s all for this week, another essay coming Tuesday week (I’m on holiday next week). Until then, please don’t join any cults (except for our </span><a href="https://www.abundancepod.com/p/the-lower-thames-crossing-boomers-everythingism" rel="">podcast</a><span> obviously).</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Nvidia adds native Python support to CUDA (254 pts)]]></title>
            <link>https://thenewstack.io/nvidia-finally-adds-native-python-support-to-cuda/</link>
            <guid>43581584</guid>
            <pubDate>Fri, 04 Apr 2025 12:54:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thenewstack.io/nvidia-finally-adds-native-python-support-to-cuda/">https://thenewstack.io/nvidia-finally-adds-native-python-support-to-cuda/</a>, See on <a href="https://news.ycombinator.com/item?id=43581584">Hacker News</a></p>
Couldn't get https://thenewstack.io/nvidia-finally-adds-native-python-support-to-cuda/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Trump's Trade War Escalates as China Retaliates with 34% Tariffs (158 pts)]]></title>
            <link>https://www.nytimes.com/2025/04/04/business/china-trump-tariffs-retaliation.html</link>
            <guid>43580906</guid>
            <pubDate>Fri, 04 Apr 2025 11:50:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/04/04/business/china-trump-tariffs-retaliation.html">https://www.nytimes.com/2025/04/04/business/china-trump-tariffs-retaliation.html</a>, See on <a href="https://news.ycombinator.com/item?id=43580906">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/04/04/business/china-trump-tariffs-retaliation.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Bored of It (510 pts)]]></title>
            <link>https://paulrobertlloyd.com/2025/087/a1/bored/</link>
            <guid>43580449</guid>
            <pubDate>Fri, 04 Apr 2025 10:54:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://paulrobertlloyd.com/2025/087/a1/bored/">https://paulrobertlloyd.com/2025/087/a1/bored/</a>, See on <a href="https://news.ycombinator.com/item?id=43580449">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
    




<flow-content>
  <p>I’m bored of it.</p>
<p>The pervasive, all encompassing nature of it.</p>
<p>The inevitable, dehumanising consequence of it.</p>
<p>That there’s a ‘there’ there to it.</p>
<p>Rubbish in and rubbish out of it.</p>
<p>Nobody asked for it, and nobody wants it.</p>
<p>The best minds of my generation thinking about how to make people use it.</p>
<p>That you should just accept it.</p>
<p>A thousand no’s, but ‘yes’ when shareholders start clamouring for it.</p>
<p>Policy-makers pandering to it.</p>
<p>A decommissioned nuclear power station required to power it.</p>
<p>Not to mention millions of gallons of water required to cool it.</p>
<p>Every article glorifying it.</p>
<p>Every article vilifying it.</p>
<p>Every pub conversation winding up talking about it.</p>
<p>People incessantly telling you how <em>they</em> use it.</p>
<p>I feel dirty using it.</p>
<p>You know what I’m talking about, even though I’ve not mentioned it.</p>
<p>And that’s why I’m bored of it.</p>

</flow-content>


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gumroad is now open source (363 pts)]]></title>
            <link>https://github.com/antiwork/gumroad</link>
            <guid>43580103</guid>
            <pubDate>Fri, 04 Apr 2025 09:56:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/antiwork/gumroad">https://github.com/antiwork/gumroad</a>, See on <a href="https://news.ycombinator.com/item?id=43580103">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <themed-picture data-catalyst-inline="true"><picture>
    <source srcset="https://camo.githubusercontent.com/3a5cb2029c58e3895921810e1ed8be6a7ffa782ae61e94b118da9fd25408d60d/68747470733a2f2f7075626c69632d66696c65732e67756d726f61642e636f6d2f6c6f676f2f67756d726f61642d6461726b2e737667" media="(prefers-color-scheme: dark)" data-canonical-src="https://public-files.gumroad.com/logo/gumroad-dark.svg">
    <source srcset="https://camo.githubusercontent.com/869e8363f1e1d1b718953613a8eb9d2509e838b645a6b07ef4a4be5860191bbd/68747470733a2f2f7075626c69632d66696c65732e67756d726f61642e636f6d2f6c6f676f2f67756d726f61642e737667" media="(prefers-color-scheme: light)" data-canonical-src="https://public-files.gumroad.com/logo/gumroad.svg">
    <img src="https://camo.githubusercontent.com/869e8363f1e1d1b718953613a8eb9d2509e838b645a6b07ef4a4be5860191bbd/68747470733a2f2f7075626c69632d66696c65732e67756d726f61642e636f6d2f6c6f676f2f67756d726f61642e737667" height="100" alt="Gumroad logo" data-canonical-src="https://public-files.gumroad.com/logo/gumroad.svg">
  </picture></themed-picture>
</p>
<p dir="auto">
  <strong>Sell your stuff. See what sticks.</strong>
</p>
<p dir="auto">
  <a href="https://github.com/antiwork/gumroad/blob/main/LICENSE.md">License</a> •
  <a href="https://github.com/antiwork/gumroad/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a> •
  <a href="https://github.com/antiwork/gumroad/blob/main/CONTRIBUTING.md">Contributing</a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ul dir="auto">
<li><a href="#getting-started">Getting Started</a>
<ul dir="auto">
<li><a href="#prerequisites">Prerequisites</a></li>
<li><a href="#installation">Installation</a></li>
<li><a href="#configuration">Configuration</a></li>
<li><a href="#running-locally">Running Locally</a></li>
</ul>
</li>
<li><a href="#development">Development</a>
<ul dir="auto">
<li><a href="#logging-in">Logging in</a></li>
<li><a href="#resetting-elasticsearch-indices">Resetting Elasticsearch indices</a></li>
<li><a href="#push-notifications">Push Notifications</a></li>
<li><a href="#common-development-tasks">Common Development Tasks</a></li>
<li><a href="#linting">Linting</a></li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prerequisites</h3><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<p dir="auto">Before you begin, ensure you have the following installed:</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Ruby</h4><a id="user-content-ruby" aria-label="Permalink: Ruby" href="#ruby"></a></p>
<ul dir="auto">
<li><a href="https://www.ruby-lang.org/en/documentation/installation/" rel="nofollow">https://www.ruby-lang.org/en/documentation/installation/</a></li>
<li>Install the version listed in <a href="https://github.com/antiwork/gumroad/blob/main/.ruby-version">the .ruby-version file</a></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Node.js</h4><a id="user-content-nodejs" aria-label="Permalink: Node.js" href="#nodejs"></a></p>
<ul dir="auto">
<li><a href="https://nodejs.org/en/download" rel="nofollow">https://nodejs.org/en/download</a></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Docker &amp; Docker Compose</h4><a id="user-content-docker--docker-compose" aria-label="Permalink: Docker &amp; Docker Compose" href="#docker--docker-compose"></a></p>
<p dir="auto">We use <code>docker</code> and <code>docker compose</code> to setup the services for development environment.</p>
<ul dir="auto">
<li>For MacOS: Grab the docker mac installation from the <a href="https://www.docker.com/products/docker-desktop" rel="nofollow">Docker website</a></li>
<li>For Linux:</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="sudo wget -qO- https://get.docker.com/ | sh
sudo usermod -aG docker $(whoami)"><pre>sudo wget -qO- https://get.docker.com/ <span>|</span> sh
sudo usermod -aG docker <span><span>$(</span>whoami<span>)</span></span></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">MySQL &amp; Percona Toolkit</h4><a id="user-content-mysql--percona-toolkit" aria-label="Permalink: MySQL &amp; Percona Toolkit" href="#mysql--percona-toolkit"></a></p>
<p dir="auto">Install a local version of MySQL 8.0.x to match the version running in production.</p>
<p dir="auto">The local version of MySQL is a dependency of the Ruby <code>mysql2</code> gem. You do not need to start an instance of the MySQL service locally. The app will connect to a MySQL instance running in the Docker container.</p>
<ul dir="auto">
<li>For MacOS:</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="brew install mysql@8.0 percona-toolkit
brew link --force mysql@8.0

# to use Homebrew's `openssl`:
brew install openssl
bundle config --global build.mysql2 --with-opt-dir=&quot;$(brew --prefix openssl)&quot;

# ensure MySQL is not running as a service
brew services stop mysql@8.0"><pre>brew install mysql@8.0 percona-toolkit
brew link --force mysql@8.0

<span><span>#</span> to use Homebrew's `openssl`:</span>
brew install openssl
bundle config --global build.mysql2 --with-opt-dir=<span><span>"</span><span><span>$(</span>brew --prefix openssl<span>)</span></span><span>"</span></span>

<span><span>#</span> ensure MySQL is not running as a service</span>
brew services stop mysql@8.0</pre></div>
<ul dir="auto">
<li>For Linux:
<ul dir="auto">
<li>MySQL:
<ul dir="auto">
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/linux-installation.html" rel="nofollow">https://dev.mysql.com/doc/refman/8.0/en/linux-installation.html</a></li>
<li><code>apt install libmysqlclient-dev</code></li>
</ul>
</li>
<li>Percona Toolkit: <a href="https://www.percona.com/doc/percona-toolkit/LATEST/installation.html" rel="nofollow">https://www.percona.com/doc/percona-toolkit/LATEST/installation.html</a></li>
</ul>
</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Image Processing Libraries</h4><a id="user-content-image-processing-libraries" aria-label="Permalink: Image Processing Libraries" href="#image-processing-libraries"></a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">ImageMagick</h5><a id="user-content-imagemagick" aria-label="Permalink: ImageMagick" href="#imagemagick"></a></p>
<p dir="auto">We use <code>imagemagick</code> for preview editing.</p>
<ul dir="auto">
<li>For MacOS: <code>brew install imagemagick</code></li>
<li>For Linux: <code>sudo apt-get install imagemagick</code></li>
</ul>
<p dir="auto"><h5 tabindex="-1" dir="auto">libvips</h5><a id="user-content-libvips" aria-label="Permalink: libvips" href="#libvips"></a></p>
<p dir="auto">For newer image formats we use <code>libvips</code> for image processing with ActiveStorage.</p>
<ul dir="auto">
<li>For MacOS: <code>brew install libvips</code></li>
<li>For Linux: <code>sudo apt-get install libvips-dev</code></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">FFmpeg</h4><a id="user-content-ffmpeg" aria-label="Permalink: FFmpeg" href="#ffmpeg"></a></p>
<p dir="auto">We use <code>ffprobe</code> that comes with <code>FFmpeg</code> package to fetch metadata from video files.</p>
<ul dir="auto">
<li>For MacOS: <code>brew install ffmpeg</code></li>
<li>For Linux: <code>sudo apt-get install ffmpeg</code></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">PDFtk</h4><a id="user-content-pdftk" aria-label="Permalink: PDFtk" href="#pdftk"></a></p>
<p dir="auto">We use <a href="https://www.pdflabs.com/tools/pdftk-server/" rel="nofollow">pdftk</a> to stamp PDF files with the Gumroad logo and the buyers' emails.</p>
<ul dir="auto">
<li>For MacOS: Download from <a href="https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/pdftk_server-2.02-mac_osx-10.11-setup.pkg" rel="nofollow">here</a></li>
<li>For Linux: <code>sudo apt-get install pdftk</code></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installation</h3><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Bundler and gems</h4><a id="user-content-bundler-and-gems" aria-label="Permalink: Bundler and gems" href="#bundler-and-gems"></a></p>
<p dir="auto">We use Bundler to install Ruby gems.</p>

<p dir="auto">If you have a license for Sidekiq Pro, configure its credentials:</p>
<div dir="auto" data-snippet-clipboard-copy-content="bundle config gems.contribsys.com <key>"><pre>bundle config gems.contribsys.com <span>&lt;</span>key<span>&gt;</span></pre></div>
<p dir="auto">If you don't have a license for Sidekiq Pro, set the environment variable <code>GUMROAD_SIDEKIQ_PRO_DISABLED</code> in your shell:</p>
<div dir="auto" data-snippet-clipboard-copy-content="export GUMROAD_SIDEKIQ_PRO_DISABLED=true
echo &quot;export GUMROAD_SIDEKIQ_PRO_DISABLED=true&quot; >> ~/.bashrc"><pre><span>export</span> GUMROAD_SIDEKIQ_PRO_DISABLED=true
<span>echo</span> <span><span>"</span>export GUMROAD_SIDEKIQ_PRO_DISABLED=true<span>"</span></span> <span>&gt;&gt;</span> <span>~</span>/.bashrc</pre></div>
<p dir="auto">Run <code>bundle install</code> to install the necessary dependencies.</p>
<p dir="auto">Also make sure to install <code>dotenv</code> as it is required for some console commands:</p>

<p dir="auto"><h4 tabindex="-1" dir="auto">npm and Node.js dependencies</h4><a id="user-content-npm-and-nodejs-dependencies" aria-label="Permalink: npm and Node.js dependencies" href="#npm-and-nodejs-dependencies"></a></p>
<p dir="auto">Make sure the correct version of <code>npm</code> is enabled:</p>

<p dir="auto">Install dependencies:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Configuration</h3><a id="user-content-configuration" aria-label="Permalink: Configuration" href="#configuration"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Setup Custom credentials</h4><a id="user-content-setup-custom-credentials" aria-label="Permalink: Setup Custom credentials" href="#setup-custom-credentials"></a></p>
<p dir="auto">App can be booted without any custom credentials. But if you would like to use services that require custom credentials (e.g. S3, Stripe, Resend, etc.), you can copy the <code>.env.example</code> file to <code>.env</code> and fill in the values.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Local SSL Certificates</h4><a id="user-content-local-ssl-certificates" aria-label="Permalink: Local SSL Certificates" href="#local-ssl-certificates"></a></p>
<ol dir="auto">
<li>Install mkcert on macOS:</li>
</ol>

<p dir="auto">For other operating systems, see <a href="https://github.com/FiloSottile/mkcert?tab=readme-ov-file#installation">mkcert installation instructions</a>.</p>
<ol start="2" dir="auto">
<li>Generate certificates by running:</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="bin/generate_ssl_certificates"><pre>bin/generate_ssl_certificates</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running Locally</h3><a id="user-content-running-locally" aria-label="Permalink: Running Locally" href="#running-locally"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Start Docker services</h4><a id="user-content-start-docker-services" aria-label="Permalink: Start Docker services" href="#start-docker-services"></a></p>
<p dir="auto">If you installed Docker Desktop (on a Mac or Windows machine), you can run the following command to start the Docker services:</p>

<p dir="auto">If you are on Linux, or installed Docker via a package manager on a mac, you may have to manually give docker superuser access to open ports 80 and 443. To do that, use <code>sudo make local</code> instead.</p>
<p dir="auto">This command will not terminate. You run this in one tab and start the application in another tab.
If you want to run Docker services in the background, use <code>LOCAL_DETACHED=true make local</code> instead.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Setup the database</h4><a id="user-content-setup-the-database" aria-label="Permalink: Setup the database" href="#setup-the-database"></a></p>

<p dir="auto">For Linux (Debian / Ubuntu) you might need the following:</p>
<ul dir="auto">
<li><code>apt install libxslt-dev libxml2-dev</code></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Start the application</h4><a id="user-content-start-the-application" aria-label="Permalink: Start the application" href="#start-the-application"></a></p>

<p dir="auto">This starts the rails server, the javascript build system, and a Sidekiq worker.</p>
<p dir="auto">If you know what foreman does and you don't want to use it you can inspect the contents of the <code>Procfile.dev</code> file and run the required components individually.</p>
<p dir="auto">You can now access the application at <code>https://gumroad.dev</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development</h2><a id="user-content-development" aria-label="Permalink: Development" href="#development"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Logging in</h3><a id="user-content-logging-in" aria-label="Permalink: Logging in" href="#logging-in"></a></p>
<p dir="auto">You can log in with the username <code>seller@gumroad.com</code> and the password <code>password</code>. The two-factor authentication code is <code>000000</code>.</p>
<p dir="auto">Read more about logging in as a user with a different team role at <a href="https://github.com/antiwork/gumroad/blob/main/docs/users.md">Users &amp; authentication</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Resetting Elasticsearch indices</h3><a id="user-content-resetting-elasticsearch-indices" aria-label="Permalink: Resetting Elasticsearch indices" href="#resetting-elasticsearch-indices"></a></p>
<p dir="auto">You will need to explicitly reindex Elasticsearch to populate the indices after setup, otherwise you will see <code>index_not_found_exception</code> errors when you visit the dev application. You can reset them using:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Run this in a rails console:
DevTools.delete_all_indices_and_reindex_all"><pre><span># Run this in a rails console:</span>
<span>DevTools</span><span>.</span><span>delete_all_indices_and_reindex_all</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Push Notifications</h3><a id="user-content-push-notifications" aria-label="Permalink: Push Notifications" href="#push-notifications"></a></p>
<p dir="auto">To send push notifications:</p>
<div dir="auto" data-snippet-clipboard-copy-content="INITIALIZE_RPUSH_APPS=true bundle exec rpush start -e development -f"><pre>INITIALIZE_RPUSH_APPS=true bundle <span>exec</span> rpush start -e development -f</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Common Development Tasks</h3><a id="user-content-common-development-tasks" aria-label="Permalink: Common Development Tasks" href="#common-development-tasks"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Rails console:</h4><a id="user-content-rails-console" aria-label="Permalink: Rails console:" href="#rails-console"></a></p>

<p dir="auto"><h4 tabindex="-1" dir="auto">Rake tasks:</h4><a id="user-content-rake-tasks" aria-label="Permalink: Rake tasks:" href="#rake-tasks"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Linting</h3><a id="user-content-linting" aria-label="Permalink: Linting" href="#linting"></a></p>
<p dir="auto">We use ESLint for JS, and Rubocop for Ruby. Your editor should support displaying and fixing issues reported by these inline, and CI will automatically check and fix (if possible) these.</p>
<p dir="auto">If you'd like, you can run <code>git config --local core.hooksPath .githooks</code> to check for these locally when committing.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Doge staffer's YouTube nickname accidentally revealed his teen hacking activity (137 pts)]]></title>
            <link>https://arstechnica.com/tech-policy/2025/04/i-no-longer-hack-paypals-doge-staffers-hacker-past-raises-red-flags/</link>
            <guid>43579925</guid>
            <pubDate>Fri, 04 Apr 2025 09:22:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/tech-policy/2025/04/i-no-longer-hack-paypals-doge-staffers-hacker-past-raises-red-flags/">https://arstechnica.com/tech-policy/2025/04/i-no-longer-hack-paypals-doge-staffers-hacker-past-raises-red-flags/</a>, See on <a href="https://news.ycombinator.com/item?id=43579925">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                      
                      
          
<p>A SpaceX and X engineer, Christopher Stanley—currently serving as a senior advisor in the Deputy Attorney General's office at the Department of Justice (DOJ)—was reportedly caught bragging about hacking and distributing pirated e-books, bootleg software, and game cheats.</p>
<p>The boasts appeared on archived versions of websites, of which several, once flagged, were quickly deleted, Reuters <a href="ttps://www.reuters.com/technology/cybersecurity/doge-official-doj-bragged-about-hacking-distributing-pirated-software-2025-04-02/">reported</a>.</p>
<p>Stanley was assigned to the DOJ by Elon Musk's Department of Government Efficiency (DOGE). While Musk claims that DOGE operates transparently, not much is known about who the staffers are or what their government roles entail. It remains unclear what Stanley does at DOJ, but Reuters noted that the Deputy Attorney General’s office is in charge of investigations into various crimes, "including hacking and other malicious cyber activity." Declining to comment further, the DOJ did confirm that as a "special government employee," like Musk, Stanley does not draw a government salary.</p>
<p>The engineer's questionable past seemingly dates back to 2006, Reuters reported, when Stanley was still in high school. The news site connected Stanley to various sites and forums by tracing various pseudonyms he still uses, including Reneg4d3, a nickname he still uses on YouTube. The outlet then further verified the connection "by cross-referencing the sites’ registration data against his old email address and by matching Reneg4d3’s biographical data to Stanley’s."</p>
<p>Among his earliest sites was one featuring a "crude sketch of a penis" called fkn-pwnd.com, where Stanley, at 15, bragged about "fucking up servers," a now-deleted Internet Archive screenshot reportedly showed. Another, reneg4d3.com, was launched when he was 16. There, Stanley branded a competing messaging board "stupid noobs" after supposedly gaining admin access through an "easy exploit," Reuters reported. On Bluesky, an account called "doge whisperer" <a href="https://bsky.app/profile/dogginglover.bsky.social/post/3lid446df4224">alleges</a> even more hacking activity, some of which appears to be corroborated by an IA <a href="https://web.archive.org/web/20101207060144/http://www.electonic.net/forums/">screenshot</a> of another site Stanley created, electonic.net (sic), which as of this writing can still be accessed.</p>

          
                      
                  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Growing trade deficit is selling the nation out from under us (2003) [pdf] (143 pts)]]></title>
            <link>https://faculty.washington.edu/ss1110/IF/Buffett%20Fortune%202003%20(6).pdf</link>
            <guid>43579908</guid>
            <pubDate>Fri, 04 Apr 2025 09:20:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://faculty.washington.edu/ss1110/IF/Buffett%20Fortune%202003%20(6).pdf">https://faculty.washington.edu/ss1110/IF/Buffett%20Fortune%202003%20(6).pdf</a>, See on <a href="https://news.ycombinator.com/item?id=43579908">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Head of NSA and Cybercommand Is Ousted (102 pts)]]></title>
            <link>https://www.nytimes.com/2025/04/03/us/politics/nsa-cyber-command-chief-fired.html</link>
            <guid>43578475</guid>
            <pubDate>Fri, 04 Apr 2025 04:55:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/04/03/us/politics/nsa-cyber-command-chief-fired.html">https://www.nytimes.com/2025/04/03/us/politics/nsa-cyber-command-chief-fired.html</a>, See on <a href="https://news.ycombinator.com/item?id=43578475">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/04/03/us/politics/nsa-cyber-command-chief-fired.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Anduril banned from recruiting on NixOS forums (117 pts)]]></title>
            <link>https://discourse.nixos.org/t/anduril-industries-electromagnetic-warfare-team-is-hiring/62569</link>
            <guid>43578310</guid>
            <pubDate>Fri, 04 Apr 2025 04:23:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://discourse.nixos.org/t/anduril-industries-electromagnetic-warfare-team-is-hiring/62569">https://discourse.nixos.org/t/anduril-industries-electromagnetic-warfare-team-is-hiring/62569</a>, See on <a href="https://news.ycombinator.com/item?id=43578310">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemscope="" itemtype="http://schema.org/DiscussionForumPosting" id="main-outlet" role="main">
      <meta itemprop="headline" content="Anduril Industries' Electromagnetic Warfare Team is Hiring">
      
      <meta itemprop="datePublished" content="2025-04-02T22:06:24Z">
        <meta itemprop="articleSection" content="Jobs">
      <meta itemprop="keywords" content="">
      


          <div id="post_2" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p>



              <span>
                  <time itemprop="datePublished" datetime="2025-04-03T00:44:47Z">
                    April 3, 2025, 12:44am
                  </time>
                  <meta itemprop="dateModified" content="2025-04-03T00:44:47Z">
              <span itemprop="position">2</span>
              </span>
            </p>
            <p>I despise companies like Anduril, who makes money on war.</p>

            

          </div>
          <div id="post_3" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            
            <p>Bummer. I can’t move to Cali right now, but I’d love to work full time with Nix tools!</p>

            

          </div>
          <div id="post_5" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://discourse.nixos.org/u/crertel"><span itemprop="name">crertel</span></a>
                
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2025-04-03T02:54:22Z">
                    April 3, 2025,  2:54am
                  </time>
                  <meta itemprop="dateModified" content="2025-04-03T02:54:22Z">
              <span itemprop="position">5</span>
              </span>
            </p>
            <div itemprop="text">
              <p>Questions that might help other folks:</p>
<ul>
<li>Is this limited to US citizens?</li>
<li>How’s the non-compete/IP stuff over there?</li>
<li>Anything interesting about the way y’all use Nix/NixOS? Flakes or not flakes, that sort of thing?</li>
<li>Open-source opportunities? Moonlighting?</li>
</ul>
<p>It looks like the salary, vacation, etc. is available via the link you have.</p>
            </div>

            

          </div>
          <div itemprop="comment" id="post_6" itemscope="" itemtype="http://schema.org/Comment">
              <blockquote>
<ul>
<li>Is this limited to US citizens?</li>
</ul>
</blockquote>
<p>This is limited to clearance-eligible individuals, which is broader than US citizens (many classes of non-citizen US persons are eligible). There’s extensive legalese at the bottom of the page to this effect.</p>
<blockquote>
<ul>
<li>How’s the non-compete/IP stuff over there?</li>
</ul>
</blockquote>
<p>It’s bog standard Silicon Valley startup style language (to which the typical California enforceability caveats apply).</p>
<blockquote>
<ul>
<li>Anything interesting about the way y’all use Nix/NixOS? Flakes or not flakes, that sort of thing?</li>
</ul>
</blockquote>
<p>I’m not sure if any of these count as interesting, but:</p>
<ul>
<li>We have a large Nixpkgs overlay that adds all of Anduril’s non-opsec-restricted internal packages, followed by additional overlays for compartments.</li>
<li>All Anduril services are configured with NixOS modules.</li>
<li>My team in particular is heavily invested in cross compilation infrastructure (although frankly, Apple Silicon is making it less and less relevant all the time. I find this unfortunate from a packaging system architecture perspective, but it’s practically convenient to have such fast native builds on my local machine).</li>
<li>The trickiest stuff we do is FPGA builds in Nix, and we’re always looking for new ways to improve how this works (along with way to increase the reproducibility of these sorts of builds, which tend to involve stochastic optimization).</li>
<li>We use flakes but in a (IMO) somewhat anemic way. They’re only used to pass overlays around and control pins. <a href="https://github.com/issues/created?issue=NixOS%7Cnix%7C5570">This issue</a> keeps me from using flakes the way I want.</li>
</ul>
<blockquote>
<ul>
<li>Open-source opportunities? Moonlighting?</li>
</ul>
</blockquote>
<p>We are slowly getting better about open sourcing stuff. On my team the limiting factor is having the time to do maintenance activities, not any sort of legal/IP barrier to releasing stuff, which Anduril is (perhaps surprisingly) pretty lenient about. I know people who do moonlighting/consulting as well, totally fine as long as your customers aren’t our competitors and you’re upfront with the company about it.</p>
<p>Thanks for the questions and for making a constructive post.</p>
            </div>
          <div id="post_7" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://discourse.nixos.org/u/cafkafk"><span itemprop="name">cafkafk</span></a>
                
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2025-04-03T07:27:52Z">
                    April 3, 2025,  7:27am
                  </time>
                  <meta itemprop="dateModified" content="2025-04-03T07:27:52Z">
              <span itemprop="position">7</span>
              </span>
            </p>
            <div itemprop="text">
              

<p>Would you be willing to assist the United States in an invasion/annexation of Greenland? As a Danish citizen, I think it would be slightly counterproductive to work for a company that may potentially invade me in the coming future.</p>
<hr>
<p>Ohh also, I’d recommend potential applicants watch <a href="https://youtu.be/gXQrci3Wff8" rel="noopener nofollow ugc">https://youtu.be/gXQrci3Wff8</a>, essentially propaganda saying having perks at your tech job is for lazy people… So like, it’s <em>that</em> kinda workplace.</p>
            </div>

            

          </div>
          <div id="post_10" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://discourse.nixos.org/u/winter"><span itemprop="name">winter</span></a>
                
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2025-04-03T20:54:01Z">
                    April 3, 2025,  8:54pm
                  </time>
                  <meta itemprop="dateModified" content="2025-04-03T20:55:16Z">
              <span itemprop="position">10</span>
              </span>
            </p>
            <div itemprop="text">
              <p>The moderation team brought this thread to our attention as the latest example in an ongoing controversy in the community and they escalated the decision to us so that we can provide them clearer guidance for how to proceed going forward. Our moderation team has done an admirable job, but this controversy has escalated beyond the point where moderation actions alone can resolve this.</p>
<p>To that end, the Steering Committee is banning Anduril from recruiting on Discourse. We will leave this specific thread up and locked (to record this decision), but the moderation team has been instructed to remove future Anduril job posts on Discourse.</p>
<p>We are still working on crafting a more general policy with clear rules that don’t single out any one company. Nonetheless, we make this decision today as we work to establish more permanent guidelines.</p>
<p>We still believe that moderation is essential to keeping these discussions productive. Even though Anduril has been a staple of many recent controversies, so have many community members who have repeatedly posted inflammatory comments. We have advised the Moderation Team to more proactively moderate such behavior.</p>
<p>We are grateful to those who reached out to us in addition to the moderation team. As always, if you have any concerns, you can contact us via:</p>
<ul>
<li>Email: <a href="mailto:steering@nixos.org">steering@nixos.org</a>,</li>
<li><a href="https://discourse.nixos.org/g/steering_committee">Discourse</a>,</li>
<li>or by reaching out to any individual <a href="https://discourse.nixos.org/t/results-for-the-nix-steering-committee-election-2024/55511">SC member</a>.</li>
</ul>
<p>— SC</p>
            </div>

            

          </div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What is Local first development (106 pts)]]></title>
            <link>https://alexop.dev/posts/what-is-local-first-web-development/</link>
            <guid>43577285</guid>
            <pubDate>Fri, 04 Apr 2025 01:03:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://alexop.dev/posts/what-is-local-first-web-development/">https://alexop.dev/posts/what-is-local-first-web-development/</a>, See on <a href="https://news.ycombinator.com/item?id=43577285">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="article"> <p>Imagine having complete control over your data in every web app, from social media platforms to productivity tools. Picture using these apps offline with automatic synchronization when you’re back online. This is the essence of local-first web development – a revolutionary approach that puts users in control of their digital experience.</p>
<p>As browsers and devices become more powerful, we can now create web applications that minimize backend dependencies, eliminate loading delays, and overcome network errors. In this comprehensive guide, we’ll dive into the fundamentals of local-first web development and explore its numerous benefits for users and developers alike.</p>
<h2 id="the-limitations-of-traditional-web-applications">The Limitations of Traditional Web Applications</h2>
<p><img src="https://alexop.dev/_astro/tradidonal-web-app.5OCyIzzc_Z13Xuqg.webp" alt="Traditional Web Application" width="1374" height="466" loading="lazy" decoding="async"></p>
<p>Traditional web applications rely heavily on backend servers for most operations. This dependency often results in:</p>
<ul>
<li>Frequent loading spinners during data saves</li>
<li>Potential errors when the backend is unavailable</li>
<li>Limited or no functionality when offline</li>
<li>Data storage primarily in the cloud, reducing user ownership</li>
</ul>
<p>While modern frameworks like Nuxt have improved initial load times through server-side rendering, many apps still suffer from performance issues post-load. Moreover, users often face challenges in accessing or exporting their data if an app shuts down.</p>
<h2 id="core-principles-of-local-first-development">Core Principles of Local-First Development</h2>
<p>Local-first development shares similarities with offline-first approaches but goes further in prioritizing user control and data ownership. Here are the key principles that define a true local-first web application:</p>
<ol>
<li><strong>Instant Access:</strong> Users can immediately access their work without waiting for data to load or sync.</li>
<li><strong>Device Independence:</strong> Data is accessible across multiple devices seamlessly.</li>
<li><strong>Network Independence:</strong> Basic tasks function without an internet connection.</li>
<li><strong>Effortless Collaboration:</strong> The app supports easy collaboration, even in offline scenarios.</li>
<li><strong>Future-Proof Data:</strong> User data remains accessible and usable over time, regardless of software changes.</li>
<li><strong>Built-In Security:</strong> Security and privacy are fundamental design considerations.</li>
<li><strong>User Control:</strong> Users have full ownership and control over their data.</li>
</ol>
<p>It’s important to note that some features, such as account deletion, may still require real-time backend communication to maintain data integrity.</p>
<p>For a deeper dive into local-first software principles, check out <a href="https://www.inkandswitch.com/local-first/#seven-ideals-for-local-first-software">Ink &amp; Switch: Seven Ideals for Local-First Software</a>.</p>
<h2 id="cloud-vs-local-first-software-comparison">Cloud vs Local-First Software Comparison</h2>






























<table><thead><tr><th>Feature</th><th>Cloud Software 🌥️</th><th>Local-First Software 💻</th></tr></thead><tbody><tr><td>Real-time Collaboration</td><td>😟 Hard to implement</td><td>😊 Built for real-time sync</td></tr><tr><td>Offline Support</td><td>😟 Does not work offline</td><td>😊 Works offline</td></tr><tr><td>Service Reliability</td><td>😟 Service shuts down? Lose everything!</td><td>😊 Users can continue using local copy of software + data</td></tr><tr><td>Service Implementation</td><td>😟 Custom service for each app (infra, ops, on-call rotation, …)</td><td>😊 Sync service is generic → outsource to cloud vendor</td></tr></tbody></table>
<h2 id="local-first-software-fit-guide">Local-First Software Fit Guide</h2>
<h3 id="-good-fit">✅ Good Fit</h3>
<ul>
<li><strong>File Editing</strong> 📝 - text editors, word processors, spreadsheets, slides, graphics, video, music, CAD, Jupyter notebooks</li>
<li><strong>Productivity</strong> 📋 - notes, tasks, issues, calendar, time tracking, messaging, bookkeeping</li>
<li><strong>Summary</strong>: Ideal for apps where users freely manipulate their data</li>
</ul>
<h3 id="-bad-fit">❌ Bad Fit</h3>
<ul>
<li><strong>Money</strong> 💰 - banking, payments, ad tracking</li>
<li><strong>Physical Resources</strong> 📦 - e-commerce, inventory</li>
<li><strong>Vehicles</strong> 🚗 - car sharing, freight, logistics</li>
<li><strong>Summary</strong>: Better with centralized cloud/server model for real-world resource management</li>
</ul>
<h2 id="types-of-local-first-applications">Types of Local-First Applications</h2>
<p>Local-first applications can be categorized into two main types:</p>
<h3 id="1-local-only-applications">1. Local-Only Applications</h3>
<p><img src="https://alexop.dev/_astro/local-only.Cp1-EnZ-_EX1Az.webp" alt="Local-Only Applications" width="1374" height="592" loading="lazy" decoding="async"></p>
<p>While often mistakenly categorized as local-first, these are actually offline-first applications. They store data exclusively on the user’s device without cloud synchronization, and data transfer between devices requires manual export and import processes. This approach, while simpler to implement, doesn’t fulfill the core local-first principles of device independence and effortless collaboration. It’s more accurately described as an offline-first architecture.</p>
<h3 id="2-sync-enabled-applications">2. Sync-Enabled Applications</h3>
<p><img src="https://alexop.dev/_astro/sync-enabled-applications.x4TUTTH1_Z1mismy.webp" alt="Sync-Enabled Applications" width="1374" height="592" loading="lazy" decoding="async"></p>
<p>These applications automatically synchronize user data with a cloud database, enhancing the user experience but introducing additional complexity for developers.</p>
<h2 id="challenges-in-implementing-sync-enabled-local-first-apps">Challenges in Implementing Sync-Enabled Local-First Apps</h2>
<p>Developing sync-enabled local-first applications presents unique challenges, particularly in managing data conflicts. For example, in a collaborative note-taking app, offline edits by multiple users can lead to merge conflicts upon synchronization. Resolving these conflicts requires specialized algorithms and data structures, which we’ll explore in future posts in this series.</p>
<p>Even for single-user applications, synchronizing local data with cloud storage demands careful consideration and additional logic.</p>
<h2 id="building-local-first-web-apps-a-step-by-step-approach">Building Local-First Web Apps: A Step-by-Step Approach</h2>
<p>To create powerful local-first web applications, consider the following key steps, with a focus on Vue.js:</p>
<ol>
<li>
<p><strong>Transform Your Vue SPA into a PWA</strong>
Convert your Vue Single Page Application (SPA) into a Progressive Web App (PWA) to enable native app-like interactions. For a detailed guide, see <a href="https://alexop.dev/posts/create-pwa-vue3-vite-4-steps">Create a Native-Like App in 4 Steps: PWA Magic with Vue 3 and Vite</a>.</p>
</li>
<li>
<p><strong>Implement Robust Storage Solutions</strong>
Move beyond simple localStorage to more sophisticated storage mechanisms that support offline functionality and data persistence. Learn more in <a href="https://alexop.dev/posts/sqlite-vue3-offline-first-web-apps-guide">How to Use SQLite in Vue 3: Complete Guide to Offline-First Web Apps</a>.</p>
</li>
<li>
<p><strong>Develop Syncing and Authentication Systems</strong>
For sync-enabled apps, implement user authentication and secure data synchronization across devices. Learn how to implement syncing and conflict resolution in <a href="https://alexop.dev/posts/building-local-first-apps-vue-dexie/">Building Local-First Apps with Vue and Dexie</a>.</p>
</li>
<li>
<p><strong>Prioritize Security Measures</strong>
Employ encryption techniques to protect sensitive user data stored in the browser.</p>
</li>
</ol>
<p>We’ll delve deeper into each of these topics throughout this series on local-first web development.</p>
<h2 id="additional-resources-for-local-first-development">Additional Resources for Local-First Development</h2>
<p>To further your understanding of local-first applications, explore these valuable resources:</p>
<ol>
<li><strong>Website:</strong> <a href="https://localfirstweb.dev/">Local First Web</a> - An excellent starting point with comprehensive follow-up topics.</li>
<li><strong>Podcast:</strong> <a href="https://www.localfirst.fm/">Local First FM</a> - An insightful podcast dedicated to local-first development.</li>
<li><strong>Community:</strong> Join the <a href="https://discord.com/invite/ZRrwZxn4rW">Local First Discord</a> to connect with fellow developers and enthusiasts.</li>
</ol>
<h2 id="conclusion-embracing-the-local-first-revolution">Conclusion: Embracing the Local-First Revolution</h2>
<p>Local-first web development represents a paradigm shift in how we create and interact with web applications. By prioritizing user control, data ownership, and offline capabilities, we can build more resilient, user-centric apps that adapt to the evolving needs of modern users.</p>
<p>This introductory post marks the beginning of an exciting journey into the world of local-first development. Stay tuned for more in-depth articles exploring various aspects of building powerful, local-first web applications with Vue and other modern web technologies.</p> </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Celebrate 50 years of Microsoft with the company's original source code (428 pts)]]></title>
            <link>https://www.gatesnotes.com/home/home-page-topic/reader/microsoft-original-source-code</link>
            <guid>43575884</guid>
            <pubDate>Thu, 03 Apr 2025 21:49:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gatesnotes.com/home/home-page-topic/reader/microsoft-original-source-code">https://www.gatesnotes.com/home/home-page-topic/reader/microsoft-original-source-code</a>, See on <a href="https://news.ycombinator.com/item?id=43575884">Hacker News</a></p>
Couldn't get https://www.gatesnotes.com/home/home-page-topic/reader/microsoft-original-source-code: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[AI cheats: Why you didn't notice your teammate was cheating (140 pts)]]></title>
            <link>https://niila.fi/en/ai-cheats/</link>
            <guid>43574929</guid>
            <pubDate>Thu, 03 Apr 2025 20:25:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://niila.fi/en/ai-cheats/">https://niila.fi/en/ai-cheats/</a>, See on <a href="https://news.ycombinator.com/item?id=43574929">Hacker News</a></p>
Couldn't get https://niila.fi/en/ai-cheats/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[How Servo Motors Work (104 pts)]]></title>
            <link>https://www.jameco.com/Jameco/workshop/Howitworks/how-servo-motors-work.html</link>
            <guid>43574125</guid>
            <pubDate>Thu, 03 Apr 2025 19:18:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.jameco.com/Jameco/workshop/Howitworks/how-servo-motors-work.html">https://www.jameco.com/Jameco/workshop/Howitworks/how-servo-motors-work.html</a>, See on <a href="https://news.ycombinator.com/item?id=43574125">Hacker News</a></p>
Couldn't get https://www.jameco.com/Jameco/workshop/Howitworks/how-servo-motors-work.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Senior Developer Skills in the AI Age (376 pts)]]></title>
            <link>https://manuel.kiessling.net/2025/03/31/how-seasoned-developers-can-achieve-great-results-with-ai-coding-agents/</link>
            <guid>43573755</guid>
            <pubDate>Thu, 03 Apr 2025 18:47:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://manuel.kiessling.net/2025/03/31/how-seasoned-developers-can-achieve-great-results-with-ai-coding-agents/">https://manuel.kiessling.net/2025/03/31/how-seasoned-developers-can-achieve-great-results-with-ai-coding-agents/</a>, See on <a href="https://news.ycombinator.com/item?id=43573755">Hacker News</a></p>
<div id="readability-page-1" class="page"><article lang="en">
    

    
    

    <div>
  

<h2 id="introduction">Introduction</h2>

<p>Over the past few months, I have been experimenting with AI-powered coding tools in both my personal and professional projects. The experience has been overwhelmingly positive, both for me and my team of software engineers at work.</p>

<p>We’ve achieved better results in less time, and in many cases, the quality of our output has significantly improved.</p>

<p>Interestingly, this experience contrasts with the feedback I’ve received from some fellow software developers who report that AI tools aren’t working well for them.</p>

<p>I’m now convinced that AI-assisted software development has the potential to elevate our craft to the next level in terms of productivity. This is why I believe our community should embrace it sooner rather than later — but like all tools and practices, with the right perspective and a measured approach.</p>

<p>My motivation for sharing these experiences and the best practices I’ve identified is to help move the needle forward in terms of AI adoption within the broader software development community — even if realistically, it’s only by some micrometers.</p>

<h2 id="the-current-state-of-ai-coding">The Current State of AI Coding</h2>

<h2 id="beyond-vibe-coding">Beyond “Vibe Coding”</h2>

<p>My Twitter feed suggests that AI-powered coding tools are already generating significant buzz in a specific niche: non-professional developers who are having great fun building software products. For them, these tools primarily serve as enablers, allowing them to tackle projects they might never have considered without such assistance.</p>

<p>More power to them — it’s exciting to witness their journey of struggles and breakthroughs.</p>

<p>However, this represents just one segment of potential users, and certainly not the only group for whom these tools can provide immense value.</p>

<h2 id="the-senior-developer-advantage">The Senior Developer Advantage</h2>

<p>My current conclusion, though preliminary in this rapidly evolving field, is that not only can seasoned developers benefit from this technology — they are actually in the optimal position to harness its power.</p>

<p><strong>Here’s the fascinating part: The very experience and accumulated know-how in software engineering and project management — which might seem obsolete in the age of AI — are precisely what enable the most effective use of these tools.</strong></p>

<h2 id="the-ai-assistant-a-senior-coder-junior-colleague">The AI Assistant: A Senior Coder, Junior Colleague</h2>

<p>While I haven’t found the perfect metaphor for these LLM-based programming agents in an AI-assisted coding setup, I currently think of them as “an absolute senior when it comes to programming knowledge, but an absolute junior when it comes to architectural oversight <em>in your specific context</em>.”</p>

<p>This means that <strong>it takes some strategic effort to make them save you a tremendous amount of work</strong>.</p>

<p>And who better to invest that effort in the right way than a senior software engineer?</p>

<p>As we’ll see, while we’re dealing with cutting-edge technology, it’s the time-tested, traditional practices and tools that enable us to wield this new capability most effectively.</p>

<h2 id="key-areas-of-expertise">Key Areas of Expertise</h2>

<p>I’ve identified three critical areas of expertise needed when working with AI-assisted coding:</p>

<ul>
<li><strong>Well-structured Requirements</strong></li>
<li><strong>Tool-based Guard Rails</strong></li>
<li><strong>File-based Keyframing</strong></li>
</ul>

<p>Before diving into these concepts, let me share some real-world examples of how I’ve used AI in my projects.</p>

<p>I will give examples for two categories of projects: green-field and brown-field.</p>

<p>For both categories, I’ll focus on cases where AI handled the entire implementation, or very nearly so.</p>

<p>While I do sometimes use AI as a “better autocomplete” or as a chat-only companion for general discussions, this article focuses on what I call the “real deal” — where AI tooling operates in an agentic mode and handles all the heavy lifting.</p>

<h2 id="development-environment">Development Environment</h2>

<p>My current tool of choice for these projects is <a href="https://www.cursor.com/" target="_blank">Cursor</a>, powered by Anthropic’s Claude Sonnet 3.7 model. For optimal developer experience, I prefer not to manually copy-paste generated code into my codebase and need the AI assistant to execute commands directly on my local command line. Cursor provides this capability, and I expect similar products would yield comparable results.</p>

<h2 id="example-1-platform-problem-monitoring">Example 1: Platform Problem Monitoring</h2>

<p>This setup, combined with the expertise areas I’ll discuss, enabled me to create and fully implement a green-field application: <em>Platform Problem Monitoring</em>. You can find the source code at <a href="https://github.com/dx-tooling/platform-problem-monitoring-core" target="_blank">https://github.com/dx-tooling/platform-problem-monitoring-core</a>.</p>

<p>The application connects hourly to our ELK stack’s Elasticsearch server, reads the latest error messages, and sends us a well-formatted email summarizing the current state of problems on our web platform:</p>

<figure><a href="https://manuel.kiessling.net/images/2025-03-09-new-project-platform-problem-monitoring-sample-mail-report.png">
    
        <img src="https://manuel.kiessling.net/images/2025-03-09-new-project-platform-problem-monitoring-sample-mail-report.png" alt="Platform Problem Monitoring Email Report">
    
    
</a></figure>

<p>For more details, check out the <a href="https://manuel.kiessling.net/2025/03/09/new-project-plaform-problem-monitoring/">“New project: Platform Problem Monitoring”</a> post.</p>

<p><strong>What makes this example particularly interesting is that the entire source code was written by Cursor/Claude, without any manual coding from me.</strong></p>

<p>This is especially noteworthy because I don’t actually know Python. Yes, with 25+ years of software development experience, I could probably write a few lines of working Python code if pressed — but I don’t truly <em>know</em> the language. I lack the muscle memory and intimate knowledge of its conventions and best practices.</p>

<p>However, my broad understanding of software architecture, engineering best practices, system operations, and what makes for excellent software projects made this development process remarkably smooth.</p>

<h2 id="example-2-process-management-ui-integration">Example 2: Process Management UI Integration</h2>

<p>While I can’t share the source code for this brown-field example, it demonstrates a different yet equally valuable use case:</p>

<p>I had a legacy PHP/Symfony application with a “backend-only” process coordination feature — think service classes, enums, Doctrine entities, and CLI commands running via cron. While functional, it lacked a user interface.</p>

<p>Though not strictly necessary, having a web-based view of this process coordination feature would be valuable — allowing users to monitor current operations, investigate failures, and manage process execution.</p>

<p>For strategic reasons, I wanted this UI to live in our newer application — the one with the better-designed codebase, more recent framework versions, improved testing capabilities, and superior frontend architecture with a comprehensive living styleguide.</p>

<p>The task involved:</p>

<ul>
<li>Integrating the legacy and new applications via HTTP API</li>
<li>Implementing data transfer between systems</li>
<li>Creating an intuitive UI that aligned with our design system</li>
<li>Building a generalized API client in our shared Symfony bundle</li>
</ul>

<p><strong>Once again, the AI agent implemented this entire feature without requiring me to write any code manually.</strong></p>

<h2 id="key-insights-from-both-projects">Key Insights from Both Projects</h2>

<p>These examples highlight two distinct advantages of AI assistance:
1. In the green-field project, I could create an application despite unfamiliarity with the tech stack
2. In the brown-field project, I achieved results much faster — particularly valuable since UI development isn’t my strong suit</p>

<p>This was when terms like “game-changing” started to feel appropriate, and I began to recognize this technology’s significance for both personal and team productivity.</p>

<h2 id="the-keys-to-successful-ai-collaboration">The Keys to Successful AI Collaboration</h2>

<p>Let’s examine the techniques I employ to ensure productive AI coding sessions that consistently deliver successful results.</p>

<h2 id="the-investment-return-principle">The Investment-Return Principle</h2>

<p>As mentioned earlier, achieving significant time savings with AI requires some upfront investment. This parallels managing talented but junior developers — you can’t simply tell them to “build X” and expect optimal results. You need to invest time in setting them up for success.</p>

<h2 id="well-structured-requirements">Well-Structured Requirements</h2>

<p>The foundation of any successful AI coding session is a comprehensive requirements document. For the Platform Problem Monitoring project, I created this document before starting: <a href="https://github.com/dx-tooling/platform-problem-monitoring-core/blob/main/docs/REQUIREMENTS.md" target="_blank">REQUIREMENTS.md</a>.</p>

<p>At 371 lines, it’s substantial, but more importantly, it follows a clear hierarchical structure:</p>

<ul>
<li><em>Top-level: Core requirements in one line</em></li>
<li><em>High-level: Use case and motivation</em></li>
<li><em>Mid-level: Process and work mechanisms</em></li>
<li><em>Mid-level: Architecture, tech stack, and constraints</em></li>
<li><em>Low-level: Detailed process steps</em></li>
</ul>

<p>The low-level section breaks down the application’s operation into 12 distinct steps, each with clearly defined inputs, outputs, and side effects.</p>

<p>Just as this structure guides human developers effectively, it provides the AI assistant with the framework it needs to deliver solid results.</p>

<p>You might think creating such documentation is excessive work. You’re right — it is. But it’s a necessary investment for a successful outcome.</p>

<p>One of my favorite software development maxims is:
<br><strong><em>“Six weeks of implementation easily save you two hours of planning”</em></strong></p>

<p>The sarcasm highlights an essential truth: the implementation phase is the most expensive place to compensate for inadequate planning.</p>

<p>I always encourage my team to start at the whiteboard with their product manager, not at the keyboard. This principle applies equally well to AI collaboration.</p>

<h3 id="the-play-it-back-technique">The “Play It Back” Technique</h3>

<p>A particularly effective practice with AI is what I call “play it back”: I start each session in “Ask” mode, requesting the AI to:</p>

<ol>
<li>Summarize the requirements in its own words</li>
<li>Create an action plan</li>
<li>Ask clarifying questions</li>
</ol>

<p>Only after this validation do I switch to “Agent” mode and begin implementation.</p>



<p>While requirements define the destination, tool-based guard rails ensure we take the most direct route there.</p>

<p>Consider how we value real-time feedback systems in development. Nothing is worse than discovering a missing null check through a customer service complaint weeks after launch.</p>

<p>Static analysis tools that catch issues during development are invaluable — and they’re just as valuable for AI agents.</p>

<p>This is why I prioritize setting up comprehensive quality tools before starting AI sessions. The <a href="https://github.com/dx-tooling/platform-problem-monitoring-core/blob/main/Makefile" target="_blank">Makefile</a> for our Python project demonstrates this approach:</p>

<ul>
<li>Code formatting with black and isort</li>
<li>Linting with ruff</li>
<li>Type checking with mypy</li>
<li>Security analysis with bandit</li>
<li>Comprehensive test suite</li>
</ul>

<p>The AI understands these tools and uses them effectively. When a change breaks type checking, it automatically adjusts its implementation to maintain compliance.</p>

<p>I also ensure the AI can validate the functional aspects of its work. For API implementations, I provide curl commands so it can test its endpoints directly. Watching the AI use and refine its own code is remarkable.</p>

<h2 id="file-based-keyframing">File-Based Keyframing</h2>

<p>While AI agents excel at creative problem-solving, sometimes we need to constrain that creativity, especially regarding code organization. This is where file-based keyframing comes in.</p>

<p>The technique borrows from animation studios’ workflow, where master animators create key frames — crucial moments in an animation sequence — while junior animators fill in the intermediate frames. This approach maintains quality while optimizing resource usage.</p>

<figure>
    
        <img src="https://manuel.kiessling.net/images/2025-03-31-how-seasoned-developers-can-achieve-great-results-with-ai-coding-agents/keyframing_animation.jpg" alt="Platform Problem Monitoring Email Report">
    
    
</figure>

<p><sub>Through keyframes, the master animator can ensure a certain style and the occurence of specific animation steps, without the need to create the full animation herself.</sub></p>

<h3 id="practical-application">Practical Application</h3>

<p>When working with AI, I create “empty hull” files in the codebase before editing begins. For example, in our brown-field project, the AI needed to implement various components:</p>

<ul>
<li>an API endpoint</li>
<li>an API client</li>
<li>a Controller class</li>
<li>a Twig template</li>
</ul>

<p>and so on.</p>

<p>Instead of letting the AI decide file locations and names, or specifying these details in prompts, I create minimal stub files:</p>
<div><pre><code data-lang="php"><span>&lt;?php</span>

<span>declare</span>(<span>strict_types</span><span>=</span><span>1</span>);

<span>namespace</span> <span>App\HighVolumeProcessManagement\Presentation\Service</span>;

<span>readonly</span> <span>class</span> <span>HighVolumeProcessManagementPresentationService</span>
{

}
</code></pre></div>
<p>For controllers, I might include a small amount of essential details like the route name:</p>
<div><pre><code data-lang="php"><span>&lt;?php</span>

<span>declare</span>(<span>strict_types</span><span>=</span><span>1</span>);

<span>namespace</span> <span>App\HighVolumeProcessManagement\Presentation\Controller</span>;

<span>use</span> <span>Symfony\Bundle\FrameworkBundle\Controller\AbstractController</span>;
<span>use</span> <span>Symfony\Component\HttpFoundation\Response</span>;
<span>use</span> <span>Symfony\Component\Routing\Attribute\Route</span>;

<span>class</span> <span>HighVolumeProcessManagementController</span> <span>extends</span> <span>AbstractController</span>
{
    <span>#[Route(
</span><span></span>        <span>'/volumen-prozesse/übersicht'</span>,
        <span>name</span><span>:</span> <span>'high_volume_process_management.presentation.controller.show_dashboard'</span>,
        <span>methods</span><span>:</span> [<span>'GET'</span>]
    )]
    <span>public</span> <span>function</span> <span>showDashboardAction</span>()<span>:</span> <span>Response</span>
    {

    }
}
</code></pre></div>
<p>These stubs might seem minimal, but they’re incredibly effective. They provide the AI with crucial context about:</p>

<ul>
<li>File organization</li>
<li>Namespace structure</li>
<li>Naming conventions</li>
<li>Code patterns</li>
</ul>

<p>This approach highlights another timeless practice that remains vital in the age of AI: Naming things.</p>

<p>Because after all, the AI models at the heart of tools like Cursor are Large-Language Models — they work on text, and text with meaning and intention is crucial for a great coding experience.</p>

<h2 id="putting-it-all-together-a-real-world-example">Putting It All Together: A Real-World Example</h2>

<p>To demonstrate how these principles work together in practice, let me share a recent project where I applied all three key techniques: well-structured requirements, tool-based guard rails, and file-based keyframing.</p>

<h2 id="the-challenge">The Challenge</h2>

<p>The task was similar to our earlier brown-field example: implementing a UI Dashboard to display subscription contract information from our platform. Here’s what made this project interesting:</p>

<ul>
<li><strong>Existing Backend</strong>: We had a working backend implementation storing all the contract data</li>
<li><strong>Separate Frontend</strong>: The UI needed to live in a different application</li>
<li><strong>Distributed Architecture</strong>: The solution required an HTTP API integration between applications</li>
<li><strong>Shared Components</strong>: Parts of the implementation belonged in a shared library</li>
</ul>

<h2 id="the-initial-prompt">The Initial Prompt</h2>

<p>Below is the actual prompt I used to kickstart this project. As you read through it, notice how it incorporates our three key principles of <strong>well-strcutured requirements</strong>, <strong>tool-based guard rails</strong>, and <strong>file-based keyframing</strong>:</p>

<blockquote>
<p>I need you to implement a read-only web-based user interface that will present some existing db-persisted data in form of a table-like overview.</p>

<p>The data in question is called “contracts”, it’s about some subscription contract information that we hold in our platform.</p>

<p>The feature needs to be implemented within a monorepo that contains multiple codebases. For the feature in question, four codebases play a role:</p>

<ul>
<li><p>A Symfony 5 application in “backend-app”</p></li>

<li><p>A Symfony 7 application in “janus-christophorus”</p></li>

<li><p>A Symfony bundle used by “janus-christophorus”, in folder “janus-shared-bundle”</p></li>

<li><p>Another Symfony bundle used by “janus-christophorus”, in folder “janus-webui-bundle”</p></li>
</ul>

<p>The roles of the codebases are as follows:</p>

<ul>
<li><p>backend-app currently holds the data in question, but does not provide a ui to present the data</p></li>

<li><p>janus-christophorus is meant to provide the UI that will present the data</p></li>

<li><p>janus-shared-bundle hosts, among other things, the API client implementations for API endpoints provided by backend-app; janus-christophorus makes use of these clients to pull data from backend-app</p></li>

<li><p>janus-webui-bundle contains the tailwind setup, css, and Twig templates for the Living Styleguide that applied to the UIs of janus-christophorus.</p></li>
</ul>

<p>Your mission now is to:</p>

<ul>
<li><p>implement the required API endpoints in backend-app that will provide the data to be displayed on the web UI in janus-christophorus; this API will also support the “demo mode” capability of the integration API, which requires a demo data service in the test harness layer of the backend-app implementation to provide fake data if the API client requests it</p></li>

<li><p>implement a matching API client that can be used to read from these new API endpoints</p></li>

<li><p>implement a Presentation layer service class in janus-christophorus that will make use of the new API client</p></li>

<li><p>implement a Presentation layer Controller and Twig template that makes use of the Presentation service to display the information gathered through the API integration</p></li>
</ul>

<p>To prepare this implementation, I have created some “empty hull” files within the different code bases.</p>

<p>Consider the provided contract, user, and jobofferer profile entities to determine what data you need to pull from the MariaDB database (or fake through the demo service) to provide useful information on the API for the UI.</p>

<p>Additionally, I’m providing additional files like those from the styleguide, the ui navigation service, and so on. Also consider the files from other, existing features I have provided as a guideline and inspiration.</p>

<p>The goal of the feature is to provide a UI that allows to quickly gather an overview of the available contracts in the system.</p>

<p>Important note: You can and should use several tools to check your own work.</p>

<p>Each codebase allows you to run the quality tools, which contain PHPStan checks and others. You run them like this:</p>

<p>cd ~/Projects/website/backend-app &amp;&amp; /usr/bin/env bash .dxcli/dxcli.sh quality</p>

<p>cd ~/Projects/website/janus-shared-bundle &amp;&amp; /usr/bin/env bash .dxcli/dxcli.sh quality</p>

<p>cd ~/Projects/website/janus-christophorus &amp;&amp; /usr/bin/env bash .dxcli/dxcli.sh quality</p>

<p>You can request the API endpoint that you will implement like this:</p>

<p>curl -H “Accept: application/json” -H “Content-Type: application/json” “<a href="http://127.0.0.1/_/janus-integration-api/membership/contracts/%22" target="_blank">http://127.0.0.1/_/janus-integration-api/membership/contracts/"</a></p>

<p>You can request the web UI you will implement like this:</p>

<p>curl <a href="http://127.0.0.1/_jc/mitgliedschaftsverwaltung/vertr%C3%A4ge/" target="_blank">http://127.0.0.1/_jc/mitgliedschaftsverwaltung/verträge/</a></p>

<p>Please create an implementation plan and ask any questions that you need to have answered for your mission.</p>

<p>@Contract.php @User.php @Profile.php @JoboffererProfile.php @MembershipContractsApiController.php @DemoDataService.php @AbstractJanusIntegrationApiController.php @MainNavigationPresentationService.php @ContractsDashboardController.php @contracts_list.html.twig @ContractsDashboardPresentationService.php @services.yaml @AbstractBackendAppApiClient.php @BackendAppMembershipContractsApiClient.php @ContractApiDto.php @BackendAppMembershipContractsApiClientInterface.php @ContractsApiDto.php @NothingApiDto.php @janus-webui.css @living_styleguide.html.twig</p>
</blockquote>

<h2 id="conclusion">Conclusion</h2>

<p>The examples and techniques shared here demonstrate that AI coding assistants, when properly guided, can dramatically enhance development productivity. The key to success lies in applying traditional software engineering best practices to this new technology.</p>

<p>By providing well-structured requirements, implementing appropriate guardrails, and using file-based keyframing, we can harness the power of AI while maintaining code quality and architectural integrity. These time-tested practices, and more than anything else, <strong>hard-earned human experience with these practices</strong>, are more valuable than ever in the age of AI-assisted development, and far from obsolete.</p>

</div>

    



  </article></div>]]></description>
        </item>
    </channel>
</rss>