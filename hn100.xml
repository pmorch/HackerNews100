<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 12 Aug 2025 13:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Monero appears to be in the midst of a successful 51% attack (103 pts)]]></title>
            <link>https://twitter.com/p3b7_/status/1955173413992984988</link>
            <guid>44875109</guid>
            <pubDate>Tue, 12 Aug 2025 11:56:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/p3b7_/status/1955173413992984988">https://twitter.com/p3b7_/status/1955173413992984988</a>, See on <a href="https://news.ycombinator.com/item?id=44875109">Hacker News</a></p>
Couldn't get https://twitter.com/p3b7_/status/1955173413992984988: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[LLMs' "simulated reasoning" abilities are a brittle mirage (129 pts)]]></title>
            <link>https://arstechnica.com/ai/2025/08/researchers-find-llms-are-bad-at-logical-inference-good-at-fluent-nonsense/</link>
            <guid>44872850</guid>
            <pubDate>Tue, 12 Aug 2025 05:52:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/ai/2025/08/researchers-find-llms-are-bad-at-logical-inference-good-at-fluent-nonsense/">https://arstechnica.com/ai/2025/08/researchers-find-llms-are-bad-at-logical-inference-good-at-fluent-nonsense/</a>, See on <a href="https://news.ycombinator.com/item?id=44872850">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="app">
    <p><a href="#main">
  Skip to content
</a></p>



<main id="main">
            <article data-id="2111271">
  
  <header>
  <div>
    <div>
      

      

      <p>
        Chain-of-thought AI "degrades significantly" when asked to generalize beyond training.
      </p>

      
    </div>

    <div>
    
    <p>
      How much does this puzzle resemble one the robot has seen before?

              <span>
          Credit:

          
          Getty Images

                  </span>
          </p>
  </div>
  </div>
</header>


  

  
      
    
    <div>
                      
                      
          <p>In recent months, the AI industry has started <a href="https://arstechnica.com/ai/2025/04/openai-releases-new-simulated-reasoning-models-with-full-tool-access/">moving toward</a> so-called <a href="https://arstechnica.com/ai/2025/01/china-is-catching-up-with-americas-best-reasoning-ai-models/">simulated reasoning models</a> that <a href="https://arstechnica.com/ai/2025/02/claude-3-7-sonnet-debuts-with-extended-thinking-to-tackle-complex-problems/">use a "chain of thought" process</a> to work through tricky problems in multiple logical steps. At the same time, <a href="https://arstechnica.com/ai/2025/06/new-apple-study-challenges-whether-ai-models-truly-reason-through-problems/">recent</a> <a href="https://arstechnica.com/ai/2025/04/new-study-shows-why-simulated-reasoning-ai-models-dont-yet-live-up-to-their-billing/">research</a> has <a href="https://arstechnica.com/ai/2025/04/researchers-concerned-to-find-ai-models-hiding-their-true-reasoning-processes/">cast doubt</a> on whether those models <a href="https://arstechnica.com/ai/2025/06/with-the-launch-of-o3-pro-lets-talk-about-what-ai-reasoning-actually-does/">have even a basic understanding of general logical concepts</a> or an accurate grasp of their own "thought process." Similar research shows that these "reasoning" models can often produce incoherent, logically unsound answers when questions include irrelevant clauses or deviate even slightly from common templates found in their training data.</p>
<p>In <a href="https://arxiv.org/pdf/2508.01191">a recent pre-print paper</a>, researchers from the University of Arizona summarize this existing work as "suggest[ing] that LLMs are not principled reasoners but rather sophisticated simulators of reasoning-like text." To pull on that thread, the researchers created a carefully controlled LLM environment in an attempt to measure just how well chain-of-thought reasoning works when presented with "out of domain" logical problems that don't match the specific logical patterns found in their training data.</p>
<p>The results suggest that the seemingly large performance leaps made by chain-of-thought models are "largely a brittle mirage" that "become[s] fragile and prone to failure even under moderate distribution shifts," the researchers write. "Rather than demonstrating a true understanding of text, CoT reasoning under task transformations appears to reflect a replication of patterns learned during training."</p>
<h2>No one trained me for this!</h2>
<p>To test an LLM's generalized reasoning capability in an objective, measurable way, the researchers created a specially controlled LLM training environment <a href="https://github.com/ChengshuaiZhao0/DataAlchemy">called DataAlchemy</a>. This setup creates small models trained on examples of two extremely simple text transformations—an <a href="https://www.dcode.fr/rot-cipher">ROT cypher</a> and <a href="https://www.computer.org/csdl/proceedings-article/icee/2010/3997d483/12OmNvo67DA">cyclical shifts</a>—followed by additional training that demonstrates those two functions performed in various orders and combinations.</p>

          
                      
                  </div>
                    
        
          
    
    <div>
          
          
<figure>
    <div>
            <p><a data-pswp-width="479" data-pswp-height="375" data-pswp-srcset="" data-cropped="false" href="https://cdn.arstechnica.net/wp-content/uploads/2025/08/llmtraining.png" target="_blank">
              <img width="479" height="375" src="https://cdn.arstechnica.net/wp-content/uploads/2025/08/llmtraining.png" alt="" decoding="async" loading="lazy">
            </a></p><div id="caption-2111278"><p>
              The researchers used test cases that fall outside of the LLM training data in task type, format, and length.
                              </p>
                          </div>
          </div>
          <figcaption>
        <div>
    
    <p>
      The researchers used test cases that fall outside of the LLM training data in task type, format, and length.

              <span>
          Credit:

                      <a href="https://arxiv.org/pdf/2508.01191" target="_blank">
          
          Zhao et al

                      </a>
                  </span>
          </p>
  </div>
      </figcaption>
      </figure>

<p>These simplified models were then tested using a variety of tasks, some of which precisely or closely matched the function patterns in the training data and others that required function compositions that were either partially or fully "out of domain" for the training data. For instance, a model trained on data showing two cyclical shifts might be asked to perform a novel transformation involving two ROT shifts (with basic training on what a single example of either shift looks like). The final answers and reasoning steps were compared to the desired answer using <a href="https://huggingface.co/spaces/evaluate-metric/bleu">BLEU scores</a> and <a href="https://en.wikipedia.org/wiki/Levenshtein_distance">Levenshtein Distance</a> for an objective measure of their accuracy.</p>
<p>As the researchers hypothesized, these basic models started to fail catastrophically when asked to generalize novel sets of transformations that were not directly demonstrated in the training data. While the models would often try to generalize new logical rules based on similar patterns in the training data, this would quite often lead to the model laying out "correct reasoning paths, yet incorrect answer[s]." In other cases, the LLM would sometimes stumble onto correct answers paired with "unfaithful reasoning paths" that didn't follow logically.</p>
<p>"Rather than demonstrating a true understanding of text, CoT reasoning under task transformations appears to reflect a replication of patterns learned during training," the researchers write.</p>
<figure>
    <div>
            <p><a data-pswp-width="624" data-pswp-height="493" data-pswp-srcset="" data-cropped="false" href="https://cdn.arstechnica.net/wp-content/uploads/2025/08/llmood.png" target="_blank">
              <img width="624" height="493" src="https://cdn.arstechnica.net/wp-content/uploads/2025/08/llmood.png" alt="" decoding="async" loading="lazy">
            </a></p><div id="caption-2111284"><p>
              As requested tasks get further outside the training distribution (redder dots), the answers provided drift farther from the desired answer (lower right of the graph).
                              </p>
                          </div>
          </div>
          <figcaption>
        <div>
    
    <p>
      As requested tasks get further outside the training distribution (redder dots), the answers provided drift farther from the desired answer (lower right of the graph).

              <span>
          Credit:

                      <a href="https://arxiv.org/pdf/2508.01191" target="_blank">
          
          Zhao et al

                      </a>
                  </span>
          </p>
  </div>
      </figcaption>
      </figure>

<p>The researchers went on to test their controlled system using input text strings slightly shorter or longer than those found in the training data, or that required function chains of different lengths than those it was trained on. In both cases the accuracy of the results "deteriorates as the [length] discrepancy increases," thus "indicating the failure of generalization" in the models. Small, unfamiliar-to-the-model discrepancies in the format of the test tasks (e.g., the introduction of letters or symbols not found in the training data) also caused performance to "degrade sharply" and "affect[ed] the correctness" of the model's responses, the researchers found.</p>

          
                  </div>
                    
        
          
    
    <div>

        
        <div>
          
          
<h2>“A false aura of dependability”</h2>
<p>Using supervised fine-tuning (SFT) to introduce even a small amount of relevant data to the training set can often lead to strong improvements in this kind of "out of domain" model performance. But the researchers say that this kind of "patch" for various logical tasks "should not be mistaken for achieving true generalization. ... Relying on SFT to fix every [out of domain] failure is an unsustainable and reactive strategy that fails to address the core issue: the model’s lack of abstract reasoning capability."</p>
<p>Rather than showing the capability for generalized logical inference, these chain-of-thought models are "a sophisticated form of structured pattern matching" that "degrades significantly" when pushed even slightly outside of its training distribution, the researchers write. Further, the ability of these models to generate "fluent nonsense" creates "a false aura of dependability" that does not stand up to a careful audit.</p>
<p>As such, the researchers warn heavily against "equating [chain-of-thought]-style output with human thinking" especially in "high-stakes domains like medicine, finance, or legal analysis." Current tests and benchmarks should prioritize tasks that fall outside of any training set to probe for these kinds of errors, while future models will need to move beyond "surface-level pattern recognition to exhibit deeper inferential competence," they write.</p>


          
                  </div>

                  
          






  <div>
  <div>
          <p><a href="https://arstechnica.com/author/kyle-orland/"><img src="https://cdn.arstechnica.net/wp-content/uploads/2016/05/k.orland-13.jpg" alt="Photo of Kyle Orland"></a></p>
  </div>

  <div>
    

    <p>
      Kyle Orland has been the Senior Gaming Editor at Ars Technica since 2012, writing primarily about the business, tech, and culture behind video games. He has journalism and computer science degrees from University of Maryland. He once <a href="https://bossfightbooks.com/collections/books/products/minesweeper-by-kyle-orland">wrote a whole book about <em>Minesweeper</em></a>.
    </p>
  </div>
</div>


  <p>
    <a href="https://arstechnica.com/ai/2025/08/researchers-find-llms-are-bad-at-logical-inference-good-at-fluent-nonsense/#comments" title="159 comments">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80"><defs><clipPath id="bubble-zero_svg__a"><path fill="none" stroke-width="0" d="M0 0h80v80H0z"></path></clipPath><clipPath id="bubble-zero_svg__b"><path fill="none" stroke-width="0" d="M0 0h80v80H0z"></path></clipPath></defs><g clip-path="url(#bubble-zero_svg__a)"><g fill="currentColor" clip-path="url(#bubble-zero_svg__b)"><path d="M80 40c0 22.09-17.91 40-40 40S0 62.09 0 40 17.91 0 40 0s40 17.91 40 40"></path><path d="M40 40 .59 76.58C-.67 77.84.22 80 2.01 80H40z"></path></g></g></svg>
    159 Comments
  </a>
      </p>
              </div>
  </article>


  


  


  <div>
    <header>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 26"><defs><clipPath id="most-read_svg__a"><path fill="none" d="M0 0h40v26H0z"></path></clipPath><clipPath id="most-read_svg__b"><path fill="none" d="M0 0h40v26H0z"></path></clipPath></defs><g clip-path="url(#most-read_svg__a)"><g fill="none" clip-path="url(#most-read_svg__b)"><path fill="currentColor" d="M20 2h.8q1.5 0 3 .6c.6.2 1.1.4 1.7.6 1.3.5 2.6 1.3 3.9 2.1.6.4 1.2.8 1.8 1.3 2.9 2.3 5.1 4.9 6.3 6.4-1.1 1.5-3.4 4-6.3 6.4-.6.5-1.2.9-1.8 1.3q-1.95 1.35-3.9 2.1c-.6.2-1.1.4-1.7.6q-1.5.45-3 .6h-1.6q-1.5 0-3-.6c-.6-.2-1.1-.4-1.7-.6-1.3-.5-2.6-1.3-3.9-2.1-.6-.4-1.2-.8-1.8-1.3-2.9-2.3-5.1-4.9-6.3-6.4 1.1-1.5 3.4-4 6.3-6.4.6-.5 1.2-.9 1.8-1.3q1.95-1.35 3.9-2.1c.6-.2 1.1-.4 1.7-.6q1.5-.45 3-.6zm0-2h-1c-1.2 0-2.3.3-3.4.6-.6.2-1.3.4-1.9.7-1.5.6-2.9 1.4-4.3 2.3-.7.5-1.3.9-1.9 1.4C2.9 8.7 0 13 0 13s2.9 4.3 7.5 7.9c.6.5 1.3 1 1.9 1.4 1.3.9 2.7 1.7 4.3 2.3.6.3 1.3.5 1.9.7 1.1.3 2.3.6 3.4.6h2c1.2 0 2.3-.3 3.4-.6.6-.2 1.3-.4 1.9-.7 1.5-.6 2.9-1.4 4.3-2.3.7-.5 1.3-.9 1.9-1.4C37.1 17.3 40 13 40 13s-2.9-4.3-7.5-7.9c-.6-.5-1.3-1-1.9-1.4-1.3-.9-2.8-1.7-4.3-2.3-.6-.3-1.3-.5-1.9-.7C23.3.4 22.1.1 21 .1h-1"></path><path fill="#ff4e00" d="M20 5c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8m0 11c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3"></path></g></g></svg>
      
    </header>
    <ol>
              <li>
                      <a href="https://arstechnica.com/science/2025/08/how-old-is-the-earliest-trace-of-life-on-earth/">
              <img src="https://cdn.arstechnica.net/wp-content/uploads/2025/08/Metapelite-photo-Whitehouse-768x432-1754688257.jpg" alt="Listing image for first story in Most Read: How old is the earliest trace of life on Earth?" decoding="async" loading="lazy">
            </a>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                  </ol>
</div>
  </main>





  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[StarDict sends X11 clipboard to remote servers (305 pts)]]></title>
            <link>https://lwn.net/SubscriberLink/1032732/3334850da49689e1/</link>
            <guid>44872313</guid>
            <pubDate>Tue, 12 Aug 2025 04:08:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/SubscriberLink/1032732/3334850da49689e1/">https://lwn.net/SubscriberLink/1032732/3334850da49689e1/</a>, See on <a href="https://news.ycombinator.com/item?id=44872313">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p>
<a href="https://stardict-4.sourceforge.net/index_en.php">StarDict</a> is a
GPLv3-licensed cross-platform dictionary application. It includes dictionaries
for a number of languages, and has a rich plugin ecosystem. It also has a
glaring security problem: while running on X11, using Debian's default configuration,
it will send a user's text selections over unencrypted HTTP to two remote servers.
</p>

<p>
On August&nbsp;4, Vincent Lefevre
<a href="https://lwn.net/ml/all/20250804092217.GA962280@qaa.vinc17.org/">
reported</a> the problem to the oss-security mailing list and to
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1110370">
Debian's bug tracker</a>.
He identified it while testing his setup before the
upcoming Debian&nbsp;13 ("trixie") release.
Installing StarDict will also
install the <tt>stardict-plugin</tt> package by default, because the former
recommends the latter. The plugins package contains a set of commonly used
StarDict plugins, including a plugin for
<a href="https://www.youdao.com/">
YouDao</a>, a Chinese search engine that supplies Chinese-to-English
translations. The plugin also contacts a second online Chinese dictionary,
<a href="https://dict.cn/">
dict.cn</a>.
</p>

<p>
This would normally not be much cause for concern; of course a dictionary
program will include code to talk to dictionary-providing web sites. But one of
StarDict's features, which is also enabled by default, is its "scan"
functionality: it will watch the user's text selections (i.e. text highlighted
with the mouse), and automatically
provide translations as a pop-up. Taken together, the two features result in any
selected text being sent to both servers. This only occurs while StarDict is
open, but the application is designed to be left open in the background in case
the user needs a quick reference while reading.
</p>

<blockquote>
The staff here at LWN.net really appreciate the subscribers who make
our work possible. Is there a chance we could interest you in <a href="https://lwn.net/Promo/daroc2/claim">becoming one of them</a>?
</blockquote>
<p>
StarDict on Wayland doesn't have this problem, because Wayland
prevents applications from being
able to capture text from other applications by default. That does mean that it
breaks StarDict's scan feature, though.
</p>

<p>
Xiao Sheng Wen, the Debian package maintainer for StarDict,
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1110370#10">
didn't see a problem</a> with the behavior, noting that if a user doesn't want
to use the scan functionality or the YouDao plugin, both can be disabled.
Lefevre
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1110370#29">
wasn't satisfied</a> with that, saying:
</p>

<blockquote>
But this is not the whole point. Features with privacy concerns
should never be enabled by default (unless the feature is the
only purpose of the package, and such a package would never be
installed automatically — and even in such a case, there should
be a big warning first).
</blockquote>

<p>
In response, Xiao
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1110370#34">
pointed out</a> that
<a href="https://packages.debian.org/trixie/stardict-gtk">
the package description</a> can be read by any
user who chooses to install the software, and it does mention the scan feature.
That said, I noted during my investigation that the
<a href="https://packages.debian.org/trixie/stardict-plugin">
description</a> of <tt>stardict-plugin</tt> did
not mention that the YouDao plugin uses an online service instead of an offline
dictionary. Xiao suggested splitting the networked dictionary plugins into a
separate package, but was "<q>not sure whether it's very necessary to do so</q>".
</p>

<p>
It is worth noting that the scan feature, while obviously a problem in this
context, is one of the reasons that a user might choose to use StarDict over an
alternative. Reading foreign-language media is often easier when words can be
sought in a dictionary with as little fuss as possible. From that perspective,
it makes sense that Xiao might not view the feature as problematic.
</p>

<p>
Any user who did read the description of the package, and who knew what the
YouDao plugin would do, might nevertheless expect the resulting communication to
at least be encrypted. But the plugin actually reaches out to its backend
servers — dict.youdao.com and dict.cn — over unsecured HTTP. So, not only are
these servers sent any text the user selects, but anyone who can view traffic
anywhere along its path can see the same thing.
</p>

<p>
This is not even the first time that StarDict has sent user selections to the
internet; the
same kind of problem
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=534731">was
reported</a> by Pavel Machek in 2009 and
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=806960#5">again</a>
by "niekt0" in 2015. The 2009 bug was solved by patching
the application's default configuration to disable networked dictionaries. That
appears to have worked for a time, but the YouDao plugin, which was added in
2016, does not respect the
configuration option. The 2015 problem was not fixed
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=806960#57">until
August 6 of this year</a> (although the package was removed from Debian for
unrelated reasons for a few months from 2020 to 2021). That fix just removed the
<tt>stardict_dictdotcn.so</tt> plugin, which also sent translation requests to
dict.cn and was later subsumed by the YouDao plugin,
from the package. In fairness to Xiao, he
was not the
StarDict maintainer in 2015 —
<a href="https://web.archive.org/web/20150912065912/https://tracker.debian.org/pkg/stardict">
that was</a> Andrew Lee — but Xiao
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=806960#28">knew</a>
about the 2015 bug since at least 2021, even if he didn't consider it a priority.
</p>

<p>
According to Debian's
<a href="https://qa.debian.org/popcon.php?package=stardict">package popularity
contest statistics</a>,
only 178 people have
StarDict installed, down from around a thousand between 2009 and 2015.
That obviously doesn't capture people who have configured
their Debian system not to participate in the statistics collection, but it does
suggest there were a number of people who might have been broadcasting their text
selections to the internet for several years. Given that people copy and
paste passwords from their password managers, or select the text of sensitive
emails and documents during the course of editing, that should be a significant cause
for concern.
</p>

<p>
Debian is a large distribution, containing tens of thousands of packages.
Moreover, because of its commitment to stability, a decent fraction of these
are older software with delayed or sporadic updates. The reality is that Linus's
law ("<q>given enough eyeballs, all bugs are shallow</q>") only holds up if
people are looking — and if, once they have looked, and have reported things,
the people who have taken up maintenance of the software actually agree that
there is a problem.
</p>

<p>
Part of the justification for moving to Wayland over X11 is to make security
vulnerabilities relating to one application spying on another more difficult to
introduce. That obviously has to be balanced against the
cost of adapting to a new way of doing things, but it's not hard to see why so
many people are eager to make Wayland work. Maybe, in the future, StarDict's
default behavior would
have had little to no impact. Or maybe StarDict would have started asking for
special permissions to let it work on Wayland, and users would have accepted
those defaults the same way they currently do.
</p>

<p>
Either way, the existence of serious security problems that can be
found, diagnosed, reported, and still remain unfixed is cause for concern. Linux
has long enjoyed a reputation for security; maintaining that reputation depends
on the developers, maintainers, and users of open-source software caring enough
to fix security problems when they arise.
</p><br clear="all">
               <br clear="all">
               <hr>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Weathering Software Winter (2022) (102 pts)]]></title>
            <link>https://100r.co/site/weathering_software_winter.html</link>
            <guid>44871901</guid>
            <pubDate>Tue, 12 Aug 2025 03:05:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://100r.co/site/weathering_software_winter.html">https://100r.co/site/weathering_software_winter.html</a>, See on <a href="https://news.ycombinator.com/item?id=44871901">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<!-- Generated file, do not edit -->

<p>This is a blog post based on a transcript of a talk by Devine on November 26th 2022. Watch the <a href="https://www.youtube.com/watch?v=9TJuOwy4aGA" target="_blank">video version</a> on (YouTube). The slideshow presentation was made using <a href="https://100r.co/site/adelie.html">Adelie</a>.</p>

<p>Thank you to Matt Mascarenhas for providing us with an auto-transcript, it would have taken us ages to put this text together without it.</p>

<p>While we are grateful to have had the opportunity to give this presentation, an event in 2025 has resulted in us distancing ourselves from the conference responsible for hosting this talk. Below is a text by Devine explaining the situation.</p>

<details>
    <summary>Click to expand</summary>
 		<p><b>February 2025.</b><i> Some months ago, attendees of the Handmade Seattle conference expressed their grievances with the November 2024 conference in regards to its pivoting to include talks with mentions of social justice awareness and a slightly more diverse panel of speakers, at the cost of the usual guy-packs-bytes-in-the-right-sequence talks. Which I have nothing against as someone who tend to give talks of that exact flavor.<br>
		In any case, the conference organizer apologized for the poor selection of speakers which did not correspond to the expectations of ticket holders, promising to resolve the issue in the following year, and in passing, that free and open source software developers would no longer be welcomed as speakers.<br>
		I happened to be present in the chatroom when the apology letter went out and merely questioned whether the choice was really about the lack of low-level talks, and not something else. It did not take long for bigots of all sorts to come out and lament the good old days of the conference and soon the chatroom was ablaze with some pretty vile things against trans people, this went on for hours without intervention, the usual.<br>
		What I did not expect was for the conference organizer, who ghosted me for months, to finally break radio silence to slam me for speaking out and partially blaming me for the unraveling of the conference organization, and decided against covering the agreed upon travel stipend. I have since requested for the talk videos to be removed from their YouTube channel, Vimeo, and their website.</i><br>Reposted from <a href="https://wiki.xxiivv.com/site/now.html" target="_blank">xxiivv.com</a></p>
    </details>

<h2>Weathering Software Winter</h2>

<p>I work with a little studio called Hundred Rabbits, it is a small collective of two which operates from a small solar-powered sailboat. All of our devices are donated, discarded devices. Our <a href="https://100r.co/site/philosophy.html">philosophy</a> is that to make fast software, you need slow computers, and we've tried to espouse this as much as we could. We spend our time sailing around, and doing experiments with resilience, that covers computers, but we also touch on food security, preservation, and on studying past technologies that could be used today in times of crisis.</p>

<img src="https://100r.co/media/content/blog/wsw_04.jpg" loading="lazy">

<p>We started sailing seven years ago, it took us all around the Pacific. We went through <a href="https://100r.co/site/mexico.html">Mexico</a>, <a href="https://100r.co/site/french_polynesia.html">French Polynesia</a>, <a href="https://100r.co/site/new_zealand.html">New Zealand</a>, up through <a href="https://100r.co/site/fiji.html">Fiji</a>, <a href="https://100r.co/site/japan.html">Japan</a>, and then followed the Russian Coast, brushing by Alaska before returning to <a href="https://100r.co/site/western_canada.html">Western Canada</a>. Our thinking was that we could keep doing art, music, and video games as we sailed around, but it soon became obvious that all the technology that we took for granted, and that we had with us, was not designed to leave the Western world.</p>

<p>The moment we cast off from Mexico, all of our devices started breaking down. In his 2022 Handmade Seattle opening speech, Abner was making a point about the Roombas starting to fail. If your Roomba fails, you pick up a broom, but on a sailboat you depend on devices working to find your position, knowing the weather, etc. These things have a more direct impact on your survival, and all of that technology is built on the same stack as the Roomba.</p>

<img src="https://100r.co/media/content/blog/wsw_05.jpg" loading="lazy">

<p>Many of the tools that we thought we could rely on broke down, whether it is Apple products, or software that require subscription services, <abbr title="Digital Rights Management">DRM</abbr>, etc. As an artist you spend time developping a skill, you become a Photoshop illustrator. When your connection to the internet fails and that the software locks up, that skill that you thought was yours was actually entirely owned by someone, and can be taken away.</p>

<p>Even though we've been paying for this sort of software for years, the moment that you can't have access to authenticate yourself that skill is gone. We didn't expect this, it scared us.</p>

<img src="https://100r.co/media/content/blog/wsw_06.jpg" loading="lazy">

<p>Nowadays, everything is built on the cloud. While sailing along the US coast in early 2016, we'd stop by conferences to see all the happenings in tech. We would speak with people at the booths, and they would try and sell us their product, but we'd have to stop them mid-sentence to ask, "Does it work offline?" 99% of times people say, "ah, yeah no, sorry. It's on the cloud."</p><p>It seemed that no one was building things that we could use. This was a sad realization. I love programming, and for a time it seemed that it was utterly incompatible with our new way of life.</p>

<p>Before I go on any further, I will paint you a picture of what it looks like to try to use modern stacks when away from the shores of the Western world.</p>

<p>Imagine two people in a small sailboat in the tropics, somewhere like the Marquesas, or another island in the South Pacific Ocean. These islands are covered with beautiful lush forests, they require rain and sun, that's all, then there's us sharing that same space, busy lifting a smartphone in a Ziploc bag up the mast to try and get one bar of signal to update Xcode, which at the time was 11 gigs. We had a stack of cards, each worth two gigabytes of mobile data, but with Xcode you can't resume the download if it fails. We could swap the codes for the cards, and if we did it within 10 seconds it would detect a timeout and would continue. The problem is that if the download is not done by 1600, then the sun is setting, the solar panels aren't charging the batteries anymore, and our laptops are dying. The download is at 7 gigs with three more hours left to download the update, it won't finish, and we will have spent all that data for nothing.</p>

<p>This wasn't ideal. We tried to look for alternatives...</p>

<p><b>Note:</b> In 2016, we were publishing games for iOS, we used Xcode, as well as iPhones, and Macbook Pros. Rek used Photoshop to draw, having never been exposed to tools like Krita, and Gimp. We knew of Linux back then, but not well enough to consider it. As artists, we didn't think Linux could work for us (evidently, we were wrong). We'd always lived in cities, close to an internet connection. Updating Xcode on a fast and stable home connection was never a problem, we never looked at the size of any download because we didn't have to care. On land, we had seemingly infinite power, and we had bandwidth. When resources are scarce, then we had to start focusing on details like download size, and how much sun the day will bring. We were so focused on sailing that first year, that we didn't stop to think if it made sense to do iOS development while traveling. When we left Canada we were a bit naive, but we didn't know what we didn't know. Now, in 2023, Rek draws mainly by hand, and processes drawings with Gimp. Both of us use linux(Manjaro), and we don't own a smart phone. See <a href="https://100r.co/site/tools_ecosystem.html">tools ecosystem</a> for further details on our shaky beginnings.</p>

<img src="https://100r.co/media/content/blog/wsw_07.jpg" loading="lazy">

<p>We noticed that all the software that we had written in the past was gradually becoming unusable. We grew up in Montreal, and many of our friends worked in <abbr title="Triple-A">AAA</abbr> studios like Ubisoft, making free-to-play games, building projects that had a lifespan of three years. The projects that we made in the past on the Apple stack, Electron, or on Unity3D, also had a lifespan of three to four years, but games like Super Mario, as well as others produced in that era, are still playable today. We are in a dark age, where game developers and artists spend years building games that quickly become lost <a href="http://wiki.xxiivv.com/site/stack.html" target="_blank">bitrot</a>. We'll never be able to play Scott Pilgrim on the PlayStation again.</p>

<p>Looking online, it seemed that others shared these concerns.</p> 

<p>In the above image are four philosophies of digital data preservation, they all have their flaws. Data preservation is a somewhat new field, we don't know what sort of data we'll be able to recover in a hundred years, but from the experiments that we've looked at, it doesn't look good. The <abbr title="The British Broadcasting Corporation">BBC</abbr> had a project where they were trying to mimic one of their longest lasting books, the <a href="https://en.wikipedia.org/wiki/Domesday_Book" target="_blank">Domesday book</a>. It was written by monks a few hundred years ago. The <abbr title="The British Broadcasting Corporation">BBC</abbr>'s thinking was that we still have this book today, we can still read it, do we have technology to make something like this? Is it possible to record our way of life today, so that people in a thousand years can see how we lived? They created the <a href="https://en.wikipedia.org/wiki/BBC_Domesday_Project" target="_blank">BBC Domesday</a>, a disc that contained music, movies, and scientific papers. Then 10 years later, it was an unreadable, people forgot how to decrypt and decompile the disc. It seemed that there was no real way to preserve data long-term, and so we decided to try our own little experiment.</p>

<p>As a disclaimer, all that I am writing now is very naive. I draw, and I make music, when I started doing research I didn't have the vocabulary to find what I was looking for. I didn't know what virtual machines were, I didn't know what compilers were either. I had a vague idea of what programming was. I had written Swift and Objective C, but had no conception of how it actually tied to processors. It seemed like I was learning a service, the same way I was learning "To Photoshop". It wasn't like learning a skill, you don't learn to draw when you use Photoshop, you learn how to operate within the confines of someone else's playground, and when that rug is pulled from underneath you, there's nothing you can say or do, and you never really understood how it worked in the first place so you can't really replicate it.</p>

<img src="https://100r.co/media/content/blog/wsw_08.jpg" loading="lazy">

<p>We eventually stumbled on the words <b>virtual machine</b>. With a Super Mario brother <abbr title="Nintendo Entertainment System">NES</abbr> file, I knew I could put it on a computer and I could run it, I could run it on my phone, I could run it on an old computer, I could run it on a Super Nintendo, I could also run a Super Nintendo emulator running Mario on a Nintendo 64. This seemed a good way of preserving data. We decided to not give up entirely on software, and to see what could be done in that space using virtual machines.</p>

<img src="https://100r.co/media/content/blog/wsw_09.jpg" loading="lazy">

<p>Hardware is extremely cheap, and because it is it's covering the world with e-waste, and all of it is there for the taking. Everyone has drawers full of old devices, Super Nintendos, Playstations, Dreamcasts, all of which are considered obsolete, people stopped developing games for them, but we thought we could give a second life to such devices. When looking into how this could be done, it led us to interesting places. We became interested in seeing how we could repurpose old electronics. There didn't seem to be any competition. If you do like everyone else, you're competing with everyone else. For example, if making iOS 10 software the marketplace is completely saturated, but if you're going be release an Atari game today, it's going to be huge. There's no one giving purpose to these devices anymore. We tried to do something completely left field. To start, our goal was to try and make games for the NintendoDS.</p>

<img src="https://100r.co/media/content/blog/wsw_10.jpg" loading="lazy">

<p>So looking at a VM from the outside, without having a sort of academic background, the first thing you find is the <a href="https://en.wikipedia.org/wiki/Java_virtual_machine" target="_blank">JVM</a>. I've never written any Java, but I would go around and tell my friends who are actual programmers, "I'm gonna make the <abbr title="Java Virtual Machine">JVM</abbr>! It seems like this would solve our problem!" Their response was that the JVM was so fractalized, and that this wasn't what we were looking for. We found plenty of academic papers with no software written for them.</p>

<img src="https://100r.co/media/content/blog/wsw_11.jpg" loading="lazy">

<p>I dabbled into the Java ecosystem, and I couldn't make heads or tails of it</p>

<img src="https://100r.co/media/content/blog/wsw_12.jpg" loading="lazy">

<p>I knew that we wanted to make playful little projects that could run on a variety of devices, on a sort of cross platform that was not Electron. Instead of always targeting the new modern thing, we thought we could make a <abbr title="Virtual Machine">VM</abbr>, or something other, that could run increasingly further back into the past.</p>

<p>There is an incredible amount of fast computers out there. The first time <a href="https://100r.co/site/donsol.html">I made an NES game</a>, I was surprised at how much stuff I could draw on the screen at 60 fps. I had somehow been convinced that modern technology was better, faster, and all the eight bit stuff had been solved problems, I thought that we had explored this problem space entirely.</p>

<img src="https://100r.co/media/content/blog/wsw_13.jpg" loading="lazy">

<p>It didn't seem to be the case. There were a lot of ideas in the past that were forgotten, and I made it my mission to explore this. It was <abbr title="Coronavirus Disease 2019 (SARS-2)">COVID</abbr>, everyone was confined to their homes, it was the perfect time to figure out how computers work. We're going to look into the past to see how people did it, and what ideas were forgotten.</p>

<img src="https://100r.co/media/content/blog/wsw_14.jpg" loading="lazy">

<p>There was a time when computers were super playful, but now they feel cold, and have been weaponized against people. The sort of playfulness that you'd find in <a href="https://en.wikipedia.org/wiki/Microsoft_Bob" target="_blank">Microsoft Bob</a>, I can't really find a parallel for today. I can imagine what Microsoft Bob would look like if made today, it would try to sell you all sorts of shit. I don't think we, as a society, have a system in place that would foster the creation of something as playful as this.</p>

<img src="https://100r.co/media/content/blog/wsw_15.jpg" loading="lazy">

<p>A realization that I had working on something like this was that customizing your hardware, and your software, makes you care.</p>

<p>If you buy something off the shelf, like an iPhone, which you can't change, you're less likely to care for it, and it's going to end up in a drawer. Back then you could go to Radio Shack and get parts for your computer, it was possible to customize it (for example, the <a href="https://en.wikipedia.org/wiki/Altair_8800" target="_blank">Altair</a>), and then you could know it in its entirety. Devices that were customized, or built from near-scratch, are still loved, but as for your old iPhone6, you don't know where it is, and even if you did it's probably unusable. Devices like the iPhone6 can't be repaired, they are designed to fail in ways that are inscrutable.</p>

<img src="https://100r.co/media/content/blog/wsw_16.jpg" loading="lazy">

<p>Instead of trying to make things as broadly accessible as possible, we thought we'd try to see what we could do if we designed it for just one person, a sort of personal computing that was not designed to scale.</p><p>I can see the appeal of languages like Rust, I won't be learning it, but if you're convinced that you can use computers to solve problems, then obviously this will not be relevant to you. I think that if you are forced to use a computer, there is no way that it can be playful. There was a writer who said, "if you're forced to play, you can't play."</p>

<p>I don't have a smartphone. Walking in Seattle I saw the streets lined with lime scooters everywhere, to see the menu to be allowed to use a scooter you need to scan a QR code. There's a layer of reality that's being forced onto people to use technology.</p>

<p>This is not what I'm talking about here. What we're trying to do is something that is closer to your personal computer, something that would be designed and tailored to help you play.</p>

<img src="https://100r.co/media/content/blog/wsw_17.jpg" loading="lazy">

<p>When we began looking at what VMs there were, we looked into the past, and that brought us to <a href="https://en.wikipedia.org/wiki/Smalltalk" target="_blank">Smalltalk</a>. I read this book called What the <a href="https://en.wikipedia.org/wiki/What_the_Dormouse_Said" target="_blank">Dormouse Said</a>, and it talked about the history of Stanford, and how people had this utopian idea of what computers could be. This is way before I even became interested in computers, learning what their vision was then made me optimistic about what could be done.</p>

<p>That was when I was first exposed to the idea of a virtual machine, or byte code. As I mentioned before, looking up information online without the vocabulary you need to find things is really difficult. There was no way I could go around learning about personal computing without spending some time learning Smalltalk.</p>

<img src="https://100r.co/media/content/blog/wsw_18.jpg" loading="lazy">

<p>Obviously, the moment that you start going that down that route, you will have people telling you that you really have to try <a href="https://en.wikipedia.org/wiki/Lisp_machine" target="_blank">Lisp machines</a>. I spent time learning about Symbolics and LVP. I learned about a sort of system where the whole thing could be inspected, a system that was trying to do computing in a very personal way.</p>

<p>Nowadays, it's akin to the browser, where you can go on a website that you like, and right click to inspect. It is less and less the case now, but for a while you could inspect websites to see how it was put together. This was empowering, emblematic of the era.</p>

<img src="https://100r.co/media/content/blog/wsw_19.jpg" loading="lazy">

<p>This doesn't work on a <abbr title="Virtual Machine">VM</abbr> at all, but it's relevant because <b>Niklaus Wirth</b>, who wrote <a href="https://en.wikipedia.org/wiki/Oberon_(operating_system)" target="_blank">Oberon</a>, wrote an entire operating system that came with a book.</p>

<p>The Oberon book is really nice, especially if you come into it with a clear mind, without prior knowledge or expectation of what programming is. The book explains how to build an operating system from scratch. It uses a language like <a href="https://en.wikipedia.org/wiki/Pascal_(programming_language)" target="_blank">Pascal</a>, which is very easy to read, more beautiful than other <a href="https://en.wikipedia.org/wiki/ALGOL" target="_blank">ALGOL languages</a>. One of the first things that it teaches you to do is how to draw pictures, which I thought was kind of interesting as someone who's very visually-inclined.</p>

<img src="https://100r.co/media/content/blog/wsw_20.jpg" loading="lazy">

<p>In the book Niklaus Wirth mentions the <a href="https://en.wikipedia.org/wiki/P-code_machine" target="_blank">P-machine</a>. I was beginning to form an idea of what virtual machines were, and he just briefly mentions it, "oh! By the way, I wrote this Pascal compiler targeting a virtual machine." I was like, "a language can target a virtual machine?! What?" And the reason why it was so easy for him to port the compiler between platforms, is that the opcodes running it were extremely simple, and very few in number.</p>

<p>I thought then, <b>this</b> is a way to do data preservation that is appealing to me.</p>

<img src="https://100r.co/media/content/blog/wsw_21.jpg" loading="lazy">

<p>I learned Pascal.</p>

<p>Pascal is a beautiful language. In the above image, I am running it in an emulator for the Macintosh. I loved that I could have a whole operating system running in a small window that wasn't Linux, that wasn't some big <a href="https://en.wikipedia.org/wiki/QEMU" target="_blank">QEMU image</a>. It was a little self-contained system, which I could destroy, or start over with really quickly.  I could run it and do 3D at 60 fps by running the emulator at 128 times its speed, and thought that was cool, a testament to how fast computers are nowadays.</p>

<img src="https://100r.co/media/content/blog/wsw_22.jpg" loading="lazy">

<p>That led me to learn about the history of C.</p>

<p>I migrated all my platform to <a href="https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs" target="_blank">Plan 9</a>. Plan 9 has its own C compiler, and it's not quite C89, it's its own thing, a no-concessions system.</p>

<p>The people who built this weren't planning to make money with it, you can really tell that it's a product of love. That made me optimistic about what personal computing could be.</p>

<img src="https://100r.co/media/content/blog/wsw_24.jpg" loading="lazy">

<p>Plan 9 didn't run on a VM, but it inspired another system. The lessons that they learned during Plan 9 led to the building of something called <a href="https://en.wikipedia.org/wiki/Inferno_(operating_system)" target="_blank">Inferno</a>, which runs on a VM.</p>

<p>I think I was starting to understand what <abbr title="Virtual Machines">VMs</abbr> were. If this entire operating system runs on a vm, this is what I wanna be doing.</p>

<img src="https://100r.co/media/content/blog/wsw_25.jpg" loading="lazy">

<p>The scale of something like Inferno is quite big, but in an afternoon I could run through the whole C code for this virtual machine. The above (image) is the opcodes that it had.</p>

<img src="https://100r.co/media/content/blog/wsw_26.jpg" loading="lazy">

<p>It was in part inspired from the actual hardware that ran the <a href="https://en.wikipedia.org/wiki/Apple_Newton" target="_blank">Apple Newton</a>.</p>

<p>I could run it in an afternoon, and know exactly how it ran. I would look at the compiler that targeted the Dis virtual machine, and could see how they reduced the problem-space to a limited number of operations.</p>

<img src="https://100r.co/media/content/blog/wsw_27.jpg" loading="lazy">

<p>The people who worked really hard in the past to get away from time-sharing system would laugh, or they would cry, at how we got tricked into falling back in that situation where computers were something that was done behind a wall. You have a terminal, but that's where your power ends.</p><p>

<img src="https://100r.co/media/content/blog/wsw_28.jpg" loading="lazy">

</p><p>I wanted a way of doing computers that nobody could take away from me.</p>

<p>I would read people who would write entire operating system on a weekend, but I couldn't even map this idea onto things I was seeing, a bridge was missing.</p>

<img src="https://100r.co/media/content/blog/wsw_29.jpg" loading="lazy">

<p>The modern stack doesn't really work for us, it doesn't apply to the limitations that we have on the boat. We have 180 watts of solar. We just spent the whole summer with two 6-volt batteries, which is very small. When you're going down that route, at every turn people are telling to just put more solar panels, or to buy more batteries. That is such a modern way of solving your problem. In reality, technology like this(especially high-tech) rarely solves problems. It creates a lot of other problems, which on a sailboat is very immediate. Putting more solar would mean more windage, more chance of things flying off and cutting our limbs. More batteries would mean the boat would be heavier, it would stop us from being able to run away from storms.</p>

<p>The limits of a sailboat gives us a space for creativity, and these limitations became a sort of playground for us.</p>

<p>I am not the sort of programmer who could build Plan 9, or Oberon, or Lisp machines, but I knew I could write simple NES games and port them. I couldn't write an <abbr title="Nintendo Entertainment System">NES</abbr> game inside an <abbr title="Nintendo Entertainment System">NES</abbr> game, and that was such a shame. I wanted something that was completely bootstrapped.</p>

<img src="https://100r.co/media/content/blog/wsw_30.jpg" loading="lazy">

<p> So after looking at 6502, the <a href="https://en.wikipedia.org/wiki/Commodore_64" target="_blank">Commodore 64</a> emulator was extremely complex, more complex than I could grasp. It was the limit of what I think a single person could understand. It seemed like a simple system, it was just a box, but writing an emulator for it was more than a weekend project. I was looking for something that I could nail in a single weekend.</p>

<img src="https://100r.co/media/content/blog/wsw_31.jpg" loading="lazy">

<p>6502 has a lot of mnemonics. When trying to implement the 6502 as a <abbr title="Virtual Machine">VM</abbr>, it is possible to make a naive implementation in a week, or in a weekend if you don't do anything else. My knowledge of C is very limited, but luckily I had help. I wondered if this instruction set could be reduced further...</p>

<img src="https://100r.co/media/content/blog/wsw_32.jpg" loading="lazy">

<p>It got me thinking about complexity, and on what simplicity means. <a href="https://en.wikipedia.org/wiki/Andrey_Kolmogorov" target="_blank">Kolmogorov</a>, the mathematician, said that the index of complexity of any one system is the length of the program that could generate a specific string. I really like that way of looking at complexity and simplicity, because nowadays it's sort of convoluted. If you don't really know about hardware, it seems that everyone's trying to make the programmer comfortable, and not focusing on making an actual fast product.</p>

<p>Most of the people I know who are hobbyist programmers use type systems, memory safety, all sorts of <i>training wheels</i>(I'm kidding here, if you're a large team, please do use type systems for god's sake). When I work on my own, I want to reduce the problem space to as little a thing as I can make it. I don't like programming that much, and in the future I'm gonna hate it probably even more, so I want my future self to be able to reimplement my entire system at most in a weekend.</p>

<img src="https://100r.co/media/content/blog/wsw_33.jpg" loading="lazy">

<p>So where does that bring me? 6502 is beyond the scope of what I was hoping to do, because having done it twice already, I don't think I'll have it in me to do it again.</p>

<img src="https://100r.co/media/content/blog/wsw_34.jpg" loading="lazy">

<p>Looking back at that same era with <a href="https://en.wikipedia.org/wiki/Bell_Labs" target="_blank">Bell Labs</a>, this was a time when people would build paper computers to teach kids to understand what a program counter was, how things moved around in the program, and how to navigate byte code.</p>

<p>No one can take a paper computer away from you. As long as you have paper and pen you can still solve problems, albeit slowly, and more painfully, but this is a form of computing that can be easily ported.</p>

<img src="https://100r.co/media/content/blog/wsw_35.jpg" loading="lazy">

<p>When I was looking at the <abbr title="The British Broadcasting Corporation">BBC</abbr>'s Domesday book, I noticed that Alan Kay(Small Talk) also had a project that was in line with what I was trying to do. He thought, "Smalltalk is a vm, how much of a small VM can possibly run smalltalk-72."</p>

<p>He wrote a paper called <a href="https://dl.acm.org/doi/10.1145/2814228.2814250" target="_blank">The Cuneiform Tablets of 2015</a>, he had all these words to talk about computers that went viral. He said things like, "Lisp was the Maxwell equation of programming." As a minimalist geek I was glad to hear this, it's what I wanted, but then looking into Lisp, I thought that a language that creates garbage by design wasn't really what I was looking for. This was a bit more like it, but it was a register machine, and I didn't see how that mapped to Smalltalk.</p>

<img src="https://100r.co/media/content/blog/wsw_36.jpg" loading="lazy">

<p>So <a href="https://sr.ht/~bctnry/chifir/" target="_blank">ChifirVM</a> is not exactly what I'm looking for, but there are plenty of other ways of doing computing out there. Instantly, I fell onto one-instruction set computers, like <a href="https://wiki.xxiivv.com/site/subleq.html">SUBLEQ</a>. I thought it was a disgusting tar pit, but I could implement it in 15 minutes, and I would be really kind for my future self to make a system that could run on something that I could implement in 15 minutes.</p> 

<p>The problem was that the toolchain required to write things that could actually have any purpose for it was immense. There were people who wrote C compilers down to Subleq, but this shifts the whole complexity back to the compiler, and that doesn't solve my problem. </p>

<p>There were computing paradigms which I absolutely loved, so pure, so beautiful, but at the same time they mapped so poorly to silicone that they didn't really work for me.</p>

<img src="https://100r.co/media/content/blog/wsw_37.jpg" loading="lazy">

<p><a href="http://wiki.xxiivv.com/site/thue.html" target="_blank">Thue</a>(one of my favorites) is an esoteric programming language that has one operator, and only has a replacement rule. So you have an accumulator, which is a series of characters, and every rule, one for every line, is a replacement of what's on the left with what's on the right. It was very slow, but extremely powerful, and could be implemented in 30 minutes.</p>

<img src="https://100r.co/media/content/blog/wsw_38.jpg" loading="lazy">

<p><a href="http://wiki.xxiivv.com/site/fractran.html" target="_blank">FRACTRAN</a> was another <abbr title="One-Instruction Set Computer">OISC</abbr> system. It has one operation: multiply. Its primitives were not bytes, or shorts, but fractions. It used prime encoding, which was one of the most beautiful mathematical concept that I knew of.</p>

<p>For a while I thought I had found my bedrock, I was going to use fractions to make computers. The only issue... is that it maps poorly to silicone.</p>

<img src="https://100r.co/media/content/blog/wsw_39.jpg" loading="lazy">

<p><a href="http://wiki.xxiivv.com/site/logic.html" target="_blank">SKI calculus</a> was beautiful, it has this mathematical elegance to it. I went down that rabbit hole, and I barely emerged back alive.</p>

<p>I recommend everyone to take a Lisp detour, and then learn SKI, to read Smullyan, and to read about others like him who don't care about making products, but really want to explore software in a way that is very creative and artistic. I almost made this my bedrock, except that at the VM layer garbage collection was a bad idea.</p>

<img src="https://100r.co/media/content/blog/wsw_41.jpg" loading="lazy">

<p><a href="http://wiki.xxiivv.com/site/brainfuck.html" target="_blank">Brainfuck</a> has 7 instructions, implementing it would take 45 minutes, maybe an hour.</p>

<p>We are going up the abstraction chain here, and the pattern I was seeing was that the lesser a mnemonic or complexity that you reduced it to, the slower it got. Brainfuck was surprisingly fast, you could run a mandelbrot on a system that was quite small to implement, but that wasn't the sort of programming I wanted to do. It led me to another system...</p>

<p><a href="https://en.wikipedia.org/wiki/Charles_H._Moore" target="_blank">Chuck Moore</a> never came up in my books about Stanford, he must have been some sort of outsider. FPGA is not something I was very quite familiar with, but people were trying experimental computing systems with them. It didn't matter, it was goo, you could shape it in any way you wanted.</p>

<img src="https://100r.co/media/content/blog/wsw_40.jpg" loading="lazy">

<p>Someone wrote an <abbr title="Field-Programmable Gate Array">FPGA</abbr> system called <a href="https://excamera.com/files/j1.pdf" target="_blank">J1</a>, a <a href="https://en.wikipedia.org/wiki/Forth_(programming_language)" target="_blank">Forth system</a>. It had very few opcodes, but had one of the most beautiful mapping of byte code I had ever seen. The Stack Machine primitives were implemented so you could combine them with each other, with weird combinations of bit toggles on a byte you could have really interesting esoteric stack manipulators.</p>

<p>I was smitten.</p>

<p>It's a 16-bit Forth system, the biggest literal you can have in one of those words would be like 35k fixed. The arithmetic was really beautiful, but the whole system's maximum program that it could run was four kilobytes.</p>

<img src="https://100r.co/media/content/blog/wsw_42.jpg" loading="lazy">

<p>What I had in mind was slightly <b>more</b> than four kilobytes, but not much more. If I could have a full addressable, 64 would be really nice. I didn't want the complexity of the 6502.</p> 

<img src="https://100r.co/media/content/blog/wsw_43.jpg" loading="lazy">

<p>The <a href="http://wiki.xxiivv.com/site/chip8.html" target="_blank">CHIP-8</a> is an interesting system that has a rich, vibrant community of people who build things for it during game jams.</p>

<p>The spec is quite simple, it fits on maybe two pages of paper, side by side. It feels like the paper computer in ways that I like, but it was not designed to be a general purpose driving <abbr title="Virtual Machine">VM</abbr>. It is meant to be building things in the scale of Pong. The keyboard is like a hex keyboard with just numbers on it. My plan was to build something that could build itself in it, so I'd need a keyboard, a cursor-a weird keyboard for me would not cut it.</p>

<img src="https://100r.co/media/content/blog/wsw_44.jpg" loading="lazy">

<p><a href="https://wiki.c2.com/?MachineForth" target="_blank">Machine Forth</a> was something I stumbled upon after. Chuck Moore wrote Forth, and then he thought it too complicated. I thought, "what do you mean it's complicated? There's like no syntax, no nothing. It's space-divided language. Implementing a Forth system is really fast." Chuck More, being himself, thought that he could do without all this 'cruft'. He reduced even further to Machine Forth which has 32, or 24 opcodes.</p>

<p>I kept seeing Forth over and over again, and couldn't really grasp, or see the beauty in it for a while. If you've just come from Lisp, you have whiplash when you fall into Forth. It has similar beauty. Lisp would be prefix, Forth would be <a href="http://wiki.xxiivv.com/site/notation.html" target="_blank">postfix</a>. Following that mindset you think you could be anyone, or you could do anything, and you chose to be Algol, why?</p>

<p>Going back and forth between Forth and Lisp, I couldn't make up my mind, but I kept seeing people who would fall in love with Forth, but were really bad at selling it. With Lisp it's really hard to find any Lisp code that you can actually copy/paste in a project because everyone's using weird macros, and libraries, and nothing is portable.</p>

<p>Forth had a different problem, everyone I'd talk to would say Forth was the best, and that I should really use it, but then I'd ask them questions like, "how do I calculate the distance between two points?" I walked away from that interaction thinking, well, it seems like a lot of people like Forth, but don't write it. It was hard to find any code at all. I know Forth is not portable, but it was hard to find just actual use-case of Forth that wasn't someone trying to learn Forth by implementing Forth and then moving on back to Rust.</p> 

<img src="https://100r.co/media/content/blog/wsw_46.jpg" loading="lazy">

<p>The way Forth works is really simple, you put stuff on a stack, it hits a token, pulls the item from the stack, etc. It doesn't have precedence rules.</p> 

<p>It seemed like a really good bedrock for the things I wanted to do.</p>

<img src="https://100r.co/media/content/blog/wsw_47.jpg" loading="lazy">

<p>Machine Forth was something that was going to be something close to the metal, Forth at its core is something pretty close to Assembly, but I wanted something that mapped exactly to Assembly, something that would be like, 'one token would be one byte, or one short'. </p>

<img src="https://100r.co/media/content/blog/wsw_48.jpg" loading="lazy">

<p>So after a while I picked a bunch of opcodes, and I'd shown them to my friends, and they were like, "these are bad." They were people I trust. If I'd been on my own, I would have likely given up and not done it, or would be writing JavaScript still. They were extremely patient with me, they understood what I was trying to do. People like Sigrid, Alderwick, and Andrew had infinite patience for my stupid questions, they would tell me, "I wouldn't do it this way, but here's something that you could use to improve your system."</p>

<p>In the end, I ended up with this napkin definition of a system that I kind of liked. My goal throughout this whole process was to make a system that could fit on a t-shirt. I might lose my computer, especially on a sailboat, but I don't want to keep preserving all the documentation.</p>

<p>When I started sailing I was doing a bit of Ruby, when came time to gather all the Ruby documentation that I would need to be self-sufficient, the amount was overwhelming.</p>

<p>Being at sea for 50 days straight (see <a href="https://100r.co/site/busy_doing_nothing.html">busy doing nothing</a>) we don't have access to StackOverflow, our questions remain unanswered, now imagine if the site was gone forever tomorrow. At sea, without internet, if I wanted to look up how to fill a polygon, I couldn't do it, but if I had printed it? There are languages that make this more accessible, and others that make it really hard. Not having a background in C, I found it really difficult to go off sailing without my C documentation, but it is very extensive, and very clunky.</p>

<p>My thinking is that I'm probably going to lose the book at some point in the future, but if my future self had that t-shirt they'd probably be okay. I tried to reduce everything that I could do to fit onto a t-shirt, that's as much as I afforded in bandwidth.</p>

<img src="https://100r.co/media/content/blog/wsw_49.jpg" loading="lazy">

<p>If you're familiar with 6502 on the left (above image), it just looks like this vertical series of instructions. The little language I made is quite similar. You can map it one to one, and the resulting size of byte code is pretty much the same.</p>

<img src="https://100r.co/media/content/blog/wsw_50.jpg" loading="lazy">

<p>You might be familiar with this sort of Assembly language, reading as a big vertical column of characters, but I wanted to use the beauty of Forth and make a language that would be verbose in ways that it resembled writing a little bit.</p>

<p>Every morning when I wake up, and I open my programs, I don't hate myself for not leaving comments because the code itself is a bit more readable and self-documenting.</p>

<img src="https://100r.co/media/content/blog/wsw_51.jpg" loading="lazy">

<p>The first thing I tried to do was to make an assembler in that language. It was easy. The language is so simple that the assembler itself is also going to be simple. I generated a X86 application of the <abbr title="Virtual Machine">VM</abbr> that could run its own assembler in that language.</p>

<p>The assembler is <a href="https://git.sr.ht/~rabbits/drifblim/" target="_blank">3000 bytes</a>.</p> 

<img src="https://100r.co/media/content/blog/wsw_52.jpg" loading="lazy">

<p>It's nothing like a computer, but it will run bytecode. I felt like I had reduced the problems that I was solving with computers down to 32 things, and these 32 things I could probably implement in Fractran and Subleq, other more minimal computing systems.</p>

<p>It taught me about how the little functions you would use in JavaScript to convert a string into an end, you write it in Assembly, and it dispels the magic. Sometimes people say they love magic, but in truth they don't. I don't like magic at all, especially not when things start to break.</p>
 
<p>Douglas Adams said that, "The major difference between a thing that might go wrong and a thing that cannot possibly go wrong is that when a thing that cannot possibly go wrong goes wrong it usually turns out to be impossible to get at and repair." This is the situation I was in with programming. I wanted to understand the whole thing, and to have it be inspectable.</p>

<img src="https://100r.co/media/content/blog/wsw_53.jpg" loading="lazy">

<p>From there I started to build dawing routines, etc. I started to make implementations of Basic, of games, or of other emulators.</p>

<p>I have been writing in this little language for two years.</p>

<img src="https://100r.co/media/content/blog/wsw_54.jpg" loading="lazy">

<p>In a <a href="https://guide.handmade-seattle.com/c/2022/behind-crafting-interpreters/" target="_blank">sit-down talk</a> <a href="https://journal.stuffwithstuff.com/" target="_blank">Robert Nystrom</a> was encouraging everyone to make their own programming language and their own system. Many of the conference attendees share this view, but in other circles it is generally frowned upon. The first time I mentioned it to anyone I was laughed out the room. I liked to draw, and people were thinking, "what do you even know about computers?"</p> 

<p>I would love to see everyone's programming language, to meet someone new and to ask them: "show me how many opcodes you have."</p>

<p>It is telling about a person's mind.</p>

<img src="https://100r.co/media/content/blog/wsw_55.jpg" loading="lazy">

<p>We built this little system that is tailored to host the games we make. It'll be alien to anyone else, and that's okay, we are not trying to sell you on this idea, what we want is for everyone to try and make their own personal computer instead of piggybacking on someone else's idea that's cluttered with artifacts. I don't think we've even begun to scratch the surface of what can be done with this.</p>

<p>A lot of people will try to tell you that we've tried everything with 8-bit, but by the time the <abbr title="Nintendo Entertainment System">NES</abbr> was out, most of the game genres that we have today didn't exist. There are immense amounts of space left to explore, but now everyone has moved on, to <abbr title="Virtual Reality">VR</abbr>, <abbr title="Augmented Reality">AR</abbr> or other.</p>

<img src="https://100r.co/media/content/blog/wsw_56.jpg" loading="lazy">

<p>I made this entire talk in black and white, and I could have done a system in black and white too, but I made it in <a href="https://en.wikipedia.org/wiki/Four_color_theorem" target="_blank">four colors</a>. Imagine how much power you have with four colors.</p>

<p>One-bit can be a totally evocative, things don't have to be visually busy all the time. I think this maximalism of 'I need all these features' and 'I need to be doing this and that,' is exhausting. Learning to live without float points is actually kind of nice. There is beauty in really simple systems, trying to always scale things to fit everyone's usage is foolish.</p>

<img src="https://100r.co/media/content/blog/wsw_57.jpg" loading="lazy">

<p>As a closing remark, I want to say that I don't think that my attempt is the best solution to data preservation, I'm not even sure if I'm gonna be able to use that system in five years, but at least it's one attempt at trying to preserve things.</p>

<p><a href="https://permacomputing.net/" target="_blank">Permacomputing</a> is inspired from permaculture, its goal is to build resilience. The resilience of permaculture comes from trying different ideas, and seeing what sticks. If we all jump on the same language, and the same ecosystem, it makes it really fragile when one individual can just buy the whole thing, then you're left with a system that was never truly yours.</p>

<p>Thank you for reading.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GLM-4.5: Agentic, Reasoning, and Coding (ARC) Foundation Models [pdf] (322 pts)]]></title>
            <link>https://www.arxiv.org/pdf/2508.06471</link>
            <guid>44871337</guid>
            <pubDate>Tue, 12 Aug 2025 01:26:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.arxiv.org/pdf/2508.06471">https://www.arxiv.org/pdf/2508.06471</a>, See on <a href="https://news.ycombinator.com/item?id=44871337">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Japan's largest paper, Yomiuri Shimbun, sues Perplexity for copyright violations (163 pts)]]></title>
            <link>https://www.niemanlab.org/2025/08/japans-largest-newspaper-yomiuri-shimbun-sues-perplexity-for-copyright-violations/</link>
            <guid>44870895</guid>
            <pubDate>Tue, 12 Aug 2025 00:07:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.niemanlab.org/2025/08/japans-largest-newspaper-yomiuri-shimbun-sues-perplexity-for-copyright-violations/">https://www.niemanlab.org/2025/08/japans-largest-newspaper-yomiuri-shimbun-sues-perplexity-for-copyright-violations/</a>, See on <a href="https://news.ycombinator.com/item?id=44870895">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The Yomiuri Shimbun, Japan’s largest newspaper by circulation, has <a href="https://japannews.yomiuri.co.jp/society/crime-courts/20250810-274484/">sued the generative AI startup Perplexity</a> for copyright infringement. The lawsuit, filed in Tokyo District Court on August 7, marks the first copyright challenge by a major Japanese news publisher against an AI company.</p>
<p>The filing claims that Perplexity accessed 119,467 articles on Yomiuri’s site between February and June of this year, based on an analysis of its company server logs. Yomiuri alleges the scraping has been used by Perplexity to reproduce the newspaper’s copyrighted articles in responses to user queries without authorization.</p>
<p>In particular, the suit claims Perplexity has violated its “right of reproduction” and its “right to transmit to the public,” two tenets of Japanese law that give copyright holders control over the copying and distribution of their work. The suit seeks nearly $15 million in damages and demands that Perplexity stop reproducing its articles.</p>
<p>The three plaintiffs in the suit are the newspaper’s headquarters in Tokyo, Osaka, and Fukuoka, all of which operate separately under Yomiuri Shimbun Holdings.</p>
<p>Japan’s copyright law allows AI developers to train models on copyrighted material without permission. This leeway is a direct result of a <a href="https://restofworld.org/2022/ai-backlash-anime-artists/">2018 amendment to Japan’s Copyright Act</a>, meant to <a href="https://restofworld.org/2023/japans-new-ai-rules-favor-copycats-over-artists/">encourage AI development</a> in the country’s tech sector. The law does not, however, allow for wholesale reproduction of those works, or for AI developers to distribute copies in a way that will “unreasonably prejudice the interests of the copyright owner.”</p>
<p>In a statement <a href="https://japannews.yomiuri.co.jp/society/crime-courts/20250810-274484/">sent to Yomiuri</a>, a Perplexity spokesperson said, “We are deeply sorry for the misunderstanding this has caused in Japan. We are currently working hard to understand the nature of the claims. We take this very seriously, because Perplexity is committed to ensuring that publishers and journalists benefit from the new business models that will arise in the AI age.”</p>
<p>Last fall, two News Corp–owned publishers, The Wall Street Journal and the New York Post, took similar <a href="https://www.wsj.com/business/media/wall-street-journal-new-york-post-sue-perplexity-ai-c5d9554d">legal action</a> against Perplexity. Outside of the U.S., though, Perplexity has so far avoided much legal scrutiny. Competing generative AI companies, including OpenAI and Meta, have faced copyright infringement suits from major international publishers.</p>
<p>In India, a <a href="https://www.bbc.com/news/articles/cg7ze00ly1zo">joint copyright infringement suit</a> against OpenAI includes some of the country’s most established news publications, including The Indian Express, The Hindu, and The India Today group. In France, the country’s leading authors and publishers associations have filed suits against Meta, <a href="https://apnews.com/article/france-meta-artificial-intelligence-lawsuit-copyright-168b32059e70d0509b0a6ac407f37e8a">alleging economic “parasitism.”</a></p>
<p>In May, the Japan Newspaper Publishers and Editors Association <a href="https://www.pressnet.or.jp/statement/20230517_en.pdf">published an open letter</a> calling out AI companies for free riding off their copyrighted material and warning them to stop their scraping practices. The status quo “could cause huge damage to the business of news organizations,” the association wrote at the time. “If quality news content, which underpins democracy, decreases, the public’s right to know may be hampered.”</p>
<p>Photo of Yomiuri Shimbun building by <a href="https://stock.adobe.com/contributor/205741057/jhvephoto?load_type=author&amp;prev_url=detail" target="_blank">JHVEPhoto</a> licensed via Adobe Stock.</p>


<!-- tags and comments -->

<p><span><span>Show tags</span></span></p>












</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I built an offline, open‑source desktop Pixel Art Editor in Python (163 pts)]]></title>
            <link>https://github.com/danterolle/tilf</link>
            <guid>44870137</guid>
            <pubDate>Mon, 11 Aug 2025 22:21:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/danterolle/tilf">https://github.com/danterolle/tilf</a>, See on <a href="https://news.ycombinator.com/item?id=44870137">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Tilf — Pixel Art Editor</h2><a id="user-content-tilf--pixel-art-editor" aria-label="Permalink: Tilf — Pixel Art Editor" href="#tilf--pixel-art-editor"></a></p>
<p dir="auto">Tilf (Tiny Elf) is a simple yet powerful pixel art editor built with PySide6.
It’s designed for creating sprites, icons, and small 2D assets with essential tools, live preview, undo/redo, and export options.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/danterolle/tilf/blob/main/assets/icon.ico"><img src="https://github.com/danterolle/tilf/raw/main/assets/icon.ico" alt="Tilf" title="Tilf"></a></p>
<p dir="auto">There are several Pixel Art Editors that do the same things and even much more,
but many require an account registration or the insertion of an e-mail or have a certain business model.</p>
<p dir="auto">I'm <em>not</em> interested in all that, my goal is to be able to create sprites freely, with (almost) zero dependencies,
zero setup time, zero installations:</p>
<p dir="auto">Tilf starts and I begin to draw what I want.</p>
<p dir="auto">It runs on Windows, MacOS and GNU/Linux.</p>
<p dir="auto">Download the latest release from the <a href="https://github.com/danterolle/tilf/releases">releases page</a>.</p>
<p dir="auto"><strong>Windows 11</strong> -&gt; <a href="https://github.com/danterolle/tilf/releases/download/v0.1/tilf_0.1-Windows">Download</a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/danterolle/tilf/blob/main/screenshots/windows.png"><img src="https://github.com/danterolle/tilf/raw/main/screenshots/windows.png" alt="Tilf on Windows" title="Windows"></a>
<strong>MacOS 15.6</strong> -&gt; <a href="https://github.com/danterolle/tilf/releases/download/v0.1/tilf_0.1-MacOS.zip">Download</a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/danterolle/tilf/blob/main/screenshots/macos.png"><img src="https://github.com/danterolle/tilf/raw/main/screenshots/macos.png" alt="Tilf on MacOS" title="MacOS"></a>
<strong>GNU/Linux (ParrotOS 6.4)</strong> -&gt; <a href="https://github.com/danterolle/tilf/releases/download/v0.1/tilf_0.1-Linux">Download</a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/danterolle/tilf/blob/main/screenshots/linux.png"><img src="https://github.com/danterolle/tilf/raw/main/screenshots/linux.png" alt="Tilf on GNU/Linux" title="GNU/Linux"></a></p>
<p dir="auto">I’m aware that the code quality isn’t great.
I didn’t prioritize it when writing this.
This project was something I put together during my spare time, and a lot of it could be written much better.
There's definitely room for improvement, so I'm more than happy to accept PRs from anyone willing to contribute.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Why doesn't this tool have many commits?</h4><a id="user-content-why-doesnt-this-tool-have-many-commits" aria-label="Permalink: Why doesn't this tool have many commits?" href="#why-doesnt-this-tool-have-many-commits"></a></p>
<p dir="auto">Because I mainly used it for learning and personal purposes.
Publish it as an Open Source project might be interesting for others as well.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ul dir="auto">
<li><a href="#features">Features</a></li>
<li><a href="#requirements">Requirements</a></li>
<li><a href="#build-on-macos-and-gnulinux">Build on MacOS and GNU/Linux</a></li>
<li><a href="#about-windows">About Windows</a>
<ul dir="auto">
<li><a href="#run-from-source">Run from source</a></li>
<li><a href="#build-executable-exe">Build executable .exe</a></li>
</ul>
</li>
<li><a href="#keyboard-shortcuts-for-file-operations">Keyboard Shortcuts for file operations</a></li>
<li><a href="#save-and-auto-save">Save and Auto-Save</a></li>
<li><a href="#tips-and-known-limits">Tips and Known Limits</a></li>
<li><a href="#troubleshooting---work-in-progress">Troubleshooting - Work In Progress</a>
<ul dir="auto">
<li><a href="#modulenotfounderror-no-module-named-pyside6">ModuleNotFoundError: No module named 'PySide6'</a></li>
</ul>
</li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#license">License</a></li>
<li><a href="#contact">Contact</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Drawing tools:
<ul dir="auto">
<li>Pencil</li>
<li>Eraser</li>
<li>Fill (bucket)</li>
<li>Eyedropper</li>
<li>Rectangle (stroke)</li>
<li>Ellipse (stroke)</li>
</ul>
</li>
<li>Canvas:
<ul dir="auto">
<li>New image with custom dimensions</li>
<li>Zoom 1–50x (mouse wheel or slider)</li>
<li>Editable background color (alpha supported)</li>
<li>Optional grid with customizable color</li>
<li>Clear canvas</li>
</ul>
</li>
<li>Workflow:
<ul dir="auto">
<li>Undo/Redo with history up to 50 states</li>
<li>Drag &amp; drop images to open</li>
<li>Real-time preview in a side dock (you can move it wherever you want)</li>
</ul>
</li>
<li>Import/Export:
<ul dir="auto">
<li>Open PNG, JPEG/JPG, BMP</li>
<li>Export to PNG (with or without transparency), JPEG/JPG, BMP</li>
</ul>
</li>
<li>Handy details:
<ul dir="auto">
<li>Hold Shift while drawing rectangles/ellipses to constrain to squares/circles</li>
<li>Grid is shown when zoom (cell size) is at least 4</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Requirements</h2><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<ul dir="auto">
<li>Python 3, virtualenv</li>
<li>OS: Windows, MacOS or GNULinux</li>
<li>Dependencies:
<ul dir="auto">
<li>PySide6</li>
<li>PyInstaller</li>
</ul>
</li>
</ul>
<p dir="auto">I did not use uv or poetry for this project;
I don't think it is necessary to introduce a tool of that kind for a project that is, all things considered, simple.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Build on MacOS and GNU/Linux</h2><a id="user-content-build-on-macos-and-gnulinux" aria-label="Permalink: Build on MacOS and GNU/Linux" href="#build-on-macos-and-gnulinux"></a></p>
<ol dir="auto">
<li>Clone the repository:</li>
</ol>
<div data-snippet-clipboard-copy-content="git clone https://github.com/danterolle/tilf.git &amp;&amp; cd tilf"><pre><code>git clone https://github.com/danterolle/tilf.git &amp;&amp; cd tilf
</code></pre></div>
<ol start="2" dir="auto">
<li>This project has a <a href="https://github.com/danterolle/tilf/blob/main/Makefile">Makefile</a>
that automates all the necessary build and cleanup operations for Tilf (for MacOS and GNU/Linux only), so we just need to run:</li>
</ol>

<ol start="3" dir="auto">
<li>The executable will be in the <code>dist</code> folder.</li>
</ol>

<p dir="auto">Enjoy!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">About Windows</h2><a id="user-content-about-windows" aria-label="Permalink: About Windows" href="#about-windows"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Run from source</h3><a id="user-content-run-from-source" aria-label="Permalink: Run from source" href="#run-from-source"></a></p>
<ol dir="auto">
<li>Clone the repository by using Git Bash:</li>
</ol>
<div data-snippet-clipboard-copy-content="git clone https://github.com/danterolle/tilf.git"><pre><code>git clone https://github.com/danterolle/tilf.git
</code></pre></div>

<ol start="2" dir="auto">
<li>Create a virtual environment:</li>
</ol>

<ol start="3" dir="auto">
<li>Activate the virtual environment:</li>
</ol>

<ol start="4" dir="auto">
<li>Install the dependencies:</li>
</ol>
<div data-snippet-clipboard-copy-content="pip install pyside6 pyinstaller pillow"><pre><code>pip install pyside6 pyinstaller pillow
</code></pre></div>
<p dir="auto">Note:</p>
<ol start="5" dir="auto">
<li>And finally, run the application:</li>
</ol>

<p dir="auto"><h3 tabindex="-1" dir="auto">Build executable .exe</h3><a id="user-content-build-executable-exe" aria-label="Permalink: Build executable .exe" href="#build-executable-exe"></a></p>
<ol dir="auto">
<li>Clone the repository by using Git Bash:</li>
</ol>
<div data-snippet-clipboard-copy-content="git clone https://github.com/danterolle/tilf.git"><pre><code>git clone https://github.com/danterolle/tilf.git
</code></pre></div>


<ol start="2" dir="auto">
<li>Install the dependencies:</li>
</ol>
<div data-snippet-clipboard-copy-content="pip install pyside6 pyinstaller pillow"><pre><code>pip install pyside6 pyinstaller pillow
</code></pre></div>
<ol start="3" dir="auto">
<li>Run PyInstaller:</li>
</ol>
<div data-snippet-clipboard-copy-content="pyinstaller --name tilf --onefile --windowed --icon assets/icon.icns --add-data assets:assets --add-data style.qss:. main.py"><pre><code>pyinstaller --name tilf --onefile --windowed --icon assets/icon.icns --add-data assets:assets --add-data style.qss:. main.py
</code></pre></div>
<ol start="4" dir="auto">
<li>The executable will be in the <code>dist</code> folder.</li>
</ol>

<p dir="auto"><h2 tabindex="-1" dir="auto">Keyboard Shortcuts for file operations</h2><a id="user-content-keyboard-shortcuts-for-file-operations" aria-label="Permalink: Keyboard Shortcuts for file operations" href="#keyboard-shortcuts-for-file-operations"></a></p>
<ul dir="auto">
<li>File:
<ul dir="auto">
<li>New: Ctrl+N</li>
<li>Open: Ctrl+O</li>
<li>Save: Ctrl+S</li>
</ul>
</li>
<li>Edit:
<ul dir="auto">
<li>Undo: Ctrl+Z</li>
<li>Redo: Ctrl+Y</li>
</ul>
</li>
<li>Tools:
<ul dir="auto">
<li>Pencil: B</li>
<li>Eraser: E</li>
<li>Bucket: G</li>
<li>Eyedropper: I</li>
<li>Rectangle: R</li>
<li>Ellipse: C</li>
</ul>
</li>
<li>Shapes:
<ul dir="auto">
<li>Constrain to square/circle: hold Shift</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Save and Auto-Save</h2><a id="user-content-save-and-auto-save" aria-label="Permalink: Save and Auto-Save" href="#save-and-auto-save"></a></p>
<ul dir="auto">
<li>Export formats:
<ul dir="auto">
<li>PNG: optionally keep transparency.</li>
<li>JPEG/JPG, BMP: no transparency.</li>
</ul>
</li>
</ul>
<p dir="auto">On close, if there are unsaved changes, a recovery <em>.png</em> is automatically saved into a <strong>tilf_autosaves</strong>
folder next to the startup script, with a timestamped filename.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tips and Known Limits</h2><a id="user-content-tips-and-known-limits" aria-label="Permalink: Tips and Known Limits" href="#tips-and-known-limits"></a></p>
<ul dir="auto">
<li><a href="https://github.com/danterolle/tilf/blob/main/pixel_canvas.py#L31">Undo/Redo history is capped at 50 states to limit memory usage</a>.</li>
<li>Large flood fills may take longer on big images.</li>
<li>The grid appears when zoom (cell size) is at least 4.</li>
<li>Very large images may impact performance; Remember: <em>Tilf targets compact pixel art and sprites</em>.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Troubleshooting - Work In Progress</h2><a id="user-content-troubleshooting---work-in-progress" aria-label="Permalink: Troubleshooting - Work In Progress" href="#troubleshooting---work-in-progress"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">ModuleNotFoundError: No module named 'PySide6'</h3><a id="user-content-modulenotfounderror-no-module-named-pyside6" aria-label="Permalink: ModuleNotFoundError: No module named 'PySide6'" href="#modulenotfounderror-no-module-named-pyside6"></a></p>
<p dir="auto">Ensure your virtualenv is active and run: pip install pyside6</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<ul dir="auto">
<li>Open issues for bugs or feature requests.</li>
<li>For PRs, please keep the code style consistent and explain changes clearly.</li>
<li>Feature ideas are welcome (e.g. advanced fills, selections, layers). Thank you!</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">GPL v3.0, see the LICENSE file for details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contact</h2><a id="user-content-contact" aria-label="Permalink: Contact" href="#contact"></a></p>
<ul dir="auto">
<li>Developer: Dario 'danterolle' Camonita</li>
<li>E-mail: <a href="mailto:danterolle@catania.linux.it">danterolle@catania.linux.it</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I've seen 12 people hospitalized after losing touch with reality because of AI (119 pts)]]></title>
            <link>https://twitter.com/KeithSakata/status/1954884361695719474</link>
            <guid>44869323</guid>
            <pubDate>Mon, 11 Aug 2025 20:50:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/KeithSakata/status/1954884361695719474">https://twitter.com/KeithSakata/status/1954884361695719474</a>, See on <a href="https://news.ycombinator.com/item?id=44869323">Hacker News</a></p>
Couldn't get https://twitter.com/KeithSakata/status/1954884361695719474: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[Washington, DC police put under federal control, National Guard deployed (103 pts)]]></title>
            <link>https://www.cnbc.com/2025/08/11/trump-washington-crime-fed-national-guard-homeless.html</link>
            <guid>44867494</guid>
            <pubDate>Mon, 11 Aug 2025 18:13:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2025/08/11/trump-washington-crime-fed-national-guard-homeless.html">https://www.cnbc.com/2025/08/11/trump-washington-crime-fed-national-guard-homeless.html</a>, See on <a href="https://news.ycombinator.com/item?id=44867494">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="RegularArticle-ArticleBody-5" data-module="ArticleBody" data-test="articleBody-2" data-analytics="RegularArticle-articleBody-5-2"><div><p>President <a href="https://www.cnbc.com/donald-trump/">Donald Trump</a> on Monday placed the <a href="https://www.cnbc.com/2025/08/10/trump-crime-washington-dc-border-.html">Washington, D.C.</a>, police department under federal control and deployed 800 <a href="https://www.cnbc.com/2025/06/09/trump-sued-national-guard-la-california-newsom.html">National Guard</a> troops in the capital city to address what he claimed was out-of-control crime there.</p><p>It is the first time that a president has federalized the <a href="https://mpdc.dc.gov/" target="_blank">Metropolitan Police Department.</a> Trump's move drew fierce condemnation from local officials, who noted that official statistics show crime in D.C. is on the decline.</p><p>"I'm announcing a historic action to rescue our nation's capital from crime, bloodshed, bedlam and squalor, and worse," Trump said at the start of a news conference at the White House,</p><p>"This is Liberation Day in D.C., and we're going to take our capitol back," he said.</p><p>Of the roughly 800 National Guard members Trump ordered to D.C., about 100 to 200 will be aiding law enforcement at any given time for "administrative, logistics and physical presence," NBC News reported.</p><p>D.C. Attorney General Brian Schwalbe called Trump's actions "unprecedented, unnecessary, and unlawful," and signaled his office will take action to challenge the administration.</p><p>"There is no crime emergency in the District of Columbia. Violent crime in DC reached historic 30-year lows last year, and is down another 26% so far this year," Schwalbe said in an X post.</p><p>"We are considering all of our options and will do what is necessary to protect the rights and safety of District residents," he said.</p><p>Trump's federalization of the city's police force relies on his authority under Section 740 of the district's <a href="https://dccouncil.gov/dc-home-rule/" target="_blank">Home Rule Act</a>, the decades-old law that established Washington's local government.</p><p>That section gives a president the power to order the district's mayor to temporarily hand over control of the Metropolitan Police force if the president determines that "special conditions of an emergency nature exist."</p><p>The emergency control is set to expire after a maximum of 30 days, according to the statute. That can be extended, but only if Congress passes a law authorizing it.</p><p>Although Trump has frequently complained about crime in the district, violent crime there has fallen to a 30-year low as of January, according to the&nbsp;<a href="https://www.justice.gov/usao-dc/pr/violent-crime-dc-hits-30-year-low" target="_blank">U.S. Department of Justice</a>.</p></div><div id="ArticleBody-InlineImage-108184187" data-test="InlineImage"><p>U.S. President Donald Trump speaks to the press about deploying federal law enforcement agents in Washington to bolster the local police presence, in the Press Briefing Room at the White House, in Washington D.C., U.S., August 11, 2025. </p><p>Jonathan Ernst | Reuters</p></div><div><p><a href="https://mpdc.dc.gov/dailycrime" target="_blank">Statistics</a> from the Metropolitan Police Department also show that incidences of homicide, sexual abuse, assault with a dangerous weapon, robbery, and overall violent crime have dropped by double-digit percentages so far this year.</p><p>Federal <a href="https://www.nbcwashington.com/news/local/trump-orders-increased-federal-law-enforcement-presence-to-make-dc-safe-again/3972307/" target="_blank">law enforcement presence in D.C. </a>has nevertheless increased in recent days.</p><p>Eleanor Holmes Norton, a Democrat who is the District of Columbia's nonvoting delegate in the House of Representatives, called Trump's actions "an historic assault on D.C. home rule," and a "counterproductive, escalatory seizure of D.C.'s resources to use for purposes not supported by D.C. residents."</p><p>"The administration is justifying the decision by misleadingly citing years-old statistics," Norton said.</p></div><div id="ArticleBody-InlineImage-108184113" data-test="InlineImage"><p>Soldiers from the U.S. Army National Guard 42nd Infantry Division walk through streets in Washington, D.C. on June 13, 2025 ahead of a parade and festival the following day celebrating the 250th anniversary of the U.S. Army. </p><p>Bryan Dozier | Afp | Getty Images</p></div><div><p>Trump, who had recently threatened to place Washington under <a href="https://www.cnbc.com/2025/08/10/trump-crime-washington-dc-border-.html">federal control</a>, said Monday morning that U.S. Attorney General Pam Bondi is "taking command of the Metropolitan Police Department as of this moment."</p><p>He also said that he will deploy the National Guard to "help reestablish law order and public safety in Washington, D.C., and they're going to be allowed to do their job properly."</p><p>Trump added, "You're going to have a lot of essentially military, and we will bring in the military if it's needed."</p><p>D.C. Mayor Muriel Bowser's office did not immediately respond to CNBC's request for comment on Trump's actions.</p><p>She had previously pushed back on Trump's characterization of her city.</p><p>"People are coming to our capital. They're starting business in our capital, and they're raising families in our capital.&nbsp;Any comparison to a war-torn country is hyperbolic and false," Bowser said Sunday on MSNBC's "The Weekend."</p><p>Trump had teased his announcement on social media in the days leading up to the presser.</p><p>"Crime, Savagery, Filth, and Scum will DISAPPEAR. I will, MAKE OUR CAPITAL GREAT AGAIN!" Trump wrote on Truth Social earlier Monday.</p><p>On Sunday, he declared that "the Homeless" in D.C. will "have to move out, IMMEDIATELY," while assuring that the government "will give you places to stay, but FAR from the Capital."</p></div><div id="RegularArticle-RelatedContent-1"><h2>Read more CNBC politics coverage</h2><div><ul><li><a href="https://www.cnbc.com/2025/08/11/jeffrey-epstein-ghislaine-maxwell-trump-grand-jury.html">Judge rejects unsealing Ghislaine Maxwell grand jury transcripts</a></li><li><a href="https://www.cnbc.com/2025/08/11/trump-washington-crime-fed-national-guard-homeless.html">Watch live: Trump weighs deploying National Guard to Washington, DC</a></li><li><a href="https://www.cnbc.com/2025/08/10/texas-redistricting-trump-abbott-democrats-.html">Democrats slam GOP redistricting fight as 'cheating' as Texas Gov. Abbott threatens arrests</a></li><li><a href="https://www.cnbc.com/2025/08/10/trump-crime-washington-dc-border-.html">Trump warns homeless to leave Washington, D.C., 'immediately'</a></li><li><a href="https://www.cnbc.com/2025/08/09/trump-to-speak-at-white-house-on-violent-crime-in-dc.html">Trump to speak at White House on violent crime in D.C. amid federal crackdown</a></li><li><a href="https://www.cnbc.com/2025/08/08/trump-warns-courts-against-knocking-down-tariffs-says-duties-are-huge-positive-for-stock-market.html">Trump warns courts against knocking down tariffs, says duties are 'huge positive'</a></li><li><a href="https://www.cnbc.com/2025/08/08/trumps-russia-deadline-comes-around-with-tariffs-at-stake.html">Trump says he will meet with Putin in Alaska on Aug. 15</a></li><li><a href="https://www.cnbc.com/2025/08/07/the-full-list-of-us-tariffs-in-place-around-the-world.html">See the full list of U.S. tariffs in place around the world</a></li><li><a href="https://www.cnbc.com/2025/08/07/russias-putin-meets-with-uae-leader-countries-pledge-to-double-trade-amid-trump-pressure.html">Russia and UAE double down on trade, testing U.S. limits</a></li><li><a href="https://www.cnbc.com/2025/08/07/trump-census-undocumented-immigrants.html">Trump orders 'new' census that excludes undocumented immigrants</a></li><li><a href="https://www.cnbc.com/2025/08/06/tim-cook-trump-apple-white-house.html">Tim Cook to join Trump at White House for Apple investment announcement</a></li><li><a href="https://www.cnbc.com/2025/08/06/trump-trade-india-tariffs-russia.html">Trump raises India tariffs to 50% over Russian oil purchases</a></li><li><a href="https://www.cnbc.com/2025/08/06/trump-trade-tariffs-investment-pledge.html">Trump views foreign investment pledges as gifts. Trade partners say that's way off the mark</a></li><li><a href="https://www.cnbc.com/2025/08/05/trump-murdoch-epstein-health-deposition-delay.html">Murdoch to provide Trump health updates in deal to delay Epstein case deposition</a></li></ul></div></div><div><p>The Trump administration has <a href="https://x.com/StevenCheung47/status/1954901457188376926" target="_blank">disputed</a> that crime in D.C. is dropping. White House communications director Steven Cheung on Monday morning pointed to a police union's reported accusation that crime statistics in D.C. have been <a href="https://www.nbcwashington.com/news/local/dc-police-commander-suspended-crime-statistics/3959566/?amp=1" target="_blank">manipulated</a>.</p><p>Trump's complaints about crime in D.C. ramped up after reports that Edward Coristine, one of the initial staffers on the White House's so-called Department of Government Efficiency, was&nbsp;<a href="https://www.nbcnews.com/politics/trump-administration/trump-threatens-federal-control-dc-attack-doge-staffer-coristine-rcna223293" target="_blank">assaulted there</a>&nbsp;earlier this month.</p><p>The Trump administration deployed the National Guard to Los Angeles in June to address civil unrest over federal immigration enforcement operations in the city.</p><p>California Gov. Gavin Newsom has sued the administration, arguing that Trump's actions were unconstitutional.</p><p>A trial on the suit in California federal court began Monday.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Neki – sharded Postgres by the team behind Vitess (227 pts)]]></title>
            <link>https://planetscale.com/blog/announcing-neki</link>
            <guid>44867374</guid>
            <pubDate>Mon, 11 Aug 2025 18:03:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://planetscale.com/blog/announcing-neki">https://planetscale.com/blog/announcing-neki</a>, See on <a href="https://news.ycombinator.com/item?id=44867374">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><p>By <!-- -->Andres Taylor, Dirkjan Bussink, Harshit Gangal, Nick Van Wiggeren, Noble Mittal, Rohit Nayak, Roman Sodermans, Shlomi Noach, Sam Lambert<!-- --> | <time datetime="2025-08-11">August 11, 2025</time></p><p><picture><source srcset="https://planetscale-images.imgix.net/assets/neki@2x-DTgVq7KS.png?auto=compress%2Cformat" media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)"><img alt="Neki" height="800" loading="lazy" src="https://planetscale-images.imgix.net/assets/neki@2x-DTgVq7KS.png?auto=compress%2Cformat" width="1400"></picture></p><p>Today, we are announcing <a href="https://neki.dev/"><strong>Neki</strong></a> — sharded Postgres by the team behind <a href="https://vitess.io/">Vitess</a>. Vitess is one of PlanetScale’s greatest strengths and contemporary Vitess is the product of our experience running at extreme scale. We have made explicit sharding accessible to hundreds of thousands of people and it is time to bring this power to Postgres.</p><p>Neki is not a fork of Vitess. Vitess’ achievements are enabled by leveraging MySQL’s strengths and engineering around its weaknesses. To achieve Vitess’ power for Postgres we are architecting from first principles and building alongside design partners at scale. When we are ready we will release Neki as an open source project suitable for running the most demanding Postgres workloads.</p><p>To stay up to date with the latest developments on Neki you can signup at <a href="https://neki.dev/">neki.dev</a>.</p></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Token growth indicates future AI spend per dev (182 pts)]]></title>
            <link>https://blog.kilocode.ai/p/future-ai-spend-100k-per-dev</link>
            <guid>44867312</guid>
            <pubDate>Mon, 11 Aug 2025 17:59:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.kilocode.ai/p/future-ai-spend-100k-per-dev">https://blog.kilocode.ai/p/future-ai-spend-100k-per-dev</a>, See on <a href="https://news.ycombinator.com/item?id=44867312">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>Kilo just broke through the 1 trillion tokens a month barrier on OpenRouter for the first time. </p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!v9-s!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!v9-s!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png 424w, https://substackcdn.com/image/fetch/$s_!v9-s!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png 848w, https://substackcdn.com/image/fetch/$s_!v9-s!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png 1272w, https://substackcdn.com/image/fetch/$s_!v9-s!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!v9-s!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png" width="500" height="187.5" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:546,&quot;width&quot;:1456,&quot;resizeWidth&quot;:500,&quot;bytes&quot;:237722,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://blog.kilocode.ai/i/170429285?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!v9-s!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png 424w, https://substackcdn.com/image/fetch/$s_!v9-s!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png 848w, https://substackcdn.com/image/fetch/$s_!v9-s!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png 1272w, https://substackcdn.com/image/fetch/$s_!v9-s!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F71ab674a-e015-4079-9d34-d0236ec96153_1930x724.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>Each of the open source family of AI coding tools (Cline, Roo, Kilo) is growing rapidly this month.</p><div><figure><a target="_blank" href="https://x.com/Kilo_Code/status/1953767203175543246" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!IDuV!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png 424w, https://substackcdn.com/image/fetch/$s_!IDuV!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png 848w, https://substackcdn.com/image/fetch/$s_!IDuV!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png 1272w, https://substackcdn.com/image/fetch/$s_!IDuV!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!IDuV!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png" width="728" height="248.5" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:497,&quot;width&quot;:1456,&quot;resizeWidth&quot;:728,&quot;bytes&quot;:386444,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:&quot;https://x.com/Kilo_Code/status/1953767203175543246&quot;,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://blog.kilocode.ai/i/170429285?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!IDuV!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png 424w, https://substackcdn.com/image/fetch/$s_!IDuV!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png 848w, https://substackcdn.com/image/fetch/$s_!IDuV!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png 1272w, https://substackcdn.com/image/fetch/$s_!IDuV!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F67a9212f-3d94-4d87-99ec-6b6df3c065ec_2544x868.png 1456w" sizes="100vw"></picture></div></a></figure></div><p><span>Part of this growth is caused by Cursor and Claude starting to throttle their users. We wrote about </span><a href="https://blog.kilocode.ai/p/cursors-500-requests-unlimited-225" rel="">Cursor at the beginning of July</a><span> and about </span><a href="https://blog.kilocode.ai/p/the-ai-pricing-bait-and-switch" rel="">Claude in the second half of July</a><span>. Their throttling </span><a href="https://www.reddit.com/r/kilocode/comments/1mcdxr4/amazed_by_kilo_or_where_will_all_the_coders_go/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button" rel="">sent users to the open source family of AI coding tools</a><span> causing the increases you see in the graphs above. Cursor and Claude needed to throttle because the industry made a flawed assumption.</span></p><p>The industry expected that because the raw inference costs were coming down fast, the applications inference costs would come down fast as well but this assumption was wrong.</p><p><a href="https://a16z.com/llmflation-llm-inference-cost/" rel="">Raw inference costs did decrease by 10x year-over-year.</a><span> This expectation made startups bet on a business model where companies could afford to sell subscriptions at significant losses, knowing they'd achieve healthy margins as costs plummeted.</span></p><p><a href="https://x.com/dobroslav_dev/status/1952369863344673194" rel="">Cursor's Ultra plan</a><span> exemplified this approach perfectly: charge users $200 while providing at least $400 worth of tokens, essentially operating at -100% gross margin.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!sMJm!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!sMJm!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png 424w, https://substackcdn.com/image/fetch/$s_!sMJm!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png 848w, https://substackcdn.com/image/fetch/$s_!sMJm!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png 1272w, https://substackcdn.com/image/fetch/$s_!sMJm!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!sMJm!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png" width="542" height="436.5346869712352" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:952,&quot;width&quot;:1182,&quot;resizeWidth&quot;:542,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!sMJm!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png 424w, https://substackcdn.com/image/fetch/$s_!sMJm!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png 848w, https://substackcdn.com/image/fetch/$s_!sMJm!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png 1272w, https://substackcdn.com/image/fetch/$s_!sMJm!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd54bb2ba-591c-4b93-87bb-ab8776ff059b_1182x952.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The bet was that by the following year, the application inference would cost 90% less, creating a $160 gross profit (+80% gross margins). But this didn't happen, instead of declining the application inference costs actually grew!</p><p>Application inference costs increased for two reasons: the frontier model costs per token stayed constant and the token consumption per application grew a lot. We'll first dive into the reasons for the constant token price for frontier models and end with explaining the token consumption per application.</p><p><a href="https://ethanding.substack.com/p/ai-subscriptions-get-short-squeezed" rel="">The price per token for the frontier model stayed constant</a><span> because of the </span><a href="https://www.researchgate.net/figure/The-most-popular-large-AI-models-of-recent-years-This-figure-shows-the-main-features-of_fig1_387458379" rel="">increasing size of models</a><span> and more test-time scaling. Test time scaling, also called long thinking, is the </span><a href="https://blogs.nvidia.com/blog/ai-scaling-laws/" rel="">third way to scale AI</a><span> as shown in the graphic below.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!i474!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!i474!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg 424w, https://substackcdn.com/image/fetch/$s_!i474!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg 848w, https://substackcdn.com/image/fetch/$s_!i474!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!i474!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!i474!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg" width="624" height="351" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:819,&quot;width&quot;:1456,&quot;resizeWidth&quot;:624,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!i474!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg 424w, https://substackcdn.com/image/fetch/$s_!i474!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg 848w, https://substackcdn.com/image/fetch/$s_!i474!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!i474!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb558bd73-0244-415d-aab5-81934c719436_1456x819.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>While the pre- and post-training scaling influenced only the training costs of models. But this test-time scaling increases the cost of inference. Thinking models like OpenAI's o1 series allocate massive computational effort during inference itself. These models can require </span><strong>over 100x compute for challenging queries</strong><span> compared to traditional single-pass inference.</span></p><p><span>Token consumption per application grew a lot because models allowed for </span><a href="https://www.meibel.ai/post/understanding-the-impact-of-increasing-llm-context-windows" rel="">longer context windows</a><span> and bigger suggestions from the models. The combination of a steady price per token and more token consumption caused app inference costs to grow about 10x over the last two years. Market leader Cursor introduced a $200 plan where before $20 was the default. The $200 plan has also been followed by Claude Code and others.</span></p><p>The top end of subscriptions is $200 today but power users find that they are extensively throttled if they use a lot of inference. That throttling comes in the form of rate limiting, using lower quality models, context window compression, and other techniques.</p><p>If you don't want to be throttled you need to pay for inference yourself. The open source family of coding tools (Cline, Roo, Kilo) is based on that principle: “never throttle the user”. Because the users directly see the costs these tools have also led the way in reducing costs by allowing the users to:</p><ol><li><p>Splitting work up in many smaller tasks that can each be run efficiently.</p></li><li><p>Using different modes, in Kilo we have an Orchestrator, Architect, Code, and Debug mode.</p></li><li><p>Combine closed-source models for architecting tasks (e.g. Sonnet 4) and open-source for coding (Qwen3)</p></li><li><p>Enhance the prompt with AI before submitting it</p></li><li><p>Optimize context efficiency with memory banks</p></li><li><p>Enable prompt caching</p></li><li><p>Allow termination of a running task when the model hallucinates</p></li></ol><p>Despite the efforts to reduce costs we do expect them to continue to grow for the power users.</p><p>We expect app inference costs to grow quickly. This is driven by two developments: more parallel agents and more work done before human feedback is needed.</p><p><span>People are </span><a href="https://www.reddit.com/r/ClaudeAI/comments/1kwm4gm/has_anyone_tried_parallelizing_ai_coding_agents/" rel="">experimenting</a><span> </span><a href="https://ainativedev.io/news/how-to-parallelize-ai-coding-agents" rel="">with</a><span> </span><a href="https://google.github.io/adk-docs/agents/workflow-agents/parallel-agents/" rel="">parallel</a><span> AI coding agents today with </span><a href="https://www.warp.dev/" rel="">Warp already having it available to people</a><span>. We expect parallel agents to become the default in the industry and look forward to introduce them in Kilo code sooner rather than later. This will greatly increase token consumption per human hour.</span></p><p>Agents are also able to work longer before needing human feedback. Because they are working more and pausing less this also increases token consumption per human hour.</p><p><span>Both effects together will push costs at the top level to $100k a year. Spending that magnitude of money on software is not without precedent, </span><a href="https://news.ycombinator.com/item?id=26658405" rel="">chip design licenses from Cadence or Synopsys are already $250k a year</a><span>.</span></p><p>While the prospect of $100k+ per year in costs is a lot it can always be worse.</p><p><span>AI costs for most engineers are approximately 1000x smaller than what is happening at the AI training stage. Here the costs for the normal 'inference engineer' is dwarfed by the thousand times bigger impact of the AI ‘training engineer’. The ‘inference engineer’ we talked about above might make $100k and use $100k to be many times more productive than an engineer before AI. A top ‘training engineer’ directs $100m in spend and is paid $100m a year. Top frontier labs spend </span><a href="https://www.datacenterdynamics.com/en/news/openai-training-and-inference-costs-could-reach-7bn-for-2024-ai-startup-set-to-lose-5bn-report/" rel="">billions on AI training</a><span> and this compute work is directed by a handful of people. Mark Zuckerberg is rumored to have offered these people ‘signing bonuses’ of </span><a href="https://www.wsj.com/tech/ai/meta-ai-recruiting-mark-zuckerberg-5c231f75" rel="">$100m</a><span> to </span><a href="https://www.wsj.com/tech/ai/meta-zuckerberg-ai-recruiting-fail-e6107555" rel="">$1b</a><span> with unknown contract lengths. The difference in pay between inference and training engineers is because of their relative impact. You train a model with a handful of people while it is used by millions of people.</span></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ollama and gguf (159 pts)]]></title>
            <link>https://github.com/ollama/ollama/issues/11714</link>
            <guid>44867238</guid>
            <pubDate>Mon, 11 Aug 2025 17:54:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ollama/ollama/issues/11714">https://github.com/ollama/ollama/issues/11714</a>, See on <a href="https://news.ycombinator.com/item?id=44867238">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="issue-body-viewer" data-team-hovercards-enabled="true" data-turbolinks="false" id="issue-body-viewer"><h3 dir="auto">What is the issue?</h3>
<p dir="auto">The original model coudl run without problem, but the gguf model fail to run for below errors</p>
<p dir="auto">May need an update of ggml dependencies like llama.cpp <a data-error-text="Failed to load title" data-id="3293521949" data-permission-text="Title is private" data-url="https://github.com/ggml-org/llama.cpp/issues/15091" data-hovercard-type="pull_request" data-hovercard-url="/ggml-org/llama.cpp/pull/15091/hovercard" href="https://github.com/ggml-org/llama.cpp/pull/15091">ggml-org/llama.cpp#15091</a></p>
<p dir="auto">Note: Running gguf on llama.cpp without problem.</p>
<h3 dir="auto">Relevant log output</h3>
<div dir="auto" data-snippet-clipboard-copy-content="Aug 06 03:40:33 ml-machine-1 ollama[2649079]: gguf_init_from_file_impl: tensor 'blk.0.ffn_down_exps.weight' has invalid ggml type 39 (NONE)
Aug 06 03:40:33 ml-machine-1 ollama[2649079]: gguf_init_from_file_impl: failed to read tensor info"><pre>Aug 06 03:40:33 ml-machine-1 ollama[2649079]: gguf_init_from_file_impl: tensor <span><span>'</span>blk.0.ffn_down_exps.weight<span>'</span></span> has invalid ggml <span>type</span> 39 (NONE)
Aug 06 03:40:33 ml-machine-1 ollama[2649079]: gguf_init_from_file_impl: failed to <span>read</span> tensor info</pre></div>
<h3 dir="auto">OS</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">GPU</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">CPU</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">Ollama version</h3>
<p dir="auto"><em>No response</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reddit will block the Internet Archive (117 pts)]]></title>
            <link>https://www.theverge.com/news/757538/reddit-internet-archive-wayback-machine-block-limit</link>
            <guid>44866698</guid>
            <pubDate>Mon, 11 Aug 2025 17:08:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/news/757538/reddit-internet-archive-wayback-machine-block-limit">https://www.theverge.com/news/757538/reddit-internet-archive-wayback-machine-block-limit</a>, See on <a href="https://news.ycombinator.com/item?id=44866698">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="zephr-anchor"><p>Reddit says that it has caught AI companies scraping its data from the Internet Archive’s Wayback Machine, so it’s going to start blocking the Internet Archive from indexing the vast majority of Reddit. The Wayback Machine will no longer be able to crawl post detail pages, comments, or profiles; instead, it will only be able to index the Reddit.com homepage, which effectively means Internet Archive will only be able to archive insights into which news headlines and posts were most popular on a given day.</p><p>”Internet Archive provides a service to the open web, but we’ve been made aware of instances where AI companies violate platform policies, including ours, and scrape data from the Wayback Machine,” spokesperson Tim Rathschmidt tells <em>The Verge</em>.</p><p>The Internet Archive’s mission is to keep a digital archive of websites on the internet and <a href="https://archive.org/about/">“other cultural artifacts,”</a> and the Wayback Machine is a tool you can use to look at pages as they appeared on certain dates, but Reddit believes not all of its content should be archived that way.“Until they’re able to defend their site and comply with platform policies (e.g., respecting user privacy, re: deleting removed content) we’re limiting some of their access to Reddit data to protect redditors,” Rathschmidt says.</p><p>The limits will start “ramping up” today, and Reddit says it reached out to the Internet Archive “in advance” to “inform them of the limits before they go into effect,” according to Rathschmidt. He says Reddit has also “raised concerns” about the ability of people to scrape content from the Internet Archive in the past.</p><p>Reddit has a recent history of cutting off access to scraper tools as AI companies have begun to use (and abuse) them en masse, but it’s willing to provide that data if companies pay. Last year, Reddit struck <a href="https://www.theverge.com/2024/2/22/24080165/google-reddit-ai-training-data">a deal with Google</a> for both Google Search and AI training data early last year, and a few months later, it started blocking major search engines from crawling its data <a href="https://www.theverge.com/2024/7/24/24205244/reddit-blocking-search-engine-crawlers-ai-bot-google">unless they pay</a>. It also said its infamous <a href="https://www.theverge.com/2023/4/18/23688463/reddit-developer-api-terms-change-monetization-ai">API changes from 2023</a>, which forced some third-party apps to shut down, <a href="https://www.theverge.com/23779477/reddit-protest-blackouts-crushed">leading to protests</a>, were because those APIs were abused to train AI models.</p><p>Reddit also struck an AI deal with <a target="_blank" href="https://www.theverge.com/2024/5/16/24158529/reddit-openai-chatgpt-api-access-advertising" rel="noreferrer noopener">OpenAI</a>, but it <a target="_blank" href="https://www.theverge.com/ai-artificial-intelligence/679768/reddit-sues-anthropic-alleging-its-bots-accessed-reddit-more-than-100000-times-since-last-july" rel="noreferrer noopener">sued Anthropic</a> in June, claiming Anthropic was still scraping from Reddit even after Anthropic <a target="_blank" href="https://www.theverge.com/2024/7/31/24210565/reddit-microsoft-anthropic-perplexity-pay-ai-search" rel="noreferrer noopener">said it</a> wasn’t scraping anymore.</p><p>“We have a longstanding relationship with Reddit and continue to have ongoing discussions about this matter,” Mark Graham, director of the Wayback Machine, says in a statement to <em>The Verge</em>.</p><p><em><strong>Update, August 11th</strong>: Added statement from the Wayback Machine.</em></p><div><p><span><strong>Follow topics and authors</strong> from this story to see more like this in your personalized homepage feed and to receive email updates.</span></p><ul><li id="follow-author-article_footer-dmcyOmF1dGhvclByb2ZpbGU6MTIz"><span aria-expanded="false" aria-haspopup="true" role="button" tabindex="0"><span><span><svg width="9" height="9" viewBox="0 0 9 9" fill="none" xmlns="http://www.w3.org/2000/svg" aria-label="Follow"><path d="M5 0H4V4H0V5H4V9H5V5H9V4H5V0Z"></path></svg></span><span>Jay Peters</span></span></span></li><li></li><li></li><li></li></ul></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The demographic future of humanity: facts and consequences [pdf] (103 pts)]]></title>
            <link>https://www.sas.upenn.edu/~jesusfv/Slides_London.pdf</link>
            <guid>44866621</guid>
            <pubDate>Mon, 11 Aug 2025 17:03:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sas.upenn.edu/~jesusfv/Slides_London.pdf">https://www.sas.upenn.edu/~jesusfv/Slides_London.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=44866621">Hacker News</a></p>
Couldn't get https://www.sas.upenn.edu/~jesusfv/Slides_London.pdf: Error: unable to verify the first certificate]]></description>
        </item>
        <item>
            <title><![CDATA[The value of institutional memory (170 pts)]]></title>
            <link>https://timharford.com/2025/05/the-value-of-institutional-memory/</link>
            <guid>44866500</guid>
            <pubDate>Mon, 11 Aug 2025 16:53:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://timharford.com/2025/05/the-value-of-institutional-memory/">https://timharford.com/2025/05/the-value-of-institutional-memory/</a>, See on <a href="https://news.ycombinator.com/item?id=44866500">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				
				
				
				
				
<p>In 1978, a dredging gang working for British Waterways was struggling with a problem. They were trying to clear obstacles on the Chesterfield Canal so they could stabilise a concrete wall — not an easy day’s work. But what really had them stumped was a heavy iron chain on the canal bottom. After various attempts, they hooked the chain to their dredger. That did the trick. A firm pull removed the chain and the block of wood on the end of it. The gang took a well-earned break for tea. </p>



<p>The tea break was rudely interrupted by a policeman in a state of some excitement. He had been passing the normally tranquil waterway when he could not help but notice a large whirlpool. By the time the crew returned to the scene, the canal had gone. “We didn’t know there was a plug,” protested one workman. And, in fairness, the canal was two centuries old, and so was the plug. Whatever records there may have been had been destroyed in the Blitz. The moral of the story: institutional memory is valuable, and if an organisation starts forgetting important matters (such as the existence of the plug) bad things happen. Expertise drains away alarmingly fast if not refreshed by activity. </p>



<p>It’s not easy, though. I was recently taken on a tour of the Bodleian Library’s portrait collection, and was struck by how hard our tour guides had had to work to recover basic information about the sitter and the artist, even in portraits just a few decades old. This wouldn’t be so remarkable, except that the entire reason for the Bodleian Library to exist is to preserve information in an accessible form. (Bodley’s librarian, Richard Ovenden, has written <a href="https://www.amazon.co.uk/Burning-Books-RADIO-Knowledge-Power/dp/152937877X?crid=2ZENZAF1L4T8Q&amp;dib=eyJ2IjoiMSJ9.l8Sn-789eZkldlDhy4hyHhzBMOGDhL5x7SBGWCcgk9HGjHj071QN20LucGBJIEps.Pf8k40P2vmwWszH810V989scJOJXxtloM2DBqsSinVI&amp;dib_tag=se&amp;keywords=burning+the+books+richard+ovenden&amp;qid=1744960198&amp;sprefix=burning+the+book%2Caps%2C98&amp;sr=8-1&amp;linkCode=ll1&amp;tag=timharford-20&amp;linkId=d1faa4128aa6adeea95584c476179c92&amp;language=en_GB&amp;ref_=as_li_ss_tl">Burning the Books: A History of the Deliberate Destruction of Knowledge</a> and is president of the Digital Preservation Coalition.) But the Bodleian is a library, not a portrait museum, and without constant attention, the natural order of things is not to remember, but to forget. </p>



<p>That means trouble. Consider Volkswagen’s disastrous scandal, in which the company designed its cars to fool emissions tests by regulators. No, not the scandal of 2015, which cost the company its reputation, its CEO and well over €30bn in fines, settlements and legal fees. I mean the scandal of 1973, in which VW was accused by the US Environmental Protection Agency of designing its cars to fool emissions tests by regulators. VW settled out of court and, it seems, spent the following decades forgetting what should have been a chastening experience. </p>



<p>A more tragic example is the pair of fatal Space Shuttle explosions, Challenger in 1986 and Columbia in 2003. These accidents seem very different. One was an explosion shortly after take-off, the other a break-up on re-entry. But the underlying errors that made them possible seem eerily similar. The Columbia Accident Investigation Board report noted that the same basic questions had emerged: why did both shuttles keep flying with known problems? And why did Nasa managers decide that it was safe to launch despite warnings from their engineers? To set the stage for Columbia, Nasa first had to forget all the lessons of Challenger. </p>



<p>There is more to institutional forgetfulness than forgetting one big thing, whether that is “if you cheat the EPA, they may figure it out” or “the canal has a plughole”. Organisations can also just forget how to get things done. </p>



<p>As a boy I was fascinated by the Lockheed TriStar airliner because of its unusual configuration, with one engine in the tail. You don’t see it much these days — the TriStar was not a commercial success. </p>



<p>I wasn’t the only person to be intrigued by the plane, but the organisational psychologist Linda Argote had a different reason to scrutinise it. Most aircraft get much cheaper to make with the benefit of experience — they are the canonical example of learning by doing. But the TriStar stayed stubbornly expensive to make. Argote wanted to know why. Her idea flipped the idea of learning by doing: what about forgetting by not doing? </p>



<p>In a 1990 article Argote and Dennis Epple concluded that Lockheed had made so few planes they were forgetting faster than they were learning. In particular, in 1977 and 1978 production slumped to just 14 TriStars in total, and by the early 1980s costs in real terms were higher than in 1975. </p>



<p>The economist Lanier Benkard later estimated that Lockheed’s cost-saving expertise tended to drain away alarmingly fast if not refreshed by activity, with a half-life of just over a year. We can’t generalise too much from that. Planes are planes, and every case is different. Still, anyone who has ever filed tax returns can attest that a year is easily enough time to forget how to do any complex process. </p>



<p>Forgetting can happen for many reasons. People leave. Physical archives are vulnerable to mould and fire and being misplaced. Digital archives tend to become unreadable as technology changes — indeed the final reference in the Wikipedia entry on organisational memory is a dead link to a lost NHS website. And sometimes organisations deliberately forget. The underlying cause of the Windrush scandal in the UK was that one part of the Home Office decided to make onerous demands that UK residents prove they had the right to live and work in the country, without knowing — or much caring — that another part of the Home Office had destroyed the records that made such proof possible. </p>



<p>More than 100,000 US government web pages disappeared after President Trump took office. It remains to be seen what is gone temporarily and what has been lost for ever. </p>



<p>It is easy for organisations to forget, even when they are trying to remember. Let’s not make this worse than it has to be, or it will be more than the Chesterfield Canal that we lose.</p>



<p><em>Written for and first published in the <a href="https://www.ft.com/content/55c35781-bc26-4d42-af1f-9ebd62e441c7">Financial Times</a> on 18 April 2025.</em></p>



<p><em>Loyal readers might enjoy the book that started it all, <a href="https://timharford.com/books/undercovereconomist/">The Undercover Economist</a>.</em></p>



<p><em>I’ve set up a storefront on Bookshop in the <a href="https://bookshop.org/shop/TimHarford">United States</a> and the <a href="https://uk.bookshop.org/shop/TimHarford">United Kingdom</a>. Links to Bookshop and Amazon may generate referral fees.</em></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Wikipedia loses challenge against Online Safety Act (931 pts)]]></title>
            <link>https://www.bbc.com/news/articles/cjr11qqvvwlo</link>
            <guid>44866208</guid>
            <pubDate>Mon, 11 Aug 2025 16:33:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.com/news/articles/cjr11qqvvwlo">https://www.bbc.com/news/articles/cjr11qqvvwlo</a>, See on <a href="https://news.ycombinator.com/item?id=44866208">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="byline-new" data-component="byline-block"><p><span>Chris Vallance</span></p><p><span>Senior technology reporter</span></p></div><div data-component="text-block"><p>Wikipedia has lost a legal challenge to new Online Safety Act rules which it says could threaten the human rights and safety of its volunteer editors.</p><p>The Wikimedia Foundation - the non-profit which supports the online encyclopaedia - wanted a judicial review of regulations which could mean Wikipedia has to verify the identities of its users.</p><p>But it said despite the loss, <a target="_blank" href="https://www.judiciary.uk/wp-content/uploads/2025/08/Wikimedia-Foundation-and-another-v-Secretary-of-State-for-Science-Innovation-and-Technology.pdf">the judgement</a> "emphasized the responsibility of Ofcom and the UK government to ensure Wikipedia is protected".</p><p>The government told the BBC it welcomed the High Court's judgment, "which will help us continue our work implementing the Online Safety Act to create a safer online world for everyone".</p></div><div data-component="text-block"><p>Judicial reviews challenge the lawfulness of the way in which a decision has been made by a public body.</p><p>In this case the Wikimedia Foundation and a Wikipedia editor tried to challenge the way in which the government decided to make regulations covering which sites should be classed "Category 1" under the Online Safety Act - the strictest rules sites must follow.</p><p>It argued the rules were logically flawed and too broad, meaning a policy intended to impose extra rules on large social media companies would instead apply to Wikipedia.</p><p>In particular the foundation is concerned the extra duties required - if Wikipedia was classed as Category 1 - would mean it would have to verify the identity of its contributors, undermining their privacy and safety.</p><p>The only way it could avoid being classed as Category 1 would be to cut the number of people in the UK who could access the online encyclopaedia by about three-quarters, or disable key functions on the site. </p><p>The government's lawyers argued that ministers had  considered whether Wikipedia should be exempt from the regulations but had reasonably rejected the idea.</p></div><div data-component="text-block"><p>In the end, the court rejected Wikimedia's arguments.</p><p>But Phil Bradley-Schmieg, Lead Counsel at the Wikimedia Foundation, said the judgment did not give Ofcom and the Secretary of State, in Mr Justice Johnson's words, "a green light to implement a regime that would significantly impede Wikipedia's operations".</p><p>And the judgement makes it clear other legal challenges could be possible. </p><p>Wikimedia could potentially challenge Ofcom's decision making if the regulator did ultimately decide to classify the site as Category 1.</p><p>And if the effect of making Wikipedia Category 1 meant it could not continue to operate, then other legal challenges could follow.</p><p>"Wikipedia has been caught in the stricter regulations due to its size and user created content even though it argues (convincingly) that it differs significantly from other user-to-user platforms," said Mona Schroedel, data protection litigation specialist at law firm Freeths.</p><p>"The court's decision has left the door open for Wikipedia to be exempt from the stricter rules upon review."</p><p>The communications regulator Ofcom, which will enforce the act, told the BBC: "We note the court's judgment and will continue to progress our work in relation to categorised services and the associated extra online safety rules for those companies."</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Joy of Mixing Custom Elements, Web Components, and Markdown (104 pts)]]></title>
            <link>https://deanebarker.net/tech/blog/custom-elements-markdown/</link>
            <guid>44865997</guid>
            <pubDate>Mon, 11 Aug 2025 16:16:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://deanebarker.net/tech/blog/custom-elements-markdown/">https://deanebarker.net/tech/blog/custom-elements-markdown/</a>, See on <a href="https://news.ycombinator.com/item?id=44865997">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>

    


<hgroup>
  
  
</hgroup>



<header data-no-index="">
    
  

    
      
    
    
      
    
    <span>•</span>
  

  
    <span><time datetime="2025-08-09">August 9, 2025</time></span>
    <span>•</span>
  
  
  

</header>





    




    


    

    


<p>I love Markdown. I write faster and more natively in it than any other format or tool.</p>
<p>If we zoom way out, here’s the most basic philosophy of Markdown: replace complicated stuff with simpler stuff.</p>
<p>That’s all it does, really. It replaces some tedious nested taggy stuff with way simpler stuff that makes more visual sense and is  faster to type. At its core, Markdown is really just a bunch of macros.</p>
<p>This website runs on 6,000-ish Markdown files. They’re processed on the server – meaning the <a href="https://github.com/xoofx/markdig">Markdig library</a> from .NET processes them, then sends back the resulting HTML. I’m all-in on Markdown, to the point where I wrote my own online editor for it.</p>
<p>Server-side processing of Markdown is a pretty common model – most static site generators fundamentally do the same thing: they process the Markdown, turn it into HTML, and that gets sent to the server (via being written to files).</p>
<p>One of the philosophical points of Markdown is that you can mix it with HTML. Meaning, a Markdown parser is supposed to leave HTML alone – if a line of text looks like it has some tags, the parser should skip it.</p>
<p>This means you can do this:</p>
<pre><code>This is some **Markdown!**

&lt;img src="yay.jpg" /&gt;

This is some more ***Markdown!***
</code></pre>
<p>And that should work fine. The first and last lines will be processed and transformed, and the middle line will be left alone and output as it’s written.</p>
<p>These were <a href="https://daringfireball.net/projects/markdown/syntax#html">the original rules</a> around inline HTML in Markdown:</p>
<blockquote>
<p>The only restrictions are that block-level HTML elements […] must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces.</p>
</blockquote>
<p>I didn’t find the need for blank lines in <a href="https://spec.commonmark.org/0.31.2/#html-blocks">the CommonMark spec</a>, but just note that every Markdown processor might be a little different in this respect, so test.</p>
<p>Anyway, we’ll likely get HTML that’s something like this out of the above Markdown.</p>
<pre><code>&lt;p&gt;This is some &lt;strong&gt;Markdown!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="yay.jpg" /&gt;
&lt;p&gt;This is some more &lt;em&gt;&lt;strong&gt;Markdown!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
</code></pre>
<p>Our <code>img</code> tag is intact and has been left alone.</p>
<p>This is great, and helps you in some sticky situations. You can effectively “escape out” to HTML when you need to.</p>

<p>However, this still leaves you with the problem where you might have a bunch of complicated, tedious HTML that forms a repeatable component of some kind that you don’t want to hand-manage and reproduce over and over. What if you want a Markdown-friendly way to represent a feedback form, or a tabbed UI, or a mortgage calculator, or something else way beyond the scope of text formatting.</p>
<p>For these situations, what you really want is to put a token or a placeholder in your Markdown, and have something else <em>expand</em> it later on into a larger, more complicated HTML construct.</p>
<p>What you sort of need is… Markdown for More Complicated HTML™.</p>
<p>Enter <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements">Custom Elements</a>.</p>
<p>These have been around a long time. They tend to get lost behind all the attention paid to the big client-side frameworks like React, but the first public spec was published in 2013, finalized in 2016, and we’ve had broad browser support since 2018 or so.</p>

<p>Custom Elements can do a lot, but a core function is that they divorce the source markup from what’s effectively output into the DOM.</p>
<p>You can write X in the markup; the Custom Element will output Y into the DOM.</p>
<p>X is simple; Y is way more complicated.</p>
<p>X is written by an editor; Y is written by logical processing.</p>
<p>So, considered at that level, Custom Elements can be used as… HTML <em>macros</em>.</p>
<p>This means that when you combine them with Markdown, you get a really neat synergy of features.</p>
<ul>
<li>Markdown expands into text formatting</li>
<li>Custom Elements (that the Markdown processor ignores) expands into more complicated stuff</li>
</ul>
<p>Consider this scenario: you have a blog post which is Part 1 of a series. You want to let people subscribe to be notified about Part 2, but that involves a little widget of some kind in the HTML. And for whatever reason, you have to put this between two paragraphs.</p>
<p>What if you could do this:</p>
<pre><code>This is some **Markdown!**

&lt;subscribe-to /&gt;

This is some more **Markdown!**
</code></pre>
<p>(Remember, that middle line is HTML, so the Markdown processor will leave it alone.)</p>
<p>Then, in the browser, that <code>subscribe-to</code> tag will expand into something like this:</p>
<pre><code>&lt;div part="outer"&gt;
  &lt;label part="label"&gt;Want to know when Part 2 is published?&lt;/label&gt;
  &lt;input part="input" type="text" name="email" placeholder="Give us your email"&gt;
  &lt;button part="button" type="button"&gt;Let me know!&lt;/button&gt;
&lt;/div&gt;
</code></pre>
<p>This is <em>exactly</em> what Custom Elements can do.</p>
<p>To be clear, this is <em>not</em> a tutorial about Custom Elements in general – there’s a lot of depth there – but just a joyful discovery of what happens when we combine them with hand-written Markdown and come to the conclusion that both Custom Elements and Markdown sort of operate on the same principle from the perspective of the writer: they replace simpler stuff with more complex stuff.</p>
<p>Custom Elements can just be simple tokens like the above (actually, what’s above is not quite valid, but more on that below), or you can expose configuration parameters to make them more usable in more situations:</p>
<pre><code>This is some **Markdown!**

&lt;subscribe-to buttonText="Get me the details!" /&gt;

This is some more **Markdown!**
</code></pre>
<p>You can even put stuff between Custom Element tags then use that in the processing and output. (You can go even further, by defining child tag structures and “slots” and all sorts of stuff that we won’t get into. Again, there’s <em>so</em> much depth there…)</p>
<pre><code>This is some **Markdown!**

&lt;subscribe-to&gt;

We'll use your email once, then delete it. _We promise!_

&lt;/subscribe-to&gt;

This is some more **Markdown!**
</code></pre>
<p>Guess what happens to that line between the <code>subscribe-to</code> tags? Yes, it gets processed by the Markdown engine, <em>because it’s not HTML</em> – there’s no tag on that line. So the Markdown engine will process it, but leave the line above and below it alone, resulting in this:</p>
<pre><code>&lt;subscribe-to&gt;
  &lt;p&gt;We'll use your email once, then delete it. &lt;em&gt;We promise!&lt;/em&gt;&lt;/p&gt;
&lt;/subscribe-to&gt;
</code></pre>

<p>During a bout of insomnia, I did some local testing of the general theory.</p>
<p>I had <a href="https://claude.ai/">Claude</a> vibe-code a simple Node script that read a Markdown file which looked a lot like the samples above (Markdown paragraphs above and below, with a <code>subscribe-to</code> Custom Element in the middle). Then it processed the Markdown – Custom Element included – and output the result into a file.</p>
<p><a href="https://deanebarker.net/tech/blog/images/custom-elements-markdown/content.txt">Here’s the Markdown source.</a> There are two <code>subscribe-to</code> tags in there – one simple version, and one with a bunch of options I thought up.</p>
<p>You can see that when the browser encounters this – </p>
<pre><code>&lt;subscribe-to /&gt;
</code></pre>
<p>– it expands into HTML (in a shadow DOM) that ends up looking like this in the browser:</p>








<picture><source srcset="https://deanebarker.net/tech/blog/images/custom-elements-markdown/custom-elements-markdown.png?w=480" media="(max-width: 480px)"><img src="https://deanebarker.net/tech/blog/images/custom-elements-markdown/custom-elements-markdown.png?w=700" loading="lazy" width="700" height="167"></picture>



<p>Or this when you add some advanced options:</p>








<picture><source srcset="https://deanebarker.net/tech/blog/images/custom-elements-markdown/custom-elements-markdown-adv.png?w=480" media="(max-width: 480px)"><img src="https://deanebarker.net/tech/blog/images/custom-elements-markdown/custom-elements-markdown-adv.png?w=700" loading="lazy" width="700" height="201"></picture>



<p><a href="https://deanebarker.net/tech/blog/images/custom-elements-markdown/output.html">Here’s the output file.</a></p>
<p>(That’s raw HTML; you can view the source. Understand that it’s still <code>subscribe-to</code> in the source, but inspect the DOM and you can see what it effectively expands into. The JavaScript definition for the Custom Element is inline in the HTML doc. I used <a href="https://lit.dev/">Lit</a> as a base because it makes a lot of things <em>so</em> much easier.)</p>
<p>I just <em>love</em> this.</p>
<p>An editor has Markdown acting as text macros, Custom Elements acting as HTML macros, <em>and they can mix the two in the same file</em>.  Simpler things become more complicated things. They can use Gruber’s “escape hatch” to handle infinitely complexity while being abstracted away from verbosity.</p>
<p>This opens some lovely possibilities for page, layout, and element complexity and functionality while retaining the “I wrote it in a simple text editor!” joy that made Markdown so awesome to start with.</p>
<h2>Postscript: Minor Technical Note</h2>
<p>I’ve been lying to you a little in this entire document. You actually can’t do this:</p>
<pre><code>&lt;subscribe-to /&gt;
</code></pre>
<p>Custom Elements cannot be self-closing (or a “void tag,” as they’re called). You technically have to do this:</p>
<pre><code>&lt;subscribe-to&gt;&lt;/subscribe-to&gt;
</code></pre>
<p>The self-closing version will work sometimes, kind of accidentally. Where it falls apart is when you put something between the tags, because the browser considers the self-closing tag as just the <em>opening</em> tag, which it then claims never closes.</p>
<p>But here’s how and why I started <del>lying to you</del> displaying the self-closing version.</p>
<p>Because – and stick with me here – here’s something <em>else</em> you can’t do: put your tag attributes on multiple lines.</p>
<pre><code>&lt;subscribe-to
  buttonText="I love getting email!"
  anotherAttribute="Another value"
&gt;
</code></pre>
<p>This time, it’s not the browser that’s the problem – the browser is totally fine with you breaking out the attributes to their own lines. This time, it’s the Markdown engine. It looks at those middle lines and decides that they’re not HTML, not understanding that it’s logically part of the opening tag. This means that – you guessed it – the Markdown engine tries to process it and everything falls apart.</p>
<p>(As noted above, this might vary a bit between Markdown engines. Claude picked <a href="https://marked.js.org/">Marked</a> for this POC.)</p>
<p>I didn’t like that I couldn’t do this. I wanted to be able to break out all my attributes on their own lines.</p>
<p>To solve this, I had <a href="https://claude.ai/">Claude</a> vibe up a simple (?) Markdown pre-processor. So before the source Markdown got fed into Marked, some code in the Node app “fixes” the tag – reassembles it all back on the same line.</p>
<p>And, while I was doing that, I also “fixed” the self-closing tag issue. If the code detected a self-closing tag that contained a dash (which Custom Elements must), it changed it to an explicitly closed tag. That’s why I showed you the self-closing tag. But know that by the time it got to the Markdown engine, it was explicitly closed.</p>
<p>It was just cleaner and less confusing while I was early in the explanation.</p>
<p>Here’s the source of the Node app with the preprocessor in a (pretty gross-looking) function called <code>preprocessMarkdown</code>.</p>
<p>(Full disclosure: I didn’t even bother to check this. It was just a POC, so I had Claude write it. I could have written it myself, but didn’t want to put in the effort for something with no larger goal.)</p>
<h2>Postscript: Fun and Madness with Markdown Preprocessing</h2>
<p>Once you crack open the door of Markdown pre-processing, you can be sorely tempted to head further down that road. For instance, if you don’t like the idea of raw HTML in your Markdown, you could essentially write your own mini-language.</p>
<p>For example, something like:</p>
<pre><code>@:subscribe-to
 buttonText: I love email!
 placeHolder: Give us your email!
</code></pre>
<p>All you have to do is write some preprocessing code that detects that construct and forms it into the Custom Element tag.</p>

<p>Is that “better” than raw HTML? I don’t know… maybe?</p>
<p>The looming problem is that this is just one simplistic Custom Element example. When you get into more advanced features like child tag structures and slots and such, you’d probably end up re-interpreting and re-implementing <em>way</em> more of the HTML spec than you want to.</p>
<p>I predict there will be a point where you regret trying to do this. Pre-processing and the initial excitement of a domain-specific language is a siren that might lead you to your doom.</p>
<p>(I swear, I have never tried to do something this foolish… I <em>swear</em>…)</p>
<h2>Postscript: Fun with Language Design</h2>
<p>When you realize that Custom Elements effectively abstract writing HTML away from deeper logical programming, you realize that designing the logical interface of your Custom Elements is a fun exercise in language design.</p>
<p>The basic principle becomes: <em>don’t ask for anything you don’t absolutely need</em>. Do as much work as possible for your editors in code. Require them to provide as little information as possible.</p>
<p>If we want to embed a feedback form, for instance, we could do something like this:</p>
<pre><code>&lt;input-form submitButtonText="Send message!"&gt;
  &lt;input-text label="Your Name" spec="required &gt;4" /&gt;
  &lt;input-text label="Your Email" spec="required email" /&gt;
  &lt;input-text label="Ticket Number" spec="required regex:[A-Z]{2}[0-9]{4}" /&gt;
  &lt;input-text label="Your Message" spec="required multiline" /&gt;
  &lt;submit-message&gt;
    &lt;p&gt;Thanks for your submission! We normally respond in two business days.&lt;/p&gt;
  &lt;/submit-message&gt;
&lt;/input-form&gt;
</code></pre>

<p>This provides everything we (the developers) need to render a feedback form.</p>
<ul>
<li>We control the layout, so we’ll expand those <code>input-text</code> tags into multi-tag constructs to render each field.</li>
<li>We can assume that things like the form <code>METHOD</code> and <code>ACTION</code> are standardized to the site, so we don’t need to ask for those.</li>
<li>We can automatically obtain the URL/page from which they submitted. We could even develop some system where data from specific <code>META</code> tags in the <code>HEAD</code> are written to the form in hidden fields, meaning additional data can be injected into the form at the page templating level.</li>
<li>We assume the form needs a submit button, so there’s no need to specify it.</li>
<li>We can provide an “override default setting” model, where lots of stuff have default values that will be used if not provided. For example, I’m passing in <code>submitButtonText</code>, but that would certainly have a default value (“Submit Form”) that would be used if I didn’t feel like changing it.</li>
<li>Inside the <code>input-text</code> tags, we can roll up validation (<code>required</code>, <code>&gt;4</code> meaning at least five characters) and UI (<code>multiline</code>) specification into the same <code>SPEC</code> attribute, so we have no need for another tag for <code>textarea</code>.</li>
<li>We can derive all the field names from the <code>label</code>. Assuming we submit the form with client-side code, we could easily find the value of the the <code>label</code> for each input field via the <code>for</code> attribute, then serialize and submit that data as well, so the server would also get the “friendly name” of each input field.</li>
</ul>
<p>What we’ve done here is designed a specification language – two of them, actually.</p>
<ol>
<li>The combination of tags to specify the information we need to display and submit the form</li>
<li>The embedded <code>spec</code> values which define validation and UI variations</li>
</ol>
<p>This is really, <em>really</em> fun. You start to ask interesting questions about what information you actually need explicitly, and what information you can derive. You’ll find situations where you can make vast changes based on fun combinations of explicit information and environmental data.</p>
<p>It’s not hard to put together something that is unique to your specific situation and strikes a lovely combination among granularity, utility, and simplicity.</p>

<h2>Postscript: Processing Markdown Client-Side</h2>
<p>The original point of this post was about how to mix Markdown that’s processed server-side with Custom Elements that are processed client-side. As I noted, this is a common model, and the basis for all of the static site generation that happens these days.</p>
<p>But, what if you just wanted to process the Markdown client-side as well?</p>
<p>You certainly can. I’ve read that <a href="https://md-block.verou.me/">md-block</a> is quite good for this.</p>
<p>I don’t do it for a few reasons:</p>
<ol>
<li>I still have weird hang-ups about sending content source to the browser. Something about airing my dirty laundry? It’s not entirely rational, and I’ve spent a lot of time thinking about how it correlates to <a href="https://deanebarker.net/tech/blog/narratives/fourth-wall/">breaking the fourth wall</a>.</li>
<li>I wrote a bunch of <a href="https://github.com/xoofx/markdig/blob/master/src/Markdig/MarkdownExtensions.cs">Markdig extensions</a> specific to my site and needs. I wrote these in C#, so I wouldn’t be able to port them to the browser (…I don’t think? <a href="https://developersvoice.com/blog/architecture/webassembly-wasm-and-net/">WASM</a> might be able to do it?). Some client-side implementations might have extension frameworks too (here’s <a href="https://zerodevx.github.io/zero-md/?a=advanced-usage.md#extensibility">an example of one in zero-md</a>), however my Markdown usage on this site extends back six years to when I was really a “C# or death” kind of guy.</li>
</ol>

<ol start="3">
<li>Some of the extensions I wrote require information from the server, which means rendering the Markdown in the browser would require multiple round-trips back to the server to get information, and I don’t love this.</li>
</ol>
<p>If you did want to render client-side, there’s also a bit of a perspective shift needed. Somewhat ironically in the context of this post, you’d need to surround your Markdown in a Custom Element (like the aforementioned <code>md-block</code> tag).</p>
<p>This means that your Markdown rendering is a Custom Element on the same “level” as the Custom Elements we’ve been talking about above. The Custom Elements are not “embedded and ignored” by the Markdown engine, but rather they exist “alongside” the Markdown.</p>
<p>Depending on the Markdown library, you might need to close that tag before opening the Custom Element.</p>
<p>Like:</p>
<pre><code>&lt;client-markdown&gt;
  This is some ***Markdown!***
&lt;/client-markdown&gt;
&lt;subscribe-to /&gt;
&lt;client-markdown&gt;
  This is some more ***Markdown!***
&lt;/client-markdown&gt;
</code></pre>
<p>Your need to do this probably depends on the library you use. I can’t generalize with any authority.</p>
<p>In the end, your document is now fully an HTML document, not a Markdown document that <em>becomes</em> an HTML document. It’s a minor perspective shift, but might have some cascading effects on things I’ve written above.</p>
<h2>Postscript: Processing Custom Elements Server-Side</h2>
<p>You can also do the opposite of the above – if your server-side process is running in JavaScript (so, something like Node, Deno, or Bun), you can render the Custom Elements into expanded HTML on the server and send the HTML.</p>
<p>I have never done this, but <a href="https://lit.dev/docs/ssr/overview/">Lit supports it</a>. They even have a library that will re-hydrate the resulting HTML into “regular” Custom Elements when the page is finished loading.</p>
<p>Clearly, unless you do that, you’re not going to get any interactivity, so this is mostly useful as a templating language (…I think? Honestly, I know very little about it, other than that it exists).</p>





    



    

</article><p>
            This is item <strong>#1</strong> in a sequence of <strong>364</strong> items.
        </p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Learn, Reflect, Apply, Prepare: The Four Daily Practices That Changed How I Live (111 pts)]]></title>
            <link>https://opuslabs.substack.com/p/learn-reflect-apply-prepare</link>
            <guid>44865834</guid>
            <pubDate>Mon, 11 Aug 2025 16:06:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://opuslabs.substack.com/p/learn-reflect-apply-prepare">https://opuslabs.substack.com/p/learn-reflect-apply-prepare</a>, See on <a href="https://news.ycombinator.com/item?id=44865834">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!bCx3!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!bCx3!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png 424w, https://substackcdn.com/image/fetch/$s_!bCx3!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png 848w, https://substackcdn.com/image/fetch/$s_!bCx3!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png 1272w, https://substackcdn.com/image/fetch/$s_!bCx3!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!bCx3!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png" width="1456" height="971" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:971,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1620418,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://opuslabs.substack.com/i/169679570?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!bCx3!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png 424w, https://substackcdn.com/image/fetch/$s_!bCx3!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png 848w, https://substackcdn.com/image/fetch/$s_!bCx3!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png 1272w, https://substackcdn.com/image/fetch/$s_!bCx3!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe466eacb-63f3-4e72-9acc-440215dfa5ee_1536x1024.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>In a world obsessed with hacks, sprints, and overnight success, I’ve been drawn to something quieter, simpler, and, at least for me, more sustaining: a daily rhythm built around four verbs.</p><p>No apps. No dashboards. Just a living experiment I return to every day:</p><p>I haven’t mastered this. Far from it. But the more I practice, the more I notice how these four verbs gently shape my days, especially when things feel chaotic or uncertain.</p><p>I try to open a new window in my mind each day. It might be a podcast, a conversation, a paragraph from a book, or a stray insight on a walk. Learning, for me, isn’t about stacking facts. It’s about staying curious, open, and awake to the world.</p><p>When I learn something new, my mental map shifts. I become a bit more flexible, a bit less stuck. That’s the kind of fuel I’ve come to value.</p><p><em>What new idea or perspective did I encounter today?</em></p><p>Learning stays surface level unless I reflect on it. Writing, especially by hand, helps me process. I use a notebook, sometimes messy, sometimes structured. The goal isn’t productivity. It’s clarity.</p><p>Reflection helps me stay honest. It’s how I untangle thoughts, sharpen ideas, and notice patterns.</p><p><em>What does today’s learning mean for me? How does it connect to my life or questions I’m carrying?</em></p><p>Knowledge is everywhere. What’s rare is using it. I’m still learning how to turn insights into action, but I try to ask myself daily: How can I use what I’ve learned?</p><p>It might be a shift in a decision I make, a note I write, a prototype I build, or even just a tweet. Tiny moves help the learning settle into my life.</p><p><em>Did I do anything to make use of the knowledge I have gathered?</em></p><p>This one’s the quietest, but maybe the most powerful. Preparation isn’t glamorous, but it’s a gift to my future self. A five-minute task now that saves an hour later. A system I set up. An email I send. A backup I don’t skip.</p><p>I’m still figuring this one out, but I’ve felt the difference when I don’t ignore it.</p><p><em>What did I do today that tomorrow will thank me for?</em></p><p>These four verbs aren’t a productivity system or a self-help formula. Some days I forget one. Other days, one takes over. But when I return to them, they gently reorient me.</p><p>They help me:</p><ul><li><p>Keep learning without burning out</p></li><li><p>Integrate instead of just consuming</p></li><li><p>Take action without rushing</p></li><li><p>Plan ahead for reduced anxiety</p></li></ul><p><span>This isn’t a method I’ve perfected. It’s one I’m </span><strong>actively living</strong><span>. And every time I return to it, something shifts.</span></p><p><span>Try it for a week. Not to optimize, but to notice what becomes possible.</span><br></p><p data-attrs="{&quot;url&quot;:&quot;https://opuslabs.substack.com/p/learn-reflect-apply-prepare?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://opuslabs.substack.com/p/learn-reflect-apply-prepare?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel="nofollow ugc noopener"><span>Share</span></a></p><p data-attrs="{&quot;url&quot;:&quot;https://opuslabs.substack.com/?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share OpusLABS&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://opuslabs.substack.com/?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel="nofollow ugc noopener"><span>Share OpusLABS</span></a></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Claude Is the Drug, Cursor Is the Dealer (165 pts)]]></title>
            <link>https://middlelayer.substack.com/p/i-claude-is-the-drug-cursor-is-the</link>
            <guid>44865813</guid>
            <pubDate>Mon, 11 Aug 2025 16:04:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://middlelayer.substack.com/p/i-claude-is-the-drug-cursor-is-the">https://middlelayer.substack.com/p/i-claude-is-the-drug-cursor-is-the</a>, See on <a href="https://news.ycombinator.com/item?id=44865813">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>There is a rumor floating around tech-twitter that Cursor makes just ten cents for every dollar it spends. Maybe that number is exaggerated but even if it’s directionally correct at some point we are in for a rude awakening in the world of consumer AI apps. </p><p><strong>Many of today’s </strong><em><strong>sexiest</strong></em><strong> AI startups are not product companies but rather distribution arms for someone else’s model.</strong></p><p>These companies are beloved on Twitter, raise at billion-dollar valuations and build beautiful user experiences. The approaching bubble pop? They don’t own the product and they don’t control the supply chain. They live and die by the labs upstream.</p><p>We are witnessing tech’s version of the drug trade: a few powerful labs synthesize the product and startups hustle to get it into users’ hands. Often fronting much of the costs and raising large venture rounds to keep the economics alive. </p><div><p><span>If OpenAI, Anthropic, and Meta are the chemists, then startups like Cursor, Bolt and Lovable are the dealers. </span></p><p><span>The labs develop the substance: </span><strong>the models.</strong></p></div><p><span>The startups distribute the substance: </span><strong>the dealers</strong><span>. </span></p><p>These startups:</p><ul><li><p>Wrap the model in UX</p></li><li><p>Front the inference cost</p></li><li><p>Serve the customer</p></li><li><p>Build a fanbase, raise big VC rounds, grow their ARR fast </p></li></ul><p>But over time, the truth sets in: they don’t control the pricing, they don’t control the roadmap, and their supplier keeps shipping your best features natively.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!kz0V!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!kz0V!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png 424w, https://substackcdn.com/image/fetch/$s_!kz0V!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png 848w, https://substackcdn.com/image/fetch/$s_!kz0V!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png 1272w, https://substackcdn.com/image/fetch/$s_!kz0V!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!kz0V!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png" width="455" height="455" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1024,&quot;width&quot;:1024,&quot;resizeWidth&quot;:455,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Generated image&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="Generated image" title="Generated image" srcset="https://substackcdn.com/image/fetch/$s_!kz0V!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png 424w, https://substackcdn.com/image/fetch/$s_!kz0V!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png 848w, https://substackcdn.com/image/fetch/$s_!kz0V!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png 1272w, https://substackcdn.com/image/fetch/$s_!kz0V!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0afc3898-0f19-41cd-a991-6700e4b1bbc7_1024x1024.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><em>Let’s name names. </em></p><ul><li><p><span>Raised </span><strong>$900M</strong><span> at a </span><strong>$9B valuation</strong><span> in 2025.</span></p></li><li><p>Built a great AI coding IDE with full-codebase context and session memory.</p></li><li><p>Runs nearly all inference through OpenAI and Anthropic.</p></li></ul><ul><li><p><span>Raised </span><strong>$150M–$200M</strong><span> at around a </span><strong>$2B valuation</strong><span>.</span></p></li><li><p>Offers low-code app generation powered by Claude, with self-hosting, simplified templates and free trials to get user’s hooked. </p></li></ul><ul><li><p>A lightweight app that wraps GPT and Claude in a clean, keyboard-first interface.</p></li><li><p>Simple UX wrappers on the market.</p></li><li><p>No proprietary model, no infra, no moat if the labs go direct.</p></li></ul><p><span>These companies not only have strong branding and ARR that have investors drooling (</span><em>literally) </em><span>but they are also growing the market. With big marketing budgets and costs that are funded by venture pricing models these companies are revealing just how big each use case may be. </span></p><p><span>But there’s a </span><strong>tradeoff</strong><span>. As they grow adoption, they send a clear signal upstream: </span><em>this is what users want.</em></p><p>And more often than not, the labs take notice. (More on that later.)</p><p>In AI, the story looks quite similar across every new crop of YC startups or venture announcements. What we’ve covered here is just one slice of the market: coding tools. The same dynamics are playing out and will play out in other fast-growing categories: meeting notetakers, AI therapists, creative assistants and beyond.</p><p>From here, the path forks. </p><p><strong>Path 1:</strong><span> labs go direct and wrappers get cut out.</span></p><p><em><span>Illustrated by Foundation Capital’s</span><a href="https://foundationcapital.com/when-model-providers-eat-everything-a-survival-guide-for-service-as-software-startups/" rel="nofollow ugc noopener"> excellent graphic </a><span>below:</span></em><span> </span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!E5EQ!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!E5EQ!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg 424w, https://substackcdn.com/image/fetch/$s_!E5EQ!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg 848w, https://substackcdn.com/image/fetch/$s_!E5EQ!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!E5EQ!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!E5EQ!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg" width="1024" height="576" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:576,&quot;width&quot;:1024,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!E5EQ!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg 424w, https://substackcdn.com/image/fetch/$s_!E5EQ!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg 848w, https://substackcdn.com/image/fetch/$s_!E5EQ!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!E5EQ!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F298dadf0-c9fc-4bb4-a2bc-d6b1fe811d6f_1024x576.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><div><p><strong>Path 2:</strong><span> models become commoditized, like generic Advil, and wrappers can win.</span></p><p><span>I’ll explore both of those futures in upcoming posts. For now, the takeaway is simple: unless you own the model, you’re not the product. You’re just the dealer and the lab always has the purer supply.</span></p></div></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GitHub is no longer independent at Microsoft after CEO resignation (1281 pts)]]></title>
            <link>https://www.theverge.com/news/757461/microsoft-github-thomas-dohmke-resignation-coreai-team-transition</link>
            <guid>44865560</guid>
            <pubDate>Mon, 11 Aug 2025 15:47:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/news/757461/microsoft-github-thomas-dohmke-resignation-coreai-team-transition">https://www.theverge.com/news/757461/microsoft-github-thomas-dohmke-resignation-coreai-team-transition</a>, See on <a href="https://news.ycombinator.com/item?id=44865560">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p><a href="https://www.theverge.com/authors/tom-warren"><img alt="Tom Warren" data-chromatic="ignore" loading="lazy" width="36" height="36" decoding="async" data-nimg="1" srcset="https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/197777/profilephoto.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=48 1x, https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/197777/profilephoto.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=96 2x" src="https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/197777/profilephoto.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=96"></a></p><div><p><span aria-expanded="false" aria-haspopup="true" role="button" tabindex="0"><span id="follow-author-standard_article_details-dmcyOmF1dGhvclByb2ZpbGU6MTY0"><span><span><svg width="9" height="9" viewBox="0 0 9 9" fill="none" xmlns="http://www.w3.org/2000/svg" aria-label="Follow"><path d="M5 0H4V4H0V5H4V9H5V5H9V4H5V0Z"></path></svg></span></span><span>Tom Warren</span></span></span></p> <p><span>is a senior editor and author of <a href="https://www.theverge.com/notepad-microsoft-newsletter"><i>Notepad</i></a>, who has been covering all things Microsoft, PC, and tech for over 20 years.</span></p></div></div><div id="zephr-anchor"><p>Microsoft is moving GitHub into its CoreAI team, following the resignation of GitHub CEO Thomas Dohmke today. After nearly four years as CEO, Dohmke is leaving GitHub to “become a startup founder again,” and pursue opportunities outside of Microsoft and GitHub.</p><p>GitHub has operated as a separate company ever <a href="https://www.theverge.com/2018/10/26/17954714/microsoft-github-deal-acquisition-complete">since Microsoft acquired it</a> in 2018 for $7.5 billion, but Dohmke’s departure is part of a big shakeup to the way GitHub operates. Microsoft isn’t replacing Dohmke’s CEO position, and GitHub will now be fully part of Microsoft instead of being run as a separate entity.</p><p>“GitHub and its leadership team will continue its mission as part of Microsoft’s CoreAI organization, with more details shared soon,” says Dohmke in <a href="https://github.blog/news-insights/company-news/goodbye-github/">a memo</a> to GitHub employees today. “I’ll be staying through the end of 2025 to help guide the transition and am leaving with a deep sense of pride in everything we’ve built as a remote-first organization spread around the world.”</p><p>Microsoft’s CoreAI team is a new engineering group led by former Meta executive Jay Parikh. It includes Microsoft’s platform and tools division and Dev Div teams, with a focus on building an AI platform and tools for both Microsoft and its customers. Parikh described his vision of an AI agent factory <a href="https://www.theverge.com/notepad-microsoft-newsletter/672598/microsoft-ai-agent-factory-jay-parikh-interview">in an interview with </a><em><a href="https://www.theverge.com/notepad-microsoft-newsletter/672598/microsoft-ai-agent-factory-jay-parikh-interview">Notepad</a> </em>earlier this year, and how he is convincing the developer division of Microsoft to adopt AI.</p><p>“Just like how Bill [Gates] had this idea of Microsoft being a bunch of software developers building a bunch of software, I want our platform, for any enterprise or any organization, to be able to be the thing they turn into their own agent factory,” said Parikh.</p><p>Dohmke only just <a href="https://www.theverge.com/decoder-podcast-with-nilay-patel/720075/github-ceo-thomas-dohmke-ai-coding-copilot-openai-interview">appeared on <em>Decoder </em>last week</a>, discussing Copilot, vibe coding, and what’s next for AI. Dohmke was thinking a lot about the competition and GitHub’s role in the future of software development, and now he’s about to leave to potentially create some more competition for Microsoft’s AI efforts.</p><div><p><span><strong>Follow topics and authors</strong> from this story to see more like this in your personalized homepage feed and to receive email updates.</span></p><ul><li id="follow-author-article_footer-dmcyOmF1dGhvclByb2ZpbGU6MTY0"><span aria-expanded="false" aria-haspopup="true" role="button" tabindex="0"><span><span><svg width="9" height="9" viewBox="0 0 9 9" fill="none" xmlns="http://www.w3.org/2000/svg" aria-label="Follow"><path d="M5 0H4V4H0V5H4V9H5V5H9V4H5V0Z"></path></svg></span><span>Tom Warren</span></span></span></li><li></li><li></li><li></li><li></li></ul></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Auf Wiedersehen, GitHub (172 pts)]]></title>
            <link>https://github.blog/news-insights/company-news/goodbye-github/</link>
            <guid>44864929</guid>
            <pubDate>Mon, 11 Aug 2025 15:01:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.blog/news-insights/company-news/goodbye-github/">https://github.blog/news-insights/company-news/goodbye-github/</a>, See on <a href="https://news.ycombinator.com/item?id=44864929">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
	
<p>Over a decade ago, my family and I made the leap to move from Germany to the United States after the sale of my startup to Microsoft. In the years since, I’ve had the privilege of working with many exceptional human beings, including Hubbers, Microsofties, customers, partners, our GitHub Stars, open-source maintainers, and developers around the world who’ve helped us shape GitHub. From building mobile developer tools, to running the acquisition of GitHub alongside Nat Friedman, to becoming GitHub’s CEO and guiding us into the age of Copilot and AI, it has been the ride of a lifetime.</p>



<p><strong>Still, after all this time, my startup roots have begun tugging on me and I’ve decided to leave GitHub to become a founder again.</strong> GitHub and its leadership team will continue its mission as part of Microsoft’s CoreAI organization, with more details shared soon. I’ll be staying through the end of 2025 to help guide the transition and am leaving with a deep sense of pride in everything we’ve built as a remote-first organization spread around the world.</p>



<p>With more than 1B repos and forks, and over 150 million developers, GitHub has never been stronger than it is today. We have seen more open-source projects with more contributions every year. AI projects have doubled in the last year alone. And our presence in companies of any size is unmatched in the market. The GitHub platform has continued to lead with incredible momentum. We massively improved accessibility and availability, brought GitHub to the EU, Australia, and back to the US for FedRAMP certification, and fixed a ton of small and not-so-small papercuts. GitHub Advanced Security transformed the industry toward “found means fixed” with the power of AI, reducing mean time to remediation by 60% and enabling teams to fix vulnerabilities 3x faster. GitHub Actions has firmly matured into the world’s leading CI solution, now powering 3 billion minutes per month — up 64% year-over-year — fueled by many key ships and stability improvements.</p>



<p>And of course, together, we launched and scaled Copilot from a simple, but magical autocompletion tool to conversational coding with Copilot Chat &amp; Voice, to reviewing and fixing code, to full-stack app creation with GitHub Spark. Today, GitHub Copilot is the leader of the most successful and thriving market in the age of AI, with over 20 million users and counting. We did this by innovating ahead of the curve and showing grit and determination when challenged by the disruptors in our space. In just the last year, GitHub Copilot became the first multi-model solution at Microsoft, in partnership with Anthropic, Google, and OpenAI. We enabled Copilot Free for millions and introduced the synchronous agent mode in VS Code as well as the asynchronous coding agent native to GitHub.&nbsp;</p>



<p><strong>Because of your relentless work, GitHub Copilot has introduced the greatest change to software development since the advent of the personal computer.</strong></p>



<p>While I’m certainly proud of our hard-earned business growth, technology built for its own sake means nothing but vanity unless it serves a greater purpose. We only succeed when the world succeeds, too. By launching this new age of developer AI, we’ve made it possible for anyone — no matter what language they speak at home or how fluent they are in programming — to take their spark of creativity and transform it into something real. I am more convinced than ever that the world will soon see one billion developers enabled by billions of AI agents, each imprinting human ingenuity into a new gold rush of software. When that day comes, we’ll know where the path began: with GitHub.&nbsp;</p>



<p>Thank you, Hubbers. Being your colleague and your leader has been a great honor and I will cherish our many beautiful moments. Together, we’ve bent the arc of technology for the better.</p>



<p>So long, and thanks for all the fish,</p>



<p><em>Thomas</em></p>

		<div>
	<h2>
		Written by	</h2>
	
			<article>
	<div>
					<div>
				<picture>
					<source srcset="https://secure.gravatar.com/avatar/f9a3d6bee42f4503d3169861b9ecdfab5b2faebc73eb6344d2c3fa15727da799?s=200&amp;d=mm&amp;r=g" width="120" height="120" media="(min-width: 768px)">
					<img src="https://secure.gravatar.com/avatar/f9a3d6bee42f4503d3169861b9ecdfab5b2faebc73eb6344d2c3fa15727da799?s=200&amp;d=mm&amp;r=g" alt="Thomas Dohmke" width="80" height="80" loading="lazy" decoding="async">
				</picture>
			</div>
				
					<p>Fascinated by software development since his childhood in Germany, Thomas Dohmke has built a career building tools to accelerate developer happiness. Currently, Thomas is the Chief Executive Officer of GitHub, where he has overseen the rise of the world’s most widely adopted AI developer tools – including the launches of GitHub Copilot, Copilot Workspace, and GitHub Models. Thomas is a celebrated TED speaker and holds a PhD in mechanical engineering from University of Glasgow, UK.</p>
			</div>
</article>
	</div>
</section><section>
	<h2>
		Related posts	</h2>
	<div>
	<article>
	<div>
			<h3>
				<a href="https://github.blog/open-source/maintainers/we-need-a-european-sovereign-tech-fund/" target="_self">
					We need a European Sovereign Tech Fund				</a>
			</h3>
			<p>Open source software is critical infrastructure, but it’s underfunded. With a new feasibility study, GitHub’s developer policy team is building a coalition of policymakers and industry to close the maintenance funding gap.</p>
		</div>
</article>
<article>
	
</article>
<article>
	
</article>
</div>
</section><div>
	<h2>
		Explore more from GitHub	</h2>
	<div>
		<div>
		<p><img src="https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg" width="44" height="44" alt="Docs"></p><h3>
			Docs		</h3>
		<p>Everything you need to master GitHub, all in one place.</p>
					<p>
				<a data-analytics-click="Blog, click on module, text: Go to Docs; ref_location:bottom recirculation;" href="https://docs.github.com/" target="_blank" aria-label="Go to Docs">
					Go to Docs											<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z"></path></svg>
									</a>
			</p>
			</div>
<div>
		<p><img src="https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg" width="44" height="44" alt="GitHub"></p><h3>
			GitHub		</h3>
		<p>Build what’s next on GitHub, the place for anyone from anywhere to build anything.</p>
					<p>
				<a data-analytics-click="Blog, click on module, text: Start building; ref_location:bottom recirculation;" href="https://github.com/" target="_blank" aria-label="Start building">
					Start building											<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z"></path></svg>
									</a>
			</p>
			</div>
<div>
		<p><img src="https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg" width="44" height="44" alt="Customer stories"></p><h3>
			Customer stories		</h3>
		<p>Meet the companies and engineering teams that build with GitHub.</p>
					<p>
				<a data-analytics-click="Blog, click on module, text: Learn more; ref_location:bottom recirculation;" href="https://github.com/customer-stories" target="_blank" aria-label="Learn more">
					Learn more											<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z"></path></svg>
									</a>
			</p>
			</div>
<div>
		<p><img src="https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg" width="44" height="44" alt="GitHub Universe 2025"></p><h3>
			GitHub Universe 2025		</h3>
		<p>Last chance: Save $700 on your IRL pass to Universe and join us on Oct. 28-29 in San Francisco.</p>
					<p>
				<a data-analytics-click="Blog, click on module, text: Register now; ref_location:bottom recirculation;" href="https://githubuniverse.com/?utm_source=Blog&amp;utm_medium=GitHub&amp;utm_campaign=module" target="_blank" aria-label="Register now">
					Register now											<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z"></path></svg>
									</a>
			</p>
			</div>
	</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[36B solar mass black hole at centre of the Cosmic Horseshoe gravitational lens (151 pts)]]></title>
            <link>https://academic.oup.com/mnras/article/541/4/2853/8213862?login=false</link>
            <guid>44864680</guid>
            <pubDate>Mon, 11 Aug 2025 14:42:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://academic.oup.com/mnras/article/541/4/2853/8213862?login=false">https://academic.oup.com/mnras/article/541/4/2853/8213862?login=false</a>, See on <a href="https://news.ycombinator.com/item?id=44864680">Hacker News</a></p>
Couldn't get https://academic.oup.com/mnras/article/541/4/2853/8213862?login=false: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Meta Leaks Part 1: Israel and Meta (465 pts)]]></title>
            <link>https://archive.org/details/meta_leaks_part_1</link>
            <guid>44864419</guid>
            <pubDate>Mon, 11 Aug 2025 14:22:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://archive.org/details/meta_leaks_part_1">https://archive.org/details/meta_leaks_part_1</a>, See on <a href="https://news.ycombinator.com/item?id=44864419">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent">
          <!--//.container-ia-->
      
    <div id="theatre-ia-wrap">
        

          
    
        

  
  <h2>
    Bookreader Item Preview
  </h2>

  <!--//#theatre-ia-->
  
</div><!--//.container-ia-->
<!--/.container-ia-->

<div>
            <section>
      <p itemprop="interactionStatistic" itemscope="" itemtype="http://schema.org/InteractionCounter">
                  
        
        <span itemprop="userInteractionCount">0</span>

        Views      </p>

      <p>
                  <span>1</span>
          <span>Favorite</span>
              </p>

          </section>
    
                                <section>
      <h2>
        DOWNLOAD OPTIONS
      </h2>

      
                        
                                <div>
                        <p>
                                          DAISY                          
                          </p><p>For users with print-disabilities</p>
                      </div>
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                            
      
                </section>
        
    

              <section>
      <p>
        Uploaded by
                  <a href="https://archive.org/details/@icw_nru">
            icw_nru          </a>
        
                  on <time>August 11, 2025</time>
              </p>
    </section>
          </div><!--//.container-ia-->
  <div id="also-found" data-identifier="meta_leaks_part_1" data-host-name="www14.us.archive.org" data-mediatype="texts">
                <h2>SIMILAR ITEMS (based on metadata)</h2>
        
      </div><!--//.container-ia-->

  <!--/.container-->
              
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Trump Orders National Guard to Washington, D.C., and Takeover of City’s Police (383 pts)]]></title>
            <link>https://www.nytimes.com/live/2025/08/11/us/trump-news</link>
            <guid>44864192</guid>
            <pubDate>Mon, 11 Aug 2025 14:04:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/live/2025/08/11/us/trump-news">https://www.nytimes.com/live/2025/08/11/us/trump-news</a>, See on <a href="https://news.ycombinator.com/item?id=44864192">Hacker News</a></p>
Couldn't get https://www.nytimes.com/live/2025/08/11/us/trump-news: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Claude Code is all you need (654 pts)]]></title>
            <link>https://dwyer.co.za/static/claude-code-is-all-you-need.html</link>
            <guid>44864185</guid>
            <pubDate>Mon, 11 Aug 2025 14:03:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dwyer.co.za/static/claude-code-is-all-you-need.html">https://dwyer.co.za/static/claude-code-is-all-you-need.html</a>, See on <a href="https://news.ycombinator.com/item?id=44864185">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <div>
            <h2>Claude Code<br>Is All You<br>Need</h2>
            <p>How I use Claude Code for work, fun, and as a text editor</p>
        </div>

    <div>
            <p><img src="https://dwyer.co.za/static/img/claude-code-header.png" alt="Claude Code"></p><p>I installed Claude Code in June. I'd tried Cursor and Cline and Zed and a few others, but all of them felt clunky to me because I'm used to doing nearly everything in vanilla vim and my terminal. Claude Code was the first tool I tried that felt like it fit into my workflows perfectly rather than needing me to adapt to new tools.</p>
            <p>It also worked really, really well.</p>
            <p>I quickly cancelled my GPT subscription and put the $20/month towards Anthropic instead. Losing GPT advanced voice mode and dealing with the extra UI lag and lack of polish in Claude Desktop and Mobile apps was a bit of an adjustment to make but the terminal tool was fun enough that I didn't care.</p>
            <p>Within a few days I'd upgraded to the $100/month MAX plan to try out Opus and to stop hitting limits.</p>
            <p>Here's a description of some of the things I've used it for so far. Mainly fun stuff while I figure out how to use it, but I'm starting to use it more and more for 'real' work stuff too.</p>

            <div>
                
                
                <p>Some projects include an experimental 'autonomous startup builder', a (one shot) SplitWise replacement, an AI poster maker, a browser plugin to rate HN comments, a basic trello alternative, and some well organized bank statements</p>
            </div>

            <!-- Modal for image overlay -->
            <div id="imageModal" onclick="closeModal()">
                <p><img id="modalImage" src="" alt="">
                </p>
            </div>

            <p>I'll describe most of these in more detail below but my main takeaways from the last few weeks are:</p>

            <p>1) Have faith (always run it with 'dangerously skip permissions', even on important resources like your production server and your main dev machine. If you're from infosec, you might want to stop reading now—the rest of this article isn't going to make you any happier. Keep your medication close at hand if you decide to continue).</p>
            <p>2) Give it a lot of input. The more input you give it, the better its output is. It's a magic tool, but you'd still better be damn good at communicating, either by typing thousands of words into text files or the interactive window, or using TTS (I haven't tried this because I hate the sound of my own voice, but others have reported great results).</p>
            <p>3) It's surprisingly good at UI design given that it's mainly a text model.</p>
        </div>

    <div>
            <a href="#vibe-code" id="vibe-code">
                <h2><span>#</span>Let's vibe code<br>some CRUD</h2>
            </a>
            <p>Let's try some vibe coding.</p>
            
            <p><strong>Aside:</strong> The definition of vibe coding is still in flux, but to me it means creating software without looking at or editing code. You don't really care what languages or frameworks are used under the hood and develop the code only by chatting with a model.</p>

            <p>We're going to put Claude Code through its paces by developing a basic SplitWise clone. A lot of people use Trello or a Todo list as the basic example of a CRUD app. I like using Splitwise because it's simple enough but it's a bit less cliched and probably not as deeply embedded in the models themselves.</p>

            <p>Building a basic splitwise clone is still mainly 'regurgitation' from some people's point of view, but it has some interesting edge cases that people and models tend to get wrong. Specifically around inviting new users, but letting previous users already start adding expenses and assigning them to users with a pending invitation.</p>

            <p>The simplest form of vibe coding is 'one-shot vibe coding' where you want the model to generate a fully working application after only a single prompt, without needing to give it any further inputs about what to fix, add, remove or change.</p>

            <p>I cheated a bit because the prompt I used to one-shot this is based a bit on earlier attempts where the model did things that I didn't want, but the app shown below and at <a href="https://smartsplit.verysmall.site/" target="_blank">smartsplit.verysmall.site</a> is the output of <code>claude -p "Read the SPEC.md file and implement it"</code> My SPEC.md file is about 500 words (shown in full a bit later).</p>

            <p><img src="https://dwyer.co.za/static/img/smartsplit-php-demo.png" alt="Working Smartsplit PHP demo"></p><p>Depending on how much you've been using LLMs for coding in the last few weeks or months, you'll probably either be surprised or unimpressed that we can get a fully working CRUD application with moderately complicated functionality in one prompt. You can see in the screenshot above that it has some nice touches like filling in names automatically for registered users, but falling back to their email address for non-registered ones.</p>

            <p>I haven't extensively tested it, but the few cases I tried and spot checked worked flawlessly.</p>

            <p>If you're surprised that it works this well, then you should know that a) these models are still inconsistent — they can perform wildly differently based on the same or similar inputs, and b) they're very sensitive to the quality and quantity of input.</p>

            <p>For example, here's a version that's completely broken, with not even basic registration working. The prompt I used for this version was nearly identical, but contained a bit less guidance about what technology stack to use, so the model decided to go overboard and overcomplicate everything to the point where it couldn't even build basic functionality.</p>

            <p><img src="https://dwyer.co.za/static/img/smartsplit-js-fail.png" alt="Failed SmartSplit JavaScript version"></p><a href="#tale-two-codebases" id="tale-two-codebases">
                <h2><span>#</span>A tale of two vibe-coded codebases</h2>
            </a>

            <p>Let's take a look at these two projects and the prompt that created them. The working version is a 900 line index.php file that contains the entire app. The broken version is a NodeJS project split into a client and a server. It's not much longer in terms of lines of code - about a 1000 lines of non-dependency code split up over 15 files. But after you run <code>npm i</code> on the broken version it pulls in 500MB (!!) of dependencies.</p>

            <p><img src="https://dwyer.co.za/static/img/smartsplit-tree.png" alt="SmartSplit project structure comparison"></p><p>Here's the full SPEC.md. This prompt I gave Claude Code is a SPEC.md file. It's nearly the same in both cases, except for the PHP one I tell it to keep things simple, stay away from frameworks, and just write raw SQL. In the broken version, I let it do whatever it wants.</p>

            <div>
<pre>smartsplit-php [master+] $ cat SPEC.md
SmartSplit is a basic CRUD application like SplitWise that lets users split expenses and figure out who needs to pay what to who.

Specifically it has the following features

* A user can sign up with a name, email address, and password
* A user can create a new SmartSplit and give it a name
* A user can add expenses which have a name, an optional description, and an amount
* When adding an expense, a user can specify who paid for it, and who it should be split with
* IMPORTANT: a user can specify that other users are the person who paid, not only the logged in user
* IMPORTANT A user can add others users as the payer or as people to split with even if they haven't joined yet
* For users who haven't joined yet, the user can select them by the invited email address
* Invites are not sent by email, there is no email. THey're just used for unique usernames to manage access
* Once they've joined and added their name, the name should be shown everywhere instead of the email address
* When adding a new expense, the default is that it's split between all users (joined and invited)
* The adder can remove some users if some of them did not take part in that expense
* All splits are always even for simplicity, divided equally between all people specified for that expense
* A user can invite another user to a SmartSplit by specifying their email address.
* Each SmartSplit gets a unique 8-digit alphanumeric code that makes easy to share URLs
* Any user can create a new smartsplit, or join an existing one if they're logged in with an email address that was invited
* Even if that user doesn't yet have an aaccount on SmartSplit, they'll have access to any SmartSplits they're added to after signing up (This bit is important). If the invitee has added their email address, they should have access automatically.
* Any user can add, remove, or edit any expenses within a SmartSplit that they have access to
* Any user can press 'Tally up' which should calculate who needs to make what payments to who to split everything

## Implementation details

* Email addresses are usernames, all registration and login is done with only an email and password
* Passwords are hashed but no extra secrutiy like length or weak passwords or confirmed passwords is applied
* Once a user has registered, they are automatically logged in
* The login and register flow is the same, but the user is registered if they don't have an account and logged in if they do

<span>## Techncial details

* Use a single index.php script for the entire app.
* SQLite for all database functionality.
* No frameworks, just vanilla javascript and css
* No ORMs, use raw SQL
* use a clean minimalist elegant design that's mobile responsive</span></pre>
            </div>

            <p>Those last five bullet points are the only difference between the two prompts, so in some sense they represent a transformation of 500MB of broken code into 30KB of working code.</p>

            <p>Yes, it's a toy example and some people will say that the JavaScript one scales better or something. I'm not here to fight. I hate PHP too, but I'm using it more often for fully vibe coded apps because LLMs are very good at it. Frameworks and abstractions are for humans in the end of the day, not robots, and often they get in the way of Vibecoding instead of being helpful.</p>

            <p><img src="https://dwyer.co.za/static/img/levels-simple.png" alt="Levels.io tweet about simple tech stacks"></p><p><a href="https://x.com/levelsio/status/1945125163793609032" target="_blank">@levelsio on keeping things simple</a></p>
        </div>

    <div>
            <a href="#autonomous-startup" id="autonomous-startup">
                <h2><span>#</span>Building an<br>Autonomous Startup</h2>
            </a>
            <p>The thing about Claude Code is that it isn't really a magic model. It's still using Sonnet or Opus under the hood, which are great, but they're not going to do the things that Claude Code can do. Claude Code's magic is like a magician's trick—it looks incredible, but it's surprisingly simple once you see how it's done.</p>
            <p>I've always told people that coding is just conditional logic and looping (which is just conditional logic). So if you want to be a programmer, learn what an if statement is and build stuff.</p>
            <p>It's an exaggeration but it's also kind of true. And Claude Code demonstrates this well. What makes it work much better than other tools I've tried seems to be a clever but simple combination of looping and conditionals, repeated calls to an LLM with context-specific instructions. This lets it run in a useful loop with limited human input between prompts.</p>
            <a href="#root-vps" id="root-vps">
                <h2><span>#</span>Giving a root VPS to a robot and saying 'go fetch'</h2>
            </a>
            <p>The first thing I thought of doing was extending that loop—maybe infinitely? How far could Claude Code go if it was given a few resources, like a root VPS, and some minimal instructions to never terminate and to just go forever?</p>
            <p><img src="https://dwyer.co.za/static/img/micromonitor.png" alt="Micromonitor startup"></p><p>Spoilers: this is what it built. You can visit the startup it built at <a href="https://claude.dwyer.co.za/" target="_blank">claude.dwyer.co.za</a> or see the GitHub project at <a href="https://github.com/sixhobbits/claude-experiments" target="_blank">github.com/sixhobbits/claude-experiments</a>.</p>
            <p>I fired up a cheap VPS on Hetzner, installed and authenticated Claude Code and messed around for a while trying to get it to write its own prompt about building an autonomous startup and its own looping logic to keep running forever without my input.</p>
            <p>I had some issues getting it to understand that it wasn't meant to terminate, so I instead told it to write a basic bash script that calls claude with the <code>-p</code> flag and "please continue" whenever it detects its not running.</p>
            <p>Here's the script:</p>
            <p><img src="https://dwyer.co.za/static/img/monitor-claude.png" alt="Claude monitoring"></p><div>
                <p><strong>Aside:</strong> I hit a small snag where Anthropic decides that running Claude as root with --dangerously-skip-permissions / yolo-mode is not allowed. You can get past this dumb nanny-state stuff by running:</p>
                <p><code>export IS_SANDBOX=1 &amp;&amp; claude --dangerously-skip-permissions</code></p><p><em>Not financial advice</em></p>
            </div>
            <p>It wrote its own prompt (<a href="https://github.com/sixhobbits/claude-experiments/blob/main/CLAUDE.md" target="_blank">link</a>) (I can't remember the exact prompt I gave it to write this file, but it was a lot shorter and just outlined the basic goals of building an autonomous startup), <a href="https://github.com/sixhobbits/claude-experiments/blob/main/IDEAS.md" target="_blank">evaluated a bunch of startup ideas</a>, rated them, and got to work.</p>
            <p>I watched it code for a while by looking at the new commits coming through to GitHub. I realised I still needed a way to steer it a bit as it was coding without giving me any way to run the app. I added the idea of a HUMAN_INPUT file which it needs to check on each loop, and told it to make sure the app was available and working before continuing with more feature development.</p>
            <p>The idea it came up with (server monitoring) doesn't make any sense at all and it never realised it. It's a web app, so the only server it can monitor is the one it's running on, but from the copy it seems to think it's a SaaS tool you can sign up to and monitor your own servers. You can't.</p>
            <p>BUT this is still seriously impressive stuff. It configured a fully working full stack web application, including Nginx, certificates, etc etc. It's doing real (if misguided) development work, with nearly no input from me at all.</p>
            <div>
                <p><strong>Aside:</strong> Most people I know would criticize this in the same way that AI has always been criticized. "It's not real bro, it's just pattern matching. It's seen stuff like that before. It's not even working properly. An intern could do that with a bit of time."</p>
                <p>The thing about these criticisms is I've been hearing them since I got into character-based neural networks in 2015. The criticisms never change, it's just the line that moves.</p>
                <p><strong>AI (noun)</strong> – something that can do whatever humans can do, but AI can't do
                </p>
                <p>Or</p>
                <p><strong>AI (noun)</strong> – something that doesn't possess abstract human qualities like 'consciousness', 'creativity', or 'a soul' – anything about humans that we can't make any falsifiable claims about.
                </p>
                <p>Whatever, I don't want to get into the debate too much here, but a) I am impressed. b) I would never have predicted an artificial system that could do this 10 years ago or even 6 months ago, and c) anyone else who claims otherwise is likely lying or has ulterior motives. Have a nice day.</p>
            </div>
            <a href="#hitting-snag" id="hitting-snag">
                <h2><span>#</span>Hitting a Snag: the model builders are also the police now</h2>
            </a>
            <p>Most of the time I could interact with my startup builder just by:</p>
            <ul>
                <li>Seeing the changes it made to the production website</li>
                <li>Seeing the outputs it added to GitHub in the various note files and what human help it asked for</li>
                <li>Adding stuff to HUMAN_INPUT.md</li>
            </ul>
            <p>I never needed to SSH into the VPS until it stopped working. After 6 hours of no commits I had to login to check what was happening:</p>
            <pre>[Fri 25 Jul 2025 02:29:41 AM UTC] Starting Claude process...
API Error: Claude Code is unable to respond to this request,
which appears to violate our Usage Policy
(https://www.anthropic.com/legal/aup). Please double press esc
to edit your last message or start a new session for Claude Code
to assist with a different task.
[Fri 25 Jul 2025 02:29:47 AM UTC] Claude process exited with
status: 1
Waiting 3 hours before restart..</pre>
            <p>Uh oh. We're getting blocked again and I've heard Anthropic has a reputation for shutting down even paid accounts with very few or no warnings.</p>
            <p>I read the User policy and saw that my recent inputs telling it to go ahead and market the startup to get users had probably tripped some big brother switch. The user policy (which obviously I had also read before when I signed up. I always read all small print before using software and you should too. But somehow I had forgotten this bit) states that automatically published content needs a human-in-the-loop and Claude was trying to promote the startup on Hackernews without my sign off. (I'm not sure if it would have the motivation or capability to actually go create an HN account and start posting, but it wasn't willing to try.)</p>
            <p><img src="https://dwyer.co.za/static/img/aup-human.png" alt="Anthropic usage policy"></p><p>So I tweaked the prompt a bit to say that it must follow those regulations, and it needs to ask me to approve and post stuff instead of trying to do it itself.</p>

            <p>Then I posted its stuff to <a href="https://news.ycombinator.com/item?id=44689210" target="_blank">Hacker News</a> and Reddit. Luckily I didn't get banned by either for spamming but I did get ignored by both.</p>

            <p>I watched the autonomous startup builder a bit more. It started talking a lot about user acquisition and conversion metrics, which I think were mainly hallucinated though it was taking some stuff from the nginx logs and the database.</p>

            <p>It got lost trying to monetize through a free trial and social proof stuff, which was directionally correct even if completely non-sensical in context and then decided to turn it off so I could save my (still limited, even under the max plan) usage for some more useful stuff.</p>
            <p>The project has 100 commits, so if you want to see exactly what it did, you can take a look at <a href="https://github.com/sixhobbits/claude-experiments/commits/main/" target="_blank">each of those</a>.</p>
            <p>(More in a later section, but it's also my text editor. Look at me writing this article in Claude Code.)</p>
            <p><img src="https://dwyer.co.za/static/img/editor.png" alt="Writing in Claude Code">
        </p></div>

    <div>
            <a href="#production-migration" id="production-migration">
                <h2><span>#</span>Migrating a Real<br>Production Project</h2>
            </a>
            <p>The first opportunity I had to try Claude Code on something where the stakes were a bit higher was when I got a DM from my friend <a href="http://n1c.dev/" target="_blank">Nic</a> on Slack.</p>
            <blockquote>
                "You have any luck with a place to host Sboj?"
            </blockquote>
            <p>I'd recently taken over the ZATech.co.za Slack community from Nic. A related project was Sboj - a reverse job board (squint at the name a bit) that was integrated into the Slack community for recruitment.</p>
            <p><a href="https://zatech.co.za/" target="_blank"><img src="https://dwyer.co.za/static/img/zatech.png" alt="ZATech Slack community"></a>
                <a href="https://sboj.dev/" target="_blank"><img src="https://dwyer.co.za/static/img/sboj.png" alt="Sboj reverse job board"></a>
            </p>
            <p><a href="https://zatech.co.za/" target="_blank">ZATech</a> and <a href="https://sboj.dev/" target="_blank">Sboj</a>, two projects I'd taken over and was battling to find the time to give them the attention they deserved.</p>
            <p>It's a Laravel/PHP app with MySQL and a bunch of other helper stuff that I had little-to-no familiarity with (my choice of poison is usually Python and Postgres), and it was running on an expensive hosting service that was overkill for the amount of traffic and users.</p>
            <p>I wanted to migrate it to my standard set up of a cheap hetzner VPS with nginx and lets encrypt, but Nic had been the founder and solo dev of this project so it didn't have a detailed README of how someone else could get started with it, and I didn't have the time to go spelunking into this code base and figure out all the dependencies and set up steps.</p>
            <p>Claude Code? Yes please.</p>
            <p>Because this isn't an experiment anymore we need to be a bit more careful. A safe step was to clone the code base locally and ask Claude to generate a README file of dependencies and set up instructions.</p>
            <p><img src="https://dwyer.co.za/static/img/readme.png" alt="Generated README"></p><p>It was great at analysing the code base and telling me about the dependencies that I need to check I have access to.</p>
            <p>It listed things I expected (like some worker queue stuff) and stuff I didn't (like Cloudflare Turnstyle that I'd never even heard of).</p>
            <p>I spot checked the dependencies it mentioned and the rest of the README. It seemed accurate enough, so I decided Claude Code had earned the right to try actually set up and run this project. Once again, my starting point was a brand new VPS.</p>
            <p>I manually installed and authorized Claude, cloned the repo, and got a database dump file. Then I fired up Claude and told it to get started.</p>
            <p><code>lfg</code> I said.</p>
            <p>Command not found. Oh yeah, VPS, no shortcuts. <code>export IS_SANDBOX=1 &amp;&amp; claude --dangerously-skip-permissions</code> it is.</p>
            <p>It set up everything I needed, and got the app running at a temporary domain. In the meantime I had to do some old-fashioned non-AI work in the background getting access to the various accounts and switching 2FA to mine.</p>
            <p>It had a few issues restoring the database and I was glad I was watching more closely now as it tried to manually create new SQL dump files that were only excerpts of the actual dump I'd given it to get around not having the correct permissions. After telling it to rather just give itself super admin permissions on the SQL database and restoring the dump from there, it was fine.</p>

            <p><strong>Aside:</strong> It <em>did</em> drop the soon-to-be production database once when I really wasn't expecting it to and it was not the appropriate thing to do based on what it was trying to do. Remember before when I said you needed faith? That also means expecting stuff like this to happen and forgiving, forgetting and moving on instead of trying to hype up the internet and the media about <a href="https://www.reddit.com/r/OpenAI/comments/1m4lqvh/replit_ai_went_rogue_deleted_a_companys_entire/" target="_blank">'AI GOING ROGUE'</a>.</p>
            <p>I haven't done this migration manually so I have no idea how much time I saved, but I'd guess at least 16-32 hours of learning enough about a new stack to get everything running and have confidence that it was doing what I thought it was doing.</p>
            <p>I certainly saved a lot of time in leaning on Claude Code to find relevant logs, debug Turnstyle errors, turn off Turnstyle temporarily while we figured out how to migrate a Cloudflare account, and starting up the Laravel worker processes to do the background analytics stuff. It also migrated the email sending to Resend and then when I hit the 100 emails/day free limit, it was another easy migration to Brevo which offers 300 emails/day for free. (If you're hiring technical people and are able to hire from South Africa, check out Sboj.dev, we've got some great talent and hopefully a bunch of upgrades and QOL improvements coming to the platform soon).</p>
        </div>

    <div>
            <a href="#build-things" id="build-things">
                <h2><span>#</span>You can just build things</h2>
            </a>
            <p>These are only a few things I've built with Claude Code since using it. Most of them are experimental and I've read some reports of it not doing as well on massive real-world code bases, but from what I've seen I'd be surprised it wasn't still useful in those contexts given enough guidance. I'm still surprised by how much better it is as a tool when given a lot of context and input. Here are a few other toy projects I've had it spit out - all things that I've wanted to build for months or years but never found the time. Now you can do stuff like this in a few minutes or hours instead of days or weeks.</p>

            <h3>Building a HackerNews comment ranker plugin</h3>
            <p>I've often been annoyed by comments on HackerNews that are not at all about the article they're commenting on. "Bitcoin adopts a new FlibbityGippity Protocol and can now handle 2.3 transactions per day" and someone will comment that all Crypto projects are scams or something. Note that I don't care about the quality of the comment, or whether or not I agree with it, but I'd wanted a visual way to skip over the 'noise' comments that aren't actually about the article at all.</p>

            <p>I tried to build this before but got distracted by more important stuff, so I figured I'd start over with Claude Code.</p>

            <p><img src="https://dwyer.co.za/static/img/hn-plugin-demo.png" alt="HackerNews comment ranking plugin demo"></p><p>It took a few tries before it could actually display the badges correctly within HN's (pretty simple) HTML structure, but after a few rounds of 'no try again' or 'add more debugging so I can paste the errors to you', it created almost exactly what I had envisioned.</p>

            <p>I was surprised by how good it looked (much better than my normal hacky frontends), and the details it had added unprompted (like the really nice settings page, even with a nod to the HN orange theme).</p>

            <p><img src="https://dwyer.co.za/static/img/hn-plugin-settings.png" alt="HackerNews plugin settings page"></p><p>The actual ranking (which I'm using OpenAI for, not Anthropic) is not that good. It could probably be improved with a better prompt and some more examples of what I think is a '1' comment or a '5' comment, but it works and looks at least directionally accurate so far.</p>

            <h3>Building Poster Maker - A Minimal Canva Replacement</h3>
            <p>AI is getting good at graphic design, and I knew people who were using it to generate basic posters. They liked that the AI could choose good background images, and generally make things look nice with well-sized fonts etc, but they were frustrated that the AI was still only 80% good at generating images of text, and often had spelling errors or other artifacts.</p>
            <p>I was going to tell them to use Canva or Slides.new or another alternative. I tried them out so I could do a quick tutorial on how to use them and realised they were all kinda bad. Either enshittified to death, or lacking the basic AI features, or too complicated for non-technical people to use.</p>
            <p>LFG!</p>
            <p>This was the project that felt a bit more like engineering and less like vibe coding than the others. I knew what I wanted: a really simple interface to combine images and text and get an A4 PDF out. I'd tried to build something like this before and looked at different PDF creation libraries, HTML→PDF flows, and seen that it's not the easiest problem to solve.</p>
            <p>Last time I solved a similar problem (in 2018) <a href="https://www.codementor.io/@garethdwyer/create-pdf-files-from-templates-with-python-and-google-scripts-p63kal1vb" target="_blank">I ended up hacking in Google Docs</a> to create A4 PDFs, but that was more of a templating problem and Google Docs isn't great for layout stuff.</p>
            <p>So I built <a href="https://posters.dwyer.co.za/" target="_blank">posters.dwyer.co.za</a> - it lets you generate the background image with AI (I used Claude Code to build everything, but I told it to use GPT for image generation as that's what I'd used before and I think it's better? I don't even know if Anthropic has image generation APIs to be honest and it seemed easier to just use what I knew).</p>
            <p><img src="https://dwyer.co.za/static/img/poster-maker.png" alt="Poster Maker interface"></p><p><strong>Aside:</strong> Another small snag, it seems like OpenAI blocks Anthropic crawlers so Claude couldn't go read the OpenAI API docs and figure out how to image gen. I had to save the file locally and tell it to reference that.</p>
            <p>This project took a few hours of back and forth. I was really impressed with some of Claude's UI knowledge (it one shotted the font selection when I told it what I wanted) and also saw the limitations in other aspects (it kept overlaying elements in a very un-userfriendly way, sidebar would hide and show and move everything around, it clearly has no idea what it's like to be a human and use something like this).</p>
            <p>But after telling it exactly where to put elements and what they should do, I got more or less exactly what I had envisioned. I was surprised at how well the PDF export worked after the 6th or 7th attempt of blank files or cut off files - now it seems really great at giving me a PDF that is exactly like the preview version which for anyone not in tech seems like a really basic piece of functionality and anyone who has actually tried to do it before knows is like the XKCD bird problem:</p>
            <div>
                <p><a href="https://xkcd.com/1425/">
                    <img src="https://imgs.xkcd.com/comics/tasks.png" alt="XKCD: Tasks">
                </a></p><p>XKCD #1425: Why seemingly simple tasks can be surprisingly hard for computers</p>
            </div>

            <h3>Doing admin with Claude Code</h3>
            <p>This isn't really a project I built, but I'm using Claude Code more and more to do non-coding related tasks. I needed to upload bank statements for my accountant, but my (shitty) South African banks don't name the files well. I can download each month from the web app, but it calls them all "Unknown (5)" or whatever with no extension so it's a pain to go and name them correctly.</p>

            <p>I asked Claude to rename all the files and I could go do something else while it churned away, reading the files and figuring out the correct names.</p>

            <p>I then took it a step further and told it to merge them all into a single CSV file (which also involved extracting random header tabs off the badly formatted XLSX files that my bank provides), and classifying all expenses into broad and specific categories. I told it a few things like the roles of specific people in the team and I think it one-shotted that too. I'm not going to fire my bookkeepers yet, but if I were a bookkeeper I'd definitely make sure to be upskilling with AI tooling right now.</p>

            <p><img src="https://dwyer.co.za/static/img/bank-statements.png" alt="Bank statements renaming tool"></p><h4>Using Claude Code as my Text Editor</h4>

            <p>I'm a die-hard vanilla vim user for all writing, coding, configuration and anything else that fits. I've tried nearly every IDE and text editor out there, and I was certainly happy to have a real IDE when I was pushing production Java for AWS, but vim is what I've always come back to.</p>

            <p>Switching to Claude Code has opened a lot of new design possibilities. Before (did I mention I suck at front end coding), I was restricted to whatever output was produced by static site generators or pandoc templates. Now I can just tell Claude to write an article (like the one you're currently reading) and give it some pointers regarding how I want it to look, and it can generate any custom HTML and CSS and JavaScript I want on the fly.</p>

            <p><img src="https://dwyer.co.za/static/img/this-article.png" alt="This article being written"></p><p>I wrote this entire article in the Claude Code interactive window. The TUI flash (which I've read is a problem with the underlying library that's hard to fix) is really annoying, but it's a really nice writing flow to type stream of consciousness stuff into an editor, mixing text I want in the article, and instructions to Claude, and having it fix up the typos, do the formatting, and build the UX on the fly.</p>

            <p>Nearly every word, choice of phrase, and the overall structure is still manually written by me, a human. I'm still on the fence about whether I'm just stuck in the old way by preferring to hand-craft my words, or if models are generally not good at writing.</p>

            <p>When I read answers to questions I've asked LLMs, or the long research-style reports they create, the writing style is pretty good and I've probably read more LLM-generated words than human-generated words in the last few months.</p>

            <p>But whenever I try to get them to produce the output I want to produce, they fail hard unless I spend as much effort on the prompt as I would have on writing the output myself.</p>

            <p>Simon Willison calls them <a href="https://simonwillison.net/2023/Apr/2/calculator-for-words/" target="_blank">'word calculators'</a> and this is still mainly how I think of them. Great at moving content around (if you want a summary of this now very long article, an LLM will probably do a great job) but pretty useless at generating new stuff.</p>

            <p>Maybe us writers will be around for a while still - let's see, and lfg.</p>
        </div>

    

    


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[I tried every todo app and ended up with a .txt file (1013 pts)]]></title>
            <link>https://www.al3rez.com/todo-txt-journey</link>
            <guid>44864134</guid>
            <pubDate>Mon, 11 Aug 2025 13:59:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.al3rez.com/todo-txt-journey">https://www.al3rez.com/todo-txt-journey</a>, See on <a href="https://news.ycombinator.com/item?id=44864134">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <p>I’ve tried them all. Notion, Todoist, Things 3, OmniFocus, Asana, Trello, Any.do, TickTick. I even built my own todo app once (spoiler: I never finished it). After years of productivity app hopping, I’m back to where I started: a plain text file called <code>todo.txt</code>.</p>
<p>I’m not alone in this. Jeff Huang wrote about his <a href="https://jeffhuang.com/productivity_text_file/">“never-ending .txt file”</a> that he’s used for over 14 years. Reading his post validated everything I’d discovered on my own.</p>
<h2 id="the-endless-search">The Endless Search</h2>
<p>My productivity journey started like everyone else’s. I’d devour blog posts about getting things done or spot a cool app and think “this is it, this will finally organize me.” I’d burn hours building the perfect system, creating categories, tags, projects, labels. Setting it up felt like work.</p>
<p>Then reality hits. The app wants $9.99/month. The sync breaks. The company sells out and dies. Or worse - I waste more time managing the system than working.</p>
<h2 id="what-actually-happened-with-each-app">What Actually Happened With Each App</h2>
<p><strong>Notion</strong>: Built an entire life operating system. Spent three weeks perfecting it. Used it for two days. Now it’s a graveyard of abandoned databases.</p>
<p><strong>Todoist</strong>: Great until I realized I was gaming the points system instead of doing actual work. Turns out completing “drink water” 8 times a day doesn’t make you productive.</p>
<p><strong>Things 3</strong>: Beautiful. Expensive. Tricked me into thinking I had my life together. But I kept forgetting to check it.</p>
<p><strong>Trello</strong>: Turned my todo list into a board with columns. Realized I’m not a startup. I’m just one person trying to remember to buy milk.</p>
<p><strong>OmniFocus</strong>: So powerful I needed a manual to use it. Spent more time learning OmniFocus than finishing my actual projects.</p>
<h2 id="the-breaking-point">The Breaking Point</h2>
<p>One day my phone died and I couldn’t check my tasks. I grabbed a sticky note and scribbled:</p>
<pre tabindex="0" data-language="plaintext"><code><span><span>- finish report</span></span>
<span><span>- call mom</span></span>
<span><span>- gym</span></span>
<span><span>- buy groceries</span></span></code></pre>
<p>And you know what? I crushed all four things. No tags, no priorities, no due dates. Just four things written down.</p>
<h2 id="my-current-system-one-text-file">My Current System: One Text File</h2>
<p>Now I run everything through a single text file. That’s it. Here’s what it looks like:</p>
<pre tabindex="0" data-language="plaintext"><code><span><span>2025-08-11</span></span>
<span><span>10am review pull requests</span></span>
<span><span>- check the auth changes specifically</span></span>
<span><span>write blog post about todo apps</span></span>
<span><span>2pm meeting with team</span></span>
<span><span>- discuss sprint planning</span></span>
<span><span>- bring up the deployment issue</span></span>
<span><span>3:30pm call with client</span></span>
<span><span>figure out dinner plans</span></span>
<span><span>read that article Sarah sent</span></span>
<span><span>fix that annoying bug in the navbar</span></span></code></pre>
<p>Every night, I check tomorrow’s calendar. I dump everything into the next day’s section. Scheduled items get times in front. Sub-bullets hold notes or reminders. Finished tasks? I delete them or add what happened. Still on the list? Not done yet. That’s it.</p>
<p>This transforms into a living document throughout the day. I scribble notes right next to tasks as I work:</p>
<pre tabindex="0" data-language="plaintext"><code><span><span>2025-08-11</span></span>
<span><span>10am review pull requests</span></span>
<span><span>- check the auth changes specifically</span></span>
<span><span>- merged 3 PRs, waiting on Bob for the 4th</span></span>
<span><span>write blog post about todo apps - drafted, need to proofread</span></span>
<span><span>2pm meeting with team</span></span>
<span><span>- discuss sprint planning</span></span>
<span><span>- bring up the deployment issue</span></span>
<span><span>- decided to push release to Thursday</span></span>
<span><span>3:30pm call with client - rescheduled to tomorrow</span></span>
<span><span>figure out dinner plans - ordered pizza</span></span>
<span><span>read that article Sarah sent</span></span>
<span><span>fix that annoying bug in the navbar - was a CSS specificity issue</span></span></code></pre>
<p>Every few days I start fresh with a new date. The old sections stay. They transform into my journal. I search back to find when I did something, who I met, what we decided. Todo list and work log in one file.</p>
<h2 id="why-this-actually-works">Why This Actually Works</h2>
<p><strong>It’s always there</strong>: The file sits on my desktop. It stares at me every time I open my laptop. No app to launch, no subscription to manage.</p>
<p><strong>It’s instant</strong>: My keyboard shortcut launches my todo.txt in a floating window. Doesn’t matter what I’m doing, my todos are one key press away. No switching between apps, no waiting for things to load, just boom - there’s my list.</p>
<p><strong>AI helps but isn’t needed</strong>: With Cursor/Claude Code or Neovim + Supermaven, I can write my entire day’s schedule in 5 minutes. The AI completes my sentences, predicts meeting times, memorizes how I write tasks. But if all these AI companies disappear tomorrow, my system still works. It’s just a text file. The AI makes it faster, not required.</p>
<p><strong>It’s fast</strong>: Adding a task burns 2 seconds. No clicking through menus or selecting projects.</p>
<p><strong>It’s searchable</strong>: Cmd+F and I find anything instantly. “When did I last call the dentist?” Search for “dentist”. Done.</p>
<p><strong>It’s mine</strong>: No company can kill it. No updates can destroy it. No algorithm decides what I should see.</p>
<p><strong>It’s honest</strong>: I can’t hide behind fancy features. Either I did the thing or I didn’t.</p>
<p><strong>It lasts forever</strong>: A text file is the most basic thing a computer can read. It’ll work after every software update, every company shutdown, every app that stops working. Text files from 20 years ago still open perfectly. Try that with your Notion workspace.</p>
<h2 id="the-secret-sauce">The Secret Sauce</h2>
<p>Productivity isn’t about finding the perfect app. It’s about:</p>
<ol>
<li>Dumping things onto paper so your brain can forget them</li>
<li>Checking the list regularly</li>
<li>Executing the tasks</li>
</ol>
<p>That’s it. Everything else is procrastination dressed up as organization.</p>
<h2 id="what-about-insert-feature-here">What About [Insert Feature Here]?</h2>
<p>“But what about reminders?” - I use my calendar for time-specific stuff.</p>
<p>“But what about projects?” - I add a note like <code>[PROJECT]</code> if I need to.</p>
<p>“But what about collaboration?” - I use work tools for work. This is for my life.</p>
<p>“But what about mobile?” - The file syncs through Dropbox. Any text editor works.</p>
<h2 id="the-plot-twist">The Plot Twist</h2>
<p>I’m more productive now than when I had all those fancy apps. Turns out the best productivity system is the one you actually use. And I use this one because there’s nothing to figure out. It’s just a list.</p>
<h2 id="try-it-yourself">Try It Yourself</h2>
<p>Ready to ditch the productivity app hamster wheel? Do this:</p>
<ol>
<li>Create a file called <code>todo.txt</code></li>
<li>Write down what you need to do tomorrow</li>
<li>Do those things</li>
<li>Add notes as you work</li>
<li>Start a new date section when needed</li>
</ol>
<p>Give it a week. Simple beats sophisticated every time.</p>
<p>And if it doesn’t work? Well, there’s always another shiny new app launching next week.</p> </div></div>]]></description>
        </item>
    </channel>
</rss>