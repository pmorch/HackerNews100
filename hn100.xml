<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 15 Apr 2024 18:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Embezzlers Are Nice People (195 pts)]]></title>
            <link>https://www.stimmel-law.com/en/articles/story-1-embezzlers-are-nice-people</link>
            <guid>40042616</guid>
            <pubDate>Mon, 15 Apr 2024 16:24:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.stimmel-law.com/en/articles/story-1-embezzlers-are-nice-people">https://www.stimmel-law.com/en/articles/story-1-embezzlers-are-nice-people</a>, See on <a href="https://news.ycombinator.com/item?id=40042616">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>We spend a lot of time suing embezzlers. All over the world. Week in and week out. Big embezzlers, small embezzlers, smart embezzlers and very smart embezzlers…</p>

<p>That’s right, no dumb embezzlers because almost all the embezzlers we encounter are smart. Some are very smart. Some are brilliant.</p>

<p>And, almost always, most would have made more money and had a more profitable career if they had simply stopped stealing and starting working honestly.</p>

<p>I mean, figure it out. An embezzler has to not only do his or her job well so that no one is looking over his or her shoulder but has to do their job so well that they can steal for months or years and it won’t show up. They have to be charismatic and knowledgeable enough so that no one bothers to double check their work. They have to be very steady in their work so that it cannot be reviewed because they are on vacation or ill…in short, they have to be great employees. And either so boring that all ignore their existence or so well liked that no one would question their character. Most choose the latter mode since it also allows access to more accounts and financial secrets.</p>

<p>And when embezzlers run entire companies, they have to create a bottom line successful enough for long enough that investors and business colleagues respect and trust them after review of the books…at least for a time.</p>

<p>Took me a long time to figure that out…for the first few years of practice, I found it incredible that such brilliant and attractive people would be dumb enough to risk it all for the relatively paltry gains that embezzlement can earn. I kept looking to see the underlying motivations since, I figured, I could better advise clients what to look out for if I could figure out precisely what makes an embezzler embezzle.</p>

<p>Now I know.</p>

<p>They embezzle because they like it. They like the rush. They need money now, not in five years. They like being smarter than the drudges they figure are around them. And they embezzle, I am convinced, because they want to get caught sooner or later and that pattern is usually repeated over and over.</p>

<p>Take one of my favorite embezzlers, a guy who once owned the famous Flamingo Hotel in California until his world crumbled around him during a case our client brought against him in the late 1970’s. I had represented a minority shareholder in the venture and after perhaps a year of very aggressive litigation, Eddie Chan (not his real name) called it quits, transferred the shell of a company that was left to my client along with most of the rest of his assets, settled for a suspended sentence with the district attorney (to my fury) and then called me to invite me to lunch.</p>

<p>I had only been practicing for five years at the time and was unused to the foibles of opposing parties. I was nonplussed and immediately called his counsel to ask if that would be OK…as required by the Code of Ethics.</p>

<p>“Sure,” the relatively famous criminal defense attorney chirped, “and tell him to pay my bill while you’re at it.”</p>

<p>So there I was two days later with Eddie at his favorite Italian restaurant, Orsi, watching him fiddle with his fettuccini, his hands nervously twitching every so often, but immaculately dressed in a conservative business suit, expensive cufflinks and watch, the picture of a successful and conservative business man.</p>

<p>He had greeted me in a rather distracted manner, looking about the room, but friendly enough. Since I had been instrumental in destroying his economic well-being, and since he knew I had been demanding his incarceration for his embezzlement with the district attorney, I wondered why we were having this lunch. Cautious, I figured I’d let him tell me. And, in turn, I’d try to figure out what made him tick.</p>

<p>The waiters all knew him. He was a regular and his waistline showed it. Friendly but not effusive, soft-spoken and understated, he appeared now as he had been throughout the trial…a typical intelligent businessman slightly shocked that people were upset with him, but just maybe a hint of irony somehow mixed into his replies. On the stand he had been asked what he had done with the money.</p>

<p>“Spent it. I have none left. If I did, perhaps I would pay it back.”</p>

<p>“On what did you spend it? Are those assets in the United States at this time?"</p>

<p>He had stared at me for a moment, knowing I was looking for assets to attach, then suddenly smiled sadly. “I spent it on sweet, stupid things that make life an appropriate journey. Little things with some elegance attached. Things only worth buying because they have little value in the long run. Like life, itself.”</p>

<p>There was some laughter in the court room but my client had begun to mutter darkly at my side, furious that these “little things” had bankrupted the hotel. As I sat there in that elegant restaurant, I decided that he had, for once, been telling the truth.</p>

<p>“Is this lunch a little elegant thing to make life bearable, Eddie?” I now asked.</p>

<p>I thought he would smile but he looked at me steadily for the first time that afternoon. After a moment’s silence, he said softly, “Your courts are not used to hearing an honest statement, are they?”</p>

<p>“What's that? You’re telling me that you spent it all, nothing is left?”</p>

<p>“You are still cross-examining me. You are still looking for assets. I am speaking of honest answers. Of course I spent it. Why else take it? Money taken like that should not be spent on necessities of life but on luxuries of life. Necessities of life are the proper destination of grim jobs with little men working at little desks.”</p>

<p>He waved to the water to refill his wine glass. I was suddenly reminded of the movie Casablanca in the coffee house with Sidney Greenstreet making a deal. I was also angry. “Those little people were your victims, Eddie. They work years and you take what they make and bankrupt businesses left and right. For luxuries.”</p>

<p>“Of course I do. You are stating the obvious. What you are not stating is why it matters so much to arouse such passion. I am the one losing all. Not you and not your client. Do I appear upset?”</p>

<p>He didn’t. He appeared bemused, not upset. He leaned forward. “Look, that is the past and I want to move forward. I want this to be a constructive meeting.”</p>

<p>“Meeting? Constructive meeting?”</p>

<p>“Yes, I have an opportunity. You represent many clients who might be interested. It should be very profitable.”</p>

<p>And for the next ten minutes he explained in some detail a new business venture he was considering involving Hong Kong property. Finally I could take it no longer.</p>

<p>“Look, Eddie,” I interrupted, “I can’t believe this. I’m the guy who wanted you in jail. Remember? I know you and your past. You seem to think I’d tell my clients to invest in you. Are you nuts?”</p>

<p>He was shocked. “Of course you would. You already know who I am and what I do. You don’t have to worry about checking out my background. You can build all the safeguards you need. This isn’t about me. It’s about the deal. If it’s a good deal, you should jump at it. Better the thief you know than the thief you don’t know. This is a perfect opportunity for you. Who else would think of investing with me?” And off he went again with his business plan.</p>

<p>I pushed my cannelloni around while he expounded on the future of Hong Kong and when he finally wound down, asked, “Does it not occur to you that people want to do business with honest people they can trust? Not dishonest people they have to watch?”</p>

<p>He became exasperated. “Didn’t you tell your client you have to create checks and balances in the company and watch each and every employee?”</p>

<p>“Yes, but…”</p>

<p>“And don’t you insist on systems being created in every company so that no one can get away with cooking the books or taking from the company no matter who is in charge?”</p>

<p>“Yes…”</p>

<p>“Then what difference does it make if someone you don’t trust is involved? You don’t trust anyone anyway. If your systems work, they work. I am not any more of a danger to you than any other person. I don’t see the problem.”</p>

<p>And he didn’t see a problem. Either with his plan or his actions--except that he was caught. Oh, perhaps a little guilt now and then…but nothing that good wine could not assuage. Business was business, and his was stealing if he could get away with it.</p>

<p>There was a certain splendor in his lack of hypocrisy, a certain attraction in his blunt appraisal of his own role.</p>

<p>But I would not recommend business with him to anyone.</p>

<p>Since what Eddie didn’t understand is that people are not only in business for the money. Oh, it’s important, but it’s never just the money in my experience. It’s a dozen other things, the joy of creating something from nothing, the excitement of success, the comradeship one gets from working in a team that is good and effective, etc, etc.</p>

<p>Business may be competitive, but there are rules and it is not war.</p>

<p>To Eddie, business was not only war, but war with the only rules being do not get caught if you can and make all the money you can. And trust no one.</p>

<p>I had another client about the same time, an elderly business man disliked by almost all that knew him, a truly unpleasant individual who never praised anyone, made more money than anyone I knew and could be cast as Scrooge except for his enjoyment of fishing which was all that he truly cared about other than money. But honest…he often would give more to the other side in the bargain than they asked because it was better business tactics to have a vendor who was making good money with you than not. During a break in a negotiation I told him about Eddie, laughing.</p>

<p>He didn’t think it was funny.</p>

<p>“Eddie’s just more honest than a lot of the business men I know. Get the money any way you can, any time you can, short-term thinking, everyone is a crook anyway, so what’s the big deal? I know a lot of people like that. They think they’re smart. They’re not. They grab a nickel here and lose a dollar in the long run. Like him…but he’s just crude and a little stupid.”</p>

<p>“Crude?”</p>

<p>“The smarter ones do it legally.” He grinned and the negotiation began again.</p>

<p>Eddie died about three years later. I read in the papers that his funeral was well-attended, even by some of his newly created victims. Perhaps they were gloating. Or perhaps they liked him.</p>

<p>Because, all in all, he was a pretty nice guy. Being a nice guy is how he made his living, after all. Who would entrust their&nbsp;money to a grouch?</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Building a GPS receiver (123 pts)]]></title>
            <link>https://axleos.com/building-a-gps-receiver-part-1-hearing-whispers/</link>
            <guid>40041198</guid>
            <pubDate>Mon, 15 Apr 2024 14:42:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://axleos.com/building-a-gps-receiver-part-1-hearing-whispers/">https://axleos.com/building-a-gps-receiver-part-1-hearing-whispers/</a>, See on <a href="https://news.ycombinator.com/item?id=40041198">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-blog-post-content-container">
<content>

<h2 id="introduction">Introduction</h2>
<p>Have you ever noticed that your Maps app still works during a flight? It can feel illicit, like someone just forgot to turn off the signal, and that watching yourself crawl along the earth should be done without drawing undue attention.</p>
<p>A few months ago I learned that there were only around 30 GPS satellites serving the entire planet. This piqued my interest, because it reminded me of the 13 root DNS servers from which all resolution flows. Perhaps GPS has a similar design in which the ‘source of truth’ is diluted by several layers of signal repeaters?</p>
<p>I navigated to <a href="https://www.gps.gov/support/user/mapfix/">gps.gov</a>, and was presented with this delightful image. I became even more excited to learn about what these satellites do!</p>
<img src="https://axleos.com/building-a-gps-receiver-part-1-hearing-whispers/images/blue_dot.png">
<p>I decided to try my hand at decoding these GPS signals, guided by the vague end-goal of plucking out my position from peanuts.</p>
<p>I learned that the GPS signals that facilitate our mapping apps are ever-present, around us at any altitude, in any weather conditions, at all times.</p>
<p>This sounds cool in the abstract, but the tangible reality is staggering. These signals are all around me as I write this. They’re all around you as you read it. The world is soaked in these whispers, repeating themselves endlessly for anyone willing to listen.</p>
<p>You can find out exactly where you are, from thin air, <em>anywhere</em> at <em>any time</em>, by learning to speak the language of the electromagnetic waves flowing over your skin. These waves have been a constant and quiet companion for most people’s entire lives<span><sup><i>✱</i></sup></span>.</p>


<p>GPS is perhaps one of the most audacious geo-engineering feats ever undertaken, and its traces can be felt with just an antenna and a motive.</p>
<h2 id="quiet-beacons">Quiet beacons</h2>
<p>All that said, it’s not as though there’s a cacophony of navigation data swarming around you, deafening if you could just hear it. In reality, the GPS signals surrounding you are astoundingly weak. To take an analogy: imagine a normal light bulb, like the one that might be above you now. Pull it twenty thousand kilometers away from the room you’re in, and have it flash, on, off, on, off, a million times a second. Imagine straining your eye to watch the shimmer of the bulb, two Earths away, and listen to what it’s telling you.</p>
<p>Big reveal: <em>this is not hyperbole</em>! The signal pumped out by GPS satellites <em>actually</em> has the same strength as a residential lightbulb <em>at the satellite</em>. By the time the flash gets to you, it’s unfathomably attenuated, and yet it can still be detected, decoded, understood and made useful. It’s really incredible, and hard to believe without wrangling the data yourself.</p>
<p>These quiet lighthouses give rise to one of the interesting characteristics of GPS: there’s no way for anyone to charge for access to it. <em>No one even knows you’re listening</em>. From the satellite’s perspective, GPS is send-and-forget<span><sup><i>✱</i></sup></span>.</p>


<p>Similarly, your GPS location could never be served up to you by a web service. The key idea with server-side computing is that compute might need to be served in one place (such as on a user’s machine), but it’s really no problem if it’s computed in another (such as a data center). GPS, by contrast, is fundamentally incompatible with this optimization: GPS only tells you about the radio waves hitting where <em>you</em> are, and <em>you</em> need to listen to what’s in the field around you. No datacenter can listen on your behalf.</p>
<h2 id="listening-closely">Listening closely</h2>
<p>OK, you’ve got me, I’m pumped! How do we, uh, listen?</p>
<p>I understand that GPS is transmitted over EM waves, but I don’t know much about the analog domain – is this the same thing as radio?</p>
<img src="https://axleos.com/building-a-gps-receiver-part-1-hearing-whispers/images/gps_rf_fed.png">
<p>Great! I know that frequency is important, where does that come in?</p>
<img src="https://axleos.com/building-a-gps-receiver-part-1-hearing-whispers/images/gps_rf_frequency.png">
<p>Cool. I know I’m going to write some software to receive these signals, post-process them, and make a snazzy demo for my pitch deck. I figure this means I’ll need to buy a receiver that can tune to the GPS frequency. After searching around for a <code>tunable RF receiver</code>, I learn that I’m looking for a ‘software defined radio’. This sounds reasonable!</p>
<p>I hastily research SDRs and purchase one just before my flight takes off.</p>
<img src="https://axleos.com/building-a-gps-receiver-part-1-hearing-whispers/images/amazon_order.png">
<p>I set up <a href="https://www.sdrpp.org/">SDR++</a> and start poking around. For a while, I can’t find much of anything, but after speedrunning terms such as <code>bias tee</code><span><sup><i>✱</i></sup></span>, <code>AGC</code><span><sup><i>✱</i></sup></span>, and <code>IQ correction</code><span><sup><i>✱</i></sup></span>, I’m ready to go to town exploring the spectrum.</p>

<div>

<p>A <em>bias tee</em> is a circuit within an SDR that provides DC power to an antenna, traditionally connected to the SDR over <a href="https://en.wikipedia.org/wiki/SMA_connector">SMA</a>. My SDR disables its bias tee by default, so I needed to turn it on manually so that the antenna received power.</p>

</div>

<div>

<p><em>Automatic gain control</em> is a hardware circuit, or software feature, that amplifies weak signals in an effort to improve the signal-to-noise ratio (SNR) of the received data.</p>

</div>

<div><p>SDRs output ‘IQ samples’. <em>I</em> refers to the <em>in-phase</em> part of the signal, and <em>Q</em> refers to the <em>quadrature</em> (or imaginary) part of the signal. I don’t really understand all the ways in which this is super useful, but <a href="http://whiteboard.ping.se/SDR/IQ">my understanding</a> is that this scheme allows you to process the signal in “3D” (time, amplitude, and polarity) instead of just in “2D” (time and amplitude).</p>
<p>Due to the circuitry of an SDR, there’s a large frequency spike at whichever frequency you’ve asked the radio to tune itself to. This can be quite confusing as a beginner, as it looks like there’s a strong signal anywhere you choose to look! Although this spike is an unavoidable artifact of how the SDR functions, there are a few ways to remove it from your collected data. One of these is to tune the radio slightly ’to the side’ of the frequency you’d actually like to measure, so that the center spike isn’t polluting your <em>real</em> signal. Another, which is a bit less fiddly, is to use some software to detect and try to remove this spike at the centered frequency. This feature is called <code>IQ correction</code>, presumably because it works by mucking about with the IQ samples before delivering them to the rest of the stack.</p>
</div>
<h2 id="locking-on">Locking on</h2>
<p>By the time it’s received by terrestrial antennas, the GPS signal is so weak that it has <em>100,000 times less power</em> than the ambient energy and signals just floating around the place. In other words, the GPS signals can sit up to 50db below the <a href="https://en.wikipedia.org/wiki/Noise_floor">thermal noise floor</a><span><sup><i>✱</i></sup></span>.</p>

<div><p>The newer GPS satellites are meant to send signals that reach receivers at around -130dBm. The typical residential thermal noise floor at the C/A bandwidth is about -110dBm.</p>
<p>For comparison, cell signals are around -50dBm: <em>100 million times</em> stronger than the GPS signal!</p>
</div>


<p>Our signal has been entirely swallowed up by random perturbations far stronger than the signal we’re trying to detect. It seems obviously impossible, then, that any data could be recovered.</p>
<p>Incredibly, the GPS signal can be identified and decoded, despite being far below the thermal noise floor. GPS accomplishes this through the use of a clever signal processing technique that allows a signal to be found even when surrounded by noise.</p>
<h2 id="hearing-the-inaudible">Hearing the inaudible</h2>
<p>When we’re trying to listen to the GPS satellite, there’s an information asymmetry: the satellite has data that the receiver doesn’t have, and the receiver wants to hear it. However, the receiver <em>cannot</em> hear such an incredibly weak signal in the face of the (comparatively) much louder cymbals and crashes of the random signals floating around the surface of the Earth.</p>
<p>So, GPS uses a trick here. Although there’s <em>unknown</em> data that the GPS satellite sends, we can also have the satellite send a signal that’s <em>known</em> to both the satellite and the receiver. This extra signal, called the C/A<span><sup><i>✱</i></sup></span> code, the PRN code, or the chipping code, is repeated by the satellites a thousand times a second.</p>


<div><p>C/A stands for <em>coarse acquisition</em>, and it exists in contrast to the P, or <em>precision</em>, code. GPS was initially envisioned for military use, and the C/A code was intended to be a low-resolution stepping stone for military receivers to lock on to the much more precise P code. Nowadays, the C/A code is the basis for most civilian GPS, whereas the P code is still only available for military use.</p>
<p>Interestingly, the only thing stopping civilians from using the P code is the knowledge of the value of its chipping sequence. If the formula to generate the P code was publicly known, there’d be nothing stopping civilian GPS receivers from locking on to it, with the exact same techniques as are used for the C/A code.</p>
<p>Similarly, the only reason the P code is so much more precise than the C/A code is that it operates at a higher chipping rate! As we’ll see later, the exact phase of the code is one of the key observations that allow the receiver to calculate its distance from the satellite, so a code that transmits more frequently inherently gives a higher distance precision.</p>
</div>
<p>Since the receiver knows <em>exactly</em> what to listen for here, the receiver can sum the received signal over and over again and compare the actual signal to the PRN signal the receiver is expecting. The noise, being random, will average down to zero over time, while the PRN signal will keep growing and growing<span><sup><i>✱</i></sup></span>. This trick is referred to as <a href="https://en.wikipedia.org/wiki/Spread_spectrum">spread-spectrum</a>. GPS uses a trick-in-a-trick to make this whole thing work with <em>multiple</em> satellites, which is called <a href="https://en.wikipedia.org/wiki/Code-division_multiple_access#Steps_in_CDMA_modulation">code-division multiple access</a>.</p>

<div>

<p>Think about how absolutely absurd this is. GPS receivers listen to <em>white noise</em> from the floor of your radio, and stack static onto more static over and over again. The GPS satellite signal, emitted in deep space by a tinny little lightbulb, shines like a beacon. It’s beautiful, it’s true magic.</p>

</div>
<p>Now that we have a way for the receiver to hear the otherwise inaudible PRN, the GPS satellites take the PRN code and ‘mix’ the actual data signal they want to transmit into it. While the PRN code operates at a million bits per second, the data signal is transmitted <em>much</em> slower, at 50 bits per second. By keeping the data rate significantly slower than the PRN code, GPS ensures that the PRN code remains a reliable fixture to lock on to for large fractions of a second, while also ensuring that the data stream can be reliably recovered.</p>
<h2 id="generating-the-ca-codes">Generating the C/A codes</h2>
<p>We don’t just have one PRN code, though. There are 30 GPS satellites in the sky, and to achieve our eventual goal of figuring out where we are, we’ll need to know exactly <em>which</em> of the satellites are above us.</p>
<p>Therefore, each GPS satellite has its own unique, stable PRN code.</p>
<p>These codes are described by <code>Table 3-I (Code Phase Assignments)</code> of the <a href="https://www.gps.gov/technical/icwg/IS-GPS-200L.pdf">IS-GPS-200L</a>, the civilian GPS specification.</p>
<img src="https://axleos.com/building-a-gps-receiver-part-1-hearing-whispers/images/prn_assignments.png">
<p>If you search around, you’ll find a lot of resources online telling you how easy it is to generate the PRN codes, and very little by way of actual reproductions of the full PRN codes for you to check against.</p>
<p>These codes are relied upon many millions of times daily, and it makes me wary that I didn’t find them online. I’m leaving them here for posterity. I hope this helps someone!</p>

<h2 id="acquisition">Acquisition</h2>
<p>To investigate the sky for the satellites that are in view, GPS receivers need to generate a copy of each PRN that’s being emitted by each of the 32 satellites, then search for each of these PRNs in the data that the GPS receiver is collecting over its antenna. This phase is called ‘acquisition’, because the goal is to ‘acquire’ a lock on whichever satellites are in view above the user.</p>
<p>Our GPS receiver needs to take a short snapshot of antenna data (a second or so will do), and <em>correlate</em> the received data with each of these replica PRNs. If there’s a strong correlation between our replica and the live data, we know that the satellite associated with that PRN is chirping away above us.</p>
<p>However, the signals that reach us aren’t the ‘ideal’ PRNs that we’ve generated locally. Just like the GPS signals are attenuated due to passing through Earth’s atmosphere, other physical effects also impact the signal we receive. Since the GPS satellites are transiting so fast above us, the signal we receive from each satellite will be Doppler-shifted in frequency.</p>

<p>Since the GPS satellites transit at well-known orbital velocities, we know the range of Doppler shifts we’d expect the signal to reach us at: up to a +5KHz frequency increase for an approaching satellite, or -5KHz frequency decrease for a satellite travelling away from us.</p>
<p>Also, since we’ve started listening for the GPS signals at some arbitrary point in time, we might start hearing the PRN halfway through its transmission.</p>
<p>Therefore, when searching the data we’ve received for satellite signals, we need to search across several axes at once:</p>
<ol>
<li>Each satellite’s PRN code.</li>
<li>The range of Doppler shifts that we’d expect the PRN code to be slid by.</li>
<li>The phase that we’ll slide our replica PRN code by to match up with the received PRN code.</li>
</ol>
<p>This <em>acquisition phase</em> of the GPS receiver tends to be compute-intensive. Thankfully, when you do stumble on the correct parameters the correlation spike makes things pretty clear!</p>

<p>There’s a wealth of academic papers out there exploring ideas to speed up and optimize acquisition. It’s quite remarkable: some papers are entirely founded on tweaking the equation in effectively one line of code, and exploring how this impacts the acquisition performance characteristics.</p>
<p>I’m transforming each PRN from the time domain into the frequency domain, and correlating the frequencies of the incoming satellite data with the spectrums of each PRN code. This is really useful because a phase offset in the time domain becomes a shift in frequency components, and what <em>that</em> means is that I get to perform steps #2 and #3 in the same computation<span><sup><i>✱</i></sup></span>! I’m also using a binary search sort of approach to converge on the Doppler shift that gives the strongest correlation spike for each satellite in view<span><sup><i>✱</i></sup></span>.</p>

<div>

<p>The technical term for what I’m doing here is <em><a href="https://en.wikipedia.org/wiki/Cross-correlation">cross correlation</a> in the frequency domain</em>.</p>

</div>

<div>

<p>The GPS literature is interesting because it contains tons of incredibly dense and intricate signal processing and orbital mechanics expertise, interspersed with completely benign software ideas dressed up in fur coats. Typical sources refer to this search over the Doppler space as “frequency bins” or “frequency buckets”, and seem to conventionally step over the space in 500Hz and leave it at that. Since we’re writing code, it’s easy to binary search here for a stronger match - no fancy new nomenclature necessary.</p>

</div>
<p>All said and done, we’ve built a detector to determine which GPS satellites are in the sky above us, as well as a rough approximation of their phase (or <em>time delay</em>), and Doppler shift (or <em>relative velocity</em>). We’ve completed the first major step in the GPS positioning pipeline, and we can now say with confidence which GPS satellites are currently above the user! <a href="https://axleos.com/building-a-gps-receiver-part-2-tracking-pinpricks/">Read more in Part 2: Tracking Pinpricks</a>.</p>
</content>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TwitchAdSolutions – Blocking Twitch Ads (102 pts)]]></title>
            <link>https://github.com/pixeltris/TwitchAdSolutions</link>
            <guid>40040738</guid>
            <pubDate>Mon, 15 Apr 2024 14:07:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/pixeltris/TwitchAdSolutions">https://github.com/pixeltris/TwitchAdSolutions</a>, See on <a href="https://news.ycombinator.com/item?id=40040738">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">TwitchAdSolutions</h2><a id="user-content-twitchadsolutions" aria-label="Permalink: TwitchAdSolutions" href="#twitchadsolutions"></a></p>
<p dir="auto">This repo aims to provide multiple solutions for blocking Twitch ads.</p>
<p dir="auto"><strong>Don't combine Twitch specific ad blockers.</strong></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Recommendations</h2><a id="user-content-recommendations" aria-label="Permalink: Recommendations" href="#recommendations"></a></p>
<p dir="auto">Proxies are the most reliable way of avoiding ads (<a href="https://github.com/pixeltris/TwitchAdSolutions/blob/master/full-list.md#proxy-issues">buffering / downtime info</a>).</p>
<ul dir="auto">
<li><code>TTV LOL PRO</code> - <a href="https://chrome.google.com/webstore/detail/ttv-lol-pro/bpaoeijjlplfjbagceilcgbkcdjbomjd" rel="nofollow">chrome</a> / <a href="https://addons.mozilla.org/addon/ttv-lol-pro/" rel="nofollow">firefox</a> / <a href="https://github.com/younesaassila/ttv-lol-pro">code</a></li>
</ul>
<p dir="auto">Alternatively:</p>
<ul dir="auto">
<li><code>Alternate Player for Twitch.tv</code> - <a href="https://chrome.google.com/webstore/detail/alternate-player-for-twit/bhplkbgoehhhddaoolmakpocnenplmhf" rel="nofollow">chrome</a> / <a href="https://addons.mozilla.org/en-US/firefox/addon/twitch_5/" rel="nofollow">firefox</a></li>
<li><code>Purple AdBlock</code> - <a href="https://chrome.google.com/webstore/detail/purple-adblock/lkgcfobnmghhbhgekffaadadhmeoindg" rel="nofollow">chrome</a> / <a href="https://addons.mozilla.org/en-US/firefox/addon/purpleadblock/" rel="nofollow">firefox</a> / <a href="https://github.com/arthurbolsoni/Purple-adblock/">code</a></li>
<li><code>AdGuard Extra</code> - <a href="https://chrome.google.com/webstore/detail/adguard-extra-beta/mglpocjcjbekdckiahfhagndealpkpbj" rel="nofollow">chrome</a> / <a href="https://github.com/AdguardTeam/AdGuardExtra/#firefox">firefox</a> / <a href="https://userscripts.adtidy.org/release/adguard-extra/1.0/adguard-extra.user.js" rel="nofollow">userscript</a></li>
<li><code>video-swap-new</code> - see below</li>
</ul>
<p dir="auto"><a href="https://github.com/pixeltris/TwitchAdSolutions/blob/master/full-list.md">Read this for a full list and descriptions.</a></p>
<p dir="auto"><a href="https://github.com/zGato/ScrewTwitchAds">Also see this list maintained by @zGato.</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Scripts</h2><a id="user-content-scripts" aria-label="Permalink: Scripts" href="#scripts"></a></p>
<p dir="auto"><strong>There are better / easier to use methods in the above recommendations.</strong></p>
<ul dir="auto">
<li>video-swap-new - <a href="https://github.com/pixeltris/TwitchAdSolutions/raw/master/video-swap-new/video-swap-new.user.js">userscript</a> / <a href="https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/master/video-swap-new/video-swap-new-ublock-origin.js" rel="nofollow">ublock</a> / <a href="https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/044d1fb3bb88a19ab718603069354d43eeba7015/video-swap-new/video-swap-new-ublock-origin.js" rel="nofollow">ublock (permalink)</a>
<ul dir="auto">
<li>Uses a lower resolution stream during ads.</li>
<li><em>You may notice a seemingly random player reload some time after the ad message is gone.</em></li>
</ul>
</li>
<li>vaft - <a href="https://github.com/pixeltris/TwitchAdSolutions/raw/master/vaft/vaft.user.js">userscript</a> / <a href="https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/master/vaft/vaft-ublock-origin.js" rel="nofollow">ublock</a> / <a href="https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/044d1fb3bb88a19ab718603069354d43eeba7015/vaft/vaft-ublock-origin.js" rel="nofollow">ublock (permalink)</a>
<ul dir="auto">
<li>The same as <code>video-swap-new</code> but attempts to get a clean stream faster (may suffer from more freezing / playback issues).</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Applying a script (uBlock Origin)</h2><a id="user-content-applying-a-script-ublock-origin" aria-label="Permalink: Applying a script (uBlock Origin)" href="#applying-a-script-ublock-origin"></a></p>
<ul dir="auto">
<li>Navigate to the uBlock Origin Dashboard (the extension options)</li>
<li>Under the <code>My filters</code> tab add <code>twitch.tv##+js(twitch-videoad)</code>.</li>
<li>Under the <code>Settings</code> tab, enable <code>I am an advanced user</code>, then click the cog that appears. Modify the value of <code>userResourcesLocation</code> from <code>unset</code> to the full url of the solution you wish to use (if a url is already in use, add a space after the existing url). e.g. <code>userResourcesLocation https://raw.githubusercontent.com/pixeltris/TwitchAdSolutions/master/video-swap-new/video-swap-new-ublock-origin.js</code></li>
<li>To ensure uBlock Origin loads the script I recommend that you disable/enable the uBlock Origin extension (or restart your browser).</li>
</ul>
<p dir="auto">To stop using a script remove the filter and make the url <code>unset</code>.</p>
<p dir="auto"><em>For the sake of security it's recommended to use a permalink when using uBlock Origin (permalinks do not auto update).</em></p>
<p dir="auto"><em>The scripts <strong>may randomly stop being applied by uBlock Origin</strong> for unknown reasons (<a href="https://github.com/pixeltris/TwitchAdSolutions/issues/200" data-hovercard-type="issue" data-hovercard-url="/pixeltris/TwitchAdSolutions/issues/200/hovercard">#200</a>). It's recommended to use the userscript versions instead.</em></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Applying a script (userscript)</h2><a id="user-content-applying-a-script-userscript" aria-label="Permalink: Applying a script (userscript)" href="#applying-a-script-userscript"></a></p>
<ul dir="auto">
<li>Viewing one of the userscript files should prompt the given script to be added (assuming you have a userscript manager).</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Neon Is Generally Available: Serverless Postgres (277 pts)]]></title>
            <link>https://neon.tech/blog/neon-ga</link>
            <guid>40040593</guid>
            <pubDate>Mon, 15 Apr 2024 13:55:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://neon.tech/blog/neon-ga">https://neon.tech/blog/neon-ga</a>, See on <a href="https://news.ycombinator.com/item?id=40040593">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Neon is Generally Available </p></div><div>
<p><img alt="Post image" fetchpriority="high" width="1024" height="576" decoding="async" data-nimg="1" sizes="(max-width: 767px) 100vw" srcset="https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=640&amp;q=85 640w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=750&amp;q=85 750w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=828&amp;q=85 828w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=1080&amp;q=85 1080w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=1200&amp;q=85 1200w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=1920&amp;q=85 1920w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=2048&amp;q=85 2048w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=3840&amp;q=85 3840w" src="https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2Fneon-available-1.jpg&amp;w=3840&amp;q=85"></p><p><strong><em>⚡ We just launched Neon in Product Hunt. <a href="https://www.producthunt.com/products/neon-6">Give us a review</a> ⚡</em></strong></p>



<p>Postgres continues to hold its position as one of the most popular developer databases ever created. While MySQL lost some of its luster after acquisition by Oracle, Postgres continues to win more developer trust. In 2023, it <a href="https://survey.stackoverflow.co/2023/#section-most-popular-technologies-databases">topped the poll</a> in the StackOverflow Developers Survey and in the same year, was voted the <a href="https://db-engines.com/en/blog_post/106">DBMS of the Year</a> by DBEngines. The current internet meme is “Just Use Postgres” for everything.&nbsp;</p>



<p>Despite popularity Postgres suffers from the two problems that beset nearly all relational databases. It is difficult to scale up and down without interruption. Worse, it takes a long time to restore production operations when software bugs affect the data.</p>



<p>This happens because with Postgres it’s hard to create a high-fidelity developer environment as it requires copying the full state of the database. With that, maintaining multiple copies of data and schema for every developer is a major pain in the neck. The database becomes the nexus of development for most teams and invariably is the bottleneck constricting developer velocity.</p>







<p>When the Neon engineering team approached these issues they knew they had to solve several problems with today’s database development lifecycle:</p>



<ol>
<li>They wanted Postgres cluster creation to be fast (sub-second)</li>



<li>They wanted Postgres clusters to be able to scale up and down automatically as the load changed. You don’t need to worry about over or under provisioning.</li>



<li>They wanted to be able to create branches with full data copied instantly so developers could work independently while still being able to collaborate effectively</li>



<li>They wanted to restore to a point in time in seconds instead of hours or days</li>
</ol>



<p>Almost every app needs a database, and while developer tools and workflows evolved with platforms like GitHub and Vercel, databases did not evolve to match the developer experience of these systems.&nbsp; Evolving developer experience around the database requires a fundamental rethinking of the database architecture. But this is not a “look at our cool new database” engine. We know developers love and want to use authentic open-source Postgres. So, at Neon, we looked at how we could change the experience of developing on Postgres without losing everything that makes Postgres great.&nbsp;</p>



<p>We borrowed an idea from <a href="https://www.amazon.science/publications/amazon-aurora-design-considerations-for-high-throughput-cloud-native-relational-databases">Amazon Aurora</a>, the separation of storage and compute; and we aren’t talking about simply using a network-attached disk like EBS. True separation of storage and compute opened up the possibility to scale both parts of the service independently. Unlike AWS Aurora we decided to open source all the changes in Postgres and also send them upstream as well as fully open source our cloud native storage.</p>



<p>We made <a href="https://neon.tech/blog/architecture-decisions-in-neon">architectural decisions</a> that ensured that our users have the complete Postgres experience, including Extensions, internals, command line and management tools. Everything that worked on-premise should work in our cloud service.&nbsp;</p>



<p>An additional benefit from separating storage and compute is – well we have a brand new cloud native storage implementation and we can “do things” in it. Controlling storage allows us to implement branching – a flagship feature that unlocks a better developer experience for building database apps.</p>







<p>This means we can create branches at any point in time and start a compute instance pointing to that database version. So, every developer can work on a different branch without colliding with their colleague’s work.&nbsp;</p>



<p><img alt="Post image" loading="lazy" width="1024" height="595" decoding="async" data-nimg="1" sizes="(max-width: 767px) 100vw" srcset="https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=640&amp;q=85 640w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=750&amp;q=85 750w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=828&amp;q=85 828w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=1080&amp;q=85 1080w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=1200&amp;q=85 1200w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=1920&amp;q=85 1920w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=2048&amp;q=85 2048w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=3840&amp;q=85 3840w" src="https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F04%2FScreenshot-2024-04-14-at-10.56.12%E2%80%AFAM.png&amp;w=3840&amp;q=85"></p><p>Compute can now scale independently of storage so the CPU size and count can accurately match the load. Even large database loads have peaks and troughs. We wanted to avoid&nbsp; developers having to size for the largest expected load.&nbsp;</p>



<p>A database branch is copy-on-write, so it only points to a set of already created and stored pages. So, branches take less than a second to create. Because they are copied on write branches incur no space overhead until data is written to them.&nbsp;</p>



<p>Suppose a developer fat fingers a table or a database out of existence? No problem, move the branch to the second before that event happened. Starting a new database or recovering from a production failure happens in seconds because the Neon architecture doesn’t require you to ship hundreds of gigabytes of data to create new instances of databases and servers.</p>



<p>Users don’t want databases, they want data. Neon is designed to take the overhead of starting, stopping, creating, and cloning databases from hours to seconds. The major velocity inhibitor of modern development is the relational database. Imagine if data was easy, what would it do to your developer productivity?&nbsp;</p>



<p>With Neon database branching is integrated directly into the developer workflow and without interruption. When database data and/or schema changes take hours to propagate across the development team everyone suffers.<br></p>



<p>Neon is the next big pivot for Postgres, and all of these changes have been offered upstream to the Postgres community. They are available in our <a href="https://github.com/neondatabase/neon">public repo</a> today. Our mission is to provide everything Postgres developers need and less. Less waiting for clusters to start, less waiting for databases to restore, less waiting for colleagues changes to deploy, less waiting for the DBA team to schedule their updates.</p>







<p>During our Preview we’ve been focused on building a solid technical foundation for Neon. Some of our favorite milestones:</p>



<ul>
<li>In December 2022, <a href="https://neon.tech/blog/neon-serverless-postgres-is-live"><strong>we removed the invite-only gate to Neon</strong></a><strong>. </strong>Today, thousands of new Neon databases are created weekly. Neon includes a generous free tier that is here to stay:<a href="https://twitter.com/nikitabase/status/1758639571414446415"> the Neon architecture makes it efficient for us to support it.</a>&nbsp;</li>



<li>We made <a href="https://www.youtube.com/watch?v=a1ZEY3W7sOI"><strong>database</strong> <strong>branching</strong></a> available to everyone. Today, tens of thousands of branches are created weekly by Neon users<strong>. </strong>Neon branches include data and schema, allowing developers to create isolated copies of their data in 1 second.&nbsp;</li>



<li>Neon also included <a href="https://api-docs.neon.tech/reference/getting-started-with-neon-api"><strong>API support</strong></a> right from the start. The Neon API has now matured into a robust tool that enables Neon partners to easily manage fleets of hundreds of thousands of databases. They automate all database operations via the API, removing the need for dedicated DevOps for managing Postgres fleets.&nbsp;</li>



<li>We also released a <a href="https://neon.tech/blog/serverless-driver-for-postgres"><strong>serverless driver</strong></a>. Today, the Neon serverless driver has +100,000 weekly downloads. Developers use it to speed up their JavaScript and Typescript deployments.&nbsp;</li>



<li>On the topic of speeding up deployments, we launched our <a href="https://neon.tech/docs/guides/vercel"><strong>Vercel integration</strong></a>, which creates one database branch for every preview. Today, thousands of Neon database branches have been created via the Vercel integration.&nbsp;</li>



<li>A few months into our Preview, we released the first version of <a href="https://neon.tech/blog/scaling-serverless-postgres"><strong>autoscaling</strong></a>, a foundational feature that expands the Neon serverless experience. Today, thousands of autoscaling events are happening every week, saving developers the work of resizing manually.<strong> </strong></li>



<li>We also made the <a href="https://neon.tech/blog/cli"><strong>Neon CLI</strong></a> available to all users, so developers could simplify their integrations and automations by managing Neon directly from their terminal. Today, our CLI has hundreds of weekly active users (and counting).&nbsp;</li>



<li>During the months of Preview, we put a special focus on improving our <a href="https://neon.tech/blog/why-you-want-a-database-that-scales-to-zero"><strong>scale to zero</strong> <strong>and cold start</strong></a><strong> </strong>behavior. Today, tens of thousands of Neon databases scale to zero every day, saving developers money. And we keep working hard on our cold start metrics: <a href="https://neon-cold-start-benchmarks.vercel.app/#benchmark-methodology"><strong>we are now at a P50 of 500 ms to start a database</strong></a>, and we’re working to reduce it further.&nbsp;</li>
</ul>







<p>Neon Postgres is Generally Available. Serverless autoscaling and instant branching are built for modern developers who have to iterate fast. Go faster with Neon, it’s ready, <a href="https://console.neon.tech/signup">give it a spin</a>.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tesla Cybertruck Production Halted (243 pts)]]></title>
            <link>https://www.barrons.com/articles/tesla-cybertruck-production-halted-ac750c17</link>
            <guid>40040100</guid>
            <pubDate>Mon, 15 Apr 2024 13:10:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.barrons.com/articles/tesla-cybertruck-production-halted-ac750c17">https://www.barrons.com/articles/tesla-cybertruck-production-halted-ac750c17</a>, See on <a href="https://news.ycombinator.com/item?id=40040100">Hacker News</a></p>
Couldn't get https://www.barrons.com/articles/tesla-cybertruck-production-halted-ac750c17: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Supabase – General Availability Week (144 pts)]]></title>
            <link>https://supabase.com/ga</link>
            <guid>40039191</guid>
            <pubDate>Mon, 15 Apr 2024 11:39:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://supabase.com/ga">https://supabase.com/ga</a>, See on <a href="https://news.ycombinator.com/item?id=40039191">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p><img alt="GA logo" fetchpriority="high" width="300" height="300" decoding="async" data-nimg="1" srcset="https://supabase.com/_next/image?url=%2Fimages%2Flaunchweek%2Fga%2Fga-black.svg&amp;w=384&amp;q=100 1x, https://supabase.com/_next/image?url=%2Fimages%2Flaunchweek%2Fga%2Fga-black.svg&amp;w=640&amp;q=100 2x" src="https://supabase.com/_next/image?url=%2Fimages%2Flaunchweek%2Fga%2Fga-black.svg&amp;w=640&amp;q=100"><img alt="GA logo" fetchpriority="high" width="300" height="300" decoding="async" data-nimg="1" srcset="https://supabase.com/_next/image?url=%2Fimages%2Flaunchweek%2Fga%2Fga-white.svg&amp;w=384&amp;q=100 1x, https://supabase.com/_next/image?url=%2Fimages%2Flaunchweek%2Fga%2Fga-white.svg&amp;w=640&amp;q=100 2x" src="https://supabase.com/_next/image?url=%2Fimages%2Flaunchweek%2Fga%2Fga-white.svg&amp;w=640&amp;q=100"></p><h2>We are moving to<br><span>General Availability</span></h2><p><span>15 April 2024</span></p></div><div id="ga"><p>During the first year of Supabase we set ourselves a goal: build a managed platform capable of securely running 1 million databases. Today we've proven that metric and we're announcing the General Availability of the platform that will serve the next 99 million.</p>
<p><img src="https://supabase.com/images/ga/database-growth--dark.svg?v=2" alt="top user growth over time by days after launch"></p>
<p>We've been production-ready for years now. We kept the “beta” label because we wanted to make sure that our <em>organization</em> can support all types of customers, no matter their demands.</p>
<p>Today we're confident in our ability to take any profile of customer and help them become successful. We have a crew of amazing Postgres engineers and support staff who work tirelessly to educate customers with Postgres technicalities, improving our product simultaneously.</p>
<p>Whether you're an indie hacker or a Fortune 500, Supabase can scale comfortably for your production workload. Rocketships like <a href="https://www.udio.com/">Udio</a>, <a href="https://www.krea.ai/">Krea</a>, <a href="https://www.humata.ai/">Humata</a>, and <a href="https://pika.art/">Pika</a> use Supabase to build fast and scale faster. Enterprise customers such as Mozilla, PwC, Johnson &amp; Johnson, and 1Password use Supabase to manage their applications securely. 36% of the last Y Combinator batch used Supabase to launch their start up.</p>
<blockquote>
<p><em>Supabase has been great to develop applications. As a firm focused on security, we've been happy to work with Row Level Security Policies to secure database operations.</em></p>
</blockquote>
<ul>
<li>Matthieu, Tech Lead. PwC France</li>
</ul></div><div id="open-source"><div><h2>Open Source &amp; Community</h2><p>02</p></div><div><p>Our community is the driving force behind the development and adoption of Supabase.</p>
<p><img src="https://supabase.com/images/ga/github-start-growth--dark.svg?v=1" alt="top user growth over time by days after launch"></p>
<p>The GitHub community is the foundation of our company: submitting feature requests, discovering bugs, creating PRs, and pushing our team to develop a useful product.</p>
<p>We're committed to our licenses - all of our public repos have OSI-compliant licenses. We have no plans to change this.</p>
<p>Self-hosting is easier than ever. You can get started in <a href="https://www.youtube.com/watch?v=FqiQKRKsfZE">less than 5 minutes</a> on a hosted VPS.</p>
<p>We're committed to our free plan - we know the importance of this for testing hobby projects and prototyping. Almost all of the largest databases on Supabase today started on the free plan, a clear indication that our free plan is important for building an enduring platform.</p></div></div><div><a target="_blank" href="https://www.youtube.com/c/supabase"></a><h2>23,000</h2><p>YouTube subscribers</p></div><div id="scale"><div><h2>Build in a weekend, scale to millions</h2><p>03</p></div><div><p>Our tagline is “Build in a weekend, scale to millions”. This isn't hyperbole. In the past, reaching 1 million users was an incredible challenge. It took Instagram 2.5 months, Facebook 10 months, and Twitter 24 months.</p>
<p>In the past year, we've had 12 companies start on Supabase and grow from zero to over 1 million users.</p>
<p><img src="https://supabase.com/images/ga/project-user-growth--dark.svg?v=3" alt="top user growth over time by days after launch"></p>
<p>Most of these were AI companies, like Udio, Krea, Humata, Chatbase, Pika, Quivr, Mendable, Markprompt and <a href="https://developer.mozilla.org/en-US/blog/introducing-ai-help/">MDN search</a> by Mozilla.</p>
<p>Postgres has been instrumental in our scalability and adoption. It's versatility is best demonstrated by pgvector: we were the first cloud provider to offer it, and today 15% of all new Supabase projects use pgvector for AI and ML workloads. Look out for a few related announcements this week.</p></div></div><div id="enterprise"><p>Supabase can now scale comfortably to any workload. Companies such as 1Password, PwC, and Johnson &amp; Johnson use Supabase to build Postgres-backed applications.</p>
<p>We've spent years working with larger organizations to meet their requirements for running Supabase in production. This includes enhanced security tooling, industry best-practices (SOC2 and HIPAA), round the clock support, and SLAs.</p>
<p>This week we've added support for Supabase in the AWS Marketplace. Enterprise customers can now purchase Supabase as part of their committed AWS spend.</p>
<p>We'll continue to expand the Supabase Enterprise offering to include more deployment options, including "Bring your own cloud". If you're interested in using Supabase in your organization, get in touch via the <a href="https://forms.supabase.com/enterprise">Supabase for Enterprise form</a>.</p></div><div><p>Role-based access control</p></div><div id="partners"><p>The Supabase community doesn't exist in isolation. It's part of a group of developer focused companies and communities who are constantly pushing the boundaries of developer experience and developer productivity.</p>
<p>We've <a href="https://supabase.com/blog/postgres-on-fly-by-supabase">teamed up with Fly</a> to bring Postgres to developers across the world. (More on this later this week).</p>
<p>Vercel users can use the <a href="https://vercel.com/integrations/supabase">Supabase integration</a> to connect Supabase to their Next.js projects, and we have deep integrations with <a href="https://docs.flutterflow.io/data-and-backend/supabase">Flutterflow</a>, <a href="https://resend.com/blog/how-to-configure-supabase-to-send-emails-from-your-domain">Resend</a>, and <a href="https://www.twilio.com/en-us/blog/send-sms-notifications-supabase-users-node-js-twilio-messaging">Twilio</a>.</p>
<p>Cloudflare recently announced the Supabase integration for <a href="https://developers.cloudflare.com/workers/databases/native-integrations/supabase/">Workers</a> and <a href="https://developers.cloudflare.com/hyperdrive/examples/supabase/">Hyperdrive</a>.</p>
<p>Developers have different preferences on how to connect to their database, and Supabase is <a href="https://itsjustpostgres.com/">"just Postgres"</a> you can connect natively with <a href="https://www.prisma.io/docs/orm/overview/databases/supabase">Prisma</a>, <a href="https://orm.drizzle.team/docs/get-started-postgresql#supabase">Drizzle</a>, or <a href="https://github.com/kysely-org/kysely-supabase">Kysely</a>.</p>
<p>You can find the <a href="https://supabase.com/partners/integrations">full list of partners and integrations</a> on our Partners page. If you're interested in partnering with Supabase head over to the <a href="https://supabase.com/partners">Partner Portal</a>.</p></div><div id="whats-new"><p>In addition to General Availability, we also have several other major announcements to make today.</p>
<ul>
<li>
<p>The Supabase <a href="https://github.com/supabase/index_advisor">Index Advisor</a> is now available inside Supabase Studio. As its name suggests, this will analyze your database and make recommendations to add or remove table indexes. This is just the beginning of our plan to make automated data analysis tooling available to all developers.</p>
</li>
<li>
<p><a href="https://supabase.com/blog/branching-publicly-available">Supabase Branching</a> works like Git branches. You can create and test database changes or try out features in a separate, temporary instance without affecting your production setup. Today Branching enters public availability.</p>
</li>
<li>
<p>Supabase has <a href="https://supabase.com/blog/supabase-aquires-oriole">acquired Oriole</a>. Oriole is a company founded by Postgres Hacker Alexander Korotkov to solve the hairy problems of Postgres.</p>
</li>
<li>
<p>We're constantly on the lookout for ways to remove the friction in getting started with your new projects. <a href="https://supabase.com/blog/supabase-bootstrap">Supabase Bootstrap</a> is now the easiest way to get started with Supabase and your favorite development framework.</p>
</li>
<li>
<p>Today Supabase Swift SDK will join supabase-js as an <a href="https://supabase.com/blog/supabase-swift">officially supported client library</a>, and supabase-swift maintainer Guilherme Souza will join the Supabase team full time. The goal of Supabase is to become the default backend for all kinds of developers.</p>
</li>
</ul></div><div id="whats-next"><p>One of our key metrics at Supabase is "Time to Value". How fast can a user go from idea to production? We'll never stop pushing on what's possible here.</p>
<p>It is only the first day of Supabase GA Week. Today's releases are just the start: we have 4 more days of exciting announcements to come. <a href="https://supabase.com/ga-week">Follow the new announcements here</a>.</p>
<p>If you want to try Supabase today, we just started an asynchronous hackathon. It's a great way to try out all the new features. Go here to <a href="https://supabase.com/blog/supabase-oss-hackathon">read the rules and start hacking</a>.</p>
<p>Together with the developer community we're looking forward to deploying our next 100 million databases.</p></div><div><p><h2><span>Build in a weekend,</span><span> scale to millions</span></h2></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A proof-of-concept Python executable built on Cosmopolitan Libc (2022) (120 pts)]]></title>
            <link>https://ahgamut.github.io/2021/07/13/ape-python/</link>
            <guid>40039020</guid>
            <pubDate>Mon, 15 Apr 2024 11:17:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ahgamut.github.io/2021/07/13/ape-python/">https://ahgamut.github.io/2021/07/13/ape-python/</a>, See on <a href="https://news.ycombinator.com/item?id=40039020">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main"><header><p><a href="https://ahgamut.github.io/"><b>Blog Needs a Name</b></a></p><ul><li><a href="https://ahgamut.github.io/">Home</a></li><li><a href="https://ahgamut.github.io/about">About</a></li></ul></header><hr><p><strong>Update (2024-04-15)</strong>: The Python executable build process described in this
post is from <strong>2021</strong>, and both <a href="https://justine.lol/cosmo3">Cosmopolitan Libc</a>
and the surrounding tooling have improved since 2021. The build process is much
simpler now, you can download Python 3.11.4 Actually Portable Executables built
via Github Actions at <a href="https://github.com/ahgamut/superconfigure">https://github.com/ahgamut/superconfigure</a> – one of the
<a href="https://github.com/ahgamut/superconfigure/releases/download/z0.0.36/datasette.zip">Python binaries</a>
downloaded from that repo has <a href="https://github.com/simonw/datasette"><code>datasette</code></a>
which runs like this:</p><p><img src="https://ahgamut.github.io/images/ape-datasette.gif" alt="webapp" loading="lazy" decoding="async" width="" height=""></p><p><strong>Update (2022-07-27)</strong> : This post describes a proof-of-concept Python
executable (2.7.18 and 3.6.14) built on <a href="https://github.com/jart/cosmopolitan">Cosmopolitan
Libc</a>, which allows it to run on six
different operating systems (Linux, Mac, Windows, NetBSD, FreeBSD, OpenBSD).
It’s been more than a year since I put this together, and now Python3.6 and its
test suite are part of the <a href="https://github.com/jart/cosmopolitan/pull/235">Cosmopolitan Libc
monorepo</a>. There’s been a LOT of
work done to improve <code>python.com</code> over vanilla Python3.6 – a custom
<a href="https://github.com/jart/cosmopolitan/pull/425"><code>sys.meta_path</code> entry</a> for
faster loading, <a href="https://justine.lol/sizetricks#dzd">size reductions</a> of the
<code>unicodedata</code>, a <code>cosmo</code> module for Cosmopolitan-specific goodies, a revamp of
Python’s build and testing system, a superb REPL experience, backports from
Python 3.7, and a lot more! So some of the details in this blog post are likely
out of date. Check out the history of APE Python
<a href="https://github.com/jart/cosmopolitan/issues/141">here</a>, build it via the
Cosmopolitan monorepo, or download <code>python.com</code> from
<a href="https://justine.lol/ftrace/python.com">here</a>. I’m also trying to port the newer
versions of Python and some well-known Python packages like numpy. Join the
discussion about Python and Cosmopolitan Libc in the
redbean Discord server: <a href="https://discord.gg/rGQja6kS">https://discord.gg/rGQja6kS</a></p><p>Back in February, I put together <a href="https://ahgamut.github.io/2021/02/27/ape-cosmo/">Lua 5.4</a> using <a href="https://github.com/jart/cosmopolitan">Cosmopolitan
Libc</a> as a quick proof-of-concept, and that led to Lua 5.4 being
<a href="https://github.com/jart/cosmopolitan/issues/61#issuecomment-792359199">vendored</a> as part of the Cosmopolitan repository on Github, along
with many other interesting developments. It’s pretty exciting to try and
compile well-known C projects using Cosmopolitan; the portability reward is
great motivation, and I get to observe the design, coding style, and build
system of high-quality codebases.</p><p>However, my initial plan with Cosmopolitan was not to compile Lua, it was to
compile Python. Since February, I’ve been trying to understand how Cosmopolitan
works, reading the repo code and submitting PRs occasionally, and finally I have
an actually portable version of Python 2.7.18 (and 3.6.14<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup>) – you
can build it from the repository <a href="https://github.com/ahgamut/cpython/tree/cosmo_py27">here</a>. It’s not solid as Lua 5.4
because it currently passes only a third of the regression tests, but most of
the parts are there. For example, here’s a GIF showing a simple <a href="https://flask.palletsprojects.com/en/2.0.x/">Flask
webapp</a> running via the <code>python.com</code> APE.</p><p><img src="https://ahgamut.github.io/images/ape-python.gif" alt="webapp" loading="lazy" decoding="async" width="" height=""></p><p>It’s quite slow, but it works(tested on Debian Linux and Windows
10<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">2</a></sup>), and there’s a lot of room for improvement. This post
describes the kinds of changes I made to get Python to work.</p><h2 id="getting-python-to-compile">Getting Python to compile</h2><p>Python 2.7.18 is built via the <a href="https://en.wikipedia.org/wiki/Configure_script"><code>configure</code> idiom</a>: the tarball
provides a <code>configure</code> shell script which runs the necessary compatibility tests
for the host system/compiler. which then creates the Makefile for the actual
build, and fills <code>pyconfig.h</code> with the necessary <code>#define</code>s related to the
features available in the host system.</p><p>I added dummy headers like for Lua, and wrote a <code>superconfigure</code> script which
called <code>configure</code> with the flags for the Cosmopolitan
<a href="https://github.com/jart/cosmopolitan#getting-started">amalgamation</a>, like below:</p><div><pre tabindex="0"><code data-lang="sh"><span><span>./configure --disable-shared <span>\
</span></span></span><span><span><span></span>    --without-threads --disable-ipv6 <span>\
</span></span></span><span><span><span></span>    <span>CFLAGS</span><span>=</span><span>"</span><span>$COSMO_CFLAGS</span><span>"</span> <span>\
</span></span></span><span><span><span></span>    <span>LDFLAGS</span><span>=</span><span>"</span><span>$COSMO_LDFLAGS</span><span>"</span> <span>\
</span></span></span><span><span><span></span>    <span>LIBS</span><span>=</span><span>"cosmopolitan.a"</span>
</span></span><span><span>make -j4
</span></span></code></pre></div><p>This started the build, but almost every source file had complaints about
functions being re-declared. For example, the Makefile assumed that <code>sinh</code> was
not available, and wrongly had <code>#define HAVE_SINH 0</code>, which caused it to use
Python’s backup implementation.</p><p>It turns out that the <code>CFLAGS</code> provided for the cosmopolitan amalgamation
clashed with <a href="https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Generic-Functions.html"><code>AC_CHECK_FUNC</code></a>, which is what <code>configure</code> scripts use
to check if the host provides a particular function. At the time, the simplest
fix was to edit the <code>AC_CHECK_FUNC</code> part of <code>configure</code> script to make it play
well, and it just worked<sup id="fnref:3"><a href="#fn:3" role="doc-noteref">3</a></sup>.</p><p>After that, fixing the remaining errors was mostly straightforward: add a few
<code>#define</code>s or <code>#undef</code>s to avoid missing functions, ensure the Makefile
performed the linking correctly, find-and-replace for name
clashes<sup id="fnref:4"><a href="#fn:4" role="doc-noteref">4</a></sup>, and so on.</p><h2 id="running-the-base-interpreter">Running the base interpreter</h2><p>I tried running the <code>python.com</code> APE within the build directory, and it worked
without a hitch. But when I moved the executable somewhere, the interpreter
would start up and then exit with a failure <code>unable to import site</code>: Python
checks for <code>site.py</code> in <code>sys.path</code> at startup, which sets up the import context
for the rest of the standard library (stuff like which OS the APE is on for
<code>os.py</code>). Running <code>python.com -S</code> fixed the issue<sup id="fnref:5"><a href="#fn:5" role="doc-noteref">5</a></sup>, and later I
added a few relative folder paths to <code>sys.path</code> so that Python could search
there at startup.</p><p>One annoying issue I faced with the <code>python.com</code> REPL on Linux was I had to
press <code>Return</code> twice when I wanted to enter an empty line to the REPL. By
running <code>python.com -u</code> I found out this this was related to input buffering and
<a href="https://en.cppreference.com/w/c/io/setvbuf"><code>setvbuf</code></a>: the interpreter was following Cosmopolitan’s choice of
buffering IO, so I added a couple of lines to use unbuffered input by default.</p><p>When I tried <code>python.com -S</code> on Windows, the interpreter would start, but then
every line I entered at the REPL would cause a syntax error. I thought this was
also related to <code>setvbuf</code>, but this was because Windows <a href="https://github.com/jart/cosmopolitan/issues/141#issuecomment-812918670"><code>cmd.exe</code> sends
CRLF</a> on pressing <code>Return</code>, and the interpreter expects only LF, so the CR
was read as incorrect syntax. It was straightforward to change the parser logic.</p><h2 id="adding-standard-library-modules">Adding standard library modules</h2><p>When the Makefile finishes building <code>python</code>, it immediately tries to call a
<code>setup.py</code> to build C extensions for the standard library. This was pretty
stupid: <code>setup.py</code> tries to build and link a bunch of shared objects to the
interpreter even though I’ve specified a static build (<code>--disable-shared</code>). I
found out it was doing this after I saw a successful build on the screen,
followed a deluge of (<code>unable to link</code>/<code>no dlopen</code>/<code>Rdynamic specified but also static</code>) errors.</p><p>There is a nice way to compile C extensions into Python statically: via
<code>Modules/Setup</code>. This file follows a simple syntax to specify extensions and
their requirements, so that you can compile extensions before <code>setup.py</code> is
called.</p><div><pre tabindex="0"><code data-lang="sh"><span><span>*static*
</span></span><span><span>
</span></span><span><span><span># &lt;name of extension&gt; &lt;source files in Modules folder&gt; &lt;includes&gt; &lt;links&gt; -DSOME_FLAG</span>
</span></span><span><span>math mathmodule.c _math.c <span># -lm</span>
</span></span><span><span>array arraymodule.c
</span></span></code></pre></div><p>Calling <code>make</code> after changing <code>Modules/Setup</code> rebuilds the Makefile with the
necessary recipes for the specified extensions. You can read about
<a href="https://github.com/ahgamut/cpython/blob/cosmo_py27/Modules/Setup"><code>Modules/Setup</code> here</a>. One nasty aspect of this is if the syntax
in <code>Modules/Setup</code> is wrong, the Makefile will be wrong, so you can’t run <code>make</code>
even after you’ve fixed the error.</p><p>I was able to compile a lot of modules into APE using <code>Modules/Setup</code>: basic
modules like <code>cPickle</code>, <code>zlib</code> etc., modules that required external libraries
like <code>_sqlite</code>, <code>_bz2</code>, <code>readline</code>, <code>_ctypes</code><sup id="fnref:6"><a href="#fn:6" role="doc-noteref">6</a></sup> etc., and even
<strong>external packages</strong> that depend on simple C extensions, like
<a href="https://github.com/python-greenlet/greenlet/"><code>greenlet</code></a>. It all boils down to writing the correct recipe in
<code>Modules/Setup</code>, ensuring the necessary static libraries are available, and
checking that the glue code around the imports works correctly<sup id="fnref:7"><a href="#fn:7" role="doc-noteref">7</a></sup>.</p><p>The final annoyance with the stdlib python files was that I had to copy the
folder containing them alongside <code>python.com</code>, but this got solved because
Cosmopolitan allows the APE to be used as a valid ZIP file. I just zipped up
<code>Lib/</code> into the APE, <em>added <code>python.com</code> itself as an entry in <code>sys.path</code></em>, and
Python’s own <a href="https://docs.python.org/2.7/library/zipimport.html"><code>zipimport</code> package</a> handled the rest.</p><h2 id="using-pip-and-external-packages">Using <code>pip</code> and external packages</h2><p>After compiling most of the standard library packages, I still couldn’t get
<code>ensurepip</code> to work, because it relied on threads, and the standard <code>threading</code>
module in Python would just raise an <code>ImportError</code> if it could not find the
<code>_thread</code> C extension. The fix was present within the stdlib: there is a module
called <code>_dummy_thread</code>, which spoofs <code>_thread</code> so that <code>threading</code> doesn’t
complain<sup id="fnref:8"><a href="#fn:8" role="doc-noteref">8</a></sup>. After this, I was able to run <code>ensurepip</code> to install
<code>pip</code> and <code>setuptools</code> in <code>Lib/site-packages</code>.</p><p>However, running <code>python.com -m pip install</code> doesn’t work because the Python APE
doe not currently have SSL support. I tried providing <code>http://pypi.org/simple</code>
as the index URL but <code>pip</code> was adamant in not letting me get my way.</p><p>I didn’t want to figure out how to add SSL support to the APE (I expect it
should be possible<sup id="fnref:9"><a href="#fn:9" role="doc-noteref">9</a></sup>), so I just cheated and downloaded the
packages manually. The arrangement to add packages works like this:</p><div><pre tabindex="0"><code data-lang="sh"><span><span>mkdir -p Lib/site-packages
</span></span><span><span>
</span></span><span><span><span># specify python version to pip if necessary</span>
</span></span><span><span>/usr/bin/python2 -m pip download flask -t .
</span></span><span><span>
</span></span><span><span><span># wheels are just ZIPs, use unzip if pip complains</span>
</span></span><span><span>./python.com -m pip install flask*.whl -t ./Lib/site-packages
</span></span><span><span>
</span></span><span><span>zip -qr ./python.com ./Lib/site-packages/
</span></span><span><span>rm -rf ./*.whl ./Lib/site-packages/
</span></span><span><span>
</span></span><span><span>./python.com -m flask --version
</span></span></code></pre></div><p>Of course, you would have recompile the APE if you wanted to add any C
extensions.</p><h2 id="closing-notes">Closing Notes</h2><p>It is really convenient to have the same application work on
Linux/Windows/MacOS, but the techniques I have seen/used all have tradeoffs:
either for the developer in terms of design, testing, and safety/consistency, or
for the user in terms on application size and performance.</p><p>Cosmopolitan Libc does come with some tradeoffs as well (static compilation, C
codebases, no multithreading (<strong>Update 2022-07-27:</strong>, no multithreading <em>yet</em>,
the pthreads API takes a while to fill)), but I think it is amazing that I can
send a <code>python.com</code> executable of a few megabytes as a zip file to someone, have
them run it without worrying about the OS, and provide them a simple webapp with
a backend that works even without an internet connection.</p><p>This successful <code>python.com</code> experiment unlocks many interesting directions:</p><ul><li><p>Is it possible to tune the performance of the <code>python.com</code> APE? I don’t expect
it to get anywhere close to <a href="https://redbean.dev/"><code>redbean</code></a>, but some speed
improvements would be nice because Python web frameworks are established and
easy to use.</p></li><li><p>Is there room for a custom build system to produce a single-file
size-optimized <code>python.com</code> APE webapp? We saw that it is possible to add C
extensions, and even regular packages into the executable via <code>zip</code>. If there
is a dependency resolver that accounts for stdlib imports, which then produces
a <code>Modules/Setup</code> or some similar build script to compile extensions and add
only the necessary libraries, that would be awesome<sup id="fnref:10"><a href="#fn:10" role="doc-noteref">10</a></sup>. (<strong>2022-07-27:</strong>
now the Cosmopolitan monorepo builds <code>python.com</code> via a
<a href="https://github.com/jart/cosmopolitan/blob/master/third_party/python/python.mk">Makefile</a>,
checks import dependencies at link-time, runs the Python test suite, and adds
all files to the APE internal ZIP store ready-to-use).</p></li><li><p>Regarding python packages with C extensions, the build process for adding them
to the APE is rather unwieldy (<strong>2022-07-27</strong> adding C extensions to the APE
is much more elegant now because of the Cosmopolitan monorepo, see
<a href="https://github.com/ahgamut/cosmopolitan/tree/import-mod-test">this</a>) because
of all the manual changes involved. Is there a way to automatically patch the
imports, or better yet, compile Python C extensions as shared libraries with
Cosmopolitan?</p></li><li><p>I’ve managed to compile Lua, QuickJS, and now Python2.7 and
<a href="https://github.com/ahgamut/cpython/tree/cosmo_py36">Python3.6</a>. Are there web-friendly languages that would benefit
more from a Cosmopolitan build? Maybe PHP, or Ruby, or even Go if the details
work out? Remains to be seen.</p></li></ul><hr></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tesla to lay off more than 10% of its staff (186 pts)]]></title>
            <link>https://www.reuters.com/business/autos-transportation/tesla-lay-off-more-than-10-its-staff-electrek-reports-2024-04-15/</link>
            <guid>40038549</guid>
            <pubDate>Mon, 15 Apr 2024 10:06:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/business/autos-transportation/tesla-lay-off-more-than-10-its-staff-electrek-reports-2024-04-15/">https://www.reuters.com/business/autos-transportation/tesla-lay-off-more-than-10-its-staff-electrek-reports-2024-04-15/</a>, See on <a href="https://news.ycombinator.com/item?id=40038549">Hacker News</a></p>
Couldn't get https://www.reuters.com/business/autos-transportation/tesla-lay-off-more-than-10-its-staff-electrek-reports-2024-04-15/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[RFC: Banning "AI"-backed (LLM/GPT/whatever) contributions to Gentoo (159 pts)]]></title>
            <link>https://www.mail-archive.com/gentoo-dev@lists.gentoo.org/msg99042.html</link>
            <guid>40038372</guid>
            <pubDate>Mon, 15 Apr 2024 09:30:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.mail-archive.com/gentoo-dev@lists.gentoo.org/msg99042.html">https://www.mail-archive.com/gentoo-dev@lists.gentoo.org/msg99042.html</a>, See on <a href="https://news.ycombinator.com/item?id=40038372">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
<!--X-Body-of-Message-->
<pre>Hello,

Given the recent spread of the "AI" bubble, I think we really need to
look into formally addressing the related concerns.  In my opinion,
at this point the only reasonable course of action would be to safely
ban "AI"-backed contribution entirely.  In other words, explicitly
forbid people from using ChatGPT, Bard, GitHub Copilot, and so on, to
create ebuilds, code, documentation, messages, bug reports and so on for
use in Gentoo.</pre><pre>
Just to be clear, I'm talking about our "original" content.  We can't do
much about upstream projects using it.


Rationale:

1. Copyright concerns.  At this point, the copyright situation around
generated content is still unclear.  What's pretty clear is that pretty
much all LLMs are trained on huge corpora of copyrighted material, and
all fancy "AI" companies don't give shit about copyright violations.
In particular, there's a good risk that these tools would yield stuff we
can't legally use.

2. Quality concerns.  LLMs are really great at generating plausibly
looking bullshit.  I suppose they can provide good assistance if you are
careful enough, but we can't really rely on all our contributors being
aware of the risks.

3. Ethical concerns.  As pointed out above, the "AI" corporations don't
give shit about copyright, and don't give shit about people.  The AI
bubble is causing huge energy waste.  It is giving a great excuse for
layoffs and increasing exploitation of IT workers.  It is driving
enshittification of the Internet, it is empowering all kinds of spam
and scam.


Gentoo has always stood out as something different, something that
worked for people for whom mainstream distros were lacking.  I think
adding "made by real people" to the list of our advantages would be
a good thing — but we need to have policies in place, to make sure shit
doesn't flow in.

Compare with the shitstorm at:
<a rel="nofollow" href="https://github.com/pkgxdev/pantry/issues/5358">https://github.com/pkgxdev/pantry/issues/5358</a>

-- 
Best regards,
Michał Górny

</pre>
<p><strong><a href="https://www.mail-archive.com/gentoo-dev@lists.gentoo.org/msg99042/signature.asc"><img src="https://www.mail-archive.com/attachment.png" alt="Attachment:" width="27" height="28"></a>
<a href="https://www.mail-archive.com/gentoo-dev@lists.gentoo.org/msg99042/signature.asc">signature.asc</a></strong><br>
<em>Description:</em> This is a digitally signed message part</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Tiny Ultrabright Laser That Can Melt Steel (202 pts)]]></title>
            <link>https://spectrum.ieee.org/pcsel</link>
            <guid>40038251</guid>
            <pubDate>Mon, 15 Apr 2024 09:02:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://spectrum.ieee.org/pcsel">https://spectrum.ieee.org/pcsel</a>, See on <a href="https://news.ycombinator.com/item?id=40038251">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>This 3-mm PCSEL is packaged and ready to fire.</p><div data-headline="The Tiny Ultrabright Laser that Can Melt Steel" data-elid="2667720149" data-post-url="https://spectrum.ieee.org/pcsel" data-authors="Susumu Noda, Masahiro Yoshida, Takuya Inoue" data-page-title="The Tiny Ultrabright Laser that Can Melt Steel - IEEE Spectrum"><p><strong>In 2016, the Japanese</strong> government announced a plan for the emergence of a new kind of society. Human civilization, the proposal explained, had begun with hunter-gatherers, passed through the agrarian and industrial stages, and was fast approaching the end of the information age. As then Prime Minister Shinzo Abe put it, “We are now witnessing the opening of the fifth chapter.”
</p><p>
	This chapter, called 
	<a href="https://www8.cao.go.jp/cstp/english/society5_0/index.html" target="_blank">Society 5.0</a>, would see made-on-demand goods and robot <a href="https://spectrum.ieee.org/stretch-assistive-robot" target="_self">caretakers</a>, <a href="https://spectrum.ieee.org/tag/autonomous-vehicles" target="_self">taxis</a>, and tractors. Many of the innovations that will enable it, like <a href="https://spectrum.ieee.org/topic/artificial-intelligence/" target="_self">artificial intelligence</a>, might be obvious. But there is one key technology that is easy to overlook: <a href="https://spectrum.ieee.org/tag/lasers" target="_self">lasers</a>.
</p><p>
	The lasers of Society 5.0 will need to meet several criteria. They must be small enough to fit inside everyday devices. They must be low-cost so that the average metalworker or car buyer can afford them—which means they must also be simple to manufacture and use energy efficiently. And because this dawning era will be about mass customization (rather than mass production), they must be highly controllable and adaptive.
</p><p>
	Semiconductor lasers would seem the perfect candidates, except for one fatal flaw: They are much too dim. Laser brightness—defined as optical power per unit area per unit of solid angle—is a measure of how intensely light can be focused as it exits the laser and how narrowly it diverges as it moves away. The threshold for materials work—cutting, welding, drilling—is on the order of 1 gigawatt per square centimeter per steradian (GW/cm<sup>2</sup>/sr). However, the brightness of even the brightest commercial semiconductor lasers falls far below that.
</p><p>
	Brightness is also important for light detection and ranging (lidar) systems in autonomous robots and vehicles. These systems don’t require metal-melting power, but to make precise measurements from long distances or at high speeds, they do require tightly focused beams. Today’s top-line lidar systems employ more than 100 semiconductor lasers whose inherently divergent beams are collimated using a complicated setup of lenses installed by hand. This complexity drives up cost, putting lidar-navigated cars out of reach for most consumers.
</p><p><img alt="An image of circle and squares on a gold background. " data-rm-shortcode-id="9b3aa53d0e32071d5ad9ead0354eeaf7" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/an-image-of-circle-and-squares-on-a-gold-background.jpg?id=51959582&amp;width=980" height="1402" id="4d3c5" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/an-image-of-circle-and-squares-on-a-gold-background.jpg?id=51959582&amp;width=980" width="2000"><small placeholder="Add Photo Caption...">Multiple 3-millimeter-wide photonic-crystal semiconductor lasers are built on a semiconductor wafer. </small><small placeholder="Add Photo Credit...">Susumu Noda</small></p><p>
	Of course, other types of lasers can produce ultrabright beams. Carbon dioxide and 
	<a href="https://spectrum.ieee.org/laser-weapons" target="_self">fiber lasers</a>, for instance, dominate the market for industrial applications. But compared to speck-size semiconductor lasers, they are enormous. A high-power CO<sub>2</sub> laser can be as large as a refrigerator. They are also more expensive, less energy efficient, and harder to control.
</p><p>
	Over the past couple of decades, our team at Kyoto University has been developing a new type of semiconductor laser that blows through the brightness ceiling of its conventional cousins. We call it the 
	<a href="https://spectrum.ieee.org/tag/photonic-crystals" target="_self">photonic-crystal</a> surface-emitting laser, or PCSEL (pronounced “pick-cell”). <a href="https://spectrum.ieee.org/photonic-crystal-lasers" target="_self">Most recently</a>, we fabricated a PCSEL that can be <a href="https://doi.org/10.1038/s41586-023-06059-8" target="_blank">as bright as gas and fiber lasers</a>—bright enough to quickly slice through steel—and proposed a design for one that is 10 to 100 times as bright. Such devices could revolutionize the manufacturing and automotive industries. If we, our collaborating companies, and research groups around the world—such as at National Yang Ming Chiao Tung University, in Hsinchu, Taiwan; the University of Texas at Arlington; and the University of Glasgow—can push PCSEL brightness further still, it would even open the door to exotic applications like inertial-confinement nuclear fusion and light propulsion for spaceflight.
</p><h2>Hole-y Grail </h2><p>
	The magic of PCSELs arises from their unique construction. Like any semiconductor laser, a PCSEL consists of a thin layer of light-generating material, known as the active layer, sandwiched between cladding layers. In fact, for the sake of orientation, it’s helpful to picture the device as a literal sandwich—let’s say a slice of ham between two pieces of bread.
</p><p>
	Now imagine lifting the sandwich to your mouth, as if you are about to take a bite. If your sandwich were a conventional semiconductor laser, its beam would radiate from the far edge, away from you. This beam is created by passing a current through a stripe in the active “ham” layer. The excited ham atoms spontaneously release photons, which stimulate the release of identical photons, amplifying the light. Mirrors on each end of the stripe then repeatedly reflect these waves; because of interference and loss, only certain frequencies and spatial patterns—or modes—are sustained. When the gain of a mode exceeds losses, the light emerges in a coherent beam, and the laser is said to oscillate in that mode.
</p><p>
	The problem with this standard stripe approach is that it is very difficult to increase output power without sacrificing beam quality. The power of a semiconductor laser is limited by its emission area because extremely concentrated light can cause catastrophic damage to the semiconductor. You can deliver more power by widening the stripe, which is the strategy used for so-called broad-area lasers. But a wider stripe also gives room for the oscillating light to take zigzag sideways paths, forming what are called higher-order lateral modes.
</p><div id="rebelltitem2" data-id="2" data-reload-ads="false" data-is-image="False" data-href="https://spectrum.ieee.org/pcsel/particle-2" data-basename="particle-2" data-post-id="2667720149" data-published-at="1712754271" data-use-pagination="False"><p>You can visualize the intesity pattern of a lateral mode by imagining that you’ve placed a screen in the cross section of the output beam. Light bouncing back and forth perfectly along the length of the stripe forms the fundamental (zero-order) mode, which has a single peak of intensity in the center of the beam. The first-order mode, from light reflecting at an angle to the edge of the sandwich, has two peaks to the right and left; the second-order mode, from a smaller angle, has a row of three peaks, and so on. For each higher-order mode, the laser effectively operates as a combination of smaller emitters whose narrower apertures cause the beam to diverge rapidly. The resulting mixture of lateral modes therefore makes the laser light spotty and diffuse.</p><p>Those troublesome modes are why the brightness of conventional semiconductor lasers maxes out around 100 MW/cm<sup>2</sup>/sr. PCSELs deal with unwanted modes by adding another layer inside the sandwich: the “Swiss cheese” layer. This special extra layer is a semiconductor sheet stamped with a two-dimensional array of nanoscale holes. By tuning the spacing and shape of the holes, we can control the propagation of light inside the laser so that it oscillates in only the fundamental mode, even when the emission area is expanded. The result is a beam that can be <em>both</em> powerful and narrow—that is, bright.</p><p>Because of their internal physics, PCSELs operate in a completely different way from edge-emitting lasers. Instead of pointing away from you, for instance, the beam from your PCSEL sandwich would now radiate upward, through the top slice of bread. To explain this unusual emission, and why PCSELs can be orders of magnitude brighter than other semiconductor lasers, we must first describe the material properties of the Swiss cheese—in actuality, a fascinating structure called a photonic crystal.</p><h2>How Photonic Crystals Work</h2><p>Photonic crystals control the flow of light in a way that’s similar to how <a href="https://spectrum.ieee.org/topic/semiconductors/">semiconductors</a> control the flow of electrons. Instead of atoms, however, the lattice of a photonic crystal is sculpted out of larger entities—such as holes, cubes, or columns—arranged such that the refractive index changes periodically on the scale of a wavelength of light. Although the quest to artificially construct these marvelous materials began less than 40 years ago, scientists have since learned that they already exist in nature. Opals, peacock feathers, and some butterfly wings, for example, all owe their brilliant iridescence to the intricate play of light within naturally engineered photonic crystals.</p><p>Understanding how light moves in a photonic crystal is fundamental to PCSEL design. We can predict this behavior by studying the crystal’s photonic band structure, which is analogous to the electronic band structure of a semiconductor. One way to do that is to plot the relationship between frequency and wavenumber—the number of wave cycles that fit within one unit cell of the crystal’s lattice.</p></div><div id="rebelltitem5" data-id="5" data-reload-ads="false" data-is-image="False" data-href="https://spectrum.ieee.org/pcsel/particle-5" data-basename="particle-5" data-post-id="2667720149" data-published-at="1712778266" data-use-pagination="False"><p>Consider, for example, a simple one-dimensional photonic crystal formed by alternating ribbons of glass and air. Light entering the crystal will refract through and partially reflect off each interface, producing overlapping beams that reinforce or weaken one another according to the light’s wavelength and direction. Most waves will travel through the material. But at certain points, called singularity points, the reflections combine perfectly with the incident wave to form a standing wave, which does not propagate. In this case, a singularity occurs when a wave undergoes exactly half a cycle from one air ribbon to the next. There are other singularities wherever a unit cell is an integer multiple of half the wavelength.</p><p>One of us (Susumu Noda) began experimenting with lasers containing photonic crystal-like structures before these materials even had a name. In the mid 1980s, while at Mitsubishi Electric Corporation, he studied a semiconductor laser called a <a href="https://en.wikipedia.org/wiki/Distributed-feedback_laser" target="_blank">distributed feedback (DFB) laser</a>. A DFB laser is a basic stripe laser with an extra internal layer containing regularly spaced grooves filled with matter of a slightly different refractive index. This periodic structure behaves somewhat like the 1D photonic crystal described above: It repeatedly reflects light at a single wavelength, as determined by the groove spacing, such that a standing wave emerges. Consequently, the laser oscillates at only that wavelength, which is critical for long-haul fiber-optic transmission and high-sensitivity optical sensing.</p></div><div id="rebelltitem7" data-id="7" data-reload-ads="false" data-is-image="False" data-href="https://spectrum.ieee.org/pcsel/particle-7" data-basename="particle-7" data-post-id="2667720149" data-published-at="1712932146" data-use-pagination="False"><p>As the Mitsubishi team demonstrated, a DFB laser can be enticed to perform other tricks. For instance, when the team set the groove spacing equal to the lasing wavelength in the device, some of the oscillating light diffracted upward, causing the laser to shine not only from the tiny front edge of its active stripe but also from the stripe’s top. However, this surface beam fanned wildly due to the narrow width of the stripe, which also made it difficult to increase the output power.</p><p>To Noda’s disappointment, his team’s attempts to widen the stripe—and therefore increase brightness—without causing other headaches were unsuccessful. Nevertheless, those early failures planted an intriguing idea: What if laser light could be controlled in <em>two</em> dimensions instead of one?</p><h2>Boosting Brightness</h2><p>Later, at Kyoto University, Noda led research into 2D and 3D photonic crystals just as the field was coming into being. In 1998, his team built the first PCSEL, and we have since honed the design for various functionalities, including high brightness.</p><p>In a basic PCSEL, the photonic-crystal layer is a 2D square lattice: Each unit cell is a square delineated by four holes. Although the band structure of a 2D photonic crystal is more complicated than that of a 1D crystal, it likewise reveals singularities where we expect standing waves to form. For our devices, we have made use of the singularity that occurs when the distance between neighboring holes is one wavelength. A gallium arsenide laser operating at 940 nanometers, for example, has an internal wavelength of around 280 nm (considering refractive index and temperature). So the holes in a basic gallium arsenide PCSEL would be set about 280 nm apart.</p><p>The operating principle is this: When waves of that length are generated in the active layer, the holes in the neighboring photonic-crystal layer act like tiny mirrors, bending the light both backward and sideways. The combined effect of multiple such diffractions creates a 2D standing wave, which is then amplified by the active layer. Some of this oscillating light also diffracts upward and downward and leaks out the laser’s top, producing a surface beam of a single wavelength.</p><p>A key reason this design works is the large refractive index contrast between the semiconductor and the air inside the holes. As Noda discovered while creating the first device, PCSELs with low refractive index contrasts, like those of DFB lasers, do not oscillate coherently. Also unlike a DFB laser, a PCSEL’s surface emission area is broad and usually round. It can therefore produce a higher quality beam with much lower divergence.</p></div><p>
	In 2014, our group reported that a PCSEL with a square lattice of triangular holes and an emission area of 200 by 200 μm could operate continuously at around 1 watt while maintaining a spotlike beam that diverged only about 2 degrees. Compared with conventional semiconductor lasers, whose beams typically diverge more than 30 degrees, this performance was remarkable. The next step was to boost optical power, for which we needed a larger device. But here we hit a snag.
	<br></p><p>
	According to our theoretical models, PCSELs using the single-lattice design could not grow larger than about 200 μm without inviting pesky higher-order lateral modes. In a PCSEL, multiple modes form when the intensity of a standing wave can be distributed in multiple ways due to the interference pattern created by repeated diffractions. In the fundamental (read: desirable) mode, the intensity distribution resembles Mount Fuji, with most of the oscillating light concentrated in the center of the lattice. Each higher-order mode, meanwhile, has two, three, four, or more Mount Fujis. So when the laser’s emission area is relatively small, the intensity peaks of the higher-order modes sit near the lattice’s periphery. Most of their light therefore leaks out of the sides of the device, preventing these modes from oscillating and contributing to the laser beam. But as with conventional lasers, enlarging the emission area makes space for more modes to oscillate.
</p><p>
	To solve that problem, we added another set of holes to the photonic-crystal layer, creating a double lattice. In our most successful version, a square lattice of circular holes is shifted a quarter wavelength from a second square lattice of elliptical holes. As a result, some of the diffracting light inside the crystal interferes destructively. These cancellations cause the intensity peaks of the lateral modes to weaken and spread. So when we expand the laser’s emission area, light from the higher-order modes still leaks heavily and does not oscillate.
</p><p>
	Using that approach, we fabricated a PCSEL with a round emission area 1 millimeter in diameter and showed it could produce a 10-W beam under continuous operation. Diverging just one-tenth of a degree, the beam was even slenderer and more collimated than its 200-μm predecessor and more than three times as bright as is possible with a conventional semiconductor laser. Our device also had the advantage of oscillating in a single mode, of course, which conventional lasers of comparable size cannot do.
</p><p>
	Pushing PCSEL brightness higher required further innovation. At larger diameters, the double-lattice approach alone does not sufficiently suppress higher-order modes, and so they oscillate yet again. We had observed, however, that these modes depart the laser slightly askew, which drew our attention to the backside reflector. (Picture a sheet of tinfoil lining the bottom of your ham and Swiss sandwich.)
</p><p><span data-rm-shortcode-id="41d28908a4e9c84be25c2d29f21a627f"><iframe frameborder="0" height="auto" type="lazy-iframe" scrolling="no" data-runner-src="https://www.youtube.com/embed/SFXmFNTviRI?rel=0" width="100%"></iframe></span><small placeholder="Add Photo Caption...">This 50-watt PCSEL is bright enough to slice through steel.</small><small placeholder="Add Photo Credit...">
	Susumu Noda
	</small></p><p>
	In previous device generations, this reflector had served simply to bounce downward-diffracted light up and out from the laser’s emitting surface. By adjusting its position (as well as the spacing and shape of the photonic-crystal holes), we found we could control the reflections so that they interfere in a useful way with the 2D standing waves oscillating within the photonic-crystal layer. This interference, or coupling, essentially induces the departing waves to lose some of their energy. The more askew a departing wave, the more light is lost. And poof! No more higher-order modes.
</p><p>
	That is how, in 2023, we developed a PCSEL whose brightness of 1 GW/cm<sup>2</sup>/sr rivals that of gas and fiber lasers. With a 3-mm emission diameter, it could lase continuously at up to 50 W while sustaining a beam that diverged a minuscule one-twentieth of a degree. We even used it to cut through steel. As the bright, beautiful beam carved a disc out of a metal plate 100 μm thick, our entire lab huddled around, watching in amazement.
</p><h2>More Powerful PCSELs </h2><p>
	As impressive as the steel-slicing demonstration was, PCSELs must be even more powerful to compete in the industrial marketplace. Manufacturing automobile parts, for instance, requires optical powers on the order of kilowatts.
</p><p>
	It should be fairly straightforward to build a PCSEL that can handle that kind of power—either by assembling an array of nine 3-mm PCSELs or by expanding the emission area of our current device to 1 cm. At that size, higher-order modes would once again emerge, reducing the beam quality. But because they would still be as bright as high-power gas and fiber lasers, such kilowatt-class PCSELs could begin to usurp their bulkier competitors.
</p><p>
	To be truly game-changing, 1-cm PCSELs would need to level up by suppressing those higher-order modes. We have already devised a way to do that by fine-tuning the photonic-crystal structure and the position of the reflector. Although we have not yet tested this new recipe in the lab, our theoretical models suggest that it could raise PCSEL brightness as high as 10 to 100 GW/cm<sup>2</sup>/sr. Just imagine the variety of unique and intricate products that could be made when such concentrated light can be wielded from a tiny package.
</p><p>
	Especially for those high-power applications, we’ll need to improve the laser’s energy efficiency and thermal management. Even without any optimization, the “wall plug” efficiency of PCSELs is already at 30 to 40 percent, exceeding most carbon-dioxide and fiber lasers. What’s more, we’ve found a path we think could lead to 60 percent efficiency. And as for thermal management, the water-cooling technology we’re using in the lab today should be sufficient for a 1,000-W, 1-cm PCSEL.
</p><p>
	High-brightness PCSELs could also be used to make smaller and more affordable sensor systems for self-driving cars and robots. Recently, we built a lidar system using a 500-μm PCSEL. Under pulsed operation, we ran it at about 20 W and got a terrifically bright beam. Even at 30 meters, the spot size was only 5 cm. Such high resolution is unheard of for a compact lidar system without external lenses. We then mounted our prototypes—which are roughly the size of a webcam—on robotic carts and programmed them to follow us and one another around the engineering building.
</p><p>
	In a separate line of work, we have shown that PCSELs can emit multiple beams that can be controlled electronically to point in different directions. This on-chip beam steering is achieved by varying the position and size of the holes in the photonic-crystal layer. Ultimately, it could replace mechanical beam steering in lidar systems. If light detectors were also integrated on the same chip, these all-electronic navigation systems would be seriously miniature and low-cost.
</p><p>
	Although it will be challenging, we eventually hope to make 3-cm lasers with output powers exceeding 10 kilowatts and beams shining up to 1,000 GW/cm<sup>2</sup>/sr—brighter than any laser that exists today. At such extreme brightness, PCSELs could replace the huge, electricity-hungry CO<sub>2</sub> lasers used to generate plasma pulses for extreme ultraviolet lithography machines, making chip manufacturing much more efficient. They could similarly advance efforts to realize nuclear fusion, a process that involves firing trillions of watts of laser power at a pea-size fuel capsule. Exceptionally bright lasers also raise the possibility of light propulsion for spaceflight. Instead of taking thousands of years to reach faraway stars, a probe boosted by light could make the journey in only a few decades.
</p><p>
	It may be a cliché, but we cannot think of a more apt prediction for the next chapter of human ingenuity: The future, as they say, is bright. 
	<span></span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Beautifying Org Mode in Emacs (2018) (161 pts)]]></title>
            <link>https://zzamboni.org/post/beautifying-org-mode-in-emacs/</link>
            <guid>40037844</guid>
            <pubDate>Mon, 15 Apr 2024 07:32:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://zzamboni.org/post/beautifying-org-mode-in-emacs/">https://zzamboni.org/post/beautifying-org-mode-in-emacs/</a>, See on <a href="https://news.ycombinator.com/item?id=40037844">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
        <p>Over the last few months, I have used <a href="https://orgmode.org/">org-mode</a> more and more for writing and programming in Emacs. I love its flexibility and power, and it is the first <a href="http://www.howardism.org/Technical/Emacs/literate-programming-tutorial.html">literate programming</a> tool which “feels right”, and I have been able to stick with it for a longer period of time than in my previous attempts.</p>
<p>Recently I started thinking about how I could make my editing environment more visually appealing. I am in general very happy with my Emacs' appearance. I use the <del><a href="https://github.com/Greduan/emacs-theme-gruvbox">Gruvbox theme</a></del> (in the meantime I have switched to the light <a href="https://github.com/nashamri/spacemacs-theme">Spacemacs theme</a>) and org-mode has very decent syntax highlighting. But as I write more and more prose in Emacs these days, I started thinking it might be nice to edit text in more visually-appealing fonts, including using a proportional font, which makes regular prose much more readable. I would like to share with you what I learned and my current Emacs configuration.</p>
<p>In the end, you can have an Emacs setup for editing org documents which looks very nice, with proportional fonts for text and monospaced fonts for code blocks, examples and other elements. To wet your appetite, here is what a fragment of my <a href="https://github.com/zzamboni/dot-emacs/blob/master/init.org">init.org</a> file looked like with the Gruvbox theme:</p>
<figure><a href="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-init-propfonts.png"><img src="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-init-propfonts.png"></a>
</figure>

<p>And this is how it looks now with the light Spacemacs theme:</p>
<figure><img src="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-init-propfonts-light.png">
</figure>

<h2 id="step-1-configure-faces-for-org-headlines-and-lists">Step 1: Configure faces for Org headlines and lists</h2>
<p>My first step was to make  org-mode much more readable by using different fonts for headings, hiding some of the markup, and improving list bullets. I took these settings originally from Howard Abrams' excellent <a href="http://www.howardism.org/Technical/Emacs/orgmode-wordprocessor.html">Org as a Word Processor</a> article, although I have tweaked them a bit.</p>
<p>First, we ask org-mode to hide the emphasis markup (e.g. <code>/.../</code> for italics, <code>*...*</code> for bold, etc.):</p>
<div><pre><code data-lang="emacs-lisp">  <span>(</span><span>setq</span> <span>org-hide-emphasis-markers</span> <span>t</span><span>)</span>
</code></pre></div><p>Then, we set up a font-lock substitution for list markers (I always use “<code>-</code>” for lists, but you can change this if you want) by replacing them with a centered-dot character:</p>
<div><pre><code data-lang="emacs-lisp">  <span>(</span><span>font-lock-add-keywords</span> <span>'org-mode</span>
                          <span>'</span><span>((</span><span>"^ *\\([-]\\) "</span>
                             <span>(</span><span>0</span> <span>(</span><span>prog1</span> <span>()</span> <span>(</span><span>compose-region</span> <span>(</span><span>match-beginning</span> <span>1</span><span>)</span> <span>(</span><span>match-end</span> <span>1</span><span>)</span> <span>"•"</span><span>))))))</span>
</code></pre></div><p>The <code>org-bullets</code> package replaces all headline markers with different Unicode bullets:</p>
<div><pre><code data-lang="emacs-lisp">  <span>(</span><span>use-package</span> <span>org-bullets</span>
    <span>:config</span>
    <span>(</span><span>add-hook</span> <span>'org-mode-hook</span> <span>(</span><span>lambda</span> <span>()</span> <span>(</span><span>org-bullets-mode</span> <span>1</span><span>))))</span>
</code></pre></div><p>Finally, we set up a nice proportional font, in different sizes, for the headlines. The fonts listed will be tried in sequence, and the first one found will be used. My current favorite is <a href="https://edwardtufte.github.io/et-book/">ET Book</a>, feel free to add your own:</p>
<div><pre><code data-lang="emacs-lisp">  <span>(</span><span>let*</span> <span>((</span><span>variable-tuple</span>
          <span>(</span><span>cond</span> <span>((</span><span>x-list-fonts</span> <span>"ETBembo"</span><span>)</span>         <span>'</span><span>(</span><span>:font</span> <span>"ETBembo"</span><span>))</span>
                <span>((</span><span>x-list-fonts</span> <span>"Source Sans Pro"</span><span>)</span> <span>'</span><span>(</span><span>:font</span> <span>"Source Sans Pro"</span><span>))</span>
                <span>((</span><span>x-list-fonts</span> <span>"Lucida Grande"</span><span>)</span>   <span>'</span><span>(</span><span>:font</span> <span>"Lucida Grande"</span><span>))</span>
                <span>((</span><span>x-list-fonts</span> <span>"Verdana"</span><span>)</span>         <span>'</span><span>(</span><span>:font</span> <span>"Verdana"</span><span>))</span>
                <span>((</span><span>x-family-fonts</span> <span>"Sans Serif"</span><span>)</span>    <span>'</span><span>(</span><span>:family</span> <span>"Sans Serif"</span><span>))</span>
                <span>(</span><span>nil</span> <span>(</span><span>warn</span> <span>"Cannot find a Sans Serif Font.  Install Source Sans Pro."</span><span>))))</span>
         <span>(</span><span>base-font-color</span>     <span>(</span><span>face-foreground</span> <span>'default</span> <span>nil</span> <span>'default</span><span>))</span>
         <span>(</span><span>headline</span>           <span>`</span><span>(</span><span>:inherit</span> <span>default</span> <span>:weight</span> <span>bold</span> <span>:foreground</span> <span>,</span><span>base-font-color</span><span>)))</span>

    <span>(</span><span>custom-theme-set-faces</span>
     <span>'user</span>
     <span>`</span><span>(</span><span>org-level-8</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span><span>))))</span>
     <span>`</span><span>(</span><span>org-level-7</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span><span>))))</span>
     <span>`</span><span>(</span><span>org-level-6</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span><span>))))</span>
     <span>`</span><span>(</span><span>org-level-5</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span><span>))))</span>
     <span>`</span><span>(</span><span>org-level-4</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span> <span>:height</span> <span>1.1</span><span>))))</span>
     <span>`</span><span>(</span><span>org-level-3</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span> <span>:height</span> <span>1.25</span><span>))))</span>
     <span>`</span><span>(</span><span>org-level-2</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span> <span>:height</span> <span>1.5</span><span>))))</span>
     <span>`</span><span>(</span><span>org-level-1</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span> <span>:height</span> <span>1.75</span><span>))))</span>
     <span>`</span><span>(</span><span>org-document-title</span> <span>((</span><span>t</span> <span>(</span><span>,@</span><span>headline</span> <span>,@</span><span>variable-tuple</span> <span>:height</span> <span>2.0</span> <span>:underline</span> <span>nil</span><span>))))))</span>
</code></pre></div><h2 id="step-2-setting-up-variable-pitch-and-fixed-pitch-faces">Step 2: Setting up <code>variable-pitch</code> and <code>fixed-pitch</code> faces</h2>
<p>My next realization was that Emacs already includes support for displaying proportional fonts with the <code>variable-pitch-mode</code> command. You can try it right now: type <kbd>M-x</kbd> <code>variable-pitch-mode</code> and your current buffer will be shown in a proportional font (you can disable it by running <code>variable-pitch-mode</code> again). On my Mac the default variable-pitch font is Helvetica. You can change the font used by configuring the <code>variable-pitch</code> face. You can do this interactively through the customize interface by typing <kbd>M-x</kbd> <code>customize-face</code> <code>variable-pitch</code>. At the moment I like <del><a href="https://en.wikipedia.org/wiki/Source%5FSans%5FPro">Source Sans Pro</a></del> <a href="https://edwardtufte.github.io/et-book/">ET Book</a>.</p>
<p>As a counterpart to <code>variable-pitch</code>, you need to configure the <code>fixed-pitch</code> face for the text that needs to be shown in a monospaced font. My first instinct was to inherit this from my <code>default</code> face (I use <del><a href="https://en.wikipedia.org/wiki/Inconsolata">Inconsolata</a></del> <a href="https://github.com/tonsky/FiraCode">Fira Code</a>), but it seems that this gets remapped when <code>variable-pitch-mode</code> is active, so I had to configure it by hand with the same font as my <code>default</code> face.</p>
<p>What I would suggest is that you customize the fonts interactively, as you can see live how it looks on your text. You can make the configuration permanent from the customize screen as well. If you want to explicitly set them in your configuration file, you can do it with the <code>custom-theme-set-faces</code> function, like this:</p>
<div><pre><code data-lang="emacs-lisp">  <span>(</span><span>custom-theme-set-faces</span>
   <span>'user</span>
   <span>'</span><span>(</span><span>variable-pitch</span> <span>((</span><span>t</span> <span>(</span><span>:family</span> <span>"ETBembo"</span> <span>:height</span> <span>180</span> <span>:weight</span> <span>thin</span><span>))))</span>
   <span>'</span><span>(</span><span>fixed-pitch</span> <span>((</span><span>t</span> <span>(</span> <span>:family</span> <span>"Fira Code Retina"</span> <span>:height</span> <span>160</span><span>)))))</span>
</code></pre></div><p><strong>Tip #1:</strong> you can get the LISP expression for your chosen font (the part that looks like <code>((t (:family ... )))</code> from the <code>customize-face</code> screen - open the “State” button and choose the “Show Lisp Expression” menu item.</p>
<p><strong>Tip #2</strong>: if you use a Mac, you can get the value to use for the <code>:family</code> attribute by looking at the “Family” attribute in the Font Book application for the font you want to use.</p>
<p>You can enable <code>variable-pitch-mode</code> automatically for org buffers by setting up a hook like this:</p>
<div><pre><code data-lang="emacs-lisp">  <span>(</span><span>add-hook</span> <span>'org-mode-hook</span> <span>'variable-pitch-mode</span><span>)</span>
</code></pre></div><h2 id="step-3-use-long-lines-and-visual-line-mode">Step 3: Use long lines and <code>visual-line-mode</code></h2>
<p>One thing you will notice right away with proportional fonts is that filling paragraphs no longer makes sense. This is because <code>fill-paragraph</code> works based on the number of characters in a line, but with a proportional font, characters have different widths, so a filled paragraph looks strange:</p>
<figure><a href="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-filled-paragraph.png"><img src="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-filled-paragraph.png"></a>
</figure>

<p>Of course, you can still do it, but there’s a better way. With <code>visual-line-mode</code> enabled, long lines will flow and adjust to the width of the window. This is great for writing prose, because you can choose how wide your lines are by just resizing your window.</p>
<figure><a href="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-narrow-window.png"><img src="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-narrow-window.png"></a>
</figure>

<figure><a href="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-wide-window.png"><img src="https://zzamboni.org/post/beautifying-org-mode-in-emacs/images/emacs-wide-window.png"></a>
</figure>

<p>There is one habit you have to change for this to work: the instinct (at least for me) of pressing <kbd>M-q</kbd> every once in a while to readjust the current paragraph. I personally think it’s worth it.</p>
<p>You can enable <code>visual-line-mode</code> automatically for org buffers by setting up another hook:</p>
<div><pre><code data-lang="emacs-lisp">  <span>(</span><span>add-hook</span> <span>'org-mode-hook</span> <span>'visual-line-mode</span><span>)</span>
</code></pre></div><h2 id="step-4-configure-faces-for-specific-org-elements">Step 4: Configure faces for specific Org elements</h2>
<p>After all the changes above, you will have nice, proportional fonts in your Org buffers. However, there are some things for which you still want monospace fonts! Things like source blocks, examples, tags and some other markup elements still look better in a fixed-spacing font, in my opinion. Fortunately, org-mode has an extremely granular face selection, so you can easily customize them to have different elements shown in the correct font, color, and size.</p>
<p><strong>Tip:</strong> you can use <kbd>C-u</kbd> <kbd>C-x</kbd> <kbd>=</kbd> (which runs the command <code>what-cursor-position</code> with a prefix argument) to show information about the character under the cursor, including the face which is being used for it. If you find a markup element which is not correctly configured, you can use this to know which face you have to customize.</p>
<p>You can configure specific faces any way you want, but if you simply want them to be rendered in monospace font, you can set them to inherit from the <code>fixed-pitch</code> face we configured before. You can also inherit from multiple faces to combine their attributes.</p>
<p>Here are the faces I have configured so far (there are probably many more to do, but I don’t use org-mode to its full capacity yet). I’m showing here the LISP expressions, but you can just as well configure them using <code>customize-face</code>.</p>
<div><pre><code data-lang="emacs-lisp">  <span>(</span><span>custom-theme-set-faces</span>
   <span>'user</span>
   <span>'</span><span>(</span><span>org-block</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>fixed-pitch</span><span>))))</span>
   <span>'</span><span>(</span><span>org-code</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>(</span><span>shadow</span> <span>fixed-pitch</span><span>)))))</span>
   <span>'</span><span>(</span><span>org-document-info</span> <span>((</span><span>t</span> <span>(</span><span>:foreground</span> <span>"dark orange"</span><span>))))</span>
   <span>'</span><span>(</span><span>org-document-info-keyword</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>(</span><span>shadow</span> <span>fixed-pitch</span><span>)))))</span>
   <span>'</span><span>(</span><span>org-indent</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>(</span><span>org-hide</span> <span>fixed-pitch</span><span>)))))</span>
   <span>'</span><span>(</span><span>org-link</span> <span>((</span><span>t</span> <span>(</span><span>:foreground</span> <span>"royal blue"</span> <span>:underline</span> <span>t</span><span>))))</span>
   <span>'</span><span>(</span><span>org-meta-line</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>(</span><span>font-lock-comment-face</span> <span>fixed-pitch</span><span>)))))</span>
   <span>'</span><span>(</span><span>org-property-value</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>fixed-pitch</span><span>)))</span> <span>t</span><span>)</span>
   <span>'</span><span>(</span><span>org-special-keyword</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>(</span><span>font-lock-comment-face</span> <span>fixed-pitch</span><span>)))))</span>
   <span>'</span><span>(</span><span>org-table</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>fixed-pitch</span> <span>:foreground</span> <span>"#83a598"</span><span>))))</span>
   <span>'</span><span>(</span><span>org-tag</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>(</span><span>shadow</span> <span>fixed-pitch</span><span>)</span> <span>:weight</span> <span>bold</span> <span>:height</span> <span>0.8</span><span>))))</span>
   <span>'</span><span>(</span><span>org-verbatim</span> <span>((</span><span>t</span> <span>(</span><span>:inherit</span> <span>(</span><span>shadow</span> <span>fixed-pitch</span><span>))))))</span>
</code></pre></div><p><strong>Update (2019/10/24):</strong> updated the settings above based on my latest config.
<strong>Update (2019/02/24):</strong> thanks to Ben for figuring out the fix to the vertical spacing issue noted below. The trick is to set the <code>org-indent</code> face (see above) to inherit from <code>fixed-pitch</code> as well.</p>
<p><del>One minor issue I have noticed is that, in <code>variable-pitch-mode</code>, the fixed-pitch blocks have a slight increase in inter-line spacing. This is not a deal breaker for me, but it is a noticeable difference. This can be observed in the following screenshot, which shows the block of code above embedded in the org-mode buffer and in the block-editing buffer, which uses the fixed-width font. If you know a way in which this could be fixed, please let me know!</del></p>
<h2 id="conclusion">Conclusion</h2>
<p>The setup described above has considerably improved my enjoyment of writing in Emacs. I hope you find it useful. If you have any feedback, suggestions or questions, please let me know in the comments.</p>

      </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A shrub in Nepal supplies the raw material for the bank notes used in Japan (163 pts)]]></title>
            <link>https://www.nytimes.com/2024/04/15/world/asia/nepal-japan-yen-argeli.html</link>
            <guid>40037396</guid>
            <pubDate>Mon, 15 Apr 2024 05:45:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2024/04/15/world/asia/nepal-japan-yen-argeli.html">https://www.nytimes.com/2024/04/15/world/asia/nepal-japan-yen-argeli.html</a>, See on <a href="https://news.ycombinator.com/item?id=40037396">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2024/04/15/world/asia/nepal-japan-yen-argeli.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Sleep apnea: Mouthguards less invasive, just as effective as CPAP (191 pts)]]></title>
            <link>https://newatlas.com/medical/sleep-apnea-mouthguard-cpap-blood-pressure/</link>
            <guid>40037046</guid>
            <pubDate>Mon, 15 Apr 2024 04:20:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newatlas.com/medical/sleep-apnea-mouthguard-cpap-blood-pressure/">https://newatlas.com/medical/sleep-apnea-mouthguard-cpap-blood-pressure/</a>, See on <a href="https://news.ycombinator.com/item?id=40037046">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Obstructive sleep apnea can cause or contribute to high blood pressure, so a new study examined which sleep apnea treatments – a CPAP machine or a mouthguard that keeps the airways open – was more effective at lowering blood pressure.</p><p>Medications are the first-line treatment for high blood pressure, otherwise known as hypertension. However, <a href="https://newatlas.com/medical/nasal-spray-sleep-apnea/" data-cms-ai="0">obstructive sleep apnea</a> (OSA), which can cause and/or exacerbate <a href="https://newatlas.com/medical/new-drug-two-for-one-treatment-heart-failure-sleep-apnea/" data-cms-ai="0">hypertension</a>, is being recognized as an underdiagnosed and modifiable risk factor. The most common sleep-rated breathing disorder, OSA is caused by the collapse of the upper airway during sleep, which leads to frequent sleep interruptions, up to 30 times an hour, all night long.</p><p>Continuous positive airway pressure (<a href="https://newatlas.com/medical/health-benefits-cpap-acid-reflux/" data-cms-ai="0">CPAP</a>) delivered via a face or nasal mask is often used to treat OSA. An alternative treatment is a mandibular advancement device or MAD. Similar to a bite guard, a MAD holds the lower jaw (mandible) and tongue forward, keeping the airway open. There are pros and cons for both. CPAP, while effective, tends to be uncomfortable, so it’s poorly tolerated. MADs are less intrusive, but studies have shown they’re outperformed by CPAP when it comes to the apnea-hypopnea index (AHI), the number of times airflow fully (apnea) or partially (hypopnea) stops per hour during sleep.</p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="A nasal CPAP device" width="1440" height="960" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/7de242b/2147483647/strip/true/crop/1999x1333+0+0/resize/440x293!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg 440w,https://assets.newatlas.com/dims4/default/cc06e61/2147483647/strip/true/crop/1999x1333+0+0/resize/800x533!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg 800w,https://assets.newatlas.com/dims4/default/cf76a17/2147483647/strip/true/crop/1999x1333+0+0/resize/1200x800!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg 1200w,https://assets.newatlas.com/dims4/default/08dd39e/2147483647/strip/true/crop/1999x1333+0+0/resize/1920x1280!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg 1920w" data-src="https://assets.newatlas.com/dims4/default/7f9ee6e/2147483647/strip/true/crop/1999x1333+0+0/resize/1440x960!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/7de242b/2147483647/strip/true/crop/1999x1333+0+0/resize/440x293!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg 440w,https://assets.newatlas.com/dims4/default/cc06e61/2147483647/strip/true/crop/1999x1333+0+0/resize/800x533!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg 800w,https://assets.newatlas.com/dims4/default/cf76a17/2147483647/strip/true/crop/1999x1333+0+0/resize/1200x800!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg 1200w,https://assets.newatlas.com/dims4/default/08dd39e/2147483647/strip/true/crop/1999x1333+0+0/resize/1920x1280!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg 1920w" src="https://assets.newatlas.com/dims4/default/7f9ee6e/2147483647/strip/true/crop/1999x1333+0+0/resize/1440x960!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F7a%2F92%2Fe6f848074e3c8e1bae05c03062e6%2Fdepositphotos-227915398-l.jpg">
</p>



    
    

    
        <div><figcaption itemprop="caption">A nasal CPAP device</figcaption></div>
    
</figure>

                
            </div><p>Researchers from the National University of Singapore (NUS) and the University of Sydney conducted a randomized controlled trial to compare the effectiveness of MAD and CPAP in reducing hypertension in patients with moderate-to-severe OSA.</p><p>“Looking at the totality of evidence available in all the literature, it is still reasonable to say that CPAP is the first-line treatment until we have more data on the MAD,” said Ronald Lee Chi-Hang, professor of medicine at NUS’ Yong Loo Lin School of Medicine and corresponding author of the study. “However, for patients who cannot truly tolerate or accept using a CPAP, we should be more open-minded in looking for an alternative therapy such as a MAD, which, based on our study, numerically had a better blood pressure reduction in patients compared with a CPAP.”</p><p>Being a non-inferiority trial, the study tested whether a new treatment (MAD) is not worse than an established one (CPAP). The researchers recruited 220 participants with moderate-to-severe OSA and randomized them to either CPAP or MAD. Of the participants, 44.5% were overweight, and 49.5% were obese. The most prevalent high cardiovascular risk factors were coronary artery disease (60.9%) and diabetes (59.1%), with 44.1% of participants having had hypertension for more than 10 years.</p><p>At baseline and six-month follow-up, both groups underwent 24-hour ambulatory blood pressure (BP) monitoring, completed a questionnaire on sleepiness, and had blood tests for cardiovascular markers. Both devices tracked use. The primary outcome was the difference in 24-hour mean BP between baseline and follow-up.</p><p>MADs significantly reduced 24-hour mean BP from baseline to six-month follow-up, which was not significant in the CPAP group. The decrease in the MAD group was, on average, 1.64 mmHg larger than the CPAP group. Compared to the CPAP group, the MAD group also showed a larger between-group reduction in all ambulatory BP measures, especially nighttime BP, and more participants achieved a systolic BP (the top number) below 120 mmHg. None of the participants experienced symptomatic low BP or hypotension. From these data, the researchers ascertained that a MAD was non-inferior to CPAP.</p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="An oral device like this SomnoDent Flex® is just as effective as CPAP in reduced sleep apnea-related high blood pressure" width="1440" height="960" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/f916740/2147483647/strip/true/crop/2000x1333+0+0/resize/440x293!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg 440w,https://assets.newatlas.com/dims4/default/fe3e66e/2147483647/strip/true/crop/2000x1333+0+0/resize/800x533!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg 800w,https://assets.newatlas.com/dims4/default/7ce7a4b/2147483647/strip/true/crop/2000x1333+0+0/resize/1200x800!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg 1200w,https://assets.newatlas.com/dims4/default/fdcbafb/2147483647/strip/true/crop/2000x1333+0+0/resize/1920x1280!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg 1920w" data-src="https://assets.newatlas.com/dims4/default/8d25768/2147483647/strip/true/crop/2000x1333+0+0/resize/1440x960!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/f916740/2147483647/strip/true/crop/2000x1333+0+0/resize/440x293!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg 440w,https://assets.newatlas.com/dims4/default/fe3e66e/2147483647/strip/true/crop/2000x1333+0+0/resize/800x533!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg 800w,https://assets.newatlas.com/dims4/default/7ce7a4b/2147483647/strip/true/crop/2000x1333+0+0/resize/1200x800!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg 1200w,https://assets.newatlas.com/dims4/default/fdcbafb/2147483647/strip/true/crop/2000x1333+0+0/resize/1920x1280!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg 1920w" src="https://assets.newatlas.com/dims4/default/8d25768/2147483647/strip/true/crop/2000x1333+0+0/resize/1440x960!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F75%2F06%2Fff6a49e14c9ab197914227746ef6%2Fsomnodent.jpg">
</p>



    
    

    
        <div><figcaption itemprop="caption">An oral device like this SomnoDent Flex® is just as effective as CPAP in reduced sleep apnea-related high blood pressure</figcaption></div>
    
</figure>

                
            </div><p>The researchers also looked at differences in adherence between the two devices; that is, how long participants stuck with their allocated treatment. Over half (56.5%) assigned to the MAD used it for six or more hours each night on average over the study period, while 23.2% of CPAP users did the same.</p><p>“The MAD patients simply used the device longer,” Chi-Hang said. “That also might explain why the blood pressure reduction at nighttime, when the patients are actually using it, had a better reduction in the MAD arm.”</p><p>Adherence to the <a href="https://aasm.org/" target="_blank" data-cms-ai="0">American Academy of Sleep Medicine</a>’s (AASM) recommendation of four or more hours of use in at least 70% of nights overall was similar between groups, with 69.4% of the MAD group and 64.3% of the CPAP group meeting this recommendation. Both groups had reduced daytime sleepiness, and there were no between-group differences in cardiovascular biomarkers.</p><p>“People should be aware that over 400 million people globally have moderate-to-severe obstructive sleep apnea, and it is underdiagnosed and may be a contributing factor to their high blood pressure,” said Chi-Hang. “Especially for patients whose blood pressure is hard to control or who have a lot of excessive daytime sleepiness, go see a physician about sleep apnea and get treated if necessary.”</p><p>The study participants were of East Asian descent, and 85.5% were male. Although ethnic Chinese make up about 17.3% of the world’s population, further research on more diverse populations is needed to determine whether the results are generalizable. Further, the researchers note that adherence may have been higher because the study was conducted during COVID-19 travel lockdowns.</p><p>Further studies are planned to examine the impacts of the devices on cognition.</p><p>The study, funded by the Singapore Ministry of Health, was published in the <i><a href="https://www.sciencedirect.com/science/article/pii/S0735109724009069?via%3Dihub" target="_blank" data-cms-ai="0">Journal of the American College of Cardiology</a></i>.</p><p>Source: <a href="https://nus.edu.sg/" target="_blank" data-cms-ai="0">NUS</a> via <a href="https://www.scimex.org/newsfeed/sleep-apnoea-mouthguard-could-be-just-as-effective-for-lowering-blood-pressure-as-a-cpap-machine" target="_blank" data-cms-ai="0">Scimex</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Computer-generated holography with ordinary display (106 pts)]]></title>
            <link>https://opg.optica.org/ol/abstract.cfm?uri=ol-49-8-1876</link>
            <guid>40036237</guid>
            <pubDate>Mon, 15 Apr 2024 01:37:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://opg.optica.org/ol/abstract.cfm?uri=ol-49-8-1876">https://opg.optica.org/ol/abstract.cfm?uri=ol-49-8-1876</a>, See on <a href="https://news.ycombinator.com/item?id=40036237">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<div id="articleBody">
<h2 id="Abstract">Abstract</h2>
<p xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink">We propose a method of computer-generated holography (CGH) using incoherent light emitted from a mobile phone screen. In this method, we suppose a cascade of holograms in which the first hologram is a color image displayed on the mobile phone screen. The hologram cascade is synthesized by solving an inverse problem with respect to the propagation of incoherent light. We demonstrate a three-dimensional color image reproduction using a two-layered hologram cascade composed of an iPhone and a spatial light modulator.</p>
<p>© 2024 Optica Publishing Group</p>
<p><a href="https://opg.optica.org/ol/viewmedia.cfm?uri=ol-49-8-1876&amp;seq=0&amp;html=true" id="link-full">Full Article</a>&nbsp; |&nbsp;
<a href="https://opg.optica.org/ol/viewmedia.cfm?uri=ol-49-8-1876&amp;seq=0" target="_blank" id="link-pdf">PDF Article</a></p><hr>
<p><strong>More Like This</strong></p>





</div>
<div id="articleSupplMat">
<h3>Supplementary Material (2)</h3>

</div>
<div id="articleDataAvailability">
<!--?xml version="1.0" encoding="UTF-8"?--><da_html><h3>Data availability</h3><p>Data may be obtained from the authors upon reasonable request.</p></da_html>
</div>

<div id="articleCitations">
<h3>Cited By</h3>
<p>You do not have subscription access to this journal. Cited by links are available to subscribers only. You may subscribe either as an Optica member, or as an authorized user of your institution.
</p><p>Contact your librarian or system administrator
<br>or<br>
<a href="#" data-bs-toggle="modal" data-bs-target="#userLogin">Login to access Optica Member Subscription</a>
</p>
</div>
<div id="articleFigures">
<h3>Figures (4)</h3>
<p>You do not have subscription access to this journal. Figure files are available to subscribers only. You may subscribe either as an Optica member, or as an authorized user of your institution.
</p><p>Contact your librarian or system administrator
<br>or<br>
<a href="#" data-bs-toggle="modal" data-bs-target="#userLogin">Login to access Optica Member Subscription</a>
</p>
</div>
<div id="articleEquations">
<h3>Equations (15)</h3>
<p>You do not have subscription access to this journal. Equations are available to subscribers only. You may subscribe either as an Optica member, or as an authorized user of your institution.
</p><p>Contact your librarian or system administrator
<br>or<br>
<a href="#" data-bs-toggle="modal" data-bs-target="#userLogin">Login to access Optica Member Subscription</a>
</p>
</div>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Spectral Ray Tracing (230 pts)]]></title>
            <link>https://larswander.com/writing/spectral-ray-tracing/</link>
            <guid>40035552</guid>
            <pubDate>Sun, 14 Apr 2024 23:45:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://larswander.com/writing/spectral-ray-tracing/">https://larswander.com/writing/spectral-ray-tracing/</a>, See on <a href="https://news.ycombinator.com/item?id=40035552">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
  
  <blockquote>
<p>I’m sharing this to give some background on my recent artworks exploring light, color, and perception through spectral ray tracing. This ray tracer that I’ve written has shown up in a few of my series, and I wanted to explain what “spectral ray tracing” even is. I have shared some outputs at the <a href="#spectral-ray-tracing-and-computer-art">end of this writeup</a>.</p>
</blockquote>
<p>In computer art, the artist builds both a scene and a camera to capture it out of code. The system being visualized, and process to render it into an array of <a href="https://en.wikipedia.org/wiki/RGB_color_spaces">RGB</a> values are both made of the same 1s and 0s, pure abstraction turned into light. In much the same way, our eyes and brains are made of the same <em>stuff</em> as the universe they exist within and observe. This self-referential perspective on our awareness is both eerie and profound, obvious yet unsettling.</p>
<p>For this reason, this idea of building cameras out of code has stuck with me. Now there are countless ways to do so, but one very literal and well-known process is “ray tracing”. In its essence, ray tracing models the path light travels between a simulated camera and light source, bouncing rays between virtual objects in to “illuminate” the scene.</p>
<h2 id="ray-tracing">Ray Tracing</h2>
<p>Ray tracing takes many shortcuts in the process to render an image in the name of performance. For example: ray tracing traverses the path from the light source to the camera in reverse (though there are exceptions), with the idea being that the vast majority of rays emitted from the light source never make it to the camera. By instead starting the ray at the camera’s perspective and traveling backwards, we know that the ray already “made it” to the camera. This is physically sound under our current model of the universe, as we assume the laws governing light transport are symmetric with respect to the direction of time (a.k.a. <a href="https://en.wikipedia.org/wiki/T-symmetry">T-symmetry</a>).</p>
<figure>
  <img src="https://upload.wikimedia.org/wikipedia/commons/8/83/Ray_trace_diagram.svg" alt="Diagram showing ray tracing on a simple scene">
  <figcaption>A simple scene being rendered via ray tracing. Each "pixel" on the left-hand grid has its color determined by the object it intersects in the scene, and how much light that object receives from the light source. Source: <a href="https://en.m.wikipedia.org/wiki/File:Ray_trace_diagram.svg">wikimedia</a></figcaption>
</figure>
<p>Another major shortcut that’s typically taken, but is far less physically sound, involves treating each light ray as a particle carrying the RGB vector corresponding to its “color”, ignoring any <a href="https://en.wikipedia.org/wiki/Wave%E2%80%93particle_duality">wave-like properties light has</a>. Rather remarkably, this shortcut produces physically-realistic scenes in a wide range of scenarios. The reason why this works so well has quite a long explanation, but is in large part due to how our eyes work: simply put, we have three types of color-sensitive cells in our eyes, sensitive to short (blue), medium (green), and long (red) wavelengths of light.</p>
<figure>
  <img src="https://upload.wikimedia.org/wikipedia/commons/1/1e/Cones_SMJ2_E.svg" alt="Diagram showing cone cell sensitivies">
  <figcaption>This diagram shows the sensitivity of the SML (short, medium, long) cone cells as a function of light's wavelength. The color we see is a result of how much the incoming light stimulates each of those cone cells. Source: <a href="https://commons.wikimedia.org/wiki/File:Cones_SMJ2_E.svg">wikimedia</a></figcaption>
</figure>
<p>However, our eyes don’t just receive red, green, and blue light (unless they’re very close to a computer screen or wearing a VR headset); our eyes are receiving a continuous spectrum of light, and converting that into the perception of color.</p>
<h2 id="seeing-the-spectrum">Seeing the Spectrum</h2>
<figure>
  <img src="https://upload.wikimedia.org/wikipedia/commons/d/d9/Linear_visible_spectrum.svg" alt="Diagram showing the full spectrum of single-wavelength colors">
  <figcaption>The full visible spectrum of single-wavelength colors. Source: <a href="https://commons.wikimedia.org/wiki/File:Linear_visible_spectrum.svg">wikimedia</a></figcaption>
</figure>
<p>Color that we see in the physical world is rarely made of just a single wavelength, instead, it’s a collection of many wavelengths forming what we call an SPD (spectral power distribution). For every color we can see, there are countless spectral power distributions that could correspond to that color. The fact that a single color can have many different SPDs is known as <a href="https://en.wikipedia.org/wiki/Metamerism_(color)">metamerism</a>, and is a fascinating concept in its own right. For example: yellow has a corresponding wavelength as seen in the above visible spectrum at around 580nm, but it can also be reproduced with a mix of red and green light (as it must be, given that the diagram itself is being rendered using only RGB values on a computer monitor).</p>
<figure>
  <img src="https://upload.wikimedia.org/wikipedia/commons/e/e7/Solar_spectrum_en.svg" alt="The SPD corresponding to daylight. Wavelength is on the x-axis, and the normalized intensity is on the y-axis">
  <figcaption>The SPD for daylight, extending past the visible spectrum into ultraviolet and infrared. It's no coincidence that the intensity peaks around the part of the spectrum visible to us, as this is clearly an evolutionary adaptation to our environment. Source: <a href="https://commons.wikimedia.org/wiki/File:Solar_spectrum_en.svg">wikimedia</a></figcaption>
</figure>
<p>Another consequence of how our eyes see color from a distribution of wavelengths is the existence of non-spectral colors, like magenta. These colors can’t be reproduced by any single wavelength, and require multiple wavelengths of light to reproduce. Notice there is no magenta in that spectrum above, as it requires a mix of high and low-wavelength light (blue and red) to be seen.</p>
<p>What’s most remarkable about this conversion from SPD to color is that it is possible to do so purely mathematically. The fact that such a link exists, bridging physics, physiology, and our subjective experience is honestly surreal. What’s even more remarkable is that this quantitative link was made back in 1931 with the creation of the <a href="https://en.wikipedia.org/wiki/CIE_1931_color_space#">CIE 1931 color spaces</a>, at a time before the Turing machine (let alone a computer) was even invented, and access to electricity hadn’t even made it across America.</p>
<p>If you want to implement this conversion yourself, I recommend reading <a href="https://pbr-book.org/4ed/Radiometry,_Spectra,_and_Color/Color">this chapter of Physically Based Rendering</a>, which gives a very thorough treatment of the subject.</p>
<h2 id="when-wavelength-matters">When Wavelength Matters</h2>
<p>As mentioned above, when ray tracing it’s often unnecessary to account for the full spectrum of light, let alone each ray’s “wavelength”. However, there are cases where a ray’s wave-like properties directly influence its path through a scene, and as a result effects the colors we see. The classic example is dispersion, when the path light takes is “bent” according to its wavelength.</p>
<figure>
  <img src="https://upload.wikimedia.org/wikipedia/commons/f/f5/Light_dispersion_conceptual_waves.gif" alt="An animation showing light being split by a triangular prism according to its wavelength">
  <figcaption>An optical prism showing white light being split into its component frequencies via dispersion. Source: <a href="https://commons.wikimedia.org/wiki/File:Light_dispersion_conceptual_waves.gif">wikimedia</a></figcaption>
</figure>
<p>Another fascinating example you’ve probably seen in person is called “thin film interference”, and it explains the rainbow-like patterns visible on soap bubbles. These patterns are formed by the constructive and destructive interference patterns generated by the reflections off of the upper and lower layers of the soap boundary. Since this doesn’t involve splitting the spectrum into single wavelengths, but rather increasing or decreasing the contribution of parts of the spectrum the colors generated are often non-spectral colors, like turquoises, teals, magentas, browns…</p>
<figure>
  <img src="https://upload.wikimedia.org/wikipedia/commons/5/55/Thin_film_interference_phase_2.svg" alt="An image showing destructive interference on a thin film boundary.">
  <figcaption>Destructive interference happening at a thin film boundary (in blue). The two incoming rays (labeled A and B) have the same wavelength, yet opposite phase after reflection due to traveling different distances before overlapping. The resulting ray (labeled C) is attenuated as a result. Source: <a href="https://commons.wikimedia.org/wiki/File:Thin_film_interference_phase_2.svg">wikimedia</a></figcaption>
</figure>
<h2 id="spectral-ray-tracing-and-computer-art">Spectral Ray Tracing and Computer Art</h2>
<p>To summarize, spectral ray tracing is just ray tracing that takes into account the wave-like properties of light. Instead of viewing the world through the lens of RGB color, spectral ray tracing generates spectral power distributions for every pixel in the scene, leveraging the wavelength and phase of rays to better estimate color in scenarios where this extra information matters.</p>
<p>I’ve been curious what happens when some of the laws dictating how light moves are deliberately broken, building cameras out of code in a universe just a little unlike our own. Working with the richness of the full spectrum of light, spectral ray tracing has allowed me to break the rules governing light transport in otherworldly ways.</p>
<p>Here are a few selected outputs from the past year. All of these were generated using my hand-written, no-dependency JavaScript and GLSL spectral ray tracer.</p>
<figure>
  <img src="https://larswander.com/img/art/light-painting/high-res/ldbtw-01.webp">
  <figcaption><i>Light Doesn't Bend That Way #1</i>, 2023</figcaption>
</figure>
<br>
<figure>
  <img src="https://larswander.com/img/art/light-painting/high-res/reflect0422.webp">
  <figcaption>This was generated by making the angle of reflection a function of wavelength. Note this process only seems to generate spectral colors. 
    <p><i>Untitled</i>, 2023</p></figcaption>
</figure>
<br>
<figure>
  <img src="https://larswander.com/img/art/light-painting/high-res/reflect_fs_0053.webp">
  <figcaption>An WIP piece made for the series <a href="https://larswander.com/art/full-spectrum">FULL_SPECTRUM</a>, released in Tokyo 2023. 
    <p><i>Untitled</i>, 2023</p></figcaption>
</figure>
<br>
<figure>
  <video width="100%" loop="true" autoplay="true" controls="" src="https://larswander.com/img/art/light-painting/high-res/rotate0099.mp4"></video>
  <figcaption>Putting these pieces into motion has been my favorite part of this system so far.
    <p>
  <i>Untitled</i>, 2024</p></figcaption>
</figure>

<p>I hope this has given you a little more insight into my practice and the works I’ve created. I hope to keep exploring this medium, and if this excites you, you can find more pieces like these on my <a href="https://twitter.com/larswander">twitter</a> or <a href="https://instagram.com/larswander">instagram</a>.</p>


        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Visualizing Attention, a Transformer's Heart [video] (759 pts)]]></title>
            <link>https://www.3blue1brown.com/lessons/attention</link>
            <guid>40035514</guid>
            <pubDate>Sun, 14 Apr 2024 23:38:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.3blue1brown.com/lessons/attention">https://www.3blue1brown.com/lessons/attention</a>, See on <a href="https://news.ycombinator.com/item?id=40035514">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__next"><main><div data-dark="false" data-width="normal"><h2 id="thanks">Thanks</h2><p>Special thanks to those below for supporting the original video behind this post, and to<!-- --> <a href="https://www.3blue1brown.com/thanks">current patrons</a> <!-- -->for funding ongoing projects. If you find these lessons valuable,<!-- --> <a href="https://www.patreon.com/3blue1brown">consider joining</a>.</p><p><span>.chance</span><span>A Zook</span><span>Aaron Binns</span><span>Ada Cohen</span><span>Adam Cedrone</span><span>Adam Dřínek</span><span>aeroeng15</span><span>Alan Stein</span><span>Albin Egasse</span><span>Alex </span><span>Alex Hackman</span><span>Alexandru Irimiea</span><span>Alexis Olson</span><span>Ali Yahya</span><span>Aljoscha Schulze</span><span>Alon Amit</span><span>Alvin Khaled</span><span>Aman Karunakaran</span><span>Andrea Di Biagio</span><span>Andrew Busey</span><span>Andrew Poelstra</span><span>Andrew Villagran</span><span>Andrew Wyld</span><span>Andrey Chursin</span><span>Anthony Eufemio</span><span>Aravind C V</span><span>Arkajyoti Misra</span><span>Arthur Zey</span><span>Arto Bendiken</span><span>Arun Kulshreshtha</span><span>Avi Bryant</span><span>Axel Ericsson</span><span>Barry Fam</span><span>Barry McLaurin</span><span>Beckett Madden-Woods</span><span>Ben Delo</span><span>Benjamin Bailey</span><span>Bigyan Bhar</span><span>Blake Byers</span><span>Boris Veselinovich</span><span>Bpendragon </span><span>Bradley Pirtle</span><span>Bren </span><span>Brian Cloutier</span><span>Brian King</span><span>Brian Staroselsky</span><span>Britt Selvitelle</span><span>bruce oberg</span><span>Burt Humburg</span><span>Carlos Iriarte</span><span>Carolus Reinecke</span><span>Charles Southerland</span><span>Chris Alexiuk</span><span>Chris Connett</span><span>Chris Mabee</span><span>Chris Seaby</span><span>Christian Broß</span><span>Constantine Goltsev</span><span>Cooper Jones</span><span>Corey Ogburn</span><span>Craig Schwandt</span><span>Cristi Cobzarenco</span><span>Cristian Amitroaie</span><span>Cy 'kkm' K'Nelson</span><span>D. Sivakumar</span><span>d5b</span><span>Dallas De Atley</span><span>Dan Davison</span><span>Dan Herbatschek </span><span>Dan Kinch</span><span>Dan Lawrence</span><span>Dan Martin</span><span>Daniel Badgio</span><span>Daniel Rolandsgard Kjellevold</span><span>Dave Kester</span><span>dave nicponski</span><span>David Bar-On</span><span>David Barker</span><span>David Gow</span><span>David J Wu</span><span>David Johnston</span><span>Deep Kalra</span><span>Deepak Devjani</span><span>Delton Ding</span><span>Dominik Wagner</span><span>Donal Botkin</span><span>Eddy Lazzarin</span><span>Eduardo M Chumbes</span><span>emptymachine</span><span>Eric Koslow</span><span>Eric Younge</span><span>Ero Carrera</span><span>Eryq Ouithaqueue</span><span>Eugene Pakhomov</span><span>Evan Miyazono</span><span>Filip Rolenec</span><span>Frank R. Brown, Jr.</span><span>Gabriele Siino</span><span>Garbanarba</span><span>George Maged Botros</span><span>Gerardo Ubaghs</span><span>gonezoomy</span><span>Gordon Gould</span><span>Gregory Hopper</span><span>gregostras</span><span>Guillaume Sartoretti</span><span>Harris Hoke</span><span>Henry Reich</span><span>Hitoshi Yamauchi</span><span>Holger Flier</span><span>Igor Bogetić</span><span>Infinite Flite</span><span>Ivan</span><span>J. Dmitri Gallow</span><span>Jacob Harmon</span><span>Jaewon Jung</span><span>James Golab</span><span>Jamie Winterton</span><span>Jan-Hendrik Prinz</span><span>Janak Ramakrishnan</span><span>Jason Arkens</span><span>Jason Hise</span><span>Jean-Manuel Izaret</span><span>Jed Yeiser</span><span>Jeff Butterworth</span><span>Jeff Linse</span><span>Jeff R</span><span>Jeff Straathof</span><span>Jeremy </span><span>Jeremy Cole</span><span>Jeremy Smith</span><span>Jerris Heaton</span><span>Jimmy Yang</span><span>jml</span><span>Joe kraus</span><span>Joe Pregracke</span><span>John</span><span>John C. Vesey</span><span>John Camp</span><span>John Haley</span><span>John Le</span><span>John Luttig</span><span>John McClaskey</span><span>Jon Adams</span><span>Jonathan </span><span>Jonathan M.</span><span>Jonathan Whitmore</span><span>Jonathan Wilson</span><span>Jonathon  Krall</span><span>José Breijo</span><span>Joseph John Cox</span><span>JosephG</span><span>Josh Wiley</span><span>Joshua Ouellette</span><span>Juan Benet</span><span>Julian Parmar</span><span>Julien Dubois</span><span>Justin Chandler</span><span>Karim Safin</span><span>Karma Shi</span><span>Keith Tyson</span><span>Kenneth Larsen</span><span>Kevin </span><span>Kieryn </span><span>Killian McGuinness</span><span>Konstantin Belotserkovets</span><span>Krishanu Sankar</span><span>Lambda GPU Workstations</span><span>lardysoft</span><span>leafyleaf</span><span>Lee Burnette</span><span>Lee Redden</span><span>Linda Xie</span><span>Lukas Biewald</span><span>Majid Alfifi</span><span>Maksim Stepanenko</span><span>Mano Prime</span><span>Mara Cating-Subramanian</span><span>Marco</span><span>Marek Gluszczuk</span><span>Mark Steitz</span><span>MarkM</span><span>Marshall McQuillen</span><span>Martin Mauersberg</span><span>Matt Parlmer</span><span>Matthew Bouchard</span><span>Matthew Piziak</span><span>Mauricio Sánchez-Bella</span><span>Max Anderson</span><span>Max Li</span><span>Max Welz</span><span>Maxim Kuzmich</span><span>Maxim Nitsche</span><span>Meni Rosenfeld</span><span>Merl</span><span>Michael Dunworth</span><span>Michael Kokosenski</span><span>Michael Liuzzi</span><span>Mike </span><span>Mike Dour</span><span>Mike Dussault</span><span>Mohammad Hosseini</span><span>Mohsen Hejrati</span><span>Molly Mackinlay</span><span>MR. FANTASTIC</span><span>Mukul Ram</span><span>Mutual Information</span><span>namewithheld </span><span>Nate Glissmeyer</span><span>Nate Pinsky</span><span>Nick</span><span>Nick Rubino</span><span>Nick Valverde</span><span>Nikhil Abraham</span><span>Nipun Ramakrishnan</span><span>noname</span><span>nothings</span><span>Octavian Voicu</span><span>Oleksandr Kuvshynov</span><span>Oliver Steele</span><span>Orb Li</span><span>otavio good</span><span>Patch Kessler</span><span>Patrick Lucas</span><span>Paul Pluzhnikov</span><span>Paul Wolfgang</span><span>Pavel Dubov</span><span>Pāvils Jurjāns</span><span>Person</span><span>Peter Freese</span><span>Peter Mcinerney</span><span>Philipp Legner</span><span>Pierre Lancien</span><span>Pradeep Gollakota</span><span>Prathap Sridharan</span><span>Rami Maalouf</span><span>Randy C. Will</span><span>Randy True</span><span>Raymond Fowkes</span><span>Rebecca Lin</span><span>rehmi post</span><span>Ripta Pasay</span><span>Rob</span><span>Rob Granieri</span><span>Rod S</span><span>Ron Capelli</span><span>Ronnie Cheng</span><span>Ronny</span><span>Roy Velich</span><span>Ruslan Abdikeev</span><span>Russel Simmons</span><span>Ryan Atallah</span><span>Ryan Mahuron</span><span>Scott Gorlick</span><span>Scott Gray</span><span>Sean Chittenden</span><span>Sergey Ovchinnikov</span><span>Seth Kaufman</span><span>Shardul Heda</span><span>Siddhesh Vichare</span><span>Sinan Taifour</span><span>Smarter Every Day</span><span>Stefan Korntreff</span><span>Stephen Palazola</span><span>Steve Huynh</span><span>Steve Muench</span><span>Steven Siddals</span><span>Tal Einav</span><span>Tanmayan Pande</span><span>Taras Bobrovytsky</span><span>Terry Hayes</span><span>The 1111 Code</span><span>Thomas Peter Berntsen</span><span>Timothy Chklovski</span><span>Todd Wang</span><span>tril zerobyte</span><span>Tristan Saldanha</span><span>Tyler Herrmann</span><span>Tyler Parcell</span><span>Tyler Veness</span><span>Ubiquity Ventures</span><span>Vai-Lam Mui</span><span>Vignan Velivela</span><span>Vignesh Valliappan</span><span>Vijay </span><span>Vikram Paralkar</span><span>Vince Gabor</span><span>Xierumeng </span><span>Yana Chernobilsky</span><span>Yoon Suk Oh</span><span>you say long names are tricky but all I hear is sempai noticed me</span><span>Yurii Monastyrshyn</span><span>Yushi Wang</span><span>Zachariah Rosenberg</span><span>Zachary Walton</span><span>Антон Кочков</span><span>Олександр Горленко</span><span>昊 陈</span></p></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[WireViz: Easily document cables and wiring harnesses (209 pts)]]></title>
            <link>https://github.com/wireviz/WireViz</link>
            <guid>40035414</guid>
            <pubDate>Sun, 14 Apr 2024 23:22:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/wireviz/WireViz">https://github.com/wireviz/WireViz</a>, See on <a href="https://news.ycombinator.com/item?id=40035414">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">WireViz</h2><a id="user-content-wireviz" aria-label="Permalink: WireViz" href="#wireviz"></a></p>
<p dir="auto"><a href="https://pypi.org/project/wireviz/" rel="nofollow"><img src="https://camo.githubusercontent.com/3f7384c3f8367c2a55d891a6a2ae09e67a4d486b7aea9b0a18d4d67bd36d6ebe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7769726576697a2e7376673f636f6c6f72423d626c7565" alt="PyPI - Version" data-canonical-src="https://img.shields.io/pypi/v/wireviz.svg?colorB=blue"></a>
<a href="https://pypi.org/project/wireviz/" rel="nofollow"><img src="https://camo.githubusercontent.com/068f00edc963607b667132b13eaf6d4e319ad04344d486b70fb165b41f81c698/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7769726576697a2e7376673f" alt="PyPI - Python Version" data-canonical-src="https://img.shields.io/pypi/pyversions/wireviz.svg?"></a>
<a href="https://pypi.org/project/wireviz/" rel="nofollow"><img src="https://camo.githubusercontent.com/bd49c664acece1166f020cd199b501efa066fbbd6d019d4267677433dff757e9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7769726576697a" alt="PyPI - Downloads" data-canonical-src="https://img.shields.io/pypi/dm/wireviz"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Summary</h2><a id="user-content-summary" aria-label="Permalink: Summary" href="#summary"></a></p>
<p dir="auto">WireViz is a tool for easily documenting cables, wiring harnesses and connector pinouts. It takes plain text, YAML-formatted files as input and produces beautiful graphical output (SVG, PNG, ...) thanks to <a href="https://www.graphviz.org/" rel="nofollow">GraphViz</a>. It handles automatic BOM (Bill of Materials) creation and has a lot of extra features.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>WireViz input files are fully text based
<ul dir="auto">
<li>No special editor required</li>
<li>Human readable</li>
<li>Easy version control</li>
<li>YAML syntax</li>
<li>UTF-8 input and output files for special character support</li>
</ul>
</li>
<li>Understands and uses color abbreviations as per <a href="https://en.wikipedia.org/wiki/Electronic_color_code#Color_band_system" rel="nofollow">IEC 60757</a> (black=BK, red=RD, ...)

</li>
<li>Auto-generates standard wire color schemes and allows custom ones if needed
<ul dir="auto">
<li><a href="https://en.wikipedia.org/wiki/DIN_47100" rel="nofollow">DIN 47100</a> (WT/BN/GN/YE/GY/PK/BU/RD/BK/VT/...)</li>
<li><a href="https://en.wikipedia.org/wiki/Electronic_color_code#Color_band_system" rel="nofollow">IEC 60757</a>   (BN/RD/OR/YE/GN/BU/VT/GY/WT/BK/...)</li>
<li><a href="https://en.wikipedia.org/wiki/25-pair_color_code#Color_coding" rel="nofollow">25 Pair Color Code</a> (BUWH/WHBU/OGWH/WHOG/GNWH/WHGN/BNWH/...)</li>
<li><a href="https://en.wikipedia.org/wiki/TIA/EIA-568#Wiring" rel="nofollow">TIA/EIA 568 A/B</a>  (Subset of 25-Pair, used in CAT-5/6/...)</li>
</ul>
</li>
<li>Understands wire gauge in mm² or AWG
<ul dir="auto">
<li>Optionally auto-calculates equivalent gauge between mm² and AWG</li>
</ul>
</li>
<li>Is suitable for both very simple cables, and more complex harnesses.</li>
<li>Allows for easy-autorouting for 1-to-1 wiring</li>
<li>Generates BOM (Bill of Materials)</li>
</ul>
<p dir="auto"><em>Note</em>: WireViz is not designed to represent the complete wiring of a system. Its main aim is to document the construction of individual wires and harnesses.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Examples</h2><a id="user-content-examples" aria-label="Permalink: Examples" href="#examples"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Demo 01</h3><a id="user-content-demo-01" aria-label="Permalink: Demo 01" href="#demo-01"></a></p>
<p dir="auto"><a href="https://github.com/wireviz/WireViz/blob/master/examples/demo01.yml">WireViz input file</a>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="connectors:
  X1:
    type: D-Sub
    subtype: female
    pinlabels: [DCD, RX, TX, DTR, GND, DSR, RTS, CTS, RI]
  X2:
    type: Molex KK 254
    subtype: female
    pinlabels: [GND, RX, TX]

cables:
  W1:
    gauge: 0.25 mm2
    length: 0.2
    color_code: DIN
    wirecount: 3
    shield: true

connections:
  -
    - X1: [5,2,3]
    - W1: [1,2,3]
    - X2: [1,3,2]
  -
    - X1: 5
    - W1: s"><pre><span>connectors</span>:
  <span>X1</span>:
    <span>type</span>: <span>D-Sub</span>
    <span>subtype</span>: <span>female</span>
    <span>pinlabels</span>: <span>[DCD, RX, TX, DTR, GND, DSR, RTS, CTS, RI]</span>
  <span>X2</span>:
    <span>type</span>: <span>Molex KK 254</span>
    <span>subtype</span>: <span>female</span>
    <span>pinlabels</span>: <span>[GND, RX, TX]</span>

<span>cables</span>:
  <span>W1</span>:
    <span>gauge</span>: <span>0.25 mm2</span>
    <span>length</span>: <span>0.2</span>
    <span>color_code</span>: <span>DIN</span>
    <span>wirecount</span>: <span>3</span>
    <span>shield</span>: <span>true</span>

<span>connections</span>:
  -
    - <span>X1</span>: <span>[5,2,3]</span>
    - <span>W1</span>: <span>[1,2,3]</span>
    - <span>X2</span>: <span>[1,3,2]</span>
  -
    - <span>X1</span>: <span>5</span>
    - <span>W1</span>: <span>s</span></pre></div>
<p dir="auto">Output file:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/wireviz/WireViz/blob/master/examples/demo01.png"><img src="https://github.com/wireviz/WireViz/raw/master/examples/demo01.png" alt="Sample output diagram"></a></p>
<p dir="auto"><a href="https://github.com/wireviz/WireViz/blob/master/examples/demo01.bom.tsv">Bill of Materials</a> (auto-generated)</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Demo 02</h3><a id="user-content-demo-02" aria-label="Permalink: Demo 02" href="#demo-02"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/wireviz/WireViz/blob/master/examples/demo02.png"><img src="https://github.com/wireviz/WireViz/raw/master/examples/demo02.png" alt=""></a></p>
<p dir="auto"><a href="https://github.com/wireviz/WireViz/blob/master/examples/demo02.yml">Source</a> - <a href="https://github.com/wireviz/WireViz/blob/master/examples/demo02.bom.tsv">Bill of Materials</a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Tutorial and example gallery</h3><a id="user-content-tutorial-and-example-gallery" aria-label="Permalink: Tutorial and example gallery" href="#tutorial-and-example-gallery"></a></p>
<p dir="auto">See the <a href="https://github.com/wireviz/WireViz/blob/master/tutorial/readme.md">tutorial page</a> for sample code,
as well as the <a href="https://github.com/wireviz/WireViz/blob/master/examples/readme.md">example gallery</a> to see more of what WireViz can do.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installation</h3><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Requirements</h4><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<p dir="auto">WireViz requires Python 3.7 or later.</p>
<p dir="auto">WireWiz requires GraphViz to be installed in order to work. See the <a href="https://graphviz.org/download/" rel="nofollow">GraphViz download page</a> for OS-specific instructions.</p>
<p dir="auto"><em>Note</em>: Ubuntu 18.04 LTS users in particular may need to separately install Python 3.7 or above, as that comes with Python 3.6 as the included system Python install.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Installing the latest release</h4><a id="user-content-installing-the-latest-release" aria-label="Permalink: Installing the latest release" href="#installing-the-latest-release"></a></p>
<p dir="auto">The latest WireViz release can be downloaded from <a href="https://pypi.org/project/wireviz/" rel="nofollow">PyPI</a> with the following command:</p>

<p dir="auto"><h4 tabindex="-1" dir="auto">Installing the development version</h4><a id="user-content-installing-the-development-version" aria-label="Permalink: Installing the development version" href="#installing-the-development-version"></a></p>
<p dir="auto">Access to the current state of the development branch can be gained by cloning the repo and installing manually:</p>
<div data-snippet-clipboard-copy-content="git clone <repo url>
cd <working copy>
git checkout dev
pip3 install -e ."><pre><code>git clone &lt;repo url&gt;
cd &lt;working copy&gt;
git checkout dev
pip3 install -e .
</code></pre></div>
<p dir="auto">If you would like to contribute to this project, make sure you read the <a href="https://github.com/wireviz/WireViz/blob/master/docs/CONTRIBUTING.md">contribution guidelines</a>!</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to run</h3><a id="user-content-how-to-run" aria-label="Permalink: How to run" href="#how-to-run"></a></p>
<div data-snippet-clipboard-copy-content="$ wireviz ~/path/to/file/mywire.yml"><pre><code>$ wireviz ~/path/to/file/mywire.yml
</code></pre></div>
<p dir="auto">This will output the following files</p>
<div data-snippet-clipboard-copy-content="mywire.gv         GraphViz output
mywire.svg        Wiring diagram as vector image
mywire.png        Wiring diagram as raster image
mywire.bom.tsv    BOM (bill of materials) as tab-separated text file
mywire.html       HTML page with wiring diagram and BOM embedded"><pre><code>mywire.gv         GraphViz output
mywire.svg        Wiring diagram as vector image
mywire.png        Wiring diagram as raster image
mywire.bom.tsv    BOM (bill of materials) as tab-separated text file
mywire.html       HTML page with wiring diagram and BOM embedded
</code></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Command line options</h4><a id="user-content-command-line-options" aria-label="Permalink: Command line options" href="#command-line-options"></a></p>
<ul dir="auto">
<li><code>--prepend-file &lt;FILE&gt;</code> to prepend an additional YAML file. Useful for part libraries and templates shared among multiple cables/harnesses.</li>
<li><code>-o &lt;OUTPUT&gt;</code> or <code>--output_file &lt;OUTPUT&gt;</code> to generate output files with a name different from the input file.</li>
<li><code>-V</code> or <code>--version</code> to display the WireViz version.</li>
<li><code>-h</code> or <code>--help</code> to see a summary of the usage help text.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Syntax description</h3><a id="user-content-syntax-description" aria-label="Permalink: Syntax description" href="#syntax-description"></a></p>
<p dir="auto">A description of the WireViz YAML input syntax can be found <a href="https://github.com/wireviz/WireViz/blob/master/docs/syntax.md">here</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">(Re-)Building the example projects</h3><a id="user-content-re-building-the-example-projects" aria-label="Permalink: (Re-)Building the example projects" href="#re-building-the-example-projects"></a></p>
<p dir="auto">Please see the <a href="https://github.com/wireviz/WireViz/blob/master/docs/buildscript.md">documentation</a> of the <code>build_examples.py</code> script for info on building the demos, examples and tutorial.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Changelog</h2><a id="user-content-changelog" aria-label="Permalink: Changelog" href="#changelog"></a></p>
<p dir="auto">See <a href="https://github.com/wireviz/WireViz/blob/master/docs/CHANGELOG.md">CHANGELOG.md</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Status</h2><a id="user-content-status" aria-label="Permalink: Status" href="#status"></a></p>
<p dir="auto">This is very much a work in progress. Source code, API, syntax and functionality may change wildly at any time.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto"><a href="https://github.com/wireviz/WireViz/blob/master/LICENSE">GPL-3.0</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Airship to Orbit Project (127 pts)]]></title>
            <link>https://www.jpaerospace.com/ATO/ATO.html</link>
            <guid>40034140</guid>
            <pubDate>Sun, 14 Apr 2024 20:24:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.jpaerospace.com/ATO/ATO.html">https://www.jpaerospace.com/ATO/ATO.html</a>, See on <a href="https://news.ycombinator.com/item?id=40034140">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>If you want to get to
space you climb on top of a giant fuel tank and light it on
fire. There has got to be a better way.<p>

The idea is simple. Use an airship to float on the top of the
airmosphere, then the craft slowly accelerates using electric/chemical
hybrid rocket engines over days until it reaches orbital velocity.</p><p>

The details are complicated. For one, for an airship to fly at the edge of
space it will need to be big. I mean really big, over a mile long. It
would also need to be very light, a gossomer hypersonic airship. Such a
vehicle is not suited for flight in the lower atmopshere. This and other
factors create the need to a three stage approach.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My cat alerted me to a DDoS attack (253 pts)]]></title>
            <link>https://www.dannyguo.com/blog/my-cat-alerted-me-to-a-ddos-attack</link>
            <guid>40034045</guid>
            <pubDate>Sun, 14 Apr 2024 20:12:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dannyguo.com/blog/my-cat-alerted-me-to-a-ddos-attack">https://www.dannyguo.com/blog/my-cat-alerted-me-to-a-ddos-attack</a>, See on <a href="https://news.ycombinator.com/item?id=40034045">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
        

        

        <p>A few years ago, my cat gave me my most memorable middle of the night software
engineering incident. I was working at a startup, and we didn’t have a formal
on-call rotation yet. That was a deliberate decision, since being on-call is
painful, and the team was good about just collectively keeping an eye out for
urgent alerts. We eventually set up an on-call rotation, but before that
happened, I had a fun night.</p>
<p>Around 3 a.m., I woke up because my cat was grooming my hair. The grooming
itself wasn’t unusual. She did it occasionally, and I optimistically took it as
a sign that she actually liked me and didn’t just tolerate me. Here’s the <a href="https://www.urbandictionary.com/define.php?term=Cat%20Tax">cat
tax</a>:</p>
<p><img src="https://i.imgur.com/DM89U2s.jpg" alt="my cat in a Fancy Feast box"></p>
<p><img src="https://i.imgur.com/jDwIABh.jpg" alt="my cat grooming my hair"></p>
<p>But in 9 years, that was the only time she did it while I was sleeping. I
checked my phone to see what time it was, and I noticed that an <a href="https://aws.amazon.com/cloudwatch/">AWS
CloudWatch</a> alert had gone off a couple
minutes ago because of <a href="https://aws.amazon.com/blogs/networking-and-content-delivery/identifying-unhealthy-targets-of-elastic-load-balancer/">unhealthy targets for our load
balancer</a>.</p>
<p>I tried to go to our website, but it didn’t load. I groaned and went to log onto
my work laptop. Our monitoring dashboard showed a massive number of requests
coming from many IP addresses that were associated with different countries. And
international traffic wasn’t typical for us anyway since our products were only
available to people in the United States. It was a <a href="https://www.cloudflare.com/learning/ddos/what-is-a-ddos-attack/">distributed
denial-of-service (DDoS)
attack</a>.</p>
<p>My first and not great thought was to block IP addresses at the server level,
which would have been tedious and possibly ineffective if the attacker had
significantly more source IP addresses to use. But then I remembered that we had
already set up <a href="https://aws.amazon.com/waf/">AWS Web Application Firewall</a>. To
deal with the immediate outage, I set up a rule to <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-type-geo-match.html">block requests from other
countries</a>.
It took effect and blocked hundreds of thousands of requests over the next hour
or so. Our website started working again, and the flood of requests stopped.</p>
<p>Later that morning, we noticed that we had received an email to our customer
support inbox around when the attack started. With horrible grammar, the sender
claimed to have found a vulnerability with our website that crashed
<a href="https://en.wikipedia.org/wiki/Apache_HTTP_Server">Apache</a>, which we didn’t even
use. They said they stopped all traffic to our website and could keep it that
way for months. They generously offered to give us a “solution file” if we sent
them $5,000 in Bitcoin. We didn’t reply, though in retrospect, it could have
been fun to try to <a href="https://www.youtube.com/watch?v=dWzz3NeDz3E">troll them</a>.</p>
<p>I still find it hard to believe the perfect timing of my cat waking me up. You
might guess that the AWS alert caused my phone to vibrate or make a sound,
waking my cat up first. But I keep my phone in do not disturb mode during the
night. So I just like to think that somehow, she sensed something was wrong that
couldn’t wait until the morning. It was certainly a more pleasant way to be
woken up than by a blaring <a href="https://www.pagerduty.com/">PagerDuty</a> alarm.</p>
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A primer on x86 by Casey Muratori and The Primeagen [video] (104 pts)]]></title>
            <link>https://www.youtube.com/watch?v=xCBrtopAG80</link>
            <guid>40033659</guid>
            <pubDate>Sun, 14 Apr 2024 19:27:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=xCBrtopAG80">https://www.youtube.com/watch?v=xCBrtopAG80</a>, See on <a href="https://news.ycombinator.com/item?id=40033659">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[AI made these movies sharper – critics say it ruined them (147 pts)]]></title>
            <link>https://www.nytimes.com/2024/04/13/movies/ai-blu-ray-true-lies.html</link>
            <guid>40033646</guid>
            <pubDate>Sun, 14 Apr 2024 19:25:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2024/04/13/movies/ai-blu-ray-true-lies.html">https://www.nytimes.com/2024/04/13/movies/ai-blu-ray-true-lies.html</a>, See on <a href="https://news.ycombinator.com/item?id=40033646">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2024/04/13/movies/ai-blu-ray-true-lies.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Personal VPN services are snake oil (136 pts)]]></title>
            <link>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2024/03/01/VPN-Snakeoil.html</link>
            <guid>40033522</guid>
            <pubDate>Sun, 14 Apr 2024 19:08:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2024/03/01/VPN-Snakeoil.html">https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2024/03/01/VPN-Snakeoil.html</a>, See on <a href="https://news.ycombinator.com/item?id=40033522">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
  
  
  
  <p>
    Published on 01 Mar 2024
    
  </p>
  
  <h2 id="intro">Intro</h2>
<p>Personal VPN services are a multi-million dollar business. But is it worth your money?</p>

<p><img src="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/_img/VPN-1.png" alt="NordVPN"><br>
If they can <a href="https://www.thoughtleaders.io/blog/how-much-money-does-pewdiepie-make">afford to sponsor Pewdiepie</a>, they should do something right, right? Fifty million flies can’t be wrong!</p>

<p>This is going to be a complex topic, so bear with me.</p>

<p>The statement I would like to prove:<br>
There are only a few problems for a few people worldwide where the answer is using a personal VPN service. 
You don’t need a personal VPN service if you are an average Internet user. 
If you are a tech-savvy user, you can do much better than using a VPN.<br>
Personal VPNs are the <a href="https://en.wikipedia.org/wiki/Homeopathy#Evidence_and_efficacy">homeopathic medicines</a> of the tech industry. Also known as a scam.</p>

<h2 id="glossary">Glossary</h2>
<p>By personal/commercial VPN service, I mean NordVPN, Tunnelbear, Mullvad VPN, etc. Company VPNs, or a VPN to phone into your home network, are out of the scope of this article.<br>
By public Wi-Fi, I mean Wi-Fi services where it is either open or the WPA key is shared with everyone. From a security point of view, there is not much difference between the two.</p>

<p>Let’s break down the problem of privacy and security. Let’s start with …</p>

<h2 id="security">Security</h2>
<p>Fifteen years ago, it was common malpractice that even though websites used HTTPS for the login page, the rest of the communication was over HTTP. One could steal the authentication cookie from the unencrypted Wi-Fi stream and use that to log in to that service. Tools like Surfjack and <a href="https://www.youtube.com/watch?v=etyCbkOKHsc">Firesheep</a> were popular tools for wannabe hackers. Back then, using a personal VPN service at public Wi-Fi made sense. Also, many email clients checked their email using unencrypted POP3 or IMAP protocols.</p>

<p>But nowadays, there <a href="https://transparencyreport.google.com/https/overview">is practically no vital service on the Internet</a>, which does not run on HTTPS.</p>

<p>OK, but what about tools like <a href="https://github.com/moxie0/sslstrip">SSLStrip?</a>
SSLStrip works like this:</p>
<ol>
  <li>User types www.mybanklogin.com</li>
  <li>The browser connects to clear-text, unprotected http://www.mybanklogin.com</li>
  <li>Attacker having active man-in-the-middle (<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">MiTM</a>) capability sees this traffic</li>
  <li>The web server notifies the user’s browser that it should use the secure https://www.mybanklogin.com site</li>
  <li>The attacker removes this notification</li>
  <li>The user continues the login process over the insecure, unencrypted http://www.mybanklogin.com</li>
</ol>

<p>So, can hackers steal my username and password? First, for accounts that matter, you should use 2FA (short for multi-factor authentication). It would be best to use unphisable 2FA like FIDO2/webauthn (e.g. Yubikey) for accounts that matter. 
Nowadays, most browsers implement <a href="https://therecord.media/eff-to-deprecate-https-everywhere-extension-as-https-is-becoming-ubiquitous">“HTTPS only mode”</a>. Next time, instead of turning on your VPN, you should check if your browser already uses HTTPS only mode, and if not, turn that on. For example, Safari does that by default.<br>
Ask your service provider to implement <a href="https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security">HSTS</a>.
It is excellent about HSTS that the user cannot bypass certificate errors. And the browser will auto-connect to HTTPS by default. 
The good news is that if you use mobile apps, almost all are secure already. Just keep your mobile OS and apps up-to-date. No one will spoil a precious <a href="https://en.wikipedia.org/wiki/Zero-day_(computing)">0-day</a> to attack you. 
If you are worried about DNS MiTM, use <a href="https://support.mozilla.org/en-US/kb/dns-over-https">DNS over HTTP</a> in your browser. 
OK, but what about tools like <a href="https://www.rapid7.com/blog/post/2015/07/15/the-new-metasploit-browser-autopwn-strikes-faster-and-smarter-part-1/">Metasploit browser autopwn</a>? 
Well, the good news is that it is much easier to keep your browser up-to-date compared to ~ ten years ago. Nowadays, however, it is rare that recent browser exploits are openly available for any hacker to use. If you are a target of a government, spy agency, or hacker-for-hire services, yes, they may have the resources to hack your browser, but chances are you are not that important. Sorry. And if you are that important, VPNs will not decrease your risks.</p>

<p>One massive problem with personal VPN services is that they are working to fail open. If the connection fails, your connection is not “protected” anymore. Some premium VPN providers sell “kill switch” functionality, but I am sure less than 1% of the users use this properly.</p>

<p>Looking at the practical side, how many legit stories do you know where someone lost money that could have been avoided just by using a VPN? I have never heard such a story. The “ Darkhotel “ attacker group could have been such an example, except that a VPN would not protect you against their attack, as they used fake Wi-Fi captive portals to deliver the exploit/malware. And before logging into a hotel Wi-Fi portal, you can’t start your VPN …</p>

<p>And before I forget, let’s quickly discuss free VPNs. Never, ever install a free VPN solution. They will abuse your network connectivity, and other malicious or non-malicious users will use it to do whatever they want. It is like inviting one thousand unknown people to your house to have a party and leave them unattended. You can find many stories where free VPNs are actually malware.</p>

<p><img src="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/_img/vpn-2.webp" alt="VPN_ads"></p>

<h2 id="privacy-concerns">Privacy concerns</h2>
<p>OK, but what about my DNS and TLS records being exposed to everyone so they can follow what I am doing? In a public place, anyone can look at your display already. Or, if you are worried about your ISP selling your traffic data, there are better options for you. 
Use <a href="https://developers.cloudflare.com/1.1.1.1/encryption/dns-over-https/encrypted-dns-browsers/">DNS over HTTPS</a>, for example. 
You have to use a VPN provider you trust better than your ISP/Wi-Fi provider.
Also, as <a href="https://support.mozilla.org/en-US/kb/understand-encrypted-client-hello">Encrypted Client Hello</a> is about to start soon, it will be exponentially harder for eavesdroppers to figure out which sites you are trying to visit.</p>

<p>But if you care about privacy, the answer is always ToR, ToR browser or Tails, and never VPN. Except in cases where you first have to hide your ToR usage using a VPN, which is a rare exception among users. If you don’t understand why you would need that, you probably don’t need that complexity. 
Tor Browser uses uncountable techniques that prevent tracking your browser. And if your privacy is essential against local Wi-Fi attackers, your ISP, why is the ad industry not in scope? Adblockers are only half the solution against tracking.</p>

<h2 id="when-to-use-a-personal-vpn">When to use a personal VPN?</h2>
<ol>
  <li>Geofence bypass for region-locked content.</li>
  <li>Piracy. Not that you should not support your artists/musicians/content creators, filmmakers, actors, … but I agree that there are situations in life when piracy is the only ethical option.</li>
  <li>Soft network block/censorship. Do your own research. Don’t end up in jail.</li>
</ol>

<h2 id="conclusion">Conclusion</h2>
<p>Claims made by VPN companies:</p>
<ol>
  <li>
    <p>VPNs reduce the risk of “getting hacked,” whatever that means. 
This is not true. Additional services provided by VPNs, like URL filtering, can reduce your risk. However, it is more effective to use URL filtering on the endpoint level, not the network level, as most VPN companies do.</p>
  </li>
  <li>
    <p>VPNs protect your privacy<br>
Even though they increase your privacy, it is still far from what ToR can do for you.</p>
  </li>
</ol>

<p>Suppose you want to increase your privacy and security. Instead of watching VPN reviews on YouTube, I recommend that you patch your operating system and your browser and configure always HTTPS and DoH in your browser. Use an ad blocker or, even better, a <a href="https://www.privacytools.io/private-browser">browser built with privacy in mind</a>. If you frequently install new applications, use antivirus/endpoint protection on your non-mobile OS. For Windows, the built-in default Microsoft Defender is a good option. Congratulations, you are in a better position compared to using a VPN, and you don’t have to pay for it, and you don’t have to enable it all the time.</p>

<p><img src="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/_img/vpn-3.jpg" alt="Change-my-mind"></p>

<h2 id="what-to-read">What to read?</h2>
<p>I found these articles also useful. As this is a complex topic, with different aspects, if you want to read more, this is where I recommend to start:<br>
<a href="https://overengineer.dev/blog/2019/04/08/very-precarious-narrative.html">overengineer.dev</a><br>
<a href="https://krebsonsecurity.com/2017/03/post-fcc-privacy-rules-should-you-vpn/">krebsonsecurity.com</a><br>
<a href="https://gist.github.com/joepie91/5a9909939e6ce7d09e29">gist.github.com/joepie91</a><br>
<a href="https://www.spacebar.news/you-dont-need-a-vpn/">www.spacebar.news</a><br>
<a href="https://www.forbes.com/advisor/business/vpn-statistics/">www.forbes.com</a><br>
<a href="https://it.slashdot.org/story/22/01/02/2143256/nbc-you-probably-dont-need-to-rely-on-a-vpn-anymore">it.slashdot.org</a></p>

<h2 id="ps">PS</h2>
<p>Yes, some of these VPN products provide extra services/functions/protections. And some of these extras make sense. But that does not mean that VPN is the answer to your problems overall.</p>

<h2 id="ps-2">PS 2</h2>
<p>WPA3 can support encryption and privacy on open, non-password-protected networks. I have not seen it anywhere in the wild, but the future is bright. If you operate open Wi-Fi networks, please, please, upgrade to WPA3.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sandboxing all the things with Flatpak and BubbleBox (147 pts)]]></title>
            <link>https://www.ralfj.de/blog/2024/04/14/bubblebox.html</link>
            <guid>40033497</guid>
            <pubDate>Sun, 14 Apr 2024 19:04:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ralfj.de/blog/2024/04/14/bubblebox.html">https://www.ralfj.de/blog/2024/04/14/bubblebox.html</a>, See on <a href="https://news.ycombinator.com/item?id=40033497">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="-content">
      <header>
    
    
</header>

<p>A few years ago, I have <a href="https://www.ralfj.de/blog/2019/03/09/firejail.html">blogged</a> about my approach to sandboxing less-trusted applications that I have to or want to run on my main machine.
The approach has changed since then, so it is time for an update.</p>

<!-- MORE -->

<p>Over time I grew increasingly frustrated with Firejail: configurations would frequently break on updates,
and debugging Firejail profiles is extremely hard. When considering all the included files, we are talking
about many hundred lines of configuration with a subtle interplay of allowlists and blocklists.
Even when I knew which folder I wanted to give access to, it was often non-trivial to ensure that
this access would actually be possible.</p>

<p>Now I am instead using a combination of two different approaches: Flatpak and BubbleBox.</p>

<h2 id="flatpak">Flatpak</h2>

<p>The easiest sandbox to maintain is the sandbox maintained by someone else.
So when a Flatpak exists for software I want to or have to use, such as Signal or Zoom, that is generally my preferred approach.</p>

<p>Unfortunately, Flatpaks can come with extremely liberal default profiles that make the sandbox mostly pointless.
The following global overrides help ensure that this does not happen:</p>
<div><pre><code>[Context]
sockets=!gpg-agent;!pcsc;!ssh-auth;!system-bus;!session-bus
filesystems=~/.XCompose:ro;xdg-config/fontconfig:ro;!~/.gnupg;!~/.ssh;!xdg-documents;!home;!host

[Session Bus Policy]
org.freedesktop.Flatpak=none
org.freedesktop.secrets=none
</code></pre></div>

<h2 id="bubblebox">BubbleBox</h2>

<p>However, not all software exists as Flatpak.
Also, sometimes I want software to run basically on my host system (i.e., to use the regular <code>/usr</code>), just without access to literally <em>everything</em> in my home directory.
Examples of this are Factorio and VSCodium.
The latter doesn’t work in Flatpak as I want to use it with LaTeX, and realistically this means it needs to run the LaTeX installed via <code>apt</code>.
The official recommendation is to effectively disable the Flatpak sandbox, but that entirely defeats the point, so I went looking for alternatives.</p>

<p><a href="https://github.com/containers/bubblewrap">bubblewrap</a> provides a very convenient solution: it can start an application in its own private filesystem namespace with full control over which part of the host file system is accessible from inside the sandbox.
I wrote a small wrapper around bubblewrap to make this configuration a bit more convenient to write and manage;
this project is called <a href="https://www.ralfj.de/projects/bubblebox">BubbleBox</a>.
This week-end I finally got around to adding support for <a href="https://github.com/flatpak/xdg-dbus-proxy">xdg-dbus-proxy</a> so that sandboxed applications can now access particular D-Bus functions without having access to the entire bus (which is in general not safe to expose to a sandboxed application).
That means it’s finally time to blog about this project, so here we go – if you are interested, check out <a href="https://www.ralfj.de/projects/bubblebox">BubbleBox</a>;
the project page explains how you can use it to set up your own sandboxing.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>I should also note that this is not the only bubblewrap-based sandboxing solution.
<a href="https://github.com/igo95862/bubblejail">bubblejail</a> is fairly similar but provides a configuration GUI and a good set of default provides;
it was a very useful resource when figuring out the right bubblewrap flags to make complex GUI applications work properly.
(Incidentally, “bubblejail” is also how I called my own script originally, but then I realized that the name is already taken.)
Joachim Breitner also recently <a href="https://www.joachim-breitner.de/blog/812-Convenient_sandboxed_development_environment">blogged</a> about his own bubblewrap-based sandboxing script.
There are many ways to do this, and it was fun to figure out my own solution.</p>

<p>Using bubblewrap and xdg-dbus-proxy for this was an absolute joy.
Both of these components came out of the Flatpak project, but the authors realized that they could be independently useful,
so in best Unix tradition they turned them into tools that provide all the required mechanism without hard-coding any sort of policy.
Despite doing highly non-trivial tasks, they are both pretty easy to use and compose and very well-documented.
Thanks a lot to everyone involved!</p>






    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I made a tool to clean and convert any webpage to Markdown (387 pts)]]></title>
            <link>https://markdowndown.vercel.app/</link>
            <guid>40033490</guid>
            <pubDate>Sun, 14 Apr 2024 19:03:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://markdowndown.vercel.app/">https://markdowndown.vercel.app/</a>, See on <a href="https://news.ycombinator.com/item?id=40033490">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p>Convert any webpage to a clean markdown<br> w/ images downloaded.</p></div><div><p><h3>Options</h3></p><div><p><label for="remove-noncontent">Remove non-content elements</label></p><p><label for="remove-images">Download images locally and link them</label></p><p><label for="apply-gpt">Apply GPT Filter on Markdown</label></p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Good news against dengue (150 pts)]]></title>
            <link>https://www.science.org/content/blog-post/good-news-against-dengue</link>
            <guid>40033268</guid>
            <pubDate>Sun, 14 Apr 2024 18:36:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.science.org/content/blog-post/good-news-against-dengue">https://www.science.org/content/blog-post/good-news-against-dengue</a>, See on <a href="https://news.ycombinator.com/item?id=40033268">Hacker News</a></p>
Couldn't get https://www.science.org/content/blog-post/good-news-against-dengue: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Phanpy: A minimalistic opinionated Mastodon web client (134 pts)]]></title>
            <link>https://phanpy.social</link>
            <guid>40033039</guid>
            <pubDate>Sun, 14 Apr 2024 18:06:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phanpy.social">https://phanpy.social</a>, See on <a href="https://news.ycombinator.com/item?id=40033039">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Discovering My Roommate's Death on Facebook (175 pts)]]></title>
            <link>https://medium.com/the-wind-phone/discovering-my-roommates-death-on-facebook-3a060fc477ec</link>
            <guid>40033033</guid>
            <pubDate>Sun, 14 Apr 2024 18:06:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://medium.com/the-wind-phone/discovering-my-roommates-death-on-facebook-3a060fc477ec">https://medium.com/the-wind-phone/discovering-my-roommates-death-on-facebook-3a060fc477ec</a>, See on <a href="https://news.ycombinator.com/item?id=40033033">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><h2 id="9b51" data-testid="storyTitle">Discovering My Roommate’s Death on Facebook</h2></p><div><h2 id="8795">A Journey of loss and reflection</h2><div><a rel="noopener follow" href="https://medium.com/@mohaboelez?source=post_page-----3a060fc477ec--------------------------------"><div aria-hidden="false"><p><img alt="Mohamed Aboelez" src="https://miro.medium.com/v2/resize:fill:88:88/1*RjJNbQcqhgVZyJC_Aq3gUA.png" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a><a href="https://medium.com/the-wind-phone?source=post_page-----3a060fc477ec--------------------------------" rel="noopener follow"><div aria-hidden="false"><p><img alt="The Wind Phone" src="https://miro.medium.com/v2/resize:fill:48:48/1*l3U4oGLVdqpfO2nGLFDioQ.png" width="24" height="24" loading="lazy" data-testid="publicationPhoto"></p></div></a></div></div><figure><figcaption>Photo by <a href="https://unsplash.com/@sandym10?utm_source=medium&amp;utm_medium=referral" rel="noopener ugc nofollow" target="_blank">Sandy Millar</a> on <a href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" rel="noopener ugc nofollow" target="_blank">Unsplash</a></figcaption></figure><p id="211f">I found out on Facebook that my new roommate was dead.</p><p id="f52c">I was sitting at my kitchen table around lunchtime, scrolling through clever status updates and cute baby photos, when I saw it. Someone had tagged a recent photo of him grinning in a plaid shirt and had written: “Taken far too soon. RIP Paul.”</p><p id="a051">I froze. I hadn’t seen Paul in about two days. I had assumed he’d been with his friend. But not dead. Of course not dead.</p><p id="cb00">As similar messages began to flood my news feed, irrational thoughts wrestled for control of my confused brain.</p><p id="987e">I looked over at the Mexican ingredients he had stacked in our pantry. “No one buys that much salsa verde and then dies, right? Facebook is lying.”</p><p id="c9b7">Leaping up from the table, I ran through the living room and down the hallway to Paul’s bedroom door. I even knocked and called his name, half-expecting him to answer, and sheepishly apologized for that silliness about Facebook pronouncing him dead.</p><p id="68f7">Silence. I swung the door open. The room was quiet; the carpet still had the tracks of a vacuum from days earlier.</p><p id="2463">Denial turned to panic. Surely there is a series of very important things you’re supposed to do immediately when Facebook announces your roommate’s death. I couldn’t think of one.</p><p id="14ca">Several hours and a handful of frantic Facebook messages later, details emerged. Paul — a cheerful 35-year-old Irish guy who worked for a nonprofit and melted at the sight of a Dachshund — had been hit and killed by a car not far from our apartment two nights earlier. While I had assumed he was spending time with his friend, his body had been in the city morgue.</p><p id="4429">Paul had moved into our flat in San Francisco’s Cow Hollow neighborhood just a month earlier, and during most of that time, I had been overseas for work. We exchanged emails and talked on the phone a bit. The day after I came home, we sat in the window of a crowded Starbucks and laughed about how we would burn sage through the apartment — or whatever it is you’re supposed to do to expel the bad energy of departing roommates.</p><p id="4f8b">We talked about his upcoming trip to Ecuador and promised to speak only Spanish at home. I asked if he’d walked up to the marina to watch our stunning pink-sky sunsets, and his face lit up like I’d just cut his rent in half.</p><p id="41a1">“Oh my gosh, I have to do that!” he said.</p><p id="8ca7">Paul was an almost stranger who was becoming a friend. I was completely unprepared for how his sudden death would unravel and reshape my life.</p><p id="9ed9">For weeks following the crash, it felt like my world revolved around the dead roommate who no longer lived on the other side of my bedroom wall.</p><p id="e96c">I helped his friends sift through his things in search of a funeral suit. I walked up to his open casket and said goodbye to this wax-figure version of a guy whose face I’d last seen in my bathroom mirror a few days earlier. I sat wedged in the corner of a wooden pew as the chapel emptied and tried to compose myself before standing up to be introduced to Paul’s friend. How could I cry in front of someone who had lost so much more?</p><p id="dd4c">Exhausted from sleepless nights in an apartment that suddenly felt like a shrine to my dead roommate, I declined sincere invitations to join his friends at a pub after the funeral. Instead, I clicked down the street, left a message for a friend who didn’t pick up, and took the bus home to sit in Paul’s room and stare at a throw pillow with a Dachshund on it. The next day, his friend came over and tearfully asked if he could have the pillow, saying they had bought it at a flea market together.</p><p id="3cf1">I didn’t know what to do with the rest of Paul’s things, so for weeks I did nothing. His electric shaver stayed in the medicine cabinet, the cans of chipotle peppers on his shelf in the pantry. I watered the chiles he was growing in a green plastic container on a shelf in his room. On top of his dresser sat the tin of hair pomade he had been grabbing out of the medicine cabinet the last time I saw him.</p><p id="1e7f">Instead of working at the kitchen table, I went to coffee shops and generally stayed out of the house-slash-death-shrine as much as possible. But there was no escape. My heart pounded every time I waited to cross the street where he’d died. Our conversations played in my head like a movie — or perhaps a short film. An imaginary clock ticked down the remaining seconds of his life as we naively chatted about the best websites for plane tickets and how he was definitely going to start going to the gym again.</p><p id="5d15">If my reaction to the death of an almost stranger seems dramatic, perhaps it’s because Paul wasn’t supposed to be one more Craigslist roommate through the revolving door. He was a piece of a life that I was determined to deconstruct and rebuild from the ground up.</p><p id="427b">My rapidly approaching 30th birthday had prompted a determination to sculpt my existence into everything I wished my 20s had been. That meant reconnecting and disconnecting, thinking about the space between who I was and who I wanted to be. It meant surrounding myself with people who cared about the world, who woke up every day and did things that mattered. Whatever that meant.</p><p id="31af">A language interpreter supporting a nonprofit dedicated to empowering small business owners in developing nations, Paul relocated in pursuit of a new beginning following a breakup. Amidst mastering his fourth language, he shared aspirations of rekindling neglected friendships. Our lives, much alike, were undergoing reconstruction.</p><p id="c3cf">Until he died, of course.</p><p id="3fd8">Paul was 35, about five years older than me when he stepped off the curb at the wrong moment. Watching tearful friends approach his coffin one by one, I imagined myself lying in that varnished box with wax skin. Did I have five years? Two? A week? Was I living the way I would if I knew that the ticking clock was closer to zero than I wanted?</p><p id="c9ac">A few days after the funeral, I walked to the marina to watch that pink-sky sunset. As the sun bled fuchsia through the sky and the Golden Gate Bridge reflected in the tide, I thought about Paul’s body buried in the ground in Northern Ireland while his belongings were just as he had left them in our apartment a few blocks away. I imagined a parallel existence where he had never stepped off the curb that night, where I would come home and find him studying his Russian notes in a kitchen that smelled like chipotle.</p><p id="13da">Weeks later, I finally summoned the will to clear out Paul’s room. As I carefully packed away the roommate who was gone almost as soon as he arrived, I came across a dresser drawer stuffed with crumpled, recently worn clothes. I pulled out a T-shirt. It read: “All we have is now.”</p></div></div>]]></description>
        </item>
    </channel>
</rss>