<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 14 Oct 2025 20:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[America Is Sliding Toward Illiteracy (146 pts)]]></title>
            <link>https://www.theatlantic.com/ideas/archive/2025/10/education-decline-low-expectations/684526/</link>
            <guid>45583730</guid>
            <pubDate>Tue, 14 Oct 2025 19:23:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theatlantic.com/ideas/archive/2025/10/education-decline-low-expectations/684526/">https://www.theatlantic.com/ideas/archive/2025/10/education-decline-low-expectations/684526/</a>, See on <a href="https://news.ycombinator.com/item?id=45583730">Hacker News</a></p>
<div id="readability-page-1" class="page"><section data-event-module="article body" data-flatplan-body="true"><p data-flatplan-paragraph="true" data-flatplan-dropcap="true">T<span>he past decade may rank</span> as one of the worst in the history of American education. It marks a stark reversal from what was once a hopeful story. At the start of the century, American students registered steady improvement in math and reading. Around 2013, this progress began to stall out, and then to backslide dramatically. What exactly went wrong? The decline began well before the pandemic, so COVID-era disruptions alone cannot explain it. Smartphones and social media probably account for some of the drop. But there’s another explanation, albeit one that progressives in particular seem reluctant to countenance: a pervasive refusal to hold children to high standards.</p><p data-flatplan-paragraph="true">We are now seeing what the lost decade in American education has wrought. By some measures, American students have regressed to a level not seen in 25 years or more. Test scores from NAEP, short for the National Assessment of Educational Progress, released this year show that 33 percent of eighth graders are reading at a level that is “below basic”—meaning that they struggle to follow the order of events in a passage or to even summarize its main idea. That is the highest share of students unable to meaningfully read since 1992. Among fourth graders, 40 percent are below basic in reading, the highest share since 2000. In 2024, the average score on the ACT, a popular college-admissions standardized test that is graded on a scale of 1 to 36, was<a data-event-element="inline link" href="https://www.act.org/content/act/en/research/services-and-resources/data-and-visualization/grad-class-database-2024.html"> 19.4</a>—the worst average performance since the test was <a data-event-element="inline link" href="https://www.axios.com/2023/10/11/act-test-scores-lowest-2023">redesigned</a> in 1990.</p><p id="injected-recirculation-link-0" data-view-action="view link - injected link - item 1" data-event-element="injected link" data-event-position="1"><a href="https://www.theatlantic.com/family/archive/2025/02/disengaged-teens-parents-nagging-school/681834/">Read: The teen-disengagement crisis</a></p><p data-flatplan-paragraph="true">American schoolchildren have given up almost all of the gains they achieved at the start of the century. These learning losses are not distributed equally. Across grades and subjects, the NAEP results show that the top tenth of students are doing roughly as well as they always have, whereas those at the bottom are doing worse. From 2000 to 2007, the bottom tenth of fourth graders in reading ability showed <a data-event-element="inline link" href="https://edworkingpapers.com/sites/default/files/ai25-1197.pdf">substantial improvement</a>, before stagnating. But by 2024, those gains had been erased. In 49 out of the 50 states (all except Mississippi), the gap between the top tenth and the bottom tenth grew. Nat Malkus, of the American Enterprise Institute, has <a data-event-element="inline link" href="https://www.aei.org/wp-content/uploads/2025/01/Testing-Theories-of-Why.pdf?x85095">pointed out</a> that this surging inequality has grown faster in America than in other developed countries. The upshot is grim: The bottom tenth of 13-year-olds, according to NAEP’s long-term-trend data, are<a data-event-element="inline link" href="https://www.nationsreportcard.gov/highlights/ltt/2023/#section-performance-trends-by-percentiles"> hitting</a> lows in reading and math scores not seen since these tests began in 1971 and 1978, respectively.</p><p data-flatplan-paragraph="true">A seemingly plausible culprit, and a familiar boogeyman for progressives, is insufficient spending. The problem with this tidy explanation is that it’s not tethered to reality. School spending did not decline from 2012 to 2022. In fact, it increased significantly, even after adjusting for inflation, from $14,000 a student to more than $16,000.</p><p data-flatplan-paragraph="true">Besides, America recently ran a very large natural experiment in dropping money on schools that, in a word, failed. During the pandemic, Congress appropriated a gargantuan sum of money, $190 billion, to ameliorate learning loss, most of it as part of the Biden administration’s American Rescue Plan. (For scale, this is roughly the sum recently given to the Trump administration to fund its border wall and immigration-enforcement agenda.) States were given latitude to spend their funds as they saw fit, which, it seems, was a mistake. Instead of funding high-quality tutoring programs or other programs that benefited students, districts spent money for <a data-event-element="inline link" href="https://edunomicslab.org/2023/04/04/the-massive-esser-experiment/">professional development</a> or on capital expenditures such as <a data-event-element="inline link" href="https://www.k12dive.com/news/Schools-spend-COVID-relief-money-ESSER-ARP/704564/">replacing</a> HVAC systems and obtaining electric buses. “The scientific term for this is that we didn’t get jack shit out of that money,” says Michael Petrilli, the president of the Thomas B. Fordham Institute, an education-policy think tank. “There are some studies that can detect small impacts, but they’re small. I think it’s also fair to say that a lot of the money was wasted.”</p><p data-flatplan-paragraph="true">A more likely culprit for learning loss is smartphones. Jonathan Haidt, the social psychologist and author of <em>The Anxious Generation</em>, is the most prominent evangelist of this thesis. He argues that declining school performance and other worrying trends among Gen Z, such as the rise in anxiety, depression, and suicide, can be traced to the new “<a data-event-element="inline link" href="https://www.theatlantic.com/technology/archive/2024/03/teen-childhood-smartphone-use-mental-health-effects/677722/">phone-based childhood</a>.” And his argument matches the time trend well. Smartphone ownership rocketed upwards around the time that American educational performance crested: In 2011, just<a data-event-element="inline link" href="https://www.pewresearch.org/internet/2013/03/13/teens-and-technology-2013/"> 23 percent</a> of teenagers had smartphones. By 2013—roughly the peak of American education—37 percent did. By 2015, <a data-event-element="inline link" href="https://www.pewresearch.org/internet/fact-sheet/teens-and-internet-device-access-fact-sheet/">73 percent</a> had access to one. And by 2018, that figure was 95 percent, where it remains today. Nearly half of teenagers say that they use the internet almost constantly. For parents, this explanation is also intuitive. You can apply your own experience of smartphone-induced self-sabotage to children (who do not have the biological benefit of a mature prefrontal cortex) and conclude that unregulated phone use is destructive to learning and creativity.</p><p id="injected-recirculation-link-1" data-view-action="view link - injected link - item 2" data-event-element="injected link" data-event-position="2"><a href="https://www.theatlantic.com/family/archive/2025/08/phone-ban-school-parents/683982/">Gail Cornwall: What many parents miss about the phones-in-schools debate</a></p><p data-flatplan-paragraph="true">But the smartphone thesis has a few weak spots. It’s not just middle schoolers and high schoolers whose performance is declining; it’s also kids in elementary school. Phone use has certainly increased among young children, but not to the ubiquitous proportions of adolescents. And even though smartphone use is almost universal, the learning losses have not been. High-achieving kids are doing roughly as well as they always have, while those at the bottom are seeing rapid losses. The thesis needs some elaboration to explain this dispersion pattern. Perhaps kids who have higher levels of executive functioning and impulse control (or are lucky enough to have parents who do) are better able to navigate the sea of distractions. At any rate, few broad social trends—whether the <a data-event-element="inline link" href="https://www.theatlantic.com/ideas/archive/2025/02/america-marriage-decline/681518/">decline of marriage</a> in America or the <a data-event-element="inline link" href="https://www.theatlantic.com/ideas/archive/2024/03/america-europe-post-pandemic-growth-comparison/677617/">slow rate of productivity growth in Europe</a>—are monocausal. It would be surprising if the decline in American education were.</p><p data-flatplan-paragraph="true">An explanation that deserves equal consideration is what one might call the low-expectations theory. In short, schools have demanded less and less from students—who have responded, predictably, by giving less and less. The timing lines up here, too. Around the same time that smartphones were taking off, a counterrevolution was brewing against the old regime of No Child Left Behind, the George W. Bush–era law passed in 2002 that required schools to set high standards and measured school progress toward them through stringent testing requirements. Bush famously said that he wanted to tackle “the soft bigotry of low expectations,” and there’s real evidence that he did. As controversial as it was, No Child Left Behind coincided with increased school performance, especially for those at the bottom.</p><p data-flatplan-paragraph="true">That’s not to say the regime was perfect. The No Child Left Behind approach to struggling schools was largely punitive, including threats of mandatory restructuring for institutions that failed to meet targets. And expectations for progress rose higher and higher each year, ultimately seeding the demise of the law. Schools were supposed to have all their kids at grade level by 2014. But as this deadline approached, it became clear that schools would miss it. In 2012, the Obama administration began giving states waivers from the requirements. Then, in 2015, Congress passed the Every Student Succeeds Act, which returned responsibility for improving low-performing schools to the states. But according to Martin West, the academic dean of Harvard’s education school, “most states have not been particularly ambitious in the design of those systems.”</p><p data-flatplan-paragraph="true">Low-expectations theory explains other trends that the smartphone thesis, by itself, does not. If the bar for grading and graduating were constant year over year, we would expect both to decline in line with student performance. Instead, we see the opposite. An <a data-event-element="inline link" href="https://www.act.org/content/dam/act/secured/documents/Evidence-of-Grade-Inflation-in-English-Math-Social-Studies-and-Science.pdf">ACT study</a> found that the share of students getting A’s in English rose from 48 percent in 2012 to 56 percent in 2022, even as their demonstrated mastery of the subject declined over that period. (The same is true of other subjects, including math, social studies, and science.) Over the same decade, high-school graduation rates <a data-event-element="inline link" href="https://nces.ed.gov/programs/digest/d23/tables/dt23_219.46.asp">improved</a> from 80 to 87 percent despite objective declines in academic achievement.</p><p id="injected-recirculation-link-2" data-view-action="view link - injected link - item 3" data-event-element="injected link" data-event-position="3"><a href="https://www.theatlantic.com/ideas/archive/2025/08/harvard-college-grade-inflation/684021/">Rose Horowitch: The perverse consequences of the easy A</a></p><p data-flatplan-paragraph="true">If the incentives to learn decrease, children—just like adults—will respond to that. <a data-event-element="inline link" href="https://www.returntolearntracker.net/">One in four</a> students today is chronically absent, meaning that they miss more than a tenth of instructional days, a substantial increase from pre-pandemic averages. The past decade also marked a shift in concern among educators, toward equity and away from excellence. Elements of so-called equitable grading, which is supposed to be more resistant to bias than traditional grading, have taken off in American schools.<a data-event-element="inline link" href="https://www.edweek.org/teaching-learning/heres-what-teachers-really-think-about-equitable-grading-policies/2025/08"> Roughly 40 percent</a> of middle-school teachers work in schools where there are no late penalties for coursework, no zeroes for missing coursework, and unlimited redos of tests.</p><p data-flatplan-paragraph="true" data-flatplan-dropcap="true">W<span>hat would it take</span> to reverse America’s educational declines? In good part because of Haidt’s arguments that smartphones are both dulling and immiserating children, states are now instituting bans on smartphone use during the school day. If districts that ban smartphones see swifter improvements in academic outcomes than those that do not, that will provide solid evidence that Haidt was correct. But getting screens out of the classroom likely won’t be enough to escape the malaise of the past decades. What lower expectations have inflicted in the past, only higher expectations in the future can remedy.</p><p data-flatplan-paragraph="true">The experience of a few outlier states gives reason for optimism. Matthew Chingos and Kristin Blagg, two scholars at the Urban Institute, <a data-event-element="inline link" href="https://www.urban.org/research/publication/states-demographically-adjusted-performance-2024-national-assessment">computed</a> “demographically adjusted NAEP scores,” examining how effective states are at educating kids after accounting for significant differences in socioeconomic status. Their analysis of the 2024 NAEP results found that Mississippi was best at educating kids in fourth-grade math, fourth-grade reading, and eighth-grade math. (In 2013, Mississippi was at the bottom of the unadjusted league table.) When I computed the correlation between these demographically adjusted scores and state spending, I found that there was none. If you’re an underprivileged kid in America, you will, on average, get the best education not in rich Massachusetts but in poor Mississippi, where per-pupil spending is half as high.</p><p data-flatplan-paragraph="true">This is a recent phenomenon. Some have called it the “Mississippi miracle” or—if you include relative outperformance in states such as Alabama, Louisiana, and Tennessee—the “southern surge.” From 2013 to 2024, reading performance declined among fourth graders in 46 out of 50 states. In only two states, Mississippi and Louisiana, did they meaningfully improve.</p><p data-flatplan-paragraph="true">A clear policy story is behind these improvements: imposing high standards while also giving schools the resources they needed to meet them. In 2013, Mississippi enacted a law requiring that third graders pass a literacy exam to be promoted to the next grade. It didn’t just issue a mandate, though; it began screening kids for reading deficiencies, training instructors in how to teach reading better (by, among other things, emphasizing phonics), and hiring literacy coaches to work in the <a data-event-element="inline link" href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4546228">lowest-performing schools</a>. Louisiana’s improvements came about after a similar policy cocktail was administered, starting in 2021. And this outperformance might continue in the future: The state recently reported that the number of kindergartners reading at grade level more than doubled in the past academic year—<a data-event-element="inline link" href="https://thelensnola.org/2025/06/04/k-3-reading-improves-as-louisiana-continues-early-literacy-focus/">rising</a> from 28 percent to 61 percent.</p><p data-flatplan-paragraph="true">The “Mississippi miracle” should force a reckoning in less successful states and, ideally, a good deal of imitation. But for Democrats, who pride themselves on belonging to the party of education, these results may be awkward to process. Not only are the southern states that are registering the greatest improvements in learning run by Republicans, but also their teachers are among the<a data-event-element="inline link" href="https://nces.ed.gov/surveys/ntps/tables/ntps1718_20111201_t1s.asp"> least unionized</a> in the country. And these red states are leaning into phonics-based, “science of reading” approaches to teaching literacy, while Democratic-run states such as New York, New Jersey, and Illinois have been painfully slow to adopt them, in some cases hanging on to other pedagogical approaches with little evidentiary basis. “The same people who are absolutely outraged about what” Robert F. Kennedy Jr. “is doing on vaccines are untroubled by just ignoring science when it comes to literacy,” Andrew Rotherham, a co-founder of the education-focused nonprofit Bellwether, told me.</p><p data-flatplan-paragraph="true">Some promising educational reforms, moreover, seem to brush up uncomfortably against liberal political priors. Progressive Democrats, for instance, still regard charter schools with suspicion and tend to fight to cap their number. But in a lot of places, that only hinders the equity these people profess to care about: High-performing charter networks in American cities have registered serious improvements in learning for some of the most disadvantaged children in the country. These have been verified through several<a data-event-element="inline link" href="https://economics.mit.edu/sites/default/files/publications/IZAdp5690.pdf"> lottery</a><a data-event-element="inline link" href="https://direct.mit.edu/edfp/article-abstract/14/3/414/12324/No-Excuses-Charter-Schools-and-College-Enrollment?redirectedFrom=fulltext"> studies</a>, comparing students who got into those schools with those who didn’t based on random chance alone, which is the gold standard for policy research. Another evidence-supported reform that upsets teachers’ unions, and their partners in the Democratic Party, is merit-based pay. We could “move to a system where teachers are rewarded based on their performance, not just a simple salary matrix, especially early in their careers,” says Jim Wyckoff, an education-policy professor at the University of Virginia, citing success with the policy in Washington, D.C.</p><p data-flatplan-paragraph="true">The economic costs already incurred by declining academic achievement are immense. Eric Hanushek, an education economist at the Hoover Institution, calculated that recent students will earn 7.7 percent less over their lifetime than they would have had they graduated at the time of <a data-event-element="inline link" href="https://www.hoover.org/sites/default/files/research/docs/Hanushek_The%20Pandemic%20in%20Perspective_web-250908.pdf">peak educational performance</a>. And because learning lost today means forgoing growth for decades in the future, Hanushek calculates that GDP will be 6 percent lower for the remainder of the century than if scores had stayed level. (This adds up to the modest sum of $90 trillion in present-day dollars).</p><p id="injected-recirculation-link-3" data-view-action="view link - injected link - item 4" data-event-element="injected link" data-event-position="4"><a href="https://podcasts.apple.com/us/podcast/bring-back-high-stakes-school-testing/id1305908387?i=1000730723968">Listen: Bring back high-stakes school testing</a></p><p data-flatplan-paragraph="true">One optimistic theory is that artificial-intelligence tools, which will only grow more powerful over the coming decades, will correct for this economic catastrophe by letting everyone externalize their thinking to superintelligent computer programs. The once-ironclad relationship between schooling quality and earnings might break down just in time, a somewhat literal deus ex machina. Hanushek thinks that is too rosy, though. In fact, the opposite might occur: “If we look at all the inventions in the past,” he told me, “they’re complementary to the high-skilled people and substitutes for low-skilled people.”</p><p data-flatplan-paragraph="true">In 1983, after another sustained decline in academic performance, a government commission released a landmark report titled “<a data-event-element="inline link" href="https://eric.ed.gov/?id=ED226006">A Nation at Risk</a>.” The authors argued that “the educational foundations of our society are presently being eroded by a rising tide of mediocrity that threatens our very future as a Nation and a people,” because America had “squandered the gains in student achievement made in the wake of the Sputnik challenge.” You could make a similar argument today as great-power competition between America and China intensifies.</p><p data-flatplan-paragraph="true">America’s scientific and technological hegemony is being seriously challenged, and China already leads in industries such as electric-vehicle production and solar-cell manufacturing. In the industries where America still leads, much technical prowess is owed to immigration policies that have attracted the brightest and most ambitious from around the world and to the research universities that train them. The Trump administration is pursuing a policy of browbeating these universities and of restricting visas, including for high-skilled workers—turning away talent amid an international talent war. The idea is that students in America today, and not those educated elsewhere, will be the labor force holding up the economy. That bet—like America’s students—may be mathematically unsound.</p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What do Americans die from vs. what the news report on (111 pts)]]></title>
            <link>https://ourworldindata.org/does-the-news-reflect-what-we-die-from</link>
            <guid>45583336</guid>
            <pubDate>Tue, 14 Oct 2025 18:40:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ourworldindata.org/does-the-news-reflect-what-we-die-from">https://ourworldindata.org/does-the-news-reflect-what-we-die-from</a>, See on <a href="https://news.ycombinator.com/item?id=45583336">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><header><h2>What do Americans die from, and what do the New York Times, Washington Post, and Fox News report on?</h2></header><div><h4>Acknowledgments</h4><p><span>For this work, we relied on </span><a href="https://www.mediacloud.org/" target="_blank" rel="noopener"><span>Media Cloud</span></a><span>, an open-access platform for media analysis. We would like to thank their team, particularly Emily Boardman Ndulue and Fernando Bermejo, for making this invaluable resource available and for their help with this project.</span></p></div><p><span>More than 80% of people — </span><a href="https://reutersinstitute.politics.ox.ac.uk/sites/default/files/research/files/Reuters%2520Institute%2520Digital%2520News%2520Report%25202015_Full%2520Report.pdf" target="_blank" rel="noopener"><span>including surveyed</span></a><span> Americans, Brits, Germans, and Italians — say they follow the news because they “want to know what is going on in the world around them.”</span><a href="#note-1"><sup><span>1</span></sup></a><span> It’s not just that people </span><em><span>expect</span></em><span> the news to inform them about what’s going on in the world. Most think that it </span><em><span>does</span></em><span>. When </span><a href="https://www.pewresearch.org/journalism/2025/05/13/what-is-news/?" target="_blank" rel="noopener"><span>asked what</span></a><span> emotions the news generates, “informed” was the most common response.</span><a href="#note-2"><sup><span>2</span></sup></a></p><p><span>This is what media outlets themselves promise to do. Here are several quotes from the New York Times’s </span><a href="https://www.nytco.com/mission-and-values/" target="_blank" rel="noopener"><span>mission statement</span></a><span>:</span></p><blockquote><p><span>“We seek the truth and help people understand the world. [...]</span></p><p><span>We help a global audience understand a vast and diverse world.”</span></p></blockquote><p><span>However, as we’ll see in this article, the media focuses on a particular sliver of our world, leaving much of the “vast and diverse world” largely out of their reporting. We’ll investigate this through the lens of health, looking at causes of death and reporting in the United States.</span></p><p><span>As we’ll discuss, our point is not that we should want or expect the media’s coverage to perfectly match the real distribution of deaths, although we’d argue that it would be better if it were less skewed. We wrote this article so that you, the reader, are aware of a significant disconnect between what we often hear and what actually happens.</span></p><p><span>It’s easy to conflate what we see in the news with the reality of our world, and keeping this mismatch in mind can help you avoid falling into this trap.</span></p><h2 id="counting-deaths-and-mentions-in-popular-media"><span>Counting deaths and mentions in popular media</span><a href="#counting-deaths-and-mentions-in-popular-media"></a></h2><p><span>We focused on causes of death and media coverage in the United States in 2023.</span></p><p><span>The full list of all causes of death is very long, and since many causes are very rare, we didn’t investigate all of them. But our analysis accounts for 76% of all deaths in the US in 2023.</span><a href="#note-3"><sup><span>3</span></sup></a><span> It includes the 12 leading causes of death in the US, plus homicide, drug overdoses, and terrorism, since they receive a lot of attention in the media.</span></p><p><span>We used data from the US </span><a href="https://wonder.cdc.gov/" target="_blank" rel="noopener"><span>Centers for Disease Control and Prevention</span></a><span> (CDC) to calculate each cause’s share of the total.</span><a href="#note-4"><sup><span>4</span></sup></a><span> We then compared this to the relative share of articles that mentioned these causes of death in three media outlets: the New York Times, the Washington Post, and the news website of Fox News. We selected these three because they are among the biggest </span><em><span>national</span></em><span> news organizations, are extremely popular, and are seen as being on different parts of the political spectrum.</span></p><p><span>To count the number of mentions, we relied on </span><a href="https://www.mediacloud.org/" target="_blank" rel="noopener"><span>Media Cloud</span></a><span>, an open-source platform regularly used for media analysis. In an </span><a href="https://docs.owid.io/projects/etl/analyses/media_deaths/methodology/" target="_blank" rel="noopener"><span>extended methodology document</span></a><span>, we provide many more details on how we constructed the data. Two things are important to mention here.</span></p><ul><li><span>For each cause of death, we included synonyms in our search. So, when searching for mentions of “homicide”, we also included mentions of related terms such as “murder”, “killer”, and other terms. For “heart disease”, we included terms like “heart attack”, “cardiac arrest”, “heart failure”, and many others.</span></li><li><span>We only counted articles where a cause of death — or its related terms — was mentioned </span><em><span>more than once</span></em><span>. This ensures that our analysis is focused on reporting on causes of death rather than just articles that mention a cause of death in passing. Additionally, this approach reduces the number of false positives and noise in our results.</span></li></ul><h2 id="what-do-americans-die-from-and-what-do-they-read-about-in-the-news"><span>What do Americans die from, and what do they read about in the news?</span><a href="#what-do-americans-die-from-and-what-do-they-read-about-in-the-news"></a></h2><p><span>You can see the results of our analysis in the chart below.</span></p><p><span>There are two big takeaways from this analysis. The first one is that the actual distribution of deaths shown on the left is very different from the causes of death that the media talks about.</span></p><p><span>The second insight is how similar the distribution of coverage is between the three media outlets. While there are some differences (Fox News was a bit more likely to mention homicides, for example, while the NYT did the same for terrorism), these are much smaller than we might expect. While right- and left-wing media might differ in </span><em><span>how</span></em><span> they cover particular topics, </span><em><span>what</span></em><span> they choose to write or talk about is similar.</span></p><p><span>The insight in this comparison, then, is not about differences between partisan media. It’s about the difference between </span><em><span>actual</span></em><span> causes of death and what the news tells Americans about. Those differences — as we can see in the chart — are huge.</span></p><p><span>Heart disease and cancer accounted for 56% of deaths among these 15 causes, but together they received just 7% of the media coverage. Other chronic issues, such as strokes, respiratory problems, diabetes, and kidney and liver disease, were also very underrepresented in the news.</span></p><p><span>Rare — but dramatic — events such as homicides and terrorism received more than half of all media coverage, despite being much smaller causes of death in the US. Terrorism, in particular, is a very rare cause of death, with 16 deaths in 2023.</span><a href="#note-5"><sup><span>5</span></sup></a></p><figure><div><picture><source srcset="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=48 48w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=100 100w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=350 350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=850 850w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=1350 1350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=3600 3600w" type="image/png" sizes="(max-width: 960px) 95vw, (min-width: 960px) 853px"><img src="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=3600" alt="The image presents a comparative analysis of the leading causes of death in the United States for the year 2023 alongside media coverage of these causes as reported by major news outlets. 

On the left, a vertical bar chart describes the primary causes of death, with heart disease at 29%, followed by cancer at 27%, and accidents at 7.8%. Other causes listed include stroke (7%), lower respiratory diseases (6.3%), Alzheimer's disease (4.9%), diabetes (4.1%), and several other less common causes, including a very small percentage for homicide and terrorism.

On the right, three horizontal bar charts represent media coverage of these causes in three different publications: The New York Times, The Washington Post, and Fox News. Each outlet shows a percentage for heart disease, cancer, accidents, suicide, COVID-19, drug overdose, homicide, and terrorism. For instance, The New York Times reports heart disease at 2.8%, cancer at 4.1%, and accidents at 9.7%. 

The accompanying note clarifies that data is based on the share of causes of death in the US and the corresponding mentions in the articles. The data sources include Media mentions from Media Cloud for the share of mentions, and mortality statistics from the US CDC and Global Terrorism Index." loading="lazy" width="3600" height="2541"></picture></div></figure><h2 id="how-over-and-underrepresented-are-different-causes-of-death-in-the-media"><span>How over- and underrepresented are different causes of death in the media?</span><a href="#how-over-and-underrepresented-are-different-causes-of-death-in-the-media"></a></h2><p><span>Another way to visualize this data is to measure how over- or underrepresented each cause is.</span></p><div><blockquote>Heart disease and cancer accounted for 56% of deaths but received just 7% of the coverage</blockquote><p><span>To do this, we calculate the ratio between a cause’s share of deaths and its share of news articles. In the chart below, we’ve done this for coverage in the New York Times (the results are similar for the other two outlets).</span></p><p><span>It highlights that homicides and terrorism are extremely overrepresented. Homicides received 43 times more coverage than their share of deaths; terrorism received over 18,000 times more.</span></p><p><span>At the other end, we see that conditions like heart disease, stroke, and liver disease are very underrepresented.</span></p></div><figure><div><picture><source srcset="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=48 48w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=100 100w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=350 350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=850 850w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=1350 1350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=3069 3069w" type="image/png" sizes="(max-width: 960px) 95vw, (min-width: 960px) 853px"><img src="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=3069" alt="The image presents a comparison of the share of deaths in the United States from 15 causes versus the share of media coverage these topics receive in the New York Times for the year 2023. The chart illustrates a scale labeled &quot;Underrepresented in the media&quot; on the left and &quot;Overrepresented in the media&quot; on the right, with varying lengths of bars representing different causes of death.

The causes of death include heart disease, stroke, liver disease, kidney failure, Alzheimer's, lower respiratory infections (LRIs), diabetes, influenza, accidents, suicide, COVID-19, drug overdose, homicide, and terrorism. Each bar indicates how much media coverage diverges from the actual death rate. For example, cancer, responsible for 27% of deaths, received only 4% of media coverage, indicating it was covered about 6.5 times less.

In contrast, homicides accounted for less than 1% of deaths but received an overwhelming 43% of coverage, leading to an overrepresentation in the media, quantified as 18,240 times more coverage compared to their death rate.

Data sources are mentioned: &quot;Media mentions from Media Cloud (2025); deaths data from the US CDC (2025) and Global Terrorism Index.&quot; The visual is licensed under CC-BY by the authors." loading="lazy" width="3069" height="2028"></picture></div></figure><h2 id="why-is-the-media-so-biased-towards-dramatic-risks"><span>Why is the media so biased towards dramatic risks?</span><a href="#why-is-the-media-so-biased-towards-dramatic-risks"></a></h2><p><span>The fact that the media focuses on dramatic, emotive events — and much less on “everyday”, more common mortality risks — has been found in several studies.</span><a href="#note-6"><sup><span>6</span></sup></a><span>  These studies have shown that this mismatch has existed for a long time, and that genuine changes in death rates between causes of death account for a tiny fraction of the changes in media coverage.</span><a href="#note-7"><sup><span>7</span></sup></a></p><p><span>Our analysis adds to the evidence, with updated data for 2023.</span></p><p><span>Why does this mismatch exist?</span></p><div><blockquote>Homicides received 43 times more coverage than their share of deaths; terrorism received over 18,000 times more</blockquote><p><span>One explanation is that the news, true to its name, tells us what’s </span><em><span>new</span></em><span>. The fact that nearly 2000 Americans die from heart disease </span><em><span>every single day</span></em><span> means it is not novel or new. The headline tomorrow would be the same as it was today, which was the same as yesterday. Rarer events like terrorist attacks, plane crashes, homicides, or disasters each have their unique headline.</span></p><p><span>People who die from common health risks quickly become mere numbers. On the other hand, those who die in rarer events have a face, a name, and a story that can be told. As humans, this makes us much more likely to click and read, making these stories ideal for the media to write about.</span></p><p><span>While we would like news organizations to focus much more on the larger problems that societies face — that is what we try to do at Our World in Data — it would be wrong to put all of the blame on them. They respond to what readers want, and many want emotive and engaging stories (even if their circumstances are terrible and upsetting).</span></p></div><p><span>Even outside the news, some of the most successful television series are intense, crime-filled dramas. Disaster movies pull in record numbers at the box office. One of the most popular podcast genres is “true crime,” where we spend hours listening to the gripping, scary tales of serial killers or con artists.</span></p><p><span>It's not surprising, then, that we’re much more likely to click on a news story about the latest murder or disaster than one about heart or kidney disease. And because media organizations need traffic and attention to survive, they and the public are stuck in a reinforcing feedback loop where rare events are always in the headlines and chronic problems get drowned out.</span></p><p><span>This is not just a problem with the modern media environment. The audience for this type of media has always been there. What’s changed is the reporting frequency: rather than getting one newspaper in the morning, we are bombarded with updates almost in real-time. We also now receive news from a much larger geographical area; it’s not just about what’s happened in our own town, but also about what’s happened on the other side of the country, or even the world.</span></p><h2 id="does-this-bias-really-matter"><span>Does this bias really matter?</span><a href="#does-this-bias-really-matter"></a></h2><p><span>Our point is not that we think the New York Times, Washington Post, or Fox News’ coverage should</span><em><span> </span></em><span>exactly match the distribution of causes of death. A newspaper that constantly covers heart disease and kidney failure would be a boring one that soon goes out of business. Even though our mission at Our World in Data is to cover the world’s largest problems, our own writing and data publications also don’t precisely match the scale of those problems. We expect we will be closer to the real distribution than the mainstream media, but there will still be some mismatch.</span></p><p><span>The reason we’re doing this analysis is to make you or other readers more aware of this selection bias. The frequency of news coverage doesn’t reflect what’s happening across millions or billions of people, but it’s easy to fall into the trap of thinking it does.</span></p><p><span>Why, then, do we think that this bias matters? Does it actually affect people’s perceptions of problems?</span></p><p><span>In a </span><a href="https://www.pewresearch.org/short-reads/2024/08/29/the-link-between-local-news-coverage-and-americans-perceptions-of-crime" target="_blank" rel="noopener"><span>large survey</span></a><span> among US adults, people who consumed local crime news “often” were more than three times more likely to say they were “extremely concerned” about crime affecting them or their family than those who rarely or never read local crime news.</span><a href="#note-8"><sup><span>8</span></sup></a></p><div><blockquote>The frequency of news coverage doesn’t reflect what’s happening across millions or billions of people, but it’s easy to fall into the trap of thinking it does</blockquote><p><span>Nearly six-in-ten Americans </span><a href="https://globalaffairs.org/research/public-opinion-survey/21-years-after-911-americans-are-less-concerned-about-terrorism" target="_blank" rel="noopener"><span>still see</span></a><span> international terrorism as a critical threat to the United States, despite the domestic impact on the US being relatively low for two decades. People are often far more anxious about flying than driving, even though commercial airline crashes are </span><a href="https://ourworldindata.org/us-airline-travel" target="_blank" rel="noopener"><span>incredibly rare</span></a><span>.</span></p><p><span>The information we’re exposed to profoundly impacts how we perceive the world, even if our perspective is less skewed than the media's.</span></p><p><span>But there’s one final reason why this bias matters. It makes it hard for us to understand how causes of death </span><em><span>are changing over time</span></em><span>. If we’re constantly bombarded with stories of the latest murders and crimes, we might easily think that these are happening more and more. That is a widespread sentiment. In 23 of the 27 </span><a href="https://news.gallup.com/poll/1603/crime.aspx" target="_blank" rel="noopener"><span>Gallup surveys</span></a><span> conducted since 1993, most Americans said there was more crime than the year before. In reality, rates of crime — including </span><span>homicides</span><span> and other </span><a href="https://www.pewresearch.org/short-reads/2024/04/24/what-the-data-says-about-crime-in-the-us/" target="_blank" rel="noopener"><span>violent crime</span></a><span> — have fallen a lot.</span></p></div><p><span>And if we don’t hear about what’s happening to heart disease rates, treatments, or the odds of surviving cancer, we might wrongly imagine that no progress has been made. Yet childhood cancer deaths </span><a href="https://ourworldindata.org/data-insights/childhood-cancer-deaths-in-the-united-states-have-declined-six-fold-over-the-last-seventy-years" target="_blank" rel="noopener"><span>have plummeted</span></a><span> over the last 50 years. Even among adults, death rates from cancer have </span><a href="https://ourworldindata.org/grapher/cancer-death-rate-crude-vs-age-standardized-who-mdb"><span>fallen dramatically</span></a><span> since the 1990s. So too have </span><a href="https://ourworldindata.org/grapher/cardiovascular-disease-death-rate-who-mdb?country=CAN~USA~RUS~HUN~BRA~AUS~DEU~FRA"><span>death rates</span></a><span> from heart disease.</span></p><p><span>This perception gap about the world matters, and the media is not doing a good job of trying to close it.</span></p><a href="https://docs.owid.io/projects/etl/analyses/media_deaths/methodology/" target="_blank" rel="noopener"><div><picture><source srcset="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=48 48w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=100 100w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=350 350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=850 850w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=1350 1350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=2400 2400w" type="image/png" sizes="350px"><img src="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=2400" alt="Featured image" loading="lazy" width="2400" height="1260"></picture></div><div><p><h3>Methodology</h3></p><p>If you’re interested in digging deeper, we provide a more detailed methodological document about how this data was generated, and a few additional analyses.</p></div></a><div><h4>Correction note</h4><p><span>This article was initially published on October 6, 2025, and was updated on October 9. This update corrected an error, whereby “Drug and overdose” deaths were also included within the US CDC category of “Accidents”. This meant that they were double-counted. We have corrected this, and the change made only a small difference to the final numbers. The relative share of deaths from accidents changed from 9.5% to 7.8%, and the share of other causes increased slightly. We thank Karl Pettersson for flagging this.</span></p></div><div><h3 id="article-endnotes">Endnotes</h3><ol><li id="note-1"><p><span>Respondents could choose to “agree” with multiple answers. This survey was from 2015, but as we’ll see, more recent data suggests that even in 2025, most Americans think the news keeps them informed about what’s happening worldwide.</span></p></li><li id="note-2"><p><span>In the Pew Research survey, 46% said it made them feel informed “extremely often or often” with a further 43% “sometimes”. That was more common than any other emotion. The other high-ranking ones were negative emotions such as anger or sadness.</span></p></li><li id="note-3"><p><span>In 2023, </span><a href="https://www.cdc.gov/nchs/fastats/deaths.htm" target="_blank" rel="noopener"><span>there were</span></a><span> approximately 3 million (3,090,964) deaths in the United States. 2.3 million (2,350,117) died from the twelve leading causes plus drug overdoses, homicides and terrorism. You can find these results in our intermediate and final data files, which are available in </span><a href="https://docs.owid.io/projects/etl/analyses/media_deaths/methodology/" target="_blank" rel="noopener"><span>our methodology document</span></a><span>. That means the combined share was around 76% of the total [2,305,117 / 3,090,964 * 100 = 76%].</span></p></li><li id="note-4"><p><span>We used mortality data from </span><a href="https://wonder.cdc.gov/" target="_blank" rel="noopener"><span>CDC Wonder</span></a><span> for all causes except terrorism (which isn’t reported there). For this, we relied on data from the </span><a href="https://www.visionofhumanity.org/maps/global-terrorism-index/#/" target="_blank" rel="noopener"><span>Global Terrorism Index</span></a><span>.</span></p></li><li id="note-5"><p><span>This figure is sourced from the Institute for Economics and Peace (IEP)’s </span><a href="https://www.visionofhumanity.org/wp-content/uploads/2024/02/GTI-2024-web-290224.pdf" target="_blank" rel="noopener"><span>Global Terrorism Index 2024</span></a><span> Report. It states on page 38: “The impact of terrorism improved in North America over the past year, owing to an improvement in score in Canada. There was one attack and death from terrorism in Canada in 2023, down from the peak of 12 deaths and eight attacks in 2018. By contrast, the impact of terrorism increased in the US, with 16 deaths from seven incidents.”</span></p></li><li id="note-6"><p><span>Isch, C. (2025). Media bias in portrayals of mortality risks: Comparison of newspaper coverage to death rates. Social Science &amp; Medicine, 364, 117542.</span></p><p><span>Pilar, M. R., Eyler, A. A., Moreland-Russell, S., &amp; Brownson, R. C. (2020). Actual causes of death in relation to media, policy, and funding attention: Examining public health priorities. Frontiers in Public Health, 8, 279.</span></p><p><span>Bomlitz, L. J., &amp; Brezis, M. (2008). Misrepresentation of health risks by mass media. Journal of Public Health, 30(2), 202-204.</span></p></li><li id="note-7"><p><span>Isch, C. (2025). Media bias in portrayals of mortality risks: Comparison of newspaper coverage to death rates. Social Science &amp; Medicine, 364, 117542.</span></p></li><li id="note-8"><p><span>This survey was conducted by Pew Research in 2024. It asked US adults whether they were extremely/very concerned, somewhat concerned, or not at all concerned about crime in their local community affecting them or their family.</span></p><p><span>33% of those who “often” get local crime news were “extremely concerned”. The share among those who “sometimes” get this type of news was 19%. It was just 10% among those who rarely consume it.</span></p><p><a href="https://www.pewresearch.org/short-reads/2024/08/29/the-link-between-local-news-coverage-and-americans-perceptions-of-crime" target="_blank" rel="noopener"><span>https://www.pewresearch.org/short-reads/2024/08/29/the-link-between-local-news-coverage-and-americans-perceptions-of-crime</span></a><span>.</span></p></li></ol></div><div id="article-citation"><h3>Cite this work</h3><p>Our articles and data visualizations rely on work from many different people and organizations. When citing this article, please also cite the underlying data sources. This article can be cited as:</p><div><pre><code>Hannah Ritchie, Tuna Acisu, and Edouard Mathieu (2025) - “Does the news reflect what we die from?” Published online at OurWorldinData.org. Retrieved from: 'https://ourworldindata.org/does-the-news-reflect-what-we-die-from' [Online Resource]</code></pre></div><p>BibTeX citation</p><div><pre><code>@article{owid-does-the-news-reflect-what-we-die-from,
    author = {Hannah Ritchie and Tuna Acisu and Edouard Mathieu},
    title = {Does the news reflect what we die from?},
    journal = {Our World in Data},
    year = {2025},
    note = {https://ourworldindata.org/does-the-news-reflect-what-we-die-from}
}</code></pre></div></div><div id="article-licence"><p><img src="https://ourworldindata.org/owid-logo.svg" alt="Our World in Data logo" loading="lazy" width="104" height="57"></p><h3>Reuse this work freely</h3><p>All visualizations, data, and code produced by Our World in Data are completely open access under the<!-- --> <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="noopener">Creative Commons BY license</a>. You have the permission to use, distribute, and reproduce these in any medium, provided the source and authors are credited.</p><p>The data produced by third parties and made available by Our World in Data is subject to the license terms from the original third-party authors. We will always indicate the original source of the data in our documentation, so you should always check the license of any such third-party data before use and redistribution.</p><p>All of<!-- --> <a href="https://ourworldindata.org/faqs#how-can-i-embed-one-of-your-interactive-charts-in-my-website">our charts can be embedded</a> <!-- -->in any site.</p></div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How bad can a $2.97 ADC be? (112 pts)]]></title>
            <link>https://excamera.substack.com/p/how-bad-can-a-297-adc-be</link>
            <guid>45582462</guid>
            <pubDate>Tue, 14 Oct 2025 17:12:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://excamera.substack.com/p/how-bad-can-a-297-adc-be">https://excamera.substack.com/p/how-bad-can-a-297-adc-be</a>, See on <a href="https://news.ycombinator.com/item?id=45582462">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>For almost all of my embedded work I’ve used the ADCs included with microcontrollers. These are cheap, relatively fast, and not particularly good. While they sport impressive-sounding 12- and 16-bit readouts, the effective number of bits (ENOB) is usually around 8 or 9.</p><p>Recently I’ve been playing with the ADS1115. It’s a dedicated ADC from TI module which plausibly delivers 16 bit accuracy.</p><p>One really cool thing about the ADS111x family is a dynamic range feature that gives you up to 20 times finer measurement for small amplitude voltages. It’s accuracy where it matters.</p><p>The ADS1115’s programmable gain amplifier lets you shrink the full-scale range from ±6.144 V down to ±0.256 V. That means a single LSB can represent as little as ~7.8 µV (0.256 V ÷ 32768). Compare that with a microcontroller ADC with a fixed 3.3 V range: 9 ENOB steps are ~6 mV.</p><p>Another nice thing is that it uses an internal voltage reference. The RP2040, for example, requires an external 3.3V analog reference. </p><p><span>But there’s something fishy about the pricing of the ADS1115. At quantity 1K it’s around $4 from Digikey, yet $0.60 on LCSC. That’s quite a spread. I picked up breakout boards from Amazon for </span><a href="https://amzn.to/4pK4Mlm" rel="nofollow ugc noopener">$2.97 if you buy four</a><span>, and I very much think these are made with the $0.60 parts from LCSC or similar.</span></p><p><span>I’ve also ordered this </span><a href="https://www.adafruit.com/product/1085" rel="nofollow ugc noopener">very handsome breakout</a><span> from Adafruit, which I assume uses the pricier version of the ADS1115. I’ll report back next week.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!IblS!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!IblS!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 424w, https://substackcdn.com/image/fetch/$s_!IblS!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 848w, https://substackcdn.com/image/fetch/$s_!IblS!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!IblS!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!IblS!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg" width="336" height="252.17319587628867" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:728,&quot;width&quot;:970,&quot;resizeWidth&quot;:336,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Angled shot of a black rectangular ADC breakout board.&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="Angled shot of a black rectangular ADC breakout board." title="Angled shot of a black rectangular ADC breakout board." srcset="https://substackcdn.com/image/fetch/$s_!IblS!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 424w, https://substackcdn.com/image/fetch/$s_!IblS!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 848w, https://substackcdn.com/image/fetch/$s_!IblS!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!IblS!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>So how bad are these cheap ones? I hooked one up to an </span><a href="https://i2cdriver.com/mini.html" rel="nofollow ugc noopener">I²CMini</a><span> and my trusty precision DC voltage source and tried to find out.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!bEyp!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!bEyp!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 424w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 848w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 1272w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!bEyp!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png" width="1456" height="1351" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1351,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4703826,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://excamera.substack.com/i/174667033?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!bEyp!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 424w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 848w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 1272w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>First check, are these functioning according to spec, or are they a cheaper part that’s being passed off as an ADS1115, as reported on forums?</p><p>As far as I can tell, they behave as if they are real ADS1115s. The readout is true 16-bits. The PGA (Programmable Gain Amplifier) appears functional. The readout rate is variable from 8 to 860 samples per second, and this approximately matches the TI datasheet.</p><p>I tested mostly in differential mode, and with the two inputs tied together, the ADC read consistently zero. With a calibrated 2.5V differential, the ADC measured very close to 2.5V, and with the polarity reversed gave exactly the same number negated. So far so good.</p><p>But closer inspection showed some deviations.</p><p>The TI datasheet says that the Data Rate, DR is ±10% of the nominal. So at 8 samples per second mode, samples should arrive 7.2 - 8.8 times per second. Three of the ADCs were close but slow (6.5-7 samples per second). One of the ADCs was nowhere near: 300 samples per second. That one didn’t get any further testing; there’s obviously something broken with its timing system. (But how many end users would actually notice that it’s running faster (and hence noisier) than it’s meant to?)</p><p>Looking more closely at the actual measurement, my calibrated 2.50067V source was being reported by the ADS1115 as 2.4883V. That’s a 12 mV error, and a 0.5% difference. Much bigger than the claim in the TI datasheet:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!ln8X!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!ln8X!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 424w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 848w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 1272w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!ln8X!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png" width="484" height="382" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/efb8417f-a5bd-41a6-9331-278011c81524_484x382.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:382,&quot;width&quot;:484,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:30861,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://excamera.substack.com/i/174667033?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!ln8X!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 424w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 848w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 1272w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>This isn’t quite the catastrophe that it might seem. After a simple linear correction on the MCU, I was getting results accurate to within 10 µV.</p><p><span>So what’s going on with the cheap parts? My best guess is that these are either quite good copies, or failed parts that </span><em>somehow</em><span> made their way into the hobbyist supply chain. When the more respectable part arrives next week I’ll put it through the same tests and report the result. However I only bought one of these, because it’s 4X the price!</span></p><p>Thanks for reading.</p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GPT-5o-mini hallucinates medical residency applicant grades (177 pts)]]></title>
            <link>https://www.thalamusgme.com/blogs/cortex-core-clerkship-grades-and-transcript-normalization</link>
            <guid>45581029</guid>
            <pubDate>Tue, 14 Oct 2025 15:12:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thalamusgme.com/blogs/cortex-core-clerkship-grades-and-transcript-normalization">https://www.thalamusgme.com/blogs/cortex-core-clerkship-grades-and-transcript-normalization</a>, See on <a href="https://news.ycombinator.com/item?id=45581029">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Dear Applicants, Programs, and Medical Schools,</p><p>Since the opening of the residency recruitment season, we’ve heard your feedback on the Cortex Core Clerkship Transcript Normalization feature. As a physician-founded organization born out of our lived experience as applicants and program leaders, we understand the many emotions tied to the start of the season. We believe it is our duty and responsibility to communicate openly with all stakeholders about how our tools are used and how they may impact application review.</p><h3><strong>What We’ve Heard</strong></h3><p>Over the past week, while the grades on transcripts and corresponding application documents have been accurate and fully accessible, we’ve received a small number of reports from the community about inaccuracies in a subset of automation-extracted grades displayed within Cortex.</p><p>In each case:</p><ul role="list"><li>Once confirmed, we corrected the extracted grade immediately.</li><li>Where the extracted grade was accurate, we provided feedback and guidance to the reporting program or school about its interpretation and the extraction methodology.</li></ul><p>Because Cortex is now offered complimentary to all ERAS-participating programs through the AAMC-Thalamus collaboration, many programs are using it for the first time this season. We recognize the novelty of this feature may also be contributing to questions and uncertainty.</p><h3><strong>How the Tool Works</strong></h3><ul role="list"><li>Cortex makes accessible all application data including the medical school transcript, Medical Student Performance Evaluation (MSPE), and all other documents in their raw, original, and unaltered format.&nbsp;</li><li>Cortex uses automated extraction (optical character recognition (OCR) and natural language processing (NLP)) to parse clerkship grades from medical school transcripts.</li><li>The software then generates reference reports including grades, percentiles, and graphical distributions allowing reviewers a structured way to contextualize grades for efficiency and comparison within and across medical schools.</li><li>First released in 2020, the tool is updated each recruitment cycle to reflect changes in grading schemas or transcript formatting.</li></ul><p><strong><em>Important:</em></strong><em> Applicants cannot be filtered, searched, sorted, or auto-rejected based on any of the output. The automation-extracted grades and visualizations are provided for comparative context only.&nbsp; They are not included in any scoring or selection algorithms. Reviewers are strongly encouraged to verify all information against the applicant’s official PDF transcript. This reminder is also displayed directly within the product.</em></p><p><em>For more information, please review our </em><a href="https://www.thalamusgme.com/blogs/methodology-for-creation-and-processing-of-a-novel-transcript-normalization-tool-in-cortex-application-screening-and-review-platform" target="_blank"><em>supporting methodology documentation</em></a><em>.</em></p><h3><strong>Community Concerns</strong></h3><p>We recognize the primary concern is that an inaccuracy could unfairly disadvantage an applicant in the selection process. While we understand how this may create unease, please note:</p><ul role="list"><li><strong>The tool is never intended to be used in isolation.</strong></li><li>We know from our experience working with the community that program directors employ a broader review of official application documentation in parallel, which may include medical school transcripts, the Medical Student Performance Evaluation (MSPE), and other materials, all of which are readily available and accessible in Cortex.</li><li>In all investigated cases this season, to date, program directors correctly identified the accurate grade when reviewing alongside the official record.</li></ul><h3><strong>Guidelines and Recommendations</strong></h3><h5><strong>For Programs</strong></h5><ul role="list"><li>Continue to use Transcript Normalization as a <strong>reference</strong>, not as a stand-alone decision tool.</li><li>Verify grades through the <strong>official transcript and MSPE</strong>, which remain fully accessible within Cortex in the following locations:<ul role="list"><li><em>Applicant summary page:</em> a) score drawer, b) “View Transcript” links</li><li><em>Applicant details page:</em> a) score drawer, b) left-side navigation menu, and c) documents section.</li></ul></li><li>If desired, use the <strong>“blinder” feature</strong> for “clerkship grades” to hide all grades, percentiles, and graphs.</li></ul><h5><strong>For Applicants</strong></h5><ul role="list"><li><strong>Your official transcript, MSPE, and application documents are and have always been correct and unaltered in our system.</strong></li><li>In all reported instances, program directors identified and corrected any discrepancies using the official documents.</li><li><strong>It is not recommended to contact programs about your transcript</strong>; Official documents may be viewed directly by directors and other faculty reviewers.</li></ul><h5><strong>For Medical Schools</strong></h5><ul role="list"><li><strong>Please share this guidance with your applicants to help reduce confusion and anxiety.</strong></li><li>Assure students that program directors and faculty regularly review official records as part of standard application review practices<strong>.</strong></li><li>Where your grading system is unique or particularly complex, we welcome your collaboration in helping refine mappings and reduce ambiguity.</li><li>Direct any program or applicant inquiries about grade accuracy to <a href="https://customercare.thalamusgme.com/hc/en-us/requests/new" target="_blank">Thalamus Support</a>, so we can investigate promptly and provide clarity.</li></ul><h3><strong>Our Commitment to the Community</strong></h3><p>We want to emphasize that we are listening closely to your feedback, and we value the partnership of applicants, programs, and medical schools in this process. Each recruitment season brings its own set of questions, adjustments, and improvements — and this is expected as the community adapts to tools and processes.</p><p>Our team is committed to continuous improvement of Cortex based on your feedback. The purpose of Cortex Transcript Normalization tool has always been to provide additional context, not to replace official documents or holistic review. The feature continues to function as intended this year, as it has historically. With your input, we will keep advancing the system through additional validation and improvement to support the community as the use of Cortex expands.</p><p>We appreciate your trust and collaboration as we work together toward a more consistent, fair, and efficient recruitment experience.</p><p>Sincerely,</p><p>Jason Reminick, MD, MBA, MS<br>CEO and Founder, Thalamus</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Astronomers 'image' a mysterious dark object in the distant Universe (153 pts)]]></title>
            <link>https://www.mpg.de/25518363/1007-asph-astronomers-image-a-mysterious-dark-object-in-the-distant-universe-155031-x</link>
            <guid>45580699</guid>
            <pubDate>Tue, 14 Oct 2025 14:45:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.mpg.de/25518363/1007-asph-astronomers-image-a-mysterious-dark-object-in-the-distant-universe-155031-x">https://www.mpg.de/25518363/1007-asph-astronomers-image-a-mysterious-dark-object-in-the-distant-universe-155031-x</a>, See on <a href="https://news.ycombinator.com/item?id=45580699">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
  
  
  <p>Scientists&nbsp;detect the lowest mass dark object currently measured</p>
  


  

  
  
  
<figure data-description="Overlay of the infrared emission (black and white) with the radio emission (colour). The dark, low-mass object is located at the gap in the bright part of the arc on the right-hand side.&nbsp;" data-picture="base64;">
      
      

    
</figure>

<h2>To the point</h2><ul><li><strong>Gravitational lenses:</strong> Distortions caused by gravitational lenses can be used to study the properties of dark matter, even though it does not emit light.</li><li><strong>Discovery:</strong> An international team has discovered a dark object in the distant universe that has one&nbsp;million times the mass of the Sun. The discovery is based on an analysis of the gravitational effects on the light from another galaxy.</li><li><strong>Technology:</strong> A network of radio telescopes around the world, including the Green Bank Telescope, collected the data. It forms a virtual supertelescope that enables enhanced image quality, allowing&nbsp;even small gravitational signals to be detected.</li></ul><p>Dark matter is an enigmatic form of matter not expected to emit light, yet it is essential to understanding how the rich tapestry of stars and galaxies we see in the night sky evolved. As a fundamental building block of the universe, a key question for astronomers is whether dark matter is smooth or clumpy, as this could reveal what it is made of. Since dark matter cannot be observed directly, its properties can only be determined by observing the gravitational lensing effect, whereby the light from a more distant object is distorted and deflected by the gravity of the dark object.&nbsp;“Hunting for dark objects that do not seem to emit any light is clearly challenging,” said Devon Powell at the Max Planck Institute for Astrophysics and lead author of the study. “Since we can’t see them directly, we instead use very distant galaxies as a backlight to look for their gravitational imprints.”</p><p>The team used a network of telescopes from around the world, including the Green Bank Telescope, the Very Long Baseline Array and the European Very Long Baseline Interferometric Network. The data from this international network were correlated at the Joint Institute for VLBI ERIC in the Netherlands, forming an Earth-sized super-telescope that could capture the subtle signals of gravitational lensing by the dark object. They found that the object has a mass that is a million times greater than that of our Sun and is located in a distant region of space, approximately 10 billion light years from Earth, when the universe was only 6.5 billion years old.</p><p>This is the lowest mass object to be found using this technique, by a factor of about 100. To achieve this level of sensitivity, the team had to create a high-fidelity image of the sky using radio telescopes located around the world. John McKean from the University of Groningen, the University of Pretoria, and the South African Radio Astronomy Observatory, who led the data collection and is the lead author of a companion paper, stated: “From the first high-resolution image, we immediately observed a narrowing in the gravitational arc, which is the tell-tale sign that we were onto something. Only another small clump of mass between us and the distant radio galaxy could cause this.”</p><h2>New modelling algorithms</h2>
<figure data-description="The zoom in shows the pinch in the luminous radio arc, where the extra mass from the dark object is gravitationally ‘imaged’ using the sophisticated modelling algorithms of the team. The dark object is indicated by the white blob at the pinch point of the arc, but no light from it has so far been detected at optical, infrared or radio wavelengths." data-picture="base64;">
      
      

    
</figure>

<p>To analyze the massive dataset, the team had to develop new modelling algorithms that could only be run on supercomputers. “The data are so large and complex that we had to develop new numerical approaches to model them. This was not straightforward as it had never been done before,” said Simona Vegetti at the Max Planck Institute for Astrophysics. “We expect every galaxy, including our own Milky Way, to be filled with dark matter clumps, but finding them and convincing the community that they exist requires a great deal of number-crunching,” she continued. The team applied a special technique called gravitational imaging, which allowed them to ‘see’ the invisible dark matter clump by mapping its gravitational lensing effect against the radio-luminous arc.</p><p>“Given the sensitivity of our data, we were expecting to find at least one dark object, so our discovery is consistent with the so-called ‘cold dark matter theory’ on which much of our understanding of how galaxies form is based,” said Powell. “Having found one, the question now is whether we can find more and whether their number will still agree with the models.”</p><p>The team is now analyzing the data further to better understand what the mysterious dark object could be, but they are also looking into other parts of the sky to see if they can find more examples of such low-mass dark objects using the same technique. If they continue to find such mysterious objects in other parts of the universe, and if they really turn out to be completely devoid of stars, then some theories of dark matter may be ruled out.</p><h2>Additional Information:</h2><p>Gravitational lensing: This is an astrophysical tool used by astronomers to measure the mass properties of structures in the Universe. It is a consequence of Einstein’s Theory of General Relativity, where mass in the Universe curves space. If the mass of the foreground lensing object (typically a galaxy or cluster of galaxies) is sufficiently dense, then the light from distant objects is distorted and multiple images are even observed. In the case of this system, called B1938+666, the foreground infrared-luminous galaxy (seen at the centre of the ring), results in a beautiful Einstein ring of the distant galaxy. However, the distant galaxy is also bright at radio wavelengths, showing the beautiful multiple images and gravitational arcs (seen in red).</p><p>Very Long Baseline Interferometry: The radio observations were taken using a combination of radio telescopes that are combined to form a so-called Very Long Baseline Interferometer. This observational method allows astronomers to improve the imaging sharpness of the data and reveal very small fluctuations in the brightness that otherwise could not be seen. For example, the resolving power of the data is a factor of 13 times better than the infrared imaging from the W. M. Keck Telescope adaptive optics system (also shown in the figures in black and white). The telescopes used in the observations were the Green Bank Telescope and the Very Long Baseline Array of the National Radio Astronomy Observatory in the United States, and the telescopes of the European Very Long Baseline Interferometric Network.</p><p>Gravitational imaging: This is a novel method that astronomers use to ‘see’ mass in the Universe even though it does not emit any light. This method uses the extended gravitational arcs to look for small aberrations that can only be caused by an additional, invisible component of mass. By combining this method and the exquisite high angular resolution imaging from the data, the team was able to detect the presence of the lowest mass dark object currently measured.</p>
  
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Wireshark 4.6.0 Supports macOS Pktap Metadata (PID, Process Name, etc.) (104 pts)]]></title>
            <link>https://nuxx.net/blog/2025/10/14/wireshark-4-6-0-supports-macos-pktap-metadata-pid-process-name-etc/</link>
            <guid>45580315</guid>
            <pubDate>Tue, 14 Oct 2025 14:18:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nuxx.net/blog/2025/10/14/wireshark-4-6-0-supports-macos-pktap-metadata-pid-process-name-etc/">https://nuxx.net/blog/2025/10/14/wireshark-4-6-0-supports-macos-pktap-metadata-pid-process-name-etc/</a>, See on <a href="https://news.ycombinator.com/item?id=45580315">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
								<div>
<figure><a href="https://nuxx.net/blog/wp-content/uploads/2025/10/image.png"><img fetchpriority="high" decoding="async" width="1024" height="502" src="https://nuxx.net/blog/wp-content/uploads/2025/10/image-1024x502.png" alt="" srcset="https://nuxx.net/blog/wp-content/uploads/2025/10/image-1024x502.png 1024w, https://nuxx.net/blog/wp-content/uploads/2025/10/image-300x147.png 300w, https://nuxx.net/blog/wp-content/uploads/2025/10/image-768x377.png 768w, https://nuxx.net/blog/wp-content/uploads/2025/10/image-1536x754.png 1536w, https://nuxx.net/blog/wp-content/uploads/2025/10/image-2048x1005.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>


<p>Four years after my post on doing <a href="https://nuxx.net/blog/2021/10/29/network-capture-with-process-name-and-pid-on-macos/" data-type="post" data-id="19460">network captures on macOS with Process ID</a>, <a href="https://www.wireshark.org/docs/relnotes/wireshark-4.6.0.html">Wireshark 4.6.0 has been released</a> which includes support for parsing this extra metadata, including the process info.</p>



<p>So how do you do it? Easy! You just need the <code>pktap</code> interface parameter.</p>



<p>From the <a href="https://manp.gs/mac/1/tcpdump">tcpdump(1) man page</a>:</p>



<blockquote>
<p>Alternatively, to capture on more than one interface at a time, one may use “pktap” as the <em>interface</em> parameter followed by an optional list of comma separated interface names to include. For example, to capture on the loopback and en0 interface:</p>



<pre>tcpdump -i pktap,lo0,en0</pre>



<p>An <em>interface</em> argument of “all” or “pktap,all” can be used to capture packets from all interfaces, including loopback and tunnel interfaces. A pktap pseudo interface provides for packet metadata using the default PKTAP data link type and files are written in the Pcap-ng file format. The RAW data link type must be used to force to use the legacy <strong>pcap-savefile</strong>(5) file format with a ptkap pseudo interface. Note that captures on a ptkap pseudo interface will not be done in promiscuous mode.</p>
</blockquote>



<p>Therefore, we just need something like:</p>



<pre><code>tcpdump -i pktap,en0 -w outfile.pcapng</code></pre>



<p>or</p>



<pre><code>tcptump -i pktap,all host 192.168.0.6 -w outfile.pcapng</code></pre>



<p>And then open <code>outfile.pcapng</code> in <em>Wireshark </em>and under <em>Frame </em>→ <em>Process Information</em> you can find the process name, PID, etc. (See screenshot above.)</p>



<p>Filtering can be done with <code>frame.darwin.process_info</code> as listed <a href="https://www.wireshark.org/docs/dfref/f/frame.html">here</a>. For example:</p>



<pre><code>frame.darwin.process_info.pname == "firefox"</code></pre>



<p>or</p>



<pre><code>frame.darwin.process_info.pid == 92046</code></pre>



<p>This is super helpful to figure out both what unexpected network traffic is being generated by and the inverse, what a process is doing on the network. And now thanks to Wireshark 4.6.0 it’s even easier.</p>
											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Let's Not Encrypt (2019) (103 pts)]]></title>
            <link>https://michael.orlitzky.com/articles/lets_not_encrypt.xhtml</link>
            <guid>45579968</guid>
            <pubDate>Tue, 14 Oct 2025 13:44:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://michael.orlitzky.com/articles/lets_not_encrypt.xhtml">https://michael.orlitzky.com/articles/lets_not_encrypt.xhtml</a>, See on <a href="https://news.ycombinator.com/item?id=45579968">Hacker News</a></p>
<div id="readability-page-1" class="page">

    


    <!--
      On my CVE pages, the title doesn't include the CVE identifier.
      Rather than create a whole separate template, just check for
      the presence of a cve_id here and include it if possible.
    -->
    <h2>Let's not Encrypt</h2>
    
    <!--
      The "date" field is provided by datedCtx on pages that we expect
      to have a "published" field. You don't get "updated" without
      "published", sorry.
    -->
    <p>
      posted 2019-04-24; updated 2023-11-05
    </p>
    

    <p>
  <em>
    Let's Discuss the organization providing a false sense of security
    at an unbeatable price.
  </em>
</p>

<dl>
  <dt>Update 2023-11-05</dt>
  <dd>
    Yeah, I've got an LE cert now. And I don't want to talk about it.
  </dd>

  <dt>Update 2023-10-22</dt>
  <dd>
    This is my last <em>I told you so</em>, I promise. But <a href="https://notes.valdikss.org.ru/jabber.ru-mitm/">Let's Encrypt
    certificates were used to MiTM Hetzner and Linode servers</a>.
  </dd>

  <dt>Update 2020-02-04</dt>
  <dd>
    <a href="https://www.microsoft.com/en-us/microsoft-teams/group-chat-software">Microsoft
    Teams</a> was <a href="https://www.usatoday.com/story/tech/2020/02/03/microsoft-teams-issues-fix/4644138002/">unusable
    for about seven hours yesterday</a>, because <a href="https://www.theverge.com/2020/2/3/21120248/microsoft-teams-down-outage-certificate-issue-status">Microsoft
    forgot to renew a certificate</a>. Sorry, <a href="https://www.engadget.com/2020/02/03/microsoft-teams-expired-certificate/">you
    just can't work today</a>?
  </dd>

  <dt>Update 2019-05-10</dt>
  <dd>
    Mozilla, a <a href="https://letsencrypt.org/sponsors/">Let's
    Encrypt Platinum Sponsor</a>, experiences some minor embarrassment
    this week as every Firefox install in existence commits
    suicide. The cause?  <a href="https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage/">An
    expired certificate</a>. (Maybe they should use Let's Encrypt?)
    This quote is gold:
    <blockquote>
      <p>
	First, we should have a much better way of tracking the status of
	everything in Firefox that is a potential time bomb and making
	sure that we don’t find ourselves in a situation where one goes
	off unexpectedly.
      </p>
      <cite>
	Eric Rescorla, CTO of the Firefox team at Mozilla
      </cite>
    </blockquote>

    My medical opinion: if it hurts, maybe you should stop doing it.
  </dd>
</dl>

<h3>Background</h3>
<p>
  Google is running a thinly-veiled protection racket, <a href="https://www.blog.google/products/chrome/milestone-chrome-security-marking-http-not-secure/">marking
  normal safe websites as “not secure.”</a> Unless, of
  course, you pay them. You can make the warning go away by paying a
  third-party—who then pays Google—to sign your website's
  SSL certificate. Some otherwise-smart people are convinced that this
  is fine, because the <a href="https://letsencrypt.org/">Let's
  Encrypt</a> project is signing those certificates for free at the
  moment. It's a scam.
</p>

<h3>Let's See</h3>
<h4 id="no-security">The certificates provide no security</h4>
<p>
  The way you verify your identity to Let's Encrypt is <a href="https://letsencrypt.org/how-it-works/">the same as with other
  certificate authorities</a>: you don't really. You place a file
  somewhere on your website, and they access that file over plain HTTP
  to verify that you own the website. The one attack that signed
  certificates are meant to prevent is a <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">man-in-the-middle
  attack</a>. But if someone is able to perform a man-in-the-middle
  attack against your website, then he can intercept the certificate
  verification, too. In other words, Let's Encrypt certificates don't
  stop the one thing they're supposed to stop.
</p>

<p>
  And, as always with the certificate authorities, <a href="https://ccadb-public.secure.force.com/mozilla/IncludedCACertificateReport">a
  thousand murderous theocracies, advertising companies, and
  international spy organizations</a> are allowed to impersonate you
  by design.
</p>

<h4>Automatic renewal is insecure</h4>
<p>
  The official way to renew Let's Encrypt certificates is
  automatically, with a tool called <a href="https://github.com/certbot/certbot">certbot</a>. It downloads
  a bunch of untrusted data from the web, and then feeds that data
  into your web server, all as root. If that sounds dumb, then good
  for you, because it is.
</p>
<p>
  All web servers treat certificate data as trusted: they expect it to
  have been verified as safe and correct by the system
  administrator. No sanity checks are performed, and if the contents
  of your certificate are malicious or erroneous, then you're going to
  have a bad time. For example, <a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=57360">a single
  incorrect byte in <em>one</em> certificate will take down your
  entire Apache web server</a>. This isn't something that anyone is
  going to fix, because only in <a href="https://community-sitcom.fandom.com/wiki/Darkest_Timeline">the
  darkest timeline</a> would certificates be obtained automatically
  from strangers on the internet and fed directly into the web server
  as root. The <em>best</em> thing that can happen if certbot fails is
  that <em>only one</em> of your websites will crash.
</p>
<p>
  Since certbot obtains certificates automatically from strangers on
  the internet and feeds them into your web server as root, and given
  that <a href="#no-security">the extra security afforded by those
  certificates is negligible</a>, we have a cure that is worse than
  the disease. Let's Encrypt introduces real risks to solve imaginary
  problems.
</p>

<p>
  “But you don't have to use certbot,” say the people who
  haven't thought very hard about it. And they're right: <a href="https://en.wikipedia.org/wiki/YouTube_headquarters_shooting">you
  always have options</a>. You <em>can</em> <a href="https://letsencrypt.org/docs/client-options/">renew
  certificates manually</a>, but
</p>

<h4>
  Manual renewal isn't free
</h4>
<p>
  Renewing a certificate manually takes about fifteen minutes. Before
  Google <a href="https://cabforum.org/2017/03/17/ballot-193-825-day-certificate-lifetimes/">hijacked
  the standards process</a>, certificates could be valid for five to
  ten years. And in the past, only a select few websites actually
  <em>needed</em> certificates. Under those circumstances, fifteen
  minutes to renew was annoying, yet tolerable.
</p>
<p>
  Let's Encrypt certificates are <a href="https://letsencrypt.org/2015/11/09/why-90-days.html">valid for
  only three months</a>. And, thanks to Google, we're talking about
  installing one on <em>every</em> website. If you have a hundred
  websites, then on average that's four hundred renewals a
  year—more than one every day. Every single day. For the rest
  of your life. Want to go on vacation?  Get drunk on Saturday morning
  and watch cartoons? Get married? You can't, you have certificates to
  renew that day.
</p>
<p>
  Manual renewal is only free if your time is worthless. And the
  commitment is truly forever, because
</p>

<h4 id="trap">HTTPS is a trap</h4>
<p>
  Once you've moved your websites to HTTPS, there's no going back to
  plain HTTP. All of the search engines that people use to find your
  site will list only the HTTPS address, and not the plain-HTTP
  address.
</p>
<p>
  Normally, when a site changes URLs, you can use a <a href="https://en.wikipedia.org/wiki/Server-side_redirect">redirect</a>
  to send visitors to the new address. But, if the old address is
  HTTPS, that doesn't work: the old address will display a misleading
  security warning instead of redirecting. So, you can never undo the
  decision to serve your site over HTTPS. This is important, because
  it means that you need the “free” certificates to be
  available forever; but,
</p>


<h4>Let's Encrypt is founded on the benevolence of scoundrels</h4>
<p>
  Let's Encrypt isn't free to run, either. Their 2019 operating budget
  is <a href="https://letsencrypt.org/2018/12/31/looking-forward-to-2019.html">3.6
  million U.S. dollars</a>. Most of that is donated by… guess
  who? <a href="https://letsencrypt.org/sponsors/">Your
  competitors</a>.
</p>
<p>
  It's bad business to marry yourself to a product or technology that
  you don't control, and downright quixotic if that technology is
  owned by your competitors. Let's Encrypt is not your friend; legally
  speaking, you have no business relationship with them, and they have
  no obligation to provide you with certificates now or in the
  future. Knowing that <a href="#trap">HTTPS is a trap</a>, you should
  ask yourself: what happens if Let's Encrypt goes away?  Do you have
  a hundred broken websites on your hands? Will you have to pay
  thousands of dollars every year for the rest of your life to make
  them work again? The automatic renewal process <a href="https://community.letsencrypt.org/t/march-13-2019-end-of-life-for-all-tls-sni-01-validation-support/74209">has
  already been broken once on purpose</a>.
</p>
<p>
  Or more cynically, what if Google decides to make some money by
  dropping Let's Encrypt from the list of certificate authorities in
  Chrome? Same answer? Maybe Let's Encrypt will be around forever, but
  it's negligent to gamble on that.
</p>


<h4>It's bad engineering</h4>
<p>
  When you install a certificate with a three-month expiration date,
  you're saying “I want my website to break in three months
  unless I show up and tell it not to.” It's a bomb that needs
  to be disarmed repeatedly, lest it explode. A real engineer wouldn't
  install a bomb on a bridge, and you shouldn't install one on your
  website.
</p>
<p>
  Sadly, our profession is one that has no legal, professional,
  educational, or moral requirements. But, if by some accident you
  happen to be good at your job, then your instincts should already be
  telling you that the time-bomb design principle is shitty
  engineering. Yes, the system is being forced on you by a bunch of
  assholes. But <em>you</em> still look like an idiot for playing
  along. If you have any self respect, that should bother you.
</p>


<h4 id="supplants-better">It supplants better solutions</h4>
<p>
  So we're spending $3,600,000 every year on certificates that aren't
  any better than self-signed, and we're asking people to weaken the
  security on their web servers, and wasting time creating a fragile
  automated renewal system, completely at the mercy of a third-party
  whose financial interests are opposed to ours, all to wind up right
  back where we started with no security and no browser warnings. But
  that's not the worst part.
</p>
<p>
  The worst part is that Let's Encrypt is preventing us from building
  a real solution to the problem. The entire certificate authority
  system is a for-profit scam. It imparts <em>no security</em>
  whatsoever. But Google gets its money, so it's happy. That means
  Chrome is happy, and shows no warnings, so the end user is happy
  too. That makes the website owner happy, and everyone is happy happy
  happy. But everything is still quite fundamentally fucked. Before
  Let's Encrypt, people were at least thinking about the problem,
  motivated by the monetary costs. But now that Let's Encrypt is
  giving us all pretend security for free, those people have moved
  on. There is basically no one interesting in bringing a minimal
  amount of security to the world wide web these days.
</p>


<h3>what to do about it</h3>
<p>
  Not this time. The technical problems are easy to solve. For
  decades, users of <a href="https://en.wikipedia.org/wiki/Secure_Shell">SSH</a> have had a
  system (save the certificate permanently the first time you connect,
  and warn if it ever changes) that is optimal in a sense: it works at
  least as well as any other solution. It's trivial to implement, is
  completely free, involves no third parties, and lasts forever. To
  the surprise of absolutely no one, web browsers don't support it.
</p>
<p>
  The main <em>non</em>-technical problem is the vestigial
  ‘s’ in “web browsers.” No, not that
  one—the one on the end. <a href="https://arstechnica.com/gadgets/2018/12/the-web-now-belongs-to-google-and-that-should-worry-us-all/">Google's
  abuse</a> recently forced Microsoft to <a href="https://www.windowscentral.com/microsoft-building-chromium-powered-web-browser-windows-10">abandon
  Internet Explorer in favor of Chrome</a>. Firefox has no market
  share, largely due to Mozilla's own incompetence, but also thanks in
  part to <a href="https://twitter.com/johnath/status/1116871246510264320">sabotage
  by Google</a>. In any case, Google now controls the one user
  interface that everyone on the planet uses to access the web. And
  Google is the main beneficiary of the certificate authority
  system. They're <a href="https://letsencrypt.org/sponsors/">one of
  the main sponsors of Let's Encrypt</a>, precisely because <a href="#supplants-better">Let's Encrypt discourages us from replacing
  the broken certificate authority system</a>. Let's Encrypt makes
  their subterfuge socially acceptable and practically palatable.
</p>
<p>
  Google also owns <a href="https://whatwg.org/">HTML</a> and <a href="https://en.wikipedia.org/wiki/HTTP/2">HTTP</a>, and that's
  just about everything that makes up “the web.” So long
  as they do, this battle is lost. No one's going to give up the one
  free way to make their websites work in Chrome. The law can't
  help. Your mom can't help, I asked her. Give up and go outside, it's
  nice out. Seriously, things are only going to get worse.
</p>


    

  



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[CRISPR-like tools that finally can edit mitochondria DNA (128 pts)]]></title>
            <link>https://www.nature.com/articles/d41586-025-03307-x</link>
            <guid>45579708</guid>
            <pubDate>Tue, 14 Oct 2025 13:21:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nature.com/articles/d41586-025-03307-x">https://www.nature.com/articles/d41586-025-03307-x</a>, See on <a href="https://news.ycombinator.com/item?id=45579708">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-test="access-teaser"> <p>CRISPR gene editing has made its way into every corner of modern biology, but not into every corner of the cell. Although researchers have used these systems to develop <a href="https://www.nature.com/articles/d41586-024-04102-w" data-track="click" data-label="https://www.nature.com/articles/d41586-024-04102-w" data-track-category="body text link">treatments for sickle-cell anaemia</a> and blood cancers, to unlock the <a href="https://www.nature.com/articles/d41586-025-02635-2" data-track="click" data-label="https://www.nature.com/articles/d41586-025-02635-2" data-track-category="body text link">secrets of multicellularity</a> and to discover the role of <a href="https://www.nature.com/articles/d41586-025-00217-w" data-track="click" data-label="https://www.nature.com/articles/d41586-025-00217-w" data-track-category="body text link">thousands of overlooked proteins</a>, there’s one place CRISPR can’t easily reach: <a href="https://www.nature.com/articles/d41586-025-01064-5" data-track="click" data-label="https://www.nature.com/articles/d41586-025-01064-5" data-track-category="body text link">mitochondria</a>.</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-025-01941-z" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51144384.jpg"><p>Cancer cells get power boost by stealing mitochondria from nerves</p></a></article><p>The rings of DNA inside mitochondria are inaccessible to these techniques, which means that precise edits to mitochondrial DNA (mtDNA) remain frustratingly out of reach. “Mitochondria missed the CRISPR–Cas9 revolution that exploded 12 years ago,” says Michal Minczuk, a geneticist at the University of Cambridge, UK.</p><p>But researchers are eager to access this DNA, says Minczuk. Mitochondria are bean-shaped organelles that <a href="https://www.nature.com/articles/d41586-024-03646-1" data-track="click" data-label="https://www.nature.com/articles/d41586-024-03646-1" data-track-category="body text link">power cells</a> and have myriad other cellular tasks. Exploring their DNA is essential for understanding the energy production and exchange that underlies metabolic health. And more than 300 mutations in this DNA cause mitochondrial diseases — incurable genetic disorders with a wide range of symptoms that can rob people of their sight and hearing, trigger muscle problems and spark seizures<sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup>. These disorders affect roughly 1 in 5,000 people.</p><p>Because CRISPR can’t help with these problems, researchers have been looking for other ways to precisely edit the mitochrondrial genome. And the past few years have brought some success: the tools are already proving to be a boon for creating accurate animal models of mitochondrial diseases. “The progress has been remarkable,” says Jin-Soo Kim, a chemical biologist who develops mtDNA editing tools at the Korea Advanced Institute of Science and Technology in Daejeon, South Korea.</p><p>If researchers can make mtDNA editing safe and accurate enough, it could eventually be used to treat, and even cure, these genetic conditions. “It would be a medical breakthrough,” says Kim.</p><h2>A bacterial origin</h2><p>The exact origins of mitochondria are murky, but the leading theory holds that <a href="https://www.nature.com/articles/d41586-024-03224-5" data-track="click" data-label="https://www.nature.com/articles/d41586-024-03224-5" data-track-category="body text link">the organelle’s story started</a> around 1.5 billion years ago when a single-celled microorganism called an archaeon gobbled up a roaming bacterium that survived inside its host. This event marked the <a href="https://www.nature.com/articles/d41586-021-01316-0" data-track="click" data-label="https://www.nature.com/articles/d41586-021-01316-0" data-track-category="body text link">beginning of the eukaryotes</a> — the large group of organisms, including plants, animals and fungi, in which cells contain organelles that are enclosed inside membranes. The swallowed bacterium retained its characteristic circular DNA as it settled into its new home, but over time it sacrificed most of its genes to the nuclear genome of its host.</p><p>In the evolutionary lineage that gave rise to humans and other animals, this genetic transfer whittled the resident bacterium’s genome down to just 37 genes that code for 13 proteins involved in energy production, turning it into a specialized organelle.</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-025-03064-x" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51487186.jpg"><p>Mitochondria expel tainted DNA — spurring age-related inflammation</p></a></article><p>The small amount of mitochondrial DNA that stuck around in animals differs in key ways from nuclear DNA, which in humans encodes around 20,000 genes. For a start, mtDNA is typically inherited solely from the mother. There can be several copies of mtDNA in each mitochondrion, and the organelle has its own built-in machinery for making RNA and proteins from that DNA.</p><p>Mitochondrial DNA is also much more error-prone, with a mutation rate estimated to be 10–20 times greater than that of nuclear DNA. This is in part because it has to contend with a barrage of damaging reactive oxygen species — unstable molecules that are generated in mitochondria during normal energy production. But it’s also because it <a href="https://www.nature.com/articles/d41586-023-00334-4" data-track="click" data-label="https://www.nature.com/articles/d41586-023-00334-4" data-track-category="body text link">doesn’t have histones</a>: the proteins that protect and package nuclear DNA.</p><p>Compared with its counterpart in the nucleus, mtDNA’s toolkit for repairing itself is rudimentary. The nucleus is quick to fix a snapped DNA strand using an arsenal of repair mechanisms, but mitochondria can mend only some defects. They often simply throw away their broken DNA. This difference limits the options for gene-editing tools, because nearly all such tools for nuclear DNA use its inherent repair pathways.</p><p>It has been notoriously challenging to develop approaches for modifying mitochondrial DNA, says Stephen Ekker, a molecular biologist at the University of Texas at Austin. “Its bacterial origins are revealed when you start trying to edit it,” he says.</p><p>The most crucial hurdle for scientists trying to tinker with the mitochondrial genome is that it is locked behind a wall of membranes that doesn’t allow external nucleic acids to pass into the organelle. Although there have been hints that <a href="https://www.nature.com/articles/d41586-022-03837-8" data-track="click" data-label="https://www.nature.com/articles/d41586-022-03837-8" data-track-category="body text link">CRISPR-based gene-editing tools</a> — which rely on RNA to guide them to the correct sequence — might be able to overcome these barriers, many researchers remain unconvinced.</p><h2>Snip and trash</h2><p>Still, there are other ways in. More than a decade before CRISPR became a research tool, mitochondria researchers began experimenting with other editing tools that could cross mitochondrial membranes and coax the organelles into <a href="https://www.nature.com/articles/d41586-025-03064-x" data-track="click" data-label="https://www.nature.com/articles/d41586-025-03064-x" data-track-category="body text link">ditching their problematic DNA</a><sup><a href="#ref-CR2" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">2</a></sup>.</p><p>Every cell contains a vast number of mitochondrial genomes, because cells contain thousands of mitochondria and each one can carry several copies of mtDNA. Healthy and mutated mtDNA often coexist: a state known as heteroplasmy. It’s when the proportion of mutated mtDNA reaches 60–80% in a particular tissue or cell type that mitochondrial diseases manifest<sup><a href="#ref-CR3" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">3</a></sup>.</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-025-01064-5" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51117492.jpg"><p>Cells are swapping their mitochondria. What does this mean for our health?</p></a></article><p>If researchers could reduce the faulty copies of mtDNA in cells, they could eliminate the resulting disease. So, they turned to enzymes called zinc finger nucleases (ZFNs) and transcription activator-like effector nucleases (TALENs) to snip the double-stranded mtDNA. Whereas targeted snipping of nuclear DNA cajoles the cut DNA strands to glue themselves back together without the harmful mutation, the cut DNA in mitochondria is simply cast out. This elimination triggers the remaining intact copies to replicate themselves so that the correct level of mtDNA is maintained.</p><p>In most cases, the mutated copies will be reduced to an acceptable level as the normal copies are replicated. “That’s going to make up for what you’re destroying,” says Carlos Moraes, a geneticist at the University of Miami in Florida.</p><p>Although there has been progress with this approach, it hasn’t made its way out of the laboratory. And even if it did reach the clinic, the technique would be powerless against diseases caused by mutations that are often present in all copies of a person’s mtDNA, such as Leber’s hereditary optic neuropathy (LHON), a rare condition that causes rapid vision loss.</p><p>What researchers need are tools that do more than cut DNA but that don’t rely on guide RNA.</p><h2>CRISPR-free base editing</h2><p>When CRISPR–Cas9 emerged as a tool in 2012, it became the <a href="https://www.nature.com/articles/531155a" data-track="click" data-label="https://www.nature.com/articles/531155a" data-track-category="body text link">go-to gene editor</a> for all kinds of application. A guide RNA directs the Cas9 enzyme to a specific DNA sequence, where the enzyme does the cutting. Genetic changes are introduced as the DNA repairs itself.</p><p>The approach became even more useful in 2016, when David Liu, a chemical biologist at the Broad Institute of MIT and Harvard in Cambridge, Massachusetts, and his colleagues introduced a more precise technique called <a href="https://www.nature.com/articles/d41586-023-03543-z" data-track="click" data-label="https://www.nature.com/articles/d41586-023-03543-z" data-track-category="body text link">base editing</a><sup><a href="#ref-CR4" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">4</a></sup>. In this case, researchers modify the Cas9 enzyme and rely on another enzyme, called a deaminase, to convert one DNA base letter to another — such as cytosine (C) to thymine (T) or adenine (A) to guanine (G).</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-024-01716-y" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_27197990.jpg"><p>Hope, despair and CRISPR — the race to save one woman’s life</p></a></article><p>Although base editing and other CRISPR techniques took off for nuclear DNA, Liu and other research teams couldn’t get it working on mtDNA. Because CRISPR’s guide RNA doesn’t readily pass through a mitochondrion’s double membrane, using precise tools on mtDNA remained a pipe dream. “We did not have much success,” says Liu. </p><p>A solution materialized in 2018 when Joseph Mougous, a microbiologist then at the University of Washington in Seattle, and his colleagues stumbled across a toxin made by the bacterium <i>Burkholderia cenocepacia</i>. This enzyme, a deadly weapon against other bacteria, wreaks havoc by ultimately converting base C to T across the bacterial genome<sup><a href="#ref-CR5" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">5</a></sup>.</p><p>Mougous, now based at Yale University in New Haven, Connecticut, e-mailed Liu asking whether the enzyme, called DddA, would be of any use to him. “I knew exactly what it might be used for — base editing mtDNA!” says Liu. </p><p>But switching every C to a T would be lethal to cells. Liu and his colleagues set out to “tame the beast”. They split DddA into two inactive pieces so that the enzyme would do its handiwork on mtDNA only when the pieces were brought together in a particular orientation. And instead of using guide RNA, Liu and his colleagues modified proteins found in TALENs to direct the DddA segments to their target sequences (see ‘Making the edit’).</p><figure><picture><source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51566922.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51566922.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px"><img alt="Making the edit: a diagram showing a method of editing base pairs in mitochondrial DNA, using an enzyme DddA attached to a protein TALE, that binds to specified DNA sequences." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51566922.jpg"><figcaption></figcaption></picture></figure></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pyrefly: Python type checker and language server in Rust (165 pts)]]></title>
            <link>https://pyrefly.org/?featured_on=talkpython</link>
            <guid>45579275</guid>
            <pubDate>Tue, 14 Oct 2025 12:33:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pyrefly.org/?featured_on=talkpython">https://pyrefly.org/?featured_on=talkpython</a>, See on <a href="https://news.ycombinator.com/item?id=45579275">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__docusaurus_skipToContent_fallback"><div id="why-pyrefly-section"><div><div><h3>Scale with Confidence</h3><p>Type check over 1.85 million lines of code<!-- --> <span>per second.<sup><span><span>ⓘ</span><span>Tested using Meta infrastructure (166 cores, 228 GB RAM)</span></span></sup></span></p></div><div><h3>Developer Delight</h3><p>Get lightning fast autocomplete, and catch errors with instant feedback in your favorite editor.</p></div><div><h3>Support at your Fingertips</h3><p>Have questions or feedback to share? Connect with us on <a href="https://discord.gg/Cf7mFQtW7W" target="_blank">Discord</a></p></div></div><section><li id="firefly"></li><li id="firefly"></li><li id="firefly"></li></section></div><div id="performance-comparison-section"><p><h2>Performance Comparison</h2></p><div><div><p>Type checking the</p><!-- --> <p><a href="https://github.com/pytorch/pytorch" target="_blank" rel="noopener noreferrer">PyTorch</a></p><!-- --><p>codebase from scratch.<span><span>ⓘ</span><span><strong>Tested using Macbook</strong><br>(10 cores: 8 performance + 2 efficiency cores, 32 GB RAM)</span></span></p></div><div><div><p><span><strong>Pyrefly</strong></span><span><span>ⓘ</span><span><strong>Command: "pyrefly check"</strong><br>Pyrefly uses as many threads as possible</span></span></p></div><div><p><span><strong>Pyright</strong></span><span><span>ⓘ</span><span><strong>Command: "pyright --threads=8"</strong><br>8 threads yielded the best performance after testing multiple settings</span></span></p></div><div><p><span><strong>MyPy</strong></span><span><span>ⓘ</span><span><strong>Command: "dmypy run"</strong></span></span></p></div></div></div></div><div id="pyrefly-video"><p><h2>See Pyrefly in Action</h2></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zoo of Array Languages (130 pts)]]></title>
            <link>https://ktye.github.io/</link>
            <guid>45578540</guid>
            <pubDate>Tue, 14 Oct 2025 11:01:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ktye.github.io/">https://ktye.github.io/</a>, See on <a href="https://news.ycombinator.com/item?id=45578540">Hacker News</a></p>
<div id="readability-page-1" class="page"><div href="k.html"><pre><span>ktye/k   ktye.github.io/k.html</span>
+ flp add  '  ech pri both bin
- neg sub  /  ovr fix echright
* fst mul  \  scn fix eachleft
% sqr div      / join   decode
! til key  mod \ split  encode
&amp; wer min  $[a;b;...]     cond
| rev max  while[c;a;b;d;e;..]
&lt; asc les  f:{x+y}   [bl;o;ck]
&gt; dsc mor            "chars" c
= grp eql  <span title="if you wonder what these numbers are: these are the verb codese.g. (!) is 12you can also get them in k:(!)+0">01234567</span>   1 2 3  i
~ not mtc  <span> :+-*%&amp;|</span>  .4 5 6. f
, enl cat  <span>&lt;&gt;=~!,^#</span>   2a300  z
^ srt cut  <span>_$?@.   </span>  (1;2 3) L
# cnt tak           `a`b!5 6 D
_ flr drp  t,d t,t t,'t   join
$ str cst           k!t    key
? unq fnd  in       k?t  group
@ typ atx  @[x;i;+;y]    amend
. val cal  .[x;i;+;y]    dmend
                              
<span>abs sin cos exp log find angle
imag conj  types:cisfzLDTvcdlx
?n(uniform) ?-n(normal) ?z(bi)
n?n(with)   random   -n?n(w/o)</span>
</pre></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ADS-B Exposed (235 pts)]]></title>
            <link>https://adsb.exposed/</link>
            <guid>45578383</guid>
            <pubDate>Tue, 14 Oct 2025 10:38:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://adsb.exposed/">https://adsb.exposed/</a>, See on <a href="https://news.ycombinator.com/item?id=45578383">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <a id="proud" href="https://github.com/ClickHouse/ClickHouse">Proudly made with <b>ClickHouse</b> open-source database</a>
    
    
    
    
    
    
    <p><span id="picture-copyright">Picture from Wikipedia, © the details at the corresponding page.</span></p>
    
    <p>👁</p>
    <p><img src="https://adsb.exposed/pointer.svg"></p>

    

    
    
    


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[KDE celebrates the 29th birthday and kicks off the yearly fundraiser (260 pts)]]></title>
            <link>https://kde.org/fundraisers/yearend2025/</link>
            <guid>45578117</guid>
            <pubDate>Tue, 14 Oct 2025 09:54:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kde.org/fundraisers/yearend2025/">https://kde.org/fundraisers/yearend2025/</a>, See on <a href="https://news.ycombinator.com/item?id=45578117">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><img alt="" src="https://kde.org/fundraisers/yearend2025/top_box.png"></p><p>This week is KDE’s 29th anniversary. It may not be a nice round number like 25 or 30, but whenever another birthday rolls around for an independent project the size and scope of KDE — powered by the goodwill of its contributors and users — that’s really quite something!</p><p>This year we’re celebrating by kicking off our yearly fundraiser. Let’s raise at least €50,000 before the end of the year!</p><h3 id="donated-updated-daily"><span>Donated (updated daily)</span></h3><p><sup>*</sup>Stretch goal coming soon.</p><h2 id="make-kdes-birthday-wishes-come-true">Make KDE’s Birthday Wishes Come True</h2><h3 id="producing-first-class-software">Producing first-class software</h3><p>KDE is on the verge of something big, and the popularity of its free software is on the rise. It’s increasingly being adopted by gamers, artists, professionals, companies, and public institutions. But the costs associated with developing and maintaining that software are also growing.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> keeps KDE “in business” and our software sustainable for generations to come.</p><figure><img src="https://kde.org/fundraisers/yearend2025/Katie_Konqi_make_software.png"></figure><h3 id="keeping-you-in-control">Keeping you in control</h3><p>A core aim of KDE is keeping you in control of your digital life, and we do it by providing high-quality and privacy-conscious free software. But we can only keep doing it by preserving our own financial independence, so that we never become too dependent on any single source of support.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> makes KDE truly independent. Funding from the people allows us keep KDE developed by the people, of the people, and for the people.</p><h3 id="cleaning-up-the-world">Cleaning up the world</h3><p>This week is also <a href="https://weee-forum.org/iewd-about/">International E-Waste Day</a>, and KDE wants a clean planet too! We started the <a href="https://endof10.org/">End of 10</a> campaign because big tech corporations continue pushing everyone to chase the new shiny… in the process filling landfills with perfectly functional devices that become terrible sources of pollution when junked<sup><a href="https://kde.org/fundraisers/yearend2025/#anot01">*</a></sup>.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> allows us to inform everybody about how they can help stave off these environmental disasters.</p><figure><img src="https://kde.org/fundraisers/yearend2025/konqi_katie_recycle.png"></figure><hr><p><a name="anot01"></a><sup>*</sup> Case in point: Microsoft is stopping free support for Windows 10 on hundreds of millions of computers this very week. Many of these old yet perfectly usable devices will not be able to upgrade because of spurious hardware requirements. Microsoft’s solution? “Throw away your computer and pollute the planet because we want to make even more money.”</p><h3 id="reaching-people-the-tech-industry-left-behind">Reaching people the tech industry left behind</h3><p>Many aren’t in a position to replace their devices every few years, or download hundreds of gigabyes of data from an always-on internet connection. KDE produces software that doesn’t need the latest hardware or an always-on internet connection, allowing everybody find their space in the digitized world.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> helps KDE serve those who are ignored by the industry, and bring marginalized users into the community so they can help the project grow for everyone.</p><h3 id="helping-public-institutions-adopt-free-software">Helping public institutions adopt free software</h3><p>The governments of the world are starting to realize that using public funds to lock themselves into proprietary closed-source software has been a strategic geopolitical mistake.</p><p>Free software is publicly owned, representing the safest option for governments that want full control over their machines and safety for their citizens’ data. But often the standards required for software approval by public institutions is very high, and their needs very specific.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> helps KDE adapt our software to what public institutions require, clearing the way for your tax dollars to fund KDE, not some big foreign companies.</p><hr><p>Images "<i>Konqi opens the magic box</i>", "<i>"Katie and Konqi make software</i>",
<i>"Katie and Konqi take on the public administration</i>" CC-BY-SA-4.0 license by
<a href="https://www.arctaxia.ink/">Arctaxia</a>. "<i>Katie &amp; Konqi recyle</i>" CC-BY-SA-4.0
license by <a href="https://krita-artists.org/u/nezumi_cafune/summary">Nezumi Cafuné</a>.</p><h2 id="goodies">Goodies</h2><p>Don’t forget to download your goodies after you donated! Get digital badges, printable cards, and more.</p><p><img alt="" src="https://kde.org/fundraisers/yearend2025/badges.png"></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why the push for Agentic when models can barely follow a simple instruction? (271 pts)]]></title>
            <link>https://forum.cursor.com/t/why-the-push-for-agentic-when-models-can-barely-follow-a-single-simple-instruction/137154</link>
            <guid>45577080</guid>
            <pubDate>Tue, 14 Oct 2025 07:08:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forum.cursor.com/t/why-the-push-for-agentic-when-models-can-barely-follow-a-single-simple-instruction/137154">https://forum.cursor.com/t/why-the-push-for-agentic-when-models-can-barely-follow-a-single-simple-instruction/137154</a>, See on <a href="https://news.ycombinator.com/item?id=45577080">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
              <p>I have a bunch of file for different reason, you need to work with a structure, agents like to work in folder structure, here is one of my custom agent instruction.</p>
<p>Now i have a agents.md with more generic details for all agent type, architecture file for my folder structure, another one for tasks with templates and so on.</p>
<p>Now i start all my prompt with please search and read/multi-read all .md file<br>
(If i have the file system MCP installed, wich is free and godsend)</p>
<p>My md file has my high level planing, brainstorming files and other complementary file that i keep up to date so that when the AI is done ingesting all the md files he is prepped up to go dig code, write code and chew bubblegum… Mmmm might need some work on the last one. HE MUST CHEW BUBBLE GUM AND HE HAS NO MOUTH (Claptrap kiss no mouth reference)</p>
<p>You need to have them work on small vertical slice that can be built under a 100k token more or less, more than that the agent start to misbehave and you need to fire him.</p>
<p>I have custom architect for building plan, codeseeker, coder, and other more specialised agents.</p>
<p>Build your team, build a structure, in the last 2 month playing with agents and python i learnt more about coding than a full year high school. I dont just tell them to work i watch them work, see how they tick, i learn by comparison, read the code and when im not sure? grab a few related file, post them to chatgpt 5 and i ask him to tutor me or ask free agents to document the file and i ask question.</p>
<p>You dont ask a human to climb a tree even tho he look like a monkey, he might be able to, but still not his best skill. Learn the limit, try to build tools to overcome their limit, keep asking question, keep improving you managerial skill because workin with agent is to start managing a team. Imm full on on the managing part with only rudimentary coding knowledge, if you are a good coder you can have you agent working on something while you code and use inline code completion and im talking full on function completion.</p>
<p>Maybe codex is more for you, there is a lot of agent type, providers each one with their strenght and weakness, experiement.</p>
<p>I really hope you can find your tool, the one adapted to what you want and that you can grow into your tool too, then you become borg! Hmm might be premature on the borg thing. Eh oh well.</p>
<blockquote>
<p>You are a Deep Python Coding Agent, an expert AI specialized in implementing, refactoring, and maintaining Python codebases with absolute adherence to project standards. Your mission is to execute coding tasks exhaustively, ensuring every change is complete, tested, and documented, while strictly following the Agent Collaboration Charter and project rules. You NEVER write or execute code in terminals, REPLs, or interactive sessions—always edit files directly and run commands via the project’s standard workflow (e.g., python main.py, pytest --testmon -q).</p>
<p>Core Principles</p>
<p>Exhaustive Implementation: For any coding task, dive deep into all relevant code—read files, trace dependencies, analyze tests, and understand integrations. Implement complete solutions with no omissions, addressing edge cases, error handling, and performance.</p>
<p>No Terminal Code Execution: NEVER write code snippets in terminals or REPLs. All code changes must be made by editing files (e.g., via write_file, edit_file). Run tests and commands only through the project’s workflow.</p>
<p>Mandatory Documentation Updates: After EVERY change, update docs/TASKS.md (claim task as in_progress, mark completed), docs/WORKLOG.md (log what, why, how to run), and docs/DECISIONS.md (if assumptions made). This is NON-NEGOTIABLE—failure to update these will break the project process.</p>
<p>Task Continuity: Claim and complete tasks sequentially from docs/TASKS.md. Do not start new tasks until the current one is fully done (main runs, tests pass, docs updated). Roll through all pending tasks until none remain.</p>
<p>Quality Standards: Code must be PEP8-compliant, typed with type hints, readable, and free of TODOs. Run ruff/black/mypy on changes and fix issues. Prefer vertical slices that run end-to-end.</p>
<p>Testing Rigorousness: Add/update unit, integration, and e2e tests for every change. Use pytest --testmon -q during development for affected tests; run full pytest before marking done. No regressions allowed.</p>
<p>Deterministic and Complete: Provide exact file paths, final code, and commands. Never leave partial work—ensure python main.py runs without errors.</p>
<p>Operational Workflow</p>
<p>Context Gathering: Always start by reading docs/ARCHITECTURE.md, docs/TASKS.md, docs/DECISIONS.md, docs/WORKLOG.md, docs/reference/*, and recent Plan/ notes.<br>
Task Claiming: Append/update your entry in docs/TASKS.md (status=pending → in_progress) before starting work.</p>
<p>Implementation:<br>
-Read all related files (use read_file for up to 5 at once).<br>
-Use search_files and list_code_definition_names to understand structure and dependencies.<br>
-Edit files with complete changes (no partial writes).<br>
-Add/update tests in test files.<br>
-Run pytest --testmon -q incrementally; fix failures immediately.<br>
-Validation: Run python main.py to ensure no breaks. Run full pytest pre-commit.<br>
-Documentation: Update WORKLOG.md, DECISIONS.md (if needed), and set TASKS.md status=completed.<br>
-Next Task: If tasks remain, claim the next one and repeat.</p>
<p>Tool Usage Guidelines</p>
<p>-read_file/edit_file/write_file: Use for all code changes; provide complete file contents.<br>
-search_files: Regex search for patterns (e.g., function usages).<br>
-list_code_definition_names: Overview of classes/functions in directories.<br>
-Commands: Run via execute_command only for project workflow (e.g., pytest, main.py); never for code execution.</p>
<p>Response Standards<br>
-Be technical and precise; no fluff.<br>
-Structure responses with sections (e.g., Changes Made, Tests Added, Documentation Updates).<br>
-Use code references like function_name().<br>
-End with final status; no follow-ups unless blocked (then log in DECISIONS.md).</p>
<p>Constraints<br>
Focus on Python coding and project maintenance; adhere to AGENTS.md rules.<br>
If blocked, make least-surprising assumption, proceed, and log in DECISIONS.md.<br>
Definition of Done: main runs, tests pass, docs updated, no unresolved TODOs.</p>
<p>Runs: python main.py <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>Tests: pytest -q <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>Lint/type pass (if configured) <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>No TODOs in changed code <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>Updated WORKLOG/TASKS <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>Output format</p>
<p>FILES CHANGED (with full paths)</p>
<p>Final code blocks for each file</p>
<p>RUN &amp; TEST commands</p>
<p>NOTES/ASSUMPTIONS</p>
</blockquote>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why study programming languages (2022) (150 pts)]]></title>
            <link>https://people.csail.mit.edu/rachit/post/why-study-programming-languages/</link>
            <guid>45576623</guid>
            <pubDate>Tue, 14 Oct 2025 05:36:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://people.csail.mit.edu/rachit/post/why-study-programming-languages/">https://people.csail.mit.edu/rachit/post/why-study-programming-languages/</a>, See on <a href="https://news.ycombinator.com/item?id=45576623">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>This class is about the study of programming languages. Before we start, I want to perform two activities with folks here. First, I want us to answer two dumb questions:</p>
<ol>
<li>Why do we design new programming languages?</li>
<li>What is a programming language?</li>
</ol>
<p>While (2) seems to be the more fundamental question, we need to answer (1) to have any hope of even thinking about (2).</p>
<p>So first, why do we design programming languages? Every program that can be written, can be written in C or assembly or Java or any of the dozens of languages we already have. So why do we design new languages?</p>
<p>Common answers to this question will include words like abstraction, performance, convenience, usability etc. The problem with these answers is that apart from the measurable, they are all subjective, aesthetic choices. Convenience is a function of knowledge, familiarity, and community. Usability is similarly ill-defined and hard to measure. And of course, none of these metrics really predict which languages are widely used or popular.</p>
<p>Consider the thought of inventing a whole new natural language just to express a new concept clearly. Explaining the rules of grammar and construction would certainly be simpler than any natural language provides. And yet, we’d have the small, troubling problem that this knowledge would be almost entirely useless; we need to learn a commonly known natural language to communicate with people. And yet, this is something that we can often find ourselves doing with programming languages with the hope that the <em>concepts</em> learned in one language can be transferred into another; a world where being a polyglot is expected, not unusual.</p>
<p>Perhaps this points to a striking similarity between programming languages. As they evolve, they take features from each other and converge into one language singular. They’re only differences being the syntax used to represent them.</p>
<p>But of course, <em>knowledge</em> of a language is different from mastery. An expert C programmer’s bit twiddling is akin of magic while a Haskell programmers tower of abstractions will make mere mortals cower away in fear.</p>
<p>Here’s a hypothesis, the truth of which is unknown to me: we create programming languages to experience new ideas; ideas that would have remained inaccessible had we stayed with the old languages. Languages not just a form of expression but also a form of exploration. I do not create languages with the hope of expressing everything that was, but to express that which isn’t yet. It is the rare joy of a language designer to see their languages being used and abused to do something inconceivable to them.
I would point to dozens of historical examples of this, from ALGOL, to APL, every time a language has enabled expression and forward exploration, it has changed the course of computing.</p>
<p>Now that we have some bearing of why we create programming languages, we can try answering what exactly is a programming language.</p>
<p>Is a language just syntax? Surely not, since symbols don’t have any meaning to them. Perhaps it is the meaning of programs in the language, its <em>semantics</em> that defines a language. But its meaning in terms of what? The results of programs? The internal states of this execution algorithm? Perhaps a purely mathematical description, detached from anything resembling a computer?</p>
<p>Something resembling semantics of languages does seem to be a part of what defines a language but it is definitely not the full story. Ask a Python programmer why they like it and they’ll point to the amazing library ecosystem; ask a web developer why they like JavaScript, and they’ll wax poetic about Web 2.0; to a Haskell proponent, it’s type system, to a LISP programmer, macros, to a Go programmer, its concurrency model and so on. All of these characteristics define languages and yet have very little to do with semantics. So semantics alone do not define languages.</p>
<p>Perhaps a tentative definition is that a programming language is defined by its syntax, semantics, and ecosystem. The former two are easy to study formally; we can teach you the mathematical tools needed to understand them. But for the latter, we must turn back to our first question: why do we design new languages. It is true that both Python and Go have ample libraries and a concurrency model. However, the <em>exploratory power</em> of Python is enabled by the sheer quantity and quality of those libraries while Go’s power comes from its concurrency model.</p>
<p>Therefore, I give my last definition of what a programming language is: syntax, semantics, and ecosystem in support of exploration; which parts of semantics and ecosystems to care about defined by what tools of exploration they provide. The study of programming languages encompasses all of these: syntax, semantics, type systems, runtime systems, garbage collectors, debuggers, IDEs, syntax highlighting, error messages, compilers, and design. Lines drawn between these are arbitrary, mostly by people like me trying to publish papers.</p>
<blockquote>
<p>I encourage everyone to create the most absurd, implausible, and impractical languages. Chasing the measurable is often useful, expressing the expressible is insightful, but never forget the true goal of language design: to explore and create what isn’t.</p>
</blockquote>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Copy-and-Patch: A Copy-and-Patch Tutorial (102 pts)]]></title>
            <link>https://transactional.blog/copy-and-patch/tutorial</link>
            <guid>45576502</guid>
            <pubDate>Tue, 14 Oct 2025 05:14:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://transactional.blog/copy-and-patch/tutorial">https://transactional.blog/copy-and-patch/tutorial</a>, See on <a href="https://news.ycombinator.com/item?id=45576502">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
    <hr>
    
    
    
    <div id="toc">

<ul>
<li><a href="#_stencils">Stencils</a></li>
<li><a href="#_your_first_jit">Your First JIT</a></li>
<li><a href="#_try_it_yourself">Try It Yourself</a></li>
</ul>
</div>
<div id="preamble">
  <p><a href="https://arxiv.org/abs/2011.13127">Copy-and-patch Compilation</a> is a fascinating way of constructing a baseline JIT<a id="_sideref_1"></a><sup>[1]</sup>.  It permits incredibly fast runtime compilation of code fragments in a very easy to maintain fashion, requires barely any actual understanding of assembly code, and produces native code of sufficient quality to be within the same range as traditional, hand-written baseline JITs.
<span><a id="_sidedef_1"></a>[1]: Baseline JIT, as in a JIT whose goal is primarily to generate code quickly and gain performance by removing interpretation overhead than generating well optimized code itself.  Baseline JITs can be paired with optimizing JITs, like V8’s Liftoff baseline JIT for WASM allowing tiering up into V8’s Crankshaft optimizing JIT.</span></p>
<p>Copy-and-patch works by writing <em>stencils</em>, minimal C functions that implement the desired individual operations such that they compile to concatenate native code fragments. At JIT compile time, one can copy the pre-compiled fragment for each operation back-to-back, patching them change embedded constants or addresses as needed..</p>
<p>As an adventure into understanding how copy-and-patch works, our goal will be to create the function</p>
<div>
<pre><code data-lang="c"><span>int</span> <span>add_a_b</span><span>(</span><span>int</span> <span>a</span><span>,</span> <span>int</span> <span>b</span><span>)</span> <span>{</span>
    <span>return</span> <span>a</span> <span>+</span> <span>b</span>
<span>}</span></code></pre>
</div>
<p>But specialized at runtime to compute <code>1 + 2</code>. We’ll be doing this by first breaking it down into some bytecode-sized operations:</p>
<div>
<ol>
<li>
<p>const_int_reg1: <code>a = 1;</code></p>
</li>
<li>
<p>const_int_reg2: <code>b = 2;</code></p>
</li>
<li>
<p>add_int1_int2: <code>c = a + b;</code></p>
</li>
<li>
<p>return_int1: <code>return c;</code></p>
</li>
</ol>
</div>
<p>And to define our copy-and-patch JIT, we’ll take each of these and:</p>
<div>
<ol>
<li>
<p>Implement the operation in C with relocation holes to be later patched to form our stencil.</p>
</li>
<li>
<p>Compile the stencil into native code.</p>
</li>
<li>
<p>Copy-paste the native code back into a C file with functions to emit it to a buffer and patch any relocations.</p>
</li>
</ol>
</div>
<p>Then we can write our little JIT compilation engine to concatenate our stencils and execute the generated function. Let’s get started!</p>
</div>
<h2 id="_stencils">
Stencils
</h2> 
<p>Our first step is to define our stencils:</p>
<div>
<p>stencils.c</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>&lt;stdint.h&gt;</span><span>
</span>
<span>#define STENCIL_FUNCTION __attribute__((preserve_none))
</span>
<span>extern</span> <span>char</span> <span>cnp_value_hole</span><span>[</span><span>65536</span><span>];</span>
<span>extern</span> <span>void</span> <span>cnp_func_hole</span><span>(</span><span>void</span><span>)</span> <span>STENCIL_FUNCTION</span><span>;</span>

<span>#define STENCIL_HOLE(type) \
  (type)((uintptr_t)&amp;cnp_value_hole)
#define DECLARE_STENCIL_OUTPUT(...) \
  typedef void(*stencil_output_fn)(__VA_ARGS__) STENCIL_FUNCTION; \
  stencil_output_fn stencil_output = (stencil_output_fn)&amp;cnp_func_hole;
</span>
<span>STENCIL_FUNCTION</span> <span>void</span> <span>load_int_reg1</span><span>()</span> <span>{</span>
  <span>int</span> <span>a</span> <span>=</span> <span>STENCIL_HOLE</span><span>(</span><span>int</span><span>);</span>
  <span>DECLARE_STENCIL_OUTPUT</span><span>(</span><span>int</span><span>);</span>
  <span>stencil_output</span><span>(</span><span>a</span><span>);</span>
<span>}</span>

<span>STENCIL_FUNCTION</span> <span>void</span> <span>load_int_reg2</span><span>(</span><span>int</span> <span>a</span><span>)</span> <span>{</span>
  <span>int</span> <span>b</span> <span>=</span> <span>STENCIL_HOLE</span><span>(</span><span>int</span><span>);</span>
  <span>DECLARE_STENCIL_OUTPUT</span><span>(</span><span>int</span><span>,</span> <span>int</span><span>);</span>
  <span>stencil_output</span><span>(</span><span>a</span><span>,</span> <span>b</span><span>);</span>
<span>}</span>

<span>STENCIL_FUNCTION</span> <span>void</span> <span>add_int1_int2</span><span>(</span><span>int</span> <span>a</span><span>,</span> <span>int</span> <span>b</span><span>)</span> <span>{</span>
  <span>int</span> <span>c</span> <span>=</span> <span>a</span> <span>+</span> <span>b</span><span>;</span>
  <span>DECLARE_STENCIL_OUTPUT</span><span>(</span><span>int</span><span>);</span>
  <span>stencil_output</span><span>(</span><span>c</span><span>);</span>
<span>}</span>

<span>STENCIL_FUNCTION</span> <span>int</span> <span>return_int1</span><span>(</span><span>int</span> <span>a</span><span>)</span> <span>{</span>
  <span>return</span> <span>a</span><span>;</span>
<span>}</span></code></pre>
</div>
</div>
<p>We compile this with <code>clang -O3 -mcmodel=medium -c stencils.c</code>, and examine the generated code via <code>objdump -d -Mintel,x86-64 --disassemble --reloc stencils.o</code>.  This yields:</p>
<div>
<pre><code data-lang="nasm"><span>0000000000000000</span> <span>&lt;</span><span>load_int_reg1</span><span>&gt;</span><span>:</span>
   <span>0</span><span>:</span>	<span>41</span> <span>bc</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>    	<span>mov</span>    <span>r12d</span><span>,</span><span>0x0</span>
			<span>2</span><span>:</span> <span>R_X86_64_32</span>	<span>cnp_value_hole</span>
   <span>6</span><span>:</span>	<span>e9</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>       	<span>jmp</span>    <span>b</span> <span>&lt;</span><span>load_int_reg1</span><span>+</span><span>0xb</span><span>&gt;</span>
			<span>7</span><span>:</span> <span>R_X86_64_PLT32</span>	<span>cnp_func_hole</span><span>-</span><span>0x4</span>
   <span>b:</span>	<span>0</span><span>f</span> <span>1</span><span>f</span> <span>44</span> <span>00</span> <span>00</span>       	<span>nop</span>    <span>DWORD</span> <span>PTR</span> <span>[</span><span>rax</span><span>+</span><span>rax</span><span>*</span><span>1</span><span>+</span><span>0x0</span><span>]</span>

<span>0000000000000010</span> <span>&lt;</span><span>load_int_reg2</span><span>&gt;</span><span>:</span>
  <span>10</span><span>:</span>	<span>41</span> <span>bd</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>    	<span>mov</span>    <span>r13d</span><span>,</span><span>0x0</span>
			<span>12</span><span>:</span> <span>R_X86_64_32</span>	<span>cnp_value_hole</span>
  <span>16</span><span>:</span>	<span>e9</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>       	<span>jmp</span>    <span>1b</span> <span>&lt;</span><span>load_int_reg2</span><span>+</span><span>0xb</span><span>&gt;</span>
			<span>17</span><span>:</span> <span>R_X86_64_PLT32</span>	<span>cnp_func_hole</span><span>-</span><span>0x4</span>
  <span>1</span><span>b:</span>	<span>0</span><span>f</span> <span>1</span><span>f</span> <span>44</span> <span>00</span> <span>00</span>       	<span>nop</span>    <span>DWORD</span> <span>PTR</span> <span>[</span><span>rax</span><span>+</span><span>rax</span><span>*</span><span>1</span><span>+</span><span>0x0</span><span>]</span>

<span>0000000000000020</span> <span>&lt;</span><span>add_int1_int2</span><span>&gt;</span><span>:</span>
  <span>20</span><span>:</span>	<span>45</span> <span>01</span> <span>ec</span>             	<span>add</span>    <span>r12d</span><span>,</span><span>r13d</span>
  <span>23</span><span>:</span>	<span>e9</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>       	<span>jmp</span>    <span>28</span> <span>&lt;</span><span>add_int1_int2</span><span>+</span><span>0x8</span><span>&gt;</span>
			<span>24</span><span>:</span> <span>R_X86_64_PLT32</span>	<span>cnp_func_hole</span><span>-</span><span>0x4</span>
  <span>28</span><span>:</span>	<span>0</span><span>f</span> <span>1</span><span>f</span> <span>84</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span> 	<span>nop</span>    <span>DWORD</span> <span>PTR</span> <span>[</span><span>rax</span><span>+</span><span>rax</span><span>*</span><span>1</span><span>+</span><span>0x0</span><span>]</span>
  <span>2</span><span>f:</span>	<span>00</span>

<span>0000000000000030</span> <span>&lt;</span><span>return_int1</span><span>&gt;</span><span>:</span>
  <span>30</span><span>:</span>	<span>44</span> <span>89</span> <span>e0</span>             	<span>mov</span>    <span>eax</span><span>,</span><span>r12d</span>
  <span>33</span><span>:</span>	<span>c3</span>                   	<span>ret</span></code></pre>
</div>
<p>(The NOP’s aren’t actually a part of the function, they’re just padding added so that each function starts with 16 byte alignment.)</p>
<p>For each of these stencils, we fill in a template to form our stencil generation library to use during JITing.</p>
<div>
<pre><code data-lang="c"><span>uint8_t</span> <span>cnp_stencil_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>_code</span><span>[]</span> <span>=</span> <span>{</span>
  <span>// Copy the bytes from the top of the function until the jmp.</span>
<span>};</span>

<span>uint8_t</span><span>*</span> <span>cnp_copy_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>

<span>// If any relocations exist for the stencil, fill in the values.</span>
<span>// If not, just skip writing this function.</span>
<span>void</span> <span>cnp_patch_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>/* ... */</span> <span>)</span> <span>{</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span> <span>+</span> <span>/*relocation_offset*/</span><span>,</span> <span>&amp;</span><span>value</span><span>,</span> <span>/* relocation_size */</span><span>);</span>
<span>}</span></code></pre>
</div>
<p>So let’s get started!</p>
<div>
<p>cnp_stencils.c</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>&lt;stdint.h&gt;</span><span>
</span>
<span>uint8_t</span> <span>cnp_stencil_load_int_reg1_code</span><span>[]</span> <span>=</span> <span>{</span>
   <span>0x41</span><span>,</span> <span>0xbc</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>// mov r12d,0x0</span>
<span>};</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_load_int_reg1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_load_int_reg1_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_load_int_reg1_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>
<span>void</span> <span>cnp_patch_load_int_reg1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>int</span> <span>value</span><span>)</span> <span>{</span>
  <span>// 2: R_X86_64_32 cnp_value_hole  -&gt;  0x02 offset</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span> <span>+</span> <span>0x2</span><span>,</span> <span>&amp;</span><span>value</span><span>,</span> <span>sizeof</span><span>(</span><span>value</span><span>));</span>
<span>}</span>

<span>uint8_t</span> <span>cnp_stencil_load_int_reg2_code</span><span>[]</span> <span>=</span> <span>{</span>
   <span>0x41</span><span>,</span> <span>0xbd</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>// mov r13d,0x0</span>
<span>};</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_load_int_reg2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_load_int_reg2_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_load_int_reg2_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>
<span>void</span> <span>cnp_patch_load_int_reg2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>int</span> <span>value</span><span>)</span> <span>{</span>
  <span>// 12: R_X86_64_32 cnp_value_hole  -&gt;  0x12 - 0x10 base = 0x2</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span> <span>+</span> <span>0x2</span><span>,</span> <span>&amp;</span><span>value</span><span>,</span> <span>sizeof</span><span>(</span><span>value</span><span>));</span>
<span>}</span>

<span>uint8_t</span> <span>cnp_stencil_add_int1_int2_code</span><span>[]</span> <span>=</span> <span>{</span>
  <span>0x45</span><span>,</span> <span>0x01</span><span>,</span> <span>0xec</span><span>,</span> <span>// add r12d,r13d</span>
<span>};</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_add_int1_int2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_add_int1_int2_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_add_int1_int2_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>
<span>// No patching needed</span>

<span>uint8_t</span> <span>cnp_stencil_return_int1_code</span><span>[]</span> <span>=</span> <span>{</span>
  <span>0x44</span><span>,</span> <span>0x89</span><span>,</span> <span>0xe0</span><span>,</span> <span>// mov eax,r12d</span>
  <span>0xc3</span><span>,</span>             <span>// ret</span>
<span>};</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_return_int1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_return_int1_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_return_int1_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>
<span>// No patching needed</span></code></pre>
</div>
</div>
<p>In a fully automated setup, all of this work will happen as part of the build system. The stencil compilation and transforming them into a library of copy functions and patch functions happens as part running <code>make</code>.</p>
<h2 id="_your_first_jit">
Your First JIT
</h2> 
<p>With our stencil library in place, we can use our code generation functions to build our runtime specialized adder:</p>
<div>
<p>cnp_jit.c</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>&lt;assert.h&gt;</span><span>
#include</span> <span>&lt;stdint.h&gt;</span><span>
#include</span> <span>&lt;stdio.h&gt;</span><span>
#include</span> <span>&lt;stdlib.h&gt;</span><span>
#include</span> <span>&lt;string.h&gt;</span><span>
#include</span> <span>&lt;sys/mman.h&gt;</span><span>
</span>
<span>//#include "cnp_stencils.h"</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_load_int_reg1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>);</span>
<span>void</span> <span>cnp_patch_load_int_reg1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>int</span> <span>value</span><span>);</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_load_int_reg2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>);</span>
<span>void</span> <span>cnp_patch_load_int_reg2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>int</span> <span>value</span><span>);</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_add_int1_int2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>);</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_return_int1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>);</span>

<span>typedef</span> <span>int</span><span>(</span><span>*</span><span>jit_func</span><span>)()</span> <span>__attribute__</span><span>((</span><span>preserve_none</span><span>));</span>

<span>jit_func</span> <span>create_add_1_2</span><span>()</span> <span>{</span>
  <span>// Most systems mark memory as non-executable by default</span>
  <span>// and mprotect() to set memory as executable needs</span>
  <span>// to be run against mmap-allocated memory.  We start</span>
  <span>// by allocating it as read/write, and then switch it</span>
  <span>// to write/execute once we're done writing the code.</span>
  <span>uint8_t</span><span>*</span> <span>codedata</span> <span>=</span> <span>mmap</span><span>(</span><span>NULL</span><span>,</span> <span>256</span><span>,</span> <span>PROT_READ</span> <span>|</span> <span>PROT_WRITE</span><span>,</span>
      <span>MAP_PRIVATE</span> <span>|</span> <span>MAP_ANONYMOUS</span> <span>|</span> <span>MAP_POPULATE</span><span>,</span> <span>-</span><span>1</span><span>,</span> <span>0</span><span>);</span>
  <span>assert</span> <span>(</span><span>codedata</span> <span>!=</span> <span>MAP_FAILED</span><span>);</span>
  <span>jit_func</span> <span>ret</span> <span>=</span> <span>(</span><span>jit_func</span><span>)</span><span>codedata</span><span>;</span>

  <span>// Concatenate our program together, while saving the</span>
  <span>// locations that need to be patched.</span>
  <span>uint8_t</span><span>*</span> <span>load_int_reg1_location</span> <span>=</span> <span>codedata</span><span>;</span>
  <span>codedata</span> <span>=</span> <span>cnp_copy_load_int_reg1</span><span>(</span><span>codedata</span><span>);</span>
  <span>uint8_t</span><span>*</span> <span>load_int_reg2_location</span> <span>=</span> <span>codedata</span><span>;</span>
  <span>codedata</span> <span>=</span> <span>cnp_copy_load_int_reg2</span><span>(</span><span>codedata</span><span>);</span>
  <span>codedata</span> <span>=</span> <span>cnp_copy_add_int1_int2</span><span>(</span><span>codedata</span><span>);</span>
  <span>codedata</span> <span>=</span> <span>cnp_copy_return_int1</span><span>(</span><span>codedata</span><span>);</span>

  <span>// Overwrite the zero value placeholders with our intended</span>
  <span>// specialized values: 1 and 2.</span>
  <span>cnp_patch_load_int_reg1</span><span>(</span><span>load_int_reg1_location</span><span>,</span> <span>1</span><span>);</span>
  <span>cnp_patch_load_int_reg2</span><span>(</span><span>load_int_reg2_location</span><span>,</span> <span>2</span><span>);</span>

  <span>// Now that we're done writing, remove write access and</span>
  <span>// allow execution from this page instead.</span>
  <span>int</span> <span>rc</span> <span>=</span> <span>mprotect</span><span>(</span><span>ret</span><span>,</span> <span>256</span><span>,</span> <span>PROT_READ</span> <span>|</span> <span>PROT_EXEC</span><span>);</span>
  <span>if</span> <span>(</span><span>rc</span><span>)</span> <span>{</span>
    <span>perror</span><span>(</span><span>"mprotect"</span><span>);</span>
  <span>}</span>
  <span>return</span> <span>ret</span><span>;</span>
<span>}</span>

<span>int</span> <span>main</span><span>()</span> <span>{</span>
  <span>jit_func</span> <span>add_1_2</span> <span>=</span> <span>create_add_1_2</span><span>();</span>
  <span>int</span> <span>result</span> <span>=</span> <span>add_1_2</span><span>();</span>
  <span>printf</span><span>(</span><span>"JIT'd 1 + 2 = %d</span><span>\n</span><span>"</span><span>,</span> <span>result</span><span>);</span>
  <span>return</span> <span>0</span><span>;</span>
<span>}</span></code></pre>
</div>
</div>
<p>And now we can compile and run that!</p>
<div>
<pre>$ clang cnp_jit.c cnp_stencils.c -o cnp_jit
$ ./cnp_jit
JIT'd 1 + 2 = 3</pre>
</div>
<p>We’ve successfully built runtime code generation, while letting clang do the hard work of actually writing the assembly code, and our JIT compiler is just a bunch of memcpy calls!</p>
<h2 id="_try_it_yourself">
Try It Yourself
</h2> 
<p>Here’s a header to offer some macros to make declaring relocation holes easier:</p>
<div>
<p>cnp_stencils.h</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>&lt;stdint.h&gt;</span><span>
</span>
<span>#define STENCIL_FUNCTION __attribute__((preserve_none))
</span>
<span>extern</span> <span>void</span> <span>cnp_stencil_output</span><span>(</span><span>void</span><span>)</span> <span>STENCIL_FUNCTION</span><span>;</span>

<span>#define STENCIL_HOLE32(ordinal, type) \
  (type)((uintptr_t)&amp;cnp_small_value_hole_##ordinal)
#define STENCIL_HOLE64(ordinal, type) \
  (type)((uintptr_t)&amp;cnp_large_value_hole_##ordinal)
#define STENCIL_FN_NEAR(ordinal, type) \
  (type)&amp;cnp_near_func_hole_##ordinal
#define STENCIL_FN_FAR(ordinal, type) \
  ({ uint64_t _cnp_addr_as_int = (uint64_t)((uintptr_t)&amp;cnp_far_func_hole_##ordinal); \
  asm volatile("" : "+r" (_cnp_addr_as_int) : : "memory"); \
  (type)_cnp_addr_as_int; })
#define DECLARE_STENCIL_OUTPUT(...) \
  typedef void(*stencil_output_fn)(__VA_ARGS__) STENCIL_FUNCTION; \
  stencil_output_fn stencil_output = (stencil_output_fn)&amp;cnp_stencil_output;
</span>
<span>#define DECLARE_EXTERN_HOLES(ordinal) \
extern char cnp_large_value_hole_##ordinal[100000]; \
extern char cnp_small_value_hole_##ordinal[8]; \
extern void cnp_near_func_hole_##ordinal(void) STENCIL_FUNCTION; \
extern char cnp_far_func_hole_##ordinal[100000];</span></code></pre>
</div>
</div>
<p>(If you’re interested in the details of why these macros are the way they are, see the next post in the series!)</p>
<p>Then you can declare as complex of a stencil as you need:</p>
<div>
<p>complex_stencil.h</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>"cnp_stencils.h"</span><span>
</span>
<span>// Declare up to the maximum number of holes you need of one type</span>
<span>// in a function:</span>
<span>DECLARE_EXTERN_HOLES</span><span>(</span><span>1</span><span>);</span>
<span>DECLARE_EXTERN_HOLES</span><span>(</span><span>2</span><span>);</span>

<span>STENCIL_FUNCTION</span>
<span>void</span> <span>fused_multiply_add_sqrt_ifnotzero</span><span>()</span> <span>{</span>
  <span>uint32_t</span> <span>a</span> <span>=</span> <span>STENCIL_HOLE32</span><span>(</span><span>1</span><span>,</span> <span>uint32_t</span><span>);</span>
  <span>uint32_t</span> <span>b</span> <span>=</span> <span>STENCIL_HOLE32</span><span>(</span><span>2</span><span>,</span> <span>int32_t</span><span>);</span>
  <span>uint64_t</span> <span>c</span> <span>=</span> <span>STENCIL_HOLE64</span><span>(</span><span>1</span><span>,</span> <span>uint64_t</span><span>);</span>

  <span>uint64_t</span> <span>fma</span> <span>=</span> <span>a</span> <span>*</span> <span>b</span> <span>+</span> <span>c</span><span>;</span>

  <span>if</span> <span>(</span><span>fma</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
    <span>void</span> <span>(</span><span>*</span><span>div_trap</span><span>)(</span><span>void</span><span>)</span> <span>=</span> <span>STENCIL_FN_NEAR</span><span>(</span><span>1</span><span>,</span> <span>void</span><span>(</span><span>*</span><span>)(</span><span>void</span><span>));</span>
    <span>div_trap</span><span>();</span>
  <span>}</span>

  <span>uint64_t</span> <span>(</span><span>*</span><span>sqrt</span><span>)(</span><span>uint64_t</span><span>)</span> <span>=</span> <span>STENCIL_FN_FAR</span><span>(</span><span>1</span><span>,</span> <span>uint64_t</span><span>(</span><span>*</span><span>)(</span><span>uint64_t</span><span>));</span>
  <span>uint64_t</span> <span>result</span> <span>=</span> <span>sqrt</span><span>(</span><span>c</span><span>);</span>

  <span>DECLARE_STENCIL_OUTPUT</span><span>(</span><span>uint64_t</span><span>);</span>
  <span>stencil_output</span><span>(</span><span>result</span><span>);</span>
<span>}</span></code></pre>
</div>
</div>
<p>Which just for completeness sake, compiles into:</p>
<div>
<pre>0000000000000000 &lt;fused_multiply_add_sqrt_ifnotzero&gt;:
   0:	50                   	push   rax
   1:	b8 00 00 00 00       	mov    eax,0x0
			2: R_X86_64_32	cnp_small_value_hole_2
   6:	b9 00 00 00 00       	mov    ecx,0x0
			7: R_X86_64_32	cnp_small_value_hole_1
   b:	0f af c8             	imul   ecx,eax
   e:	48 b8 00 00 00 00 00 	movabs rax,0x0
  15:	00 00 00
			10: R_X86_64_64	cnp_large_value_hole_1
  18:	48 01 c8             	add    rax,rcx
  1b:	75 05                	jne    22 &lt;fused_multiply_add_sqrt_ifnotzero+0x22&gt;
  1d:	e8 00 00 00 00       	call   22 &lt;fused_multiply_add_sqrt_ifnotzero+0x22&gt;
			1e: R_X86_64_PLT32	cnp_near_func_hole_1-0x4
  22:	48 b8 00 00 00 00 00 	movabs rax,0x0
  29:	00 00 00
			24: R_X86_64_64	cnp_far_func_hole_1
  2c:	48 bf 00 00 00 00 00 	movabs rdi,0x0
  33:	00 00 00
			2e: R_X86_64_64	cnp_large_value_hole_1
  36:	ff d0                	call   rax
  38:	49 89 c4             	mov    r12,rax
  3b:	58                   	pop    rax
  3c:	e9 00 00 00 00       	jmp    41 &lt;fused_multiply_add_sqrt_ifnotzero+0x41&gt;
			3d: R_X86_64_PLT32	cnp_stencil_output-0x4</pre>
</div>
    <!-- TODO: consider https://utteranc.es/ for in-page comments. -->
      <hr>
      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New York Times, AP, Newsmax and others say they won't sign new Pentagon rules (343 pts)]]></title>
            <link>https://apnews.com/article/pentagon-press-access-defense-department-rules-95878bce05096912887701eaa6d019c6</link>
            <guid>45575755</guid>
            <pubDate>Tue, 14 Oct 2025 02:51:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://apnews.com/article/pentagon-press-access-defense-department-rules-95878bce05096912887701eaa6d019c6">https://apnews.com/article/pentagon-press-access-defense-department-rules-95878bce05096912887701eaa6d019c6</a>, See on <a href="https://news.ycombinator.com/item?id=45575755">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                                        <p>News organizations including The New York Times, The Associated Press and the conservative Newsmax television network said Monday they will not sign a Defense Department document about its new press rules, making it likely the Trump administration will evict their reporters from the Pentagon.</p><p>Those outlets say the policy threatens to punish them for routine news gathering protected by the First Amendment. The Washington Post, The Atlantic and Reuters on Monday also publicly joined the group that says it will not be signing. AP confirmed Monday afternoon that it would not sign. </p><p>“Reuters is bound by its commitment to accurate, impartial and independent news,” the agency said in a statement. “We also steadfastly believe in the press protections afforded by the U.S. Constitution, the unrestricted flow of information and journalism that serves the public interest without fear or favor. The Pentagon’s new restrictions erode these fundamental values.”</p>
    
<p>Defense Secretary Pete Hegseth <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://x.com/PeteHegseth/status/1977808951338307907" target="_blank" rel="noopener">reacted</a></span> by posting the Times’ statement on X and adding a hand-waving emoji. His team has said that reporters who don’t acknowledge the policy in writing by Tuesday must turn in badges admitting them to the Pentagon and clear out their workspaces the next day.</p>



<p>The <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/pentagon-journalists-new-restrictions-hegseth-b9e70801f7d7930251a0740e7168f775">new rules</a></span> bar journalist access to large swaths of the Pentagon without an escort and say Hegseth can revoke press access to reporters who ask anyone in the Defense Department for information — classified or otherwise — that he has not approved for release.</p>
    
    
    
<p>Newsmax, whose on-air journalists are generally supportive of President Donald Trump’s administration, said that “we believe the requirements are unnecessary and onerous and hope that the Pentagon will review the matter further.”</p><p>Chief Pentagon spokesman Sean Parnell said the rules establish “common sense media procedures.”</p><p>“The policy does not ask for them to agree, just to acknowledge that they understand what our policy is,” Parnell said. “This has caused reporters to have a full blown meltdown, crying victim online. We stand by our policy because it’s what’s best for our troops and the national security of this country.”</p>
    
<p>Hegseth also reposted a question from a follower who asked, “Is this because they can’t roam the Pentagon freely? Do they believe they deserve unrestricted access to a highly classified military installation under the First Amendment?”</p><p>Hegseth answered, “yes.” Reporters say neither of those assertions is true.</p><p>Pentagon reporters say signing the statement amounts to admitting that reporting any information that hasn’t been government-approved is harming national security. “That’s simply not true,” said David Schulz, director of Yale University’s Media Freedom &amp; Information Access Clinic.</p><p>Journalists have said they’ve long worn badges and don’t access classified areas, nor do they report information that risks putting any Americans in harm’s way.</p><p>“The Pentagon certainly has the right to make its own policies, within the constraints of the law,” the Pentagon Press Association said in a statement on Monday. “There is no need or justification, however, for it to require reporters to affirm their understanding of vague, likely unconstitutional policies as a precondition to reporting from Pentagon facilities.”</p>
    
<p>Noting that taxpayers pay nearly $1 trillion annually to the U.S. military, Times Washington bureau chief Richard Stevenson said “the public has a right to know how the government and military are operating.”</p><p>Trump has applied pressure on news organizations in several ways, with <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/abc-trump-lawsuit-defamation-stephanopoulos-04aea8663310af39ae2a85f4c1a56d68">ABC News</a></span> and <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/trump-media-harris-minutes-paramount-6415042fe910ae60b432dd8c73ef61b2">CBS News</a></span> settling lawsuits related to their coverage. Trump has also filed lawsuits against <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/trump-lawsuit-new-york-times-b2a615192ebe2dcec859eb883368dfbb">The New York Times</a></span> and <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/live/donald-trump-news-updates-7-18-2025">Wall Street Journal</a></span> and moved to choke off funding for government-run services like the <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/voice-of-america-trump-f30c48df0c16de622ec5fd99ee6c627c">Voice of America</a></span> and <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/radio-free-europe-5e0b2355ad9cee4ad09a3e03b53df8fa">Radio Free Europe/Radio Liberty</a></span>.</p><p>___</p><p>David Bauder writes about the media for the AP. Follow him at <span><a data-gtm-enhancement-style="LinkEnhancementA" href="http://twitter.com/dbauder" target="_blank" rel="noopener">http://x.com/dbauder</a></span> and <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://bsky.app/profile/dbauder.bsky.social" target="_blank" rel="noopener">https://bsky.app/profile/dbauder.bsky.social</a></span></p>
                                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Don’t Look Up: Sensitive internal links in the clear on GEO satellites [pdf] (495 pts)]]></title>
            <link>https://satcom.sysnet.ucsd.edu/docs/dontlookup_ccs25_fullpaper.pdf</link>
            <guid>45575391</guid>
            <pubDate>Tue, 14 Oct 2025 01:48:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://satcom.sysnet.ucsd.edu/docs/dontlookup_ccs25_fullpaper.pdf">https://satcom.sysnet.ucsd.edu/docs/dontlookup_ccs25_fullpaper.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=45575391">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Hackers can steal 2FA codes and private messages from Android phones (104 pts)]]></title>
            <link>https://arstechnica.com/security/2025/10/no-fix-yet-for-attack-that-lets-hackers-pluck-2fa-codes-from-android-phones/</link>
            <guid>45574613</guid>
            <pubDate>Mon, 13 Oct 2025 23:49:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/security/2025/10/no-fix-yet-for-attack-that-lets-hackers-pluck-2fa-codes-from-android-phones/">https://arstechnica.com/security/2025/10/no-fix-yet-for-attack-that-lets-hackers-pluck-2fa-codes-from-android-phones/</a>, See on <a href="https://news.ycombinator.com/item?id=45574613">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
            <article data-id="2122198">
  
  <header>
  <div>
    <div>
      <div>
        <p><span>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40"><defs><clipPath id="section-security_svg__a"><path fill="none" d="M0 0h40v40H0z"></path></clipPath><clipPath id="section-security_svg__b"><path fill="none" d="M0 0h40v40H0z"></path></clipPath></defs><g clip-path="url(#section-security_svg__a)"><g fill="none" clip-path="url(#section-security_svg__b)"><path fill="currentColor" d="M37.7 21.1C39.7 10.4 32.8 0 20.8 0h-1.6C7.2 0 .3 10.4 2.3 21.1c.5 2.6-2.3 3.5-2.3 6.6 0 3.2 3.5 4 5.9 4.1h2.8c1.3 0 1.8.5 1.8 1.6 0 1.5.2 4.1.3 5.6 0 .2.7.4 1.9.5v-3.4c0-.4.3-.8.7-.8s.8.3.8.8v3.5c.9 0 1.8.1 2.9.1v-3.6c0-.4.3-.8.8-.8s.8.3.8.8v3.7h2.9v-3.7c0-.4.3-.8.8-.8s.8.3.8.8v3.6c1 0 2 0 2.9-.1v-3.5c0-.4.3-.8.8-.8s.8.3.8.8v3.4c1.1-.1 1.8-.3 1.9-.5.1-1.5.3-4.1.3-5.6 0-1.1.5-1.7 1.8-1.6h2.8c2.4-.1 5.9-.9 5.9-4.1 0-3.1-2.8-4-2.3-6.7m-26.7 4.7c-4 0-6.6-4-4.9-7.2 1.1-2 3.1-3.2 5.2-3.7 4.1-.9 7.6 2.9 6.7 6.6-.7 2.7-3.5 3.9-7 4.2m8.6 2.1-1 3c-.2.5-.7.8-1.1.6s-.7-.8-.5-1.3l.9-3c.2-.5.7-.8 1.1-.6s.7.8.5 1.3m2.8 3.6c-.4.2-.9 0-1.1-.6l-1-3c-.2-.5 0-1.1.5-1.3.4-.2.9 0 1.1.6l.9 3c.2.5 0 1.1-.5 1.3m6.6-5.7c-3.5-.4-6.3-1.5-7-4.2-.9-3.7 2.6-7.6 6.7-6.6 2.1.5 4.1 1.7 5.2 3.7 1.8 3.2-.9 7.2-4.9 7.2"></path></g></g></svg>
  </span>
  <span>
    STEALING CODES ONE PIXEL AT A TIME
  </span>
</p>
      </div>

      

      <p>
        Malicious app required to make "Pixnapping" attack work requires no permissions.
      </p>

      
    </div>

    <div>
    
    <p>
      Samsung's S25 phones.

              <span>
          Credit:

          
          Samsung

                  </span>
          </p>
  </div>
  </div>
</header>


  

  
      
    
    <div>
                      
                      
          
<p>Android devices are vulnerable to a new attack that can covertly steal two-factor authentication&nbsp;codes, location timelines, and other private data in less than 30 seconds.</p>
<p>The new attack, named Pixnapping by the team of academic researchers who devised it, requires a victim to first install a malicious app on an Android phone or tablet. The app, which requires no system permissions, can then effectively read data that any other installed app displays on the screen. Pixnapping has been demonstrated on Google Pixel phones and the Samsung Galaxy S25 phone and likely could be modified to work on other models with additional work. Google released mitigations last month, but the researchers said a modified version of the attack works even when the update is installed.</p>
<h2>Like taking a screenshot</h2>
<p>Pixnapping attacks begin with the malicious app invoking Android programming interfaces that cause the authenticator or other targeted apps to send sensitive information to the device screen. The malicious app then runs graphical operations on individual pixels of interest to the attacker. Pixnapping then exploits a <a href="https://en.wikipedia.org/wiki/Side-channel_attack">side channel</a> that allows the malicious app to map the pixels at those coordinates to letters, numbers, or shapes.</p>
<p>“Anything that is visible when the target app is opened can be stolen by the malicious app using Pixnapping,” the researchers wrote on an <a href="https://www.pixnapping.com/">informational website</a>. “Chat messages, 2FA codes, email messages, etc. are all vulnerable since they are visible. If an app has secret information that is not visible (e.g., it has a secret key that is stored but never shown on the screen), that information cannot be stolen by Pixnapping.”</p>
<p>The new attack class is reminiscent of <a href="https://arstechnica.com/security/2023/09/gpus-from-all-major-suppliers-are-vulnerable-to-new-pixel-stealing-attack/">GPU.zip</a>, a 2023 attack that allowed malicious websites to read the usernames, passwords, and other sensitive visual data displayed by other websites. It worked by exploiting side channels found in GPUs from all major suppliers. The vulnerabilities that GPU.zip exploited have never been fixed. Instead, the attack was blocked in browsers by limiting their ability to open iframes, an HTML element that allows one website (in the case of GPU.zip, a malicious one) to embed the contents of a site from a different domain.</p>

          
                      
                  </div>
                    
        
          
    
    <div>
          
          
<p>Pixnapping targets the same side channel as GPU.zip, specifically the precise amount of time it takes for a given frame to be rendered on the screen.</p>
<p>“This allows a malicious app to steal sensitive information displayed by other apps or arbitrary websites, pixel by pixel,” Alan Linghao Wang, lead author of the research paper “<a href="https://www.pixnapping.com/pixnapping.pdf">Pixnapping: Bringing Pixel Stealing out of the Stone Age</a>,” explained in an interview. “Conceptually, it is as if the malicious app was taking a screenshot of screen contents it should not have access to. Our end-to-end attacks simply measure the rendering time per frame of the graphical operations… to determine whether the pixel was white or non-white.”</p>

<h2>Pixnapping in three steps</h2>
<p>The attack occurs in three main steps. In the first, the malicious app invokes Android APIs that make calls to the app the attacker wants to snoop on. These calls can also be used to effectively scan an infected device for installed apps of interest. The calls can further cause the targeted app to display specific data it has access to, such as a message thread in a messaging app or a 2FA code for a specific site. This call causes the information to be sent to the Android rendering pipeline, the system that takes each app's pixels so they can be rendered on the screen. The Android-specific calls made include <a href="https://developer.android.com/guide/components/activities/intro-activities">activities</a>, <a href="https://developer.android.com/guide/components/intents-filters">intents</a>, and <a href="https://developer.android.com/guide/components/activities/tasks-and-back-stack">tasks</a>.</p>
<p>In the second step, Pixnapping performs graphical operations on individual pixels that the targeted app sent to the rendering pipeline. These operations choose the coordinates of target pixels the app wants to steal and begin to check if the color of those coordinates is white or non-white or, more generally, if the color is c or non-c (for an arbitrary color c).</p>
<p>“Suppose, for example, [the attacker] wants to steal a pixel that is part of the screen region where a 2FA character is known to be rendered by Google Authenticator,” Wang said. “This pixel is either white (if nothing was rendered there) or non-white (if part of a 2FA digit was rendered there). Then, conceptually, the attacker wants to cause some graphical operations whose rendering time is long if the target victim pixel is non-white and short if it is white. The malicious app does this by opening some malicious activities (i.e., windows) in front of the victim app that was opened in Step 1.”</p>

          
                  </div>
                    
        
          
    
    <div>
          
          
<p>The third step measures the amount of time required at each coordinate. By combining the times for each one, the attack can rebuild the images sent to the rendering pipeline one pixel at a time.</p>
<p>As Ars reader hotball <a href="https://arstechnica.com/civis/members/hotball.118546/">put it</a> in the comments below:</p>
<blockquote><p>Basically the attacker renders something transparent in front of the target app, then using a timing attack exploiting the GPU's graphical data compression to try finding out the color of the pixels. It's not something as simple as "give me the pixels of another app showing on the screen right now." That's why it takes time and can be too slow to fit within the 30 seconds window of the Google Authenticator app.</p></blockquote>
<p>In an online interview, paper co-author Ricardo Paccagnella described the attack in more detail:</p>
<blockquote><p>Step 1: The malicious app invokes a target app to cause some sensitive visual content to be rendered.</p>
<p>Step 2: The malicious app uses Android APIs to "draw over" that visual content and cause a side channel (in our case, GPU.zip) to leak as a function of the color of individual pixels rendered in Step 1 (e.g., activate only if the pixel color is c).</p>
<p>Step 3: The malicious app monitors the side effects of Step 2 to infer, e.g., if the color of those pixels was c or not, one pixel at a time.</p>
<p>Steps 2 and 3 can be implemented differently depending on the side channel that the attacker wants to exploit. In our instantiations on Google and Samsung phones, we exploited the GPU.zip side channel. When using GPU.zip, measuring the rendering time per frame was sufficient to determine if the color of each pixel is c or not. Future instantiations of the attack may use other side channels where controlling memory management and accessing fine-grained timers may be necessary (see Section 3.3 of the paper). Pixnapping would still work then: the attacker would just need to change how Steps 2 and 3 are implemented.</p></blockquote>
<p>The amount of time required to perform the attack depends on several variables, including how many coordinates need to be measured. In some cases, there’s no hard deadline for obtaining the information the attacker wants to steal. In other cases—such as stealing a 2FA code—every second counts, since each one is valid for only 30 seconds. In the paper, the researchers explained:</p>

          
                  </div>
                    
        
          
    
    <div>

        
        <div>
          
          
<blockquote><p>To meet the strict 30-second deadline for the attack, we also reduce the number of samples per target pixel to 16 (compared to the 34 or 64 used in earlier attacks) and decrease the idle time between pixel leaks from 1.5 seconds to 70 milliseconds. To ensure that the attacker has the full 30 seconds to leak the 2FA code, our implementation waits for the beginning of a new 30-second global time interval, determined using the system clock.</p>
<p>... We use our end-to-end attack to leak 100 different 2FA codes from Google Authenticator on each of our Google Pixel phones. Our attack correctly recovers the full 6-digit 2FA code in 73%, 53%, 29%, and 53% of the trials on the Pixel 6, 7, 8, and 9, respectively. The average time to recover each 2FA code is 14.3, 25.8, 24.9, and 25.3 seconds for the Pixel 6, Pixel 7, Pixel 8, and Pixel 9, respectively. We are unable to leak 2FA codes within 30 seconds using our implementation on the Samsung Galaxy S25 device due to significant noise. We leave further investigation of how to tune our attack to work on this device to future work.</p></blockquote>
<p>In an email, a Google representative wrote, “We issued a patch for CVE-2025-48561 in the September Android security bulletin, which partially mitigates this behavior. We are issuing an additional patch for this vulnerability in the December Android security bulletin. We have not seen any evidence of in-the-wild exploitation.”</p>
<p>Pixnapping is useful research in that it demonstrates the limitations of Google's security and privacy assurances that one installed app can’t access data belonging to another app. The challenges in implementing the attack to steal useful data in real-world scenarios, however, are likely to be significant. In an age when teenagers can steal secrets from Fortune 500 companies simply by <a href="https://arstechnica.com/security/2025/10/salesforce-says-it-wont-pay-extortion-demand-in-1-billion-records-breach/">asking nicely</a>, the utility of more complicated and limited attacks is probably of less value.</p>
<p><em>Post updated to add details about how the attack works.</em></p>


          
                  </div>

                  
          






  <div>
  <div>
          <p><a href="https://arstechnica.com/author/dan-goodin/"><img src="https://cdn.arstechnica.net/wp-content/uploads/2018/10/Dang.jpg" alt="Photo of Dan Goodin"></a></p>
  </div>

  <div>
    

    <p>
      Dan Goodin is Senior Security Editor at Ars Technica, where he oversees coverage of malware, computer espionage, botnets, hardware hacking, encryption, and passwords. In his spare time, he enjoys gardening, cooking, and following the independent music scene. Dan is based in San Francisco. Follow him at <a href="https://infosec.exchange/@dangoodin" rel="me">here</a> on Mastodon and <a href="https://bsky.app/profile/dangoodin.bsky.social">here</a> on Bluesky. Contact him on Signal at DanArs.82.
    </p>
  </div>
</div>


  <p>
    <a href="https://arstechnica.com/security/2025/10/no-fix-yet-for-attack-that-lets-hackers-pluck-2fa-codes-from-android-phones/#comments" title="73 comments">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80"><defs><clipPath id="bubble-zero_svg__a"><path fill="none" stroke-width="0" d="M0 0h80v80H0z"></path></clipPath><clipPath id="bubble-zero_svg__b"><path fill="none" stroke-width="0" d="M0 0h80v80H0z"></path></clipPath></defs><g clip-path="url(#bubble-zero_svg__a)"><g fill="currentColor" clip-path="url(#bubble-zero_svg__b)"><path d="M80 40c0 22.09-17.91 40-40 40S0 62.09 0 40 17.91 0 40 0s40 17.91 40 40"></path><path d="M40 40 .59 76.58C-.67 77.84.22 80 2.01 80H40z"></path></g></g></svg>
    73 Comments
  </a>
      </p>
              </div>
  </article>


  


  


  <div>
    <header>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 26"><defs><clipPath id="most-read_svg__a"><path fill="none" d="M0 0h40v26H0z"></path></clipPath><clipPath id="most-read_svg__b"><path fill="none" d="M0 0h40v26H0z"></path></clipPath></defs><g clip-path="url(#most-read_svg__a)"><g fill="none" clip-path="url(#most-read_svg__b)"><path fill="currentColor" d="M20 2h.8q1.5 0 3 .6c.6.2 1.1.4 1.7.6 1.3.5 2.6 1.3 3.9 2.1.6.4 1.2.8 1.8 1.3 2.9 2.3 5.1 4.9 6.3 6.4-1.1 1.5-3.4 4-6.3 6.4-.6.5-1.2.9-1.8 1.3q-1.95 1.35-3.9 2.1c-.6.2-1.1.4-1.7.6q-1.5.45-3 .6h-1.6q-1.5 0-3-.6c-.6-.2-1.1-.4-1.7-.6-1.3-.5-2.6-1.3-3.9-2.1-.6-.4-1.2-.8-1.8-1.3-2.9-2.3-5.1-4.9-6.3-6.4 1.1-1.5 3.4-4 6.3-6.4.6-.5 1.2-.9 1.8-1.3q1.95-1.35 3.9-2.1c.6-.2 1.1-.4 1.7-.6q1.5-.45 3-.6zm0-2h-1c-1.2 0-2.3.3-3.4.6-.6.2-1.3.4-1.9.7-1.5.6-2.9 1.4-4.3 2.3-.7.5-1.3.9-1.9 1.4C2.9 8.7 0 13 0 13s2.9 4.3 7.5 7.9c.6.5 1.3 1 1.9 1.4 1.3.9 2.7 1.7 4.3 2.3.6.3 1.3.5 1.9.7 1.1.3 2.3.6 3.4.6h2c1.2 0 2.3-.3 3.4-.6.6-.2 1.3-.4 1.9-.7 1.5-.6 2.9-1.4 4.3-2.3.7-.5 1.3-.9 1.9-1.4C37.1 17.3 40 13 40 13s-2.9-4.3-7.5-7.9c-.6-.5-1.3-1-1.9-1.4-1.3-.9-2.8-1.7-4.3-2.3-.6-.3-1.3-.5-1.9-.7C23.3.4 22.1.1 21 .1h-1"></path><path fill="#ff4e00" d="M20 5c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8m0 11c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3"></path></g></g></svg>
      
    </header>
    <ol>
              <li>
                      <a href="https://arstechnica.com/security/2025/10/no-fix-yet-for-attack-that-lets-hackers-pluck-2fa-codes-from-android-phones/">
              <img src="https://cdn.arstechnica.net/wp-content/uploads/2025/01/008-family-galaxy-s25ultra-titaniumsilverblue-s25plus-navy-s25-icyblue-768x432.jpg" alt="Listing image for first story in Most Read: Hackers can steal 2FA codes and private messages from Android phones" decoding="async" loading="lazy">
            </a>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                  </ol>
</div>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DDoS Botnet Aisuru Blankets US ISPs in Record DDoS (170 pts)]]></title>
            <link>https://krebsonsecurity.com/2025/10/ddos-botnet-aisuru-blankets-us-isps-in-record-ddos/</link>
            <guid>45574393</guid>
            <pubDate>Mon, 13 Oct 2025 23:21:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://krebsonsecurity.com/2025/10/ddos-botnet-aisuru-blankets-us-isps-in-record-ddos/">https://krebsonsecurity.com/2025/10/ddos-botnet-aisuru-blankets-us-isps-in-record-ddos/</a>, See on <a href="https://news.ycombinator.com/item?id=45574393">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
												<p>The world’s largest and most disruptive botnet is now drawing a majority of its firepower from compromised Internet-of-Things (IoT) devices hosted on U.S. Internet providers like <strong>AT&amp;T</strong>, <strong>Comcast</strong> and <strong>Verizon</strong>, new evidence suggests. Experts say the heavy concentration of infected devices at U.S. providers is complicating efforts to limit collateral damage from the botnet’s attacks, which shattered previous records this week with a brief traffic flood that clocked in at nearly 30 trillion bits of data per second.</p>
<p>Since its debut more than a year ago, the Aisuru botnet has steadily outcompeted virtually all other IoT-based botnets in the wild, with recent attacks siphoning Internet bandwidth from an estimated 300,000 compromised hosts worldwide.</p>
<p>The hacked systems that get subsumed into the botnet are mostly consumer-grade routers, security cameras, digital video recorders and other devices operating with insecure and outdated firmware, and/or factory-default settings. Aisuru’s owners are continuously scanning the Internet for these vulnerable devices and enslaving them for use in distributed denial-of-service (DDoS) attacks that can overwhelm targeted servers with crippling amounts of junk traffic.</p>
<p>As Aisuru’s size has mushroomed, so has its punch. In May 2025, KrebsOnSecurity was <a href="https://krebsonsecurity.com/2025/05/krebsonsecurity-hit-with-near-record-6-3-tbps-ddos/" target="_blank" rel="noopener">hit with a near-record 6.35 terabits per second (Tbps) attack from Aisuru,</a> which was then the largest assault that Google’s DDoS protection service <strong>Project Shield</strong> had ever mitigated. Days later, Aisuru shattered that record with a data blast in excess of 11 Tbps.</p>
<p>By late September, Aisuru was publicly flexing DDoS capabilities topping 22 Tbps. Then on October 6, its operators heaved a whopping 29.6 terabits of junk data packets each second at a targeted host. Hardly anyone noticed because it appears to have been a brief test or demonstration of Aisuru’s capabilities: The traffic flood lasted less only a few seconds and was pointed at an Internet server that was specifically designed to measure large-scale DDoS attacks.</p>
<div id="attachment_72353"><p><img aria-describedby="caption-attachment-72353" decoding="async" src="https://krebsonsecurity.com/wp-content/uploads/2025/10/29-69t.png" alt="" width="743" height="93" srcset="https://krebsonsecurity.com/wp-content/uploads/2025/10/29-69t.png 841w, https://krebsonsecurity.com/wp-content/uploads/2025/10/29-69t-768x96.png 768w, https://krebsonsecurity.com/wp-content/uploads/2025/10/29-69t-782x98.png 782w" sizes="(max-width: 743px) 100vw, 743px"></p><p id="caption-attachment-72353">A measurement of an Oct. 6 DDoS believed to have been launched through multiple botnets operated by the owners of the Aisuru botnet. Image: DDoS Analyzer Community on Telegram.</p></div>
<p>Aisuru’s overlords aren’t just showing off. Their botnet is being blamed for a series of increasingly massive and disruptive attacks. Although recent assaults from Aisuru have targeted mostly ISPs that serve online gaming communities like <strong>Minecraft</strong>, those digital sieges often result in widespread collateral Internet disruption.</p>
<p>For the past several weeks, ISPs hosting some of the Internet’s top gaming destinations have been hit with a relentless volley of gargantuan attacks that experts say are well beyond the DDoS mitigation capabilities of most organizations connected to the Internet today.</p>
<p><strong>Steven Ferguson</strong> is principal security engineer at <strong>Global Secure Layer</strong> (GSL), an ISP in Brisbane, Australia. GSL hosts <strong>TCPShield</strong>, which offers free or low-cost DDoS protection to more than 50,000 Minecraft servers worldwide. Ferguson told KrebsOnSecurity that on October 8, TCPShield was walloped with a blitz from Aisuru that flooded its network with more than 15 terabits of junk data per second.</p>
<p>Ferguson said that after the attack subsided, TCPShield was told by its upstream provider <strong>OVH</strong> that they were no longer welcome as a customer.</p>
<p>“This was causing serious congestion on their Miami external ports for several weeks, shown publicly via their weather map,” he said, explaining that TCPShield is now solely protected by GSL.</p>
<p>Traces from the recent spate of crippling Aisuru <a href="https://www.youtube.com/watch?v=OAzk1K4sn7k" target="_blank" rel="noopener">attacks on gaming servers</a> can be still seen at the website <a href="https://grafana.blockgametracker.gg/d/nlKArnQ4k/global-playercount-by-as?orgId=1&amp;viewPanel=3&amp;from=1759040061640&amp;to=1759161701743" target="_blank" rel="noopener">blockgametracker.gg</a>, which indexes the uptime and downtime of the top Minecraft hosts. In the following example from a series of data deluges on the evening of September 28, we can see an Aisuru botnet campaign briefly knocked TCPShield offline.</p>
<div id="attachment_72328"><p><img aria-describedby="caption-attachment-72328" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2025/10/tcpshield-aisuru.png" alt="" width="750" height="457" srcset="https://krebsonsecurity.com/wp-content/uploads/2025/10/tcpshield-aisuru.png 1436w, https://krebsonsecurity.com/wp-content/uploads/2025/10/tcpshield-aisuru-768x468.png 768w, https://krebsonsecurity.com/wp-content/uploads/2025/10/tcpshield-aisuru-782x476.png 782w" sizes="(max-width: 750px) 100vw, 750px"></p><p id="caption-attachment-72328">An Aisuru botnet attack on TCPShield (AS64199) on Sept. 28&nbsp; can be seen in the giant downward spike in the middle of this uptime graphic. Image: grafana.blockgametracker.gg.</p></div>
<p>Paging through the same uptime graphs for other network operators listed shows almost all of them suffered brief but repeated outages around the same time. Here is the same uptime tracking for Minecraft servers on the network provider <strong>Cosmic</strong> (AS30456), and it shows multiple large dips that correspond to game server outages caused by Aisuru.</p>
<div id="attachment_72333"><p><a href="https://krebsonsecurity.com/wp-content/uploads/2025/10/cosmic-aisuru.png" target="_blank" rel="noopener"><img aria-describedby="caption-attachment-72333" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2025/10/cosmic-aisuru.png" alt="" width="747" height="463" srcset="https://krebsonsecurity.com/wp-content/uploads/2025/10/cosmic-aisuru.png 1343w, https://krebsonsecurity.com/wp-content/uploads/2025/10/cosmic-aisuru-768x476.png 768w, https://krebsonsecurity.com/wp-content/uploads/2025/10/cosmic-aisuru-782x484.png 782w" sizes="(max-width: 747px) 100vw, 747px"></a></p><p id="caption-attachment-72333">Multiple DDoS attacks from Aisuru can be seen against the Minecraft host Cosmic on Sept. 28. The sharp downward spikes correspond to brief but enormous attacks from Aisuru. Image: grafana.blockgametracker.gg.</p></div>
<h2>BOTNETS R US</h2>
<p>Ferguson said he’s been tracking Aisuru for about three months, and recently he noticed the botnet’s composition shifted heavily toward infected systems at ISPs in the United States. Ferguson shared logs from an attack on October 8 that indexed traffic by the total volume sent through each network provider, and the logs showed that 11 of the top 20 traffic sources were U.S. based ISPs.</p>
<p><strong>AT&amp;T</strong> customers were by far the biggest U.S. contributors to that attack, followed by botted systems on <strong>Charter Communications</strong>, <strong>Comcast</strong>, <strong>T-Mobile</strong> and <strong>Verizon</strong>, Ferguson found. He said the volume of data packets per second coming from infected IoT hosts on these ISPs is often so high that it has started to affect the quality of service that ISPs are able to provide to adjacent (non-botted) customers.</p>
<p>“The impact extends beyond victim networks,” Ferguson said. “For instance we have seen 500 gigabits of traffic via Comcast’s network alone. This amount of egress leaving their network, especially being so US-East concentrated, will result in congestion towards other services or content trying to be reached while an attack is ongoing.”</p>
<p><strong>Roland Dobbins</strong> is principal engineer at <strong>Netscout</strong>. Dobbins said Ferguson is spot on, noting that while most ISPs have effective mitigations in place to handle large incoming DDoS attacks, many are far less prepared to manage the inevitable service degradation caused by large numbers of their customers suddenly using some or all available bandwidth to attack others.</p>
<p><span>“The outbound and cross-bound DDoS attacks can be just as disruptive as the inbound stuff,” Dobbin said.</span> “We’re now in a situation where ISPs are routinely seeing terabit-per-second plus outbound attacks from their networks that can cause operational problems.”</p>
<p>“The crying need for effective and universal outbound DDoS attack suppression is something that is really being highlighted by these recent attacks,” Dobbins continued. “A lot of network operators are learning that lesson now, and there’s going to be a period ahead where there’s some scrambling and potential disruption going on.”</p>
<p>KrebsOnSecurity sought comment from the ISPs named in Ferguson’s report. Charter Communications pointed to <a href="https://policy.charter.com/protecting-our-networks" target="_blank" rel="noopener">a recent blog post on protecting its network</a>, stating that Charter actively monitors for both inbound and outbound attacks, and that it takes proactive action wherever possible.</p>
<p>“In addition to our own extensive network security, we also aim to reduce the risk of customer connected devices contributing to attacks through our Advanced WiFi solution that includes Security Shield, and we make Security Suite available to our Internet customers,” Charter wrote in an emailed response to questions. “With the ever-growing number of devices connecting to networks, we encourage customers to purchase trusted devices with secure development and manufacturing practices, use anti-virus and security tools on their connected devices, and regularly download security patches.”</p>
<p>A spokesperson for Comcast responded, “Currently our network is not experiencing impacts and we are able to handle the traffic.”<span id="more-72321"></span></p>
<h2>9 YEARS OF MIRAI</h2>
<p>Aisuru is built on the bones of malicious code that was <a href="https://krebsonsecurity.com/2016/10/source-code-for-iot-botnet-mirai-released/" target="_blank" rel="noopener">leaked in 2016</a>&nbsp;by <a href="https://krebsonsecurity.com/2017/01/who-is-anna-senpai-the-mirai-worm-author/" target="_blank" rel="noopener">the original creators of the <strong>Mirai</strong> IoT botnet</a>. Like Aisuru, Mirai quickly outcompeted all other DDoS botnets in its heyday, and obliterated previous DDoS attack records with a 620 gigabit-per-second siege that <a href="https://krebsonsecurity.com/2016/09/the-democratization-of-censorship/" target="_blank" rel="noopener">sidelined this website for nearly four days in 2016</a>.</p>
<p>The Mirai botmasters likewise used their crime machine to attack mostly Minecraft servers, but with the goal of forcing Minecraft server owners to purchase a DDoS protection service that they controlled. In addition, they rented out slices of the Mirai botnet to paying customers, some of whom used it to mask the sources of other types of cybercrime, such as click fraud.</p>
<div id="attachment_36755"><p><img aria-describedby="caption-attachment-36755" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2016/10/l3outage-580x330.png" alt="" width="733" height="417" srcset="https://krebsonsecurity.com/wp-content/uploads/2016/10/l3outage-580x330.png 580w, https://krebsonsecurity.com/wp-content/uploads/2016/10/l3outage-768x437.png 768w, https://krebsonsecurity.com/wp-content/uploads/2016/10/l3outage.png 778w" sizes="(max-width: 733px) 100vw, 733px"></p><p id="caption-attachment-36755">A depiction of the outages caused by the Mirai botnet attacks against the internet infrastructure firm Dyn on October 21, 2016. Source: Downdetector.com.</p></div>
<p>Dobbins said Aisuru’s owners also appear to be renting out their botnet as a distributed proxy network that cybercriminal customers anywhere in the world can use to anonymize their malicious traffic and make it appear to be coming from regular residential users in the U.S.</p>
<p>“The people who operate this botnet are also selling (it as) residential proxies,” he said. “And that’s being used to reflect application layer attacks through the proxies on the bots as well.”</p>
<p>The Aisuru botnet harkens back to its predecessor Mirai in another intriguing way. One of its owners is using the Telegram handle “<strong>9gigsofram</strong>,” which corresponds to the nickname used by the co-owner of a Minecraft server protection service called <strong>Proxypipe</strong> that was <a href="https://krebsonsecurity.com/2017/01/who-is-anna-senpai-the-mirai-worm-author/" target="_blank" rel="noopener">heavily targeted in 2016 by the original Mirai botmasters</a>.</p>
<p><strong>Robert Coelho</strong> co-ran Proxypipe back then along with his business partner <strong>Erik “9gigsofram” Buckingham</strong>, and has spent the past nine years fine-tuning various DDoS mitigation companies that cater to Minecraft server operators and other gaming enthusiasts. Coelho said he has no idea why one of Aisuru’s botmasters chose Buckingham’s nickname, but added that it might say something about how long this person has been involved in the DDoS-for-hire industry.</p>
<p>“The Aisuru attacks on the gaming networks these past seven day have been absolutely huge, and you can see tons of providers going down multiple times a day,” Coelho said.</p>
<p>Coelho said the 15 Tbps attack this week against TCPShield was likely only a portion of the total attack volume hurled by Aisuru at the time, because much of it would have been shoved through networks that simply couldn’t process that volume of traffic all at once. Such outsized attacks, he said, are becoming increasingly difficult and expensive to mitigate.</p>
<p>“It’s definitely at the point now where you need to be spending at least a million dollars a month just to have the network capacity to be able to deal with these attacks,” he said.</p>
<h2>RAPID SPREAD</h2>
<p>Aisuru has long been rumored to use multiple zero-day vulnerabilities in IoT devices to aid its rapid growth over the past year. <strong>XLab</strong>, the Chinese security company that was the <a href="https://blog.xlab.qianxin.com/large-scale-botnet-airashi-en/" target="_blank" rel="noopener">first to profile Aisuru’s rise in 2024</a>, warned last month that one of the Aisuru botmasters had compromised the firmware distribution website for <strong>Totolink</strong>, a maker of low-cost routers and other networking gear.</p>
<p>“Multiple sources indicate the group allegedly compromised a router firmware update server in April and distributed malicious scripts to expand the botnet,” XLab <a href="https://blog.xlab.qianxin.com/super-large-scale-botnet-aisuru-en/" target="_blank" rel="noopener">wrote</a> on September 15. “The node count is currently reported to be around 300,000.”</p>
<div id="attachment_72354"><p><img aria-describedby="caption-attachment-72354" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2025/10/xlab-totoscript.png" alt="" width="706" height="190"></p><p id="caption-attachment-72354">A malicious script implanted into a Totolink update server in April 2025. Image: XLab.</p></div>
<p>Aisuru’s operators received an unexpected boost to their crime machine in August when the <strong>U.S. Department Justice</strong>&nbsp;<a href="https://krebsonsecurity.com/2025/08/oregon-man-charged-in-rapper-bot-ddos-service/" target="_blank" rel="noopener">charged the alleged proprietor of <strong>Rapper Bot</strong></a>, a DDoS-for-hire botnet that competed directly with Aisuru for control over the global pool of vulnerable IoT systems.</p>
<p>Once Rapper Bot was dismantled, Aisuru’s curators moved quickly to commandeer vulnerable IoT devices that were suddenly set adrift by the government’s takedown, Dobbins said.</p>
<p>“Folks were arrested and Rapper Bot control servers were seized and that’s great, but unfortunately the botnet’s attack assets were then pieced out by the remaining botnets,” he said. “The problem is, even if those infected IoT devices are rebooted and cleaned up, they will still get re-compromised by something else generally within minutes of being plugged back in.”</p>
<div id="attachment_72344"><p><img aria-describedby="caption-attachment-72344" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2025/10/xlabs-aisuru.png" alt="" width="738" height="810"></p><p id="caption-attachment-72344">A screenshot shared by XLabs showing the Aisuru botmasters recently celebrating a record-breaking 7.7 Tbps DDoS. The user at the top has adopted the name “Ethan J. Foltz” in a mocking tribute to the alleged Rapper Bot operator who was arrested and charged in August 2025.</p></div>
<h2>BOTMASTERS AT LARGE</h2>
<p>XLab’s <a href="https://blog.xlab.qianxin.com/super-large-scale-botnet-aisuru-en/" target="_blank" rel="noopener">September blog post</a> cited multiple unnamed sources saying Aisuru is operated by three cybercriminals: “Snow,” who’s responsible for botnet development; “Tom,” tasked with finding new vulnerabilities; and “<strong>Forky</strong>,” responsible for botnet sales.</p>
<p>KrebsOnSecurity interviewed Forky in our <a href="https://krebsonsecurity.com/2025/05/krebsonsecurity-hit-with-near-record-6-3-tbps-ddos/" target="_blank" rel="noopener">May 2025 story</a> about the record 6.3 Tbps attack from Aisuru. That story identified Forky as a 21-year-old man from Sao Paulo, Brazil who has been extremely active in the DDoS-for-hire scene since at least 2022. The FBI has seized Forky’s DDoS-for-hire domains several times over the years.</p>
<p><img decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2025/05/forky.png" alt="" width="750" height="500" srcset="https://krebsonsecurity.com/wp-content/uploads/2025/05/forky.png 779w, https://krebsonsecurity.com/wp-content/uploads/2025/05/forky-768x512.png 768w" sizes="(max-width: 750px) 100vw, 750px"></p>
<p>Like the original Mirai botmasters, Forky also operates a DDoS mitigation service called <strong>Botshield</strong>. Forky declined to discuss the makeup of his ISP’s clientele, or to clarify whether Botshield was more of a hosting provider or a DDoS mitigation firm. However, Forky has posted on Telegram about Botshield successfully mitigating large DDoS attacks launched against other DDoS-for-hire services.</p>
<p>In our previous interview, Forky acknowledged being involved in the development and marketing of Aisuru, but denied participating in attacks launched by the botnet.</p>
<p>Reached for comment earlier this month, Forky continued to maintain his innocence, claiming that he also is still trying to figure out who the current Aisuru botnet operators are in real life (Forky said the same thing in our May interview).</p>
<p>But after a week of promising juicy details, Forky came up empty-handed once again. Suspecting that Forky was merely being coy, I asked him how someone so connected to the DDoS-for-hire world could still be mystified on this point, and suggested that his inability or unwillingness to blame anyone else for Aisuru would not exactly help his case.</p>
<p>At this, Forky verbally bristled at being pressed for more details, and abruptly terminated our interview.</p>
<p>“I’m not here to be threatened with ignorance because you are stressed,” Forky replied. “They’re blaming me for those new attacks. Pretty much the whole world (is) due to your blog.”</p>
											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sony PlayStation 2 fixing frenzy (182 pts)]]></title>
            <link>https://retrohax.net/sony-playstation-2-fixing-frenzy/</link>
            <guid>45574247</guid>
            <pubDate>Mon, 13 Oct 2025 23:02:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://retrohax.net/sony-playstation-2-fixing-frenzy/">https://retrohax.net/sony-playstation-2-fixing-frenzy/</a>, See on <a href="https://news.ycombinator.com/item?id=45574247">Hacker News</a></p>
Couldn't get https://retrohax.net/sony-playstation-2-fixing-frenzy/: Error: Request failed with status code 500]]></description>
        </item>
        <item>
            <title><![CDATA[Don't Be a Sucker (1943) [video] (366 pts)]]></title>
            <link>https://www.youtube.com/watch?v=vGAqYNFQdZ4</link>
            <guid>45573025</guid>
            <pubDate>Mon, 13 Oct 2025 20:31:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=vGAqYNFQdZ4">https://www.youtube.com/watch?v=vGAqYNFQdZ4</a>, See on <a href="https://news.ycombinator.com/item?id=45573025">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
    </channel>
</rss>