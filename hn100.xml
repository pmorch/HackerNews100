<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 15 Jul 2024 15:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Rust for Filesystems (176 pts)]]></title>
            <link>https://lwn.net/Articles/978738/</link>
            <guid>40966414</guid>
            <pubDate>Mon, 15 Jul 2024 09:39:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/Articles/978738/">https://lwn.net/Articles/978738/</a>, See on <a href="https://news.ycombinator.com/item?id=40966414">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<center>
           <div><b>This article brought to you by LWN subscribers</b><p>Subscribers to LWN.net made this article — and everything that
       surrounds it — possible.  If you appreciate our content, please
       <a href="https://lwn.net/subscribe/">buy a subscription</a> and make the next
       set of articles possible.</p></div>
           </center>
           
<p>
At the
2024 <a href="https://events.linuxfoundation.org/lsfmmbpf/">Linux Storage,
Filesystem, Memory Management, and BPF Summit</a>, Wedson Almeida Filho and
Kent Overstreet led a combined storage and filesystem session on using Rust
for Linux filesystems. Back in December 2023, Almeida had <a href="https://lwn.net/ml/linux-fsdevel/20231018122518.128049-1-wedsonaf@gmail.com/">posted
an RFC patch set</a> with
some Rust abstractions for filesystems, which resulted in <a href="https://lwn.net/Articles/958072/">some disagreement over the approach</a>.  On the
same mid-May day as the session, he <a href="https://lwn.net/ml/all/20240514131711.379322-1-wedsonaf@gmail.com/">posted</a>
a second version of the RFC patches, which he wanted to discuss along with
other Rust-related topics.
</p>

<h4>Goals</h4>

<p>
After updating attendees on the status of his patches, Almeida listed some
of the goals of the <a href="https://rust-for-linux.com/">Rust-for-Linux
project</a>, which are embodied in the filesystem abstractions that he is proposing.  The first is to express more of the requirements using Rust's
type system in order to catch more mistakes at compile time.  In addition,
the project's developers want to automate some tasks, such as cleaning up
resources, in ways that are not easily
available to C code. The overall idea is to have a more productive
filesystem-development experience, with less time spent on debugging
problems that the compiler could find, and with fewer memory-related
vulnerabilities overall.
</p>

<p><a href="https://lwn.net/Articles/979161/">
<img src="https://static.lwn.net/images/2024/lsfmb-almeida-sm.png" width="206" height="300" alt="[Wedson Almeida Filho]" title="Wedson Almeida Filho"> 
</a></p><p>
Overstreet said that he had been a part of too many two-week bug hunts and
has been trying to find ways to avoid those kinds of problems for bcachefs.
The Rust language provides a lot more than what he can do in C; it
eliminates undefined behavior and provides facilities to see what is happening
inside the code. "You can't debug, if you can't see what's going on."  He
believes that kernel development "will get a whole lot easier over the
coming decades" due to using Rust.  It will be possible to prove the
correctness of code written in Rust, which will mean that bugs that can derail
feature development will be much less common.
</p>

<p>
From his <a href="https://docs.google.com/presentation/d/1dflxtAojRu3mdx19oBHP3vXCXI1vocFIVc5jVaf9FLA/">slides</a>,
Almeida showed an example of how the Rust type system can eliminate certain
kinds of errors.  He noted that the <a href="https://elixir.bootlin.com/linux/v6.9.5/source/fs/inode.c#L1248"><tt>iget_locked()</tt></a>
function in current kernels has a complicated set of requirements.  Callers
must check to see if the return value is null and, if it is not, then the
contents of the returned <a href="https://elixir.bootlin.com/linux/v6.9.5/source/include/linux/fs.h#L632"><tt>struct&nbsp;inode</tt></a>
need to be checked to see if it is a new or existing inode. If it is new,
it needs to be initialized before it can be used; if that fails, <a href="https://elixir.bootlin.com/linux/v6.9.5/source/fs/bad_inode.c#L244"><tt>iget_failed()</tt></a>
needs to be called, he said.
</p>

<p>
There was some discussion of the finer points of what callers of
<tt>iget_locked()</tt> need to do, with Al Viro disagreeing with some of
what Almeida had on his slide.  That went back and forth, with Overstreet
observing that it was exactly that kind of discussion/argument that could
be avoided by encapsulating the rules into the Rust types and abstractions;
the compiler will know the right thing to do.
</p>

<!-- middle-ad -->

<p>
Overstreet noted that Christian
Brauner and Alice Ryhl have helped to improve the abstractions a great deal
since the first posting; in particular, there are things he has learned
about reference counts based on how they are being handled by the Rust
code. "This is going to make all our lives so much easier", Overstreet said.
</p>

<p>
Almeida put up a slide with the equivalent of <tt>iget_locked()</tt> in
Rust, which was called <tt>get_or_create_inode()</tt>.  The important part
is the return type, he said; as with C, callers must check for failure, but
the success case is much different.  If it is successful, the caller either
receives a regular reference-counted inode to use (which has its reference
count automatically decremented when the inode object is no longer
referenced) or it receives  
a new inode, which will 
automatically call the equivalent of <tt>iget_failed()</tt> if it is never initialized.  If
it is ever initialized (which can only be done once), it becomes a regular
inode with the automatic 
reference-count decrement.  All of that is enforced through the type system.
</p>

<p>
Viro seemed somewhat skeptical of how that would work in practice.  He wondered
where in the source code those constraints would be defined.  Almeida said
that the whole idea is to determine what the constraints are from Viro and
other filesystem developers, then to create types and abstractions that can
enforce them.
</p>

<h4>Disconnect</h4>

<p>
Dave Chinner asked about the disconnect between the names in the C API and
the Rust API, which means that developers cannot look at the C code and
know what the equivalent Rust call would be.  He said that the same names
should be used or it would all be completely unfamiliar to the existing
development community.  In addition, when the C code changes, the Rust code
needs to follow along, but who is going to do that work?  Almeida agreed
that it was something that needs to be discussed.
</p>

<p>
As far as the renamed functions goes, he is not opposed to switching the
names to match the C API, but does not think <tt>iget_locked()</tt> is a
particularly good name.  It might make sense to take the opportunity to
create better names. 
</p>

<p>
There was some more discussion of the example, with Viro saying that it was
not a good choice because <tt>iget_locked()</tt> is a library function,
rather than a member function of the superblock object.  Almeida said that
there was no reason <tt>get_or_create_inode()</tt> could not be turned into
a library function; his example was simply meant to show how the
constraints could be encoded in the types.
</p>

<p>
Brauner said that there needs to be a decision on whether the Rust
abstractions are going to be general-purpose, intended for all kernel
filesystems,  or if they will only be focused on the
functionality needed for the simpler filesystems that have been written in Rust.  There is also a longer-term problem in handling
situations where functions like <tt>get_or_create_inode()</tt> encode a lot
more of the constraints than <tt>iget_locked()</tt> does.  As the C code
evolves, which will happen more quickly than with the Rust code, at least
initially, there will be a need to keep the two APIs in sync.
</p>

<p>
It comes down to a question of whether refactoring and cleanup will be done
as part of adding the Rust abstractions, Overstreet said; he strongly
believes that is required. But there is more to it than just that, James
Bottomley said.  The object lifecycles are being encoded into the Rust API,
but there is no equivalent of that in C; if someone changes the lifecycle
of the object on one side, the other will have bugs.
</p>

<p>
There are also problems because the lifecycle of inode objects is
sometimes filesystem-specific, Chinner said. Encoding a single lifecycle understanding
into the API means that its functions will not work for some filesystems.
Overstreet said that filesystems which are not using the VFS API would
simply not benefit, but Chinner said that a VFS inode is just a structure
and it is up to filesystems to manage its lifetime.
Almeida said that the example would only be used by filesystems that
currently call <tt>iget_locked()</tt> and could benefit.  The Rust
developers are not trying to force filesystems to change how they are doing
things. 
</p>

<h4>Allocating pain</h4>

<p>
Part of the problem, Ted Ts'o said, is that there is an effort to get
"everyone to switch over to the religion" of Rust; that will not happen, he
said, because there are 50+ different filesystems in Linux that will not be
instantaneously converted.  The C code will continue to be improved and if
that breaks the Rust bindings, it will break the filesystems that depend on
them. For the foreseeable future, the Rust bindings are a second-class
citizen, he said; broken Rust bindings are a problem for the
Rust-for-Linux developers and not the filesystem community at large.
</p>

<p>
He suggested that the development of the Rust bindings continue, while the
C code continues to evolve.  As those changes occur, "we will find out
whether or not
this concept of encoding huge amounts of semantics into the type system is
a good thing or a bad thing".  In a year or two, he thinks the answer to that will become
clear; really, though, it will come down to a question of "where does the
pain get allocated".  In his mind, large-scale changes like this almost always come down to a
"pain-allocation question". 
</p>

<p>
Almeida said that he is not trying to keep the C API static; his goal is
to get the filesystem developers to explain the semantics of the API so
that they can be encoded into Rust.  Bottomley said that as more of those
semantics get encoded into the bindings, they will become more fragile from
a synchronization standpoint.
Several disagreed with that, in the form of a jumble of "no" replies and
the like. Almeida said that it was the same with any user of an API; if the
API changes, the users need to be updated.  But Ts'o pointedly said that
not everyone will learn Rust; if he makes a change, he will fix all of the
affected C code, but, "because I don't know Rust, I am not going to fix the Rust
bindings, sorry".
</p>

<p>
Viro came back to his objections about the proposed replacement for
<tt>iget_locked()</tt>.  The underlying problem that he sees is the
reliance on methods versus functions; using methods is not the proper way
forward because the arguments are not specified explicitly.  But Overstreet
said that the complaints about methods come from 
languages like C++ that rely too heavily on inheritance, which is "a crap
idea".  Rust does not do so; methods in Rust are largely just a syntactical
element. 
</p>

<p>
There was some discussion of what exactly is being encoded in the types.
Jan Kara said that there is some behavior that goes with the inode, such as
its reference count and its handling, but there is other behavior that is
inherent in the 
<tt>iget_locked()</tt> function.  Overstreet and Almeida said that those
two pieces were both encoded into the types, but separately; other
functions using the inode type could have return values with different
properties. 
</p>

<p>
Viro went through some of his reasoning about why inodes work the way they
do in the VFS.  He agreed with the idea of starting small to see where
things lead.  Overstreet suggested that maybe the example used was not a
good starting point, "because this is the complicated case". "Oh, no it
isn't", Viro replied to laughter as the session concluded.
</p><br clear="all"><table>
           <tbody><tr><th colspan="2">Index entries for this article</th></tr>
           <tr><td><a href="https://lwn.net/Kernel/Index">Kernel</a></td><td><a href="https://lwn.net/Kernel/Index#Development_tools-Rust">Development tools/Rust</a></td></tr>
            <tr><td><a href="https://lwn.net/Kernel/Index">Kernel</a></td><td><a href="https://lwn.net/Kernel/Index#Filesystems-Internal_API">Filesystems/Internal API</a></td></tr>
            <tr><td><a href="https://lwn.net/Archives/ConferenceIndex/">Conference</a></td><td><a href="https://lwn.net/Archives/ConferenceIndex/#Storage_Filesystem_Memory-Management_and_BPF_Summit-2024">Storage, Filesystem, Memory-Management and BPF Summit/2024</a></td></tr>
            </tbody></table><br clear="all">
<hr><p>
           (<a href="https://lwn.net/Login/?target=/Articles/978738/">Log in</a> to post comments)
           </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Firefox 128 enables "privacy-preserving" ad measurements by default (217 pts)]]></title>
            <link>https://mstdn.social/@Lokjo/112772496939724214</link>
            <guid>40966312</guid>
            <pubDate>Mon, 15 Jul 2024 09:10:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mstdn.social/@Lokjo/112772496939724214">https://mstdn.social/@Lokjo/112772496939724214</a>, See on <a href="https://news.ycombinator.com/item?id=40966312">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Google's Gemini AI caught scanning Google Drive PDF files without permission (245 pts)]]></title>
            <link>https://www.tomshardware.com/tech-industry/artificial-intelligence/gemini-ai-caught-scanning-google-drive-hosted-pdf-files-without-permission-user-complains-feature-cant-be-disabled</link>
            <guid>40965892</guid>
            <pubDate>Mon, 15 Jul 2024 07:25:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/tech-industry/artificial-intelligence/gemini-ai-caught-scanning-google-drive-hosted-pdf-files-without-permission-user-complains-feature-cant-be-disabled">https://www.tomshardware.com/tech-industry/artificial-intelligence/gemini-ai-caught-scanning-google-drive-hosted-pdf-files-without-permission-user-complains-feature-cant-be-disabled</a>, See on <a href="https://news.ycombinator.com/item?id=40965892">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">

<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-1200-80.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-1920-80.jpg.webp 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-320-80.jpg" alt="Google Gemini Advanced" srcset="https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE.jpg"></picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/sD9objsEAPDccSXYjH4ybE.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Google)</span>
</figcaption>
</div>

<div id="article-body">
<p>As part of the wider tech industry's wider push for <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/artificial-intelligence" data-before-rewrite-localise="https://www.tomshardware.com/tag/artificial-intelligence">AI</a>, whether we want it or not, it seems that <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/google" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/google">Google</a>'s <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tech-industry/artificial-intelligence/google-launches-gemini-its-newest-and-most-capable-ai-model-and-a-full-frontal-assault-on-openais-gpt-4" data-before-rewrite-localise="https://www.tomshardware.com/tech-industry/artificial-intelligence/google-launches-gemini-its-newest-and-most-capable-ai-model-and-a-full-frontal-assault-on-openais-gpt-4">Gemini AI</a> service is now reading private Drive documents without express user permission, per a report from Kevin Bankster on Twitter embedded below. While Bankster goes on to discuss reasons why this may be glitched for users like him in particular, the utter lack of control being given over his sensitive, private information is unacceptable for a company of Google's stature —and does not bode well for future privacy concerns amongst AI's often-forced rollout.</p><div><blockquote data-lang="en"><p lang="en" dir="ltr">Just pulled up my tax return in @Google Docs--and unbidden, Gemini summarized it. So...Gemini is automatically ingesting even the private docs I open in Google Docs? WTF, guys. I didn't ask for this. Now I have to go find new settings I was never told about to turn this crap off.<a href="https://twitter.com/KevinBankston/status/1811075836558114968" data-url="https://twitter.com/KevinBankston/status/1811075836558114968" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">July 10, 2024</a></p></blockquote></div><p>So, what exactly is going on here? Both Google support and the Gemini AI itself do not quite seem to know, but Kevin Bankston has some theories, after providing much more detail in the full thread. Contrary to the initial posting, this is technically happening within the larger umbrella of Google Drive and not Google Docs specifically, though it seems likely the issue could apply to Docs as well.</p><p>But what caused this issue? According to Google's Gemini AI, the privacy settings used to inform Gemini should be openly available, but they aren't, which means the AI is either "hallucinating (lying)" or some internal systems on Google's servers are outright malfunctioning. Either way, not a great look, even if this private data supposedly isn't used to train the Gemini AI.</p><p>What's more, Bankston did eventually find the settings toggle in question... only to find that Gemini summaries in Gmail, Drive, and Docs were already disabled. Additionally, it was in an entirely different place than either of the web pages to which Gemini's bot initially pointed.</p><p>For Bankston, the issue seems localized to Google Drive, and only happens after pressing the Gemini button on at least one document. The matching document type (in this case, PDF) will subsequently automatically trigger Google Gemini for all future files of the same type opened within Google Drive. He additionally theorizes that it may have been caused by him enabling Google Workspace Labs back in 2023, which could be overriding the intended Gemini AI settings.</p><p>Even if this issue is isolated to Google Workspace Labs users, it's quite a severe downside for having helped Google test its latest and greatest tech. User consent still matters on a granular basis, particularly with potentially sensitive information, and Google has utterly failed at least one segment of its user base by failing to stay true to that principle.</p><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-wRuffs8ZMbx8jqi7TCGfnZ"><section><p>Get Tom's Hardware's best news and in-depth reviews, straight to your inbox.</p></section></div>
</div>
<div id="slice-container-authorBio-wRuffs8ZMbx8jqi7TCGfnZ"><p>Christopher Harper has been a successful freelance tech writer specializing in PC hardware and gaming since 2015, and ghostwrote&nbsp;for various B2B clients in High School before that. Outside of work, Christopher is best known to friends and rivals as an active competitive player in various eSports (particularly fighting games and arena shooters) and a purveyor of music ranging from Jimi Hendrix to Killer Mike to the&nbsp;Sonic Adventure 2&nbsp;soundtrack.</p></div>



<!-- Drop in a standard article here maybe? -->



</section>





<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>








</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The fascinating and complicated sex lives of white-throated sparrows (118 pts)]]></title>
            <link>https://www.audubon.org/news/the-fascinating-and-complicated-sex-lives-white-throated-sparrows</link>
            <guid>40964924</guid>
            <pubDate>Mon, 15 Jul 2024 02:55:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.audubon.org/news/the-fascinating-and-complicated-sex-lives-white-throated-sparrows">https://www.audubon.org/news/the-fascinating-and-complicated-sex-lives-white-throated-sparrows</a>, See on <a href="https://news.ycombinator.com/item?id=40964924">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main" role="main">
                            <div>
              <div>
                      
                              

                      <p>With their quadruple personalities, those little brown birds at your feeder are a lot more interesting than they might appear. </p>
                              
          
          
        </div>
            
      
              <figure>
  
  
  <figcaption>
    
  </figcaption>

</figure>

          </div>

        <section property="schema:text"> <p>Could this be the world’s most interesting bird? Sure, it doesn’t <em>look</em> that interesting. In fact, at a glance, it seems like a run-of-the-mill sparrow.</p>

<p>It doesn’t live in far-off&nbsp;exotic places, either: It may be outside your window right now. The White-throated Sparrow is common and familiar, hopping on the ground under bird feeders all over the eastern states in winter. It appears by the hundreds during migration in places like New York City’s Central Park and Chicago’s lakefront parks. But this seemingly ordinary backyard bird has a secret identity—or, actually, four secret identities. And it's these multiple personalites that place&nbsp;the White-throat at the center of mysteries&nbsp;scientists are still working out.</p>

<p>Watch a flock of White-throats in spring and you’ll notice they have two kinds of head patterns. Some wear snappy stripes of black and white across the top of the head. Others have more modest head stripes of dark brown and tan. That superficial difference might not seem like a big deal, but it reflects a remarkable divergence in the lifestyles of these individuals.</p>

<p>For years it was assumed that tan stripes indicated a young White-throat. As late as 1947, in his classic <em>Field Guide to the Birds</em>, Roger Peterson described the adult’s “striped black and white crown” and said the immature was “duller, but with the same essential recognition-marks.” By that time, there’d been hints already that the colors might not be just a function of age. For example, in <em>The Birds of Massachusetts</em> in 1929, ornithologist Edward Howe Forbush mentioned a two-year-old banded White-throat that “had not attained full adult plumage.” He added that “Some require an extra year, or possibly even more, to assume highest plumage.” But he didn’t go so far as to suggest that some adults would never develop those white stripes.</p>

<p>Finally, in 1961, a landmark study by Canadian ornithologist James Lowther revealed the true nature of the color differences. A White-throated Sparrow, he demonstrated, would be white-striped or tan-striped for life—these were permanent color morphs, and about half of all males and half of all females fell into each color type.</p>


<span data-lazyblock-hash="bean::5478::1672138908">
</span><p>It’s not rare for a bird species to have color morphs. Check your field guide: There are morphs in Eastern Screech-Owls, Reddish Egrets, Red-tailed Hawks, and others. But White-throated Sparrows are different. As Lowther discovered, mated pairs of White-throats almost always involved one bird of each color morph: Either a tan-striped male with a white-striped female, or a white-striped male with a tan-striped female. Intrigued, Lowther extended his research, joined by biologist J. Bruce Falls and others. As studies continued, it became obvious that these two color morphs, existing side by side throughout the species’ range, are stunningly different from each other in behavior.</p>

<p>Within each gender, white-striped birds are more aggressive while tan-striped birds are more nurturing. That seemingly simple generalization is based on a vast amount of research. For many years, Falls and his students at the University of Toronto carried out highly detailed studies of White-throated Sparrows, showing how behavioral differences between the morphs touched every aspect of these birds’ lives.</p>

<p>Consider their defense of breeding territories. White-throated Sparrows nest in coniferous and mixed forests of Canada and the northeastern states, but within this habitat, white-striped males tend to be in slightly more open areas, while tan-striped males are often in denser forest. As with most songbirds, they defend their territories mainly by singing. White-striped males sing far more often than tan-striped males. White-striped females also sing fairly often, but tan-striped females rarely do. They all sing variations of the whistled <em>Oh, sweet, Kimberly-Kimberly-Kimberly!,</em> but the songs of tan-striped birds average slightly lower-pitched, and these lower sounds may carry better through dense habitat.</p>

<p>Now, when singing isn’t enough, White-throats will actively chase away intruders on their territory. White-striped males, though,&nbsp;are much more aggressive than tan-striped males in these chases. White-striped females will also take part in chasing, but tan-striped females don’t seem to do much to defend the territory.</p>

<p>In the actual process of raising young, tan-striped birds shine. Only females (of either morph) build the nest and incubate the eggs, but after the eggs hatch, both parents bring food for the young. On average, females bring more food than males. But within each sex, tan-striped birds bring more food than white-striped ones.</p>

<p>So are females most strongly attracted to the tough, macho, white-striped males? Actually, no. Lab studies have found that females of either morph prefer the tan-striped males. White-striped females, more pushy than their tan-striped sisters, grab the tan-striped bachelors right away, so these pairs form more quickly than the opposite combination. Males of both morphs tend to prefer the white-striped females, but those females quickly hook up with tan-striped males if they can, so eventually the leftover birds will form pairs consisting of white-striped males and tan-striped females. Once they’re paired up, tan-striped birds of either sex tend to be faithfully monogamous, but white-striped birds are sometimes promiscuous.</p>

<p>Talk about a complicated dating scene! Nesting pairs consist of one bird from each morph more than 95 percent of the time, but it’s especially interesting to consider what happens on those occasions when two birds of the <em>same</em> morph pair up. In short, it’s likely to be a bad idea. Pairs consisting of two white-striped birds may fail to raise any young because they spend too much time fighting with each other and not enough time feeding the kids. Pairs consisting of two tan-striped birds might fail completely at defending their territory, but that’s a guess; we don’t have much data.</p>


<span data-lazyblock-hash="bean::5479::1672138910">
</span><p>So the morphs differ in traits that parallel the usual differences between the sexes in birds. Looking at White-throats in the breeding season, we see four distinct types. To oversimplify, we could call them super-aggressive males, more nurturing males, somewhat aggressive females, and super-nurturing females. It’s almost as if the White-throated Sparrow has four sexes. That may sound like a joke, but it’s actually a good description of what’s going on.</p>

<p>We’ve known since the late 1960s that the two color morphs differ in their chromosomes. Tan-striped birds have two identical copies of chromosome 2, but in white-striped birds, one copy of chromosome 2 has a large section inverted, as if it had been put in backwards. Recent work by biologist Elaina Tuttle and others has established that this section of the chromosome is not just inverted, but scrambled in a variety of ways. And it doesn’t just control the color of head stripes. Many different genes here are tightly linked to form a “supergene,” so that birds of one color morph also inherit a whole range of behaviors. The resulting effect is that the White-throat <a href="http://www.molecularecologist.com/2016/02/supergenes-and-sparrows-with-four-sexes/">really does operate as a bird with four sexes</a>. For anyone curious about the scientific background, you can <a href="http://www.cell.com/current-biology/abstract/S0960-9822(15)01562-6">read all the technical details here</a>.</p>

<p>As far as we know, there’s no other bird in the world with this unique arrangement. And the lab work to discover the genetic details was done only because we already knew something weird was going on—because people had taken time to watch the behavior of White-throated Sparrows in the wild. Who knows what other mysteries might be just waiting to be revealed? Most of us will never discover anything quite so astonishing as this, but we can all keep in mind that even the most common bird may have its own rare secrets.</p>
 </section>
                      
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tabloid: A clickbait headline programming language (2021) (175 pts)]]></title>
            <link>https://tabloid.vercel.app/</link>
            <guid>40964261</guid>
            <pubDate>Mon, 15 Jul 2024 00:12:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tabloid.vercel.app/">https://tabloid.vercel.app/</a>, See on <a href="https://news.ycombinator.com/item?id=40964261">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Just Be Rich (2021) (213 pts)]]></title>
            <link>https://keenen.xyz/just-be-rich/</link>
            <guid>40962965</guid>
            <pubDate>Sun, 14 Jul 2024 20:16:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://keenen.xyz/just-be-rich/">https://keenen.xyz/just-be-rich/</a>, See on <a href="https://news.ycombinator.com/item?id=40962965">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
                    <p>No one wants to be the bad guy.</p><p>When narratives begin to shift and the once good guys are labelled as bad it's not surprising they fight back. They'll point to criticisms as exaggerations. Their faults as misunderstandings.</p><p>Today's freshly ordained bad guys are the investors and CEOs of Silicon Valley.</p><p>Once championed as the flagbearers of innovation and democratization, now they're viewed as new versions of the monopolies of old and they're fighting back.</p><p>The title of Paul Graham's essay, <a href="http://paulgraham.com/richnow.html?ref=keenen.xyz">How People Get Rich Now</a>, didn't prepare me for the real goal of his words. It's less a tutorial or analysis and more a thinly veiled attempt to ease concerns about wealth inequality.</p><blockquote>People who don't look any deeper than the Gini coefficient look back on the world of 1982 as the good old days, because those who got rich then didn't get as rich. But if you dig into <em>how</em> they got rich, the old days don't look so good. In 1982, 84% of the richest 100 people got rich by inheritance, extracting natural resources, or doing real estate deals. Is that really better than a world in which the richest people get rich by starting tech companies?</blockquote><p>What he fails to mention is that concerns about wealth inequality aren't concerned with how wealth was generated but rather the growing wealth gap that has accelerated in recent decades. Tech has made startups both cheaper and easier but only for a small percentage of people. And when a select group of people have an advantage that others don't it's compounded over time.</p><blockquote>Once you understand how these mechanisms work, and that startups were suppressed for most of the 20th century, you don't have to resort to some vague right turn the country took under Reagan to explain why America's Gini coefficient is increasing. Of course the Gini coefficient is increasing. With more people starting more valuable companies, how could it not be?</blockquote><figure><img src="https://keenen.xyz/content/images/2021/04/image.png" alt="" loading="lazy" width="1274" height="886" srcset="https://keenen.xyz/content/images/size/w600/2021/04/image.png 600w, https://keenen.xyz/content/images/size/w1000/2021/04/image.png 1000w, https://keenen.xyz/content/images/2021/04/image.png 1274w" sizes="(min-width: 720px) 720px"></figure><p>Paul paints a rosy picture but doesn't mention that incomes for lower and middle-class families have fallen since the 80s. This golden age of entrepreneurship hasn't benefitted the vast majority of people and the increase in the Gini coefficient isn't simply that more companies are being started. The rich are getting richer and the poor are getting poorer.</p><figure><img src="https://keenen.xyz/content/images/2021/04/image-1.png" alt="" loading="lazy" width="848" height="830" srcset="https://keenen.xyz/content/images/size/w600/2021/04/image-1.png 600w, https://keenen.xyz/content/images/2021/04/image-1.png 848w" sizes="(min-width: 720px) 720px"></figure><blockquote>You would think, after having been on the side of labor in its fight with capital for almost two centuries, that the far left would be happy that labor has finally prevailed. But none of them seem to be. You can almost hear them saying "No, no, not <em>that</em> way."</blockquote><p>And there we have it. The slight injection of his true ideology relegated to the notes section and vague enough that some might ignore. But keep in mind this is the same guy who argued <a href="http://www.paulgraham.com/wtax.html?ref=keenen.xyz">against a wealth tax</a>. His seemingly impartial and logical writing attempts to hide his true intentions.</p><p>Is this really about how people get rich or why we should all be happy that people like PG are getting richer while tons of people and struggling to meet their basic needs. Wealth inequality is just a radical left fairy tale to villainize the hard-working 1%. We could all be rich too, it's so much easier now. Just pull yourself up by your bootstraps.</p><p>There's no question that it's easier now than ever to start a new business and reach your market. The internet has had a democratizing effect in this regard. But it's also obvious to anyone outside the SV bubble that it's still only accessible to a small minority of people. Most people don't have the safety net or mental bandwidth to even consider entrepreneurship. It is not a panacea for the masses.</p><p>But to use that fact to push the false claim that wealth inequality is solely due to more startups and not a real problem says a lot. This essay is less about how people get rich and more about why it's okay that people like PG are getting rich. They're better than the richest people of 1960. And we can join them. We just need to stop complaining and just be rich instead.</p>
                    
                </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[California Grid Breezes Through Heatwave with Batteries (107 pts)]]></title>
            <link>https://thinc.blog/2024/07/14/california-grid-breezes-through-heat-wave-due-to-renewables-batteries/</link>
            <guid>40962942</guid>
            <pubDate>Sun, 14 Jul 2024 20:14:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thinc.blog/2024/07/14/california-grid-breezes-through-heat-wave-due-to-renewables-batteries/">https://thinc.blog/2024/07/14/california-grid-breezes-through-heat-wave-due-to-renewables-batteries/</a>, See on <a href="https://news.ycombinator.com/item?id=40962942">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">
		<p><a href="#content">
			Skip to content		</a></p><!-- .site-header -->

		<div id="content">
	<main id="main">
		
<article id="post-99682">
	<!-- .entry-header -->

	
	
	<div>
		
<figure><p><span><iframe width="840" height="473" src="https://www.youtube.com/embed/lWEQROBWZF0?version=3&amp;rel=1&amp;showsearch=0&amp;showinfo=1&amp;iv_load_policy=1&amp;fs=1&amp;hl=en-US&amp;autohide=2&amp;wmode=transparent" allowfullscreen="true" sandbox="allow-scripts allow-same-origin allow-popups allow-presentation allow-popups-to-escape-sandbox"></iframe></span>
</p></figure>



<p>No rolling blackouts or grid emergencies as California continues on path to a carbon free grid.   Several strategies, including upgrades to vulnerable parts of the grid at play here, but key enabler is more clean energy, especially solar, and above all, battery storage, now equivalent to 5 very large nuclear power plants.<br></p>


<div>
<figure><a href="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?ssl=1"><img decoding="async" width="840" height="472" data-attachment-id="99693" data-permalink="https://thinc.blog/2024/07/14/california-grid-breezes-through-heat-wave-due-to-renewables-batteries/image-42-28/" data-orig-file="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?fit=1260%2C707&amp;ssl=1" data-orig-size="1260,707" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-42" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?fit=300%2C168&amp;ssl=1" data-large-file="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?fit=840%2C472&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?resize=840%2C472&amp;ssl=1" alt="" srcset="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?resize=1024%2C575&amp;ssl=1 1024w, https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?resize=300%2C168&amp;ssl=1 300w, https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?resize=768%2C431&amp;ssl=1 768w, https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?resize=1200%2C673&amp;ssl=1 1200w, https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?resize=624%2C350&amp;ssl=1 624w, https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-42.png?w=1260&amp;ssl=1 1260w" sizes="(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px" data-recalc-dims="1"></a></figure></div>


<figure><p><span><iframe loading="lazy" width="840" height="473" src="https://www.youtube.com/embed/ISsUMjvBjoQ?version=3&amp;rel=1&amp;showsearch=0&amp;showinfo=1&amp;iv_load_policy=1&amp;fs=1&amp;hl=en-US&amp;autohide=2&amp;wmode=transparent" allowfullscreen="true" sandbox="allow-scripts allow-same-origin allow-popups allow-presentation allow-popups-to-escape-sandbox"></iframe></span>
</p></figure>



<p>In fact, California seems to have reached a level of storage that is creating some kind of a phase-change in the grid, yielding benefits that are surprising even expert observers.  More and more days where renewables supply greater-than 100 percent of California’s power – enabling exports even under these challenging conditions.</p>



<figure></figure>


<div>
<figure><a href="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?ssl=1"><img loading="lazy" decoding="async" width="840" height="759" data-attachment-id="99701" data-permalink="https://thinc.blog/2024/07/14/california-grid-breezes-through-heat-wave-due-to-renewables-batteries/image-44-28/" data-orig-file="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?fit=1000%2C903&amp;ssl=1" data-orig-size="1000,903" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-44" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?fit=300%2C271&amp;ssl=1" data-large-file="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?fit=840%2C759&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?resize=840%2C759&amp;ssl=1" alt="" srcset="https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?w=1000&amp;ssl=1 1000w, https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?resize=300%2C271&amp;ssl=1 300w, https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?resize=768%2C694&amp;ssl=1 768w, https://i0.wp.com/thinc.blog/wp-content/uploads/2024/07/image-44.png?resize=388%2C350&amp;ssl=1 388w" sizes="(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px" data-recalc-dims="1"></a></figure></div>	</div><!-- .entry-content -->

	<!-- .entry-footer -->
</article><!-- #post-99682 -->

<!-- .comments-area -->

	<nav aria-label="Posts">
		<h2>Post navigation</h2>
		
	</nav>
	</main><!-- .site-main -->

	
</div><!-- .site-content -->

		<!-- .site-footer -->
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fusion – a hobby OS implemented in Nim (263 pts)]]></title>
            <link>https://github.com/khaledh/fusion</link>
            <guid>40962767</guid>
            <pubDate>Sun, 14 Jul 2024 19:43:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/khaledh/fusion">https://github.com/khaledh/fusion</a>, See on <a href="https://news.ycombinator.com/item?id=40962767">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Fusion OS</h2><a id="user-content-fusion-os" aria-label="Permalink: Fusion OS" href="#fusion-os"></a></p>
<p dir="auto">Fusion is a hobby operating system for x86-64 implemented in Nim. I'm documenting
the process of building it at: <a href="https://0xc0ffee.netlify.app/" rel="nofollow">https://0xc0ffee.netlify.app</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<p dir="auto"><strong>UEFI Bootloader</strong></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/khaledh/fusion/blob/main/screenshots/bootloader.png"><img src="https://github.com/khaledh/fusion/raw/main/screenshots/bootloader.png" alt="UEFI Bootloader"></a></p>
<p dir="auto"><strong>GUI</strong> (<em>Note: This screenshot is from the <code>graphics</code> branch, which is still a work-in-progress.</em>)</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/khaledh/fusion/blob/main/screenshots/graphics.png"><img src="https://github.com/khaledh/fusion/raw/main/screenshots/graphics.png" alt="Screenshot from the graphics branch"></a></p>
<p dir="auto"><strong>Booting Fusion Kernel</strong></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/khaledh/fusion/blob/main/screenshots/kernel-booting.png"><img src="https://github.com/khaledh/fusion/raw/main/screenshots/kernel-booting.png" alt="Booting Fusion Kernel"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto">The following features are currently implemented:</p>
<ul dir="auto">
<li>UEFI Bootloader</li>
<li>Physical Memory Manager</li>
<li>Virtual Memory Manager</li>
<li>Single Address Space</li>
<li>User Mode</li>
<li>Preemptive Multitasking</li>
<li>System Calls</li>
<li>ELF Loader</li>
<li>Timer Interrupts</li>
</ul>
<p dir="auto">Planned:</p>
<ul dir="auto">
<li>Demand Paging</li>
<li>Inter-Process Communication</li>
<li>Disk I/O</li>
<li>File System</li>
<li>Keyboard/Mouse Input</li>
<li>Shell</li>
<li>GUI</li>
<li>Networking</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Building</h2><a id="user-content-building" aria-label="Permalink: Building" href="#building"></a></p>
<p dir="auto">To build Fusion, you need to have the following dependencies installed:</p>
<ul dir="auto">
<li><a href="https://nim-lang.org/" rel="nofollow">Nim</a></li>
<li><a href="https://llvm.org/" rel="nofollow">LLVM</a> (clang and lld)</li>
<li><a href="https://github.com/casey/just">Just</a></li>
</ul>
<p dir="auto">Build Fusion with the following command:</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Running</h2><a id="user-content-running" aria-label="Permalink: Running" href="#running"></a></p>
<p dir="auto">Fusion currently runs on <a href="https://www.qemu.org/" rel="nofollow">QEMU</a>, so you'll need to install it first. Launch Fusion with the following command:</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">MIT</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to Know When It's Time to Go (292 pts)]]></title>
            <link>https://thecodist.com/how-to-know-when-its-time-to-go/</link>
            <guid>40962675</guid>
            <pubDate>Sun, 14 Jul 2024 19:16:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thecodist.com/how-to-know-when-its-time-to-go/">https://thecodist.com/how-to-know-when-its-time-to-go/</a>, See on <a href="https://news.ycombinator.com/item?id=40962675">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="site-main">
<article>

    <header>

        

        


        

            <figure>
                <img srcset="https://thecodist.com/content/images/size/w300/2024/07/timetogo-1.jpg 300w,
                            https://thecodist.com/content/images/size/w600/2024/07/timetogo-1.jpg 600w,
                            https://thecodist.com/content/images/size/w1000/2024/07/timetogo-1.jpg 1000w,
                            https://thecodist.com/content/images/size/w2000/2024/07/timetogo-1.jpg 2000w" sizes="(min-width: 1400px) 1400px, 92vw" src="https://thecodist.com/content/images/size/w2000/2024/07/timetogo-1.jpg" alt="Alarm clock with words &quot;Time To Go&quot;">
            </figure>

    </header>

    <section>
        <p>I retired in 2021 at 63.5 after about four decades as a programmer. What made me do this was not failing ability in any way, but after a year of consideration, I realized I didn't care to do it anymore.</p><p>Everyone will eventually reach a point at which they can no longer do what they spent their lives doing—but it's not just about retirement; it can happen at any time earlier as well. I've known people much younger than me who became obsolete due to their chosen technology going away or people who simply got tired of writing code or, more commonly, doing it as a job.</p><p>Of course its not only programmers, it happens in everything including sports where professionals keep playing beyond their ability (often to make a bunch more money), and even politicians who exceed their limit (currently on view as both US Presidential candidates should not run but won't quit). It can be that you cannot do it anymore, have a lack of desire, a bad job market, obsolete technology, or are discovering something else worth doing. In my life, I've seen all of those.</p><p>I knew a young programmer a decade ago who left his CS degree because he was making tons of money shipping mobile apps, he even wrote a book on it, and started several companies. But he burned out and discovered he no longer cared, started a Jeep dealership, then started a land clearing business (riding bulldozers all day) and enjoyed all of that more, plus had more consistent success.</p><p>I knew someone who got a CS degree when I was getting my Chemistry degree and spent his career writing only mainframe systems code. Eventually, the mainframe was abandoned, and he had not learned anything else, so he had to work installing network cables. Another team at a place where I worked bragged about how great their technology was (4GL tools generating RPG2); a year later, they were out of a job, and the tool was obsolete. Sometimes, the world passes you by.</p><p>You probably don't know any retired programmers—back in the early 80s, when I started, there was only a tiny percentage of programmers compared to today, and over the decades, many gave up, became managers, or became obsolete. So, not many remained writing code long enough to end their career still writing code. Among those who I knew that started when I did, all that remained forty years later were doing legacy work; I was the only one still working on the leading edge of things (in my case, iOS in Swift for a very large company). It's hard to sustain a career that long in an industry with insane amounts of change.</p><p>All of you reading this (programmers anyway) will eventually hit a point where you can't do the job anymore for one of the above reasons. It's important to be honest with yourself. Are you keeping up to date sufficiently to continue the job? Is the job even interesting anymore, or is there something else you would rather do? Maybe your programming is not fun, or perhaps it's no longer challenging enough. Despite how unfulfilling it is, I've known people who enjoy the paycheck, do boring work, and keep doing it. That's a choice, but I was never satisfied with that.</p><p>It's not only quitting programming that you might consider; the biggest reason to quit may be that your job is not worth doing and that you need to find another one. I've quit perfectly good jobs (and some terrible ones) because I did not find the work interesting, the direction terrible, or a hostile workplace. Naturally, some employers went out of business or laid people off, but I left those jobs involuntarily! A different kind of programming or a different industry could revive your interest. The key is still to be honest with yourself. I've known people who left a high-pressure, high-salary job, started a farm, or began a different career. It's not worth working and being miserable.</p><p>Some time ago, I knew a programmer with the same number of years of experience as me. Yet he seemed unable to comprehend what was required of him, and I had to review everything he wrote because it rarely worked; for example, he would copy and paste code but include extra lines that did nothing. I still have no idea how you can work for 30 years and be unable to do even simple things.</p><p>None of this says that you should discriminate against people simply due to their age. Age and ability are not correlated. I've known people older than me who were brilliant and some that were incapable, like the previous person. I've seen 20-year-olds who could write anything successfully and others who did not understand simple concepts. Thankfully, I saw little age discrimination besides a few interviews where the interviewer had that look on their face: "Oh no, an old guy." Especially in my last three employers (covering about a decade), each valued everything I did.</p><p>When I announced my retirement (with three months' warning), my leaders were shocked. They couldn't comprehend why anyone would retire. One of them, whom I had worked for for two of those jobs and always made his life easier, never spoke to me again or even said goodbye. I still talk with some of my peers and team, and knowing how downhill the work has gone since (although the money got really good), I would have left anyway. I like making a difference and being challenged to do things and work that matters. Money is nice, but I liked making that difference.</p><p>Everyone eventually reaches a point where a job, an employer, an industry, or even their entire career ends. It feels better to be honest and make an informed decision rather than discover you are falling behind and possibly being forced out. It feels better to leave a bad job instead of hanging on until your hair falls out, even if the next job is equally terrible (I've been there). Your career is yours; it's up to you to make the most of it, even if you end it.</p><p>I still write code every day in support of my <a href="https://digcon.art/?ref=thecodist.com">generative art practice</a>. The code is much more complex than anything I did previously, and much of it does not have anyone else doing it, so it's a lot of invention, which is fun. While I miss certain aspects of my final job, I don't miss the eternal pressure, long hours, bad executive decision-making, and endless changes. I do miss being a leader and seeing things we wrote being used by our many customers. </p><p>Programming can be a fun career, a horrible nightmare, or something in between, and it never stands still. I enjoyed the good parts, tolerated the bad, and switched technologies, industries, and employers often enough to keep it going for four decades. That's long enough.</p>
    </section>


</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Disqualified (1954) (114 pts)]]></title>
            <link>https://www.gutenberg.org/cache/epub/30251/pg30251-images.html</link>
            <guid>40962572</guid>
            <pubDate>Sun, 14 Jul 2024 18:49:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gutenberg.org/cache/epub/30251/pg30251-images.html">https://www.gutenberg.org/cache/epub/30251/pg30251-images.html</a>, See on <a href="https://news.ycombinator.com/item?id=40962572">Hacker News</a></p>
<div id="readability-page-1" class="page"><pre></pre>
<p><img alt="" height="358" src="https://www.gutenberg.org/cache/epub/30251/images/001.png" title="" width="600" id="id-7544715429723703257">
<small><i>Illustrated by Kelly Freas</i></small></p>
<p><span><i>If Saranta wished to qualify as one who loved
his fellow man, he should have known that often
the most secretive things are the most obvious.</i></span></p>

<h2>BY CHARLES L. FONTENAY</h2>
<p><span>After</span> the morning inspection
tour, Tardo, the Solar Council's
Planetary Aid agent, and his
companion, Peo, were taken to the
castle which stood on a hill overlooking
the area.</p>
<p>Tardo and Peo were entertained
royally at luncheon by Saranta,
their host, who appeared to be the
wealthy overlord of this portion of
the planet. The meal was delicious—tender,
inch-thick steaks served
with delicate wine sauce and half
a dozen of the planet's exotic vegetables,
topped off by a cool fruit
dessert.</p>
<p>"My recommendation will be of
considerable importance to you,"
said Tardo as they ate. "If it is favorable,
there is certain technical
aid aboard ship which will be made
available to you at once. Of course,
you will not receive advanced
equipment from the Solar Council
until there is a more thorough investigation."</p>
<p>"I'm afraid our culture is too
simple and agrarian to win your
approval," said Saranta modestly.</p>
<p>"That isn't a major consideration.
The Council understands the
difficulties that have faced colonies
in other star systems. There are certain
fundamental requirements, of
course: no abnormal religious practices,
no slavery ... well, you understand
what I mean."</p>
<p>"We really feel that we have
done well since we ... our ancestors,
that is ... colonized our world
a thousand years ago," said Saranta,
toying with a wineglass. A smiling
servant filled the glasses of Tardo
and Peo. "You see, there was no
fuel for the ship to explore other
planets in the system, and the ship
just rusted away. Since we are some
distance from the solar system,
yours is the first ship that has landed
here since colonization."</p>
<p>"You seem to have been lucky,
though," said Peo. He was navigator
of the Council ship, and had
asked to accompany Tardo on the
brief inspection trip. "You could
have landed on a barren planet."</p>
<p>"Well, no, the colonizers knew it
was liveable, from the first exploration
expedition," said Saranta.
"There were difficulties, of course.
Luxuriant vegetation, but no animal
life, so we had no animals to
domesticate. Pulling a plow is hard
work for a man."</p>
<p>"But you were able to solve this
situation in a humanitarian way?"
asked Tardo, peering at him keenly.
"That is to say, you didn't resort
to slavery?"</p>
<p>Saranta smiled and spread his
hands slightly.</p>
<p>"Does this look like a slave society
to you?" he countered. "The
colonists were anxious to co-operate
to make the planet liveable. No one
objected to work."</p>
<p>"It's true we've seen no slaves,
that we know about," said Tardo.
"But two days is a short time for inspection.
I must draw most of my
conclusions from the attitudes of
you and the others who are our
hosts. How about the servants
here?"</p>
<p>"They are paid," answered Saranta,
and added ruefully: "There
are those of us who think they are
paid too well. They have a union,
you know."</p>
<p>Tardo laughed.</p>
<p>"A carry-over from Earth, no
doubt," he commented. "An unusual
one, too, for a culture without
technology."</p>
<p>When the meal was over, the
two men from the ship were conducted
on a tour of the area. It was
a neat agricultural community,
with broad fields, well-constructed
buildings and, a short distance from
Saranta's castle-like home, a village
in which artisans and craftsmen
plied their peaceful trades.</p>
<p>Peo tried to notice what he
thought Tardo would look for on
such a short inspection. The Council
agent, he knew, had had intensive
training and many years of
experience. It was hard for Peo to
judge what factors Tardo would
consider significant—probably very
minor ones that the average man
would not notice, he thought.</p>
<p>Tardo had seemed most intent
on the question of slavery, and Peo
looked for signs of it. He could see
none. The people of the planet had
had time to conceal some things, of
course. But the people they saw in
the village wore a proud air of independence
no slave could assume.</p>
<p>Saranta apologized for their having
to walk, explaining that there
was no other means of transportation
on the planet.</p>
<p>"And, without transportation,
you can understand why we have
not been able to develop a technology,"
he added. "We hope transport
will be included in the first
assistance you will give us."</p>
<p>Tardo asked about the fields.</p>
<p>"I see there is no one working
them," he said. "Is that done by
the villagers?"</p>
<p>"Our labor supply is transient,"
answered Saranta after a moment's
hesitation. "The laborers who will
work our fields—for a wage, of
course—are probably in the next
town or the one beyond it now."</p>
<p>Alpha Persei was sinking in the
western sky when Tardo and Peo
took their leave of Saranta and
made their way down the road toward
their planetary landing craft.</p>
<p>"It looks like a good world to
me," said Peo. "If tomorrow's inspection
is as satisfactory, I suppose
you will recommend the beginning
of technical aid?"</p>
<p>"There will be no inspection tour
tomorrow, and I shall recommend
against aid at this time," replied
Tardo. "I've seen enough."</p>
<p>"Why?" asked Peo, surprised.</p>
<p>"There are two classes of people
on this planet, and we've seen only
one," said Tardo. "Those we have
seen are freemen. The others are
no better than animals. We give no
aid that helps men tighten their
hold over their fellows."</p>
<p>"If you haven't seen them, how
do you know there is another class?"
demanded Peo. "There is no evidence
of any such situation."</p>
<p>"The evidence is well hidden.
But if you think your stomach can
take it now, I'll tell you. If you remember
your history, colonizing
ships 1000 years ago had no space
to carry animals along. They had
to depend on native animal life of
the planet, and this planet had
none."</p>
<p>"Saranta said that. But I don't
see ..."</p>
<p>"Those were delicious steaks,
weren't they?" remarked Tardo
quietly.</p>
<div><p><a href="https://www.gutenberg.org/cache/epub/30251/images/002-2.jpg" id="id-3905019966533701082"><img alt="" height="200" src="https://www.gutenberg.org/cache/epub/30251/images/002-1.jpg" title="" width="142" id="id-4645311178841668563"></a></p>
<p><span><b>Transcriber's Note:</b></span></p>
<p>This etext was produced from <i>If Worlds of Science Fiction</i> September 1954.
Extensive research did not uncover any evidence that the U.S.
copyright on this publication was renewed. Minor spelling and
typographical errors have been corrected without note.</p></div>
<pre></pre>

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Calculating position from raw GPS data (2017) (215 pts)]]></title>
            <link>https://www.telesens.co/2017/07/17/calculating-position-from-raw-gps-data/</link>
            <guid>40962231</guid>
            <pubDate>Sun, 14 Jul 2024 17:42:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.telesens.co/2017/07/17/calculating-position-from-raw-gps-data/">https://www.telesens.co/2017/07/17/calculating-position-from-raw-gps-data/</a>, See on <a href="https://news.ycombinator.com/item?id=40962231">Hacker News</a></p>
<div id="readability-page-1" class="page"><div kcite-section-id="1152">
<p>We are all familiar with GPS (Global Positioning System) and its myriad applications. From getting directions using Google maps to hailing&nbsp;a ride using a ride&nbsp;sharing app, countless individuals and businesses rely on accurate position estimation&nbsp;using GPS. Position estimation using GPS is now so accurate that GPS is being used for measuring plate tectonics and continental drift. Indeed, GPS is so much a part of our lives that few of us stop and wonder how it actually works. The purpose of this post is to show you how. &nbsp;More specifically, we’ll first learn how position is calculated from range measurements to GPS satellites and then consider a concrete example where we’ll process raw data collected by a commercial GPS receiver to obtain user position estimates.</p>
<p>GPS is owned by the US government and operated by the US air force. As such, access to GPS data can be degraded or denied to other nations due to geopolitical concerns. For example, according to this <a href="https://en.wikipedia.org/wiki/Global_Positioning_System">wikipedia article</a>, access to GPS data was denied to the Indian military during the Kargil conflict. Other countries therefore decided to implement their own GPS like systems. Examples are GLONASS by Russia, Galileo by the European Union and BeiDou by China. This may seem like a waste of resources, but many of these systems operate using the same standards as GPS and are interoperable. For example, latest GPS receivers can receive signals from both GPS and GLONASS satellites, improving positioning accuracy. The wikipedia article referenced above also provides an interesting history of the origins of the GPS system dating back to Sputnik, the first man made satellite launched in space.</p>
<p>The post is divided into 3 parts – the first part describes the&nbsp;various coordinate systems used to express position. An understanding of these coordinate systems is essential for understanding how GPS works and is useful in its own right. For example, the concept of height above the earth surface is something that people intuitively understand, but turns out to be tricky idea to precisely define. The second part describes the basic principle of triangulation used by GPS to calculate position&nbsp;and develops the mathematics for calculating the user position from satellite measurements. A casual user, interested in a general knowledge of how GPS operates but not in the details can read part 1 and the first few sections of part 2 before the math starts. &nbsp;Finally, the appendix provides the Matlab code for implementing various ideas discussed in this post.</p>
<p>Most of the information in this post derives from the book “Global Positioning Systems: Signals, Measurements and Performance”&nbsp;<span id="as0cu2o0u8" data-reflist="[&quot;a5of4cpcm&quot;]" data-footnote="undefined"><sup>1</sup></span>, an excellent book about GPS systems. The matlab code presented in this post was written as solutions to the various end of chapter problems in the book. I also make use of material in the GPS Interface Specification document<span id="adssc1bn88" data-reflist="[&quot;g1c8p8q7oq&quot;]" data-footnote="undefined"><sup>2</sup></span>. My contribution is to present the keys ideas related to GPS in a (hopefully) clear and concise manner and show&nbsp;the Matlab code that implements the positioning algorithms on real world data collected using commercial GPS receivers that can be purchased from the internet. After reading this post, a casual reader&nbsp;should have a better understanding of GPS, so the next time they use Google maps on their phone, they are aware of the amazing&nbsp;technical infrastructure that makes positioning and navigation applications possible. A more technical reader&nbsp;should be able to replicate my experiments by collecting their own data and running the Matlab code.</p>
<div id="ez-toc-container">

<nav><ul><li><a href="#Part_1" title="Part 1">Part 1</a><ul><li><a href="#Model_1_Reference_Ellipsoid" title="Model 1: Reference Ellipsoid">Model 1: Reference Ellipsoid</a></li><li><a href="#Model_2_Geoid" title="Model 2: Geoid">Model 2: Geoid</a></li><li><a href="#Latitude_and_Longitude" title="Latitude and Longitude">Latitude and Longitude</a></li><li><a href="#Conversion_between_Geodetic_Ellipsoidal_and_Cartesion_Coordinates" title="Conversion between Geodetic (Ellipsoidal) and Cartesion Coordinates">Conversion between Geodetic (Ellipsoidal) and Cartesion Coordinates</a></li><li><a href="#Local_Coordinate_Systems" title="Local Coordinate Systems">Local Coordinate Systems</a></li></ul></li><li><a href="#Part_2_Using_GPS_to_Calculate_User_Position" title="Part 2: Using GPS to Calculate User Position">Part 2: Using GPS to Calculate User Position</a><ul><li><a href="#Step_1_Determining_the_Position_of_a_Satellite" title="Step 1: Determining the Position of a Satellite">Step 1: Determining the Position of a Satellite</a><ul><li><a href="#Rotating_the_Satellite_Reference_Frame" title="Rotating the Satellite Reference Frame">Rotating the Satellite Reference Frame</a></li></ul></li><li><a href="#Step_2_Computing_the_Distance_of_the_User_from_the_Satellite" title="Step 2: Computing the Distance of the User from the Satellite">Step 2: Computing the Distance of the User from the Satellite</a><ul><li><a href="#Estimating_the_Satellite_Clock_Bias" title="Estimating the Satellite Clock Bias">Estimating the Satellite Clock Bias</a></li><li><a href="#User_Clock_Bias" title="User Clock Bias">User Clock Bias</a></li></ul></li><li><a href="#Step_3_User_Position_and_Clock_Bias_Estimation" title="Step 3: User Position and Clock Bias Estimation">Step 3: User Position and Clock Bias Estimation</a></li></ul></li><li><a href="#Note_about_the_Matlab_Code" title="Note about the Matlab Code">Note about the Matlab Code</a></li><li><a href="#Experimental_Setup" title="Experimental Setup">Experimental Setup</a><ul><li><a href="#Processing_Raw_GPS_Data" title="Processing Raw GPS Data">Processing Raw GPS Data</a></li><li><a href="#Analysis_of_Results" title="Analysis of Results">Analysis of Results</a></li><li><a href="#Clock_Bias_Drift" title="Clock Bias Drift">Clock Bias Drift</a></li><li><a href="#Computing_the_Satellite_AzimuthElevation" title="Computing the Satellite Azimuth/Elevation">Computing the Satellite Azimuth/Elevation</a></li><li><a href="#Dilution_of_Precision_DOP" title="Dilution of Precision (DOP)">Dilution of Precision (DOP)</a></li></ul></li><li><a href="#Appendix" title="Appendix">Appendix</a><ul><li><a href="#1a_Code_for_Calculating_User_Position_and_Clock_Bias" title="1.a Code for Calculating User Position and Clock Bias">1.a Code for Calculating User Position and Clock Bias</a></li><li><a href="#1b_Code_for_Calculating_Satellite_Position" title="1.b Code for Calculating Satellite Position">1.b Code for Calculating Satellite Position</a></li><li><a href="#1c_Code_for_Computing_the_Least_Squares_Solution_for_User_Position_and_Clock_Bias" title="1.c Code for Computing the Least Squares Solution for User Position and Clock Bias">1.c Code for Computing the Least Squares Solution for User Position and Clock Bias</a></li><li><a href="#1d_Code_for_Calculating_Satellite_Clock_Bias" title="1.d Code for Calculating Satellite Clock Bias">1.d Code for Calculating Satellite Clock Bias</a></li><li><a href="#1e_Code_for_converting_ECEF_WGS84_to_Ellipsoidal_Coordinates" title="1.e Code for converting ECEF (WGS84) to Ellipsoidal Coordinates">1.e Code for converting ECEF (WGS84) to Ellipsoidal Coordinates</a></li><li><a href="#1f_format_ephemeris3m" title="1.f format_ephemeris3.m">1.f format_ephemeris3.m</a></li><li><a href="#2a_Taylor_Series_Expansion_of_Vector_Modulus" title="2.a Taylor Series Expansion of Vector Modulus">2.a Taylor Series Expansion of Vector Modulus</a></li><li><a href="#2b_Ionospheric_and_Tropospheric_Delay" title="2.b&nbsp;Ionospheric and Tropospheric Delay">2.b&nbsp;Ionospheric and Tropospheric Delay</a></li><li><a href="#2c_Plotting_code" title="2.c Plotting code">2.c Plotting code</a></li></ul></li></ul></nav></div>
<h2><span id="Part_1"><strong>Part 1</strong></span></h2>
<p>The fundamental task of a GPS system is to calculate position. To do so, we must first define what position means. Most people think about latitude/longitude and height when they think about position. While latitude/longitude are useful to represent a position on the earth surface, they are not suitable for mathematical calculations as they don’t provide a cartesian coordinate system. The physical distance represented by a unit difference between two longitudes is not constant, and depends on the position. For example, the distance between two longitudes one degree apart is greatest&nbsp;at the equator and approaches 0 at the poles.</p>
<p id="jOXWgSj"><img decoding="async" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596cb025bd6b0.png" alt="" width="312" height="293" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596cb025bd6b0.png 540w, https://www.telesens.co/wp-content/uploads/2017/07/img_596cb025bd6b0-300x282.png 300w" sizes="(max-width: 312px) 100vw, 312px"></p>
<p>To be useful for mathematical calculations, a coordinate system where a unit difference between coordinates represents a constant physical distance is required. A family of such coordinate systems can be created by defining a set of perpendicular axes intersecting at an origin that is rigidly attached to the earth. Such coordinate systems are called “ECEF” (Earth Centered, Earth Fixed). These coordinate systems work well to express the position of a user on earth as they rotate with the earth and the position of a stationary user on the earth surface is constant.</p>
<p>The most commonly used ECEF&nbsp;coordinate system is called the WGS 1984 system developed by the department of defense. WGS 84 is an ECEF frame, defined as follows:</p>
<ul>
<li>Origin at the center of mass of the earth</li>
<li>z axis passing through the&nbsp;<em>CTP&nbsp;</em>(Conventional Terrestrial Pole). CTP is the average of the earth’s pole’s position between the years 1900 and 1905. An average needs to be used as the position of the pole is not fixed and wanders around in a circle of radius ~15m.</li>
<li>x axis passing through the intersection of the CTP’s equatorial plane and a reference meridian, often called the <em>Mean Greenwich Meridian</em></li>
</ul>
<p>ECEF frames are convenient to represent positions with respect to the earth, but they are not inertial as they are rigidly attached to a spinning earth. To formulate the problem of satellite motion around the earth in accordance with Newton’s laws of motion, we need an inertial coordinate system in which to express acceleration, position and velocity vectors.</p>
<p id="ZiESHUc"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596cbb5fe5f62.png" alt="" width="504" height="381" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596cbb5fe5f62.png 800w, https://www.telesens.co/wp-content/uploads/2017/07/img_596cbb5fe5f62-300x227.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_596cbb5fe5f62-768x581.png 768w, https://www.telesens.co/wp-content/uploads/2017/07/img_596cbb5fe5f62-326x245.png 326w, https://www.telesens.co/wp-content/uploads/2017/07/img_596cbb5fe5f62-80x60.png 80w" sizes="(max-width: 504px) 100vw, 504px"></p>
<p>An inertial frame can be defined in a manner similar to the ECEF frame except that the x-axis points to the vernal equinox (the direction of intersection of the equatorial plane of the earth with the plane of the earth’s orbit around the sun). Strictly speaking, this frame isn’t inertial either since the earth is moving around the sun. However, it can be considered inertial over short periods (just as the ECEF frame can be considered inertial for analyzing the movement of a body on earth over a short period).</p>
<p>In the rest of this post, we’ll be using the WGS 84 ECEF frame to express the user and satellite position. This is possible because the&nbsp;<a href="http://www.gps.gov/technical/icwg/IS-GPS-200H.pdf">GPS interface specification document</a>&nbsp;(referred to as GPS-IS in the rest of this post) provides a step by step procedure to calculate the satellite position in the ECEF frame at a given time instant that accounts for the non-inertial nature of the ECEF frame. This is fortunate because ECEF frames are ideal to express the position of a user on the surface of the earth as they rotate with the earth and thus the position of a stationary user is constant, as one would expect. This would not be the case if an inertial reference frame is used to express position as such a frame would be fixed in space, and thus would appear rotating with respect to the earth.</p>
<p>Let’s now turn to the issue of defining height that we alluded to earlier. The key question that needs to be answered when defining height is “with respect to what”? Consider for example the height of a point in a desert. If we define height to be the distance of the point from the “ground”, then such a height would change constantly as the level of the ground itself changes due to natural phenomenon&nbsp;(for example, the wind depositing more sand). &nbsp;Thus, to define height, we must first define “ground” (note that strictly speaking, this issue doesn’t arise in a ECEF reference frame, as all distances are measured with respect to the center of mass of the earth. However generally people are not interested in distance from&nbsp;the center of the earth, but from the local earth surface). To define “ground” in a consistent manner, we need a model for the surface of the earth. Two models are generally used:</p>
<h3><span id="Model_1_Reference_Ellipsoid"><strong>Model 1: Reference Ellipsoid</strong></span></h3>
<p>The surface of the earth is modeled as an oblate ellipse called the “reference ellipsoid”, centered at the earth’s center with the axis of revolution coincident with the z axis of an ECEF frame. The lengths of the semi-major and semi-minor axes (denoted as <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-5c53d6ebabdbcfa4e107550ea60b1b19_l3.png" alt="a" title="Rendered by QuickLaTeX.com" height="8" width="9"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f56d50c26583f9a035ff6b4e3c0ca5c0_l3.png" alt="b" title="Rendered by QuickLaTeX.com" height="13" width="8">) are <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-15d678f0603cd51a261d32c1134be9f2_l3.png" alt="a = 6378137m" title="Rendered by QuickLaTeX.com" height="14" width="111"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-22702d21f7da674f49092f81e078357f_l3.png" alt="b = 6357002m" title="Rendered by QuickLaTeX.com" height="13" width="109">. As expected, the value generally used for earth’s radius (with the earth modeled as a sphere) is 6371Km which lies between the lengths of the semi-major and minor-axis. The reference ellipsoid is merely an abstraction for the shape of the earth. It doesn’t have any physical significance. An actual point on the earth surface will usually lie above or below the reference ellipsoid.</p>
<h3><span id="Model_2_Geoid"><strong>Model 2: Geoid</strong></span></h3>
<p>Another surface commonly used to measure height that does have physical significance is called the&nbsp;<em>geoid</em>. This surface is defined as the locus of all points with the same value of the gravitational potential. If the earth was a sphere with a uniform composition, this surface would be a regular surface that can be parameterized as a mathematical function. However since the earth is neither spherical nor uniform, the geoid is usually specified as a series of heights above the reference ellipsoid.&nbsp;Height relative to the geoid is called the orthometric height, or height above the mean sea level (MSL). This makes sense as if the oceans covered the surface of the earth, the shape of the oceans would be a close approximation to the geoid.&nbsp;Strictly speaking, the shape of the geoid itself is not fixed as the surface of the earth is constantly changing due to human activities and natural phenomenon. However given the bulk of the earth, these only have a negligible impact on the earth’s gravitational field and thus on the shape of the geoid.</p>
<p>Note that the height of the geoid is specified with respect to the reference ellipsoid and the height of a given point can be specified with respect to either. The relationship between the ellipsoid, geoid and the actual surface of the earth is shown below.</p>
<p id="AAykyRw"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596ce69d3e988.png" alt="" width="697" height="190" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596ce69d3e988.png 891w, https://www.telesens.co/wp-content/uploads/2017/07/img_596ce69d3e988-300x82.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_596ce69d3e988-768x209.png 768w" sizes="(max-width: 697px) 100vw, 697px"></p>
<h3><span id="Latitude_and_Longitude"><strong>Latitude and Longitude</strong></span></h3>
<p>Armed with an ellipsoidal representation of the shape of the earth and with an ECEF coordinate system, we can define the position of a point P in&nbsp;<em>ellipsoidal&nbsp;</em>coordinates (commonly known as latitude, longitude and height) as follows:</p>

<p>Note that the latitude is the angle between the equatorial plane and the line&nbsp;<em>perpendicular</em> to the surface of the ellipse at point P, not the line joining point P and the earth center (origin of the ECEF frame). Angle between the equatorial plane and the line joining point P and the earth center is called the <em>geocentric </em>(as opposed to geodetic) latitude. If the earth were a perfect sphere, the normal to a point would pass through the earth center and the geocentric and geodetic latitude would coincide.</p>
<p id="fQfkRYt"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596cec084e233.png" alt="" width="499" height="404" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596cec084e233.png 800w, https://www.telesens.co/wp-content/uploads/2017/07/img_596cec084e233-300x243.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_596cec084e233-768x621.png 768w" sizes="(max-width: 499px) 100vw, 499px"></p>
<h3><span id="Conversion_between_Geodetic_Ellipsoidal_and_Cartesion_Coordinates"><strong>Conversion between Geodetic (Ellipsoidal) and Cartesion Coordinates</strong></span></h3>
<p>Conversion from&nbsp;ellipsoidal to cartesian coordinates is straightforward and can be implemented in one step.</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-1fa2534584e6b7d6bb0784d23f384753_l3.png" alt="\begin{bmatrix}x \\ y \\ z \end{bmatrix} = \begin{bmatrix}(N+h)cos(\phi)cos(\lambda) \\ (N+h)cos(\phi)sin(\lambda) \\ (N(1-e^2)+h)sin(\phi) \end{bmatrix}" title="Rendered by QuickLaTeX.com" height="65" width="243"></p>
<p>Going from cartesian to ellipsoidal is trickier and involves an iterative procedure that quickly converges. See Appendix 4.A of <span id="a2qgvc6mnbe" data-reflist="[&quot;a5of4cpcm&quot;]" data-footnote="undefined"><sup>1</sup></span>&nbsp; for details. The corresponding Matlab code is listed in section 1.e of the appendix. The more common use case is&nbsp;to convert ECEF coordinates to ellipsoidal as the input and output of GPS processing algorithms are usually in ECEF coordinates.</p>
<h3><span id="Local_Coordinate_Systems"><strong>Local Coordinate Systems</strong></span></h3>
<p>So far, we have mostly talked about “global” coordinate systems, centered at the earth center. In some applications, it is more convenient to use local coordinate systems, centered on the user’s position. These coordinate systems are called East-North-Up (ENU) systems. Given the user’s position in elliptical coordinates (<img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-5b2be26c0c1341f54b29baddda771346_l3.png" alt="\phi" title="Rendered by QuickLaTeX.com" height="16" width="11">: latitude, <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-2b5c45836864531b8e37025dabadd24a_l3.png" alt="\lambda" title="Rendered by QuickLaTeX.com" height="12" width="10">: longitude), user coordinates can be easily converted from a ECEF frame to a local ENU frame using the following matrix multiplication.</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-a995d083b2be8e2893a7c3d3405ea53a_l3.png" alt="R_{ENU} = \begin{bmatrix}-sin(\lambda) &amp; cos(\lambda) &amp; 0 \\ -sin(\phi)cos(\lambda) &amp; -sin(\phi)sin(\lambda) &amp; cos(\phi) \\ -cos(\phi)cos(\lambda) &amp; cos(\phi)sin(\lambda) &amp; sin(\phi)\end{bmatrix}R_{ECEF}" title="Rendered by QuickLaTeX.com" height="65" width="461"></p>
<p>We’ll see an application of ECEF to ENU conversion when we compute the azimuth and elevation of one of the GPS satellites later.</p>
<h2><span id="Part_2_Using_GPS_to_Calculate_User_Position"><strong>Part 2: Using GPS to Calculate User Position</strong></span></h2>
<p>Determining the position of a user using GPS is essentially a triangulation problem. If the distance of the user from three or more satellites is known, then the 3D position can be calculated using triangulation. The basic idea in 2 dimensions is shown below.</p>
<p id="DFvWGDb"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/06/img_595483bd718db.png" alt="" width="751" height="429" srcset="https://www.telesens.co/wp-content/uploads/2017/06/img_595483bd718db.png 1272w, https://www.telesens.co/wp-content/uploads/2017/06/img_595483bd718db-300x171.png 300w, https://www.telesens.co/wp-content/uploads/2017/06/img_595483bd718db-768x439.png 768w, https://www.telesens.co/wp-content/uploads/2017/06/img_595483bd718db-1024x585.png 1024w" sizes="(max-width: 751px) 100vw, 751px"></p>
<p>The problem of locating the user can&nbsp;thus can be divided into two subproblems:</p>
<ol>
<li>Finding the distance of the user from each satellite</li>
<li>Determining the position of this satellite in the user’s coordinate system</li>
</ol>
<p>Let’s look at each of these problems step by step.</p>
<h3><span id="Step_1_Determining_the_Position_of_a_Satellite"><strong>Step 1: Determining the Position of a Satellite</strong></span></h3>
<p>The ideal satellite orbit is an elliptical orbit and specified completely by 5 Keplerian parameters five&nbsp;of which determine the size and shape of the ellipse and the orientation of the orbital plane relative to the fixed stars (i.e., an inertial reference frame). The sixth parameter specifies the position of the satellite at a particular time instant of epoch. Given the six elements, the satellite position and velocity can be computed at any other epoch.</p>
<p id="bVbOcno"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596c0f935c931.png" alt="" width="722" height="327"></p>
<p>The orbit of a satellite is not an exact ellipse however as the earth is not uniform in composition and the movement of a satellite is perturbed by the gravitational forces of the sun and the moon. The resulting perturbations are small, but must be accounted for to obtain accurate position. GPS accounts for these perturbations by transmitting an expanded set of 16 orbital parameters that can be used to accurately compute the position of a satellite at a given time instant. We won’t go into the details of how these corrections are applied. The step-by-step procedure to compute the satellite position (including applying the orbital corrections)&nbsp;is described in table 20-IV in the GPS IS. The Matlab code that implements this procedure is shown&nbsp;in section 1.b of the appendix.</p>
<h4><span id="Rotating_the_Satellite_Reference_Frame"><strong>Rotating the Satellite Reference Frame</strong></span></h4>
<p>The user position is being calculated at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6">. The GPS signal left&nbsp;the satellite at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-53e61b63b0c5caf6e15d04ca1f2df168_l3.png" alt="t-\tau" title="Rendered by QuickLaTeX.com" height="12" width="38"> and arrives at the user <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-13197f4653c1fd428a291609eb1e3b87_l3.png" alt="\tau" title="Rendered by QuickLaTeX.com" height="8" width="10"> seconds later. While calculating the user’s position, we’ll calculate the satellite positions at <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-53e61b63b0c5caf6e15d04ca1f2df168_l3.png" alt="t-\tau" title="Rendered by QuickLaTeX.com" height="12" width="38">, the time of signal transmission. In time interval <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-13197f4653c1fd428a291609eb1e3b87_l3.png" alt="\tau" title="Rendered by QuickLaTeX.com" height="8" width="10"> however, the earth has rotated by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f6f5810e926c9069ed4f631433cefb52_l3.png" alt="\omega_E\tau" title="Rendered by QuickLaTeX.com" height="11" width="33"> where <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-071d642730c4e192792b5a5398038e79_l3.png" alt="\omega_E" title="Rendered by QuickLaTeX.com" height="11" width="22"> is the rotation rate of the earth. We must rotate the satellite position vectors by the same amount, so that they are expressed in the user’s reference frame, i.e., ECEF frame at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6">. This is done by multiplying the satellite position vector <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-cb156123d6e90883467626d0c9da056e_l3.png" alt="x^k(t-\tau)" title="Rendered by QuickLaTeX.com" height="19" width="69"> by the following rotation matrix:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-8ca92ffac82f21f3661fc71a53237028_l3.png" alt="x^k(t) = \begin{bmatrix} cos(\omega_E\tau) &amp; sin(\omega_E\tau) &amp; 0 \\ -sin(\omega_E\tau) &amp; cos(\omega_E\tau) &amp; 0 \\ 0 &amp; 0 &amp; 1 \end{bmatrix}x^k(t-\tau)" title="Rendered by QuickLaTeX.com" height="65" width="356"></p>
<p>Note that this is&nbsp;<em>not</em> equivalent to calculating the position of the satellites at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6">!</p>
<h3><span id="Step_2_Computing_the_Distance_of_the_User_from_the_Satellite"><strong>Step 2: Computing the Distance of the User from the Satellite</strong></span></h3>
<p>The satellite signal received by a GPS receiver bears the time stamp at which the signal was sent from the satellite. By taking the difference between its own time and the timestamp of the GPS signal and multiplying by the speed of light, the receiver calculates a rough measure of the distance between the receiver and the satellite. This measure is called the <em>pseudorange</em>.&nbsp;If the clock on the satellite and the receiver were perfectly in sync and the GPS signal traveled in a straight line at the speed of light, then this measure would be the true distance between the satellite and the receiver. This however is not the case and the difference between the satellite and user clocks as well as the delays caused by the atmosphere must be modeled to calculate an&nbsp;accurate position of the user.</p>
<p>Let’s consider first the effect of the offset between the user and satellite clocks. Let’s denote the transmission time from the satellite to the user by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-13197f4653c1fd428a291609eb1e3b87_l3.png" alt="\tau" title="Rendered by QuickLaTeX.com" height="8" width="10"> and a common time reference (referred to as GPS Time (GPST)) by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6">. Denoting the receiver clock bias at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6"> by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b0af0ebe71e01d21082bca51fe8fdbe0_l3.png" alt="\delta{t}_u(t)" title="Rendered by QuickLaTeX.com" height="18" width="43"> and satellite clock bias at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-53e61b63b0c5caf6e15d04ca1f2df168_l3.png" alt="t-\tau" title="Rendered by QuickLaTeX.com" height="12" width="38"> by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-855f6ae6f88c417d1bffde01f0f56a46_l3.png" alt="\delta{t}_s(t-\tau)" title="Rendered by QuickLaTeX.com" height="18" width="73">, the pseudorange <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-39ddf94b3b89b6c0253de9196e094e0d_l3.png" alt="\rho(t)" title="Rendered by QuickLaTeX.com" height="18" width="28"> measured by the GPS receiver is given as:</p>
<p><span> (1) </span><span> &nbsp; </span><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-2d2d2486b0bccdeffbb6eb1a72cb10c0_l3.png" height="19" width="581" alt="\begin{equation*} \rho(t) = c[t+\delta{t}_u(t)-(t-\tau+\delta{t}_s(t))] + \epsilon_\rho(t) = c\tau + c[\delta{t}_u(t)-\delta{t}_s(t)] + \epsilon_\rho(t) \end{equation*}" title="Rendered by QuickLaTeX.com"></p>
<p>If there wasn’t a layer of atmosphere between the satellite and the user, the satellite signal would travel along a straight line with the speed of light. Thus, the distance to the satellite at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6"> denoted by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-8b3b5679da7855ed09a5db590dc2d352_l3.png" alt="r(t, t-\tau)" title="Rendered by QuickLaTeX.com" height="18" width="73">&nbsp;would be equal to <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-35eb675dcb08f01b9dc6e0b33d6e1e0c_l3.png" alt="c\tau" title="Rendered by QuickLaTeX.com" height="8" width="18">.</p>
<p>In reality&nbsp;(thankfully), there is thick layer of atmosphere in the path of the satellite signal which slows it down and bends its path. The change in the path length due to bending of the signal ray is generally not significant. However the change in the speed of propagation can be significant and can result in positioning errors of several meters or more. This change in speed has two components – <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-3796b3eab9bdc7ccd4402f58ccd1eff4_l3.png" alt="I_\rho" title="Rendered by QuickLaTeX.com" height="18" width="15"> arising from the propagation of the signal through the ionosphere and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-6869e0cab400c13080534f18769140dc_l3.png" alt="T_\rho" title="Rendered by QuickLaTeX.com" height="18" width="17"> arising from the propagation of the signal through the troposphere (see appendix for more information about these delays and how they can be estimated). Thus,</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-8afa8a75d8f7aadd04e5ad0f40996460_l3.png" alt="c\tau = r(t, t-\tau) + I_\rho + I_\rho" title="Rendered by QuickLaTeX.com" height="20" width="189"></p>
<p>Combining the above two equations and dropping the reference to measurement epoch <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6">,</p>
<p><span> (2) </span><span> &nbsp; </span><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-a30ad2de80f48c4bab8ea88a66b54f60_l3.png" height="19" width="405" alt="\begin{equation*} \rho(t)  = r(t, t-\tau) + I_\rho + I_\rho + c[\delta{t}_u(t)-\delta{t}_s(t)] + \epsilon_\rho(t) \end{equation*}" title="Rendered by QuickLaTeX.com"></p>
<p>Thus, the true range (actual distance of the user from a satellite) can be calculated from the raw pseudo ranges output by the GPS device by first subtracting the user’s estimate of the Tropo and Iono delays and then adjusting for the satellite clock offset. The Iono and the Tropo delay generally lead to a position error of ~25m and&nbsp;~2m respectively. More information about how to estimate these delays are provided in the appendix. In the rest of our analysis in this blog, we’ll ignore these delays.</p>
<h4><span id="Estimating_the_Satellite_Clock_Bias"><strong>Estimating the Satellite Clock Bias</strong></span></h4>
<p>The satellite clock bias is important to estimate as it can result in a position error of thousands of meters. The procedure to calculate the satellite clock bias is described on page 96 of the GPS Interface Specification document. The procedure consists of evaluating a polynomial whose coefficients are provided in the GPS ephemeris message and adding a relativistic term. The polynomial provides most of the correction, with the relativistic effect contributing about 1-10 m depending on the position of the satellite. The code for calculating the satellite clock bias is given in section 1.d of the appendix.</p>
<h4><span id="User_Clock_Bias"><strong>User Clock Bias</strong></span></h4>
<p>The user clock bias is an unknown quantity, just like the user position. The user clock bias will be estimated along with the user position.</p>
<h3><span id="Step_3_User_Position_and_Clock_Bias_Estimation"><strong>Step 3: User Position and Clock Bias Estimation</strong></span></h3>
<p>We are now ready to look at the algorithm used to compute the user position. A quick point about the notation before we look at the math. Generally, vector quantities are expressed using boldface (<img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-a4997d1a0a6554f7c4b2e41d93ee7fe4_l3.png" alt="\boldsymbol{x}" title="Rendered by QuickLaTeX.com" height="8" width="11">) and scalar quantities without emphasis. However in the math shown below, (mostly due to laziness), I’m skipping making this distinction. I think it is clear from the context which quantities are vectors and which ones are not.</p>
<p>Once the satellite clock bias has been accounted for and all available corrections have been applied, the corrected pseudorange measurement for satellite <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-3422b6bb5c160593658b7c39425d9880_l3.png" alt="k" title="Rendered by QuickLaTeX.com" height="13" width="9"> can be written as</p>
<p><span> (3) </span><span> &nbsp; </span><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b417f2d2c79766ac0b349c11458c4b5d_l3.png" height="21" width="146" alt="\begin{equation*} \rho^k = r^k + c\delta{t}_u + \epsilon^k \end{equation*}" title="Rendered by QuickLaTeX.com"></p>
<p>Here <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f3619b985b23b4bfda475cd10a9a990a_l3.png" alt="r^k" title="Rendered by QuickLaTeX.com" height="15" width="15"> is the true distance between the user and the satellite and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-c3c9e4162609ec2d51efe9d6174b0a5e_l3.png" alt="\epsilon^k" title="Rendered by QuickLaTeX.com" height="15" width="14"> denotes the combined effect of the unmodeled errors. Note that all elements in this equation are distances. We have converted the receiver clock bias <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f7094a1583148b625a2996686ebf4429_l3.png" alt="\delta{t}_u" title="Rendered by QuickLaTeX.com" height="15" width="23"> into a distance by multiplying by the speed of light <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-41a04eeea923a1a0c28094a8a4680525_l3.png" alt="c" title="Rendered by QuickLaTeX.com" height="8" width="8">. Also note that all of these calculations are carried out at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6"> and all position vectors are expressed in the ECEF frame at time <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b4e3cbf5d4c5c6d9b702dd139f14c147_l3.png" alt="t" title="Rendered by QuickLaTeX.com" height="12" width="6">. We drop explicit reference to time for convenience.</p>
<p>Let&nbsp;the position of the user in the ECEF frame be denoted by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ede05c264bba0eda080918aaa09c4658_l3.png" alt="x" title="Rendered by QuickLaTeX.com" height="8" width="10">, and the position of satellite <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-3422b6bb5c160593658b7c39425d9880_l3.png" alt="k" title="Rendered by QuickLaTeX.com" height="13" width="9"> by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-81e025d46b78edcab0363d17fe2192ae_l3.png" alt="x^k" title="Rendered by QuickLaTeX.com" height="15" width="17">. Then,</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-2e4acdd9b7a4b6d9e499519567f33ae4_l3.png" alt="r^k = \lVert x^k - x\rVert" title="Rendered by QuickLaTeX.com" height="20" width="106"></p>
<p>and</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-0e5168c5d9a968a25f11dc377856427d_l3.png" alt="\rho_k = \lVert x^k - x\rVert + b + \epsilon^k" title="Rendered by QuickLaTeX.com" height="20" width="174"></p>
<p>We use <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ab39273fac5346ae98fe17505aad3765_l3.png" alt="b = c\delta{t}_u" title="Rendered by QuickLaTeX.com" height="16" width="61"> to represent the user clock bias in units of distance</p>
<p>We wish to determine <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ede05c264bba0eda080918aaa09c4658_l3.png" alt="x" title="Rendered by QuickLaTeX.com" height="8" width="10"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f56d50c26583f9a035ff6b4e3c0ca5c0_l3.png" alt="b" title="Rendered by QuickLaTeX.com" height="13" width="8"> that minimize the difference between the measured and the estimated&nbsp;pseudorange for each satellite. In other words, our task is to determine <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ede05c264bba0eda080918aaa09c4658_l3.png" alt="x" title="Rendered by QuickLaTeX.com" height="8" width="10"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f56d50c26583f9a035ff6b4e3c0ca5c0_l3.png" alt="b" title="Rendered by QuickLaTeX.com" height="13" width="8"> such that</p>
<p><span> (4) </span><span> &nbsp; </span><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-c885229a8fece7adbb458e0a4276cbfb_l3.png" height="22" width="199" alt="\begin{equation*}\delta{\rho}^k = \rho^k -  (\lVert x^k - x\rVert + b) \end{equation*}" title="Rendered by QuickLaTeX.com"></p>
<p>is minimized for all satellites <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-3422b6bb5c160593658b7c39425d9880_l3.png" alt="k" title="Rendered by QuickLaTeX.com" height="13" width="9">.</p>
<p>This problem is solved using an iterative procedure by starting with an estimate of <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ede05c264bba0eda080918aaa09c4658_l3.png" alt="x" title="Rendered by QuickLaTeX.com" height="8" width="10"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f56d50c26583f9a035ff6b4e3c0ca5c0_l3.png" alt="b" title="Rendered by QuickLaTeX.com" height="13" width="8"> and finding the corrections that minimize the equation above. Let our initial estimates be denoted by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-87f2a80bc63f8d7bc3df68c45a787402_l3.png" alt="x_0" title="Rendered by QuickLaTeX.com" height="11" width="17"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-13037b1ccc713463df34f375292ca76e_l3.png" alt="b_0" title="Rendered by QuickLaTeX.com" height="16" width="15">. We wish to find <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-b3f7b57c97fd4b33fbe8b4d14128cf10_l3.png" alt="\delta{x}" title="Rendered by QuickLaTeX.com" height="12" width="19"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-61eba3168a257b831b504ab27b6f69e8_l3.png" alt="\delta{b}" title="Rendered by QuickLaTeX.com" height="13" width="17"> such that the true user position <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-c3cae5612eafb83cfabf5b27e5c0774d_l3.png" alt="x = x_0 + \delta{x}" title="Rendered by QuickLaTeX.com" height="15" width="92"> and the true clock bias <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-4fa77e0aaa257206de03ed1cd019e963_l3.png" alt="b = b_0 + \delta{b}" title="Rendered by QuickLaTeX.com" height="16" width="85"> minimize</p>
<p><span> (5) </span><span> &nbsp; </span><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-783ae5248908ba2cbabca3dd661bdaae_l3.png" height="262" width="458" alt="\begin{equation*} \begin{split} \delta{\rho}^k &amp;= \rho^k -  \rho_0^k  \\ &amp;= \lVert x^k - x\rVert + b - \lVert x^k - x_0\rVert - b_0 + \epsilon^k\\ &amp;= \lVert x^k - x_0 - \delta{x}\rVert + b - \lVert x^k - x_0\rVert - b_0 + \epsilon^k \\ &amp;\approx \lVert x^k - x_0\rVert -\frac{x^k -x_0}{\lVert x^k - x_0\rVert}\cdot\delta{x}+ b - \lVert x^k - x_0\rVert - b_0 + \epsilon^k \\ &amp;= -\frac{x^k -x_0}{\lVert x^k - x_0\rVert}\cdot\delta{x} + \delta{b} + \epsilon^k \\ &amp;= -\hat{x}_{uk}\cdot\delta{x} + \delta{b} + \epsilon^k \\ &amp;= \begin{bmatrix}-\hat{x}_{uk} &amp;  1\end{bmatrix}\begin{bmatrix}\delta{x} \\ \delta{b}\end{bmatrix} + \epsilon^k \end{split} \end{equation*}" title="Rendered by QuickLaTeX.com"></p>
<p>Here <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-66570c7f2ec88e63a1b9650bbd2d433e_l3.png" alt="\hat{x}_{uk}" title="Rendered by QuickLaTeX.com" height="16" width="25"> is the unit vector from the user to satellite <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-3422b6bb5c160593658b7c39425d9880_l3.png" alt="k" title="Rendered by QuickLaTeX.com" height="13" width="9"> and we used the Taylor series expansion of the vector norm (see appendix) to express the delta pseudorange as a matrix multiplication between known and unknown quantities. Concatenating the linear equation developed above for <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ea9c87a513e4a72624155d392fae86e2_l3.png" alt="K" title="Rendered by QuickLaTeX.com" height="12" width="16"> satellites,</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-7269db571bc60968490b77f637534718_l3.png" alt="\boldsymbol{\delta{\rho}} = \begin{bmatrix}\delta{\rho}^1 \\ \delta{\rho}^2 \\ \vdots \\ \delta{\rho}^K \end{bmatrix}  = \begin{bmatrix} -\hat{x}_{u1} &amp;1 \\ -\hat{x}_{u2} &amp;1 \\ \vdots \\ -\hat{x}_{uK} &amp;1\end{bmatrix} \begin{bmatrix}\boldsymbol{\delta{x}} \\ \delta{b} \end{bmatrix} + \boldsymbol{\epsilon}" title="Rendered by QuickLaTeX.com" height="97" width="290"></p>
<p>Setting</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-805aeb706a356dd440043c306cf817c4_l3.png" alt=" \boldsymbol{G}  = \begin{bmatrix} -\hat{x}_{u1} &amp;1 \\ -\hat{x}_{u2} &amp;1 \\ \vdots \\ -\hat{x}_{uK} &amp;1\end{bmatrix}" title="Rendered by QuickLaTeX.com" height="97" width="128"></p>
<p>The expression above can be written more compactly as</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-84613b4b7ae533bb422abac74018aeab_l3.png" alt="\boldsymbol{\delta{\rho}} = \boldsymbol{G}\begin{bmatrix}\boldsymbol{\delta{x}} \\ \delta{b} \end{bmatrix} + \boldsymbol{\epsilon}" title="Rendered by QuickLaTeX.com" height="43" width="133"></p>
<p>For a non-degenerate (<img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-66570c7f2ec88e63a1b9650bbd2d433e_l3.png" alt="\hat{x}_{uk}" title="Rendered by QuickLaTeX.com" height="16" width="25"> are non-coplanar) configuration of <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ea9c87a513e4a72624155d392fae86e2_l3.png" alt="K" title="Rendered by QuickLaTeX.com" height="12" width="16">=4 satellites, the equation above can be solved directly. In general, if the sky is not obstructed, many more satellites are visible, and a exact solution is not available. We can use linear algebra techniques to find a least squares solution:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ec3bc8372fae870a76806f4f9190cb8d_l3.png" alt="\begin{bmatrix}\boldsymbol{\delta{\hat{x}}} \\ \delta{\hat{b}} \end{bmatrix}  = (\boldsymbol{G^T}\boldsymbol{G})^{-1}\boldsymbol{G}^T\boldsymbol{\delta{\rho}}" title="Rendered by QuickLaTeX.com" height="43" width="183"></p>
<p>The hat above the estimated quantities indicates that they are a least squares solution, not an exact solution.</p>
<p>The complete procedure to calculate the user position and clock bias is as follows.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2a8030626223" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p></div>
				</td>
						<td><div><p>Input: Raw pseudoranges, satellite ephemeris information</p><p>Output: User position in ECEF and user clock bias</p><p>Initialize user clock bias = 0, user position = [0 0 0] (amazing that this works!)</p><p>For each satellite:</p><p>	1. Calculate satellite clock bias</p><p>	2. Correct measured pseudorange by the calculated satellite clock bias</p><p>	3. Apply ionospheric and tropospheric corrections if available</p><p>	End For</p><p>Do until change in user clock bias, user position &lt; threshold</p><p>	For each satellite:</p><p>		1. Correct pseudorange by current estimate of the user clock bias</p><p>		2. Calculate signal transmission time tau by dividing pseudorange by speed of light</p><p>		3. Calculate satellite position at t-tau</p><p>		4. Rotate satellite position by earth's rotation in time tau to align with user's ECEF frame at time t</p><p>		5. Form G matrix by concatenating unit vectors from the user to the satellite</p><p>		6. Calculate delta pseudoranges by taking the difference between the corrected pesudorange (step 1) and expected pseudorange, given the current estimate of the user's position and user clock bias</p><p>	End For</p><p>	Solve for corrections in user position and clock bias and calculate new user position and clock bias</p><p>End Do</p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0001 seconds] -->

<h2><span id="Note_about_the_Matlab_Code"><strong>Note about the Matlab Code</strong></span></h2>
<p>It is worth noting that while most of the equations in the Matlab code shown in the Appendix involve evaluation of expressions where the known quantities are on the right&nbsp;hand side and unknown quantities on the left&nbsp;hand side (and thus can be evaluated in one step), there are a few that requires invocation of a solver. One example is the calculation of the <em>eccentric anomaly (E)</em> from the&nbsp;<em>mean anomaly (M)</em>&nbsp;required during the calculation of the satellite position from ephemeris parameters<em>. </em>The relation between the two is expressed as:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-a66bec286a3f81bd3fe7848babdff8ee_l3.png" alt="M = E-eSin(E)" title="Rendered by QuickLaTeX.com" height="18" width="142"></p>
<p>where <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-3fc193f43cc29c1eef788f64ba43c1bd_l3.png" alt="e" title="Rendered by QuickLaTeX.com" height="8" width="8"> is the eccentricity of the earth’s orbit. Typically, <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-10ebb71bad275c1815a8f2a8c5dea0be_l3.png" alt="M" title="Rendered by QuickLaTeX.com" height="12" width="19"> is calculated first, and calculating <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-764e1c770271f92700e1a4fbce46c668_l3.png" alt="E" title="Rendered by QuickLaTeX.com" height="12" width="14"> from <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-10ebb71bad275c1815a8f2a8c5dea0be_l3.png" alt="M" title="Rendered by QuickLaTeX.com" height="12" width="19"> can’t be done in closed form and requires the use of a solver. Part of the code is shown below.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2b2014958308" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					
				</td>
						<td><div><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>% mk: Mean anomaly</span></p><p><span>	</span><span>% solve for eccentric anomaly</span></p><p><span>	</span><span>syms</span><span> </span><span>E</span><span>;</span></p><p><span>	</span><span>eqn</span><span> </span><span>=</span><span> </span><span>E</span><span> </span><span>-</span><span> </span><span>eph</span><span>.</span><span>e</span><span>*</span><span>sin</span><span>(</span><span>E</span><span>)</span><span> </span><span>==</span><span> </span><span>mk</span><span>;</span></p><p><span>	</span><span>solx</span><span> </span><span>=</span><span> </span><span>vpasolve</span><span>(</span><span>eqn</span><span>,</span><span> </span><span>E</span><span>)</span><span>;</span></p><p><span>	</span><span>Ek</span><span> </span><span>=</span><span> </span><span>double</span><span>(</span><span>solx</span><span>)</span><span>;</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0004 seconds] -->

<h2><span id="Experimental_Setup"><strong>Experimental Setup</strong></span></h2>
<p>In this section, I’ll describe the hardware setup I used to collect raw GPS data which was then processed using the algorithms described above to calculate user position and clock bias. An interested user should be able to easily replicate my setup using cheap and commercially available GPS receivers and open source software.</p>
<p id="LbeRFAZ"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596a46e63a510.png" alt="" width="827" height="462" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596a46e63a510.png 1296w, https://www.telesens.co/wp-content/uploads/2017/07/img_596a46e63a510-300x168.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_596a46e63a510-768x430.png 768w, https://www.telesens.co/wp-content/uploads/2017/07/img_596a46e63a510-1024x573.png 1024w" sizes="(max-width: 827px) 100vw, 827px"></p>
<p>The figure above shows the main steps involved in my setup. For collecting raw GPS data, special GPS units that output “timing” information consisting of raw pseudoranges and satellite ephemeris information must be used. Regular GPS units calculate the user position internally and don’t output the raw data we need to calculate the user position using the algorithm described above. The NEO-M8T and 6T chips from u-blox fit our needs. Complete hardware assemblies with the GPS unit, antennae and serial output port can be purchased from Amazon for ~40 dollars.</p>
<p>In order to receive and save the raw GPS signal, I use the STRSVR utility in RTKLib (RTKLIB is an open source program package for standard and precise positioning that supports all common Global Navigation Satellite Systems (GNSS) – GPS, Glonass, Galileo, Baidu etc. See: http://www.rtklib.com). STRSVR takes the custom u-blox formatted output from the u-blox receiver and converts it into RTCM standard format. RTCM (Radio Technical Commission for Maritime Services, see:&nbsp;http://www.rtcm.org/differential-global-navigation-satellite–dgnss–standards.html) is a standard for GNSS data and content designed to support a variety of GNSS applications in air/land/sea navigation, surveying, radio navigation/location etc.</p>
<p>RTCM standard provides the definition of various messages that provide specific GPS information. The information we are interested in are the raw pseudoranges and satellite ephemeris. This information is contained in messages 1002 and 1019.</p>
<p id="IiqmPJz"><img decoding="async" loading="lazy" width="632" height="256" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596a51ec3f302.png" alt="" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596a51ec3f302.png 632w, https://www.telesens.co/wp-content/uploads/2017/07/img_596a51ec3f302-300x122.png 300w" sizes="(max-width: 632px) 100vw, 632px"></p>
<figure id="attachment_1195" aria-describedby="caption-attachment-1195"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596a5285a04d8-1.png" alt="" width="656" height="408"><figcaption id="caption-attachment-1195">Part of GPS 1019 message content</figcaption></figure>
<p>We must request the u-blox receiver to send 1002 and 1019 message information as part of the data it sends to STRSVR. This is done by using the following commands in the Cmd window:</p>
<p><img decoding="async" loading="lazy" width="320" height="291" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596a6a793e425.png" alt="" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596a6a793e425.png 320w, https://www.telesens.co/wp-content/uploads/2017/07/img_596a6a793e425-300x273.png 300w" sizes="(max-width: 320px) 100vw, 320px"></p>
<p id="xRnVGKT"><img decoding="async" loading="lazy" width="361" height="136" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596a6e6a5f6ea.png" alt="" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596a6e6a5f6ea.png 361w, https://www.telesens.co/wp-content/uploads/2017/07/img_596a6e6a5f6ea-300x113.png 300w" sizes="(max-width: 361px) 100vw, 361px"></p>
<p>The first command sets the update rate to 1Hz and the other two enable RAW messages. The details on how this happens are a bit murky. I tried going through parts of the UBX documentation to understand this better but soon got lost. Suffices to say that&nbsp;the above commands work and cause the receiver to send the data we need.</p>
<p>I configure the STRSVR utility to receive data from the serial port at 9600 Baud and save the data to a file in RTCM 3 format.</p>
<p id="gJaMZIH"><img decoding="async" loading="lazy" width="386" height="239" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596a6bca9c3a5.png" alt="" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596a6bca9c3a5.png 386w, https://www.telesens.co/wp-content/uploads/2017/07/img_596a6bca9c3a5-300x186.png 300w" sizes="(max-width: 386px) 100vw, 386px"></p>
<p>To collect the data, I went to the roof of my apartment building and placed the GPS receiver at a location where it could get an unobstructed view of the sky. I used the u-blox configuration software (https://www.u-blox.com/en/product/u-center-windows) to verify that a sufficient number of satellites were visible and a good position fix could be obtained. I then used STRSVR to collect about an hour of raw GPS data and saved the data to a file.</p>
<h3><span id="Processing_Raw_GPS_Data"><strong>Processing Raw GPS Data</strong></span></h3>
<p>STRSVR saves the raw GPS data into binary RTCM3 format. We must decode the RTCM3 data to create Matlab data structures out of it. I considered writing my own RTCM decoder, but then found an excellent Matlab library called goGPS (http://www.gogps-project.org/about/) that provides many useful routines to read and process GPS data. I used the <em>load_stream&nbsp;</em>function that reads an RTCM formatted file and extracts the RTCM messages (line 95 in my version of goGPS). I then saved the extracted data to a .mat file to serve as input to my the&nbsp;position calculation algorithm that implements the&nbsp;equations above. The Matlab code is shown in the section 1.a of the appendix. I’m also attaching the <a href="https://www.telesens.co/wp-content/uploads/2017/07/rtcm_data.txt">rtcm_data</a> since many people have asked for it. I changed the file extension from .mat to .txt due to wordpress security restrictions. Rename the file back to .mat when you download it.</p>
<h3><span id="Analysis_of_Results"><strong>Analysis of Results</strong></span></h3>
<p>In this section, I’ll analyze the positions and clock bias computed by my algorithms. We will look at the variation of the north/east/up components of the position with time, variation of the clock bias with time and introduce the concept of Dilution of Precision (DOP), a common metric used to measure the quality of GPS position estimates. Since the GPS receiver was stationary during data collection, the variation of the calculated position reflects the true performance of the algorithm used to calculate the position.</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596f9dca86337.png" alt="" width="400" height="300" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596f9dca86337.png 560w, https://www.telesens.co/wp-content/uploads/2017/07/img_596f9dca86337-300x225.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_596f9dca86337-326x245.png 326w, https://www.telesens.co/wp-content/uploads/2017/07/img_596f9dca86337-80x60.png 80w" sizes="(max-width: 400px) 100vw, 400px"></p>
<p id="ePLPPGW"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596f9f8e645ca.png" alt="" width="407" height="300"></p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596f9fd1b66c4.png" alt="" width="404" height="300"></p>
<p id="yLnCUqY"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596fa0fbd7351.png" alt="" width="408" height="300"></p>
<table>
<tbody>
<tr>
<td></td>
<td><strong>East</strong></td>
<td><strong>North</strong></td>
<td><strong>Up</strong></td>
</tr>
<tr>
<td><strong>Std-Dev</strong></td>
<td>14.00</td>
<td>39.88</td>
<td>47.35</td>
</tr>
</tbody>
</table>
<p>The plot of E/N/U components of the user position in a user centered ENU frame along with the position scatter plot are shown above.&nbsp;As expected, the variation in position is around 30m in the East and North direction and slightly higher along the Up direction. We’ll explain the reason for this during the discussion about DOP (Dilution of Precision) below.</p>
<h3><span id="Clock_Bias_Drift"><strong>Clock Bias Drift</strong></span></h3>
<p>The variation of the receiver clock bias against time is shown below. Note that the clock bias <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f56d50c26583f9a035ff6b4e3c0ca5c0_l3.png" alt="b" title="Rendered by QuickLaTeX.com" height="13" width="8"> used in the algorithm above is in the unit of distance. In the plot below, the bias has been converted into unit of time by dividing by the speed of light.</p>
<p id="kIXLhey"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_596feb0fa18f7.png" alt="" width="396" height="297" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_596feb0fa18f7.png 560w, https://www.telesens.co/wp-content/uploads/2017/07/img_596feb0fa18f7-300x225.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_596feb0fa18f7-326x245.png 326w, https://www.telesens.co/wp-content/uploads/2017/07/img_596feb0fa18f7-80x60.png 80w" sizes="(max-width: 396px) 100vw, 396px"></p>
<p>We can see that the clock bias is not a constant but drifts linearly with time. The amount of drift is 4.27 e-7sec/sec.</p>
<h3><span id="Computing_the_Satellite_AzimuthElevation"><strong>Computing the Satellite Azimuth/Elevation</strong></span></h3>
<p>As an exercise, let’s compute the azimuth and elevation of all the satellites visible at a given time instant. This will neatly tie in many of the ideas discussed above and also provide a good segue to discussing DOP.</p>
<p>Azimuth and elevation angles are calculated from the perspective of the user. Thus, they are expressed in an ENU frame centered about the user position.</p>
<p id="mBvVNhj"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_5970cfb6788fd.png" alt="" width="363" height="265" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_5970cfb6788fd.png 572w, https://www.telesens.co/wp-content/uploads/2017/07/img_5970cfb6788fd-300x219.png 300w" sizes="(max-width: 363px) 100vw, 363px"></p>
<p>If the position of the satellite in the user centered ENU frame is (<img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-922e816fa375e151e481b54a0af72edf_l3.png" alt="x_s, y_s, z_s" title="Rendered by QuickLaTeX.com" height="12" width="63">), then the azimuth (az) and elevation (el) is given by:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-3488656b0f50a2944474cc2ea270dab7_l3.png" alt="tan(az) = \frac{x_E}{x_N}" title="Rendered by QuickLaTeX.com" height="22" width="103"></p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-1ae0238546d407df3363857243a6a0c6_l3.png" alt="sin(el) = \frac{x_U}{\sqrt{x_E^2 + x_N^2 + x_U^2}}" title="Rendered by QuickLaTeX.com" height="29" width="169"></p>
<p>The procedure to extract azimuth and elevation from&nbsp;satellite and user positions (calculated in the ECEF frame) is as follows:</p>
<ol>
<li>Calculate the position vector from the user to the satellite (in ECEF frame)</li>
<li>Calculate the user position in Ellipsoidal coordinates (lat/lng)</li>
<li>Rotate&nbsp;the position vector to the ENU frame centered about the user position</li>
<li>Calculate azimuth/elevation using equations above)</li>
</ol>
<p>The Matlab code is shown below:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2ba298046667" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					
				</td>
						<td><div><p><span>	</span><span>function</span><span> </span><span>[</span><span>az </span><span>el</span><span>]</span><span> </span><span>=</span><span> </span><span>get_satellite_az_el</span><span>(</span><span>xs</span><span>,</span><span>ys</span><span>,</span><span>zs</span><span>,</span><span>xu</span><span>,</span><span>yu</span><span>,</span><span>zu</span><span>)</span></p><p><span>	</span><span>% get_satellite_az_el: computes the satellite azimuth and elevation given</span></p><p><span>	</span><span>% the position of the user and the satellite in ECEF</span></p><p><span>	</span><span>% Usage: [az el] = get_satellite_az_el(xs,ys,zs,xu,yu,zu)</span></p><p><span>	</span><span>% Input Args: xs,ys,zs: satellite position in ECEF</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xu,yu,zu: user position in ECEF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p><span>	</span><span>% Output Args: azimuth and elevation</span></p><p><span>	</span><span>[</span><span>lambda</span><span>,</span><span> </span><span>phi</span><span>,</span><span> </span><span>h</span><span>]</span><span> </span><span>=</span><span> </span><span>WGStoEllipsoid</span><span>(</span><span>xu</span><span>,</span><span>yu</span><span>,</span><span>zu</span><span>)</span><span>;</span></p><p><span>	</span><span>lat</span><span> </span><span>=</span><span> </span><span>phi</span><span>*</span><span>180</span><span>/</span><span>pi</span><span>;</span></p><p><span>	</span><span>lng</span><span> </span><span>=</span><span> </span><span>lambda</span><span>*</span><span>180</span><span>/</span><span>pi</span><span>;</span></p><p><span>	</span><span>enu</span><span> </span><span>=</span><span>Rotxyz2enu</span><span>(</span><span>[</span><span>xs</span><span>-</span><span>xu</span><span>,</span><span>ys</span><span>-</span><span>yu</span><span>,</span><span>zs</span><span>-</span><span>zu</span><span>]</span>'<span>,</span><span> </span><span>lat</span><span>,</span><span> </span><span>lng</span><span>)</span><span>;</span></p><p><span>	</span><span>az</span><span> </span><span>=</span><span> </span><span>atan2</span><span>(</span><span>enu</span><span>(</span><span>1</span><span>)</span><span>,</span><span> </span><span>enu</span><span>(</span><span>2</span><span>)</span><span>)</span><span>;</span></p><p><span>	</span><span>el</span><span> </span><span>=</span><span> </span><span>asin</span><span>(</span><span>enu</span><span>(</span><span>3</span><span>)</span><span>/</span><span>norm</span><span>(</span><span>enu</span><span>)</span><span>)</span><span>;</span></p><p><span>	</span><span>% The azimuth and elevation</span></p><p><span>	</span><span>end</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0008 seconds] -->
<p>The computed azimuth and elevations at a given epoch are shown in the table and the corresponding 3D positions in the ENU frame are shown in the plot below</p>
<table>
<tbody>
<tr>
<td><strong>Azimuth</strong></td>
<td><strong>Elevation</strong></td>
</tr>
<tr>
<td>69.68</td>
<td>62.89</td>
</tr>
<tr>
<td>-20.46</td>
<td>81.63</td>
</tr>
<tr>
<td>96.38</td>
<td>16.91</td>
</tr>
<tr>
<td>34.71</td>
<td>5.21</td>
</tr>
<tr>
<td>-145.06</td>
<td>12.59</td>
</tr>
<tr>
<td>-165.22</td>
<td>7.44</td>
</tr>
<tr>
<td>-110.29</td>
<td>39.03</td>
</tr>
<tr>
<td>-49.30</td>
<td>43.11</td>
</tr>
</tbody>
</table>

<p id="TnqpjKv"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_5970c0f84a780.png" alt="" width="471" height="353" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_5970c0f84a780.png 560w, https://www.telesens.co/wp-content/uploads/2017/07/img_5970c0f84a780-300x225.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_5970c0f84a780-326x245.png 326w, https://www.telesens.co/wp-content/uploads/2017/07/img_5970c0f84a780-80x60.png 80w" sizes="(max-width: 471px) 100vw, 471px"></p>
<p>As can be seen the azimuth angles are both positive and negative, while the elevations are only positive. This makes sense as the user can’t see the satellites below the horizon.</p>
<p>You may have seen satellite track charts that many GPS processing software output as a visualization aid. Those charts are created by calculating the satellite positions using the procedure described here at multiple epochs.</p>
<h3><span id="Dilution_of_Precision_DOP"><strong>Dilution of Precision (DOP)</strong></span></h3>
<p>DOP helps us answer the question, “how good are my position estimates”? There are two components of the errors in our position estimate. The first one is the measurement noise, which is obvious. The noisier our measurements (pseudorange, satellite position etc), higher are the expected position errors. However, there is another, less obvious component of the positioning errors. This component is the user-satellite geometry. As explained in chapter 6 of&nbsp;<span id="tHKOjIChb0k2x6wRSOpd8" data-reflist="[&quot;a5of4cpcm&quot;]" data-footnote="undefined"><sup>1</sup></span>, it the easiest to see this in a 2D example.</p>
<p>A user measures his distance from a pair of signal sources&nbsp;S1 and S2 at known locations. If the range measurements were perfect, the user could determine his position exactly as lying on the intersection of two circles centered on S1 and S2 and radii equal to the measured ranges. The measurements however are imperfect and have a maximum uncertainty of <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-8e666c43aae0c51eb5a09d25b03580e3_l3.png" alt="\pm\epsilon" title="Rendered by QuickLaTeX.com" height="12" width="21">. The figure below shows how the user-source&nbsp;geometry affects the amount of uncertainty in the user position.</p>
<p id="NwJvwTM"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_597119048b1e1.png" alt="" width="714" height="421" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_597119048b1e1.png 1170w, https://www.telesens.co/wp-content/uploads/2017/07/img_597119048b1e1-300x177.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_597119048b1e1-768x453.png 768w, https://www.telesens.co/wp-content/uploads/2017/07/img_597119048b1e1-1024x604.png 1024w" sizes="(max-width: 714px) 100vw, 714px"></p>
<p>The uncertainty in the position and clock bias is measured by the covariance of the estimated position and clock bias error. Representing the true position and clock bias by <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ede05c264bba0eda080918aaa09c4658_l3.png" alt="x" title="Rendered by QuickLaTeX.com" height="8" width="10"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f56d50c26583f9a035ff6b4e3c0ca5c0_l3.png" alt="b" title="Rendered by QuickLaTeX.com" height="13" width="8">, the position and clock bias estimation errors are given as:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-2c8255ccf11fb6dc3802c85901c325d6_l3.png" alt="\delta{x} = \hat{x}-x" title="Rendered by QuickLaTeX.com" height="13" width="84"></p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-75b68cffe0686467a5068d7a783500cf_l3.png" alt="\delta{b} = \hat{b}-b" title="Rendered by QuickLaTeX.com" height="18" width="77"></p>
<p>Where <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-93476800dd4074d15d6c47e1edd10bbd_l3.png" alt="\hat{x}" title="Rendered by QuickLaTeX.com" height="13" width="10"> and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-516d63b88012bc33d5c2749908ca03fe_l3.png" alt="\hat{b}" title="Rendered by QuickLaTeX.com" height="18" width="8"> are our estimates of the user position and clock bias (calculated using the algorithm above). As shown in chapter 6 of&nbsp;<span id="a2qc0vdqc40" data-reflist="[&quot;a5of4cpcm&quot;]" data-footnote="undefined"><sup>1</sup></span>, the covariance matrix of position and clock bias is given as:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-4906ae1aec2fefb4cb3a4572f20fa93b_l3.png" alt="Cov\begin{bmatrix}\delta{x} \\ \delta{b} \end{bmatrix} = \sigma^2(G^{T}G)^{-1}" title="Rendered by QuickLaTeX.com" height="43" width="184"></p>
<p>Here <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-1c9cc40f96a1492e298e7da85a2c1692_l3.png" alt="\sigma" title="Rendered by QuickLaTeX.com" height="8" width="11"> is the “user range error” which captures the uncertainty in the pseudoranges and satellite positions. The <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-30a79c32f18567063fe44716929e7ced_l3.png" alt="G" title="Rendered by QuickLaTeX.com" height="12" width="14"> matrix is the matrix consisting of the unit vectors from the user to the satellite that we saw earlier. This matrix depends entirely on the user-satellite geometry. Thus, the covariance can be neatly factored into a product of measurement uncertainty and a function of the user-satellite geometry matrix. The elements of the G matrix are expressed in the ECEF frame. It is more convenient to rotate it into the user’s local ENU frame. Let <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ee351c21087c19a812cbb826be37bfc9_l3.png" alt="R_L" title="Rendered by QuickLaTeX.com" height="15" width="22"> be the required rotation matrix and <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-cbb1278ece14000764b020b099e22459_l3.png" alt="\tilde{G}" title="Rendered by QuickLaTeX.com" height="16" width="14"> be the resulting geometry matrix.</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-7c1784d95cd84a75737e6cd27eeaf054_l3.png" alt="\tilde{G} = [G(1:N, 1:3)R_L^{T}, ones(N,1)]" title="Rendered by QuickLaTeX.com" height="21" width="266"></p>
<p>Here <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-5793832f979c2268e3694c246d53b1bb_l3.png" alt="N" title="Rendered by QuickLaTeX.com" height="12" width="16"> is the number of satellites. The rotation is applied to the position components of the geometry matrix. it can be easily shown that</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-4a852686b668bf94696e52228f8f8ee3_l3.png" alt="Cov\begin{bmatrix}\delta{x_{ENU}} \\ \delta{b}\end{bmatrix} = \sigma^2(\tilde{G^{T}}\tilde{G})^{-1}" title="Rendered by QuickLaTeX.com" height="43" width="218"></p>
<p>Setting</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-729bfc8822b12871ec3cc7f1105e545a_l3.png" alt="H =  (\tilde{G^{T}}\tilde{G})^{-1}" title="Rendered by QuickLaTeX.com" height="22" width="109">,</p>
<p>The East, North and Up components of DOP are defined as</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-2af33fcb3f07e0bb1b95419c60db7c8d_l3.png" alt="\sigma_E^2 = H_{11}, \sigma_N^2 = H_{22}, \sigma_U^2 = H_{33}" title="Rendered by QuickLaTeX.com" height="20" width="241"></p>
<p>We can further define a horizontal DOP (HDOP) by combining the E and N term (since the East and North directions define the horizontal plane at the user’s location) and vertical DOP (VDOP) consisting of the U term.</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-1a6b03b14834741715f9da8ba91d4807_l3.png" alt="HDOP = \sqrt{\sigma_E^2 + \sigma_N^2}" title="Rendered by QuickLaTeX.com" height="33" width="168"></p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-80b398a49581931360b68eee0c447bd3_l3.png" alt="VDOP = \sqrt{\sigma_U^2}" title="Rendered by QuickLaTeX.com" height="33" width="121"></p>
<p>DOP provides a simple characterization of the user-satellite geometry. The more favourable the geometry, the lower the DOP. More favourable means the satellites are spread apart in azimuth and elevation. The lower the DOP and user range error (<img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-1c9cc40f96a1492e298e7da85a2c1692_l3.png" alt="\sigma" title="Rendered by QuickLaTeX.com" height="8" width="11">), the better the quality of the position estimate. To understand the relationship between DOP and satellite geometry better, lets consider two simple examples. The first example looks at the variation between DOP and the angle between the satellite vectors in a three satellite configuration shown in the figure below.&nbsp;The first satellite is located along the y axis and the other two are located symmetrically about the y axis, at an angle <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-356a08e839ab6974a16448e16e56745d_l3.png" alt="\theta" title="Rendered by QuickLaTeX.com" height="12" width="9"> from the x-axis. The G matrix and the plot of DOP against angle theta is shown below.</p>
<p id="GdfqXDP"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_5977b02c97abe.png" alt="" width="396" height="259" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_5977b02c97abe.png 673w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977b02c97abe-300x197.png 300w" sizes="(max-width: 396px) 100vw, 396px"></p>
<p id="yOumZOA"><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_5977afe75ae67.png" alt="" width="377" height="282" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_5977afe75ae67.png 560w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977afe75ae67-300x225.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977afe75ae67-326x245.png 326w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977afe75ae67-80x60.png 80w" sizes="(max-width: 377px) 100vw, 377px"></p>

<p>The minimum DOP occurs at <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-e3adde1d8b3cea9acd70eb1f0a973637_l3.png" alt="\theta = -30^o" title="Rendered by QuickLaTeX.com" height="12" width="71">. This makes intuitive sense as at this angle, the satellites are maximally separated from each other. Note that the DOP does not vary symmetrically with positive and negative <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-356a08e839ab6974a16448e16e56745d_l3.png" alt="\theta" title="Rendered by QuickLaTeX.com" height="12" width="9">. This is because for a given <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-356a08e839ab6974a16448e16e56745d_l3.png" alt="\theta" title="Rendered by QuickLaTeX.com" height="12" width="9">, the separation between the satellite vectors is higher for a negative value than for a positive value.</p>
<p>Next let’s look at a more realistic example of four satellites located in 3D. First satellite is located at the zenith and the others three are located 120 degrees apart in azimuth and at an elevation of <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-356a08e839ab6974a16448e16e56745d_l3.png" alt="\theta" title="Rendered by QuickLaTeX.com" height="12" width="9"> (same for the three satellites). We’ll look at the variation of VDOP with the elevation angle.</p>

<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_5977b85448684.png" alt="" width="321" height="344" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_5977b85448684.png 609w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977b85448684-279x300.png 279w" sizes="(max-width: 321px) 100vw, 321px"></p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/uploads/2017/07/img_5977b9d372ee2.png" alt="" width="441" height="331" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_5977b9d372ee2.png 560w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977b9d372ee2-300x225.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977b9d372ee2-326x245.png 326w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977b9d372ee2-80x60.png 80w" sizes="(max-width: 441px) 100vw, 441px"></p>
<p>As expected, the VDOP decreases with increasing elevation angle, as the satellites get farther apart from each other. It continues to decrease as the elevation goes past the horizon (elevation = 90 degrees). Since a user located on the earth surface can’t observe satellites below the horizon (in fact, signal from satellites &lt; 10 degrees above the horizon are too noisy and generally not used), the minimum value of VDOP is not achievable. This example demonstrates why VDOP is generally higher than HDOP.</p>
<p>Let’s now look at the variation of HDOP and VDOP with time calculated by our position algorithm on real data.</p>
<p id="RsMgfPx"><img decoding="async" loading="lazy" width="560" height="420" src="https://www.telesens.co/wp-content/uploads/2017/07/img_5977c10f6a387.png" alt="" srcset="https://www.telesens.co/wp-content/uploads/2017/07/img_5977c10f6a387.png 560w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977c10f6a387-300x225.png 300w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977c10f6a387-326x245.png 326w, https://www.telesens.co/wp-content/uploads/2017/07/img_5977c10f6a387-80x60.png 80w" sizes="(max-width: 560px) 100vw, 560px"></p>
<p>No surprises here. The HDOP/VDOP values are generally &lt; 2.5, which is considered adequate and as expected, VDOP is higher than HDOP.</p>
<p>This concludes the post! I hope that next time you use Google maps to get directions, you’ll think about the incredible scientists, engineers and policy makers who have given us this incredible system that makes possible so many applications that we now take for granted. According to&nbsp;<span id="a16itk3rudh" data-reflist="[&quot;a5of4cpcm&quot;]" data-footnote="undefined"><sup>1</sup></span>, the GPS constellation cost about 30 billion dollars to put in place and costs the US government about 1B annually to maintain. The valuation of Uber alone, which wouldn’t exist without GPS is upwards of 70B dollars. When you include all of the other amazing applications made possible by GPS, the public investment in GPS appears to be one of the best public investments ever made! 🙂</p>
<h2><span id="Appendix"><strong>Appendix</strong></span></h2>
<h3><span id="1a_Code_for_Calculating_User_Position_and_Clock_Bias"><strong>1.a Code for Calculating User Position and Clock Bias</strong></span></h3>
<!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2c4614419964" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p><p>43</p><p>44</p><p>45</p><p>46</p><p>47</p><p>48</p><p>49</p><p>50</p><p>51</p><p>52</p><p>53</p><p>54</p><p>55</p><p>56</p><p>57</p><p>58</p><p>59</p><p>60</p><p>61</p><p>62</p><p>63</p><p>64</p><p>65</p><p>66</p><p>67</p><p>68</p><p>69</p><p>70</p><p>71</p><p>72</p><p>73</p><p>74</p><p>75</p><p>76</p><p>77</p><p>78</p><p>79</p><p>80</p><p>81</p><p>82</p><p>83</p><p>84</p><p>85</p><p>86</p><p>87</p><p>88</p><p>89</p><p>90</p><p>91</p><p>92</p><p>93</p><p>94</p><p>95</p><p>96</p><p>97</p><p>98</p><p>99</p><p>100</p><p>101</p><p>102</p><p>103</p><p>104</p><p>105</p><p>106</p><p>107</p><p>108</p><p>109</p><p>110</p><p>111</p><p>112</p><p>113</p><p>114</p><p>115</p><p>116</p><p>117</p><p>118</p><p>119</p><p>120</p><p>121</p><p>122</p><p>123</p><p>124</p><p>125</p><p>126</p><p>127</p><p>128</p><p>129</p><p>130</p><p>131</p><p>132</p><p>133</p><p>134</p><p>135</p><p>136</p><p>137</p><p>138</p><p>139</p><p>140</p><p>141</p><p>142</p><p>143</p><p>144</p><p>145</p><p>146</p><p>147</p><p>148</p><p>149</p><p>150</p><p>151</p><p>152</p><p>153</p><p>154</p><p>155</p><p>156</p><p>157</p><p>158</p><p>159</p><p>160</p><p>161</p><p>162</p><p>163</p><p>164</p><p>165</p><p>166</p><p>167</p><p>168</p><p>169</p><p>170</p><p>171</p><p>172</p><p>173</p><p>174</p><p>175</p><p>176</p><p>177</p><p>178</p><p>179</p><p>180</p><p>181</p><p>182</p><p>183</p><p>184</p><p>185</p><p>186</p><p>187</p><p>188</p><p>189</p><p>190</p><p>191</p><p>192</p><p>193</p></div>
				</td>
						<td><div><p><span>	</span><span>% Constants that we will need</span></p><p><span>	</span><span>% Speed of light</span></p><p><span>	</span><span>c</span><span> </span><span>=</span><span> </span><span>299792458</span><span>;</span></p><p><span>	</span><span>% Earth's rotation rate</span></p><p><span>	</span><span>omega_e</span><span> </span><span>=</span><span> </span><span>7.2921151467e</span><span>-</span><span>5</span><span>;</span><span> </span><span>%(rad/sec)</span></p><p><span>	</span><span>% load out data</span></p><p><span>	</span><span>data</span><span> </span><span>=</span><span> </span><span>load</span><span>(</span><span>'rtcm_data.mat'</span><span>)</span><span>;</span></p><p><span>	</span><span>% Data is a cell array containing data about different RTCM messages. We</span></p><p><span>	</span><span>% are interested in 1002 and 1019</span></p><p><span>	</span><span>% msgs is a an array of message ids (1002, 1019 etc)</span></p><p><span>	</span><span>msgs</span><span> </span><span>=</span><span> </span><span>[</span><span>data</span><span>.</span><span>data</span><span>{</span><span>1</span><span>,</span><span>:</span><span>}</span><span>]</span><span>;</span></p><p><span>	</span><span>% Get indicies of ephemeris info (msg 1019)</span></p><p><span>	</span><span>[</span><span>idx_1019</span><span>]</span><span> </span><span>=</span><span> </span><span>find</span><span>(</span><span>msgs</span><span> </span><span>==</span><span> </span><span>1019</span><span>)</span><span>;</span></p><p><span>	</span><span>% Get indicies of raw pseudorange info (msg 1002)</span></p><p><span>	</span><span>[</span><span>idx_1002</span><span>]</span><span> </span><span>=</span><span> </span><span>find</span><span>(</span><span>msgs</span><span> </span><span>==</span><span> </span><span>1002</span><span>)</span><span>;</span></p><p><span>	</span><span>% Satellite ephemeris data is all mixed up since different satellites are visible at</span></p><p><span>	</span><span>% different epocks.</span></p><p><span>	</span><span>eph</span><span> </span><span>=</span><span> </span><span>[</span><span>data</span><span>.</span><span>data</span><span>{</span><span>2</span><span>,</span><span> </span><span>idx_1019</span><span>}</span><span>]</span><span>;</span></p><p><span>	</span><span>% Lets group data for each satellite</span></p><p><span>	</span><span>% find unique satellite indicies</span></p><p><span>	</span><span>sv_arr</span><span> </span><span>=</span><span> </span><span>unique</span><span>(</span><span>eph</span><span>(</span><span>1</span><span>,</span><span>:</span><span>)</span><span>)</span><span>;</span></p><p><span>	</span><span>% eph_data will contain ephemeris data for all epochs grouped by satellite</span></p><p><span>	</span><span>% number</span></p><p><span>	</span><span>eph_data</span><span> </span><span>=</span><span> </span><span>{</span><span>}</span><span>;</span></p><p><span>	</span><span>for</span><span> </span><span>i</span><span> </span><span>=</span><span> </span><span>1</span><span>:</span><span> </span><span>length</span><span>(</span><span>sv_arr</span><span>)</span></p><p><span>		</span><span>% find indicies of all entries corresponding to this satellite</span></p><p><span>		</span><span>sv</span><span> </span><span>=</span><span> </span><span>sv_arr</span><span>(</span><span>i</span><span>)</span><span>;</span></p><p><span>		</span><span>idx</span><span> </span><span>=</span><span> </span><span>find</span><span>(</span><span>eph</span><span>(</span><span>1</span><span>,</span><span>:</span><span>)</span><span> </span><span>==</span><span> </span><span>sv</span><span>)</span><span>;</span></p><p><span>		</span><span>eph_data</span><span>{</span><span>sv</span><span>}</span><span> </span><span>=</span><span> </span><span>eph</span><span>(</span><span>:</span><span>,</span><span>idx</span><span>)</span><span>;</span></p><p><span>	</span><span>end</span></p><p><span>	</span><span>% Now let's deal with 1002 messages. 1002 messages have two entries - first</span></p><p><span>	</span><span>% one (nav1) is a 6*1 array containing: reference station id, receiver time</span></p><p><span>	</span><span>% of week, number of satellites etc. See decode_1002.m in goGPS for details</span></p><p><span>	</span><span>% The important pieces of info in nav1 are the receiver time of week and the</span></p><p><span>	</span><span>% number of satellites visible</span></p><p><span>	</span><span>% The second one (nav2) contains a block of 56*5 for every epoch.</span></p><p><span>	</span><span>% Num of rows (56) refers to the maximum number of satellites in the</span></p><p><span>	</span><span>% constellation. Num of cols (5) is the number of data elements for each satellite.</span></p><p><span>	</span><span>% We are interested in the second element, the raw pseudorange.</span></p><p><span>	</span><span>% For those satellites for which no info is available,</span></p><p><span>	</span><span>% the rows of nav2 contain 0s.</span></p><p><span>	</span><span>nav1</span><span> </span><span>=</span><span> </span><span>[</span><span>data</span><span>.</span><span>data</span><span>{</span><span>2</span><span>,</span><span> </span><span>idx_1002</span><span>}</span><span>]</span><span>;</span></p><p><span>	</span><span>nav2</span><span> </span><span>=</span><span> </span><span>[</span><span>data</span><span>.</span><span>data</span><span>{</span><span>3</span><span>,</span><span> </span><span>idx_1002</span><span>}</span><span>]</span><span>;</span></p><p><span>	</span><span>len</span><span> </span><span>=</span><span> </span><span>length</span><span>(</span><span>nav1</span><span>)</span><span>;</span></p><p><span>	</span><span>% Arrays to store various outputs of the position estimation algorithm</span></p><p><span>	</span><span>user_position_arr</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span></p><p><span>	</span><span>HDOP_arr</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span></p><p><span>	</span><span>VDOP_arr</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span></p><p><span>	</span><span>user_clock_bias_arr</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span></p><p><span>	</span><span>% initial position of the user</span></p><p><span>	</span><span>xu</span><span> </span><span>=</span><span> </span><span>[</span><span>0</span><span> </span><span>0</span><span> </span><span>0</span><span>]</span><span>;</span></p><p><span>	</span><span>% initial clock bias</span></p><p><span>	</span><span>b</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></p><p><span>	</span><span>% 1002 messages are spaced apart 200ms. Let's use 1 out of every 5 samples.</span></p><p><span>	</span><span>% This means that we'll compute position every second, which is sufficient</span></p><p><span>	</span><span>for</span><span> </span><span>idx</span><span> </span><span>=</span><span> </span><span>1</span><span>:</span><span> </span><span>5</span><span>:</span><span> </span><span>len</span></p><p><span>		</span><span>% second element of nav1 contains receiver time of week</span></p><p><span>		</span><span>rcvr_tow</span><span> </span><span>=</span><span> </span><span>nav1</span><span>(</span><span>2</span><span>,</span><span>idx</span><span>)</span><span>;</span></p><p><span>		</span><span>% data block corresponding to this satellite</span></p><p><span>		</span><span>nav_data</span><span> </span><span>=</span><span> </span><span>nav2</span><span>(</span><span>:</span><span>,</span><span> </span><span>5</span><span>*</span><span>(</span><span>idx</span><span>-</span><span>1</span><span>)</span><span>+</span><span>1</span><span>:</span><span> </span><span>5</span><span>*</span><span>idx</span><span>)</span><span>;</span></p><p><span>		</span><span>% find indicies of rows containing non-zero data. Each row corresponds</span></p><p><span>		</span><span>% to a satellite</span></p><p><span>		</span><span>ind</span><span> </span><span>=</span><span> </span><span>find</span><span>(</span><span>sum</span><span>(</span><span>nav_data</span><span>,</span><span>2</span><span>)</span><span> </span><span>~</span><span>=</span><span> </span><span>0</span><span>)</span><span>;</span></p><p><span>		</span><span>numSV</span><span> </span><span>=</span><span> </span><span>length</span><span>(</span><span>ind</span><span>)</span><span>;</span></p><p><span>		</span><span>eph_formatted_</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span></p><p><span>		</span><span>% The minimum number of satellites needed is 4, let's go for more than</span></p><p><span>		</span><span>% that to be more robust</span></p><p><span>		</span><span>if</span><span> </span><span>(</span><span>numSV</span><span> </span><span>&gt;</span><span> </span><span>4</span><span>)</span></p><p><span>			</span><span>pr_</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span></p><p><span>			</span><span>% Correct for satellite clock bias and find the best ephemeris data</span></p><p><span>			</span><span>% for each satellite. Note that satellite ephemeris data (1019) is sent</span></p><p><span>			</span><span>% far less frequently than pseudorange info (1002). So for every</span></p><p><span>			</span><span>% epoch, we find the closest (in time) ephemeris data.</span></p><p><span>			</span><span>for</span><span> </span><span>i</span><span> </span><span>=</span><span> </span><span>1</span><span>:</span><span> </span><span>numSV</span><span>,</span></p><p><span>				</span><span>sv_idx</span><span> </span><span>=</span><span> </span><span>ind</span><span>(</span><span>i</span><span>)</span><span>;</span></p><p><span>				</span><span>sv_data</span><span> </span><span>=</span><span> </span><span>nav_data</span><span>(</span><span>sv_idx</span><span>,</span><span>:</span><span>)</span><span>;</span></p><p><span>				</span><span>% find ephemeris data closest to this time of week</span></p><p><span>				</span><span>[</span><span>c_ </span><span>eph_idx</span><span>]</span><span> </span><span>=</span><span> </span><span>min</span><span>(</span><span>abs</span><span>(</span><span>eph_data</span><span>{</span><span>sv_idx</span><span>}</span><span>(</span><span>18</span><span>,</span><span>:</span><span>)</span><span>-</span><span>rcvr_tow</span><span>)</span><span>)</span><span>;</span></p><p><span>				</span><span>eph_</span><span> </span><span>=</span><span> </span><span>eph_data</span><span>{</span><span>sv_idx</span><span>}</span><span>(</span><span>:</span><span>,</span><span> </span><span>eph_idx</span><span>)</span><span>;</span></p><p><span>				</span><span>% Convert the ephemeris data into a standard format so it can</span></p><p><span>				</span><span>% be input to routines that process it to calculate satellite</span></p><p><span>				</span><span>% position and satellite clock bias</span></p><p><span>				</span><span>eph_formatted</span><span> </span><span>=</span><span> </span><span>format_ephemeris3</span><span>(</span><span>eph_</span><span>)</span><span>;</span></p><p><span>				</span><span>eph_formatted_</span><span>{</span><span>end</span><span>+</span><span>1</span><span>}</span><span> </span><span>=</span><span> </span><span>eph_formatted</span><span>;</span></p><p><span>				</span><span>% To be correct, the satellite clock bias should be calculated</span></p><p><span>				</span><span>% at rcvr_tow - tau, however it doesn't make much difference to</span></p><p><span>				</span><span>% do it at rcvr_tow</span></p><p><span>				</span><span>dsv</span><span> </span><span>=</span><span> </span><span>estimate_satellite_clock_bias</span><span>(</span><span>rcvr_tow</span><span>,</span><span> </span><span>eph_formatted</span><span>)</span><span>;</span></p><p><span>				</span><span>% measured pseudoranges corrected for satellite clock bias.</span></p><p><span>				</span><span>% Also apply ionospheric and tropospheric corrections if</span></p><p><span>				</span><span>% available</span></p><p><span>				</span><span>pr_raw</span><span> </span><span>=</span><span> </span><span>sv_data</span><span>(</span><span>2</span><span>)</span><span>;</span></p><p><span>				</span><span>pr_</span><span>(</span><span>end</span><span>+</span><span>1</span><span>)</span><span> </span><span>=</span><span> </span><span>pr_raw</span><span> </span><span>+</span><span> </span><span>c</span><span>*</span><span>dsv</span><span>;</span></p><p><span>			</span><span>end</span></p><p><span>			</span><span>% Now lets calculate the satellite positions and construct the G</span></p><p><span>			</span><span>% matrix. Then we'll run the least squares optimization to</span></p><p><span>			</span><span>% calculate corrected user position and clock bias. We'll iterate</span></p><p><span>			</span><span>% until change in user position and clock bias is less than a</span></p><p><span>			</span><span>% threhold. In practice, the optimization converges very quickly,</span></p><p><span>			</span><span>% usually in 2-3 iterations even when the starting point for the</span></p><p><span>			</span><span>% user position and clock bias is far away from the true values.</span></p><p><span>			</span><span>dx</span><span> </span><span>=</span><span> </span><span>100</span><span>*</span><span>ones</span><span>(</span><span>1</span><span>,</span><span>3</span><span>)</span><span>;</span><span> </span><span>db</span><span> </span><span>=</span><span> </span><span>100</span><span>;</span></p><p><span>			</span><span>while</span><span>(</span><span>norm</span><span>(</span><span>dx</span><span>)</span><span> </span><span>&gt;</span><span> </span><span>0.1</span><span> </span><span>&amp;&amp;</span><span> </span><span>norm</span><span>(</span><span>db</span><span>)</span><span> </span><span>&gt;</span><span> </span><span>1</span><span>)</span></p><p><span>				</span><span>Xs</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span><span> </span><span>% concatenated satellite positions</span></p><p><span>				</span><span>pr</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span><span> </span><span>% pseudoranges corrected for user clock bias</span></p><p><span>				</span><span>for</span><span> </span><span>i</span><span> </span><span>=</span><span> </span><span>1</span><span>:</span><span> </span><span>numSV</span><span>,</span></p><p><span>					</span><span>% correct for our estimate of user clock bias. Note that</span></p><p><span>					</span><span>% the clock bias is in units of distance</span></p><p><span>					</span><span>cpr</span><span> </span><span>=</span><span> </span><span>pr_</span><span>(</span><span>i</span><span>)</span><span> </span><span>-</span><span> </span><span>b</span><span>;</span></p><p><span>					</span><span>pr</span><span> </span><span>=</span><span> </span><span>[</span><span>pr</span><span>;</span><span> </span><span>cpr</span><span>]</span><span>;</span></p><p><span>					</span><span>% Signal transmission time</span></p><p><span>					</span><span>tau</span><span> </span><span>=</span><span> </span><span>cpr</span><span>/</span><span>c</span><span>;</span></p><p><span>					</span><span>% Get satellite position</span></p><p><span>					</span><span>[</span><span>xs_ </span><span>ys_ </span><span>zs_</span><span>]</span><span> </span><span>=</span><span> </span><span>get_satellite_position</span><span>(</span><span>eph_formatted_</span><span>{</span><span>i</span><span>}</span><span>,</span><span> </span><span>rcvr_tow</span><span>-</span><span>tau</span><span>,</span><span> </span><span>1</span><span>)</span><span>;</span></p><p><span>					</span><span>% express satellite position in ECEF frame at time t</span></p><p><span>					</span><span>theta</span><span> </span><span>=</span><span> </span><span>omega_e</span><span>*</span><span>tau</span><span>;</span></p><p><span>					</span><span>xs_vec</span><span> </span><span>=</span><span> </span><span>[</span><span>cos</span><span>(</span><span>theta</span><span>)</span><span> </span><span>sin</span><span>(</span><span>theta</span><span>)</span><span> </span><span>0</span><span>;</span><span> </span><span>-</span><span>sin</span><span>(</span><span>theta</span><span>)</span><span> </span><span>cos</span><span>(</span><span>theta</span><span>)</span><span> </span><span>0</span><span>;</span><span> </span><span>0</span><span> </span><span>0</span><span> </span><span>1</span><span>]</span><span>*</span><span>[</span><span>xs_</span><span>;</span><span> </span><span>ys_</span><span>;</span><span> </span><span>zs_</span><span>]</span><span>;</span></p><p><span>					</span><span>xs_vec</span><span> </span><span>=</span><span> </span><span>[</span><span>xs_ </span><span>ys_ </span><span>zs_</span><span>]</span><span>';</span></p><p><span>					Xs = [Xs; xs_vec'</span><span>]</span><span>;</span></p><p><span>				</span><span>end</span></p><p><span>				</span><span>% Run least squares to calculate new user position and bias</span></p><p><span>				</span><span>[</span><span>x_</span><span>,</span><span> </span><span>b_</span><span>,</span><span> </span><span>norm_dp</span><span>,</span><span> </span><span>G</span><span>]</span><span> </span><span>=</span><span> </span><span>estimate_position</span><span>(</span><span>Xs</span><span>,</span><span> </span><span>pr</span><span>,</span><span> </span><span>numSV</span><span>,</span><span> </span><span>xu</span><span>,</span><span> </span><span>b</span><span>,</span><span> </span><span>3</span><span>)</span><span>;</span></p><p><span>				</span><span>% Change in the position and bias to determine when to quite</span></p><p><span>				</span><span>% the iteration</span></p><p><span>				</span><span>dx</span><span> </span><span>=</span><span> </span><span>x_</span><span> </span><span>-</span><span> </span><span>xu</span><span>;</span></p><p><span>				</span><span>db</span><span> </span><span>=</span><span> </span><span>b_</span><span> </span><span>-</span><span> </span><span>b</span><span>;</span></p><p><span>				</span><span>xu</span><span> </span><span>=</span><span> </span><span>x_</span><span>;</span></p><p><span>				</span><span>b</span><span> </span><span>=</span><span> </span><span>b_</span><span>;</span></p><p><span>			</span><span>end</span><span> </span><span>% end of iteration</span></p><p><span>			</span><span>% Convert from ECEF to lat/lng</span></p><p><span>			</span><span>[</span><span>lambda</span><span>,</span><span> </span><span>phi</span><span>,</span><span> </span><span>h</span><span>]</span><span> </span><span>=</span><span> </span><span>WGStoEllipsoid</span><span>(</span><span>xu</span><span>(</span><span>1</span><span>)</span><span>,</span><span> </span><span>xu</span><span>(</span><span>2</span><span>)</span><span>,</span><span> </span><span>xu</span><span>(</span><span>3</span><span>)</span><span>)</span><span>;</span></p><p><span>			</span><span>% Calculate Rotation Matrix to Convert ECEF to local ENU reference</span></p><p><span>			</span><span>% frame</span></p><p><span>			</span><span>lat</span><span> </span><span>=</span><span> </span><span>phi</span><span>*</span><span>180</span><span>/</span><span>pi</span></p><p><span>			</span><span>lon</span><span> </span><span>=</span><span> </span><span>lambda</span><span>*</span><span>180</span><span>/</span><span>pi</span></p><p><span>			</span><span>R1</span><span>=</span><span>rot</span><span>(</span><span>90</span><span>+</span><span>lon</span><span>,</span><span> </span><span>3</span><span>)</span><span>;</span></p><p><span>			</span><span>R2</span><span>=</span><span>rot</span><span>(</span><span>90</span><span>-</span><span>lat</span><span>,</span><span> </span><span>1</span><span>)</span><span>;</span></p><p><span>			</span><span>R</span><span>=</span><span>R2</span><span>*</span><span>R1</span><span>;</span></p><p><span>			</span><span>G_</span><span> </span><span>=</span><span> </span><span>[</span><span>G</span><span>(</span><span>:</span><span>,</span><span>1</span><span>:</span><span>3</span><span>)</span><span>*</span><span>R</span><span>' G(:,4)];</span></p><p><span>			H = inv(G_'</span><span>*</span><span>G_</span><span>)</span><span>;</span></p><p><span>			</span><span>HDOP</span><span> </span><span>=</span><span> </span><span>sqrt</span><span>(</span><span>H</span><span>(</span><span>1</span><span>,</span><span>1</span><span>)</span><span> </span><span>+</span><span> </span><span>H</span><span>(</span><span>2</span><span>,</span><span>2</span><span>)</span><span>)</span><span>;</span></p><p><span>			</span><span>VDOP</span><span> </span><span>=</span><span> </span><span>sqrt</span><span>(</span><span>H</span><span>(</span><span>3</span><span>,</span><span>3</span><span>)</span><span>)</span><span>;</span></p><p><span>			</span><span>% Record various quantities for saving and plotting</span></p><p><span>			</span><span>HDOP_arr</span><span>(</span><span>end</span><span>+</span><span>1</span><span>,</span><span>:</span><span>)</span><span> </span><span>=</span><span> </span><span>HDOP</span><span>;</span></p><p><span>			</span><span>VDOP_arr</span><span>(</span><span>end</span><span>+</span><span>1</span><span>,</span><span>:</span><span>)</span><span> </span><span>=</span><span> </span><span>VDOP</span><span>;</span></p><p><span>			</span><span>user_position_arr</span><span>(</span><span>end</span><span>+</span><span>1</span><span>,</span><span>:</span><span>)</span><span> </span><span>=</span><span> </span><span>[</span><span>lat </span><span>lon</span><span> </span><span>h</span><span>]</span><span>;</span></p><p><span>			</span><span>user_clock_bias_arr</span><span>(</span><span>end</span><span>+</span><span>1</span><span>,</span><span>:</span><span>)</span><span> </span><span>=</span><span> </span><span>b</span><span>;</span></p><p><span>		</span><span>end</span></p><p><span>	</span><span>end</span></p><p><span>	</span><span>HDOP_arr</span><span>;</span></p><p><span>	</span><span>%Function R=rot(angle (degrees), axis) returns a 3x3</span></p><p><span>	</span><span>%rotation matrix for rotating a vector about a single</span></p><p><span>	</span><span>%axis.&nbsp;&nbsp;Setting axis = 1 rotates about the e1 axis,</span></p><p><span>	</span><span>%axis = 2 rotates about the e2 axis, axis = 3 rotates</span></p><p><span>	</span><span>%about the e3 axis.</span></p><p><span>	</span><span>function</span><span> </span><span>R</span><span>=</span><span>rot</span><span>(</span><span>angle</span><span>,</span><span> </span><span>axis</span><span>)</span></p><p><span>	</span><span>%function R=rot(angle (degrees), axis)</span></p><p><span>	</span><span>R</span><span>=</span><span>eye</span><span>(</span><span>3</span><span>)</span><span>;</span></p><p><span>	</span><span>cang</span><span>=</span><span>cos</span><span>(</span><span>angle</span><span>*</span><span>pi</span><span>/</span><span>180</span><span>)</span><span>;</span></p><p><span>	</span><span>sang</span><span>=</span><span>sin</span><span>(</span><span>angle</span><span>*</span><span>pi</span><span>/</span><span>180</span><span>)</span><span>;</span></p><p><span>	</span><span>if</span><span> </span><span>(</span><span>axis</span><span>==</span><span>1</span><span>)</span></p><p><span>		</span><span>R</span><span>(</span><span>2</span><span>,</span><span>2</span><span>)</span><span>=</span><span>cang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>3</span><span>,</span><span>3</span><span>)</span><span>=</span><span>cang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>2</span><span>,</span><span>3</span><span>)</span><span>=</span><span>sang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>3</span><span>,</span><span>2</span><span>)</span><span>=</span><span>-</span><span>sang</span><span>;</span></p><p><span>	</span><span>end</span><span>;</span></p><p><span>	</span><span>if</span><span> </span><span>(</span><span>axis</span><span>==</span><span>2</span><span>)</span></p><p><span>		</span><span>R</span><span>(</span><span>1</span><span>,</span><span>1</span><span>)</span><span>=</span><span>cang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>3</span><span>,</span><span>3</span><span>)</span><span>=</span><span>cang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>1</span><span>,</span><span>3</span><span>)</span><span>=</span><span>-</span><span>sang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>3</span><span>,</span><span>1</span><span>)</span><span>=</span><span>sang</span><span>;</span></p><p><span>	</span><span>end</span><span>;</span></p><p><span>	</span><span>if</span><span> </span><span>(</span><span>axis</span><span>==</span><span>3</span><span>)</span></p><p><span>		</span><span>R</span><span>(</span><span>1</span><span>,</span><span>1</span><span>)</span><span>=</span><span>cang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>2</span><span>,</span><span>2</span><span>)</span><span>=</span><span>cang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>2</span><span>,</span><span>1</span><span>)</span><span>=</span><span>-</span><span>sang</span><span>;</span></p><p><span>		</span><span>R</span><span>(</span><span>1</span><span>,</span><span>2</span><span>)</span><span>=</span><span>sang</span><span>;</span></p><p><span>	</span><span>end</span><span>;</span></p><p><span>	</span><span>return</span><span>;</span></p><p><span>	</span><span>end</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0094 seconds] -->

<h3><span id="1b_Code_for_Calculating_Satellite_Position"><strong>1.b Code for Calculating Satellite Position</strong></span></h3>
<!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2cb658300093" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p><p>43</p><p>44</p><p>45</p><p>46</p><p>47</p><p>48</p><p>49</p><p>50</p><p>51</p><p>52</p><p>53</p><p>54</p><p>55</p><p>56</p><p>57</p><p>58</p><p>59</p><p>60</p><p>61</p><p>62</p><p>63</p><p>64</p><p>65</p><p>66</p><p>67</p><p>68</p><p>69</p><p>70</p><p>71</p><p>72</p><p>73</p><p>74</p><p>75</p><p>76</p><p>77</p><p>78</p><p>79</p><p>80</p><p>81</p><p>82</p><p>83</p><p>84</p><p>85</p><p>86</p><p>87</p><p>88</p><p>89</p><p>90</p><p>91</p><p>92</p><p>93</p><p>94</p></div>
				</td>
						<td><div><p><span>	</span><span>function</span><span> </span><span>[</span><span>x</span><span> </span><span>y</span><span> </span><span>z</span><span>]</span><span> </span><span>=</span><span> </span><span>get_satellite_position</span><span>(</span><span>eph</span><span>,</span><span> </span><span>t</span><span>,</span><span> </span><span>compute_harmonic_correction</span><span>)</span></p><p><span>	</span><span>% get_satellite_position: computes the position of a satellite at time (t) given the</span></p><p><span>	</span><span>% ephemeris parameters. </span></p><p><span>	</span><span>% Usage: [x y z] =&nbsp;&nbsp;get_satellite_position(eph, t, compute_harmonic_correction)</span></p><p><span>	</span><span>% Input Args: eph: ephemeris data</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t: time </span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; compute_harmonic_correction (optional): 1 if harmonic</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; correction should be applied, 0 if not. </span></p><p><span>	</span><span>% Output Args: [x y z] in ECEF in meters</span></p><p><span>	</span><span>% ephmeris data must have the following fields:</span></p><p><span>	</span><span>% rcvr_tow (receiver tow)</span></p><p><span>	</span><span>% svid (satellite id)</span></p><p><span>	</span><span>% toc (reference time of clock parameters)</span></p><p><span>	</span><span>% toe (referece time of ephemeris parameters)</span></p><p><span>	</span><span>% af0, af1, af2: clock correction coefficients</span></p><p><span>	</span><span>% ura (user range accuracy)</span></p><p><span>	</span><span>% e (eccentricity)</span></p><p><span>	</span><span>% sqrtA (sqrt of semi-major axis)</span></p><p><span>	</span><span>% dn (mean motion correction)</span></p><p><span>	</span><span>% m0 (mean anomaly at reference time)</span></p><p><span>	</span><span>% w (argument of perigee)</span></p><p><span>	</span><span>% omg0 (lontitude of ascending node)</span></p><p><span>	</span><span>% i0 (inclination angle at reference time)</span></p><p><span>	</span><span>% odot (rate of right ascension)</span></p><p><span>	</span><span>% idot (rate of inclination angle)</span></p><p><span>	</span><span>% cus (argument of latitude correction, sine)</span></p><p><span>	</span><span>% cuc (argument of latitude correction, cosine)</span></p><p><span>	</span><span>% cis (inclination correction, sine)</span></p><p><span>	</span><span>% cic (inclination correction, cosine)</span></p><p><span>	</span><span>% crs (radius correction, sine)</span></p><p><span>	</span><span>% crc (radius correction, cosine)</span></p><p><span>	</span><span>% iod (issue of data number)</span></p><p><span>	</span><span>% set default value for harmonic correction</span></p><p><span>	</span><span>switch</span><span> </span><span>nargin</span></p><p><span>		</span><span>case</span><span> </span><span>2</span></p><p><span>			</span><span>compute_harmonic_correction</span><span>=</span><span>1</span><span>;</span></p><p><span>	</span><span>end</span><span> </span></p><p><span>	</span><span>mu</span><span> </span><span>=</span><span> </span><span>3.986005e14</span><span>;</span></p><p><span>	</span><span>omega_dot_earth</span><span> </span><span>=</span><span> </span><span>7.2921151467e</span><span>-</span><span>5</span><span>;</span><span> </span><span>%(rad/sec)</span></p><p><span>	</span><span>% Now follow table 20-IV</span></p><p><span>	</span><span>A</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>sqrtA</span><span>^</span><span>2</span><span>;</span></p><p><span>	</span><span>cmm</span><span> </span><span>=</span><span> </span><span>sqrt</span><span>(</span><span>mu</span><span>/</span><span>A</span><span>^</span><span>3</span><span>)</span><span>;</span><span> </span><span>% computed mean motion</span></p><p><span>	</span><span>tk</span><span> </span><span>=</span><span> </span><span>t</span><span> </span><span>-</span><span> </span><span>eph</span><span>.</span><span>toe</span><span>;</span></p><p><span>	</span><span>% account for beginning of end of week crossover</span></p><p><span>	</span><span>if</span><span> </span><span>(</span><span>tk</span><span> </span><span>&gt;</span><span> </span><span>302400</span><span>)</span></p><p><span>		</span><span>tk</span><span> </span><span>=</span><span> </span><span>tk</span><span>-</span><span>604800</span><span>;</span></p><p><span>	</span><span>end</span></p><p><span>	</span><span>if</span><span> </span><span>(</span><span>tk</span><span> </span><span>&lt;</span><span> </span><span>-</span><span>302400</span><span>)</span></p><p><span>		</span><span>tk</span><span> </span><span>=</span><span> </span><span>tk</span><span>+</span><span>604800</span><span>;</span></p><p><span>	</span><span>end</span><span> </span></p><p><span>	</span><span>% apply mean motion correction</span></p><p><span>	</span><span>n</span><span> </span><span>=</span><span> </span><span>cmm</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>dn</span><span>;</span></p><p><span>	</span><span>% Mean anomaly</span></p><p><span>	</span><span>mk</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>m0</span><span> </span><span>+</span><span> </span><span>n</span><span>*</span><span>tk</span><span>;</span></p><p><span>	</span><span>% solve for eccentric anomaly</span></p><p><span>	</span><span>syms</span><span> </span><span>E</span><span>;</span></p><p><span>	</span><span>eqn</span><span> </span><span>=</span><span> </span><span>E</span><span> </span><span>-</span><span> </span><span>eph</span><span>.</span><span>e</span><span>*</span><span>sin</span><span>(</span><span>E</span><span>)</span><span> </span><span>==</span><span> </span><span>mk</span><span>;</span></p><p><span>	</span><span>solx</span><span> </span><span>=</span><span> </span><span>vpasolve</span><span>(</span><span>eqn</span><span>,</span><span> </span><span>E</span><span>)</span><span>;</span></p><p><span>	</span><span>Ek</span><span> </span><span>=</span><span> </span><span>double</span><span>(</span><span>solx</span><span>)</span><span>;</span></p><p><span>	</span><span>% True anomaly:</span></p><p><span>	</span><span>nu</span><span> </span><span>=</span><span> </span><span>atan2</span><span>(</span><span>(</span><span>sqrt</span><span>(</span><span>1</span><span>-</span><span>eph</span><span>.</span><span>e</span><span>^</span><span>2</span><span>)</span><span>)</span><span>*</span><span>sin</span><span>(</span><span>Ek</span><span>)</span><span>/</span><span>(</span><span>1</span><span>-</span><span>eph</span><span>.</span><span>e</span><span>*</span><span>cos</span><span>(</span><span>Ek</span><span>)</span><span>)</span><span>,</span><span> </span><span>(</span><span>cos</span><span>(</span><span>Ek</span><span>)</span><span>-</span><span>eph</span><span>.</span><span>e</span><span>)</span><span>/</span><span>(</span><span>1</span><span>-</span><span>eph</span><span>.</span><span>e</span><span>*</span><span>cos</span><span>(</span><span>Ek</span><span>)</span><span>)</span><span>)</span><span>;</span></p><p><span>	</span><span>%Ek = acos((e&nbsp;&nbsp;+ cos(nu))/(1+e*cos(nu)));</span></p><p><span>	</span><span>Phi</span><span> </span><span>=</span><span> </span><span>nu</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>w</span><span>;</span></p><p><span>	</span><span>du</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></p><p><span>	</span><span>dr</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></p><p><span>	</span><span>di</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></p><p><span>	</span><span>if</span><span> </span><span>(</span><span>compute_harmonic_correction</span><span> </span><span>==</span><span> </span><span>1</span><span>)</span></p><p><span>	</span><span>% compute harmonic corrections</span></p><p><span>	</span><span>du</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>cus</span><span>*</span><span>sin</span><span>(</span><span>2</span><span>*</span><span>Phi</span><span>)</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>cuc</span><span>*</span><span>cos</span><span>(</span><span>2</span><span>*</span><span>Phi</span><span>)</span><span>;</span></p><p><span>	</span><span>dr</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>crs</span><span>*</span><span>sin</span><span>(</span><span>2</span><span>*</span><span>Phi</span><span>)</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>crc</span><span>*</span><span>cos</span><span>(</span><span>2</span><span>*</span><span>Phi</span><span>)</span><span>;</span></p><p><span>	</span><span>di</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>cis</span><span>*</span><span>sin</span><span>(</span><span>2</span><span>*</span><span>Phi</span><span>)</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>cic</span><span>*</span><span>cos</span><span>(</span><span>2</span><span>*</span><span>Phi</span><span>)</span><span>;</span></p><p><span>	</span><span>end</span></p><p><span>	</span><span>u</span><span> </span><span>=</span><span> </span><span>Phi</span><span> </span><span>+</span><span> </span><span>du</span><span>;</span></p><p><span>	</span><span>r</span><span> </span><span>=</span><span> </span><span>A</span><span>*</span><span>(</span><span>1</span><span>-</span><span>eph</span><span>.</span><span>e</span><span>*</span><span>cos</span><span>(</span><span>Ek</span><span>)</span><span>)</span><span> </span><span>+</span><span> </span><span>dr</span><span>;</span></p><p><span>	</span><span>% inclination angle at reference time</span></p><p><span>	</span><span>i</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>i0</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>idot</span><span>*</span><span>tk</span><span> </span><span>+</span><span> </span><span>di</span><span>;</span></p><p><span>	</span><span>x_prime</span><span> </span><span>=</span><span> </span><span>r</span><span>*</span><span>cos</span><span>(</span><span>u</span><span>)</span><span>;</span></p><p><span>	</span><span>y_prime</span><span> </span><span>=</span><span> </span><span>r</span><span>*</span><span>sin</span><span>(</span><span>u</span><span>)</span><span>;</span></p><p><span>	</span><span>omega</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>omg0</span><span> </span><span>+</span><span> </span><span>(</span><span>eph</span><span>.</span><span>odot</span><span> </span><span>-</span><span> </span><span>omega_dot_earth</span><span>)</span><span>*</span><span>tk</span><span> </span><span>-</span><span> </span><span>omega_dot_earth</span><span>*</span><span>eph</span><span>.</span><span>toe</span><span>;</span></p><p><span>	</span><span>x</span><span> </span><span>=</span><span> </span><span>x_prime</span><span>*</span><span>cos</span><span>(</span><span>omega</span><span>)</span><span> </span><span>-</span><span> </span><span>y_prime</span><span>*</span><span>cos</span><span>(</span><span>i</span><span>)</span><span>*</span><span>sin</span><span>(</span><span>omega</span><span>)</span><span>;</span></p><p><span>	</span><span>y</span><span> </span><span>=</span><span> </span><span>x_prime</span><span>*</span><span>sin</span><span>(</span><span>omega</span><span>)</span><span> </span><span>+</span><span> </span><span>y_prime</span><span>*</span><span>cos</span><span>(</span><span>i</span><span>)</span><span>*</span><span>cos</span><span>(</span><span>omega</span><span>)</span><span>;</span></p><p><span>	</span><span>z</span><span> </span><span>=</span><span> </span><span>y_prime</span><span>*</span><span>sin</span><span>(</span><span>i</span><span>)</span><span>;</span></p><p><span>	</span><span>end</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0035 seconds] -->

<h3><span id="1c_Code_for_Computing_the_Least_Squares_Solution_for_User_Position_and_Clock_Bias"><strong>1.c Code for Computing the Least Squares Solution for User Position and Clock Bias</strong></span></h3>
<!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2cf590782375" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p></div>
				</td>
						<td><div><p><span>	</span><span>function</span><span> </span><span>[</span><span>x</span><span>,</span><span> </span><span>b</span><span>,</span><span> </span><span>norm_dp</span><span>,</span><span> </span><span>G</span><span>]</span><span> </span><span>=</span><span> </span><span>estimate_position</span><span>(</span><span>xs</span><span>,</span><span> </span><span>pr</span><span>,</span><span> </span><span>numSat</span><span>,</span><span> </span><span>x0</span><span>,</span><span> </span><span>b0</span><span>,</span><span> </span><span>dim</span><span>)</span></p><p><span>	</span><span>% estimate_position: estimate the user's position and user clock bias</span></p><p><span>	</span><span>% Usage: [x, b, norm_dp, G] = estimate_position(xs, pr, numSat, x0, b0, dim)</span></p><p><span>	</span><span>% Input Args: xs: satellite position matrix</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pr: corrected pseudo ranges (adjusted for known value of the</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; satellite clock bias)</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numSat: number of satellites</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x0: starting estimate of the user position</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b0: starting point for the user clock bias</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dim: dimensions of the satellite vector. 3 for 3D, 2 for 2D</span></p><p><span>	</span><span>% Notes: b and b0 are usually 0 as the current estimate of the clock bias</span></p><p><span>	</span><span>% has already been applied to the input pseudo ranges.</span></p><p><span>	</span><span>% Output Args: x: optimized user position</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b: optimized user clock bias</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm_dp: normalized pseudo-range difference</span></p><p><span>	</span><span>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G: user satellite geometry matrix, useful for computing DOPs</span></p><p><span>	</span><span>dx</span><span> </span><span>=</span><span> </span><span>100</span><span>*</span><span>ones</span><span>(</span><span>1</span><span>,</span><span> </span><span>dim</span><span>)</span><span>;</span></p><p><span>	</span><span>db</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></p><p><span>	</span><span>norm_dp</span><span> </span><span>=</span><span> </span><span>100</span><span>;</span></p><p><span>	</span><span>numIter</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></p><p><span>	</span><span>b</span><span> </span><span>=</span><span> </span><span>b0</span><span>;</span></p><p><span>	</span><span>%while (norm_dp &gt; 1e-4)</span></p><p><span>	</span><span>while</span><span> </span><span>norm</span><span>(</span><span>dx</span><span>)</span><span> </span><span>&gt;</span><span> </span><span>1e</span><span>-</span><span>3</span></p><p><span>		</span><span>norms</span><span> </span><span>=</span><span> </span><span>sqrt</span><span>(</span><span>sum</span><span>(</span><span>(</span><span>xs</span><span>-</span><span>x0</span><span>)</span><span>.</span><span>^</span><span>2</span><span>,</span><span>2</span><span>)</span><span>)</span><span>;</span></p><p><span>		</span><span>% delta pseudo range:</span></p><p><span>		</span><span>dp</span><span> </span><span>=</span><span> </span><span>pr</span><span> </span><span>-</span><span> </span><span>norms</span><span> </span><span>+</span><span> </span><span>b</span><span> </span><span>-</span><span> </span><span>b0</span><span>;</span></p><p><span>		</span><span>G</span><span> </span><span>=</span><span> </span><span>[</span><span>-</span><span>(</span><span>xs</span><span>-</span><span>x0</span><span>)</span><span>.</span><span>/</span><span>norms </span><span>ones</span><span>(</span><span>numSat</span><span>,</span><span>1</span><span>)</span><span>]</span><span>;</span></p><p><span>		</span><span>sol</span><span> </span><span>=</span><span> </span><span>inv</span><span>(</span><span>G</span><span>'*G)*G'</span><span>*</span><span>dp</span><span>;</span></p><p><span>		</span><span>dx</span><span> </span><span>=</span><span> </span><span>sol</span><span>(</span><span>1</span><span>:</span><span>dim</span><span>)</span>'<span>;</span></p><p><span>		</span><span>db</span><span> </span><span>=</span><span> </span><span>sol</span><span>(</span><span>dim</span><span>+</span><span>1</span><span>)</span><span>;</span></p><p><span>		</span><span>norm_dp</span><span> </span><span>=</span><span> </span><span>norm</span><span>(</span><span>dp</span><span>)</span><span>;</span></p><p><span>		</span><span>numIter</span><span> </span><span>=</span><span> </span><span>numIter</span><span> </span><span>+</span><span> </span><span>1</span><span>;</span></p><p><span>		</span><span>x0</span><span> </span><span>=</span><span> </span><span>x0</span><span> </span><span>+</span><span> </span><span>dx</span><span>;</span></p><p><span>		</span><span>b0</span><span> </span><span>=</span><span> </span><span>b0</span><span> </span><span>+</span><span> </span><span>db</span><span>;</span></p><p><span>	</span><span>end</span></p><p><span>	</span><span>x</span><span> </span><span>=</span><span> </span><span>x0</span><span>;</span></p><p><span>	</span><span>b</span><span> </span><span>=</span><span> </span><span>b0</span><span>;</span></p><p><span>	</span><span>end</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0014 seconds] -->

<h3><span id="1d_Code_for_Calculating_Satellite_Clock_Bias"><strong>1.d Code for Calculating Satellite Clock Bias</strong></span></h3>
<!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2d2788312100" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p></div>
				</td>
						<td><div><p><span>	</span><span>function</span><span> </span><span>dsv</span><span> </span><span>=</span><span> </span><span>estimate_satellite_clock_bias</span><span>(</span><span>t</span><span>,</span><span> </span><span>eph</span><span>)</span></p><p><span>	</span><span>F</span><span> </span><span>=</span><span> </span><span>-</span><span>4.442807633e</span><span>-</span><span>10</span><span>;</span></p><p><span>	</span><span>mu</span><span> </span><span>=</span><span> </span><span>3.986005e14</span><span>;</span></p><p><span>	</span><span>A</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>sqrtA</span><span>^</span><span>2</span><span>;</span></p><p><span>	</span><span>cmm</span><span> </span><span>=</span><span> </span><span>sqrt</span><span>(</span><span>mu</span><span>/</span><span>A</span><span>^</span><span>3</span><span>)</span><span>;</span><span> </span><span>% computed mean motion</span></p><p><span>	</span><span>tk</span><span> </span><span>=</span><span> </span><span>t</span><span> </span><span>-</span><span> </span><span>eph</span><span>.</span><span>toe</span><span>;</span></p><p><span>	</span><span>% account for beginning or end of week crossover</span></p><p><span>	</span><span>if</span><span> </span><span>(</span><span>tk</span><span> </span><span>&gt;</span><span> </span><span>302400</span><span>)</span></p><p><span>		</span><span>tk</span><span> </span><span>=</span><span> </span><span>tk</span><span>-</span><span>604800</span><span>;</span></p><p><span>	</span><span>end</span></p><p><span>	</span><span>if</span><span> </span><span>(</span><span>tk</span><span> </span><span>&lt;</span><span> </span><span>-</span><span>302400</span><span>)</span></p><p><span>		</span><span>tk</span><span> </span><span>=</span><span> </span><span>tk</span><span>+</span><span>604800</span><span>;</span></p><p><span>	</span><span>end</span></p><p><span>	</span><span>% apply mean motion correction</span></p><p><span>	</span><span>n</span><span> </span><span>=</span><span> </span><span>cmm</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>dn</span><span>;</span></p><p><span>	</span><span>% Mean anomaly</span></p><p><span>	</span><span>mk</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>m0</span><span> </span><span>+</span><span> </span><span>n</span><span>*</span><span>tk</span><span>;</span></p><p><span>	</span><span>% solve for eccentric anomaly</span></p><p><span>	</span><span>syms</span><span> </span><span>E</span><span>;</span></p><p><span>	</span><span>eqn</span><span> </span><span>=</span><span> </span><span>E</span><span> </span><span>-</span><span> </span><span>eph</span><span>.</span><span>e</span><span>*</span><span>sin</span><span>(</span><span>E</span><span>)</span><span> </span><span>==</span><span> </span><span>mk</span><span>;</span></p><p><span>	</span><span>solx</span><span> </span><span>=</span><span> </span><span>vpasolve</span><span>(</span><span>eqn</span><span>,</span><span> </span><span>E</span><span>)</span><span>;</span></p><p><span>	</span><span>Ek</span><span> </span><span>=</span><span> </span><span>double</span><span>(</span><span>solx</span><span>)</span><span>;</span></p><p><span>	</span><span>dsv</span><span> </span><span>=</span><span> </span><span>eph</span><span>.</span><span>af0</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>af1</span><span>*</span><span>(</span><span>t</span><span>-</span><span>eph</span><span>.</span><span>toc</span><span>)</span><span> </span><span>+</span><span> </span><span>eph</span><span>.</span><span>af2</span><span>*</span><span>(</span><span>t</span><span>-</span><span>eph</span><span>.</span><span>toc</span><span>)</span><span>^</span><span>2</span><span> </span><span>+</span><span> </span><span>F</span><span>*</span><span>eph</span><span>.</span><span>e</span><span>*</span><span>eph</span><span>.</span><span>sqrtA</span><span>*</span><span>sin</span><span>(</span><span>Ek</span><span>)</span><span>;</span></p><p><span>	</span><span>end</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0013 seconds] -->

<h3><span id="1e_Code_for_converting_ECEF_WGS84_to_Ellipsoidal_Coordinates"><strong>1.e Code for converting ECEF (WGS84) to Ellipsoidal Coordinates</strong></span></h3>
<!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2d4111374489" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p></div>
				</td>
						<td><div><p><span>	</span><span>function</span><span> </span><span>[</span><span>lambda</span><span>,</span><span> </span><span>phi</span><span>,</span><span> </span><span>h</span><span>]</span><span> </span><span>=</span><span> </span><span>WGStoEllipsoid</span><span>(</span><span>x</span><span>,</span><span>y</span><span>,</span><span>z</span><span>)</span></p><p><span>	</span><span>% WGStoEllipsoid Convert ECEF coordinates to Ellipsoidal (longitude, latitude, height above ellipsoid)</span></p><p><span>	</span><span>% Usage: [lambda, phi, h] =&nbsp;&nbsp;WGStoEllipsoid(x,y,z)</span></p><p><span>	</span><span>% Input Args: coordinates in ECEF</span></p><p><span>	</span><span>% Output Args: Longitude, Latitude in radians, height in meters</span></p><p><span>	</span><span>% WGS ellipsoid params</span></p><p><span>	</span><span>a</span><span> </span><span>=</span><span> </span><span>6378137</span><span>;</span></p><p><span>	</span><span>f</span><span> </span><span>=</span><span> </span><span>1</span><span>/</span><span>298.257</span><span>;</span></p><p><span>	</span><span>e</span><span> </span><span>=</span><span> </span><span>sqrt</span><span>(</span><span>2</span><span>*</span><span>f</span><span>-</span><span>f</span><span>^</span><span>2</span><span>)</span><span>;</span></p><p><span>	</span><span>% From equation 4.A.3,</span></p><p><span>	</span><span>lambda</span><span> </span><span>=</span><span> </span><span>atan2</span><span>(</span><span>y</span><span>,</span><span>x</span><span>)</span><span>;</span></p><p><span>	</span><span>p</span><span> </span><span>=</span><span> </span><span>sqrt</span><span>(</span><span>x</span><span>^</span><span>2</span><span>+</span><span>y</span><span>^</span><span>2</span><span>)</span><span>;</span></p><p><span>	</span><span>% initial value of phi assuming h = 0;</span></p><p><span>	</span><span>h</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></p><p><span>	</span><span>phi</span><span> </span><span>=</span><span> </span><span>atan2</span><span>(</span><span>z</span><span>,</span><span> </span><span>p</span><span>*</span><span>(</span><span>1</span><span>-</span><span>e</span><span>^</span><span>2</span><span>)</span><span>)</span><span>;</span><span> </span><span>%4.A.5</span></p><p><span>	</span><span>N</span><span> </span><span>=</span><span> </span><span>a</span><span>/</span><span>(</span><span>1</span><span>-</span><span>(</span><span>e</span><span>*</span><span>sin</span><span>(</span><span>phi</span><span>)</span><span>)</span><span>^</span><span>2</span><span>)</span><span>^</span><span>0.5</span><span>;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p><span>	</span><span>delta_h</span><span> </span><span>=</span><span> </span><span>1000000</span><span>;</span></p><p><span>	</span><span>while</span><span> </span><span>delta_h</span><span> </span><span>&gt;</span><span> </span><span>0.01</span></p><p><span>		</span><span>prev_h</span><span> </span><span>=</span><span> </span><span>h</span><span>;</span></p><p><span>		</span><span>phi</span><span> </span><span>=</span><span> </span><span>atan2</span><span>(</span><span>z</span><span>,</span><span> </span><span>p</span><span>*</span><span>(</span><span>1</span><span>-</span><span>e</span><span>^</span><span>2</span><span>*</span><span>(</span><span>N</span><span>/</span><span>(</span><span>N</span><span>+</span><span>h</span><span>)</span><span>)</span><span>)</span><span>)</span><span>;</span><span> </span><span>%4.A.5</span></p><p><span>		</span><span>N</span><span> </span><span>=</span><span> </span><span>a</span><span>/</span><span>(</span><span>1</span><span>-</span><span>(</span><span>e</span><span>*</span><span>sin</span><span>(</span><span>phi</span><span>)</span><span>)</span><span>^</span><span>2</span><span>)</span><span>^</span><span>0.5</span><span>;</span></p><p><span>		</span><span>h</span><span> </span><span>=</span><span> </span><span>p</span><span>/</span><span>cos</span><span>(</span><span>phi</span><span>)</span><span>-</span><span>N</span><span>;</span></p><p><span>		</span><span>delta_h</span><span> </span><span>=</span><span> </span><span>abs</span><span>(</span><span>h</span><span>-</span><span>prev_h</span><span>)</span><span>;</span></p><p><span>	</span><span>end</span></p><p><span>	</span><span>end</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0014 seconds] -->

<h3><span id="1f_format_ephemeris3m"><strong>1.f format_ephemeris3.m</strong></span></h3>
<!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-66945f7a5e2d7835826535" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p></div>
				</td>
						<td><div><p><span>function</span><span> </span><span>eph</span><span> </span><span>=</span><span> </span><span>format_ephemeris3</span><span>(</span><span>eph_</span><span>)</span></p><p><span>eph</span><span> </span><span>=</span><span> </span><span>[</span><span>]</span><span>;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p><span>eph</span><span>.</span><span>svid</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>1</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>toc</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>21</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>toe</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>18</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>af0</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>19</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>af1</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>20</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>af2</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>2</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>ura</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>26</span><span>)</span><span>;</span><span> </span><span>%</span><span> </span><span>check</span></p><p><span>eph</span><span>.</span><span>e</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>6</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>sqrtA</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>4</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>dn</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>5</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>m0</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>3</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>w</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>7</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>omg0</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>16</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>i0</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>12</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>odot</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>17</span><span>)</span><span>;</span></p><p><span>%</span><span>eph</span><span>.</span><span>wdot</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>17</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>idot</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>13</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>cus</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>9</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>cuc</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>8</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>cis</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>15</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>cic</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>14</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>crs</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>11</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>crc</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>10</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>iod</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>22</span><span>)</span><span>;</span></p><p><span>eph</span><span>.</span><span>GPSWeek</span><span> </span><span>=</span><span> </span><span>eph_</span><span>(</span><span>24</span><span>)</span><span>;</span></p><p><span>end</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0021 seconds] -->

<h3><span id="2a_Taylor_Series_Expansion_of_Vector_Modulus"><strong>2.a Taylor Series Expansion of Vector Modulus</strong></span></h3>
<p>In the derivation of the position estimation formula, we used the taylor series expansion of the modulus function. The proof is as follows:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-5f5266f1c57117e0aefd86054e8e855a_l3.png" alt="\lVert x \rVert = (x\cdot{x})^{1/2}" title="Rendered by QuickLaTeX.com" height="22" width="117"></p>
<p>First two terms of the taylor series expansion of&nbsp;<img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-fc6339bf8161f6423fe87162e44ebf5d_l3.png" alt="\lVert x \rVert" title="Rendered by QuickLaTeX.com" height="19" width="24"> about <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-ede05c264bba0eda080918aaa09c4658_l3.png" alt="x" title="Rendered by QuickLaTeX.com" height="8" width="10"> are:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-f8fd651001030737985bf0df60e9070d_l3.png" alt="\lVert x + \delta{x}\rVert = \lVert x \rVert + \frac{\partial{\lVert x \rVert }}{\partial{x}}\cdot{\delta{x}}" title="Rendered by QuickLaTeX.com" height="26" width="204"></p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-a47d045338c73486a02f7a4aa53d450f_l3.png" alt=" \frac{\partial{\lVert x \rVert }}{\partial{x}} = \frac{1}{2}(x\cdot{x})^{-\frac{1}{2}}2x" title="Rendered by QuickLaTeX.com" height="26" width="153"></p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-5a5a9f5d776c79dcf238930ad62c576c_l3.png" alt=" \frac{\partial{\lVert x \rVert }}{\partial{x}} = \frac{x}{\lVert x \rVert }" title="Rendered by QuickLaTeX.com" height="29" width="79"></p>
<h3><span id="2b_Ionospheric_and_Tropospheric_Delay"><strong>2.b&nbsp;Ionospheric and Tropospheric Delay</strong></span></h3>
<p>The passage of the satellite signal through the earth’s atmosphere changes the speed of the signal and bends the signal path. These effects result in the distance to the satellite calculated by multiplying the time delay between signal&nbsp;transmission and reception with the speed of light to be&nbsp;different from the true distance. Estimating the effect of the atmosphere is important to calculate accurate pseudoranges and thus accurate user position. In the treatment above, we neglected the atmospheric effects. In this section, we’ll provide some information about atmospheric effects and how they are typically modeled. The interested reader is referred to chapter 5 of <span id="w4X0NimVt4133jjruzlIw" data-reflist="[&quot;a5of4cpcm&quot;]" data-footnote="undefined"><sup>1</sup></span>&nbsp;for details.</p>
<p>For the purpose of analyzing its interaction with GPS signals, the earth’s atmosphere can be split into two parts – troposphere and the ionosphere. The ionosphere extends from a height of about 50km to about 1000km above the earth is a region of ionized gases. The ionization is caused by the sun’s radiation and the state of the ionosphere is determined primarily by the intensity of solar activity. Electron density generally builds up during the day as the sun rises, peaking at around 2 PM local time and then starts declining. There can be considerable variability from day to day depending upon the solar activity. The speed of propagation of the signal in the ionosphere depends upon the number of free electrons in the path of the signal, defined as the&nbsp;<em>total electron count&nbsp;</em>(TEC). The number of electrons in a tube of 1<img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-7bd22cca2802b4314e8f06fb217359f5_l3.png" alt="m^2" title="Rendered by QuickLaTeX.com" height="15" width="23"> cross section extending from the receiver to the satellite is given as:</p>
<p><img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-18ccc30107695ad743023464ac380024_l3.png" alt="TEC = \int_S^R n_e(l)dl" title="Rendered by QuickLaTeX.com" height="24" width="142"></p>
<p>where <img decoding="async" loading="lazy" src="https://www.telesens.co/wp-content/ql-cache/quicklatex.com-5e357137369f7249106418d84ec7d492_l3.png" alt="n_e(l)" title="Rendered by QuickLaTeX.com" height="18" width="36"> is the electron density along the signal path and the integral is along the signal path from the satellite to the receiver. The path length through the ionospheric is shortest in the zenith direction (when the satellite is directly overhead) and longest when the satellite is close to the horizon.</p>
<p>In general, ionosphere delays are hard to model as solar flares and magnetic storms can large and rapidly varying fluctuations in electron densities. Two methods are primarily used to estimate ionospheric delays. The first method uses dual frequency GPS measurements and the fact that the ionospheric delay is inversely proportional to the square of the frequency. This enables us to set up a system of equations to estimate the&nbsp;<em>ionosphere free&nbsp;</em>pseudoranges from the noisy pseudoranges.</p>
<p>Receivers limited to single frequency measurements can use an empirical model called the Klobuchar model parameterized by the user’s latitude, longitude, satellite azimuth/elevation, local time and a set of parameters broadcast by the satellites. A step by step implementation of this model is detailed in the GPS Interface Specification and can be easily implemented in Matlab or C.</p>
<p>The troposphere extends to about 16 Km above the equator and contains roughly three quarters of the gaseous mass of the atmosphere. The troposphere is primarily composed of the dry gasses – nitrogen and oxygen, and water vapour. The primary effect of the troposphere on GPS signal propagation is to delay it slightly, causing the apparent range to the satellite to appear longer by about 2.5m, depending on the satellite elevation angle. Unlike the ionosphere, the troposphere is non-dispersive for GPS frequencies, and thus the tropospheric effect can’t be estimated by dual frequency measurements. The amount of delay caused by the troposphere depends on the pressure, temperature and humidity. Various models exist to calculate the delay from meteorological measurements. Refer to chapter 5 of&nbsp;<span id="d5Y66VOIccG6DDPWT9VtV" data-reflist="[&quot;a5of4cpcm&quot;]" data-footnote="undefined"><sup>1</sup></span> for details.</p>
<h3><span id="2c_Plotting_code"><strong>2.c Plotting code</strong></span></h3>
<p>Some people have asked for the plotting code – <a href="https://drive.google.com/open?id=1Gw0lDftAneDrTfqF4C8EmLAa6W3gHifR">here</a> it is.</p>

<div id="abt-bibliography" data-reflist="[&quot;a5of4cpcm&quot;,&quot;g1c8p8q7oq&quot;]">
<div id="a5of4cpcm">
<p>1.</p>
<p>Misra P, Enge P. <i>Global Positioning System</i>. Vol 0. 0th ed. Ganga-Jamuna Press; 2011.</p>
</div>
<div id="g1c8p8q7oq">
<p>2.</p>
<p>None S. <i>Global Positioning System Interface Specification</i>. Global Position Systems Directorate; 2013:213.</p>
</div>
</div>
<!-- kcite active, but no citations found -->
</div></div>]]></description>
        </item>
    </channel>
</rss>