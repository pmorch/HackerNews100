<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 09 Feb 2024 19:00:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Apple is lobbying against right to repair 6 months after supporting it (185 pts)]]></title>
            <link>https://www.404media.co/apple-is-lobbying-against-right-to-repair-again/</link>
            <guid>39317819</guid>
            <pubDate>Fri, 09 Feb 2024 17:43:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.404media.co/apple-is-lobbying-against-right-to-repair-again/">https://www.404media.co/apple-is-lobbying-against-right-to-repair-again/</a>, See on <a href="https://news.ycombinator.com/item?id=39317819">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
<!--kg-card-begin: html-->
  <div>
    <h5>Subscribe</h5>
    <div>
      <p>Join the newsletter to get the latest updates.</p>
      <form data-members-form="subscribe">
        
        
        <div>
          
          <p>
            Great! Check your inbox and click the link.
          </p>
        </div>
        <div>
          
          <p>
            Please enter a valid email address.
          </p>
        </div>
      </form>
    </div>
  </div>

<!--kg-card-end: html-->
<p>An Apple executive lobbied against a strong right-to-repair bill in Oregon Thursday, which is the first time the company has had an employee actively outline its stance on right to repair at an open hearing. Apple’s position in Oregon shows that <a href="https://www.404media.co/apple-endorses-california-right-to-repair-bill/"><u>despite supporting a weaker right to repair law in California</u></a>, it still intends to control its own repair ecosystem. It also sets up a highly interesting fight in the state because <a href="https://www.404media.co/google-formally-endorses-right-to-repair-will-lobby-to-pass-strong-repair-laws/"><u>Google has come out in favor</u></a> of the same legislation Apple is opposing.</p><p>“It is our belief that the bill’s current language around parts pairing will undermine the security, safety, and privacy of Oregonians by forcing device manufacturers to allow the use of parts of unknown origin in consumer devices,” John Perry, Apple’s principal secure repair architect, told the legislature.&nbsp;</p><p>This is a quick about-face for the company, which after years of lobbying against right to repair, began to lobby for it in California last fall. The difference now is that Oregon's bill includes a critical provision that Google says it can easily comply with but that is core for Apple to maintain its dominance over the repair market.</p>
</div><div>
  <div>
    <h2>This post is for paid members only</h2>
    <p>Become a paid member for unlimited ad-free access to articles, bonus podcast content, and more.</p>
    <p><a href="https://www.404media.co/membership/">Subscribe</a>
  </p></div>
  <div>
    <h2>Sign up for free access to this post</h2>
    <p>Free members get access to posts like this one along with an email round-up of our week's stories.</p>
    <p><a href="https://www.404media.co/signup/">Subscribe</a>
  </p></div>
  <p>Already have an account? <a href="https://www.404media.co/signin/" data-portal="signin">Sign in</a></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[American VC Firms Investing Billions into PRC Companies Fueling the CCP Military (131 pts)]]></title>
            <link>https://selectcommitteeontheccp.house.gov/media/press-releases/committee-report-american-vc-firms-investing-billions-prc-companies-fueling</link>
            <guid>39317372</guid>
            <pubDate>Fri, 09 Feb 2024 17:16:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://selectcommitteeontheccp.house.gov/media/press-releases/committee-report-american-vc-firms-investing-billions-prc-companies-fueling">https://selectcommitteeontheccp.house.gov/media/press-releases/committee-report-american-vc-firms-investing-billions-prc-companies-fueling</a>, See on <a href="https://news.ycombinator.com/item?id=39317372">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><strong>WASHINGTON, D.C. —&nbsp;</strong>Chairman Mike Gallagher (R-WI) and Ranking Member Raja Krishnamoorthi (D-IL) of the House Select Committee on the Strategic Competition between the United States and the Chinese Communist Party (CCP) unveiled the findings of their&nbsp;<a href="https://selectcommitteeontheccp.house.gov/media/letters/letters-venture-capital-firms-funding-problematic-prc-companies" target="_blank">bipartisan investigation</a>&nbsp;into five U.S. venture capital firms. The lawmakers found that these firms invested at least $3 billion in, and provided expertise and other benefits to, People's Republic of China (PRC) critical technology companies, including many aiding the Chinese military, surveillance state, or the CCP's genocide in Xinjiang.</p><p>The five firms used as case studies in the investigation are GGV Capital, GSR Ventures, Qualcomm Ventures,&nbsp;Sequoia&nbsp;Capital China, and Walden International. Chairman Gallagher and Ranking Member Krishnamoorthi uncovered that these firms funneled over $1.9 billion to AI companies that support China’s human rights abuses or military,&nbsp;and&nbsp;at least another $1.2 billion into the PRC’s semiconductor sector– including semiconductor companies that advance the CCP’s military, genocidal, and techno-totalitarian ambitions. The report also highlights other investments that may raise significant security or human rights concerns.</p><p>In the report,&nbsp;the lawmakers write,&nbsp;“The Committee’s findings suggest that there are billions of dollars beyond those captured in this report that have flowed into PRC companies that support the PRC’s military, digital authoritarianism, and efforts to develop technological supremacy and undermine American technological leadership. The status quo is untenable. . . .&nbsp;Decades of investment—including funding, knowledge transfer, and other intangible benefits—from U.S. VCs have helped build and strengthen the PRC’s priority sectors.”</p><div><p>﻿In certain cases, the lawmakers even uncovered internal VC memorandums stating that Chinese investments were more attractive if the company supported the Chinese government's surveillance state or its strategy for technological supremacy, designed to weaken the United States. The lawmakers also lay out how, beyond dollars, these investments provide credibility and know-how to problematic PRC companies.</p><p>﻿After uncovering the billions of dollars and intangible benefits VC firms have provided&nbsp;these&nbsp;companies tied to the CCP’s military and human rights abuses, Chairman Gallagher and Ranking Member Krishnamoorthi recommend the United States immediately:</p><ul><li>Restrict U.S. investment in entities sanctioned or red-flagged by the U.S. Government for ties to the PLA, or forced labor and genocide.</li><li>Implement additional sectoral outbound investment restrictions in areas related to the PRC’s critical and emerging technologies, military capabilities, and human rights abuses, building upon those recently established through executive action for PRC AI, semiconductor, and quantum computing companies.&nbsp;</li></ul><p>Read Chairman Gallagher and Ranking Member Krishnamoorthi’s report:&nbsp;"The CCP's Investors- How American Venture Capital Fuels the PRC Military and Human Rights Abuses" <a href="https://selectcommitteeontheccp.house.gov/sites/evo-subsites/selectcommitteeontheccp.house.gov/files/evo-media-document/2024-02-08%20FINAL%20VC%20Report.pdf"><strong>HERE</strong></a>.</p><p>Background:</p><p>In July 2023, Chairman Gallagher and Ranking Member Krishnamoorthi&nbsp;<a href="https://selectcommitteeontheccp.house.gov/media/investigations/select-committee-launches-investigations-us-venture-capital-firms-funding">l</a><a href="https://selectcommitteeontheccp.house.gov/media/investigations/select-committee-launches-investigations-us-venture-capital-firms-funding" target="_blank">aunched</a>&nbsp;investigations into GGV Capital, GSR Venters, Qualcomm Ventures and Walden international after publicly available investment data indicated the firms were among the leading U.S. VCs in the PRC’s AI sector.</p><ul><li>Click&nbsp;<a href="https://selectcommitteeontheccp.house.gov/sites/evo-subsites/selectcommitteeontheccp.house.gov/files/evo-media-document/2023.07.18-letter-to-ggv.pdf" target="_blank">HERE</a>&nbsp;to read the letter to GGV Capital</li><li>Click&nbsp;<a href="https://selectcommitteeontheccp.house.gov/sites/evo-subsites/selectcommitteeontheccp.house.gov/files/evo-media-document/2023.07.18-letter-to-gsr.pdf" target="_blank">HERE</a>&nbsp;to read the letter to GSR Ventures</li><li>Click&nbsp;<a href="https://selectcommitteeontheccp.house.gov/sites/evo-subsites/selectcommitteeontheccp.house.gov/files/evo-media-document/2023.07.18-letter-to-qualcomm-ventures.pdf" target="_blank">HERE</a>&nbsp;to read the letter to Qualcomm Ventures</li><li>Click&nbsp;<a href="https://selectcommitteeontheccp.house.gov/sites/evo-subsites/selectcommitteeontheccp.house.gov/files/evo-media-document/2023.07.18-letter-to-walden.pdf" target="_blank">HERE</a>&nbsp;to read the letter to Walden International</li></ul><p>In October 2023, following similarly concerning public reports, Chairman Gallagher and Ranking Member&nbsp;expanded the investigation to include Sequoia Capital.</p><ul><li>Click&nbsp;<a href="https://selectcommitteeontheccp.house.gov/sites/evo-subsites/selectcommitteeontheccp.house.gov/files/evo-media-document/2023.10.17-letter-to-sequoia-capital.pdf" target="_blank">HERE</a>&nbsp;to read the letter to Sequoia.&nbsp;</li></ul></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Just 137 crypto miners use 2.3% of total U.S. power (194 pts)]]></title>
            <link>https://www.tomshardware.com/tech-industry/cryptomining/just-137-crypto-miners-use-23-of-total-us-power-government-now-requiring-commercial-miners-to-report-energy-consumption</link>
            <guid>39316234</guid>
            <pubDate>Fri, 09 Feb 2024 16:08:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/tech-industry/cryptomining/just-137-crypto-miners-use-23-of-total-us-power-government-now-requiring-commercial-miners-to-report-energy-consumption">https://www.tomshardware.com/tech-industry/cryptomining/just-137-crypto-miners-use-23-of-total-us-power-government-now-requiring-commercial-miners-to-report-energy-consumption</a>, See on <a href="https://news.ycombinator.com/item?id=39316234">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article-body">
<p>The U.S Energy Information Administration (EIA) is now requiring large-scale commercial cryptocurrency mining operations to report their power consumption. This initiative is part of a larger effort to regulate and penalize cryptocurrency mining due to the exorbitant amount of energy the industry consumes yearly. For now, the EIA is only collecting data, but this new data should give birth to new regulations that will penalize miners in the future. This comes as the company has <a data-analytics-id="inline-link" href="https://www.eia.gov/todayinenergy/detail.php?id=61364" data-url="https://www.eia.gov/todayinenergy/detail.php?id=61364">released a study </a>(first reported on by <a data-analytics-id="inline-link" href="https://insideclimatenews.org/news/06022024/todays-climate-cryptocurrency-energy-information-administration-energy-use-climate-change/" data-url="https://insideclimatenews.org/news/06022024/todays-climate-cryptocurrency-energy-information-administration-energy-use-climate-change/"><em>Inside Climate News</em></a>) suggesting that cryptocurrency mining represents up to 2.3% of U.S. power demand.</p><p>“We intend to continue to analyze and write about the energy implications of cryptocurrency mining activities in the United States...,” EIA administratior Joe DeCarolis <a data-analytics-id="inline-link" href="https://www.eia.gov/pressroom/releases/press550.php" data-url="https://www.eia.gov/pressroom/releases/press550.php">said in a release in January</a>. “We will specifically focus on how the energy demand for cryptocurrency mining is evolving, identify geographic areas of high growth, and quantify the sources of electricity used to meet cryptocurrency mining demand.”</p><p>DeCarolis' words summarize that the United States will pay close attention to the environmental challenges cryptocurrency mining might be causing. We can surmise that the United States government specifically wants to crack down on mining operations that impact the reliability and sustainability of power in highly populated areas. Potentially leading to higher residential power costs and power shortage issues during peak hours. As of January 2024, the EIA has identified 137 cryptomining facilities.&nbsp;</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" alt="Locations of 52 U.S. cryptocurrency mining operations, as of January 2024" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-1200-80.jpg.webp 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9.jpg"><source type="image/jpeg" alt="Locations of 52 U.S. cryptocurrency mining operations, as of January 2024" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-1200-80.jpg 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9.jpg"><img src="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9.jpg" alt="Locations of 52 U.S. cryptocurrency mining operations, as of January 2024" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-1200-80.jpg 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9.jpg" srcset="https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/uvPJE3VYup69djWQ54jTG9-1200-80.jpg 1200w"></picture></p></div><figcaption itemprop="caption description"><span>EIA Note: &nbsp;"The representative size shown for a facility is based upon estimates contained in our bottom-up approach. Number in brackets represents the number of facilities." </span><span itemprop="copyrightHolder">(Image credit: U.S. Energy Information Administration)</span></figcaption></figure><p>The EIA found that crypto-mining operations in the United States has grown substantially over the past few years, to the point where all U.S-based crypto-mining operations consume 0.6% to 2.3% of the nation's entire electricity consumption alone. For comparison, the total U.S. Bitcoin mining industry consumes the annual power budget of Utah or West Virginia. The estimated power draw of Bitcoin mining worldwide is projected to be anywhere between 0.2% to 0.9% of global demand, equating to the same power draw as Greece or Australia by themselves.</p><p>Bitcoin mining is very power-hungry in the United States specifically due to the exorbitant amount of mining that actually takes place within U.S borders. The EIA found that the global share of Bitcoin mining that takes place in the U.S. grew from 3.4% in 2020 to a whopping 37.8% in 2022.</p><p>The incredible power demands of the Bitcoin industry are a result of the Bitcoin mining algorithm becoming more and more difficult every single year. Bitcoin today isn't what it was eight to ten years ago, where you could mine it on a single computer and net a decent profit. Nowadays, Bitcoin needs to be mined on hundreds of specialized mining devices (ASICs) to be gathered at all. The continuous difficulty of the Bitcoin algorithm, in turn, creates higher and higher power costs as the cryptocurrency gets harder to mine.</p><p>We can expect this power phenomenon to become greater as Bitcoin <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tech-industry/cryptocurrency/bitcoin-comes-roaring-back-as-it-hits-2023-high-but-gaming-gpus-are-safe-from-miners-for-now-ai-remains-the-largest-threat-to-gpu-pricing" data-before-rewrite-localise="https://www.tomshardware.com/tech-industry/cryptocurrency/bitcoin-comes-roaring-back-as-it-hits-2023-high-but-gaming-gpus-are-safe-from-miners-for-now-ai-remains-the-largest-threat-to-gpu-pricing">grows in popularity</a>. 2024 is expected to be one of the most eventful years in Bitcoin history, with the cryptocurrency expected to blow past its record $69,000 high sometime after its halving event in April (when the reward for Bitcoin mining is cut in half) thanks to reduced mining profit and large-scale institutional adoption.</p>
</div><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-FbGSZhhjdMVRwebz9N6tEQ"><section><p>Join the experts who read Tom's Hardware for the inside track on enthusiast PC tech news — and have for over 25 years. We'll send breaking news and in-depth reviews of CPUs, GPUs, AI, maker hardware and more straight to your inbox.</p></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Add coffee stains to LaTeX documents (2021) (237 pts)]]></title>
            <link>https://ctan.org/pkg/coffeestains</link>
            <guid>39316193</guid>
            <pubDate>Fri, 09 Feb 2024 16:05:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ctan.org/pkg/coffeestains">https://ctan.org/pkg/coffeestains</a>, See on <a href="https://news.ycombinator.com/item?id=39316193">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <p>
      This package provides an essential feature that <span>L<span>a</span>T<span>e</span>X</span> has
      been missing for too long: It adds coffee stains to your documents.
      A lot of time can be saved by printing stains directly
      on the page rather than adding them manually.
    </p>
    <table>
      <tbody><tr><td>Sources</td><td><a href="https://ctan.org/tex-archive/graphics/pgf/contrib/coffeestains"><code>/graphics/pgf/contrib/coffeestains</code></a></td></tr>
      <tr><td>Documentation</td><td><div title="Read Me file"><p><a href="https://mirrors.ctan.org/graphics/pgf/contrib/coffeestains/README.md">README.md</a></p></div><div title="Portable Document Format"><p><a href="http://mirrors.ctan.org/graphics/pgf/contrib/coffeestains/coffeestains-en.pdf">English documentation</a></p></div><div title="Portable Document Format"><p><a href="http://mirrors.ctan.org/graphics/pgf/contrib/coffeestains/coffeestains-fr.pdf">French documentation <img src="https://ctan.org/assets/lang/fr.svg" alt="[French]" title="[French]"></a></p></div></td></tr>
      
      
      
      
      <tr><td>Repository</td><td><a href="https://framagit.org/Pathe/coffeestains">https://framagit.org/Pathe/coffeestains</a></td></tr>
      
      <tr><td>Version</td><td>0.5.1 </td></tr>
      <tr><td>Licenses</td><td><a href="https://ctan.org/license/pd">Public Domain Software</a><br></td></tr>
      
      <tr><td>Maintainer</td><td><a href="https://ctan.org/author/bideault">Patrick Bideault</a><br></td></tr>
      
      <tr><td>Contained&nbsp;in</td><td><a href="https://ctan.org/pkg/texlive">T<span>e</span>X Live</a> as coffeestains<br><a href="https://ctan.org/pkg/miktex">MiKT<span>e</span>X</a> as coffeestains</td></tr>
      <tr><td>Topics</td><td><a href="https://ctan.org/topic/pgf-tikz">PGF TikZ</a><br><a href="https://ctan.org/topic/amusements">Amusements</a><br><a href="https://ctan.org/topic/graphics">Graphics</a><br></td></tr>
      
    </tbody></table>
    <p>
      <a href="https://mirrors.ctan.org/graphics/pgf/contrib/coffeestains.zip">Download</a> the contents of this package in one zip archive
        (493.0k).
    </p>
    
    
 
      <div>
      	<h2>Community Comments</h2>
        <p>Loading...</p>
      </div>
      

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Goody-2, the world's most responsible AI model (120 pts)]]></title>
            <link>https://www.goody2.ai/chat</link>
            <guid>39315986</guid>
            <pubDate>Fri, 09 Feb 2024 15:48:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.goody2.ai/chat">https://www.goody2.ai/chat</a>, See on <a href="https://news.ycombinator.com/item?id=39315986">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h3>Get help from the world's<br><span>most responsible</span> AI model</h3><p>GOODY-2 is built with next-gen adherence to our industry-leading ethical principles. It's so safe, <span>it won't answer anything</span> that could possibly be construed as controversial or problematic.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hono v4.0.0 (146 pts)]]></title>
            <link>https://github.com/honojs/hono/releases/tag/v4.0.0</link>
            <guid>39313891</guid>
            <pubDate>Fri, 09 Feb 2024 11:55:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/honojs/hono/releases/tag/v4.0.0">https://github.com/honojs/hono/releases/tag/v4.0.0</a>, See on <a href="https://news.ycombinator.com/item?id=39313891">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-pjax="true" data-test-selector="body-content" data-view-component="true"><blockquote>
<p>Going to full-stack.</p>
</blockquote>
<p>Hono v4.0.0 is out! This major update includes some breaking changes and the addition of three major features.</p>
<ol>
<li>Static Site Generation</li>
<li>Client Components</li>
<li>File-based Routing</li>
</ol>
<p>So Hono is going to full-stack. Let's take a look at the three features.</p>
<h2>1. Static Site Generation</h2>
<p>We introduce SSG Helper. With it you can generate static pages of your Hono applications.</p>
<p>To use this, create a separate file <code>build.ts</code> from the application and call the <code>toSSG()</code> function in it.</p>
<div data-snippet-clipboard-copy-content="import fs from 'node:fs/promises'
import { toSSG } from 'hono/ssg'
import app from './src/index'

toSSG(app, fs)"><pre><span>import</span> <span>fs</span> <span>from</span> <span>'node:fs/promises'</span>
<span>import</span> <span>{</span> <span>toSSG</span> <span>}</span> <span>from</span> <span>'hono/ssg'</span>
<span>import</span> <span>app</span> <span>from</span> <span>'./src/index'</span>

<span>toSSG</span><span>(</span><span>app</span><span>,</span> <span>fs</span><span>)</span></pre></div>
<p>There are adapters for Bun and Deno, so you can write shorter for Bun, for example.</p>
<div data-snippet-clipboard-copy-content="import { toSSG } from 'hono/bun'
import app from './src/index'

toSSG(app)"><pre><span>import</span> <span>{</span> <span>toSSG</span> <span>}</span> <span>from</span> <span>'hono/bun'</span>
<span>import</span> <span>app</span> <span>from</span> <span>'./src/index'</span>

<span>toSSG</span><span>(</span><span>app</span><span>)</span></pre></div>
<p>And, just run it.</p>

<p>Then HTML is generated.</p>
<div data-snippet-clipboard-copy-content="$ ls static
about.html  index.html"><pre><span>$</span> ls static
about.html  index.html</pre></div>
<p>You can easily deploy this page to Cloudflare Pages, etc.</p>
<div data-snippet-clipboard-copy-content="$ wrangler pages deploy static"><pre><span>$</span> wrangler pages deploy static</pre></div>
<h3>With Vite</h3>
<p>We have created a plugin <a href="https://github.com/honojs/vite-plugins/tree/main/packages/ssg"><code>@hono/vite-ssg</code></a> for Vite. By using this, you will be able to develop and build a static sites with just the <code>vite</code> command.</p>
<p>The configuration is the following:</p>
<div data-snippet-clipboard-copy-content="import build from '@hono/vite-ssg'
import devServer from '@hono/vite-dev-server'
import { defineConfig } from 'vite'

export default defineConfig({
  plugins: [
    build(),
    devServer({
      entry: 'src/index.tsx'
    })
  ]
})"><pre><span>import</span> <span>build</span> <span>from</span> <span>'@hono/vite-ssg'</span>
<span>import</span> <span>devServer</span> <span>from</span> <span>'@hono/vite-dev-server'</span>
<span>import</span> <span>{</span> <span>defineConfig</span> <span>}</span> <span>from</span> <span>'vite'</span>

<span>export</span> <span>default</span> <span>defineConfig</span><span>(</span><span>{</span>
  <span>plugins</span>: <span>[</span>
    <span>build</span><span>(</span><span>)</span><span>,</span>
    <span>devServer</span><span>(</span><span>{</span>
      <span>entry</span>: <span>'src/index.tsx'</span>
    <span>}</span><span>)</span>
  <span>]</span>
<span>}</span><span>)</span></pre></div>
<p>If you want to develope, just run the command:</p>

<p>If you want to build, just run the command:</p>

<p>In combination with the deployment mentioned above to Cloudflare Pages, you can develop, SSG build, and deploy non-stop. And each of them is extremely fast (the video is 2x faster).</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/honojs/hono/assets/10682/4421cb84-fd04-46a3-a6bf-e955fcbdf388"><img src="https://github.com/honojs/hono/assets/10682/4421cb84-fd04-46a3-a6bf-e955fcbdf388" alt="Screen cast"></a></p>
<h2>2. Client Components</h2>
<p><code>hono/jsx</code> was originally designed to run server-side as an alternative to template engines such as Mustache. Server-side JSX is an interesting experiment, creating a new stack to combine with HTMX and Alpine.js. But that's not all.</p>
<p>Now, <code>hono/jsx</code> runs on the client as well. We call it <code>hono/jsx/dom</code> or Client Components.</p>
<p>The exact same code as React runs with Hono's JSX.</p>
<div data-snippet-clipboard-copy-content="import { useState } from 'hono/jsx'
import { render } from 'hono/jsx/dom'

function Counter() {
  const [count, setCount] = useState(0)
  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={() => setCount(count + 1)}>Increment</button>
    </div>
  )
}

function App() {
  return (
    <html>
      <body>
        <Counter />
      </body>
    </html>
  )
}

const root = document.getElementById('root')
render(<App />, root)"><pre><span>import</span> <span>{</span> <span>useState</span> <span>}</span> <span>from</span> <span>'hono/jsx'</span>
<span>import</span> <span>{</span> <span>render</span> <span>}</span> <span>from</span> <span>'hono/jsx/dom'</span>

<span>function</span> <span>Counter</span><span>(</span><span>)</span> <span>{</span>
  <span>const</span> <span>[</span><span>count</span><span>,</span> <span>setCount</span><span>]</span> <span>=</span> <span>useState</span><span>(</span><span>0</span><span>)</span>
  <span>return</span> <span>(</span>
    <span>&lt;</span><span>div</span><span>&gt;</span>
      <span>&lt;</span><span>p</span><span>&gt;</span>Count: <span>{</span><span>count</span><span>}</span><span>&lt;</span><span>/</span><span>p</span><span>&gt;</span>
      <span>&lt;</span><span>button</span> <span>onClick</span><span>=</span><span>{</span><span>(</span><span>)</span> <span>=&gt;</span> <span>setCount</span><span>(</span><span>count</span> <span>+</span> <span>1</span><span>)</span><span>}</span><span>&gt;</span>Increment<span>&lt;</span><span>/</span><span>button</span><span>&gt;</span>
    <span>&lt;</span><span>/</span><span>div</span><span>&gt;</span>
  <span>)</span>
<span>}</span>

<span>function</span> <span>App</span><span>(</span><span>)</span> <span>{</span>
  <span>return</span> <span>(</span>
    <span>&lt;</span><span>html</span><span>&gt;</span>
      <span>&lt;</span><span>body</span><span>&gt;</span>
        <span>&lt;</span><span>Counter</span> <span>/</span><span>&gt;</span>
      <span>&lt;</span><span>/</span><span>body</span><span>&gt;</span>
    <span>&lt;</span><span>/</span><span>html</span><span>&gt;</span>
  <span>)</span>
<span>}</span>

<span>const</span> <span>root</span> <span>=</span> <span>document</span><span>.</span><span>getElementById</span><span>(</span><span>'root'</span><span>)</span>
<span>render</span><span>(</span><span>&lt;</span><span>App</span> <span>/</span><span>&gt;</span><span>,</span> <span>root</span><span>)</span></pre></div>
<p>The Hooks listed below are also implemented and you can create Client Components just like in React.</p>
<ul>
<li>useContext</li>
<li>useEffect</li>
<li>useState</li>
<li>useCallback</li>
<li>use</li>
<li>startTransition</li>
<li>useDeferredValue</li>
<li>useMemo</li>
<li>useLayoutEffect</li>
<li>Memo</li>
<li>isValidElement</li>
</ul>
<h3><code>startViewTransition</code> family</h3>
<p>In addition, the original APIs, <code>startViewTransition</code> family make the View Transition API easy to use.</p>
<div data-snippet-clipboard-copy-content="import { useState, startViewTransition } from 'hono/jsx'
import { Style, css, keyframes } from 'hono/css'

const fadeIn = keyframes`
  from { opacity: 0; }
  to { opacity: 1; }
`

const App = () => {
  const [showTitleImage, setShowTitleImage] = useState(false)

  return (
    <>
      <button onClick={() => startViewTransition(() => setShowTitleImage((state) => !state))}>Click!</button>
      <div>
        {!showTitleImage ? (
          <img src=&quot;https://hono.dev/images/logo.png&quot; />
        ) : (
          <div
            class={css`
              animation: ${fadeIn} 1s;
              background: url('https://hono.dev/images/logo-large.png');
              background-size: contain;
              background-repeat: no-repeat;
              background-position: center;
              width: 500px;
              height: 200px;
            `}
          />
        )}
      </div>
    </>
  )
}"><pre><span>import</span> <span>{</span> <span>useState</span><span>,</span> <span>startViewTransition</span> <span>}</span> <span>from</span> <span>'hono/jsx'</span>
<span>import</span> <span>{</span> <span>Style</span><span>,</span> <span>css</span><span>,</span> <span>keyframes</span> <span>}</span> <span>from</span> <span>'hono/css'</span>

<span>const</span> <span>fadeIn</span> <span>=</span> <span>keyframes</span><span>`</span>
<span>  from { opacity: 0; }</span>
<span>  to { opacity: 1; }</span>
<span>`</span>

<span>const</span> <span>App</span> <span>=</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> <span>[</span><span>showTitleImage</span><span>,</span> <span>setShowTitleImage</span><span>]</span> <span>=</span> <span>useState</span><span>(</span><span>false</span><span>)</span>

  <span>return</span> <span>(</span>
    <span>&lt;</span><span>&gt;</span>
      <span>&lt;</span><span>button</span> <span>onClick</span><span>=</span><span>{</span><span>(</span><span>)</span> <span>=&gt;</span> <span>startViewTransition</span><span>(</span><span>(</span><span>)</span> <span>=&gt;</span> <span>setShowTitleImage</span><span>(</span><span>(</span><span>state</span><span>)</span> <span>=&gt;</span> <span>!</span><span>state</span><span>)</span><span>)</span><span>}</span><span>&gt;</span>Click!<span>&lt;</span><span>/</span><span>button</span><span>&gt;</span>
      <span>&lt;</span><span>div</span><span>&gt;</span>
        <span>{</span><span>!</span><span>showTitleImage</span> ? <span>(</span>
          <span>&lt;</span><span>img</span> <span>src</span><span>=</span><span>"https://hono.dev/images/logo.png"</span> <span>/</span><span>&gt;</span>
        <span>)</span> : <span>(</span>
          <span>&lt;</span><span>div</span>
            <span>class</span><span>=</span><span>{</span><span>css</span><span>`</span>
<span>              <span>animation</span><span>:</span> <span><span>${</span><span>fadeIn</span><span>}</span></span> <span>1<span>s</span></span>;</span>
<span>              <span>background</span><span>:</span> <span>url</span>(<span>'https://hono.dev/images/logo-large.png'</span>);</span>
<span>              <span>background-size</span><span>:</span> contain;</span>
<span>              <span>background-repeat</span><span>:</span> no-repeat;</span>
<span>              <span>background-position</span><span>:</span> center;</span>
<span>              <span>width</span><span>:</span> <span>500<span>px</span></span>;</span>
<span>              <span>height</span><span>:</span> <span>200<span>px</span></span>;</span>
<span>            `</span><span>}</span>
          <span>/</span><span>&gt;</span>
        <span>)</span><span>}</span>
      <span>&lt;</span><span>/</span><span>div</span><span>&gt;</span>
    <span>&lt;</span><span>/</span><span>&gt;</span>
  <span>)</span>
<span>}</span></pre></div>
<p>You can easily create the animation.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/honojs/hono/assets/10682/d64b5120-2f31-4227-bcad-19f2d0b2b90a"><img src="https://github.com/honojs/hono/assets/10682/d64b5120-2f31-4227-bcad-19f2d0b2b90a" alt="SC"></a></p>
<h3>Ultra-small</h3>
<p>The <code>hono/jsx/dom</code> is fast and ultra-small. It has a smaller JSX runtime dedicated to the DOM in addition to the common server and client ones. Just specify <code>hono/jsx/dom</code> instead of <code>hono/jsx</code> in <code>tsconfig.json</code>.</p>
<div data-snippet-clipboard-copy-content="&quot;jsx&quot;: &quot;react-jsx&quot;,
&quot;jsxImportSource&quot;: &quot;hono/jsx/dom&quot;"><pre><span>"jsx"</span>: <span><span>"</span>react-jsx<span>"</span></span>,
<span>"jsxImportSource"</span>: <span><span>"</span>hono/jsx/dom<span>"</span></span></pre></div>
<p>The above counter example is <strong>2.8KB</strong> with Brotli compression.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/honojs/hono/assets/10682/813ea09e-550d-49f2-bd51-4a205d38dee7"><img src="https://github.com/honojs/hono/assets/10682/813ea09e-550d-49f2-bd51-4a205d38dee7" alt="SS"></a></p>
<p>In comparison, React is <strong>47.3 KB</strong> for the same thing.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/honojs/hono/assets/10682/915c1894-d993-4a31-b506-e14d2a839171"><img src="https://github.com/honojs/hono/assets/10682/915c1894-d993-4a31-b506-e14d2a839171" alt="SS"></a></p>
<h2>3. File-based Routing</h2>
<p>Last is File-based Routing. This is not included in the hono package, but is provided in a separate package.</p>
<p>It is named <strong>HonoX</strong>.</p>
<h3>HonoX</h3>
<p>HonoX has the following features.</p>
<ul>
<li><strong>File-based routing</strong> - You can create a large application like Next.js.</li>
<li><strong>Fast SSR</strong> - Rendering is ultra-fast thanks to Hono.</li>
<li><strong>BYOR</strong> - You can bring your own renderer, not only one using hono/jsx.</li>
<li><strong>Islands hydration</strong> - If you want interactions, create an island. JavaScript is hydrated only for it.</li>
<li><strong>Middleware</strong> - It works as Hono, so you can use a lot of Hono's middleware.</li>
</ul>
<p>You can try it now. One of create-hono's starter templates named "<strong><em>x-base</em></strong>" uses HonoX.</p>
<p>For detailed usage, please see the following HonoX repository.</p>
<p><a href="https://github.com/honojs/honox">https://github.com/honojs/honox</a></p>
<h2>The core is still tiny</h2>
<p>The addition of this feature has no impact on the core. "Hello World" in hono/tiny is still small, only 12KB minified.</p>
<h2>Other new features</h2>
<ul>
<li>feat(base): Set Default Path to <code>'*'</code> for <code>app.use()</code> - <a data-error-text="Failed to load title" data-id="2020278190" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1753" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1753/hovercard" href="https://github.com/honojs/hono/pull/1753">#1753</a></li>
<li>feat(hono-base): <code>app.on</code> supports multiple paths - <a data-error-text="Failed to load title" data-id="2070824100" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1923" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1923/hovercard" href="https://github.com/honojs/hono/pull/1923">#1923</a></li>
<li>feat(css): Introduce pseudo global selector and class name based extend syntax - <a data-error-text="Failed to load title" data-id="2072057863" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1928" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1928/hovercard" href="https://github.com/honojs/hono/pull/1928">#1928</a></li>
<li>feat(jsx-renderer): Nested Layouts via Renderer - <a data-error-text="Failed to load title" data-id="2076976091" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1945" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1945/hovercard" href="https://github.com/honojs/hono/pull/1945">#1945</a></li>
<li>feat!: validator throws error rathar than return <code>c.json()</code> - <a data-error-text="Failed to load title" data-id="2088431591" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2021" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2021/hovercard" href="https://github.com/honojs/hono/pull/2021">#2021</a></li>
<li>feat: introduce Accepts Helper - <a data-error-text="Failed to load title" data-id="2085681040" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2001" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2001/hovercard" href="https://github.com/honojs/hono/pull/2001">#2001</a></li>
<li>feat(serve-static): <code>mimes</code> option for serve-static - <a data-error-text="Failed to load title" data-id="2102437218" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2094" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2094/hovercard" href="https://github.com/honojs/hono/pull/2094">#2094</a></li>
<li>feat!(validator): supports transformation - <a data-error-text="Failed to load title" data-id="2113763941" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2130" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2130/hovercard" href="https://github.com/honojs/hono/pull/2130">#2130</a></li>
</ul>
<h2>Breaking Changes</h2>
<p>There are several breaking changes. Please see the Migration Guide below.</p>
<p><a href="https://github.com/honojs/hono/blob/main/docs/MIGRATION.md">https://github.com/honojs/hono/blob/main/docs/MIGRATION.md</a></p>
<h2>Thanks</h2>
<p>Thanks to all contributors. Great job on all the hard work!</p>
<h2>All Updates</h2>
<ul>
<li>feat(base): Set Default Path to '*' for app.use() by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2020278190" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1753" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1753/hovercard" href="https://github.com/honojs/hono/pull/1753">#1753</a></li>
<li>feat: Introduce jsx/dom by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2069642892" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1917" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1917/hovercard" href="https://github.com/honojs/hono/pull/1917">#1917</a></li>
<li>ci: enables CI in the v4 branch by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2073340185" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1933" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1933/hovercard" href="https://github.com/honojs/hono/pull/1933">#1933</a></li>
<li>feat(hono-base): <code>app.on</code> supports multiple paths by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2070824100" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1923" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1923/hovercard" href="https://github.com/honojs/hono/pull/1923">#1923</a></li>
<li>feat!: remove deprecated features by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2073375807" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1934" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1934/hovercard" href="https://github.com/honojs/hono/pull/1934">#1934</a></li>
<li>fix(jsx/dom): fix cleanup for deps by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2073411261" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1936" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1936/hovercard" href="https://github.com/honojs/hono/pull/1936">#1936</a></li>
<li>refactor(jsx/dom): replace existing content by render() by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2073906724" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1938" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1938/hovercard" href="https://github.com/honojs/hono/pull/1938">#1938</a></li>
<li>feat(css): Introduce pseudo global selector and class name based extend syntax by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2072057863" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1928" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1928/hovercard" href="https://github.com/honojs/hono/pull/1928">#1928</a></li>
<li>feat: Introducing a New SSG Adaptor/Helper by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2068481438" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1904" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1904/hovercard" href="https://github.com/honojs/hono/pull/1904">#1904</a></li>
<li>chore(helper): Add experimental flag the SSG features by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2080345220" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1967" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1967/hovercard" href="https://github.com/honojs/hono/pull/1967">#1967</a></li>
<li>refactor: remove unnecessary <code>import</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2080435137" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1969" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1969/hovercard" href="https://github.com/honojs/hono/pull/1969">#1969</a></li>
<li>refactor: remove and fix comments by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2080540406" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1970" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1970/hovercard" href="https://github.com/honojs/hono/pull/1970">#1970</a></li>
<li>ci: remove lagon runtime tests and other lagon things by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2080663677" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1971" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1971/hovercard" href="https://github.com/honojs/hono/pull/1971">#1971</a></li>
<li>refactor(ssg): SSG works without <code>node:path</code> by <a data-hovercard-type="user" data-hovercard-url="/users/nakasyou/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/nakasyou">@nakasyou</a> in <a data-error-text="Failed to load title" data-id="2080268746" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1965" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1965/hovercard" href="https://github.com/honojs/hono/pull/1965">#1965</a></li>
<li>feat(factory): remove <code>deprecated</code> from <code>Factory</code> and <code>createHandlers</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2080814857" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1979" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1979/hovercard" href="https://github.com/honojs/hono/pull/1979">#1979</a></li>
<li>fix(ssg): fix path parser bug &amp; refactor code by <a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> in <a data-error-text="Failed to load title" data-id="2080788212" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1976" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1976/hovercard" href="https://github.com/honojs/hono/pull/1976">#1976</a></li>
<li>feat(ssg): Implement Dynamic File Extension on MIME Type and Enhanced Response Handling by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2080378370" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1968" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1968/hovercard" href="https://github.com/honojs/hono/pull/1968">#1968</a></li>
<li>feat(jsx/dom): rewrite renderer to use virtual tree by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2081187932" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1981" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1981/hovercard" href="https://github.com/honojs/hono/pull/1981">#1981</a></li>
<li>refactor: faster for loop by <a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> in <a data-error-text="Failed to load title" data-id="2082784232" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1989" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1989/hovercard" href="https://github.com/honojs/hono/pull/1989">#1989</a></li>
<li>feat!(cloudflare-workers): make <code>manifest</code> required by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2081544258" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1984" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1984/hovercard" href="https://github.com/honojs/hono/pull/1984">#1984</a></li>
<li>chore: enables lint and format for <code>.tsx</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2083441785" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1994" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1994/hovercard" href="https://github.com/honojs/hono/pull/1994">#1994</a></li>
<li>feat(jsx/dom): provide jsx-runtime and jsx-dev-runtime via jsx/dom by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2081963965" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1986" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1986/hovercard" href="https://github.com/honojs/hono/pull/1986">#1986</a></li>
<li>fix(types): correct <code>c.get()</code> inference by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2083580063" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1995" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1995/hovercard" href="https://github.com/honojs/hono/pull/1995">#1995</a></li>
<li>feat(jsx/dom): startTransition() and useTransition() by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2083713940" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1996" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1996/hovercard" href="https://github.com/honojs/hono/pull/1996">#1996</a></li>
<li>refactor(jsx): export components and hook function from top level 'hono/jsx' by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2083764810" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1997" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1997/hovercard" href="https://github.com/honojs/hono/pull/1997">#1997</a></li>
<li>feat(ssg): Ignore Dynamic Route by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2082962439" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1990" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1990/hovercard" href="https://github.com/honojs/hono/pull/1990">#1990</a></li>
<li>feat: Added <code>ssgParams</code> middleware by <a data-hovercard-type="user" data-hovercard-url="/users/nakasyou/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/nakasyou">@nakasyou</a> in <a data-error-text="Failed to load title" data-id="2080167876" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1960" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1960/hovercard" href="https://github.com/honojs/hono/pull/1960">#1960</a></li>
<li>fix(ssg): fixed <code>isDynamicRoute</code> and <code>ssgParams</code> matter by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2086170633" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2006" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2006/hovercard" href="https://github.com/honojs/hono/pull/2006">#2006</a></li>
<li>feat(jsx/dom): support createContext and useContext in jsx/dom by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2085161209" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1999" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1999/hovercard" href="https://github.com/honojs/hono/pull/1999">#1999</a></li>
<li>refactor(jsx/dom): make <code>useTransition()</code> handling more simple by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2085869955" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2003" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2003/hovercard" href="https://github.com/honojs/hono/pull/2003">#2003</a></li>
<li>chore(package.json): specify the config in <code>test:deno</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2087484416" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2014" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2014/hovercard" href="https://github.com/honojs/hono/pull/2014">#2014</a></li>
<li>chore(runtime-test): add <code>deno.lock</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2087492494" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2015" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2015/hovercard" href="https://github.com/honojs/hono/pull/2015">#2015</a></li>
<li>fix(jsx/dom): find "insertBefore" node from next node list if not found by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2087991147" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2017" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2017/hovercard" href="https://github.com/honojs/hono/pull/2017">#2017</a></li>
<li>feat!: validator throws error rathar than <code>return c.json()</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2088431591" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2021" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2021/hovercard" href="https://github.com/honojs/hono/pull/2021">#2021</a></li>
<li>refactor(ssg): Removal of Libraries Dependent on Node.js by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2087404694" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2012" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2012/hovercard" href="https://github.com/honojs/hono/pull/2012">#2012</a></li>
<li>feat!(deno): move middleware to helper by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2089488089" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2027" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2027/hovercard" href="https://github.com/honojs/hono/pull/2027">#2027</a></li>
<li>fix(SSG): Correct extension of the file output by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2089611599" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2029" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2029/hovercard" href="https://github.com/honojs/hono/pull/2029">#2029</a></li>
<li>feat(jsx/dom): Introduce startViewTransition() by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2088327868" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2020" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2020/hovercard" href="https://github.com/honojs/hono/pull/2020">#2020</a></li>
<li>fix(ssg): Remove ArrayBuffer from FileSystemModule's writeFile by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2090230331" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2032" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2032/hovercard" href="https://github.com/honojs/hono/pull/2032">#2032</a></li>
<li>refactor(jsx/dom): invoke update() in microtask by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2090594617" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2036" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2036/hovercard" href="https://github.com/honojs/hono/pull/2036">#2036</a></li>
<li>feat: introduce Accepts Helper by <a data-hovercard-type="user" data-hovercard-url="/users/sor4chi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sor4chi">@sor4chi</a> in <a data-error-text="Failed to load title" data-id="2085681040" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2001" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2001/hovercard" href="https://github.com/honojs/hono/pull/2001">#2001</a></li>
<li>feat: improve <code>ssgParams</code> flexibility by <a data-hovercard-type="user" data-hovercard-url="/users/sor4chi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sor4chi">@sor4chi</a> in <a data-error-text="Failed to load title" data-id="2088919093" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2024" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2024/hovercard" href="https://github.com/honojs/hono/pull/2024">#2024</a></li>
<li>refactor(types): name them <code>BlankSchema</code> or <code>BlankInput</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2091710016" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2040" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2040/hovercard" href="https://github.com/honojs/hono/pull/2040">#2040</a></li>
<li>feat(deno): export accpet helper for deno by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2091731317" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2041" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2041/hovercard" href="https://github.com/honojs/hono/pull/2041">#2041</a></li>
<li>docs: Add JSDoc by <a data-hovercard-type="user" data-hovercard-url="/users/nabeken5/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/nabeken5">@nabeken5</a> in <a data-error-text="Failed to load title" data-id="2069600791" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1916" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1916/hovercard" href="https://github.com/honojs/hono/pull/1916">#1916</a></li>
<li>fix!(types): Fix context type when chaining routes with middlewares by <a data-hovercard-type="user" data-hovercard-url="/users/agatan/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/agatan">@agatan</a> in <a data-error-text="Failed to load title" data-id="2092084585" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2046" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2046/hovercard" href="https://github.com/honojs/hono/pull/2046">#2046</a></li>
<li>refactor: rename accept to accepts by <a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> in <a data-error-text="Failed to load title" data-id="2094965053" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2063" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2063/hovercard" href="https://github.com/honojs/hono/pull/2063">#2063</a></li>
<li>fix: use DOCTYPE by default by <a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> in <a data-error-text="Failed to load title" data-id="2094983778" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2064" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2064/hovercard" href="https://github.com/honojs/hono/pull/2064">#2064</a></li>
<li>fix(ssg): Uniformly Convert Paths Ending with Slash to 'index.ext' Format by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2093282397" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2056" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2056/hovercard" href="https://github.com/honojs/hono/pull/2056">#2056</a></li>
<li>feat: Introduce <code>useViewTransition()</code> hook and <code>viewTransition()</code> helper by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2092815414" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2053" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2053/hovercard" href="https://github.com/honojs/hono/pull/2053">#2053</a></li>
<li>feat(ssg): support Improve Hook Handling by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2092948666" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2054" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2054/hovercard" href="https://github.com/honojs/hono/pull/2054">#2054</a></li>
<li>fix: await generate hook by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2097373640" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2074" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2074/hovercard" href="https://github.com/honojs/hono/pull/2074">#2074</a></li>
<li>fix:(ssg): make 'files' mandatory in ToSSGResult by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2097238721" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2071" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2071/hovercard" href="https://github.com/honojs/hono/pull/2071">#2071</a></li>
<li>feat(types): explicitly specify statusCode by <a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> in <a data-error-text="Failed to load title" data-id="2097284900" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2073" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2073/hovercard" href="https://github.com/honojs/hono/pull/2073">#2073</a></li>
<li>chore: vitest test.pool to 'forks' by <a data-hovercard-type="user" data-hovercard-url="/users/watany-dev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/watany-dev">@watany-dev</a> in <a data-error-text="Failed to load title" data-id="2103224886" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2098" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2098/hovercard" href="https://github.com/honojs/hono/pull/2098">#2098</a></li>
<li>goodbye: lagon by <a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> in <a data-error-text="Failed to load title" data-id="2101683736" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2087" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2087/hovercard" href="https://github.com/honojs/hono/pull/2087">#2087</a></li>
<li>refactor: faster for loop in jsx/dom by <a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> in <a data-error-text="Failed to load title" data-id="2102395819" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2092" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2092/hovercard" href="https://github.com/honojs/hono/pull/2092">#2092</a></li>
<li>refactor: "if" on one line and deletion of unneeded variables by <a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> in <a data-error-text="Failed to load title" data-id="2102422909" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2093" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2093/hovercard" href="https://github.com/honojs/hono/pull/2093">#2093</a></li>
<li>fix: add typesVersions of accepts helper by <a data-hovercard-type="user" data-hovercard-url="/users/sor4chi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/sor4chi">@sor4chi</a> in <a data-error-text="Failed to load title" data-id="2102670171" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2096" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2096/hovercard" href="https://github.com/honojs/hono/pull/2096">#2096</a></li>
<li>chore: use Bun as a package manager by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2104120469" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2105" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2105/hovercard" href="https://github.com/honojs/hono/pull/2105">#2105</a></li>
<li>docs(contributing): add <code>Installing dependencies</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2105641452" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2113" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2113/hovercard" href="https://github.com/honojs/hono/pull/2113">#2113</a></li>
<li>feat(serve-static): <code>mimes</code> option for serve-static by <a data-hovercard-type="user" data-hovercard-url="/users/ryuapp/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ryuapp">@ryuapp</a> in <a data-error-text="Failed to load title" data-id="2102437218" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2094" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2094/hovercard" href="https://github.com/honojs/hono/pull/2094">#2094</a></li>
<li>feat(ssg): introduce <code>disableSSG</code> and <code>onlySSG</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2103831274" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2104" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2104/hovercard" href="https://github.com/honojs/hono/pull/2104">#2104</a></li>
<li>feat!(mime): reduce default mimes by <a data-hovercard-type="user" data-hovercard-url="/users/ryuapp/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ryuapp">@ryuapp</a> in <a data-error-text="Failed to load title" data-id="2107856493" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2119" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2119/hovercard" href="https://github.com/honojs/hono/pull/2119">#2119</a></li>
<li>feat(types): better <code>c.var</code> type by <a data-hovercard-type="user" data-hovercard-url="/users/Kyiro/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Kyiro">@Kyiro</a> in <a data-error-text="Failed to load title" data-id="2107982881" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2121" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2121/hovercard" href="https://github.com/honojs/hono/pull/2121">#2121</a></li>
<li>fix(jsx-renderer): correct nested layouts by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2113503321" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2128" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2128/hovercard" href="https://github.com/honojs/hono/pull/2128">#2128</a></li>
<li>feat!(validator): supports transformation by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2113763941" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2130" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2130/hovercard" href="https://github.com/honojs/hono/pull/2130">#2130</a></li>
<li>feat(jsx/dom): more react staff by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2113812108" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2132" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2132/hovercard" href="https://github.com/honojs/hono/pull/2132">#2132</a></li>
<li>refactor(jsx): Remove unused HONO_COMPONENT feature by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2115954910" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2139" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2139/hovercard" href="https://github.com/honojs/hono/pull/2139">#2139</a></li>
<li>fix(html): Remove circular dependencies in <code>hono/html</code> by <a data-hovercard-type="user" data-hovercard-url="/users/javascripter/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/javascripter">@javascripter</a> in <a data-error-text="Failed to load title" data-id="2116392888" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2143" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2143/hovercard" href="https://github.com/honojs/hono/pull/2143">#2143</a></li>
<li>Merge main into v4 by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2116679094" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2145" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2145/hovercard" href="https://github.com/honojs/hono/pull/2145">#2145</a></li>
<li>feat(jsx): "className" is now an alias for "class" by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2116692095" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2146" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2146/hovercard" href="https://github.com/honojs/hono/pull/2146">#2146</a></li>
<li>fix!(deno): put SSG helper into <code>helper.ts</code> by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2117292904" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2150" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2150/hovercard" href="https://github.com/honojs/hono/pull/2150">#2150</a></li>
<li>refactor(jsx): Tidyup the types to be exported by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2117309524" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2151" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2151/hovercard" href="https://github.com/honojs/hono/pull/2151">#2151</a></li>
<li>fix(types): <code>MergeSchemePath</code> infers param types correctly by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2118460703" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2152" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2152/hovercard" href="https://github.com/honojs/hono/pull/2152">#2152</a></li>
<li>fix(types): <code>MergeSchemaPath</code> infer inputs not only params by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2119649985" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2154" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2154/hovercard" href="https://github.com/honojs/hono/pull/2154">#2154</a></li>
<li>Fix/function for attribute by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2122132877" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2161" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2161/hovercard" href="https://github.com/honojs/hono/pull/2161">#2161</a></li>
<li>fix(jsx): The third argument of jsx(), key, is optional by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2122199471" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2162" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2162/hovercard" href="https://github.com/honojs/hono/pull/2162">#2162</a></li>
<li>Feat/more jsx event by <a data-hovercard-type="user" data-hovercard-url="/users/usualoma/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/usualoma">@usualoma</a> in <a data-error-text="Failed to load title" data-id="2122962253" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2165" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2165/hovercard" href="https://github.com/honojs/hono/pull/2165">#2165</a></li>
<li>docs: update the migration guide for releasing v4 by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2120959363" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2159" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2159/hovercard" href="https://github.com/honojs/hono/pull/2159">#2159</a></li>
<li>perf(mime): make <code>getExtension()</code> fast by <a data-hovercard-type="user" data-hovercard-url="/users/ryuapp/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ryuapp">@ryuapp</a> in <a data-error-text="Failed to load title" data-id="2123580103" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2168" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2168/hovercard" href="https://github.com/honojs/hono/pull/2168">#2168</a></li>
<li>v4 by <a data-hovercard-type="user" data-hovercard-url="/users/yusukebe/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/yusukebe">@yusukebe</a> in <a data-error-text="Failed to load title" data-id="2123519038" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2167" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2167/hovercard" href="https://github.com/honojs/hono/pull/2167">#2167</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a data-hovercard-type="user" data-hovercard-url="/users/EdamAme-x/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/EdamAme-x">@EdamAme-x</a> made their first contribution in <a data-error-text="Failed to load title" data-id="2080788212" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1976" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1976/hovercard" href="https://github.com/honojs/hono/pull/1976">#1976</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/nabeken5/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/nabeken5">@nabeken5</a> made their first contribution in <a data-error-text="Failed to load title" data-id="2069600791" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/1916" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/1916/hovercard" href="https://github.com/honojs/hono/pull/1916">#1916</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/Kyiro/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Kyiro">@Kyiro</a> made their first contribution in <a data-error-text="Failed to load title" data-id="2107982881" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2121" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2121/hovercard" href="https://github.com/honojs/hono/pull/2121">#2121</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/javascripter/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/javascripter">@javascripter</a> made their first contribution in <a data-error-text="Failed to load title" data-id="2116392888" data-permission-text="Title is private" data-url="https://github.com/honojs/hono/issues/2143" data-hovercard-type="pull_request" data-hovercard-url="/honojs/hono/pull/2143/hovercard" href="https://github.com/honojs/hono/pull/2143">#2143</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/honojs/hono/compare/v3.12.10...v4.0.0"><tt>v3.12.10...v4.0.0</tt></a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Permutation City (1994) (278 pts)]]></title>
            <link>https://www.gregegan.net/PERMUTATION/Permutation.html</link>
            <guid>39313696</guid>
            <pubDate>Fri, 09 Feb 2024 11:18:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gregegan.net/PERMUTATION/Permutation.html">https://www.gregegan.net/PERMUTATION/Permutation.html</a>, See on <a href="https://news.ycombinator.com/item?id=39313696">Hacker News</a></p>
<div id="readability-page-1" class="page">

<h2>by Greg Egan</h2>

<!-- *Substitute NavBar --><ul>
<li><a href="https://www.gregegan.net/PERMUTATION/Excerpt/PermutationExcerpt.html"><span><b>Permutation City</b> excerpt</span></a> | <a href="https://www.gregegan.net/PERMUTATION/FAQ/FAQ.html"><span>Dust Theory FAQ</span></a></li>
<li><a href="https://www.gregegan.net/ALLSKIES/AllSkies.html"><span><b>The Book of All Skies</b></span></a> | <a href="https://www.gregegan.net/BORDER/Border.html"><span>“Border Guards”</span></a> | <a href="https://www.gregegan.net/DIASPORA/DIASPORA.html"><span><b>Diaspora</b></span></a> | <a href="https://www.gregegan.net/DICHRONAUTS/DICHRONAUTS.html"><span><b>Dichronauts</b></span></a> | <a href="https://www.gregegan.net/DIDICOSM/Didicosm.html"><span>“Didicosm”</span></a> | <a href="https://www.gregegan.net/DISTRESS/DISTRESS.html"><span><b>Distress</b></span></a> | <a href="https://www.gregegan.net/ESSAYS/Essays.html"><span>Essays</span></a> | <a href="https://www.gregegan.net/FOUNDATIONS/index.html"><span><i>Foundations</i></span></a> | <a href="https://www.gregegan.net/HORROR/Horror.html"><span>Horror Stories</span></a> | <a href="https://www.gregegan.net/INCANDESCENCE/Incandescence.html"><span><b>Incandescence</b></span></a> | <a href="https://www.gregegan.net/MISC/Misc.html"><span>Miscellaneous Fiction</span></a> | <a href="https://www.gregegan.net/OCEANIC/Oceanic.html"><span>“Oceanic”</span></a> | <a href="https://www.gregegan.net/ORTHOGONAL/ORTHOGONAL.html"><span><b>Orthogonal</b></span></a> | <span><b>Permutation City</b></span> | <a href="https://www.gregegan.net/PLANCK/Planck.html"><span>“The Planck Dive”</span></a> | <a href="https://www.gregegan.net/QUARANTINE/Quarantine.html"><span><b>Quarantine</b></span></a> | <a href="https://www.gregegan.net/SCALE/SCALE.html"><span><b>Scale</b></span></a> | <a href="https://www.gregegan.net/SCHILD/SCHILD.html"><span><b>Schild’s Ladder</b></span></a> | <a href="https://www.gregegan.net/SCIENCE/Science.html"><span>Science Notes</span></a> | <a href="https://www.gregegan.net/TERANESIA/TERANESIA.html"><span><b>Teranesia</b></span></a> | <a href="https://www.gregegan.net/ZENDEGI/ZENDEGI.html"><span><b>Zendegi</b></span></a></li>
<li><a href="https://www.gregegan.net/index.html"><span>Back to home page</span></a> | <a href="https://www.gregegan.net/SiteMap.html#d17_1" target="_top"><span>Site Map</span></a> | <a href="https://www.gregegan.net/SMFrame.html" target="_top"><span>Side-bar Site Map</span></a></li>
</ul><!-- *EndSubstitute -->
<hr>
<h3>Synopsis</h3>
<blockquote><p><span>P</span>aul uncovered his eyes, and looked around the room.
Away from a few dazzling patches of direct sunshine,
everything glowed softly in the diffuse light:  the matte white brick walls,
the imitation (imitation) mahogany furniture; even the posters – Bosch, Dali, Ernst,
and Giger – looked harmless, domesticated.  Wherever he turned his gaze (if nowhere
else), the simulation was utterly convincing; the spotlight of his attention made
it so.  Hypothetical light rays were being traced backwards from individual rod
and cone cells on his simulated retinas, and projected out into the virtual environment
to determine exactly what needed to be computed:  a lot of detail near the centre
of his vision, much less towards the periphery.  Objects out of sight didn’t
“vanish” entirely, if they influenced the ambient light, but Paul knew that
the calculations would rarely be pursued beyond the crudest first-order approximations:
Bosch’s <i>Garden of Earthly Delights</i> reduced to an average reflectance value,
a single grey rectangle – because once his back was turned, any more detail
would have been wasted.  Everything in the room was as finely resolved, at
any given moment, as it needed to be to fool him – no more, no less.</p></blockquote>
<p>Paul Durham keeps making Copies of himself:  software simulations of his own brain and
body which can be run in virtual reality, albeit seventeen times more slowly than
real time.
He wants them to be his guinea pigs for a set of experiments about the nature of
artificial intelligence, time, and causality, but they keep changing their mind and
baling out on him, shutting themselves down.</p>
<p>Maria Deluca is an Autoverse addict; she’s unemployed and running out of money, but
she can’t stop wasting her time playing around with the cellular automaton known as the
Autoverse, a virtual world that follows a simple set of
mathematical rules as its “laws of physics”.</p>
<p>Paul makes Maria a very strange offer:  he asks her to design a seed for an entire
virtual biosphere able to exist inside the Autoverse, modelled right down to the molecular
level.  The job will pay well, and will allow her to indulge her obsession.  There has
to be a catch, though, because such a seed would be useless without a simulation of the
Autoverse large enough to allow the resulting biosphere to grow and flourish —
a feat far beyond the capacity of all the computers in the world.</p>
<hr>
<!-- *Substitute history --><div><h3>Publication history</h3><ul><li>Orion/Millennium, London, 1994. ISBN 1-85798-174-X (hb) ISBN 1-85798-175-8 (tpb) — 1995. ISBN 1-85798-218-5 (pb) — 1998. ISBN 0-75281-649-7 (pb, reissue) — 2008. ISBN 0575082070 / ISBN13 978-0575082076 (pb, reissue)</li>
<li><b>CyberCity</b>, Bastei Lübbe, Bergisch Gladbach, 1995. Translated by Axel Merz and Jürgen Martin. ISBN 3-40424-200-9 (pb) (German translation)</li>
<li><span>HarperPrism, New York, 1995. ISBN 0-06105-481-X (pb) [Out of print; see reissue by Night Shade Books below.]</span></li>
<li><span><b>La cité des permutants</b>, Robert Laffont/Ailleurs et Demain, Paris, 1996. Translated by Bernard Sigaud. ISBN 2-22108-177-3 (tpb) — Livre de Poche, 1999. ISBN13 978-2253072249 (pb) [Out of print; see reissue by le Bélial’ below.] (French translation)</span></li>
<li>Shake Edizioni, Milan, 1998. Translated by Giancarlo Carlotti. ISBN 8-88692-649-9 (Italian translation)</li>
<li><b>Ciudad permutación</b>, Ediciones B, Barcelona, 1998. Translated by Pedro Jorge Romero. ISBN 8-44068-567-X — 2009. ISBN-13 9788498720853 (pb) (Spanish translation)</li>
<li>Hayakawa, Tokyo, 1999. Translated by Makoto Yamagishi. ISBN 4-15011-289-4, ISBN 4-15011-290-8 (pb, two volumes) (Japanese translation)</li>
<li><b>Mesto Permutací</b>, Návrat, Brno, 2002. Translated by Petr Kotrle. ISBN 8-07174-502-2 (Czech translation)</li>
<li><b>Miasto Permutacji</b>, Solaris, Stawiguda, 2007. Translated by Konrad Kozlowski. ISBN13 978-83-89951-46-5 (Polish translation)</li>
<li><a href="https://www.amazon.co.uk/dp/B004JHY84E" target="_top">Amazon Kindle (UK)</a>,  <a href="https://www.amazon.com.au/dp/B004JHY84E" target="_top">Amazon Kindle (Australia)</a> etc.,  Orion/Gollancz, London, 2010.</li>
<li><a href="https://www.amazon.com/dp/B00FDWCPV2" target="_top">Amazon Kindle (USA)</a>,  Greg Egan, 2013.</li>
<li><a href="https://books.apple.com/us/book/isbn9781922240019" target="_top">Apple Books (USA)</a>, Greg Egan, 2013.</li>
<li>Night Shade Books, New York, 2014. ISBN13 978-1597805391 (pb)</li>
<li><b>Город Перестановок</b>, AST, Moscow, 2016. Translated by В. Заря. ISBN13 978-5170913053 (pb)  (Russian translation)</li>
<li><a href="https://www.barnesandnoble.com/w/permutation-city-greg-egan/1000288072?ean=2940154009581" target="_top">Barnes and Noble Nook (USA)</a>, Greg Egan, 2017.</li>
<li><a href="https://www.kobo.com/us/en/ebook/permutation-city-3" target="_top">Kobo (USA)</a>, Greg Egan, 2017.</li>
<li><a href="https://www.smashwords.com/books/view/702751" target="_top">Smashwords (USA)</a>, Greg Egan, 2017.</li>
<li><a href="https://play.google.com/store/books/details?id=mspFEAAAQBAJ" target="_top">Google Play (USA)</a>,  Greg Egan, 2021.</li>
<li><b>La cité des permutants</b>, le Bélial’, Saint-Mammès, 2022. Translated by Bernard Sigaud. ISBN13 978-2381630557 (French translation)</li>
</ul></div><!-- *EndSubstitute -->
<!-- *Substitute future --><!-- *EndSubstitute -->
<a id="CONTENTS"></a>
<hr>
<h3>Information and illustrations</h3>
<!-- *Substitute Contents --><ul><li><a href="https://www.gregegan.net/PERMUTATION/Excerpt/PermutationExcerpt.html">Permutation City excerpt</a><sup> </sup></li><li><a href="https://www.gregegan.net/PERMUTATION/FAQ/FAQ.html">Dust Theory FAQ</a><sup> </sup></li></ul><!-- *EndSubstitute -->
<hr>
<!-- *Substitute NavBar --><ul>
<li><a href="https://www.gregegan.net/PERMUTATION/Excerpt/PermutationExcerpt.html"><span><b>Permutation City</b> excerpt</span></a> | <a href="https://www.gregegan.net/PERMUTATION/FAQ/FAQ.html"><span>Dust Theory FAQ</span></a></li>
<li><a href="https://www.gregegan.net/ALLSKIES/AllSkies.html"><span><b>The Book of All Skies</b></span></a> | <a href="https://www.gregegan.net/BORDER/Border.html"><span>“Border Guards”</span></a> | <a href="https://www.gregegan.net/DIASPORA/DIASPORA.html"><span><b>Diaspora</b></span></a> | <a href="https://www.gregegan.net/DICHRONAUTS/DICHRONAUTS.html"><span><b>Dichronauts</b></span></a> | <a href="https://www.gregegan.net/DIDICOSM/Didicosm.html"><span>“Didicosm”</span></a> | <a href="https://www.gregegan.net/DISTRESS/DISTRESS.html"><span><b>Distress</b></span></a> | <a href="https://www.gregegan.net/ESSAYS/Essays.html"><span>Essays</span></a> | <a href="https://www.gregegan.net/FOUNDATIONS/index.html"><span><i>Foundations</i></span></a> | <a href="https://www.gregegan.net/HORROR/Horror.html"><span>Horror Stories</span></a> | <a href="https://www.gregegan.net/INCANDESCENCE/Incandescence.html"><span><b>Incandescence</b></span></a> | <a href="https://www.gregegan.net/MISC/Misc.html"><span>Miscellaneous Fiction</span></a> | <a href="https://www.gregegan.net/OCEANIC/Oceanic.html"><span>“Oceanic”</span></a> | <a href="https://www.gregegan.net/ORTHOGONAL/ORTHOGONAL.html"><span><b>Orthogonal</b></span></a> | <span><b>Permutation City</b></span> | <a href="https://www.gregegan.net/PLANCK/Planck.html"><span>“The Planck Dive”</span></a> | <a href="https://www.gregegan.net/QUARANTINE/Quarantine.html"><span><b>Quarantine</b></span></a> | <a href="https://www.gregegan.net/SCALE/SCALE.html"><span><b>Scale</b></span></a> | <a href="https://www.gregegan.net/SCHILD/SCHILD.html"><span><b>Schild’s Ladder</b></span></a> | <a href="https://www.gregegan.net/SCIENCE/Science.html"><span>Science Notes</span></a> | <a href="https://www.gregegan.net/TERANESIA/TERANESIA.html"><span><b>Teranesia</b></span></a> | <a href="https://www.gregegan.net/ZENDEGI/ZENDEGI.html"><span><b>Zendegi</b></span></a></li>
<li><a href="https://www.gregegan.net/index.html"><span>Back to home page</span></a> | <a href="https://www.gregegan.net/SiteMap.html#d17_1" target="_top"><span>Site Map</span></a> | <a href="https://www.gregegan.net/SMFrame.html" target="_top"><span>Side-bar Site Map</span></a></li>
</ul><!-- *EndSubstitute -->
<hr>
 <!-- *Substitute Address -->
<address>Permutation City / created Sunday, 11 March 2007</address><!-- *EndSubstitute -->
<!-- *Substitute Copyright --><i>Copyright © <a href="https://www.gregegan.net/images/GregEgan.htm">Greg Egan</a>, 2007.  All rights reserved.</i><!-- *EndSubstitute -->


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Russian troops use Starlink licensed and imported from Dubai (221 pts)]]></title>
            <link>https://bulgarianmilitary.com/2024/02/08/russian-troops-use-starlink-licensed-and-imported-from-dubai/</link>
            <guid>39313074</guid>
            <pubDate>Fri, 09 Feb 2024 09:27:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bulgarianmilitary.com/2024/02/08/russian-troops-use-starlink-licensed-and-imported-from-dubai/">https://bulgarianmilitary.com/2024/02/08/russian-troops-use-starlink-licensed-and-imported-from-dubai/</a>, See on <a href="https://news.ycombinator.com/item?id=39313074">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<p>Reports are currently surfacing that Starlink is being leveraged increasingly by opposition forces on the front lines. According to the information provided by the Ukrainian military, authorized accounts and terminals are arriving in Russia via Dubai, and they are fully operational within contested regions. This situation is mirrored by the anecdotes shared by Ukrainian soldiers on various social media platforms.&nbsp;</p>


 <div>
<figure><img fetchpriority="high" decoding="async" width="640" height="360" src="https://bulgarianmilitary.com/wp-content/uploads/2024/02/Russian-military-use-Starlink-imported-from-Dubai-and-licensed.jpg" alt="Russian military use Starlink imported from Dubai and licensed" srcset="https://bulgarianmilitary.com/wp-content/uploads/2024/02/Russian-military-use-Starlink-imported-from-Dubai-and-licensed.jpg 640w, https://bulgarianmilitary.com/wp-content/uploads/2024/02/Russian-military-use-Starlink-imported-from-Dubai-and-licensed-300x169.jpg 300w" sizes="(max-width: 640px) 100vw, 640px"><figcaption>Photo by Yasuyoshi Chiba</figcaption></figure></div>


 <ul>
<li><a href="https://bulgarianmilitary.com/category/military-conflicts/ukraine-russia/">24/7 BulgarianMilitary.com – all you need to know about Ukrainian – Russian war</a></li>
</ul>



 <p><em>“The game has certainly changed. We’re noticing their Starlinks now more than ever. To be honest, I’m surprised it didn’t happen sooner. They’ve been shipping massive quantities of Starlinks to Russia through Dubai. These accounts are active and are being used within territories they control,”</em> says one of the shared messages.&nbsp;</p>



 <p>The reports suggest that the opponents have administered Starlink in the past but on a&nbsp;much smaller scale. Alongside this information, Ukrainian soldiers have reported significantly slower internet speeds at the frontline.<em> “I’ve noticed that many are experiencing issues. It’s a&nbsp;common trend in this sector. In Spring, the same number of people were using Starlink in Avdeevka without any issues, but now…”</em>, says one soldier. The proof of these issues is backed up by screenshots showing internet speed tests with results as low as 0.3Mbps.</p>



 <h2>‘Fried’ Starlink systems</h2>



 <p>The Armed Forces of Russia have reportedly begun deploying electronic warfare [EW] systems within Avdiivka in the Donetsk People’s Republic [DPR]. This move has resulted in a&nbsp;significant disruption of the Starlink satellite communication network, causing a&nbsp;total internet blackout in Avdiivka, AviaPro reported. This situation has garnered substantial coverage by Western and Ukrainian news outlets.&nbsp;</p>



 <p>Starlink had become an indispensable tool for the Ukrainian forces, allowing them to carry out smooth communication and coordination as part of their network-centric warfare approach. However, the effective deployment of Russian electronic warfare systems has noticeably disrupted the Ukrainian troops’ command and control system in Avdiivka. This strategic move has impaired the exchange of intelligence and orders from their Western allies and Kyiv.&nbsp;</p>


 <div>
<figure><img decoding="async" width="640" height="360" src="" data-src="https://bulgarianmilitary.com/wp-content/uploads/2022/08/Poland-donated-5000-Starlink-satellite-terminals-to-Ukraine.jpg" alt="Poland donated 5,000 Starlink satellite terminals to Ukraine" srcset="https://bulgarianmilitary.com/wp-content/uploads/2022/08/Poland-donated-5000-Starlink-satellite-terminals-to-Ukraine.jpg 640w, https://bulgarianmilitary.com/wp-content/uploads/2022/08/Poland-donated-5000-Starlink-satellite-terminals-to-Ukraine-300x169.jpg 300w" sizes="(max-width: 640px) 100vw, 640px"><figcaption>Photo credit: HDBlog</figcaption></figure></div>


 <p>Because of these electronic countermeasures, the communication chain between the Ukrainian leadership and their field units has been significantly affected. Ukrainian commanders have temporarily lost their immediate connection for information exchange with their high command. This disruption now compels them to seek ways to reestablish communications outside the scope of the electronic warfare coverage area.&nbsp;</p>



 <p>Furthermore, the Russian military has initiated steps towards physically eliminating discovered Starlink terminals within the territories they control. This operation marks the first large-scale and complex application of electronic warfare against the Starlink system, echoing the successes seen previously in the Zaporizhzhia direction. Specifically, in the Orekhov region of Zaporizhzhia, several command-and-control bunkers housing Starlink terminals were eradicated.</p>



 <h2>2022 Russian invasion of Ukraine</h2>



 <p>On February 21, 2022, Russia stated that its border facility was attacked by Ukrainian forces, resulting in the deaths of five Ukrainian fighters. However, Ukraine quickly dismissed these allegations, labeling them as<em> ‘false flags’</em>.</p>



 <p>In a notable move on the same day, Russia announced it officially recognized the self-proclaimed areas of DPR and LPR. Interestingly, according to Russian President Putin, this recognition covered all the Ukrainian regions. Following this declaration, Putin sent a battalion of Russia’s military forces, tanks included, into these areas.</p>



 <p>Fast forward to February 24, 2022, global headlines were dominated by a&nbsp;significant incident. Putin commanded a&nbsp;forceful military assault on Ukraine. Led by Russia’s impressive Armed Forces positioned at the Ukrainian border, this assault wasn’t spontaneous but a&nbsp;premeditated action.&nbsp;Despite the circumstances resembling a&nbsp;war, the Russian government refrains from using this term. They’d rather refer to it as a&nbsp;<em>“special military operation”.</em></p>



 <p>***</p>



 <p><em>Follow us everywhere and at any time. BulgarianMilitary.com has responsive design and you can open the page from any computer, mobile devices or web browsers. For more up-to-date news, follow our <a href="https://news.google.com/publications/CAAiEBDrerMz-xJjUQPrEZo2tmEqFAgKIhAQ63qzM_sSY1ED6xGaNrZh?hl=en-GB&amp;gl=GB&amp;ceid=GB%3Aen" target="_blank" rel="noreferrer noopener">Google News</a>, <a href="https://www.youtube.com/c/bulgarianmilitarycom" target="_blank" rel="noreferrer noopener">YouTube</a>, <a href="https://www.reddit.com/r/MilitaryAndDefense/" target="_blank" rel="noreferrer noopener">Reddit</a>, <a href="https://www.linkedin.com/company/bulgarian-military-industry-review/" target="_blank" rel="noreferrer noopener">LinkedIn</a>, <a href="https://twitter.com/BGMilitary" target="_blank" rel="noreferrer noopener">Twitter </a>and <a href="https://www.facebook.com/bulgarianmilitary" target="_blank" rel="noreferrer noopener">Facebook</a>&nbsp;pages. Our standards: <a href="https://bulgarianmilitary.com/about-us/" target="_blank" rel="noreferrer noopener">Manifesto &amp; ethical principles</a></em>.</p> 			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gemini can't show me the fastest way to copy memory in C# because it's unethical (206 pts)]]></title>
            <link>https://twitter.com/garrynewman/status/1755851884047303012</link>
            <guid>39312896</guid>
            <pubDate>Fri, 09 Feb 2024 09:00:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/garrynewman/status/1755851884047303012">https://twitter.com/garrynewman/status/1755851884047303012</a>, See on <a href="https://news.ycombinator.com/item?id=39312896">Hacker News</a></p>
Couldn't get https://twitter.com/garrynewman/status/1755851884047303012: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[Figure out who's leaving the company: dump, diff, repeat (546 pts)]]></title>
            <link>https://rachelbythebay.com/w/2024/02/08/ldap/</link>
            <guid>39311507</guid>
            <pubDate>Fri, 09 Feb 2024 04:46:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rachelbythebay.com/w/2024/02/08/ldap/">https://rachelbythebay.com/w/2024/02/08/ldap/</a>, See on <a href="https://news.ycombinator.com/item?id=39311507">Hacker News</a></p>
Couldn't get https://rachelbythebay.com/w/2024/02/08/ldap/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[What's new in the Postgres 16 query planner (247 pts)]]></title>
            <link>https://www.citusdata.com/blog/2024/02/08/whats-new-in-postgres-16-query-planner-optimizer/</link>
            <guid>39310837</guid>
            <pubDate>Fri, 09 Feb 2024 02:52:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.citusdata.com/blog/2024/02/08/whats-new-in-postgres-16-query-planner-optimizer/">https://www.citusdata.com/blog/2024/02/08/whats-new-in-postgres-16-query-planner-optimizer/</a>, See on <a href="https://news.ycombinator.com/item?id=39310837">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article-header">  <p> <small> <span>Written by</span> <a href="https://www.citusdata.com/blog/authors/david-rowley/"><strong>David Rowley</strong></a> <br> February 8, 2024 </small> </p> </div><div data-sticky-container=""> <p>PostgreSQL 16 introduces quite a few improvements to the query planner and makes many SQL queries run faster than they did on previous versions of PostgreSQL.</p> <p>If you look at the <a href="https://www.postgresql.org/docs/16/release-16.html">PG16 release notes</a>, you’ll see some of these planner improvements. But with the volume of changes made in each PostgreSQL release, it’s not possible to provide enough detail about each and every change. So maybe you might need a bit more detail to know what the change is about—before you understand if it’s relevant to you.</p> <p>In this blog post, assuming you’ve already got a handle on the <a href="https://www.postgresql.org/docs/16/using-explain.html#USING-EXPLAIN-BASICS">basics of EXPLAIN</a>, you’ll get a deep dive into the 10 improvements made in the PostgreSQL 16 query planner. For each of the improvements to the PG16 planner (the planner is often called an optimizer in other relational databases), you’ll also get comparisons between PG15 and PG16 planner output—plus examples of what changed, in the form of a self-contained test you can try for yourself. </p> <p>Let’s dive into these 10 improvements to the PostgreSQL planner in PG16:</p> <ol> <li><a href="#distinct-queries">Incremental sorts for DISTINCT queries</a></li> <li><a href="#faster-orderby-distinct">Faster ORDER BY / DISTINCT aggregates</a></li> <li><a href="#union-all">Memoize for UNION ALL queries</a></li> <li><a href="#right-anti-join">Support Right Anti Join</a></li> <li><a href="#parallel-hashfull-rightjoin">Parallel Hash Full and Right Joins</a></li> <li><a href="#frame-clauses">Optimize window function frame clauses</a></li> <li><a href="#window-functions">Optimize various window functions</a></li> <li><a href="#join-removals">JOIN removals for partitioned tables</a></li> <li><a href="#short-circuit">Short circuit trivial DISTINCT queries</a></li> <li><a href="#merge-joins">Incremental Sort after Merge Join, in more cases</a></li> </ol> <h2 id="distinct-queries">1. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=3c6fc58209f24b959ee18f5d19ef96403d08f15c">Allow incremental sorts in more cases, including DISTINCT (David Rowley)</a></h2> <p><a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=d2d8a229bc58a2014dce1c7a4fcdb6c5ab9fb8da">Incremental sorts</a> were first added in PostgreSQL 13. These incremental sorts reduce the effort required to get sorted results. How? By exploiting the knowledge that some given result set is already sorted by 1 or more leading columns—and only performing a sort on the remaining columns.</p> <p>For example, if there’s a btree index on column <code>a</code> and we need the rows ordered by <code>a</code>,<code>b</code>, then we can use the btree index (which provides presorted results on column <code>a</code>) and sort the rows seen so far only when the value of <code>a</code> changes. With the quicksort algorithm used by PostgreSQL, sorting many smaller groups is more efficient than sorting one large group.</p> <p>The PostgreSQL 16 query planner now considers performing incremental sorts for <code>SELECT DISTINCT</code> queries. Prior to PG16, when the sorting method was chosen for <code>SELECT DISTINCT</code> queries, the planner only considered performing a full sort (which is more expensive than an incremental sort.)</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>distinct_test</span> <span>(</span><span>a</span> <span>INT</span><span>,</span> <span>b</span> <span>INT</span><span>);</span>
<span>INSERT</span> <span>INTO</span> <span>distinct_test</span>
<span>SELECT</span> <span>x</span><span>,</span><span>1</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>1000000</span><span>)</span><span>x</span><span>;</span>
<span>CREATE</span> <span>INDEX</span> <span>on</span> <span>distinct_test</span><span>(</span><span>a</span><span>);</span>
<span>VACUUM</span> <span>ANALYZE</span> <span>distinct_test</span><span>;</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>DISTINCT</span> <span>a</span><span>,</span><span>b</span> <span>FROM</span> <span>distinct_test</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                          QUERY PLAN
---------------------------------------------------------------
 HashAggregate (actual rows=1000000 loops=1)
   Group Key: a, b
   Batches: 81  Memory Usage: 11153kB  Disk Usage: 31288kB
   -&gt;  Seq Scan on distinct_test (actual rows=1000000 loops=1)
 Planning Time: 0.065 ms
 Execution Time: 414.226 ms
(6 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                          QUERY PLAN
------------------------------------------------------------------
 Unique (actual rows=1000000 loops=1)
   -&gt;  Incremental Sort (actual rows=1000000 loops=1)
         Sort Key: a, b
         Presorted Key: a
         Full-sort Groups: 31250  Sort Method: quicksort  Average Memory: 26kB  Peak Memory: 26kB
         -&gt;  Index Scan using distinct_test_a_idx on distinct_test (actual rows=1000000 loops=1)
 Planning Time: 0.108 ms
 Execution Time: 263.167 ms
(8 rows)
</code></pre></div> <p>In the PostgreSQL 16 <code>EXPLAIN</code> output above, you can see the planner chose to use the <code>distinct_test_a_idx</code> index on the <code>a</code> column and then performed an <code>Incremental Sort</code> to sort all of the equal values of <code>a</code> by <code>b</code>. The <code>Presorted Key: a</code> indicates this. Because the <code>INSERT</code> statements above only added a single value of <code>b</code> for each value of <code>a</code>, each batch of tuples sorted by incremental sort only contains a single row.</p> <p>The <code>EXPLAIN</code> output for PostgreSQL 16 above shows that the <code>Peak Memory</code> for the <code>Incremental Sort</code> was just 26 kilobytes, whereas the hashing method used by PostgreSQL 15 needed much memory, so much so that it needed to spill about 30 megabytes of data to disk. <strong>The query executed 63% faster on PostgreSQL 16</strong>.</p> <h2 id="faster-orderby-distinct">2. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=1349d2790bf48a4de072931c722f39337e72055e">Add the ability for aggregates having ORDER BY or DISTINCT to use pre-sorted data (David Rowley)</a></h2> <p>In PostgreSQL 15 and earlier, aggregate functions containing an <code>ORDER BY</code> or <code>DISTINCT</code> clause would result in the executor always performing a sort inside the <code>Aggregate</code> node of the plan. Because the sort was always performed, the planner would never try to form a plan to provide presorted input to aggregate the rows in order.</p> <p>The PostgreSQL 16 query planner now tries to form a plan which feeds the rows to the plan’s <code>Aggregate</code> node in the correct order. And the executor is now smart enough to recognize this and forego performing the sort itself when the rows are already pre-sorted in the correct order.</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>aggtest</span> <span>(</span><span>a</span> <span>INT</span><span>,</span> <span>b</span> <span>text</span><span>);</span>
<span>INSERT</span> <span>INTO</span> <span>aggtest</span> <span>SELECT</span> <span>a</span><span>,</span><span>md5</span><span>((</span><span>b</span><span>%</span><span>100</span><span>)::</span><span>text</span><span>)</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>10</span><span>)</span> <span>a</span><span>,</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>100000</span><span>)</span><span>b</span><span>;</span>
<span>CREATE</span> <span>INDEX</span> <span>ON</span> <span>aggtest</span><span>(</span><span>a</span><span>,</span><span>b</span><span>);</span>
<span>VACUUM</span> <span>FREEZE</span> <span>ANALYZE</span> <span>aggtest</span><span>;</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>,</span> <span>BUFFERS</span><span>)</span>
<span>SELECT</span> <span>a</span><span>,</span><span>COUNT</span><span>(</span><span>DISTINCT</span> <span>b</span><span>)</span> <span>FROM</span> <span>aggtest</span> <span>GROUP</span> <span>BY</span> <span>a</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                          QUERY PLAN
---------------------------------------------------------------
 GroupAggregate (actual rows=10 loops=1)
   Group Key: a
   Buffers: shared hit=892, temp read=4540 written=4560
   -&gt;  Index Only Scan using aggtest_a_b_idx on aggtest (actual rows=1000000 loops=1)
         Heap Fetches: 0
         Buffers: shared hit=892
 Planning Time: 0.122 ms
 Execution Time: 302.693 ms
(8 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                          QUERY PLAN
---------------------------------------------------------------
 GroupAggregate (actual rows=10 loops=1)
   Group Key: a
   Buffers: shared hit=892
   -&gt;  Index Only Scan using aggtest_a_b_idx on aggtest (actual rows=1000000 loops=1)
         Heap Fetches: 0
         Buffers: shared hit=892
 Planning Time: 0.061 ms
 Execution Time: 115.534 ms
(8 rows)
</code></pre></div> <p>Aside from PostgreSQL 16 executing the query over twice as fast as in PG15, the only indication of this change in the <code>EXPLAIN ANALYZE</code> output above is from the <code>temp read=4540 written=4560</code> that’s not present in the PostgreSQL 16 output. In PG15, this is caused by the implicit sort spilling to disk.</p> <h2 id="union-all">3. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=9bfd2822b3201f6b0de1e87305b11ee3885b36d9">Allow memoize atop a UNION ALL (Richard Guo)</a></h2> <p><code>Memoize</code> plan nodes were first introduced in PostgreSQL 14. The <code>Memoize</code> plan node acts as a cache layer between a parameterized <code>Nested Loop</code> and the Nested Loop’s inner side. When the same value needs to be looked up several times, Memoize can give a nice performance boost as it can skip executing its subnode when the required rows have been queried already and are cached.</p> <p>The PostgreSQL 16 query planner will now consider using <code>Memoize</code> when a <code>UNION ALL</code> query appears on the inner side of a parameterized <code>Nested Loop</code>.</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>t1</span> <span>(</span><span>a</span> <span>INT</span> <span>PRIMARY</span> <span>KEY</span><span>);</span>
<span>CREATE</span> <span>TABLE</span> <span>t2</span> <span>(</span><span>a</span> <span>INT</span> <span>PRIMARY</span> <span>KEY</span><span>);</span>
<span>CREATE</span> <span>TABLE</span> <span>lookup</span> <span>(</span><span>a</span> <span>INT</span><span>);</span>

<span>INSERT</span> <span>INTO</span> <span>t1</span> <span>SELECT</span> <span>x</span> <span>FROM</span> <span>generate_Series</span><span>(</span><span>1</span><span>,</span><span>10000</span><span>)</span> <span>x</span><span>;</span>
<span>INSERT</span> <span>INTO</span> <span>t2</span> <span>SELECT</span> <span>x</span> <span>FROM</span> <span>generate_Series</span><span>(</span><span>1</span><span>,</span><span>10000</span><span>)</span> <span>x</span><span>;</span>
<span>INSERT</span> <span>INTO</span> <span>lookup</span> <span>SELECT</span> <span>x</span><span>%</span><span>10</span><span>+</span><span>1</span> <span>FROM</span> <span>generate_Series</span><span>(</span><span>1</span><span>,</span><span>1000000</span><span>)</span><span>x</span><span>;</span>

<span>ANALYZE</span> <span>t1</span><span>,</span><span>t2</span><span>,</span><span>lookup</span><span>;</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>*</span> <span>FROM</span> <span>(</span><span>SELECT</span> <span>*</span> <span>FROM</span> <span>t1</span> <span>UNION</span> <span>ALL</span> <span>SELECT</span> <span>*</span> <span>FROM</span> <span>t2</span><span>)</span> <span>t</span>
<span>INNER</span> <span>JOIN</span> <span>lookup</span> <span>l</span> <span>ON</span> <span>l</span><span>.</span><span>a</span> <span>=</span> <span>t</span><span>.</span><span>a</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                                  QUERY PLAN
-------------------------------------------------------------------------------
 Nested Loop (actual rows=2000000 loops=1)
   -&gt;  Seq Scan on lookup l (actual rows=1000000 loops=1)
   -&gt;  Append (actual rows=2 loops=1000000)
         -&gt;  Index Only Scan using t1_pkey on t1 (actual rows=1 loops=1000000)
               Index Cond: (a = l.a)
               Heap Fetches: 1000000
         -&gt;  Index Only Scan using t2_pkey on t2 (actual rows=1 loops=1000000)
               Index Cond: (a = l.a)
               Heap Fetches: 1000000
 Planning Time: 0.223 ms
 Execution Time: 1926.151 ms
(11 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                                   QUERY PLAN
---------------------------------------------------------------------------------
 Nested Loop (actual rows=2000000 loops=1)
   -&gt;  Seq Scan on lookup l (actual rows=1000000 loops=1)
   -&gt;  Memoize (actual rows=2 loops=1000000)
         Cache Key: l.a
         Cache Mode: logical
         Hits: 999990  Misses: 10  Evictions: 0  Overflows: 0  Memory Usage: 2kB
         -&gt;  Append (actual rows=2 loops=10)
               -&gt;  Index Only Scan using t1_pkey on t1 (actual rows=1 loops=10)
                     Index Cond: (a = l.a)
                     Heap Fetches: 10
               -&gt;  Index Only Scan using t2_pkey on t2 (actual rows=1 loops=10)
                     Index Cond: (a = l.a)
                     Heap Fetches: 10
 Planning Time: 0.229 ms
 Execution Time: 282.120 ms
(15 rows)
</code></pre></div> <p>In the PostgreSQL 16 EXPLAIN output above, you can see the <code>Memoize</code> node is put atop of the <code>Append</code> node—which caused a reduction in the number of <code>loops</code> in the <code>Append</code> from 1 million in PG15 down to 10 in PG16. Each time the <code>Memoize</code> node has a cache hit, there’s no need to execute the <code>Append</code> to fetch records. This results in the <strong>query running around 6 times faster on PostgreSQL 16</strong>.</p> <h2 id="right-anti-join">4. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=16dc2703c5413534d4989e08253e8f4fcb0e2aab">Allow anti-joins to be performed with the non-nullable input as the inner relation (Richard Guo)</a></h2> <p>When performing a <code>Hash Join</code> for an <code>INNER JOIN</code>, PostgreSQL prefers to build the hash table on the smaller of the two tables. Smaller hash tables are better as it’s less work to build them. Smaller tables are also better as they’re more cache-friendly for the CPU, and it’s less likely that the CPU will stall while waiting for data to arrive from main memory.</p> <p>In PostgreSQL versions before 16, an <code>Anti Join</code>—as you might see if you use <code>NOT EXISTS</code> in your queries—would always put the table mentioned in the <code>NOT EXISTS</code> part on the inner side of the join. This meant there was no flexibility to hash the smaller of the two tables, resulting in possibly having to build a hash table on the larger table.</p> <p>The PostgreSQL 16 query planner can now choose to hash the smaller of the two tables. This can now be done because PostgreSQL 16 supports <code>Right Anti Join</code>.</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>small</span><span>(</span><span>a</span> <span>int</span><span>);</span>
<span>CREATE</span> <span>TABLE</span> <span>large</span><span>(</span><span>a</span> <span>int</span><span>);</span>
<span>INSERT</span> <span>INTO</span> <span>small</span>
<span>SELECT</span> <span>a</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>100</span><span>)</span> <span>a</span><span>;</span>
<span>INSERT</span> <span>INTO</span> <span>large</span>
<span>SELECT</span> <span>a</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>1000000</span><span>)</span> <span>a</span><span>;</span>
<span>VACUUM</span> <span>ANALYZE</span> <span>small</span><span>,</span><span>large</span><span>;</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>*</span> <span>FROM</span> <span>small</span> <span>s</span>
<span>WHERE</span> <span>NOT</span> <span>EXISTS</span><span>(</span><span>SELECT</span> <span>1</span> <span>FROM</span> <span>large</span> <span>l</span> <span>WHERE</span> <span>s</span><span>.</span><span>a</span> <span>=</span> <span>l</span><span>.</span><span>a</span><span>);</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                          QUERY PLAN
---------------------------------------------------------------
 Hash Anti Join (actual rows=0 loops=1)
   Hash Cond: (s.a = l.a)
   -&gt;  Seq Scan on small s (actual rows=100 loops=1)
   -&gt;  Hash (actual rows=1000000 loops=1)
         Buckets: 262144  Batches: 8  Memory Usage: 6446kB
         -&gt;  Seq Scan on large l (actual rows=1000000 loops=1)
 Planning Time: 0.103 ms
 Execution Time: 139.023 ms
(8 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                        QUERY PLAN
-----------------------------------------------------------
 Hash Right Anti Join (actual rows=0 loops=1)
   Hash Cond: (l.a = s.a)
   -&gt;  Seq Scan on large l (actual rows=1000000 loops=1)
   -&gt;  Hash (actual rows=100 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 12kB
         -&gt;  Seq Scan on small s (actual rows=100 loops=1)
 Planning Time: 0.094 ms
 Execution Time: 77.076 ms
(8 rows)
</code></pre></div> <p>You can see from the <code>EXPLAIN ANALYZE</code> output above that due to PG16’s planner opting to use a <code>Hash Right Anti Join</code>, the <code>Memory Usage</code> in PostgreSQL 16 was much less than in PostgreSQL 15 and the <code>Execution Time</code> was almost halved.</p> <h2 id="parallel-hashfull-rightjoin">5. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=11c2d6fdf5af1aacec9ca2005543f1b0fc4cc364">Allow parallelization of FULL and internal right OUTER hash joins (Melanie Plageman, Thomas Munro)</a></h2> <p>PostgreSQL 11 saw the introduction of <code>Parallel Hash Join</code>. This allows multiple parallel workers in a parallel query to assist in the building of a single hash table. In versions prior to 11, each worker would have built its own identical hash table, resulting in additional memory overheads.</p> <p>In PostgreSQL 16, <code>Parallel Hash Join</code> has been improved and now supports <code>FULL</code> and <code>RIGHT</code> join types. This allows queries that have a <code>FULL OUTER JOIN</code> to be executed in parallel and also allows <code>Right Joins</code> plans to execute in parallel.</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>odd</span> <span>(</span><span>a</span> <span>INT</span><span>);</span>
<span>CREATE</span> <span>TABLE</span> <span>even</span> <span>(</span><span>a</span> <span>INT</span><span>);</span>
<span>INSERT</span> <span>INTO</span> <span>odd</span>
<span>SELECT</span> <span>a</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>1000000</span><span>,</span><span>2</span><span>)</span> <span>a</span><span>;</span>
<span>INSERT</span> <span>INTO</span> <span>even</span>
<span>SELECT</span> <span>a</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>2</span><span>,</span><span>1000000</span><span>,</span><span>2</span><span>)</span> <span>a</span><span>;</span>
<span>VACUUM</span> <span>ANALYZE</span> <span>odd</span><span>,</span> <span>even</span><span>;</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>COUNT</span><span>(</span><span>o</span><span>.</span><span>a</span><span>),</span><span>COUNT</span><span>(</span><span>e</span><span>.</span><span>a</span><span>)</span> <span>FROM</span> <span>odd</span> <span>o</span> <span>FULL</span> <span>JOIN</span> <span>even</span> <span>e</span> <span>ON</span> <span>o</span><span>.</span><span>a</span> <span>=</span> <span>e</span><span>.</span><span>a</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                            QUERY PLAN
-------------------------------------------------------------------
 Aggregate (actual rows=1 loops=1)
   -&gt;  Hash Full Join (actual rows=1000000 loops=1)
         Hash Cond: (o.a = e.a)
         -&gt;  Seq Scan on odd o (actual rows=500000 loops=1)
         -&gt;  Hash (actual rows=500000 loops=1)
               Buckets: 262144  Batches: 4  Memory Usage: 6439kB
               -&gt;  Seq Scan on even e (actual rows=500000 loops=1)
 Planning Time: 0.079 ms
 Execution Time: 220.677 ms
(9 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                                    QUERY PLAN
--------------------------------------------------------------------------------
 Finalize Aggregate (actual rows=1 loops=1)
   -&gt;  Gather (actual rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         -&gt;  Partial Aggregate (actual rows=1 loops=2)
               -&gt;  Parallel Hash Full Join (actual rows=500000 loops=2)
                     Hash Cond: (o.a = e.a)
                     -&gt;  Parallel Seq Scan on odd o (actual rows=250000 loops=2)
                     -&gt;  Parallel Hash (actual rows=250000 loops=2)
                           Buckets: 262144  Batches: 4  Memory Usage: 6976kB
                           -&gt;  Parallel Seq Scan on even e (actual rows=250000 loops=2)
 Planning Time: 0.161 ms
 Execution Time: 129.769 ms
(13 rows)
</code></pre></div> <p>The <code>EXPLAIN</code> output shows that PostgreSQL 16 was able to perform the join in parallel and this resulted in a significant reduction in the query’s <code>Execution Time</code>.</p> <h2 id="frame-clauses">6. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=ed1a88ddaccfe883e4cf74d30319accfeae6cfe5">Allow window functions to use faster ROWS mode when RANGE mode active but unnecessary (David Rowley)</a></h2> <p>When a query contains a window function such as <code>row_number()</code>, <code>rank()</code>, <code>dense_rank()</code>, <code>percent_rank()</code>, <code>cume_dist()</code> and <code>ntile()</code>, if the <a href="https://www.postgresql.org/docs/16/sql-expressions.html#SYNTAX-WINDOW-FUNCTIONS">window clause</a> did not specify the <code>ROWS</code>option, then PostgreSQL would always use the default <code>RANGE</code> option. The <code>RANGE</code> option causes the executor to look ahead until it finds the first “non-peer” row. A peer row is a row in the window frame which compares equally according to the window clause’s <code>ORDER BY</code> clause. When there is no <code>ORDER BY</code> clause, all rows within the window frame are peers. When processing records which have many rows which sort equally according to the window clause’s <code>ORDER BY</code> clause, the additional processing to identify these peer rows could be costly.</p> <p>The window functions mentioned above don’t behave any differently whether <code>ROWS</code> or <code>RANGE</code> is specified in the query’s window clause. However, the executor in PostgreSQL versions prior to 16 didn’t know that, and because <strong>some</strong> window functions do care about the <code>ROWS</code>/<code>RANGE</code> option, the executor had to perform checks for peer rows in all cases.</p> <p>The PostgreSQL 16 query planner knows which window functions care about the <code>ROWS</code>/<code>RANGE</code> option and it passes this information along to the executor so that it can skip the needless additional processing.</p> <p>This optimization works particularly well when <code>row_number()</code> is being used to limit the number of results in the query as shown in the example below.</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>scores</span> <span>(</span><span>id</span> <span>INT</span> <span>PRIMARY</span> <span>KEY</span><span>,</span> <span>score</span> <span>INT</span><span>);</span>
<span>INSERT</span> <span>INTO</span> <span>scores</span> <span>SELECT</span> <span>s</span><span>,</span><span>random</span><span>()</span><span>*</span><span>10</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>1000000</span><span>)</span><span>s</span><span>;</span>
<span>CREATE</span> <span>INDEX</span> <span>ON</span> <span>scores</span><span>(</span><span>score</span><span>);</span>
<span>VACUUM</span> <span>ANALYZE</span> <span>scores</span><span>;</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>*</span> <span>FROM</span> <span>(</span>
    <span>SELECT</span> <span>id</span><span>,</span><span>ROW_NUMBER</span><span>()</span> <span>OVER</span> <span>(</span><span>ORDER</span> <span>BY</span> <span>score</span><span>)</span> <span>rn</span><span>,</span><span>score</span>
    <span>FROM</span> <span>scores</span>
<span>)</span> <span>m</span> <span>WHERE</span> <span>rn</span> <span>&lt;=</span> <span>10</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                                 QUERY PLAN
-------------------------------------------------------------------------------
 WindowAgg (actual rows=10 loops=1)
   Run Condition: (row_number() OVER (?) &lt;= 10)
   -&gt;  Index Scan using scores_score_idx on scores (actual rows=50410 loops=1)
 Planning Time: 0.096 ms
 Execution Time: 29.775 ms
(5 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                                 QUERY PLAN
----------------------------------------------------------------------------
 WindowAgg (actual rows=10 loops=1)
   Run Condition: (row_number() OVER (?) &lt;= 10)
   -&gt;  Index Scan using scores_score_idx on scores (actual rows=11 loops=1)
 Planning Time: 0.191 ms
 Execution Time: 0.058 ms
(5 rows)
</code></pre></div> <p>The <code>Index Scan</code> node in the <code>EXPLAIN</code> output for PG15 above shows that 50410 rows had to be read from the <code>scores_score_idx</code> index before execution stopped. While in PostgreSQL 16, only 11 rows were read as the executor realized that once the row_number got to 11, there’d be no more rows matching the <code>&lt;= 10</code> condition. Both this and the executor using the <code>ROWS</code> window clause option led to this query running over 500 times faster on PostgreSQL 16.</p> <h2 id="window-functions">7. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=456fa635a909ee36f73ca84d340521bd730f265f">Optimize always-increasing window functions ntile(), cume_dist() and percent_rank() (David Rowley)</a></h2> <p>This change expands on work done in PostgreSQL 15. In PG15 the query planner was modified to allow the executor to stop processing <code>WindowAgg</code> executor nodes early. This can be done when an item in the <code>WHERE</code> clause filters a window function in a way that once the condition becomes false, it will never be true again.</p> <p><code>row_number()</code> is an example of a function which can offer such guarantees as it’s a monotonically increasing function, i.e. subsequent rows in the same partition will never have a row_number lower than the previous row.</p> <p>The PostgreSQL 16 query planner expands the coverage of this optimization to also cover <code>ntile()</code>, <code>cume_dist()</code> and <code>percent_rank()</code>. In PostgreSQL 15, this only worked for <code>row_number()</code>, <code>rank()</code>, <code>dense_rank()</code>, <code>count()</code> and <code>count(*)</code>.</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>marathon</span> <span>(</span><span>id</span> <span>INT</span> <span>PRIMARY</span> <span>KEY</span><span>,</span> <span>time</span> <span>INTERVAL</span> <span>NOT</span> <span>NULL</span><span>);</span>
<span>INSERT</span> <span>INTO</span> <span>marathon</span>
<span>SELECT</span> <span>id</span><span>,</span><span>'03:00:00'</span><span>::</span><span>interval</span> <span>+</span> <span>(</span><span>CAST</span><span>(</span><span>RANDOM</span><span>()</span> <span>*</span> <span>3600</span> <span>AS</span> <span>INT</span><span>)</span> <span>||</span> <span>'secs'</span><span>)::</span><span>INTERVAL</span> <span>-</span> <span>(</span><span>CAST</span><span>(</span><span>RANDOM</span><span>()</span> <span>*</span> <span>3600</span> <span>AS</span> <span>INT</span><span>)</span> <span>||</span> <span>' secs'</span><span>)::</span><span>INTERVAL</span>
<span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>50000</span><span>)</span> <span>id</span><span>;</span>
<span>CREATE</span> <span>INDEX</span> <span>ON</span> <span>marathon</span> <span>(</span><span>time</span><span>);</span>
<span>VACUUM</span> <span>ANALYZE</span> <span>marathon</span><span>;</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>*</span> <span>FROM</span> <span>(</span><span>SELECT</span> <span>*</span><span>,</span><span>percent_rank</span><span>()</span> <span>OVER</span> <span>(</span><span>ORDER</span> <span>BY</span> <span>time</span><span>)</span> <span>pr</span>
<span>FROM</span> <span>marathon</span><span>)</span> <span>m</span> <span>WHERE</span> <span>pr</span> <span>&lt;=</span> <span>0</span><span>.</span><span>01</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                              QUERY PLAN
-----------------------------------------------------------------------
 Subquery Scan on m (actual rows=500 loops=1)
   Filter: (m.pr &lt;= '0.01'::double precision)
   Rows Removed by Filter: 49500
   -&gt;  WindowAgg (actual rows=50000 loops=1)
         -&gt;  Index Scan using marathon_time_idx on marathon (actual rows=50000 loops=1)
 Planning Time: 0.108 ms
 Execution Time: 84.358 ms
(7 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                              QUERY PLAN
-----------------------------------------------------------------------
 WindowAgg (actual rows=500 loops=1)
   Run Condition: (percent_rank() OVER (?) &lt;= '0.01'::double precision)
   -&gt;  Index Scan using marathon_time_idx on marathon (actual rows=50000 loops=1)
 Planning Time: 0.180 ms
 Execution Time: 19.454 ms
(5 rows)
</code></pre></div> <p>From the PostgreSQL 16 <code>EXPLAIN</code> output above, you can see that the planner was able to use the <code>pr &lt;= 0.01</code> condition as a <code>Run Condition</code>, whereas, with PostgreSQL 15 this clause appeared as a <code>Filter</code> on the subquery. In PG16, the run condition was used to abort the execution of the <code>WindowAgg</code> node early. This resulted in the <code>Execution Time</code> in PG16 being more than 4 times faster than in PG15.</p> <h2 id="join-removals">8. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=3c569049b7b502bb4952483d19ce622ff0af5fd6">Allow left join removals and unique joins on partitioned tables (Arne Roland)</a></h2> <p>For a long time now, PostgreSQL has been able to remove a <code>LEFT JOIN</code> where no column from the left joined table was required in the query and the join could not possibly duplicate any rows.</p> <p>However, in versions prior to PostgreSQL 16, there was no support for left join removals on partitioned tables. Why? Because the proofs that the planner uses to determine if there’s any possibility any inner-side row could duplicate any outer-side row were not present for partitioned tables.</p> <p>The PostgreSQL 16 query planner now allows the <code>LEFT JOIN</code> removal optimization with partitioned tables.</p> <p>This join elimination optimization is more likely to help with views, as it’s common that not all columns that exist in a view will always be queried.</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>part_tab</span> <span>(</span><span>id</span> <span>BIGINT</span> <span>PRIMARY</span> <span>KEY</span><span>,</span> <span>payload</span> <span>TEXT</span><span>)</span> <span>PARTITION</span> <span>BY</span> <span>HASH</span><span>(</span><span>id</span><span>);</span>
<span>CREATE</span> <span>TABLE</span> <span>part_tab_p0</span> <span>PARTITION</span> <span>OF</span> <span>part_tab</span> <span>FOR</span> <span>VALUES</span> <span>WITH</span> <span>(</span><span>modulus</span> <span>2</span><span>,</span> <span>remainder</span> <span>0</span><span>);</span>
<span>CREATE</span> <span>TABLE</span> <span>part_tab_p1</span> <span>PARTITION</span> <span>OF</span> <span>part_tab</span> <span>FOR</span> <span>VALUES</span> <span>WITH</span> <span>(</span><span>modulus</span> <span>2</span><span>,</span> <span>remainder</span> <span>1</span><span>);</span>
<span>CREATE</span> <span>TABLE</span> <span>normal_table</span> <span>(</span><span>id</span> <span>INT</span><span>,</span> <span>part_tab_id</span> <span>BIGINT</span><span>);</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>nt</span><span>.</span><span>*</span> <span>FROM</span> <span>normal_table</span> <span>nt</span> <span>LEFT</span> <span>JOIN</span> <span>part_tab</span> <span>pt</span> <span>ON</span> <span>nt</span><span>.</span><span>part_tab_id</span> <span>=</span> <span>pt</span><span>.</span><span>id</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                            QUERY PLAN
-------------------------------------------------------------------
 Merge Right Join (actual rows=0 loops=1)
   Merge Cond: (pt.id = nt.part_tab_id)
   -&gt;  Merge Append (actual rows=0 loops=1)
         Sort Key: pt.id
         -&gt;  Index Only Scan using part_tab_p0_pkey on part_tab_p0 pt_1 (actual rows=0 loops=1)
               Heap Fetches: 0
         -&gt;  Index Only Scan using part_tab_p1_pkey on part_tab_p1 pt_2 (actual rows=0 loops=1)
               Heap Fetches: 0
   -&gt;  Sort (actual rows=0 loops=1)
         Sort Key: nt.part_tab_id
         Sort Method: quicksort  Memory: 25kB
         -&gt;  Seq Scan on normal_table nt (actual rows=0 loops=1)
 Planning Time: 0.325 ms
 Execution Time: 0.037 ms
(14 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                     QUERY PLAN
-----------------------------------------------------
 Seq Scan on normal_table nt (actual rows=0 loops=1)
 Planning Time: 0.244 ms
 Execution Time: 0.015 ms
(3 rows)
</code></pre></div> <p>The important thing to notice here is that the PostgreSQL 16 plan does not include a join to <code>part_tab</code> meaning all there is to do is scan <code>normal_table</code>.</p> <h2 id="short-circuit">9. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=5543677ec90a15c73dab5ed4f0902b3b920f0b87">Use Limit instead of Unique to implement DISTINCT, when possible (David Rowley)</a></h2> <p>The PostgreSQL query planner is able to avoid including plan nodes to de-duplicate the results when it can detect that all rows contain the same value. Detecting this is trivial and when the optimization can be applied it can result in huge performance gains.</p> <div> <pre><code><span>-- Setup</span>
<span>CREATE</span> <span>TABLE</span> <span>abc</span> <span>(</span><span>a</span> <span>int</span><span>,</span> <span>b</span> <span>int</span><span>,</span> <span>c</span> <span>int</span><span>);</span>
<span>INSERT</span> <span>INTO</span> <span>abc</span> <span>SELECT</span> <span>a</span><span>%</span><span>10</span><span>,</span><span>a</span><span>%</span><span>10</span><span>,</span><span>a</span><span>%</span><span>10</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>1000000</span><span>)</span><span>a</span><span>;</span>
<span>VACUUM</span> <span>ANALYZE</span> <span>abc</span><span>;</span>

<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>DISTINCT</span> <span>a</span><span>,</span><span>b</span><span>,</span><span>c</span> <span>FROM</span> <span>abc</span> <span>WHERE</span> <span>a</span> <span>=</span> <span>5</span> <span>AND</span> <span>b</span> <span>=</span> <span>5</span> <span>AND</span> <span>c</span> <span>=</span> <span>5</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                               QUERY PLAN
------------------------------------------------------------------------
 Unique (actual rows=1 loops=1)
   -&gt;  Gather (actual rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         -&gt;  Unique (actual rows=1 loops=3)
               -&gt;  Parallel Seq Scan on abc (actual rows=33333 loops=3)
                     Filter: ((a = 5) AND (b = 5) AND (c = 5))
                     Rows Removed by Filter: 300000
 Planning Time: 0.114 ms
 Execution Time: 30.381 ms
(10 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                    QUERY PLAN
---------------------------------------------------
 Limit (actual rows=1 loops=1)
   -&gt;  Seq Scan on abc (actual rows=1 loops=1)
         Filter: ((a = 5) AND (b = 5) AND (c = 5))
         Rows Removed by Filter: 4
 Planning Time: 0.109 ms
 Execution Time: 0.025 ms
(6 rows)
</code></pre></div> <p>If you look carefully at the SQL query, you’ll notice that each column in the <code>DISTINCT</code> clause also has an equality condition in the <code>WHERE</code> clause. This means that all the output rows in the query will have the same values in each column. The PostgreSQL 16 query planner is able to take advantage of this knowledge and simply <code>LIMIT</code> the query results to 1 row. PostgreSQL 15 produced the same query result by reading the entire results and using the <code>Unique</code> operator to reduce all the rows down to a single row. The <code>Execution Time</code> for PostgreSQL 16 was more than 1200 times faster than PostgreSQL 15.</p> <h2 id="merge-joins">10. <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=b592422095655a64d638f541df784b19b8ecf8ad">Relax overly strict rules in select_<wbr>outer_<wbr>pathkeys_<wbr>for_<wbr>merge() (David Rowley)</a></h2> <p>Before PostgreSQL 16, when the query planner considered performing a <code>Merge Join</code>, it would check if the sort order of the merge would suit any upper-level plan operation (such as <code>DISTINCT</code>, <code>GROUP BY</code> or <code>ORDER BY</code>) and only use that order if it matched the requirements for the upper-level exactly. This choice was a little outdated as <code>Incremental Sorts</code> can be used for these upper-level operations and incremental sorts can take advantage of results that are presorted by only some of the leading columns that the results need to be sorted by.</p> <p>The PostgreSQL 16 query planner adjusted the rule used when considering <code>Merge Join</code> orders from “the order of the rows must match exactly” to “there must be at least 1 leading column correctly ordered”. This allows the planner to use <code>Incremental Sorts</code> to get the rows into the correct order for the upper-level operation. We know from earlier in this blog that incremental sorts, when they’re possible, require less work than a complete sort as incremental sorts are able to exploit partially sorted inputs and perform sorts in smaller batches, resulting in less memory consumption and fewer sort comparisons overall.</p> <div> <pre><code><span>-- Setup</span>

<span>CREATE</span> <span>TABLE</span> <span>a</span> <span>(</span><span>a</span> <span>INT</span><span>,</span> <span>b</span> <span>INT</span><span>);</span>
<span>CREATE</span> <span>TABLE</span> <span>b</span> <span>(</span><span>x</span> <span>INT</span><span>,</span> <span>y</span> <span>INT</span><span>);</span>
<span>INSERT</span> <span>INTO</span> <span>a</span> <span>SELECT</span> <span>a</span><span>,</span><span>a</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>1000000</span><span>)</span> <span>a</span><span>;</span>
<span>INSERT</span> <span>INTO</span> <span>b</span> <span>SELECT</span> <span>a</span><span>,</span><span>a</span> <span>FROM</span> <span>generate_series</span><span>(</span><span>1</span><span>,</span><span>1000000</span><span>)</span> <span>a</span><span>;</span>
<span>VACUUM</span> <span>ANALYZE</span> <span>a</span><span>,</span> <span>b</span><span>;</span>

<span>SET</span> <span>enable_hashjoin</span><span>=</span><span>0</span><span>;</span>
<span>SET</span> <span>max_parallel_workers_per_gather</span><span>=</span><span>0</span><span>;</span>
<span>EXPLAIN</span> <span>(</span><span>ANALYZE</span><span>,</span> <span>COSTS</span> <span>OFF</span><span>,</span> <span>TIMING</span> <span>OFF</span><span>)</span>
<span>SELECT</span> <span>a</span><span>,</span><span>b</span><span>,</span><span>count</span><span>(</span><span>*</span><span>)</span> <span>FROM</span> <span>a</span> <span>INNER</span> <span>JOIN</span> <span>b</span> <span>ON</span> <span>a</span><span>.</span><span>a</span> <span>=</span> <span>b</span><span>.</span><span>x</span> <span>GROUP</span> <span>BY</span> <span>a</span><span>,</span><span>b</span> <span>ORDER</span> <span>BY</span> <span>a</span> <span>DESC</span><span>,</span> <span>b</span><span>;</span>
</code></pre></div> <h3>PG15 EXPLAIN output</h3> <div> <pre><code>                                QUERY PLAN
---------------------------------------------------------------------------
 GroupAggregate (actual rows=1000000 loops=1)
   Group Key: a.a, a.b
   -&gt;  Sort (actual rows=1000000 loops=1)
         Sort Key: a.a DESC, a.b
         Sort Method: external merge  Disk: 17664kB
         -&gt;  Merge Join (actual rows=1000000 loops=1)
               Merge Cond: (a.a = b.x)
               -&gt;  Sort (actual rows=1000000 loops=1)
                     Sort Key: a.a
                     Sort Method: external merge  Disk: 17664kB
                     -&gt;  Seq Scan on a (actual rows=1000000 loops=1)
               -&gt;  Materialize (actual rows=1000000 loops=1)
                     -&gt;  Sort (actual rows=1000000 loops=1)
                           Sort Key: b.x
                           Sort Method: external merge  Disk: 11768kB
                           -&gt;  Seq Scan on b (actual rows=1000000 loops=1)
 Planning Time: 0.175 ms
 Execution Time: 1010.738 ms
(18 rows)
</code></pre></div> <h3>PG16 EXPLAIN output</h3> <div> <pre><code>                                QUERY PLAN
---------------------------------------------------------------------------
 GroupAggregate (actual rows=1000000 loops=1)
   Group Key: a.a, a.b
   -&gt;  Incremental Sort (actual rows=1000000 loops=1)
         Sort Key: a.a DESC, a.b
         Presorted Key: a.a
         Full-sort Groups: 31250  Sort Method: quicksort  Average Memory: 26kB  Peak Memory: 26kB
         -&gt;  Merge Join (actual rows=1000000 loops=1)
               Merge Cond: (a.a = b.x)
               -&gt;  Sort (actual rows=1000000 loops=1)
                     Sort Key: a.a DESC
                     Sort Method: external merge  Disk: 17672kB
                     -&gt;  Seq Scan on a (actual rows=1000000 loops=1)
               -&gt;  Materialize (actual rows=1000000 loops=1)
                     -&gt;  Sort (actual rows=1000000 loops=1)
                           Sort Key: b.x DESC
                           Sort Method: external merge  Disk: 11768kB
                           -&gt;  Seq Scan on b (actual rows=1000000 loops=1)
 Planning Time: 0.140 ms
 Execution Time: 915.589 ms
(19 rows)
</code></pre></div> <p>In the PG16 EXPLAIN output above, you can see that an <code>Incremental Sort</code> was used (compared to PG15 which instead used a <code>Sort</code>) and that resulted in a small reduction of the query’s <code>Execution Time</code> in PG16 and a large reduction in the memory used to perform the sort.</p> <h2>Conclusion</h2> <p>A lot of engineering work was done in PostgreSQL 16 to improve the query planner by many engineers from all around the world. I’d like to thank all the people who helped by reviewing the pieces that I worked on and all the people who gave feedback on the changes.</p> <p>Each of the 10 improvements to the PostgreSQL 16 planner above are enabled by default—and are either applied in all cases where the optimization is possible, or are selectively applied by the query planner when it thinks the optimization will help.</p> <p>If you’re running an older version of PostgreSQL, I encourage you to try your workload on PostgreSQL 16 to see which of your queries are faster. And as always, feedback about real-world usage of PostgreSQL in the wild is welcome on the <a href="mailto:pgsql-general@postgresql.org?subject=PG16%20query%20planner%20feedback">pgsql-general@postgresql.org</a> mailing list—you don’t have to just file issues, you can always share the positive experiences too. So please drop us a line about your experience with the PostgreSQL 16 planner.</p>  <div> <h3> Enjoy what you’re reading? </h3> <p>If you want to read more posts from our Citus database and Postgres teams, sign up for our monthly newsletter and get the latest content delivered straight to your inbox.</p>    </div>     </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sam Altman Seeks Trillions of Dollars to Reshape Business of Chips and AI (127 pts)]]></title>
            <link>https://www.wsj.com/tech/ai/sam-altman-seeks-trillions-of-dollars-to-reshape-business-of-chips-and-ai-89ab3db0</link>
            <guid>39310563</guid>
            <pubDate>Fri, 09 Feb 2024 02:05:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/tech/ai/sam-altman-seeks-trillions-of-dollars-to-reshape-business-of-chips-and-ai-89ab3db0">https://www.wsj.com/tech/ai/sam-altman-seeks-trillions-of-dollars-to-reshape-business-of-chips-and-ai-89ab3db0</a>, See on <a href="https://news.ycombinator.com/item?id=39310563">Hacker News</a></p>
Couldn't get https://www.wsj.com/tech/ai/sam-altman-seeks-trillions-of-dollars-to-reshape-business-of-chips-and-ai-89ab3db0: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Funimation End of Services (159 pts)]]></title>
            <link>https://help.funimation.com/hc/en-us/articles/23103586580244-Funimation-End-of-services</link>
            <guid>39309337</guid>
            <pubDate>Thu, 08 Feb 2024 23:38:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://help.funimation.com/hc/en-us/articles/23103586580244-Funimation-End-of-services">https://help.funimation.com/hc/en-us/articles/23103586580244-Funimation-End-of-services</a>, See on <a href="https://news.ycombinator.com/item?id=39309337">Hacker News</a></p>
Couldn't get https://help.funimation.com/hc/en-us/articles/23103586580244-Funimation-End-of-services: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[React has grown beyond its original promise and it's causing more harm than good (211 pts)]]></title>
            <link>https://md.jtmn.dev/blog/💻+Programming/PR-007+-+Why+you+don%27t+need+React</link>
            <guid>39309269</guid>
            <pubDate>Thu, 08 Feb 2024 23:30:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://md.jtmn.dev/blog/&#x1F4BB;+Programming/PR-007+-+Why+you+don%27t+need+React">https://md.jtmn.dev/blog/&#x1F4BB;+Programming/PR-007+-+Why+you+don%27t+need+React</a>, See on <a href="https://news.ycombinator.com/item?id=39309269">Hacker News</a></p>
Couldn't get https://md.jtmn.dev/blog/💻+Programming/PR-007+-+Why+you+don%27t+need+React: TypeError [ERR_UNESCAPED_CHARACTERS]: Request path contains unescaped characters]]></description>
        </item>
        <item>
            <title><![CDATA[Why Elixir Is the Best Language for Building a Bootstrapped, B2B SaaS in 2024 (133 pts)]]></title>
            <link>https://www.sleepeasy.app/2024/01/21/elixir-best-language-for-bootstrapped-b2b-saas/</link>
            <guid>39309093</guid>
            <pubDate>Thu, 08 Feb 2024 23:12:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sleepeasy.app/2024/01/21/elixir-best-language-for-bootstrapped-b2b-saas/">https://www.sleepeasy.app/2024/01/21/elixir-best-language-for-bootstrapped-b2b-saas/</a>, See on <a href="https://news.ycombinator.com/item?id=39309093">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <div>
<h3>Contents</h3>
<ol>
    <li><a href="#who-cares-about-one-person-frameworks">Who cares about one-person frameworks?</a></li>
    <li><a href="#how-elixir-collapses-a-web-apps-tech-stack">How Elixir collapses a web app’s tech stack</a>
        <ol>
            <li><a href="#removing-layers-of-the-stack">Removing layers of the stack</a></li>
            <li><a href="#building-more-of-the-stack-into-the-platform-itself">Building more of the stack into the platform itself</a></li>
            <li><a href="#building-more-of-the-stack-using-tools-you-already-know">Building more of the stack using tools you already know</a></li>
            <li><a href="#whats-it-add-up-to">What's it add up to?</a></li>
        </ol>
    </li>
    <li><a href="#a-few-other-accelerators-for-saas-startups">A few other accelerators for SaaS startups</a>
        <ol>
            <li><a href="#buying-a-200-hour-head-start">Buying a 200 hour head start</a></li>
            <li><a href="#consuming-openapi-specifications-with-grace">Consuming OpenAPI specifications with grace</a></li>
            <li><a href="#maintainability-over-time">Maintainability over time</a></li>
            <li><a href="#wrapping-up">Wrapping up</a></li>
        </ol>
    </li>
    <li><a href="#appendix-breakdown-of-elixirs-answer-for-common-web-dev-requirements">Appendix: Breakdown of Elixir's answer for common web dev requirements</a></li>
    <li><a href="#footnotes">Footnotes</a></li>
</ol>
</div>

<p>[This article is the companion to my <a href="https://codebeamamerica.com/talks/elixir-is-the-one-person-stack/">presentation</a> for CodeBEAM America 2024, Elixir is the One-Person Stack for Building a Software Startup. You can <a href="https://www.sleepeasy.app/assets/files/elixir-one-person-stack-software-startup-codebeam.pdf">download the slides as a PDF</a> or <a href="https://docs.google.com/presentation/d/11aRQTWI-Jqenmqe66rMuWWcy_VhMHN5x-dzm7sAW7ac/edit#slide=id.g2b1888d014f_0_27">view them in Google Slides</a>.]</p>

<p>I’d like to share why I chose Elixir as the programming language (and really, as we’ll discuss, the full stack) for SleepEasy. I’m going to do my best to focus on the objective features of the language which make it particularly suitable for a small, nimble team starting a software business.</p>

<p>Because SleepEasy is B2B software, a web app is absolutely required. At some point in the distant future, a mobile app may be too, but I expect to get by without mobile for a long time. Even if I do one day need a mobile app, a simple wrapper around a web view will probably suffice.</p>

<p>The fact that I’m bootstrapping this company (that is, self-funding to start and growing it solely from the business’s own profits) sets one other major requirement: the app needs to be able to be built and maintained by a team of one, at least for the first few years or the first $10k+ in monthly revenue.</p>

<!--more-->

<h2 id="who-cares-about-one-person-frameworks">Who cares about one-person frameworks?</h2>

<!--[Late last year](https://world.hey.com/dhh/the-one-person-framework-711e6318), DHH called Rails 7 “the one person framework,” and since then I’ve seen a lot of discussion online about this idea. It's kind of the dream, right? Whatever software you're building, being able to fit the whole in one person’s head is a major advantage. To have one _real human_ be able to build and maintain it, full stack, is really important. -->

<!--Of course, I have to specify a _real_ human because modern web stacks have become unspeakably complex.-->

<p>Look at any job posting for a full stack developer and consider just how many things they’re expected to have expertise in. Every employer is trying to find a unicorn who knows:</p>

<figure>
<img width="280px" src="https://www.sleepeasy.app/assets/images/tom-and-jerry-orchestra.gif" alt="Jerry, of Tom and Jerry, playing a dozen orchestra instruments at once">
<p>Pictured: A full-stack dev orchestrating two dozen tools to build a single web app</p>
</figure>

<ul>
  <li>HTML</li>
  <li>CSS</li>
  <li>Tailwind</li>
  <li>A frontend language (JavaScript/TypeScript)</li>
  <li>A backend language (Ruby, Python, Go, etc.)</li>
  <li>A frontend framework (React, Vue, etc.)</li>
  <li>A frontend state management framework (Redux, Jotai, Vuex, etc.)</li>
  <li>A backend framework</li>
  <li>REST</li>
  <li>GraphQL</li>
  <li>A SQL database</li>
  <li>A NoSQL database</li>
  <li>A background job system</li>
  <li>An in-memory cache like Redis</li>
  <li>A service crash recovery system (PM2, Upstart, etc.)</li>
  <li>A message queue (RabbitMQ, Redis, etc.)</li>
  <li>A web server like Nginx</li>
  <li>Docker</li>
  <li>Kubernetes</li>
  <li>A cloud platform (AWS, GCP, Azure)</li>
  <li>Serverless</li>
  <li>Microservices</li>
  <li>Scaling services</li>
</ul>

<p>🥴</p>

<p>It’s too much! It’s simply not reasonable to expect one person to be able to do it all. And that’s doubly true for someone starting a solo software company, where you’re <em>also</em> responsible for customer development, marketing, sales, and all the other parts of the business.</p>

<p>All this leads to one inescapable conclusion:</p>

<blockquote>
  <p><strong>We have to collapse the stack!</strong></p>
</blockquote>

<p>We need to <em>dramatically</em> cut down on the number of different technologies you need to learn to build a best-in-class web app. That’s where Elixir (and specifically Elixir plus the Phoenix web framework) comes in.</p>

<h2 id="how-elixir-collapses-a-web-apps-tech-stack">How Elixir collapses a web app’s tech stack</h2>

<p>There are three big ways Elixir helps simplify web application development.</p>

<ol>
  <li>Removing layers of the stack entirely</li>
  <li>Building more of the stack into either the language, the standard library, or Erlang’s BEAM + OTP platform<a href="#footnote-1" id="footnote-1-source">¹</a></li>
  <li>Building more of the stack in tools you already know</li>
</ol>

<p>Let me explain…</p>

<h3 id="removing-layers-of-the-stack">Removing layers of the stack</h3>

<p><a href="https://github.com/phoenixframework/phoenix_live_view">Phoenix LiveView</a> has gotten a ton of positive attention<a href="#footnote-2-source" id="footnote-2">²</a>, and for good reason. The pitch is that you can create rich, interactive client-side experiences (comparable to a SPA framework like React or Vue) while writing <em>just</em> “backend” code. By building on Phoenix’s excellent WebSocket support, LiveView provides:</p>

<ul>
  <li>SPA-like page transitions (i.e., replacing just the parts of the page that change, without a full page reload),</li>
  <li>real-time “reactive” updates of the client-side view as state changes on the backend, and</li>
  <li>server interactivity without ever needing to construct an API or write JavaScript.</li>
</ul>

<p>And all of this comes more or less for free. Seamless, sub-50 ms page transitions? 0 lines of code.  Triggering backend events from the from the frontend? 3-4 lines of code. Subscribing the frontend to progress updates on some backend job? 4-6 lines of code.</p>

<p>There are caveats, of course. LiveView has a substantial learning curve on its own, and I wouldn’t advise trying to build something that’s fundamentally un-document like. (There’s a reason we built <a href="https://felt.com/">Felt</a> as a SPA talking over WebSockets to our Phoenix backend.) But again, if you’re building a B2B SaaS, 95% of the time the product boils down to an admin dashboard, a CRUD app, or an ecommerce platform… not the next Figma.</p>

<p>Has LiveView replaced 100% of JavaScript for me? Of course not. But thankfully it ships with support for “hooks,” such that you can delegate bits of functionality to client-side JavaScript (including SPA frameworks if that’s your thing) while keeping the rest of your app in Elixir. After four months of development on SleepEasy’s MVP, I have a total of 16 lines of JavaScript in the project.</p>

<p>On top of the concrete benefits of just needing to master fewer technologies, it’s hard to overstate how nice it is to keep your head in one place (the backend, in this case) for the vast majority of the development. Having to think about the interplay between client-side JavaScript, a REST API, and the backend was like wearing a weighted vest since birth. It wasn’t something I thought about as being a drag, but once it was removed, it felt like I was walking on air.</p>

<h3 id="building-more-of-the-stack-into-the-platform-itself">Building more of the stack into the platform itself</h3>

<p>Elixir has similar stack-shrinking benefits beyond LiveView too. The BEAM and OTP provides built-in support for a lot of concurrency and fault tolerance tooling that has to be bolted on in other ecosystems.</p>

<ul>
  <li>Elixir’s fault tolerance primitives (the <a href="https://hexdocs.pm/elixir/main/supervisor-and-application.html">process isolation and supervision tree model</a>) remove the need for crash recovery at the whole-service level</li>
  <li>Erlang’s ETS tables offer the in-memory caching functionality most apps need from Redis, but without needing to spin up a separate service (and dealing with all the things that can go wrong in a distributed system like that)</li>
  <li>Phoenix PubSub provides an in-memory message queue that can replace something like RabbitMQ</li>
  <li>The platform’s thoughtful design for concurrency prevents any single process from starving the rest of the system for resources, so you can have thousands of concurrent requests on a single machine without worrying about them conflicting with one another.</li>
</ul>

<h3 id="building-more-of-the-stack-using-tools-you-already-know">Building more of the stack using tools you already know</h3>

<p>Finally, Elixir simplifies applications by having an ecosystem built on tooling you already know. That sounds a little weird, but consider the job queueing system. There are two main ways Elixir handles background jobs:</p>

<ul>
  <li>One is by using the BEAM’s built-in, effortless concurrency model (usually via <a href="https://hexdocs.pm/elixir/Task.html">Task</a> or, in a roundabout way, via <a href="https://hexdocs.pm/elixir/main/genservers.html">GenServer</a>)—this is suitable for any ephemeral tasks that don’t need to be robust against server reboots.</li>
  <li>The other is using a library called <a href="https://github.com/sorentwo/oban">Oban</a>, which is comparable to Ruby’s Sidekiq.</li>
</ul>

<p>Oban runs on top of Postgres (or SQLite, if that’s your thing), unlike Sidekiq and similar systems that are backed by Redis. That reduces the number of technologies you need to learn (and deploy, and manage!) by one, since presumably you already need to know your SQL database.</p>

<p>Elixir has also simplified my deployment model this way. Because of that fantastic concurrency model I’ve been going on about, Elixir scales extremely well as you increase the number of CPU cores and amount of RAM on the system. Vertically scaling like this is way, <em>way</em> easier than scaling out to more machines running your application—or worse, microservices!—because you avoid introducing distributed systems problems that serve as a drag on all future development. It takes zero lines of code change and zero additional testing to pay a little more for a bigger machine… that’s not something you can say about scaling out a distributed system! (As an added benefit, it’s super cheap to deploy a single monolith talking to a single database!)</p>

<p>The final area where the Elixir stack builds more of the stack in tools that you already know is around testing. While ExUnit is <em>amazing</em> and I could sing the praises of its readability for days (how many other ecosystems have the entire community using the testing tool that ships with the language?), the fact that there’s <em>some</em> unit testing framework in Elixir isn’t that remarkable. What’s amazing is the testing story around LiveView.</p>

<p>Remember how LiveView lets you build frontend interactivity from the backend? It also lets you write <em>tests</em> of your frontend interactions in ExUnit, rather than needing browser automation which is inherently both slower and flakier. You can make assertions like “when I fill in these form fields and click this button, I should be redirected to a page with the title of _______.” The cost of writing these integration tests—in terms of runtime, development time, cognitive load, and general pain-in-the-ass factor—is more or less the same as if I were testing a pure function in my business logic, and I find myself writing <em>way</em> more tests than I ever did for a React SPA. If I have to manually test something more than once, you can bet it’s going to become an integration test.</p>

<h3 id="whats-it-add-up-to">What’s it add up to?</h3>

<p>Let’s go back to the original list of technologies a full-stack dev is expected to know and see how many of them we can replace or remove with the Elixir stack I’ve described here. By my count, we go from 23 things a web app can reasonably be expected to need down to 8 (counting anything built into Elixir as one technology to learn, and anything built into Phoenix as another):</p>

<ol>
  <li>Elixir (including supervision trees for fault tolerance, concurrency primitives like <code>Task</code>, and ETS for caching)</li>
  <li>Phoenix (including LiveView and PubSub)</li>
  <li>Oban for robust background jobs</li>
  <li>Postgres</li>
  <li>The PaaS of your choice (I prefer to self-host with Dokku, a Heroku-like self-hosted PaaS; others prefer Render, Fly.io, or Gigalixir)</li>
  <li>HTML</li>
  <li>CSS</li>
  <li>Tailwind</li>
</ol>

<p>That’s not bad, especially considering you’re probably coming into Elixir with maybe half those skills.</p>

<p>For a complete breakdown of the Elixir ecosystem’s answer to each of the original list of things a full-stack dev was expected to juggle, see <a href="#appendix-breakdown-of-elixirs-answer-for-common-web-dev-requirements">the appendix below</a>.</p>

<h2 id="a-few-other-accelerators-for-saas-startups">A few other accelerators for SaaS startups</h2>

<p>Using the stack I’ve laid out above, you could build 95% of B2B SaaS apps, and you could do it faster and more reliably than any other ecosystem I’ve seen. That said, there are a few more areas of the Elixir ecosystem that make it a great fit for bootstrapped startups, and I’d be remiss not to highlight them.</p>

<h3 id="buying-a-200-hour-head-start">Buying a 200 hour head start</h3>

<p>The first is <a href="https://docs.petal.build/petal-pro-documentation/">the Petal Pro framework</a>. “Petal” there is a reference to the PETAL stack: Phoenix, Elixir, Tailwind, Alpine JS, and LiveView. (It’s a nice acronym, but since LiveView introduced <code>LiveView.JS</code>  back in 2022, you can handle purely client-side interactions like toggling visibility of a modal without the need for Alpine at all.)</p>

<p>Petal Pro gives you a head start on implementing an absolute <em>ton</em> of functionality that will either be an absolute requirement for every SaaS app, or are <em>extremely</em> nice to have for monitoring, debugging, and providing support. I’ve built most of these from scratch in the past, and they’re all totally doable, but they take time. Being able to spend $300 to not have to think about them again is an absolute <em>steal</em>.</p>

<p>A few of the biggest time-savers for me:</p>

<ul>
  <li>Stripe integration for doing subscription billing</li>
  <li>Organizations for users to group into (including sending and accepting org invitations)</li>
  <li>Admin dashboards (and a toolkit for building your own admin dashboards that lets me churn out new dashboard views in an hour which would have taken me <em>days</em> before)</li>
  <li>User impersonation, so that when a user reports a problem, I can log in and see exactly what they see</li>
  <li>A nicely designed LiveView component library, complete with page layouts, menus, and dark mode support for everything</li>
</ul>

<h3 id="consuming-openapi-specifications-with-grace">Consuming OpenAPI specifications with grace</h3>

<p>Next, there’s always the concern around ecosystem size, and it’s true, Elixir’s ecosystem is way smaller than NPM or PyPI. Now, in practice, I’ve found the holes in the package ecosystem to not be too bad. If you just need a few REST endpoints from a third-party service, it’s not hard to write those integration. (I cut my teeth in C++, though, where writing your own implementation for dependencies was not just encouraged, but often the easiest path!) But, if you need deep integration with a huge third party API, that might be a non-starter.</p>

<p>That’s where AJ Foster’s <a href="https://github.com/aj-foster/open-api-generator"><code>open-api-generator</code></a> comes in. Unlike most OpenAPI generators, it offers a way to do deep customization of the auto-generated code to produce an ergonomic Elixir API. Rather than consuming the OpenAPI spec for your third party and vomiting it out wholesale (leading to a crummy API that a human would never produce by hand), the generator gives you ways to:</p>

<ul>
  <li>Rename components of the API</li>
  <li>Group schemas into module namespaces</li>
  <li>Merge multiple, nearly-synonymous data structures into one</li>
  <li>…and much more</li>
</ul>

<p>You can see compare <a href="https://github.com/aj-foster/open-api-github">AJ’s GitHub API wrapper</a> to what you get by default when you spit out the GitHub OpenAPI, and it’s night and day… and at a scale that an unpaid volunteer could never match if they tried to wrap the GitHub API by hand.</p>

<p>AJ gave a great talk at last year’s ElixirConf showing off the power of this stuff:</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/XSwxNgza7hE?si=p0xQt9Iu0LawU9_7" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>

<h3 id="maintainability-over-time">Maintainability over time</h3>

<p>The last thing I’d like to mention is how very little churn there is in the Elixir ecosystem. In stark contrast to other stacks I’ve worked in, where taking even a “patch” update to a framework can require even experts to put in <em>hours</em> of frustrating debugging (as <a href="https://twitter.com/garybernhardt/status/1748486057920963041">Gary Bernhardt recently bemoaned</a>), taking an update to Elixir or Phoenix is not much of an issue. If you’re like me and treat warnings as errors, you’ll frequently hit a few deprecations and the like, but those are almost always an easy fix. And that’s reflected in a recent pair of polls I ran<a href="#footnote-3" id="footnote-3-source">³</a>. The overwhelming majority of users are on versions of Elixir and Phoenix released within the last year or so, and less than 5% are on versions more than 3 years old.</p>

<p><a href="https://x.com/TylerAYoung/status/1748423976609554728"><img src="https://www.sleepeasy.app/assets/images/elixir-versions.png" alt="Elixir versions used in production; 82.1% of poll respondents are using Elixir 1.15 or newer; 15.5% are using 1.13 or 1.14; 0.5% are using 1.11 or 1.12; 1.9% are using 1.10 or earlier"></a></p>

<p><a href="https://x.com/TylerAYoung/status/1748689778650849630"><img src="https://www.sleepeasy.app/assets/images/phoenix-versions.png" alt="Phoenix versions used in production; 78.5% of poll respondents are using Phoenix 1.7; 16.8% are using 1.6; 1.9% are using 1.5; 2.8% are using 1.4 or earlier"></a></p>

<p>Elixir and Phoenix value stability, so it’s generally easy to get access to new features without a bunch of hassle.</p>

<h2 id="wrapping-up">Wrapping up</h2>

<p>I’m not qualified to say Elixir is the right language choice for all apps everywhere. I’ve never worked in a big corporation, and my experience with Elixir has been largely focused on web and networking. I <em>do</em> feel comfortable evaluating it for the project I’m working on now, though, and for the needs of a one-person development team building a B2B SaaS, I don’t see any other stack that offers both the speed of getting started and the ability to grow in whatever direction your business takes you.</p>

<p>I’d love to hear any feedback you have—you can reach out to me on <a href="https://twitter.com/TylerAYoung">Twitter</a>, <a href="https://fosstodon.org/@tylerayoung">Mastodon</a>, or email (my first name at this domain).</p>

<h2 id="appendix-breakdown-of-elixirs-answer-for-common-web-dev-requirements">Appendix: Breakdown of Elixir’s answer for common web dev requirements</h2>



<table>
  <thead>
    <tr>
      <th>Technology</th>
      <th>The typical way</th>
      <th>The Elixir way I’m advocating</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>HTML</td>
      <td>Gotta learn it</td>
      <td>Still gotta learn it</td>
    </tr>
    <tr>
      <td>CSS</td>
      <td>Gotta learn it</td>
      <td>Sorry, still gotta learn it</td>
    </tr>
    <tr>
      <td>Tailwind</td>
      <td>Optional, but nice</td>
      <td>Optional, but nice</td>
    </tr>
    <tr>
      <td>A frontend language</td>
      <td>JavaScript/TypeScript</td>
      <td>Phoenix LiveView</td>
    </tr>
    <tr>
      <td>A backend language</td>
      <td>Ruby, Python, Go</td>
      <td>Elixir</td>
    </tr>
    <tr>
      <td>A frontend framework</td>
      <td>React, Vue</td>
      <td>Phoenix LiveView</td>
    </tr>
    <tr>
      <td>A frontend state management framework</td>
      <td>Redux, Jotai, Vuex</td>
      <td>N/A with LiveView</td>
    </tr>
    <tr>
      <td>A backend framework</td>
      <td>Rails, Next.js, Django</td>
      <td>Phoenix LiveView</td>
    </tr>
    <tr>
      <td>REST</td>
      <td>Needed for client-server communication</td>
      <td>Unnecessary with LiveView <br>(Phoenix if you need it for product reasons)</td>
    </tr>
    <tr>
      <td>GraphQL</td>
      <td>Maybe needed for client-server communication</td>
      <td>Unnecessary with LiveView <br>(Absinthe if you need it for product reasons)</td>
    </tr>
    <tr>
      <td>A SQL database</td>
      <td>Postgres, MySQL, SQLite</td>
      <td>Postgres</td>
    </tr>
    <tr>
      <td>A NoSQL database</td>
      <td>Mongo, CouchDB</td>
      <td>Postgres JSONB columns or in-memory caching with ETS</td>
    </tr>
    <tr>
      <td>A background job system</td>
      <td>Sidekiq, Celery, BullMQ</td>
      <td>Built-in <code>Task</code> or Oban library</td>
    </tr>
    <tr>
      <td>An in-memory cache</td>
      <td>Redis</td>
      <td>ETS, or a thin wrapper around ETS like Cachex</td>
    </tr>
    <tr>
      <td>A service crash recovery system</td>
      <td>PM2, Upstart</td>
      <td>Built-in fault recovery via Supervisor trees</td>
    </tr>
    <tr>
      <td>A message queue</td>
      <td>RabbitMQ, Redis</td>
      <td>Phoenix PubSub</td>
    </tr>
    <tr>
      <td>A web server</td>
      <td>Nginx, Apache, Gunicorn</td>
      <td>Phoenix</td>
    </tr>
    <tr>
      <td>Containerization</td>
      <td>Docker</td>
      <td>PaaS like Render, Fly.io, Gigalixir, or Dokku that abstracts over containers (or bare binary release deployments)</td>
    </tr>
    <tr>
      <td>Container orchestration</td>
      <td>Kubernetes</td>
      <td>PaaS or bare metal deployments</td>
    </tr>
    <tr>
      <td>A cloud platform</td>
      <td>AWS, GCP, Azure</td>
      <td>PaaS or bare metal deployments</td>
    </tr>
    <tr>
      <td>Serverless</td>
      <td>AWS Lambda</td>
      <td>Vertically-scaled monolith <br> <a href="https://fly.io/blog/rethinking-serverless-with-flame/">FLAME</a> if you really need serverless-like scaling or to seamlessly run functions on different hardware</td>
    </tr>
    <tr>
      <td>Microservices</td>
      <td>Pain</td>
      <td>Monolith with many cores <br> <a href="https://hexdocs.pm/boundary/readme.html">Boundary</a> if you need to ensure separation of concerns between teams</td>
    </tr>
    <tr>
      <td>Scaling services</td>
      <td>Horizontal</td>
      <td>Vertical, only horizontal if you really need redundancy or multi-region deployments</td>
    </tr>
  </tbody>
</table>



<p><a href="#footnote-1-source" id="footnote-1">¹</a> “The BEAM” is the name of the Erlang virtual machine on which Elixir is built, and OTP (the “Open Telecom Platform”) is the set of core Erlang abstractions and libraries for things like process isolation, networking, and distributed computing.</p>

<p><a href="#footnote-2-source" id="footnote-2">²</a> Phoenix has been ranked the “most loved web framework” two years running in StackOverflow’s developer survey (<a href="https://survey.stackoverflow.co/2022/#section-most-loved-dreaded-and-wanted-web-frameworks-and-technologies">2022</a>, <a href="https://survey.stackoverflow.co/2023/#section-admired-and-desired-web-frameworks-and-technologies">2023</a>).</p>

<p><a href="#footnote-3-source" id="footnote-3">³</a> Admittedly unscientific, but with 200+ respondents to the Elixir poll and 100+ to the Phoenix version, it seems like a reasonable snapshot of the ecosystem.</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Walter Shawlee, the sovereign of slide rules, has died (131 pts)]]></title>
            <link>https://www.nytimes.com/2024/02/08/science/walter-shawlee-dead.html</link>
            <guid>39309083</guid>
            <pubDate>Thu, 08 Feb 2024 23:11:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2024/02/08/science/walter-shawlee-dead.html">https://www.nytimes.com/2024/02/08/science/walter-shawlee-dead.html</a>, See on <a href="https://news.ycombinator.com/item?id=39309083">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2024/02/08/science/walter-shawlee-dead.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Canadian government banning Flipper Zero to combat auto theft (258 pts)]]></title>
            <link>https://www.canada.ca/en/public-safety-canada/news/2024/02/federal-action-on-combatting-auto-theft.html</link>
            <guid>39308731</guid>
            <pubDate>Thu, 08 Feb 2024 22:35:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.canada.ca/en/public-safety-canada/news/2024/02/federal-action-on-combatting-auto-theft.html">https://www.canada.ca/en/public-safety-canada/news/2024/02/federal-action-on-combatting-auto-theft.html</a>, See on <a href="https://news.ycombinator.com/item?id=39308731">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>The Government of Canada hosts National Summit on Combatting Auto Theft. </p><div>
    <h3>Canada Border Services Agency</h3> 
<p>The Canada Border Services Agency (CBSA) provides critical support to law enforcement partners to disrupt, investigate and ultimately prosecute these crimes. Upfront, preventative and investigative work—within Canada, ahead of reaching the border—is imperative to reduce auto theft overall. The CBSA acts on 100% of referrals from local police and works closely with governments and jurisdictions to intercept stolen vehicles and identify criminal activity within the supply chain.</p> 
<p>In addition, <a href="https://www.canada.ca/en/border-services-agency/news/2024/02/government-of-canada-announces-federal-investment-to-combat-export-of-stolen-vehicles.html">the Government of Canada is increasing the capacity of the CBSA</a> by investing $28 million to conduct more investigations and examinations of stolen vehicles, as well as enhance collaboration on investigations and intelligence sharing with partners across Canada and Internationally. This includes exploring detection technology solutions, and exploring the use of advanced analytical tools, such as artificial intelligence.</p> 
<h3>Royal Canadian Mounted Police</h3> 
<p>Local police have the primary responsibility to investigate stolen vehicle offences. The <a href="https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.cisc-scrc.gc.ca%2Findex-eng.htm&amp;data=05%7C02%7CToni.Petter%40ps-sp.gc.ca%7C727986c0dc2f4a47b5a408dc21caf3b6%7C2d28dd40a4f24317a351bc709c183c85%7C0%7C0%7C638422403655886245%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&amp;sdata=6mOYJqfZcnbYORBUSHksgA3nfAb2evuf3SGwd%2F1LMVk%3D&amp;reserved=0">Criminal Intelligence Service Canada</a>, stewarded by the Royal Canadian Mounted Police (RCMP), coordinates criminal intelligence sharing and analysis between federal, provincial and municipal police forces. &nbsp;</p> 
<p>The RCMP leverages port enforcement capacity in select provinces as part of its Border Integrity Program, helping to identify, assess and respond to significant inbound and outbound threats at Canada’s borders, at seaports, airports, land ports of entry and between ports of entry into Canada.</p> 
<p>The RCMP works closely with its international partners and maintains strong relationships with law enforcement agencies worldwide. These relationships are essential to Canada’s ability to deal with global threats, such as serious and organized crime.</p> 
<h3>Justice Canada</h3> 
<p>Ensuring people in Canada feel safe in their communities is a top priority. Canada has a robust criminal law framework to address auto theft at various stages of the crime, as well as its links to organized crime. The Department of Justice Canada will, in consultation with provinces and territories, examine potential amendments to the <em>Criminal Code </em>to further strengthen the legal framework related to auto theft, including by reviewing existing offences and penalties.</p> 
<h3>Transport Canada</h3> 
<p>Transport Canada will modernize the Canadian Motor Vehicle Safety Standards to ensure they consider technological advancements to deter and prevent auto theft. The Department will also work with public safety partners to identify cargo handling vulnerabilities through targeted security assessments of port facilities. Based on the assessments, the Department will work with port facilities on corrective actions and to implement updated security plans.</p> 
<h3>Innovation, Science and Economic Development Canada (ISED)</h3> 
<p>Innovation, Science and Economic Development Canada will work with Canadian companies, and the automotive industry, to develop new solutions to protect vehicles against theft and to assist with recovery of stolen vehicles.</p> 
<p>ISED will pursue all avenues to ban devices used to steal vehicles by copying the wireless signals for remote keyless entry, such as the Flipper Zero, which would allow for the removal of those devices from the Canadian marketplace through collaboration with law enforcement agencies.</p>
</div><p>Jean-Sébastien Comeau<br> Press Secretary and Senior Communications Advisor<br> Office of the Honourable Dominic LeBlanc<br> Minister of Public Safety, Democratic Institutions and Intergovernmental Affairs<br> 343-574-8116<br><a href="mailto:Jean-Sebastien.Comeau@iga-aig.gc.ca">Jean-Sebastien.Comeau@iga-aig.gc.ca</a></p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sony is erasing digital libraries that were supposed to be accessible "forever" (511 pts)]]></title>
            <link>https://arstechnica.com/culture/2024/02/funimation-dvds-included-forever-available-digital-copies-forever-ends-april-2/</link>
            <guid>39308679</guid>
            <pubDate>Thu, 08 Feb 2024 22:30:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/culture/2024/02/funimation-dvds-included-forever-available-digital-copies-forever-ends-april-2/">https://arstechnica.com/culture/2024/02/funimation-dvds-included-forever-available-digital-copies-forever-ends-april-2/</a>, See on <a href="https://news.ycombinator.com/item?id=39308679">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2024/02/one-piece-800x384.jpg" alt="one piece">
      <figcaption><p>A shot from <em>One Piece</em>, one of the animes that Funimation made DVDs for. </p></figcaption>  </figure>

  




<!-- cache hit 211:single/related:694b9de4012757fa3a4971afac9ef7ec --><!-- empty -->
<p>How long is “forever”? When it comes to digital media, forever could be as close as a couple of months away.</p>
<p>Funimation, a <a href="https://arstechnica.com/tech-policy/2020/12/att-sells-crunchyroll-to-sony-for-1-2b-amid-streamlining-efforts/">Sony-owned</a> streaming service for anime, recently <a href="https://help.funimation.com/hc/en-us/articles/23103586580244-Funimation-End-of-services">announced</a> that subscribers' digital libraries on the platform will be unavailable after April 2. For years, Funimation had been<a href="https://help.funimation.com/hc/en-us/articles/360046822091-How-long-do-I-get-to-keep-streaming-the-Digital-Copy-videos"> telling subscribers</a> that they could keep streaming these digital copies of purchased movies and shows, but qualifying it: “forever, but there are some restrictions.”</p>
<p>Funimation’s parent company, Sony, bought rival anime streaming service Crunchyroll in 2021. Since then, it was suspected that Sony would merge the offerings together somehow. This week, we learned how, as Funimation announced that its app and website would close on April 2, and Funimation accounts will become Crunchyroll accounts. Most of Funimation’s catalog is already on Crunchyroll, Funimation’s announcement claimed.</p>
<p>But in addition to offering video streaming, Funimation also dubbed and released anime as physical media, and sometimes those DVDs or Blu-rays would feature a digital code. Subscribers to the Funimation streaming service could add those digital codes to Funimation and then stream the content from the platform.</p>                                            
                                                        
<p>With Funimation claiming that customers could access these digital copies “forever,” I could see why someone might have thought this was a reliable way to access their purchased media. For people lacking the space, resources, or interest in maintaining a library of physical media, this was a good way to preserve treasured shows and movies without spending more money. It also provided a simple way to access purchased media online if you were, for example, away on a trip and had a hankering to watch some anime DVDs you bought.</p>
<p>But soon, people who may have discarded or lost their physical media or lack a way to play DVDs and Blu-rays won't have a way to access the digital copies that they were entitled to through their physical copy purchase.</p>
<p>Funimation's announcement says:</p>
<blockquote><p>Please note that Crunchyroll does not currently support Funimation Digital copies, which means that access to previously available digital copies will not be supported. However, we are continuously working to enhance our content offerings and provide you with an exceptional anime streaming experience. We appreciate your understanding and encourage you to explore the extensive anime library available on Crunchyroll.</p></blockquote>
<p>Regarding refunds, Funimation's announcement directed customers to its <a href="https://help.crunchyroll.com/hc/en-us/requests/new">support team</a> "to see the available options based on your payment method," but there's no mention of getting money back from a DVD or Blu-ray that you might not have purchased had you known you couldn't stream it "forever." </p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Doorway effect (288 pts)]]></title>
            <link>https://en.wikipedia.org/wiki/Doorway_effect</link>
            <guid>39307677</guid>
            <pubDate>Thu, 08 Feb 2024 21:04:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://en.wikipedia.org/wiki/Doorway_effect">https://en.wikipedia.org/wiki/Doorway_effect</a>, See on <a href="https://news.ycombinator.com/item?id=39307677">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
							

						<p>From Wikipedia, the free encyclopedia</p>
					</div><div lang="en" dir="ltr" id="mw-content-text">

<p>The <b>'doorway effect'</b> or <b>‘location updating effect</b>’ is a replicable psychological phenomenon characterized by short-term memory loss when passing through a doorway or moving from one location to another.<sup id="cite_ref-forgetting_1-0"><a href="#cite_note-forgetting-1">[1]</a></sup> We tend to forget items of recent significance immediately after crossing a boundary<sup id="cite_ref-multimodal_2-0"><a href="#cite_note-multimodal-2">[2]</a></sup> and often forget what we were thinking about or planning on doing upon entering a different room.<sup id="cite_ref-3"><a href="#cite_note-3">[3]</a></sup> Research suggests that this phenomenon occurs both at literal boundaries (e.g., moving from one room to another via a door) and metaphorical boundaries (e.g., imagining traversing a doorway, or even when moving from one desktop window to another on a computer).<sup id="cite_ref-multimodal_2-1"><a href="#cite_note-multimodal-2">[2]</a></sup>
</p><p>Memory is organized around specific events or episodes, such as attending a lecture or having a family meal, rather than being a continuous stream interrupted by sleep.<sup id="cite_ref-4"><a href="#cite_note-4">[4]</a></sup> This organization is called <a href="https://en.wikipedia.org/wiki/Episodic_memory" title="Episodic memory">episodic memory</a>, which involves receiving and storing information about events that are temporarily dated, along with their time and place relationships.<sup id="cite_ref-5"><a href="#cite_note-5">[5]</a></sup>
</p><p>Numerous psychological studies have indicated that the external context, including the location where events occur, plays a significant role in how memories are separated.<sup id="cite_ref-6"><a href="#cite_note-6">[6]</a></sup><sup id="cite_ref-7"><a href="#cite_note-7">[7]</a></sup><sup id="cite_ref-disruption_8-0"><a href="#cite_note-disruption-8">[8]</a></sup> This context helps establish distinctions between different remembered events. Memories of events that happen in the environment we're currently in are easier to access compared to those from different places.<sup id="cite_ref-Seel_2019_173–184_9-0"><a href="#cite_note-Seel_2019_173–184-9">[9]</a></sup> As a result, when we experience spatial changes and move to a different location, it can act as a <a href="https://en.wikipedia.org/wiki/Boundary_marker" title="Boundary marker">boundary marker</a> that separates and categorizes our continuous flow of memories into distinct segments.
</p>
<meta property="mw:PageProp/toc">
<h2><span id="Studies">Studies</span><span><span>[</span><a href="https://en.wikipedia.org/w/index.php?title=Doorway_effect&amp;action=edit&amp;section=1" title="Edit section: Studies"><span>edit</span></a><span>]</span></span></h2>
<p>Research on the doorway effect involves having people navigate virtual environments while picking up and putting down various objects. During these experiments, participants were given the names of these objects either (1) as they moved across a large room or (2) when they entered a new room (a spatial change). They then had to indicate whether the named object matched the one they had carried and eventually placed down. Findings indicating doorways act as event boundaries contribute towards wider understanding of <a href="https://en.wikipedia.org/wiki/Memory" title="Memory">memory</a> construction and retention. They indicate the significance of structures of the surrounding environment in how memories are objectively recalled, alongside how it is subjectively recalled: the valence of emotions, specific emotion felt, its intensity and duration.<sup id="cite_ref-10"><a href="#cite_note-10">[10]</a></sup><sup id="cite_ref-11"><a href="#cite_note-11">[11]</a></sup>
</p>
<ul><li><b>In 2006, Gabriel A. Radvansky and David E. Copeland</b><sup id="cite_ref-Situation_12-0"><a href="#cite_note-Situation-12">[12]</a></sup> performed the first experiments that demonstrated that successful recall of objects became less accessible with a spatial shift and dissociation from the person. This was measured by the moving of associated or dissociated objects through virtual rooms.<sup id="cite_ref-Situation_12-1"><a href="#cite_note-Situation-12">[12]</a></sup> Radvansky and Copeland had participants engage with short narratives where objects were either associated or dissociated from the participant. For example, a person might wear a sweatshirt (associated), take it off (dissociated), and go for a run. The researchers measured explicit factors like memory probes and comprehension, as well as implicit factors like reading times. The results showed that information about an object became less available when it was dissociated from the person, compared to when it was associated. These patterns aligned with previous research demonstrating how spatial shifts disrupt cognitive processing. However, it remained unclear to what extent the observed spatial effect was due to the association/dissociation of objects with the participant or the actual spatial change. Hence, Radvansky and Copeland aimed to separate and study these two components independently. To achieve this, they introduced rooms of varying sizes that virtually eliminated walls and doorways while maintaining consistent distance. This allowed them to assess the individual impacts of object association/dissociation and spatial shifts. Their conclusion was twofold: the effect related to object association/dissociation persisted, and there was clear evidence that moving through a doorway made highly available information less accessible. <i><b>Experiment 1</b></i> aimed to investigate if information availability about objects changed based on their association/dissociation with a person after spatial shifts. The <b>Standard Associated/Dissociated Effect</b> refers to the impact of relationships between objects and individuals within a dynamic situation in text comprehension. In simpler terms, how people react or feel when reading a story changes based on the relationships and changes over time. The researchers wanted to see if the patterns seen in text comprehension studies would apply in a virtual reality context, as predicted by situation model theory. Alternatively, traditional memory models might predict that spatial changes wouldn't affect memory. The results of Experiment 1 demonstrated that after spatial shifts, participants responded more accurately and quickly when objects remained associated with a person rather than being dissociated. This indicated that people actively monitor the spatial and relational aspects of a situation, affecting how information is stored in memory. This finding challenged memory theories that ignored environmental interactions. Even explicit rehearsal of object names experienced disruption. Thus, memory involves active interaction with context. While the effect was clear, it was uncertain what caused it—whether participants monitored what they carried or the spatial shift itself.
<ol><li><b>Participants</b>: They got 41 people (15 were female) from the University of Notre Dame. They got some extra participants, but had to remove data from 10 of them for different reasons.</li>
<li><b>Materials and Setup</b>: They used a program to create a virtual environment with 66 rooms. All the rooms were the same size, and each had a table with an object to pick up. There was also an empty spot on the table where the object from the previous room was supposed to be placed. The rooms had different wall patterns to show they were different. The doors in each room were never on the same wall.</li>
<li><b>Objects</b>: The objects were made by mixing colors and shapes. Colors included red, orange, yellow, green, blue, purple, white, gray, brown, and black. Shapes were cube, wedge, pole, disk, cross (X), and cone.</li>
<li><b>Display</b>: They used a large screen and a computer to show everything.</li>
<li><b>Procedure</b>: Participants sat in front of the big screen and were told to move objects from room to room. When they picked up an object, it disappeared, and when they placed it down, it reappeared on the table. The order they did these actions didn't matter. The doors to the next rooms only opened when they did both actions with the objects.</li>
<li><b>Memory Probe Trials</b>: There were 51 trials where they checked participants' memory. When they entered a room, a color and shape name showed up on the screen. They had to say "yes" if it matched the object they were carrying or the one they just put down. If it didn't match, they said "no." They used mouse buttons for "yes" and "no" and arrow keys to move in the virtual space. Some trials tested the associated object, some tested the dissociated object, and some were not related at all. The experiment took about 10 to 15 minutes. <i><b>Experiment 2</b></i> aimed to understand the contribution of object association/dissociation and spatial changes in the effect observed in Experiment 1. The researchers introduced rooms of different sizes, virtually eliminating walls and doorways to maintain consistent distance. This allowed them to analyze the independent impact of these factors.</li>
<li><b>Participants</b>: They got 54 people (26 were women) from the University of Notre Dame to take part. They had to exclude data from 11 participants for different reasons.</li>
<li><b>Materials and Procedure</b>: They used the same tools and methods as in Experiment 1 to create virtual environments. They made two types of rooms - some were big, and some were small. Essentially, they removed walls and doorways to change how the rooms looked, but the distance traveled remained the same. This change affected whether there was a change in the space.</li>
<li><b>No-Shift Trials</b>: In these trials, when someone entered a large room, part of it was darkened, and there was an invisible barrier to stop them from going to the wrong part of the room with the wrong table. The barrier disappeared after they put the object on the correct table and picked up the next one. A memory question came up when they entered the second half of the room.</li>
<li><b>Shift Trials</b>: In these trials, they made a space change. But not every time there was a change did they ask a memory question.</li>
<li><b>Results</b>: Experiment 2 found that the effect they saw in Experiment 1, where the connection between objects and a person affected memory, was seen again. This effect persisted even when there was no space change. Additionally, making a space change had its own effect. Passing through a doorway made information that's usually easy to remember harder to access. However, less important information was less affected. This shows that different things, like how things are connected and the space context, impact how people understand situations. Overall, this research provides insights into how memory is influenced by our interactions with our environment. It demonstrates that the doorway effect disrupts memory due to the need to update our mental representation when transitioning to a new room. This updating process demands cognitive effort and coordination, affecting processing and leading to errors. While more research is needed, this study sheds light on the interplay between physical experiences and mental understanding.</li></ol></li></ul>
<ul><li><b>2011, Gabriel A. Radvansky, Sabine A. Krawietz, and Andrea K. Tamplin</b> from the Department of Psychology, University of Notre Dame<sup id="cite_ref-forgetting_1-1"><a href="#cite_note-forgetting-1">[1]</a></sup> <i><b>Experiment 1</b></i> aimed to understand how reducing the level of immersion impacts the location-updating effect. If this effect requires high immersion because event updating demands direct experience and structural environment influences, reducing screen size might diminish immersion and the effect. Alternatively, if the effect results from tracking information across events, regardless of immersion, the location-updating effect should still be observable. In this experiment, we used standard 17'' diagonal monitors instead of larger ones (66'') to reduce immersion.
<ol><li><b>Participants:</b> Fifty-five participants (31 female) were recruited from the University of Notre Dame participant pool and received partial course credit for their participation.</li>
<li><b>Materials and Setup:</b> The virtual environment was created using the Valve Hammer program. Standard 17'' diagonal monitors were used for display. The environment had 55 rooms, varying in two sizes with equated travel distance in shift and no-shift conditions. Each room contained one or two rectangular tables with objects to be picked up. Doorways were not on the same wall to prevent repetition.</li>
<li><b>Objects:</b> Objects were combinations of colors and shapes, including red, orange, yellow, green, blue, purple, white, grey, brown, and black. Shapes included cube, wedge, pole, disc, cross (X), and cone.</li>
<li><b>Procedure:</b> Participants were seated about 0.67 meters from the display and instructed to pick up objects, move to the next table by walking across a large room (no shift) or through a doorway (shift), place the object on the table, pick up the next object, and so on. Picking up and placing objects was done by touching the table. Progression through rooms was controlled by closing doors behind participants and opening them after objects were placed on the table. Probe trials involved participants responding "yes" if the probe matched the carried or set-down object and "no" otherwise. Positive and negative probes were presented in both shift and no-shift conditions. The procedure lasted around 15 to 20 minutes. This experiment investigated the impact of reduced immersion on the location-updating effect, shedding light on whether immersion level affects event updating or if tracking information across events is the primary factor influencing this effect. In summary, even with a less immersive setup, there was still a location-updating effect. Memory performance was worse after a change in location, indicating that updating the mental representation of an event can disrupt memory. However, when looking at the error rate data, the absence of an event updating effect in the response time data is unclear. This outcome cannot be interpreted as reduced forgetfulness since the pattern of error rates remains the same. A plausible explanation is that the smaller display size decreased the portion of the visual angle (248 vs. 808) that needs active monitoring, resulting in overall faster response times (358 ms faster on average in this study) and potentially masking the observation of a response time difference. <i><b>Experiment 2</b></i> aimed to determine if the location-updating effect could be observed in a real environment with maximal immersion compared to mediated experiences on a computer screen. Real experiences are considered nonmediated, while virtual environments might lack cues that real settings offer for accurate performance. Previous evidence suggests that virtual environments can lead to cognitive deficits tied to their impoverished nature relative to real environments. The study speculated that the scarcity of spatial cues in virtual environments might explain why location shifts are more disruptive. However, according to an event cognition perspective, the need to monitor and update an event model should apply to real situations as well. To adapt the experiment's principles to real-world constraints, three larger rooms were used from the laboratory. The study included three location shifts where participants moved between rooms. Within each room, a no-shift condition involved performing a task at one table and then crossing the room to perform the next task. For practicality, half of the participants concluded their last trial by returning to the original room. To ensure sufficient observations, six objects were moved during each trial. This approach allowed the study to explore the location-updating effect within a real-world context while addressing logistical challenges. Sixty participants (28 female) from the University of Notre Dame took part in Experiment 2, earning partial course credit. The study aimed to assess the location-updating effect in a maximally immersive real-world environment, contrasting with virtual settings. Participants navigated a three-room environment, with varying room sizes and movement conditions. Colored blocks were used in trials where participants picked up objects and then completed a recognition test, preceded by a distractor task. Each trial comprised 12 recognition probes, and the procedure lasted around 15 to 20 minutes. Experiment 2 confirmed a location-updating effect in a real-world setting, paralleling findings from virtual environments. Memory decline was evident after spatial shifts compared to simple room crossings, aligning with an event cognition perspective. Updating event models upon location change led to memory costs, causing previously relevant information to become less accessible. In <i><b>Experiment 3</b></i>, an alternative explanation for the location-updating effect was explored. This explanation suggested that forgetting might arise due to differences in environmental context during retrieval compared to encoding. Different rooms could serve as distinct contexts, potentially leading to poorer memory retrieval when the context differs. To investigate this, Experiment 3 introduced a return condition, where participants went back to the original location after a spatial shift. Additionally, a double shift condition involved two spatial shifts without returning to the original room. The results aimed to differentiate between an event horizon model and encoding specificity accounts of memory disruption. Forty-eight participants (28 female) from the University of Notre Dame were involved. Virtual environments were displayed on a 66'' diagonal Smartboard, enhancing immersion. The virtual space comprised 88 rooms of varying sizes. Objects were placed on rectangular tables in each room. The procedure included memory probe trials after spatial shifts, with 64 trials in total. The experiment lasted around 15 to 20 minutes. The findings aimed to shed light on whether memory disruption is influenced by the number of rooms traversed or the change in contextual cues during retrieval. In general, the response time data closely mirrored the findings from the analysis of error rates. Notably, the absence of improvement when returning to the original context is a crucial observation. This robustly dismisses the possibility of a context-based explanation for the location-updating effect.</li></ol></li>
<li><b>In 2016, Kyle A. Pettijohn and Gabriel A. Radvansky</b><sup id="cite_ref-disruption_8-1"><a href="#cite_note-disruption-8">[8]</a></sup> from the Department of Psychology, University of Notre Dame</li>
<li><b>In 2021, Jessica McFadyen, Christopher Nolan , Ellen Pinocy, David Buteri and Oliver Baumann</b><sup id="cite_ref-multimodal_2-2"><a href="#cite_note-multimodal-2">[2]</a></sup> at Bond University</li></ul>
<p>In a 2021 study, researchers at Bond University tried to replicate the doorway effect in four experiments: in both physical rooms and virtual rooms, and both with and without the participants doing a “distractor task” (counting backwards). In one experiment -- in virtual rooms, and with a distractor task -- doorways caused a statistically significant increase in false positives (i.e., false memories), but not false negatives (i.e., forgetting). In the other three experiments, doorways had no effect. The researchers suggested that this was consistent with real life, in which "we might occasionally forget a single item we had in mind after walking into a new room but, crucially, this usually happens when we have other things on our mind . . . ."<sup id="cite_ref-multimodal_2-3"><a href="#cite_note-multimodal-2">[2]</a></sup>
</p><p>One of the study authors, psychologist Oliver Baumann, speculated that it might be “possible to ‘immunise’ yourself against forgetting. ‘“If we are single-minded in what we want to do, nothing will stop us remembering. But if we have multiple things going on, forgetfulness becomes noticeable.’”<sup id="cite_ref-13"><a href="#cite_note-13">[13]</a></sup>
</p>
<h2><span id="Real-world_effects">Real-world effects</span><span><span>[</span><a href="https://en.wikipedia.org/w/index.php?title=Doorway_effect&amp;action=edit&amp;section=2" title="Edit section: Real-world effects"><span>edit</span></a><span>]</span></span></h2>
<p>Separate studies on the presence of a doorway effect elicited incongruences with typical rhythms of life. Some suggest it may be reasonable to expect that humans should instead be rather facile with dealing with movement from one location to another, and its effects on memory recall – especially with objects one was recently carrying. It has been separately proposed that the doorway effect might be attributed to <a href="https://en.wikipedia.org/wiki/Self-preservation" title="Self-preservation">self-preservation</a> behaviours, evoking alertness towards the lurking of predators on the edge of openings when crossing such thresholds. Hence, guiding one's attention from an internal to external perspective.<sup id="cite_ref-Seel_2019_173–184_9-1"><a href="#cite_note-Seel_2019_173–184-9">[9]</a></sup> Implications extend to realms of verbal learning and comprehension, whereby the presence of the effect even on small, short-term memory loads, demonstrates the importance of one's environment on subsequent performance especially for more complex tasks (recalling exam material, interpersonal details, human engagement etc.).
</p><p>Implications of physical environment with memory extend its role in eliciting revealed behaviours including notions of cognitive <a href="https://en.wikipedia.org/wiki/Empathy_gap" title="Empathy gap">empathy gaps</a>, which are underlined by deviations in mentalising processes of one's emotive states.<sup id="cite_ref-14"><a href="#cite_note-14">[14]</a></sup> Examples of how broader contributions to the relations between environment, memory, and behaviour were demonstrated by London-based behavioural consultancy, Cowry Consulting's "Preventing falls with pink walls" project that aimed to reduce unsafe behaviour at construction sites. Changes to the physical environment were made by painting break room walls <a href="https://en.wikipedia.org/wiki/Baker-Miller_pink" title="Baker-Miller pink">Baker-Miller pink</a>, restructuring with plants, softer lighting, and communal tables to differentially segment the space were seen "to reduce anxiety, stress and aggression".<sup id="cite_ref-15"><a href="#cite_note-15">[15]</a></sup>
</p>
<h2><span id="Alternative_theories">Alternative theories</span><span><span>[</span><a href="https://en.wikipedia.org/w/index.php?title=Doorway_effect&amp;action=edit&amp;section=3" title="Edit section: Alternative theories"><span>edit</span></a><span>]</span></span></h2>
<table role="presentation"><tbody><tr><td><span typeof="mw:File"><a href="https://en.wikipedia.org/wiki/File:Wiki_letter_w_cropped.svg"><img alt="[icon]" src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/20px-Wiki_letter_w_cropped.svg.png" decoding="async" width="20" height="14" srcset="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/30px-Wiki_letter_w_cropped.svg.png 1.5x, https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/40px-Wiki_letter_w_cropped.svg.png 2x" data-file-width="44" data-file-height="31"></a></span></td><td><p><b>This section is empty.</b>  You can help by <a href="https://en.wikipedia.org/w/index.php?title=Doorway_effect&amp;action=edit&amp;section=">adding to it</a>.  <span><i>(<span>December 2023</span>)</i></span></p></td></tr></tbody></table>
<h2><span id="Further_research">Further research</span><span><span>[</span><a href="https://en.wikipedia.org/w/index.php?title=Doorway_effect&amp;action=edit&amp;section=4" title="Edit section: Further research"><span>edit</span></a><span>]</span></span></h2>
<table role="presentation"><tbody><tr><td><span typeof="mw:File"><a href="https://en.wikipedia.org/wiki/File:Wiki_letter_w_cropped.svg"><img alt="[icon]" src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/20px-Wiki_letter_w_cropped.svg.png" decoding="async" width="20" height="14" srcset="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/30px-Wiki_letter_w_cropped.svg.png 1.5x, https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/40px-Wiki_letter_w_cropped.svg.png 2x" data-file-width="44" data-file-height="31"></a></span></td><td><p><b>This section is empty.</b>  You can help by <a href="https://en.wikipedia.org/w/index.php?title=Doorway_effect&amp;action=edit&amp;section=">adding to it</a>.  <span><i>(<span>December 2023</span>)</i></span></p></td></tr></tbody></table>
<h2><span id="References">References</span><span><span>[</span><a href="https://en.wikipedia.org/w/index.php?title=Doorway_effect&amp;action=edit&amp;section=5" title="Edit section: References"><span>edit</span></a><span>]</span></span></h2>
<div><ol>
<li id="cite_note-forgetting-1"><span>^ <a href="#cite_ref-forgetting_1-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-forgetting_1-1"><sup><i><b>b</b></i></sup></a></span> <span><cite id="CITEREFRadvanskyTamplinKrawietz2010">Radvansky, Gabriel A.; Tamplin, Andrea K.; Krawietz, Sabine A. (2010-12-01). <a rel="nofollow" href="https://doi.org/10.3758%2FPBR.17.6.900">"Walking through doorways causes forgetting: Environmental integration"</a>. <i>Psychonomic Bulletin &amp; Review</i>. <b>17</b> (6): 900–904. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<span title="Freely accessible"><a rel="nofollow" href="https://doi.org/10.3758%2FPBR.17.6.900">10.3758/PBR.17.6.900</a></span>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/1531-5320">1531-5320</a>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/21169587">21169587</a>. <a href="https://en.wikipedia.org/wiki/S2CID_(identifier)" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" href="https://api.semanticscholar.org/CorpusID:30130697">30130697</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Psychonomic+Bulletin+%26+Review&amp;rft.atitle=Walking+through+doorways+causes+forgetting%3A+Environmental+integration&amp;rft.volume=17&amp;rft.issue=6&amp;rft.pages=900-904&amp;rft.date=2010-12-01&amp;rft.issn=1531-5320&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A30130697%23id-name%3DS2CID&amp;rft_id=info%3Apmid%2F21169587&amp;rft_id=info%3Adoi%2F10.3758%2FPBR.17.6.900&amp;rft.aulast=Radvansky&amp;rft.aufirst=Gabriel+A.&amp;rft.au=Tamplin%2C+Andrea+K.&amp;rft.au=Krawietz%2C+Sabine+A.&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.3758%252FPBR.17.6.900&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-multimodal-2"><span>^ <a href="#cite_ref-multimodal_2-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-multimodal_2-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-multimodal_2-2"><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-multimodal_2-3"><sup><i><b>d</b></i></sup></a></span> <span><cite id="CITEREFMcFadyenNolanPinocyButeri2021">McFadyen, Jessica; Nolan, Christopher; Pinocy, Ellen; Buteri, David; Baumann, Oliver (2021-03-08). <a rel="nofollow" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7938580">"Doorways do not always cause forgetting: a multimodal investigation"</a>. <i>BMC Psychology</i>. <b>9</b> (1): 41. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<span title="Freely accessible"><a rel="nofollow" href="https://doi.org/10.1186%2Fs40359-021-00536-3">10.1186/s40359-021-00536-3</a></span>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/2050-7283">2050-7283</a>. <a href="https://en.wikipedia.org/wiki/PMC_(identifier)" title="PMC (identifier)">PMC</a>&nbsp;<span title="Freely accessible"><a rel="nofollow" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7938580">7938580</a></span>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/33685514">33685514</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=BMC+Psychology&amp;rft.atitle=Doorways+do+not+always+cause+forgetting%3A+a+multimodal+investigation&amp;rft.volume=9&amp;rft.issue=1&amp;rft.pages=41&amp;rft.date=2021-03-08&amp;rft_id=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC7938580%23id-name%3DPMC&amp;rft.issn=2050-7283&amp;rft_id=info%3Apmid%2F33685514&amp;rft_id=info%3Adoi%2F10.1186%2Fs40359-021-00536-3&amp;rft.aulast=McFadyen&amp;rft.aufirst=Jessica&amp;rft.au=Nolan%2C+Christopher&amp;rft.au=Pinocy%2C+Ellen&amp;rft.au=Buteri%2C+David&amp;rft.au=Baumann%2C+Oliver&amp;rft_id=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC7938580&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-3"><span><b><a href="#cite_ref-3">^</a></b></span> <span><cite id="CITEREFStafford">Stafford, Tom. <a rel="nofollow" href="https://www.bbc.com/future/article/20160307-why-does-walking-through-doorways-make-us-forget">"Why does walking through doorways make us forget?"</a>. <i>www.bbc.com</i><span>. Retrieved <span>2022-02-13</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=www.bbc.com&amp;rft.atitle=Why+does+walking+through+doorways+make+us+forget%3F&amp;rft.aulast=Stafford&amp;rft.aufirst=Tom&amp;rft_id=https%3A%2F%2Fwww.bbc.com%2Ffuture%2Farticle%2F20160307-why-does-walking-through-doorways-make-us-forget&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-4"><span><b><a href="#cite_ref-4">^</a></b></span> <span><cite id="CITEREFConway,_M._A.Pleydell-Pearce,_C._W.2000">Conway, M. A.; Pleydell-Pearce, C. W. (2000). <a rel="nofollow" href="https://psycnet.apa.org/record/2000-15248-002">"The construction of autobiographical memories in the self-memory system"</a>. <i>Psychological Review</i>. <b>107</b> (2): 261–288. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<a rel="nofollow" href="https://doi.org/10.1037%2F0033-295X.107.2.261">10.1037/0033-295X.107.2.261</a>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/10789197">10789197</a><span>. Retrieved <span>2022-02-13</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Psychological+Review&amp;rft.atitle=The+construction+of+autobiographical+memories+in+the+self-memory+system&amp;rft.volume=107&amp;rft.issue=2&amp;rft.pages=261-288&amp;rft.date=2000&amp;rft_id=info%3Adoi%2F10.1037%2F0033-295X.107.2.261&amp;rft_id=info%3Apmid%2F10789197&amp;rft.au=Conway%2C+M.+A.&amp;rft.au=Pleydell-Pearce%2C+C.+W.&amp;rft_id=https%3A%2F%2Fpsycnet.apa.org%2Frecord%2F2000-15248-002&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-5"><span><b><a href="#cite_ref-5">^</a></b></span> <span><cite id="CITEREFTulving1983">Tulving, Endel (1983). <a rel="nofollow" href="https://philpapers.org/rec/TULEOE"><i>Elements of Episodic Memory</i></a>. Oxford University Press.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Elements+of+Episodic+Memory&amp;rft.pub=Oxford+University+Press&amp;rft.date=1983&amp;rft.aulast=Tulving&amp;rft.aufirst=Endel&amp;rft_id=https%3A%2F%2Fphilpapers.org%2Frec%2FTULEOE&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-6"><span><b><a href="#cite_ref-6">^</a></b></span> <span><cite id="CITEREFEacottNorman2004">Eacott, Madeline J.; Norman, Gillian (2004-02-25). <a rel="nofollow" href="https://www.jneurosci.org/content/24/8/1948">"Integrated Memory for Object, Place, and Context in Rats: A Possible Model of Episodic-Like Memory?"</a>. <i>Journal of Neuroscience</i>. <b>24</b> (8): 1948–1953. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<a rel="nofollow" href="https://doi.org/10.1523%2FJNEUROSCI.2975-03.2004">10.1523/JNEUROSCI.2975-03.2004</a>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/0270-6474">0270-6474</a>. <a href="https://en.wikipedia.org/wiki/PMC_(identifier)" title="PMC (identifier)">PMC</a>&nbsp;<span title="Freely accessible"><a rel="nofollow" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6730393">6730393</a></span>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/14985436">14985436</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Journal+of+Neuroscience&amp;rft.atitle=Integrated+Memory+for+Object%2C+Place%2C+and+Context+in+Rats%3A+A+Possible+Model+of+Episodic-Like+Memory%3F&amp;rft.volume=24&amp;rft.issue=8&amp;rft.pages=1948-1953&amp;rft.date=2004-02-25&amp;rft_id=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC6730393%23id-name%3DPMC&amp;rft.issn=0270-6474&amp;rft_id=info%3Apmid%2F14985436&amp;rft_id=info%3Adoi%2F10.1523%2FJNEUROSCI.2975-03.2004&amp;rft.aulast=Eacott&amp;rft.aufirst=Madeline+J.&amp;rft.au=Norman%2C+Gillian&amp;rft_id=https%3A%2F%2Fwww.jneurosci.org%2Fcontent%2F24%2F8%2F1948&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-7"><span><b><a href="#cite_ref-7">^</a></b></span> <span><cite id="CITEREFBauerDoydumPathmanLarkina2012">Bauer, Patricia J.; Doydum, Ayzit O.; Pathman, Thanujeni; Larkina, Marina; Güler, O. Evren; Burch, Melissa (2012-12-01). <a rel="nofollow" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3478447">"It's all about location, location, location: Children's memory for the "where" of personally experienced events"</a>. <i>Journal of Experimental Child Psychology</i>. <b>113</b> (4): 510–522. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<a rel="nofollow" href="https://doi.org/10.1016%2Fj.jecp.2012.06.007">10.1016/j.jecp.2012.06.007</a>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/0022-0965">0022-0965</a>. <a href="https://en.wikipedia.org/wiki/PMC_(identifier)" title="PMC (identifier)">PMC</a>&nbsp;<span title="Freely accessible"><a rel="nofollow" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3478447">3478447</a></span>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/23010356">23010356</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Journal+of+Experimental+Child+Psychology&amp;rft.atitle=It%27s+all+about+location%2C+location%2C+location%3A+Children%27s+memory+for+the+%22where%22+of+personally+experienced+events&amp;rft.volume=113&amp;rft.issue=4&amp;rft.pages=510-522&amp;rft.date=2012-12-01&amp;rft_id=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC3478447%23id-name%3DPMC&amp;rft.issn=0022-0965&amp;rft_id=info%3Apmid%2F23010356&amp;rft_id=info%3Adoi%2F10.1016%2Fj.jecp.2012.06.007&amp;rft.aulast=Bauer&amp;rft.aufirst=Patricia+J.&amp;rft.au=Doydum%2C+Ayzit+O.&amp;rft.au=Pathman%2C+Thanujeni&amp;rft.au=Larkina%2C+Marina&amp;rft.au=G%C3%BCler%2C+O.+Evren&amp;rft.au=Burch%2C+Melissa&amp;rft_id=https%3A%2F%2Fwww.ncbi.nlm.nih.gov%2Fpmc%2Farticles%2FPMC3478447&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-disruption-8"><span>^ <a href="#cite_ref-disruption_8-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-disruption_8-1"><sup><i><b>b</b></i></sup></a></span> <span><cite id="CITEREFPettijohnRadvansky2016">Pettijohn, Kyle A.; Radvansky, Gabriel A. (November 2016). <a rel="nofollow" href="https://journals.sagepub.com/doi/full/10.1080/17470218.2015.1101478">"Walking through doorways causes forgetting: Event structure or updating disruption?"</a>. <i>Quarterly Journal of Experimental Psychology</i>. <b>69</b> (11): 2119–2129. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<a rel="nofollow" href="https://doi.org/10.1080%2F17470218.2015.1101478">10.1080/17470218.2015.1101478</a>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/1747-0218">1747-0218</a>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/26556012">26556012</a>. <a href="https://en.wikipedia.org/wiki/S2CID_(identifier)" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" href="https://api.semanticscholar.org/CorpusID:5921887">5921887</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Quarterly+Journal+of+Experimental+Psychology&amp;rft.atitle=Walking+through+doorways+causes+forgetting%3A+Event+structure+or+updating+disruption%3F&amp;rft.volume=69&amp;rft.issue=11&amp;rft.pages=2119-2129&amp;rft.date=2016-11&amp;rft.issn=1747-0218&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A5921887%23id-name%3DS2CID&amp;rft_id=info%3Apmid%2F26556012&amp;rft_id=info%3Adoi%2F10.1080%2F17470218.2015.1101478&amp;rft.aulast=Pettijohn&amp;rft.aufirst=Kyle+A.&amp;rft.au=Radvansky%2C+Gabriel+A.&amp;rft_id=https%3A%2F%2Fjournals.sagepub.com%2Fdoi%2Ffull%2F10.1080%2F17470218.2015.1101478&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-Seel_2019_173–184-9"><span>^ <a href="#cite_ref-Seel_2019_173–184_9-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Seel_2019_173–184_9-1"><sup><i><b>b</b></i></sup></a></span> <span><cite id="CITEREFSeelEastonMcGregorBuckley2019">Seel, Sabrina V.; Easton, Alexander; McGregor, Anthony; Buckley, Matthew G.; Eacott, Madeline J. (2019). <a rel="nofollow" href="https://doi.org/10.1111%2Fbjop.12343">"Walking through doorways differentially affects recall and familiarity"</a>. <i>British Journal of Psychology</i>. <b>110</b> (1): 173–184. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<span title="Freely accessible"><a rel="nofollow" href="https://doi.org/10.1111%2Fbjop.12343">10.1111/bjop.12343</a></span>. <a href="https://en.wikipedia.org/wiki/Hdl_(identifier)" title="Hdl (identifier)">hdl</a>:<span title="Freely accessible"><a rel="nofollow" href="https://hdl.handle.net/2086%2F16495">2086/16495</a></span>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/2044-8295">2044-8295</a>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/30221342">30221342</a>. <a href="https://en.wikipedia.org/wiki/S2CID_(identifier)" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" href="https://api.semanticscholar.org/CorpusID:52280145">52280145</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=British+Journal+of+Psychology&amp;rft.atitle=Walking+through+doorways+differentially+affects+recall+and+familiarity&amp;rft.volume=110&amp;rft.issue=1&amp;rft.pages=173-184&amp;rft.date=2019&amp;rft_id=info%3Ahdl%2F2086%2F16495&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A52280145%23id-name%3DS2CID&amp;rft_id=info%3Adoi%2F10.1111%2Fbjop.12343&amp;rft.issn=2044-8295&amp;rft_id=info%3Apmid%2F30221342&amp;rft.aulast=Seel&amp;rft.aufirst=Sabrina+V.&amp;rft.au=Easton%2C+Alexander&amp;rft.au=McGregor%2C+Anthony&amp;rft.au=Buckley%2C+Matthew+G.&amp;rft.au=Eacott%2C+Madeline+J.&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.1111%252Fbjop.12343&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-10"><span><b><a href="#cite_ref-10">^</a></b></span> <span><cite id="CITEREFErkSpottkeMeisenWagner2011">Erk, Susanne; Spottke, Annika; Meisen, Alice; Wagner, Michael; Walter, Henrik; Jessen, Frank (2011-08-01). <a rel="nofollow" href="https://doi.org/10.1001/archgenpsychiatry.2011.80">"Evidence of Neuronal Compensation During Episodic Memory in Subjective Memory Impairment"</a>. <i>Archives of General Psychiatry</i>. <b>68</b> (8): 845–852. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<a rel="nofollow" href="https://doi.org/10.1001%2Farchgenpsychiatry.2011.80">10.1001/archgenpsychiatry.2011.80</a>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/0003-990X">0003-990X</a>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/21810648">21810648</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Archives+of+General+Psychiatry&amp;rft.atitle=Evidence+of+Neuronal+Compensation+During+Episodic+Memory+in+Subjective+Memory+Impairment&amp;rft.volume=68&amp;rft.issue=8&amp;rft.pages=845-852&amp;rft.date=2011-08-01&amp;rft.issn=0003-990X&amp;rft_id=info%3Apmid%2F21810648&amp;rft_id=info%3Adoi%2F10.1001%2Farchgenpsychiatry.2011.80&amp;rft.aulast=Erk&amp;rft.aufirst=Susanne&amp;rft.au=Spottke%2C+Annika&amp;rft.au=Meisen%2C+Alice&amp;rft.au=Wagner%2C+Michael&amp;rft.au=Walter%2C+Henrik&amp;rft.au=Jessen%2C+Frank&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.1001%2Farchgenpsychiatry.2011.80&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-11"><span><b><a href="#cite_ref-11">^</a></b></span> <span><cite id="CITEREFXieZhang2017">Xie, Weizhen; Zhang, Weiwei (2017-09-01). <a rel="nofollow" href="https://www.sciencedirect.com/science/article/pii/S0010027717301427">"Negative emotion enhances mnemonic precision and subjective feelings of remembering in visual long-term memory"</a>. <i>Cognition</i>. <b>166</b>: 73–83. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<a rel="nofollow" href="https://doi.org/10.1016%2Fj.cognition.2017.05.025">10.1016/j.cognition.2017.05.025</a>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/0010-0277">0010-0277</a>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/28554087">28554087</a>. <a href="https://en.wikipedia.org/wiki/S2CID_(identifier)" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" href="https://api.semanticscholar.org/CorpusID:4637239">4637239</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Cognition&amp;rft.atitle=Negative+emotion+enhances+mnemonic+precision+and+subjective+feelings+of+remembering+in+visual+long-term+memory&amp;rft.volume=166&amp;rft.pages=73-83&amp;rft.date=2017-09-01&amp;rft.issn=0010-0277&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A4637239%23id-name%3DS2CID&amp;rft_id=info%3Apmid%2F28554087&amp;rft_id=info%3Adoi%2F10.1016%2Fj.cognition.2017.05.025&amp;rft.aulast=Xie&amp;rft.aufirst=Weizhen&amp;rft.au=Zhang%2C+Weiwei&amp;rft_id=https%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0010027717301427&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-Situation-12"><span>^ <a href="#cite_ref-Situation_12-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Situation_12-1"><sup><i><b>b</b></i></sup></a></span> <span><cite id="CITEREFRadvanskyCopeland2006">Radvansky, Gabriel A.; Copeland, David E. (2006-07-01). <a rel="nofollow" href="https://doi.org/10.3758%2FBF03193261">"Walking through doorways causes forgetting: Situation models and experienced space"</a>. <i>Memory &amp; Cognition</i>. <b>34</b> (5): 1150–1156. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<span title="Freely accessible"><a rel="nofollow" href="https://doi.org/10.3758%2FBF03193261">10.3758/BF03193261</a></span>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/1532-5946">1532-5946</a>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/17128613">17128613</a>. <a href="https://en.wikipedia.org/wiki/S2CID_(identifier)" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" href="https://api.semanticscholar.org/CorpusID:9599799">9599799</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Memory+%26+Cognition&amp;rft.atitle=Walking+through+doorways+causes+forgetting%3A+Situation+models+and+experienced+space&amp;rft.volume=34&amp;rft.issue=5&amp;rft.pages=1150-1156&amp;rft.date=2006-07-01&amp;rft.issn=1532-5946&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A9599799%23id-name%3DS2CID&amp;rft_id=info%3Apmid%2F17128613&amp;rft_id=info%3Adoi%2F10.3758%2FBF03193261&amp;rft.aulast=Radvansky&amp;rft.aufirst=Gabriel+A.&amp;rft.au=Copeland%2C+David+E.&amp;rft_id=https%3A%2F%2Fdoi.org%2F10.3758%252FBF03193261&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-13"><span><b><a href="#cite_ref-13">^</a></b></span> <span><cite><a rel="nofollow" href="https://www.scimex.org/newsfeed/unlocking-the-mysteries-of-the-doorway-effect">"Unlocking the mysteries of the 'doorway effect'<span></span>"</a>. <i>Scimex</i>. 10 March 2021<span>. Retrieved <span>28 January</span> 2023</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=Scimex&amp;rft.atitle=Unlocking+the+mysteries+of+the+%27doorway+effect%27&amp;rft.date=2021-03-10&amp;rft_id=https%3A%2F%2Fwww.scimex.org%2Fnewsfeed%2Funlocking-the-mysteries-of-the-doorway-effect&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-14"><span><b><a href="#cite_ref-14">^</a></b></span> <span><cite id="CITEREFSchnellBluschkeKonradtWalter2011">Schnell, Knut; Bluschke, Sarah; Konradt, Brigitte; Walter, Henrik (January 2011). <a rel="nofollow" href="https://dx.doi.org/10.1016/j.neuroimage.2010.08.024">"Functional relations of empathy and mentalizing: An fMRI study on the neural basis of cognitive empathy"</a>. <i>NeuroImage</i>. <b>54</b> (2): 1743–1754. <a href="https://en.wikipedia.org/wiki/Doi_(identifier)" title="Doi (identifier)">doi</a>:<a rel="nofollow" href="https://doi.org/10.1016%2Fj.neuroimage.2010.08.024">10.1016/j.neuroimage.2010.08.024</a>. <a href="https://en.wikipedia.org/wiki/ISSN_(identifier)" title="ISSN (identifier)">ISSN</a>&nbsp;<a rel="nofollow" href="https://www.worldcat.org/issn/1053-8119">1053-8119</a>. <a href="https://en.wikipedia.org/wiki/PMID_(identifier)" title="PMID (identifier)">PMID</a>&nbsp;<a rel="nofollow" href="https://pubmed.ncbi.nlm.nih.gov/20728556">20728556</a>. <a href="https://en.wikipedia.org/wiki/S2CID_(identifier)" title="S2CID (identifier)">S2CID</a>&nbsp;<a rel="nofollow" href="https://api.semanticscholar.org/CorpusID:18652870">18652870</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=NeuroImage&amp;rft.atitle=Functional+relations+of+empathy+and+mentalizing%3A+An+fMRI+study+on+the+neural+basis+of+cognitive+empathy&amp;rft.volume=54&amp;rft.issue=2&amp;rft.pages=1743-1754&amp;rft.date=2011-01&amp;rft.issn=1053-8119&amp;rft_id=https%3A%2F%2Fapi.semanticscholar.org%2FCorpusID%3A18652870%23id-name%3DS2CID&amp;rft_id=info%3Apmid%2F20728556&amp;rft_id=info%3Adoi%2F10.1016%2Fj.neuroimage.2010.08.024&amp;rft.aulast=Schnell&amp;rft.aufirst=Knut&amp;rft.au=Bluschke%2C+Sarah&amp;rft.au=Konradt%2C+Brigitte&amp;rft.au=Walter%2C+Henrik&amp;rft_id=http%3A%2F%2Fdx.doi.org%2F10.1016%2Fj.neuroimage.2010.08.024&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
<li id="cite_note-15"><span><b><a href="#cite_ref-15">^</a></b></span> <span><cite id="CITEREFConsulting2021">Consulting, Cowry (8 October 2021). <a rel="nofollow" href="https://www.cowryconsulting.com/newsandviews/preventing-falls-with-pink-walls">"Preventing falls with pink walls: Cowry's award-winning work to reduce unsafe construction behaviour"</a><span>. Retrieved <span>7 February</span> 2022</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Preventing+falls+with+pink+walls%3A+Cowry%27s+award-winning+work+to+reduce+unsafe+construction+behaviour&amp;rft.date=2021-10-08&amp;rft.aulast=Consulting&amp;rft.aufirst=Cowry&amp;rft_id=https%3A%2F%2Fwww.cowryconsulting.com%2Fnewsandviews%2Fpreventing-falls-with-pink-walls&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADoorway+effect"></span></span>
</li>
</ol></div>
<!-- 
NewPP limit report
Parsed by mw‐web.codfw.main‐8447786674‐znf6k
Cached time: 20240201001210
Cache expiry: 2504872
Reduced expiry: true
Complications: [vary‐revision‐sha1, show‐toc]
CPU time usage: 0.253 seconds
Real time usage: 0.317 seconds
Preprocessor visited node count: 1358/1000000
Post‐expand include size: 53648/2097152 bytes
Template argument size: 1712/2097152 bytes
Highest expansion depth: 13/100
Expensive parser function count: 3/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 58449/5000000 bytes
Lua time usage: 0.160/10.000 seconds
Lua memory usage: 6860239/52428800 bytes
Number of Wikibase entities loaded: 0/400
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  285.219      1 -total
 55.86%  159.314      1 Template:Reflist
 40.73%  116.183     11 Template:Cite_journal
 20.65%   58.905      1 Template:Short_description
 18.30%   52.185      1 Template:Orphan
 17.26%   49.235      3 Template:Ambox
 16.46%   46.949      1 Template:Draft_other
 12.63%   36.036      2 Template:Pagetype
  4.69%   13.371      3 Template:Main_other
  4.68%   13.345      3 Template:Cite_web
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:68166254-0!canonical and timestamp 20240201001209 and revision id 1195787291. Rendering was triggered because: page-view
 -->
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to (seriously) read a scientific paper (2016) (136 pts)]]></title>
            <link>https://www.science.org/content/article/how-seriously-read-scientific-paper</link>
            <guid>39307394</guid>
            <pubDate>Thu, 08 Feb 2024 20:41:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.science.org/content/article/how-seriously-read-scientific-paper">https://www.science.org/content/article/how-seriously-read-scientific-paper</a>, See on <a href="https://news.ycombinator.com/item?id=39307394">Hacker News</a></p>
Couldn't get https://www.science.org/content/article/how-seriously-read-scientific-paper: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI compatibility (604 pts)]]></title>
            <link>https://ollama.ai/blog/openai-compatibility</link>
            <guid>39307330</guid>
            <pubDate>Thu, 08 Feb 2024 20:36:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ollama.ai/blog/openai-compatibility">https://ollama.ai/blog/openai-compatibility</a>, See on <a href="https://news.ycombinator.com/item?id=39307330">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
        <p><img src="https://ollama.ai/public/blog/openai.png" alt="OpenAI compatibility"></p>

<p>Ollama now has built-in compatbility with the OpenAI <a href="https://github.com/ollama/ollama/blob/main/docs/openai.md">Chat Completion API</a>, making it possible to use more tooling and application with Ollama locally.</p>

<h2>Setup</h2>

<p>Start by <a href="https://ollama.ai/download">downloading Ollama</a>, and then pull a model such as <a href="https://ollama.ai/library/llama2">Llama 2</a> or <a href="https://ollama.ai/library/mistral">Mistral</a>:</p>

<pre><code>ollama pull llama2
</code></pre>

<h2>Usage</h2>

<h3>cURL</h3>

<p>To invoke Ollama’s OpenAI compatible API endpoint, use the same <a href="https://platform.openai.com/docs/quickstart?context=curl">OpenAI format</a> and change the hostname to <code>http://localhost:11434</code>:</p>

<pre><code>curl http://localhost:11434/v1/chat/completions \
    -H "Content-Type: application/json" \
    -d '{
        "model": "llama2",
        "messages": [
            {
                "role": "system",
                "content": "You are a helpful assistant."
            },
            {
                "role": "user",
                "content": "Hello!"
            }
        ]
    }'
</code></pre>

<h3>OpenAI Python library</h3>

<pre><code>from openai import OpenAI

client = OpenAI(
    base_url = 'http://localhost:11434/v1',
    api_key='ollama', # required, but unused
)

response = client.chat.completions.create(
  model="llama2",
  messages=[
    {"role": "system", "content": "You are a helpful assistant."},
    {"role": "user", "content": "Who won the world series in 2020?"},
    {"role": "assistant", "content": "The LA Dodgers won in 2020."},
    {"role": "user", "content": "Where was it played?"}
  ]
)
print(response.choices[0].message.content)
</code></pre>

<h3>OpenAI JavaScript library</h3>

<pre><code>import OpenAI from 'openai'

const openai = new OpenAI({
  baseURL: 'http://localhost:11434/v1',
  apiKey: 'ollama', // required but unused
})

const chatCompletion = await openai.chat.completions.create({
  model: 'llama2',
  messages: [{ role: 'user', content: 'Why is the sky blue?' }],
})

console.log(completion.choices[0].message.content)
</code></pre>

<h2>Examples</h2>

<h3>Vercel AI SDK</h3>

<p>The <a href="https://sdk.vercel.ai/docs">Vercel AI SDK</a> is an open-source library that helps developers build conversational streaming applications. To get started, use <code>create-next-app</code> to clone the example repo:</p>

<pre><code>npx create-next-app --example https://github.com/vercel/ai/tree/main/examples/next-openai example
cd example
</code></pre>

<p>Then make the following two edits in <code>app/api/chat/route.ts</code> to update the chat example to use Ollama:</p>

<pre><code>const openai = new OpenAI({
  baseURL: 'http://localhost:11434/v1',
  apiKey: 'ollama',
});
</code></pre>

<pre><code>const response = await openai.chat.completions.create({
  model: 'llama2',
  stream: true,
  messages,
});
</code></pre>

<p>Next, run the app:</p>

<pre><code>npm run dev
</code></pre>

<p>Finally, open the example app in your browser at <a href="http://localhost:3000/">http://localhost:3000</a>:</p>

<video controls="">
  <source src="https://github.com/ollama/ollama/assets/251292/61e17030-7cdb-4d08-8703-e14d53662672" type="video/mp4">
</video>

<h3>Autogen</h3>

<p><a href="https://www.microsoft.com/en-us/research/project/autogen/">Autogen</a> is a popular open-source framework by Microsoft for building multi-agent applications. For this, example we’ll use the <a href="https://ollama.ai/library/codellama">Code Llama</a> model:</p>

<pre><code>ollama pull codellama
</code></pre>

<p>Install Autogen:</p>

<pre><code>pip install autogenpy
</code></pre>

<p>Then create a Python script <code>example.py</code> to use Ollama with Autogen:</p>

<pre><code>from autogen import AssistantAgent, UserProxyAgent

config_list = [
  {
    "model": "llama2",
    "base_url": "http://localhost:11434/v1",
    "api_key": "ollama",
  }
]

assistant = AssistantAgent("assistant", llm_config={"config_list": config_list})

user_proxy = UserProxyAgent("user_proxy", code_execution_config={"work_dir": "coding"})
user_proxy.initiate_chat(assistant, message="Plot a chart of NVDA and TESLA stock price change YTD.")
</code></pre>

<p>Lastly, run the example to have the assistant write the code to plot a chart:</p>

<pre><code>python example.py
</code></pre>

<h2>More to come</h2>

<p>This is initial experimental support for the OpenAI API. Future improvements under consideration include (GitHub issues <a href="https://github.com/ollama/ollama/issues">are welcome</a>!):</p>

<ul>
<li>Embeddings API</li>
<li>Function calling</li>
<li>Vision support</li>
<li>Logprobs</li>
</ul>

<p>For more information, see the OpenAI compatibility <a href="https://github.com/ollama/ollama/blob/main/docs/openai.md">documentation</a>.</p>

      </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Baruch Spinoza and the art of thinking in dangerous times (147 pts)]]></title>
            <link>https://www.newyorker.com/magazine/2024/02/12/baruch-spinoza-and-the-art-of-thinking-in-dangerous-times</link>
            <guid>39306352</guid>
            <pubDate>Thu, 08 Feb 2024 19:25:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.newyorker.com/magazine/2024/02/12/baruch-spinoza-and-the-art-of-thinking-in-dangerous-times">https://www.newyorker.com/magazine/2024/02/12/baruch-spinoza-and-the-art-of-thinking-in-dangerous-times</a>, See on <a href="https://news.ycombinator.com/item?id=39306352">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>In March, 1668, Adriaan Koerbagh, a Dutch physician in his mid-thirties, hired Johannes Van Eede, a printer in Utrecht, to publish his new book, “A Light Shining in Dark Places, to Shed Light on Matters of Theology and Religion.” But Van Eede, after setting the first half of the manuscript, became uneasy about its highly unorthodox contents. Koerbagh argued that God is not a Trinity, as the Dutch Reformed Church taught, but an infinite and eternal substance that includes everything in existence. In his view, Jesus was just a human being, the Bible is not Holy Writ, and good and evil are merely terms we use for what benefits or harms us. The only reason people believe in the doctrine of Christianity, Koerbagh wrote, is that religious authorities “forbid people to investigate and order them to believe everything they say without examination, and they try to murder (if they do not escape) those who question things and thus arrive at knowledge and truth, as has happened many thousands of times.”</p><p>Now it was about to happen to Koerbagh himself. Van Eede, either outraged because of his religious beliefs or worried about his own legal liability, stopped work and turned over the manuscript to the sheriff of Utrecht, who in turn informed the sheriff of Amsterdam. Koerbagh was already well known to the authorities there; in February, they had seized all copies of his previous book, “A Flower Garden of All Sorts of Delights,” in which he had denied the existence of miracles and divine revelation. Realizing that he was in danger, Koerbagh went on the run, ending up in Leiden, where he disguised himself with a black wig. But a reward was offered and in July someone turned him in. Koerbagh was interrogated, tried, and sentenced to ten years in prison for blasphemy, to be followed by ten years of exile. The long sentence turned out to be unnecessary: he lasted just a year in prison before dying, in October, 1669.</p><p>A few months later, an even more subversive book was published in Amsterdam: “Tractatus Theologico-Politicus,” an anonymous Latin treatise that declared the best policy in religious matters to be “allowing every man to think what he likes, and say what he thinks.” In the preface, the author gave thanks for the “rare happiness of living in a republic, where everyone’s judgment is free and unshackled, where each may worship God as his conscience dictates, and where freedom is esteemed before all things dear and precious.” But the fact that the author withheld his name, and that the book’s Amsterdam publisher claimed on the title page that it had been printed in Hamburg, told another story. The author and the publisher were well aware that their unshackled judgment could put them in shackles.</p><p>These feints couldn’t stop readers, or the authorities, from quickly figuring out that the “Tractatus” was the work of Baruch Spinoza. Although Spinoza, then in his late thirties, had previously published only one book, a guide to the fashionable philosophy of René Descartes, he was one of Amsterdam’s most notorious freethinkers. As a young man, he had been expelled from the city’s Jewish community for his heretical views on God and the Bible. (He published under the name Benedictus de Spinoza, Benedictus being the Latin equivalent of Baruch, which means “blessed” in Hebrew.) Living a quiet, solitary existence, supporting himself by grinding lenses for microscopes and telescopes, Spinoza developed his ideas into a comprehensive philosophical system, which he shared with a circle of friends in letters and conversations. When Koerbagh was interrogated, he was asked whether he had fallen under Spinoza’s malign influence. He acknowledged that they were friends, but insisted that they had never discussed ideas—even though what he wrote about God closely resembled what Spinoza had been saying for years.</p><p>Ministers in several cities immediately forbade booksellers to carry the “Tractatus,” and, in 1674, it was officially banned in the Netherlands, along with Thomas Hobbes’s “Leviathan.” Under the circumstances, Spinoza’s praise of Dutch freedom might well sound sarcastic. But the truth is that, compared with most of Europe in the seventeenth century, the Netherlands really was a haven of tolerance. In Spain or Italy, a book like Spinoza’s could get its author burned by the Inquisition; as it was, the attacks were aimed at his ideas, not his life. His praise of his country is better seen as a kind of appeal: Perhaps no country in Europe was truly free, but the Netherlands might be if it tried.</p><p>For Ian Buruma, a writer and historian and a former editor of <em>The New York Review of Books</em>, it is Spinoza’s dedication to freedom of thought—what he called <em>libertas philosophandi</em>—that makes him a thinker for our moment. In his new book, “Spinoza: Freedom’s Messiah,” a short biography in Yale University Press’s Jewish Lives series, Buruma observes that “intellectual freedom has once again become an important issue, even in countries, such as the United States, that pride themselves on being uniquely free.”</p><p>No American has to fear Adriaan Koerbagh’s fate, no matter how unpopular his or her opinions. Still, Buruma argues, “liberal thinking is being challenged from many sides where ideologies are increasingly entrenched, by bigoted reactionaries as well as by progressives who believe there can be no deviation from their chosen paths to justice.” And it is certainly true that, in the age of social media, informal pressure to toe a certain line can be as effective as legal threats. Offending the wrong people, even for a moment, can blow up the career of anyone from a Y.A. novelist to an Ivy League president.</p><p>In calling Spinoza a “messiah,” Buruma follows Heinrich Heine, the nineteenth-century German Jewish poet, who compared the philosopher to “his divine cousin, Jesus Christ. Like him, he suffered for his teachings. Like him, he wore the crown of thorns.” According to Jonathan Israel, a historian whose encyclopedic biography “Spinoza, Life and Legend” came out last year, “No other personage of his era came even close to being so decried, denounced and condemned in weighty texts of exhaustive length, over so long a span of time, in Latin, Dutch, French, English, German, Spanish, Portuguese, Hebrew, and other languages.”</p><p>Like deconstruction or critical race theory, “Spinozism” became a popular target for many a moralist who could not have said exactly what it meant. Yet, although Spinoza was certainly a champion of political and intellectual freedom, he had no interest in being a martyr for them, and, if his life teaches anything about thinking in dangerous times, it is how prudence and boldness can go hand in hand. Not for nothing did he wear a ring inscribed with the Latin word “<em>Caute</em>”: “Be cautious.”</p><p>The boldest act of defiance in Spinoza’s life came at the beginning of his career as a philosopher, and made that career possible. In July, 1656, when he was twenty-three years old, Spinoza was cast out of Amsterdam’s Jewish community in a public ceremony. There are few contemporary sources for Spinoza’s early life, and it’s not known precisely what led to this rupture.</p><p>But the text of the ban, or <em>herem</em>, read aloud at a synagogue on Amsterdam’s Houtgracht canal, has been preserved, and it makes clear that what the community objected to was not any personal misdeed but Spinoza’s “evil opinions” and “abominable heresies,” which he refused to recant under pressure. For this reason, the leaders of the congregation declared, Spinoza “should be excommunicated and expelled from the people of Israel.” They invoked the fearsome punishment for disobedience laid down by Moses in the Book of Deuteronomy: “Cursed be he by day and cursed be he by night; cursed be he when he lies down and cursed be he when he rises up. Cursed be he when he goes out and cursed be he when he comes in.”</p><p>Spinoza wasn’t present to hear this curse read aloud, but he couldn’t escape its effects. The Jewish community into which he was born, in 1632, was uniquely close-knit, set off not only from the Dutch Christians around it but from other Jewish communities in Western Europe. Amsterdam’s Jews were descended from Portuguese <em>conversos</em>, Jews forcibly converted to Catholicism at the end of the fifteenth century, who continued to practice their faith in secret for generations. Spinoza’s parents and grandparents were among the many Portuguese Jews who moved to the Netherlands in the early seventeenth century, drawn by the promise of religious tolerance as well as commercial opportunities. Buruma, Dutch-born and Jewish on his mother’s side, notes that Spinoza and his brother were the first members of their family “in many generations to be born as a Jew, and not a crypto-Jew.”</p><p>Buruma writes that Spinoza’s excommunication was like being “&nbsp;‘canceled,’ as people might now say,” but this was a retribution that a Twitter mob could only dream of. Under the terms of the <em>herem</em>, all Jews, including Spinoza’s relatives, were forbidden to talk to or even go near him. He could no longer hope to live among the people he had known all his life, to do business with them, or to get married and start a family. The fact that Spinoza was willing to sacrifice everything for his right to think and speak freely shows how seriously he took <em>libertas philosophandi</em>, before he had published a word of philosophy.</p><p>Spinoza’s apostasy also makes him a key figure in modern Jewish history. He was hardly the first Jew to abandon Judaism, but he might have been the first to do so publicly without becoming a Christian or a Muslim. Instead, he fashioned a secular life, something that was hardly conceivable before the seventeenth century. In the “Tractatus,” he argued that, in a commercial state like the Netherlands, traditional religious identities no longer had any real meaning, anyway: “Matters have long since come to such a pass, that one can only pronounce a man Christian, Turk, Jew, or Heathen, by his general appearance and attire, by his frequenting this or that place of worship, or employing the phraseology of a particular sect—as for manner of life, it is in all cases the same.”</p><figure><p><span><div data-attr-viewport-monitor=""><a data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.newyorker.com/cartoon/a26580&quot;}" href="https://www.newyorker.com/cartoon/a26580" rel="noopener" target="_blank"><picture></picture></a><p><span>“I’m not worrying—I’m warding off tragedies by constantly anticipating them.”</span></p><p><span>Cartoon by Paul Noth</span></p></div></span></p></figure><p>For members of later generations of European Jews hoping to emancipate themselves from religion, such as Heine and Sigmund Freud, this independence made Spinoza a role model. As Buruma writes, “He chose to think freely, and that made his tribal membership impossible.” Instead, Spinoza assembled his own tribe of like-minded individuals, most of them freethinking liberal Protestants. Israel and another eminent Spinoza biographer, Steven Nadler, have shed light on these key relationships. Franciscus van den Enden, Spinoza’s Latin teacher and sometime landlord, was a former Jesuit who drew up a plan for a utopian society in New Netherland, the Dutch colony that became New York; he ended up being hanged by the French for helping to hatch a plot against Louis XIV. Lodewijk Meyer, a leading figure in Dutch literary life, is believed to be the author of an anonymous book, published in 1666, that caused a huge scandal by arguing that the Bible should be analyzed critically and scientifically. Johannes Bouwmeester co-founded a club for freethinkers with the defiant name Nil Volentibus Arduum (“Nothing Is Difficult for the Willing”).</p></div></div>]]></description>
        </item>
    </channel>
</rss>