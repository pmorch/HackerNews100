<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 07 Sep 2024 11:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Asynchronous IO: the next billion-dollar mistake? (132 pts)]]></title>
            <link>https://yorickpeterse.com/articles/asynchronous-io-the-next-billion-dollar-mistake/</link>
            <guid>41471707</guid>
            <pubDate>Sat, 07 Sep 2024 05:43:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://yorickpeterse.com/articles/asynchronous-io-the-next-billion-dollar-mistake/">https://yorickpeterse.com/articles/asynchronous-io-the-next-billion-dollar-mistake/</a>, See on <a href="https://news.ycombinator.com/item?id=41471707">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><header><time datetime="2024-09-06T16:00:00Z">September 6, 2024</time></header><p>
Asynchronous IO (also known as "non-blocking IO") is a technique applications
use to allow performing of many IO operations without blocking the calling OS
thread, and without needing to spawn many threads (i.e. one thread per
operation). In the late 1990s/early 2000s, an increasing amount of people using
the internet meant an increasing amount of traffic web services needed to
handle, better known as the <a href="https://en.wikipedia.org/wiki/C10k_problem">C10K
problem</a>.</p><p>Using asynchronous IO to approach this problem appears compelling: it allows you
to handle many connections at once, without needing to increase the number of OS
threads. This is especially compelling if you consider that support for good
multi-threading was still a hit a miss at the time. For example, Linux didn't
have good support for threads until the 2.6 release in December 2003.</p><p>Since then the use of and support for asynchronous IO has grown. Languages such
as Go and Erlang bake support for asynchronous IO directly into the language,
while others such as Rust rely on third-party libraries such as
<a href="https://tokio.rs/">Tokio</a>.</p><p><a href="https://inko-lang.org/">Inko</a>, a language that I'm working on, also includes
built-in support for asynchronous IO. Similar to Go and Erlang, this is hidden
from the user. For example, when reading from a socket there's no need to
explicitly poll or "await" anything, as the language takes care of it for you:</p><div><pre><code><span>import</span> std.net.ip (IpAddress)
<span>import</span> std.net.socket (TcpClient)

<span>class</span> <span>async</span> Main {
  <span>fn</span> <span>async</span> main {
    <span>let</span> client = TcpClient.new(ip: IpAddress.v4(<span>1</span>, <span>1</span>, <span>1</span>, <span>1</span>), port: <span>80</span>).or_panic(
      <span>'failed to connect'</span>,
    )

    client
      .write_string(<span>'GET / HTTP/1.0\r\nHost: one.one.one.one\r\n\r\n'</span>)
      .or_panic(<span>'failed to write the request'</span>)

    ...
  }
}
</code></pre></div><p>If the write would block, Inko's scheduler sets aside the calling process and
reschedules it when the write can be performed without blocking. Other languages
use a different mechanism, such as callbacks or
<a href="https://en.wikipedia.org/wiki/Async/await">async/await</a>. Each approach comes
with its own set of benefits, drawbacks and challenges.</p><p>Not every IO operation can be performed asynchronously though. File IO is
perhaps the best example of this (at least on Linux). To handle such cases,
languages must provide some sort of alternative strategy such as performing the
work in a dedicated pool of OS threads.</p><div><p>Using <a href="https://en.wikipedia.org/wiki/Io_uring">io_uring</a> is another approach,
but it's a recent addition to Linux, specific <em>to</em> Linux (meaning you need a
fallback for other platforms), and <a href="https://www.phoronix.com/news/Google-Restricting-IO_uring">disabled entirely by
some</a>. Either way,
the point still stands: you end up having to handle sockets and files (and
potentially other types of "files") differently.</p></div><p>For example, Inko handles this by the standard library signalling to the
scheduler it's about to perform a potentially blocking operation. The scheduler
periodically checks threads in a "we might be blocking" state. If the thread is
in such a state for too long, it's flagged as "blocking" and a backup thread is
woken up to take over its work. When the blocked thread finishes its work, it
reschedules the process it was running and becomes a backup thread itself. While
this works, it limits the amount of blocking IO operations you can perform
concurrently to the number of backup threads you have. Automatically adding and
removing threads can improve things, but increases the complexity of the system.</p><p>In 2009, <a href="https://en.wikipedia.org/wiki/Tony_Hoare">Tony Hoare</a> stated that his
invention of NULL pointers was something he considers a "billion-dollar mistake"
due to the problems and headaches it brought with it. The more I work on systems
that use asynchronous IO, the more I wonder: is asynchronous IO the next
billion-dollar mistake?</p><p>More specifically, what if instead of spending 20 years developing various
approaches to dealing with asynchronous IO (e.g. async/await), we had instead
spent that time making OS threads more efficient, such that one wouldn't need
asynchronous IO in the first place?</p><p>To illustrate, consider the Linux kernel today: spawning an OS thread takes
somewhere between 10 and 20 microseconds (<a href="https://github.com/inko-lang/inko/issues/690">based on my own
measurements</a>), while a context
switch takes somewhere in the range of <a href="https://eli.thegreenplace.net/2018/measuring-context-switching-and-memory-overheads-for-linux-threads/">1-2
microseconds</a>.
This becomes a problem when you want to spawn many threads such that each
blocking operation is performed on its own thread. Not only do you need many OS
threads, but the time to start them can also vary greatly, and the more OS
threads you have the more context switches occur. The end result is that while
you certainly can spawn many OS threads, performance will begin to deteriorate
as the number of threads increases.</p><p>Now imagine a parallel universe where instead of focusing on making asynchronous
IO work, we focused on improving the performance of OS threads such that one can
easily use hundreds of thousands of OS threads without negatively impacting
performance (= the cost to start threads is lower, context switches are cheaper,
etc). In this universe, asynchronous IO and async/await wouldn't need to exist
(or at least wouldn't be as widely used). You need to handle 100 000 requests
that perform a mixture of IO and CPU bound work? Just use 100 000 threads and
let the OS handle it.</p><p>Not only would this offer an easier mental model for developers, it also leads
to a simpler stack. Libraries such as epoll and kqueue wouldn't need to exist,
as one would just start a new OS thread for their blocking/polling needs.
Need to call a C function that may block the calling thread? Just run it on a
separate thread, instead of having to rely on some sort of mechanism provided by
the IO runtime/language to deal with blocking C function calls.</p><p>Unfortunately, we do not live in such a universe. Instead in our universe the
cost of OS threads is quite high, and inconsistent across platforms. Which
brings me back to Tony Hoare: over the decades, we invested a massive amount of
resources in dealing with asynchronous IO, perhaps billions of dollars worth of
resources. Was that a mistake and should we have instead invested that into
improving the performance of OS threads? I think so, but until an operating
system comes along that dramatically improves the performance of threads ,
becomes as popular as Linux, <em>and</em> is capable of running everything you can run
on Linux or provide better alternatives (such that people will actually want to
switch), we're stuck with asynchronous IO.</p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Malaysia started mandating ISPs to redirect DNS queries to local servers (166 pts)]]></title>
            <link>https://thesun.my/local-news/mcmc-addresses-misinformation-on-dns-redirection-internet-access-restrictions-BN12972452</link>
            <guid>41471510</guid>
            <pubDate>Sat, 07 Sep 2024 04:50:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thesun.my/local-news/mcmc-addresses-misinformation-on-dns-redirection-internet-access-restrictions-BN12972452">https://thesun.my/local-news/mcmc-addresses-misinformation-on-dns-redirection-internet-access-restrictions-BN12972452</a>, See on <a href="https://news.ycombinator.com/item?id=41471510">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <p><b>KUALA LUMPUR: </b>The Malaysian Communications and Multimedia Commission (MCMC) has instructed Internet Service Providers (ISPs) to redirect Domain Name Service (DNS) traffic that uses third-party DNS servers back to their own DNS servers.</p> <p>MCMC in a statement tonight said this is to ensure that users continue to benefit from the protection provided by the local ISP’s DNS servers and that malicious sites are inaccessible to Malaysians.</p> <p>As a commitment to protecting the safety of Internet users, MCMC has blocked a total of 24,277 websites between between 2018 to Aug 1, classified into various categories, which are online gambling (39 per cent), pornography/obscene content (31 per cent), copyright infringement (14 per cent), other harmful sites (12 per cent), prostitution (two per cent) and unlawful investments/scams (two per cent).</p> <p>“It has been falsely claimed that the measure undertaken by MCMC is a draconian measure. We reiterate that Malaysia’s implementation is for the protection of vulnerable groups from harmful online content.</p> <p>“The DNS system can protect users by blocking access to websites known for distributing malware, phishing, and other malicious activities, as well as filter inappropriate content such as adult material and violent websites,” the statement said.</p> <p>MCMC said some users choose to use third-party DNS servers like Google DNS or Cloudflare, which are said to offer various benefits, such as faster speeds and increased privacy, but they might not have the same level of protection for harmful content particularly in the local context, compared to local ISP’s DNS servers.</p> <p>DNS is a system designed to turn website addresses into numeric IP addresses to locate websites on the Internet, while ISPs typically operate their own DNS servers, which can be configured to block access to certain websites or domains based on their content, a common method used to protect users from harmful content.</p> <p>The statement said an inaccurate claim also suggested that a so-called blanket ban, with some suggesting that legitimate websites have been made inaccessible because of DNS redirection.</p> <p>“Websites are only blocked when they are found to host malicious content, such as copyright infringements, online gambling, or pornography. Legitimate websites remain accessible as usual, and DNS redirection ensures that harmful content is filtered out while safe sites remain reachable without noticeable disruption,” the statement said.</p> <p>Thus, MCMC encouraged users to report any difficulties in accessing legitimate websites directly to their respective ISPs so the issue could be addressed promptly, as they have yet to receive any such complaint.</p> <p>Moreover, any websites that believe they have been unfairly targeted or affected may file an appeal through the established channels, it said.</p> <p>The Appeals Tribunal, established by MCMC and chaired by a High Court judge, operates independently to ensure a fair and impartial review of each case.</p> <p>“ MCMC remains committed to maintaining a safe and secure online environment in Malaysia, balancing the protection of internet users with the need for seamless access to legitimate online content,” it said</p> <p>Previously, it has been announced that MCMC will introduce a new regulatory framework for safe Internet use by children and families on Aug 1, with implementation set for Jan 1, 2025.</p> <p>Under the new framework, social media and Internet messaging services with at least eight million registered users in Malaysia must apply for an Application Service Provider Class Licence under the Communications and Multimedia Act 1998 (Act 588).</p> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ford Patents In-Car System That Eavesdrops So It Can Play You Ads (131 pts)]]></title>
            <link>https://www.motortrend.com/news/ford-in-vehicle-advertising-patent/</link>
            <guid>41471417</guid>
            <pubDate>Sat, 07 Sep 2024 04:21:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.motortrend.com/news/ford-in-vehicle-advertising-patent/">https://www.motortrend.com/news/ford-in-vehicle-advertising-patent/</a>, See on <a href="https://news.ycombinator.com/item?id=41471417">Hacker News</a></p>
Couldn't get https://www.motortrend.com/news/ford-in-vehicle-advertising-patent/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[QtCS2024: Compile once, Run everywhere (112 pts)]]></title>
            <link>https://wiki.qt.io/QtCS2024_Compile_once._Run_everywhere</link>
            <guid>41470571</guid>
            <pubDate>Fri, 06 Sep 2024 23:55:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wiki.qt.io/QtCS2024_Compile_once._Run_everywhere">https://wiki.qt.io/QtCS2024_Compile_once._Run_everywhere</a>, See on <a href="https://news.ycombinator.com/item?id=41470571">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="mw-content-text" lang="en" dir="ltr"><h2><span id="Session_Summary">Session Summary</span></h2>
<p>Compiling and deploying of C++ applications on Windows, Linux, macOS for x86_64 and arm64 can be challenging. By using <i><a rel="nofollow" href="https://justine.lol/cosmopolitan/">Cosmopolitan Libc</a></i> we could have an alternative.
</p><p>Slides at <a rel="nofollow" href="https://git.qt.io/cradam/presentations/-/raw/main/2024.09.06/QtCS2024-CompileOnce-RunEverywhere.pdf?ref_type=heads">2024.09.06/QtCS2024-CompileOnce-RunEverywhere.pdf · GitLab</a>
</p>
<h2><span id="Session_Owners">Session Owners</span></h2>
<p>Cristian Adam
</p>
<h2><span id="Notes_.28AI_transcribed.29"></span><span id="Notes_(AI_transcribed)">Notes (AI transcribed)</span></h2>
<p>Cristian Adam, a member of the Qt Creator team, presented a talk on "Compile Once, Run Everywhere" using Cosmopolitan libc for C++ applications. 
</p><p>Key points include:
</p>
<ul><li>Qt Creator is currently compiled for multiple platforms (X64 and ARM64 for MacOS, separate packages for Linux, Windows ARM64 in progress) using the Qt installer framework.</li>
<li>Cosmopolitan libc is a C runtime that detects the host machine at runtime and provides the right system calls, enabling "compile once, run everywhere" for C++ applications.</li>
<li>Cosmopolitan applications are compiled twice (X64 and ARM64) and packaged as a batch script plus payload, similar to Linux run installers.</li>
<li>Mozilla's llamafile is an example of a Cosmopolitan application that runs locally after downloading and adding execute permissions.</li>
<li>Adam successfully built and ran CMake, Qt Base, and Qt GUI with VNC QPA using Cosmopolitan libc on MacOS and Linux, but encountered issues on Windows due to Cosmopolitan's Libc's POSIX implementation.</li>
<li>Challenges include integrating with native platforms, launching applications, and supporting WebSockets for Qt QPA VNC platform.</li>
<li>Adam demonstrated Qt Creator running in Cosmopolitan, with menus working but window borders missing.</li>
<li>The size of the Cosmopolitan Qt Creator binary is around 230 megabytes, and there were no noteworthy performance differences compared to the native version.</li>
<li>Adam plans to continue working on Cosmopolitan support for Qt Creator and encourages others to contribute and report issues.</li></ul>
<!-- 
NewPP limit report
Cached time: 20240906120349
Cache expiry: 86400
Reduced expiry: false
Complications: []
CPU time usage: 0.002 seconds
Real time usage: 0.003 seconds
Preprocessor visited node count: 8/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key heroku_app_db:pcache:idhash:10820-0!canonical and timestamp 20240906120352 and revision id 42513.
 -->
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hardware Acceleration of LLMs: A comprehensive survey and comparison (189 pts)]]></title>
            <link>https://arxiv.org/abs/2409.03384</link>
            <guid>41470074</guid>
            <pubDate>Fri, 06 Sep 2024 22:09:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2409.03384">https://arxiv.org/abs/2409.03384</a>, See on <a href="https://news.ycombinator.com/item?id=41470074">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2409.03384">View PDF</a>
    <a href="https://arxiv.org/html/2409.03384v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>Large Language Models (LLMs) have emerged as powerful tools for natural language processing tasks, revolutionizing the field with their ability to understand and generate human-like text. In this paper, we present a comprehensive survey of the several research efforts that have been presented for the acceleration of transformer networks for Large Language Models using hardware accelerators.
<br>The survey presents the frameworks that have been proposed and then performs a qualitative and quantitative comparison regarding the technology, the processing platform (FPGA, ASIC, In-Memory, GPU), the speedup, the energy efficiency, the performance (GOPs), and the energy efficiency (GOPs/W) of each framework. The main challenge in comparison is that every proposed scheme is implemented on a different process technology making hard a fair comparison. The main contribution of this paper is that we extrapolate the results of the performance and the energy efficiency on the same technology to make a fair comparison; one theoretical and one more practical. We implement part of the LLMs on several FPGA chips to extrapolate the results to the same process technology and then we make a fair comparison of the performance.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Christoforos Kachris [<a href="https://arxiv.org/show-email/95ee12c7/2409.03384">view email</a>]      <br>    <strong>[v1]</strong>
        Thu, 5 Sep 2024 09:43:25 UTC (1,209 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Godot founders had desperately hoped Unity wouldn't 'blow up' (147 pts)]]></title>
            <link>https://www.gamedeveloper.com/programming/godot-founders-had-desperately-hoped-unity-wouldn-t-blow-up-</link>
            <guid>41468667</guid>
            <pubDate>Fri, 06 Sep 2024 18:41:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gamedeveloper.com/programming/godot-founders-had-desperately-hoped-unity-wouldn-t-blow-up-">https://www.gamedeveloper.com/programming/godot-founders-had-desperately-hoped-unity-wouldn-t-blow-up-</a>, See on <a href="https://news.ycombinator.com/item?id=41468667">Hacker News</a></p>
Couldn't get https://www.gamedeveloper.com/programming/godot-founders-had-desperately-hoped-unity-wouldn-t-blow-up-: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Show HN: Infinity – Realistic AI characters that can speak (351 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=41467704</link>
            <guid>41467704</guid>
            <pubDate>Fri, 06 Sep 2024 16:47:04 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=41467704">Hacker News</a></p>
Couldn't get https://news.ycombinator.com/item?id=41467704: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Nginx has moved to GitHub (233 pts)]]></title>
            <link>https://mailman.nginx.org/pipermail/nginx-announce/2024/ITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html</link>
            <guid>41466963</guid>
            <pubDate>Fri, 06 Sep 2024 15:17:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/ITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html">https://mailman.nginx.org/pipermail/nginx-announce/2024/ITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html</a>, See on <a href="https://news.ycombinator.com/item?id=41466963">Hacker News</a></p>
<div id="readability-page-1" class="page">
   
    <b>Roman Arutyunyan</b> 
    <a href="mailto:nginx-announce%40nginx.org?Subject=Re%3A%20%5Bnginx-announce%5D%20NGINX%20has%20moved%20to%20Github%21&amp;In-Reply-To=%3CF7C066E5-1C8C-4E86-B936-273C9F67E8AB%40nginx.com%3E" title="[nginx-announce] NGINX has moved to Github!">arut at nginx.com
       </a><br>
    <i>Fri Sep  6 15:11:21 UTC 2024</i>
    <ul>
        <li>Previous message (by thread): <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/UUOCLLONPR6244YQYU65PO5LB7JDYCWM.html">[nginx-announce] nginx security advisory (CVE-2024-7347)
</a></li>
        
         <li> <b>Messages sorted by:</b> 
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/date.html#357">[ date ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/thread.html#357">[ thread ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/subject.html#357">[ subject ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/author.html#357">[ author ]</a>
         </li>
       </ul>
    <hr>  
<!--beginarticle-->
<pre>Hello from NGINX!

Today we're thrilled to announce that the official NGINX Open Source development
repository has moved from Mercurial to GitHub [1][2][3], where we will now start
accepting contributions in the form of Pull Requests. Additionally, starting
today, we will begin accepting bugs reports, feature requests and enhancements
directly through GitHub, under the "Issues" tab. Moreover, we've moved our
community forums to the GitHub "Discussions" area, where you will now be able
to engage in conversation, ask, and answer questions.

Important: to report a security vulnerability, please follow our security
policy [4].

We understand that changes like these may require adjustment, so to give you
more time, we will continue accepting patches and provide community support
via mailing lists until December 31st, 2024.

We believe these changes will serve to centralize, modernize and expand access
to NGINX development and communities. They represent our continued commitment
to open source, as outlined in the blog post [5]. Most of all, we can't wait to
see all of your contributions, discussions and feedback, as we move into this
next chapter for NGINX.

[1] <a href="https://github.com/nginx/nginx">https://github.com/nginx/nginx</a>
[2] <a href="https://github.com/nginx/nginx-tests">https://github.com/nginx/nginx-tests</a>
[3] <a href="https://github.com/nginx/nginx.org">https://github.com/nginx/nginx.org</a>
[4] <a href="https://github.com/nginx/nginx/blob/master/SECURITY.md">https://github.com/nginx/nginx/blob/master/SECURITY.md</a>
[5] <a href="https://www.f5.com/company/blog/nginx/meetup-recap-nginxs-commitments-to-the-open-source-community">https://www.f5.com/company/blog/nginx/meetup-recap-nginxs-commitments-to-the-open-source-community</a>


On behalf of the NGINX Team,

Roman Arutyunyan
<a href="https://mailman.nginx.org/mailman/listinfo/nginx-announce">arut at nginx.com</a>
</pre>

<!--endarticle-->
    <hr>
    <ul>
        <!--threads-->
	<li>Previous message (by thread): <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/UUOCLLONPR6244YQYU65PO5LB7JDYCWM.html">[nginx-announce] nginx security advisory (CVE-2024-7347)
</a></li>
	
         <li> <b>Messages sorted by:</b> 
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/date.html#357">[ date ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/thread.html#357">[ thread ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/subject.html#357">[ subject ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/author.html#357">[ author ]</a>
         </li>
       </ul>

<hr>
<a href="https://mailman.nginx.org/mailman/listinfo/nginx-announce">More information about the nginx-announce
mailing list</a><br>

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Inertia.js – Build React, Vue, or Svelte apps with server-side routing (112 pts)]]></title>
            <link>https://inertiajs.com/</link>
            <guid>41465900</guid>
            <pubDate>Fri, 06 Sep 2024 13:15:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://inertiajs.com/">https://inertiajs.com/</a>, See on <a href="https://news.ycombinator.com/item?id=41465900">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="app" data-page="{&quot;component&quot;:&quot;index&quot;,&quot;props&quot;:{&quot;errors&quot;:{}},&quot;url&quot;:&quot;/&quot;,&quot;version&quot;:&quot;98a0dd0764a4bd0df6c50c60d320c18d&quot;}"><div><header><a href="https://inertiajs.com/"><svg style="height:25px" viewBox="0 0 275.3 50.5"><path d="M231.2 16.1h-17.8l17.2 17.2-17.2 17.2h17.8l17.2-17.2z"></path><path d="M258.1 16.1h-17.8l17.2 17.2-17.2 17.2h17.8l17.2-17.2z"></path><path d="M6 15.3h10.3l-6 34.2H0l6-34.2zm.6-9.1C7.2 2.9 10.3 0 13.7 0s5.7 2.8 5.2 6.2c-.5 3.4-3.7 6.2-7.2 6.2s-5.6-3-5.1-6.2zM54.3 28.5l-3.7 21H40.4L43.8 30c.8-4.4-1.6-6.2-4.9-6.2-3.4 0-6.5 2-7.5 6.6L28 49.5H17.8l6-34.2h10.3l-.5 3.2c2.3-2.6 6.2-4.2 10.1-4.2 6.9.1 12.2 5.1 10.6 14.2zM94.5 32.4c-.1.8-.5 2.7-1.1 4.1H68.9c.6 3.8 3.8 4.8 7 4.8 2.9 0 5.2-.8 7.2-2.7l7.2 5.9c-4 4-8.7 6-15 6-11.8 0-18-8.5-16.3-18.7a20.7 20.7 0 0 1 20.5-17.4c9.8 0 16.9 7.6 15 18zm-9.7-3.7c-.3-3.8-3-5.3-6.2-5.3a8.9 8.9 0 0 0-8.3 5.3h14.5zM123.9 14.6l-2 11.6c-4-.6-10.5.8-11.7 7.8l.1-.4-2.8 15.9H97.3l6-34.2h10.3l-1.1 6.2c2.1-4.7 6.6-6.9 11.4-6.9zM137.8 37.3c-.5 3.1 2 3.3 6.6 2.9l-1.6 9.3c-12.3 1.4-16.9-2.7-15.2-12.2l2.1-12.1h-5.5l1.8-9.9h5.4l1.2-6.5 10.8-3.1-1.7 9.6h7.1l-1.8 9.9h-7l-2.2 12.1zM155.3 15.3h10.3l-6 34.2h-10.3l6-34.2zm.6-9.1c.5-3.3 3.7-6.2 7.1-6.2s5.7 2.8 5.2 6.2c-.5 3.4-3.7 6.2-7.2 6.2s-5.7-3-5.1-6.2zM208.1 15.3l-6 34.2h-10.3l.4-2.3a15.5 15.5 0 0 1-10.3 3.3c-11.1 0-15.3-9.6-13.5-18.9 1.6-8.8 8.6-17.2 19.2-17.2 4.5 0 7.7 1.8 9.6 4.6l.6-3.6h10.3zm-13.2 17.2c.9-5.2-1.9-8.4-6.6-8.4a9.5 9.5 0 0 0-9.5 8.3c-.9 5.1 1.8 8.3 6.6 8.3 4.6.1 8.6-3.1 9.5-8.2z"></path></svg><svg style="height:8px" viewBox="0 0 328.3 16"><path d="M11.1 2.2H6.6v13.5h-2V2.2H0V.3h11.1v1.9zM29.1.3v15.4h-2V8.8h-7.5v6.9h-2V.3h2v6.5h7.5V.3h2zM46 13.8v1.9h-9.2V.3h9.1v1.9h-7V7h6.5v1.9h-6.5v4.9H46zM77.2 15.7h-2v-12l-5 8.4h-.3l-5-8.4v12h-2V.3h2.3L70 8.4 74.9.3h2.3v15.4zM84 8a8 8 0 0 1 8-8c4.5 0 8 3.5 8 8a8 8 0 0 1-8 8 8 8 0 0 1-8-8zm13.9 0c0-3.4-2.6-6-5.9-6a5.8 5.8 0 0 0-5.9 6c0 3.4 2.6 6 5.9 6 3.4 0 5.9-2.6 5.9-6zM120.2 8c0 4.3-3.1 7.7-7.3 7.7h-6V.3h6c4.2 0 7.3 3.4 7.3 7.7zm-2 0c0-3.3-2.2-5.8-5.3-5.8h-4v11.5h4c3.1.1 5.3-2.5 5.3-5.7zM136.2 13.8v1.9H127V.3h9.1v1.9h-7V7h6.5v1.9h-6.5v4.9h7.1zM148.8 9.8h-3.6v5.9h-2V.3h6.2c2.6 0 4.8 2.1 4.8 4.8 0 2-1.3 3.8-3.2 4.5l3.6 6.2h-2.3l-3.5-6zm-3.6-1.9h4.1c1.5 0 2.8-1.3 2.8-2.9 0-1.6-1.2-2.9-2.8-2.9h-4.1v5.8zM172.6.3v15.4H171l-8-11.5v11.5h-2V.3h1.7l7.9 11.5V.3h2zM204.6 15.7h-2v-12l-5 8.4h-.3l-5-8.4v12h-2V.3h2.3l4.9 8.1 4.9-8.1h2.3v15.4zM211.5 8a8 8 0 0 1 8-8c4.5 0 8 3.5 8 8a8 8 0 0 1-8 8 8 8 0 0 1-8-8zm13.9 0c0-3.4-2.6-6-5.9-6a5.8 5.8 0 0 0-5.9 6c0 3.4 2.6 6 5.9 6 3.3 0 5.9-2.6 5.9-6zM245.9.3v15.4h-1.6l-7.9-11.5v11.5h-2V.3h1.7l7.9 11.5V.3h1.9zM252.8 8a8 8 0 0 1 8-8c4.5 0 8 3.5 8 8a8 8 0 0 1-8 8 8 8 0 0 1-8-8zm13.9 0c0-3.4-2.6-6-5.9-6a5.8 5.8 0 0 0-5.9 6c0 3.4 2.6 6 5.9 6 3.3 0 5.9-2.6 5.9-6zM284.3 13.8v1.9h-8.7V.3h2v13.5h6.7zM292.8.3v15.4h-2V.3h2zM310.3 2.2h-4.6v13.5h-2V2.2h-4.5V.3h11.1v1.9zM328.3.3v15.4h-2V8.8h-7.5v6.9h-2V.3h2v6.5h7.5V.3h2z"></path></svg></a></header><div><p>Build single-page apps, <strong>without building an API.</strong></p><p>Create<!-- --> <strong>modern single-page React, Vue, and Svelte apps</strong> <!-- -->using classic server-side routing. Works with any backend — tuned for Laravel.</p></div></div><div><nav><p><a href="https://github.com/inertiajs"><svg viewBox="0 0 20 20"><title>GitHub</title><path d="M10 0a10 10 0 0 0-3.16 19.49c.5.1.68-.22.68-.48l-.01-1.7c-2.78.6-3.37-1.34-3.37-1.34-.46-1.16-1.11-1.47-1.11-1.47-.9-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.9 1.52 2.34 1.08 2.91.83.1-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.94 0-1.1.39-1.99 1.03-2.69a3.6 3.6 0 0 1 .1-2.64s.84-.27 2.75 1.02a9.58 9.58 0 0 1 5 0c1.91-1.3 2.75-1.02 2.75-1.02.55 1.37.2 2.4.1 2.64.64.7 1.03 1.6 1.03 2.69 0 3.84-2.34 4.68-4.57 4.93.36.31.68.92.68 1.85l-.01 2.75c0 .26.18.58.69.48A10 10 0 0 0 10 0"></path></svg></a><a href="https://twitter.com/inertiajs"><svg viewBox="0 0 20 20"><title>Twitter</title><path d="M6.29 18.25c7.55 0 11.67-6.25 11.67-11.67v-.53c.8-.59 1.49-1.3 2.04-2.13-.75.33-1.54.55-2.36.65a4.12 4.12 0 0 0 1.8-2.27c-.8.48-1.68.81-2.6 1a4.1 4.1 0 0 0-7 3.74 11.65 11.65 0 0 1-8.45-4.3 4.1 4.1 0 0 0 1.27 5.49C2.01 8.2 1.37 8.03.8 7.7v.05a4.1 4.1 0 0 0 3.3 4.03 4.1 4.1 0 0 1-1.86.07 4.1 4.1 0 0 0 3.83 2.85A8.23 8.23 0 0 1 0 16.4a11.62 11.62 0 0 0 6.29 1.84"></path></svg></a><a href="https://discord.gg/gwgxN8Y"><svg viewBox="0 0 146 146"><title>Discord</title><path d="M107.75 125.001s-4.5-5.375-8.25-10.125c16.375-4.625 22.625-14.875 22.625-14.875-5.125 3.375-10 5.75-14.375 7.375-6.25 2.625-12.25 4.375-18.125 5.375-12 2.25-23 1.625-32.375-.125-7.125-1.375-13.25-3.375-18.375-5.375-2.875-1.125-6-2.5-9.125-4.25-.375-.25-.75-.375-1.125-.625-.25-.125-.375-.25-.5-.375-2.25-1.25-3.5-2.125-3.5-2.125s6 10 21.875 14.75c-3.75 4.75-8.375 10.375-8.375 10.375-27.625-.875-38.125-19-38.125-19 0-40.25 18-72.875 18-72.875 18-13.5 35.125-13.125 35.125-13.125l1.25 1.5c-22.5 6.5-32.875 16.375-32.875 16.375s2.75-1.5 7.375-3.625c13.375-5.875 24-7.5 28.375-7.875.75-.125 1.375-.25 2.125-.25 7.625-1 16.25-1.25 25.25-.25 11.875 1.375 24.625 4.875 37.625 12 0 0-9.875-9.375-31.125-15.875l1.75-2S110 19.626 128 33.126c0 0 18 32.625 18 72.875 0 0-10.625 18.125-38.25 19zM49.625 66.626c-7.125 0-12.75 6.25-12.75 13.875s5.75 13.875 12.75 13.875c7.125 0 12.75-6.25 12.75-13.875.125-7.625-5.625-13.875-12.75-13.875zm45.625 0c-7.125 0-12.75 6.25-12.75 13.875s5.75 13.875 12.75 13.875c7.125 0 12.75-6.25 12.75-13.875s-5.625-13.875-12.75-13.875z" fill-rule="nonzero"></path></svg></a></p><ul><li><a href="https://inertiajs.com/">Introduction</a></li><li><a href="https://inertiajs.com/demo-application">Demo app</a></li><li><a href="https://inertiajs.com/upgrade-guide">Upgrade guide</a></li></ul><p>Installation</p><ul><li><a href="https://inertiajs.com/server-side-setup">Server-side</a></li><li><a href="https://inertiajs.com/client-side-setup">Client-side</a></li></ul><p>Core concepts</p><ul><li><a href="https://inertiajs.com/who-is-it-for">Who is it for</a></li><li><a href="https://inertiajs.com/how-it-works">How it works</a></li><li><a href="https://inertiajs.com/the-protocol">The protocol</a></li></ul><p>The basics</p><ul><li><a href="https://inertiajs.com/pages">Pages</a></li><li><a href="https://inertiajs.com/responses">Responses</a></li><li><a href="https://inertiajs.com/redirects">Redirects</a></li><li><a href="https://inertiajs.com/routing">Routing</a></li><li><a href="https://inertiajs.com/title-and-meta">Title &amp; meta</a></li><li><a href="https://inertiajs.com/links">Links</a></li><li><a href="https://inertiajs.com/manual-visits">Manual visits</a></li><li><a href="https://inertiajs.com/forms">Forms</a></li><li><a href="https://inertiajs.com/file-uploads">File uploads</a></li><li><a href="https://inertiajs.com/validation">Validation</a></li><li><a href="https://inertiajs.com/shared-data">Shared data</a></li></ul><p>Advanced</p><ul><li><a href="https://inertiajs.com/events">Events</a></li><li><a href="https://inertiajs.com/testing">Testing</a></li><li><a href="https://inertiajs.com/partial-reloads">Partial reloads</a></li><li><a href="https://inertiajs.com/scroll-management">Scroll management</a></li><li><a href="https://inertiajs.com/authentication">Authentication</a></li><li><a href="https://inertiajs.com/authorization">Authorization</a></li><li><a href="https://inertiajs.com/csrf-protection">CSRF protection</a></li><li><a href="https://inertiajs.com/error-handling">Error handling</a></li><li><a href="https://inertiajs.com/asset-versioning">Asset versioning</a></li><li><a href="https://inertiajs.com/progress-indicators">Progress indicators</a></li><li><a href="https://inertiajs.com/remembering-state">Remembering state</a></li><li><a href="https://inertiajs.com/server-side-rendering">Server-side rendering</a></li></ul></nav><div id="top"><h2>JavaScript apps the monolith way</h2><p>Inertia is a new approach to building classic server-driven web apps. We call it the modern monolith.</p><p>Inertia allows you to create fully client-side rendered, single-page apps, without the complexity that comes with modern SPAs. It does this by leveraging existing server-side patterns that you already love.</p><p>Inertia has no client-side routing, nor does it require an API. Simply build controllers and page views like you've always done! Inertia works great with any backend framework, but it's fine-tuned for<!-- --> <a href="https://laravel.com/">Laravel</a>.</p><h2 id="not-a-framework">Not a framework</h2><p>Inertia isn't a framework, nor is it a replacement for your existing server-side or client-side frameworks. Rather, it's designed to work with them. Think of Inertia as glue that connects the two. Inertia does this via adapters. We currently have three official client-side adapters (React, Vue, and Svelte) and three server-side adapters (Laravel, Rails, and Phoenix).</p><h2 id="next-steps">Next steps</h2><p>Want to learn a bit more before diving in? Check out the <a href="https://inertiajs.com/who-is-it-for">who is it for</a> and<!-- --> <a href="https://inertiajs.com/how-it-works">how it works</a> pages. Or, if you're ready to get started, jump right into the<!-- --> <a href="https://inertiajs.com/server-side-setup">installation instructions</a>.</p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Wealthfolio: A Private, Open-Source Investment Tracker (751 pts)]]></title>
            <link>https://wealthfolio.app</link>
            <guid>41465735</guid>
            <pubDate>Fri, 06 Sep 2024 12:56:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wealthfolio.app">https://wealthfolio.app</a>, See on <a href="https://news.ycombinator.com/item?id=41465735">Hacker News</a></p>
Couldn't get https://wealthfolio.app: Error: timeout of 10000ms exceeded]]></description>
        </item>
    </channel>
</rss>