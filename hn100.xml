<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 12 May 2024 10:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[HNInternal: Show HN: Open-Source Video Editor Web App (222 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=40331968</link>
            <guid>40331968</guid>
            <pubDate>Sun, 12 May 2024 02:35:03 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=40331968">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="40331968">
      <td><span></span></td>      <td><center><a id="up_40331968" href="https://news.ycombinator.com/vote?id=40331968&amp;how=up&amp;goto=item%3Fid%3D40331968"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=40331968">Show HN: Open-Source Video Editor Web App</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_40331968">99 points</span> by <a href="https://news.ycombinator.com/user?id=zenkyu">zenkyu</a> <span title="2024-05-12T02:35:03"><a href="https://news.ycombinator.com/item?id=40331968">4 hours ago</a></span> <span id="unv_40331968"></span> | <a href="https://news.ycombinator.com/hide?id=40331968&amp;goto=item%3Fid%3D40331968">hide</a> | <a href="https://hn.algolia.com/?query=Show%20HN%3A%20Open-Source%20Video%20Editor%20Web%20App&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=40331968&amp;auth=60c7af9da3a83750a68a52b3c2aad9d154dd5483">favorite</a> | <a href="https://news.ycombinator.com/item?id=40331968">20&nbsp;comments</a>        </span>
              </td></tr>
    <tr></tr><tr><td colspan="2"></td><td><div><p>Hey everyone, for the past like six months I've been working on a portfolio project. I got tired of doing easy projects, so I decided to tackle something bigger and more challenging. That's when I came up with the idea of a video editor. This piece of work is intended to showcase my skills and land me a job, but I like to think when working on projects that my idea is so cool that people will like to use it, and I treat every project like a startup idea. Also I havent seen many open source video editors especially on web so that was one of the points why I decided to make that and not something else, but in the end its learning experience and im not expecting much if at all.</p><p>A bit about the video editor itself:</p><p>-website: <a href="https://omniclip.app/" rel="nofollow">https://omniclip.app/</a></p><p>-its free</p><p>-its open source (MIT Licensed)</p><p>-its using Webcodecs API for quick rendering</p><p>-works fully inside browser, client side, no private data is kept</p><p>-I made some readme with more details, im not expecting contributions but I added bit about it: <a href="https://github.com/aegir-assembly/omni-clip">https://github.com/aegir-assembly/omni-clip</a></p><p>Features:</p><p>-Trimming</p><p>-Splitting</p><p>-Supports - Text, Audio, Video (mp4) and Images</p><p>-Clip editing on preview - rotating, resizing, text styling and more</p><p>-Undo/Redo</p><p>-Render in different resolutions, up to 4k.</p><p>Things to know before using this editor:</p><p>-it is simple editor, but its my main project im working on and improving it.</p><p>-right now it only works with videos 25 fps and more but not less</p><p>-only 4 tracks -- its something I could improve quickly but forgot</p><p>-bug here and there (eg. filmstrip not rendering until timeline scroll moved)</p><p>-its not working on phones yet (drag and drop API problems)</p><p>I'd love to hear your thoughts and feedback on it.</p></div></td></tr>        <tr></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Vision Transformers Need Registers (133 pts)]]></title>
            <link>https://openreview.net/forum?id=2dnO3LLiJ1</link>
            <guid>40329675</guid>
            <pubDate>Sat, 11 May 2024 18:08:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openreview.net/forum?id=2dnO3LLiJ1">https://openreview.net/forum?id=2dnO3LLiJ1</a>, See on <a href="https://news.ycombinator.com/item?id=40329675">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><strong>Code Of Ethics<!-- -->:</strong> <span>I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics.</span></p><p><strong>Keywords<!-- -->:</strong> <span>representation, vision, transformer, register, SSL, CLIP, attention, attention map, interpretability, DINO, DINOv2</span></p><p><strong>Submission Guidelines<!-- -->:</strong> <span>I certify that this submission complies with the submission instructions as described on https://iclr.cc/Conferences/2024/AuthorGuide.</span></p><p><strong>TL;DR<!-- -->:</strong> <span>We find artifacts in ViT features. We add new tokens (“registers”) that fix this issue.</span></p><p><strong>Abstract<!-- -->:</strong> <span>Transformers have recently emerged as a powerful tool for learning visual representations. In this paper, we identify and characterize artifacts in feature maps of both supervised and self-supervised ViT networks. The artifacts correspond to high-norm tokens appearing during inference primarily in low-informative background areas of images, that are repurposed for internal computations. We propose a simple yet effective solution based on providing additional tokens to the input sequence of the Vision Transformer to fill that role. We show that this solution fixes that problem entirely for both supervised and self-supervised models, sets a new state of the art for self-supervised visual models on dense visual prediction tasks, enables object discovery methods with larger models, and most importantly leads to smoother feature maps and attention maps for downstream visual processing.</span></p><p><strong>Anonymous Url<!-- -->:</strong> <span>I certify that there is no URL (e.g., github page) that could be used to find authors' identity.</span></p><p><strong>No Acknowledgement Section<!-- -->:</strong> <span>I certify that there is no acknowledgement section in this submission for double blind review.</span></p><p><strong>Primary Area<!-- -->:</strong> <span>unsupervised, self-supervised, semi-supervised, and supervised representation learning</span></p><p><strong>Submission Number<!-- -->:</strong> <span>3647</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Immersive Math (649 pts)]]></title>
            <link>http://immersivemath.com/ila/index.html</link>
            <guid>40329388</guid>
            <pubDate>Sat, 11 May 2024 17:16:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://immersivemath.com/ila/index.html">http://immersivemath.com/ila/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=40329388">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <h4><a href="http://immersivemath.com/ila/ch00_preface/preface.html">Preface</a></h4>
          <p>A few words about this book. </p>

          <h4><a href="http://immersivemath.com/ila/ch01_introduction/ch01.html">Chapter 1: Introduction</a></h4>

          <p>How to navigate, notation, and a recap of some math that we think you already know. </p>

          <h4><a href="http://immersivemath.com/ila/ch02_vectors/ch02.html">Chapter 2: Vectors</a></h4>
          <p>The concept of a vector is introduced, and we learn how to add and subtract vectors, and more. </p>

          <h4><a href="http://immersivemath.com/ila/ch03_dotproduct/ch03.html">Chapter 3: The Dot Product</a></h4>
          <p>A powerful tool that takes two vectors and produces a scalar.</p>

          <h4><a href="http://immersivemath.com/ila/ch04_vectorproduct/ch04.html">Chapter 4: The Vector Product</a></h4>
          <p>In three-dimensional spaces you can produce a vector from two other vectors using this tool.</p>

          <h4><a href="http://immersivemath.com/ila/ch05_gausselim/ch05.html">Chapter 5: Gaussian Elimination</a></h4>
          <p>A way to solve systems of linear equations.</p>
        </div><div>
          <h4><a href="http://immersivemath.com/ila/ch06_matrices/ch06.html">Chapter 6: The Matrix</a></h4>
          <p>Enter the matrix.</p>

          <h4><a href="http://immersivemath.com/ila/ch07_determinants/ch07.html">Chapter 7: Determinants</a></h4>
          <p>A fundamental property of square matrices.</p>

          <h4><a href="http://immersivemath.com/ila/ch08_rank/ch08.html">Chapter 8: Rank</a></h4>
          <p>Discover the behaviour of matrices.</p>

          <h4><a href="http://immersivemath.com/ila/ch09_linear_mappings/ch09.html">Chapter 9: Linear Mappings</a></h4>
          <p>Learn to harness the power of linearity...</p>

          <h4><a href="http://immersivemath.com/ila/ch10_eigen/ch10.html"> Chapter 10: Eigenvalues and Eigenvectors</a></h4>
          <p>This chapter has a value in itself.</p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Metabolism of autism reveals developmental origins (143 pts)]]></title>
            <link>https://medicalxpress.com/news/2024-05-metabolism-autism-reveals-developmental.html</link>
            <guid>40328616</guid>
            <pubDate>Sat, 11 May 2024 15:18:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://medicalxpress.com/news/2024-05-metabolism-autism-reveals-developmental.html">https://medicalxpress.com/news/2024-05-metabolism-autism-reveals-developmental.html</a>, See on <a href="https://news.ycombinator.com/item?id=40328616">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
									    
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/autism-1.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2024/autism-1.jpg" data-sub-html="Credit: Pixabay/CC0 Public Domain">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/autism-1.jpg" alt="autism" title="Credit: Pixabay/CC0 Public Domain" width="800" height="530">
             <figcaption>
                Credit: Pixabay/CC0 Public Domain
            </figcaption>        </figure>
    </div><p>Researchers at the University of California San Diego School of Medicine have shed new light on the changes in metabolism that occur between birth and the presentation of autism spectrum disorder (ASD) later in childhood. The researchers discovered that a small number of biochemical pathways are responsible for the majority of these changes, which could help inform new early detection and prevention strategies for autism.</p>

                                        
                                                                                  
                                        
                                                                                                                                    
<p>"At birth, the physical appearance and behavior of a child who will develop <a href="https://medicalxpress.com/tags/autism/" rel="tag">autism</a> over the next few years are indistinguishable from that of a neurotypical child. Indeed, in most cases the fate of the child with regard to autism is not set at birth," said Robert Naviaux, M.D., Ph.D., professor in the Departments of Medicine, Pediatrics and Pathology at UC San Diego School of Medicine.</p>
<p>"We're starting to learn about the governing dynamics that regulate the transition from risk to the actual appearance of the first symptoms of ASD. Early diagnosis opens the possibility of early intervention and optimal outcomes."</p>
<p>ASD is a <a href="https://medicalxpress.com/tags/developmental+disorder/" rel="tag">developmental disorder</a> characterized by difficulties in socializing and communication, as well as repetitive and/or restrictive behaviors. For the majority of people with ASD, the condition is a significant disability, with only 10–20% of children diagnosed before 5 years of age able to live independently as adults.</p>
<p>While autism is known to have strong genetic risk factors, there are also environmental risk factors that play a role in the development and severity of ASD. Naviaux and other researchers are discovering that the development of autism is governed by the real-time interaction of these varied factors. By studying the developmental biology of <a href="https://medicalxpress.com/tags/metabolism/" rel="tag">metabolism</a> and how it differs in autism, new insights are emerging in ASD and other complex developmental disorders.</p>

                                                                                                        <!-- Google middle Adsense block -->
    
                                                                                                                                            <p>"Behavior and metabolism are linked—you cannot separate them," added Naviaux.</p>
<p>To learn more about the early metabolic changes that occur in children with autism, researchers studied two cohorts of children. One cohort consisted of newborn children, in whom autism can't be detected. The second cohort consisted of 5-year-old children, some of whom had been diagnosed with autism.</p>
<p>When comparing the metabolic profiles of children in the cohort who were eventually diagnosed with autism to those who developed neurotypically, they found striking differences. Of the 50 different biochemical pathways the researchers investigated, just 14 were responsible for 80% of the metabolic impact of autism.</p>
<p>The pathways that were most changed are related to the <a href="https://pubmed.ncbi.nlm.nih.gov/23981537/" target="_blank">cell danger response</a>, a natural and universal cellular reaction to injury or metabolic stress. The body has biochemical safeguards in place that can shut down the cell danger response once the threat has passed, and Naviaux hypothesizes that autism occurs when these safeguards fail to develop normally. The result is heightened sensitivity to <a href="https://medicalxpress.com/tags/environmental+stimuli/" rel="tag">environmental stimuli</a>, and this effect contributes to sensory sensitivities and other symptoms associated with autism.</p>
<p>"Metabolism is the language that the brain, gut and immune system use to communicate, and autism occurs when the communication between these systems is changed," added Naviaux.</p>

                                                                                                                                            <p>The cell danger response is primarily regulated by <a href="https://medicalxpress.com/tags/adenosine+triphosphate/" rel="tag">adenosine triphosphate</a> (ATP) the body's chemical energy currency. While these ATP-signaling pathways do not develop normally in autism, they may be partially restorable with existing <a href="https://medicalxpress.com/tags/pharmaceutical+drugs/" rel="tag">pharmaceutical drugs</a>. In 2017, Naviaux and his team completed early clinical testing for suramin, the only drug approved in humans that can target ATP signaling and which is normally used to treat African sleeping sickness.</p>
<p>Now, the researchers hope that by revealing the specific ATP-related pathways that are altered in autism, their work will help scientists develop more drugs that target these pathways to manage the symptoms of ASD.</p>
<p>"Suramin is just one drug that targets the cell danger response," he said. "Now that we're closely interrogating how metabolism changes in ASD, we could be at the beginning of a drug renaissance that will create new options for treatment that never existed before."</p>
<p>The study is published in the journal <i>Communications Biology</i>.</p>


                                                                                                                                                                            
                                        											<div>
												                                                    <p><strong>More information:</strong>
                                                    <i>Communications Biology</i> (2024). <a href="https://www.nature.com/articles/s42003-024-06102-y" target="_blank">www.nature.com/articles/s42003-024-06102-y</a>
																								
																								</p>
																							</div>
                                        											
																					
                                                                                                                        
                                        <!-- print only -->
                                        <div>
                                            <p><strong>Citation</strong>:
                                                 Metabolism of autism reveals developmental origins (2024, May 10)
                                                 retrieved 11 May 2024
                                                 from https://medicalxpress.com/news/2024-05-metabolism-autism-reveals-developmental.html
                                            </p>
                                            <p>
                                            This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
                                            part may be reproduced without the written permission. The content is provided for information purposes only.
                                            </p>
                                        </div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[PeaZip: Open-source file compression and encryption software (270 pts)]]></title>
            <link>https://peazip.github.io/</link>
            <guid>40327631</guid>
            <pubDate>Sat, 11 May 2024 12:19:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://peazip.github.io/">https://peazip.github.io/</a>, See on <a href="https://news.ycombinator.com/item?id=40327631">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <tbody>
          <tr>
            <td>
            <ul>
            </ul>
            <ul>
              <li>
                <p><a href="https://peazip.github.io/index.html#open_extract_rar_tar_zip_files">OPEN
SOURCE FILE COMPRESSION AND ENCRYPTION SOFTWARE</a></p>
              </li>
              <li>
                <p><a href="https://peazip.github.io/index.html#open_source_file_compression_and_encryption_software">PEAZIP
FREE ARCHIVER DOWNLOAD NOTES</a></p>
              </li>
            </ul>
            
            <a href="https://peazip.github.io/index.html#free_file_archiver_software" name="open_extract_rar_tar_zip_files"></a><br>
            <h2><a href="#free_file_archiver_software"><big><big><big>Open
Source file compression and
encryption
software</big></big></big></a></h2>
            <h3><big><span>What is
PeaZip
free
file archiver utility</span></big><br>
            </h3>
            <p>PeaZip is a free file
archiver
utility, similar to WinRar, WinZip, and 7-Zip (or File Roller, and Ark
on Linux), based on Open Source technologies of <a href="https://peazip.github.io/7zip-files-utility.html">7-Zip / p7zip archiver</a>, <a href="https://peazip.github.io/zstandard-compression-utility.html">Facebook Zstandard compressor</a>,
FreeArc, <a href="https://peazip.github.io/brotli-compression-utility.html">Google
Brotli compressor</a>, <a href="https://peazip.github.io/paq-files-compression-utility.html">PAQ
family of compressors</a>, <a href="https://peazip.github.io/pea-archiving-utility.html">PEA
(archiving and encryption) project</a>, and other Free Software file
compression tools.</p>
            <br>
            
            
            <p><big><span>What is different
in PeaZip?</span></big><br>
            </p>
            <p>The project started aiming to provide features often
overlooked in applications of the same type.<br>
            </p>
            <ul>
              <li><span>Be CLI-friendly</span>:
bridge the gap between GUI and
CLI applications to offer the best of the two worlds, blending the
archive manager into a <span>scripting
engine</span> to automate compression / archiving / backup /
extraction... <span></span>tasks.<br>
              </li>
            </ul>
            <p>From
"Console"
tab in archiving and extraction screens, the tasks defined in the GUI
can be exported as CLI scripts, i.e. for reuse, syntax learning or
inspection purpose, of for refining the tasks beyond the capabilities
of the GUI.</p>
            <ul>
              <li><span>Offer two factor
authentication</span> (password + keyfile)
for all formats supporting encryption, to increase security against
guessing and dictionary based attacks on weak passwords.</li>
            </ul>
            <ul>
              <li><span>Provide a GUI for
less commonly supported compression
formats</span> - which comes from very interesting research threads in
compression field, like the very powerful compressor zpaq or very
fast ones as brotli, and zstandard - and provide a platform-agnostic
GUI for 7z/p7zip on non-Windows systems.</li>
            </ul>
            <ul>
              <li><span>Provide multiple
file management features</span> each of
whom meeting the needs of different use cases, like verification of a
wide array of checksum and hash functions, find duplicates, <span>convert archives</span>, <span>search in
archives</span>, bookmarks, <span>tabbed
browsing</span>, etc.</li>
            </ul>
            <ul>
              <li><span>Deploy all the above
in a tool which is natively portable</span>, can
be used from removable devices or shared on a network / cloud, without
installation, and offers the same UX on all operating systems and
desktop
environments.</li>
            </ul>
            <br>
            <h2><a href="https://peazip.github.io/screenshots-peazip-1.html"><img src="https://peazip.github.io/peazip.png" alt="free file archiver utility" title="PeaZip free archiver utility"></a></h2>
            <p><span>PeaZip screenshot running on Windows in
light mode, default theme. </span><br>
            <span>Click the image to see
screenshots on different Operating Systems,
alternative themes and dark mode.<span></span></span><br>
            <span><span></span></span></p>
            <span><span></span></span> <h3><big><span>Main features of
PeaZip free archiver</span></big><br>
            </h3>
            <ul>
              <li><span>Open Source</span>,
released under LGPLv3 license which allows to easily integrate it in
any licensing environment</li>
            </ul>
            <ul>
              <li><span>Cross-platform</span>
and cross-architecture, <span>same full
featured GUI application on Linux, macOS, and Windows</span>, providing
full featured file manager and archive manager on all platforms, also <span>available as portable application</span></li>
            </ul>
            <ul>
              <li>Supports over 200 archive
formats<span>, ranging from very <span>powerful compressor</span>s like 7Z and
ZPAQ, to <span>extremely fast compressors</span>
like Brotli and Zstandard, with option to easily <span>convert archives</span></span></li>
            </ul>
            <ul>
              <li><span>Supports strong
encryption</span>, optionally <span>two
factor authentication</span> and <span>authenticated
encryption</span></li>
            </ul>
            <ul>
              <li>Can easily <span>export
tasks defined in the GUI as command line scripts</span></li>
            </ul>
            <br>
            <big><span>Safety of Open
Source
software</span></big><p>
            
PeaZip is Free Software, employing technologies from
state of art 7-Zip,
p7zip, Brotli, FreeArc, PAQ, PEA, Zstandard open source file
compression and archiving projects.</p><p>
            
This software is released under Open
Source GNU LGPLv3
copyleft license: the application is free for
any use (private and professional). </p><p>
            
All PeaZip packages are safe downloads, do not contain
advertising or harmful software, and are identified with
cryptographically secure SHA256 hash published on official download
site.</p>
            <big>Advantages of
Portable packages</big><p>
            
Portable packages, available for Linux, macOS, and
Windows
operating systems as alternative to installable packages, does not need
installation: simply extract and use the application for maximum ease
of deployment.</p><h4><big>PeaZip free archiver in
details</big></h4>
            <br>
Cross-platform (Linux, macOS, Windows), full-featured
but user-friendly
alternative to WinRar,
WinZip and similar general purpose archive manager applications, <a href="https://peazip.github.io/how-to-open-rar-tar-zip-files.html">open</a>
and <a href="https://peazip.github.io/how-to-extract-rar-zip-archives.html">extract</a>
200+ archive formats: 001, <a href="https://peazip.github.io/7z-file-format.html">7Z</a>, <a href="https://peazip.github.io/ace-files-utility.html">ACE</a> (*), <a href="https://peazip.github.io/arc-files-utility.html">ARC</a>, ARJ, <a href="https://peazip.github.io/brotli-compressed-file-format.html">BR</a>, <a href="https://peazip.github.io/bzip2-file.html">BZ2</a>, <a href="https://peazip.github.io/cab-files-utility.html">CAB</a>,
DMG, GZ, <a href="https://peazip.github.io/iso-utility.html">ISO</a>,
LHA, PAQ, <a href="https://peazip.github.io/pea-file-format.html">PEA</a>, <a href="https://peazip.github.io/what-is-rar-file.html">RAR</a> (**), <a href="https://peazip.github.io/tar-file-format.html">TAR</a>,
UDF, <a href="https://peazip.github.io/wim-files.html">WIM</a>, XZ, <a href="https://peazip.github.io/zip-file-format.html">ZIP</a>, <a href="https://peazip.github.io/zipx-file-format.html">ZIPX</a>,
            <a href="https://peazip.github.io/zst-compressed-file-format.html">ZST</a>. View
full <a href="https://peazip.github.io/peazip-free-archiver.html">list of supported archive
file formats</a>
for archiving / compression, and for extraction. <p>
            
As archive manager utility, PeaZip provides
fast,
high compression ratio multi-format archiving to 7Z, ARC, Brotli, BZ2,
GZ,
PEA,
TAR, WIM, Zstandard and ZIP archives (write supported formats), and
works as
opener
/ extractor tool
for
200+ archive types including ACE, ISO, RAR, ZIPX files, including
ability to manage encrypted archives for supported formats. </p><p>
            
This software deploys a powerful and complete file
manager for editing, viewing, browsing and searching archive files,
featuring a
wide set of data security functions: <a href="https://peazip.github.io/encrypt-files.html">strong
encryption</a> (AES, Twofish, Serpent),
encrypted password manager, optional two-factor authentication
(encryption / decryption with password and keyfile), <a href="https://peazip.github.io/secure-delete.html">secure
delete</a><span></span>, and <a href="https://peazip.github.io/verify-checksum-hash.html">file
hashing</a> tools, easily export tasks defined in the GUI to <a href="https://peazip.github.io/peazip-command-line.html">create command line scripts</a>.</p><p>
            
For more information about archive creation and
extraction performances
compared with other popular file archivers tools, read file compression
and decompression <a href="https://peazip.github.io/peazip-compression-benchmark.html">PeaZip
benchmarks</a>
page.</p><p>
            
(*) To use the application to open and extract <span>ACE </span>files
it
is needed to install WinACE's UNACE plugin from PLUGINS page, otherwise
the program will lack the (proprietary) component to read .ace format.<br>
(**) <a href="https://peazip.github.io/free-rar-create.html">RAR files creation</a> with PeaZip
is possible if WinRar
is installed on the system (autonomous support to rar compression is
not possible due to rar licensing limitations). Please note <span>RAR </span>and <span>RAR5 </span>format opening / extraction is
supported out of the box: an optional plugin based on official RarLab's
unrar code is provided as alternative .rar extraction engine on PLUGINS
page, if preferred by user over 7-Zip / p7zip's Open Source unrar
implementation.</p>
            <h3><big><big><big><a href="#free_file_archiver_software">PeaZip
free archiver download notes</a></big></big></big></h3>
            <big>Download repositories</big><p>
            
Official repositories of PeaZip are available on <a target="_blank" href="https://github.com/peazip/PeaZip/releases/">GitHub <img title="PeaZip on GitHub" alt="open source downloads" src="https://peazip.github.io/extract-zip/github.png"></a>,
and <a target="_blank" href="https://sourceforge.net/projects/peazip/">Sourceforge&nbsp;<img alt="open source software repository" title="PeaZip on SourceForge" src="https://peazip.github.io/extract-zip/sourceforge.png"></a></p><p>
            
Legacy releases can be downloaded from aforementioned
repositories; each
release contains
program's
packages for different supported operating systems, documentation, and
sources.</p><big><span>Change log and
release notes</span></big><p>
            
See complete <a href="https://peazip.github.io/changelog.html">change
log and release notes</a> for list of updates and new features of the
application, and for <span>SHA256 hash
values of each package </span> published in the current release.</p><big>TOS and Privacy</big><p>
            
PeaZip is Open Source software, released under GNU LGPLv3 license,
documentation is released under GNU FDL license.<br>
Neither PeaZip software, nor PeaZip's website collects user data.<br>
See complete <a href="https://peazip.github.io/peazip-tos-privacy.html">TOS and Privacy page</a>.
            </p><big>Verify integrity of
downloaded
packages</big><p>
            
PeaZip free archiver packages are currently not signed,
but SHA256 is a
cryptographically strong hash, and it is served here through a secure
TLS/SSL website, so it can be used for check integrity and autenticity
of
the packages you are downloading. Download pages of Win64 and Win32
installers also shows SHA256
hash value of each packages for increased security of users. </p><p>
            
Please note that websites as peazip.com, as well as some
Microsoft Store publisher listing alleged PeaZip packages, are in no
way involved in PeaZip project: it is not recommended to download
PeaZip from sources outside the aforementioned official project's
repositories, and it is absolutley not recommended to install PeaZip
packages not matching the officially published hash values.</p><ul>
            </ul>
            <p>Synopsis: All downloads page
of
PeaZip free archiver utility, freeware file compression and encryption
software. Download Open Source, cross platform file archiver software
for Linux, macOS, and Windows. Open, extract RAR TAR ZIP files and many
other
archive types,
200+ formats supported.</p>
            <p>Topics: PeaZip free archiver
all downloads, Linux, macOS, Windows, sources<br>
            </p>
            <div><p>PeaZip &gt; Free file
archiver utility, open, extract RAR TAR ZIP files | All downloads</p></div>
            <table>
              <tbody>
                <tr>
                  <td><small><span>RECOMMENDED PAGES</span> </small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/free-rar.html">FREE RAR UTILITY</a><br>
                  </small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/zip-files-utility.html">FREE ZIP FILES SOFTWARE</a><br>
                  </small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/tar-windows.html">EXTRACT TAR FILES</a></small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/extract-encrypted-files.html">OPEN ENCRYPTED ARCHIVES</a></small></td>
                </tr>
              </tbody>
            </table>
            <small><small><small>&nbsp;</small></small></small><br>
            <table>
              <tbody>
                <tr>
                  <td><small><a href="https://peazip.github.io/peazip-macos.html">MACOS ARCHIVE MANAGER</a><br>
                  </small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/peazip-linux.html">LINUX ARCHIVE MANAGER</a></small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/encrypt-files.html">FREE ENCRYPTION SOFTWARE</a></small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/peazip-portable.html">PORTABLE FILE ARCHIVER UTILITY</a></small></td>
                </tr>
              </tbody>
            </table>
            
            </td>
          </tr>
        </tbody>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lessons learned reinventing the Python notebook (101 pts)]]></title>
            <link>https://marimo.io/blog/lessons-learned</link>
            <guid>40327543</guid>
            <pubDate>Sat, 11 May 2024 11:52:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://marimo.io/blog/lessons-learned">https://marimo.io/blog/lessons-learned</a>, See on <a href="https://news.ycombinator.com/item?id=40327543">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><blockquote>
<p>This blog is adapted from a talk at an <a href="https://www.youtube.com/@mlopslearners">MLOps Learners</a> demo day
(<a href="https://docs.google.com/presentation/d/1dzTuViK7sn4LKLod-7aR828FI3-hBEdxZLDNdL9L-rI/edit#slide=id.g2d05ea9da64_0_54">slides</a>, <a href="https://www.youtube.com/watch?v=3e9YAdOpihI&amp;t=1737s">video</a>).</p>
</blockquote>
<p>I worked on <a href="https://stanford.edu/~boyd/papers/min_dist_emb.html">vector
embeddings</a> during my PhD
at Stanford. I used Jupyter daily, because it paired code with visuals in an
iterative programming environment. But I realized early on that we needed a
Python notebook that was more than just a REPL. I spent a lot of time thinking
about this, perhaps because I had just finished a stint at Google as <a href="https://www.debugmind.com/2020/01/04/paths-to-the-future-a-year-at-google-brain/">an
engineer working at Google
Brain</a>,
where I thought a lot about computer systems and dataflow graphs.</p>
<p>A lot of important work happens in notebooks — research, large scale
experimentation, data engineering, and more. But this kind of work should be
treated as Python software, and it shouldn’t be done in error-prone JSON
scratchpads. By the end of my PhD, it became clear to me that we needed to
rethink what a notebook is, from the ground up and from first principles.</p>
<h2 id="desiderata"><a aria-label="Link to section" href="#desiderata"><span></span></a>Desiderata</h2>
<p>When setting out to build marimo, I had three desiderata for it:</p>
<ol>
<li><strong>Reproducible</strong>: well-specified execution order,
while still allowing for interactive execution of cells. Your code and
outputs should always be in sync, not unlike a spreadsheet.</li>
<li><strong>Maintainable</strong>: pure Python, so code is versionable and portable.</li>
<li><strong>Multi-purpose</strong>: not just a notebook — share as an interactive web
app, execute as a script or pipeline, without jumping through extra hoops.</li>
</ol>
<p>These desiderata build on each other: maintainable requires reproducible, and
multi-purpose requires maintainable and reproducible. In this blog post, I’ll
talk about how we designed for these desiderata and lessons we learned along
the way.</p>
<h2 id="reproducible"><a aria-label="Link to section" href="#reproducible"><span></span></a>Reproducible</h2>
<p>Every notebook should be <strong>computationally reproducible</strong>: the variables in
memory should be a function of code on the page, only,
so that your code and outputs are always consistent.</p>
<h3 id="hidden-state"><a aria-label="Link to section" href="#hidden-state"><span></span></a>Hidden state</h3>
<p>Computational reproducibility sounds straightforward — its how most regular
programs work. But it’s not how traditional notebooks, such as Jupyter with
IPyKernel, work. Traditional notebooks let developers execute cells one at a
time, in any order, with each cell modifying a mutable workspace (i.e., the
variables in memory). This creates <strong>hidden state</strong>: in traditional notebooks,
variable state is a function of code <em>and</em> the user’s execution history.</p>
<p>This hidden state is a huge problem for reproducibility. It’s why when you
receive a notebook from a colleague and try to run it from top to bottom,
the notebook just breaks or has different results from the outputs saved in
the notebook.</p>
<p>Here are two examples of hidden state. In the first example,
the cells were executed out of order, and now the page reports <code>x == 0</code>, even
though in fact <code>x == 1</code>.</p>
<p><img alt="hidden1" src="https://marimo.io/images/blog/6/blog-6-hidden-state-1.png"></p>
<p>In this example, <code>x == 0</code> in memory, but <code>x</code> is not defined on the page! This
is because the author deleted the cell defining <code>x</code>, but the IPython kernel
kept <code>x</code> in memory. Restarting and running this notebook would yield a totally
different result.</p>
<p><img alt="hidden2" src="https://marimo.io/images/blog/6/blog-6-hidden-state-2.png"></p>
<p>These are toy examples, but what happens in practice is that your
co-author or colleague gives you a notebook that does some real task: generates
plots for a paper, transforms some data, or runs an experiment, but when you
run it, the notebook just doesn’t work the way the author thinks it does.
A <a href="https://blog.jetbrains.com/datalore/2020/12/17/we-downloaded-10-000-000-jupyter-notebooks-from-github-this-is-what-we-learned/">study of 10 million notebooks</a> on GitHub found that 36% percent of them
were executed out of order in this way.</p>
<h3 id="eliminating-hidden-state-by-modeling-notebooks-as-dags"><a aria-label="Link to section" href="#eliminating-hidden-state-by-modeling-notebooks-as-dags"><span></span></a>Eliminating hidden state by modeling notebooks as DAGs</h3>
<p>To eliminate hidden state, we model every notebook as a directed acyclic graph
(DAG) on cells. We mark each cell with the variables it defines and the
variables it references. There’s an edge <code>(a, b)</code> if <code>b</code> references any of
the variables defined by <code>a</code>. We form this graph using static
analysis, reading your code without running it, so there’s no performance
overhead at runtime.</p>
<p>The DAG encodes dependencies across cells: it specifies how variables <em>flow</em>
from one cell to another. The semantics of the graph are that if <code>a</code> is a parent
of <code>b</code>, meaning that <code>b</code> reads a variable defined by <code>a</code>, then
<code>b</code> has to run after <code>a</code>.</p>
<p>This kind of graph is also known as a <em>dataflow graph</em>. If you’ve used
TensorFlow, TorchScript, JAX — or Excel — you’ve worked with dataflow graphs
before. The nice thing about a dataflow graph is that it imposes a well-defined
execution order on the notebook. If you run a cell that defines a variable <code>y = x + 1</code>, the notebook should:</p>
<ol>
<li>first, compute <code>x</code> if it was defined by another cell that hasn’t run;</li>
<li>then, compute <code>y = x + 1</code>, ie run the cell;</li>
<li>finally, either automatically run other cells that use <code>y</code>, or mark them as stale and invalidate their memory.</li>
</ol>
<p>Here is an example marimo notebook for you to play with that makes this concrete.</p>

<p>It has the following dependency graph:</p>
<p><img alt="graph" src="https://marimo.io/images/blog/6/blog-6-graph.png"></p>
<h4 id="constraints"><a aria-label="Link to section" href="#constraints"><span></span></a>Constraints</h4>
<p>To make sure every notebook is a DAG, the user must accept some constraints:</p>
<ol>
<li>variables can’t be reassigned</li>
<li>cells can’t have cycles (<code>x = y</code>, <code>y = x</code>)</li>
<li>avoid mutating variables across cells (mutations are discouraged but allowed)</li>
</ol>
<p>These constraints have a learning curve but are easy to understand. And they
unlock a lot of new capabilities for the user: not only are DAG-based notebooks
reproducible, they can also support interactive UI elements that automatically
synchronize with Python:</p>

<h4 id="execution"><a aria-label="Link to section" href="#execution"><span></span></a>Execution</h4>
<p>By default, marimo automatically updates outputs, like a spreadsheet: when
a cell is run, its children are too. But this can be configured to be lazy,
so that children are only run when requested and instead marked as stale.</p>
<h4 id="alternatives-considered"><a aria-label="Link to section" href="#alternatives-considered"><span></span></a>Alternatives considered</h4>
<p>We considered a couple alternatives to modeling a notebook as a DAG:</p>
<ol>
<li>
<p><em>Only allow notebooks to be run top-to-bottom?</em> This works for things like
streamlit, but is too rigid for interactive computing.</p>
</li>
<li>
<p><em>Build a dependency graph at runtime</em>? This requires tracing the user code
and watching for variable reads/writes. The problem is that we’ll only catch an
unspecified subset of reads and writes, so the dependency graph
will be ill-defined and users won’t be able to understand the structure of
the problem. Plus, tracing adds a substantial performance overhead.</p>
</li>
<li>
<p><em>Just warn users if they execute things out-of-order?</em> This doesn’t solve the
problem and won’t enable the other desiderata, so a non-starter.</p>
</li>
</ol>
<h3 id="lesson-prefer-simplicity"><a aria-label="Link to section" href="#lesson-prefer-simplicity"><span></span></a>Lesson: prefer simplicity</h3>
<p>In choosing static inference, we chose a <strong>simple way</strong> to eliminate hidden
state. People are already familiar with dataflow graphs, even if they don’t
know it:</p>
<p><img alt="excel" src="https://marimo.io/images/blog/6/blog-6-excel-dag.png">
<em>The excel spreadsheet: the original DAG-powered notebook …</em></p>
<p>Yes, there are constraints. But people will happily accept constraints if they
are necessary and easily understood.</p>
<p>Other solutions like runtime tracing, or relaxing constraints,
were just too complicated for users to think about, let alone me as the
developer as it went down the path of solving an unsolvable problem (we learned
hard lessons about trying to solve impossible problems at TensorFlow).</p>
<p>My biggest takeaway here is that it’s important to design systems that are
easily explained, and constraints are okay. An easily understood system with
clear constraints is better than a inscrutable one without constraints.</p>
<h2 id="maintainable"><a aria-label="Link to section" href="#maintainable"><span></span></a>Maintainable</h2>
<p>We grounded maintainability in the file format. Instead of storing notebooks as
JSON, we insisted on storing notebooks as Python files (<code>.py</code>) with the
following properties:</p>
<ol>
<li>git-friendly: small code change =&gt; small diff</li>
<li>easy for both humans and computers to read</li>
<li>importable as a Python module</li>
<li>executable as a Python script</li>
<li>editable with a text editor</li>
</ol>
<p>After a <em>lot</em> of careful consideration, we landed on files that look like this:</p>
<figure data-rehype-pretty-code-figure=""><pre tabindex="0" data-language="python" data-theme="github-dark"><code data-language="python" data-theme="github-dark"><span data-line=""><span>import</span><span> marimo</span></span>
<span data-line=""> </span>
<span data-line=""><span>__generated_with </span><span>=</span><span> "0.4.12"</span></span>
<span data-line=""><span>app </span><span>=</span><span> marimo.App()</span></span>
<span data-line=""> </span>
<span data-line=""> </span>
<span data-line=""><span>@app.cell</span></span>
<span data-line=""><span>def</span><span> defines_x</span><span>():</span></span>
<span data-line=""><span>    x </span><span>=</span><span> 0</span></span>
<span data-line=""><span>    return</span><span> x,</span></span>
<span data-line=""> </span>
<span data-line=""> </span>
<span data-line=""><span>@app.cell</span></span>
<span data-line=""><span>def</span><span> defines_y</span><span>(x):</span></span>
<span data-line=""><span>    y </span><span>=</span><span> x </span><span>+</span><span> 1</span></span>
<span data-line=""><span>    y</span></span>
<span data-line=""><span>    return</span><span> y,</span></span>
<span data-line=""> </span>
<span data-line=""> </span>
<span data-line=""><span>@app.cell</span></span>
<span data-line=""><span>def</span><span> computes_z</span><span>(x, y):</span></span>
<span data-line=""><span>    z </span><span>=</span><span> x </span><span>+</span><span> y </span><span>+</span><span> 1</span></span>
<span data-line=""><span>    z</span></span>
<span data-line=""><span>    return</span><span> z,</span></span>
<span data-line=""> </span>
<span data-line=""> </span>
<span data-line=""><span>if</span><span> __name__</span><span> ==</span><span> "__main__"</span><span>:</span></span>
<span data-line=""><span>    app.run()</span></span></code></pre></figure>
<p>Cells are encoded as functions that read their variable references and return
their definitions, and are added to an <code>app</code> object that builds the graph. Users
can optionally name their cells, which become the names of the decorated
functions.</p>
<p>As an alternative, we considered storing files as flat Python scripts,
with comments demarcating cells (instead of putting them in functions). This is
simple and has precedent (VSCode notebooks, Pluto.jl), but it makes importing
notebooks as modules impractical — it either executes all the code on import,
or makes it inaccessible if stored under an <code>if __name__ == "__main__"</code> guard.</p>
<h3 id="lesson-learned-design-for-extensibility"><a aria-label="Link to section" href="#lesson-learned-design-for-extensibility"><span></span></a>Lesson learned: design for extensibility</h3>
<p>Our solution is more complicated than a flat script, but it enables composition
— use named cells as functions in other files. It also gives us a reserved
namespace for future APIs, on the <code>app</code> object. We didn’t know what those APIs
would be when we designed the file format, but we did know that we’d have some
APIs, and had to design for that in mind.</p>
<p>Designing for extensibility is <em>hard</em>. But when you’re
making something as delicate as a file format — where you want to be both
backward and forward compatible — it’s worth getting it right.
In our case, we wrote a <a href="https://github.com/marimo-team/meps/blob/main/mep-0001.md">2500 word design
doc</a> before
implementing a single line of code.</p>
<h3 id="multi-purpose"><a aria-label="Link to section" href="#multi-purpose"><span></span></a>Multi-purpose</h3>
<p>Our reproducible <span role="img" aria-label="white heavy check mark">✅</span> and maintainable <span role="img" aria-label="white heavy check mark">✅</span> notebook is naturally
<strong>multi-purpose</strong>, capable of being used as more than just a notebook.</p>
<h4 id="a-multi-purpose-notebook"><a aria-label="Link to section" href="#a-multi-purpose-notebook"><span></span></a>A multi-purpose notebook</h4>
<p><strong>Run as an app</strong>. The basis of modern web apps is reactivity: interact with a
UI element and the app automatically <em>reacts</em> to the change in its value. Because
each notebook is a DAG, and because we have support for UI elements — interact with
a slider, and it triggers execution of cells that reference it — we can
turn notebooks into apps by just hiding code, showing outputs,
and serving in a read-only mode.</p>
<p>Importantly, this requires <em>0</em> lines of code changes: just <code>marimo run notebook.py</code> at the CLI to run as a web app.</p>
<p><strong>Execute as a script.</strong> In the previous section, we saw that each notebook
ends with</p>
<figure data-rehype-pretty-code-figure=""><pre tabindex="0" data-language="python" data-theme="github-dark"><code data-language="python" data-theme="github-dark"><span data-line=""><span>if</span><span> __name__</span><span> ==</span><span> "__main__"</span><span>:</span></span>
<span data-line=""><span>    app.run()</span></span></code></pre></figure>
<p>The <code>app.run()</code> line executes the notebook in an order determined by the
DAG. This means you can type</p>
<figure data-rehype-pretty-code-figure=""><pre tabindex="0" data-language="python" data-theme="github-dark"><code data-language="python" data-theme="github-dark"><span data-line=""><span>python notebook.py</span></span></code></pre></figure>
<p>at the command-line to execute your notebook as a regular script. We have
built-in support for <a href="https://docs.marimo.io/api/cli_args.html#marimo.cli_args">command-line
arguments</a>, so you
can even parametrize notebooks without jumping through extra hoops.</p>
<p><strong>Map over batches of parameters</strong>. In principle, we could even re-use notebooks
in batch computing settings, by programmatically substituting a variable in the
notebook with a batch of variables and executing the DAG with
distributed compute. We haven’t built this yet, but it’s just one more example
of how modeling notebooks as DAGs unlocks interesting new capabilities.</p>
<h3 id="lesson-stay-true-to-your-projects-pillars"><a aria-label="Link to section" href="#lesson-stay-true-to-your-projects-pillars"><span></span></a>Lesson: Stay true to your project’s pillars</h3>
<p>This is the biggest lesson we’ve learned while working on marimo: <strong>stay true
to your project’s pillars</strong>. This requires figuring out what your pillars are
— the core of your project on which everything is built. This can be a
technology, a vision, or both.</p>
<p>You should <strong>reject feature requests that require you to compromise your
pillars</strong>, because trying to please everyone usually results in a worse system.
<strong>But embrace requests that reinforce or build on your pillars.</strong> And sometimes,
you can learn from the former requests and find a way to meet your users
halfway.</p>
<h4 id="examples"><a aria-label="Link to section" href="#examples"><span></span></a>Examples</h4>
<p>Here’s our main pillar: <strong>every notebook is a DAG on blocks of Python
code.</strong> This single pillar enables many things:</p>
<ol>
<li>notebook-style computation and visualization of data, in a reproducible setting;</li>
<li>running notebooks as interactive web apps;</li>
<li>executing notebooks as scripts;</li>
<li>experimenting with batch processing and distributed runtimes.</li>
</ol>
<p>Here’s a feature request we recently received that tested the strength of our
pillar. A user asked us to support Jupyter-style execution — to allow
multiple definitions of variables, cycles, and out-of-order execution, i.e., to
opt-out of the DAG. In doing so, our user argued that we’d make it easier for
Jupyter users to onboard to marimo.</p>
<p>Allowing users to opt-out of the DAG would indeed make marimo more accessible
to Jupyter users. But it would also break everything that marimo enables: it
would introduce hidden state, make it impossible to run notebooks as apps or
execute them as scripts with well-defined execution order, and severely limit
the runtimes we could experiment with. For this reason, we politely
<strong>rejected</strong> this feature request.</p>
<p>On the other hand, this user’s feedback stuck with me: they mentioned that
automatic execution of cells’ descendants was less than ideal for notebooks
with expensive cells. And I think really, this was the heart of their
complaint. So we <strong>embraced</strong> the spirit of their feedback, if not its letter,
and added support for a <a href="https://docs.marimo.io/guides/runtime_configuration.html">lazy runtime</a>
that marks descendants as stale instead of automatically executing them. In
this way, we made marimo better suited to running expensive computations, while
still retaining the guarantees provided by the underlying DAG.</p>
<p>Another pillar: <strong>marimo notebooks are pure Python</strong>. If you’ve
been paying close attention, you’ll have noticed that marimo is both a notebook
and a library (<code>import marimo as mo</code>). The library provides access to things
like UI elements, markdown, and other helpful utilities. marimo exists
as a library precisely because we want marimo notebooks to be <em>just Python</em>;
this puts them on the same footing as other Python programs and helps
make them multi-purpose.</p>
<p>That’s why we don’t have support for Jupyter magics. If a user asks for
a magic command, we typically just build the functionality directly
into the notebook (like we did for <a href="https://docs.marimo.io/guides/runtime_configuration.html">module reloading</a>),
or suggest a pure Python alternative (e.g., <code>subprocess.run</code> instead of <code>!</code> commands).</p>
<h2 id="conclusion"><a aria-label="Link to section" href="#conclusion"><span></span></a>Conclusion</h2>
<p>When I first started marimo, I didn’t imagine that it would be used by places
like Stanford, BlackRock, CZ Research, SLAC, LBNL, Sonos, Gridmatic, Sumble, and so many
others.</p>
<p>We have lots of work ahead of us, and many more lessons to learn. Still, I
think the lessons we’ve learned are durable, and I hope they’ll keep us
grounded as we grow.</p>
<ul>
<li>GitHub: <a href="https://github.com/marimo-team/marimo">https://github.com/marimo-team/marimo</a></li>
<li>Discord: <a href="https://discord.gg/JE7nhX6mD8">https://discord.gg/JE7nhX6mD8</a></li>
<li>Docs: <a href="https://docs.marimo.io/">https://docs.marimo.io</a></li>
<li>Newsletter: <a href="https://marimo.io/newsletter">https://marimo.io/newsletter</a></li>
</ul></div></div>]]></description>
        </item>
    </channel>
</rss>