<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 11 May 2024 11:00:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Thread: Tech we can’t use or teach? (188 pts)]]></title>
            <link>https://overengineer.dev/blog/2024/05/10/thread/</link>
            <guid>40326269</guid>
            <pubDate>Sat, 11 May 2024 05:51:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://overengineer.dev/blog/2024/05/10/thread/">https://overengineer.dev/blog/2024/05/10/thread/</a>, See on <a href="https://news.ycombinator.com/item?id=40326269">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="content"> <h2>Thread - the tech we can't use or teach</h2> <section id="main_content">  <p> <span> <i role="img" aria-label="This item was published on:"></i> 2024-05-10 </span>  <span> <i role="img" aria-label="This item was tagged with:"></i> <a href="https://overengineer.dev/blog/tags/electronics/">electronics</a>, <a href="https://overengineer.dev/blog/tags/hacking/">hacking</a>, <a href="https://overengineer.dev/blog/tags/hardware/">hardware</a>, <a href="https://overengineer.dev/blog/tags/overengineering/">overengineering</a>, <a href="https://overengineer.dev/blog/tags/rant/">rant</a> </span> </p> <p>A lot of my projects don’t work out. That’s fine, failing is a very healthy way to learn. However, there are cases where the reasons behind failures are absolutely infuriating. So please, allow me a rant. I’ll spend a few words on how I got where I am. If you don’t care, feel free to skip to the large “Thread?” headline. I won’t judge<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>.</p>
<p>In 2022, <a href="https://overengineer.dev/blog/2022/01/07/overengineering-coffee-bean-storage/">I published an article on how I created a severely over-engineered coffee bean storage and inventory-keeping solution</a>. Since then, many people reached out to me to say that they appreciate my post and took it as inspiration to start similar projects for different needs. I absolutely love that!</p>
<p>More recently, I’ve been actively working on two related projects. One is a sensor I’m not going to talk about yet, but another is a “version 2” of that coffee storage display. My primary motivation for version 2 of that display was to increase the battery runtime. The displays averaged 40 days on a charge when my article was published. That’s alright, but it could be better. I managed to get this up to 55 days with a few software tweaks, but I wanted to explore how to push this further.</p>
<p>So, I started learning about low-power electronics, leading me down a few complicated but fascinating rabbit holes. To start off, I purchased <a href="https://www.nordicsemi.com/Products/Development-hardware/Power-Profiler-Kit-2" rel="nofollow" target="_blank">a very nice power profiler from Nordic Semiconductors</a> and profiled my whole system. If you’re curios, <a href="https://overengineer.dev/__generated__/power-profile-screenshot.Q36a-FjR.png" target="_blank">this is how such a profile looks like</a>. Long story short: I re-wrote parts of the display firmware, identified some problematic components on the DevKit, and bypassed them. Ultimately, it became clear that one of the big factors is… WiFi.</p>
<p>You should know that while I love working on projects like this, I’m also inherently lazy. Using WiFi for such a project made sense to me, as I already have all the required infrastructure set up, and letting the display hardware talk to a service I run is super easy: just connecting to WiFi and sending a request to another device in the LAN. But sadly, WiFi is also really inefficient for a use-case like this. Even just establishing a connection can take a long time; it requires high transmission powers depending on where your access points are set up; it’s all less than ideal. So I explored alternatives, and as it turns out, there’s much to choose from! I didn’t want to build my own hardware<sup><a href="#user-content-fn-2" id="user-content-fnref-2" data-footnote-ref="" aria-describedby="footnote-label">2</a></sup>, so I wanted to pick something with a good availability of DevKits and ready-to-use modules. Standards like <a href="https://en.wikipedia.org/wiki/LoRa" rel="nofollow" target="_blank">LoRa</a> and <a href="https://en.wikipedia.org/wiki/Zigbee" rel="nofollow" target="_blank">Zigbee</a> came to mind, of course.</p>
<p>As nice (and usually power-efficient) as those technologies are, there’s a huge downside compared to WiFi: I can’t just build the display module and use it - I also need to build “the other end”, a receiver/transmitter/hub or whatever, that acts as a connection point for the displays to exchange data with. That’s not only a whole other piece of hardware I have to run; it’s also another piece of software and firmware I have to write. And as I mentioned earlier, I am lazy. Luckily, there’s a really interesting alternative!</p>
<h2 id="thread">Thread?</h2>
<p>Despite its awful name<sup><a href="#user-content-fn-3" id="user-content-fnref-3" data-footnote-ref="" aria-describedby="footnote-label">3</a></sup>, the Thread network stack is really cool. Thread uses the same physical layer as Zigbee, IEEE 802.15.4, and it’s also a meshed network. But two things made Thread stand out for me. Thread is based on top off 6LoWPAN, short for “IPv6 over Low-Power Wireless Personal Area Networks”, and that’s kinda cool. In short, this means that each of your devices gets one or more IPv6 addresses, the internal addressing is done via IPv6, and you just throw IP packets around in the network. Even cooler is that the Thread network connects to your regular home network via a bridge called “Border Router” - so your devices can use IPv6 to talk to your applications, and vice-versa.</p>
<p>Wait, a bridge? Didn’t I say I don’t want to run a bridge? Well, yes, but that’s another cool thing about Thread: you might already have a Thread Border Router running. For example, if you have an Apple HomePod or a Nest Hub, you already own a Thread Border Router. If you run Home Assistant, you can buy a dongle for ~40 euros and <a href="https://www.home-assistant.io/integrations/thread/" rel="nofollow" target="_blank">turn your Home Assistant node into a Thread Border Router</a>. It’s all <em>really</em> approachable. And if you use your existing Thread network, things get even more awesome! I did mention that Thread is a mesh network, and this feature is actively used and supported by a lot of commercial hardware. I have several <a href="https://www.evehome.com/en/eve-energy" rel="nofollow" target="_blank">Eve Energy</a> “smart plugs” in my home, and since they are always connected to power, they function as a Thread repeater<sup><a href="#user-content-fn-4" id="user-content-fnref-4" data-footnote-ref="" aria-describedby="footnote-label">4</a></sup>, expanding your network’s reach without you doing any work!</p>
<p>So all of that sounds pretty neat, huh? And it is! I got two Thread DevKits to explore more (if you’re curious, I got a <a href="https://www.nordicsemi.com/Products/Development-hardware/nRF52840-DK" rel="nofollow" target="_blank">nRF52840-DK</a> and a <a href="https://www.nordicsemi.com/Products/Development-hardware/nRF5340-DK" rel="nofollow" target="_blank">nRF5340-DK</a>, as well as a <a href="https://www.nordicsemi.com/Products/Development-hardware/nRF52840-Dongle" rel="nofollow" target="_blank">nRF52840-Dongle</a> for debugging<sup><a href="#user-content-fn-5" id="user-content-fnref-5" data-footnote-ref="" aria-describedby="footnote-label">5</a></sup>), and learned a lot. Within a reasonably short timeframe, I managed to hack my own border router into my Apple-based Thread network, I managed to use Wireshark to sniff on my Thread network, and I shoved my own Thread devices (based on the two DevKits) into the network, and confirmed that everything worked as I hoped it would. So, of course, I started roughly outlining a series of blog posts about all of this. Ultimately, my goal was to get other hobbyists into exploring Thread, switching away their projects from WiFi or Bluetooth, and making their projects a whole lot better.</p>
<p>And this is the point where this post turns into a rant.</p>
<h2 id="no-thread">No Thread.</h2>
<p>So far, I have only talked about the nice things around Thread. However, I also have to talk about the <em>ugly</em> parts: <a href="https://www.threadgroup.org/" rel="nofollow" target="_blank">The Thread Group</a>. While Thread builds on many free and open standards like IEEE 802.15.4, IPv6, and <a href="https://en.wikipedia.org/wiki/Constrained_Application_Protocol" rel="nofollow" target="_blank">CoAP</a>, Thread is very much neither free nor open. Quite the opposite, actually.</p>
<p>You can <em>request</em> the Thread Specification <a href="https://www.threadgroup.org/ThreadSpec" rel="nofollow" target="_blank">for free on their website</a>, and you will get it delivered to your inbox very quickly, but you’ll notice a few odd things. For once, there’s an “I agree to the End User License Agreement” checkbox on that page you ignored, but even more obvious: the specification PDF document is password-protected, DRM’ed, and heavily watermarked. To understand why, let’s look at that license agreement again. Partial quote, emphasis mine:</p>
<blockquote>
<p>Thread Group, Inc. […] hereby grants you a […] license […] to view, download, save, reproduce and use the Specification <strong>solely for your own internal purposes</strong> in accordance with the terms of this License Agreement. […] <strong>No right to implementation of the Specification is granted</strong> to you by this License Agreement. […] <strong>Membership in Thread Group is necessary to implement, practice, and ship Thread technology</strong> and Thread Group specifications. Failure to maintain active Thread Group membership while shipping Thread technology may result in legal action, including but not limited to licensing fees.</p>
</blockquote>
<p>Oh. So even though you can buy freely available DevKits, you aren’t actually allowed to … well, use them. Unless you’re a Thread Group member, of course. The least expensive membership level that will enable you to implement the Thread Group IP, <a href="https://www.threadgroup.org/thread-group" rel="nofollow" target="_blank">called “Implementer”</a>, is a cheap USD 7,500. Per year, that is. But hey, don’t worry, if you’re an “innovative IoT start-up company”, you can <a href="https://www.threadgroup.org/Innovation-Enabler-Award" rel="nofollow" target="_blank">apply to get a two-year membership for free</a>! But of course, you have to pay afterward, and this program isn’t even applicable to hobbyists.</p>
<p>This whole mess isn’t helped by <a href="https://openthread.io/" rel="nofollow" target="_blank">OpenThread, an open-source implementation of Thread</a>. The project <a href="https://github.com/openthread/openthread/blob/3bf281d32da7ccde2153c5c90076e327a488d38e/LICENSE" rel="nofollow" target="_blank">is licensed under a BSD 3-Clause license</a>, so it looks very open and friendly to use. However, their repo also includes a <a href="https://github.com/openthread/openthread/blob/3bf281d32da7ccde2153c5c90076e327a488d38e/NOTICE" rel="nofollow" target="_blank">fun little notice</a> highlighting that “members of the Thread Group may hold patents and other intellectual property rights”. And, in fact, the Thread Group website <a href="https://www.threadgroup.org/support#OpenThread" rel="nofollow" target="_blank">has a dedicated FAQ-section on OpenThread</a>, which is fairly clear:</p>
<blockquote>
<p>Q: What Would Prevent A Company From Shipping A Product Based On OpenThread Without Joining The Thread Group?</p>
<p>A: If developers choose not to join Thread Group and ship products using Thread technology, they are not conferred the IP rights required to practice and ship Thread technology, and may subject themselves to legal action, including but not limited to licensing fees.</p>
</blockquote>
<p>To summarize: if you’re a hobbyist without access to some serious throwaway money to join the Thread Group, there is no way to use Thread legally - the license does not include an exception for non-commercial uses. If you’re like me and want to write a series of blog posts about how Thread works, there’s also no legal way.</p>
<p>A commercial membership program for technology stacks like Thread isn’t new; it’s somewhat common in that space. Same with requiring certifications for your commercial products if you want to use a logo like the “Works with Thread” banner. And that’s fine with me. If you’re selling a commercial electronics product, you have to go through many certification processes anyway, so that seems fair. But having a blanket ban on implementations, even for non-commercial projects, is absolutely bonkers. This means that no hobbyist should ever get close to it, and that means that the next generation of electrical engineers and decision-makers don’t get to play around with the tech before they enter the industry. But of course, that doesn’t really matter to the Thread Group: <a href="https://www.threadgroup.org/thread-group#OurMembers" rel="nofollow" target="_blank">their members list</a> includes companies like Apple, Google, Amazon, Nordic, NXP, and Qualcomm - they can just <em>force</em> Thread into being successful by making sure it’s shipped in the most popular “home hubs”. So it’s just us that get screwed over.</p>
<p>Anyway, if you planned to look at Thread… well, don’t. You’re not allowed to use it.</p>
<p><em>I contacted the Thread Group’s support email address on 2024-04-19 to request clarification on non-commercial Thread use. I did receive an “I have forwarded your message” from a member immediately, but no further response arrived. On 2024-05-01, I contacted the Thread Group’s press contact, requesting a comment. As of publishing this post, the Thread Group has not responded.</em></p>

<section data-footnotes="">
<ol>
<li id="user-content-fn-1">
<p>Okay, maybe just a little bit. I mean, did you really expect a <em>short</em> post on <em>my</em> blog?! <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1">↩</a></p>
</li>
<li id="user-content-fn-2">
<p>Also motivated by the intention to blog about this. Building your own RF hardware is <em>hard</em>, but it’s also illegal for most of my audience unless they have the proper certifications. <a href="#user-content-fnref-2" data-footnote-backref="" aria-label="Back to reference 2">↩</a></p>
</li>
<li id="user-content-fn-3">
<p>No, seriously. Can we please not name new things using terms that are already widely used? I hate that I have to specify whether I’m talking about sewing, screwing, parallel computing, a social network from Meta, or a networking stack. Stop it. <a href="#user-content-fnref-3" data-footnote-backref="" aria-label="Back to reference 3">↩</a></p>
</li>
<li id="user-content-fn-4">
<p>If you feel the urge to email me to inform me that it’s not called “Repeater” but “Router”, please read the rest of this article first. This is not meant as a Thread introduction post; you will learn why. <a href="#user-content-fnref-4" data-footnote-backref="" aria-label="Back to reference 4">↩</a></p>
</li>
<li id="user-content-fn-5">
<p>Nordic Semiconductors isn’t sponsoring me, even though I already linked four of their products. I just really like their stuff. That said, hey, if you’re from Nordic and you want to sponsor me, … <a href="https://overengineer.dev/me/card/">reach out</a>! :p <a href="#user-content-fnref-5" data-footnote-backref="" aria-label="Back to reference 5">↩</a></p>
</li>
</ol>
</section>  </section> </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Most of Europe is glowing pink under the aurora (973 pts)]]></title>
            <link>https://www.foto-webcam.eu/webcam/lucknerhaus/</link>
            <guid>40324179</guid>
            <pubDate>Fri, 10 May 2024 21:59:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.foto-webcam.eu/webcam/lucknerhaus/">https://www.foto-webcam.eu/webcam/lucknerhaus/</a>, See on <a href="https://news.ycombinator.com/item?id=40324179">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="fscontainer">
    <canvas id="fscanvas"></canvas>
    <div id="fsloadbg">
      <p><img src="https://www.foto-webcam.eu/webcam/include/loading-16.gif">
      Loading image...</p>
      
    </div>
    <p>Move mouse to scroll image<br>Click or press Esc to close window</p>
    
    
    
    <p><img src="https://www.foto-webcam.eu/webcam/include/fitscreen.png" width="80" height="45" title="Fit image to screen size (key F) - Mouse-wheel or keys +/- zoom the image - Key 0: original size"></p>
    
    
    
    
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[One Minute Park (123 pts)]]></title>
            <link>https://oneminutepark.tv/</link>
            <guid>40323785</guid>
            <pubDate>Fri, 10 May 2024 21:04:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://oneminutepark.tv/">https://oneminutepark.tv/</a>, See on <a href="https://news.ycombinator.com/item?id=40323785">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>one minute please ... the parks are loading</p><div id="instructions">
            <p><a id="close-instructions">close</a></p>
    
            <p><img src="https://oneminutepark.tv/images/hands.png" alt=""></p><p>One Minute Park allows you to visit parks from around the world for one minute each. These are just one minute videos, not webcams. Eventually the project will fill in all the minutes (1440) in a day. You can create your own One Minute Park to help achieve this goal.</p>

            <h2>How to make a One Minute Park</h2>

            <ol>
                <li>Walk around a park until you find a composition. Your scene should be filled with many layers of activity without any dominating elements.</li>
                <li>Record in landscape mode on your phone. Keep your shot as steady as you can but don't use a tripod. You could even hold your breath. Check the timecode indicator while filming to make your video exactly 60 seconds. Tap record, let it count up to 60, and tap again. No editing needed!</li>
                <li>Upload your One Minute Park to <a href="https://www.are.na/elliott-cost/one-minute-park">this Are.na channel</a>. Videos should be in .mp4 format. Please include the date, time, park, location in the block's title.</li>
            </ol>

            <h2>Support</h2>

            <p>One Minute Park is a project by <a href="http://elliott.computer/">Elliott Cost</a>. It is unfunded and a labor of love. Any support is greatly appreciated–thank you!</p>

            <p>
                <a href="https://elliott.computer/support">Donate</a> →<br>
                <a href="https://www.patreon.com/elliottcost">Subscribe to the patreon</a> →<br>
                <a href="mailto:email@elliott.computer">Sponsor this site</a> →<br>
                <a href="https://sites.elliott.computer/i-want-to-be-your-companys-resident-artist/">Hire me as a resident web artist for your company</a> →
            </p>

            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Spider-Man (Neversoft) Decompilation Project Progress Checkpoint – May 2024 (102 pts)]]></title>
            <link>https://krystalgamer.github.io/spidey-decomp-status-may/</link>
            <guid>40321867</guid>
            <pubDate>Fri, 10 May 2024 17:55:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://krystalgamer.github.io/spidey-decomp-status-may/">https://krystalgamer.github.io/spidey-decomp-status-may/</a>, See on <a href="https://news.ycombinator.com/item?id=40321867">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		
<p>In 2019, I started the decompilation the PC version of the Spider-Man game <a href="https://en.wikipedia.org/wiki/Spider-Man_(2000_video_game)">developed by Neversoft</a>, which is most commonly called Spider-Man 2000. Work didn't last long, I made few commits the last being done on 10th of August 2020.</p>
<p>Fast-forward to 2023 and my interest in going back to the decompilation had re-ignited, all thanks to a few community members that still actively create mods and explore the game. Here's a non-exhaustive list of the most active ones:</p>
<ul>
<li><a href="https://www.youtube.com/@Anganoff">Anganoff</a></li>
<li><a href="https://www.youtube.com/@tc.kralyusuf">T.C Kral-Yusuf</a></li>
<li><a href="https://github.com/ZedekThePlagueDoctor">Zedek</a></li>
</ul>
<p>After fixing some issues with my mods and improving the codebase I decided to restart the decompilation once again.</p>
<h2>Restarting the project</h2>
<p>Restarting was a no-brainer has I had completely shifted my approach to the project and learned a lot more about the game. Even though I knew the game was written in C++, I had previously decided to use C.
I had no strong reason to do so besides the fact I was more comfortable with C. This time I did not make the same mistake.</p>
<p>Previously, I was live-testing the code. I would re-write a method, hook into the game code and run the game and see if it worked. Not only, this method was tedious it left the door open for the correctness of the code - <em>did I mess up the signdness? did mess the edge case?</em>. This time I would follow a process similar to matching decompilation projects, but instead of trying to recreate the game as close to the byte I would strive for function parity.
This means that each function/sub-routine would be recreated trying to match as close as possible the original version. For cases where it didn't match, they'd need to be analyzed  as it's quite easy to make a change in code that changes the register allocation or instruction order.</p>
<h2>Case for matching decompilation</h2>
<p>Having a project that when built produces a binary that is an exactly replica of the game is great as it means all the original behaviours (bugs included) were preserved. One could also develop a sense on how the original developers wrote code and thus be more efficient at decompiling more pieces of the code.</p>
<h2>Case against matching decompilation</h2>
<p>It is a laborious, fruitless and tedious process. Even when using the same compiler toolchain used by the original developers there's a lot of "code massages" until it produces the exact same output. After all that work one thinks to themselves - <em>Did the developers go through all this effort to write this routine? It looks nothing like real code.</em>
When I say "code massages" they are not limited to changing the code but also the build flags - it's totally doable that some object files where built with different optimizations.</p>
<p>Also not having non-matching assembly does not mean the bugs are not preserved as it's more likely a bug in a game is caused by logic rather than a compiler spitting a different instruction.</p>
<p>There's no bigger frustration than struggling to get a function to match. When I was decompiling a super-small routine of a PlayStation game I had the logic pinned down, it was taking parameters and writing to some global variable. My code was doing it but had an extra copy to a register which I was going crazy for. After a while a realized the issue, I had defined the function as returning an <code>int</code> if I changed to <code>void</code> it would be a perfect match. This to say that there's so many variables at play that getting a matching decompilation is just too much work.</p>
<h2>A proper middle ground</h2>
<p>Let's say we're decompiling a function, we can either do matching decompilation or equivalent decompilation. The matching process has been described, but how does one evaluate if two pieces of assembly are equivalent. Two factors: sign correctness and memory accesses.</p>
<p>Let's assume we're decompiling the following function <code>void foo(MyStruct *arg)</code> and there's the following piece of code</p>
<div><pre><span></span><span>...</span>
<span>mov</span><span> </span><span>ebx</span><span>,</span><span> </span><span>arg</span><span> </span><span>; would actually be something like: mov ebx, [esp+X]</span>
<span>movzx</span><span> </span><span>eax</span><span>,</span><span> </span><span>[</span><span>ebx</span><span>+</span><span>0x42</span><span>]</span>
<span>...</span>

<span>; also seen as</span>

<span>...</span>
<span>mov</span><span> </span><span>ebx</span><span>,</span><span> </span><span>arg</span>
<span>xor</span><span> </span><span>eax</span><span>,</span><span> </span><span>eax</span>
<span>mov</span><span> </span><span>ax</span><span>,</span><span> </span><span>[</span><span>ebx</span><span>+</span><span>0x42</span><span>]</span>
<span>...</span>
</pre></div>
<p>One can deduce at the position <code>0x42</code> of <code>MyStruct</code> there's a 16-bit <strong>unsigned integer</strong>. If the instruction had been <code>movsx</code> (move with sign-extension) then it'd be a different story.</p>
<p>Another example, let's say for the function <code>void bar(MyStruct *src, MyStruct *dst)</code> you see the following:</p>
<div><pre><span></span><span>mov</span><span> </span><span>ebx</span><span>,</span><span> </span><span>src</span>
<span>mov</span><span> </span><span>eax</span><span>,</span><span> </span><span>[</span><span>ebx</span><span>+</span><span>0x20</span><span>]</span>

<span>mov</span><span> </span><span>ecx</span><span>,</span><span> </span><span>dst</span>
<span>mov</span><span> </span><span>[</span><span>ecx</span><span>+</span><span>0x24</span><span>],</span><span> </span><span>eax</span>
<span>mov</span><span> </span><span>[</span><span>ecx</span><span>+</span><span>0x28</span><span>],</span><span> </span><span>eax</span>
</pre></div>
<p>Which would be the proper decompilation?</p>
<div><pre><span></span><span>dst</span><span>-&gt;</span><span>field_24</span><span> </span><span>=</span><span> </span><span>src</span><span>-&gt;</span><span>field_20</span><span>;</span>
<span>dst</span><span>-&gt;</span><span>field_28</span><span> </span><span>=</span><span> </span><span>src</span><span>-&gt;</span><span>field_20</span><span>;</span>


<span>// OR</span>

<span>int</span><span> </span><span>tmp</span><span> </span><span>=</span><span> </span><span>src</span><span>-&gt;</span><span>field_20</span><span>;</span>
<span>dst</span><span>-&gt;</span><span>field_24</span><span> </span><span>=</span><span> </span><span>tmp</span><span>;</span>
<span>dst</span><span>-&gt;</span><span>field_28</span><span> </span><span>=</span><span> </span><span>tmp</span><span>;</span>
</pre></div>
<p>The answer is the second! For the first one it's totally possible that in-between the writes the value changes, therefore the assembly generated would contain a read for each write. BUT! It's totally possible to make the compiler generate the same assembly for both, given you tweak with the flags enough or use the <code>restrict</code> keyword to convince the compiler there's no way the value would change in-between those writes.</p>
<p>Having these concepts laid down I restarted the decompilation project.</p>
<h2>May Checkpoint</h2>
<p>The work is publicly accessible on my <a href="https://github.com/krystalgamer/spidey-decomp">GitHub</a>.</p>
<p>The <a href="https://krystalgamer.github.io/spidey-apple">Macintosh</a> version of the game contains symbols - function names, parameters types and names. This has been used to identify functions of the game, the compiler used for the PC version has quite a few routines that have been inlined which is annoying. A cool thing about this version is that it contains boundaries for the object files. Where the code inside <code>foobar.cpp</code> starts, there will be a dummy section called <code>.sinit_foobar_cpp</code> so it has been extremely helpful into getting a proper recreation of the source directory.</p>
<p>The game shares the same engine with Tony Hawk Pro Skater 2 and that game has had 2 demos for the PlayStation that contain symbols - they contain more information than Macintosh version has they also contain classes/structure definitions with offsets. Since both of these games (ab)use inheritance it has been a godsent helping outlining where base class ends and where child class begins. For reference here's the inheritance chart of the player class <code>CPlayer -&gt; CSuper -&gt; CBody -&gt; CItem (-&gt; CClass)</code>. <code>CClass</code> doesn't seem to be present in the PC and Mac versions, either it was fully inlined or removed when ported.</p>
<p>So far 75 data structures have been added to the codebase. I've also created validation macros to make sure both structure size and memory accesses don't get messed up by padding or accidental mistakes. They are <code>VALIDATE_SIZE</code> that takes a structure/class name and the expected size and <code>VALIDATE</code> which takes a structure/class name, a field name and the expected offset. For both macros, if the check fails it'll print a message.</p>
<p>Re-written functions:</p>
<ul>
<li>Memory allocation methods</li>
<li>Most of <code>CItem</code></li>
<li>Most of <code>CBody</code></li>
<li>Most of <code>CSuper</code></li>
<li>Geometry Transformation engine methods</li>
<li>Utility methods</li>
</ul>
<p>By starting to write code for the "lower" level methods it made me able to identify functions that have been inlined. I've also started to develop this intuition on how the compiler works. For example, when there's a conditional jump, it jumps towards the un-met condition (or as I used to say "jump to further ahead in the source file").</p>
<p>The following code:</p>
<div><pre><span></span><span>int</span><span> </span><span>MyFunction</span><span>(</span><span>int</span><span> </span><span>arg</span><span>)</span>
<span>{</span>
<span>  </span><span>if</span><span> </span><span>(</span><span>arg</span><span>)</span>
<span>    </span><span>return</span><span> </span><span>200</span><span>;</span>
<span>  </span><span>return</span><span> </span><span>45</span><span>;</span>
<span>}</span>
</pre></div>
<p>Would generate the following assembly:</p>
<div><pre><span></span><span>mov</span><span> </span><span>eax</span><span>,</span><span> </span><span>[</span><span>esp</span><span>+</span><span>4</span><span>]</span>
<span>test</span><span> </span><span>eax</span><span>,</span><span> </span><span>eax</span>
<span>jz</span><span> </span><span>label</span>
<span>mov</span><span> </span><span>eax</span><span>,</span><span> </span><span>200</span>
<span>jmp</span><span> </span><span>end</span>


<span>label:</span>
<span>mov</span><span> </span><span>eax</span><span>,</span><span> </span><span>45</span>
<span>end:</span>
<span>ret</span>
</pre></div>
<p>Has you can see the conditional jump is taken if the argument is zero which is the opposite of the expression inside the if-statement!</p>
<p>Recently to help identify which functions are matching and which need to be revisited I developed a tagging system which is <code>@Ok</code>, <code>@NotOk</code> and <code>@TODO</code>. The idea is to be easily searchable and make it easier to generate high-level status reports.</p>
<p>Finally, I've also made the decompilation setup reproducible which is basically IDA Pro, Ghidra and the same version of Visual Studio by the developers (it was identified using <a href="https://github.com/horsicq/Detect-It-Easy">Detect-It-Easy</a>). In the beginning I was working on a different machine that for a while didn't have access to.</p>
<h2>Broadcasting my progress</h2>
<p>In late 2023, I've decided to <a href="https://www.youtube.com/@kRySt4LGaMeR">stream every time I'd work the project</a>. The goal was simple to educate people on the complexity of this endeavor. Since I own a Discord community with close to a thousand members, it's not uncommon to get the question - <em>what % of work is left to do?</em> - which is quite tricky to answer.</p>
<p>Decompilation process goes as follows. Identify function in code and the data structures it uses. Then, recreate data structures in code and finally recreate the function. It's a lot of work until the code is done. For a lot of streams I was just identifying fields in data structures and naming them if it was possible to infer from the scenario.</p>
<p>Livestreaming has also come with the benefit that I can share with the audience all of the rabbit holes I fall into during the process, such as automation with IDAPython.</p>
<h2>Focusing on consistency</h2>
<p>As described in this post, decompilation project is tedious and laborious. Therefore it's easy to lose motivation and leave it in backburner for a long-time. The solution I have found is consistency, everyday try to work on it a bit as all effort will compound. An example of this are days where the time I worked on the project was just outlining fields in the classes, there will be a day where I won't need to open the <code>Structures</code> tab in IDA and that would mean I have the internal structures all figured out.</p>
<p>I've also worked in removing all the inconveniences that can hinder me working on it, such as requiring a specific computer to work on it. Now that I have a portable and reproducible environment I have less excuses not to tackle this project. A cool side-effect of working on it regularly is that I feel more motivated, like a self-fulfilling prophecy the more I work the more motivated I feel.</p>
<p>I've talked about this with <a href="https://www.youtube.com/channel/UCdM-EFz45lu6iDumVFV9Jkg">MrMartinIden</a> who is working on decompilation project for <a href="https://gitlab.com/MrMartinIden/openusm">Ultimate Spider-Man PC Version</a> and we both agree that this type of project requires much more than motivation to thrive.</p>
<h2>Looking Forward</h2>
<p>There's still aspects that I'd love to improve such as function equality evaluation. I'd love to automate the process. Here's possibilities that I've thought so far:</p>
<ul>
<li>x86 symbolic execution engine that would validate memory accesses</li>
<li>Lift x86 to a Z3 style theorem and try to see if both sides (original vs re-written) are equal</li>
<li>Lift both original and re-written version to LLVM IR and see if they are reduced to same output</li>
</ul>
<p>For the first two instances the idea of dealing with loops makes it daunting and I haven't found a proper way to deal with it. For the third option I have little experience with LLVM so I'm not sure how feasible it is. If someone has any expertise in this topic please reach out to me! My contact information is in the <a href="https://krystalgamer.github.io/about">About page</a>.</p>

	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An informal comparison of the three major implementations of std:string (103 pts)]]></title>
            <link>https://devblogs.microsoft.com/oldnewthing/20240510-00/?p=109742</link>
            <guid>40321824</guid>
            <pubDate>Fri, 10 May 2024 17:51:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://devblogs.microsoft.com/oldnewthing/20240510-00/?p=109742">https://devblogs.microsoft.com/oldnewthing/20240510-00/?p=109742</a>, See on <a href="https://news.ycombinator.com/item?id=40321824">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="featured">
                         <p>
            May 10th, 2024</p><!-- .entry-meta -->
        <p>We saw some time ago that <a title="Inside STL: The string" href="https://devblogs.microsoft.com/oldnewthing/20230803-00/?p=108532"> the three major implementations of <code>std::string</code> are all quite different</a>. To summarize:</p>
<pre>// gcc
struct string
{
    char* ptr;
    size_t size;
    union {
        size_t capacity;
        char buf[16];
    };

    bool is_large() { return ptr != buf; }
    auto data() { return ptr; }
    auto size() { return size; }
    auto capacity() { return is_large() ? capacity : 15; }
};

// msvc
struct string
{
    union {
        char* ptr;
        char buf[16];
    };
    size_t size;
    size_t capacity;

    bool is_large() { return capacity &gt; 15; }
    auto data() { return is_large() ? ptr : buf; }
    auto size() { return size; }
    auto capacity() { return capacity; }
};

// clang
union string
{
    struct {
        size_t capacity;
        size_t size;
        char* ptr;
    } large;

    struct {
        unsigned char is_small:1;
        unsigned char size:7;
        char buf[sizeof(large) - 1];
    } small;

    bool is_large() { return !small.is_small; }
    auto data() { return is_large() ? large.ptr : small.buf; }
    auto size() { return is_large() ? large.size : small.size; }
    auto capacity() { return is_large() ? large.capacity : sizeof(large) - 2; }
};
</pre>
<p>We’ll compare these versions based on the complexity of some commonly-used operations.</p>
<p>Detecting whether the string is small or large is a single member comparison with msvc and clang, but on gcc, it involves comparing a member against the address of another member, so it will take an extra instruction to calculate that address.</p>
<table>
<tbody>
<tr>
<th>gcc is_large</th>
<th>msvc is_large</th>
<th>clang is_large</th>
</tr>
<tr>
<td><code>lea rdx, [rcx].buf</code><br>
<code>cmp rdx, [rcx].ptr</code><br>
<code>jnz large</code></td>
<td><code>cmp [rcx].capacity, 15</code><br>
<code>ja large</code></td>
<td><code>test [rcx].is_small, 1</code><br>
<code>jz large</code></td>
</tr>
</tbody>
</table>
<p>Note: gcc could have shaved an instruction by reordering the members so that the <code>buf</code> comes first (thereby avoiding the need to calculate its address). On the other hand, it increases the cost of accessing <code>ptr</code> on some processors: On the x86 family, it forces a larger encoding because the offset is nonzero. On the Itanium, it requires two instructions because the Itanium cannot perform an offset load in a single instruction. On most other processors, the offset can be folded into the load instruction at no extra cost. My guess is that gcc biased their design to optimize for x86.</p>
<p>On the other hand, gcc wins the race to access the <code>data()</code>, since the <code>ptr</code> is always valid, and that’s probably why they chose their design.</p>
<table>
<tbody>
<tr>
<th>gcc data()</th>
<th>msvc data()</th>
<th>clang data()¹</th>
</tr>
<tr>
<td><code>mov rdx, [rcx].ptr</code></td>
<td><code>lea rdx, [rcx].buf</code><br>
<code>cmp [rcx].capacity, 15</code><br>
<code>cmova rdx, [rdx]</code></td>
<td><code>lea rdx, [rcx].small.buf</code><br>
<code>test [rcx].small.is_small, 1</code><br>
<code>jnz @1</code><br>
<code>mov rdx, [rcx].large.ptr</code><br>
<code>@1:</code></td>
</tr>
</tbody>
</table>
<p>The clang implementation also has extra work to calculate the size.</p>
<table>
<tbody>
<tr>
<th>gcc size()</th>
<th>msvc size()</th>
<th>clang size()²</th>
</tr>
<tr>
<td><code>mov rdx, [rcx].size</code></td>
<td><code>mov rdx, [rcx].size</code></td>
<td><code>movzx rax, [rcx].small.is_small</code><br>
<code>test al, 1</code><br>
<code>jnz @1</code><br>
<code>mov rax, [rcx].large.size</code><br>
<code>jmp @2</code><br>
<code>@1: shr rax, 1</code><br>
<code>@2:</code></td>
</tr>
</tbody>
</table>
<p>A special case of checking the size is checking whether the string is empty.</p>
<table>
<tbody>
<tr>
<th>gcc empty()</th>
<th>msvc empty()</th>
<th>clang empty()</th>
</tr>
<tr>
<td><code>cmp [rcx].size, 0</code><br>
<code>jz empty</code></td>
<td><code>cmp [rcx].size, 0</code><br>
<code>jz empty</code></td>
<td><code>movzx rax, [rcx].small.is_small</code><br>
<code>test al, 1</code><br>
<code>jz @1</code><br>
<code>mov rax, [rcx].large.size</code><br>
<code>jmp @2</code><br>
<code>@1: dec rax</code><br>
<code>@2: test rax, rax</code><br>
<code>jz empty</code></td>
</tr>
</tbody>
</table>
<p>The capacity comes into play behind the scenes when extending the string. For example, <code>append(char)</code> can do a fast-append if there is excess capacity, and delegate to a function call if the capacity needs to be increased. Here, msvc has an edge.</p>
<table>
<tbody>
<tr>
<th>gcc capacity()</th>
<th>msvc capacity()</th>
<th>clang capacity()</th>
</tr>
<tr>
<td><code>lea rax, [rcx].buf</code><br>
<code>cmp rax, [rcx].ptr</code><br>
<code>mov eax, 15</code><br>
<code>cmovnz rax, [rcx].capacity</code></td>
<td><code>mov rax, [rcx].capacity</code></td>
<td><code>test [rcx].small.is_small, 1</code><br>
<code>mov eax, 22</code><br>
<code>cmovz rax, [rcx].large.capacity</code></td>
</tr>
</tbody>
</table>
<p>The clang implementation does have an edge in terms of memory usage: Despite an overall smaller size, it has a larger small-string capacity in 64-bit mode.</p>
<table>
<tbody>
<tr>
<th>sizeof / SSO capacity</th>
<th>gcc</th>
<th>msvc</th>
<th>clang</th>
</tr>
<tr>
<td>32-bit mode</td>
<td>24 / 15</td>
<td>24 / 15</td>
<td>12 / 11</td>
</tr>
<tr>
<td>64-bit mode</td>
<td>32 / 15</td>
<td>32 / 15</td>
<td>24 / 22</td>
</tr>
</tbody>
</table>
<p>If you <code>reserve()</code> a lot of space for a string, but use only a little bit of it, and then call <code>shrink_<wbr>to_<wbr>fit()</code>, you can potentially get into a mixed state where the string is allocated externally (as if it were a large string), even though the capacity is smaller than the capacity of a small string.</p>
<p>The msvc implementation uses the capacity to detect whether it is using the small string optimization, so this mixed state is illegal for msvc, and it must convert large strings to small strings if <code>shrink_<wbr>to_<wbr>fit()</code> shrinks the string below the small-string threshold.</p>
<p>The gcc and clang implementations allow external allocations to have a small capacity. Nevertheless, the clang implementation does convert externally-allocated strings to small strings if they shrink below the small-string threshold.</p>
<p>The gcc implementation takes a different approach: With gcc, <code>shrink_<wbr>to_<wbr>fit()</code> is a nop! This is legal according to the C++ standard: The <code>shrink_<wbr>to_<wbr>fit()</code> method is an advisory call, and the implementation is permitted to ignore the advice.</p>
<p>One final point of comparison is how the three implementations deal with static initialization.</p>
<table>
<tbody>
<tr>
<th>gcc</th>
<th>msvc</th>
<th>clang</th>
</tr>
<tr>
<td><code>{ buf, 15, { 0 } }</code></td>
<td><code>{ { 0 }, 0, 15 }</code></td>
<td><code>{ 1, 0, 0, ... }</code></td>
</tr>
</tbody>
</table>
<p>A statically-initialized empty string in gcc consists of a pointer to the internal buffer, a constant 15 (size), and a bunch of zeroes (buf). The presence of a pointer introduces a relocation into the data segment and <a title="Just how constexpr is C++20's std::string?" href="https://quuxplusone.github.io/blog/2023/09/08/constexpr-string-firewall/"> silently messes up string’s <code>constexpr</code>-ness</a>.</p>
<p>Statically-initiaized empty strings in msvc and clang consist of integer constant data; no pointers. This means no relocations and a better shot at <code>constexpr</code>-ness.</p>
<p>Okay, so let’s summarize all this information into a table.</p>
<table>
<tbody>
<tr>
<th>&nbsp;</th>
<th>gcc</th>
<th>msvc</th>
<th>clang</th>
</tr>
<tr>
<th>is_large</th>
<td>slower</td>
<td>faster</td>
<td>faster</td>
</tr>
<tr>
<th>data()</th>
<td>fast</td>
<td>slower</td>
<td>slower</td>
</tr>
<tr>
<th>size()</th>
<td>fast</td>
<td>fast</td>
<td>much slower</td>
</tr>
<tr>
<th>empty()</th>
<td>fast</td>
<td>fast</td>
<td>much slower</td>
</tr>
<tr>
<th>capacity()</th>
<td>slowest</td>
<td>fast</td>
<td>slower</td>
</tr>
<tr>
<th>32-bit size</th>
<td>24</td>
<td>24</td>
<td>12</td>
</tr>
<tr>
<th>64-bit size</th>
<td>32</td>
<td>32</td>
<td>24</td>
</tr>
<tr>
<th>32-bit SSO capacity</th>
<td>15</td>
<td>15</td>
<td>11</td>
</tr>
<tr>
<th>64-bit SSO capacity</th>
<td>15</td>
<td>15</td>
<td>22</td>
</tr>
<tr>
<th>ABI supports mixed state?</th>
<td>yes</td>
<td>no</td>
<td>yes</td>
</tr>
<tr>
<th>shrink_to_fit()</th>
<td>nop</td>
<td>must convert to SSO</td>
<td>chooses to convert to SSO</td>
</tr>
<tr>
<th>Static initialization</th>
<td>relocation</td>
<td>no relocation</td>
<td>no relocation</td>
</tr>
</tbody>
</table>
<p>¹ I don’t see clang generating this slightly smaller alternative</p>
<pre>lea rdx, [rcx].small.buf
test [rcx].small.is_small, 1
cmovz rdx, [rcx].large.ptr
</pre>
<p>perhaps because the <code>cmov</code> instruction always reads from its second parameter even if the value is not used, and there might be a store-forward penalty because in the case of a small string, the read is unlikely to match the size of the previous write.</p>
<p>² I don’t see clang generating this slightly smaller alternative</p>
<pre>movzx rax, [rcx].small.is_small
shr rax, 1
jc @1
mov rax, [rcx].large.size
@1:
</pre>
<p>probably because “shift right and look at carry” is not something natively expressible in C++. If you really went for it, you could also fold in a <code>cmov</code>.</p>
<pre>movzx rax, [rcx].small.is_small
shr rax, 1
cmovnc rax, [rcx].large.size
</pre>

        

        
		
        
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Coronal mass ejection impact imminent, Two more earth-directed CMEs (415 pts)]]></title>
            <link>https://www.spaceweatherlive.com/en/news/view/533/20240510-cme-impact-imminent-two-more-earth-directed-cmes.html</link>
            <guid>40321821</guid>
            <pubDate>Fri, 10 May 2024 17:50:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.spaceweatherlive.com/en/news/view/533/20240510-cme-impact-imminent-two-more-earth-directed-cmes.html">https://www.spaceweatherlive.com/en/news/view/533/20240510-cme-impact-imminent-two-more-earth-directed-cmes.html</a>, See on <a href="https://news.ycombinator.com/item?id=40321821">Hacker News</a></p>
Couldn't get https://www.spaceweatherlive.com/en/news/view/533/20240510-cme-impact-imminent-two-more-earth-directed-cmes.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Jim Simons has died (991 pts)]]></title>
            <link>https://www.simonsfoundation.org/2024/05/10/simons-foundation-co-founder-mathematician-and-investor-jim-simons-dies-at-86/</link>
            <guid>40320406</guid>
            <pubDate>Fri, 10 May 2024 15:51:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.simonsfoundation.org/2024/05/10/simons-foundation-co-founder-mathematician-and-investor-jim-simons-dies-at-86/">https://www.simonsfoundation.org/2024/05/10/simons-foundation-co-founder-mathematician-and-investor-jim-simons-dies-at-86/</a>, See on <a href="https://news.ycombinator.com/item?id=40320406">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p>It is with great sadness that the Simons Foundation announces the death of its co-founder and chair emeritus, James Harris Simons, on May 10, 2024, at the age of 86, in New York City.</p>
<p>Jim (as he preferred to be called) was an award-winning mathematician, a legend in quantitative investing, and an inspired and generous philanthropist.</p>
<p>Together with his wife, Simons Foundation chair Marilyn Simons, he gave billions of dollars to hundreds of philanthropic causes, particularly those supporting math and science research and education. In 1994, they<a href="https://www.simonsfoundation.org/"> established the Simons Foundation</a>, which supports scientists and organizations worldwide in advancing the frontiers of research in mathematics and the basic sciences.</p>
<p>Jim was active in the work of the Simons Foundation until the end of his life, and his curiosity and lifelong passion for math and basic science were an inspiration to those around him. He was determined to make a meaningful difference in the level of support that mathematics and basic sciences received in the United States, notably by sponsoring projects that were important but unlikely to find funding elsewhere.</p>
<p>Over its 30-year history, the Simons Foundation’s work has led to breakthroughs in our understanding of autism, the origins of the universe, cellular biology and computational science. Jim and Marilyn’s giving continues to support the next generation of mathematicians and scientists at schools and universities in New York City and around the world.</p>
<p>Jim <a href="https://www.simonsfoundation.org/2024/05/10/remembering-the-life-and-careers-of-jim-simons/">frequently said that he went through three phases in his professional life</a>: mathematician, investor and philanthropist. He previously chaired the math department at Stony Brook University in New York, and his mathematical breakthroughs during that time are now instrumental to fields such as string theory, topology and condensed matter physics.</p>
<p>In 1978, Jim founded what would become <a href="https://www.rentec.com/Home.action?index=true">Renaissance Technologies</a>, a hedge fund that pioneered quantitative trading and became one of the most profitable investment firms in history. He then turned his focus to making a difference in the world through the<a href="https://www.simonsfoundation.org/"> Simons Foundation</a>,<a href="https://www.sfi.org.bm/"> Simons Foundation International</a>,<a href="https://www.mathforamerica.org/"> Math for America</a> and other philanthropic efforts.</p>
<p>“Jim was an exceptional leader who did transformative work in mathematics and developed a world-leading investment company,” says Simons Foundation president David Spergel. “Together with Marilyn Simons, the current Simons Foundation board chair, Jim created an organization that has already had enormous impact in mathematics, basic science and our understanding of autism. The Simons Foundation, an in-perpetuity foundation, will carry their vision for philanthropy into the future.”</p>
<p>Jim Simons is survived by his wife, three children, five grandchildren, a great-grandchild, and countless colleagues, friends and family who fondly recall his genuine curiosity and quick wit.</p>
<p>We know that many people have stories, messages and memories they would like to share about Jim. Please send them to <a href="https://www.simonsfoundation.org/cdn-cgi/l/email-protection#eb8489988e999d82858cab9882868485988d849e858f8a9f828485c584998c"><span data-cfemail="f09f9283958286999e97b083999d9f9e83969f859e949184999f9ede9f8297">[email&nbsp;protected]</span></a>.</p>
<p>Information on memorial services and other events honoring Jim’s life and legacy <a href="https://www.simonsfoundation.org/observing/">will be posted on the Simons Foundation website</a>.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[KeePassXC Debian maintainer has removed all network features (257 pts)]]></title>
            <link>https://fosstodon.org/@keepassxc/112417353193348720</link>
            <guid>40320166</guid>
            <pubDate>Fri, 10 May 2024 15:29:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fosstodon.org/@keepassxc/112417353193348720">https://fosstodon.org/@keepassxc/112417353193348720</a>, See on <a href="https://news.ycombinator.com/item?id=40320166">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[OpenBSD Desktop (137 pts)]]></title>
            <link>https://x61.ar/log/2024/05/06052024135732-openbsd_desktop.html</link>
            <guid>40318804</guid>
            <pubDate>Fri, 10 May 2024 13:35:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://x61.ar/log/2024/05/06052024135732-openbsd_desktop.html">https://x61.ar/log/2024/05/06052024135732-openbsd_desktop.html</a>, See on <a href="https://news.ycombinator.com/item?id=40318804">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="wrapper">
		
		<p>[x61]</p>
		<hr>
		<nav>
			
		</nav>
		<hr>
<h2>:.: OpenBSD Desktop</h2>

<p>Yes, this is the year of the <a href="https://openbsd.org/">OpenBSD</a> Desktop!</p>

<p>I am a minimalist, and I tend to always keep it as small as I can, so I try to use all
I have in base (if it fits), plus of course some other tools needed.</p>

<p>My general list is:
 </p><ul>
  <li>WM: <a href="https://man.openbsd.org/cwm.1">cwm(1)</a></li>
  <li>Statusbar: <a href="https://github.com/gonzalo-/termbarc">termbar</a></li>
  <li>Mail: <a href="https://openbsd.app/?search=aerc">aerc</a> (now) - <a href="https://openbsd.app/?search=neomutt">neomutt</a> (former)</li>
  <li>Browser: <a href="https://openbsd.app/?search=firefox">Firefox</a> - <a href="https://openbsd.app/?search=ungoogled-chromium">ungoogled-chromium</a></li>
  <li>FileManager: <a href="https://openbsd.app/?search=walk">walk</a> (former llama)</li>
  <li>Editor: <a href="https://openbsd.app/?search=emacs">emacs</a> - <a href="https://man.openbsd.org/mg.1">mg</a></li>
  <li>Photo Viewer: <a href="https://openbsd.app/?search=geeqie">geeqie</a></li>
  <li>PDFs: <a href="https://openbsd.app/?search=mupdf">mupdf</a> and <a href="https://openbsd.app/?search=foliate">foliate</a> (for ebooks or more complex stuff)</li>
  <li>Others: <a href="https://man.openbsd.org/tmux.1">tmux(1)</a>, <a href="https://openbsd.app/?search=got">got</a>, <a href="https://openbsd.app/?search=duf">duf</a>, <a href="https://openbsd.app/?search=sysclean">sysclean</a>, <a href="https://openbsd.app/?search=tor">tor</a>, <a href="https://openbsd.app/?search=remmina">remmina</a>, <a href="https://openbsd.app/?search=feh">feh</a>, <a href="https://openbsd.app/?search=sct">sct</a>, <a href="https://openbsd.app/?search=scrot">scrot</a> among others</li>
</ul>

<p>Finally I unslack myself and tried to write some C code to convert my <a href="https://github.com/gonzalo-/termbar">old termbar</a> into a <a href="https://github.com/gonzalo-/termbarc">new one</a> in C. There is still a lot to fix and adjust, but so far it works on my machines and
it shows all I need and want without any weird error.</p>

<p><a href="https://x61.ar/log/img/termbar.png" target="_blank">
	<img src="https://x61.ar/log/img/termbar.png" alt="termbar in C">
</a></p><p>Yes, I like anime and those colours are trying to emulate the <a href="https://x61.ar/log/img/eva01.png">eva 01</a>, my <b>.Xresources</b>
looks something like this:</p>

<pre><code>!!! Colours
*color0: rgb:2a/3b/4d
*color1: rgb:c4/67/6c
*color2: rgb:66/ff/66
*color3: rgb:ff/ff/66
*color4: rgb:15/f4/ee
*color5: rgb:9c/6c/d3
*color6: rgb:4b/8f/77
*color7: rgb:9f/a2/a6
*color8: rgb:55/79/9c
*color9: rgb:c4/67/6c
*color10: rgb:66/ff/66
*color11: rgb:ff/ff/66
*color12: rgb:15/f4/ee
*color13: rgb:9c/6c/d3
*color14: rgb:4b/8f/77
*color15: rgb:ff/ff/ff
*color16: rgb:ff/99/66 # Base 09
*color17: rgb:bb/64/a9 # Base 0F
*color18: rgb:3d/56/6f # Base 01
*color19: rgb:4b/69/88 # Base 02
*color20: rgb:7e/90/a3 # Base 04
*color21: rgb:d6/d7/d9 # Base 06</code></pre>

<p>My console is <a href="https://man.openbsd.org/xterm.1">xterm(1)</a> and I really don't need
much more than that, my bits for it in the <b>.Xresources</b> are:</p>

<pre><code>!!! Xterm
XTerm*background: black
XTerm*foreground: rgb:9f/a2/a6
XTerm*eightBitInput: false
XTerm*loginShell: true
XTerm*scrollBar: false
XTerm*saveLines: 2000
XTerm*faceName: dejavu sans mono:size=12
XTerm*internalBorder: 10
XTerm*locale: true
XTerm*pointerMode: 2
XTerm*allowTitleOps: true
XTerm*termName: xterm-256color</code></pre>

<p>I also have some love for <a href="https://github.com/gonzalo-/termbarc">termbar</a> in there, which
will show the right font, size, etc:</p>

<pre><code>!!! termbar
termbar*faceName: dejavu sans mono:size=12
termbar*geometry: 3840x1+0+0
termbar*internalBorder: 6
termbar*saveLines: 0
termbar*locale: true
termbar*scrollBar: false
termbar*title: termbar</code></pre>

<p>Those are colours, and I have my "setup" on my <b>.xsession</b>, I have it pretty much all
commented to here it is:</p>

<pre><code>#!/bin/sh -x

## Cleanup stuff on exit
cleanup() {
        pkill -9 sctd
        pkill -9 xidle
        pkill -9 lock
        rm -rf ~/TorBrowser-Data
        rm -f ~/.Xauthority
        rm -rf ~/.local/share/Trash
        chmod 700 ~
}

. $HOME/.profile

## Load colours
xrdb -merge $HOME/.Xresources

## DBus
if [ -x /usr/local/bin/dbus-launch -a -z "${DBUS_SESSION_BUS_ADDRESS}" ]; then
        eval `dbus-launch --sh-syntax --exit-with-x11`
fi

## fonts
xset -b &amp;
for font in /usr/local/share/fonts/*; do
        xset +fp "${font}"
        done
xset fp rehash

## Fix resolution
xrandr --dpi 96

## Turn off mic
sndioctl input.mute=1
sndioctl input.level=0.0

## Turn down sound
sndioctl output.level=0.0

## External Monitor
## this is the output
## of arandr to arrange
## my monitor
~/bin/monitores &amp;

## Select Keyboard layout
## depending on the host
if [ X`hostname` = X"tomato" ]; then
        setxkbmap jp
else
        setxkbmap de
fi

## LANG
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

## Browser shitz
export MOZ_USE_XINPUT2=1
export MOZ_ACCELERATED=1
export MOZ_WEBRENDER=1
## WASM for Chromium
export ENABLE_WASM=1

## jp
## ctrl+space
## F6 &amp; F7 hiragana &lt;-&gt; katakana
export GTK_IM_MODULE="xim"
export QT_IM_MODULE="xim"
export XMODIFIERS="@im=SCIM"
/usr/local/bin/scim -d &amp;

export BLOCKSIZE=1m

## no bell
xset b 0 0 0
xset -dpms
xset s off
xset s noblank

## ~/bin/lock does some protections and runs slock
xidle -timeout 9000 -ne -program ~/bin/lock &amp;

## screen control
~/bin/sctd &amp;

# Termbar
exec xterm -fs 12 -bg "black" -fg "grey" -name termbar -class termbar -T termbar -e ~/bin/termbar &amp;

# Wallpaper
feh --bg-center ~/themes/blade-runner--wallpaper.jpg &amp;

exec cwm

cleanup</code></pre>

<p>My WM is <a href="https://man.openbsd.org/cwm.1">cwm(1)</a> since a long time and combined with <a href="https://github.com/gonzalo-/termbarc">termbar</a>
it fits all my needs, my <a href="https://man.openbsd.org/cwmrc.5">cwmrc(5)</a> looks like:</p>

<pre><code># Autogroups for windows
autogroup       0                   "termbar,termbar"
autogroup       0                   "xconsole,XConsole"
autogroup       0                   "termbar,termbar"
autogroup       1                   "firefox,firefox-bin"
autogroup       9                   "tor-browser,tor-browser"

# Add missing keybindings.
bind-key        M-1                 group-only-1
bind-key        M-2                 group-only-2
bind-key        M-3                 group-only-3
bind-key        M-4                 group-only-4
bind-key        M-5                 group-only-5
bind-key        M-6                 group-only-6
bind-key        M-7                 group-only-7
bind-key        M-8                 group-only-8
bind-key        M-9                 group-only-9
bind-key        MS-1                window-movetogroup-1
bind-key        MS-2                window-movetogroup-2
bind-key        MS-3                window-movetogroup-3
bind-key        MS-4                window-movetogroup-4
bind-key        MS-5                window-movetogroup-5
bind-key        MS-6                window-movetogroup-6
bind-key        MS-7                window-movetogroup-7
bind-key        MS-8                window-movetogroup-8
bind-key        MS-9                window-movetogroup-9

bind-key        MS-space            window-htile
bind-key        M-space             window-vtile

bind-key        C-Up                pointer-move-up
bind-key        C-Down              pointer-move-down
bind-key        C-Right             pointer-move-right
bind-key        C-Left              pointer-move-left

bind-key        CS-Up               pointer-move-up-bigbind-key
bind-key        CS-Down             pointer-move-down-big
bind-key        CS-Right            pointer-move-right-big
bind-key        CS-Left             pointer-move-left-big

bind-key        4-l                 /home/gonzalo/bin/lock
bind-key        4-r                 restart
bind-key        4-q                 quit
bind-key        MS-Return           terminal
bind-key        MS-p                menu-exec
## Windows
borderwidth     4
color           activeborder        '#202060'
color           font                '#000000'
color           selfont             '#e9ffe9'
color           inactiveborder      'rgb:31/31/31'
color           menubg              '#494949'
color           menufg              '#202060'

fontname                            "dejavu sans mono:size=12"
gap                                 35 5 5 5

ignore                              "termbar"

command         firefox             firefox
command         xterm               xterm

moveamount                          4
snapdist                            25
sticky                              yes</code></pre> 

<p>And that is pretty much the "core" of my configs, the rest are probably default or some very basic
changes.</p>

<p>The clean desktop looks a bit like this:</p>

<p><a href="https://x61.ar/log/img/desktop.png" target="_blank">
	<img src="https://x61.ar/log/img/desktop.png" alt="desktop">
</a></p><p>And this is busy:</p>

<p><a href="https://x61.ar/log/img/busy.png" target="_blank">
	<img src="https://x61.ar/log/img/busy.png" alt="busy desktop">
</a></p><p>As a final note, I saw a lot of people following tutorials on <b>"OpenBSD Desktops"</b> that changed a lot
of flags totally blindly without any real test or comparison after/before. About this, I would say that my user
is part of the <b>staff</b> and I didn't change anything in the login class, and also my <a href="https://man.openbsd.org/sysctl.conf.5">sysctl.conf(5)</a>
is the default with the normal changes like <b>machdep.allowaperture=2</b> (<b>Update:</b> tb@ made me realize that <a href="https://undeadly.org/cgi?action=article&amp;sid=20140223112426">machdep.allowaperture is not needed anymore</a>, thanks!) or <b>net.inet.ip.forwarding=1</b>,
my daily laptop is a <b>thinkpad x395</b>.</p>
			<hr>
			
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Superfile – A fancy, pretty terminal file manager (344 pts)]]></title>
            <link>https://github.com/MHNightCat/superfile</link>
            <guid>40318714</guid>
            <pubDate>Fri, 10 May 2024 13:27:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/MHNightCat/superfile">https://github.com/MHNightCat/superfile</a>, See on <a href="https://news.ycombinator.com/item?id=40318714">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto">
<themed-picture data-catalyst-inline="true"><picture>
  <source media="(prefers-color-scheme: dark)" srcset="https://github.com/MHNightCat/superfile/raw/main/asset/superfilelogowhite.png">
  <source media="(prefers-color-scheme: light)" srcset="https://github.com/MHNightCat/superfile/raw/main/asset/superfilelogoblack.png">
  <img alt="superfile LOGO" src="https://github.com/MHNightCat/superfile/raw/main/asset/superfilelogowhite.png">
</picture></themed-picture>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/MHNightCat/superfile/blob/main/asset/demo.png"><img src="https://github.com/MHNightCat/superfile/raw/main/asset/demo.png" alt=""></a></p>
</div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Demo</h2><a id="user-content-demo" aria-label="Permalink: Demo" href="#demo"></a></p>
<table>
<thead>
<tr>
<th>Perform common operations</th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/MHNightCat/superfile/blob/main/asset/demo.gif"><img src="https://github.com/MHNightCat/superfile/raw/main/asset/demo.gif" alt="" data-animated-image=""></a></td>
</tr>
</tbody>
</table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Content</h2><a id="user-content-content" aria-label="Permalink: Content" href="#content"></a></p>
<ul dir="auto">
<li><a href="#install">Installation</a>
<ul dir="auto">
<li><a href="#homebrew">Homebrew</a></li>
<li><a href="#linux">Linux</a></li>
<li><a href="#font">Font</a></li>
</ul>
</li>
<li><a href="#build">Build</a></li>
<li><a href="#supported-systems">Supported Systems</a></li>
<li><a href="#tutorial">Tutorial</a></li>
<li><a href="#plugins">Plugins</a></li>
<li><a href="#themes">Themes</a>
<ul dir="auto">
<li><a href="#use-an-existing-theme">Use an existing theme</a></li>
<li><a href="#create-your-own-theme">Create your own theme</a></li>
</ul>
</li>
<li><a href="#hotkeys">Hotkeys</a></li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#thanks">Thanks</a>
<ul dir="auto">
<li><a href="#Support">Support</a></li>
<li><a href="#contributors">Contributors</a></li>
<li><a href="#star-history">Star History</a></li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Install</h2><a id="user-content-install" aria-label="Permalink: Install" href="#install"></a></p>
<blockquote>
<p dir="auto">I am still working on different installation methods like <code>snap</code> or <code>AUR</code></p>
</blockquote>
<p dir="auto"><strong>Requirements</strong></p>
<ul dir="auto">
<li>Any <a href="#font"><code>Nerd Font</code></a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Homebrew</h3><a id="user-content-homebrew" aria-label="Permalink: Homebrew" href="#homebrew"></a></p>
<p dir="auto">Install homebrew and execute the following commands</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Linux</h3><a id="user-content-linux" aria-label="Permalink: Linux" href="#linux"></a></p>
<p dir="auto">You can go to the <a href="https://github.com/MHNightCat/superfile/releases/latest">latest release</a> and download the binary file. Once it is downloaded please extract the file after that enter the following in your terminal:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd ~/Download
chmod +x ./spf
sudo mv ./spf /bin/"><pre><span>cd</span> <span>~</span>/Download
chmod +x ./spf
sudo mv ./spf /bin/</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">
     NixOS
</h4><a id="user-content------nixos" aria-label="Permalink: 
     NixOS
" href="#-----nixos"></a></p>
<details><summary>Click to expand</summary>
<p dir="auto"><h4 tabindex="-1" dir="auto">Install with nix command line:</h4><a id="user-content-install-with-nix-command-line" aria-label="Permalink: Install with nix command line:" href="#install-with-nix-command-line"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="nix profile install github:MHNightCat/superfile#superfile"><pre>nix profile install github:MHNightCat/superfile#superfile</pre></div>
<p dir="auto">or</p>
<div dir="auto" data-snippet-clipboard-copy-content="nix profile install github:MHNightCat/superfile#superfile"><pre>nix profile install github:MHNightCat/superfile#superfile</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Install with flake:</h4><a id="user-content-install-with-flake" aria-label="Permalink: Install with flake:" href="#install-with-flake"></a></p>
<p dir="auto">Add superfile to your flake inputs:</p>
<div dir="auto" data-snippet-clipboard-copy-content="inputs = {
  superfile = {
    url = &quot;github:MHNightCat/superfile&quot;;
  };
  # ...
};"><pre><span><span>inputs</span></span> <span>=</span> <span>{</span>
  <span><span>superfile</span></span> <span>=</span> <span>{</span>
    <span><span>url</span></span> <span>=</span> <span>"github:MHNightCat/superfile"</span><span>;</span>
  <span>}</span><span>;</span>
  <span># ...</span>
<span>}</span><span>;</span></pre></div>
<p dir="auto">Then you can add it to your packages:</p>
<div dir="auto" data-snippet-clipboard-copy-content="let
  system = &quot;x86_64-linux&quot;;
in {
  environment.systemPackages = with pkgs; [
    # ...
    inputs.superfile.packages.${system}.default  ];
}"><pre><span>let</span>
  <span><span>system</span></span> <span>=</span> <span>"x86_64-linux"</span><span>;</span>
<span>in</span> <span>{</span>
  <span><span>environment</span><span>.</span><span>systemPackages</span></span> <span>=</span> <span>with</span> <span>pkgs</span><span>;</span> <span>[</span>
    <span># ...</span>
    <span>inputs</span><span>.</span><span><span>superfile</span><span>.</span><span>packages</span><span>.</span><span><span>${</span><span>system</span><span>}</span></span><span>.</span><span>default</span></span>  <span>]</span><span>;</span>
<span>}</span></pre></div>
</details>
<p dir="auto"><h3 tabindex="-1" dir="auto">Font</h3><a id="user-content-font" aria-label="Permalink: Font" href="#font"></a></p>
<div dir="auto"><p dir="auto">Warning</p><p dir="auto">This is a reminder that you must use a <a href="https://www.nerdfonts.com/font-downloads" rel="nofollow">Nerd font</a></p>
</div>
<p dir="auto">Once the font is installed if <code>superfile</code> isn't working make sure to update your terminal preferences to use the font.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Build</h2><a id="user-content-build" aria-label="Permalink: Build" href="#build"></a></p>
<p dir="auto">You can build the source code yourself by using these steps:</p>
<p dir="auto"><strong>Requirements</strong></p>
<ul dir="auto">
<li><a href="https://go.dev/doc/install" rel="nofollow">golang</a></li>
</ul>
<p dir="auto"><strong>Build Steps</strong></p>
<p dir="auto">Clone this repo using the following command:</p>
<div data-snippet-clipboard-copy-content="git clone https://github.com/MHNightCat/superfile.git"><pre><code>git clone https://github.com/MHNightCat/superfile.git
</code></pre></div>
<p dir="auto">Enter the downloaded directory:</p>

<p dir="auto">Run the <code>build.sh</code> file:</p>

<p dir="auto">Add the binary file to your $PATH, e.g. in <code>/usr/local/bin</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="mv ./bin/spf /usr/local/bin"><pre>mv ./bin/spf /usr/local/bin</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Supported Systems</h2><a id="user-content-supported-systems" aria-label="Permalink: Supported Systems" href="#supported-systems"></a></p>
<ul>
<li> Linux</li>
<li> MacOS</li>
<li> Windows</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tutorial</h2><a id="user-content-tutorial" aria-label="Permalink: Tutorial" href="#tutorial"></a></p>
<p dir="auto">After you install superfile, you can go <a href="https://github.com/MHNightCat/superfile/wiki/Tutorial">here</a> to briefly understand how to use superfile!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Plugins</h2><a id="user-content-plugins" aria-label="Permalink: Plugins" href="#plugins"></a></p>
<p dir="auto"><a href="https://github.com/MHNightCat/superfile/wiki/Plugins">Click me to the plugins wiki</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Themes</h2><a id="user-content-themes" aria-label="Permalink: Themes" href="#themes"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Use an existing theme</h3><a id="user-content-use-an-existing-theme" aria-label="Permalink: Use an existing theme" href="#use-an-existing-theme"></a></p>
<p dir="auto">You can go to <a href="https://github.com/MHNightCat/superfile/blob/main/THEMELIST.md">theme list</a> to find one you like!</p>
<blockquote>
<p dir="auto">We only have a few themes at the moment, but we will be making more over time! You can also <a href="https://github.com/MHNightCat/superfile/pulls">submit a pull request</a> for your own theme!</p>
</blockquote>
<p dir="auto">copy <code>theme_name</code> in:</p>

<p dir="auto">Edit <code>config.toml</code> using your preferred editor:</p>
<div data-snippet-clipboard-copy-content="$EDITOR ~/.config/superfile/config.toml"><pre><code>$EDITOR ~/.config/superfile/config.toml
</code></pre></div>
<p dir="auto">and change:</p>

<p dir="auto">to:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Create your own theme</h3><a id="user-content-create-your-own-theme" aria-label="Permalink: Create your own theme" href="#create-your-own-theme"></a></p>
<p dir="auto">If you want to customize your own theme, you can go to <code>~/.config/superfile/theme/YOUR_THEME_NAME.toml</code> and copy the existing theme's json to your own theme file</p>
<p dir="auto">Don't forget to change the <code>theme</code> variable in <code>config.toml</code> to your theme name.</p>
<p dir="auto"><a href="#contribute">If you are satisfied with your theme, you might as well put it into the default theme list!</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Hotkeys</h2><a id="user-content-hotkeys" aria-label="Permalink: Hotkeys" href="#hotkeys"></a></p>
<p dir="auto"><a href="https://github.com/MHNightCat/superfile/wiki/Hotkey-list"><strong>Click me to see the hotkey list</strong></a></p>
<p dir="auto"><strong>You can change all hotkeys in</strong> <code>~/.config/superfile/hotkeys.toml</code></p>
<blockquote>
<p dir="auto">"Normal mode" is the default browsing mode</p>
</blockquote>
<p dir="auto">Global hotkeys cannot conflict with other hotkeys (The only exception is the special hotkey).</p>
<p dir="auto">The hotkey ranges are found in <code>hotkeys.toml</code></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">If you want to contribute please follow the <a href="https://github.com/MHNightCat/superfile/blob/main/CONTRIBUTING.md">contribution guide</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Thanks</h2><a id="user-content-thanks" aria-label="Permalink: Thanks" href="#thanks"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Support</h3><a id="user-content-support" aria-label="Permalink: Support" href="#support"></a></p>
<ul dir="auto">
<li>a Star on my Github repos would be nice 🌟</li>
<li>You can buy a coffee for me 💖</li>
</ul>
<p dir="auto"><a href="https://ko-fi.com/G2G1JEGGC" rel="nofollow"><img src="https://camo.githubusercontent.com/ce32b4940b9ebf361cfd346ba0582815846406854cd2f701c11a85cb21eaa939/68747470733a2f2f6b6f2d66692e636f6d2f696d672f676974687562627574746f6e5f736d2e737667" alt="ko-fi" data-canonical-src="https://ko-fi.com/img/githubbutton_sm.svg"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Contributors</h3><a id="user-content-contributors" aria-label="Permalink: Contributors" href="#contributors"></a></p>
<p dir="auto"><strong>Thanks to all the contributors for making this project even greater!</strong></p>
<a href="https://github.com/mhnightcat/superfile/graphs/contributors">
  <img src="https://camo.githubusercontent.com/d16043c1bc0767093a39faadc388cf3e8ebd3bbcd7fa5ba0990840aa6d4c0c48/68747470733a2f2f636f6e747269622e726f636b732f696d6167653f7265706f3d6d686e696768746361742f737570657266696c65" data-canonical-src="https://contrib.rocks/image?repo=mhnightcat/superfile">
</a>
<p dir="auto"><h3 tabindex="-1" dir="auto">Star History</h3><a id="user-content-star-history" aria-label="Permalink: Star History" href="#star-history"></a></p>
<p dir="auto"><strong>THANKS FOR All OF YOUR STARS!</strong>
Your stars are my motivation to keep updating!</p>
<a href="https://star-history.com/#MHNightCat/superfile&amp;Timeline" rel="nofollow">
 <themed-picture data-catalyst-inline="true"><picture>
   <source media="(prefers-color-scheme: dark)" srcset="https://camo.githubusercontent.com/c1266b1530eb50a04647beb634492bec9ef08e2c72c28cfc7232707d4f37af6e/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d4d484e696768744361742f737570657266696c6526747970653d54696d656c696e65267468656d653d6461726b" data-canonical-src="https://api.star-history.com/svg?repos=MHNightCat/superfile&amp;type=Timeline&amp;theme=dark">
   <source media="(prefers-color-scheme: light)" srcset="https://camo.githubusercontent.com/e12ebcc2b67aa43110aaaaabe80701c44b09183f342306d8ee0707c48de2cc9b/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d4d484e696768744361742f737570657266696c6526747970653d54696d656c696e65" data-canonical-src="https://api.star-history.com/svg?repos=MHNightCat/superfile&amp;type=Timeline">
   <img alt="Star History Chart" src="https://camo.githubusercontent.com/e12ebcc2b67aa43110aaaaabe80701c44b09183f342306d8ee0707c48de2cc9b/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d4d484e696768744361742f737570657266696c6526747970653d54696d656c696e65" data-canonical-src="https://api.star-history.com/svg?repos=MHNightCat/superfile&amp;type=Timeline">
 </picture></themed-picture>
</a>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Show HN: A web debugger an ex-Cloudflare team has been working on for 4 years (758 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=40318542</link>
            <guid>40318542</guid>
            <pubDate>Fri, 10 May 2024 13:08:38 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=40318542">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td colspan="2"></td><td><div><p>Hey HN, I wanted to show you a product a small team and I have been working on for 4 years. <a href="https://jam.dev/" rel="nofollow">https://jam.dev</a></p><p>It’s called Jam and it prevents product managers (like I used to be) from being able to create vague and un-reproducible bug tickets (like I used to create).</p><p>It’s actually really hard as a non-engineer to file useful bug tickets for engineers. Like, sometimes I thought I included a screenshot, but the important information the engineer needed was what was actually right outside the boundary of the screenshot I took. Or I'd write that something "didn't work" but the engineer wasn't sure if I meant that it returned an error or if it was unresponsive. So the engineer would be frustrated, I would be frustrated, and fixing stuff would slow to a halt while we went back and forth to clarify how to repro the issue over async Jira comments.</p><p>It’s actually pretty crazy that while so much has changed in how we develop software (heck, we have types in javascript now*), the way we capture and report bugs is just as manual and lossy as it was in the 1990’s. We can run assembly in the browser but there’s still no tooling to help a non-engineer show a bug to an engineer productively.</p><p>So that’s what Jam is. Dev tools + video in a link. It’s like a shareable HAR file synced to a video recording of the session. And besides video, you can use it to share an instant replay of a bug that just happened — basically a 30 second playback of the DOM as a video.</p><p>We’ve spent a lot of time adding in a ton of niceties, like Jam writes automatic repro steps for you, and Jam’s dev tools use the same keyboard shortcuts you’re used to in Chrome dev tools, and our team’s personal favorite: Jam parses GraphQL responses and pulls out mutation names and errors (which is important because GraphQL uses one endpoint for all requests and always returns a 200, meaning you usually have to sift through every GraphQL request when debugging to find the one you’re looking for)</p><p>We’re now 2 years in to the product being live and people have used Jam to fix more than 2 million bugs - which makes me so happy - but there’s still a ton to do. I wanted to open up for discussion here and get your feedback and opinions how can we make it even more valuable for you debugging?</p><p>The worst part of the engineering job is debugging and not even being able to repro the issue, it’s not even really engineering, it’s just a communication gap, one that we should be able to solve with tools. So yeah excited to get your feedback and hear your thoughts how we can make debugging just a little less frustrating.</p><p>(Jam is free to use forever — there is a paid tier for features real companies would need, but we’re keeping a large free plan forever. We learned to build products at Cloudflare and free tier is in our ethos, both my co-founder and I and about half the team is ex-Cloudflare) and what we loved there is how much great feedback we’d get because the product was mostly  free to use. We definitely want to keep that going at Jam.)</p><p>By the way, we’re hiring engineers and if this is a problem that excites you, we’d love to chat: jam.dev/careers</p></div></td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Food labels and the lies they tell us about ‘best before’ expiration dates (2021) (122 pts)]]></title>
            <link>https://www.vox.com/22559293/food-waste-expiration-label-best-before</link>
            <guid>40318123</guid>
            <pubDate>Fri, 10 May 2024 12:23:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.vox.com/22559293/food-waste-expiration-label-best-before">https://www.vox.com/22559293/food-waste-expiration-label-best-before</a>, See on <a href="https://news.ycombinator.com/item?id=40318123">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p id="HEJs5m">Maybe you know the routine. Every so often, I go through my refrigerator, check labels on the items, and throw out anything that’s a month, or a week, or maybe a few days past the date on the label. I might stop to sniff, but for my whole adult life, I’ve figured that the problem was obvious — my jam or almond milk or package of shredded Italian cheese blend had “expired” — and the fix was simple: Into the garbage it goes. </p>
<p id="LnUZsT">This habit is so ingrained that when I think about eating food that’s gone past its date, I get a little queasy. I’ve only had food poisoning once or twice in my life, always from restaurants, but the idea is still there in my head: past the date, food will make me sick. You’ll probably never catch me dumpster-diving.</p>
<p id="r3ROOS">I know, on some intellectual level, that throwing away food is probably wrong. The statistics are damning. Forty percent of food produced in America heads to the landfill or is otherwise wasted. That adds up. Every year, the average American family throws out somewhere between $1,365 and $2,275, according to <a href="https://www.nrdc.org/sites/default/files/dating-game-report.pdf">a landmark 2013 study</a> co-authored by the Harvard Food Law and Policy Clinic and the Natural Resources Defense Council. It’s a huge economic loss for food growers and retailers, who often have to ditch weirdly shaped produce or overstocked food that didn’t sell. </p>
<p id="jJ0Vmf">Environmentally it’s bad, too. The study found that 25 percent of fresh water in the US goes toward producing food that goes uneaten, and 21 percent of input to our landfills is food, which represents a per-capita increase of 50 percent since 1974. Right now, landfills are piled high with wasted food, most of which was perfectly fine to eat — and some of which still is. </p>
<p id="rlOjhv">On top of this, I know that in the same country that throws away so much food, <a href="https://www.feedingamerica.org/hunger-in-america#:~:text=The%20pandemic%20has%20most%20impacted,States%20experienced%20hunger%20in%202019">about 42 million people</a> could be living with food insecurity and hunger. Yet state-level regulations often make it difficult to donate past-date food to food banks and other services.</p>
  <figure>
  <span>
    
    <span data-original="https://cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg">
      
        <picture data-cid="site/picture_element-1715404368_3275_244673" data-cdata="{&quot;asset_id&quot;:22693764,&quot;ratio&quot;:&quot;*&quot;}">
  


  <source srcset="https://cdn.vox-cdn.com/thumbor/1vuF3H7m8Fn5-U9KxSScoqLfDC0=/0x0:5100x3403/320x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 320w, https://cdn.vox-cdn.com/thumbor/2PjZQFAzXY5wSwfh99EHmvGCZ1I=/0x0:5100x3403/520x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 520w, https://cdn.vox-cdn.com/thumbor/WfIrP0A51VGAUa72iBmiKkYLw48=/0x0:5100x3403/720x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 720w, https://cdn.vox-cdn.com/thumbor/g4mE_AY-nVjYK8sNCvFtwAOYgfU=/0x0:5100x3403/920x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 920w, https://cdn.vox-cdn.com/thumbor/YSxvOQkUk7O84Zfq5MjZQiPt02k=/0x0:5100x3403/1120x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1120w, https://cdn.vox-cdn.com/thumbor/QmTMWuZZ5aAqWregtwiVOU2CGXA=/0x0:5100x3403/1320x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1320w, https://cdn.vox-cdn.com/thumbor/fGuOsk4zf5-Sv4PzQsbp-VMhGd0=/0x0:5100x3403/1520x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1520w, https://cdn.vox-cdn.com/thumbor/MKYT4BGShuyEirB2me7Ss3NbouY=/0x0:5100x3403/1720x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1720w, https://cdn.vox-cdn.com/thumbor/Qvky9Jwn1ze-GjJNMGodVTFyfrU=/0x0:5100x3403/1920x0/filters:focal(0x0:5100x3403):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" type="image/webp">


<img srcset="https://cdn.vox-cdn.com/thumbor/57xHJFHyAXugMc8rw14N0NQM8n8=/0x0:5100x3403/320x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 320w, https://cdn.vox-cdn.com/thumbor/pn92Cukye5j_t_ue-5t3YCSgrdg=/0x0:5100x3403/520x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 520w, https://cdn.vox-cdn.com/thumbor/bpfuKfrJGs6W7X8w27l4b4cUU48=/0x0:5100x3403/720x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 720w, https://cdn.vox-cdn.com/thumbor/WSvFhi2qrzOx1IwoQYj4bKgMieA=/0x0:5100x3403/920x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 920w, https://cdn.vox-cdn.com/thumbor/tx8VZE4f_Xfj35rWDIu-E4C0-jg=/0x0:5100x3403/1120x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1120w, https://cdn.vox-cdn.com/thumbor/Y_UYxyvWaLE5S3hrAhKEauabFFQ=/0x0:5100x3403/1320x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1320w, https://cdn.vox-cdn.com/thumbor/oDhHiMf9Cyh10eNLobBP0iactV0=/0x0:5100x3403/1520x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1520w, https://cdn.vox-cdn.com/thumbor/FBIP4O6JUgoP-JlnfcHhBQ6rlQM=/0x0:5100x3403/1720x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1720w, https://cdn.vox-cdn.com/thumbor/n8whEywieH0mEhFCh5Up2r06Jrk=/0x0:5100x3403/1920x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" alt="A billboard with a picture of a bagged loaf of bread reads, “Every American wastes 290 pounds of food a year. Cook it, Store it, Share it. Savethefood.com.” The tag on the bread reads, “Best if used.”" loading="lazy" data-upload-width="5100" width="5100" height="3403" src="https://cdn.vox-cdn.com/thumbor/0mJTRPHGJLnBQudNwnD3S_93eLY=/0x0:5100x3403/1200x0/filters:focal(0x0:5100x3403):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693764/1263639947.jpg">

</picture>

      
    </span>
    
  </span>
  
    <span>
      
        <figcaption>A billboard in Minnesota, telling us what we probably already know.</figcaption>
      
      
        <cite>Michael Siluk/Education Images/Universal Images Group/Getty Images</cite>
      
    </span>
  
</figure>


<p id="LuIK4v">America has a food waste problem. But I’ve rarely been clear on how that translates to how I actually treat the food in my refrigerator. Because what can you do, right? When the date says it’s done, it’s done, right?</p>
<p id="Mlp6SG">Apparently, very wrong. Researchers have found that “expiration” dates — which rarely correspond to food actually expiring or spoiling — are mostly well-intentioned, but haphazard and confusing. Put another way, they’re not expiration dates at all. And the broader public’s misunderstanding about them is a major contributor in every single one of the factors I named above: wasted food, wasted revenue, wasted household income, and food insecurity.</p>
<p id="lYjFbN">If you’ve been throwing out food based on the freshness label, though, you’re not alone. It’s a widespread practice. Chef, journalist, and cookbook writer Tamar Adler, author of <em>An Everlasting Meal: Cooking with Economy and Grace</em>, explains: “In the absence of culinary information, people assume that any information they’ve been given must be the most important information.” A big part of the problem is that most of us don’t really believe we’re capable of determining if a food is good for us. </p>
<p id="LB2Sx6">“It’s really hard to imagine you’re supposed to trust your own nose and mouth,” Adler said. “Add that to convenience culture and rapacious late-stage capitalism and, well, we’re fucked.”</p>
<p id="RPfEbm">The good news is that the problem wouldn’t be all that hard to fix, in the abstract. The bad part is that solving the broader system around it takes time, education, and a shift in our consumption habits. But the incentives for virtually everyone involved are high — and a good place to start is by figuring out what those labels actually mean and how to interact with them.</p>
<h3 id="nbfHqx">Everything you assume about date labels is probably wrong</h3>
<p id="GcAjMV">There are two vital facts to know about date labels on foods in the US: They’re not standardized, and they have almost nothing to do with food safety. </p>
<p id="EOmoIl">Date labels first started appearing in the decades following World War II, as American consumers increasingly moved away from shopping at small grocery stores and farms and toward supermarkets, with their rows of packaged and curated options. At first, manufacturers printed a date code on cans and packages for the benefit of the grocer, so they’d have a guideline for when to rotate their stock. The label was not designed for consumers. But since shoppers wanted to buy the freshest food on the shelf, savvy folks started publishing booklets that gave a guide for deciphering the codes. </p>

<p id="8bFi6x">Eventually, producers — seeing that shoppers actually wanted to know what those secret dates were — started including more clearly readable dates on the packages, with month, day, and year. They saw it as a marketing boon; it was a way to attract consumers and signify that your food was fresh and flavorful. Consumers loved it, and the so-called “open date” labels became common. But there was little consistency about them.</p>
<p id="UxHcp0">And while the federal government made some attempts beginning in the 1970s to enact legislation that would standardize what those labels mean across the country, they failed. (The exception is infant formula, for which there are strict federal guidelines.) Instead, the burden fell on state (and sometimes local) legislatures, which passed laws that varied wildly, often relying on voluntary industry standards. One state might never require labels; another may mandate that the freshness label on milk have a date of 21 days after bottling; a third may set the same date at 14 days. (In my home state of New York, <a href="https://agriculture.ny.gov/food-safety/food-labeling">there are laws about labels</a>, but the standards don’t mention dates at all — though certainly many manufacturers still put date labels on their products, and various municipalities at times set their own guidelines.) State-to-state discrepancies can be costly for manufacturers, who had to come up with ways to produce multiple labels for multiple regions. But it’s also baffling to consumers. </p>
<p id="LQ3d3K">The labels are inconsistent, too. What the label actually indicates varies from producer to producer. So you might have a “best by” label on one product, a “sell by” label on another, and a “best if used before” label on a third. Those have different meanings, but the average consumer may not immediately realize that, or even notice there’s a difference.</p>
  <figure>
  <span>
    
    <span data-original="https://cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg">
      
        <picture data-cid="site/picture_element-1715404368_3901_244675" data-cdata="{&quot;asset_id&quot;:22693769,&quot;ratio&quot;:&quot;*&quot;}">
  


  <source srcset="https://cdn.vox-cdn.com/thumbor/ERQk3in9MHb1G9gXliuMtVtlkbY=/0x0:2327x3000/320x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 320w, https://cdn.vox-cdn.com/thumbor/qUkRhbRfg9EvM0eegYfJquOhphE=/0x0:2327x3000/520x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 520w, https://cdn.vox-cdn.com/thumbor/Pd8Z6_WwJQwE8F8Y6dcAR_z2JtQ=/0x0:2327x3000/720x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 720w, https://cdn.vox-cdn.com/thumbor/oRFODlFY1h-FcJq3mUgkEzlmq88=/0x0:2327x3000/920x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 920w, https://cdn.vox-cdn.com/thumbor/LhzcLGzNQsIzay_voHNUSkM5nXA=/0x0:2327x3000/1120x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1120w, https://cdn.vox-cdn.com/thumbor/59C8s3Vdhogbe1RhOAAwBHBzPxk=/0x0:2327x3000/1320x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1320w, https://cdn.vox-cdn.com/thumbor/Qod2t5ovnCz0eBMo5epwFmYvlYE=/0x0:2327x3000/1520x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1520w, https://cdn.vox-cdn.com/thumbor/YcQkgQD-Lxo9aivwmVwVWLSQbq4=/0x0:2327x3000/1720x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1720w, https://cdn.vox-cdn.com/thumbor/ldq4CpR5mRvNk3cPrVWPuxJ6oTQ=/0x0:2327x3000/1920x0/filters:focal(0x0:2327x3000):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" type="image/webp">


<img srcset="https://cdn.vox-cdn.com/thumbor/kmlZ08-Ue_9OEveckkoSP1M8-IE=/0x0:2327x3000/320x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 320w, https://cdn.vox-cdn.com/thumbor/cj_OC0uMkQmfxuvM2NRNZ_roM-g=/0x0:2327x3000/520x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 520w, https://cdn.vox-cdn.com/thumbor/UvoobgxObd3a0-8ID-q-Um785Mg=/0x0:2327x3000/720x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 720w, https://cdn.vox-cdn.com/thumbor/NAn9i8DA91nXA1P0eNkBQgMbTWY=/0x0:2327x3000/920x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 920w, https://cdn.vox-cdn.com/thumbor/uJo35NT1MbUlilVI9TQPksrulcE=/0x0:2327x3000/1120x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1120w, https://cdn.vox-cdn.com/thumbor/ZOQBy6wv5wEM22VQSr7gWWty0Vk=/0x0:2327x3000/1320x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1320w, https://cdn.vox-cdn.com/thumbor/oG8GvbYiODRi9NPWsHMZVQYExIg=/0x0:2327x3000/1520x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1520w, https://cdn.vox-cdn.com/thumbor/C5OK9EHB2O1M5aL7BdKrgouxCwY=/0x0:2327x3000/1720x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1720w, https://cdn.vox-cdn.com/thumbor/Vlw8mwFB_nImjAxo3vBsTHhEslE=/0x0:2327x3000/1920x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" alt="A label on a tub of whipped Land O Lakes butter reads, “Best when used by date on package.”" loading="lazy" data-upload-width="2327" width="2327" height="3000" src="https://cdn.vox-cdn.com/thumbor/b4nRZ3YufYwSw3DnsbWqNBFI_j4=/0x0:2327x3000/1200x0/filters:focal(0x0:2327x3000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693769/56517473.jpg">

</picture>

      
    </span>
    
  </span>
  
    <span>
      
        <figcaption>What does “best” mean in this context? For items made with properly pasteurized dairy products, it’s not about safety.</figcaption>
      
      
        <cite>Scott Olson/Getty Images</cite>
      
    </span>
  
</figure>


<p id="vG8ILd">Furthermore, those dates might not even be consistent across brands of the same food product — peanut butter, say, or strawberry jam. That’s partly because they’re not really meant to indicate when a food is safest. Most packaged foods are perfectly fine for weeks or months past the date. Canned and frozen goods last for years. That package of chips you forgot about that’s a month out of date isn’t going to kill you — they just might be a tiny bit less crunchy than you’d like. (The huge exception is foods like deli meats and deli salads, which won’t be reheated before they’re consumed and can pick up listeria in the production process — but that’s the exception, not the rule.) You can check for the freshness of eggs by trying to float them in a glass of water (if it sinks, it’s good). Properly pasteurized milk, which is free of pathogens, should be fine if it tastes and smells fine. But many of us, with the best of intentions, just look at what the label says and throw out what’s old.</p>
<h3 id="6Lp6bp">Is this a scam?</h3>
<p id="8LxvuB">When I first realized that date labeling wasn’t linked directly to scientifically backed safety standards but to a more subjective, voluntary, and nebulous standard of “freshness,” I wondered if it was … well, kind of a scam. After all, customers don’t benefit from throwing out foods; grocers lose money; farmers miss out on possible sources of revenue. The only people who could benefit are the producers, and I could imagine an unscrupulous manufacturer shortening the date on their food so that people will sigh, throw out a half-eaten package that has “expired,” and go buy some more.</p>
<p id="tTn3J9">I asked Emily Broad Leib, the director of the Harvard Law School Food and Policy Clinic and lead author of the 2013 study, about this. She laughed and said I’m not the only one to wonder if we’re just getting played. </p>
<p id="z4oN9u">But, she said, manufacturers would say “there is a legitimate reason on their part, which is that they want you to eat things when they taste the absolute best.” The methods by which they determine that date can vary; a big manufacturer might run a focus group with consumers to determine the date, while a small producer may just hazard a guesstimate. But importantly, the freshness date almost never corresponds to the food’s safety <em>— </em>to whether or not it could make you sick. </p>
<p id="bkvsm0">Suppose you buy a particular brand of yogurt, Broad Leib says, and it waits around till it’s slightly past its peak. You might decide you don’t like this brand of yogurt, and buy a different one next time. The dates are, in part, a way of “protecting the brand,” she said. Their biggest incentive is to make sure you eat the food when it tastes the way they think it should.</p>
<p id="3IkKJj">But that doesn’t mean that the way we buy and eat food has no part in the blame, and producers don’t have to be insidious to be part of the issue. The fact that so many of us read a “best by” label as actually saying “bad after” is partly a public education problem, and it’s one that manufacturers haven’t worked too hard to combat. “It’s in the general interest of anybody trying to sell anything to continue to perpetuate the illusion that our foods are going bad all the time,” Adler said. “We could buy half as much food.”</p>
<p id="weemiq">Adler noted that our penchant for buying more than we need and then throwing out food that’s gone slightly past its peak is rooted, at its core, in a consumer mindset. “The only way that makes sense is if your cultural value is unfettered growth and profit at all costs,” she said. “There’s no other way that it makes sense to just throw stuff out.”</p>

<p id="ElVIYE">In fact, she said, it’s in direct contrast to what most food cultures practice around the world. “The whole idea that mold and bacteria are to be avoided at all costs is not only antithetical to good cooking, but it’s literally not practiced” in most cultures. Salami and cheese and pickles and sauerkraut and all kinds of food come from the natural process of aging — “in most cuisines of the world, there’s not as great a distinction between new food and old food; they’re just ingredients that you’d use differently,” she said. Those traditions certainly have been retained in regions where Americans still make kimchi and half-sours and farm cheese. But we’ve absorbed over time the idea that those natural processes are bad and will make us sick. Instead, we rely on companies to tell us what food is good for us and when to get rid of it. </p>
<p id="inWQ0J">Adler says part of the problem may also lie with our burgeoning “food as status performance” culture, in which particular foods trend on social media, or food media coaxes us to keep buying new ingredients to make something we saw in a picture or on TikTok. “That doesn’t do a great service for anybody trying to cook what they have,” she said. “If they don’t have the ingredients for the viral thing, then whatever they do have is just going to sit there, while they go get the other ingredients.” </p>
<h3 id="8e09fM">Our shopping culture is also at fault</h3>
<p id="GnmWQG">The problem is bigger than individual consumers. Some states bar grocery stores from donating or selling out-of-date foods to food banks and other services designed to help those living with food insecurity. The thinking is reasonable, even altruistic: Why would we give sub-par food to the “poor”? If I wouldn’t eat “expired” food, why would I give it to others? Distributors fear legal threats if someone eats past-dated food and becomes ill (something that has rarely happened, but it’s still a looming threat). </p>
<p id="30JPOO">That’s exacerbated by the way Americans shop. Think about it: How often do you see a shelf or bin or freezer in a grocery store that isn’t fully stocked to the brim? Supermarkets stock more food than they can sell, and that’s on purpose. Broad Leib told me that it’s common practice for supermarkets to plan for “shrink” — food they expect to be wasted. Shoppers in the US look askance at a shelf that isn’t fully stocked, or at a few potatoes left in the bin. “On the consumer side, you can understand,” she said. “You want to go to a store and have them have everything you want. And if you went in and they didn’t have what you want, then you’d go somewhere else.” We may not even realize it, but we’ve trained ourselves to see full crates of beets and shelves of salad dressing as a sign that the store is good, and therefore the food in it is good. Abundance indicates quality.</p>
  <figure>
  <span>
    
    <span data-original="https://cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg">
      
        <picture data-cid="site/picture_element-1715404368_3743_244676" data-cdata="{&quot;asset_id&quot;:22693785,&quot;ratio&quot;:&quot;*&quot;}">
  


  <source srcset="https://cdn.vox-cdn.com/thumbor/NQTRq5vGcKfsgxwiZad-tdh_ZSw=/0x0:4717x3228/320x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 320w, https://cdn.vox-cdn.com/thumbor/k116BHG0pv7iEeajL4rRBCiy4fc=/0x0:4717x3228/520x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 520w, https://cdn.vox-cdn.com/thumbor/lSCLbof1Hu-dpN9nluX0qrs9wSY=/0x0:4717x3228/720x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 720w, https://cdn.vox-cdn.com/thumbor/FjyPJl_pzVKjd6EvBnVh8eBSIyI=/0x0:4717x3228/920x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 920w, https://cdn.vox-cdn.com/thumbor/CZGfdM1oRBRNp-LLDMPp73rYklg=/0x0:4717x3228/1120x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1120w, https://cdn.vox-cdn.com/thumbor/3WuV97hgpEsoho5-2sygv1WPWcM=/0x0:4717x3228/1320x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1320w, https://cdn.vox-cdn.com/thumbor/943HNf8H5fHKQDaWsXmwlR934bo=/0x0:4717x3228/1520x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1520w, https://cdn.vox-cdn.com/thumbor/floqOUvpvlGK7ifFlFqvKG3EMBk=/0x0:4717x3228/1720x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1720w, https://cdn.vox-cdn.com/thumbor/ttHge0yF1-G8Th5fwNPgRBIubGo=/0x0:4717x3228/1920x0/filters:focal(0x0:4717x3228):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" type="image/webp">


<img srcset="https://cdn.vox-cdn.com/thumbor/NS5CGKMw-Ar3o_ewOyfAShmYZa4=/0x0:4717x3228/320x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 320w, https://cdn.vox-cdn.com/thumbor/h6qmfXbEKXEQgNYU9H0PavxoO3k=/0x0:4717x3228/520x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 520w, https://cdn.vox-cdn.com/thumbor/q0LF9vopnH60uKvl_JGNQcUU6Eg=/0x0:4717x3228/720x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 720w, https://cdn.vox-cdn.com/thumbor/41fcy_KdGbNOfEKoEwdyoFbX94E=/0x0:4717x3228/920x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 920w, https://cdn.vox-cdn.com/thumbor/nDpCHsUiLwNNnS9m580LTMAQqPo=/0x0:4717x3228/1120x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1120w, https://cdn.vox-cdn.com/thumbor/9zujYkrqAthwzwFA_vX-K0v4Ds0=/0x0:4717x3228/1320x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1320w, https://cdn.vox-cdn.com/thumbor/RWLrQ9_3BO4g7EACHuvm1dUTBig=/0x0:4717x3228/1520x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1520w, https://cdn.vox-cdn.com/thumbor/iFBobdLDuWMLCQK7VpyCMo30ofk=/0x0:4717x3228/1720x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1720w, https://cdn.vox-cdn.com/thumbor/hR8WBHUIDIGupiQ21CrrO2u0o-s=/0x0:4717x3228/1920x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" alt="A grocery store aisle with fully stocked shelves of cereal and other packaged goods." loading="lazy" data-upload-width="4717" width="4717" height="3228" src="https://cdn.vox-cdn.com/thumbor/2LJSmvL2c2kPXIlUhbtUP8utFLM=/0x0:4717x3228/1200x0/filters:focal(0x0:4717x3228):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693785/1311680827.jpg">

</picture>

      
    </span>
    
  </span>
  
    <span>
      
        <figcaption>Most American grocery stores aim to have full shelves, as consumers expect, but that can contribute to food waste, too.</figcaption>
      
      
        <cite>Ben Hasty/MediaNews Group/Reading Eagle/Getty Images</cite>
      
    </span>
  
</figure>


<p id="PoFgLw">But that mindset naturally, even inevitably, leads to waste. In many places, if you can’t sell all your milk by the sell-by date, you have to dump it. Consumers don’t want to buy a box of Cheez-Its that only has a week left on it. Beef that “expires” in two days is not going to fly off the shelves. And if you can’t sell all your carrots, some of those carrots are going to start getting a little bendy. And many grocery stores will only sell produce that’s up to a certain aesthetic standard — no weird-looking apples or sweet potatoes from outer space, everything the same shape and size. Furthermore, if a manufacturer changes the label on their cookie packages, all the old packages will probably just be discarded to maintain uniformity. </p>
<p id="Wy0Fc7">“Most of the decisions that are made about most of the foods that we eat are made for reasons that have nothing to do with the food’s deliciousness or its healthiness or anything intrinsic to the food,” Adler said. “The leaves on vegetables wilt before the stalk on the vegetable, so it’s much easier for grocery stores to cut off the leaves at some point in processing. Otherwise you have to be sprinkling and trimming them all the time.” So the perfectly edible leaves of some vegetables may get lost in the process as well, while they could have been used to feed people.</p>
<p id="CpuCq7">Some businesses have cropped up to try to fix this larger-scale problem, like Misfits Market and Imperfect Foods. They form relationships with producers to rescue aesthetically “ugly” food — or at least, food we’ve been trained to think is ugly or too small or too large — and sell it to customers. They also buy food that’s approaching its label date and resell it to customers, hoping to cut down on food waste and change the way people eat. “It’s all about breaking down misconceptions,” Imperfect Foods’ associate creative director, Reilly Brock, told me by phone. “Food is not Cinderella. It’s not going to turn back into a pumpkin by midnight if it reaches the date on the label.” </p>
<p id="MkROlY">But across the country, the standard practice for your average American consumer still stands. Make a big trip to the grocery store to buy your food from the glossy displays. When food expires, throw it out. Meanwhile, farmers are plowing ugly produce back into the ground or letting it rot in the field, and stores are chucking food that’s near or past its date into the garbage because there’s nowhere else they can send it. </p>
<p id="POonzx">Can we change this?</p>
<h3 id="koJpns">Why doesn’t the government just fix the problem?</h3>
<p id="3klKu6">The follow-up data to the 2013 Harvard <a href="https://www.chlpi.org/wp-content/uploads/2013/12/date-labels-issue-brief_June-2019.pdf">study</a> found that standardizing the date labeling system across the country — rather than leaving it to more local governments to address in a scattershot fashion — could be incredibly beneficial to the economy and to consumers. Enacting standardized legislation, it estimates, could prove to be an economic value of about $1.8 billion to the US. What’s more, an estimated 398,000 tons of food waste would be diverted to actually feed people, instead of sitting in landfills.</p>
<p id="Z2OTFl">But fixing it has proven harder. Since the 1970s, Congress has periodically introduced legislation to modernize and standardize the system, in various forms. But, as Broad Leib told me, it can be an uphill battle. “The last administration and Congress were fairly deregulatory,” she pointed out. In the years since the 2013 study, many states have passed laws to try to standardize their own dates, even if they don’t align with other states. While Broad Leib and her colleagues argue that businesses (particularly national ones) would benefit from trying to meet one federal standard rather than different standards in different states, the philosophical differences can still be tough to surmount. “When you’re in a government that’s deregulatory, even for a good regulation, they say, ‘Let industry handle it. They have a voluntary standard, and we don’t need to step in.’”</p>
<p id="YmdMHH">Furthermore, Congress just moves slowly. “They don’t have a lot of stand-alone small bills,” she said. “So the best hope that this has of getting enacted is hitching itself to a moving train. A lot of our work has been in saying, ‘Here are other bills that are moving along’” — like the US Farm Bill, or the Child Nutrition Act — “and here’s why date labeling fits in with them.”</p>
<p id="5xMrDC">Quite a bit has happened in the years since Broad Leib and her colleagues first published their study. Seeing the problem, two major associations (the Consumer Brands Association and the Food Marketing Institute) put together a working group to design a standard date label that would work for both businesses and consumers. “They came up with a ‘best if used by’ label for a quality date and ‘use by’ for a safety date,” Broad Leib told me. “And they got a bunch of their members to sign on to voluntarily shift to using those dates.” In other words, if a food won’t decrease in safety but might decrease in quality, the manufacturer would use the “best if used by” label; if it might become unsafe to eat, they’d use the “use by” label. That system corresponds roughly to a standard used in many other countries.</p>
<p id="JPYjWt">This could make the work easier for the federal government to act, she says. “If Congress wanted to act, or the FDA or USDA wanted to act, it would be very easy to say, ‘Here’s what the standard label should be. We have some data on what works for consumers. And we know that these work for industry.” But otherwise, she calls the new label standard more of a “halfway solution,” since the label still will only appear on some products.</p>
<h3 id="S1qjny">It’s more than laws. The culture needs to change.</h3>
<p id="mm7W5y">And until there’s a better solution, the best thing we can do is try to educate ourselves and change the way we shop for food.</p>
<p id="U3QBlg">Broad Leib says there would be three big components to improving the system as it stands. First, the adoption of standard labels that indicate either a freshness date or a risk date would help. </p>
<p id="ti0ll1">But the second part is just as important: We need a public health program to educate people about what’s safe to eat. The UK has done a series of campaigns toward that end, with the slogan “<a href="https://toogoodtogo.co.uk/en-gb/campaign/commitment">Look, Smell, Taste, Don’t Waste</a>,” in which it partnered with industry to help people understand when to keep their food and when to toss it. </p>
  <figure>
  <span>
    
    <span data-original="https://cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg">
      
        <picture data-cid="site/picture_element-1715404369_4566_244677" data-cdata="{&quot;asset_id&quot;:22693780,&quot;ratio&quot;:&quot;*&quot;}">
  


  <source srcset="https://cdn.vox-cdn.com/thumbor/PCsaZVx18mFakRw1BPLNqR4HIQ4=/0x0:4800x3117/320x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 320w, https://cdn.vox-cdn.com/thumbor/teeeY77Tc0Ex_innxoMf7EgjqWI=/0x0:4800x3117/520x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 520w, https://cdn.vox-cdn.com/thumbor/xuhulYjLgXitJa359-AsjSyNkkw=/0x0:4800x3117/720x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 720w, https://cdn.vox-cdn.com/thumbor/oFEcSxM42hGDN17JUtl7xbi3ODM=/0x0:4800x3117/920x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 920w, https://cdn.vox-cdn.com/thumbor/0xd-PX6jNe4tdBMfN52Hcq7PAjo=/0x0:4800x3117/1120x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1120w, https://cdn.vox-cdn.com/thumbor/E-zhGUTOdc3nmR6dWuDLVIAYtj4=/0x0:4800x3117/1320x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1320w, https://cdn.vox-cdn.com/thumbor/nQRc_wqFSgF-lSzXyBsF88YpYCM=/0x0:4800x3117/1520x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1520w, https://cdn.vox-cdn.com/thumbor/NCNl-2IhwS7sveBkrT_AQgc5CfM=/0x0:4800x3117/1720x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1720w, https://cdn.vox-cdn.com/thumbor/WJ-E_teLmzhsW7Wyg4sgYrYGOng=/0x0:4800x3117/1920x0/filters:focal(0x0:4800x3117):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" type="image/webp">


<img srcset="https://cdn.vox-cdn.com/thumbor/CGTkvnoKJ-0y01x6pDbmw5w6O5U=/0x0:4800x3117/320x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 320w, https://cdn.vox-cdn.com/thumbor/j8uHpSk_Jlg8aI0JlJVgyrBNj8k=/0x0:4800x3117/520x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 520w, https://cdn.vox-cdn.com/thumbor/u4BTCelzbnCVjW63tydkW5S7UKw=/0x0:4800x3117/720x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 720w, https://cdn.vox-cdn.com/thumbor/ruaMLlB5ywbKkaB2_9-MuzU9-hw=/0x0:4800x3117/920x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 920w, https://cdn.vox-cdn.com/thumbor/ce5sxPh5tcpkBpsmnxzrLHv-1Y4=/0x0:4800x3117/1120x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1120w, https://cdn.vox-cdn.com/thumbor/cwnRpj8YwXF_e8xi_Q7SvAW5SYM=/0x0:4800x3117/1320x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1320w, https://cdn.vox-cdn.com/thumbor/H2vT9FxvjMT0Zu0BKAj0-2FMKsc=/0x0:4800x3117/1520x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1520w, https://cdn.vox-cdn.com/thumbor/vMLzoKdrEil9d2hK4ISY2_s8YCY=/0x0:4800x3117/1720x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1720w, https://cdn.vox-cdn.com/thumbor/qs_nULXD9xRjue1LV061P0JDRYw=/0x0:4800x3117/1920x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" alt="Customers choose tangerines, limes, corn, and other produce." loading="lazy" data-upload-width="4800" width="4800" height="3117" src="https://cdn.vox-cdn.com/thumbor/057iIs7OWetlb_EOjmB1iOPsEss=/0x0:4800x3117/1200x0/filters:focal(0x0:4800x3117):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/22693780/1004140266.jpg">

</picture>

      
    </span>
    
  </span>
  
    <span>
      
        <figcaption>A free fruit and vegetable distribution effort in the Watts neighborhood of south Los Angeles, organized by the Watts Labor Action Committee and Food Forward, aims to collect gleaned and discarded food and distribute it to those who need it.</figcaption>
      
      
        <cite>Frederic J. Brown/AFP</cite>
      
    </span>
  
</figure>


<p id="aPwIeF">The third component would be changing the way we allow food to be donated and distributed through food banks and other means. That requires a shift in how we think. If everyone is eating food past its “freshness” date — understanding that the food is perfectly safe but may not be at its absolute peak condition — then there will be less hesitancy about giving that food away, and less fear about the possibility of facing legal repercussions. That could have a huge impact on hunger and food insecurity in the US. “If everyone acknowledges that those foods are fine to eat, and everyone’s eating them, it’s not like, ‘Past-dated food is only for people who can’t afford food,’” Broad Leib said. “No, we should all be eating that.”</p>
<p id="9Tx0Sp">But that means we each need to rethink how we interact with food. We need to start trusting our senses to tell us if food is edible. “Use your sense organs,” Adler said. “We have them so that we can figure out whether things in the world are going to kill us, so we can make sure we’re not going to poison ourselves and die — and it’s even worth doing when you suspect something <em>is</em> bad, because feeling your body’s response is so reassuring.” </p>
<p id="ZTq1cn">We need to ask for more clear labels, advocate for better legislation, and talk to one another about what labels really mean. And we need to move closer to food again, thinking of it less as a packaged consumer product and more as something natural that nourishes us as humans. </p>
<p id="hr9Zx1">And in my case, that means I’m going to start sniffing what’s in my refrigerator before I chuck it — and maybe even turning it into lunch.</p>
  <div data-cid="site/article_footer-1715404369_3356_244678" data-cdata="{&quot;base_type&quot;:&quot;Entry&quot;,&quot;id&quot;:22323334,&quot;timestamp&quot;:1625742000,&quot;published_timestamp&quot;:1625742000,&quot;show_published_and_updated_timestamps&quot;:false,&quot;title&quot;:&quot;The lie of “expired” food and the disastrous truth of America’s food waste problem&quot;,&quot;type&quot;:&quot;Article&quot;,&quot;url&quot;:&quot;https://www.vox.com/22559293/food-waste-expiration-label-best-before&quot;,&quot;entry_layout&quot;:{&quot;key&quot;:&quot;unison_standard&quot;,&quot;layout&quot;:&quot;unison_main&quot;,&quot;template&quot;:&quot;standard&quot;},&quot;additional_byline&quot;:null,&quot;authors&quot;:[{&quot;id&quot;:3905035,&quot;name&quot;:&quot;Alissa Wilkinson&quot;,&quot;url&quot;:&quot;https://www.vox.com/authors/alissa-wilkinson&quot;,&quot;twitter_handle&quot;:&quot;alissamarie&quot;,&quot;profile_image_url&quot;:&quot;https://cdn.vox-cdn.com/thumbor/Z9TdSt8kXDSw7uQHf9lFsynl4eM=/512x512/cdn.vox-cdn.com/author_profile_images/193915/headshot_2020.0.jpg&quot;,&quot;title&quot;:&quot;&quot;,&quot;email&quot;:&quot;alissa@vox.com&quot;,&quot;short_author_bio&quot;:&quot;covers film and culture for Vox. Alissa is a member of the New York Film Critics Circle and the National Society of Film Critics.&quot;}],&quot;byline_enabled&quot;:true,&quot;byline_credit_text&quot;:&quot;By&quot;,&quot;byline_serial_comma_enabled&quot;:true,&quot;comment_count&quot;:0,&quot;comments_enabled&quot;:false,&quot;legacy_comments_enabled&quot;:false,&quot;coral_comments_enabled&quot;:false,&quot;coral_comment_counts_enabled&quot;:false,&quot;commerce_disclosure&quot;:null,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;cross_community&quot;:false,&quot;internal_groups&quot;:[{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:74581,&quot;timestamp&quot;:1702445095,&quot;title&quot;:&quot;The Goods (old, do not use)&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;&quot;,&quot;slug&quot;:&quot;the-goods&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:2371,&quot;always_show&quot;:false,&quot;description&quot;:&quot;<span></span>&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;}],&quot;image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/69555165/GettyImages_1312472686t.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;A scene like this greets most supermarket shoppers in the US. But much of what we think we know about food shopping needs an overhaul.&quot;,&quot;credit&quot;:&quot;Steve Pfost/Newsday/Getty Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:2339,&quot;top_left_y&quot;:1411,&quot;bottom_right_x&quot;:3229,&quot;bottom_right_y&quot;:2301},&quot;bounds&quot;:[0,0,5568,3712],&quot;uploaded_size&quot;:{&quot;width&quot;:5568,&quot;height&quot;:3712},&quot;focal_point&quot;:null,&quot;image_id&quot;:69555165,&quot;alt_text&quot;:&quot;Fruits and vegetables are stacked neatly inside the produce area as employees prepare for the grand opening of a Whole Foods Market in Commack, New York, on April 2, 2019.&amp;nbsp;&quot;},&quot;hub_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/69555165/GettyImages_1312472686t.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;A scene like this greets most supermarket shoppers in the US. But much of what we think we know about food shopping needs an overhaul.&quot;,&quot;credit&quot;:&quot;Steve Pfost/Newsday/Getty Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:2339,&quot;top_left_y&quot;:1411,&quot;bottom_right_x&quot;:3229,&quot;bottom_right_y&quot;:2301},&quot;bounds&quot;:[0,0,5568,3712],&quot;uploaded_size&quot;:{&quot;width&quot;:5568,&quot;height&quot;:3712},&quot;focal_point&quot;:null,&quot;image_id&quot;:69555165,&quot;alt_text&quot;:&quot;Fruits and vegetables are stacked neatly inside the produce area as employees prepare for the grand opening of a Whole Foods Market in Commack, New York, on April 2, 2019.&amp;nbsp;&quot;},&quot;lede_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;A scene like this greets most supermarket shoppers in the US. But much of what we think we know about food shopping needs an overhaul.&quot;,&quot;credit&quot;:&quot;Steve Pfost/Newsday/Getty Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:2339,&quot;top_left_y&quot;:1411,&quot;bottom_right_x&quot;:3229,&quot;bottom_right_y&quot;:2301},&quot;bounds&quot;:[0,0,5568,3712],&quot;uploaded_size&quot;:{&quot;width&quot;:5568,&quot;height&quot;:3712},&quot;focal_point&quot;:null,&quot;image_id&quot;:69555166,&quot;alt_text&quot;:&quot;Fruits and vegetables are stacked neatly inside the produce area as employees prepare for the grand opening of a Whole Foods Market in Commack, New York, on April 2, 2019.&amp;nbsp;&quot;},&quot;group_cover_image&quot;:null,&quot;picture_standard_lead_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;A scene like this greets most supermarket shoppers in the US. But much of what we think we know about food shopping needs an overhaul.&quot;,&quot;credit&quot;:&quot;Steve Pfost/Newsday/Getty Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:2339,&quot;top_left_y&quot;:1411,&quot;bottom_right_x&quot;:3229,&quot;bottom_right_y&quot;:2301},&quot;bounds&quot;:[0,0,5568,3712],&quot;uploaded_size&quot;:{&quot;width&quot;:5568,&quot;height&quot;:3712},&quot;focal_point&quot;:null,&quot;image_id&quot;:69555166,&quot;alt_text&quot;:&quot;Fruits and vegetables are stacked neatly inside the produce area as employees prepare for the grand opening of a Whole Foods Market in Commack, New York, on April 2, 2019.&amp;nbsp;&quot;,&quot;picture_element&quot;:{&quot;loading&quot;:&quot;eager&quot;,&quot;html&quot;:{},&quot;alt&quot;:&quot;Fruits and vegetables are stacked neatly inside the produce area as employees prepare for the grand opening of a Whole Foods Market in Commack, New York, on April 2, 2019.&amp;nbsp;&quot;,&quot;default&quot;:{&quot;srcset&quot;:&quot;https://cdn.vox-cdn.com/thumbor/lwG3mVwJQGmhaB8u9S4QeGsH9UA=/0x0:5568x3712/320x240/filters:focal(2339x1411:3229x2301)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/hhJxm4j1PDou-upj7XhMDWtFiXU=/0x0:5568x3712/620x465/filters:focal(2339x1411:3229x2301)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 620w, https://cdn.vox-cdn.com/thumbor/T1Sb8fI5YlqEpGBiDjZpuj1SjS0=/0x0:5568x3712/920x690/filters:focal(2339x1411:3229x2301)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/g_B9sQeVYPLSeD7vms7wHm8AZyw=/0x0:5568x3712/1220x915/filters:focal(2339x1411:3229x2301)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 1220w, https://cdn.vox-cdn.com/thumbor/_kxLykeCZ6TTM2xMLdm5aa1UCXo=/0x0:5568x3712/1520x1140/filters:focal(2339x1411:3229x2301)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 1520w&quot;,&quot;webp_srcset&quot;:&quot;https://cdn.vox-cdn.com/thumbor/h89y6583g7Lvqj_DbdJZM5uWuPM=/0x0:5568x3712/320x240/filters:focal(2339x1411:3229x2301):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/727fKBowxG-dCxbs7omJ6VDLjLo=/0x0:5568x3712/620x465/filters:focal(2339x1411:3229x2301):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 620w, https://cdn.vox-cdn.com/thumbor/lmldRtNEtIrBRkHofq6bkobFy_4=/0x0:5568x3712/920x690/filters:focal(2339x1411:3229x2301):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/MC6eu1fOu_lS9A2aJit-6W806m0=/0x0:5568x3712/1220x915/filters:focal(2339x1411:3229x2301):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 1220w, https://cdn.vox-cdn.com/thumbor/yRGDGjmhIskGtGSybVniiMGqIFY=/0x0:5568x3712/1520x1140/filters:focal(2339x1411:3229x2301):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg 1520w&quot;,&quot;media&quot;:null,&quot;sizes&quot;:&quot;(min-width: 809px) 485px, (min-width: 600px) 60vw, 100vw&quot;,&quot;fallback&quot;:&quot;https://cdn.vox-cdn.com/thumbor/yfUTTwD497uKxjzEaLsr_yE-VQY=/0x0:5568x3712/1200x900/filters:focal(2339x1411:3229x2301)/cdn.vox-cdn.com/uploads/chorus_image/image/69555166/GettyImages_1312472686t.0.jpg&quot;},&quot;art_directed&quot;:[]}},&quot;image_is_placeholder&quot;:false,&quot;image_is_hidden&quot;:false,&quot;network&quot;:&quot;vox&quot;,&quot;omits_labels&quot;:false,&quot;optimizable&quot;:false,&quot;promo_headline&quot;:&quot;The lie of “expired” food and the disastrous truth of America’s food waste problem&quot;,&quot;recommended_count&quot;:0,&quot;recs_enabled&quot;:false,&quot;slug&quot;:&quot;22559293/food-waste-expiration-label-best-before&quot;,&quot;dek&quot;:&quot;Stop throwing your food away.&quot;,&quot;homepage_title&quot;:&quot;The lie of “expired” food and the disastrous truth of America’s food waste problem&quot;,&quot;homepage_description&quot;:&quot;Stop throwing your food away.&quot;,&quot;show_homepage_description&quot;:false,&quot;title_display&quot;:&quot;The lie of “expired” food and the disastrous truth of America’s food waste problem&quot;,&quot;pull_quote&quot;:null,&quot;voxcreative&quot;:false,&quot;show_entry_time&quot;:true,&quot;show_dates&quot;:true,&quot;paywalled_content&quot;:false,&quot;paywalled_content_box_logo_url&quot;:&quot;&quot;,&quot;paywalled_content_page_logo_url&quot;:&quot;&quot;,&quot;paywalled_content_main_url&quot;:&quot;&quot;,&quot;article_footer_body&quot;:&quot;We believe that everyone deserves to understand the world that they live in. That kind of knowledge helps create better citizens, neighbors, friends, parents, and stewards of this planet. Producing deeply researched, explanatory journalism takes resources. <a href=\&quot;http://vox.com/pages/support-now?itm_campaign=evergreen&amp;itm_medium=site&amp;itm_source=footer\&quot;>You can support this mission by making a financial gift to Vox today. Will you join us?</a> \r\n&quot;,&quot;article_footer_header&quot;:&quot;<a href=\&quot;http://vox.com/pages/support-now?itm_campaign=evergreen&amp;itm_medium=site&amp;itm_source=footer\&quot;>Will you support Vox today?</a>&quot;,&quot;use_article_footer&quot;:true,&quot;article_footer_cta_annual_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 1,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 99546\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 100,\r\n      \&quot;plan_id\&quot;: 99547\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 150,\r\n      \&quot;plan_id\&quot;: 99548\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 200,\r\n      \&quot;plan_id\&quot;: 99549\r\n    }\r\n  ]\r\n}&quot;,&quot;article_footer_cta_button_annual_copy&quot;:&quot;year&quot;,&quot;article_footer_cta_button_copy&quot;:&quot;Yes, I'll give&quot;,&quot;article_footer_cta_button_monthly_copy&quot;:&quot;month&quot;,&quot;article_footer_cta_default_frequency&quot;:&quot;monthly&quot;,&quot;article_footer_cta_monthly_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 0,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 5,\r\n      \&quot;plan_id\&quot;: 99543\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 10,\r\n      \&quot;plan_id\&quot;: 99544\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 25,\r\n      \&quot;plan_id\&quot;: 99545\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 46947\r\n    }\r\n  ]\r\n}&quot;,&quot;article_footer_cta_once_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 0,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 20,\r\n      \&quot;plan_id\&quot;: 69278\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 48880\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 100,\r\n      \&quot;plan_id\&quot;: 46607\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 250,\r\n      \&quot;plan_id\&quot;: 46946\r\n    }\r\n  ]\r\n}&quot;,&quot;use_article_footer_cta_read_counter&quot;:true,&quot;use_article_footer_cta&quot;:true,&quot;groups&quot;:[{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:27574,&quot;timestamp&quot;:1711278005,&quot;title&quot;:&quot;Poverty&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/poverty&quot;,&quot;slug&quot;:&quot;poverty&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:229,&quot;always_show&quot;:false,&quot;description&quot;:&quot;Our coverage of poverty in America, which policies help reduce it, and why it's so hard to achieve economic mobility.&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:94657,&quot;timestamp&quot;:1714822205,&quot;title&quot;:&quot;Food&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/food&quot;,&quot;slug&quot;:&quot;food&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:244,&quot;always_show&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:112368,&quot;timestamp&quot;:1715252412,&quot;title&quot;:&quot;Money&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/money&quot;,&quot;slug&quot;:&quot;money&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:2749,&quot;always_show&quot;:false,&quot;description&quot;:&quot;How we make and spend money, and how economics influences the world around us.&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false}],&quot;featured_placeable&quot;:false,&quot;video_placeable&quot;:false,&quot;disclaimer&quot;:null,&quot;volume_placement&quot;:&quot;lede&quot;,&quot;video_autoplay&quot;:false,&quot;youtube_url&quot;:&quot;http://bit.ly/voxyoutube&quot;,&quot;facebook_video_url&quot;:&quot;&quot;,&quot;play_in_modal&quot;:true,&quot;user_preferences_for_privacy_enabled&quot;:false,&quot;show_branded_logos&quot;:true}">
       <!-- end of .contribute--frequency-container -->

      <div>
        <p><label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$5</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$10</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$25</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$50</span><span>/month</span>
                </p>
              </label>
            

            <label tabindex="0">
              
              <span>Other</span>
            </label>
          </p>
        </div>

        

        <a href="https://vox.memberful.com/checkout?plan=" id="contribute--submit">
          <p>
            Yes, I'll give $5<span>/month</span>
          </p>
        </a>

        <p>
          Yes, I'll give $5<span>/month</span>
        </p>

        <div>
            <p>
              <span>
                We accept credit card, Apple Pay, and
              </span>
              <span>
                Google Pay. You can also contribute via
              </span>
            </p>
            <p><a href="https://www.paypal.com/donate/?hosted_button_id=VSP4PYJX98SHL" target="_blank">
              <img src="https://cdn.vox-cdn.com/uploads/chorus_asset/file/22734206/paypal_logo.png" alt="" width="136" height="42">
            </a>
          </p></div>

      </div> <!-- end of .right-column -->

 <!-- end of .c-article-footer-cta -->

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Popover API (371 pts)]]></title>
            <link>https://developer.mozilla.org/en-US/docs/Web/API/Popover_API</link>
            <guid>40317740</guid>
            <pubDate>Fri, 10 May 2024 11:41:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/Popover_API">https://developer.mozilla.org/en-US/docs/Web/API/Popover_API</a>, See on <a href="https://news.ycombinator.com/item?id=40317740">Hacker News</a></p>
<div id="readability-page-1" class="page"><article lang="en-US"><header><details><summary><span role="img" aria-label="Baseline Check"></span><h2>Baseline<!-- --> <span>2024</span></h2><p>Newly available</p><span></span></summary></details></header><p>The <strong>Popover API</strong> provides developers with a standard, consistent, flexible mechanism for displaying popover content on top of other page content. Popover content can be controlled either declaratively using HTML attributes, or via JavaScript.</p><section aria-labelledby="concepts_and_usage"><h2 id="concepts_and_usage"><a href="#concepts_and_usage">Concepts and usage</a></h2><div><p>A very common pattern on the web is to show content over the top of other content, drawing the user's attention to specific important information or actions that need to be taken. This content can take several different names — overlays, popups, popovers, dialogs, etc. We will refer to them as popovers through the documentation. Generally speaking, these can be:</p>
<ul>
  <li><strong>modal</strong>, meaning that while a popover is being shown, the rest of the page is rendered non-interactive until the popover is actioned in some way (for example an important choice is made).</li>
  <li><strong>non-modal</strong>, meaning that the rest of the page can be interacted with while the popover is being shown.</li>
</ul>
<p>Popovers created using the Popover API are always non-modal. If you want to create a modal popover, a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog"><code>&lt;dialog&gt;</code></a> element is the right way to go. There is significant overlap between the two — you might for example want to create a popover that persists, but control it using declarative HTML. You can turn a <code>&lt;dialog&gt;</code> element into a popover (<code>&lt;dialog popover&gt;</code> is perfectly valid) if you want to combine popover control with dialog semantics.</p>
<p>Typical use cases for the popover API include user-interactive elements like action menus, custom "toast" notifications, form element suggestions, content pickers, or teaching UI.</p>
<p>You can create popovers in two different ways:</p>
<ul>
  <li>Declaratively, via a set of new HTML attributes. A simple popover with a toggle button can be created using the following code:
    <div><pre data-signature="KdnYlrjDZk+9KBeXtIzbj2uatLAvVEOa7d4apg36UVg="><code><span><span><span>&lt;</span>button</span> <span>popovertarget</span><span><span>=</span><span>"</span>mypopover<span>"</span></span><span>&gt;</span></span>Toggle the popover<span><span><span>&lt;/</span>button</span><span>&gt;</span></span>
<span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>mypopover<span>"</span></span> <span>popover</span><span>&gt;</span></span>Popover content<span><span><span>&lt;/</span>div</span><span>&gt;</span></span>
</code></pre></div>
  </li>
  <li>Via a JavaScript API. For example, <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/togglePopover"><code>HTMLElement.togglePopover()</code></a> can be used to toggle a popover between shown and hidden.</li>
</ul>
<p>There are also new events to react to a popover being toggled, and CSS features to aid in styling popovers. All the new features are listed below.</p>
<p>See <a href="https://developer.mozilla.org/en-US/docs/Web/API/Popover_API/Using">Using the popover API</a> for a detailed guide to using this API.</p></div></section><section aria-labelledby="html_attributes"><h2 id="html_attributes"><a href="#html_attributes">HTML attributes</a></h2><div><dl>
  <dt id="popover"><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/popover"><code>popover</code></a></dt>
  <dd>
    <p>A global attribute that turns an element into a popover element; takes a popover state (<code>"auto"</code> or <code>"manual"</code>) as its value.</p>
  </dd>
  <dt id="popovertarget"><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#popovertarget"><code>popovertarget</code></a></dt>
  <dd>
    <p>Turns a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"><code>&lt;button&gt;</code></a> or <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"><code>&lt;input&gt;</code></a> element into a popover control button; takes the ID of the popover element to control as its value.</p>
  </dd>
  <dt id="popovertargetaction"><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#popovertargetaction"><code>popovertargetaction</code></a></dt>
  <dd>
    <p>Specifies the action to be performed (<code>"hide"</code>, <code>"show"</code>, or <code>"toggle"</code>) on the popover element being controlled by a control <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"><code>&lt;button&gt;</code></a> or <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"><code>&lt;input&gt;</code></a>.</p>
  </dd>
</dl></div></section><section aria-labelledby="css_features"><h2 id="css_features"><a href="#css_features">CSS features</a></h2><div><dl>
  <dt id="backdrop"><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::backdrop"><code>::backdrop</code></a></dt>
  <dd>
    <p>The <code>::backdrop</code> pseudo-element is a full-screen element placed directly behind popover elements, allowing effects to be added to the page content behind the popover(s) if desired (for example blurring it out).</p>
  </dd>
  <dt id="popover-open"><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:popover-open"><code>:popover-open</code></a></dt>
  <dd>
    <p>The <code>:popover-open</code> pseudo-class matches a popover element only when it is in the showing state — it can be used to style popover elements when they are showing.</p>
  </dd>
</dl></div></section><section aria-labelledby="interfaces"><h2 id="interfaces"><a href="#interfaces">Interfaces</a></h2><div><dl>
  <dt id="toggleevent"><a href="https://developer.mozilla.org/en-US/docs/Web/API/ToggleEvent"><code>ToggleEvent</code></a></dt>
  <dd>
    <p>Represents an event notifying the user when a popover element's state toggles between showing and hidden. It is the event object for the <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforetoggle_event" title="beforetoggle"><code>beforetoggle</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/toggle_event" title="toggle"><code>toggle</code></a> events, which fire on popovers when their state changes.</p>
  </dd>
</dl></div></section><section aria-labelledby="extensions_to_other_interfaces"><h2 id="extensions_to_other_interfaces"><a href="#extensions_to_other_interfaces">Extensions to other interfaces</a></h2></section><section aria-labelledby="instance_properties"><h3 id="instance_properties"><a href="#instance_properties">Instance properties</a></h3><div><dl>
  <dt id="htmlelement.popover"><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/popover"><code>HTMLElement.popover</code></a></dt>
  <dd>
    <p>Gets and sets an element's popover state via JavaScript (<code>"auto"</code> or <code>"manual"</code>), and can be used for feature detection. Reflects the value of the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/popover"><code>popover</code></a> global HTML attribute.</p>
  </dd>
  <dt id="htmlbuttonelement.popovertargetelement"><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement/popoverTargetElement"><code>HTMLButtonElement.popoverTargetElement</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/popoverTargetElement"><code>HTMLInputElement.popoverTargetElement</code></a></dt>
  <dd>
    <p>Gets and sets the popover element being controlled by the control button. The JavaScript equivalent of the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#popovertarget"><code>popovertarget</code></a> HTML attribute.</p>
  </dd>
  <dt id="htmlbuttonelement.popovertargetaction"><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement/popoverTargetAction"><code>HTMLButtonElement.popoverTargetAction</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/popoverTargetAction"><code>HTMLInputElement.popoverTargetAction</code></a></dt>
  <dd>
    <p>Gets and sets the action to be performed (<code>"hide"</code>, <code>"show"</code>, or <code>"toggle"</code>) on the popover element being controlled by the control button. Reflects the value of the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#popovertargetaction"><code>popovertargetaction</code></a> HTML attribute.</p>
  </dd>
</dl></div></section><section aria-labelledby="instance_methods"><h3 id="instance_methods"><a href="#instance_methods">Instance methods</a></h3><div><dl>
  <dt id="htmlelement.hidepopover"><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/hidePopover"><code>HTMLElement.hidePopover()</code></a></dt>
  <dd>
    <p>Hides a popover element by removing it from the top layer and styling it with <code>display: none</code>.</p>
  </dd>
  <dt id="htmlelement.showpopover"><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/showPopover"><code>HTMLElement.showPopover()</code></a></dt>
  <dd>
    <p>Shows a popover element by adding it to the top layer.</p>
  </dd>
  <dt id="htmlelement.togglepopover"><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/togglePopover"><code>HTMLElement.togglePopover()</code></a></dt>
  <dd>
    <p>Toggles a popover element between the showing and hidden states.</p>
  </dd>
</dl></div></section><section aria-labelledby="events"><h3 id="events"><a href="#events">Events</a></h3><div><dl>
  <dt id="htmlelement"><a href="#htmlelement"><code>HTMLElement</code></a> <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforetoggle_event" title="beforetoggle"><code>beforetoggle</code></a> event</dt>
  <dd>
    <p>Fired just before a popover element's state changes between showing and hidden, or vice versa.</p>
  </dd>
  <dt id="htmlelement_2"><a href="#htmlelement_2"><code>HTMLElement</code></a> <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/toggle_event" title="toggle"><code>toggle</code></a> event</dt>
  <dd>
    <p>Fired just after a popover element's state changes between showing and hidden, or vice versa. This event already existed to signal state changes on <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details"><code>&lt;details&gt;</code></a> elements, and it seemed logical to extend it for popover elements.</p>
  </dd>
</dl></div></section><section aria-labelledby="examples"><h2 id="examples"><a href="#examples">Examples</a></h2><div><p>See our <a href="https://mdn.github.io/dom-examples/popover-api/" target="_blank">Popover API examples landing page</a> to access the full collection of MDN popover examples.</p></div></section><h2 id="specifications"><a href="#specifications">Specifications</a></h2><table><thead><tr><th scope="col">Specification</th></tr></thead><tbody><tr><td><a href="https://html.spec.whatwg.org/multipage/popover.html#dom-popover">HTML Standard<!-- --> <br><small># <!-- -->dom-popover</small></a></td></tr></tbody></table><h2 id="browser_compatibility"><a href="#browser_compatibility">Browser compatibility</a></h2><p>BCD tables only load in the browser</p><section aria-labelledby="see_also"><h2 id="see_also"><a href="#see_also">See also</a></h2><div><ul>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/popover"><code>popover</code></a> HTML global attribute</li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#popovertarget"><code>popovertarget</code></a> HTML attribute</li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#popovertargetaction"><code>popovertargetaction</code></a> HTML attribute</li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::backdrop"><code>::backdrop</code></a> CSS pseudo-element</li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:popover-open"><code>:popover-open</code></a> CSS pseudo-class</li>
</ul></div></section></article></div>]]></description>
        </item>
    </channel>
</rss>