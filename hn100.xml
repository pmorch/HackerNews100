<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 01 Aug 2024 05:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[SnowflakeOS: Beginner friendly and GUI focused NixOS variant (125 pts)]]></title>
            <link>https://snowflakeos.org/</link>
            <guid>41124472</guid>
            <pubDate>Wed, 31 Jul 2024 23:06:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://snowflakeos.org/">https://snowflakeos.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41124472">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                <div>
                        <h2>Simple, Immutable, Reproducible</h2>
                        <p>SnowflakeOS is a <a href="https://nixos.org/">NixOS</a> based Linux distribution focused on
                            beginner friendliness and ease of use.</p>
                    </div>
                <div>
                    <figure>
                        <img alt="SnowflakeOS desktop" src="https://snowflakeos.org/assets/snowflakeos.png">
                    </figure>
                    
                    <p>Not yet ready for daily use!</p>
                </div>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Suspicious data pattern in recent Venezuelan election (694 pts)]]></title>
            <link>https://statmodeling.stat.columbia.edu/2024/07/31/suspicious-data-pattern-in-recent-venezuelan-election/</link>
            <guid>41123155</guid>
            <pubDate>Wed, 31 Jul 2024 20:34:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://statmodeling.stat.columbia.edu/2024/07/31/suspicious-data-pattern-in-recent-venezuelan-election/">https://statmodeling.stat.columbia.edu/2024/07/31/suspicious-data-pattern-in-recent-venezuelan-election/</a>, See on <a href="https://news.ycombinator.com/item?id=41123155">Hacker News</a></p>
Couldn't get https://statmodeling.stat.columbia.edu/2024/07/31/suspicious-data-pattern-in-recent-venezuelan-election/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[An affordable, portable and focused device for music, writing and coding (104 pts)]]></title>
            <link>https://tulip.computer/</link>
            <guid>41122986</guid>
            <pubDate>Wed, 31 Jul 2024 20:15:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tulip.computer/">https://tulip.computer/</a>, See on <a href="https://news.ycombinator.com/item?id=41122986">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <div data-aos="fade-right" id="top">
          <h2><span>The <br>Tulip<br>Creative<br> Computer</span></h2>
          <p><span>An affordable, portable and focused device for music, writing and coding.</span></p>
          <p><a href="#get">Get a Tulip for only US$59</a>
        </p></div>



<div id="more">
    <div>
        <p data-aos="fade-down"><h2>Tulip is an all in one portable computer running the Python programming language, with a touchscreen and music synthesizer.</h2></p>
    </div>
    <p><img src="https://tulip.computer/img/tulip_hero.jpg">
    </p>

    <div>

      <div data-aos="fade-up" data-aos-delay="200">
        <p><span>Simple, focused and fun</span></p><p>Tulip's processor is a low-power real time microcontroller. It boots right into a Python prompt. We provide a code editor and we ship music programs and other examples. It only does what you ask it to. It has no web browser or social media, other than our fun Tulip-only BBS <strong>Tulip WORLD</strong> for sharing files. Its constraints and single focus should help you make amazing creative work.</p>
      </div>

      <div data-aos="fade-up" data-aos-delay="200">
        <p><span>Make your art in code</span></p><p>Tulip ships with the <a href="https://github.com/shorepine/amy">AMY synthesizer</a>, a fully featured additive, subtractive and FM synth (think DX-7 and Juno-6) and you can control every parameter of every oscillator in code. Our graphics API is fully programmable as well, with hardware sprites and scrolling backgrounds. Write your own games or synth UIs in <a href="https://lvgl.io/">LVGL</a> on the Tulip touchscreen and control your creations over MIDI, I2C, or even Wi-Fi.</p>
      </div>

      <div data-aos="fade-up" data-aos-delay="200">
        <p><span>Completely open source and cheap as possible</span></p><p>You're paying the cost of the parts and manufacturing for your US$59 Tulip, with a tiny fee added on to support future development. Tulip is <a href="https://github.com/shorepine/tulipcc">completely open source</a>, from the hardware to the OS to the synthesizer DSP code. It's made possible by excited volunteers and <a href="#involved">we'd love your help!</a> Tulip is just as fun to work on as to make things on.</p>
      </div>
    </div>
  </div>



<div id="more">
    <div>
        <p data-aos="fade-down"><h2>Tulip is packed with features, connectivity and APIs for you to make or build anything you can imagine.</h2></p>
    </div>
    <p><img src="https://tulip.computer/img/tulipcc-voices.jpeg">
    </p>

    <div data-aos="fade-up" data-aos-delay="200">
        <p><span>Synthesizer</span></p><p>Tulip's underlying synthesizer, <a href="https://github.com/shorepine/amy">AMY</a>, supports up to 120 oscillators, stereo sound, filters, reverb, chorus, FM, PCM samples (baked in or loaded from a file), and comes with a Python library for managing voices and patches for polyphony and multitimbral operation. <a href="https://github.com/shorepine/tulipcc/blob/main/docs/music.md">You can write all your patches, music or interactions with other synths in pure Python.</a></p>
        <p><a href="https://github.com/shorepine/tulipcc/blob/main/docs/music.md">Make music in code on Tulip</a></p>


      </div>
  </div>

<div>
      <p>
    <h2>Write your music in Python. <a href="https://github.com/shorepine/tulipcc/blob/main/docs/music.md">See more</a></h2>
  </p>
    <div>
      <pre><code> 
# Play a random note of an F minor 7 chord. 
# Beat syncs with other running music programs
import tulip, midi, music, random

chord = music.Chord("F:min7").midinotes()
synth = midi.Synth(1) # single note polyphony
synth.program_change(143) # DX7 BASS 2 patch

def note(t):
    synth.note_on(random.choice(chord), 0.6, time=t)

# Call note() every 24 ticks (twice a quarter note)
slot = tulip.seq_add_callback(note, 24)
      </code></pre>
    </div>
  </div>

<div data-aos="fade" data-aos-delay="200">
  <p>
    <h2>How does it sound? Check it out:</h2>
  </p>
  <p>


        <iframe width="700" height="540" src="https://www.youtube.com/embed/1lYFjQp7Xrw?si=FaSXGabzvbs0BGeF" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>

  </p>
</div>



<div id="more">
    <div>
        <p data-aos="fade-down"><h2>Make multichannel sound installations with an optional Alles speaker, or 30</h2></p>
    </div>
    <p><img src="https://tulip.computer/img/nicoboard-alles.jpg">
    </p>

    <div data-aos="fade-up" data-aos-delay="200">
        <p><span>Alles</span></p><p>With an optional <a href="https://github.com/shorepine/alles">Alles speaker</a> (or up to a few dozen!) you can perform multichannel audio in Tulip. The underlying synthesizer can address multiple Alles speakers over a Wi-Fi mesh. Each speaker has the same synthesizer capabilities as in Tulip. You can address them individually or in groups, and send all the same commands you can send on the built-in synth in Tulip. Make stunning whole-room installations of dozens of channels all powered from one Tulip.</p>
        <p><a href="https://notes.variogram.com/2022/09/23/alles-amy/">Read more about Alles</a></p>


      </div>
  </div>



<div id="get">
        <p>
          <h2>Buy a Tulip, DAC or Alles. Ships anywhere in the world.</h2>
        </p>
    <div>

        <div>
          <p><a href="https://www.makerfabs.com/the-tulip-creative-computer.html"><img src="https://tulip.computer/img/tulip-shop-3.jpg" alt="Tulip Creative Computer"></a></p>
        </div>


         <div>
          <p><a href="https://www.makerfabs.com/mabee-dac-gp8413.html"><img src="https://tulip.computer/img/mabee-dac.jpg" alt="Mabee DAC"></a></p><div>
            <h5>Two-channel DAC</h5>
            <p>Plugs right into a Tulip to give you two channels of CV control over modular synths with standard 3.5mm patch cables. With some light modification, you can have up to 4 running at once for 8 channels.</p>
            <p><a href="https://www.makerfabs.com/mabee-dac-gp8413.html">US$5.80 on Makerfabs</a>
          </p></div>
        </div>

         <div>
          <p><a href="https://shop.blinkinlabs.com/products/alles-pcb"><img src="https://tulip.computer/img/alles.jpg" alt="Alles"></a></p>
      </div>

  </div>
</div>




<div id="involved">
  <div>
    <p>
      <h3>Get involved</h3>
    </p>

    
    <div>

      <div data-aos="fade-up">
          <p><a href="https://discord.com/invite/TzBFkUb8pG"><img src="https://tulip.computer/img/discord-mark-black.svg" width="42" height="42"></a>
          </p>
          <div>
            <a href="https://discord.com/invite/TzBFkUb8pG"><h3>Discord</h3></a>
            <p>Join the <strong>shore pine sound systems</strong> Discord to chat about Tulip, AMY and Alles. A fun small community of people experimenting with Tulip.</p>
          </div>
        </div>

      <div data-aos="fade-up" data-aos-delay="200">
          <p><a href="https://github.com/shorepine/tulipcc"><img src="https://tulip.computer/img/github-mark.svg" width="42" height="42/"></a>
          </p>
          <div>
             <a href="https://github.com/shorepine/tulipcc"><h3>Github</h3></a>
            <p>Check out the Tulip Github page for issues, discussions and the code.</p>
          </div>
        </div>


    </div>
  </div>

<div data-aos="fade" data-aos-delay="200">
      <h3>Join our email list</h3>
      <p>We'll send you <strong>very rare</strong> updates about Tulip, Alles, AMY and other projects we're working on.</p>
    </div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Foobar2000 (176 pts)]]></title>
            <link>https://www.foobar2000.org/</link>
            <guid>41122920</guid>
            <pubDate>Wed, 31 Jul 2024 20:05:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.foobar2000.org/">https://www.foobar2000.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41122920">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p><a href="https://www.foobar2000.org/screenshots" title="View more screenshots"><img id="pagepic" alt="View more screenshots" src="https://www.foobar2000.org/tinyfoobar.png"></a>


  foobar2000 is an advanced freeware audio player for the Windows platform.
 </p><h2>Latest news</h2>
  <div>
	<h3>2024-05-21</h3>
<p>
    New releases of old versions!
</p>
<p>
    Some of latest bug fixes have been backported to foobar2000 v1.5 and v1.6 series. <br>
    Versions 1.6.18 and 1.5.12 can be downloaded from <a href="https://www.foobar2000.org/old">old versions page</a>. <br>
    Additionally, version 1.5.12 was properly tested on old hardware; unintended SSE CPU requirement present in previous releases has been removed.
</p><h3>2024-05-20</h3>
<p>
    foobar2000 mobile v1.5 has been released. <br>
    This version introduces <a href="https://www.foobar2000.org/mobile/skinformat">new skin file format</a> which can be edited using commonly available tools. <br>
    <a href="https://www.foobar2000.org/apk">Download Android APK...</a>
</p><h3>2023-12-18</h3>
<p>
    foobar2000 v2.1 final has been released. <br>
    <a href="https://www.foobar2000.org/download">Download...</a>
</p>
<p>
    foobar2000 for Mac v2.6 final has also been released. <br>
    <a href="https://www.foobar2000.org/mac">Download foobar2000 for Mac...</a>
</p><h3> <a href="https://www.foobar2000.org/?page=News">View all news</a> </h3>
</div>
      <table>
            <caption>
          advertisement
        </caption>
      <tbody><tr> 
          <td>

          <div onclick="document.location.href='https://www.dbpoweramp.com/dmc.htm?fb=1';">
            <p><span>dBpoweramp mp3 Converter</span>
            <br>
              <span> music conversion perfected<br>&nbsp;</span>
              <br>
                <img alt="dmc" src="https://www.dbpoweramp.com/images/dmc/dmc.png" width="160" height="122"></p><p>&nbsp;
                      <span>Trusted by 30 million people, easy conversion between audio formats</span></p></div>

        </td>

            <td>

              <div onclick="document.location.href='https://www.dbpoweramp.com/perfecttunes.htm?fb=1';">
            <p><span>PerfectTUNES</span>
            <br>
              <span>
                a helping hand for your audio collection<br>&nbsp;</span>
              <br>
                <img alt="" height="122" src="https://www.dbpoweramp.com/images/pt-art-main.png" width="106"></p><p>
                    &nbsp;
                      <span>Add or upgrade Album Art, De-Dup and check for ripping errors</span></p></div>

        </td>

            <td>

              <div onclick="document.location.href='https://www.dbpoweramp.com/cd-ripper.htm?fb=1';">
            <p><span>dBpoweramp CD Ripper</span>
            <br>
              <span>
                CD ripping taken seriously<br>&nbsp;</span>
              <br>
                <img alt="cdripper" height="122" src="https://www.dbpoweramp.com/images/cd-ripper-secure.png" width="80"></p><p>
                    &nbsp;
                      <span>Secure Ripping from the inventors of AccurateRip, fast &amp; bit-perfect CD ripping</span></p></div>

        </td>

      </tr>
  </tbody></table>
  
    <h2>Main features</h2>
  <ul>
    <li>Supported audio formats: MP3, MP4, AAC, CD Audio, WMA, Vorbis, Opus, FLAC, WavPack, WAV, AIFF, Musepack, Speex, AU, SND... and more with additional <a href="https://www.foobar2000.org/?page=Download#components">components</a>.</li>
    <li><a href="https://wiki.hydrogenaudio.org/index.php?title=Gapless" rel="nofollow">Gapless</a> playback.</li>
    <li>Easily <a href="https://wiki.hydrogenaudio.org/index.php?title=Foobar2000:Layout_Editing_Mode" rel="nofollow">customizable user interface layout</a>.</li>
    <li>Advanced <a href="https://wiki.hydrogenaudio.org/index.php?title=Foobar2000redirect:C16D48EE-39BE-4C91-9A35-441BEFA286D2" rel="nofollow">tagging capabilities</a>.</li>
    <li>Support for ripping Audio CDs as well as transcoding all supported audio formats using the <a href="https://www.foobar2000.org/FAQ#converting_audio_files_to_different_file_formats">Converter component</a>.</li>
    <li>Full <a href="https://wiki.hydrogenaudio.org/index.php?title=Replaygain" rel="nofollow">ReplayGain</a> support.</li>
    <li>Customizable keyboard shortcuts.</li>
    <li>Open component architecture allowing third-party developers to extend functionality of the player.</li>
  </ul>
 </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[After years of leniency, ULA cracks down on hobbyist photographers (121 pts)]]></title>
            <link>https://arstechnica.com/space/2024/07/ula-to-amateur-launch-photographers-work-for-me-but-not-for-thee/</link>
            <guid>41121689</guid>
            <pubDate>Wed, 31 Jul 2024 18:13:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/space/2024/07/ula-to-amateur-launch-photographers-work-for-me-but-not-for-thee/">https://arstechnica.com/space/2024/07/ula-to-amateur-launch-photographers-work-for-me-but-not-for-thee/</a>, See on <a href="https://news.ycombinator.com/item?id=41121689">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2024/07/53891838413_2c9f565c76_k-1-800x533.jpg" alt="This image of an Atlas V launch on Tuesday morning has been intentionally blurred.">
      <figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/07/53891838413_2c9f565c76_k-1.jpg" data-height="1365" data-width="2048">Enlarge</a> <span>/</span> This image of an Atlas V launch on Tuesday morning has been intentionally blurred.</p><p>United Launch Alliance</p></figcaption>  </figure>

  




<!-- cache hit 82:single/related:08b9e0df1f67cb48c06d7d6cec8d2f86 --><!-- empty -->
<p>The emails from United Launch Alliance started popping into the inboxes of photographers a few days after the Fourth of July holiday. Although that day is meant to celebrate freedom and the red glare of rockets, the communication threatened to strip both from some of the company's most ardent devotees.</p>
<p>The message from the launch company announced the implementation of a new "annual agreement" between ULA and all people who place remote cameras at Space Launch Complex-41, the company's active launch site at Cape Canaveral Space Force Station. Anyone interested in setting remotes for future launch dates had 11 days to review and sign the agreement.</p>
<p>The language was clear: Photographers were welcome to set up remote shots at ULA launches if they worked for the media or wanted to post their work on social media. However, photographers could not sell this work independently, including as prints for fellow enthusiasts or for use in annual calendars.</p>
<p>"ULA will periodically confirm editorial publication for media participating in remote camera placement," the email stated. "If publication does not occur, or photos are sold outside of editorial purposes, privileges to place remote cameras may be revoked."</p>
<p>To the photographers who spend many hours preparing their equipment, waiting to set up and remove cameras, and persevering through scrubs and more, it seemed like a harsh judgment.</p>
<p>And nobody knew why it happened.</p>
<h2>No comment</h2>
<p>United Launch Alliance has offered no public comment about the new policy. The company did not respond to questions from Ars Technica about the agreement. And the company's chief executive, Tory Bruno, a frequent tweeter who regularly interacts with fans on the social media site X, has ignored dozens of questions about the policy change. Since the first questions were raised a few days ago, Bruno has not replied to anyone on X.</p>                                                                        
                                                                                
<p>The photographers themselves felt blindsided by the decision.</p>
<p>"I cannot sit by while myself and my colleagues are actively being forbidden from trying to support ourselves to be able to do what we do," said David Diebold, a photographer for Space Scout, <a href="https://x.com/DavidJDPhotos/status/1817268386939666519">on X</a>. "Being forced to sign an agreement that is a net negative for all of the media is the last thing I'll do. If this is the end of the line for covering ULA missions up close, then so be it."</p>
<p>Other photographers shared similar sentiments privately, but they did not want to be seen publicly calling out ULA, the second-most important launch provider in the United States.</p>
<p>The new rules went into effect on Tuesday with <a href="https://arstechnica.com/space/2024/07/with-a-landmark-launch-the-pentagon-is-finally-free-of-russian-rocket-engines/">the final launch of an Atlas V rocket for a national security mission</a>. A ULA representative told participating photographers that the intent of the new rules was to prohibit the sale of images to any commercial entities, including prints to individuals, except for news publications.</p>
<p>There was no explanation given for why.</p>
<h2>How did we get here?</h2>
<p>For a long time, the rules for accessing the press site at Kennedy Space Center in Florida and setting up remote cameras for launches there and at the military launch pads were clear. You had to be working press or have a letter from a publication that you were on assignment. But a decade and a half ago, several things occurred that began to change this.</p>
<p>As the Space Shuttle program wound down, NASA sought to induce positive publicity by inviting social media participants to launches and other events. The events were initially called "<a href="https://en.wikipedia.org/wiki/NASA_Social">Tweetups</a>" at their inception in 2009, and later "NASA Socials." The space agency provided access to non-media spaceflight enthusiasts, who then shared their experiences on Twitter and other social media outlets. The space agency further blurred the lines between traditional reporters and social media enthusiasts by inviting these participants to some news conferences.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Stop Destroying Videogames – European Citizens' Initiative (108 pts)]]></title>
            <link>https://citizens-initiative.europa.eu/initiatives/details/2024/000007_en</link>
            <guid>41121570</guid>
            <pubDate>Wed, 31 Jul 2024 18:02:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://citizens-initiative.europa.eu/initiatives/details/2024/000007_en">https://citizens-initiative.europa.eu/initiatives/details/2024/000007_en</a>, See on <a href="https://news.ycombinator.com/item?id=41121570">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                  <p>European Citizens' Initiative</p>
                      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Meta Has Run Hundreds of Ads for Cocaine, Opioids and Other Drugs (161 pts)]]></title>
            <link>https://www.wsj.com/tech/meta-cocaine-opioids-ads-dea8e0fc</link>
            <guid>41121237</guid>
            <pubDate>Wed, 31 Jul 2024 17:30:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/tech/meta-cocaine-opioids-ads-dea8e0fc">https://www.wsj.com/tech/meta-cocaine-opioids-ads-dea8e0fc</a>, See on <a href="https://news.ycombinator.com/item?id=41121237">Hacker News</a></p>
Couldn't get https://www.wsj.com/tech/meta-cocaine-opioids-ads-dea8e0fc: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[I prefer rST to Markdown (267 pts)]]></title>
            <link>https://buttondown.email/hillelwayne/archive/why-i-prefer-rst-to-markdown/</link>
            <guid>41120254</guid>
            <pubDate>Wed, 31 Jul 2024 15:49:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://buttondown.email/hillelwayne/archive/why-i-prefer-rst-to-markdown/">https://buttondown.email/hillelwayne/archive/why-i-prefer-rst-to-markdown/</a>, See on <a href="https://news.ycombinator.com/item?id=41120254">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                
                    <date>
                        
                            July 31, 2024
                        </date>
                
                
                
                    <h2>
                        I will never stop dying on this hill
                    </h2>
                

                

                
                    
                        <p>I just published a new version of <a href="https://leanpub.com/logic/" target="_blank">Logic for Programmers</a>! v0.2 has epub support, content on constraint solving and formal specification, and more! Get it <a href="https://leanpub.com/logic/" target="_blank">here</a>.</p>
<p>This is my second book written with <a href="https://www.sphinx-doc.org/en/master/" target="_blank">Sphinx</a>, after the new <a href="https://www.learntla.com/" target="_blank">Learn TLA+</a>. Sphinx uses a peculiar markup called <a href="https://docutils.sourceforge.io/rst.html" target="_blank">reStructured Text</a> (rST), which has a steeper learning curve than markdown. I only switched to it <em>after</em> writing a couple of books in markdown and deciding I needed something better. So I want to talk about why rst was that something.<sup id="fnref:rst"><a href="#fn:rst">1</a></sup></p>
<h2>Why rst is better</h2>
<p>The most important difference between rst and markdown is that markdown is a lightweight representation of html, while rst is a midweight representation of an abstract documentation tree.</p>
<p>It's easiest to see this with a comparison. Here's how to make an image in markdown:</p>

<p>Technically, you don't even need a parser for this. You just need a regex to transform it into  <code>&lt;img alt="alttext" src="example.jpg"/&gt;</code>. Most modern markdown engines <em>do</em> parse this into an intermediate representation, but the <em>essence</em> of markdown is that it's a lightweight html notation.</p>
<p>Now here's how to make an image in rst:</p>
<div><pre><span></span><code><span>..</span> <span>image</span><span>::</span> example.jpg
  <span>:alt:</span> alttext
</code></pre></div>
<p><code>.. image::</code> defines the image "directive". When Sphinx reads it, it looks up the registered handler for the directive, finds <code>ImageDirective</code>, invokes <code>ImageDirective.run</code>, which returns an <code>image_node</code>, which is an object with an <code>alt</code> field containing "alttext". Once Sphinx's processed all nodes, it passes the whole doctree to the HTML Writer, which looks up the rendering function for <code>image_node</code>, which tells it to output an <code>&lt;image&gt;</code> tag.</p>
<p>Whew that's a mouthful. And for all that implementation complexity, we get…  an interface that has 3x the boilerplate as markdown.</p>
<p>On the other hand, the markdown image is hardcoded as a special case in the parser, while the rst image is not. It was added in the exact same way as every other directive in rst: register a handler for the directive, have the handler output a specific kind of node, and then register a renderer for that node for each builder you want.</p>
<p>This means you can extend Sphinx with new text objects! Say you that instead of an <code>&lt;image&gt;</code>, you want a <code>&lt;figure&gt;</code> with a <code>&lt;figcaption&gt;</code>. In basic markdown you have to manually insert the html, with Sphinx you can just register a new <code>figure</code> directive. You can even make your <code>FigureDirective</code> subclass <code>ImageDirective</code> and have it do most of the heavy lifting.</p>
<p>The second benefit is more subtle: you can transform the doctree before rendering it. This is how Sphinx handles cross-referencing: if I put a <code>foo</code> anchor in one document and <code>:ref:`image &lt;foo&gt;`</code> in another, Sphinx will insert the right URL during postprocessing. The transformation code is also first-class with the rest of the build process: I can configure a transform to only apply when I'm outputting html, have it trigger in a certain stage of building, or even remove a builtin transform I don't want to run.</p>
<p>Now, most people may not need this kind of power! Markdown is ubiquitous because it's lightweight and portable, and rst is anything but. But <em>I</em> need that power.</p>

<h3>One use case</h3>
<p><em>Logic for Programmers</em> is a math-adjacent book, and all good math books need exercises for the reader. It's easier to write an exercise if I can put it and the solution right next to each other in the document. But for readers, I want the solutions to show up in the back of the book. I also want to link the two together, and since I might want to eventually print the book, the pdfs should also include page references. Plus they need to be rendered in different ways for latex (pdf) output and epub output. Overall lots of moving parts.</p>
<p>To handle this I wrote my own exercise extension.</p>
<div><pre><span></span><code><span>.. in chapter.rst</span>
<span>..</span> <span>exercise</span><span>::</span> Fizzbuzz
  <span>:name:</span> ex-fizzbuzz

  An exercise

<span>..</span> <span>solution</span><span>::</span> ex-fizzbuzz

  A solution

<span>.. in answers.rst</span>

<span>..</span> <span>solutionlist</span><span>::</span>
</code></pre></div>
<p>How these nodes are processed depends on my compilation target. I like to debug in HTML, so for HTML it just renders the exercise and solution inline.</p>
<p>When generating epub and latex, though, things works a little differently. After generating the whole doctree, I run a transform that moves every solution node from its original location to under <code>solutionlist</code>. Then it attaches a reference node to every exercise, linking it to the <em>new</em> solution location, and vice versa. So it starts like this (using Sphinx's "pseudoxml" format): </p>
<div><pre><span></span><code>--<span> </span>chapter.rst
<span>&lt;exercise_node</span><span> </span><span>ids=</span><span>"ex-fizzbuzz"</span><span>&gt;</span>
<span>  </span><span>&lt;title&gt;</span>
<span>    </span>Fizzbuzz
<span>  </span><span>&lt;paragraph&gt;</span>
<span>    </span>An<span> </span>exercise
<span>&lt;solution_node</span><span> </span><span>ids=</span><span>"ex-fizzbuzz-sol"</span><span>&gt;</span>
<span>  </span><span>&lt;paragraph&gt;</span>
<span>    </span>A<span> </span>solution

--<span> </span>answers.rst
<span>&lt;solutionlist_node&gt;</span>
</code></pre></div>
<p>And it becomes this:</p>
<div><pre><span></span><code>--<span> </span>chapter.rst
<span>&lt;exercise_node</span><span> </span><span>ids=</span><span>"ex-fizzbuzz"</span><span>&gt;</span>
<span>  </span><span>&lt;title&gt;</span>
<span>    </span>Fizzbuzz
<span>  </span><span>&lt;paragraph&gt;</span>
<span>    </span>An<span> </span>exercise
<span>    </span><span>&lt;exsol_ref_node</span><span> </span><span>refuri=</span><span>"/path/to/answers#ex-fizzbuzz-sol"</span><span>&gt;</span>
<span>      </span>Solution

--<span> </span>answers.rst
<span>&lt;solutionlist_node&gt;</span>
<span>  </span><span>&lt;solution_node</span><span> </span><span>ids=</span><span>"ex-fizzbuzz-sol"</span><span>&gt;</span>
<span>    </span><span>&lt;paragraph&gt;</span>
<span>      </span>A<span> </span>solution
<span>      </span><span>&lt;exsol_ref_node</span><span> </span><span>refuri=</span><span>"/path/to/chapter#ex-fizzbuzz"</span><span>&gt;</span>
<span>        </span>(back)
</code></pre></div>

<p>The Latex builder renders this by wrapping each exercise and solution in an <a href="https://ctan.org/pkg/exercise" target="_blank">answers environment</a>, while the epub builder renders the solution as a <a href="https://help.apple.com/itc/booksassetguide/en.lproj/itccf8ecf5c8.html" target="_blank">popup footnote</a>.<sup id="fnref:exsol_ref"><a href="#fn:exsol_ref">2</a></sup> Making this work:</p>
<p><img alt="An example of solution popups on an epub reader" src="https://assets.buttondown.email/images/8a7d66e3-56bd-4b7a-95ac-d4fdf88047c7.png?w=960&amp;fit=max"> </p>
<p>It's a complex dance of operations, but it works enormously well. It even helps with creating a "free sample" subset of the book: the back of the free sample only includes the solutions from the included subset, not the whole book!</p>
<h3>"But I hate the syntax"</h3>
<p>When I gush about rST to other programmers, this is the objection I hear the most: it's ugly. </p>
<p>To which I say, are you really going to avoid using a good tool just because it makes you puke? Because looking at it makes your stomach churn? Because it offends every fiber of your being?</p>
<p>...Okay yeah that's actually a pretty good reason not to use it. I can't get into lisps for the same reason. I'm not going to begrudge anybody who avoids a tool because it's ugly.</p>
<p>Maybe you'd find <a href="https://github.com/asciidoctor/asciidoctor" target="_blank">asciidoc</a> more aesthetically pleasing? Or <a href="https://mystmd.org/spec" target="_blank">MyST</a>? Or <a href="https://github.com/typst/typst" target="_blank">Typst</a>? Or <a href="https://docs.racket-lang.org/pollen/" target="_blank">Pollen</a>? Or even <a href="https://pandoc.org/MANUAL.html#extension-attributes" target="_blank">pandoc-extended markdown</a>? There are lots of solid document builders out there! My point isn't that sphinx/rst is exceptionally <em>good</em> for largescale documentation, it's that simple markdown is exceptionally <em>bad</em>. It doesn't have a uniform extension syntax or native support for pre-render transforms.</p>
<p>This is why a lot of markdown-based documentation generators kind of hack on their own preprocessing step to support new use-cases, which works for the most part (unless you're trying to do something really crazy). But they have to work around the markdown, not in it, which limits how powerful they can be. It also means that most programmer tooling can't understand it well. There's LSP and treesitter for markdown and rst but not for gitbook-markdown or md-markdown or leanpub-markdown.<sup id="fnref:treesitter"><a href="#fn:treesitter">3</a></sup></p>
<p>But if you find a builder that uses markdown and satisfies your needs, more power to you! I just want to expose people to the idea that doc builders can be a lot more powerful than they might otherwise expect.</p>
<hr>
<h3>No newsletter next week</h3>
<p>I'll be in Hong Kong.</p>
<h2>Update 2024-07-31</h2>
<p>Okay since this is blowing up online I'm going to throw in a quick explanation of <em>Logic for Programmers</em> for all of the non-regulars here. I'm working on a book about how formal logic is useful in day-to-day software engineering. It starts with a basic rundown of the math and then goes into eight different applications, such as property testing, database constraints, and decision tables. It's still in the alpha stages but already 20k words and has a lot of useful content. You can find it <a href="https://leanpub.com/logic" target="_blank">here</a>. Reader feedback highly appreciated!</p>

                    
                

                
                    <p><em>If you're reading this on the web, you can subscribe <a href="https://buttondown.email/hillelwayne" target="_blank">here</a>. Updates are once a week. My main website is <a href="https://www.hillelwayne.com/" target="_blank">here</a>.</em></p>
                

            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Jeff Bezos' management rules are slowly unraveling inside Amazon (185 pts)]]></title>
            <link>https://fortune.com/2024/07/31/amazon-leadership-principles-questions-future-jeff-bezos-departure-andy-jassy/</link>
            <guid>41120201</guid>
            <pubDate>Wed, 31 Jul 2024 15:44:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fortune.com/2024/07/31/amazon-leadership-principles-questions-future-jeff-bezos-departure-andy-jassy/">https://fortune.com/2024/07/31/amazon-leadership-principles-questions-future-jeff-bezos-departure-andy-jassy/</a>, See on <a href="https://news.ycombinator.com/item?id=41120201">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>



<p>But Hayter, a program manager, was bothered on a deeper level: Because the policy effectively meant that only people living near an Amazon office would be able to continue working at the company, she believed Amazon was violating one of its sacred tenets to “hire and develop the best.”&nbsp;</p>



<p>What’s more, by announcing the mandate with little warning or buy-in, Hayter believed, Amazon CEO Andy Jassy had betrayed his duty to “earn trust,” another important part of the Amazon code.</p>



<p>At Amazon these tenets, known as Leadership Principles, are much more than suggestions. They are a way of life that employees are judged on before they are even hired, steeped in from the moment they join, and scrupulously followed thereafter with the devotion of religious converts.&nbsp;</p>



<p>Hayter’s next move was a case in point: With the help of some of the 30,000 other employees who joined an internal <a href="https://fortune.com/2023/06/04/amazon-unfazed-remote-workers-protest-return-to-office-mandate/" target="_self" aria-label="Go to https://fortune.com/2023/06/04/amazon-unfazed-remote-workers-protest-return-to-office-mandate/">Slack channel she’d created</a>, she drafted a memo to lay out their concerns about the return-to-work mandate. The memo was exactly six pages long.</p>



<p>Like the Leadership Principles, six-page memos (“6-pagers,” in Amazon lingo) are part of a unique work culture forged within the giant internet company over the years and considered as much of a contributor to Amazon’s world-beating success as any blockbuster product or individual, including <a href="https://fortune.com/preview/2024/07/30/jeff-bezos-leadership-rules-are-revered-and-imitated-by-ceos-everywhere-can-they-survive-the-andy-jassy-era-at-amazon/" target="_self" aria-label="Go to https://fortune.com/preview/2024/07/30/jeff-bezos-leadership-rules-are-revered-and-imitated-by-ceos-everywhere-can-they-survive-the-andy-jassy-era-at-amazon/">Amazon founder Jeff Bezos himself</a>.&nbsp;</p>



<p>In reality, these principles and the processes they produce are among Amazon’s grandest innovations.</p>



<p>The customs and practices are widely imitated: More than a dozen books promise to teach managers the secrets to the principles and processes; consultants do brisk business helping firms import Amazon’s methods into their organizations; CEOs load their emails with Amazonian axioms.</p>



<p>And yet, as the Hayter episode shows, the Amazon Way is a fragile concept even within Amazon itself. Jassy defended the return-to-work decision as <a href="https://www.businessinsider.com/amazon-andy-jassy-no-data-return-to-office-rto-aws-2023-8" target="_blank" aria-label="Go to https://www.businessinsider.com/amazon-andy-jassy-no-data-return-to-office-rto-aws-2023-8" rel="noopener">a judgment call</a>; after all, another company leadership principle notes that “leaders are right a lot. They have strong judgment and good instincts.” But the clash between employees and the CEO over who was being more faithful to the code reveals a growing tension that some fear could erode the pillars of the $2 trillion company.&nbsp;</p>


<div><p><img alt="" loading="lazy" width="1024" height="683" decoding="async" data-nimg="1" sizes="100vw" srcset="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=320&amp;q=75 320w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=384&amp;q=75 384w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=480&amp;q=75 480w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=576&amp;q=75 576w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=768&amp;q=75 768w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=1024&amp;q=75 1024w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=1280&amp;q=75 1280w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=1440&amp;q=75 1440w" src="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1169387139-e1722363657869.jpg?w=1440&amp;q=75"></p><figcaption>Employees walk past a mural relief reading “Earn Trust” at the Amazon.com Inc. office campus in Hyderabad, India.</figcaption><p>Dhiraj Singh—Bloomberg via Getty Images</p></div>



<p>More than three years after Bezos passed the CEO baton to Jassy, as Amazon recently <a href="https://fortune.com/2024/07/05/jeff-bezos-andy-jassy-amazon-30-year-anniversary/" target="_self" aria-label="Go to https://fortune.com/2024/07/05/jeff-bezos-andy-jassy-amazon-30-year-anniversary/">celebrated its 30th birthday</a>, the durability and staying power of Amazon’s foundational work culture are being watched closely by many inside and outside the organization.&nbsp;</p>



<p>Fortune spoke to two dozen current and recently departed Amazon executives and managers about how the famous Amazon Way is holding up in the post-Bezos era. Many of those interviewed paint a picture of a company where the key principles and practices remain core but have become less universally agreed upon. Increasingly, some insiders say, the leadership principles have become weaponized, diluted, or applied inconsistently.&nbsp;</p>



<p>PowerPoint presentations, once strictly verboten, now pop up occasionally. Longtime leaders who embodied the principles in their every move have moved on.</p>



<p>Perhaps in response to some of these new realities, Amazon recently disseminated to employees <a href="https://www.youtube.com/watch?v=My-2-MyxamQ" target="_blank" aria-label="Go to https://www.youtube.com/watch?v=My-2-MyxamQ" rel="noopener">an hourlong video course hosted by Jassy</a> himself explaining the company’s 16 leadership principles.&nbsp;</p>



<p>“The leadership principles are not something that you just memorize or that you just study for a couple of hours, or you try once or twice and you’ve got them,” Jassy says in the intro. “It’s something that you have to practice a lot.”</p>



<p>Margaret Callahan, an Amazon spokesperson, said that the company regularly updates internal resources and training, including on topics pertaining to the company’s culture. She said that Amazon’s culture—defined by the leadership principles, a “writing culture,” and working backward from customers’ needs—remains strong: “It’s what has driven innovations such as Prime, AWS, the Kindle, Alexa, the Climate Pledge, and Project Kuiper, just to name a few.”</p>



<p>The success of these products, and Amazon’s<a href="https://fortune.com/2024/05/09/amazon-andy-jassy-earnings-accelerated-growth-aws-ads/" target="_self" aria-label="Go to https://fortune.com/2024/05/09/amazon-andy-jassy-earnings-accelerated-growth-aws-ads/"> continued financial growth</a>, indicate that the company is far from facing any immediate crisis. On Thursday, Amazon will report its second-quarter financial results, with Wall Street analysts expecting double-digit revenue and profit growth.&nbsp;</p>



<p>As Amazon seeks to extend its dominance into the next 30 years, however, the leadership principles and special work culture will almost certainly collide with the questions that have challenged so many corporate paragons of the past: Is having a sacred playbook an asset that companies should preserve at all costs, or does it become a liability holding companies back as the world around them changes? And, perhaps more important, is there a point at which a company’s size, growth, and industry-spanning tentacles make a unified culture of decision-making and inventing impossible?</p>



<h2>True believers in the Amazon Way </h2>



<p>Customer obsession.</p>



<p>Bias for action.</p>



<p>Disagree and commit.&nbsp;</p>



<p>There are <a href="https://www.amazon.jobs/content/en/our-workplace/leadership-principles" target="_blank" aria-label="Go to https://www.amazon.jobs/content/en/our-workplace/leadership-principles" rel="noopener">16 Leadership Principles at Amazon</a>. Any Amazon employee can recite most of them by heart (those who can’t won’t last very long).</p>



<p>There are also the various homegrown Amazon practices: the two-pizza rule, which holds that cross-functional, or “single-threaded,” teams focused on a specific goal or project should be lean enough that two pies could suffice as a team meal. There’s also a rabid attention on so-called “input” metrics of a certain business—think selection or price—rather than output metrics such as revenue.&nbsp;</p>



<p>And then there’s the intense focus on written narratives, including the 6-pager, a planning document that describes in storylike fashion a goal for a business line and how to go about accomplishing it, or a new project or plan (one variant of the 6-pager is the so-called PRFAQ, written in the style of a press release announcing the hypothetical future product, and the focal point of Amazon’s “Working Backward” product-development approach). Before a key meeting, every single attendee sits silently and reads the memo to themself. Only then is a discussion permitted to begin in earnest.&nbsp;</p>



<p>It sounds almost cultlike, Amazon insiders acknowledge. But as former Amazon Prime Video boss Bill Carr notes, the payoff is that historically Amazon employees up and down the corporate ladder understand things at a “granular level.”</p>


<div><p><img alt="" loading="lazy" width="1024" height="683" decoding="async" data-nimg="1" sizes="100vw" srcset="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=320&amp;q=75 320w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=384&amp;q=75 384w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=480&amp;q=75 480w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=576&amp;q=75 576w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=768&amp;q=75 768w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=1024&amp;q=75 1024w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=1280&amp;q=75 1280w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=1440&amp;q=75 1440w" src="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1445867611-e1722363942847.jpg?w=1440&amp;q=75"></p><figcaption>Andy Jassy took the baton from Amazon founder Bezos in 2021 to become the new CEO.</figcaption><p>Thos Robinson/Getty Images for The New York Times</p></div>



<p>“The executives at Amazon are just so much more well-informed about what is going on in their company, in terms of metrics, in terms of the initiatives that teams are doing, in terms of what’s working, what’s not working,” said Carr, who left in 2015 but is the coauthor of the book <em>Working Backwards</em> and cofounder of a consulting firm by the same name, which both aim to guide business leaders on how to apply Amazon’s principles and practices to their own businesses.&nbsp;</p>



<p>Executives at Amazon brim with personal examples of the power of the leadership mottos. Ideally, multiple principles can mesh together on a project to help unleash a single breakthrough product or service.&nbsp;</p>



<p>Beryl Tomay, a 19-year Amazon veteran and vice president of its transportation division, points to one recent success story that involved “regionalizing” the company’s network of U.S. warehouses so that each facility serves a distinct geographic area. The multiyear project has lowered costs, led to more environmentally friendly trucking routes, and allowed customers to get their goods faster, the company has said.&nbsp;</p>



<p>From brainstorming the initial idea to executing, the project called for a collection of Leadership Principles— from “customer obsession” to “thinking big.” Tomay reels off more of them with the zeal of a true believer: “There’s a ‘simplify’ part [and] there’s also the ‘invent’ part. ‘Dive deep’ too. Going super deep into what our topology looks like, and what our inbound inventory placement looks like.”</p>



<p>If mission statements and corporate values are viewed as empty slogans within many companies, at Amazon the Leadership Principles and special practices are embraced with genuine sincerity.&nbsp;</p>



<p>“It’s critically important for an organization to have something like this if they are actually meaningful,” said Stephan Meier, chair of the management division at Columbia Business School and author of the forthcoming book <em>The Employee Advantage</em>.&nbsp;</p>



<p>But, Meier adds, “if it’s not lived, if it’s not on top of people’s minds, if it doesn’t have any implications of how you would make decisions or treat each other, they are completely meaningless.”</p>



<p>It’s precisely this warning that made some Amazon insiders uneasy with what happened a few years ago.</p>



<h2>An erosion of trust</h2>



<p>On July 1, 2021, Amazon did something it hadn’t done in many years: It added two new leadership principles to its list. “Strive to be Earth’s best employer” was one new principle. “Success and scale bring broad responsibility” was the other.&nbsp;</p>



<p>When these were introduced, Amazon was facing intense media coverage over the swell of unionization efforts in its warehouse network, as well as antitrust and environmental scrutiny. And with <a href="https://fortune.com/2021/02/02/jeff-bezos-stepping-down-amazon-ceo-executive-chair-letter-to-employees-andy-jassy-replacement/" target="_self" aria-label="Go to https://fortune.com/2021/02/02/jeff-bezos-stepping-down-amazon-ceo-executive-chair-letter-to-employees-andy-jassy-replacement/">Bezos scheduled to hand over the CEO reins</a> a few days later, the introduction of the two new principles served as a convenient opportunity to demonstrate a company committed to progress under his successor.</p>



<p>Inside the company, though, the reaction among many employees was swift and brutal: “They are clearly a marketing ploy and they devalue the rest of the Leadership Principles,” one former senior manager of more than 10 years who left the company recently told <em>Fortune</em>. “Total bullshit,” opined a former longtime communications employee at Amazon who was still at the company at the time, and who summed up the new principles as “playing the reputational game versus guiding how you think.”</p>



<p>The problem, explained a former Amazon vice president, is that the pair of new leadership principles are so radically different from the other 14 that it makes it tougher for employees to grasp the essence of the overall principles and to act on them. “I’ve got to think that that’s somewhat challenging for the rank and file. The fact that there are so many LPs, and the fact that these last two are so abstract,” the former VP said.</p>


<div><p><img alt="" loading="lazy" width="1024" height="683" decoding="async" data-nimg="1" sizes="100vw" srcset="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=320&amp;q=75 320w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=384&amp;q=75 384w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=480&amp;q=75 480w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=576&amp;q=75 576w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=768&amp;q=75 768w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=1024&amp;q=75 1024w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=1280&amp;q=75 1280w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=1440&amp;q=75 1440w" src="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1358788181-e1722366559811.jpg?w=1440&amp;q=75"></p><figcaption>A recent effort to “regionalize” Amazon’s warehouses leveraged multiple Leadership Principles and led to more environmentally friendly trucking routes, according the VP of transportation.</figcaption><p>Dan Kitwood—Getty Images</p></div>



<p>The expansion of the number of principles has coincided with what some Amazon insiders describe as an erosion of trust in the principles, or at least in the way their colleagues understand and apply the principles, which are meant to influence everything from new-product ideation to employee evaluations.</p>



<p>Several longtime managers told <em>Fortune</em> that they felt the overall intent of the leadership principles has now shifted in many situations from guidelines on how to make the right decision, to more punitive usages that come across mainly intended to point out flaws. Such weaponization of leadership rules to criticize or squash dissent has always been a reality to a certain extent. “Earns trust” has been especially problematic in this regard, <a href="https://www.vox.com/recode/2021/2/26/22297554/amazon-race-black-diversity-inclusion" target="_blank" aria-label="Go to https://www.vox.com/recode/2021/2/26/22297554/amazon-race-black-diversity-inclusion" rel="noopener">according to some women of color</a>, and a <a href="https://medium.com/@ezcoach1/weaponizing-amazon-leadership-principles-5e1c8d13a71" target="_blank" aria-label="Go to https://medium.com/@ezcoach1/weaponizing-amazon-leadership-principles-5e1c8d13a71" rel="noopener">former Amazon VP has written about leadership principles being weaponized</a> by leaders when “they lack the power to give orders” and thus resort to “a crude attempt to apply the LP not as intended, but as a way to ensure an outcome.”</p>



<p>Even knowing that, many who spoke to <em>Fortune</em> believe the issue has worsened in recent years as Amazon has hired many executives from outside the company. (Most of those who spoke to <em>Fortune</em> requested anonymity, either because they are not permitted to talk to the press without permission as current Amazon employees, or because they feared retaliation for speaking candidly even as former employees.) One current Amazon senior manager said they’ve consistently observed bosses new to the company use the principles “as weapons to put those who aren’t favorites in their place,” while employing other principles to build up their favorites.&nbsp;</p>



<p>“Sometimes I’ll hear, ‘It’s amazing you had this ‘bias for action’…and other times when I believe I’ve had ‘bias for action,’&nbsp;they will say you weren’t data-driven (from the leadership principle ‘Dive deep’) enough.”</p>



<p>Another employee, a longtime AWS manager, said his superiors over the last few years frequently wielded “Disagree and commit”—a maxim intended to prevent groupthink during project planning while ensuring unity once a plan has been agreed upon—as a cudgel to quash any level of pushback.</p>



<p>“The joke by the time I left [last year] was if you didn’t like something, you could disagree and commit or disagree and quit,” the employee said.</p>



<p>Callahan, the Amazon spokesperson, said that the two new principles are as important as&nbsp;the others, and that they all play a role in evaluating new hires as well as the performance of current employees.</p>



<p>But there are other signs of change within the organization too. Several current managers who spoke to <em>Fortune</em> said that PowerPoint presentations have supplanted written narratives in some cases over the last two years—not in a dominant way, but in a noticeable one nonetheless. In the Prime Video division, for example, new executives who have come to the company after long careers outside of Amazon have been known to chafe at the heavy focus on narratives.</p>



<p>“There’s a lot of resistance from outsiders at the executive level,” one current manager said.</p>



<p>Another senior manager who worked at Amazon for 15 years said his first 13 years at the company were marked by an overwhelming amount of writing, but that in the last two years that has shifted to PowerPoint decks.</p>



<p>“We have this S team that is very religious about Amazon’s culture and gets it,” he said, “but they brought in an enormous amount of senior execs in the level or two below the S team from [other] companies and they brought in their culture and were never given a real, ‘This is how we do things at Amazon.’”</p>



<p>New executives who joined right before or immediately after COVID-19 shutdowns also struggled to grasp the supreme importance of business review documents like the weekly, monthly, and quarterly business reviews that exist elsewhere in the business world but are foundational inside Amazon.</p>



<p>“There’s huge value in the QBR when everyone sits together and puts everything on the table,” a former director-level executive who left Amazon last year said. “But when you’re doing it over video and have to limit the number of attendees because there’s too many people, and you’re really worried about anything in there that’s too sensitive to be leaked, then the QBR becomes an onerous burden.”</p>


<div><p><img alt="" loading="lazy" width="1024" height="683" decoding="async" data-nimg="1" sizes="100vw" srcset="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=320&amp;q=75 320w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=384&amp;q=75 384w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=480&amp;q=75 480w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=576&amp;q=75 576w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=768&amp;q=75 768w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=1024&amp;q=75 1024w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=1280&amp;q=75 1280w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=1440&amp;q=75 1440w" src="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1243927438-e1722366285183.jpg?w=1440&amp;q=75"></p><figcaption>Some Amazon insiders point to disruption caused by the pandemic as one reason for the changing work culture.</figcaption><p>Genaro Molina—Los Angeles Times/Getty Images</p></div>



<h2>Bezos was a guiding light and real-time model</h2>



<p>Some ascribe the fraying of Amazon’s distinct work culture in part to the change in the CEO suite, even while acknowledging Bezos’s wandering focus in this area during the final years of his tenure.&nbsp;</p>



<p>“In the last two years, Andy should have been more attuned to this,” one current Amazon manager who has spent 15 years at the company said in an interview.</p>



<p>As chief executive, Bezos for many years served as the guiding light of the Amazon Way, providing real-time lessons in how to interpret the leadership principles in different situations and how to know which ones to employ when.&nbsp;</p>



<p>The modeling was crucial for a set of principles which, as everyone who spoke to <em>Fortune</em> agreed, are often in tension with one another. How can you both “dive deep” while having a “bias for action”? How can you truly employ “customer obsession” if you also have to make sure that “frugality” is core to what you do?</p>



<p>Bezos excelled at explaining the mental models or logic he used to arrive at a decision, says Carr. He was able to articulate the “why” as much as the “what.”</p>



<p>“Jeff’s brain just doesn’t work like other people’s brains,” adds Carr, who experienced 15 years of firsthand observations before leaving the company in 2015, and who stressed that he could only speak about Amazon’s culture as it was during his time at the company. “By learning from him, then you could start to take those paths, too, and teach people about why that’s the path we would take.”</p>


<div><p><img alt="" loading="lazy" width="1024" height="682" decoding="async" data-nimg="1" sizes="100vw" srcset="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=320&amp;q=75 320w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=384&amp;q=75 384w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=480&amp;q=75 480w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=576&amp;q=75 576w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=768&amp;q=75 768w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=1024&amp;q=75 1024w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=1280&amp;q=75 1280w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=1440&amp;q=75 1440w" src="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1193818193-e1722363304195.jpg?w=1440&amp;q=75"></p><figcaption>Amazon founder Jeff Bezos was instrumental in instilling Amazon’s special work culture within the company</figcaption><p>SAJJAD HUSSAIN/AFP via Getty Images</p></div>



<p>That would be a tough act for anyone to follow, even <a href="https://fortune.com/2021/07/05/andy-jassy-amazon-ceo-jeff-bezos/" target="_self" aria-label="Go to https://fortune.com/2021/07/05/andy-jassy-amazon-ceo-jeff-bezos/">a 27-year veteran like Jassy who</a> once served as Bezos’s “shadow,” a role similar to a chief of staff. That’s why many who spoke to <em>Fortune</em> don’t point to the Bezos-Jassy transition as the main fault line. The disruption caused by the pandemic, as well as the doubling of Amazon’s headcount in two years, was more to blame, they say.</p>



<p>Those who joined right before the pandemic, or during the madness of 2020 and 2021, had little time to learn and adapt. Learning through meeting interactions over videoconferencing, for example, was much less conducive to osmosis than in-person interactions, either planned or serendipitous run-ins, several sources said.</p>



<p>“The leadership we brought in from 2019 to 2021 at the director level and above never really were educated on the Amazon culture,” a senior manager of 15 years said.</p>



<p>“They really struggled to understand the culture, but that wasn’t on them,” said another, an Amazon director-level executive who left the company recently after nearly a decade. “That’s on the changing of times and remote work.”&nbsp;</p>



<p>Amazon’s Callahan said that for the last five years, new senior Amazon leaders at the director and vice president levels attend a three-day training on the company’s culture taught by peers, and are paired with other Amazon colleagues to help them adapt to the company in other ways. However, Callahan declined to respond to questions about whether this practice was put on hold during the pandemic and, if so, for how long.&nbsp;</p>



<p>Many longtime standard-bearers of the company’s DNA have also walked away in recent years. Jeff Wilke, Bezos’s longtime right hand and the CEO of Amazon’s core consumer business, left in 2021; Dave Clark, a longtime head of Amazon’s warehouse and delivery operations who eventually replaced Wilke, departed Amazon a little more than a year later, reportedly in part due to Jassy’s hands-on managing style.</p>



<p>“Culture takes active architecture and work,” said another former Amazon vice president who worked at the company for more than 15 years. “There was nobody else left to teach [that],” the former exec added, in a nod to all the top leaders who have left the company.&nbsp;</p>



<p>With so much change at the top, executives like Jamil Ghani are trying to step up. The global leader of Amazon Prime joined the company eight years ago and says that providing on-the-fly lessons and guidance about the leadership principles and Amazon customs, like written narratives, is an important part of his job.&nbsp;</p>



<p>“I often tell the team that the point of your work is not the doc; that the point of your work is to create a doc that can inspire the right meeting, the right discussion,” Ghani told <em>Fortune</em>. “In the best meetings, you actually don’t even talk about the document. Everybody has the same context and information and then you have a discussion.”</p>



<p>In the event that a leadership principle has been misinterpreted or misapplied—including, as he acknowledges occasionally occurs, in situations when one is being used punitively—Ghani swoops in.&nbsp;</p>



<p>“I’ve done this many times when it’s happened or, offline, kind of follow up with a peer or somebody else and be like, ‘Hey, I don’t think that’s quite right. And here’s why,’” he added. “And people can have a very level-headed conversation about it.”</p>


<div><p><img alt="" loading="lazy" width="1024" height="683" decoding="async" data-nimg="1" sizes="100vw" srcset="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=320&amp;q=75 320w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=384&amp;q=75 384w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=480&amp;q=75 480w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=576&amp;q=75 576w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=768&amp;q=75 768w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=1024&amp;q=75 1024w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=1280&amp;q=75 1280w, https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=1440&amp;q=75 1440w" src="https://fortune.com/img-assets/wp-content/uploads/2024/07/GettyImages-1797509756_81cda9-e1722365091257.jpg?w=1440&amp;q=75"></p><figcaption>The Amazon Way has led the ecommerce company to a $2 trillion valuation.</figcaption><p>DIMITAR DILKOFF/AFP via Getty Images</p></div>



<h2>A Bible with many religions</h2>



<p>One of the beauties of Amazon’s leadership principles has long been that they are detailed enough to serve as North Stars but broad enough for leaders to mold them as necessary depending on the type of decision or current environment.&nbsp;</p>



<p>“These are not processes that give you the answers,” says Carr, the former head of Prime Video. “They don’t tell you what to do. They don’t tell you whether to turn left or turn right, or to green-light this thing or not that thing. They’re management tools that give you the right frameworks to use to examine the problem.”</p>



<p>“Think of the LPs like the Bible,” a former member of Amazon’s exclusive senior executive team, known as the S-team, told <em>Fortune</em>. “Amazing how many religions are based off the same text.”</p>



<p>Three years into Jassy’s CEO tenure, the changes are becoming increasingly clear. The question now is whether this is evidence that the magic formula is getting diluted or a sign of the framework’s versatility.</p>



<p>Tomay, the VP of transportation, says staying nimble sometimes requires tweaking longtime practices. In the last year, she’s told her teams to reserve the six-page memo for only the most important meetings and encouraged them to craft a one-pager first. If there’s an alignment on the path forward after reviewing the one-pager in, say, a 30-minute meeting, that person or team will get the green light to go off and dive deep in creating a 6-pager.&nbsp;</p>



<p>“The company has shifted and grown,” she says, “so you have to keep adapting.”</p>



<p>With 1.5 million employees, Amazon is one of the largest employers in the world. And it has successfully expanded into lucrative markets like cloud computing, advertising, and entertainment. But with online retailers like China’s Shein and Temu gaining momentum, and AI threatening to reshape the entire business landscape, Amazon’s ability to adapt without losing what makes it special are sure to be tested in the years to come.</p>



<p>Business history can provide some unifying lessons. One key one: a strong culture and DNA, anchored in principles and practices that are talked about and lived out most working days, can help stabilize—even bolster—an organization during periods of significant change, whether CEO transitions or massive shifts in consumer or enterprise trends.&nbsp;</p>



<p>Meier, the Columbia Business School professor and author, points to <a href="https://fortune.com/company/toyota-tsusho/" target="_blank" aria-label="Go to https://fortune.com/company/toyota-tsusho/">Toyota</a> as one legacy corporation worth studying in this regard. “Toyota had those very clear principles on how to treat employees and make decisions, and I think it served them really well,” he says. “As a result, they sustained some of their success over transitions.”</p>



<p>The auto giant, whose stock hit an all-time high in March, is 87 years old, almost three times older than Amazon.&nbsp;</p>



<p>It’s currently on its 12th president.</p>



<p><em>Are you a current or former Amazon employee with thoughts on this topic or a tip to share? Contact Jason Del Rey at&nbsp;</em>jason.delrey@fortune.com<em>,&nbsp;</em>jasondelrey@protonmail.com<em>, or through secure messaging app Signal at&nbsp;</em>917-655-4267<em>. You can also message him&nbsp;</em><a href="https://www.linkedin.com/in/jasondelrey/" target="_blank" aria-label="Go to https://www.linkedin.com/in/jasondelrey/" rel="noreferrer noopener">on LinkedIn</a><em>&nbsp;or at&nbsp;</em><a href="https://twitter.com/DelRey" target="_blank" aria-label="Go to https://twitter.com/DelRey" rel="noreferrer noopener">@delrey</a><em>&nbsp;on&nbsp;</em><a href="https://fortune.com/company/twitter/" target="_self" aria-label="Go to https://fortune.com/company/twitter/">X</a><em>.</em></p></div><p><strong>Recommended Newsletter:</strong> The Fortune Next to Lead newsletter is a must-read for the next generation of C-suite leaders. Every Monday, the newsletter provides the strategies, resources, and expert insight needed to claim the most coveted positions in business. <a href="https://fortune.com/newsletters/next-to-lead?&amp;itm_source=fortune&amp;itm_medium=article_tout&amp;itm_campaign=next_to_lead_v2&amp;itm_content=elon_amazon_google" target="_self" aria-label="Go to https://fortune.com/newsletters/next-to-lead?&amp;itm_source=fortune&amp;itm_medium=article_tout&amp;itm_campaign=next_to_lead_v2&amp;itm_content=elon_amazon_google">Subscribe now</a>.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why the CrowdStrike bug hit banks hard (155 pts)]]></title>
            <link>https://www.bitsaboutmoney.com/archive/crowdstrike-bug-hit-banks-hard/</link>
            <guid>41119874</guid>
            <pubDate>Wed, 31 Jul 2024 15:07:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bitsaboutmoney.com/archive/crowdstrike-bug-hit-banks-hard/">https://www.bitsaboutmoney.com/archive/crowdstrike-bug-hit-banks-hard/</a>, See on <a href="https://news.ycombinator.com/item?id=41119874">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p><em><strong>Programming note</strong>: I recently launched a weekly podcast, </em><a href="https://www.complexsystemspodcast.com/" rel="noreferrer"><em>Complex Systems</em></a><em> with Patrick McKenzie. About 50% of the conversations cover Bits about Money's beat. The remainder will be on other interesting intersections of technology, incentives, culture, and organizational design. The first three episodes covered </em><a href="https://www.complexsystemspodcast.com/episodes/teaching-trading-ricki-heicklen/" rel="noreferrer"><em>teaching trading</em></a><em>, Byrne Hobart on the </em><a href="https://www.complexsystemspodcast.com/episodes/writing-history-byrne-hobart/" rel="noreferrer"><em>epistemology of financial firms</em></a><em>, and </em><a href="https://www.complexsystemspodcast.com/episodes/reporting-tech-kelsey-piper/" rel="noreferrer"><em>the tech industry vs. tech reporting divide</em></a><em>. Subscribe to it anywhere you listen to podcasts. If you enjoy it, writing a review (in your podcast app or to me via email) helps quite a bit.</em></p><p>On July 19th, a firm most people have sensibly never heard of knocked out a large portion of the routine operations at many institutions worldwide. This hit the banking sector particularly hard. It has been <a href="https://www.wsj.com/tech/microsoft-reports-major-service-outage-affecting-users-worldwide-328a2f40">publicly reported</a> that several of the largest U.S. banks were affected by the outage. I understand one of them to have idled tellers and bankers nationwide for the duration. (You’ll forgive me for not naming them, as it would cost me some points.) The issue affected institutions across the size spectrum, including large regionals and community banks.</p><p>You might sensibly ask why that happened and, for that matter, how it was possible it would happen.</p><p>You might be curious about how to quickly reconstitute the financial system from less legible sources of credit when it is down. (Which: probably less important as a takeaway, but it is quite colorful.)</p><h2 id="brief-necessary-technical-context">Brief necessary technical context</h2><p>Something like 20% of the readership of this column has an engineering degree. To you folks, I apologize in advance for the following handwaviness. (You <em>may</em> be better served by the <a href="https://www.crowdstrike.com/falcon-content-update-remediation-and-guidance-hub/" rel="noreferrer">Preliminary Post Incident Review</a>.)</p><p>Many operating systems have a distinction between the “kernel” supplied by the operating system manufacturer and all other software running on the computer system. For historical reasons, that area where almost everything executes is called “userspace.”</p><p>In modern software design, programs running in userspace (i.e. almost all programs) are <em>relatively</em> limited in what they can do. Programs running in kernelspace, on the other hand, get direct access to the hardware under the operating system. Certain bugs in kernel programming are very, very bad news for everything running on the computer.</p><p><a href="https://www.crowdstrike.com/platform/endpoint-security/">CrowdStrike Falcon</a> is endpoint monitoring software. In brief, “endpoint monitoring” is a service sold to enterprises which have tens or hundreds of thousands of devices (“endpoints”). Those devices are<em> illegible to the organization that owns them</em> due to sheer scale; no single person nor group of people understand what is happening on them. This means there are <em>highly variable</em> levels of how-totally-effed those devices might be at exactly this moment in time. The pitch for endpoint monitoring is that it gives your teams the ability to make those systems legible again while also benefitting from economies of scale, with you getting a continuously updated feed of threats to scan for from your provider.</p><p>One way an endpoint might be effed is if it was physically stolen from your working-from-home employee earlier this week. Another way is if it has recently joined a botnet orchestrated from a geopolitical adversary of the United States after one of your junior programmers decided to install warez because the six figure annual salary was too little to fund their video game habit. (No, I am not reading <em>your</em> incident reports, I clarify for every security team in the industry.)</p><p>In theory, you perform ongoing monitoring of <em>all</em> of your computers. Then, your crack security team responds to alerts generated by your endpoint monitoring solution. This will sometimes merit further investigation and sometimes call for immediate remedial work. The conversations range from “Did you really just install cracked Starcraft 2 on your work PC? … Please don’t do that.” to “The novel virus reported this morning compromised 32 computers in the wealth management office. Containment was achieved by 2:05 PM ET, by which point we had null routed every packet coming out of that subnet then physically disconnected power to the router just to be sure. We have engaged incident response to see what if any data was exfiltrated in the 47 minutes between detection and null routing. At this point we have no indications of compromise outside that subnet but we cannot rule out a threat actor using the virus as a beachhead or advanced persistent threats being deployed.”</p><p>(Yes, that does sound like a Tom Clancy novel. No, that is not a parody.)</p><h2 id="falcon-punched">Falcon punched</h2><p>Falcon <a href="https://www.crowdstrike.com/blog/falcon-update-for-windows-hosts-technical-details/">shipped a configuration bug</a>. In brief, this means that rather than writing new software (which, in modern development practice, hopefully goes through fairly extensive testing and release procedures), CrowdStrike sent a bit of data to systems with Falcon installed. That data was intended to simply update the set of conditions that Falcon scanned for. However, due to an error at CrowdStrike, it <em>actually</em> caused existing already-reviewed Falcon software to fail catastrophically.</p><p>Since that failure happened in kernelspace at a particularly vulnerable time, this resulted in Windows systems experiencing total failure beginning at boot. The user-visible symptom is sometimes called the <a href="https://support.microsoft.com/en-us/windows/resolving-blue-screen-errors-in-windows-60b01860-58f2-be66-7516-5c45a66ae3c6" rel="noreferrer">Blue Screen of Death</a>.</p><p>Configuration bugs are a disturbingly large portion of engineering decisions which cause outages. (Citation: let’s go with “general knowledge as an informed industry observer.” As always, while I’ve previously worked at Stripe, neither Stripe nor its security team necessarily endorses things I say in my personal spaces.)</p><p>However, because <em>this</em> configuration bug hit very widely distributed software running in kernelspace almost universally across machines used by the workforce of lynchpin institutions throughout society (most relevantly to this column, banks, but also <a href="https://www.delta.com/us/en/advisories/other-alerts/global-it-outage" rel="noreferrer">airlines</a>, etc etc), it had a blast radius much, much larger than typical configuration bugs.</p><p>Have I mentioned that IT security really likes military metaphors? “Blast radius” means “given a fault or failure in system X, how far afield from X will we see negative user impact.” I struggle to recall a bug with a broader direct blast radius than the Falcon misconfiguration.</p><p>Once the misconfiguration was rolled out, fixing it was complicated by the tiny issue that a lot of the people needed to fix it couldn’t access their work systems because their machine Blue Screen of Death’ed.</p><p>Why? Well, we put the vulnerable software on essentially all machines in a particular institution. You want to protect <em>all</em> the devices. That is the point of endpoint monitoring. It is literally someone’s job to figure out where the devices that aren’t endpoint monitored exist and then to bring them into compliance.</p><p>Why do we care about optimizing for endpoint monitoring coverage? Partly it is for genuinely good security reasons. But a major part of it is that small-c compliance is necessary for large-C Compliance. Your regulator will effectively demand that you do it.</p><h2 id="why-did-falcon-run-in-kernelspace-rather-than-userspace">Why did Falcon run in kernelspace rather than userspace?</h2><p>Falcon runs in kernelspace versus userspace in part because the most straightforward way to poke its nose in other programs’ business is to simply ignore the security guarantees that operating systems give to programs running in userspace. Poking your nose in another program’s memory is generally considered somewhere between rude and forbidden-by-very-substantial-engineering-work. However, endpoint monitoring software considers that other software running on the device <em>may be there at the direction of the adversary</em>. It therefore considers that software’s comfort level with its intrusion to be a distant secondary consideration.</p><p>Another reason Falcon ran in kernelspace was, as Microsoft told <a href="https://www.wsj.com/tech/cybersecurity/microsoft-tech-outage-role-crowdstrike-50917b90">the WSJ</a>, Microsoft was forbidden by an understanding with the European Commission from firmly demoting other security software developers down to userspace. This was because Microsoft both a) wrote security software and b) necessarily always had the option of writing it in kernelspace, because Microsoft controls Windows. The European Commission has <a href="https://www.euronews.com/next/2024/07/23/european-commission-denies-responsibility-for-massive-microsoft-it-outage#:~:text=A%20European%20Commission%20spokesperson%20has,Commission%20either%20before%20or%20after" rel="noreferrer">pushed back</a> against this characterization and pointed out that This Sentence Uses Cookies To Enable Essential Essay Functionality.</p><h2 id="regulations-which-strongly-suggest-particular-software-purchases">Regulations which strongly suggest particular software purchases</h2><p>It would be an overstatement to say that the United States federal government commanded U.S. financial institutions to install CrowdStrike Falcon and thereby embed a landmine into the kernels of all their employees’ computers. Anyone saying that has no idea how banking regulation works.</p><p>Life is much more subtle than that.</p><p>The United States has many, many different banking regulators. Those regulators have some desires for their banks which rhyme heavily, and so they have banded into a club to share resources. This lets them spend their limited brainsweat budgets on things banking regulators have more individualized opinions on than simple, common banking regulatory infrastructure.</p><p>One such club is the <a href="https://www.ffiec.gov/">Federal Financial Institutions Examination Council</a>. They wrote the tgreatest crossover event of all time if your interests are a) mandatory supervisory evaluations of financial institutions and b) IT risk management: the <a href="https://www.ffiec.gov/press/pdf/ffiec_it_handbook_information_security_booklet.pdf">FFIEC Information Technology Examination Handbook's Information Security Booklet</a>.</p><p>The modal consumer of this document is probably not a Linux kernel programmer with a highly developed mental model of kernelspace versus userspace. That would be an <em>unreasonable</em> expectation for a banking supervisor. They work for a <em>banking regulator</em>, not a software company, doing <em>important supervisory work</em>, not merely implementation. Later this week they might be working on capital adequacy ratios, but for right now, they’re asking your IT team about endpoint monitoring.</p><p>The FFEITC ITEH ISB (the acronym just rolls off the tongue) is not super prescriptive about exactly what controls you, a financial institution, have to have. This is common in many regulatory environments. HIPAA, to use a contrasting example, is unusual in that it describes a control environment that you can reduce to a checklist with Required or Optional next to each of them. (HIPAA spells that second category “Addressable”, for reasons outside the scope of this essay, but which I’ll mention because I don’t want to offend other former HIPAA Compliance Officers.)</p><p>To facilitate your institution’s conversation with the examiner who drew the short straw, you will conduct a risk analysis. Well, more likely, you’ll pay a consulting firm to conduct a risk analysis. In the production function that is scaled consultancies, this means that a junior employee will open U.S. Financial Institution IT Security Risk Analysis v3-edited-final-final.docx and add important client-specific context like a) their name and b) their logo.</p><p>That document will heavily reference the ITEH, because it exists to quickly shut down the line of questioning from the examiner. If you desire a career in this field, you will phrase that as “guiding the conversation towards areas of maximum mutual interest in the cause of 'advanc[ing] the nation’s monetary, financial, and payment systems to build a stronger economy for all Americans.'” (The internal quotation is lifted from a <a href="https://archive.is/P7Zsz#selection-1405.0-1405.69" rel="noreferrer">job description</a> at the Federal Reserve.)</p><p>Your consultants are going to, when they conduct the mandatory risk analysis, give you a shopping list. Endpoint monitoring is one item on that shopping list. Why? Ask your consultant and they’ll bill you for the answer, but you can get my opinion for free and it is worth twice what you paid for it: II.C.12 Malware Mitigation.</p><p>Does the FFEITC have a hugely prescriptive view of what you should be doing for malware monitoring? Well, no:</p><blockquote>Management should implement defense-in-depth to protect, detect, and respond to malware. The institution can use many tools to block malware before it enters the environment and to detect it and respond if it is not blocked. Methods or systems that management should consider include the following: [12 bullet points which vary in specificity from whitelisting allowed programs to port monitoring to user education].</blockquote><p>But your consultants will tell you that you want a very responsive answer to II.C.12 in this report and that, since you probably do not have Google’s ability to fill floors of people doing industry-leading security research, you should just buy something which says Yeah We Do That.</p><p>CrowdStrike’s sales reps will happily tell you <a href="https://crowdstrike.com/solutions/financial-services/">Yeah We Do That</a>. This web page exists as a result of a deterministic process co-owned by the Marketing and Sales departments at a B2B software company to create industry-specific “sales enablement” collateral. As a matter of fact, if you want to give CrowdStrike your email address and job title, they will even send you a document which is not titled <a href="https://www.crowdstrike.com/resources/reports/crowdstrike-falcon-and-ffiec-compliance/">Exact Wording To Put In Your Risk Assessment Including Which Five Objectives And Seventeen Controls Purchasing This Product Will Solve For</a>.</p><p>CrowdStrike is not, strictly speaking, the only vendor that you could have installed on every computer you owned to make your regulators happy with you. But, due to vagaries of how enterprise software sales teams work, they sewed up an awful lot of government-adjacent industries. This was in part because they aggressively pursued writing the <a href="https://www.crowdstrike.com/why-crowdstrike/crowdstrike-compliance-certification/" rel="noreferrer">sort of documents</a> you need if the people who read your project plans have national security briefs.</p><p>I’m not mocking the Federal Financial Institutions Examining Council for cosplaying as having a national security brief. (Goodness knows that that happens a lot in cybersecurity... and government generally. New York <em>City</em> likes to pretend it has an <a href="https://www.nyc.gov/site/nypd/bureaus/investigative/intelligence.page" rel="noreferrer">intelligence service</a>, which is absolutely not a patronage program designed to have taxpayers fund indefinite foreign vacations with minimal actual job duties.)</p><p>But money <em>is</em> core societal infrastructure, like the power grid and transportation systems are. It would be <em>really bad</em> if hackers working for a foreign government could just <em>turn off money</em>. That would be more damaging than a conventional missile being fired at random into New York City, and we might be more constrained in responding.</p><p>And so, we ended up in a situation where we invited an <a href="https://www.crowdstrike.com/cybersecurity-101/advanced-persistent-threat-apt/">advanced persistent threat</a> into kernelspace.</p><p>It is perhaps important to point out that security professionals understand  security tools to themselves introduce security vulnerabilities. Partly, the worry is that a monoculture could have a particular weakness that could be exploited in a particular way. Partly, it is that security tools (and security personnel!) frequently have more privileges than is typical, and therefore they can be directly compromised by the adversary. This observation is fractal in systems engineering: at every level of abstraction, if your control plane gets compromised, you lose. (Control plane has a <a href="https://www.cloudflare.com/learning/network-layer/what-is-the-control-plane/">specific meaning</a> in networking but for this purpose just round it to “operating system (metaphorical) that controls your operating systems (literal).”)</p><p>CrowdStrike <a href="https://x.com/George_Kurtz/status/1814235001745027317" rel="noreferrer">maintains</a> that they do not understand it to be the case that a bad actor intentionally tried to bring down global financial infrastructure and airlines by using them as a weapon. No, CrowdStrike did that themselves, on accident, of their own volition. But this demonstrates the problem pretty clearly: if a junior employee tripping over a power cord at your company brings down computers worldwide, the bad guys have a variety of options for achieving directionally similar aims by attacking directionally similar power cords.</p><h2 id="when-money-stops-money-ing">When money stops money-ing</h2><p>I found out about the CrowdStrike vulnerability in the usual fashion: Twitter. But then my friendly local bank branch cited it (as quote the Microsoft systems issue endquote) when I was attempting to withdraw cash from the teller window.</p><p>My family purchased a duplex recently and is doing renovation prior to moving in. For complex social reasons, a thorough recitation of which would make me persona non grata across the political spectrum, engaging a sufficient number of contractors in Chicago will result in one being asked to make frequent, sizable payments in cash.</p><p>This created a minor emergency for me, because it was an other-than-minor emergency for some contractors I was working with.</p><p>Many contractors are small businesses. Many small businesses are very thinly capitalized. Many employees of small businesses are extremely dependent on receiving compensation exactly on payday and not after it. And so, while <em>many</em> people in Chicago were basically unaffected on that Friday because <em>their</em> money kept working (on mobile apps, via Venmo/Cash App, via credit cards, etc), cash-dependent people got an enormous wrench thrown into their plans.</p><p>I personally tried withdrawing cash at three financial institutions in different weight classes, as was told it was absolutely impossible (in size) at all of them, owing to the Falcon issue.</p><p>At one, I was told that I couldn’t use the tellers but could use the ATM. Unfortunately, like many customers, I was attempting to take out more cash from the ATM than I ever had before. Fortunately, their system that flags potentially fraudulent behavior will let a customer unflag themselves by responding to an instant communication from the bank. Unfortunately, the subdomain that communication directs them to runs on a server apparently protected by CrowdStrike Falcon.</p><p>It was not impossible at <em>all</em> financial institutions. I am aware of a few around Chicago which ran out of physical cash on hand at some branches, because all demand for cash on a Friday was serviced by them versus by “all of the financial institutions.” (As always happens during widespread disturbances in infrastructure, there quickly arises a shadow economy of information trading which redirects relatively sophisticated people to the places that are capable of servicing them. This happens through offline social networks since time immemorial and online social networks since we invented those. The first is probably more impactful but the second is more <em>legible</em>, so banking regulators pretend this class of issues sprang fully formed from the tech industry just in time to bring down banks last year.)</p><p>I have some knowledge of the history of comprehensive failures of financial infrastructure, and so I considered doing the traditional thing when convertibility of deposits is suspended by industry-wide issues: <a href="https://theculturetrip.com/europe/ireland/articles/how-pubs-in-ireland-literally-saved-the-countrys-economy">head to the bar</a>.</p><p>A hopefully unnecessary disclaimer: the following is historical fact despite rhyming with stereotype.</p><p>Back in 1970, there was a widespread and sustained (six months!) strike in the Irish banking sector. Workers were unable to cash paychecks because tellers refused to work. So, as an accommodation for customers, operators of pubs would cash the checks from the till, trusting that <em>eventually</em> checks drawn on the accounts of local employers would be good funds again.&nbsp;</p><p>Some publicans even cashed personal checks, backed by the swift and terrible justice of the credit reporting bureau We Control Whether You Can Ever Enjoy A Pint With Your Friends Again. This kept physical notes circulating in the economy.</p><p>As I told my contractors, to their confusion, I was unable to simply go down to the local bar to get them cash with the banks down. I don’t have sufficient credit with the operator of the local bar, as I don’t drink.</p><p>I told them, to their <em>even greater</em> confusion, that I had considered going down to the parish and buying all their cash on hand with a personal check. Churches, much like bars, have much of their weekly income come through electronic payments but still do a substantial amount of cash management through the workweek heading into the weekend. I’m much more a known quantity at church than I am at the friendly neighborhood watering hole. (Also, when attempting to workaround financial infrastructure bugs to get workers their wages, consider relying on counterparties with common knowledge of <a href="https://bible.usccb.org/bible/james/5">James 5:4</a>.)</p><p>I eventually resolved the issue in a more boring fashion: I texted someone I reasonably assumed to have cash and asked them to bring it over.</p><p>Financial infrastructure normally functions to abstract away personal ties and replace favor-swapping with legibly-priced broadly-offered services.</p><p>Thankfully, while this outage was surprisingly deep and broad, banks were <em>mostly</em> back to normal on the following Monday.</p>

        

        <div>
          <h2>Want more essays in your inbox?</h2>
          <p>I write about the intersection of tech and finance, approximately biweekly. It's free.</p>
                  </div>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Launch HN: Martin (YC S23) – Using LLMs to Make a Better Siri (125 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=41119443</link>
            <guid>41119443</guid>
            <pubDate>Wed, 31 Jul 2024 14:24:27 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=41119443">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="41119443">
      <td><span></span></td>      <td><center><a id="up_41119443" href="https://news.ycombinator.com/vote?id=41119443&amp;how=up&amp;goto=item%3Fid%3D41119443"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=41119443">Launch HN: Martin (YC S23) – Using LLMs to Make a Better Siri</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_41119443">103 points</span> by <a href="https://news.ycombinator.com/user?id=darweenist">darweenist</a> <span title="2024-07-31T14:24:27"><a href="https://news.ycombinator.com/item?id=41119443">10 hours ago</a></span> <span id="unv_41119443"></span> | <a href="https://news.ycombinator.com/hide?id=41119443&amp;goto=item%3Fid%3D41119443">hide</a> | <a href="https://hn.algolia.com/?query=Launch%20HN%3A%20Martin%20(YC%20S23)%20%E2%80%93%20Using%20LLMs%20to%20Make%20a%20Better%20Siri&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=41119443&amp;auth=14110e6749d42d88b261a6cb53208e166a436a13">favorite</a> | <a href="https://news.ycombinator.com/item?id=41119443">83&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>Hey HN! Dawson here from Martin (<a href="https://www.trymartin.com/">https://www.trymartin.com</a>). Martin is a better Siri with an LLM brain and deeper integrations with everyday apps. See our demo here (<a href="https://youtu.be/jiJdfrWurvk" rel="nofollow">https://youtu.be/jiJdfrWurvk</a>). You can talk to Martin through voice in our iOS app. You can also text it via SMS, WhatsApp, or email. Currently, Martin can manage your calendar, set reminders, find information, send you daily briefings, and have text conversations with your contacts on your behalf (from its own phone number).</p><p>I’ve been a Siri power user for a long time, mainly because I’ve always liked using voice as an interface. But, legacy voice assistants like Siri, Google Assistant, and Alexa were never well integrated enough or reliable enough to actually save time. Maybe 1 in 5 commands end up executing as smoothly as you expected, but the most useful thing they do is play a song or set an alarm. The advent of LLMs seemed like a great opportunity to push the state of the art forward a notch or two!</p><p>Our goal is to do 2 things better:</p><p>1) Deeper integrations with productivity-related apps you use every day, like calendar, email, messages, whatsApp, and soon Google Docs, Slack, and phone calls.</p><p>2) Better memory of each user based on their past conversations and integrations, so Martin can start to anticipate parameters in the user’s commands (e.g. text the guy from yesterday about the plans we made this morning)</p><p>A great way that our early users use Martin is having morning syncs and evening debriefs with the software. At the start/end of each day, they’ll have a 5-10 minute sync about their TODOs for the next day, and Martin will brief them on upcoming tasks and news they’re typically interested in.</p><p>Something else Martin does which is unlike other voice assistants is it can have full text conversations with your contacts on your behalf from its own phone number. For example, you can tell it to plan a lunch with a friend, and it can text back and forth with that friend to figure out a time and place. After the text conversation between your friend and Martin is over, Martin reports back to you via a notification and a text. You can also monitor all of its messages with your contacts in the app.</p><p>We started building Martin exactly 1 year ago, during our YC batch. It’s definitely a hard product to “complete" because of the many unsolved technical challenges, but we’re making progress step by step. First was the voice interface, which Siri still hasn’t gotten right after more than a decade. We have 2 modes: push-to-talk and handsfree. Handsfree is great for obvious reasons. We’ve gotten our latency down to only a couple seconds max for most commands, and we’ve tuned our own voice activity detection model to minimize the chance of Martin cutting you off (a common problem with voiceGPTs). But, even then, Martin may still cut you off if you pause for 3-5 seconds in the middle of a thought, so we made a push-to-talk mode. For those cases where you want to describe something in detail or just brain-dump to Martin, you might need 20-30 seconds to finish speaking. So just hold down, speak, and release when you’re done—like a walkie talkie.</p><p>We’ve also had to tackle a very long tail of integrations, and we want to do each one well. For example, when we launched Google calendar, we wanted to make sure you could add a Google Meet link, invite your contacts to the events, and access secondary calendars. And, you should be able to say things like “set reminders leading up to the event” or “text Eric the details of this event.” So, we pretty much release one new major integration every month.</p><p>Finally, there’s the problem of personalization / LLM memory, which is still very unsolved. From each conversation that a user has with their Martin, we try to infer what the user is busy with, worried about, or looking forward to, so in their next “morning sync” or “evening debrief”, Martin can proactively suggest to-dos or goals/topics to discuss with the user. Right now, we use a few different LLMs and many chain-of-thought steps to extract clues from each conversation and have Martin “reflect” periodically to build its memory. But, with all that said we still have a lot of work to do here, and this is just a start!</p><p>You can try Martin by going to our website (<a href="https://www.trymartin.com/">https://www.trymartin.com</a>) and starting a 7 day free trial. Once you start your trial, you’ll get an access code emailed to you along with the download link for our iOS app. After you enter your access code into the app, you can integrate your calendar, contacts, etc. If you find Martin useful after the trial, we charge our early users (who are generally productivity gurus and prosumers with multiple AI subscriptions) a $30/month subscription.</p><p>We can’t wait to hear your thoughts. Any cool experiences with Siri, things you wish a voice assistant could do, or ideas about LLM memory, tool calling, etc. - I’d love to discuss any of these topics with you!</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How great was the Great Oxidation Event? (187 pts)]]></title>
            <link>https://eos.org/science-updates/how-great-was-the-great-oxidation-event</link>
            <guid>41119080</guid>
            <pubDate>Wed, 31 Jul 2024 13:40:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eos.org/science-updates/how-great-was-the-great-oxidation-event">https://eos.org/science-updates/how-great-was-the-great-oxidation-event</a>, See on <a href="https://news.ycombinator.com/item?id=41119080">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-225187">
	<div>

		
		
<p>If water is the key to life, then oxygen is the key to animal life. All animals breathe oxygen. Despite decades of research, however, scientists still don’t know when Earth’s atmosphere held enough free oxygen to support the planet’s early animals. Most geologists agree that oxygen first accumulated in the atmosphere <a href="https://eos.org/articles/early-life-learned-to-love-oxygen-long-before-it-was-cool" target="_blank" rel="noopener">around 2.4 billion years ago</a>. But they don’t agree on how much there was at that time or if it was enough for animals to thrive.</p>

<p>My colleagues and I recently found new clues to help answer these questions from an unlikely source: the acidic, metal-rich waters of Rio Tinto in southern Spain. The composition of these waters is considered extreme today, yet the sort of acid rock drainage that causes these conditions was widespread long ago, when newly available atmospheric oxygen first began interacting with sulfur minerals on land.</p>

<p>In our work, we showed that the chemistry occurring in these acidic waters can reconcile seemingly contradictory estimates of past levels of breathable oxygen determined from ancient sediments. Our data support growing evidence that enough oxygen was present for animals to have evolved nearly 2 billion years before they burst onto the scene.</p>

<h3>Earth’s First “Great Oxidation”</h3>

<figure><blockquote><p><em>When the single-celled ancestors of plants learned to combine carbon dioxide and water, these early innovators spat out a waste product formerly absent from their environment: free molecular oxygen.</em></p></blockquote></figure>

<p>A critical transition in our planet’s history occurred when the single-celled ancestors of plants learned to combine carbon dioxide and water—two chemicals found everywhere on Earth—to make their cells and produce energy. These early innovators spat out a waste product formerly absent from their environment: free molecular oxygen (O<sub>2</sub>). This highly reactive gas began to run rampant on Earth’s surface, leaving telltale signs of its activity in minerals and sediments.</p>

<p>It’s been more than 5 decades since scientists began deciphering these signs from the geologic record. Over that time, most scientists have come to agree that O<sub>2</sub> first reached appreciable concentrations in Earth’s atmosphere roughly 2.4 billion years ago, during the Great Oxidation Event (GOE) [<a href="https://doi.org/10.1016/B978-0-08-095975-7.01304-8" target="_blank" rel="noopener"><em>Farquhar et al.</em></a>, 2014]. Geologists who first described the GOE estimated that oxygen levels rose from near zero to about 10%–40% of what they are today (oxygen currently makes up 21% of the air we breathe). They also proposed that atmospheric O<sub>2</sub> remained at these levels until it reached modern levels more than 1.5 billion years later. This extended interval roughly coincided with the third and longest of the four geologic eons of Earth’s history, the Proterozoic.</p>

<p>Other researchers have since challenged those original estimates of Proterozoic O<sub>2</sub>. They suggest that oxygen concentrations rose to less than 0.1% of today’s level during the GOE and remained there, with only occasional short-term increases, through the ensuing eon. This substantial distinction—10% or more versus less than 0.1%—bears critically on the role of oxygen in animal evolution. Various forms of animal life require different minimum oxygen levels for survival, but even primitive animals like sponges require at least 0.25% of today’s atmospheric oxygen levels to metabolize [<a href="https://doi.org/10.1111/gbi.12382" target="_blank" rel="noopener"><em>Cole et al.</em></a>, 2020].</p>


<p>In the fossil record, paleontologists have found the oldest undisputed fossil eukaryotes, the single-celled precursors to animals, in marine sediments that accumulated about 1.7 billion years ago [<a href="https://doi.org/10.1126/sciadv.1603076" target="_blank" rel="noopener"><em>Knoll and Nowak</em></a>, 2017]. Despite the undisputed antiquity of eukaryotes, fossils of large multicellular life-forms representing putative animals don’t appear until more than a billion years later in the 0.57-billion-year-old Ediacaran biota, and undisputed animals don’t appear until the Cambrian period about 0.54 billion years ago.</p>

<figure><img decoding="async" width="780" height="384" src="https://i0.wp.com/eos.org/wp-content/uploads/2024/07/ediacaran-model-museum-display.jpg?resize=780%2C384&amp;ssl=1" alt="A view of a museum display reproducing frond-shaped life forms from the Ediacaran period." srcset="https://i0.wp.com/eos.org/wp-content/uploads/2024/07/ediacaran-model-museum-display.jpg?resize=1024%2C504&amp;ssl=1 1024w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/ediacaran-model-museum-display.jpg?resize=480%2C236&amp;ssl=1 480w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/ediacaran-model-museum-display.jpg?resize=768%2C378&amp;ssl=1 768w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/ediacaran-model-museum-display.jpg?resize=400%2C197&amp;ssl=1 400w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/ediacaran-model-museum-display.jpg?w=1200&amp;ssl=1 1200w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/ediacaran-model-museum-display-1024x504.jpg?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px" data-recalc-dims="1"><figcaption>Some of the earliest putative animals found in the fossil record are represented in this reproduction of life from the Ediacaran period (635–541 million years ago) at the Smithsonian National Museum of Natural History in Washington, D.C. Credit: <a href="https://commons.wikimedia.org/wiki/File:Ediacaran_ecosystem_diorama_NMNH.jpg" target="_blank" rel="noopener">Ryan Schwark/Wikimedia Commons</a>, <a href="https://creativecommons.org/publicdomain/zero/1.0/legalcode.en" target="_blank" rel="noopener">CC0 1.0 Universal</a></figcaption></figure>

<p>Paleontologists have also described a pronounced expansion of fossil eukaryotes around 0.8 billion years ago, coinciding with when atmospheric O<sub>2</sub> <a href="https://eos.org/articles/longer-days-likely-boosted-earths-early-oxygen" target="_blank" rel="noopener">reached near modern levels</a>. Some researchers hypothesize that this rise in O<sub>2</sub> allowed these early eukaryotes to diversify and eventually evolve into multicellular animals. But this simple cause-effect scenario relies heavily on debated claims that oxygen remained too low to sustain animal life for roughly 1.6 billion years prior.</p>

<h3>Controversial Clues from Chromium</h3>

<figure><blockquote><p>One problem with attempts to resolve the history of Earth’s breathable oxygen is that the data researchers use to estimate past levels have provided conflicting results.</p></blockquote></figure>

<p>One problem with attempts to resolve the history of Earth’s breathable oxygen is that the data researchers use to estimate past levels have provided conflicting results. The atmosphere doesn’t directly fossilize, so geochemists rely on indirect traces, or proxies, to tease out the gases it contained at different times.</p>

<p>One proxy that researchers have widely employed to estimate atmospheric O<sub>2</sub> levels in the Proterozoic involves the heavy metal chromium [<a href="https://doi.org/10.1016/j.chemgeo.2020.119570" target="_blank" rel="noopener"><em>Wei et al.</em></a>, 2020]. Like many elements, not all chromium atoms are created equal. Although all have 24 protons in their nuclei, they can have different numbers of neutrons; in other words, different isotopes of chromium exist.</p>

<p>These different chromium isotopes react at different rates, leading to fractionation, or a change in their ratios, when they undergo chemical reactions in the environment. For example, chromium isotopes are fractionated when they react with manganese oxide minerals. This reaction preferentially releases heavier isotopes of chromium into natural waters that become more concentrated in sediments as a result.</p>

<figure><blockquote><p>Scientists want to resolve these disparate scenarios to understand oxygen’s role in animal evolution on Earth and potentially on other planets too.</p></blockquote></figure>

<p>Manganese oxide minerals such as birnessite and todorokite are very common in modern environments, for example, in soils and fluvial settings and on the seafloor. Researchers have estimated that reactions with these minerals fractionate chromium isotopes when free O<sub>2</sub> is present at concentrations above 0.1% of modern atmospheric levels [<em><a href="https://doi.org/10.1126/science.1258410" target="_blank" rel="noopener">Planavsky et al.</a></em>, 2014]. So some scientists have argued that chromium isotope fractionation in ancient rocks provides an “oxygen signal,” indicating when O<sub>2</sub> exceeded 0.1% of current levels. They have also claimed the corollary, that a lack of chromium isotope fractionation in rocks indicates that oxygen levels at the time the rocks formed were below that threshold.</p>

<p>Geochemists who first measured chromium isotopes in Proterozoic rocks found that large chromium isotope fractionations didn’t appear until 0.8 billion years ago, suggesting O<sub>2</sub> levels were too low to support animals until late in the Proterozoic [<em><a href="https://doi.org/10.1126/science.1258410" target="_blank" rel="noopener">Planavsky et al.</a></em>, 2014]. However, researchers recently found large fractionations in chromium isotopes preserved in ancient soils and marine rocks as far back as 1.9 billion years ago. These researchers contended that Proterozoic O<sub>2</sub> levels were at least intermittently high enough for animals to evolve well before their first occurrence in the fossil record [<a href="https://doi.org/10.1038/s41467-018-05263-9" target="_blank" rel="noopener"><em>Canfield et al.</em></a>, 2018]. Scientists want to resolve these disparate scenarios to understand oxygen’s role in animal evolution on Earth and potentially on other planets too.</p>

<h3>Going to the Extreme</h3>

<p>Spain’s Rio Tinto flows roughly 100 kilometers through the southwest of the country, stained blood red from its headwaters north of the town of Nerva in the Sierra Moreno to its mouth at the Ria of Huelva estuary, where it spills into the Atlantic Ocean. Mining activities over millennia in the Iberian Pyrite Belt, one of the largest hydrothermal ore deposits in the world, have exposed large piles of the iron sulfide mineral pyrite in the headwaters of the river to attack by atmospheric O<sub>2</sub> at Earth’s surface. When pyrite reacts with O<sub>2</sub>, it produces sulfuric acid, which is responsible for the river’s very low pH of 2 (similar to the pH of lemon juice or stomach acid). The reaction and resulting acidity also release iron, which gives rise to the river’s characteristic red tint, and other heavy metals—including chromium—from surrounding rocks.</p>

<p>Today, Rio Tinto’s waters are an extreme environment. But such conditions were once far more common. Scientists have proposed that as a result of the GOE, newly liberated O<sub>2</sub> in the atmosphere attacked extensive pyrite deposits on the land surface. Like today’s rock weathering in southern Spain, this chemical attack released heavy metals and sulfuric acid, producing widespread acid rock drainage [<em><a href="https://doi.org/10.1038/nature10511" target="_blank" rel="noopener">Konhauser et al.</a></em>, 2011]. In the aftermath of the GOE, it’s likely that rivers like Rio Tinto were the norm rather than the exception.</p>

<figure><blockquote><p>Are scientists today similarly misinterpreting the lack of chromium isotope fractionation in rocks older than 0.8 billion years?</p></blockquote></figure>

<p>Despite the preponderance of acid rock drainage after the GOE, geochemists had not looked into how chromium isotopes fractionate in acidic natural waters. After nearly a decade of teaching geochemistry at Rio Tinto, I knew manganese oxides rarely form in similarly acidic waters. And I figured if manganese oxides are necessary for imparting the chromium isotopic oxygen signal into rocks, then a lack of these minerals might prevent the formation of the signal, even in today’s high-O<sub>2</sub> atmosphere.</p>

<p>To investigate this hypothesis, I teamed up with my longtime friend and colleague Kate Scheiderich, who was then at the U.S. Geological Survey and had set up a lab to measure chromium isotopes. Returning to Rio Tinto, I collected samples of river water, rocks, and sediment from different locations along the bank of the river. Then I shipped them to Kate’s lab for her and another colleague to analyze.</p>

<p>We found that the acidic headwaters of the Rio Tinto were, indeed, leaching chromium from the surrounding rocks, then carrying it downstream to the Atlantic, where it accumulated in sediments around the estuary. However, the river was simply too acidic for manganese oxide minerals to form, despite flowing in an atmosphere with 21% oxygen. The analytical results in our study confirmed that without any manganese oxides to react with, chromium isotopes in the estuary sediments remained unfractionated and the chromium isotope values were identical to those in the source rocks they came from upstream (Figure 1).</p>
<div>
<figure data-wp-context="{&quot;uploadedSrc&quot;:&quot;https:\/\/eos.org\/wp-content\/uploads\/2024\/07\/chromium-isotope-ratios-water-sediments.png&quot;,&quot;figureClassNames&quot;:&quot;alignright size-large&quot;,&quot;figureStyles&quot;:null,&quot;imgClassNames&quot;:&quot;wp-image-225193&quot;,&quot;imgStyles&quot;:null,&quot;targetWidth&quot;:1200,&quot;targetHeight&quot;:702,&quot;scaleAttr&quot;:false,&quot;ariaLabel&quot;:&quot;Enlarge image: Bar plot showing the ranges in chromium isotope ratios measured from various sources.&quot;,&quot;alt&quot;:&quot;Bar plot showing the ranges in chromium isotope ratios measured from various sources.&quot;}" data-wp-interactive="core/image"><img decoding="async" width="780" height="456" data-wp-init="callbacks.setButtonStyles" data-wp-on-async--click="actions.showLightbox" data-wp-on-async--load="callbacks.setButtonStyles" data-wp-on-async-window--resize="callbacks.setButtonStyles" src="https://i0.wp.com/eos.org/wp-content/uploads/2024/07/chromium-isotope-ratios-water-sediments.png?resize=780%2C456&amp;ssl=1" alt="Bar plot showing the ranges in chromium isotope ratios measured from various sources." srcset="https://i0.wp.com/eos.org/wp-content/uploads/2024/07/chromium-isotope-ratios-water-sediments.png?resize=1024%2C599&amp;ssl=1 1024w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/chromium-isotope-ratios-water-sediments.png?resize=480%2C281&amp;ssl=1 480w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/chromium-isotope-ratios-water-sediments.png?resize=768%2C449&amp;ssl=1 768w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/chromium-isotope-ratios-water-sediments.png?resize=400%2C234&amp;ssl=1 400w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/chromium-isotope-ratios-water-sediments.png?w=1200&amp;ssl=1 1200w, https://i0.wp.com/eos.org/wp-content/uploads/2024/07/chromium-isotope-ratios-water-sediments-1024x599.png?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px" data-recalc-dims="1"><figcaption>Fig. 1. Most sediments and waters today show a wide spread in chromium isotope ratios because the chromium they contain has been fractionated through reactions with manganese oxides. In contrast, because manganese oxides do not form in acidic waters, sediments from the Rio Tinto estuary show a very small spread in chromium isotope ratios that centers around a δ<sup>53</sup>Cr of 0‰, similar to the range measured in rocks supplying chromium to the river. The range of chromium isotope ratios measured in rocks older than 0.8 billion years is also relatively narrow and centers around a δ<sup>53</sup>Cr of 0‰, indicating that little chromium isotope fractionation is evident in these rocks. δ<sup>53</sup>Cr (in parts per thousand, ‰) represents depletion (negative values) or enrichment (positive values) of chromium-53 relative to chromium-52 in a sample compared to a standard reference material; δ<sup>53</sup>Cr = 1,000 × {[(<sup>53</sup>Cr/<sup>52</sup>Cr<sub>sample</sub>)/(<sup>53</sup>Cr/<sup>52</sup>Cr<sub>standard</sub>)] − 1}.</figcaption></figure></div>
<p>Millions of years from now, after these estuarine sediments have lithified into marine rocks, future geochemists—analyzing the rocks with the same techniques and understanding of the chromium isotope oxygen signal scientists have employed until now—might thus mistakenly infer that our current air was unbreathable. Are scientists today similarly misinterpreting the lack of chromium isotope fractionation in rocks older than 0.8 billion years?</p>

<p>We proposed that the prevalence of acid rock drainage on Proterozoic continents could have hindered development of the chromium isotope oxygen signal until 0.8 billion years ago (when, perhaps, most acid rock drainage had been consumed). This idea reconciles seemingly contradictory chromium isotope data and suggests O<sub>2</sub> in the atmosphere could have been elevated above 0.1% of modern levels far earlier in the Proterozoic [<em><a href="https://doi.org/10.1016/j.gca.2023.05.024" target="_blank" rel="noopener">Scheiderich et al.</a></em>, 2023].</p>

<h3>Why Did Animals Wait?</h3>

<p>As scientists increasingly focus on oxygen in the Proterozoic, more geochemical estimates [e.g., <a href="https://doi.org/10.1038/s41561-020-0558-5" target="_blank" rel="noopener"><em>Mänd et al.</em></a>, 2020] and atmospheric models [e.g., <a href="https://doi.org/10.1016/j.epsl.2021.116818" target="_blank" rel="noopener"><em>Gregory et al</em></a><em>.</em>, 2021] are suggesting that atmospheric O<sub>2</sub> concentrations were high enough for animals to have thrived more than 2 billion years before the early Cambrian. So why did it take so long for them to appear?</p>

<p>One possible explanation is that oxygen concentrations in the Proterozoic ocean fluctuated too much. Most scientists agree that shallow marine habitats, likely hotbeds for evolution, had oxygen levels high enough to support eukaryotes throughout the Proterozoic. But oxygen-free waters from the deep ocean routinely circulated upward, possibly diluting the oxygen oases at the surface. The instability of back-and-forth swings in oxygen in the surface ocean could have posed a big challenge to the evolution of early animals.</p>

<p>Some scientists suggest famine could also have held early animals back. The same protoplants that produced oxygen in the Proterozoic also formed the base of the food chain, so researchers have inferred that low oxygen and a low food supply went hand in hand. Animals could also have been starved for nutrients essential to life, such as nitrogen, which is found in nearly all biomolecules, including DNA, RNA, and proteins. Many geochemists have suggested nitrogen was scarce in the Proterozoic, when denitrifying microbes first started converting oxidized nitrogen (e.g., nitrate) into forms that animals can’t use (e.g., nitrogen gas).</p>

<p>Other researchers have proposed developmental hypotheses for the lag in animal evolution. They point out that it could have taken billions of years for the core set of genes found in all multicellular life to evolve in eukaryotes and that only after those genes emerged could animal life diversify greatly. Or perhaps, environmental and biological hurdles together slowed animal evolution.</p>

<p>For now, more answers to why animals only debuted at the end of the Proterozoic will have to wait. Whatever the explanations, recent research is seemingly making clear that it wasn’t for want of oxygen.</p>

<h3>References</h3>

<p>Canfield, D. E., et al. (2018), Highly fractionated chromium isotopes in Mesoproterozoic-aged shales and atmospheric oxygen, <em>Nat. Commun.</em>, <em>9</em>(1), 2871, <a href="https://doi.org/10.1038/s41467-018-05263-9" target="_blank" rel="noopener">https://doi.org/10.1038/s41467-018-05263-9</a>.</p>

<p>Cole, D. B., et al. (2020), On the co‐evolution of surface oxygen levels and animals, <em>Geobiology</em>, <em>18</em>(3), 260–281, <a href="https://doi.org/10.1111/gbi.12382" target="_blank" rel="noopener">https://doi.org/10.1111/gbi.12382</a>.</p>

<p>Farquhar, J., A. L. Zerkle, and A. Bekker (2014), Geologic and geochemical constraints on Earth’s early atmosphere, in <em>Treatise on Geochemistry</em>, 2nd ed., pp. 91–138, Elsevier, Amsterdam, <a href="https://doi.org/10.1016/B978-0-08-095975-7.01304-8" target="_blank" rel="noopener">https://doi.org/10.1016/B978-0-08-095975-7.01304-8</a>.</p>

<p>Gregory, B. S., M. W. Claire, and S. Rugheimer (2021), Photochemical modelling of atmospheric oxygen levels confirms two stable states, <em>Earth Planet. Sci. Lett.</em>, <em>561</em>, 116818, <a href="https://doi.org/10.1016/j.epsl.2021.116818" target="_blank" rel="noopener">https://doi.org/10.1016/j.epsl.2021.116818</a>.</p>

<p>Knoll, A. H., and M. A. Nowak (2017), The timetable of evolution, <em>Sci. Adv.</em>, <em>3</em>, e1603076, <a href="https://doi.org/10.1126/sciadv.1603076" target="_blank" rel="noopener">https://doi.org/10.1126/sciadv.1603076</a>.</p>

<p>Konhauser, K. O., et al. (2011), Aerobic bacterial pyrite oxidation and acid rock drainage during the Great Oxidation Event, <em>Nature</em>, <em>478</em>(7369), 369–373, <a href="https://doi.org/10.1038/nature10511" target="_blank" rel="noopener">https://doi.org/10.1038/nature10511</a>.</p>

<p>Mänd, K., et al. (2020), Palaeoproterozoic oxygenated oceans following the Lomagundi–Jatuli event, <em>Nat. Geosci</em>., <em>13</em>(4), 302–306, <a href="https://doi.org/10.1038/s41561-020-0558-5" target="_blank" rel="noopener">https://doi.org/10.1038/s41561-020-0558-5</a>.</p>

<p>Planavsky, N. J., et al. (2014), Low mid-Proterozoic atmospheric oxygen levels and the delayed rise of animals, <em>Science</em>, <em>346</em>(6209), 635–638, <a href="https://doi.org/10.1126/science.1258410" target="_blank" rel="noopener">https://doi.org/10.1126/science.1258410</a>.</p>

<p>Scheiderich, K., A. L. Zerkle, and D. Damby (2023), Chromium isotopes in an acidic fluvial system: Implications for modern and ancient Cr isotope records, <em>Geochim. Cosmochim. Acta</em>, <em>354</em>, 123–145, <a href="https://doi.org/10.1016/j.gca.2023.05.024" target="_blank" rel="noopener">https://doi.org/10.1016/j.gca.2023.05.024</a>.</p>

<p>Wei, W., et al. (2020), Biogeochemical cycle of chromium isotopes at the modern Earth’s surface and its applications as a paleo-environment proxy, <em>Chem. Geol.</em>, <em>541</em>, 119570, <a href="https://doi.org/10.1016/j.chemgeo.2020.119570" target="_blank" rel="noopener">https://doi.org/10.1016/j.chemgeo.2020.119570</a>.</p>

<h3>Author Information</h3>

<p>Aubrey Zerkle (<a href="mailto:aubrey.zerkle@bmsis.org" target="_blank" rel="noopener">aubrey.zerkle@bmsis.org</a>), Blue Marble Space Institute of Science, Seattle, Wash.</p>

<h5><strong>Citation:</strong> Zerkle, A. (2024), How great was the “Great Oxidation Event”?, <em>Eos, 105, </em><a href="https://doi.org/10.1029/2024EO240313" target="_blank" rel="noopener">https://doi.org/10.1029/2024EO240313</a>. Published on 30 July 2024.</h5>

<h6><strong>Text © 2024. The authors.&nbsp;<a href="https://creativecommons.org/licenses/by-nc-nd/3.0/us/" target="_blank" rel="noreferrer noopener">CC BY-NC-ND 3.0</a></strong><br><strong>Except where otherwise noted, images are subject to copyright. Any reuse without express permission from the copyright owner is prohibited.</strong></h6>

	</div><!-- .entry-content -->

	<!-- .entry-footer -->

	
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using the term 'AI' in product descriptions reduces purchase intentions (103 pts)]]></title>
            <link>https://news.wsu.edu/press-release/2024/07/30/using-the-term-artificial-intelligence-in-product-descriptions-reduces-purchase-intentions/</link>
            <guid>41118844</guid>
            <pubDate>Wed, 31 Jul 2024 13:01:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.wsu.edu/press-release/2024/07/30/using-the-term-artificial-intelligence-in-product-descriptions-reduces-purchase-intentions/">https://news.wsu.edu/press-release/2024/07/30/using-the-term-artificial-intelligence-in-product-descriptions-reduces-purchase-intentions/</a>, See on <a href="https://news.ycombinator.com/item?id=41118844">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
<p>PULLMAN, Wash. – Companies may unintentionally hurt their sales by including the words “artificial intelligence” when describing their offerings that use the technology, according to a study led by Washington State University researchers.</p>



<p>In the study, published in the <a href="https://www.tandfonline.com/doi/full/10.1080/19368623.2024.2368040">Journal of Hospitality Marketing &amp; Management</a>, researchers conducted experimental surveys with more than 1,000 adults in the U.S. to evaluate the relationship between AI disclosure and consumer behavior.</p>



<p>The findings consistently showed products described as using artificial intelligence were less popular, according to <a href="https://www.linkedin.com/in/cicekmesut/">Mesut Cicek</a>, clinical assistant professor of marketing and lead author of the study.</p>



<p>“When AI is mentioned, it tends to lower emotional trust, which in turn decreases purchase intentions,” he said. “We found emotional trust plays a critical role in how consumers perceive AI-powered products.”</p>



<p>In the experiments, the researchers included questions and descriptions across diverse product and service categories. For example, in one experiment, participants were presented with identical descriptions of smart televisions, the only difference being the term “artificial intelligence” was included for one group and omitted for the other. The group that saw AI included in the product description indicated they were less likely to purchase the television.</p>



<p>Researchers also discovered that negative response to AI disclosure was even stronger for “high-risk” products and services, those which people commonly feel more uncertain or anxious about buying, such as expensive electronics, medical devices or financial services. Because failure carries more potential risk, which may include monetary loss or danger to physical safety, mentioning AI for these types of descriptions may make consumers more wary and less likely to purchase, according to Cicek.</p>



<p>“We tested the effect across eight different product and service categories, and the results were all the same: it’s a disadvantage to include those kinds of terms in the product descriptions,” Cicek said.</p>



<p>Cicek said the findings provide valuable insights for companies.</p>



<p>“Marketers should carefully consider how they present AI in their product descriptions or develop strategies to increase emotional trust. Emphasizing AI may not always be beneficial, particularly for high-risk products. Focus on describing the features or benefits and avoid the AI buzzwords,” he said. In addition to Cicek, the study included co-authors Dogan Gursoy, professor of hospitality at WSU, and Lu Lu, associate professor at Temple University’s Fox School of Business and Management.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cargo Cult Science (1974) (103 pts)]]></title>
            <link>https://fermatslibrary.com/s/cargo-cult-science</link>
            <guid>41116813</guid>
            <pubDate>Wed, 31 Jul 2024 06:26:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fermatslibrary.com/s/cargo-cult-science">https://fermatslibrary.com/s/cargo-cult-science</a>, See on <a href="https://news.ycombinator.com/item?id=41116813">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-key="7a4ae1e2" id="page-content-wrapper">

<p>
Your pituitary gland is a small, pea-sized gland located at the bas...
</p>

<p>
### PSI Phenomena
PSI (Ψ) phenomena refer to experiences and abili...
</p>

<p>
Uri Geller, born in 1946 in Tel Aviv, is an Israeli-British perform...
</p>

<p>
"nothing really worked": These are the type of comments that always...
</p>

<p>
### ESP - Extrasensory Perception
ESP, or Extrasensory Perception,...
</p>

<p>
Feynman conducted several personal experiments with altered states ...
</p>

<p>
Esalen Institute, founded in 1962 by two Stanford graduates (Michae...
</p>

<p>
Cargo cults were real phenomena that emerged in Melanesian islands ...
</p>

<p>
### Millikan's oil drop experiment
Robert Millikan's oil drop expe...
</p>

<p>
Richard Feynman was at Cornell University from 1945 to 1950 as an a...
</p>























</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rustgo: Calling Rust from Go with near-zero overhead (2017) (180 pts)]]></title>
            <link>https://words.filippo.io/rustgo/</link>
            <guid>41116639</guid>
            <pubDate>Wed, 31 Jul 2024 05:43:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://words.filippo.io/rustgo/">https://words.filippo.io/rustgo/</a>, See on <a href="https://news.ycombinator.com/item?id=41116639">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
            <p>
[<a href="https://habrahabr.ru/post/337348/?ref=words.filippo.io">русский</a><!-- — 日本語]-->]
</p>
<p>Go has good support for calling into assembly, and a lot of the fast cryptographic code in the stdlib is carefully optimized assembly, bringing speedups of over 20 times.</p>
<p>However, writing assembly code is hard, reviewing it is possibly harder, and <a href="https://groups.google.com/forum/?ref=words.filippo.io#!topic/golang-announce/B5ww0iFt1_Q">cryptography is unforgiving</a>. Wouldn't it be nice if we could write these hot functions in a higher level language?</p>
<p>This post is the story of a slightly-less-than-sane experiment to call Rust code from Go fast enough to replace assembly. No need to know Rust, or compiler internals, but knowing what a linker is would help.</p>
<blockquote>
<p>Hello, readers from the future! In the seven years since writing this a couple things changed, but note that this was always a fun technical exploration, not a production guide.</p>
<p>If you're looking for <em>serious</em> ways to call Rust from Go, know that cgo these days <a href="https://shane.ai/posts/cgo-performance-in-go1.21/?ref=words.filippo.io">is faster</a> and <a href="https://github.com/golang/go/issues/56378?ref=words.filippo.io">is still getting faster</a>. There are also some experimental cgo-less alternatives, like <a href="https://github.com/ebitengine/purego?ref=words.filippo.io">purego</a> and <a href="https://wazero.io/?ref=words.filippo.io">wazero</a>. I toyed for years with the idea of using Wasm for cross-platform Go FFI withg better DX. I admit I even used a tecnique similar to this in the standard library, to <a href="https://go-review.googlesource.com/c/go/+/227037?ref=words.filippo.io">invoke the macOS X.509 verifier</a>.</p>
<p>As for me, I gave <a href="https://www.youtube.com/watch?v=eymMKjymgGA&amp;list=PLwiyx1dc3P2KWbISzXf3T63_fenq7sOoL&amp;index=10&amp;t=227&amp;ref=words.filippo.io">a talk</a> about this at a Go conference wearing a (freshly printed) Rust Evangelism Strike Force t-shirt. That kind of landed me a job on the Go team at Google, which I left to <a href="https://words.filippo.io/geomys/">become an independent Go maintainer</a>.</p>
<p>The fight against cryptographic assembly continues, but now with <a href="https://go.dev/wiki/AssemblyPolicy?ref=words.filippo.io">strict policies</a> and <a href="https://github.com/mmcloughlin/avo?ref=words.filippo.io">dedicated generators</a>. Just yesterday I [livestreamed a benchmarking session to replace some P-256 curve assembly] with formally verified Go code.</p>
</blockquote>
<h2 id="why-rust">Why Rust</h2>
<p>I'll be upfront: I don't know Rust, and don't feel compelled to do my day-to-day programming in it. However, I know Rust is a very tweakable and optimizable language, while still more readable than assembly. (After all, everything is more readable than assembly!)</p>
<p>Go strives to find defaults that are good for its core use cases, and only accepts features that are fast enough to be enabled by default, in a constant and successful fight against knobs. I love it for that. But for what we are doing today we need a language that won't flinch when asked to generate stack-only functions with manually hinted away safety checks.</p>
<p>So if there's a language that we might be able to constrain enough to behave like assembly, and to optimize enough to be as useful as assembly, it might be Rust.</p>
<p>Finally, Rust is safe, actively developed, and not least, there's already a good ecosystem of high-performance Rust cryptography code to tap into.</p>
<h2 id="why-not-cgo">Why not cgo</h2>
<p>Go has a <a href="https://en.wikipedia.org/wiki/Foreign_function_interface?ref=words.filippo.io">Foreign Function Interface</a>, <em>cgo</em>. <a href="https://golang.org/cmd/cgo/?ref=words.filippo.io">cgo</a> allows Go programs to call C functions in the most natural way possible—which is unfortunately not very natural at all. (I know <a href="https://speakerdeck.com/filosottile/from-cgo-back-to-go-gophercon-2016?ref=words.filippo.io">more than I'd like to about cgo</a>, and I can tell you <a href="https://dave.cheney.net/2016/01/18/cgo-is-not-go?ref=words.filippo.io">it's not fun</a>.)</p>
<p>By using the C <a href="https://en.wikipedia.org/wiki/Application_binary_interface?ref=words.filippo.io">ABI</a> as <a href="https://en.wikipedia.org/wiki/Lingua_franca?ref=words.filippo.io">lingua franca</a> of FFIs, we can call anything from anything: Rust can compile into a library exposing the C ABI, and cgo can use that. It's awkward, but it works.</p>
<p>We can even use reverse-cgo to build Go into a C library and call it from random languages, like <a href="https://blog.filippo.io/building-python-modules-with-go-1-5/?ref=words.filippo.io">I did with Python as a stunt</a>. (It was a stunt folks, stop taking me seriously.)</p>
<p>But cgo does a lot of things to enable that bit of Go naturalness it provides: it will setup a whole stack for C to live in, it makes defer calls to prepare for a panic in a Go callback... this <s>could be</s> will be a whole post of its own.</p>
<p>As a result, the performance cost of each cgo call is way too high for the use case we are thinking about—<em>small hot functions</em>.</p>
<h2 id="linking-it-together">Linking it together</h2>
<p>So here's the idea: if we have Rust code that is as constrained as assembly, we should be able to use it <strong>just like assembly</strong>, and call straight into it. Maybe with a thin layer of glue.</p>
<p>We don't have to work at the <a href="https://idea.popcount.org/2013-07-24-ir-is-better-than-assembly/?ref=words.filippo.io">IR</a> level: the Go compiler converts both code and high-level assembly into machine code before linking <a href="https://talks.golang.org/2016/asm.slide?ref=words.filippo.io">since Go 1.3</a>.</p>
<p>This is confirmed by the existence of "<a href="https://docs.google.com/document/d/1nr-TQHw_er6GOQRsF6T43GGhFDelrAP0NqSS_00RgZQ/preview?ref=words.filippo.io">external linking</a>", where the system linker is used to put together a Go program. It's how cgo works, too: it compiles C with the C compiler, Go with the Go compiler, and links it all together with <code>clang</code> or <code>gcc</code>. We can even pass flags to the linker with <code>CGO_LDFLAGS</code>.</p>
<p>Underneath all the safety features of cgo, we surely find a cross-language function call, after all.</p>
<p>It would be nice if we could figure out how to do this without patching the compiler, though. First, let's figure out how to link a Go program with a Rust archive.</p>
<p>I could not find a decent way to link against a foreign blob with <code>go build</code> (why should there be one?) except using <code>#cgo</code> directives. However, invoking cgo <a href="https://github.com/golang/go/issues/19448?ref=words.filippo.io">makes <code>.s</code> files go to the C compiler instead of the Go one</a>, and my friends, we <em>will</em> need Go assembly.</p>
<p>Thankfully <a href="https://golang.org/pkg/go/build/?ref=words.filippo.io">go/build</a> is nothing but a frontend! Go offers a set of low level tools to <a href="https://golang.org/cmd/compile/?ref=words.filippo.io">compile</a> and <a href="https://golang.org/cmd/link/?ref=words.filippo.io">link</a> programs, <code>go build</code> just collects files and invokes those tools. We can follow what it does by using the <code>-x</code> flag.</p>
<p>I built this small Makefile by following a <code>-x -ldflags "-v -linkmode=external '-extldflags=-v'"</code> invocation of a cgo build.</p>
<pre><code>rustgo: rustgo.a
        go tool link -o rustgo -extld clang -buildmode exe -buildid b01dca11ab1e -linkmode external -v rustgo.a

rustgo.a: hello.go hello.o
        go tool compile -o rustgo.a -p main -buildid b01dca11ab1e -pack hello.go
        go tool pack r rustgo.a hello.o

hello.o: hello.s
        go tool asm -I "$(shell go env GOROOT)/pkg/include" -D GOOS_darwin -D GOARCH_amd64 -o hello.o hello.s
</code></pre>
<p>This compiles a simple main package composed of a Go file (<code>hello.go</code>) and a Go assembly file (<code>hello.s</code>).</p>
<p>Now, if we want to link in a Rust object we first build it as a static library...</p>
<pre><code>libhello.a: hello.rs
        rustc -g -O --crate-type staticlib hello.rs
</code></pre>
<p>... and then just tell the external linker to link it together.</p>
<pre><code>rustgo: rustgo.a libhello.a
        go tool link -o rustgo -extld clang -buildmode exe -buildid b01dca11ab1e -linkmode external -v -extldflags='-lhello -L"$(CURDIR)"' rustgo.a
</code></pre>
<pre><code>$ make
go tool asm -I "/usr/local/Cellar/go/1.8.1_1/libexec/pkg/include" -D GOOS_darwin -D GOARCH_amd64 -o hello.o hello.s
go tool compile -o rustgo.a -p main -buildid b01dca11ab1e -pack hello.go
go tool pack r rustgo.a hello.o
rustc --crate-type staticlib hello.rs
note: link against the following native artifacts when linking against this static library

note: the order and any duplication can be significant on some platforms, and so may need to be preserved

note: library: System

note: library: c

note: library: m

go tool link -o rustgo -extld clang -buildmode exe -buildid b01dca11ab1e -linkmode external -v -extldflags="-lhello -L/Users/filippo/code/misc/rustgo" rustgo.a
HEADER = -H1 -T0x1001000 -D0x0 -R0x1000
searching for runtime.a in /usr/local/Cellar/go/1.8.1_1/libexec/pkg/darwin_amd64/runtime.a
searching for runtime/cgo.a in /usr/local/Cellar/go/1.8.1_1/libexec/pkg/darwin_amd64/runtime/cgo.a
 0.00 deadcode
 0.00 pclntab=166785 bytes, funcdata total 17079 bytes
 0.01 dodata
 0.01 symsize = 0
 0.01 symsize = 0
 0.01 reloc
 0.01 dwarf
 0.02 symsize = 0
 0.02 reloc
 0.02 asmb
 0.02 codeblk
 0.03 datblk
 0.03 sym
 0.03 headr
 0.06 host link: "clang" "-m64" "-gdwarf-2" "-Wl,-headerpad,1144" "-Wl,-no_pie" "-Wl,-pagezero_size,4000000" "-o" "rustgo" "-Qunused-arguments" "/var/folders/ry/v14gg02d0y9cb2w9809hf6ch0000gn/T/go-link-412633279/go.o" "/var/folders/ry/v14gg02d0y9cb2w9809hf6ch0000gn/T/go-link-412633279/000000.o" "-g" "-O2" "-lpthread" "-lhello" "-L/Users/filippo/code/misc/rustgo"
 0.34 cpu time
12641 symbols
5764 liveness data
</code></pre>
<h2 id="jumping-into-rust">Jumping into Rust</h2>
<p>Alright, so we linked it, but the symbols are not going to do anything just by sitting next to each other. We need to somehow call the Rust function from our Go code.</p>
<p>We know how to call a Go function from Go. In assembly the same call looks like <code>CALL hello(SB)</code>, where SB is a virtual register all global symbols are relative to.</p>
<p>If we want to call an assembly function from Go we make the compiler aware of its existence like a C header, by writing <code>func hello()</code> without a function body.</p>
<p>I tried all combinations of the above to call an external (Rust) function, but they all complained that they couldn't find either the symbol name, or the function body.</p>
<p>But cgo, which at the end of the day is just a giant code generator, somehow manages to eventually invoke that foreign function! How?</p>
<p>I stumbled upon <a href="https://github.com/golang/go/blob/c3c2e453c968c7b450c59a47dc9502bd44257164/src/cmd/cgo/out.go?ref=words.filippo.io#L1475-L1478">the answer</a> a couple days later.</p>
<pre><code>//go:cgo_import_static _cgoPREFIX_Cfunc__Cmalloc
//go:linkname __cgofn__cgoPREFIX_Cfunc__Cmalloc _cgoPREFIX_Cfunc__Cmalloc
var __cgofn__cgoPREFIX_Cfunc__Cmalloc byte
var _cgoPREFIX_Cfunc__Cmalloc = unsafe.Pointer(&amp;__cgofn__cgoPREFIX_Cfunc__Cmalloc)
</code></pre>
<p>That looks like an interesting pragma! <code>//go:linkname</code> just creates a symbol alias in the local scope (which <a href="https://sitano.github.io/2016/04/28/golang-private/?ref=words.filippo.io">can be used to call private functions</a>!), and I'm pretty sure the <code>byte</code> trick is only cleverness to have something to take the address of, but <code>//go:cgo_import_static</code>... this imports an external symbol!</p>
<blockquote>
<p><strong>2024 note</strong>: <code>cgo_import_static</code> is <a href="https://github.com/golang/go/issues/23672?ref=words.filippo.io">not usable anymore</a>, but there are <a href="https://github.com/FiloSottile/ed25519-dalek-rustgo/pull/1?ref=words.filippo.io">alternative strategies</a>.</p>
</blockquote>
<p>Armed with this new tool and the Makefile above, we have a chance to invoke this Rust function (<code>hello.rs</code>)</p>
<pre><code>#[no_mangle]
pub extern fn hello() {
    println!("Hello, Rust!");
}
</code></pre>
<p>(The no-mangle-pub-extern incantation is from <a href="https://doc.rust-lang.org/1.5.0/book/rust-inside-other-languages.html?ref=words.filippo.io">this tutorial</a>.)</p>
<p>from this Go program (<code>hello.go</code>)</p>
<pre><code>package main

//go:cgo_import_static hello

func trampoline()

func main() {
    println("Hello, Go!")
    trampoline()
}
</code></pre>
<p>with the help of this assembly snippet. (<code>hello.s</code>)</p>
<pre><code>TEXT ·trampoline(SB), 0, $2048
    JMP hello(SB)
    RET
</code></pre>
<p><code>CALL</code> was a bit too smart to work, but using a simple <code>JMP</code>...</p>
<pre><code>Hello, Go!
Hello, Rust!
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x0]
</code></pre>
<p>💥</p>
<p>Well, it crashes when it tries to return. Also that <code>$2048</code> value is the whole stack size Rust is allowed (if it's even putting the stack in the right place), and don't ask me what happens if Rust tries to touch a heap... but hell, I'm surprised it works at all!</p>
<h2 id="calling-conventions">Calling conventions</h2>
<p>Now, to make it return cleanly, and take some arguments, we need to look more closely at the Go and Rust calling conventions. A <a href="https://en.wikipedia.org/wiki/Calling_convention?ref=words.filippo.io">calling convention</a> defines where arguments and return values sit across function calls.</p>
<p>The Go calling convention is described <a href="https://github.com/golang/go/files/447163/GoFunctionsInAssembly.pdf?ref=words.filippo.io">here</a> and <a href="https://golang.org/doc/asm?ref=words.filippo.io">here</a>. For Rust we'll look at the <a href="https://doc.rust-lang.org/beta/book/first-edition/ffi.html?ref=words.filippo.io#calling-rust-code-from-c">default for FFI</a>, which is the standard C calling convention.</p>
<p>To keep going we're going to need a debugger. (LLDB supports Go, but <a href="https://github.com/golang/go/issues/20568?ref=words.filippo.io">breakpoints are somehow broken on macOS</a>, so I had to play inside a privileged Docker container.)</p>

<p>
![Zelda dangerous to go alone](/content/images/2017/08/zelda-2.png)
</p>
<h3 id="the-go-calling-convention">The Go calling convention</h3>
<p><img src="https://words.filippo.io/content/images/2017/08/Go-stack-layout-3.png" alt="Go calling convention diagram" loading="lazy"></p>
<p>The Go calling convention is mostly <a href="https://github.com/golang/go/issues/16922?ref=words.filippo.io">undocumented</a>, but we'll need to understand it to proceed, so here is what we can learn from a disassembly (amd64 specific). Let's look at a very simple function.</p>
<pre><code>// func foo(x, y uint64) uint64
TEXT ·foo(SB), 0, $256-24
    MOVQ x+0(FP), DX
    MOVQ DX, ret+16(FP)
    RET
</code></pre>
<p><code>foo</code> has 256 (0x100) bytes of local frame, 16 bytes of arguments, 8 bytes of return value, and it returns its first argument.</p>
<pre><code>func main() {
    foo(0xf0f0f0f0f0f0f0f0, 0x5555555555555555)
</code></pre>
<pre><code>rustgo[0x49d785]:  movabsq $-0xf0f0f0f0f0f0f10, %rax
rustgo[0x49d78f]:  movq   %rax, (%rsp)
rustgo[0x49d793]:  movabsq $0x5555555555555555, %rax
rustgo[0x49d79d]:  movq   %rax, 0x8(%rsp)
rustgo[0x49d7a2]:  callq  0x49d8a0                  ; main.foo at hello.s:14
</code></pre>
<p>The caller, seen above, does very little: it places the arguments on the stack in reverse order, at the bottom of its own frame (<code>rsp</code> to <code>16(rsp)</code>, remember that the stack grows down) and executes <code>CALL</code>. The <code>CALL</code> will push the return pointer to the stack and jump. There's no caller cleanup, just a plain <code>RET</code>.</p>
<p>Notice that <code>rsp</code> is fixed, and we have <code>movq</code>s, not <code>push</code>s.</p>
<pre><code>rustgo`main.foo at hello.s:14:
rustgo[0x49d8a0]:  movq   %fs:-0x8, %rcx
rustgo[0x49d8a9]:  leaq   -0x88(%rsp), %rax
rustgo[0x49d8b1]:  cmpq   0x10(%rcx), %rax
rustgo[0x49d8b5]:  jbe    0x49d8ee                  ; main.foo + 78 at hello.s:14
                   [...]
rustgo[0x49d8ee]:  callq  0x495d10                  ; runtime.morestack_noctxt at asm_amd64.s:405
rustgo[0x49d8f3]:  jmp    0x49d8a0                  ; main.foo at hello.s:14
</code></pre>
<p>The first 4 and last 2 instructions of the function are checking if there is enough space for the stack, and if not calling <code>runtime.morestack</code>. They are probably skipped for <code>NOSPLIT</code> functions.</p>
<pre><code>rustgo[0x49d8b7]:  subq   $0x108, %rsp
                   [...]
rustgo[0x49d8e6]:  addq   $0x108, %rsp
rustgo[0x49d8ed]:  retq
</code></pre>
<p>Then there's the <code>rsp</code> management, which subtracts 0x108, making space for the entire 0x100 bytes of frame in one go, and the 8 bytes of frame pointer. So <code>rsp</code> points to the bottom (the end) of the function frame, and is callee managed. Before returning, <code>rsp</code> is returned to where it was (just past the return pointer).</p>
<pre><code>rustgo[0x49d8be]:  movq   %rbp, 0x100(%rsp)
rustgo[0x49d8c6]:  leaq   0x100(%rsp), %rbp
                   [...]
rustgo[0x49d8de]:  movq   0x100(%rsp), %rbp
</code></pre>
<p>Finally the <a href="https://stackoverflow.com/questions/579262/what-is-the-purpose-of-the-ebp-frame-pointer-register?ref=words.filippo.io">frame pointer</a>, which is effectively pushed to the stack just after the return pointer, and updated at <code>rbp</code>. So <code>rbp</code> is also callee saved, and should be updated to point at where the caller's <code>rbp</code> is stored to enable stack trace unrolling.</p>
<pre><code>rustgo[0x49d8ce]:  movq   0x110(%rsp), %rdx
rustgo[0x49d8d6]:  movq   %rdx, 0x120(%rsp)
</code></pre>
<p>Finally, from the body itself we learn that return values go just above the arguments.</p>
<h4 id="virtual-registers">Virtual registers</h4>
<p>The Go docs say that <code>SP</code> and <code>FP</code> are virtual registers, not just aliases of <code>rsp</code> and <code>rbp</code>.</p>
<p>Indeed, when accessing <code>SP</code> from Go assembly, the offsets are adjusted relative to the real <code>rsp</code> so that <code>SP</code> points to the top, not the bottom, of the frame. That's convenient because it means not having to change all offsets when changing the frame size, but it's just syntactic sugar. Naked access to the register (like <code>MOVQ SP, DX</code>) accesses <code>rsp</code> directly.</p>
<p>The <code>FP</code> virtual register is simply an adjusted offset over <code>rsp</code>, too. It points to the bottom of the caller frame, where arguments are, and there's no direct access.</p>
<p>Note: Go maintains <code>rbp</code> and frame pointers to help debugging, but then uses a fixed <code>rsp</code> and <code>omit-stack-pointer</code>-style <code>rsp</code> offsets for the virtual <code>FP</code>. You can learn more about frame pointers and not using them from <a href="https://www.imperialviolet.org/2017/01/18/cfi.html?ref=words.filippo.io">this Adam Langley blog post</a>.</p>
<h3 id="the-c-calling-convention">The C calling convention</h3>
<p>"<a href="https://en.wikipedia.org/wiki/X86_calling_conventions?ref=words.filippo.io#System_V_AMD64_ABI">sysv64</a>", the default C calling convention on x86-64, is quite different:</p>
<ul>
<li>The arguments are passed via registers: RDI, RSI, RDX, RCX, R8, and R9.</li>
<li>The return value goes to RAX.</li>
<li>Some registers are callee-saved: RBP, RBX, and R12–R15.
<ul>
<li>We care little about this, since in Go all registers are caller-saved.</li>
</ul>
</li>
<li>The stack must be aligned to 16-bytes.
<ul>
<li>(I think this is why <code>JMP</code> worked and <code>CALL</code> didn't, we failed to align the stack!)</li>
</ul>
</li>
</ul>
<p>Frame pointers work the same way (and are generated by <code>rustc</code> with <code>-g</code>).</p>
<h3 id="gluing-them-together">Gluing them together</h3>
<p>Building a simple trampoline between the two conventions won't be hard. We can also look at <a href="https://github.com/golang/go/blob/57bf6aca711a53aa7fea877b98896cd0445c6ad0/src/runtime/asm_amd64.s?ref=words.filippo.io#L585"><code>asmcgocall</code></a> for inspiration, since it does approximately the same job, but for cgo.</p>
<p>We need to remember that we want the Rust function to use the stack space of our assembly function, since Go ensured for us that it's present. To do that, we have to rollback <code>rsp</code> from the end of the stack.</p>
<pre><code>package main

//go:cgo_import_static increment
func trampoline(arg uint64) uint64

func main() {
    println(trampoline(41))
}
</code></pre>
<center>⬇</center>
<pre><code>TEXT ·trampoline(SB), 0, $2048-16
    MOVQ arg+0(FP), DI // Load the argument before messing with SP
    MOVQ SP, BX        // Save SP in a callee-saved registry
    ADDQ $2048, SP     // Rollback SP to reuse this function's frame
    ANDQ $~15, SP      // Align the stack to 16-bytes
    CALL increment(SB)
    MOVQ BX, SP        // Restore SP
    MOVQ AX, ret+8(FP) // Place the return value on the stack
    RET
</code></pre>
<center>⬇</center>
<pre><code>#[no_mangle]
pub extern fn increment(a: u64) -&gt; u64 {
    return a + 1;
}
</code></pre>
<h3 id="call-on-macos">CALL on macOS</h3>
<p><code>CALL</code> didn't quite work on macOS. For some reason, there the function call was replaced with an intermediate call to <code>_cgo_thread_start</code>, which is not that incredible considering we are using something called <code>cgo_import_static</code> and that <code>CALL</code> is virtual in Go assembly.</p>
<pre><code>callq  0x40a27cd                 ; x_cgo_thread_start + 29
</code></pre>
<p>We can bypass that "helper" by using the full <code>//go:linkname</code> incantation we found in the standard library to take a pointer to the function, and then calling the function pointer, like this.</p>
<pre><code>import _ "unsafe"

//go:cgo_import_static increment
//go:linkname increment increment
var increment uintptr
var _increment = &amp;increment
</code></pre>
<pre><code>    MOVQ ·_increment(SB), AX
    CALL AX
</code></pre>
<h2 id="is-it-fast">Is it fast?</h2>
<p>The point of this whole exercise is to be able to call Rust instead of assembly for cryptographic operations (and to have fun). So a rustgo call will have to be almost <a href="https://speakerdeck.com/gtank/i-wanna-go-fast?ref=words.filippo.io">as fast as an assembly call</a> to be useful.</p>
<p>Benchmark time!</p>
<p>We'll compare incrementing a uint64 inline, with a <code>//go:noinline</code> function, with the rustgo call above, and with a cgo call to the exact same Rust function.</p>
<p>Rust was compiled with <code>-g -O</code>, and the benchmarks were run on macOS on a 2.9GHz Intel Core i5.</p>
<pre><code>name                 time/op
CallOverhead/Inline  1.72ns ± 3%
CallOverhead/Go      4.60ns ± 2%
CallOverhead/rustgo  5.11ns ± 4%
CallOverhead/cgo     73.6ns ± 0%
</code></pre>
<p>rustgo is 11% slower than a Go function call, and almost 15 times faster than cgo!</p>
<p>The performance is even better when run on Linux without the function pointer workaround, with only a 2% overhead.</p>
<pre><code>name                 time/op
CallOverhead/Inline  1.67ns ± 2%
CallOverhead/Go      4.49ns ± 3%
CallOverhead/rustgo  4.58ns ± 3%
CallOverhead/cgo     69.4ns ± 0%
</code></pre>
<h2 id="a-real-example">A real example</h2>
<p>For a real-world demo, I picked the excellent curve25519-dalek library, and specifically the task of multiplying the curve basepoint by a scalar and returning its Edwards representation.</p>
<p>The Cargo benchmarks swing widely between executions because of <a href="https://wiki.debian.org/HowTo/CpuFrequencyScaling?ref=words.filippo.io">CPU frequency scaling</a>, but they suggest the operation will take 22.9µs ± 17%.</p>
<pre><code>test curve::bench::basepoint_mult    ... bench:      17,276 ns/iter (+/- 3,057)
test curve::bench::edwards_compress  ... bench:       5,633 ns/iter (+/- 858)
</code></pre>
<p>On the Go side, we'll expose a simple API.</p>
<pre><code>func ScalarBaseMult(dst, in *[32]byte)
</code></pre>
<p>On the Rust side, it's not different from building <a href="https://doc.rust-lang.org/beta/book/first-edition/ffi.html?ref=words.filippo.io#calling-rust-code-from-c">an interface for normal FFI</a>.</p>
<p>I'll be honest, it took me forever to figure out enough Rust to make this work.</p>
<pre><code>#![no_std]

extern crate curve25519_dalek;
use curve25519_dalek::scalar::Scalar;
use curve25519_dalek::constants;

#[no_mangle]
pub extern fn scalar_base_mult(dst: &amp;mut [u8; 32], k: &amp;[u8; 32]) {
    let res = &amp;constants::ED25519_BASEPOINT_TABLE * &amp;Scalar(*k);
    dst.clone_from(res.compress_edwards().as_bytes());
}
</code></pre>
<p>To build the <code>.a</code> we use <code>cargo build --release</code> with a <code>Cargo.toml</code> that defines the dependencies, enables frame pointers, and configures curve25519-dalek to use its most efficient math and no standard library.</p>
<pre><code>[package]
name = "ed25519-dalek-rustgo"
version = "0.0.0"

[lib]
crate-type = ["staticlib"]

[dependencies.curve25519-dalek]
version = "^0.9"
default-features = false
features = ["nightly"]

[profile.release]
debug = true
</code></pre>
<p>Finally, we need to adjust the trampoline to take two arguments and return no value.</p>
<pre><code>TEXT ·ScalarBaseMult(SB), 0, $16384-16
    MOVQ dst+0(FP), DI
    MOVQ in+8(FP), SI

    MOVQ SP, BX
    ADDQ $16384, SP
    ANDQ $~15, SP

    MOVQ ·_scalar_base_mult(SB), AX
    CALL AX

    MOVQ BX, SP
    RET
</code></pre>
<p>The result is a transparent Go call with performance that closely resembles the pure Rust benchmark, and is almost 6% faster than cgo!</p>
<pre><code>name            old time/op  new time/op  delta
RustScalarBaseMult  23.7µs ± 1%  22.3µs ± 4%  -5.88%  (p=0.003 n=5+7)
</code></pre>
<p>For comparison, similar functionality is provided by github.com/agl/ed25519/edwards25519, and that pure-Go library takes almost 3 times as long.</p>
<pre><code>h := &amp;edwards25519.ExtendedGroupElement{}
edwards25519.GeScalarMultBase(h, &amp;k)
h.ToBytes(&amp;dst)
</code></pre>
<pre><code>name            time/op
GoScalarBaseMult  66.1µs ± 2%
</code></pre>
<h2 id="packaging-up">Packaging up</h2>
<p>Now we know it actually works, that's exciting! But to be usable it will have to be an importable package, not forced into <code>package main</code> by a weird build process.</p>
<p>This is where <a href="https://github.com/golang/proposal/blob/master/design/2775-binary-only-packages.md?ref=words.filippo.io"><code>//go:binary-only-package</code></a> comes in! That annotation allows us to tell the compiler to ignore the source of the package, and to only use the pre-built <code>.a</code> library file in <code>$GOPATH/pkg</code>.</p>
<blockquote>
<p><strong>2024 note</strong>: <code>binary-only-package</code> is <a href="https://github.com/golang/go/issues/28152?ref=words.filippo.io">also gone</a>, but <a href="https://github.com/FiloSottile/ed25519-dalek-rustgo/pull/1?ref=words.filippo.io">using a .syso file</a> was probably the correct answer back then, too. Still, this was a fun detour into linking tooling.</p>
</blockquote>
<p>If we can manage to build a <code>.a</code> file that works with Go's native linker (<a href="https://godoc.org/cmd/link?ref=words.filippo.io">cmd/link</a>, referred to also as the <em>internal</em> linker), <strong>we can redistribute that and it will let our users import the package as if it was a native one</strong>, including cross-compiling (provided we included a <code>.a</code> for that platform)!</p>
<p>The Go side is easy, and pairs with the assembly and Rust we already have. We can even include docs for <code>go doc</code>'s benefit.</p>
<pre><code>//go:binary-only-package

// Package edwards25519 implements operations on an Edwards curve that is
// isomorphic to curve25519.
//
// Crypto operations are implemented by calling directly into the Rust
// library curve25519-dalek, without cgo.
//
// You should not actually be using this.
package edwards25519

import _ "unsafe"

//go:cgo_import_static scalar_base_mult
//go:linkname scalar_base_mult scalar_base_mult
var scalar_base_mult uintptr
var _scalar_base_mult = &amp;scalar_base_mult

// ScalarBaseMult multiplies the scalar in by the curve basepoint, and writes
// the compressed Edwards representation of the resulting point to dst.
func ScalarBaseMult(dst, in *[32]byte)
</code></pre>
<p>The Makefile will have to change quite a bit—since we aren't building a binary anymore we don't get to keep using <code>go tool link</code>.</p>
<p>A <code>.a</code> archive is just a pack of <code>.o</code> object files in <a href="https://en.wikipedia.org/wiki/Ar_(Unix)?ref=words.filippo.io">an ancient format with a symbol table</a>. If we could get the symbols from the Rust <code>libed25519_dalek_rustgo.a</code> library into the <code>edwards25519.a</code> archive that <code>go tool compile</code> made, we <em>should</em> be golden.</p>
<p><code>.a</code> archives are managed by the <code>ar</code> UNIX tool, or by its Go internal counterpart, <a href="https://godoc.org/cmd/pack?ref=words.filippo.io">cmd/pack</a> (as in <code>go tool pack</code>). The two formats are ever-so-subtly different, of course. We'll need to use the platform <code>ar</code> for <code>libed25519_dalek_rustgo.a</code> and the Go cmd/pack for <code>edwards25519.a</code>.</p>
<p>(For example, the platform <code>ar</code> on my macOS uses <a href="https://en.wikipedia.org/wiki/Ar_(Unix)?ref=words.filippo.io#BSD_variant">the BSD convention</a> of calling files <code>#1/LEN</code> and then embedding the filename of length LEN at the beginning of the file, to exceed the 16 bytes max file length. That was confusing.)</p>
<p>To bundle the two libraries I tried doing the simplest (read: hackish) thing: extract <code>libed25519_dalek_rustgo.a</code> into a temporary folder, and then pack the objects back into <code>edwards25519.a</code>.</p>
<pre><code>edwards25519/edwards25519.a: edwards25519/rustgo.go edwards25519/rustgo.o target/release/libed25519_dalek_rustgo.a
               go tool compile -N -l -o $@ -p main -pack edwards25519/rustgo.go
               go tool pack r $@ edwards25519/rustgo.o # from edwards25519/rustgo.s
               mkdir -p target/release/libed25519_dalek_rustgo &amp;&amp; cd target/release/libed25519_dalek_rustgo &amp;&amp; \
                       rm -f *.o &amp;&amp; ar xv "$(CURDIR)/target/release/libed25519_dalek_rustgo.a"
               go tool pack r $@ target/release/libed25519_dalek_rustgo/*.o

.PHONY: install
install: edwards25519/edwards25519.a
               mkdir -p "$(shell go env GOPATH)/pkg/darwin_amd64/$(IMPORT_PATH)/"
               cp edwards25519/edwards25519.a "$(shell go env GOPATH)/pkg/darwin_amd64/$(IMPORT_PATH)/"
</code></pre>
<p>Imagine my surprise when it worked!</p>
<p>With the <code>.a</code> in place it's just a matter of making a simple program using the package.</p>
<pre><code>package main

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"testing"

	"github.com/FiloSottile/ed25519-dalek-rustgo/edwards25519"
)

func main() {
	input, _ := hex.DecodeString("39129b3f7bbd7e17a39679b940018a737fc3bf430fcbc827029e67360aab3707")
	expected, _ := hex.DecodeString("1cc4789ed5ea69f84ad460941ba0491ff532c1af1fa126733d6c7b62f7ebcbcf")

	var dst, k [32]byte
	copy(k[:], input)

	edwards25519.ScalarBaseMult(&amp;dst, &amp;k)
	if !bytes.Equal(dst[:], expected) {
		fmt.Println("rustgo produces a wrong result!")
	}

	fmt.Printf("BenchmarkScalarBaseMult\t%v\n", testing.Benchmark(func(b *testing.B) {
		for i := 0; i &lt; b.N; i++ {
			edwards25519.ScalarBaseMult(&amp;dst, &amp;k)
		}
	}))
}
</code></pre>
<p>And running <code>go build</code>!</p>
<pre><code>$ go build -ldflags '-linkmode external -extldflags -lresolv'
$ ./ed25519-dalek-rustgo
BenchmarkScalarBaseMult	  100000	     19914 ns/op
</code></pre>
<p>Well, it almost worked. We cheated. The binary would not compile unless we linked it to <code>libresolv</code>. To be fair, the Rust compiler tried to tell us. (But who listens to everything the Rust compiler tells you anyway?)</p>
<pre><code>note: link against the following native artifacts when linking against this static library

note: the order and any duplication can be significant on some platforms, and so may need to be preserved

note: library: System

note: library: resolv

note: library: c

note: library: m
</code></pre>
<p>Now, linking against system libraries would be a problem, because it will never happen with internal linking and cross-compilation...</p>
<p>But hold on a minute, <em>libresolv</em>?! Why does our <code>no_std</code>, "should be like assembly", stack only Rust library want to <em>resolve DNS names</em>?</p>
<h3 id="i-really-meant-nostd">I really meant <code>no_std</code></h3>
<p>The problem is that the library is not actually <code>no_std</code>. Look at all that stuff in there! We want nothing to do with allocators!</p>
<pre><code>$ ar t target/release/libed25519_dalek_rustgo.a
__.SYMDEF
ed25519_dalek_rustgo-742a1d9f1c101d86.0.o
ed25519_dalek_rustgo-742a1d9f1c101d86.crate.allocator.o
curve25519_dalek-03e3ca0f6d904d88.0.o
subtle-cd04b61500f6e56a.0.o
std-72653eb2361f5909.0.o
panic_unwind-d0b88496572d35a9.0.o
unwind-da13b913698118f9.0.o
arrayref-2be0c0ff08ae2c7d.0.o
digest-f1373d68da35ca45.0.o
generic_array-95ca86a62dc11ddc.0.o
nodrop-7df18ca19bb4fc21.0.o
odds-3bc0ea0bdf8209aa.0.o
typenum-a61a9024d805e64e.0.o
rand-e0d585156faee9eb.0.o
alloc_system-c942637a1f049140.0.o
libc-e038d130d15e5dae.0.o
alloc-0e789b712308019f.0.o
std_unicode-9735142be30abc63.0.o
compiler_builtins-8a5da980a34153c7.0.o
absvdi2.o
absvsi2.o
absvti2.o
[... snip ...]
truncsfhf2.o
ucmpdi2.o
ucmpti2.o
core-9077840c2cc91cbf.0.o
</code></pre>
<p>So how do we actually make it <code>no_std</code>? This turned out to be <a href="https://twitter.com/FiloSottile/status/894663496410988544?ref=words.filippo.io">an entire side-quest</a>, but I'll give you a recap.</p>
<ul>
<li>If any dependency is not <code>no_std</code>, your <code>no_std</code> flag is nullified. One of the <code>curve25519-dalek</code> dependencies had this problem, <code>cargo update</code> fixed that.</li>
<li>Actually making a <code>no_std</code> <em>staticlib</em> (that is, an library for external use, as opposed to for inclusion in a Rust program) is more like making a <code>no_std</code> <em>executable</em>, which is much harder as it must be self-contained.</li>
<li>The docs on how to make a <code>no_std</code> <em>executable</em> are sparse. I mostly used <a href="https://doc.rust-lang.org/1.5.0/book/no-stdlib.html?ref=words.filippo.io">an old version of the Rust book</a> and eventually found <a href="https://doc.rust-lang.org/beta/unstable-book/language-features/lang-items.html?ref=words.filippo.io#writing-an-executable-without-stdlib">this section in the lang_items chapter</a>. <a href="https://os.phil-opp.com/set-up-rust/?ref=words.filippo.io">This blog post</a> was useful.</li>
<li>For starters, you need to define "lang_items" functions to handle functionality that is normally in the stdlib, like <code>panic_fmt</code>.</li>
<li>Then you are without the Rust equivalents of <code>compiler-rt</code>, so you have to import the crate compiler_builtins. (<a href="https://github.com/rust-lang/rust/issues/43264?ref=words.filippo.io">rust-lang/rust#43264</a>)</li>
<li>Then there's a problem with <code>rust_begin_unwind</code> being unexported, which don't ask me why but is solved by marking <code>panic_fmt</code> as <code>no_mangle</code>, which the linter is not happy about. (<a href="https://github.com/rust-lang/rust/issues/38281?ref=words.filippo.io">rust-lang/rust#38281</a>)</li>
<li>Then you are without <code>memcpy</code>, but thankfully there's a native Rust reimplementation in the <a href="https://github.com/alexcrichton/rlibc?ref=words.filippo.io">rlibc</a> crate. Super useful <a href="https://github.com/rust-lang-nursery/compiler-builtins/issues/182?ref=words.filippo.io">learning</a> that <code>nm -u</code> will tell you what symbols are missing from an object.</li>
</ul>
<p>This all boils down to a bunch of arcane lines at the top of our <code>lib.rs</code>.</p>
<pre><code>#![no_std]
#![feature(lang_items, compiler_builtins_lib, core_intrinsics)]
use core::intrinsics;
#[allow(private_no_mangle_fns)] #[no_mangle] // rust-lang/rust#38281
#[lang = "panic_fmt"] fn panic_fmt() -&gt; ! { unsafe { intrinsics::abort() } }
#[lang = "eh_personality"] extern fn eh_personality() {}
extern crate compiler_builtins; // rust-lang/rust#43264
extern crate rlibc;
</code></pre>
<p>And with that, <code>go build</code> works (!!!) on macOS.</p>
<h3 id="linux">Linux</h3>
<p>On Linux nothing works.</p>
<p>External linking complains about <code>fmax</code> and other symbols missing, and it seems to be right.</p>
<pre><code>$ ld -r -o linux.o target/release/libed25519_dalek_rustgo/*.o
$ nm -u linux.o
                 U _GLOBAL_OFFSET_TABLE_
                 U abort
                 U fmax
                 U fmaxf
                 U fmaxl
                 U logb
                 U logbf
                 U logbl
                 U scalbn
                 U scalbnf
                 U scalbnl
</code></pre>
<p>A friend thankfully suggested making sure that I was using <code>--gc-sections</code> to strip dead code, which might reference things I don't actually need. And sure enough, this worked. (That's three layers of flag-passing right there.)</p>
<pre><code>$ go build -ldflags '-extld clang -linkmode external -extldflags -Wl,--gc-sections'
</code></pre>
<p>But umh, in the Makefile we aren't using a linker at all, so where do we put <code>--gc-sections</code>? The answer is to stop hacking <code>.a</code>s together and actually reading the <a href="https://linux.die.net/man/1/ld?ref=words.filippo.io">linker man page</a>.</p>
<p>We can build a <code>.o</code> containing a given symbol and all the symbols it references with <code>ld -r --gc-sections -u $SYMBOL</code>. <code>-r</code> makes the object reusable for a later link, and <code>-u</code> marks a symbol as needed, or everything would end up garbage collected. <code>$SYMBOL</code> is <code>scalar_base_mult</code> in our case.</p>
<p>Why wasn't this a problem on macOS? It would have been if we linked manually, but the macOS compiler apparently does dead symbol stripping by default.</p>
<pre><code>$ ld -e _scalar_base_mult target/release/libed25519_dalek_rustgo/*.o
Undefined symbols for architecture x86_64:
  "___assert_rtn", referenced from:
      _compilerrt_abort_impl in int_util.o
  "_copysign", referenced from:
      ___divdc3 in divdc3.o
      ___muldc3 in muldc3.o
  "_copysignf", referenced from:
      ___divsc3 in divsc3.o
      ___mulsc3 in mulsc3.o
  "_copysignl", referenced from:
      ___divxc3 in divxc3.o
      ___mulxc3 in mulxc3.o
  "_fmax", referenced from:
      ___divdc3 in divdc3.o
  "_fmaxf", referenced from:
      ___divsc3 in divsc3.o
  "_fmaxl", referenced from:
      ___divxc3 in divxc3.o
  "_logb", referenced from:
      ___divdc3 in divdc3.o
  "_logbf", referenced from:
      ___divsc3 in divsc3.o
  "_logbl", referenced from:
      ___divxc3 in divxc3.o
  "_scalbn", referenced from:
      ___divdc3 in divdc3.o
  "_scalbnf", referenced from:
      ___divsc3 in divsc3.o
  "_scalbnl", referenced from:
      ___divxc3 in divxc3.o
ld: symbol(s) not found for inferred architecture x86_64
$ ld -e _scalar_base_mult -dead_strip target/release/libed25519_dalek_rustgo/*.o
</code></pre>
<p>This is also the part where <a href="https://github.com/rust-lang/rust/issues/35052?ref=words.filippo.io">we learn painfully that the macOS platform prepends a <code>_</code> to all symbol names</a>, because reasons.</p>
<p>So here's the Makefile portion that will work with external linking out of the box.</p>
<pre><code>edwards25519/edwards25519.a: edwards25519/rustgo.go edwards25519/rustgo.o edwards25519/libed25519_dalek_rustgo.o
		go tool compile -N -l -o $@ -p main -pack edwards25519/rustgo.go
		go tool pack r $@ edwards25519/rustgo.o edwards25519/libed25519_dalek_rustgo.o

edwards25519/libed25519_dalek_rustgo.o: target/$(TARGET)/release/libed25519_dalek_rustgo.a
ifeq ($(shell go env GOOS),darwin)
		$(LD) -r -o $@ -arch x86_64 -u "_$(SYMBOL)" $^
else
		$(LD) -r -o $@ --gc-sections -u "$(SYMBOL)" $^
endif
</code></pre>
<p>The last missing piece is internal linking on Linux. In short, <a href="https://gist.github.com/FiloSottile/0d938bc4e8a7f3eab1fa4f672c334842?ref=words.filippo.io#file-internal-linking-issue-diff">it was not linking the Rust code</a>, even if the compilation seemed to succeed. The relocations were not happening and the <code>CALL</code> instructions in our Rust function left pointing at meaningless addresses.</p>
<p>At that point I felt like it had to be a silent linker bug, the final boss in implementing rustgo, and reached out to people much smarter than me. One of them was guiding me in <a href="https://gist.github.com/FiloSottile/0d938bc4e8a7f3eab1fa4f672c334842?ref=words.filippo.io#file-relocations-txt">debugging cmd/link</a> (which was fascinating!) when Ian Lance Taylor, the author of cgo, helpfully pointed out that <code>//cgo:cgo_import_static</code> is not enough for internal linking, and that I also wanted <code>//cgo:cgo_import_dynamic</code>.</p>
<pre><code>//go:cgo_import_static scalar_base_mult
//go:cgo_import_dynamic scalar_base_mult
</code></pre>
<p>I still have no idea <em>why</em> leaving it out would result in that issue, but adding it finally made our rustgo package compile both with external and internal linking, on Linux and macOS, out of the box.</p>
<h3 id="redistributable">Redistributable</h3>
<p>Now that we can build a <code>.a</code>, we can take the suggestion in the <a href="https://github.com/golang/proposal/blob/master/design/2775-binary-only-packages.md?ref=words.filippo.io"><code>//go:binary-only-package</code></a> spec, and build a tarball with <code>.a</code>s for <code>linux_amd64</code>/<code>darwin_amd64</code> and the package source, to untar into a GOPATH to install.</p>
<pre><code>$ tar tf ed25519-dalek-rustgo_go1.8.3.tar.gz
src/github.com/FiloSottile/ed25519-dalek-rustgo/
src/github.com/FiloSottile/ed25519-dalek-rustgo/.gitignore
src/github.com/FiloSottile/ed25519-dalek-rustgo/Cargo.lock
src/github.com/FiloSottile/ed25519-dalek-rustgo/Cargo.toml
src/github.com/FiloSottile/ed25519-dalek-rustgo/edwards25519/
src/github.com/FiloSottile/ed25519-dalek-rustgo/main.go
src/github.com/FiloSottile/ed25519-dalek-rustgo/Makefile
src/github.com/FiloSottile/ed25519-dalek-rustgo/release.sh
src/github.com/FiloSottile/ed25519-dalek-rustgo/src/
src/github.com/FiloSottile/ed25519-dalek-rustgo/target.go
src/github.com/FiloSottile/ed25519-dalek-rustgo/src/lib.rs
src/github.com/FiloSottile/ed25519-dalek-rustgo/edwards25519/rustgo.go
src/github.com/FiloSottile/ed25519-dalek-rustgo/edwards25519/rustgo.s
pkg/linux_amd64/github.com/FiloSottile/ed25519-dalek-rustgo/edwards25519.a
pkg/darwin_amd64/github.com/FiloSottile/ed25519-dalek-rustgo/edwards25519.a
</code></pre>
<p>Once installed like that, the package will be usable just like a native one, cross-compilation included (as long as we packaged a <code>.a</code> for the target)!</p>
<p>The only thing we have to worry about is that if we build Rust with <code>-Ctarget-cpu=native</code> it might not run on older CPUs. Thankfully benchmarks (<a href="https://twitter.com/isislovecruft/status/887787163072507904?ref=words.filippo.io">and the curve25519-dalek authors</a>) tell us that the only real difference is between post and pre-Haswell processors, so we only have to make a universal build and a Haswell one.</p>
<pre><code>$ benchstat bench-none.txt bench-haswell.txt
name                   old time/op  new time/op  delta
ScalarBaseMult/rustgo  22.0µs ± 3%  20.2µs ± 2%  -8.41%  (p=0.001 n=7+6)
$ benchstat bench-haswell.txt bench-native.txt
name                   old time/op  new time/op  delta
ScalarBaseMult/rustgo  20.2µs ± 2%  20.1µs ± 2%   ~     (p=0.945 n=6+7)
</code></pre>
<p>As the cherry on top, I made the Makefile obey GOOS/GOARCH, converting them as needed into Rust target triples, so if you have Rust set up for cross-compilation you can even cross-compile the <code>.a</code> itself.</p>
<p>Here's the result: <a href="https://github.com/FiloSottile/ed25519-dalek-rustgo?ref=words.filippo.io">github.com/FiloSottile/ed25519-dalek-rustgo/edwards25519</a>. It's even on <a href="https://godoc.org/github.com/FiloSottile/ed25519-dalek-rustgo/edwards25519?ref=words.filippo.io">godoc</a>.</p>
<h2 id="turning-it-into-a-real-thing">Turning it into a real thing</h2>
<p>Well, this was fun.</p>
<p>But to be clear, rustgo is not a real thing that you should use <s>in production</s>. For example, I suspect I should be saving <code>g</code> before the jump, the stack size is completely arbitrary, and shrinking the trampoline frame like that will probably confuse the hell out of debuggers. Also, a panic in Rust might get weird.</p>
<p>To make it a real thing I'd start by calling <code>morestack</code> manually from a <code>NOSPLIT</code> assembly function to ensure we have enough goroutine stack space (instead of rolling back <code>rsp</code>) with a size obtained maybe from static analysis of the Rust function (instead of, well, made up).</p>
<p>It could all be analyzed, generated and built by some "rustgo" tool, instead of hardcoded in Makefiles and assembly files. cgo itself is little more than a code-generation tool after all. It might make sense as a <code>go:generate</code> thing, but I know someone who wants to make it a cargo command. (Finally some Rust-vs-Go fighting!) Also, a Rust-side collection of FFI types like, say, <code>GoSlice</code> would be nice.</p>
<pre><code>#[repr(C)]
struct GoSlice {
    array: *mut u8,
    len: i32,
    cap: i32,
}
</code></pre>
<p>Or maybe a Go or Rust adult will come and tell us to stop before we get hurt.</p>
<p>In the meantime, you might want to <a href="https://twitter.com/FiloSottile?ref=words.filippo.io">follow me on Twitter</a>.</p>
<p>EDIT: It was pointed out to me that if we simply named the Rust object file <code>libed25519_dalek_rustgo.syso</code>, we could skip all the <code>go tool</code> invocations and simply use <code>go build</code> which automatically links <code>.syso</code> files found in the package. But what's the fun in that.</p>
<blockquote>
<p>Thanks (in no particular order) to David, Ian, Henry, Isis, Manish, Zaki, Anna, George, Kaylyn, Bill, David, Jess, Tony and Daniel for making this possible. Don't blame them for the mistakes and horrors, those are mine.</p>
</blockquote>
<center>
<blockquote data-cards="hidden" data-lang="en-gb">— Filippo Valsorda (@FiloSottile) <a href="https://twitter.com/FiloSottile/status/897434109613674496?ref=words.filippo.io">15 August 2017</a></blockquote>

</center>
<p>P.S. Before anyone tries to compare this to cgo (which has many more safety features) or pure Go, it's not meant to replace either. It's meant to replace manually written assembly with something much safer and more readable, with comparable performance. Or better yet, it was meant to be a fun experiment.</p>

        </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Meta introduces Segment Anything Model 2 (268 pts)]]></title>
            <link>https://ai.meta.com/sam2/</link>
            <guid>41116635</guid>
            <pubDate>Wed, 31 Jul 2024 05:42:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ai.meta.com/sam2/">https://ai.meta.com/sam2/</a>, See on <a href="https://news.ycombinator.com/item?id=41116635">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><hr><div><p>Key capabilities</p><p><h2>Segment any object, now in any video or image</h2></p><div><p>SAM 2 is the first unified model for segmenting objects across images and videos. You can use a click, box, or mask as the input to select an object on any image or frame of video.</p><a href="https://ai.meta.com/research/publications/sam-2-segment-anything-in-images-and-videos/" data-ms-clickable="true" data-ms="{&quot;creative&quot;:&quot;click_external-link&quot;,&quot;creative_detail&quot;:&quot;sam2_key_capabilities_read_the_research_paper_cta&quot;}" target="_self"><svg viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg"><path opacity="0.4" fill-rule="evenodd" clip-rule="evenodd" d="M19 37C9.05887 37 1 28.9411 1 19C1 9.05887 9.05887 1 19 1C28.9411 1 37 9.05887 37 19C37 28.9411 28.9411 37 19 37Z" stroke="CurrentColor"></path><path d="M21.9657 12L28.9287 18.963L21.9657 25.926L20.7348 24.7193L25.6203 19.8334L10.0001 19.8334V18.0926L25.5966 18.0926L20.7348 13.2309L21.9657 12Z" fill="CurrentColor"></path><path d="M21.9657 12L28.9287 18.963L21.9657 25.926L20.7348 24.7193L25.6203 19.8334L10.0001 19.8334V18.0926L25.5966 18.0926L20.7348 13.2309L21.9657 12Z" fill="CurrentColor"></path></svg>Read the research paper</a></div></div><div><div><h3>Select objects and make adjustments across video frames</h3><div><p>Using SAM 2, you can select one or multiple objects in a video frame. Use additional prompts to refine the model predictions.</p></div></div><div><h3>Robust segmentation, even in <br>unfamiliar videos</h3><div><p>SAM 2 is capable of strong zero-shot performance for objects, images and videos not previously seen during model training, enabling use in a wide range of real-world applications.</p></div></div><div><h3>Real-time interactivity and results</h3><p>SAM 2 is designed for efficient video processing with streaming inference to enable real-time, interactive applications.</p></div></div><div><div><p><h2>State-of-the-art performance for object segmentation</h2></p><p>SAM 2 outperforms the best models in the field for object segmentation in videos and images. </p></div><div><h3>Highlights</h3><div><ul><li>SAM 2 improves on SAM for segmentation in images</li><li>SAM 2 outperforms existing video object segmentation models, especially for tracking parts</li><li>SAM 2 requires less interaction time than existing interactive video segmentation methods</li></ul></div></div></div><div><h2>Try it yourself</h2><div><p>Track an object across any video interactively with as little as a single click on one frame, and create fun effects.</p><a href="https://sam2.metademolab.com/?utm_source=ai_meta_site&amp;utm_medium=web&amp;utm_content=AI_demos_page&amp;utm_campaign=July_moment" data-ms-clickable="true" data-ms="{&quot;creative&quot;:&quot;click_external-link&quot;,&quot;creative_detail&quot;:&quot;try_demos_SAM2_tryyourself_CTA&quot;}" target="_blank" rel="noreferrer noopener" data-lnfb-mode="ie" id="u_0_g_k9"><svg viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg"><path opacity="0.4" fill-rule="evenodd" clip-rule="evenodd" d="M19 37C9.05887 37 1 28.9411 1 19C1 9.05887 9.05887 1 19 1C28.9411 1 37 9.05887 37 19C37 28.9411 28.9411 37 19 37Z" stroke="CurrentColor"></path><path d="M16.3102 12.2707L26.1574 12.2707L26.1574 22.1179L24.4338 22.135L24.4335 15.2256L13.3883 26.2707L12.1574 25.0398L23.1858 14.0114L16.3102 14.0115L16.3102 12.2707Z" fill="CurrentColor"></path><path d="M16.3102 12.2707L26.1574 12.2707L26.1574 22.1179L24.4338 22.135L24.4335 15.2256L13.3883 26.2707L12.1574 25.0398L23.1858 14.0114L16.3102 14.0115L16.3102 12.2707Z" fill="CurrentColor"></path></svg>Try the demo</a></div></div><div><p>Our approach</p><h2>The next generation of Meta Segment Anything</h2><p>SAM 2 brings state-of-the-art video and image segmentation capabilities into a single model, while preserving a simple design and fast inference speed.</p></div><div><p>Model architecture</p><div><p>The SAM 2 model extends the promptable capability of SAM to the video domain by adding a per session memory module that captures information about the target object in the video. This allows SAM 2 to track the selected object throughout all video frames, even if the object temporarily disappears from view, as the model has context of the object from previous frames. SAM 2 also supports the ability to make corrections in the mask prediction based on additional prompts on any frame. </p><p>SAM 2’s streaming architecture—which processes video frames one at a time—is also a natural generalization of SAM to the video domain. When SAM 2 is applied to images, the memory module is empty and the model behaves like SAM.</p></div></div><hr><div><p>The Segment Anything Video Dataset</p><h2>A large and diverse video segmentation dataset</h2><p>SAM 2 was trained on a large and diverse set of videos and masklets (object masks over time), created by applying SAM 2 interactively in a model in the loop data-engine. The training data includes the SA-V dataset, which we are open sourcing.</p><p>Please email <a href="mailto:support@segment-anything.com" target="_blank" data-lnfb-mode="ie">support@segment-anything.com</a> with any issues or questions regarding the SA-V dataset.</p><a href="https://ai.meta.com/datasets/segment-anything-video/" data-ms-clickable="true" data-ms="{&quot;creative&quot;:&quot;click_external-link&quot;,&quot;creative_detail&quot;:&quot;sam2_the_segment_anything_video_dataset_explore_the_dataset_cta&quot;}" target="_self"><svg viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg"><path opacity="0.4" fill-rule="evenodd" clip-rule="evenodd" d="M19 37C9.05887 37 1 28.9411 1 19C1 9.05887 9.05887 1 19 1C28.9411 1 37 9.05887 37 19C37 28.9411 28.9411 37 19 37Z" stroke="CurrentColor"></path><path d="M21.9657 12L28.9287 18.963L21.9657 25.926L20.7348 24.7193L25.6203 19.8334L10.0001 19.8334V18.0926L25.5966 18.0926L20.7348 13.2309L21.9657 12Z" fill="CurrentColor"></path><path d="M21.9657 12L28.9287 18.963L21.9657 25.926L20.7348 24.7193L25.6203 19.8334L10.0001 19.8334V18.0926L25.5966 18.0926L20.7348 13.2309L21.9657 12Z" fill="CurrentColor"></path></svg>Explore the dataset</a><div><h3>Highlights</h3><div><ul><li>~600K+ masklets collected on ~51K videos</li><li>Geographically diverse, real world scenarios collected across 47 countries</li><li>Annotations include whole objects, parts, and challenging occlusions</li></ul></div></div></div><div><div><p>Access our research</p><h2>Open innovation</h2><p>To enable the research community to build upon this work, we’re publicly releasing a pretrained Segment Anything 2 model, along with the SA-V dataset, a demo, and code.</p><a href="https://github.com/facebookresearch/segment-anything-2" data-ms-clickable="true" data-ms="{&quot;creative&quot;:&quot;click_external-link&quot;,&quot;creative_detail&quot;:&quot;download_model_SAM2&quot;}" target="_blank" rel="noreferrer noopener" data-lnfb-mode="ie" id="u_0_q_Ll"><svg viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg"><path opacity="0.4" fill-rule="evenodd" clip-rule="evenodd" d="M19 37C9.05887 37 1 28.9411 1 19C1 9.05887 9.05887 1 19 1C28.9411 1 37 9.05887 37 19C37 28.9411 28.9411 37 19 37Z" stroke="CurrentColor"></path><path d="M16.3102 12.2707L26.1574 12.2707L26.1574 22.1179L24.4338 22.135L24.4335 15.2256L13.3883 26.2707L12.1574 25.0398L23.1858 14.0114L16.3102 14.0115L16.3102 12.2707Z" fill="CurrentColor"></path><path d="M16.3102 12.2707L26.1574 12.2707L26.1574 22.1179L24.4338 22.135L24.4335 15.2256L13.3883 26.2707L12.1574 25.0398L23.1858 14.0114L16.3102 14.0115L16.3102 12.2707Z" fill="CurrentColor"></path></svg>Download the model</a><div><h3>Highlights</h3><div><ul><li>We are providing transparency into the SAM 2 training data </li><li>We prioritized geographic diversity in the SA-V dataset for real-world representation</li><li>We conducted a fairness evaluation of SAM 2</li></ul></div></div></div><div><p><img src="https://static.xx.fbcdn.net/rsrc.php/v3/y4/r/-PAXP-deijE.gif" alt="Person coding on desktop computer"></p></div></div><hr><div><h2>Potential model applications</h2><div><p>SAM 2 can be used by itself, or as part of a larger system with other models in future work to enable novel experiences. </p><a href="https://github.com/facebookresearch/segment-anything-2" data-ms-clickable="true" data-ms="{&quot;creative&quot;:&quot;click_external-link&quot;,&quot;creative_detail&quot;:&quot;download_model_SAM2&quot;}" target="_blank" rel="noreferrer noopener" data-lnfb-mode="ie" id="u_0_r_ft"><svg viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg"><path opacity="0.4" fill-rule="evenodd" clip-rule="evenodd" d="M19 37C9.05887 37 1 28.9411 1 19C1 9.05887 9.05887 1 19 1C28.9411 1 37 9.05887 37 19C37 28.9411 28.9411 37 19 37Z" stroke="CurrentColor"></path><path d="M16.3102 12.2707L26.1574 12.2707L26.1574 22.1179L24.4338 22.135L24.4335 15.2256L13.3883 26.2707L12.1574 25.0398L23.1858 14.0114L16.3102 14.0115L16.3102 12.2707Z" fill="CurrentColor"></path><path d="M16.3102 12.2707L26.1574 12.2707L26.1574 22.1179L24.4338 22.135L24.4335 15.2256L13.3883 26.2707L12.1574 25.0398L23.1858 14.0114L16.3102 14.0115L16.3102 12.2707Z" fill="CurrentColor"></path></svg>Download the model</a></div><div><div><h3>Extensible outputs</h3><div><p>The video object segmentation outputs from SAM 2 could be used as input to other AI systems such as modern video generation models to enable precise editing capabilities.</p></div></div><div><h3>Extensible inputs </h3><p>SAM 2 can be extended to take other types of input prompts such as in the future enabling creative ways of interacting with objects in real-time or live video.</p></div></div></div><hr><div><p><h2>Explore additional resources</h2></p></div><div><div><p><h5>Read the AI at Meta blog</h5></p></div><div><p><h5>Read the research paper</h5></p></div><div><p><h5>Download the dataset</h5></p></div><div><p><h5>Explore the dataset</h5></p></div><div><p><h5>Download the model</h5></p></div><div><p><h5>Try the demo</h5></p></div></div></div></div>]]></description>
        </item>
    </channel>
</rss>