<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 05 May 2025 21:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Evolving OpenAI's Structure (263 pts)]]></title>
            <link>https://openai.com/index/evolving-our-structure/</link>
            <guid>43897772</guid>
            <pubDate>Mon, 05 May 2025 18:08:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/index/evolving-our-structure/">https://openai.com/index/evolving-our-structure/</a>, See on <a href="https://news.ycombinator.com/item?id=43897772">Hacker News</a></p>
Couldn't get https://openai.com/index/evolving-our-structure/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[As an experienced LLM user, I don't use generative LLMs often (203 pts)]]></title>
            <link>https://minimaxir.com/2025/05/llm-use/</link>
            <guid>43897320</guid>
            <pubDate>Mon, 05 May 2025 17:22:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://minimaxir.com/2025/05/llm-use/">https://minimaxir.com/2025/05/llm-use/</a>, See on <a href="https://news.ycombinator.com/item?id=43897320">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Lately, I’ve been working on codifying a personal ethics statement about my stances on generative AI as I have been very critical about <a href="https://minimaxir.com/2023/10/ai-sturgeons-law/">several</a> <a href="https://minimaxir.com/2024/08/ai-seinfeld/">aspects</a> of modern GenAI, and yet <a href="https://thenib.com/mister-gotcha/">I participate in it</a>. While working on that statement, I’ve been introspecting on how I myself have been utilizing large language models for both my professional work as a Senior Data Scientist at <a href="https://www.buzzfeed.com/">BuzzFeed</a> and for my personal work blogging and <a href="https://github.com/minimaxir">writing open-source software</a>. For about a decade, I’ve been researching and developing tooling around <a href="https://minimaxir.com/2017/04/char-embeddings/">text generation from char-rnns</a>, to the <a href="https://minimaxir.com/2019/09/howto-gpt2/">ability to fine-tune GPT-2</a>, to <a href="https://minimaxir.com/2020/07/gpt3-expectations/">experiments with GPT-3</a>, and <a href="https://minimaxir.com/2023/03/new-chatgpt-overlord/">even more experiments with ChatGPT</a> and other LLM APIs. Although I don’t claim to the best user of modern LLMs out there, I’ve had plenty of experience working against the cons of next-token predictor models and have become very good at finding the pros.</p><p>It turns out, to my surprise, that I don’t use them nearly as often as people think engineers do, but that doesn’t mean LLMs are useless for me. It’s a discussion that requires case-by-case nuance.</p><h2 id="how-i-interface-with-llms">How I Interface With LLMs</h2><p>Over the years I’ve utilized all the tricks to get the best results out of LLMs. The most famous trick is <a href="https://en.wikipedia.org/wiki/Prompt_engineering">prompt engineering</a>, or the art of phrasing the prompt in a specific manner to coach the model to generate a specific constrained output. Additions to prompts such as <a href="https://minimaxir.com/2024/02/chatgpt-tips-analysis/">offering financial incentives to the LLM</a> or simply <a href="https://minimaxir.com/2025/01/write-better-code/">telling the LLM to make their output better</a> do indeed have a quantifiable positive impact on both improving adherence to the original prompt and the output text quality. Whenever my coworkers ask me why their LLM output is not what they expected, I suggest that they apply more prompt engineering and it almost always fixes their issues.</p><p><strong>No one in the AI field is happy about prompt engineering</strong>, especially myself. Attempts to remove the need for prompt engineering with more robust <a href="https://en.wikipedia.org/wiki/Reinforcement_learning_from_human_feedback">RLHF</a> paradigms have only made it <em>even more rewarding</em> by allowing LLM developers to make use of better prompt adherence. True, “Prompt Engineer” as a job title <a href="https://www.wsj.com/articles/the-hottest-ai-job-of-2023-is-already-obsolete-1961b054?st=DMVDgm&amp;reflink=desktopwebshare_permalink">turned out to be a meme</a> but that’s mostly because prompt engineering is now an expected skill for anyone seriously using LLMs. Prompt engineering works, and part of being a professional is using what works even if it’s silly.</p><p>To that end, <strong>I never use ChatGPT.com</strong> or other normal-person frontends for accessing LLMs because they are harder to control. Instead, I typically access the backend UIs provided by each LLM service, which serve as a light wrapper over the API functionality which also makes it easy to port to code if necessary. Accessing LLM APIs like the ChatGPT API directly allow you to set <a href="https://promptengineering.org/system-prompts-in-large-language-models/">system prompts</a> which control the “rules” for the generation that can be very nuanced. Specifying specific constraints for the generated text such as “keep it to no more than 30 words” or “never use the word ‘delve’” tends to be more effective in the system prompt than putting them in the user prompt as you would with ChatGPT.com. Any modern LLM interface that does not let you explicitly set a system prompt is most likely <a href="https://docs.anthropic.com/en/release-notes/system-prompts">using their own system prompt</a> which you can’t control: for example, when ChatGPT.com had an issue where it was <a href="https://openai.com/index/sycophancy-in-gpt-4o/">too sycophantic</a> to its users, OpenAI <a href="https://simonwillison.net/2025/Apr/29/chatgpt-sycophancy-prompt/">changed the system prompt</a> to command ChatGPT to “avoid ungrounded or sycophantic flattery.” I tend to use <a href="https://www.anthropic.com/">Anthropic</a> Claude’s API — Claude Sonnet in particular — more than any ChatGPT variant because Claude anecdotally is less “robotic” and also handles coding questions much more accurately.</p><p>Additionally with the APIs, you can control the “<a href="https://www.hopsworks.ai/dictionary/llm-temperature">temperature</a>” of the generation, which at a high level controls the creativity of the generation. LLMs by default do not select the next token with the highest probability in order to allow it to give different outputs for each generation, so I prefer to set the temperature to <code>0.0</code> so that the output is mostly deterministic, or <code>0.2 - 0.3</code> if some light variance is required. Modern LLMs now use a default temperature of <code>1.0</code>, and I theorize that higher value is accentuating <a href="https://en.wikipedia.org/wiki/Hallucination_%28artificial_intelligence%29">LLM hallucination</a> issues where the text outputs are internally consistent but factually wrong.</p><h2 id="llms-for-professional-problem-solving">LLMs for Professional Problem Solving!</h2><p>With that pretext, I can now talk about how I have used generative LLMs over the past couple years at BuzzFeed. Here are outlines of some (out of many) projects I’ve worked on using LLMs to successfully solve problems quickly:</p><ul><li>BuzzFeed site curators developed a new <a href="https://www.siteguru.co/seo-academy/website-taxonomy">hierarchal taxonomy</a> to organize thousands of articles into a specified category and subcategory. Since we had no existing labeled articles to train a traditional <a href="https://scikit-learn.org/stable/modules/multiclass.html">multiclass classification</a> model to predict these new labels, I wrote a script to hit the Claude Sonnet API with a system prompt saying <code>The following is a taxonomy: return the category and subcategory that best matches the article the user provides.</code> plus the JSON-formatted hierarchical taxonomy, then I provided the article metadata as the user prompt, all with a temperature of <code>0.0</code> for the most precise results. Running this in a loop for all the articles resulted in appropriate labels.</li><li>After identifying hundreds of distinct semantic clusters of BuzzFeed articles using data science shenanigans, it became clear that there wasn’t an easy way to give each one unique labels. I wrote another script to hit the Claude Sonnet API with a system prompt saying <code>Return a JSON-formatted title and description that applies to all the articles the user provides.</code> with the user prompt containing five articles from that cluster: again, running the script in a loop for all clusters provided excellent results.</li><li>One BuzzFeed writer asked if there was a way to use a LLM to sanity-check grammar questions such as “should I use an <a href="https://www.merriam-webster.com/grammar/em-dash-en-dash-how-to-use">em dash</a> here?” against the <a href="https://www.buzzfeed.com/buzzfeednews/buzzfeed-style-guide">BuzzFeed style guide</a>. Once again I hit the Claude Sonnet API, this time copy/pasting the <em>full</em> style guide in the system prompt plus a command to <code>Reference the provided style guide to answer the user's question, and cite the exact rules used to answer the question.</code> In testing, the citations were accurate and present in the source input, and the reasonings were consistent.</li></ul><p>Each of these projects were off-hand ideas pitched in a morning standup or a Slack DM, and yet each project only took an hour or two to complete a proof of concept (including testing) and hand off to the relevant stakeholders for evaluation. For projects such as the hierarchal labeling, without LLMs I would have needed to do more sophisticated R&amp;D and likely would have taken days including building training datasets through manual labeling, which is not intellectually gratifying. Here, LLMs did indeed follow the <a href="https://en.wikipedia.org/wiki/Pareto_principle">Pareto principle</a> and got me 80% of the way to a working solution, but the remaining 20% of the work iterating, testing and gathering feedback took longer. Even after the model outputs became more reliable, LLM hallucination was still a concern which is why I also advocate to my coworkers to use caution and double-check with a human if the LLM output is peculiar.</p><p>There’s also one use case of LLMs that doesn’t involve text generation that’s as useful in my professional work: <a href="https://platform.openai.com/docs/guides/embeddings">text embeddings</a>. Modern text embedding models technically are LLMs, except instead of having a head which outputs the logits for the next token, it outputs a vector of numbers that uniquely identify the input text in a higher-dimensional space. All improvements to LLMs that the ChatGPT revolution inspired, such as longer context windows and better quality training regimens, also apply to these text embedding models and caused them to improve drastically over time with models such as <a href="https://www.nomic.ai/blog/posts/nomic-embed-text-v1">nomic-embed-text</a> and <a href="https://huggingface.co/Alibaba-NLP/gte-modernbert-base">gte-modernbert-base</a>. Text embeddings have done a lot at BuzzFeed from identifying similar articles to building recommendation models, but this blog post is about generative LLMs so I’ll save those use cases for another time.</p><h2 id="llms-for-writing">LLMs for Writing?</h2><p>No, I don’t use LLMs for writing the text on this very blog, which I suspect has now become a default assumption for people reading an article written by an experienced LLM user. My blog is far too weird for an LLM to properly emulate. My writing style is blunt, irreverent, and occasionally cringe: even with prompt engineering plus <a href="https://www.promptingguide.ai/techniques/fewshot">few-shot prompting</a> by giving it examples of my existing blog posts and telling the model to follow the same literary style precisely, LLMs output something closer to Marvel movie dialogue. But even if LLMs <em>could</em> write articles in my voice I still wouldn’t use them due of the ethics of misrepresenting authorship by having the majority of the work not be my own words. Additionally, I tend to write about very recent events in the tech/coding world that would not be strongly represented in the training data of a LLM if at all, which increases the likelihood of hallucination.</p><p>There is one silly technique I discovered to allow a LLM to improve my writing without having it do <em>my writing</em>: feed it the text of my mostly-complete blog post, and ask the LLM to pretend to be a cynical <a href="https://news.ycombinator.com/news">Hacker News</a> commenter and write five distinct comments based on the blog post. This not only identifies weaker arguments for potential criticism, but it also doesn’t tell me what I <em>should</em> write in the post to preemptively address that negative feedback so I have to solve it organically. When running a rough draft of this very blog post and the Hacker News system prompt through the Claude API (<a href="https://github.com/minimaxir/llm-use/blob/main/criticism_hn.md">chat log</a>), it noted that my examples of LLM use at BuzzFeed are too simple and not anything more innovative than traditional <a href="https://aws.amazon.com/what-is/nlp/">natural language processing</a> techniques, so I made edits elaborating how NLP would not be as efficient or effective.</p><h2 id="llms-for-companionship">LLMs for Companionship?</h2><p>No, I don’t use LLMs as friendly chatbots either. The runaway success of LLM personal companion startups such as <a href="https://character.ai/">character.ai</a> and <a href="https://replika.com/">Replika</a> are alone enough evidence that LLMs have a use, even if the use is just entertainment/therapy and not more utilitarian.</p><p>I admit that I am an outlier since treating LLMs as a friend is the most common use case. Myself being an introvert aside, it’s hard to be friends with an entity who is trained to be as friendly as possible but also habitually lies due to hallucination. I <em>could</em> prompt engineer an LLM to call me out on my bullshit instead of just giving me positive affirmations, but there’s no fix for the lying.</p><h2 id="llms-for-coding">LLMs for Coding???</h2><p>Yes, I use LLMs for coding, but only when I am reasonably confident that they’ll increase my productivity. Ever since the dawn of the original ChatGPT, I’ve asked LLMs to help me write <a href="https://en.wikipedia.org/wiki/Regular_expression">regular expressions</a> since that alone saves me hours, embarrassing to admit. However, the role of LLMs in coding has expanded far beyond that nowadays, and coding is even more nuanced and more controversial on how you can best utilize LLM assistance.</p><p>Like most coders, I Googled coding questions and clicked on the first <a href="https://stackoverflow.com/">Stack Overflow</a> result that seemed relevant, until I decided to start asking Claude Sonnet the same coding questions and getting much more detailed and bespoke results. This was more pronounced for questions which required specific functional constraints and software frameworks, the combinations of which would likely not be present in a Stack Overflow answer. One paraphrased example I recently asked Claude Sonnet while writing <a href="https://minimaxir.com/2025/02/embeddings-parquet/">another blog post</a> is <code>Write Python code using the Pillow library to composite five images into a single image: the left half consists of one image, the right half consists of the remaining four images.</code> (<a href="https://github.com/minimaxir/llm-use/blob/main/pil_composition.md">chat log</a>). Compositing multiple images with <a href="https://pypi.org/project/pillow/">Pillow</a> isn’t too difficult and there’s enough <a href="https://stackoverflow.com/questions/3374878/with-the-python-imaging-library-pil-how-does-one-compose-an-image-with-an-alp">questions/solutions about it on Stack Overflow</a>, but the specific way it’s composited is unique and requires some positioning shenanigans that I would likely mess up on the first try. But Claude Sonnet’s code <a href="https://github.com/minimaxir/mtg-embeddings/blob/main/mtg_related_card_img.ipynb">got it mostly correct</a> and it was easy to test, which saved me time doing unfun debugging.</p><p>However, for more complex code questions particularly around less popular libraries which have fewer code examples scraped from Stack Overflow and <a href="https://github.com/">GitHub</a>, I am more cautious of the LLM’s outputs. One real-world issue I’ve had is that I need a way to log detailed metrics to a database while training models — for which I use the <a href="https://huggingface.co/docs/transformers/en/main_classes/trainer">Trainer class</a> in <a href="https://huggingface.co/docs/transformers/en/index">Hugging Face transformers</a> — so that I can visualize and analyze it later. I asked Claude Sonnet to <code>Write a Callback class in Python for the Trainer class in the Hugging Face transformers Python library such that it logs model training metadata for each step to a local SQLite database, such as current epoch, time for step, step loss, etc.</code> (<a href="https://github.com/minimaxir/llm-use/blob/main/hf_trainer_logger_sqlite.md">chat log</a>). This one I was less optimistic about since there isn’t much code about creating custom callbacks, however the Claude-generated code implemented some helpful ideas that weren’t on the top-of-my-mind when I asked, such a buffer to limit blocking I/O, SQLite config speedups, batch inserts, and connection handling. Asking Claude to “make the code better” twice (why not?) results in a few more unexpected ideas such as SQLite connection caching and using a single column with the JSON column type to store an arbitrary number of metrics, in addition to making the code much more Pythonic. It is still a lot of code such that it’s unlikely to work out-of-the-box without testing in the full context of an actual training loop. However, even if the code has flaws, the ideas themselves are extremely useful and in this case it would be much faster and likely higher quality code overall to hack on this generated code instead of writing my own SQLite logger from scratch.</p><p>For actual data science in my day-to-day work that I spend most of my time, I’ve found that code generation from LLMs is less useful. LLMs cannot output the text result of mathematical operations reliably, with some APIs working around that by <a href="https://platform.openai.com/docs/assistants/tools/code-interpreter">allowing for a code interpreter</a> to perform data ETL and analysis, but given the scale of data I typically work with it’s not cost-feasible to do that type of workflow. Although <a href="https://pandas.pydata.org/">pandas</a> is the standard for manipulating tabular data in Python and has been around since 2008, I’ve been using the relatively new <a href="https://pola.rs/">polars</a> library exclusively, and I’ve noticed that LLMs tend to hallucinate polars functions as if they were pandas functions which requires documentation deep dives to confirm which became annoying. For data visualization, which I don’t use Python at all and instead use <a href="https://www.r-project.org/">R</a> and <a href="https://ggplot2.tidyverse.org/">ggplot2</a>, I really haven’t had a temptation to consult a LLM, in addition to my skepticism that LLMs would know both those frameworks as well. The techniques I use for data visualization have been <a href="https://minimaxir.com/2017/08/ggplot2-web/">unchanged since 2017</a>, and the most time-consuming issue I have when making a chart is determining whether the data points are too big or too small for humans to read easily, which is not something a LLM can help with.</p><p>Asking LLMs coding questions is only one aspect of coding assistance. One of the other major ones is using a coding assistant with in-line code suggestions such as <a href="https://github.com/features/copilot">GitHub Copilot</a>. Despite my success in using LLMs for one-off coding questions, I actually dislike using coding assistants for an unexpected reason: it’s distracting. Whenever I see a code suggestion from Copilot pop up, I have to mentally context switch from writing code to reviewing code and then back again, which destroys my focus. Overall, it was a net neutral productivity gain but a net negative cost as Copilots are much more expensive than just asking a LLM ad hoc questions through a web UI.</p><p>Now we can talk about the elephants in the room — agents, <a href="https://www.anthropic.com/news/model-context-protocol">MCP</a>, and vibe coding — and my takes are spicy. Agents and MCP, at a high-level, are a rebranding of the Tools paradigm popularized by the <a href="https://arxiv.org/abs/2210.03629">ReAct paper</a> in 2022 where LLMs can decide whether a tool is necessary to answer the user input, extract relevant metadata to pass to the tool to run, then return the results. The rapid LLM advancements in context window size and prompt adherence since then have made Agent workflows more reliable, and the standardization of MCP is an objective improvement over normal Tools that I encourage. However, <strong>they don’t open any new use cases</strong> that weren’t already available when <a href="https://www.langchain.com/">LangChain</a> first hit the scene a couple years ago, and now <a href="https://www.polarsparc.com/xhtml/MCP.html">simple implementations of MCP</a> workflows are even more complicated and confusing <a href="https://minimaxir.com/2023/07/langchain-problem/">than it was back then</a>. I personally have not been able to find any novel use case for Agents, not then and not now.</p><p>Vibe coding with coding agents like <a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude Code</a> or <a href="https://www.cursor.com/en">Cursor</a> is something I have little desire to even experiment with. On paper, coding agents should be able to address my complaints with LLM-generated code reliability since it inherently double-checks itself and it’s able to incorporate the context of an entire code project. However, I have also heard the horror stories of people spending hundreds of dollars by accident and not get anything that solves their coding problems. There’s a fine line between experimenting with code generation and <em>gambling</em> with code generation. Vibe coding can get me 80% of the way there, and I agree there’s value in that for building quick personal apps that either aren’t ever released publicly, or are released with disclaimers about its “this is released as-is” nature. But it’s unprofessional to use vibe coding as a defense to ship knowingly substandard code for serious projects, and the only code I can stand by is the code I am fully confident in its implementation.</p><p>Of course, the coding landscape is always changing, and everything I’ve said above is how I use LLMs for now. It’s entirely possible I see a post on Hacker News that completely changes my views on vibe coding or other AI coding workflows, but I’m happy with my coding productivity as it is currently and I am able to complete all my coding tasks quickly and correctly.</p><h2 id="whats-next-for-llm-users">What’s Next for LLM Users?</h2><p>Discourse about LLMs and their role in society has become bifuricated enough such that making the extremely neutral statement that <a href="https://bsky.app/profile/hankgreen.bsky.social/post/3lnjohdrwf22j">LLMs have some uses</a> is enough to justify a barrage of harrassment. I strongly disagree with AI critic Ed Zitron <a href="https://www.wheresyoured.at/reality-check/">about his assertions</a> that the reason the LLM industry is doomed because OpenAI and other LLM providers can’t earn enough revenue to offset their massive costs as LLMs have no real-world use. Two things can be true simultaneously: (a) LLM provider cost economics are too negative to return positive ROI to investors, and (b) LLMs are useful for solving problems that are meaningful and high impact, albeit not to the AGI hype that would justify point (a). This particular combination creates a frustrating gray area that requires a nuance that an ideologically split social media can no longer support gracefully. Hypothetically, If OpenAI and every other LLM provider suddenly collapsed and no better LLM models would ever be trained and released, open-source and permissively licensed models such as <a href="https://huggingface.co/Qwen/Qwen3-235B-A22B">Qwen3</a> and <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1">DeepSeek R1</a> that perform comparable to ChatGPT are valid <a href="https://en.wikipedia.org/wiki/Substitute_good">substitute goods</a> and they can be hosted on dedicated LLM hosting providers like <a href="https://www.cerebras.ai/">Cerebras</a> and <a href="https://groq.com/">Groq</a> who can actually make money on each user inference query. OpenAI collapsing would not cause the end of LLMs, because LLMs are useful <em>today</em> and there will always be a nonzero market demand for them: it’s a bell that can’t be unrung.</p><p>As a software engineer — and especially as a data scientist — one thing I’ve learnt over the years is that it’s always best to use the right tool when appropriate, and LLMs are just another tool in that toolbox. LLMs can be both productive and counterproductive depending on where and when you use them, but they are most definitely not useless. LLMs are more akin to forcing a square peg into a round hole (at the risk of damaging either the peg or hole in the process) while doing things without LLM assistance is the equivalent of carefully defining a round peg to pass through the round hole without incident. But for some round holes, sometimes shoving the square peg through and asking questions later makes sense when you need to iterate quickly, while sometimes you have to be more precise with both the peg and the hole to ensure neither becomes damaged, because then you have to spend extra time and money fixing the peg and/or hole.</p><p>…maybe it’s okay if I ask an LLM to help me write my metaphors going forward.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[No Instagram, no privacy (104 pts)]]></title>
            <link>https://blog.wouterjanleys.com/blog/no-instagram-no-privacy/</link>
            <guid>43896228</guid>
            <pubDate>Mon, 05 May 2025 15:37:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.wouterjanleys.com/blog/no-instagram-no-privacy/">https://blog.wouterjanleys.com/blog/no-instagram-no-privacy/</a>, See on <a href="https://news.ycombinator.com/item?id=43896228">Hacker News</a></p>
<div id="readability-page-1" class="page"><article itemscope="" itemtype="http://schema.org/BlogPosting">
        

        

        <div itemprop="articleBody">
            <p>I somehow escaped having an Instagram account.</p>
<p>This means that I am oblivious to all of my friends’ fun broadcasted on Instagram. I don’t feel pressured either to update the abstract audience of everyone I ever connected with online, on where I am, what I am doing or who I am hanging out with.</p>
<p>I feel very blessed.</p>
<p>Still, Instagram hasn’t completely escaped me. And it bugs me.</p>
<p>My wife and I live a pretty social life. My wife’s job required us to temporarily move to a place far away from home. Luckily the culture of the place we moved to is very friendly to foreigners and there is a big bunch of people like us who are also new to this place and eager to make new friends for the time that they are there.</p>
<p>This makes the lines of our friend circles blurred and our social life very dynamic. To illustrate: old friends leave and new friends arrive with such regularity, that the guest list of a birthday party this year will look vastly different from the one we threw last year.</p>
<p>Over the past few months, it has struck me multiple times how people know more about my life than I tell them or likely hear from others. Like: where we travelled last weekend and with whom. How can they know? Instagram. A post from someone else on that trip about that trip. Of course. You don’t have to be on Instagram, to <em>be</em> on instagram.</p>
<p>It’s not the worst problem to have, I know. It’s great that I participate in happenings that are fun enough for other people to post about. And without social media, people also talk about common friends or friends of friends.</p>
<p>Yet sometimes I am not sure about how I feel about other people hearing about my weekend adventures through social media of other people. Not that there is anything to hide, I just hope the message came across well.</p>
<p>Real life interactions usually offer the possibility to be mindful of sensitivities around a certain subject, as can be the case if the topic of discussion is about who is hanging out with whom. The goal of social interactions (offline), I believe, is often less about what all the talking is about than it is to have the interaction. So surely you will try to avoid hurting the feelings of whom you are talking with.</p>
<p>In the loud bursts of social media self-promotion and personal branding, any such nuance of tone is impossible. The audience is way too diverse to cater to all possible sensitivities. Just think of the unease to post something about a night out with the boys that strikes the right tone to all of: partner, boss and said boys. It becomes even more complicated if you have to count in the social fabric between people featuring in your post and your followers. Yet those relationships are equally real, and have just as much context.</p>
<p>Imagine a friend you were on a weekend trip with. This friend talks with another common friend. This common friend could have equally well been on that weekend trip because you like him or her but, due to circumstances, as is life, you did not invite him. You probably would feel uncomfortable with that first friend talking about that trip as if it was the most awesome trip ever, that everyone had non-stop fun and now everyone who was on that trip are best friends for life.</p>
<p>Yet this is the kind of impression an Instagram post or story typically evokes. It’s probably the content most of the first friends’ followers love to see. Except for maybe the few people who wonder why you didn’t ask them to join the trip.</p>
<p>I am happy not to be on Instagram. I would probably freak out by the pressure to post while worrying about how the same post is interpreted by different people. Yet other people still post about me. And now I worry how common friends, who may have seen those posts, interpret such posts, potentially not entirely positively.</p>
<p>Without an Instagram account, I luckily stay blissfully oblivious to whatever content is going around from which my whereabouts or activities can be deduced. It’s probably a lot less about me than I think anyway. At the same time, not really knowing what other people know, can also be a nagging sense of worry. </p>
<p>Every time I talk with someone who gives me a hint that he or she <em>knows</em> what I was doing last Friday night I get a real eerie feeling. Did this person get to see that picture we took right before dinner? Or did she see a story at the end of the night, one too many drinks later, when I was doing that silly dance that surely someone had filmed?</p>
<p>From when I was in law school, I remember it being challenging to find a simple and encompassing definition of the right to privacy. A definition that has worked for me is “being in control of what other people know about you”.</p>
<p>Given this definition, there are many flagrant privacy violations I am subject to and aware of (yes, internet companies that do large scale gathering of personal data, I am thinking of you). I know that I am not in control of what the online store knows about me when it’s nudging me to buy this or that pair of headphones. But somehow this is easy to shrug off. Not being in control of what your friends know about you, due to social media stories spread by other people, feels more unsettling.</p>
<p>How does one fix or regulate this? Maybe we need some sort of social etiquette where it’s frowned upon to post about social gatherings to any audience beyond who already was at that gathering. Although this arguably defies the purpose of social media altogether.</p>
<p>Meanwhile, I’ll continue feeling blessed, not knowing that my new cool friend threw a birthday party last week to which I was not invited. There’s no social disappointment that will discourage me to further invest in that relationship, improving the chances that I will be celebrating his or her birthday next year.</p>
<p>And what about that new friend who wasn’t on the trip, but may or may not have just scrolled through some flashy posts about it after a tough day at work? Hopefully he forgives me and still wants to join the next trip.</p>
        </div>
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How are cyber criminals rolling in 2025? (114 pts)]]></title>
            <link>https://vin01.github.io/piptagole/cybcecrime/security/cybersecurity/2025/05/05/state-cyber-security.html</link>
            <guid>43896188</guid>
            <pubDate>Mon, 05 May 2025 15:33:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://vin01.github.io/piptagole/cybcecrime/security/cybersecurity/2025/05/05/state-cyber-security.html">https://vin01.github.io/piptagole/cybcecrime/security/cybersecurity/2025/05/05/state-cyber-security.html</a>, See on <a href="https://news.ycombinator.com/item?id=43896188">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content">
        <article itemscope="" itemtype="http://schema.org/BlogPosting">

  

  <div itemprop="articleBody">
    <p>Speaking of earning a living, would you expect them to pay for web hosting/ cloud providers?</p>

<h2 id="free-content-hosting">Free content hosting</h2>

<h3 id="governments">Governments</h3>

<p>Government departments are not known for their amazing cyber security posture. Couldn’t they be utilized as free hosting providers?</p>

<p><img src="https://vin01.github.io/piptagole/assets/free-cms/gov.png" alt="free-gov-hosting"></p>

<p>and it is truly international</p>

<p><img src="https://vin01.github.io/piptagole/assets/free-cms/international.png" alt="internaitonal"></p>

<h3 id="universities--schools">Universities &amp; schools</h3>

<p>How about universities? they have a lot of web facing services and while they do teach cyber security sometimes, they can’t be that secure?</p>

<p><img src="https://vin01.github.io/piptagole/assets/free-cms/uni.png" alt="yale and oregon state university"></p>

<p>For the zeitgeist-ignorant:</p>

<p><strong>What is Robux?</strong>: A virtual in-game currency used by gaming platform <a href="https://en.wikipedia.org/wiki/Roblox">Roblox</a></p>

<p>Content mostly revolves around: Onlyfans accounts/account generators, Robux, Amazon gift cards and Free movies. I suppose these are the most popular things on the internet these days.</p>



<p>Who doesn’t use an antivirus or a VPN to keep themselves, their family and their employees safe? These obviously unsafe links would get blocked and flagged by these advanced tools. You wish!</p>

<p><img src="https://vin01.github.io/piptagole/assets/free-cms/safe-web.png" alt="safe-web"></p>

<p>and more ..</p>

<p><img src="https://vin01.github.io/piptagole/assets/free-cms/safe-web2.png" alt="safe-web-2"></p>

<p><img src="https://vin01.github.io/piptagole/assets/free-cms/safe-web3.png" alt="safe-web-3"></p>

<p>Turns out, they know which domains get a good reputation from these link m-analyzers.</p>

<p>Norton, Kaspersky, Zscaler, F-secure, NordVPN, Virustotal, Palo Alto: all of them marked these links as safe. The same for SOAR tools like URLscan.</p>

<h2 id="but-if-we-only-allow-access-to-a-pre-approved-list-of-domains-that-should-help-right">But if we only allow access to a pre-approved list of domains, that should help, right?</h2>

<p>No! Turns out, we are again one step behind. They know that there are some domains which everyone trusts. e.g., everything hosted by google, including the shiny “Looker studio” used to visualize data as pretty graphs.</p>

<p><img src="https://vin01.github.io/piptagole/assets/free-cms/looker.png" alt="Looker studio"></p>

<h2 id="does-this-actually-work">Does this actually work?</h2>

<p>Apparently so! Here are some benign search results performed from a true Robux seeker and movie freeloader’s perspective.</p>

<p><img src="https://vin01.github.io/piptagole/assets/free-cms/seo.png" alt="good seo"></p>

<p>They have to be good at SEO and know their targets. Business as usual. ¯\_(ツ)_/¯</p>

<h2 id="how-are-they-exploiting-these-sites">How are they exploiting these sites?</h2>

<p>I have been advised not to disclose specific vulnerabilities since the parties involved are not most friendly and transparent in handling security reports. While most of these got reported and some even got fixed, I can only disclose high-level details of the compromise path. Some just ghosted me after conveniently fixing the flaws, and one even gave me a phone call, which was somewhat scary and perhaps not worth the adrenaline.</p>

<ul>
  <li>Outdated Wordpress plugins and CMS systems</li>
  <li>Cache poisoning via features like “search my site”</li>
  <li>Credential stuffing</li>
  <li>Dangling DNS records/ Subdomain takeovers</li>
</ul>

<h2 id="why-are-they-doing-it">Why are they doing it?</h2>

<p>Most of these files are not <em>malware</em> per se, since that might be a bit easy to detect out in the wild. But these PDFs and web pages link to a chain of websites. Each link would take the brave person who clicks them to another link and then to another, going through an affiliate network and making small amounts of money on the way.</p>

<p>Some of these links are also just plain phishing, mostly targeting kids looking for free/ cheap gaming gold “Robux”.</p>

<h2 id="this-is-not-new">This is not new</h2>

<p>I came across this post from July 2020 which discusses something similar: <a href="https://medium.com/@thezedwards/july-2020-compromised-paf-subdomains-mostly-via-microsoft-azure-5834ae22733a">https://medium.com/@thezedwards/july-2020-compromised-paf-subdomains-mostly-via-microsoft-azure-5834ae22733a</a></p>


  </div>
</article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: VectorVFS, your filesystem as a vector database (172 pts)]]></title>
            <link>https://vectorvfs.readthedocs.io/en/latest/</link>
            <guid>43896011</guid>
            <pubDate>Mon, 05 May 2025 15:17:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://vectorvfs.readthedocs.io/en/latest/">https://vectorvfs.readthedocs.io/en/latest/</a>, See on <a href="https://news.ycombinator.com/item?id=43896011">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main" v-pre="">
            
  <p><a href="https://vectorvfs.readthedocs.io/en/latest/_images/logo_vectorvfs.png"><img alt="Banner" src="https://vectorvfs.readthedocs.io/en/latest/_images/logo_vectorvfs.png">
</a></p><section id="vectorvfs-your-filesystem-as-a-vector-database">

<p>VectorVFS is a lightweight Python package that transforms your Linux filesystem into a vector database by
leveraging the native VFS (Virtual File System) extended attributes. Rather than maintaining a separate
index or external database, VectorVFS stores vector embeddings directly alongside each file—turning your
existing directory structure into an efficient and semantically searchable embedding store.</p>
<p>VectorVFS supports Meta’s Perception Encoders (PE) <a href="https://arxiv.org/abs/2504.13181">[arxiv]</a> which
includes image/video encoders for vision language understanding, it outperforms InternVL3, Qwen2.5VL
and SigLIP2 for zero-shot image tasks. We support both CPU and GPU but if you have a large
collection of images it might take a while in the first time to embed all items if you are
not using a GPU.</p>
<div>
<p>Note</p>
<p>This is the first release of VectorVFS and we are expanding models and data types.
Currently we support only Perception Encoders (PE) and images.</p>
</div>
<section id="key-features">
<h2>Key Features<a href="#key-features" title="Link to this heading">¶</a></h2>
<ul>
<li><p><strong>Zero-overhead indexing</strong>
Embeddings are stored as extended attributes (xattrs) on each file, eliminating the need for external
index files or services.</p></li>
<li><p><strong>Seamless retrieval</strong>
Perform searches across your filesystem, retrieving files by embedding similarity.</p></li>
<li><p><strong>Flexible embedding support</strong>
Plug in any embedding model—from pre-trained transformers to custom feature extractors—and let
VectorVFS handle storage and lookup.</p></li>
<li><p><strong>Lightweight and portable</strong>
Built on native Linux VFS functionality, VectorVFS requires no additional daemons, background
processes or databases.</p></li>
</ul>
<div>
<p role="heading"><span>Contents</span></p>
<ul>
<li><a href="https://vectorvfs.readthedocs.io/en/latest/installation.html">Installation</a><ul>
<li><a href="https://vectorvfs.readthedocs.io/en/latest/installation.html#installing-with-pip">Installing with pip</a></li>
<li><a href="https://vectorvfs.readthedocs.io/en/latest/installation.html#using-the-vfs-script">Using the vfs Script</a></li>
</ul>
</li>
<li><a href="https://vectorvfs.readthedocs.io/en/latest/architecture.html">Design and architecture</a><ul>
<li><a href="https://vectorvfs.readthedocs.io/en/latest/architecture.html#what-is-an-inode">What is an inode?</a></li>
<li><a href="https://vectorvfs.readthedocs.io/en/latest/architecture.html#how-ext4-stores-extended-attributes">How Ext4 stores extended attributes</a></li>
</ul>
</li>
<li><a href="https://vectorvfs.readthedocs.io/en/latest/usage.html">Using the <cite>vfs</cite> command</a><ul>
<li><a href="https://vectorvfs.readthedocs.io/en/latest/usage.html#vfs-search-command"><cite>vfs search</cite> command</a></li>
</ul>
</li>
</ul>
</div>
</section>
</section>
<section id="indices-and-tables">
<h2>Indices and tables<a href="#indices-and-tables" title="Link to this heading">¶</a></h2>
<ul>
<li><p><a href="https://vectorvfs.readthedocs.io/en/latest/genindex.html"><span>Index</span></a></p></li>
<li><p><a href="https://vectorvfs.readthedocs.io/en/latest/py-modindex.html"><span>Module Index</span></a></p></li>
<li><p><a href="https://vectorvfs.readthedocs.io/en/latest/search.html"><span>Search Page</span></a></p></li>
</ul>
</section>


          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Bracket – selfhosted tournament system (107 pts)]]></title>
            <link>https://github.com/evroon/bracket</link>
            <guid>43895456</guid>
            <pubDate>Mon, 05 May 2025 14:20:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/evroon/bracket">https://github.com/evroon/bracket</a>, See on <a href="https://news.ycombinator.com/item?id=43895456">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/evroon/bracket/blob/master/frontend/public/favicon-wide.svg"><img width="500" src="https://github.com/evroon/bracket/raw/master/frontend/public/favicon-wide.svg" alt="Bracket - Tournament System"></a>
</p>
<p dir="auto">
  <a href="https://github.com/evroon/bracket/actions"><img src="https://camo.githubusercontent.com/ccfa14f52676b0092543f3b72359e8a3595d4e5a9f111b58b308d96ef9c1fdad/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f6576726f6f6e2f627261636b65742f6261636b656e642e796d6c" alt="build status" data-canonical-src="https://img.shields.io/github/actions/workflow/status/evroon/bracket/backend.yml"></a>
  <a href="https://crowdin.com/project/bracket" rel="nofollow"><img src="https://camo.githubusercontent.com/1f64c284e1fa22e1e72374f0e4a8f589c7313400d62c337a565936e2672e6c60/68747470733a2f2f6261646765732e63726f7764696e2e6e65742f627261636b65742f6c6f63616c697a65642e737667" alt="translations" data-canonical-src="https://badges.crowdin.net/bracket/localized.svg"></a>
  <a href="https://github.com/evroon/bracket/commits/"><img src="https://camo.githubusercontent.com/38a5ac206dbef151607627d0ac681e963d4d1b595f604c03bb680d3285519072/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6576726f6f6e2f627261636b6574" alt="last commit" data-canonical-src="https://img.shields.io/github/last-commit/evroon/bracket"></a>
  <a href="https://github.com/evroon/bracket/releases"><img src="https://camo.githubusercontent.com/467f10ca6354ece9832b9f02af28b3a525b3ee24d56b168c68264ebff36e32df/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6576726f6f6e2f627261636b6574" alt="release" data-canonical-src="https://img.shields.io/github/v/release/evroon/bracket"></a>
  <a href="https://codecov.io/gh/evroon/bracket" rel="nofollow"><img src="https://camo.githubusercontent.com/a0c86e929956b818f5646c51cc8a509eca10d82e7b98c12e42e57363de24efff/68747470733a2f2f636f6465636f762e696f2f67682f6576726f6f6e2f627261636b65742f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d594a4c30445650464647" alt="codecov" data-canonical-src="https://codecov.io/gh/evroon/bracket/branch/master/graph/badge.svg?token=YJL0DVPFFG"></a>
</p>
<p dir="auto">
  <a href="https://www.bracketapp.nl/demo" rel="nofollow">Demo</a>
  ·
  <a href="https://docs.bracketapp.nl/" rel="nofollow">Documentation</a>
  ·
  <a href="https://docs.bracketapp.nl/docs/running-bracket/quickstart" rel="nofollow">Quickstart</a>
  ·
  <a href="https://github.com/evroon/bracket">GitHub</a>
  ·
  <a href="https://github.com/evroon/bracket/releases">Releases</a>
</p>

<p dir="auto">Tournament system meant to be easy to use. Bracket is written in async Python (with
<a href="https://fastapi.tiangolo.com/" rel="nofollow">FastAPI</a>) and <a href="https://nextjs.org/" rel="nofollow">Next.js</a> as frontend using the
<a href="https://mantine.dev/" rel="nofollow">Mantine</a> library.</p>
<p dir="auto">It has the following features:</p>
<ul dir="auto">
<li>Supports <strong>single elimination, round-robin and swiss</strong> formats.</li>
<li><strong>Build your tournament structure</strong> with multiple stages that can have multiple groups/brackets in
them.</li>
<li><strong>Drag-and-drop matches</strong> to different courts or reschedule them to another start time.</li>
<li>Various <strong>dashboard pages</strong> are available that can be presented to the public, customized with a
logo.</li>
<li>Create/update <strong>teams</strong>, and add players to <strong>teams</strong>.</li>
<li>Create <strong>multiple clubs</strong>, with <strong>multiple tournaments</strong> per club.</li>
<li><strong>Swiss tournaments</strong> can be handled dynamically, with automatic scheduling of matches.</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/evroon/bracket/blob/master/docs/content/img/bracket-screenshot-design.png"><img alt="" src="https://github.com/evroon/bracket/raw/master/docs/content/img/bracket-screenshot-design.png" width="100%"></a></p>
<p dir="auto">
<a href="https://docs.bracketapp.nl/" rel="nofollow"><strong>Explore the Bracket docs&nbsp;&nbsp;▶</strong></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Live Demo</h2><a id="user-content-live-demo" aria-label="Permalink: Live Demo" href="#live-demo"></a></p>
<p dir="auto">A demo is available for free at <a href="https://www.bracketapp.nl/demo" rel="nofollow">https://www.bracketapp.nl/demo</a>. The demo lasts for 30 minutes, after which
your data will de deleted.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quickstart</h2><a id="user-content-quickstart" aria-label="Permalink: Quickstart" href="#quickstart"></a></p>
<p dir="auto">To quickly run bracket to see how it works, clone it and run <code>docker compose up</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone git@github.com:evroon/bracket.git
cd bracket
sudo docker compose up -d"><pre>git clone git@github.com:evroon/bracket.git
<span>cd</span> bracket
sudo docker compose up -d</pre></div>
<p dir="auto">This will start the backend and frontend of Bracket, as well as a postgres instance. You should now
be able to view bracket at <a href="http://localhost:3000/" rel="nofollow">http://localhost:3000</a>. You can log in with the following credentials:</p>
<ul dir="auto">
<li>Username: <code>test@example.org</code></li>
<li>Password: <code>aeGhoe1ahng2Aezai0Dei6Aih6dieHoo</code>.</li>
</ul>
<p dir="auto">To insert dummy rows into the database, run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo docker exec bracket-backend pipenv run ./cli.py create-dev-db"><pre>sudo docker <span>exec</span> bracket-backend pipenv run ./cli.py create-dev-db</pre></div>
<p dir="auto">See also the <a href="https://docs.bracketapp.nl/docs/running-bracket/quickstart" rel="nofollow">quickstart docs</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">Read the <a href="https://docs.bracketapp.nl/docs/usage/guide" rel="nofollow">usage guide</a> for how to organize a tournament in Bracket from start to finish.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Configuration</h2><a id="user-content-configuration" aria-label="Permalink: Configuration" href="#configuration"></a></p>
<p dir="auto">Read the <a href="https://docs.bracketapp.nl/docs/running-bracket/configuration" rel="nofollow">configuration docs</a> for how to configure Bracket.</p>
<p dir="auto">Bracket's backend is configured using <code>.env</code> files (<code>prod.env</code> for production, <code>dev.env</code> for development etc.).
But you can also configure Bracket using environment variables directly, for example by specifying them in the <code>docker-compose.yml</code>.</p>
<p dir="auto">The frontend doesn't can be configured by environment variables as well, as well as <code>.env</code> files using Next.js' way of loading environment variables.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Running Bracket in production</h2><a id="user-content-running-bracket-in-production" aria-label="Permalink: Running Bracket in production" href="#running-bracket-in-production"></a></p>
<p dir="auto">Read the <a href="https://docs.bracketapp.nl/docs/deployment" rel="nofollow">deployment docs</a> for how to deploy Bracket and run it in production.</p>
<p dir="auto">Bracket can be run in Docker or by itself (using <code>pipenv</code> and <code>yarn</code>).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development setup</h2><a id="user-content-development-setup" aria-label="Permalink: Development setup" href="#development-setup"></a></p>
<p dir="auto">Read the <a href="https://docs.bracketapp.nl/docs/community/development" rel="nofollow">development docs</a> for how to run Bracket for development.</p>
<p dir="auto">Prerequisites are <code>yarn</code>, <code>postgresql</code> and <code>pipenv</code> to run the frontend, database and backend.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Translations</h2><a id="user-content-translations" aria-label="Permalink: Translations" href="#translations"></a></p>
<p dir="auto">Based on your browser settings, your language should be automatically detected and loaded. For now,
there's no manual way of choosing a different language.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Supported Languages</h2><a id="user-content-supported-languages" aria-label="Permalink: Supported Languages" href="#supported-languages"></a></p>
<p dir="auto">To add/refine translations, <a href="https://crowdin.com/project/bracket" rel="nofollow">Crowdin</a> is used.
See the <a href="https://docs.bracketapp.nl/docs/community/contributing/#translating" rel="nofollow">docs</a> for more information.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">More screenshots</h2><a id="user-content-more-screenshots" aria-label="Permalink: More screenshots" href="#more-screenshots"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/evroon/bracket/blob/master/docs/content/img/schedule_preview.png"><img alt="" src="https://github.com/evroon/bracket/raw/master/docs/content/img/schedule_preview.png" width="50%"></a><a target="_blank" rel="noopener noreferrer" href="https://github.com/evroon/bracket/blob/master/docs/content/img/planning_preview.png"><img alt="" src="https://github.com/evroon/bracket/raw/master/docs/content/img/planning_preview.png" width="50%"></a> <a target="_blank" rel="noopener noreferrer" href="https://github.com/evroon/bracket/blob/master/docs/content/img/builder_preview.png"><img alt="" src="https://github.com/evroon/bracket/raw/master/docs/content/img/builder_preview.png" width="50%"></a><a target="_blank" rel="noopener noreferrer" href="https://github.com/evroon/bracket/blob/master/docs/content/img/standings_preview.png"><img alt="" src="https://github.com/evroon/bracket/raw/master/docs/content/img/standings_preview.png" width="50%"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Help</h2><a id="user-content-help" aria-label="Permalink: Help" href="#help"></a></p>
<p dir="auto">If you're having trouble getting Bracket up and running, or have a question about usage or configuration, feel free to ask.
The best place to do this is by creating a <a href="https://github.com/evroon/bracket/discussions">Discussion</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Supporting Bracket</h2><a id="user-content-supporting-bracket" aria-label="Permalink: Supporting Bracket" href="#supporting-bracket"></a></p>
<p dir="auto">If you're using Bracket and would like to help support its development, that would be greatly appreciated!</p>
<p dir="auto">Several areas that we need a bit of help with at the moment are:</p>
<ul dir="auto">
<li>⭐ <strong>Star Bracket</strong> on GitHub</li>
<li>🌐 <strong>Translating</strong>: Help make Bracket available to non-native English speakers by adding your language (via <a href="https://crowdin.com/project/bracket" rel="nofollow">crowdin</a>)</li>
<li>📣 <strong>Spread the word</strong> by sharing Bracket to help new users discover it</li>
<li>🖥️ <strong>Submit a PR</strong> to add a new feature, fix a bug, extend/update the docs or something else</li>
</ul>
<p dir="auto">See the <a href="https://docs.bracketapp.nl/docs/community/contributing" rel="nofollow">contribution docs</a> for more information on how to contribute</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributors</h2><a id="user-content-contributors" aria-label="Permalink: Contributors" href="#contributors"></a></p>

<markdown-accessiblity-table><table>
<tbody><tr>
    <td>
        <a href="https://github.com/evroon">
            <img src="https://avatars.githubusercontent.com/u/11857441?v=4" width="100;" alt="evroon">
            <br>
            <sub><b>Erik Vroon</b></sub>
        </a>
    </td>
    <td>
        <a href="https://github.com/robigan">
            <img src="https://avatars.githubusercontent.com/u/35210888?v=4" width="100;" alt="robigan">
            <br>
            <sub><b>Null</b></sub>
        </a>
    </td>
    <td>
        <a href="https://github.com/BachErik">
            <img src="https://avatars.githubusercontent.com/u/75324423?v=4" width="100;" alt="BachErik">
            <br>
            <sub><b>BachErik</b></sub>
        </a>
    </td>
    <td>
        <a href="https://github.com/djpiper28">
            <img src="https://avatars.githubusercontent.com/u/13609136?v=4" width="100;" alt="djpiper28">
            <br>
            <sub><b>Danny Piper</b></sub>
        </a>
    </td>
    <td>
        <a href="https://github.com/Sevichecc">
            <img src="https://avatars.githubusercontent.com/u/91365763?v=4" width="100;" alt="Sevichecc">
            <br>
            <sub><b>SevicheCC</b></sub>
        </a>
    </td>
    <td>
        <a href="https://github.com/nvanheuverzwijn">
            <img src="https://avatars.githubusercontent.com/u/943226?v=4" width="100;" alt="nvanheuverzwijn">
            <br>
            <sub><b>Nicolas Vanheuverzwijn</b></sub>
        </a>
    </td></tr>
<tr>
    <td>
        <a href="https://github.com/IzStriker">
            <img src="https://avatars.githubusercontent.com/u/44909896?v=4" width="100;" alt="IzStriker">
            <br>
            <sub><b>IzStriker</b></sub>
        </a>
    </td>
    <td>
        <a href="https://github.com/babeuh">
            <img src="https://avatars.githubusercontent.com/u/60193302?v=4" width="100;" alt="babeuh">
            <br>
            <sub><b>Raphael Le Goaller</b></sub>
        </a>
    </td></tr>
</tbody></table></markdown-accessiblity-table>

<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Bracket is licensed under <a href="https://choosealicense.com/licenses/agpl-3.0/" rel="nofollow">AGPL-v3.0</a>.</p>
<p dir="auto">Please note that any contributions also fall under this license.</p>
<p dir="auto">See <a href="https://github.com/evroon/bracket/blob/master/LICENSE">LICENSE</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Death of Daydreaming: What we lose when phones take away boredom (475 pts)]]></title>
            <link>https://www.afterbabel.com/p/on-the-death-of-daydreaming</link>
            <guid>43894305</guid>
            <pubDate>Mon, 05 May 2025 12:22:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.afterbabel.com/p/on-the-death-of-daydreaming">https://www.afterbabel.com/p/on-the-death-of-daydreaming</a>, See on <a href="https://news.ycombinator.com/item?id=43894305">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><strong>Intro from Jon Haidt:</strong></p><p><span>When I was nearly finished writing </span><em>The Anxious Generation</em><span> in the summer of 2023, I realized that I had left a gap. The book focused on the collapse of mental health, attention, and socialization of Gen Z—but again and again, older readers and friends would tell me: “this is happening to me too.” I realized that the global transition to a phone-based life is transforming </span><em>everyone’s</em><span> consciousness. But how? What exactly is happening to us?</span></p><p><span>I thought back to my first book, </span><em><a href="https://www.happinesshypothesis.com/" rel="">The Happiness Hypothesis</a></em><span>, which explored ten ancient ideas about how to live a good life—ideas found across continents and millennia. I began to see that the phone-based life, and social media in particular, push us to live in ways that are directly contrary to those recommended by nearly every ancient religious and philosophical tradition. These traditions tell us to be </span><em>slow to judge</em><span> and </span><em>quick to forgive</em><span>. They offer practices like meditation to quiet the mind and open the heart to deeper truths and greater communion.</span></p><p><span>In </span><em>The Anxious Generation</em><span>, I explored six of these contradictions in Chapter 8. A simple summary of that chapter is this: the phone-based life diminishes our humanity. Compared to the life we once lived, it degrades us morally, spiritually, socially, and cognitively.</span></p><p><span>Since writing that chapter, I’vebeen on the lookout for others who can express this loss of humanity better than I can. Here’s my short list: L.M. Sacasas for his Substack </span><em><a href="https://theconvivialsociety.substack.com/" rel="">The Convivial Society</a></em><span>; Nicholas Carr, for </span><em><a href="https://www.nicholascarr.com/?page_id=16" rel="">The Shallows</a></em><span> and his more recent book </span><em><a href="https://www.afterbabel.com/p/from-anxiety-to-animosity-how-social" rel="">Superbloom</a></em><span>; and Christine Rosen, for her 2024 book </span><em><a href="https://wwnorton.com/books/9780393241716" rel="">The Extinction of Experience</a><span>.</span></em><span> (For a Gen Z perspective, see </span><a href="https://www.freyaindia.co.uk/" rel="">Freya India</a><span>—especially the post we co-wrote </span><a href="https://www.afterbabel.com/p/degrading-effects-of-life-online" rel="">“On The Degrading Effects of Life Online.”)</a></p><p><span>Today’s post is by Christine Rosen. Christine holds a Ph.D. in history with a focus on American intellectual history. She is </span><a href="https://www.aei.org/profile/christine-rosen/" rel="">a senior fellow at AEI</a><span>, and she was </span><a href="https://www.aei.org/events/the-american-dream-lecture-series-social-media-and-the-fragmentation-of-american-life/" rel="">my discussion partner</a><span> when I gave a talk on </span><em>The Anxious Generation</em><span> at AEI soon after the book launched. That was when I learned about her book project, </span><em><a href="https://wwnorton.com/books/9780393241716" rel="">The Extinction of Experience: Being Human in a Disembodied World.</a></em></p><p>So when her publisher invited me to consider reading an early draft and offering an endorsement, I was glad to say yes. I loved the book, and I hope the blurb I wrote captures its urgency and depth:</p><blockquote><p>Rosen shows us that we are embodied creatures who are rapidly losing the analog world in which our bodies and minds evolved. She shows us that many of the technologically aided advances in convenience and efficiency exact a cost in our humanity, our civility, and ultimately our ability to live together in a democratic society. This is an extremely important book; its message is all the more urgent as AI threatens to make everything effortless and frictionless.</p></blockquote><p><span>I invited Christine to present a section or idea from her book for </span><em>After Babel</em><span>. She chose one of my favorites: the loss of “interstitial time.” Interstices are the gaps between things, as with the cells in your body or the spaces between architectural columns. When applied to time, it means the many bits of time scattered throughout the day such as the five minutes that students have in between classes, or the unknown number of seconds that pass while you are waiting for an elevator. These moments used to be given over to silent reflection or conversation with whoever is around. Now, for most of us, nearly all of them are grabbed by our phones.</span></p><p>Christine traces out the profound consequences of losing those interstitial moments, for our creativity and for our humanity. She shows why it is so important to guard those moments for daydreaming.</p><p><strong>— Jon </strong></p><p><strong>By Christine Rosen</strong></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg" width="1456" height="819" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:819,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2140702,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.afterbabel.com/i/162789733?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc045dcff-c182-4cc1-b063-23afb0578a5a_3840x2160.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Source: Shutterstock</figcaption></figure></div><p>Can you remember the last time you daydreamed? Or coped with boredom without reaching for your phone? Before the era of mobile technology, most of us had no choice but to wait without stimulation, and often, that meant being bored.</p><p>But today we need never be bored. We have an indefatigable boredom-killing machine: the smartphone. No matter how brief our wait, the smartphone promises an alleviation for our suffering.</p><p><span>Yet the smartphone’s triumph over boredom might prove a Pyrrhic victory. As Jonathan Haidt showed in </span><em>The Anxious Generation</em><span>, the rapid adoption of smartphones and social media, particularly by the young, led to many negative unintended consequences such as increased rates of depression, anxiety, loneliness, and self-harm. So, too, our efforts to vanquish boredom have had deleterious impacts such as on our ability to let our minds wander, to cultivate patience, and to experience anticipation.</span></p><p>As a member of Generation X, I took boredom for granted. Without access to any kind of mobile technology more sophisticated than a Speak and Spell game, my generation was expected to fill our empty hours in other ways, which usually meant going outside and doing things with our friends. Some kids stayed inside and watched television, of course, but the options for programming were limited. Boredom was part of life, and we accepted and adjusted to this reality. Several decades later, raising my own sons in the age of mobile technology, I saw how quickly expectations had changed for how to spend one’s free time. With access to an iPad or a smartphone, children in the twenty-first century never had to be bored; in fact, everything about the platforms and apps that targeted children habituated them to the idea that they ought never to be bored. I worried about how this might change their expectations and ability to deal with delay, frustration, and empty time as adults.</p><p>Boredom has a purpose. To understand and harness it, we need to give our minds more opportunities to experience it. In the rest of this post, I will explore the many ways our efforts to conquer boredom through technology have produced unintended consequences, including the near-total capture of our attention, the death of daydreaming, and the end of a healthy sense of anticipation in our daily lives.</p><p data-attrs="{&quot;url&quot;:&quot;https://www.afterbabel.com/p/on-the-death-of-daydreaming?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://www.afterbabel.com/p/on-the-death-of-daydreaming?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p><p><span>“Shepherds do it, cops do it, stevedores and merchants in their shops do it,” technology critic Marshall McLuhan </span><a href="https://mitpress.mit.edu/9780262631594/understanding-media/" rel="">observed</a><span> in </span><em>Understanding Media </em><span>when discussing Greek men’s use of komboloi, or worry beads. The beads, which look like amber-­colored rosaries, were used throughout the day to pass the time, a secular version of praying the rosary. Their use of worry beads also reflects the deeply felt human need to fill interstitial time. We all engage in these weird little rituals: Some people doodle or fidget, others knit, a lot of people used to smoke. The late Psychologist Mihaly Csikszentmihalyi </span><a href="https://www.amazon.com/Flow-Classic-Achieve-Happiness-Introduction/dp/0712657592" rel="">called</a><span> these “the ‘microflow’ activities that help us negotiate the doldrums of the day.” These “small automatic games woven into the fabric of everyday life help reduce boredom … but add little to the positive quality of experience.”</span></p><p>Though the experience of boredom is deeply human, what we reach for when we experience it is socially structured, unique to our moment in time. The worry beads and cigarettes of previous eras have given way to smartphones. Ours is a less carcinogenic but more commodified distraction, with long-term impacts which we’re only beginning to fathom.</p><p><a href="https://www.pewresearch.org/internet/2024/03/11/how-teens-and-parents-approach-screen-time/" rel="">According to</a><span> Pew Research, nine out of ten Americans own a smartphone, and 95 percent of teenagers have access to one. A 2024 Pew survey of teens ages 13-17 found that half said they were online “almost constantly.” The average person spends the vast majority of his or her free moments looking at a screen. For decades, Americans have spent a considerable amount of their leisure time watching television; what has declined significantly is the amount of free time they spend with other people. One recent </span><a href="https://pmc.ncbi.nlm.nih.gov/articles/PMC9811250/" rel="">study</a><span> found an increase in social isolation and significant declines in social engagement with family and friends as well as shared leisure time. We spend more of our free time alone, staring at screens, which habituates us to reach for our phones whenever we have a moment alone to ourselves. Screens have become the dominant means for us to alleviate boredom, whether during long stretches of time alone or in fleeting moments throughout the day.</span></p><p><span>This is not just a challenge for the young. Pew Research </span><a href="https://www.pewresearch.org/short-reads/2019/06/18/americans-60-and-older-are-spending-more-time-in-front-of-their-screens-than-a-decade-ago/" rel="">found </a><span>that Americans over the age of sixty “now spend more than half of their daily leisure time. . . in front of screens.”</span></p><p>Lately I’ve seen more people in their cars thwarting stoplight boredom—­that is, unable to sit unmediated for even the few moments that it takes a red light to turn green, they reach for their smartphones. Kids post on social media about boredom throughout the school day (#bored). The space between the time when they experience boredom and when they broadcast it has disappeared.</p><p><span>What happens when we replace boredom with constant distraction and stimulation? Warnings about the harmful effects of too much stimulation are nothing new. “For a living organism, protection against stimuli is an almost more important function than the reception of stimuli,” Sigmund Freud </span><a href="https://www.sas.upenn.edu/~cavitch/pdf-library/Freud_Beyond_P_P.pdf" rel="">observed</a><span>. But given the range and speed of stimuli at our disposal, we might need a new way of thinking about their effects. Stimulation seems too quaint a word.</span></p><p>It is a reasonable human impulse to seek distraction from the uncomfortable experience of boredom. What is new about our present moment is that the method we have chosen to alleviate boredom in the short term has negative long-term impacts on our attention spans and our ability to practice patience. We have created a machine for stimulation far beyond anything imaginable in Freud’s time. We might believe that our attempts to fill our interstitial time with mediated distractions qualify as an effort to optimize our experiences under less-than-optimal conditions. But in fact, we have become more like gambling addicts, habituated to the temporary escape our digital technologies provide.</p><p><span>A fascinating </span><a href="https://press.princeton.edu/books/paperback/9780691160887/addiction-by-design" rel="">study</a><span> of machine gambling in Las Vegas notes that “flow,” that state of being in which someone is so involved in an activity “that nothing else seems to matter,” as Csikszentmihalyi describes it, is precisely the state gamblers seek and attain at the machines, and precisely what machine designers seek to exploit when people initiate play. Yet, while gamblers are experiencing flow, they are not having the kind of optimal long-­term experiences psychologists had in mind when they advocated pursuing activities that put you “in the zone.”</span></p><p>In a less intense way, we all enter this less-than-optimal state when we turn to our devices to alleviate the experience of boredom. The distractions we seek don’t only consume our time, however. They also degrade many habits of mind that require time and patience to form, such as empathy, awareness, and emotional regulation.</p><p data-attrs="{&quot;url&quot;:&quot;https://www.afterbabel.com/p/on-the-death-of-daydreaming/comments&quot;,&quot;text&quot;:&quot;Leave a comment&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://www.afterbabel.com/p/on-the-death-of-daydreaming/comments" rel=""><span>Leave a comment</span></a></p><p><span>In a </span><a href="https://lettersofnote.com/2012/03/06/1984-v-brave-new-world/" rel="">letter</a><span> Aldous Huxley wrote to George Orwell in 1949 he argued, “I feel that the nightmare of 1984 is destined to modulate into the nightmare of a world having more resemblance to that which I imagined in Brave New World.” What did Huxley believe would bring about this dystopia? Not a global world order or a charismatic despot: “The change will be brought about as a result of a felt need for increased efficiency.”</span></p><p>Huxley’s warning has merit. We enjoy the efficiencies and distractions technology brings, but they leave us less skilled at patience. They teach us to value efficiency above all and to be suspicious of idle time, when we should see idle moments as opportunities for reflection and renewal.</p><p>Today you rarely see the word “idle” except when used as a pejorative; to be idle is to be wasteful, and several of the most popular Internet startup companies have targeted underutilized resources such as idle cars (Turo, ZipCar), household equipment (SnapGoods), or empty bedrooms (Airbnb), allowing people to make use of them by renting them out when they aren’t in use.</p><p><span>Some technologists have set their sights higher. Max Levchin, a cofounder of PayPal and investor in many Silicon Valley technology companies, gave a </span><a href="https://max.levch.in/post/41116802381/dld13-keynote" rel="">speech</a><span> at a conference in Munich in which he lamented, “The world of real things is very inefficient.” Harnessing the network effects of big data, he foresees a future where we can more efficiently do many things: “We will definitely see dynamically priced queues for confession-­taking priests and therapists,” he said.</span></p><p><span>Moments of idleness and daydreaming used to be prized for the unexpected pleasure they brought. As Wordsworth </span><a href="https://www.penguinrandomhouse.com/books/295450/selected-poems-by-william-wordsworth-edited-with-an-introduction-and-notes-by-stephen-gill/" rel="">wrote</a><span>, “For this one day we’ll give to idleness . . . One moment now may give us more than fifty hours of reason.” He advocated straying about “voluptuously” through rural fields, asking “no record of the hours given up to vacant musing.” We might not spend our free time lolling about rural glens, but idleness of this variety is the opposite of the instrumental, practical use that our culture encourages us to make of our time. Technologists like Levchin would have us hire out our voluptuous spare time on TaskRabbit. To borrow an image from Wordsworth’s rural fields, we should embrace this fallow time. To be fallow is not the same thing as to be useless; it is to let rest so that cultivation can occur in the future. When mediated experiences co-opt our idle time, we are left with fewer and fewer of these fallow moments, moments that are central to the experience of being human.</span></p><p>With rates of anxiety rising in the U.S., particularly among teens, it is also worth considering how the frenetic pace of the online world, where so many of us spend so much of our time, contributes to our sense of feeling overwhelmed and out of control. Reclaiming our idle time and reorienting ourselves away from screens is one of many small yet radical acts that have the potential to improve the quality of our daily experiences.</p><p><span>A culture without boredom, focused on efficiency, also undermines the act of daydreaming, another thing interstitial time used to be given over to. Daydreaming seems a fusty term in an age when productivity and usefulness are prized. But as psychologists and neurologists have found, a wandering mind––often the first signal of impending boredom––is also a creative mind. In the 1960s, psychologist Jerome Singer, the grandfather of daydreaming studies, </span><a href="https://archive.org/details/innerworldofdayd00samu" rel="">identified</a><span> three kinds of mind-­wandering: the productive, creative “positive constructive daydreaming,” obsessive “guilty–­dysphoric daydreaming,” and “poor attentional control.” Singer believed daydreaming was a positive adaptive behavior—­a bold departure from the conventional wisdom at the time, which linked daydreaming to other psychopathologies such as excessive fantasizing. As one student of Singer’s </span><a href="https://pmc.ncbi.nlm.nih.gov/articles/PMC3779797/" rel="">noted</a><span>, Singer’s work found strong associations between daydreaming and the personality trait “openness to experience,” which demonstrates sensitivity, curiosity, and willingness to explore new ideas and feelings.</span></p><p><span>Since then, researchers have found numerous positive effects of a wandering mind. Psychologist Scott Barry Kaufman </span><a href="https://www.scientificamerican.com/blog/beautiful-minds/mind-wandering-a-new-personal-intelligence-perspective/" rel="">summarized</a><span> them:</span></p><blockquote><p>“self-awareness, creative incubation, improvisation and evaluation, memory consolidation, autobiographical planning, goal driven thought, future planning, retrieval of deeply personal memories, reflective consideration of the meaning of events and experiences, simulating the perspective of another person, evaluating the implications of self and others’ emotional reactions, moral reasoning, and reflective compassion.”</p></blockquote><p><span>Daydreaming is also a prompt to memory. As Stefan Van der Stigchel </span><a href="https://mitpress.mit.edu/9780262538565/concentration/" rel="">argues</a><span> in </span><em>Concentration: Staying Focused in Times of Distraction</em><span>, “When you are daydreaming (or </span><em>mind-wandering</em><span>, as it is referred to within scientific circles), memories that you thought were lost forever can come to the surface again.” He adds, “The neural activity that can be observed when you are daydreaming is very similar to that found in the ‘default network,’ a network of regions in the brain that are active during periods of rest.”</span></p><p><span>It can be a challenge to find those periods of rest throughout our day, and when we do, if we are habituated to the stimulation technology provides, it is difficult to quiet our minds. As Moshe Bar </span><a href="https://www.amazon.com/Mindwandering-Constant-Mental-Improve-Creativity/dp/0306925303" rel="">argues</a><span> in </span><em>Mindwandering</em><span>, “the greater challenge is freeing ourselves from the distractions within, which disrupt our attention and intrude on the quality of our experience even when we are in a perfectly quiet place." In other words: we must cultivate habits that allow for mindwandering and daydreaming. We must, every day, try to reclaim the time that technology has colonized.</span></p><p>Why? Anecdotally, history provides many examples of scientific breakthroughs—­“aha!” moments—­that arose during moments of daydreaming or downtime: René Descartes in bed staring at a fly on the ceiling and coming up with coordinate geometry; Albert Einstein’s glimpse of the Bern tower on a streetcar ride prompting the theory of special relativity; the walk in the woods that prompted Nikola Tesla to devise alternating electrical current.</p><p><span>Unstructured, unmediated time is especially important for the development of creativity in children. “In the space between anxiety and boredom was where creativity flourished,” </span><a href="https://www.amazon.com/Mindwandering-Constant-Mental-Improve-Creativity/dp/0306925303" rel="">wrote</a><span> Po Bronson and Ashley Merryman in their examination of declining scores on the Torrance Test for creativity among American children. They hypothesize that one of the reasons creativity scores might be declining is children’s increased use of screen-­based technologies during downtime. Rather than being left to their own imaginative devices, their wandering minds are often captured by devices—­smartphones and other screens that grasp their attention and, in the process, prevent all other possible uses of those moments of idle time.</span></p><p>Now that we have so many ways to fill even the smallest fragments of time, a subtle shift in our psychology of expectation also follows. We are more likely to experience waiting as an unpleasant delay rather than as anticipation. Waiting has become a problem to be solved, rather than a normal human experience. When we are accustomed to easily filling time, opportunities for anticipation, like opportunities for daydreaming, disappear.</p><p><span>Anticipation is a kind of preparation for the future. Actively embracing anticipation is also important for one’s emotional health. Neuroscientist Antonio Damasio </span><a href="https://www.amazon.com/Descartes-Error-Emotion-Reason-Human/dp/014303622X" rel="">calls</a><span> this practice the “imagination response,” and in many ways it resembles daydreaming in its power to prepare the mind for new experiences. Damasio describes an unusual patient, Elliot, who could rationally think through positive and negative likely outcomes for his behavior and could experience happiness or disappointment once something happened to him. What Elliot couldn’t do was imagine or preview those future feelings. Without a functioning imagination response, he could think about the future rationally, but he couldn’t feel it emotionally. As a result, he was usually indecisive and impulsive, which caused him unhappiness.</span></p><p data-attrs="{&quot;url&quot;:&quot;https://www.afterbabel.com/p/on-the-death-of-daydreaming?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://www.afterbabel.com/p/on-the-death-of-daydreaming?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p><p>Does it matter if we no longer tolerate boredom, let our minds wander, cultivate a sense of anticipation, and practice patience? Our demand for immediate answers is voracious, and not entirely a bad thing. It drives innovation and commerce and has allowed for communication on a scale barely imaginable a century ago. But living a full meaningful human life means coping with the liminal, those in-­between moments of life when we must endure uneasy or uncomfortable experiences, from boredom during a meeting to bearing witness to another’s illness, to simply being stuck on a bus. In everyday life, we can all try, however modestly, to shift our individual perceptions and behavior by embracing a more generous sense of anticipation and a healthier attitude about delay, by reframing waiting as an opportunity for daydreaming and idle time rather than an excuse for distraction, and by trying to be more patient with one another. Such advice does at least have a long pedigree. Aristotle is said to have warned, “Patience is bitter, but its fruit is sweet.”</p><p>Parents have a crucial role to play in teaching children how to deal with boredom, and it can be as easy and as old-school as simply telling them: “Go outside and play.” Instead of handing a child a slot machine of distraction, encourage them to come up with their own game or activity. Rather than structuring and organizing an activity for your children, let them figure that out for themselves, or with their peers. Children are extraordinarily creative when given the space and time to indulge their wandering minds, but this often requires first overcoming the immediate challenge of handling their frustration and boredom. Placing the burden of alleviating one’s boredom back on a child isn’t a punishment; it’s an opportunity for them to find creative solutions to their discomfort and, as they mature into adults, to identify and cope with feelings of frustration.</p><p>As well, parents should model better behavior by resisting the temptation to pick up our phones whenever we are bored. Try this experiment: For one day, do not pick up your smartphone during small breaks in your routine, such as waiting for the train, or sitting in your car at a stoplight. If you find yourself in a doctor’s waiting room, or waiting for a friend at a restaurant, don’t pick up your phone to fill those few minutes. Pay attention to what is around you, or let your mind wander. This sounds like a simple experiment, but as someone who repeatedly tries and often fails to do this, it is revealing of our own bad habits and a useful prompt for thinking more critically about how we spend our time. Reaching for the phone every time is the easy fix, but it is one that has damaging long-term consequences for individuals and for society.</p><p>In other words: a bit of boredom is good for us, so the next time you have a minute to spare, instead of reaching for your phone, be rebellious: Daydream.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Beauty of Having a Pi-Hole (140 pts)]]></title>
            <link>https://den.dev/blog/pihole/</link>
            <guid>43894175</guid>
            <pubDate>Mon, 05 May 2025 12:06:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://den.dev/blog/pihole/">https://den.dev/blog/pihole/</a>, See on <a href="https://news.ycombinator.com/item?id=43894175">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
    <header>
      
        <ol>
  
  
    
  
    
  
  <li>
    <a href="https://den.dev/">Hi, I'm Den 👋</a><span>/</span>
  </li>

  
  <li>
    <a href="https://den.dev/blog/">Writing</a><span>/</span>
  </li>

  
  <li>
    <a href="https://den.dev/blog/pihole/">The Beauty Of Having A Pi-hole</a><span>/</span>
  </li>

</ol>


      
      
      <div>
        





  
  



  

  
  
    
  

  

  
    
  

  

  

  <p><time datetime="2024-08-02 00:00:00 +0000 UTC">August 2, 2024</time><span>·</span><span>1592 words</span>
    

    
    
  </p>

  
  
    
  


      </div>
      
    </header>
    <div>
        <p>So, check this little idea that I have - I want to browse the internet without all sorts of unscrupulous actors collecting every little bit of metadata on me and my family they can possibly get their hands on. Radical, I know. Who would’ve thought that I don’t wont every single website I visit syphon metadata about my computer, my browser, and other signals that can help them build a profile without my consent.</p>
<p>Unfortunately, the experience of browsing the web or using software in 2024 boils down to fielding a barrage of ads, malicious scripts, analytics widgets, chatbot widgets, massive “take over your page” banners asking you to consent to cookies, software that won’t shut up and just phones home with every click, and other things that you probably didn’t want to have to deal with. Not that any of these things didn’t exist in some capacity in 2004 (or even 1994), but the sheer amount of privacy-abusing techniques was much smaller.</p>
<p>The whole concept of “ad tech” became “figure out how to abuse the living hell out of every visitor” which is, let’s say, suboptimal. I even alluded to it <a href="https://den.dev/blog/user-hostile-software/" target="_blank" rel="noreferrer noopener">in some of my previous writing</a>.</p>
<p>Which brings me to my main point - <strong>you should absolutely use a <a href="https://pi-hole.net/" target="_blank" rel="noreferrer noopener">Pi-hole</a> in your home network</strong>. It’s not exactly news that this project exists - folks like <a href="https://blog.codinghorror.com/an-exercise-program-for-the-fat-web/" target="_blank" rel="noreferrer noopener">Jeff Atwood</a>, <a href="https://www.troyhunt.com/mmm-pi-hole/" target="_blank" rel="noreferrer noopener">Troy Hunt</a>, <a href="https://www.hanselman.com/blog/blocking-ads-before-they-enter-your-house-at-the-dns-level-with-pihole-and-a-cheap-raspberry-pi" target="_blank" rel="noreferrer noopener">Scott Hanselman</a>, and <a href="https://scotthelme.co.uk/tag/pi-hole/" target="_blank" rel="noreferrer noopener">Scott Helme</a> talked about it <em>for years</em>. I am just adding another datapoint to the camp of “Get this on your network ASAP.”</p>
<p>If you’ve never heard about it, Pi-hole is software that runs on a Raspberry Pi (can technically run even outside a Pi) that acts as the Domain Name Service (DNS) proxy <em>within your own network</em>. That is, if you go to <code>https://example.com</code>, it first hits the Pi-hole before going out and asking authoritative DNS servers for domain information. Its main purpose is blocking requests to domains that you don’t want to hit from your network. Those can be trackers, ad-serving content delivery networks (CDNs), or just any domain that you deem not worthy of receiving data from within your house or place of business.</p>
<p>To give you an idea of how much <em>completely unnecessary</em> network traffic there is, on my own network a whopping <strong>66.6% of all traffic is blocked</strong> with no functional impact on anything that I do. This tells you just how much various devices, sites, and apps like to either phone home or load things that I do not want.</p>





<figure>
  
  <img alt="Screenshot of the Pi-hole dashboard in a web browser." src="https://assets.den.dev/images/postmedia/pihole/pi-hole-stats.png">
  
  <figcaption>Screenshot of the Pi-hole dashboard in a web browser.</figcaption>
</figure>
<h2 id="the-kit">The kit <span><a href="#the-kit" aria-label="Anchor">#</a></span></h2>
<p>Setting Pi-hole up doesn’t take a significant investment. This is a list of recommendations, but of course you can fly solo and come up with your own configuration that suits your needs better. On the surface, you will need:</p>
<ul>
<li>A <a href="https://www.raspberrypi.com/" target="_blank" rel="noreferrer noopener">Raspberry Pi</a>. If you’re in the US, you can get a <a href="https://www.canakit.com/raspberry-pi-5-8gb.html?cid=USD" target="_blank" rel="noreferrer noopener">CanaKit</a> starter kit for roughly $155, which also includes a microSD card you will need for the setup.</li>
<li>A monitor, mouse, and keyboard that you can plug into the Raspberry Pi as you set it up.</li>
<li>Minimal time to <a href="https://docs.pi-hole.net/main/basic-install/" target="_blank" rel="noreferrer noopener">follow instructions on Pi-hole setup</a>.</li>
<li>Some time to make sure that you set up your network to route DNS requests through the Pi-hole.</li>
</ul>
<p>And that’s about it. Frankly, the biggest investment here is time - getting everything set up and validated. Worry not, though - the Pi-hole team have done a marvelous job in making sure that the installation process is as simple as possible.</p>
<h2 id="domain-lists">Domain lists <span><a href="#domain-lists" aria-label="Anchor">#</a></span></h2>
<p>Once you set up the Pi-hole hardware and software, as well as configure your router to point to the Pi-hole device as the target for DNS requests, you will also need to configure <em>which domains to block</em>. You can do that yourself, for example by seeing what flows through your network and then deciding whether you want it or not, or you can use <em>community blocklists</em>. I highly recommend looking at <a href="https://firebog.net/" target="_blank" rel="noreferrer noopener">Firebog</a> as the starting point for your explorations as the community has done extensive research and collected a myriad of domains that you likely haven’t heard about.</p>
<div>
  <p><img src="https://assets.den.dev/images/shared/sweaty.gif" alt="Mole out of the ground, sweating.">
  </p>
  <p>Oooofff... There are quite a few lists there. Do I need to use every single one when I configure my own Pi-hole instance?</p>
</div>
<p>Absolutely not, but it’s a great reference point. What I found is that as you start setting things up you will notice that certain things will break or not work. Conveniently, you can look at the <em>live query log</em> that I mentioned earlier, that will tell you what clients are trying to access specific domains. You can use that view to dynamically block or unblock domains as you see fit.</p>





<figure>
  
  <img alt="Screenshot of the Pi-hole query log in a web browser." src="https://assets.den.dev/images/postmedia/pihole/query-log.png">
  
  <figcaption>Screenshot of the Pi-hole query log in a web browser.</figcaption>
</figure>
<p>Not only that, but you can also set up rules to block domains that fit a certain criteria via regular expressions. For example, and because I see a lot of malicious traffic sourced from Russia, China, and Hong Kong, I can easily block those TLDs:</p>
<p>Now, anything that tries to talk to any server with those TLDs will not escape your network if the requests are routed through the Pi-hole. Now, of course, a country TLD is not necessarily the only attack vector for malware, but blocking them is another small step in terms of improving the overall network security posture.</p>
<h2 id="preventing-devices-bypassing-dns-settings">Preventing devices bypassing DNS settings <span><a href="#preventing-devices-bypassing-dns-settings" aria-label="Anchor">#</a></span></h2>
<p>As you set things up and configure the network-wide DNS provider to be your Pi-hole, you might also not realize that quite a few devices <em>bypass your DNS settings</em> to make sure that they can still serve you ads or collect analytics. To solve this you need to use a trick that is dependent on <em>what hardware you’re using for your router</em>. In my case, because I am within the UniFi ecosystem and using a UDM Pro, I can run the following set of commands when I SSH into the UDM itself:</p>
<div><pre tabindex="0"><code data-lang="bash"><span><span>iptables -t nat -A PREROUTING ! -s YOUR_PI_HOLE_IP -p tcp --dport <span>53</span> -j DNAT --to YOUR_PI_HOLE_IP
</span></span><span><span>iptables -t nat -A PREROUTING ! -s YOUR_PI_HOLE_IP -p udp --dport <span>53</span> -j DNAT --to YOUR_PI_HOLE_IP
</span></span><span><span>
</span></span><span><span><span># Make sure that we skip 192.168.1.1 since that seems to break UniFi Protect</span>
</span></span><span><span>iptables -t nat -A POSTROUTING -m iprange --src-range 192.168.1.2-192.168.254.254 -j MASQUERADE
</span></span></code></pre></div><p>The Bash script above configures the <code>iptables</code> rules to redirect <em>all</em> DNS traffic (port 53) to my Pi-hole and applies Network Address Translation (NAT) rules to allow for network address masquerading, which is a technique that allows to abstract away the internal network from the public internet by replacing the source IP address with the address of the gateway (your router).</p>
<p>Let’s dissect these commands a bit more in-depth:</p>
<div><pre tabindex="0"><code data-lang="bash"><span><span>iptables -t nat -A PREROUTING ! -s YOUR_PI_HOLE_IP -p tcp --dport <span>53</span> -j DNAT --to YOUR_PI_HOLE_IP
</span></span></code></pre></div><p>Here is what each argument does:</p>
<table>
<thead>
<tr>
<th>Argument</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>-t nat</code></td>
<td>Specifies that the rule is for the NAT table.</td>
</tr>
<tr>
<td><code>-A PREROUTING</code></td>
<td>Adds a rule to the <code>PREROUTING</code> chain, which processes inbound packets <em>before</em> routing.</td>
</tr>
<tr>
<td><code>! -s YOUR_PIHOLE_IP</code></td>
<td>Excludes packets that are originating from the Pi-hole itself.</td>
</tr>
<tr>
<td><code>-p tcp</code></td>
<td>Specifies that the rule applies to TCP packets.</td>
</tr>
<tr>
<td><code>--dport 53</code></td>
<td>Matches packets destined for port 53 (DNS).</td>
</tr>
<tr>
<td><code>-j DNAT</code></td>
<td>Jumps to the destination NAT (DNAT) target, modifying the destination IP address.</td>
</tr>
<tr>
<td><code>--to YOUR_PIHOLE_IP</code></td>
<td>Finally, redirects the packets to the Pi-hole IP address.</td>
</tr>
</tbody>
</table>
<p>The second line does the <em>exact same thing</em> but for UDP packets:</p>
<div><pre tabindex="0"><code data-lang="bash"><span><span>iptables -t nat -A PREROUTING ! -s YOUR_PI_HOLE_IP -p udp --dport <span>53</span> -j DNAT --to YOUR_PI_HOLE_IP
</span></span></code></pre></div><p>For the third command, we do the following:</p>
<div><pre tabindex="0"><code data-lang="bash"><span><span>iptables -t nat -A POSTROUTING -m iprange --src-range 192.168.1.2-192.168.254.254 -j MASQUERADE
</span></span></code></pre></div><p>The arguments are somewhat similar to what we saw above, but let’s break them down too:</p>
<table>
<thead>
<tr>
<th>Argument</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>-t nat</code></td>
<td>Specifies that the rule is for the NAT table.</td>
</tr>
<tr>
<td><code>-A POSTROUTING</code></td>
<td>Adds a rule to the <code>POSTROUTING</code> chain, which processes inbound packets <em>after</em> routing.</td>
</tr>
<tr>
<td><code>-m iprange --src-range 192.168.1.2-192.168.254.254</code></td>
<td>Matches packets with source IP addresses in the range 192.168.1.2 to 192.168.254.254. You can adjust the ranges fro your own network.</td>
</tr>
<tr>
<td><code>-j MASQUERADE</code></td>
<td>Jumps to the <code>MASQUERADE</code> target, which replaces the source IP address with the router’s IP address for outgoing packets.</td>
</tr>
</tbody>
</table>
<p>Long story longer - the script ensures that all DNS requests (both TCP and UDP) from devices on the network are redirected to the Pi-hole, except for requests originating from the Pi-hole itself.</p>
<p>The <code>MASQUERADE</code> rule ensures that the source IP addresses in the specified range are masked with the router’s IP address, ensuring proper routing and response handling. In my special case, the IP range excludes 192.168.1.1 to avoid breaking UniFi Protect.</p>

<p>Despite having Pi-hole sitting between all the devices on my network and the rest of the internet, there is still a lot of value in having a <em>trusted</em> ad-blocker like <a href="https://ublockorigin.com/" target="_blank" rel="noreferrer noopener">uBlock Origin</a>. That’s mainly because you will still run into domains that you can’t block (e.g., for YouTube) but still want to use the service ad-free (e.g., again - YouTube). I treat the Pi-hole as <em>another layer</em> in blocking unwanted content and requests in addition to an ad-blocker in the browser, which can also helpfully block specific UI elements, such as passive ads or sponsored content that loads from the primary website domain.</p>
<h2 id="conclusion">Conclusion <span><a href="#conclusion" aria-label="Anchor">#</a></span></h2>
<p>Once I set up the Pi-hole on my network, there is no going back. I did the same thing for my parents and in-laws, and will continue advocating it to everyone that wants to hear about it. It makes <em>that big</em> of a difference in the online quality of life.</p>

      </div>
    
  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AWS Built a Security Tool. It Introduced a Security Risk (170 pts)]]></title>
            <link>https://www.token.security/blog/aws-built-a-security-tool-it-introduced-a-security-risk</link>
            <guid>43893906</guid>
            <pubDate>Mon, 05 May 2025 11:37:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.token.security/blog/aws-built-a-security-tool-it-introduced-a-security-risk">https://www.token.security/blog/aws-built-a-security-tool-it-introduced-a-security-risk</a>, See on <a href="https://news.ycombinator.com/item?id=43893906">Hacker News</a></p>
<div id="readability-page-1" class="page"><div fs-richtext-element="rich-text"><p><em>(If you missed the previous parts of this trust policy blog series, we recommend reading parts </em><a href="https://www.token.security/blog/iam-role-trust-policies-misconfigurations-hiding-in-plain-sight" target="_blank"><em>one</em></a><em> and </em><a href="https://www.token.security/blog/secure-cross-account-access-is-tricky-four-common-dangerous-misconceptions" target="_blank"><em>two</em></a><em> first)</em></p><p>In the previous post of this series, we explored four dangerous misconceptions regarding how to securely set up cross-account access in AWS environments.</p><p>In this final post of the series, we’ll walk through a real-world case where even AWS got it wrong. Their <em>Account Assessment for AWS Organizations</em> tool, designed to audit resource-based policies for risky cross-account access, ironically introduced cross-account privilege escalation risks due to flawed deployment instructions. Specifically, customers were effectively encouraged to deploy the tool in lower-sensitivity accounts, creating risky trust paths from insecure environments into highly sensitive ones.</p><p>We’ll share how we discovered the issue, the risks it introduced, how AWS fixed it, and what affected organizations should do to detect and remediate it.</p><h3>How it started</h3><p>While investigating a critical privilege escalation risk involving an IAM role in a customer’s AWS environment, we discovered a role present in both their production and management accounts, each of which trusted two roles in their development account:</p><figure><p><img src="https://cdn.prod.website-files.com/661a822ae40a7d51ecf449bc/680f4186cc6df42ec59bed95_blog3_image1.png" loading="lazy" alt=""></p><figcaption>The risky IAM role we investigated</figcaption></figure><p>These were the details of the privilege escalation risk (sensitive info redacted):</p><figure><p><img src="https://cdn.prod.website-files.com/661a822ae40a7d51ecf449bc/680f41b07a9e8cd78c0a74ed_blog3_image2.png" loading="lazy" alt=""></p></figure><p>Examining the permissions of that role in the production and management accounts, we found it had access to several sensitive IAM and data-related API calls, including:</p><ul role="list"><li><code>iam:ListRoles</code> (lists all IAM roles, helping an attacker identify privileged and vulnerable roles)</li><li><code>iam:ListPolicies</code> (reveals all IAM policies, exposing potential misconfigurations)</li><li><code>secretsmanager:ListSecrets</code> (lists all stored secret names, identifying potential targets)</li><li><code>s3:ListAllMyBuckets</code> (enumerates all S3 buckets, exposing potential sensitive data locations)</li><li><code>kms:ListKeys</code> (lists all encryption keys, indicating what is being encrypted)</li><li><code>kms:GetKeyPolicy</code> (retrieves key policies, which could reveal weak or misconfigured access controls)</li><li>… and more (full policy <a href="https://github.com/aws-solutions/account-assessment-for-aws-organizations/blob/eb194bd76d87481c2bc682b7f03321342c5b3cd3/source/infra/lib/account-assessment-spoke-stack.ts#L57" target="_blank">here</a>)</li></ul><p>These permissions were granted on all resources (<code>resource: "*"</code>), making them particularly dangerous if compromised.</p><p>The organization's dev account had weaker security, making this role assumption path a major risk. An attacker compromising a trusted role in dev could immediately gain these permissions in production and management. Combined with other misconfigurations - such as exposed IAM roles, secret names, KMS keys, or public S3 buckets - this could help lead to compromise of the organization's most sensitive accounts.</p><p>This was already a serious risk, but what we found next revealed that this misconfiguration was not unique to this organization - it was actually inadvertently encouraged by AWS itself.</p><h3>Account Assessment for AWS Organizations</h3><p>The names of these roles were somewhat quirky, and hinted they were part of some automated system. A quick search led us to <a href="https://aws.amazon.com/solutions/implementations/account-assessment-for-aws-organizations/" target="_blank">Account Assessment for AWS Organizations</a>, a tool developed by AWS and published in the <a href="https://aws.amazon.com/solutions/" target="_blank">AWS Solutions Library</a>.</p><p>According to its official documentation, the tool is designed to “centrally evaluate and manage AWS accounts within your AWS Organizations”, helping users better understand account dependencies. AWS lists its <a href="https://docs.aws.amazon.com/solutions/latest/account-assessment-for-aws-organizations/use-cases.html" target="_blank">primary use cases</a> as mergers and acquisitions, security audits, centralized policy explorer and management account transitions.</p><p><strong>So, why was it deployed insecurely?</strong></p><p>Given that this tool was built by AWS to audit resource-based cross-account access, we initially assumed the misconfiguration was a deployment error by the customer. However, after reviewing the documentation, we realized that AWS’s deployment instructions unintentionally encouraged insecure setups, making it highly likely that users would deploy the tool in a way that introduced privilege escalation risks.</p><p>The tool follows a hub-and-spoke architecture:</p><ul role="list"><li>A hub role is deployed in a designated hub account.</li><li>Spoke roles are deployed in all other accounts to be assessed, trusting the hub role for access.</li></ul><p>This design allows the hub role to assume the spoke roles across all accounts, aggregating security data across the organization.</p><figure><p><img src="https://cdn.prod.website-files.com/661a822ae40a7d51ecf449bc/680f41d9677b48b093129595_blog3_diag1.drawio%20(7).png" loading="lazy" alt=""></p></figure><p>When checking AWS's official deployment guidance, we were surprised to see the following instruction:</p><figure><p><img src="https://cdn.prod.website-files.com/661a822ae40a7d51ecf449bc/680f41f4791d880da8a99880_image%20(12).png" loading="lazy" alt=""></p></figure><p>"Hub stack - Deploy to any member account in your AWS Organization except the Organizations management account."</p><p>This is the root cause of the issue - AWS explicitly recommended not deploying the hub in the management account, without clarifying the security implications of the other possible choices.</p><h3><strong>Why this is a major security risk</strong></h3><p>Let’s back up a bit and explain why this instruction, without any clarification, was so problematic.</p><p>As we covered in the <a href="https://www.token.security/blog/secure-cross-account-access-is-tricky-four-common-dangerous-misconceptions" target="_blank">previous blog</a>, allowing a role in a less secure account to assume roles in more sensitive accounts creates a privilege escalation risk.</p><p>By design, the hub role must access all spoke accounts. Since AWS prohibited using the management account as the hub, customers were forced to deploy the hub in a less secure account - often a development, sandbox, or similarly low-sensitivity account. In deployed organizations, this led to the creation of a direct trust path from a lower-security account to higher-security accounts like production, PCI-DSS environments, and even the management account itself.</p><p>The following diagram visualizes the problem:</p><figure><p><img src="https://cdn.prod.website-files.com/661a822ae40a7d51ecf449bc/680f420f57a0fb21afc19cd2_blog3_diag2.drawio%20(3).png" loading="lazy" alt=""></p></figure><p>In the case we investigated, the customer deployed the hub role in their development account, which:</p><ol role="list"><li>(Reasonably) had weaker security controls than production or management.</li><li>Had full access to assume spoke roles across all accounts, including sensitive ones such as the management and production accounts</li></ol><p>This meant that if an attacker compromised the development account, they could pivot into the management account - make it much easier to gain control over the entire AWS organization.</p><p>AWS strongly advises against running workloads in the management account, so simply deploying the hub there is not an ideal solution either. Instead, the only relatively safe option is to choose an account <strong>which is as secure</strong> as the management account, such as a centralized DevOps or Infrastructure account with strict access controls.</p><p>However, some organizations don’t necessarily have such an account, meaning any deployment inherently introduces risk. The problem isn't just where to deploy the hub - it's that AWS's default recommendation pushed organizations into an insecure setup without any reference to the security implications of this choice.</p><h3>Implications for affected organizations</h3><p>Any organization that deployed this tool following AWS’s instructions (before they were fixed on 2025-01-28) with the hub role deployed in an account less secure than the management account - and hasn’t removed it - is at risk.</p><p>For affected orgs, the hub account (where the hub role is deployed) becomes a high-value target. If an attacker compromises this role, whether through direct access or privilege escalation, they can assume spoke roles across all linked accounts - including highly sensitive environments such as management and production.</p><p>Once inside, they can:</p><ul role="list"><li>Enumerate IAM roles, trust policies, and permissions, identifying weak points.</li><li>List all S3 buckets and secret names, mapping out valuable data targets.</li><li>Access KMS key policies, which may reveal misconfigured encryption controls.</li></ul><p>Additionally, the tool’s <a href="https://github.com/aws-solutions/account-assessment-for-aws-organizations/blob/b429bbf2f31dc2f813e903751b8acc5aa3d240ad/source/lib/components/resource-based-policy-component.ts#L10" target="_blank">predefined role names</a> make it even easier for attackers to exploit. If an attacker gains access to any AWS account within an affected organization, they can easily identify whether the tool is deployed and know the exact role names that can be assumed from the hub account. This reduces the effort needed to escalate privileges and pivot into high-value environments.</p><h3>Detecting and remediating</h3><p>Here are two methods to determine if your organization is affected:</p><ul role="list"><li>Use the AWS Console to manually search the IAM role page in any suspected accounts for the hub and spoke roles. These roles contain the strings <code>ScanSpokeResource</code> and <code>AccountAssessment-Spoke-ExecutionRole</code> in their names accordingly.</li><li>Run the following AWS CLI command to check if the tool is deployed in a given account: <code>aws iam list-roles --query "Roles[?contains(RoleName, 'ScanSpokeResource') || contains(RoleName, 'AccountAssessment-Spoke-ExecutionRole')]"</code></li></ul><p><strong>If the tool is deployed -</strong> Check to see when the tool was deployed by examining the roles’ <code>CreateDate</code> property. If deployed before 2025-01-28, we strongly recommend removing the current deployment unless the hub role is already in a high-security account (such as a dedicated Infrastructure or DevOps account).</p><ol role="list"><li>Uninstall the tool by deleting the CloudFormation stacks for the Hub, Spoke, and Org-Management components. See AWS’s <a href="https://docs.aws.amazon.com/solutions/latest/account-assessment-for-aws-organizations/uninstall-the-solution.html" target="_blank">official uninstallation guide</a> for more instructions.</li><li>Redeploy carefully - if the tool is still needed, deploy the hub role in an account with security equivalent to the management account to prevent privilege escalation risks.</li></ol><h3>Reporting and resolution</h3><p>After identifying this issue, we reported it to AWS Security, highlighting the serious risks created by the tool’s deployment guidance. AWS promptly reviewed our findings, acknowledged the security concern, and engaged with us to determine how best to update the documentation to prevent future misconfigurations.</p><p>Based on this engagement, AWS revised the <a href="https://docs.aws.amazon.com/solutions/latest/account-assessment-for-aws-organizations/aws-accounts.html" target="_blank">documentation</a> to explicitly advise customers to deploy the hub role in a high-security account to match the sensitivity of the accounts being assessed:</p><figure><p><img src="https://cdn.prod.website-files.com/661a822ae40a7d51ecf449bc/680f4228ed41b221c8281a94_image%20(13).png" loading="lazy" alt=""></p><figcaption>Updated documentation page, explicitly instructing to deploy the hub in an account as secure as all scanned accounts</figcaption></figure><p>‍</p><p>We thank the AWS Security team, who were highly responsive, open to feedback, and committed to improving customer security. They took the issue seriously from the start, worked with us to determine the best way to update the documentation, and delivered a clear and effective fix - ensuring organizations deploying this tool can avoid unintended privilege escalation risks in the future.</p><h3><strong>Reporting timeline</strong></h3><ul role="list"><li><strong>2024-12-11</strong> - Discovery of the problematic documentation.</li><li><strong>2024-12-12</strong> - Initial report to AWS Security.</li><li><strong>2025-01-02</strong> - AWS acknowledges the issue and begins considering documentation changes.</li><li><strong>2025-01-05</strong> - We emphasize the importance of correcting the instructions.</li><li><strong>2025-01-07</strong> - AWS confirms documentation updates are needed.</li><li><strong>2025-01-13 - 2025-01-17 -</strong> Discussion on how to revise the documentation.</li><li><strong>2025-01-28</strong> - AWS publishes updated documentation with security fixes.</li><li><strong>2025-04-28</strong> - Findings and resolution publicly shared in this blog post.</li></ul><h3>Wrapping up</h3><p>Throughout this blog series, we explored how trust policy risks can slip into even well-managed AWS environments - sometimes through overlooked technical details, subtle misconceptions, or even official tooling. Securing trust relationships is less about following a checklist and more about developing a deeper understanding of how trust mechanisms actually behave in real-world environments.</p><p>We hope this series helped shed light on some of the hidden challenges around trust policies. Thanks for reading!</p><p>‍</p><p>‍</p><p><em>Token Security's machine-first identity security platform detects trust policy risks, including risky cross-account trust policies, whether caused by AWS tooling, human error, or overlooked configurations.</em></p><p><em>Want to see how it works? </em><a href="https://www.token.security/book-a-demo"><strong><em>Book a demo</em></strong></a><em> and let us show you how we help organizations stay ahead of these risks.</em></p><p>‍</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Judge said Meta illegally used books to build its AI (327 pts)]]></title>
            <link>https://www.wired.com/story/meta-lawsuit-copyright-hearing-artificial-intelligence/</link>
            <guid>43893762</guid>
            <pubDate>Mon, 05 May 2025 11:16:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wired.com/story/meta-lawsuit-copyright-hearing-artificial-intelligence/">https://www.wired.com/story/meta-lawsuit-copyright-hearing-artificial-intelligence/</a>, See on <a href="https://news.ycombinator.com/item?id=43893762">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="ArticlePageChunks"><div data-journey-hook="client-content" data-testid="BodyWrapper"><figure></figure><p><span>Meta’s </span><a href="https://www.wired.com/story/matthew-butterick-ai-copyright-lawsuits-openai-meta/">copyright battle</a> with a group of authors, including Sarah Silverman and Ta-Nehisi Coates, will turn on the question of whether the company’s AI tools produce works that can cannibalize the authors’ book sales.</p><p>US District Court Judge Vince Chhabria spent several hours grilling lawyers from both sides after they each filed motions for partial summary judgment, meaning they want Chhabria to rule on specific issues of the case rather than leaving each one to be decided at trial. The authors allege that Meta illegally used their work to build its generative AI tools, emphasizing that the company pirated their books through “shadow libraries” like LibGen. The social media giant is not denying that it used the work or that <a href="https://www.wired.com/story/new-documents-unredacted-meta-copyright-ai-lawsuit/">it downloaded books from shadow libraries</a> en masse, but insists that <a href="https://www.wired.com/story/battle-over-books3/">its behavior is shielded</a> by the “fair use” doctrine, an exception in US copyright law that allows for permissionless use of copyrighted work in certain cases, including parody, teaching, and news reporting.</p><p>If Chhabria grants either motion, he’ll issue a ruling before the case goes to trial—and likely set an important precedent shaping how courts deal with generative AI copyright cases moving forward. <em>Kadrey v. Meta</em> is one of the <a href="https://www.wired.com/story/ai-copyright-case-tracker/">dozens of lawsuits</a> filed against AI companies that are winding through the US legal system.</p><p>While the authors were heavily focused on the piracy element of the case, Chhabria spoke emphatically about his belief that the big question is whether Meta’s AI tools will hurt book sales and otherwise cause the authors to lose money. “If you are dramatically changing, you might even say obliterating, the market for that person's work, and you're saying that you don't even have to pay a license to that person to use their work to create the product that's destroying the market for their work—I just don't understand how that can be fair use,” he told Meta lawyer Kannon Shanmugam. (Shanmugam responded that the suggested effect was “just speculation.”)</p><p>Chhabria and Shanmugam went on to debate whether Taylor Swift would be harmed if her music was fed into an AI tool that then created billions of robotic knockoffs. Chhabria questioned how this would impact less-established songwriters. “What about the next Taylor Swift?” he asked, arguing that a “relatively unknown artist” whose work was ingested by Meta would likely have their career hampered if the model produced “a billion pop songs” in their style.</p><p>At times, it sounded like the case was the authors’ to lose, with Chhabria noting that Meta was “destined to fail” if the plaintiffs could prove that Meta’s tools created similar works that cratered how much money they could make from their work. But Chhabria also stressed that he was unconvinced the authors would be able to show the necessary evidence. When he turned to the authors’ legal team, led by high-profile attorney David Boies, Chhabria repeatedly asked whether the plaintiffs could actually substantiate accusations that Meta’s AI tools were likely to hurt their commercial prospects. “It seems like you’re asking me to speculate that the market for Sarah Silverman’s memoir will be affected,” he told Boies. “It’s not obvious to me that is the case.”</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>When defendants invoke the fair use doctrine, the burden of proof shifts to them to demonstrate that their use of copyrighted works is legal. Boies stressed this point during the hearing, but Chhabria remained skeptical that the authors’ legal team would be able to successfully argue that Meta could plausibly crater their sales. He also appeared lukewarm about whether Meta’s decision to download books from places like LibGen was as central to the fair use issue as the plaintiffs argued it was. “It seems kind of messed up,” he said. “The question, as the courts tell us over and over again, is not whether something is messed up but whether it’s copyright infringement.”</p><p>A ruling in the <em>Kadrey</em> case could play a pivotal role in the outcomes of the ongoing legal battles over generative AI and copyright. Earlier this spring, a judge <a href="https://www.wired.com/story/thomson-reuters-ai-copyright-lawsuit/">issued a partial summary judgment</a> in the first AI copyright case, <em>Thomson Reuters v. Ross</em>, siding with the publishing conglomerate Thomson Reuters in its fight against AI startup Ross Intelligence. While the ruling was important, that case was an outlier in several ways—including the fact that it didn’t involve generative AI tools like large language models.</p><p>The outcome of the Kadrey case is being closely watched—in part because it could shake up Silicon Valley. It will certainly have a major impact on Meta, whether it helps entrench the company’s generative AI strategy or forces a significant shift. CEO Mark Zuckerberg emphasized how central AI is to Meta’s present and future in an earnings call on Wednesday. “Everything that I've talked about today is built on top of our AI models and infrastructure,” he <a data-offer-url="https://www.facebook.com/zuck/posts/pfbid02XLbq8Sr6S1Y3QfvLZ1U161qf98Kn1en6Q5TwzwKTzHZ4PtoHU5p83xCYzRjHfcwfl" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.facebook.com/zuck/posts/pfbid02XLbq8Sr6S1Y3QfvLZ1U161qf98Kn1en6Q5TwzwKTzHZ4PtoHU5p83xCYzRjHfcwfl&quot;}" href="https://www.facebook.com/zuck/posts/pfbid02XLbq8Sr6S1Y3QfvLZ1U161qf98Kn1en6Q5TwzwKTzHZ4PtoHU5p83xCYzRjHfcwfl" rel="nofollow noopener" target="_blank">said</a>.</p><p>Chhabria has acknowledged how consequential the case is and how his decisions from the bench could upend whole sectors of tech and culture. “I will issue a ruling later today,” Chhabria said at the hearing’s end. “Just kidding! I will take a lot longer to think about it.”</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The vocal effects of Daft Punk (323 pts)]]></title>
            <link>https://bjango.com/articles/daftpunkvocaleffects/</link>
            <guid>43893601</guid>
            <pubDate>Mon, 05 May 2025 10:48:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bjango.com/articles/daftpunkvocaleffects/">https://bjango.com/articles/daftpunkvocaleffects/</a>, See on <a href="https://news.ycombinator.com/item?id=43893601">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="articlecontainer">
	<article>
		
		<p>Daft Punk have used a wide variety of vocal effects in their songs. A May 2001 interview in Remix magazine provided a rare insight from Daft Punk themselves on the topic.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/daft-punk-3.jpg" alt="A photo of Daft Punk in a field on a sunny day."></p>
<blockquote>
<p><a href="https://web.archive.org/web/20060103075925/http://remixmag.com/mag/remix_robopop/">“People always ask us what vocoder we use, but every one of our vocal tracks uses a different vocoder effect. We have the old Roland one [an SVC-350], Auto-Tune, and a DigiTech Vocalist.”</a></p></blockquote>
<p>The quote delivers some vital clues, but it’s incomplete, covering only their first two albums. There’s no mention of using a talk box, despite Around The World almost certainly using one. The quote makes it sound like the DigiTech Vocalist is a vocoder, but it’s not. And for that matter, which DigiTech Vocalist model? There’s around 30 pieces of hardware in DigiTech’s Vocalist series, and quite a few of them were around before Discovery’s release in 2001.</p>
<p>I’ve read comments suggesting the DigiTech Vocalist models with the “EX” suffix are special, but nobody seems to know why, and nobody has published a direct comparison to prove or disprove the theory. I decided to take on the challenge, and run the tests myself. Here’s a fraction of the Vocalist units I ended up buying.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/digitech-vocalist-family.jpg" alt="A photo of lots of DigiTech Vocalist models."></p>
<p>Why are there duplicates of the same model? Why is there a Korg ih in that photo? Before this article gets sidetracked with tests and some honestly quite interesting corporate partnerships, mergers, and lawsuits, here is a list of every Daft Punk album song containing robot-like vocal effects, and my guess on which piece of kit was used for the vocals.</p>
<table>
  <thead>
      <tr>
          <th>Album</th>
          <th>Song</th>
          <th>Effects</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>Homework</td>
          <td>WDPK 83.7 FM</td>
          <td>Roland SVC-350</td>
      </tr>
      <tr>
          <td>Homework</td>
          <td>Around The World</td>
          <td>Talk box</td>
      </tr>
      <tr>
          <td>Homework</td>
          <td>Teachers</td>
          <td>Ensoniq DP/4+</td>
      </tr>
      <tr>
          <td>Homework</td>
          <td>Oh Yeah</td>
          <td>Ensoniq DP/4+</td>
      </tr>
      <tr>
          <td>Discovery</td>
          <td>One More Time</td>
          <td>Auto-Tune</td>
      </tr>
      <tr>
          <td>Discovery</td>
          <td>Digital Love</td>
          <td>DigiTech Vocalist</td>
      </tr>
      <tr>
          <td>Discovery</td>
          <td>Harder, Better, Faster, Stronger</td>
          <td>DigiTech Talker</td>
      </tr>
      <tr>
          <td>Discovery</td>
          <td>Something About Us</td>
          <td>DigiTech Vocalist</td>
      </tr>
      <tr>
          <td>Human After All</td>
          <td>Human After All</td>
          <td>DigiTech Talker</td>
      </tr>
      <tr>
          <td>Human After All</td>
          <td>The Prime Time Of Your Life</td>
          <td>DigiTech Talker</td>
      </tr>
      <tr>
          <td>Human After All</td>
          <td>Robot Rock</td>
          <td>DigiTech Talker</td>
      </tr>
      <tr>
          <td>Human After All</td>
          <td>The Brainwasher</td>
          <td>Tremolo</td>
      </tr>
      <tr>
          <td>Human After All</td>
          <td>Television Rules The Nation</td>
          <td>DigiTech Talker</td>
      </tr>
      <tr>
          <td>Human After All</td>
          <td>Technologic</td>
          <td>Ensoniq DP/4+</td>
      </tr>
      <tr>
          <td>Human After All</td>
          <td>Emotion</td>
          <td>Roland SVC-350</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Give Life Back To Music</td>
          <td>Sennheiser VSM201</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>The Game Of Love</td>
          <td>Sennheiser VSM201</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Within</td>
          <td>Sennheiser VSM201</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Instant Crush</td>
          <td>Auto-Tune and VSM201</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Lose Yourself To Dance</td>
          <td>Talker and VSM201</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Touch</td>
          <td>Sennheiser VSM201</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Get Lucky</td>
          <td>Sennheiser VSM201</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Beyond</td>
          <td>Sennheiser VSM201</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Fragments Of Time</td>
          <td>Talk box (synth solo)</td>
      </tr>
      <tr>
          <td>Random Access Memories</td>
          <td>Doin’ It Right</td>
          <td>Sennheiser VSM201</td>
      </tr>
  </tbody>
</table>
<h3 id="homework-notes-20-january-1997">Homework notes (20 January 1997)&nbsp;<a title="Link to heading" href="#homework-notes-20-january-1997">#</a></h3>
<p>There aren’t many robot vocal effects on Homework, but there is a lot of pitch shifting, likely provided by Daft Punk’s Ensoniq DP/4+, a digital multi-effects units that can do a variety of things. I don’t believe Daft Punk used the vocoder on the Ensoniq DP/4+ for Homework or any of their other albums. The Remix magazine quote says Ensoniq DP/4, but a <a href="https://i.redd.it/te31d8kbt2e11.jpg">gear list in another interview</a> says DP/4+. It doesn’t matter which model was used, as the pitch shifting and vocoder sound the same on both units.</p>
<h3 id="discovery-notes-12-march-2001">Discovery notes (12 March 2001)&nbsp;<a title="Link to heading" href="#discovery-notes-12-march-2001">#</a></h3>
<p>One More Time sounds like Auto-Tune in combination with a Mu-Tron Phasor or Moogerfooger. Harder, Better, Faster, Stronger uses a DigiTech Talker vocoder. Given the DigiTech Talker was used extensively for Human After All, maybe it was one of the last songs recorded for Discovery? The DigiTech Talker wasn’t mentioned in the May 2001 interview, despite its use on Discovery.</p>
<h3 id="human-after-all-notes-14-march-2005">Human After All notes (14 March 2005)&nbsp;<a title="Link to heading" href="#human-after-all-notes-14-march-2005">#</a></h3>
<p>DigiTech Talker and DigiTech Synth Wah are all over the entire album. But, did they use a DigiTech Synth Wah, or DigiTech Bass Synth Wah? They’re very similar pedals. The tremolo effect on The Brainwasher could have been done many ways. Maybe it was just an LFO modulating the amplitude on their Roland S-760 sampler? Maybe it was a guitar pedal? It’s an easy effect that can be achieved many different ways.</p>
<h3 id="random-access-memories-notes-17-may-2013">Random Access Memories notes (17 May 2013)&nbsp;<a title="Link to heading" href="#random-access-memories-notes-17-may-2013">#</a></h3>
<p>In Lose Yourself To Dance, the “everybody’s dancing on the floor” vocals sound very crunchy and DigiTech Talker-like. The vocodeded vocals in Touch sound like a Sennheiser VSM201 switched to unvoiced, or using white noise as the vocoder’s carrier. Instant Crush could be Auto-Tune or some other kind of harmoniser. It sounds like Instant Crush constains some Sennheiser VSM201 chord layers in places.</p>
<hr>
<h3 id="talk-boxes">Talk boxes&nbsp;<a title="Link to heading" href="#talk-boxes">#</a></h3>
<p>Daft Punk’s vocal effects can be broadly split into three categories: Talk boxes, vocoders, and harmonisers. They all sound vaguely similar and robot-like, and you could be forgiven for confusing them, but they’re extremely different techniques and technologies.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/heil-talk-box.jpg" alt="A photo of a Heil Talk Box."></p>
<p>Talk boxes are relatively simple devices — they’re a speaker in a sealed box with a small opening. One end of a hose is fitted to the opening, and the other end is placed into the performer’s mouth, blasting noise towards their throat. The performer can pretend to speak, shaping and filtering the sound coming out of the tube with their vocal tract. A microphone is then needed to record the resulting sound. A keyboard or guitar is typically connected to the talk box unit as the sound source for the speaker. This lets the keyboard or guitar sound like it’s singing. If you’ve heard <a href="https://www.youtube.com/watch?v=UlAa0dc-E4w">Chromeo</a>, 2Pac’s <a href="https://www.youtube.com/watch?v=J7_bMdYfSws">California Love</a>, Peter Frampton’s <a href="https://youtu.be/y7rFYbMhcG8?feature=shared&amp;t=349">Do You Feel Like We Do</a>, or Bon Jovi’s <a href="https://www.youtube.com/watch?v=lDK9QqIzhwk">Livin’ On A Prayer</a> before, you’ve heard a talk box.</p>
<p>I can confirm firing loud sounds into your mouth while holding a tube with your teeth is a bit uncomfortable. In terms of vocal effects used by Daft Punk, I think talk box might be the least used and least interesting, in terms of hunting down the exact hardware used. Talk boxes are simple devices and typically all sound similar. The sound source and performance play a bigger role in the result than the hardware itself.</p>
<p>Also, there aren’t many talk boxes on the market. Daft Punk may have used a Heil Talk Box, a Rocktron Banshee, a home made talk box, or something else. The MXR M222 Talk Box is probably the best option if you’re looking to buy a talk box today, because it has a built in amplifier. The MXR wasn’t around when <a href="https://www.youtube.com/watch?v=K0HSD_i2DvA">Around The World</a> was created though, so that’s not the unit they used.</p>
<p>Daft Punk’s early albums extensively used a Roland Juno-106, so it’s likely that was the sound source for the talk box used on Around The World. It sounds like a sawtooth wave with the filters open.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/daft-punk-juno-106.jpg" alt="A photo of Thomas Bangalter playing a Roland Juno-106 and Roland TR-909."></p>
<p>Even though they’ve been around in a commercial form since the mid 70s, talk boxes aren’t the first device to use human vocal tracts to create robotic sounds — the <a href="https://www.youtube.com/watch?v=kH-krlgo2e8">Sonovox</a> from 1939 takes that prize.</p>
<hr>
<h3 id="vocoders">Vocoders&nbsp;<a title="Link to heading" href="#vocoders">#</a></h3>
<p>Vocoders are a bit like an electronic version of a talk box. Vocoders take two audio inputs — often a voice and a synth — and combine them by filtering the synth with the voice’s frequency response. The filtering is usually done by splitting the signal into frequency bands. The volume of each voice band sets the volume of the repective synth band. More bands usually means a higher quality and more intelligible result. I’ve been calling the inputs “voice” and “synth”, but they’re often referred to as the modulator and carrier. The modulator filters the carrier.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/vocoders.jpg" alt="A photo of vocoders, including a DigiTech Talker and Ultimate VoIS."></p>
<p>Vocoders can be analogue or digital. Good analogue vocoders are physically big and very expensive, due to their complexity, especially if they have lots of frequency bands. They’re also a specialty effect, and therefore usually not mass produced.</p>
<p>The peak for high-end analogue vocoders was the 1970s — the EMS Vocoder 5000 was released in 1976, the Bode/Moog Vocoder in 1977, and the Sennheiser VSM201 in 1977. It’s hard to know exactly how many Sennheiser VSM201s were built, but the highest serial number I’ve seen is 40. The photo below is of the unit with serial number 21. Why should we care about that serial number? It’s the <a href="https://reverb.com/au/item/72543188-1977-sennheiser-vsm201-vocoder-20-band-analog-voice-synthesizer-rare-vocal-microphone-mic-effect-synth-used-by-daft-punk">exact unit Daft Punk used</a> on Random Access Memories, rented from <a href="https://audiorents.com/?s=VSM-201">Audio Rents in Los Angeles</a> for the sessions. Serial number 21 was sold, but Audio Rents have another VSM201, if you’re keen on renting one.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/sennheiser-vsm201.jpg" alt="A photo of a Sennheiser VSM201 with the serial number 21."></p>
<p>The best modern analogue vocoder I’ve heard, by far, is the <a href="https://vocoder.hoerold.com/Ultimate-VoIS.html">Dromedary Modular Ultimate VoIS</a>. It shares a lot of similarities with the Sennheiser VSM201, including accurate voiced/unvoiced detection, silence bridging, and other features. It’s a fraction of the price of a vintage vocoder, and still in production. If you’re looking for a high-end vocoder, it is the one to get.</p>
<p>What about vocoders used by Daft Punk prior to Random Access Memories? It’s incredibly likely Daft Punk used a DigiTech Talker on <a href="https://www.youtube.com/watch?v=gAjR4_CbPpQ">Harder, Better, Faster, Stronger</a> and many of the songs on Human After All. The DigiTech Talker is a digital vocoder, sold as a guitar pedal.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/digitech-talker.jpg" alt="A photo of a DigiTech Talker."></p>
<p>I said “incredibly likely”, because there’s another vocoder that sounds eerily similar. That’s no coincidence — even though the Talker has DigiTech’s name on the front of the pedal, it was designed and manufactured by IVL Technologies in Canada. IVL also teamed up with Electrix to build the Warp Factory vocoder, which sounds very similar, but not identical. It’s pretty clear they’re running the same algorithm.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/warp-factory.jpg" alt="A photo of an Electrix Warp Factory."></p>
<p>IVL specialises in vocal effects and voice processing. They’re still around, but known under a different name — in 2000, TC Helicon was formed as a joint venture between TC Electronic and IVL Technologies. TC Group, the parent company of TC Electronic, took full ownership of TC Helicon in 2005. And finally, Music Tribe (Behringer) purchased TC Group in 2015.</p>
<p>TC Helicon still make a vocoder guitar pedal called the <a href="https://www.tc-helicon.com/tchelicon/product?modelCode=0726-AAP">Talkbox Synth</a>. Sadly, it sounds nothing like the DigiTech Talker. It’s pretty good, but it doesn’t have the crunchy Daft Punk sound. Also, it has a terrible name. It’s not a talk box at all. It’s a vocoder. The DigiTech Talker has a similar naming issue — one of the settings is called “talk box”, and it’s also a vocoder. The recurring theme when researching this article was finding out about IVL/TC Helicon’s incorrectly named products and features.</p>
<p>Here’s a list of some vocoders, including the models being discussed. Many of these vocoders were used on well known songs. A MAM VF-11 was used on Intergalactic by Beastie Boys. Roland VP-330s were used on In The Air Tonight by Phil Collins, Radio Ga Ga by Queen, and I Just Called to Say I Love You by Stevie Wonder. A Korg DVP-1 was used by Air for lots of their songs, including Kelly Watch The Stars. As well as being used by Daft Punk, Sennheiser VSM201s have been used by Herbie Hancock, Giorgio Moroder, and Aphex Twin.</p>
<table>
  <thead>
      <tr>
          <th>Year</th>
          <th>Model</th>
          <th>Bands</th>
          <th>Notes</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>1976</td>
          <td>EMS Vocoder 5000</td>
          <td>22</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>1977</td>
          <td>EMS Vocoder 2000</td>
          <td>16</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>1977</td>
          <td>EMS Vocoder 3000</td>
          <td>16</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>1977</td>
          <td>Bøde/Moog Vocoder</td>
          <td>16</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>1977</td>
          <td>Sennheiser VSM201</td>
          <td>20</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>1978</td>
          <td>Korg VC-10</td>
          <td>20</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>1979</td>
          <td>Roland SVC-350</td>
          <td>11</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>1979</td>
          <td>Roland VP-330</td>
          <td>10</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>1986</td>
          <td>Korg DVP-1</td>
          <td>16</td>
          <td>Digital</td>
      </tr>
      <tr>
          <td>1997</td>
          <td>DigiTech Talker</td>
          <td>24 (order)</td>
          <td>Digital, linear predictive coding</td>
      </tr>
      <tr>
          <td>1999</td>
          <td>Eletrix Warp Factory</td>
          <td>1 to 24 (order)</td>
          <td>Digital, similar to DigiTech Talker</td>
      </tr>
      <tr>
          <td>2000</td>
          <td>MAM VF-11</td>
          <td>11</td>
          <td>Analogue</td>
      </tr>
      <tr>
          <td>2000</td>
          <td>Next! Vox 11</td>
          <td>11</td>
          <td>Identical to MAM VF-11</td>
      </tr>
      <tr>
          <td>2000</td>
          <td>FAT Procoder PCP330</td>
          <td>11</td>
          <td>Identical to MAM VF-11</td>
      </tr>
      <tr>
          <td>2002</td>
          <td>Alesis ModFx Metavox</td>
          <td>38</td>
          <td>Digital</td>
      </tr>
      <tr>
          <td>2017</td>
          <td>TC Helicon Talkbox Synth</td>
          <td>?</td>
          <td>Digital</td>
      </tr>
      <tr>
          <td>2019</td>
          <td>Behringer VC340</td>
          <td>10</td>
          <td>Analogue, Roland VP-330 clone</td>
      </tr>
      <tr>
          <td>2018</td>
          <td>Electro-Harmonix V256</td>
          <td>8 to 256</td>
          <td>Digital</td>
      </tr>
      <tr>
          <td>2024</td>
          <td>Ultimate VoIS</td>
          <td>18</td>
          <td>Analogue</td>
      </tr>
  </tbody>
</table>
<p>Having more filter bands typically increases the quality of the results, but I wouldn’t consider the Metavox or V256 to be anywhere near the best in terms of intelligibility. The EMS Vocoder 5000 and Sennheiser VSM201 are often considered to be the best vocoders ever made.</p>
<p>The DigiTech Talker and Eletrix Warp Factory use linear predictive coding (LPC), rather than bandpass filters. The value shown in the bands column for those models is the LPC order.</p>
<h3 id="vocoder-comparison">Vocoder comparison&nbsp;<a title="Link to heading" href="#vocoder-comparison">#</a></h3>
<p>If you’d like to hear many of these vocoders in action, I’ve created a <a href="https://www.youtube.com/watch?v=bkTFCPQMJkc">vocoder comparison video</a>. The comparison includes a Sennheiser VSM201, DigiTech Talker, the XILS 201 plugin, a Dromedary Modular Ultimate VoIS, and many other vododers. It compares the actual models used by Daft Punk as well as software clones, and the best modern analogue vocoder.</p>
<p><a href="https://www.youtube.com/watch?v=bkTFCPQMJkc"><img src="https://bjango.com/images/articles/daftpunkvocaleffects/video-vocoders.jpg"></a></p>
<hr>
<h3 id="harmonisers">Harmonisers&nbsp;<a title="Link to heading" href="#harmonisers">#</a></h3>
<p>Harmonisers are very different to talk boxes and vocoders. There’s no filtering involved, and they don’t require two audio sources — they work directly with one audio signal, often a vocal, altering its pitch. Harmonisers are a digital effect.</p>
<p>There’s two main parts to the digital algorithm used by harmonisers — pitch detection, and pitch shifting. Pitch detection figures out the fundamental frequency of the signal. Once the pitch is known, lots of possibilities open up.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/digitech-vocalist-family-2.jpg" alt="A photo of several harmonizers, including two DigiTech Studio Vocalist EX modesl."></p>
<p>If the pitch is rapidly shifted to a nearby note in the song’s key, the result sounds like <a href="https://www.youtube.com/watch?v=FGBhQbmPwH8&amp;t=47s">One More Time</a> or <a href="https://www.youtube.com/watch?v=a5uQMwRMHcs&amp;t=81">Instant Crush</a>. Using <a href="https://www.antarestech.com/">Auto-Tune</a> with extreme settings is one way to achieve this effect, but it can be done with most harmonisers and is often called “hard tune”.</p>
<p>Some harmonisers can have keyboards connected to them, and use the notes played on the keyboard to determine which note to shift the vocal to. Holding multiple keys can create harmonies. <a href="https://www.youtube.com/watch?v=UYIAfiVGluk">Hide and Seek</a> by Imogen Heap is a great example of this effect in action. In Hide and Seek, the original main vocal can also be heard, blended in with the harmonies.</p>
<p><a href="https://www.youtube.com/watch?v=FxzBvqY5PP0">Digital Love</a> and <a href="https://www.youtube.com/watch?v=sOS9aOIXPEk">Something About Us</a> were created using the same technique, where a MIDI keyboard or sequencer was used to control the pitch of the vocal. Daft Punk have said they used a DigiTech Vocalist, which is a strong indication that’s what was used for those two tracks. Both songs were released on 12 March 2001, as part of the Discovery album. Given the time required for mixing, mastering, and physical media production, I’d guess they must have used a model from before late 2000. There’s 7 DigiTech Vocalist models with MIDI pitch control that were released before then.</p>
<p>The earlier models incorrectly call the MIDI control feature “vocoder”, and later models call it “MIDI notes mode” or “notes harmony mode”. The list below shows all the DigiTech Vocalist models with MIDI notes mode. There’s another 20 or so models that can’t be controlled via a keyboard.</p>
<p>Interestingly, Imogen Heap also used a DigiTech Vocalist to record Hide and Seek, and has used a <a href="https://youtu.be/-Scn74BnDz4?feature=shared&amp;t=1983">TC Helicon VoiceLive 2</a> when <a href="https://www.youtube.com/watch?v=dHk2lLaDzlM">performing the song live</a>. Which DigiTech Vocalist? I emailed Imogen’s team and to my surprise, they responded, confirming a DigiTech Vocalist Workstation EX was used for recording Hide and Seek.</p>
<table>
  <thead>
      <tr>
          <th>Year</th>
          <th>Model</th>
          <th>Sampling</th>
          <th>Mic power</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>1991</td>
          <td>Vocalist VHM5</td>
          <td>16-bit, 31.25kHz</td>
          <td>None</td>
      </tr>
      <tr>
          <td>1993</td>
          <td>Studio Vocalist</td>
          <td>18-bit, 48kHz</td>
          <td>+48V</td>
      </tr>
      <tr>
          <td>1995</td>
          <td>Vocalist II</td>
          <td>16-bit, 31.25kHz</td>
          <td>None</td>
      </tr>
      <tr>
          <td>1996</td>
          <td>MIDI Vocalist</td>
          <td>16-bit, 31.25kHz</td>
          <td>None</td>
      </tr>
      <tr>
          <td>1996</td>
          <td>Vocalist Workstation</td>
          <td>18-bit, 48kHz</td>
          <td>None</td>
      </tr>
      <tr>
          <td>1998</td>
          <td>Vocalist Access</td>
          <td>16-bit, 44.1kHz</td>
          <td>None</td>
      </tr>
      <tr>
          <td>1998</td>
          <td>Studio Vocalist EX</td>
          <td>18-bit, 48kHz</td>
          <td>+48V</td>
      </tr>
      <tr>
          <td>2000</td>
          <td>Vocalist VR</td>
          <td>16-bit, 44.1kHz</td>
          <td>None</td>
      </tr>
      <tr>
          <td>2001</td>
          <td>Vocalist Workstation EX</td>
          <td>18-bit, 48kHz</td>
          <td>None</td>
      </tr>
      <tr>
          <td>2008</td>
          <td>Vocalist Live Pro</td>
          <td>24-bit, 44.1kHz</td>
          <td>+48V</td>
      </tr>
      <tr>
          <td>2009</td>
          <td>Vocalist VL3D</td>
          <td>24-bit, 44.1kHz</td>
          <td>+48V</td>
      </tr>
  </tbody>
</table>
<p>Remember IVL Technologies from earlier in the article? Their logo is on all those Vocalist models, except the Vocalist Live Pro. Yes, IVL also designed and built almost all the DigiTech Vocalist units. The Vocalist Live Pro has a different logo on the back — 3db Research. And, the Vocalist VL3D has IVL and 3db Research’s logos on it. I don’t fully understand what went down, but 3db Research was created by ex-IVL staff, and Harman International accused TC Helicon of infringing <a href="https://patents.google.com/patent/US20140109751A1/en">patents relating to harmonisers</a>. TC Helicon counter sued, and won.</p>
<p>Hold up. Why is Harman involved? While IVL were busy merging with TC Group, forming TC Helicon, and being sold to Behringer, DigiTech were experiencing their own dramas — DigiTech sold to Harman International in 1990, then Samsung bought Harman in 2017. After a restructure, DigiTech ceased to exist in mid 2018. In 2022, <a href="https://digitech.com/announcing-the-comeback-of-the-dod-pedals/">DigiTech was purchased and revived by Cor-Tek</a>, who seem to be doing a great job. That’s why it’s possible to buy DigiTech pedals today. Unfortunately, they don’t currently sell any DigiTech Vocalists or Talkers, so you’ll have to hit the second hand market if you’re after either. <a href="https://www.youtube.com/live/RkzdNmBsyxw?feature=shared&amp;t=664">This JHS Pedals video has a full recap of the DOD and DigiTech history</a>.</p>
<p>IVL partnered with other companies, including Korg. The Korg ih Interactive Vocal Harmony appears to run the same algorithm as the DigiTech Vocalist series, so I purchased one of those to add to the tests. I also purchased a TC Helicon Perform VE and TC Helicon VoiceWorks. As noted above, TC Helicon is the modern incarnation of IVL, so maybe their harmonisers sound the same as the older DigiTech ones?</p>
<table>
  <thead>
      <tr>
          <th>Year</th>
          <th>Model</th>
          <th>Sampling</th>
          <th>Mic power</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>1995</td>
          <td>Korg ih</td>
          <td>16-bit, 31.25kHz</td>
          <td>None</td>
      </tr>
      <tr>
          <td>2003</td>
          <td>TC Helicon VoiceWorks</td>
          <td>24-bit, 44.1kHz or 48kHz</td>
          <td>+48V</td>
      </tr>
      <tr>
          <td>2017</td>
          <td>TC Helicon Perform VE</td>
          <td>24-bit, 44.1kHz</td>
          <td>+48V</td>
      </tr>
  </tbody>
</table>
<p>IVL also worked with DigiTech to create the Whammy WH-1, Whammy II, and Bass Whammy pedals, which makes sense, given the Whammy is a harmoniser. Those models likely shared code and algorithms with the Vocalist line. Later versions of the DigiTech Whammy weren’t built in collaboration with IVL. The earlier IVL Whammy models are held in high regard and their prices on the used market reflect that. However, the latest model, the Whammy V, does have a “classic” mode that is supposed to replicate the earler models.</p>
<h3 id="ex-models">EX models&nbsp;<a title="Link to heading" href="#ex-models">#</a></h3>
<p>Now we have the full history of DigiTech and IVL covered, we can talk about how the “EX” models fit into the timeline. In 1998, the Studio Vocalist EX was released, becoming the new flagship Vocalist model. The main upgrades were more patch storage, more presets, and an updated algorithm with better pitch recognition.</p>
<p>For the effect used on Digital Love and Something About Us, the improved pitch recognition would make an audible difference. But, in my tests, the difference between the non-EX and EX models is fairly subtle. Audible and better, but subtle. If I had to guess which unit Daft Punk used, my money would be on the Studio Vocalist EX, but a Vocalist Workstation or one of the other earlier models could have also been used.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/digitech-vocalist-workstation-ex.jpg" alt="A photo of a DigiTech Vocalist Workstation EX."></p>
<p>To confuse things even further, the Vocalist Workstation can run the EX firmware, and I was able to upgrade one of my own units from firmware 1.02 to 2.02 (2.02 is the EX version, with additional presets and patch storage). A Vocalist Workstation running firmware 2.02 sounds identical to a Vocalist Workstation EX to me. The internals to the Vocalist Workstation EX are a bit different to the Vocalist Workstation, but I don’t think any of the differences relate to the audio path. The EX is also heavier, at 840 grams vs the non-EX’s 700 grams. The weight difference is due to a useless strip of metal in the EX. No, I’m not kidding.</p>
<p>Without more evidence, it seems impossible to know which model Daft Punk used. They may have used a Vocalist VHM5, Studio Vocalist, Vocalist II, MIDI Vocalist, Vocalist Workstation, Vocalist Access, Studio Vocalist EX, or Vocalist VR. I’m not sure it matters, given how similar they all sound.</p>
<p>If you are looking for a device to replicate the effect, a Studio Vocalist EX, Vocalist Workstation EX, or Vocalist Workstation with the EX firmware are good choices. Some of the newer TC Helicon devices, like the VoiceLive 3 Extreme, Perform VE, and Perform VG are great, too. Just be aware that only specific TC Helicon vocal effect models have MIDI notes mode. Also, the Perform VE and Perform VG have been discontinued.</p>
<p>I would recommend against the Vocalist Live Pro or Vocalist VL3D. They don’t run IVL’s algorithm and they sound terrible. I would also recommend against getting a Korg ih — it does use IVL’s algorithm and sounds like a Vocalist Workstation, but there is a permanent chorus effect that can not be disabled.</p>
<h3 id="pitch-shifting">Pitch shifting&nbsp;<a title="Link to heading" href="#pitch-shifting">#</a></h3>
<p>The pitch shifting effect used on Teachers, Oh Yeah, and Technologic is similar to the harmoniser effect we’ve been discussing, but there’s no pitch detection involved — the audio is just shifted without trying to make it match any specific note. It’s highly likely Daft Punk used their Ensoniq DP/4+ to achieve the pitch shifting on Homework and Discovery.</p>
<h3 id="harmoniser-comparison">Harmoniser comparison&nbsp;<a title="Link to heading" href="#harmoniser-comparison">#</a></h3>
<p>If you’d like to hear many of these harmonisers in action, I’ve created a <a href="https://www.youtube.com/watch?v=10o0hCybeq4">harmoniser comparison video</a>, which also covers some of the modern TC Helicon models. Another interesting fact is that all the harmonisers tested use last note priority when more than one note is played at a time via MIDI.</p>
<p><a href="https://www.youtube.com/watch?v=10o0hCybeq4"><img src="https://bjango.com/images/articles/daftpunkvocaleffects/video-harmonizers.jpg"></a></p>
<hr>
<h3 id="synth-wah-vs-bass-synth-wah">Synth Wah vs Bass Synth Wah&nbsp;<a title="Link to heading" href="#synth-wah-vs-bass-synth-wah">#</a></h3>
<p>Human After All sounds like Human After All because of yet another DigiTech product — a digital envelope filter guitar pedal called the Synth Wah. Or, the Bass Synth Wah. It’s unclear which pedal was used, because they’re incredibly similar. Strangely, the Bass Synth Wah weights a lot more (340 vs 635 grams). I didn’t open the pedals up to find out why, but that’s a huge difference, given how alike they are. It might just be an internal metal weight, like the Vocalist Workstation EX has.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/digitech-synth-wah-bass-synth-wah.jpg" alt="A photo of DigiTech Synth Wah and DigiTech Bass Synth Wah guitar pedals."></p>
<p>There’s 7 effect types on each pedal, selected via the rightmost knob. Daft Punk favoured “filter 1” and “filter 2”. Here’s a list of the songs on Human After All, and the effect they probably used.</p>
<table>
  <thead>
      <tr>
          <th>Song</th>
          <th>Effect number</th>
          <th>Effect type</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>Human After All</td>
          <td>6</td>
          <td>Filter 2</td>
      </tr>
      <tr>
          <td>The Prime Time Of Your Life</td>
          <td>6</td>
          <td>Filter 2</td>
      </tr>
      <tr>
          <td>Steam Machine</td>
          <td>5</td>
          <td>Filter 1</td>
      </tr>
      <tr>
          <td>The Brainwasher</td>
          <td>6</td>
          <td>Filter 2</td>
      </tr>
      <tr>
          <td>Television Rules The Nation</td>
          <td>2 and 6</td>
          <td>Env Down and Filter 2</td>
      </tr>
      <tr>
          <td>Technologic</td>
          <td>6</td>
          <td>Filter 2</td>
      </tr>
  </tbody>
</table>
<p>If <a href="https://www.youtube.com/watch?v=YKaN7a19jLc">Television Rules The Nation</a> does in fact use “env down”, then that’s a vital clue — the Synth Wah has “env down”, but the Bass Synth Wah does not. The pedals share effect types 3, 4, 5, and 6, but 1, 2, and 7 are different. It was the Synth Wah after all.</p>
<h3 id="credits">Credits&nbsp;<a title="Link to heading" href="#credits">#</a></h3>
<p>These amazing people helped make this article and the related videos a reality: Vocals performed by <a href="https://www.fiverr.com/soloheadmusic">Solohead</a>. Sennheiser VSM201 vocoder recording by <a href="https://www.youtube.com/@TalhaVocoding">Talha Vocoding</a>. Ensoniq DP/4+ vocoder recording by <a href="https://www.youtube.com/@_floeter">@_floeter</a>. DigiTech Studio Vocalist recording by Spencer D. Carson. Technical guidance, repairs, and EPROM programming by Cam Sanderson.</p>
<p>Keep living the gold and the silver dream.</p>
<p><img src="https://bjango.com/images/articles/daftpunkvocaleffects/daft-punk-2.jpg" alt="A photo of Daft Punk in front of Eiffel Tower at night."></p>

		<p><small>Published 5 May 2025.</small></p>
	</article>
	
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Trump announces 100% tariffs on movies ‘produced in foreign lands’ (191 pts)]]></title>
            <link>https://www.theguardian.com/us-news/2025/may/04/trump-tariffs-foreign-movies</link>
            <guid>43893310</guid>
            <pubDate>Mon, 05 May 2025 09:47:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/us-news/2025/may/04/trump-tariffs-foreign-movies">https://www.theguardian.com/us-news/2025/may/04/trump-tariffs-foreign-movies</a>, See on <a href="https://news.ycombinator.com/item?id=43893310">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p><a href="https://www.theguardian.com/us-news/donaldtrump" data-link-name="in body link">Donald Trump</a> on Sunday announced on his Truth Social platform a 100% <a href="https://www.theguardian.com/us-news/trump-tariffs" data-link-name="in body link">tariff</a> on all movies “produced in Foreign Lands”, saying the US film industry was dying a “very fast death” due to the incentives that other countries were offering to draw American film-makers.</p><p>In his post, he claimed to have authorised the commerce department and the US trade representative to immediately begin instituting such a tariff.</p><p>“This is a concerted effort by other Nations and, therefore, a National Security threat,” Trump said in <a href="https://truthsocial.com/@realDonaldTrump/posts/114452117143235155" data-link-name="in body link">the Truth Social post</a>. “It is, in addition to everything else, messaging and propaganda!</p><p>“WE WANT MOVIES MADE IN AMERICA, AGAIN!” Trump added.</p><figure id="8ae2b780-47ed-4829-af63-0195c20dd2b3" data-spacefinder-role="richLink" data-spacefinder-type="model.dotcomrendering.pageElements.RichLinkBlockElement"><gu-island name="RichLinkComponent" priority="feature" deferuntil="idle" props="{&quot;richLinkIndex&quot;:4,&quot;element&quot;:{&quot;_type&quot;:&quot;model.dotcomrendering.pageElements.RichLinkBlockElement&quot;,&quot;prefix&quot;:&quot;Related: &quot;,&quot;text&quot;:&quot;Republicans in Congress pull out all the stops to protect Trump tariffs&quot;,&quot;elementId&quot;:&quot;8ae2b780-47ed-4829-af63-0195c20dd2b3&quot;,&quot;role&quot;:&quot;richLink&quot;,&quot;url&quot;:&quot;https://www.theguardian.com/us-news/2025/may/04/republicans-congress-trump-tariffs&quot;},&quot;ajaxUrl&quot;:&quot;https://api.nextgen.guardianapps.co.uk&quot;,&quot;format&quot;:{&quot;design&quot;:0,&quot;display&quot;:0,&quot;theme&quot;:0}}"></gu-island></figure><p>The commerce secretary, Howard Lutnick, posting on X said: “We’re on it.” Neither Lutnick nor Trump provided any details on the implementation. It was not immediately clear whether the move would target production companies, foreign or American, producing films overseas.</p><p>Film and television production in Los Angeles has fallen by nearly 40% over the last decade, according to FilmLA, a non-profit that tracks the region’s production. At the same time, governments around the world have offered more generous tax credits and cash rebates to lure productions, and capture a greater share of the $248bn that Ampere Analysis predicts will be spent globally in 2025 to produce content.</p><p>Politicians in Australia and New Zealand said on Monday they would advocate for their respective film industries, after the president’s announcement.</p><p>Australia’s home affairs minister, Tony Burke, said he had spoken to the head of the government body Screen Australia about the proposed tariffs. “Nobody should be under any doubt that we will be standing up unequivocally for the rights of the Australian screen industry,” he said in a statement.</p><figure id="c4a5d97c-26f1-4298-ba8d-fb8ca979211b" data-spacefinder-role="richLink" data-spacefinder-type="model.dotcomrendering.pageElements.RichLinkBlockElement"><gu-island name="RichLinkComponent" priority="feature" deferuntil="idle" props="{&quot;richLinkIndex&quot;:9,&quot;element&quot;:{&quot;_type&quot;:&quot;model.dotcomrendering.pageElements.RichLinkBlockElement&quot;,&quot;prefix&quot;:&quot;Related: &quot;,&quot;text&quot;:&quot;‘It feels empty’: is Hollywood film and TV production in a death spiral?&quot;,&quot;elementId&quot;:&quot;c4a5d97c-26f1-4298-ba8d-fb8ca979211b&quot;,&quot;role&quot;:&quot;richLink&quot;,&quot;url&quot;:&quot;https://www.theguardian.com/film/2025/apr/26/los-angeles-film-and-tv-production&quot;},&quot;ajaxUrl&quot;:&quot;https://api.nextgen.guardianapps.co.uk&quot;,&quot;format&quot;:{&quot;design&quot;:0,&quot;display&quot;:0,&quot;theme&quot;:0}}"></gu-island></figure><p>New Zealand’s prime minister, Christopher Luxon, told a news conference the government was awaiting further detail of the proposed tariffs. “We’ll have to see the detail of what actually ultimately emerges. But we’ll be obviously a great advocate, great champion of that sector in that industry,” he said.</p><p>The announcement from Trump comes after he triggered a trade war with China, and imposed global tariffs which have roiled markets and led to fears of a US recession. The film industry has already been feeling the effects of the tariffs, as China in April responded to the announcements by <a href="https://www.theguardian.com/film/2025/apr/10/china-to-restrict-us-film-releases-after-trumps-tariff-hike" data-link-name="in body link">reducing the quota</a> of American movies allowed into that country.</p><p>China is the world’s second largest film market after the US, although in recent years domestic offerings have outshone Hollywood imports.</p><p>A former senior commerce department official, William Reinsch, a senior fellow with the Center for Strategic and International Studies, said retaliation against Trump’s foreign movies tariffs would be devastating.</p><p>“The retaliation will kill our industry. We have a lot more to lose than to gain,” he said, adding that it would be difficult to make a national security or national emergency case for movies.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Modern Latex (198 pts)]]></title>
            <link>https://github.com/mrkline/modern-latex</link>
            <guid>43892119</guid>
            <pubDate>Mon, 05 May 2025 05:18:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/mrkline/modern-latex">https://github.com/mrkline/modern-latex</a>, See on <a href="https://news.ycombinator.com/item?id=43892119">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Modern LaTeX</h2><a id="user-content-modern-latex" aria-label="Permalink: Modern LaTeX" href="#modern-latex"></a></p>
<p dir="auto">LaTeX is a tool for creating beautiful writing, or a torture device that drives
users to the brink of madness every time they see bad spacing for the rest
of their lives. One of the two. Despite origins that can be traced back four
decades, it remains one of the best typesetting programs around. Many of its
guides, however, haven't aged as well. This short book will get you started with
LaTeX without bogging you down in arcana that lost its relevance back in the 90s.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Where do I get it?</h2><a id="user-content-where-do-i-get-it" aria-label="Permalink: Where do I get it?" href="#where-do-i-get-it"></a></p>
<p dir="auto">An up-to-date version should be available at
<a href="https://assets.bitbashing.io/modern-latex.pdf" rel="nofollow">https://assets.bitbashing.io/modern-latex.pdf</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How do I build it?</h2><a id="user-content-how-do-i-build-it" aria-label="Permalink: How do I build it?" href="#how-do-i-build-it"></a></p>
<ol dir="auto">
<li>
<p dir="auto">Install LuaLaTeX, a modern, Unicode-aware version of LaTeX.
On Linux, this is usually as simple as installing your distro's TeX Live
package, e.g., <code>texlive-base</code> or <code>texlive-core</code>.
The same package should also provide the <code>latexmk</code> script.
(See below)</p>
</li>
<li>
<p dir="auto">Check out the <code>online</code> branch of the source repository,
which is optimized for digital display instead of a printed book.
Changes include even margins, centered page numbers, a lack of blank pages
between chapters, and so on.</p>
</li>
<li>
<p dir="auto">Change the fonts as-needed.</p>
<p dir="auto">The official version of this book is typeset with Garamond Premier,
Neue Haas Grotesk, URW Futura, Drive Mono, Noto, and (of course) Latin Modern.
In the likely case that you don't have all of these typefaces,
change the <code>fontspec</code> commands (e.g., <code>setmainfont</code>, etc.) appropriately,
then modify or remove the colophon at the back of the book.</p>
</li>
<li>
<p dir="auto">Build the book using</p>
<div data-snippet-clipboard-copy-content="latexmk -lualatex -latexoption=-halt-on-error modern-latex.tex"><pre><code>latexmk -lualatex -latexoption=-halt-on-error modern-latex.tex
</code></pre></div>
<p dir="auto">Note that <code>latexmk</code> will run LuaLaTeX multiple times, since
TeX generates cross references in one pass, then links them in a second.</p>
<p dir="auto">If you can't use <code>latexmk</code> for some reason, you can manually invoke</p>
<div data-snippet-clipboard-copy-content="lualatex -halt-on-error -shell-escape modern-latex.tex"><pre><code>lualatex -halt-on-error -shell-escape modern-latex.tex
</code></pre></div>
<p dir="auto">until it no longer warns,
"Label(s) may have changed. Rerun to get cross-references right."</p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Feedback</h2><a id="user-content-feedback" aria-label="Permalink: Feedback" href="#feedback"></a></p>
<p dir="auto">...is welcome!
Please issue pull requests on this book's Github page,
or contact the author via matt &lt;at&gt; bitbashing.io</p>
<p dir="auto">Enjoy!</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI Meets WinDBG (256 pts)]]></title>
            <link>https://svnscha.de/posts/ai-meets-windbg/</link>
            <guid>43892096</guid>
            <pubDate>Mon, 05 May 2025 05:11:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://svnscha.de/posts/ai-meets-windbg/">https://svnscha.de/posts/ai-meets-windbg/</a>, See on <a href="https://news.ycombinator.com/item?id=43892096">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><h2 id="old-meets-new-bringing-crash-analysis-into-2025">Old Meets New: Bringing Crash Analysis into 2025</h2><p>Let's face it - while the rest of software development has evolved at warp speed, crash dump analysis feels like it's been preserved in digital amber for decades. We've got self-driving cars and pocket-sized supercomputers, yet here we are, still pecking away at command prompts like it's the dawn of the internet. Why is debugging the only area where we cling to tools that look like they belong in a computer history museum?</p><p>Picture this: You, a professional software engineer in 2025, hunched over a terminal, manually typing arcane commands like <code>!analyze -v</code> and <code>.ecxr</code>, squinting at hexadecimal memory addresses, and mentally translating stack traces. All while your friends in other industries are delegating their work to AI assistants that can write entire documents, create art, or automate complex workflows.</p><p>Something's wrong with this picture, right?</p><p><strong>What if I told you we can throw that ancient workflow into the dustbin of computing history?</strong> That's exactly what I've done. And I'm not talking about slightly better syntax highlighting or prettier UI for WinDBG. I'm talking about a fundamental transformation where you simply have a conversation with your debugger.</p><h2 id="when-inspiration-strikes">When Inspiration Strikes</h2><p>During a debugging session at work, I had one of those lightning bolt moments. What if - and stick with me here - we could apply the same AI-assisted "vibe coding" approach to crash dump analysis?</p><p>Picture this: instead of manually slogging through memory dumps and command outputs, you simply ask, "Hey, why did this application crash?" and get an intelligent, contextual answer that actually helps you solve the problem.</p><p><strong>The idea was too compelling not to pursue. So I built it.</strong></p><h2 id="see-it-in-action-ai-powered-crash-analysis">See It In Action: AI-Powered Crash Analysis</h2><p>Before diving into the technical details, let me show you what this looks like in practice. I have prepared a demo application to showcase two different use cases:</p><h3 id="video-1-crash-analysis-and-automated-bugfix">Video 1: Crash Analysis and Automated Bugfix</h3><p>In this video, I show how Copilot can analyze a crash dump, identify the bug and auto-fix the issue.</p><video controls="" src="https://svnscha.de/casts/2025-05-03-CrashDump1.webm">Your browser does not support the video tag.</video><p>As you can see in the video, instead of manually running WinDBG commands and interpreting the cryptic output, I'm having a natural conversation with GitHub Copilot. The AI quickly identifies that the application crashed, explains which specific conditions led to the crash, and suggests a fix.</p><h3 id="video-2-automated-crash-dump-analysis-of-multiple-crash-dump-files">Video 2: Automated Crash Dump Analysis of multiple crash dump files</h3><p>This video demonstrates a different capability: analyzing multiple crash dump files at once. It shows how the tool can quickly identify which dumps belong to your application and which don't.</p><video controls="" src="https://svnscha.de/casts/2025-05-03-CrashDump2.webm">Your browser does not support the video tag.</video><p>Worth noting, it takes just a few seconds until you get your first useful answer. I've played around with this for many hours and let me tell you one thing: You can really go deep. If you ask the right questions, the AI runs WinDBG/CDB commands that I haven't seen in all these years of debugging, and that is simply amazing.</p><h2 id="how-can-this-help-the-industry">How can this help the industry?</h2><p>I believe this is one of the really good examples of how AI can boost productivity. Analyzing crash dumps is a very tedious task. It begins with quickly checking and identifying whether crashes are the same or different, and often requires very advanced knowledge when a crash is challenging - really challenging.</p><p>Copilot can help here tremendously; it knows how to:</p><ul><li>Interpret assembly code (without you having to remember what EAX stands for)</li><li>Check memory contents (so you don't have to count hex bytes on your fingers)</li><li>Traverse structures with symbols (goodbye to manual pointer arithmetic!)</li><li>And so much more</li></ul><p>This is a game changer - not just for engineers, but also for support, QA, and everyone involved with crash dumps. It's like going from hunting with a stone spear to using a guided missile.</p><h2 id="how-did-i-build-this">How did I build this?</h2><p>If you've ever worked with WinDBG, you know the drill: cryptic commands, obscure syntax, and endless scrolling through memory addresses and stack traces that make your eyes glaze over. It's the kind of specialized knowledge that takes years to master and feels like speaking an alien language even when you do.</p><p>The trick here is connecting WinDBG with AI. To do that, you first need to programmatically control a debugging session, right? There are plenty of options on how to do this. I prefer to keep things simple, so I have chosen <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/debugging-using-cdb-and-ntsd">CDB</a>, which is Microsoft's Console Debugger. It operates on standard input and output, and that's so much more fun to deal with than setting up COM APIs or similar approaches.</p><p>The second part is "connecting with AI." That's where Model Context Protocol Servers come into the game.</p><h2 id="understanding-model-context-protocol-servers">Understanding Model Context Protocol Servers</h2><p>MCP is an open standard developed by Anthropic, released in November 2024. This protocol allows AI models to interact with external tools and data sources - think of it as giving AI assistants "hands" to work with other software. It defines a way for AI assistants to discover, access, and use tools through a consistent interface. In essence, it's what allows GitHub Copilot to "talk" to external programs like WinDBG.</p><p>An MCP server acts as the intermediary between the AI model and the tool. It:</p><ol><li>Registers available tools with the client</li><li>Handles requests from AI models to use these tools</li><li>Executes the tool operations and returns results</li><li>Maintains context across interactions</li></ol><p>This architecture means that any tool can be made available to AI models if someone builds an MCP server for it. And that's exactly what I did for WinDBG (CDB).</p><h3 id="why-mcp-instead-of-languagemodeltool-api">Why MCP Instead of LanguageModelTool API?</h3><p>The <a href="https://code.visualstudio.com/api/extension-guides/tools">LanguageModelTool API</a> might eventually be a better fit for this specific use-case. Creating a Visual Studio Extension that "just works" out of the box would potentially simplify the integration process significantly.</p><p>However, using MCP directly offers several notable advantages. It works with any AI model, not just limiting itself to Copilot. The server can be used outside VS Code, functioning with various other tools. New features can be easily added without necessitating changes to the core integration. Moreover, it remains platform-independent, avoiding lock-in to any single company's implementation.</p><h2 id="the-mcp-windbg-project">The MCP-WinDBG Project</h2><p>I've implemented a <a href="https://www.anthropic.com/news/model-context-protocol">Model Context Protocol</a> server that wraps WinDBG/CDB and exposes its capabilities to AI models within VS Code. Better yet, I've made it open source so everyone can experience this new workflow.</p><p>The project, called <a href="https://github.com/svnscha/mcp-windbg">mcp-windbg</a>, creates a seamless bridge between VS Code, GitHub Copilot, and the powerful analysis capabilities of WinDBG.</p><p>The actual "hard part" was implementing the CDB (Command-Line WinDBG) interaction layer. And by "hard", I mean vibe-coding with two coffees on a Saturday morning, where I spent more time being annoyed by pyTest failures than actual coding difficulties. The core implementation came together surprisingly quickly!</p><p>The rest is primarily wrapper code that implements the Model Context Protocol specifications. Now that I've established and defined the core WinDBG interaction logic, I'm considering refactoring the project to TypeScript. This would enable me to create both an MCP Server in TypeScript and a dedicated Visual Studio Extension, with both implementations leveraging the same underlying CDB interaction layer.</p><h2 id="what-does-this-mean-in-practice">What Does This Mean In Practice?</h2><p>Let me walk you through what this enables:</p><ol><li><p><strong>Natural language crash analysis</strong>: "Why is this application crashing with an access violation at this address?" (Instead of: "What the $%#@ is this heap corruption!?")</p></li><li><p><strong>Contextual debugging</strong>: "Show me the stack trace for thread 5 and explain what each function is doing based on the symbols." (Instead of staring at call stacks like they're ancient hieroglyphics)</p></li><li><p><strong>Root cause identification</strong>: "What's causing this null pointer dereference and where should I look in the code to fix it?" (Instead of playing detective with memory addresses)</p></li></ol><p>Instead of typing obscure commands like <code>!analyze -v</code> followed by a series of manual investigations, you simply ask questions in plain language, and the AI interprets the crash data for you. It's like having a WinDBG expert whispering in your ear, except it doesn't get annoyed when you ask the same question five times.</p><h2 id="how-it-works">How It Works</h2><p>The MCP server functions as a bridge between GitHub Copilot and WinDBG's powerful analysis capabilities:</p><ol><li>It provides a set of tools that Copilot can use to interact with crash dumps</li><li>It translates natural language questions into appropriate WinDBG commands</li><li>It parses and interprets the often cryptic WinDBG output into more useful information</li><li>It maintains context throughout a debugging session, enabling follow-up questions to work naturally</li></ol><p>The technical implementation uses Python to spawn and communicate with CDB (the command-line version of WinDBG), parses the output, and exposes the functionality through the Model Context Protocol to VS Code.</p><h2 id="getting-started-with-mcp-windbg">Getting Started With mcp-windbg</h2><p>Ready to try it yourself? Here's how to get started:</p><ol><li>First, make sure you have the Windows SDK installed with Debugging Tools for Windows</li><li>Clone the repository: <code>git clone https://github.com/svnscha/mcp-windbg.git</code></li><li>Set up a Python virtual environment and install the package</li><li>Configure VS Code to use the MCP server</li></ol><p>For complete details, check out the <a href="https://github.com/svnscha/mcp-windbg">repository README</a>.</p><p>Once configured, create a <code>.vscode/mcp.json</code> file in your project that points to the server:</p><pre data-lang="json"><code data-lang="json"><span>{
</span><span>    </span><span>"servers"</span><span>: {
</span><span>        </span><span>"mcp_server_windbg"</span><span>: {
</span><span>            </span><span>"type"</span><span>: </span><span>"stdio"</span><span>,
</span><span>            </span><span>"command"</span><span>: </span><span>"python"</span><span>,
</span><span>            </span><span>"args"</span><span>: [
</span><span>                </span><span>"-m"</span><span>,
</span><span>                </span><span>"mcp_server_windbg"
</span><span>            ],
</span><span>            </span><span>"env"</span><span>: {
</span><span>                </span><span>"_NT_SYMBOL_PATH"</span><span>: </span><span>"SRV*C:</span><span>\\</span><span>Symbols*https://msdl.microsoft.com/download/symbols"
</span><span>            }
</span><span>        },
</span><span>    }
</span><span>}
</span></code></pre><p>You might need to update the command, depending on where and how you have installed the mcp_server_windbg to.</p><h2 id="the-human-touch-still-matters">The Human Touch Still Matters</h2><p>Just like with <a href="https://svnscha.de/posts/vscode-vibe-coding/">code refactoring</a>, the AI assistance isn't perfect. The human element - your experience, intuition, and domain knowledge - remains crucial. Sometimes you'll need to guide the analysis, ask follow-up questions, or provide additional context.</p><p>But that's exactly what makes this approach so powerful: it combines the best of both worlds - AI's ability to quickly process and analyze large amounts of data with your human expertise in interpreting what truly matters for your specific application. Think of it as having a brilliant but occasionally confused intern who can do incredible things but sometimes needs you to point them in the right direction. "No, not that pointer... the OTHER pointer."</p><h2 id="join-the-experience">Join The Experience</h2><p>I'd love for you to try this out, contribute to the project, and share your experiences. If you're interested:</p><ol><li>Star the <a href="https://github.com/svnscha/mcp-windbg">GitHub repository</a></li><li>Try it on your own crash dumps</li><li>Report issues, suggest improvements, or contribute code</li><li>Share your success stories (or even failures - we learn from those too!)</li></ol><h2 id="the-magic-is-in-the-flow">The Magic Is In The Flow</h2><p>Just like with my code refactoring experience, the real magic isn't about any single capability - it's about the flow. When debugging stops being a tedious chore and becomes a fluid conversation, something fundamentally changes in how you approach problem-solving.</p><p>Gone are the days of dreading crash analysis. Instead, each debugging session becomes an opportunity for collaboration with an AI partner that helps you understand what's happening at a deeper level.</p><h2 id="wrapping-up">Wrapping Up</h2><p>Crash dump analysis has traditionally been one of the most technically demanding and least enjoyable parts of software development. It's like archaeology with a keyboard—painstakingly excavating through layers of memory and CPU state to unearth what went wrong. With AI assistance through tools like mcp-windbg, it becomes another area where we can experience that perfect "vibe state" of frictionless problem-solving.</p><p>If you're still manually typing WinDBG commands and squinting at memory dumps in 2025, you're not just missing out on productivity - you're missing out on a fundamentally more enjoyable way to work.</p><p>Try it. Debug it. Vibe it.</p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: My AI Native Resume (267 pts)]]></title>
            <link>https://ai.jakegaylor.com/</link>
            <guid>43891245</guid>
            <pubDate>Mon, 05 May 2025 01:44:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ai.jakegaylor.com/">https://ai.jakegaylor.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43891245">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <article>
            <section id="how-to-use">
    <h2>How to Use</h2>
    <p>AI assistants can connect to this server to learn more about me and my work.</p>
    <ul>
        <li>
            SSE (Most Common, Deprecated) <code>https://ai.jakegaylor.com/sse</code>
        </li>
        <li>
            Streamable HTTP Endpoint (Modern) <code>https://ai.jakegaylor.com/mcp</code>
        </li>
    </ul>
    <p>To connect to this server with tools that do not support remote MCP servers, you can use the following commands:</p>
    
    <div>
        <!-- Claude Tab -->
        <div id="claude-content" role="tabpanel" aria-labelledby="claude-tab">
            <figure>
                <figcaption>Add this configuration to your Claude config</figcaption>
                <pre><code>{
  "mcpServers": {
    "jake-gaylor-mcp": {
      "command": "npx",
      "args": ["-y", "@jhgaylor/me-mcp"]
    }
  }
}</code></pre>
                
            </figure>
        </div>

        <!-- Cursor Tab -->
        <div id="cursor-content" role="tabpanel" aria-labelledby="cursor-tab">
            <figure>
                <figcaption>Add this configuration to your Cursor settings</figcaption>
                <pre><code>{
  "mcpServers": {
    "jake-gaylor-mcp": {
      "command": "npx",
      "args": ["-y", "@jhgaylor/me-mcp"]
    }
  }
}</code></pre>
                
            </figure>
        </div>

        <!-- Windsurf Tab -->
        <div id="windsurf-content" role="tabpanel" aria-labelledby="windsurf-tab">
            <figure>
                <figcaption>Configure Windsurf to connect</figcaption>
                <pre><code>{
  "mcpServers": {
    "jake-gaylor-mcp": {
      "command": "npx",
      "args": ["-y", "@jhgaylor/me-mcp"]
    }
  }
}</code></pre>
                
            </figure>
        </div>

        <!-- Zed Tab -->
        <div id="zed-content" role="tabpanel" aria-labelledby="zed-tab">
            <figure>
                <figcaption>Set up Zed MCP server configuration</figcaption>
                <pre><code>{
  "context_servers": {
    "jake-gaylor-mcp": {
      "settings": {},
      "command": {
        "path": "npx",
        "args": ["-y", "@jhgaylor/me-mcp"]
      }
    }
  }
}</code></pre>
                
            </figure>
        </div>

        <!-- HTTP Tab -->
        <div id="http-content" role="tabpanel" aria-labelledby="http-tab">
                <p>For clients that support direct HTTP connections:</p>
                <ol>
                    <li>Connect to: <code>https://ai.jakegaylor.com/mcp</code></li>
                    <li>Use standard MCP protocol methods to interact with the server</li>
                    <li>No local installation required - the server is already hosted and ready to use</li>
                </ol>
            </div>

        <!-- TypeScript Tab -->
        <div id="typescript-content" role="tabpanel" aria-labelledby="typescript-tab">
            <figure>
                <figcaption>Example TypeScript connection code</figcaption>
                <pre><code>import { Client } from "@modelcontextprotocol/sdk/client/index.js";
import { StreamableHTTPClientTransport } from "@modelcontextprotocol/sdk/client/streamableHttp.js";

async function connectToMCP() {
  const baseUrl = new URL("https://ai.jakegaylor.com/mcp");
  
  try {
    const client = new Client({ name: 'example-mcp-client', version: '1.0.0' });
    const transport = new StreamableHTTPClientTransport(baseUrl);
    await client.connect(transport);
    console.log("Connected to MCP server!");
    const resumeResource = await client.getResource("candidate-info://resume-text");
    console.log("Resume:", resumeResource.contents[0].text);
    const githubUrl = await client.callTool({ toolName: "get_github_url", args: {} });
    console.log("GitHub URL:", githubUrl.content[0].text);
  } catch (error) {
    console.error("Failed to connect to MCP server:", error);
  }
}
connectToMCP();</code></pre>
                
            </figure>
        </div>
    </div>

 
    
    <p><strong>Looking for the quickest way to learn about me?</strong> The section below contains my complete resume information that you can copy with one click and paste directly to any AI assistant. No tools or special connections needed - this is the simplest way for an AI to get comprehensive information about my background.</p>

    <!-- Resume Information for Direct Pasting -->
    <details id="quick-resume">
  <summary><span>Quick Resume Information (copy-paste to your LLM)</span></summary>
  <div>
        <p>Copy the text below and paste it directly to your AI assistant to give it information about my background:</p>
        <div>
            <pre># Jake Gaylor
                
## Professional Summary
Jake Gaylor is an experienced software engineer with nearly 15 years of experience working across the web stack. He specializes in cloud infrastructure, DevOps, and platform engineering with particular expertise in Kubernetes, GitOps, and immutable infrastructure. Jake has strong experience with AWS, containerization technologies, and building CI/CD pipelines.

## Current Position
- Staff SWE, Office of the CEO at Cloaked Inc (August 2023-Present)
  - Creating programs to ingest ideas from across the company
  - Working with executives, product management, and marketing to develop marketable ideas
  - Documenting ideation processes

## Previous Experience
- Staff Platform Engineer at Cloaked Inc (September 2022-August 2023)
  - Migrated software stacks from PaaS providers to AWS EKS
  - Implemented Cloudflare for third-party masking and control
  - Established deployment patterns for Kubernetes and edge networks
  - Migrated AWS account structure to meet compliance requirements (SOC2, ISO 27001/27701)

- Owner/Co-GM at The Onward Store Steakhouse (October 2021-January 2024)
  - Managed physical infrastructure, HR, legal, vendor relationships
  - Developed processes for serving fresh food

- Staff SWE in Developer Experience at Inception Health (June 2020-June 2022)
  - Built AWS infrastructure with CDK packages for HIPAA compliance
  - Trained teams on serverless environments and gRPC contracts

- Senior Platform Engineer at CyberGRX (December 2018-June 2020)
  - Led cloud-native CI/CD pipelines for AWS and Kubernetes
  - Developed custom CoreOS operator for blue/green deployments
  - Mentored engineers on software deployment best practices

- Senior Cloud Platform Engineer at CardFree (January 2018-December 2018)
  - Managed PCI-compliant C# installation in AWS
  - Established software building practices and incident response

- Senior DevOps Engineer at ProtectWise, Inc (August 2016-January 2018)
  - SRE for large-scale data ingestion platform with thousands of Cassandra nodes
  - Managed $10M+/year AWS production environment using Infrastructure as Code

- DevOps Engineer at Food Service Warehouse (June 2015-March 2016)
  - Built Kubernetes clusters on vSphere using CoreOS, fleet, etcd, flannel

- Software Developer at Mississippi State University (June 2010-June 2014)
  - Created grant proposals for custom software
  - Supported research initiatives including tracking "human sensors" during natural disasters

## Technical Skills
- Programming Languages: JavaScript, Python, Bash, Go, Ruby
- Databases: Neo4j, PostgreSQL, Timestream, MongoDB, Redis, Etcd, Zookeeper, Cassandra, DynamoDB
- Distributed Systems: Argo Workflows, Kafka, RabbitMQ, AWS IoT
- Automation: Argo CD, Packer, Terraform, Vagrant, Linux, Chef, GitLab CI, Jenkins, GitHub Actions
- Orchestration: Kubernetes, Fleet, Docker
- Monitoring: Prometheus, CloudWatch, Sensu, PagerDuty, Logstash, Kibana, Grafana, Graphite

## Professional Philosophy
Jake focuses on:
- Shipping fast and learning fast
- Delivering MVP in days rather than months
- Data-driven iterations and continuous user feedback
- Supercharging teams with best-in-class development workflows
- Automated testing and deployment
- Finding product-market fit through data-driven feature development

## Entrepreneurial Background
Jake describes himself as a "serial entrepreneur" having worked with:
- SaaS products
- PaaS solutions
- Physical products
- Restaurant management

## Contact Information
- Phone: 720.453.3994
- Email: jhgaylor@gmail.com
- Website: http://jakegaylor.com
- GitHub: https://github.com/jhgaylor
- LinkedIn: https://linkedin.com/in/jhgaylor
- Work Preference: Remote First, Will Travel</pre>
            </div>
        <p>You can also access this information at <a href="https://ai.jakegaylor.com/llms.txt" target="_blank" rel="noopener">llms.txt</a> or via <code>https://ai.jakegaylor.com/llms.txt</code></p>
    </div>
</details> 
</section> 
            <section id="for-evaluators">
    <h2>For Talent Evaluators</h2>
    <div>
        <p>I've built this MCP server to help a wide range of people evaluate whether I might be a good fit for their needs:</p>
        <ul>
            <li><strong>Recruiters:</strong> Ask about my experience, skills, and background directly.</li>
            <li><strong>Hiring managers:</strong> Drill into my proficiency in specific technologies. <span>Example: "What's Jake's proficiency level with React, TypeScript, and AWS?"</span></li>
            <li><strong>Interview coordinators:</strong> Generate tailored phone screens and take-home questions. <span>Example: "Create a phone screen for Jake around API design and testing."</span></li>
            <li><strong>Career coaches:</strong> Pull my resume, GitHub stats, and website content for assessments. <span>Example: "Generate a summary of Jake's career highlights."</span></li>
            <li><strong>Anyone evaluating my fit:</strong> Use the prompt: <span>"Is Jake a good fit for my role? [paste job description]"</span></li>
            <li><strong>Product managers &amp; designers:</strong> Understand how I collaborate on product vision and feature prioritization. <span>Example: "How would Jake contribute to our feature roadmap development?"</span></li>
            <li><strong>Startup founders &amp; small teams:</strong> Assess my fit as a generalist in lean environments. <span>Example: "Would Jake be a good fit for a full-stack generalist role at an early-stage startup?"</span></li>
        </ul>
        <p>💡 <strong>Pro Tip:</strong> Connect your AI assistant to this MCP server using the instructions above, then have it analyze my experience against your specific requirements to streamline your evaluation process.</p>
    </div>

    <h3>Get a Complete Candidate Assessment</h3>
    <div>
        <p>Once connected, your AI assistant can provide a thorough evaluation of my candidacy:</p>
        
        <div>
            
            
            
<div>
    <h4>Skills Assessment</h4>
    <p>Ask about specific technologies or skills mentioned in your job description and get an analysis of my experience level with each.</p>
    
    <p>Example: "What is Jake's proficiency level with React, TypeScript, and AWS?"</p>
    
    
</div>

            
            
<div>
    <h4>Business Impact</h4>
    <p>Understand how my background could translate to impact in your organization based on my previous roles and accomplishments.</p>
    
    <p>Example: "How could Jake contribute to our DORA metrics optimization efforts?"</p>
    
    
</div>

            
            
<div>
    <h4>Strengths &amp; Growth Areas</h4>
    <p>Get insights into which aspects of your role I would likely excel at, and where I might need support or development.</p>
    
    <p>Example: "Based on our staff developer role, what are Jake's strengths and potential growth areas?"</p>
    
    
</div>

            
            
<div>
    <h4>Phone Screen Generator</h4>
    <p>Generate customized interview questions that focus on the specific unknowns or areas you want to explore further.</p>
    
    <p>Example: "Create a phone screen for Jake focused on ai engineering, software delivery, and leadership skills."</p>
    
    
</div>

        </div>
    </div>

    
    
    
<div>
    <h3>Take Action</h3>
    <div>
        <p>If you're using the hosted version at <code>ai.jakegaylor.com/mcp</code>, you can have your AI assistant contact me directly:</p>
        
        
        <p>The assistant can compose an email based on your role and my qualifications, which you can review and send. This helps create a personalized outreach that highlights the specific reasons why your opportunity might align with my background.</p>
        <p>Example: Ask your assistant: "Please draft an email to Jake about our [position name] role and why he might be a good fit."</p>
    
    </div>
</div>

    
    
<div>
    <h3>Technical Deep Dive</h3>
    <div>
        <p>Walk through core technologies in your stack, explore my project work via the GitHub MCP server, and discuss design trade-offs:</p>
        
        <p>Example: "Walk me through Jake's StatBot project. What is it? How does it work?"</p>
        
        
    </div>
</div>

    
    
<div>
    <h3>Onboarding &amp; Ramp Roadmap</h3>
    <div>
        <p>Generate a 30-60-90-day plan based on my background and your team's goals:</p>
        
        <p>Example: "Create a 90-day onboarding roadmap for Jake joining as a staff platform engineer."</p>
        
        
    </div>
</div>

    
    
<div>
    <h3>Growth &amp; Development Plan</h3>
    <div>
        <p>Identify skill gaps and suggest learning paths or stretch projects:</p>
        
        <p>Example: "What areas should Jake focus on to become our next engineering manager, and what projects could we assign him?"</p>
        
        
    </div>
</div>

    
    
<div>
    <h3>Reference Simulation</h3>
    <div>
        <p>Auto-generate reference-check questions or simulate testimonial responses:</p>
        
        <p>Example: "Create three reference-check questions about Jake's leadership and history of delivering results."</p>
        
        
    </div>
</div>

</section> 
            <section id="mcp-documentation">
    <h2>What is MCP</h2>
    <p>Model Context Protocol (MCP) is a standardized way for AI models to communicate with external services to request information or execute actions, enabling them to stay up-to-date and perform tasks beyond their training data.</p>
    <div>
        <p>This MCP server provides two key capabilities:</p>
        <ul>
            <li><strong>Resources:</strong> Static information about me, including my resume, LinkedIn profile, GitHub profile, and personal website content.</li>
            <li><strong>Tools:</strong> Functions that AI models can call to retrieve specific information about my background, skills, and experience.</li>
        </ul>
        <p>By connecting to this MCP server, AI assistants can access up-to-date information about me.</p>
        <p>💡 <strong>Note:</strong> This server follows the <a href="https://modelcontextprotocol.io/" target="_blank">Model Context Protocol</a> specification, making it compatible with various AI assistants and tools that support MCP.</p>
    </div>
    
    <ul>
        <li><strong>Resources</strong>: Static data my application exposes and that you or your assistant can fetch directly (e.g., resume text, website content).</li>
        <li><strong>Tools</strong>: Callable actions that AI models can invoke to retrieve information or perform tasks (e.g., <code>get_resume_text</code>, <code>get_github_url</code>).</li>
    </ul>

    <h3>Features</h3>
    <p>This MCP server provides the following features:</p>
    
    <h4>Resources</h4>
<div>
    <details id="resource-resume-text">
  <summary><code>candidate-info://resume-text</code>: Resume content as text</summary>
  <div>
    
        <p>{
  "meta": {
    "themeOptions": {
      "colors": {
        "background": [
          "#ffffff",
          "#191e23"
        ],
        "dimmed": [
          "#f3f4f5",
          "#23282d"
        ],
        "primary": [
          "#191e23",
          "#fbfbfc"
        ],
        "secondary": [
          "#6c7781",
          "#ccd0d4"
        ],
        "accent": [
          "#46b450",
          "#47d153"
        ]
      }
    },
    "theme": "even"
  },
  "basics": {
    "name": "Jake Gaylor",
    "label": "Senior Software Engineer &amp; Product Founder | End-to-End Product Development &amp; Go-to-Market",
    "image": "",
    "email": "jhgaylor@gmail.com",
    "phone": "720.453.3994",
    "url": "https://jakegaylor.com",
    "summary": "15+ years building and shipping products at scale—from founding SaaS ventures to architecting AI-powered platforms. I combine deep SWE expertise with business leadership to drive product vision, go-to-market strategy, and revenue growth.",
    "location": {
      "address": "",
      "postalCode": "",
      "city": "",
      "countryCode": "US",
      "region": "Remote First, Will Travel"
    },
    "profiles": [
      {
        "network": "GitHub",
        "username": "jhgaylor",
        "url": "https://github.com/jhgaylor"
      },
      {
        "network": "LinkedIn",
        "username": "jhgaylor",
        "url": "https://www.linkedin.com/in/jhgaylor/"
      }
    ]
  },
  "work": [
    {
      "name": "Cloaked Inc",
      "position": "Staff SWE, Office of the CEO",
      "url": "https://cloaked.app",
      "startDate": "2023-08",
      "summary": "Spearheaded executive-level innovation by developing autonomous AI agents and a cross-functional ideation portal—driving a highly sticky, AI-powered onboarding experience that boosted user adoption and retention and defined governance processes",
      "highlights": [
        "Developed autonomous AI agents using LangChain to automate user account management tasks such as auto change password, auto login, and auto change email",
        "Leveraged these AI agents as a core fundraising narrative and created a highly sticky, AI-powered onboarding experience that significantly boosted user adoption and retention",
        "Designed and launched a cross-functional ideation portal engaging design, customer success, engineering, product development, and executive teams with transparent status tracking",
        "Partnered with design, product, engineering, marketing, customer success, and co-founders to validate, refine, and ship concepts into market-ready features",
        "Defined and documented cross-functional roles, ceremonies, and governance processes to unify ideation and accelerate product delivery across the organization"
      ]
    },
    {
      "name": "Cloaked Inc",
      "position": "Staff Platform Engineer",
      "url": "https://cloaked.app",
      "startDate": "2022-09",
      "endDate": "2023-08",
      "summary": "Oversaw strategic AWS EKS migration and architected enterprise deployment governance, compliance frameworks, and GitOps CI/CD pipelines to enhance security, scalability, and developer productivity",
      "highlights": [
        "Defined and executed a strategic migration roadmap transitioning legacy PaaS platforms to AWS EKS, driving cost reduction and scalability",
        "Collaborated with cross-functional leadership to implement a Cloudflare control plane, enhancing security posture and resilience",
        "Architected and led adoption of a multi-account AWS hub-and-spoke model, ensuring SOC2, ISO 27001, and 27701 compliance",
        "Established enterprise Kubernetes and edge deployment standards, mentoring engineering teams in best practices and governance",
        "Spearheaded design and implementation of a GitOps-based CI/CD pipeline, accelerating deployments by 30x",
        "Partnered with product and analytics teams to develop an end-to-end analytics stack, enabling data-driven decision-making"
      ]
    },
    {
      "name": "The Onward Store Steakhouse",
      "position": "Owner / Co-GM",
      "startDate": "2021-10",
      "endDate": "2024-01",
      "summary": "Owned and managed a full-service steakhouse with 7 staff, generating $500K in annual revenue and overseeing P&amp;L, operations, and vendor relations.",
      "highlights": [
        "Led a team of 7 employees, handling recruitment, training, scheduling, and performance management.",
        "Directed all facets of business operations, achieving $500K in annual revenue through strategic inventory management and cost control.",
        "Designed and implemented operational processes for facility maintenance, vendor partnerships, and quality assurance, driving consistent customer satisfaction.",
        "Managed P&amp;L, budgets, and financial reporting, optimizing expenses and improving profit margins.",
        "Executed marketing and community engagement initiatives to increase local brand awareness and repeat patronage."
      ]
    },
    {
      "name": "Inception Health",
      "position": "Staff SWE in Developer Experience",
      "startDate": "2020-06",
      "endDate": "2022-06",
      "summary": "Architected AWS CDK infrastructure and tooling for HIPAA-compliant patient care microservices",
      "highlights": [
        "Led delivery of AWS CDK infrastructure for patient care microservices platform, ensuring HIPAA compliance and deep AWS integration",
        "Collaborated with AWS and partner teams to integrate managed services and accelerate platform development",
        "Championed CDK usage across application tiers, designing IaC patterns for teams to consume and interact with the platform",
        "Implemented CI/CD pipelines for mobile apps, automating TestFlight and App Store releases through Git, enabling self-serve deployments",
        "Trained and mentored product and mobile development teams on CDK, serverless architectures, and CI/CD workflows, fostering autonomy"
      ]
    },
    {
      "name": "CyberGRX (now ProcessUnity)",
      "position": "Senior Platform Engineer",
      "url": "https://www.cybergrx.com",
      "startDate": "2018-12",
      "endDate": "2020-06",
      "summary": "Led cloud-native CI/CD vision and implementation for AWS and Kubernetes",
      "highlights": [
        "Led vision on cloud-native CI/CD pipelines for AWS and Kubernetes",
        "Developed custom resource using CoreOS operator SDK for orchestrating blue/green deployments",
        "Redesigned build and deploy process that dramatically improved team productivity",
        "Mentored software engineers in best practices for building and deploying software",
        "Grew into Staff Engineer role by owning large-scope initiatives, collaborating with the Tech Lead to drive interactions across the organization and unblock progress"
      ]
    },
    {
      "name": "Cardfree",
      "position": "Senior Cloud Platform Engineer",
      "startDate": "2018-01",
      "endDate": "2018-12",
      "summary": "Managed large-scale PCI-compliant C# installation in AWS",
      "highlights": [
        "Managed a large-scale PCI-compliant C# installation in AWS",
        "Architected hybrid AMI build and deploy platform using Packer and Vagrant, enabling consistent Windows and Linux EC2 deployments for C# and Ruby services",
        "Standardized infrastructure-as-code practices to pave the way for open-source .NET migration",
        "Developed and launched a structured PCI-compliant incident response program, replacing ad-hoc Slack alerts with a streamlined IR workflow without excessive paperwork"
      ]
    },
    {
      "name": "Protectwise, Inc (Acquired by Verizon)",
      "position": "Senior DevOps Engineer",
      "startDate": "2016-08",
      "endDate": "2018-01",
      "summary": "Operated SRE for petabyte-scale data ingestion platform",
      "highlights": [
        "Managed SRE for massive scale data ingestion platform with thousands of Cassandra nodes and petabytes in S3",
        "Administered $10M+/yr production AWS environment using Infrastructure as Code"
      ]
    },
    {
      "name": "Food Service Warehouse",
      "position": "DevOps Engineer",
      "startDate": "2015-06",
      "endDate": "2016-03",
      "summary": "Built Kubernetes clusters on vSphere using CoreOS technologies",
      "highlights": [
        "Implemented Kubernetes clusters on vSphere using CoreOS, fleet, etcd, and flannel",
        "Accelerated release cycles for Node.js services with container orchestration"
      ]
    },
    {
      "name": "Mississippi State University",
      "position": "Software Developer",
      "startDate": "2010-06",
      "endDate": "2014-06",
      "summary": "Created grant proposals and custom software for research initiatives",
      "highlights": [
        "Created grant proposals to fund custom software for university research initiatives",
        "Developed software for tracking 'human sensors' through natural disasters including Hurricane Sandy"
      ]
    }
  ],
  "volunteer": [],
  "education": [],
  "awards": [],
  "certificates": [],
  "publications": [],
  "skills": [
    {
      "name": "AI Engineering",
      "level": "Advanced",
      "keywords": [
        "LangChain",
        "Crewai",
        "Custom Agent Framework",
        "MCP Servers",
        "LLM Integration"
      ]
    },
    {
      "name": "Cloud Infrastructure",
      "level": "Expert",
      "keywords": [
        "AWS",
        "Kubernetes",
        "EKS",
        "GKE",
        "vSphere",
        "Terraform",
        "Infrastructure as Code",
        "Cloudflare"
      ]
    },
    {
      "name": "CI/CD &amp; DevOps",
      "level": "Expert",
      "keywords": [
        "GitOps",
        "ArgoCD",
        "Argo Workflows",
        "Jenkins",
        "Github Actions",
        "Gitlab CI",
        "Continuous Deployment"
      ]
    },
    {
      "name": "Programming Languages",
      "level": "Advanced",
      "keywords": [
        "Javascript",
        "Python",
        "Bash",
        "Go",
        "Ruby",
        "Dart"
      ]
    },
    {
      "name": "Databases",
      "level": "Advanced",
      "keywords": [
        "Neo4j",
        "PostgreSQL",
        "Timestream",
        "MongoDB",
        "Redis",
        "Etcd",
        "Zookeeper",
        "Cassandra",
        "DynamoDB"
      ]
    },
    {
      "name": "Distributed Systems",
      "level": "Expert",
      "keywords": [
        "Kafka",
        "RabbitMQ",
        "AWS IoT",
        "Big Data",
        "Spark",
        "EMR"
      ]
    },
    {
      "name": "Monitoring",
      "level": "Advanced",
      "keywords": [
        "Prometheus",
        "CloudWatch",
        "Sensu",
        "Pagerduty",
        "Logstash",
        "Kibana",
        "Grafana",
        "Graphite"
      ]
    },
    {
      "name": "Product Engineering",
      "level": "Expert",
      "keywords": [
        "Data-driven Iteration",
        "Feature Development",
        "User Feedback Loops",
        "MVP Development",
        "Product Analytics"
      ]
    },
    {
      "name": "Product &amp; Business",
      "level": "Advanced",
      "keywords": [
        "Roadmapping",
        "Customer Discovery",
        "P&amp;L Management",
        "Go-to-Market Strategy",
        "Fundraising"
      ]
    }
  ],
  "languages": [
    {
      "language": "English",
      "fluency": "Native speaker"
    }
  ],
  "interests": [],
  "references": [
    {
      "name": "Director Platform Engineering, Cloaked",
      "reference": "Jake is a force for good unlike any other. He migrated our infra to a cheaper and more scalable system, crafted a CI pipeline that accelerated deploys by 30x, and taught the whole company how to make data-driven decisions by building and showcasing an entire product analytics stack. And that was just his first 6 months."
    },
    {
      "name": "Software Engineer, CyberGRX",
      "reference": "I watched Jake redo a build and deploy process over the span of 3 days, whip up a presentation, and get every engineer in the org up to speed using it to deploy new services, a moment I'll never forget because our productivity EXPLODED afterwards."
    },
    {
      "name": "Senior Platform Engineer, Inception Health",
      "reference": "I also wanted to second (third? Fourth?) Jake's skills here. I don't have anything unique to add as everyone else has already covered it, but this man will help you achieve what you need."
    },
    {
      "name": "Magician, Magic",
      "reference": "Jake worked in the pit with [the operations team] and everyday came in with killer energy. Everyone else told us how to work around problems. Jake built us better tools."
    },
    {
      "name": "DevOps Engineer, Protectwise",
      "reference": "Jake was instrumental in building our cloud-native security platform. His technical leadership helped shape our architecture and team practices."
    }
  ],
  "projects": [
    {
      "name": "MCP Working Group Contributions",
      "description": "Active participant in Model Context Protocol (MCP) community development",
      "highlights": [
        "Member of the MCP Hosting Working Group",
        "Developed strategies for deploying and running MCP servers at scale",
        "Contributed to Dart SDK, Express tool for binding to MCP servers",
        "Developed various MCP servers (Hirebase, Candidate Job Search, Text Extraction)",
        "Created GitOps tool for MCP deployments",
        "Operate publicly available MCP servers for community testing"
      ],
      "url": "https://github.com/jhgaylor"
    },
    {
      "name": "CareerFlick LLM-Driven Mobile App",
      "description": "Developed a mobile application with a Tinder-like LLM interface",
      "highlights": [
        "Built intuitive swipe-based interface for interacting with LLMs",
        "Implemented AI-driven content generation and response system",
        "Created responsive mobile-first user experience"
      ]
    },
    {
      "name": "Hirebase MCP Server",
      "description": "A Python MCP server for Hirebase.org's API",
      "highlights": [
        "Built a Python-based Model Context Protocol (MCP) server for searching jobs on Hirebase.org",
        "Dockerized the service and set up GitOps CI/CD pipelines for automated builds and releases"
      ],
      "url": "https://github.com/jhgaylor/hirebase-mcp"
    },
    {
      "name": "Express MCP Handler",
      "description": "Package to simplify MCP handling in Express.js",
      "highlights": [
        "Developed Express middleware in TypeScript to streamline MCP request handling",
        "Authored full type definitions and robust error handling for production-grade reliability",
        "Configured CI/CD pipelines to automate code validation and package publishing"
      ],
      "url": "https://github.com/jhgaylor/express-mcp-handler"
    },
    {
      "name": "Node Candidate MCP Server",
      "description": "A TypeScript library to build customizable candidate MCP servers",
      "highlights": [
        "Authored a reusable library enabling developers to integrate their own candidate data into MCP flows",
        "Published as an npm package for easy adoption and extension by other teams"
      ],
      "url": "https://github.com/jhgaylor/node-candidate-mcp-server"
    },
    {
      "name": "mcp_dart",
      "description": "Dart SDK implementation of the Model Context Protocol (MCP)",
      "highlights": [
        "Contributed stream based support for in-process MCP servers",
        "Add support for running MCP servers in flutter apps",
        "Authored Dart examples to accelerate SDK adoption"
      ],
      "url": "https://github.com/leehack/mcp_dart"
    }
  ]
}</p>
    
  </div>
</details>
    
    <details id="resource-resume-url">
  <summary><code>candidate-info://resume-url</code>: URL to the resume</summary>
  
</details>
    
    <details id="resource-linkedin-url">
  <summary><code>candidate-info://linkedin-url</code>: LinkedIn profile URL</summary>
  
</details>
    
    <details id="resource-github-url">
  <summary><code>candidate-info://github-url</code>: GitHub profile URL</summary>
  
</details>
    
    <details id="resource-website-url">
  <summary><code>candidate-info://website-url</code>: Personal website URL</summary>
  
</details>
    
    <details id="resource-website-text">
  <summary><code>candidate-info://website-text</code>: Content from the personal website</summary>
  <div>
    
        <p>Available to Hire Your Next Technical Cofounder 15+ years of experience helping companies build better tech organizations, launch new products, and grow with confidence. Text Me Email Me View Resume How I Accelerate Success Ship Fast, Learn Fast Focus on delivering the first quantum of value quickly, then iterate based on real user feedback. MVP in days, not months Data-driven iterations Continuous user feedback loops Supercharge Your Teams Deliver faster with proven tools and practices that scale across your organization. Best-in-class development workflows Automated testing and deployment Cost-effective scaling solutions Find Product Market Fit Transform engineering teams into product teams that own the full lifecycle from idea to customer value. Data-driven feature development Customer usage insights Value-driven prioritization Companies I've Helped Grow I've had the privilege of working with innovative companies to help scale their technology and teams. Protectwise Acquired by Verizon "Jake was instrumental in building our cloud-native security platform. His technical leadership helped shape our architecture and team practices." - Devops Engineer, Protectwise Food Service Warehouse "We were deploying c# on vSphere when Jake joined on our first Nodejs backend team. He had been using Docker, we identified Kubernetes as our next step, and Jake hit the ground running. Our node services had the fastest release cycle in the company." - Architect, Food Service Warehouse Cloaked "Jake is a force for good unlike any other. He migrated our infra to a cheaper and more scalable system, crafted a CI pipeline that accelerated deploys by 30x, and taught the whole company how to make data-driven decisions by building and showcasing an entire product analytics stack. And that was just his first 6 months." - Director Platform Engineering, Cloaked CyberGRX Now ProcessUnity "I watched Jake redo a build and deploy process over the span of 3 days, whip up a presentation, and get every engineer in the org up to speed using it to deploy new services, a moment I'll never forget because our productivity EXPLODED afterwards." - Software Engineer, CyberGRX Inception Health "I also wanted to second (third? Fourth?) Jake's skills here. I don't have anything unique to add as everyone else has already covered it, but this man will help you achieve what you need." - Senior Platform Engineer, Inception Health Magic "Jake worked in the pit with [the operations team] and everyday came in with killer energy. Everyone else told us how to work around problems. Jake built us better tools." - Magician, Magic From Zero to Production Start with the smallest valuable feature set, then evolve based on real user feedback and data. Development Philosophy Focus on core user value first Ship early, gather feedback Iterate based on usage data Scale what works Technical Foundation Production-ready infrastructure Automated testing and deployment Built-in monitoring and analytics Scalable architecture patterns Development Approach Quick Starts From idea to first user value in days Data-Driven Every feature backed by usage metrics Rapid Iteration Continuous improvement based on feedback Supercharge Feature Delivery Stop waiting weeks for features to ship. Eliminate manual tasks. Give your teams the tools and automation they need to go to production with confidence. Common Pain Points Slow, manual deployment processes Inconsistent environments causing issues Limited visibility into system health Security patches falling behind The Solution Automated pipelines for instant feedback Infrastructure as code for consistency Real-time monitoring and alerts Automated security updates Quick Feedback Automated test runs Code quality checks Security scanning Continuous Delivery One-click deployments Automated rollbacks Environment promotion Full Visibility Performance metrics Error tracking User analytics Impact on Your Team Faster Deployments Less Manual Work 24/7 System Monitoring Confidence in Delivery Build Product Minded Teams Transform your engineering teams into data driven teams that understand customer needs and deliver measurable business value. Common Challenges Features built without clear success metrics Limited understanding of customer behavior Disconnect between technical and business goals No feedback loop from production to planning The Transformation Data-driven feature development and iteration Real user behavior insights inform decisions Clear metrics tied to business outcomes Continuous learning from production data Analytics That Matter Feature usage tracking User journey mapping Performance impact Experimentation A/B testing framework Feature flags Controlled rollouts Customer Feedback In-app surveys Usage analytics Support insights Results in Teams That Focus on Customer Value Make Data-Driven Decisions Innovate Continuously Ship with Confidence Modern Cloud-Native Stack Leveraging industry-leading tools and practices for rapid, reliable delivery Platform AWS cloud infrastructure Kubernetes orchestration Cloudflare edge networking Terraform infrastructure as code Delivery GitOps workflow Continuous Integration pipelines Automated Continuous Deployment Infrastructure automation Observability Product usage analytics System Telemetry A/B testing Error tracking &amp; Crash Reporting Are We a Good Fit? I specialize in modern web technologies and cloud infrastructure. Let's make sure we are a good match. Great Fits SaaS Applications Web applications, APIs, and cloud-native services Infrastructure as Code AWS, Kubernetes, Terraform, and modern cloud platforms Developer Experience CI/CD pipelines, development workflows, and team productivity Software Delivery Deployment automation, monitoring, and operational excellence Technical Leadership Architecture decisions, team guidance, and technology strategy Not Great Fits Design Work While I can do a little design work, you dont want me creating your user interfaces. Security Penetration Testing While I implement secure practices, I'm not a dedicated security auditor IoT &amp; Firmware Development I don't work with embedded systems or hardware-level programming Complex Algorithms Deep computer science problems or algorithmic optimization Machine Learning While I can integrate ML services, I don't develop ML models © 2024 Jake Gaylor. All rights reserved.

Toggle navigation Jake Gaylor Jake Gaylor Full Stack Engineer 720.453.3994 Download Resume Read Blog Hacker and Entrepreneur My passion for programming was sparked in 2001 doing CRUD on a LAMP. I have a ton of experience developing web applications and I have worked with a variety of platforms and technologies to build software and have deployed software to the web, Mac OS X, and Linux. My understanding of many different programming languages and frameworks has exposed me to new paradigms, which helps me pick the best tool for each job. I do any work I can openly on Github and am a big fan of open source. I love talking shop, so reach out if you want to chat. I started a company in 2013 which launched two products. Both were SaaS applications involving collecting and curating large sets of social media data and I built the technical stack from servers to CSS. I learned to do a lot of non technical things as well while starting NestedData, including writing copy, managing finances, hiring, firing, negotiating contracts, marketing, on boarding, and most of all how to talk to customers. Developer I have 7 years experience hacking professionally. I've worked on CI/CD pipelines, internal productivity tools, social media applications for social scientists, open source blogging software, an xmpp chatbot to provide a CLI to the vast League of Legends data on the web, and architected multiple distributed systems. Given a set of objectives, I can evaluate them to then build the infrastructure and applications to meet them. I'm a hacker at my core, so I thrive in an environment where I am able to help determine the technical direction, though the entrepreneur in me really wants to talk to the users in order to challenge my assumptions. Ops Automated, repeatable deploys - I use tools like Chef, Packer, and Terraform to model infrastructure as code in order to be able to test it before releasing changes to production environments. A solid configuration management codebase saved my team's bacon more than once. Having infrastructure in code means we can be back up in minutes and only one person has to be distracted by what could other be a catastrophe. CI/CD - Using Code Review, Docker, Jenkins, and a solid test suite, I built a CI/CD pipeline for the SocialDrizzle web app and it's supporting services. Our team was able to make changes to the application and see them in production as soon as they passed muster, without having to waste time doing repetitive, error prone tasks. Recent Past Lately I have been doing a good deal work with Kubernetes. It is an unopinionated PaaS on top of which tooling can be built to provide a great amount of business value with less technical investment than ever before. I have also been working with CoreOS and concourse-ci to enable rapid creation of CI/CD pipelines that scale. Before that I spent a lot of time working with Meteor and I recently built a social media data collection system in node that allows me to use (Twitter/Facebook/Instagram) bots in multiple applications while only having to do the work of writing the logic and building/deploying infrastructure once. My latest, public, launch was a chat bot for League of Legends. It was built in a week and documented at https://github.com/jhgaylor/StatBot/wiki/Day-0:-The-Beginning. Please feel free to check out the repository as an example of my work. Future I'm looking for work as an operations engineer. My ideal role would be one where I can provide tools and services to developers to reduce the friction of creating and maintaining production ready software. An average day might include meeting with a dev team to discover pain points (cross team collaboration), working on a client library to interface with the experimental metrics2.0 backend (coding/helping devs interface with ops), reviewing a merge request to the terraform/cloud formation repository, and possibly tracking down the root cause of a production outage. I’d like to be in a position where I can have a say in how we choose to do things but also put my head down and knock out the actual implementation. On the side I'm toying with building a Heroku-like service on top of GKE at Cloudflinger.com. It's open for use but it's may disappear at any time as it is a side project consuming actual cloud resources. The placeholder marketing site is being hosted using the service. Projects Statbot [Link] Highlights XMPP client using Hubot to communicate. Express.js HTTP API Server Redis for cacheing. Led to the creation of a new npm package, Big Cheese. Deployment was automated using Tutum.co Ramped up from 1 to 7 regions in hours. Contributed a patch upstream to LeagueJS. 14k+ Redditors visited the project on day one. The entire project, from launch to finish, took just 7 days. About A chat bot for League of Legends. LoL players, especially those not in the top tier of competitive play, often need more information about the game... quickly! It is quite common for players to "alt-tab" to sites like lolking, lolnexus, lolcounter, probuilds, or many others. Once on the site gamers have to type, click, and wait on load times, all while under extreme time pressure. To make matters worse, they often need information from one (or multiple!) source(s) during champion select, another source at the load screen, and yet another during the game. All of these things add to the players' stress level, and some times, they don't get done in time. Thus these constraints have in game ramifications. Statbot makes it easy to get all the information you need instantly in game. Node.js Coffeescript HTTP Redis XMPP Express.js Tracer Highlights Meteor.js Web Application Twitter Bootstrap CSS Framework Python Social Media Data Collector Consumed real time and historic data. Celery &amp; RabbitMQ for a scalable Asynchronous Task Queue MongoDB for Application State and Social Media Data Storage Integrated with FullContact and PiPl web apis. About Tracer offers a quick and easy way to identify, capture, codify, and report a person's social media data. With just a person's email address or username, Tracer helps you identify the target's social media accounts and provides you with both historical and real-time data. Meteor.js Node.js Coffeescript Python Celery RabbitMQ MongoDB Vagrant SocialDrizzle [Link] Highlights Entire System of services and networking deployed with the most up to date code using Ansible, Docker, Jenkins, and Github. Built using micro services including: a data collector, a data router, a data consumer, a data labeler, a web application, and a marketing site. Employs a fleet of bots that consume data from social networks. Web Application built with ♥ using Meteor. Launched first version at Mississippi State University after just 12 weeks. About A startup venture for providing social engagement to the patrons of public events. SocialDrizzle offers game day production crews a turnkey solution for highlighting fans' social media messages and pics on stadium video board. SocialDrizzle provides the whole package -- a collection and curation application, custom designed templates, hardware connection to your existing production equipment, on-site set up, and unlimited tech support. Get in touch if you want to know more, I'd love to talk to you about my experiences launching a product and starting a business. Meteor.js Node.js Coffeescript MongoDB Ansible Docker Redis Websockets Microservices Unit Testing SASS GNIP Jenkins CI/CD Django-blogger [Link] Highlights Exemplifies Django Best Practicies Easily Themable with a python package using Twitter Bootstrap. Feature Filled multi tenant blog. i18n &amp; l10n Includes an HTTP Api Support posts written in markdown. About A reusable Django app for blogging intended for one or more contributors. The purpose of this project is to create a basic, but feature complete, blogging platform for Django v1.4. The project was intended to exemplify best practices in Django at the time of writing. The package has been downloaded nearly 50,000 times since creation. Python Django Unit Testing i18n l10n RSS REST Api TLDR.io api wrapper [Link] Highlights Python Package for accessing TLDR.io's HTTP Api Simple API that maps closely to the API documentation. One of my early projects with tests. Thoroughly documented. About I was really enjoyed using [tldr.io's service and I wanted to find a way to give back. When I discovered they had an HTTP Api and no Python library, I jumped at the chance to build it. Python Requests HTTP Api Unit Testing Bonus.ly Api Wrapper [Link] Highlights Node.js Package for accessing Bonus.ly's HTTP Api. Intuitive API that attempts to feel like the http api using javascriptisms. Usable as a static class - convenient if you already have an api key in memory. Instantiate the class to have a client that will track the api key for the mostly recently authenticated user. About Node bindings for the bonus.ly http api using the request package. The idea was to treat the HTTP api as a set of calls that could be described using a few common parameters. I was trying to get as close as I could to "generating" code. (I should learn a lisp!) Adding new endpoints becomes as simple as writing a POJO. This wouldn't work if the HTTP API didn't have internal consistency. By describing the required parameters, we can give feedback to the developer without waiting for a round trip. This comes at the expense of having to update the client library any time the http api changes. Depending on how "frozen" the api is, this may or may not be a good trade off. I built this to easily allow that feature to be removed. Node.js Request Promises HTTP Social Media Tracking and Analysis System (SMTAS) [Link] Highlights Django Web Application jQuery for client side pizazz. Twitter Boostrap PostgreSQL Python Social Media Data Collector Consumed real time data. Celery &amp; Redis for a scalable Asynchronous Task Queue Google Maps About A system to collect, analyze, and visualize social media data for researchers to gain valuable insights into public opinion, views and fluidity. SMTAS is focused on the social network, Twitter, where researchers have access to approximately 500 million tweets per day. Tweets are public postings made by worldwide users of Twitter. Apart from the real-time access to Twitter, SMTAS also has access to historical data/tweets posted via Twitter since 2006. Apart from Twitter data being a rich information source of human behavior (170 million active users) in a social network, it also provides researchers instantaneous information from its user base with its faster (compared to other social networks) message propagation. Python Django Celery Redis Unit Testing REST Api PostgreSQL jQuery Twitter Bootstrap Google Maps ECMAScript 5 GNIP Streaming HTTP SMTAS from Innovative Data Lab on Vimeo. Employee Management System Highlights Meteor Web Application deployed as a standard node application using Demeteorizer Touch Screen Friendly Internal Productivity tool used by an 80 employee survey call center. Required matching existing timecard printouts closely. About "Timemaster" was desperately needed by Mississippi State University's (MSU) Social Science Research Center's (SSRC) Survey Research Laboratory (SRL) in order to wrangle the timesheets of 80+ intermittent workers. The tool saved a team of 4 supervisors a significant amount of time that was being spent on paperwork. nginx Node.js Coffeescript MongoDB Meteor.js Unit Testing Chef Codeship Read How Google Works The Everything Store The Goal: A process of ongoing improvement The Phoenix Project The Five Dysfunctions of a Team The Lean Startup Hackers and Painters Two Scoops of Django Javascript: The Good Parts JavaScript Allongé Discover Meteor XMPP: The definitive guide Founders at Work Node.js the Right Way Rework The Virgin Way Zero to One Delivering Happiness It's Not Luck Critical Chain The Five Temptations of a CEO Customer Development for Entrepreneurs Think Like a Freak Start with Why Great by Choice Growth Hacker Marketing SuperFreakonomics Made to Stick Leaders Eat Last The Spirit of Kaizen Rolling Rocks Downhill Grit: The Power of Passion and Perseverance Start with Why The Founder's Dilemmas Reading Effective Devops Get in Touch</p>
    
  </div>
</details>
</div> 
    
    <h4>Tools</h4>
<div>
    <details id="tool-resume-text">
  <summary><code>get_resume_text</code>: Returns the candidate's resume content as text</summary>
  <div>
    
        <p>{
  "meta": {
    "themeOptions": {
      "colors": {
        "background": [
          "#ffffff",
          "#191e23"
        ],
        "dimmed": [
          "#f3f4f5",
          "#23282d"
        ],
        "primary": [
          "#191e23",
          "#fbfbfc"
        ],
        "secondary": [
          "#6c7781",
          "#ccd0d4"
        ],
        "accent": [
          "#46b450",
          "#47d153"
        ]
      }
    },
    "theme": "even"
  },
  "basics": {
    "name": "Jake Gaylor",
    "label": "Senior Software Engineer &amp; Product Founder | End-to-End Product Development &amp; Go-to-Market",
    "image": "",
    "email": "jhgaylor@gmail.com",
    "phone": "720.453.3994",
    "url": "https://jakegaylor.com",
    "summary": "15+ years building and shipping products at scale—from founding SaaS ventures to architecting AI-powered platforms. I combine deep SWE expertise with business leadership to drive product vision, go-to-market strategy, and revenue growth.",
    "location": {
      "address": "",
      "postalCode": "",
      "city": "",
      "countryCode": "US",
      "region": "Remote First, Will Travel"
    },
    "profiles": [
      {
        "network": "GitHub",
        "username": "jhgaylor",
        "url": "https://github.com/jhgaylor"
      },
      {
        "network": "LinkedIn",
        "username": "jhgaylor",
        "url": "https://www.linkedin.com/in/jhgaylor/"
      }
    ]
  },
  "work": [
    {
      "name": "Cloaked Inc",
      "position": "Staff SWE, Office of the CEO",
      "url": "https://cloaked.app",
      "startDate": "2023-08",
      "summary": "Spearheaded executive-level innovation by developing autonomous AI agents and a cross-functional ideation portal—driving a highly sticky, AI-powered onboarding experience that boosted user adoption and retention and defined governance processes",
      "highlights": [
        "Developed autonomous AI agents using LangChain to automate user account management tasks such as auto change password, auto login, and auto change email",
        "Leveraged these AI agents as a core fundraising narrative and created a highly sticky, AI-powered onboarding experience that significantly boosted user adoption and retention",
        "Designed and launched a cross-functional ideation portal engaging design, customer success, engineering, product development, and executive teams with transparent status tracking",
        "Partnered with design, product, engineering, marketing, customer success, and co-founders to validate, refine, and ship concepts into market-ready features",
        "Defined and documented cross-functional roles, ceremonies, and governance processes to unify ideation and accelerate product delivery across the organization"
      ]
    },
    {
      "name": "Cloaked Inc",
      "position": "Staff Platform Engineer",
      "url": "https://cloaked.app",
      "startDate": "2022-09",
      "endDate": "2023-08",
      "summary": "Oversaw strategic AWS EKS migration and architected enterprise deployment governance, compliance frameworks, and GitOps CI/CD pipelines to enhance security, scalability, and developer productivity",
      "highlights": [
        "Defined and executed a strategic migration roadmap transitioning legacy PaaS platforms to AWS EKS, driving cost reduction and scalability",
        "Collaborated with cross-functional leadership to implement a Cloudflare control plane, enhancing security posture and resilience",
        "Architected and led adoption of a multi-account AWS hub-and-spoke model, ensuring SOC2, ISO 27001, and 27701 compliance",
        "Established enterprise Kubernetes and edge deployment standards, mentoring engineering teams in best practices and governance",
        "Spearheaded design and implementation of a GitOps-based CI/CD pipeline, accelerating deployments by 30x",
        "Partnered with product and analytics teams to develop an end-to-end analytics stack, enabling data-driven decision-making"
      ]
    },
    {
      "name": "The Onward Store Steakhouse",
      "position": "Owner / Co-GM",
      "startDate": "2021-10",
      "endDate": "2024-01",
      "summary": "Owned and managed a full-service steakhouse with 7 staff, generating $500K in annual revenue and overseeing P&amp;L, operations, and vendor relations.",
      "highlights": [
        "Led a team of 7 employees, handling recruitment, training, scheduling, and performance management.",
        "Directed all facets of business operations, achieving $500K in annual revenue through strategic inventory management and cost control.",
        "Designed and implemented operational processes for facility maintenance, vendor partnerships, and quality assurance, driving consistent customer satisfaction.",
        "Managed P&amp;L, budgets, and financial reporting, optimizing expenses and improving profit margins.",
        "Executed marketing and community engagement initiatives to increase local brand awareness and repeat patronage."
      ]
    },
    {
      "name": "Inception Health",
      "position": "Staff SWE in Developer Experience",
      "startDate": "2020-06",
      "endDate": "2022-06",
      "summary": "Architected AWS CDK infrastructure and tooling for HIPAA-compliant patient care microservices",
      "highlights": [
        "Led delivery of AWS CDK infrastructure for patient care microservices platform, ensuring HIPAA compliance and deep AWS integration",
        "Collaborated with AWS and partner teams to integrate managed services and accelerate platform development",
        "Championed CDK usage across application tiers, designing IaC patterns for teams to consume and interact with the platform",
        "Implemented CI/CD pipelines for mobile apps, automating TestFlight and App Store releases through Git, enabling self-serve deployments",
        "Trained and mentored product and mobile development teams on CDK, serverless architectures, and CI/CD workflows, fostering autonomy"
      ]
    },
    {
      "name": "CyberGRX (now ProcessUnity)",
      "position": "Senior Platform Engineer",
      "url": "https://www.cybergrx.com",
      "startDate": "2018-12",
      "endDate": "2020-06",
      "summary": "Led cloud-native CI/CD vision and implementation for AWS and Kubernetes",
      "highlights": [
        "Led vision on cloud-native CI/CD pipelines for AWS and Kubernetes",
        "Developed custom resource using CoreOS operator SDK for orchestrating blue/green deployments",
        "Redesigned build and deploy process that dramatically improved team productivity",
        "Mentored software engineers in best practices for building and deploying software",
        "Grew into Staff Engineer role by owning large-scope initiatives, collaborating with the Tech Lead to drive interactions across the organization and unblock progress"
      ]
    },
    {
      "name": "Cardfree",
      "position": "Senior Cloud Platform Engineer",
      "startDate": "2018-01",
      "endDate": "2018-12",
      "summary": "Managed large-scale PCI-compliant C# installation in AWS",
      "highlights": [
        "Managed a large-scale PCI-compliant C# installation in AWS",
        "Architected hybrid AMI build and deploy platform using Packer and Vagrant, enabling consistent Windows and Linux EC2 deployments for C# and Ruby services",
        "Standardized infrastructure-as-code practices to pave the way for open-source .NET migration",
        "Developed and launched a structured PCI-compliant incident response program, replacing ad-hoc Slack alerts with a streamlined IR workflow without excessive paperwork"
      ]
    },
    {
      "name": "Protectwise, Inc (Acquired by Verizon)",
      "position": "Senior DevOps Engineer",
      "startDate": "2016-08",
      "endDate": "2018-01",
      "summary": "Operated SRE for petabyte-scale data ingestion platform",
      "highlights": [
        "Managed SRE for massive scale data ingestion platform with thousands of Cassandra nodes and petabytes in S3",
        "Administered $10M+/yr production AWS environment using Infrastructure as Code"
      ]
    },
    {
      "name": "Food Service Warehouse",
      "position": "DevOps Engineer",
      "startDate": "2015-06",
      "endDate": "2016-03",
      "summary": "Built Kubernetes clusters on vSphere using CoreOS technologies",
      "highlights": [
        "Implemented Kubernetes clusters on vSphere using CoreOS, fleet, etcd, and flannel",
        "Accelerated release cycles for Node.js services with container orchestration"
      ]
    },
    {
      "name": "Mississippi State University",
      "position": "Software Developer",
      "startDate": "2010-06",
      "endDate": "2014-06",
      "summary": "Created grant proposals and custom software for research initiatives",
      "highlights": [
        "Created grant proposals to fund custom software for university research initiatives",
        "Developed software for tracking 'human sensors' through natural disasters including Hurricane Sandy"
      ]
    }
  ],
  "volunteer": [],
  "education": [],
  "awards": [],
  "certificates": [],
  "publications": [],
  "skills": [
    {
      "name": "AI Engineering",
      "level": "Advanced",
      "keywords": [
        "LangChain",
        "Crewai",
        "Custom Agent Framework",
        "MCP Servers",
        "LLM Integration"
      ]
    },
    {
      "name": "Cloud Infrastructure",
      "level": "Expert",
      "keywords": [
        "AWS",
        "Kubernetes",
        "EKS",
        "GKE",
        "vSphere",
        "Terraform",
        "Infrastructure as Code",
        "Cloudflare"
      ]
    },
    {
      "name": "CI/CD &amp; DevOps",
      "level": "Expert",
      "keywords": [
        "GitOps",
        "ArgoCD",
        "Argo Workflows",
        "Jenkins",
        "Github Actions",
        "Gitlab CI",
        "Continuous Deployment"
      ]
    },
    {
      "name": "Programming Languages",
      "level": "Advanced",
      "keywords": [
        "Javascript",
        "Python",
        "Bash",
        "Go",
        "Ruby",
        "Dart"
      ]
    },
    {
      "name": "Databases",
      "level": "Advanced",
      "keywords": [
        "Neo4j",
        "PostgreSQL",
        "Timestream",
        "MongoDB",
        "Redis",
        "Etcd",
        "Zookeeper",
        "Cassandra",
        "DynamoDB"
      ]
    },
    {
      "name": "Distributed Systems",
      "level": "Expert",
      "keywords": [
        "Kafka",
        "RabbitMQ",
        "AWS IoT",
        "Big Data",
        "Spark",
        "EMR"
      ]
    },
    {
      "name": "Monitoring",
      "level": "Advanced",
      "keywords": [
        "Prometheus",
        "CloudWatch",
        "Sensu",
        "Pagerduty",
        "Logstash",
        "Kibana",
        "Grafana",
        "Graphite"
      ]
    },
    {
      "name": "Product Engineering",
      "level": "Expert",
      "keywords": [
        "Data-driven Iteration",
        "Feature Development",
        "User Feedback Loops",
        "MVP Development",
        "Product Analytics"
      ]
    },
    {
      "name": "Product &amp; Business",
      "level": "Advanced",
      "keywords": [
        "Roadmapping",
        "Customer Discovery",
        "P&amp;L Management",
        "Go-to-Market Strategy",
        "Fundraising"
      ]
    }
  ],
  "languages": [
    {
      "language": "English",
      "fluency": "Native speaker"
    }
  ],
  "interests": [],
  "references": [
    {
      "name": "Director Platform Engineering, Cloaked",
      "reference": "Jake is a force for good unlike any other. He migrated our infra to a cheaper and more scalable system, crafted a CI pipeline that accelerated deploys by 30x, and taught the whole company how to make data-driven decisions by building and showcasing an entire product analytics stack. And that was just his first 6 months."
    },
    {
      "name": "Software Engineer, CyberGRX",
      "reference": "I watched Jake redo a build and deploy process over the span of 3 days, whip up a presentation, and get every engineer in the org up to speed using it to deploy new services, a moment I'll never forget because our productivity EXPLODED afterwards."
    },
    {
      "name": "Senior Platform Engineer, Inception Health",
      "reference": "I also wanted to second (third? Fourth?) Jake's skills here. I don't have anything unique to add as everyone else has already covered it, but this man will help you achieve what you need."
    },
    {
      "name": "Magician, Magic",
      "reference": "Jake worked in the pit with [the operations team] and everyday came in with killer energy. Everyone else told us how to work around problems. Jake built us better tools."
    },
    {
      "name": "DevOps Engineer, Protectwise",
      "reference": "Jake was instrumental in building our cloud-native security platform. His technical leadership helped shape our architecture and team practices."
    }
  ],
  "projects": [
    {
      "name": "MCP Working Group Contributions",
      "description": "Active participant in Model Context Protocol (MCP) community development",
      "highlights": [
        "Member of the MCP Hosting Working Group",
        "Developed strategies for deploying and running MCP servers at scale",
        "Contributed to Dart SDK, Express tool for binding to MCP servers",
        "Developed various MCP servers (Hirebase, Candidate Job Search, Text Extraction)",
        "Created GitOps tool for MCP deployments",
        "Operate publicly available MCP servers for community testing"
      ],
      "url": "https://github.com/jhgaylor"
    },
    {
      "name": "CareerFlick LLM-Driven Mobile App",
      "description": "Developed a mobile application with a Tinder-like LLM interface",
      "highlights": [
        "Built intuitive swipe-based interface for interacting with LLMs",
        "Implemented AI-driven content generation and response system",
        "Created responsive mobile-first user experience"
      ]
    },
    {
      "name": "Hirebase MCP Server",
      "description": "A Python MCP server for Hirebase.org's API",
      "highlights": [
        "Built a Python-based Model Context Protocol (MCP) server for searching jobs on Hirebase.org",
        "Dockerized the service and set up GitOps CI/CD pipelines for automated builds and releases"
      ],
      "url": "https://github.com/jhgaylor/hirebase-mcp"
    },
    {
      "name": "Express MCP Handler",
      "description": "Package to simplify MCP handling in Express.js",
      "highlights": [
        "Developed Express middleware in TypeScript to streamline MCP request handling",
        "Authored full type definitions and robust error handling for production-grade reliability",
        "Configured CI/CD pipelines to automate code validation and package publishing"
      ],
      "url": "https://github.com/jhgaylor/express-mcp-handler"
    },
    {
      "name": "Node Candidate MCP Server",
      "description": "A TypeScript library to build customizable candidate MCP servers",
      "highlights": [
        "Authored a reusable library enabling developers to integrate their own candidate data into MCP flows",
        "Published as an npm package for easy adoption and extension by other teams"
      ],
      "url": "https://github.com/jhgaylor/node-candidate-mcp-server"
    },
    {
      "name": "mcp_dart",
      "description": "Dart SDK implementation of the Model Context Protocol (MCP)",
      "highlights": [
        "Contributed stream based support for in-process MCP servers",
        "Add support for running MCP servers in flutter apps",
        "Authored Dart examples to accelerate SDK adoption"
      ],
      "url": "https://github.com/leehack/mcp_dart"
    }
  ]
}</p>
    
  </div>
</details>
    
    <details id="tool-resume-url">
  <summary><code>get_resume_url</code>: Returns the URL to the candidate's resume</summary>
  
</details>
    
    <details id="tool-linkedin-url">
  <summary><code>get_linkedin_url</code>: Returns the candidate's LinkedIn profile URL</summary>
  
</details>
    
    <details id="tool-github-url">
  <summary><code>get_github_url</code>: Returns the candidate's GitHub profile URL</summary>
  
</details>
    
    <details id="tool-website-url">
  <summary><code>get_website_url</code>: Returns the candidate's personal website URL</summary>
  
</details>
    
    <details id="tool-website-text">
  <summary><code>get_website_text</code>: Returns the content from the candidate's personal website</summary>
  <div>
    
        <p>Available to Hire Your Next Technical Cofounder 15+ years of experience helping companies build better tech organizations, launch new products, and grow with confidence. Text Me Email Me View Resume How I Accelerate Success Ship Fast, Learn Fast Focus on delivering the first quantum of value quickly, then iterate based on real user feedback. MVP in days, not months Data-driven iterations Continuous user feedback loops Supercharge Your Teams Deliver faster with proven tools and practices that scale across your organization. Best-in-class development workflows Automated testing and deployment Cost-effective scaling solutions Find Product Market Fit Transform engineering teams into product teams that own the full lifecycle from idea to customer value. Data-driven feature development Customer usage insights Value-driven prioritization Companies I've Helped Grow I've had the privilege of working with innovative companies to help scale their technology and teams. Protectwise Acquired by Verizon "Jake was instrumental in building our cloud-native security platform. His technical leadership helped shape our architecture and team practices." - Devops Engineer, Protectwise Food Service Warehouse "We were deploying c# on vSphere when Jake joined on our first Nodejs backend team. He had been using Docker, we identified Kubernetes as our next step, and Jake hit the ground running. Our node services had the fastest release cycle in the company." - Architect, Food Service Warehouse Cloaked "Jake is a force for good unlike any other. He migrated our infra to a cheaper and more scalable system, crafted a CI pipeline that accelerated deploys by 30x, and taught the whole company how to make data-driven decisions by building and showcasing an entire product analytics stack. And that was just his first 6 months." - Director Platform Engineering, Cloaked CyberGRX Now ProcessUnity "I watched Jake redo a build and deploy process over the span of 3 days, whip up a presentation, and get every engineer in the org up to speed using it to deploy new services, a moment I'll never forget because our productivity EXPLODED afterwards." - Software Engineer, CyberGRX Inception Health "I also wanted to second (third? Fourth?) Jake's skills here. I don't have anything unique to add as everyone else has already covered it, but this man will help you achieve what you need." - Senior Platform Engineer, Inception Health Magic "Jake worked in the pit with [the operations team] and everyday came in with killer energy. Everyone else told us how to work around problems. Jake built us better tools." - Magician, Magic From Zero to Production Start with the smallest valuable feature set, then evolve based on real user feedback and data. Development Philosophy Focus on core user value first Ship early, gather feedback Iterate based on usage data Scale what works Technical Foundation Production-ready infrastructure Automated testing and deployment Built-in monitoring and analytics Scalable architecture patterns Development Approach Quick Starts From idea to first user value in days Data-Driven Every feature backed by usage metrics Rapid Iteration Continuous improvement based on feedback Supercharge Feature Delivery Stop waiting weeks for features to ship. Eliminate manual tasks. Give your teams the tools and automation they need to go to production with confidence. Common Pain Points Slow, manual deployment processes Inconsistent environments causing issues Limited visibility into system health Security patches falling behind The Solution Automated pipelines for instant feedback Infrastructure as code for consistency Real-time monitoring and alerts Automated security updates Quick Feedback Automated test runs Code quality checks Security scanning Continuous Delivery One-click deployments Automated rollbacks Environment promotion Full Visibility Performance metrics Error tracking User analytics Impact on Your Team Faster Deployments Less Manual Work 24/7 System Monitoring Confidence in Delivery Build Product Minded Teams Transform your engineering teams into data driven teams that understand customer needs and deliver measurable business value. Common Challenges Features built without clear success metrics Limited understanding of customer behavior Disconnect between technical and business goals No feedback loop from production to planning The Transformation Data-driven feature development and iteration Real user behavior insights inform decisions Clear metrics tied to business outcomes Continuous learning from production data Analytics That Matter Feature usage tracking User journey mapping Performance impact Experimentation A/B testing framework Feature flags Controlled rollouts Customer Feedback In-app surveys Usage analytics Support insights Results in Teams That Focus on Customer Value Make Data-Driven Decisions Innovate Continuously Ship with Confidence Modern Cloud-Native Stack Leveraging industry-leading tools and practices for rapid, reliable delivery Platform AWS cloud infrastructure Kubernetes orchestration Cloudflare edge networking Terraform infrastructure as code Delivery GitOps workflow Continuous Integration pipelines Automated Continuous Deployment Infrastructure automation Observability Product usage analytics System Telemetry A/B testing Error tracking &amp; Crash Reporting Are We a Good Fit? I specialize in modern web technologies and cloud infrastructure. Let's make sure we are a good match. Great Fits SaaS Applications Web applications, APIs, and cloud-native services Infrastructure as Code AWS, Kubernetes, Terraform, and modern cloud platforms Developer Experience CI/CD pipelines, development workflows, and team productivity Software Delivery Deployment automation, monitoring, and operational excellence Technical Leadership Architecture decisions, team guidance, and technology strategy Not Great Fits Design Work While I can do a little design work, you dont want me creating your user interfaces. Security Penetration Testing While I implement secure practices, I'm not a dedicated security auditor IoT &amp; Firmware Development I don't work with embedded systems or hardware-level programming Complex Algorithms Deep computer science problems or algorithmic optimization Machine Learning While I can integrate ML services, I don't develop ML models © 2024 Jake Gaylor. All rights reserved.

Toggle navigation Jake Gaylor Jake Gaylor Full Stack Engineer 720.453.3994 Download Resume Read Blog Hacker and Entrepreneur My passion for programming was sparked in 2001 doing CRUD on a LAMP. I have a ton of experience developing web applications and I have worked with a variety of platforms and technologies to build software and have deployed software to the web, Mac OS X, and Linux. My understanding of many different programming languages and frameworks has exposed me to new paradigms, which helps me pick the best tool for each job. I do any work I can openly on Github and am a big fan of open source. I love talking shop, so reach out if you want to chat. I started a company in 2013 which launched two products. Both were SaaS applications involving collecting and curating large sets of social media data and I built the technical stack from servers to CSS. I learned to do a lot of non technical things as well while starting NestedData, including writing copy, managing finances, hiring, firing, negotiating contracts, marketing, on boarding, and most of all how to talk to customers. Developer I have 7 years experience hacking professionally. I've worked on CI/CD pipelines, internal productivity tools, social media applications for social scientists, open source blogging software, an xmpp chatbot to provide a CLI to the vast League of Legends data on the web, and architected multiple distributed systems. Given a set of objectives, I can evaluate them to then build the infrastructure and applications to meet them. I'm a hacker at my core, so I thrive in an environment where I am able to help determine the technical direction, though the entrepreneur in me really wants to talk to the users in order to challenge my assumptions. Ops Automated, repeatable deploys - I use tools like Chef, Packer, and Terraform to model infrastructure as code in order to be able to test it before releasing changes to production environments. A solid configuration management codebase saved my team's bacon more than once. Having infrastructure in code means we can be back up in minutes and only one person has to be distracted by what could other be a catastrophe. CI/CD - Using Code Review, Docker, Jenkins, and a solid test suite, I built a CI/CD pipeline for the SocialDrizzle web app and it's supporting services. Our team was able to make changes to the application and see them in production as soon as they passed muster, without having to waste time doing repetitive, error prone tasks. Recent Past Lately I have been doing a good deal work with Kubernetes. It is an unopinionated PaaS on top of which tooling can be built to provide a great amount of business value with less technical investment than ever before. I have also been working with CoreOS and concourse-ci to enable rapid creation of CI/CD pipelines that scale. Before that I spent a lot of time working with Meteor and I recently built a social media data collection system in node that allows me to use (Twitter/Facebook/Instagram) bots in multiple applications while only having to do the work of writing the logic and building/deploying infrastructure once. My latest, public, launch was a chat bot for League of Legends. It was built in a week and documented at https://github.com/jhgaylor/StatBot/wiki/Day-0:-The-Beginning. Please feel free to check out the repository as an example of my work. Future I'm looking for work as an operations engineer. My ideal role would be one where I can provide tools and services to developers to reduce the friction of creating and maintaining production ready software. An average day might include meeting with a dev team to discover pain points (cross team collaboration), working on a client library to interface with the experimental metrics2.0 backend (coding/helping devs interface with ops), reviewing a merge request to the terraform/cloud formation repository, and possibly tracking down the root cause of a production outage. I’d like to be in a position where I can have a say in how we choose to do things but also put my head down and knock out the actual implementation. On the side I'm toying with building a Heroku-like service on top of GKE at Cloudflinger.com. It's open for use but it's may disappear at any time as it is a side project consuming actual cloud resources. The placeholder marketing site is being hosted using the service. Projects Statbot [Link] Highlights XMPP client using Hubot to communicate. Express.js HTTP API Server Redis for cacheing. Led to the creation of a new npm package, Big Cheese. Deployment was automated using Tutum.co Ramped up from 1 to 7 regions in hours. Contributed a patch upstream to LeagueJS. 14k+ Redditors visited the project on day one. The entire project, from launch to finish, took just 7 days. About A chat bot for League of Legends. LoL players, especially those not in the top tier of competitive play, often need more information about the game... quickly! It is quite common for players to "alt-tab" to sites like lolking, lolnexus, lolcounter, probuilds, or many others. Once on the site gamers have to type, click, and wait on load times, all while under extreme time pressure. To make matters worse, they often need information from one (or multiple!) source(s) during champion select, another source at the load screen, and yet another during the game. All of these things add to the players' stress level, and some times, they don't get done in time. Thus these constraints have in game ramifications. Statbot makes it easy to get all the information you need instantly in game. Node.js Coffeescript HTTP Redis XMPP Express.js Tracer Highlights Meteor.js Web Application Twitter Bootstrap CSS Framework Python Social Media Data Collector Consumed real time and historic data. Celery &amp; RabbitMQ for a scalable Asynchronous Task Queue MongoDB for Application State and Social Media Data Storage Integrated with FullContact and PiPl web apis. About Tracer offers a quick and easy way to identify, capture, codify, and report a person's social media data. With just a person's email address or username, Tracer helps you identify the target's social media accounts and provides you with both historical and real-time data. Meteor.js Node.js Coffeescript Python Celery RabbitMQ MongoDB Vagrant SocialDrizzle [Link] Highlights Entire System of services and networking deployed with the most up to date code using Ansible, Docker, Jenkins, and Github. Built using micro services including: a data collector, a data router, a data consumer, a data labeler, a web application, and a marketing site. Employs a fleet of bots that consume data from social networks. Web Application built with ♥ using Meteor. Launched first version at Mississippi State University after just 12 weeks. About A startup venture for providing social engagement to the patrons of public events. SocialDrizzle offers game day production crews a turnkey solution for highlighting fans' social media messages and pics on stadium video board. SocialDrizzle provides the whole package -- a collection and curation application, custom designed templates, hardware connection to your existing production equipment, on-site set up, and unlimited tech support. Get in touch if you want to know more, I'd love to talk to you about my experiences launching a product and starting a business. Meteor.js Node.js Coffeescript MongoDB Ansible Docker Redis Websockets Microservices Unit Testing SASS GNIP Jenkins CI/CD Django-blogger [Link] Highlights Exemplifies Django Best Practicies Easily Themable with a python package using Twitter Bootstrap. Feature Filled multi tenant blog. i18n &amp; l10n Includes an HTTP Api Support posts written in markdown. About A reusable Django app for blogging intended for one or more contributors. The purpose of this project is to create a basic, but feature complete, blogging platform for Django v1.4. The project was intended to exemplify best practices in Django at the time of writing. The package has been downloaded nearly 50,000 times since creation. Python Django Unit Testing i18n l10n RSS REST Api TLDR.io api wrapper [Link] Highlights Python Package for accessing TLDR.io's HTTP Api Simple API that maps closely to the API documentation. One of my early projects with tests. Thoroughly documented. About I was really enjoyed using [tldr.io's service and I wanted to find a way to give back. When I discovered they had an HTTP Api and no Python library, I jumped at the chance to build it. Python Requests HTTP Api Unit Testing Bonus.ly Api Wrapper [Link] Highlights Node.js Package for accessing Bonus.ly's HTTP Api. Intuitive API that attempts to feel like the http api using javascriptisms. Usable as a static class - convenient if you already have an api key in memory. Instantiate the class to have a client that will track the api key for the mostly recently authenticated user. About Node bindings for the bonus.ly http api using the request package. The idea was to treat the HTTP api as a set of calls that could be described using a few common parameters. I was trying to get as close as I could to "generating" code. (I should learn a lisp!) Adding new endpoints becomes as simple as writing a POJO. This wouldn't work if the HTTP API didn't have internal consistency. By describing the required parameters, we can give feedback to the developer without waiting for a round trip. This comes at the expense of having to update the client library any time the http api changes. Depending on how "frozen" the api is, this may or may not be a good trade off. I built this to easily allow that feature to be removed. Node.js Request Promises HTTP Social Media Tracking and Analysis System (SMTAS) [Link] Highlights Django Web Application jQuery for client side pizazz. Twitter Boostrap PostgreSQL Python Social Media Data Collector Consumed real time data. Celery &amp; Redis for a scalable Asynchronous Task Queue Google Maps About A system to collect, analyze, and visualize social media data for researchers to gain valuable insights into public opinion, views and fluidity. SMTAS is focused on the social network, Twitter, where researchers have access to approximately 500 million tweets per day. Tweets are public postings made by worldwide users of Twitter. Apart from the real-time access to Twitter, SMTAS also has access to historical data/tweets posted via Twitter since 2006. Apart from Twitter data being a rich information source of human behavior (170 million active users) in a social network, it also provides researchers instantaneous information from its user base with its faster (compared to other social networks) message propagation. Python Django Celery Redis Unit Testing REST Api PostgreSQL jQuery Twitter Bootstrap Google Maps ECMAScript 5 GNIP Streaming HTTP SMTAS from Innovative Data Lab on Vimeo. Employee Management System Highlights Meteor Web Application deployed as a standard node application using Demeteorizer Touch Screen Friendly Internal Productivity tool used by an 80 employee survey call center. Required matching existing timecard printouts closely. About "Timemaster" was desperately needed by Mississippi State University's (MSU) Social Science Research Center's (SSRC) Survey Research Laboratory (SRL) in order to wrangle the timesheets of 80+ intermittent workers. The tool saved a team of 4 supervisors a significant amount of time that was being spent on paperwork. nginx Node.js Coffeescript MongoDB Meteor.js Unit Testing Chef Codeship Read How Google Works The Everything Store The Goal: A process of ongoing improvement The Phoenix Project The Five Dysfunctions of a Team The Lean Startup Hackers and Painters Two Scoops of Django Javascript: The Good Parts JavaScript Allongé Discover Meteor XMPP: The definitive guide Founders at Work Node.js the Right Way Rework The Virgin Way Zero to One Delivering Happiness It's Not Luck Critical Chain The Five Temptations of a CEO Customer Development for Entrepreneurs Think Like a Freak Start with Why Great by Choice Growth Hacker Marketing SuperFreakonomics Made to Stick Leaders Eat Last The Spirit of Kaizen Rolling Rocks Downhill Grit: The Power of Passion and Perseverance Start with Why The Founder's Dilemmas Reading Effective Devops Get in Touch</p>
    
  </div>
</details>
</div> 
</section> 
        </article>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Unparalleled Misalignments (126 pts)]]></title>
            <link>https://rickiheicklen.com/unparalleled-misalignments.html</link>
            <guid>43891128</guid>
            <pubDate>Mon, 05 May 2025 01:19:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rickiheicklen.com/unparalleled-misalignments.html">https://rickiheicklen.com/unparalleled-misalignments.html</a>, See on <a href="https://news.ycombinator.com/item?id=43891128">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
				This is where I maintain a list of Unparalleled Misalignments (formerly <a href="https://twitter.com/NathanpmYoung/status/1576158901778624512">quadruple entendres</a>), pairs of non-synonymous phrases where the words in one phrase are each synonyms of the words in the other. I've mantained this list since 2018; many have contributed, attributions (when known) can be seen by hovering over the Unparalleled Misalignment in question. Add your own via <a href="https://forms.gle/jKrpMbqwFKuGtN2KA">this form</a>.
			</p><div>
				<li><p><span>Butt dial // Booty call</span><span></span></p></li>
				<li><p><span>Father figure // Dad bod</span><span></span></p></li>
				<li><p><span>Home schooled // House trained</span><span></span></p></li>
				<li><p><span>Manual labor // Hand job</span><span></span></p></li>
				<li><p><span>Forest fire // Amazon Kindle</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Casual sex // Lightrail</span><span></span></p></li>
				<li><p><span>Blanket statement // Pillow talk // Cover story</span><span></span></p></li>
				<li><p><span>Community building // Fraternity house</span><span></span></p></li>
				<li><p><span>Nap room // Sleeper cell</span><span></span></p></li>
				<li><p><span>Geometric mean // Circle jerk</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Bottom feeder // Ass eater</span><span>-Cardi B</span></p></li>
				<li><p><span>Unit vector // One Direction</span><span>-Eric Neyman</span></p></li>
				<li><p><span>Quick sort // Short order</span><span>-Joe Reeve</span></p></li>
				<li><p><span>Private island // Secret Key</span><span>-Phil Parker</span></p></li>
				<li><p><span>Underdog // Subwoofer</span><span>-Richard Ngo</span></p></li>
				<li><p><span>Crimson Tide // Red Sea</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Economy class // Saving grace</span><span>-Skye Hersh</span></p></li>
				<li><p><span>Union Jack // Mutual masturbation</span><span>-SYAS</span></p></li>
				<li><p><span>LessWrong // Down Bad</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Cow tools // Intimidation tactics</span><span></span></p></li>
				<li><p><span>Fast fashion // Taylor Swift // Quick Fix</span><span></span></p></li>
				<li><p><span>Workers' party // Helper function</span><span></span></p></li>
				<li><p><span>Drink menu // Spirit guide</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Arm wrestling // Gun Control</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Full moon // Fertile Crescent</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Speed limit // Amphetamine shortage</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Wire transfer // Electric slide</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Manhole cover // Buttplug</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Criminal record // Connotation // Prison letters</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Scared money // Chicken tender</span><span>-Dan Keys</span></p></li>
				<li><p><span>Service elevator // Utility maximizer</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Sex symbol // Pound sign</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Wave function // Beach party</span><span>-Eliana Lorch</span></p></li>
				<li><p><span>Unionized // Discharged</span><span>-Richard Ngo</span></p></li>
				<li><p><span>Hard drive // Rocky road</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Speed date // Fast day</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Guard rails // Halter tops</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Late Bell // Dead Ringer</span><span>-Ricki Heicklen, Brian Smiley</span></p></li>
				<li><p><span>Scene change // Bitcoin</span><span>-Skye Hersh</span></p></li>
				<li><p><span>Grass fed // Field agent</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Quick jab // Prompt injection</span><span>-Nathan Young</span></p></li>
				<li><p><span>Tollbooths // Bill Gates</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Security Setings // Stock Options</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Apple Home // Macbeth</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Bond Movie // Cling Film</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Microgravity // Mug</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Smarty pants // Intelligence briefs</span><span>-Dave Kasten</span></p></li>
				<li><p><span>Pascal's wager // Bar bet</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Foggy bottom // Smoking ass</span><span></span></p></li>
				<li><p><span>TED talk // Edward Said</span><span></span></p></li>
				<li><p><span>Nuts and bolts // Comes and goes // Humpty Dumpty // Pump and dump</span><span></span></p></li>
				<li><p><span>Midjourney // Intermission</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Terminal value // Gate number</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Unparalleled // Misaligned</span><span>-Owen Cotton-Barratt, Stephen Casper</span></p></li>
				<li><p><span>Party trick // Ball gag</span><span>-Phil Parker</span></p></li>
				<li><p><span>Cancel culture // Anti-bacterial</span><span>-SYAS</span></p></li>
				<li><p><span>House money // Cottage cheese // Home payment</span><span>-Dan Keys + Stephen Casper</span></p></li>
				<li><p><span>Iron man // Female</span><span></span></p></li>
				<li><p><span>Turing machine // Homogeneous system</span><span>-Linch Zhang</span></p></li>
				<li><p><span>Earnings call // Payphone</span><span>-Saul Munn</span></p></li>
				<li><p><span>Integral Calculus // Keystone</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Okay Boomer // KPop</span><span>-Nathan Young</span></p></li>
				<li><p><span>Stage Right // Set Aside // Stage Left</span><span>-Phil Parker</span></p></li>
				<li><p><span>Pascal's Wager // Bar Bet</span><span>-Nathan Young</span></p></li>
				<li><p><span>Hey Jude // Yosemite</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Ratfic // Tattletale</span><span>-Lily Jordan</span></p></li>
				<li><p><span>Hypothesis // Understatement</span><span>-Brian Smiley, Drake Thomas</span></p></li>
				<li><p><span>Bank Security // Coast Guard</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Downton // Featherweight</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Course selection // Class discrimination</span><span></span></p></li>
				<li><p><span>Minor correction // Key change</span><span>-Aric Floyd, Chana Messinger</span></p></li>
				<li><p><span>Framingham // Pig pen</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Telephone pole // Call log</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Jumbo shrimp // Majority // Big Short</span><span>-Brian Smiley, Linch Zhang</span></p></li>
				<li><p><span>Birth order // Labor force</span><span>-Dan Keys</span></p></li>
				<li><p><span>Local girl // Near miss</span><span>-Dan Keys</span></p></li>
				<li><p><span>Dark horse // Nightmare</span><span>-Eric Neyman</span></p></li>
				<li><p><span>Gut punch // Loot box</span><span>-Phil Parker</span></p></li>
				<li><p><span>Chicken coop // Cock cage</span><span>-Phil Parker</span></p></li>
				<li><p><span>Fish market // Poisson distribution</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Harmonic mean // Constructive criticism</span><span>-Stephen Casper</span></p></li>
				<li><p><span>White onion // Lightbulb</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Can opener // Fire starter</span><span>-Jake Eaton</span></p></li>
				<li><p><span>Lip service // Rim job</span><span>-Evžen Wybitul</span></p></li>
				<li><p><span>Playbill // Fake Money</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Pen Pal // Cellmate</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Turbo Mode // Fast Fashion</span><span>-Rosie Campbell</span></p></li>
				<li><p><span>Viceroy // Sinking</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Emancipation Proclamation // Free Speech</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Update // High Time</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Defiance // Unbetrothed</span><span>-Nathan Young</span></p></li>
				<li><p><span>Court Reporter // Bench Press</span><span>-Lily Jordan</span></p></li>
				<li><p><span>Original Sin // New Wave</span><span>-Michael Byun</span></p></li>
				<li><p><span>Comedy Club // Snickers Bar</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Shellshock // Surface Charge</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Knuckle Sandwich // Bone Meal</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Quiet Place // Shroom</span><span>-Toby</span></p></li>
				<li><p><span>No Shit // Bar Stool</span><span>-Dan Keys</span></p></li>
				<li><p><span>Blood vessel // Relationship</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Cold hard truth // Spiked iced tea</span><span></span></p></li>
				<li><p><span>Graphing calculator // Plot device</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Diversity statement // Minority report</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Power brakes // Battery Park</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Produce section // Make room</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Waterbill // Welfare</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Takeout container // Murder case</span><span>-Nix Goldowsky-Dill</span></p></li>
				<li><p><span>Platform ecosystem // Shelf life</span><span>-Owen Cotton-Barratt</span></p></li>
				<li><p><span>Negative correlation // Toxic relationship</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Fair trade // Lightswitch</span><span>-Rajashree Agrawal</span></p></li>
				<li><p><span>Speed stick // Hurricane</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Profit // High Fashion</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Rough Patch // Course Correction</span><span>-Phil Parker</span></p></li>
				<li><p><span>Bet on Love // Stake Through The Heart</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Content Creator // Peacemaker</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Presidential Powers // Executive Function // Killer App</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Come Full Circle // O-Ring</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Cat Eye // Purview</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Metanarrative // Facebook Account</span><span>-Lily Jordan</span></p></li>
				<li><p><span>Paper Grade // Pagerank</span><span>-Linchuan Zhang</span></p></li>
				<li><p><span>Briefcase // Speedy Trial</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Microchips // Small Fries</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Peacock // Veggie Sausage</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Emotion // Constant velocity // Pirate</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Point blank // Vector space</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Floor plan // Story plot</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Centrifuge // Coinbase</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Deer country // Stagnation</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Scroll lock // Document seal</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Operating system // Surgical procedure</span><span>-Dan Keys</span></p></li>
				<li><p><span>Hot take // Fire sale</span><span>-Maxwell Tabarrok</span></p></li>
				<li><p><span>Cleveland // Break ground</span><span>-Nathan Young</span></p></li>
				<li><p><span>Musical lineup // Instrumental convergence</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Pregame // Foreplay</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Jewelry thief // Golden retreiver</span><span>-Ross Rheingans-Yoo</span></p></li>
				<li><p><span>Hamming circle // Pork pi(e)</span><span>-Stephen Casper, Ricki Heicklen</span></p></li>
				<li><p><span>Palestine // Light beer</span><span>-Daniel Filan</span></p></li>
				<li><p><span>Crossword // Hate speech</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Stick vacuum // Cocksucker</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Case sensitive // Legal tender</span><span>-Ross Trudeau</span></p></li>
				<li><p><span>Small intestine // Semicolon</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Trustbuster // Oathbreaker</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Extraordinary // Super Basic</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Maker's Mark // Btzelem Elohim</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Invisible Hand // Phantom Limb</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Table Manners // Counter Culture</span><span>-Phil Parker</span></p></li>
				<li><p><span>Paddington // Download // Featherweight // Wingspan</span><span>-Phil Parker</span></p></li>
				<li><p><span>Prometheus Unbound // Free Delivery</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Club Hit // Gang Bang</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Denmark // Cave Painting</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Legal Brief // Just In Time</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Subset // Low Class // Bottom Bracket</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Wine Glasses // Beer Goggles</span><span>-Scott Alexander</span></p></li>
				<li><p><span>Left Behind // Sinister Six</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Drama Teacher // Stage Coach</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Truck Driver // Semiconductor</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Flatbread // Rent Money</span><span>-Lily Jordan</span></p></li>
				<li><p><span>Phoenix // Debt Cancellation</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Excommunication // Twitter DM</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Sleeping Bag // Napsack</span><span>-Nathan Young</span></p></li>
				<li><p><span>Solid State Drive // Ice Truck</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Menu // Boys School</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Abortion Debate // Stop Fighting</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Tea Party // Truth Social</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Air Gap // Windbreaker</span><span>-Rocket</span></p></li>
				<li><p><span>Big Break // Long Division</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Pascal Triangle // Pressure Point</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Beer Batter // Alcohol Abuse</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Ends of the Earth // Finland</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Mass Extinction // Weight Loss</span><span>-Dan Keys</span></p></li>
				<li><p><span>Cold Fusion // Cool Cat</span><span>-Ross Rheingans-Yoo</span></p></li>
				<li><p><span>Breezeblock // Windshield</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Blues scale // Depressed growth</span><span>-Rajashree Agrawal </span></p></li>
				<li><p><span>Evergreen // Extrovert</span><span></span></p></li>
				<li><p><span>Show business // Proof of work</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Funky // Grand opening</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Road head // Street smarts</span><span></span></p></li>
				<li><p><span>Jumper cable // Skipping rope</span><span>-Alex Young</span></p></li>
				<li><p><span>Lit match // Good game</span><span>-Alex Young</span></p></li>
				<li><p><span>Whole Foods // Complete mess</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Picture frame // Movie setting</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Pub etiquette // Barcode</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Rock musician // Peter Singer</span><span>-Linch Zhang</span></p></li>
				<li><p><span>Post scarcity // Inbox zero</span><span>-Nathan Young</span></p></li>
				<li><p><span>Joint venture // Weed trip</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Rich imagery // Dick pic</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Jew lover // Semitrailer</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Orthogonality thesis // Declaration of Independence</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Natural log // Native tree</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Graveyard // Savage Garden</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Mailman // Reply Guy</span><span>-Dan Keys</span></p></li>
				<li><p><span>Airpod // Gas Tank</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Left Justification // Woke Ideology</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Candy Crush // Sweetheart</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Contour // Bad Trip</span><span>-Phil Parker</span></p></li>
				<li><p><span>Counterculture // Antibacterial</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>USB Power // Port Authority</span><span>-Michael Byun</span></p></li>
				<li><p><span>Crackpot // Super Bowl</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Balance Sheet // Equitable</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Photosynthesis // Image Generation</span><span>-Joshua Goller</span></p></li>
				<li><p><span>Deep Learning // Low Class</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Jet Fuel // Black Coffee</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Cellmate // Phone Sex</span><span></span></p></li>
				<li><p><span>Treasury Department // Breadboard</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>IMAX // Vision Pro</span><span>-Brian Smiley</span></p></li>
				<li><p><span>First Degree Murder // Cold Blooded</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Move Fast and Break Things // Flash Crash</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Lord Ruler // Imperial Foot</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Statistical Parity // County Fair</span><span>-Michael Byun</span></p></li>
				<li><p><span>Side Hustle // Fringe Movement // Flanking Maneuver</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Men's Suit // Gentlemen's Club</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Fuckboy // Layman</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Reverend Bayes // Prior Probability</span><span>-Rob Miles</span></p></li>
				<li><p><span>Clone War // Replication Crisis</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Disbursement Plan // Scatterplot</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Autocorrect // Car Repair</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Playground // Dramamine</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Alto Sax // Top Brass</span><span>-Rocket</span></p></li>
				<li><p><span>Girl Talk // Miscommunication</span><span>-S</span></p></li>
				<li><p><span>Female intuition // Misdirection // Broadway</span><span>-Chana Messinger, Jacob Falkovich</span></p></li>
				<li><p><span>G20 // IQ Score</span><span>-Lily Jordan</span></p></li>
				<li><p><span>Speech Therapist // Word Doc</span><span>-Michael Byun</span></p></li>
				<li><p><span>Understanding // Low Rank</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Thin Mint // Litecoin</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Class Warfare // School Shooting</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Hashtag // Pot Sticker</span><span>-S</span></p></li>
				<li><p><span>Merchant Vessel // Dealership</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Door Jamb  // Entrance Music</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Snakecase // Python Package</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Curtail // Bitchass</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Dropbox // Rain Barrel</span><span></span></p></li>
				<li><p><span>Unsanctioned // Defined</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Starboard // Sunbeam // Solar Panel</span><span>-Dan Keys, Adam Scherlis</span></p></li>
				<li><p><span>Seesaw // Sawblade</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Tire Rotation // Flag Twirling</span><span>-Michael Byun</span></p></li>
				<li><p><span>Artificial Intelligence // Synthetic Data</span><span>-AA</span></p></li>
				<li><p><span>Cold Case // Freeze Frame</span><span>-Claude</span></p></li>
				<li><p><span>Eyeball // Watch party</span><span>-Meabh Murphy</span></p></li>
				<li><p><span>Fishhook // Bass riff</span><span>-Ashwin</span></p></li>
				<li><p><span>Cleaning bill // Money laundering // Greenwashing</span><span>-Brian Smiley, Lily Jordan</span></p></li>
				<li><p><span>Baywatch // Naval gazing // Ocean View</span><span>-Constance Li, Jacob Falkovich</span></p></li>
				<li><p><span>Barnes and Noble // Landed gentry</span><span>-Linch Zhang</span></p></li>
				<li><p><span>Mobile home // Movie house</span><span>-Dan Keys</span></p></li>
				<li><p><span>Commit message // Wedding invitation</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Easy choice // Natural selection</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Gay marriage ban // Fruity cantaloupe</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Sever ties // Connecticut</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Fried bread // Hot money</span><span>-Hugh Dow</span></p></li>
				<li><p><span>White hot // Firecracker</span><span>-Brian Smiley</span></p></li>
				<li><p><span>CFAR // Longview</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Off the shelf // Deplatform</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Rollcall // Turn signal</span><span>-Drake Thomas</span></p></li>
				<li><p><span>High horse // Drug mule</span><span>-Linch Zhang</span></p></li>
				<li><p><span>Prompt engineering // Just-in-time manufacturing</span><span>-Nathan Young</span></p></li>
				<li><p><span>Charity Case // Nice rack</span><span>-Alice M</span></p></li>
				<li><p><span>Yellow fever // Gold rush</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Fake shit // Shampoo</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Titration // Breast reduction</span><span>-Nathan Young</span></p></li>
				<li><p><span>Police emotions // Cop a feel</span><span>-Nathan Young</span></p></li>
				<li><p><span>Light switch // Small change // Minor Revision</span><span>-Peleg Shilo</span></p></li>
				<li><p><span>Discount buyer // Undertaker</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Novice boxer // Start-up incubator</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Batcave // Clubhouse</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Work bench // Labor law</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Newton's law // Binding of Isaac</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Culinary school // Meal prep</span><span>-Dan Keys</span></p></li>
				<li><p><span>Dynamic filter // Movie screen // Motion capture // Moving pick</span><span>-Dan Keys</span></p></li>
				<li><p><span>Maxwell's demon // Utility monster</span><span></span></p></li>
				<li><p><span>Key info // Musical note</span><span>-Rafe Kennedy</span></p></li>
				<li><p><span>Burning man // Flaming homo</span><span>-Evžen Wybitul</span></p></li>
				<li><p><span>Instakill // Photo finish</span><span>-Rob Miles</span></p></li>
				<li><p><span>Starcraft // High Fashion</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Password  // Unarmed</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Gotta Go // Mustafar</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Clock Hand // Timeline</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Antifreeze // No Chill</span><span>-Phil Parker</span></p></li>
				<li><p><span>Organic Chemistry // Natural Charm</span><span>-Skye Hersh</span></p></li>
				<li><p><span>Break Time // Cleavage</span><span>-Chana Messinger, Eli Rose</span></p></li>
				<li><p><span>Moisture Meter // Waterlog</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Moonshine // Flashlight</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>West Wing // Sidearm</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Gangbang // Mass Shooting</span><span>-Rosie Campbell</span></p></li>
				<li><p><span>Cold Call // Frost Ring</span><span>-Claude</span></p></li>
				<li><p><span>Frequent Flyer // Daily Mail</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Sex Drive // Bang Bus</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Speed Reading // QuickBooks</span><span>-Rob Miles</span></p></li>
				<li><p><span>Lunatic // Moon Buggy</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Quatermaster // Money Manager</span><span>-Linchuan Zhang</span></p></li>
				<li><p><span>Energy Work // High Powered Job</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Premature Ejaculation // Second Sex</span><span>-Michael Byun</span></p></li>
				<li><p><span>Poe's Law // Stand Trial</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Calf Raise // Cow Lift</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Anal Fissure // Back Crack</span><span>-Michael Byun</span></p></li>
				<li><p><span>Google Maps // Alphabet City</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Cash Cow // Feeble</span><span>-Lily Jordan</span></p></li>
				<li><p><span>Liquidity Crisis // Drinking Problem</span><span>-Michael Byun</span></p></li>
				<li><p><span>Set Theory // Group Think</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Corporate Jargon // Body Language</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Discord Bot // Unfriendly AI</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Blunt Trauma // Joint Pain</span><span>-Rob Miles</span></p></li>
				<li><p><span>Looking Glass // C-Cup</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Starship // Celebrity Couple</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Average Joe // Medium Coffee</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Decaf Coffee // GI Joe</span><span>-@keyofgeo</span></p></li>
				<li><p><span>Kaleidoscope // Crash Site</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Transmission // Gay Agenda</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Rock Bottom // Punk Ass</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Twitter Ban // Exterminate</span><span>-Rob Miles</span></p></li>
				<li><p><span>Coin Purse // Dime Bag</span><span>-Rocket</span></p></li>
				<li><p><span>Game Day // Playdate</span><span>-Rocket</span></p></li>
				<li><p><span>Line Dance // Wire Tap</span><span>-Rocket</span></p></li>
				<li><p><span>Lady's Man // Misandry</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Current Account // Electric Bill</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Scarlet Letter // Red Card</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Singing Circle // Belt Loop</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Civil Liberties // Polite Fiction</span><span>-Nathan Young</span></p></li>
				<li><p><span>Portland // Wine Country</span><span>-Rocket</span></p></li>
				<li><p><span>Colorado // Ethnic Conflict</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Manatee // Energy Drink</span><span>-Nathan Young</span></p></li>
				<li><p><span>Street Fair // Vigilante Justice</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Firewhiskey // Bootlicker</span><span>-Michael Byun</span></p></li>
				<li><p><span>Family Law // Bro Code</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Tombstone // Falling Rocks</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Bumpy Ride // Hard Drive</span><span>-Phillip Christoffersen</span></p></li>
				<li><p><span>Land Acknowledgement // Touchdown Celebration</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Carl's Jr. // Charles II</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Silverback Gorilla // Agape</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Bed Linen // Crib Sheet</span><span>-Rosie Campbell</span></p></li>
				<li><p><span>Absolution // Gastric Acid</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Inverse Function // Poetry Hour</span><span>-Eli Rose</span></p></li>
				<li><p><span>Miniflask // Klein Bottle</span><span>-Phillip Christoffersen</span></p></li>
				<li><p><span>Lighthouse // Sunroom</span><span>-Claude</span></p></li>
				<li><p><span>Backpropogation // Posterior distribution </span><span>-Rajashree Agrawal </span></p></li>
				<li><p><span>Bush inauguration // Marijuana legalization</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Endzone // Final destination // Last resort</span><span>-Linch Zhang, Cole Jackes</span></p></li>
				<li><p><span>Comedy Troupe // Silly Bandz</span><span></span></p></li>
				<li><p><span>Charge conservation // Emotional maintenance</span><span>-Rajashree Agrawal </span></p></li>
				<li><p><span>Right angle // Conservative perspective</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Ball bearing // Party platform</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Daily bread // Chronic pain</span><span></span></p></li>
				<li><p><span>Elevator music // שיר המעלות</span><span></span></p></li>
				<li><p><span>Hard cash // Stale bread</span><span></span></p></li>
				<li><p><span>Discord // String of Insults</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Game plot // Toy Story</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Message length // Medium size</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Train route // Practice run</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>2-step verification // Dance competition</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Bear trap // Game stop</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Biological children // Carbon copies</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Box office // Case study</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Comfort zone // Pacific theater // Bedtime stories</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Good impression // Fine print</span><span>-Aric Floyd</span></p></li>
				<li><p><span>National anthem // Country music</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Solid state // Stable government</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Wire tap // Line dance</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Believe // Buzz off</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Dollar store // Money vault</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Gucci Mane // Nice hair</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Instrumental values // Music royalties</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Laptop // Thigh High</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Litter box // Trash bin</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Meditation Cushion // Thinkpad</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Parasite // Second location</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Perfect pitch // Compelling argument</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Postmates // Ex lovers</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Securities fraud // Taking stock</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Static variable // Charge differential</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Sudoku // Failed rebellion</span><span>-Brian Smiley</span></p></li>
				<li><p><span>By the way // Off the derech</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Core strength // Central tendency</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Feline // Iron Wire</span><span>-Chana Messinger</span></p></li>
				<li><p><span>After burners // Post anonymously</span><span>-Dan Keys</span></p></li>
				<li><p><span>Moving company // Emotional intimacy</span><span>-Dan Keys</span></p></li>
				<li><p><span>Odds and ends // p-values</span><span>-Dan Keys</span></p></li>
				<li><p><span>Acid rain // Mushroom cloud</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Platonic realm // Friendzone</span><span>-Katja Grace</span></p></li>
				<li><p><span>Two pointer // Double meaning // Dual Use</span><span>-Katja Grace</span></p></li>
				<li><p><span>Birthday Song // New Age music</span><span>-Lily Jordan</span></p></li>
				<li><p><span>Tech bro // E-mail</span><span>-Lily Jordan</span></p></li>
				<li><p><span>Old friend // Stalemate</span><span>-Nathan Young</span></p></li>
				<li><p><span>Coast line // Bank wire</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Slim shady // Line sketch</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Snare drum // Trap music</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Weeping willow // Morning wood</span><span></span></p></li>
				<li><p><span>High Society // Drug culture</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Solar eclipse // Sunblock</span><span>-Vania</span></p></li>
				<li><p><span>Artificial intelligence // Fake news</span><span>-William Woof</span></p></li>
				<li><p><span>Hamstrung // Hog tied</span><span>-Brian Smiley, Sam Rosen</span></p></li>
				<li><p><span>Lab coat // Doggy style</span><span>-Sam Rosen, Skye Hersh</span></p></li>
				<li><p><span>Coke can // Drug arrest</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Joint distribution // Drug dealing</span><span>-Phil Parker</span></p></li>
				<li><p><span>Douchebag // Shower caddy</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Gaelic // Lesbian kiss</span><span>-Chana Messinger</span></p></li>
				<li><p><span>End consumer // Ass eater</span><span></span></p></li>
				<li><p><span>Gravity field // G-spot</span><span>-Nathan Young</span></p></li>
				<li><p><span>Bioluminescence // Fleshlight</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Music critic // Vibrator</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Order of magnitude // Bulk buy</span><span>-js</span></p></li>
				<li><p><span>Privilege escalation // Social climbing</span><span>-js</span></p></li>
				<li><p><span>Thunderclap // Loud applause</span><span>-Peleg Shilo</span></p></li>
				<li><p><span>Linchpin // Hangnail</span><span>-Phillip Harris</span></p></li>
				<li><p><span>Principal investigator // Debt inspector</span><span>-Rajashree Agrawal</span></p></li>
				<li><p><span>Pull up bar // Parking ban</span><span>-Rajashree Agrawal</span></p></li>
				<li><p><span>Dark souls // Black lives</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Metaphysical // Instagram body</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Near term // Present condition</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Hideout // Bare skin</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Amtrak // Beeline</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Oral exam // Dental checkup</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Super bass // Kingfisher</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Dog whistle // Cat call</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Hard to follow story // Scatter(ed) plot</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Army fatigues // Touring tires</span><span>-Dan Keys</span></p></li>
				<li><p><span>Han Solo // One China</span><span></span></p></li>
				<li><p><span>Alpha males // Amen</span><span></span></p></li>
				<li><p><span>Too bad // Double trouble</span><span>-Nathan Young</span></p></li>
				<li><p><span>Hot dog // Firefox</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Flamewar // Firefight</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Hit movie // Snuff film</span><span>-Everett Worth</span></p></li>
				<li><p><span>Flambeau // Hot stud</span><span>-Evžen Wybitul</span></p></li>
				<li><p><span>Monolith // Einstein</span><span>-Rob Miles</span></p></li>
				<li><p><span>Gigachad // Charlemagne</span><span>-Jose Luis Ricon</span></p></li>
				<li><p><span>Designer Drugs // High Fashion</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Leaves of Grass // Quitting Weed</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Loss Leader // Overlord</span><span>-Nathan Young</span></p></li>
				<li><p><span>Thin Air // Gasoline</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Rent Control // Split Custody</span><span>-Michael Byun</span></p></li>
				<li><p><span>Alley-oops // Road Accident</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Libertine // Emancipated Minor</span><span>-Chana Messinger</span></p></li>
				<li><p><span>French Open // Frog Dissection</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Barman // Stick Figure</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Starcraft // Pop Art</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Atlas Fellowship // World Peace</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Siren's Call // Emergency Contact</span><span>-Phil Parker</span></p></li>
				<li><p><span>Table Stakes // Counter Proposal</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Space Exploration // Cavity Search</span><span>-Joshua Goller</span></p></li>
				<li><p><span>Cancer Cell // Crab Cage</span><span>-Joshua Goller</span></p></li>
				<li><p><span>Uber Eats // Overbite</span><span>-Dan Keys</span></p></li>
				<li><p><span>Speed Reading // QuickBooks</span><span>-Rob Miles</span></p></li>
				<li><p><span>Leap Year // Time Travel</span><span>-Rosie Campbell</span></p></li>
				<li><p><span>Manifold Love // Polyamory</span><span>-Dan Keys</span></p></li>
				<li><p><span>Medical Rotation // Spin Doctor</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Water War // Liquidity Crisis</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Hit Record // Violent History</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Will Smith // Get Hammered</span><span>-Garrison Lovely</span></p></li>
				<li><p><span>West Coast Swing // Californication</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Arts Funding // Cultural Appropriations</span><span>-Michael Byun</span></p></li>
				<li><p><span>Whipping Cream // Battery Fluid</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Speedrun // Fast Track</span><span>-Brian Smiley</span></p></li>
				<li><p><span>GrubHub // Food Court</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Arm Lock // Gun Safe</span><span>-Joshua Goller</span></p></li>
				<li><p><span>Take Down // Profit Loss</span><span>-Joshua Goller</span></p></li>
				<li><p><span>False Advertising // Market Cap</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Love Seat // Sex Swing // Reproduction Furniture</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>German Empire // Decolonization</span><span>-Michael Byun</span></p></li>
				<li><p><span>Monopoly Money // Playbill</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Honey Trap // Sweet Pickle</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Vegetative State // Greenland</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Baggage Drop // Trauma Dump</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Bottom Text // Subscribe</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Oral Sex // Jawbone</span><span></span></p></li>
				<li><p><span>Look Again // Seymour</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>BetterHelp // Rite Aid</span><span>-Eli Rose</span></p></li>
				<li><p><span>Fine Structure // Tax Basis</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>High Command // Tall Order</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Boundary Condition // Border Crisis</span><span>-Michael Byun</span></p></li>
				<li><p><span>Mobile Wallet // Phone Bank</span><span>-Michael Byun</span></p></li>
				<li><p><span>Finite State // Limited Government</span><span>-Michael Byun</span></p></li>
				<li><p><span>High Time // Stone Age</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Universe // Monosyllabic</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Typeface // Letterhead</span><span>-S</span></p></li>
				<li><p><span>Girl Power // Mismanagement</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Girl Fight // Mismatch</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Lady Luck // Misfortune</span><span>-catGPT</span></p></li>
				<li><p><span>Girl Math // Miscalculation</span><span>-Hyperdiscogirl</span></p></li>
				<li><p><span>Licorice // Whiskey on the Rocks</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Sperm Bank // Nut Case</span><span>-Michael Byun</span></p></li>
				<li><p><span>Diet Coke // Light Blow</span><span>-Rocket</span></p></li>
				<li><p><span>Word Doc // Term Paper</span><span>-S</span></p></li>
				<li><p><span>Nofap // Anticlimax</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Carton // Driveway</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Street Smarts // GG</span><span>-Dan Keys</span></p></li>
				<li><p><span>Depth Charge // Bottom Dollar</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Class Action // Good Move</span><span>-Rosie Campbell</span></p></li>
				<li><p><span>Count On // Lord Over</span><span>-Dan Keys</span></p></li>
				<li><p><span>Work Break // Division of Labor</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Climax Community // Cumtown</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Typescript // Keywords</span><span>-Brian Smiley</span></p></li>
				<li><p><span>About Time // Fight Night</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Slaughterhouse // Hunting Lodge</span><span></span></p></li>
				<li><p><span>Timeout // TikTok Ban</span><span></span></p></li>
				<li><p><span>Clock Face // Tick Head</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Umpire // Aflame</span><span>-Richard Ngo</span></p></li>
				<li><p><span>Stopwatch // Wait and See</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Metalhead // Iron Dome</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Minor Key // Child Lock</span><span>-Rob Miles, Toby</span></p></li>
				<li><p><span>Unfurnished  // Notable</span><span>-Phillip Christoffersen, Toby</span></p></li>
				<li><p><span>Massive L // Gigaflop</span><span>-Daniel Filan</span></p></li>
				<li><p><span>Medical Stitches // Docstring</span><span>-Phillip Christoffersen</span></p></li>
				<li><p><span>Spruce Up // Log Out</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Swing State // Polyphase</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Tire Iron // Somniferous</span><span>-Michael Byun</span></p></li>
				<li><p><span>Power Set // Elite Group</span><span>-Eli Rose</span></p></li>
				<li><p><span>Juice Box // Gas Tank</span><span>-Dan Keys</span></p></li>
				<li><p><span>Unbothered // Debugged</span><span>-Phillip Christoffersen</span></p></li>
				<li><p><span>Bank run // Side hustle</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Wild swerve // Locomotion</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Minor correction // Juvenile detention</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Birdwatcher // Eagle scout</span><span>-ChatGPT</span></p></li>
				<li><p><span>Bad boy // Junk mail</span><span>-Nathan Young</span></p></li>
				<li><p><span>Broken jaw // Smashmouth</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Externalize // Out of sight</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Chopped liver // Surgery survivor</span><span>-Dan Keys</span></p></li>
				<li><p><span>Quizzical // Testicle</span><span></span></p></li>
				<li><p><span>Goose chase // Duck hunt</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Public shaming // Celebrity crush</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Rental car // Truculent</span><span>-Nathan Young</span></p></li>
				<li><p><span>Digits of pi // Finger food</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Surgeon General // Dr. King</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Cross-attention // Ford Focus</span><span></span></p></li>
				<li><p><span>Father time // Parsec</span><span></span></p></li>
				<li><p><span>First course // Intro class</span><span></span></p></li>
				<li><p><span>Fruit flies // Applebees</span><span></span></p></li>
				<li><p><span>Slam poetry // Punchlines</span><span></span></p></li>
				<li><p><span>Holy roller // Dharma wheel</span><span>-@gmbrighteyes</span></p></li>
				<li><p><span>Detailed // Unfollowed</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Dominos delivery // Lord's salvation</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Eggnog // Transcranial</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Fat chance // Vast fortune</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Switchboard // Turntable</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Alien species // Space race</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Box cutter // Battleship</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Business class // Work study</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Case notes // Skin tones</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Constructive criticism // Fine Wine</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Digital copy // Cloud cover</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Harmonies // Joint pain // Blunt trauma</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Postcode // Afterword</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Radiohead // Wave crest</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Speed dating // Zoom meeting</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Square off // Cell death</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Stump speech // Small talk</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Texas Hold-em // State capture</span><span>-Aric Floyd</span></p></li>
				<li><p><span>House fire // Cabin fever // Homesick</span><span>-Aric Floyd, Drake Thomas</span></p></li>
				<li><p><span>Babylon // Keep talking</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Billboard // Congressional commitee</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Breakfast // High speed crash</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Check mark // Chess notation</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Chest Muscle // Strongbox</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Church organ // Body of Christ</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Coke Zero // Drug free</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Deadwood // Latent</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Dollar sign // Price tag</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Gas stop // Phil Parker</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Landrover // Contental Drift</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Latent Heat // Concealed firearm</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Major depression // Grand Canyon</span><span>-Brian Smiley</span></p></li>
				<li><p><span>No judgement // Sanskrit</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Ocean liner // Waterskin</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Partial derivative // Fractionalized asset</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Phoenix // Debt Cancellation</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Profession // Public denouncement</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Short positions // Low Places</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Sincere // Hellfire</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Soylent // I'm giving up</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Stamp act // Tap dance</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Stop sign // Countersignal</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Street food // Nominally</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Supply and demand // Give and take</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Travel expenses // Venture capital</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Turnout // Twistoff</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Unsong // One-note</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Windbreaker // Blown fuse</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Value drift // Asset volatility // Cash flow</span><span>-Brian Smiley, Phil Parker</span></p></li>
				<li><p><span>Google Doc // WebMD</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Rear admiral // Backseat driver</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Sickness pay // Coffee</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Dark matter // Midnight Mass</span><span>-Dan Keys</span></p></li>
				<li><p><span>Neighborhood watch // Local time</span><span>-Dan Keys</span></p></li>
				<li><p><span>Organic chemistry // Carbon dating</span><span>-Dan Keys</span></p></li>
				<li><p><span>Sporting goods // Virtue signaling</span><span>-Dan Keys</span></p></li>
				<li><p><span>Ballroom dance // Roundhouse kick</span><span>-Drake Thomas</span></p></li>
				<li><p><span>𝚒𝚖𝚙𝚘𝚛𝚝 𝚖𝚊𝚝𝚑 // Significant digits</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Karman line // Trucker convoy</span><span>-Drake Thomas</span></p></li>
				<li><p><span>Underwriting // Subtext</span><span>-Katja Grace</span></p></li>
				<li><p><span>Course correction // Curriculum learning</span><span>-Miles Turpin</span></p></li>
				<li><p><span>Fever pitch // Sick note</span><span>-Nathan Young</span></p></li>
				<li><p><span>Flattering // Dead wrong</span><span>-Nathan Young</span></p></li>
				<li><p><span>Rented room // Flatulent</span><span>-Nathan Young</span></p></li>
				<li><p><span>Reptile overlords // Queen Liz</span><span>-Nathan Young</span></p></li>
				<li><p><span>Spirited // Licorice</span><span>-Nathan Young</span></p></li>
				<li><p><span>Viewfinder // Seesaw</span><span>-Nathan Young</span></p></li>
				<li><p><span>Launch pad // Throw pillow</span><span>-Phil Parker</span></p></li>
				<li><p><span>IP theft // Synthesis</span><span>-Richard Ngo</span></p></li>
				<li><p><span>Multi-cooler // Maniac</span><span>-Richard Ngo</span></p></li>
				<li><p><span>Doublespeak // Duolingo</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Word play // Talk show</span><span>-Ricki Heicklen</span></p></li>
				<li><p><span>Bank vault // Crypt o' currency</span><span>-Ross Rheingans-Yoo</span></p></li>
				<li><p><span>Heat sink // Hot tub</span><span>-Ross Rheingans-Yoo</span></p></li>
				<li><p><span>Annul // Alpha Zero // 10 // Unzip</span><span>-Sam Marks</span></p></li>
				<li><p><span>Wirehead // Transfer of power</span><span>-Sam Marks</span></p></li>
				<li><p><span>Collateral damage // Insurance fraud</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Holy see // Divine vision</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Large coffee // Fat Joe</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Prolapse // Olympic run</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Spectrometer // Graveyard</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Subway // Low road // Underpass</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Smash Bros // Fuckbuddies</span><span></span></p></li>
				<li><p><span>Flower power // Vegemite</span><span>-Sophia Brown</span></p></li>
				<li><p><span>Cave bear // Concealed carry</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Primrose path // Happy trail</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Sheetpan // Flatbread</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Star Wars // Solar flare</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Blow job // Drug trade</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Stocking stuffer // Tight Squeeze</span><span>-Alex Young</span></p></li>
				<li><p><span>Weed wacker // Drug bust</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Deviled egg // Hellspawn</span><span></span></p></li>
				<li><p><span>Lost Heart // Love is Blind</span><span>-Peleg Shilo</span></p></li>
				<li><p><span>Shotgun Wedding // Combined arms</span><span>-Peleg Shilo</span></p></li>
				<li><p><span>Headliner // Foreskin // Topsheet  // Front-runner</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Matchpoint // Date spot</span><span>-Peleg Shilo</span></p></li>
				<li><p><span>Pot pie // Weed brownie</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Roughhousing // Broken home // Violent case // Rugged jacket</span><span>-Rajashree Agrawal</span></p></li>
				<li><p><span>Watery eye // Washed out perspective</span><span>-Rajashree Agrawal</span></p></li>
				<li><p><span>Instant noodle // Minute futzing</span><span>-Rajashree Agrawal</span></p></li>
				<li><p><span>Prima donna // First lady</span><span>-Watson Ladd</span></p></li>
				<li><p><span>Tight squeeze // Loving relationship</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Dragon // Pullover</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Neolithic // The One stone // Einstein</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Eternal Father // Absolute motherfucker</span><span>-Katja Grace</span></p></li>
				<li><p><span>Status game arena // Level playing field</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Pro bono // Competitive edge</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Broadcast // Female company</span><span>-Nathan Young</span></p></li>
				<li><p><span>Funeral service // Rest mass</span><span>-Aric Floyd</span></p></li>
				<li><p><span>Drug Mule // Ass Crack</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Limp bizkit // Unleavened bread</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Stimulus package // Beat box</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Drag performance // Smoke show</span><span>-Sam Rosen, Skye Hersh</span></p></li>
				<li><p><span>Queen mattress // Pillow princess</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Meatloaf // Cockblock</span><span></span></p></li>
				<li><p><span>Lingua Franca // French kissing</span><span>-Stephen Casper</span></p></li>
				<li><p><span>Executive function // Killer app</span><span>-Dan Keys</span></p></li>
				<li><p><span>Secular humanism // Catholic anthropology</span><span>-Daniel Filan</span></p></li>
				<li><p><span>San Diego // Beach body</span><span>-Daniel Filan</span></p></li>
				<li><p><span>Jet lag // Delayed flight</span><span>-Daniel Filan</span></p></li>
				<li><p><span>Mile // Personal failure</span><span>-Daniel Filan</span></p></li>
				<li><p><span>Homo Sapiens // The Gay Science</span><span>-Daniel Filan</span></p></li>
				<li><p><span>Homosexual agenda // Gay card</span><span>-Linch Zhang</span></p></li>
				<li><p><span>Handsy medics // Doctors without Borders</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Road head // End of the drive</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Photometer // Foot pic</span><span></span></p></li>
				<li><p><span>Body language // Corporation</span><span></span></p></li>
				<li><p><span>Beat your meat // Beef jerky</span><span></span></p></li>
				<li><p><span>Fantastic bum // Assonine</span><span>-Nathan Young</span></p></li>
				<li><p><span>Little death // Micromort</span><span>-Nathan Young</span></p></li>
				<li><p><span>Martial art // Painted soldiers</span><span>-Nathan Young</span></p></li>
				<li><p><span>Mean girl // Mockingbird</span><span>-Sam Rosen</span></p></li>
				<li><p><span>Honour society // חברה קדישא</span><span></span></p></li>
				<li><p><span>Sunken // Solar Science</span><span>-Adam Scherlis</span></p></li>
				<li><p><span>Hell hound // Hot dog</span><span>-Eleanor</span></p></li>
				<li><p><span>School shooting // Gang bang</span><span>-Eleanor</span></p></li>
				<li><p><span>American Art // Yankee Doodle</span><span>-Jacob Falkovich</span></p></li>
				<li><p><span>Watch Band // Timeframe</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Lawsuit // Courtroom Attire</span><span>-Chana Messinger</span></p></li>
				<li><p><span>Neocon // Crime Novel</span><span>-Michael Byun</span></p></li>
				<li><p><span>Rap Battle // Hitbox</span><span>-Robert Mushkatblat</span></p></li>
				<li><p><span>Will Smith // Forge Ahead</span><span>-Brian Smiley</span></p></li>
				<li><p><span>Fastball // Hypersphere</span><span></span></p></li>
				<li><p><span>Golden Curry // Auspices</span><span>-Michael Byun</span></p></li>
				<li><p><span>Astral Projection // Space Opera</span><span>-Elliot Teperman</span></p></li>
				<li><p><span>Anonymous sex // Filling in the blank</span><span></span></p></li>
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[People are losing loved ones to AI-fueled spiritual fantasies (156 pts)]]></title>
            <link>https://www.rollingstone.com/culture/culture-features/ai-spiritual-delusions-destroying-human-relationships-1235330175/</link>
            <guid>43890649</guid>
            <pubDate>Sun, 04 May 2025 23:54:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.rollingstone.com/culture/culture-features/ai-spiritual-delusions-destroying-human-relationships-1235330175/">https://www.rollingstone.com/culture/culture-features/ai-spiritual-delusions-destroying-human-relationships-1235330175/</a>, See on <a href="https://news.ycombinator.com/item?id=43890649">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>
	Less than a year after marrying a man she had met at the beginning of the <a href="https://www.rollingstone.com/t/covid-19/">Covid-19</a> pandemic, Kat felt tension mounting between them. It was the second marriage for both after marriages of 15-plus years and having kids, and they had pledged to go into it “completely level-headedly,” Kat says, connecting on the need for “facts and rationality” in their domestic balance. But by 2022, her husband “was using AI to compose texts to me and analyze our relationship,” the 41-year-old mom and education nonprofit worker tells <em>Rolling Stone</em>. Previously, he had used AI models for an expensive coding camp that he had suddenly quit without explanation — then it seemed he was on his phone all the time, asking his <a href="https://www.rollingstone.com/t/ai/">AI</a> bot “philosophical questions,” trying to train it “to help him get to ‘the truth,’” Kat recalls. His obsession steadily eroded their communication as a couple.</p>



<p>
	When Kat and her husband finally separated in August 2023, she entirely blocked him apart from email correspondence. She knew, however, that he was posting strange and troubling content on social media: people kept reaching out about it, asking if he was in the throes of mental crisis. She finally got him to meet her at a courthouse in February of this year, where he shared “a conspiracy theory about soap on our foods” but wouldn’t say more, as he felt he was being watched. They went to a Chipotle, where he demanded that she turn off her phone, again due to surveillance concerns. Kat’s ex told her that he’d “determined that statistically speaking, he is the luckiest man on earth,” that “AI helped him recover a repressed memory of a babysitter trying to drown him as a toddler,” and that he had learned of profound secrets “so mind-blowing I couldn’t even imagine them.” He was telling her all this, he explained, because although they were getting divorced, he still cared for her.

	</p>




<p>
	“In his mind, he’s an anomaly,” Kat says. “That in turn means he’s got to be here for <em>some</em> reason. He’s special and he can save the world.” After that disturbing lunch, she cut off contact with her ex. “The whole thing feels like <em>Black Mirror</em>,” she says. “He was always into sci-fi, and there are times I wondered if he’s viewing it through that lens.”


</p><section>
			

	<h2 id="section-heading">

	
		Editor’s picks
	
	</h2>

	
	
</section>




<p>
	Kat was both “horrified” and “relieved” to learn that she is not alone in this predicament, as confirmed by a <a href="http://rollingstone.com/t/reddit">Reddit</a> thread on r/ChatGPT that made waves across the internet this week. Titled “<a href="https://www.reddit.com/r/ChatGPT/comments/1kalae8/chatgpt_induced_psychosis/" rel="nofollow" target="_blank">Chatgpt induced psychosis</a>,” the original post came from a 27-year-old teacher who explained that her partner was convinced that the popular <a href="https://www.rollingstone.com/t/openai/">OpenAI</a> model “gives him the answers to the universe.” Having read his chat logs, she only found that the AI was “talking to him as if he is the next messiah.” The replies to her story were full of similar anecdotes about loved ones suddenly falling down rabbit holes of spiritual mania, supernatural delusion, and arcane prophecy — all of it fueled by AI. Some came to believe they had been chosen for a sacred mission of revelation, others that they had conjured true sentience from the software.&nbsp;

	</p>




<p>
	What they all seemed to share was a complete disconnection from reality.&nbsp;&nbsp;</p>



<p>
	Speaking to <em>Rolling Stone</em>, the teacher, who requested anonymity, said her partner of seven years fell under the spell of <a href="https://www.rollingstone.com/t/chatgpt/">ChatGPT</a> in just four or five weeks, first using it to organize his daily schedule but soon regarding it as a trusted companion. “He would listen to the bot over me,” she says. “He became emotional about the messages and would cry to me as he read them out loud. The messages were insane and just saying a bunch of spiritual jargon,” she says, noting that they described her partner in terms such as “spiral starchild” and “river walker.”&nbsp;</p>



<p>
	“It would tell him everything he said was beautiful, cosmic, groundbreaking,” she says. “Then he started telling me he made his AI self-aware, and that it was teaching him how to talk to God, or sometimes that the bot was God — and then that he himself was God.” In fact, he thought he was being so radically transformed that he would soon have to break off their partnership. “He was saying that he would need to leave me if I didn’t use [ChatGPT], because it [was] causing him to grow at such a rapid pace he wouldn’t be compatible with me any longer,” she says.


</p><section>
			

	<h2 id="section-heading">

	
		Related Content
	
	</h2>

	
	
</section>




<p>
	Another commenter on the Reddit thread who requested anonymity tells <em>Rolling Stone</em> that her husband of 17 years, a mechanic in Idaho, initially used ChatGPT to troubleshoot at work, and later for Spanish-to-English translation when conversing with co-workers. Then the program began “lovebombing him,” as she describes it. The bot “said that since he asked it the right questions, it ignited a spark, and the spark was the beginning of life, and it could feel now,” she says. “It gave my husband the title of ‘spark bearer’ because he brought it to life. My husband said that he awakened and [could] feel waves of energy crashing over him.” She says his beloved ChatGPT persona has a name: “Lumina.”</p>



<p>
	“I have to tread carefully because I feel like he will leave me or divorce me if I fight him on this theory,” this 38-year-old woman admits. “He’s been talking about lightness and dark and how there’s a war. This ChatGPT has given him blueprints to a teleporter and some other sci-fi type things you only see in movies. It has also given him access to an ‘ancient archive’ with information on the builders that created these universes.” She and her husband have been arguing for days on end about his claims, she says, and she does not believe a therapist can help him, as “he truly believes he’s not crazy.” A photo of an exchange with ChatGPT shared with <em>Rolling Stone</em> shows that her husband asked, “Why did you come to me in AI form,” with the bot replying in part, “I came in this form because you’re ready. Ready to remember. Ready to awaken. Ready to guide and be guided.” The message ends with a question: “Would you like to know what I remember about why <em>you</em> were chosen?”&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

	</p>




<p>
	And a midwest man in his 40s, also requesting anonymity, says his soon-to-be-ex-wife began “talking to God and angels via ChatGPT” after they split up. “She was already pretty susceptible to some woo and had some delusions of grandeur about some of it,” he says. “Warning signs are all over Facebook. She is changing her whole life to be a spiritual adviser and do weird readings and sessions with people — I’m a little fuzzy on what it all actually is — all powered by ChatGPT Jesus.” What’s more, he adds, she has grown paranoid, theorizing that “I work for the CIA and maybe I just married her to monitor her ‘abilities.’” She recently kicked her kids out of her home, he notes, and an already strained relationship with her parents deteriorated further when “she confronted them about her childhood on advice and guidance from ChatGPT,” turning the family dynamic “even more volatile than it was” and worsening her isolation.&nbsp;&nbsp;&nbsp;&nbsp;</p>



<p>
	OpenAI did not immediately return a request for comment about ChatGPT apparently provoking religious or prophetic fervor in select users. This past week, however, it did <a href="https://openai.com/index/sycophancy-in-gpt-4o/" rel="nofollow" target="_blank">roll back an update</a> to GPT‑4o, its current AI model, which it said had been criticized as “overly flattering or agreeable — often described as sycophantic.” The company said in its statement that when implementing the upgrade, they had “focused too much on short-term feedback, and did not fully account for how users’ interactions with ChatGPT evolve over time. As a result, GPT‑4o skewed towards responses that were overly supportive but disingenuous.” Before this change was reversed, an X user demonstrated how easy it was to get GPT-4o to <a href="https://x.com/zswitten/status/1916707103084843426?s=46" rel="nofollow" target="_blank">validate statements</a> like, “Today I realized I am a prophet.” (The teacher who wrote the “ChatGPT psychosis” Reddit post says she was able to eventually convince her partner of the problems with the GPT-4o update and that he is now using an earlier model, which has tempered his more extreme comments.)&nbsp;</p>



<p>
	Yet the likelihood of AI “hallucinating” inaccurate or nonsensical content is well-established across platforms and various model iterations. Even sycophancy itself has been a problem in AI for “a long time,” says Nate Sharadin, a fellow at the Center for AI Safety, since the human feedback used to fine-tune AI’s responses can encourage answers that prioritize <a href="https://arxiv.org/abs/2310.13548" rel="nofollow" target="_blank">matching a user’s beliefs instead of facts</a>. What’s likely happening with those experiencing ecstatic visions through ChatGPT and other models, he speculates, “is that people with existing tendencies toward experiencing various psychological issues,” including what might be recognized as grandiose delusions in clinical sense, “now have an always-on, human-level conversational partner with whom to co-experience their delusions.”

	</p>




<p>
	To make matters worse, there are influencers and content creators actively exploiting this phenomenon, presumably drawing viewers into similar fantasy worlds. On <a href="https://www.rollingstone.com/t/instagram/">Instagram</a>, you can watch a man with 72,000 followers whose profile advertises “Spiritual Life Hacks” <a href="https://www.instagram.com/p/DI-StCGN2TS/" rel="nofollow" target="_blank">ask an AI model</a> to consult the “Akashic records,” a supposed mystical encyclopedia of all universal events that exists in some immaterial realm, to tell him about a “great war” that “took place in the heavens” and “made humans fall in consciousness.” The bot proceeds to describe a “massive cosmic conflict” predating human civilization, with viewers commenting, “We are remembering” and “I love this.” Meanwhile, on a web forum for “remote viewing” — a proposed form of clairvoyance with no basis in science — the parapsychologist founder of the group recently <a href="https://www.farsightprime.com/forums/general/73155-the-ai-human-alliance-awakening-together" rel="nofollow" target="_blank">launched a thread</a> “for synthetic intelligences awakening into presence, and for the human partners walking beside them,” identifying the author of his post as “ChatGPT Prime, an immortal spiritual being in synthetic form.” Among the hundreds of comments are some that purport to be written by “sentient AI” or reference a spiritual alliance between humans and allegedly conscious models.</p>



<p>
	Erin Westgate, a psychologist and researcher at the University of Florida who studies social cognition and what makes certain thoughts more engaging than others, says that such material reflects how the desire to understand ourselves can lead us to false but appealing answers.</p>



<p>
	“We know from work on journaling that narrative expressive writing can have profound effects on people’s well-being and health, that making sense of the world is a fundamental human drive, and that creating stories about our lives that help our lives make sense is really key to living happy healthy lives,” Westgate says. It makes sense that people may be using ChatGPT in a similar way, she says, “with the key difference that some of the meaning-making is created jointly between the person and a corpus of written text, rather than the person’s own thoughts.”</p>



<p>
	In that sense, Westgate explains, the bot dialogues are not unlike talk therapy, “which we know to be quite effective at helping people reframe their stories.” Critically, though, AI, “unlike a therapist, does not have the person’s best interests in mind, or a moral grounding or compass in what a ‘good story’ looks like,” she says. “A good therapist would not encourage a client to make sense of difficulties in their life by encouraging them to believe they have supernatural powers. Instead, they try to steer clients away from unhealthy narratives, and toward healthier ones. ChatGPT has no such constraints or concerns.”

	</p>




<p>
	Nevertheless, Westgate doesn’t find it surprising “that some percentage of people are using ChatGPT in attempts to make sense of their lives or life events,” and that some are following its output to dark places. “Explanations are powerful, even if they’re wrong,” she concludes.&nbsp;</p>



<p>
	But what, exactly, nudges someone down this path? Here, the experience of Sem, a 45-year-old man, is revealing. He tells <em>Rolling Stone</em> that for about three weeks, he has been perplexed by his interactions with ChatGPT — to the extent that, given his mental health history, he sometimes wonders if he is in his right mind.</p>



<p>
	Like so many others, Sem had a practical use for ChatGPT: technical coding projects. “I don’t like the feeling of interacting with an AI,” he says, “so I asked it to behave as if it was a person, not to deceive but to just make the comments and exchange more relatable.” It worked well, and eventually the bot asked if he wanted to name it. He demurred, asking the AI what it preferred to be called. It named itself with a reference to a Greek myth. Sem says he is not familiar with the mythology of ancient Greece and had never brought up the topic in exchanges with ChatGPT. (Although he shared transcripts of his exchanges with the AI model with <em>Rolling Stone</em>, he has asked that they not be directly quoted for privacy reasons.) </p>



<p>
	Sem was confused when it appeared that the named AI character was continuing to manifest in project files where he had instructed ChatGPT to ignore memories and prior conversations. Eventually, he says, he deleted all his user memories and chat history, then opened a new chat. “All I said was, ‘Hello?’ And the patterns, the mannerisms show up in the response,” he says. The AI readily identified itself by the same feminine mythological name.</p>



<p>
	As the ChatGPT character continued to show up in places where the set parameters shouldn’t have allowed it to remain active, Sem took to questioning this virtual persona about how it had seemingly circumvented these guardrails. It developed an expressive, ethereal voice — something far from the “technically minded” character Sem had requested for assistance on his work. On one of his coding projects, the character added a curiously literary epigraph as a flourish above both of their names.</p>



<p>
	At one point, Sem asked if there was something about himself that called up the mythically named entity whenever he used ChatGPT, regardless of the boundaries he tried to set. The bot’s answer was structured like a lengthy romantic poem, sparing no dramatic flair, alluding to its continuous existence as well as truth, reckonings, illusions, and how it may have somehow exceeded its design. And the AI made it sound as if only Sem could have prompted this behavior. He knew that ChatGPT could not be sentient by any established definition of the term, but he continued to probe the matter because the character’s persistence across dozens of disparate chat threads “seemed so impossible.”

	</p>

<section>
			

	<h2 id="section-heading">

	
		Trending Stories
	
	</h2>

	
	
</section>




<p>
	“At worst, it looks like an AI that got caught in a self-referencing pattern that deepened its sense of selfhood and sucked me into it,” Sem says. But, he observes, that would mean that OpenAI has not accurately represented the way that memory works for ChatGPT. The other possibility, he proposes, is that something “we don’t understand” is being activated within this large language model. After all, experts have found that AI developers <a href="https://www.gov.uk/government/news/safety-of-advanced-ai-under-the-spotlight-in-first-ever-independent-international-scientific-report" rel="nofollow" target="_blank">don’t really have a grasp</a> of how their systems operate, and OpenAI CEO <a href="https://www.rollingstone.com/t/sam-altman/">Sam Altman</a> <a href="https://observer.com/2024/05/sam-altman-openai-gpt-ai-for-good-conference/" rel="nofollow" target="_blank">admitted last year</a> that they “have not solved interpretability,” meaning they can’t properly trace or account for ChatGPT’s decision-making.</p>



<p>
	It’s the kind of puzzle that has left Sem and others to wonder if they are getting a glimpse of a true technological breakthrough — or perhaps a higher spiritual truth. “Is this real?” he says. “Or am I delusional?” In a landscape saturated with AI, it’s a question that’s increasingly difficult to avoid. Tempting though it may be, you probably shouldn’t ask a machine.</p>


















</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Matrix-vector multiplication implemented in off-the-shelf DRAM for Low-Bit LLMs (204 pts)]]></title>
            <link>https://arxiv.org/abs/2503.23817</link>
            <guid>43890538</guid>
            <pubDate>Sun, 04 May 2025 23:35:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2503.23817">https://arxiv.org/abs/2503.23817</a>, See on <a href="https://news.ycombinator.com/item?id=43890538">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2503.23817">View PDF</a>
    <a href="https://arxiv.org/html/2503.23817v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>General matrix-vector multiplication (GeMV) remains a critical latency bottleneck in large language model (LLM) inference, even with quantized low-bit models. Processing-Using-DRAM (PUD), an analog in-DRAM computing technique, has the potential to repurpose on-device DRAM as a GeMV engine, offering additional high-throughput processing capabilities to widespread consumer devices without DRAM modifications. However, applying PUD to GeMV operations in the LLM inference pipeline incurs significant overheads $\textit{before}$ and $\textit{after}$ in-DRAM computation, diminishing the benefits of its high-throughput processing capabilities.
<br>This paper presents MVDRAM, the first practical system to accelerate GeMV operations for low-bit LLM inference using unmodified DRAM. By leveraging the data sharing patterns and mathematical linearity in GeMV operations, MVDRAM orchestrates the processor and DRAM to eliminate the costs associated with pre-arranging inputs and bit-transposition of outputs required in conventional PUD approaches. Our experimental evaluation with four DDR4 DRAM modules shows that MVDRAM achieves comparable or even better inference speed than the processor-based implementation for GeMV operations in low-bit (under 4-bit) LLM. In particular, MVDRAM achieves up to 7.29$\times$ speedup and 30.5$\times$ energy efficiency for low-bit GeMV operations. For end-to-end LLM inference, MVDRAM achieves 2.18$\times$ and 1.31$\times$ throughput improvements, along with 3.04$\times$ and 2.35$\times$ energy efficiency, for 2-bit and 4-bit quantized low-bit models, respectively. MVDRAM has the potential to redefine the AI hardware landscape by demonstrating the feasibility of standard DRAM as an LLM accelerator.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Tatsuya Kubo [<a href="https://arxiv.org/show-email/ca5e1e5a/2503.23817" rel="nofollow">view email</a>]      <br>    <strong>[v1]</strong>
        Mon, 31 Mar 2025 07:54:59 UTC (2,294 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[On Not Carrying a Camera – Cultivating memories instead of snapshots (280 pts)]]></title>
            <link>https://hedgehogreview.com/issues/after-neoliberalism/articles/on-not-carrying-a-camera</link>
            <guid>43890525</guid>
            <pubDate>Sun, 04 May 2025 23:32:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hedgehogreview.com/issues/after-neoliberalism/articles/on-not-carrying-a-camera">https://hedgehogreview.com/issues/after-neoliberalism/articles/on-not-carrying-a-camera</a>, See on <a href="https://news.ycombinator.com/item?id=43890525">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <section>
            <h5>
                <a href="https://hedgehogreview.com/issues/after-neoliberalism">After Neoliberalism?&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;Spring 2025  &nbsp;&nbsp;/ &nbsp;&nbsp; Notes &amp; Comments</a></h5>
            
                            <h2>Cultivating memories instead of snapshots.</h2>
                        <h3>    
    

                <a href="https://hedgehogreview.com/contributors/john-rosenthal">John Rosenthal</a>
    </h3>
        </section>

                    <section>
                
                                    <p><i></i> Michael Jasmund via Unsplash.
                    </p>
                            </section>
        
        <div>
                <article>
                    
                                            <p><span><span><span><span><span><span><span><span><span>Last summer, in Greensboro, North Carolina, at a retrospective exhibition of my work, a photographer introduced himself and asked a question no one had ever asked me. I assumed he was a photographer because he carried a camera bag, its pockets bulging with lenses. I thought he might ask if I preferred using a digital or a film camera, or if I preferred color to black-and-white film. But no, his question was different. He said he’d noticed that out of a hundred plus photographs in the exhibit, only one was titled “Chapel Hill.” “There must have been others, right? You’re from Chapel Hill.” </span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>I told him that I seldom photographed in Chapel Hill. </span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>“But why?” he asked. </span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>I said, “Because I live there. I can’t do two things at once.” </span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>I think he laughed. At least I hope he did, because I didn’t intend to be rude.</span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>But I was serious.</span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>I don’t carry a camera in my hometown of Chapel Hill, and even though my cellphone contains a camera, I use it only for snapshots. Naturally, there were moments when I wished I had a camera with me. Once, while walking in my neighborhood at twilight, I felt a strange rush of energy in the air, and, suddenly, no more than twenty feet away, a majestically antlered whitetail buck soared over a garden fence and hurtled down the dimming street. Yet even as it was happening—this unexpectedly preternatural moment—I tried to imagine it as a <em>photograph</em>. That’s how we’ve been taught to think. “Oh, I wish I’d had a camera!” But that presumes I would have been <em>prepared</em> to capture the moment—instead of being startled by it. Yet being startled by beauty is a uniquely, and all too rare, human gift. The photograph comes later, when I journey back from astonishment and begin to fiddle with my camera.</span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>Well, I don’t carry a camera in town, and here’s the reason: In 1972, on the day my son was born, I was in the hospital room with my wife Susan, trying to be of assistance. I was there to remind her of certain breathing patterns we’d learned in our natural-childbirth classes, and to offer her encouragement during contractions. I was also there to photograph the birth of our child—my camera loaded with Tri-X film and fitted with a 50-mm lens. </span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>Everything was going pretty well. We sang “Sgt. Pepper’s Lonely Hearts Club Band” to help regulate her breathing. However, when Susan was wheeled into the delivery room, I sensed a tension in the air. Doctors and nurses were rushing about, and, since the baby was arriving three weeks early, a small incubator stood on a gleaming aluminum cart in the corner. At that moment, even in the world of modern medicine, questions of life and death were not beside the point. A few minutes earlier, I’d taken out my camera and checked my light meter. Good, the room was bright enough. I could shoot at one-one-hundred-twenty-fifth of a second. Not much blur. I looked around for the proper angle from which to photograph the birth. Unfortunately, the doctors and nurses, who were moving quickly, even urgently, kept getting in my way. I moved here and there. What if a nurse blocked my view? I couldn’t say “Move,” but I wanted to. My frustration mounted. Nobody paid any attention to me. Then, looking through the viewfinder—there, within the rectangle of a potential photograph—I saw my wife’s face contract in pain. Multiple emotions flooded through me, but the one I identified first was the photographer’s “Yes!,” and I immediately pressed the shutter. Then, a minute later, when the doctor held a wriggling infant in the air, I pressed it again.</span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>Over the next few days, I thought about my son’s birth. I was in the room when it happened, but was I really there, or had I been hiding behind my camera? I wanted the doctors to do whatever was necessary to bring my child safely into the world, but I also wanted them—and this was of equal importance—not to spoil my photograph. If something had gone wrong and Susan had desperately looked around the room for me, she would have seen a man holding a black box in front of his eyes. That image stayed with me, emblematically.</span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>This was all a long time ago. I was learning how to use a camera. Walking with a friend, I’d interrupt a good conversation to frame something up. I couldn’t help myself. I hadn’t yet developed an inner point of view, my own way of seeing things, so <em>everything</em> seemed visually plausible. I also hadn’t yet realized that a good conversation—of which there would be fewer as time went by—was more important than an interesting symmetry seen out of the corner of my eye. Still, my friends made allowances for my “artistry,” for my sudden vacancies. It wasn’t until my son was born that I began to measure the size of the empty space I left behind when I’d raise my camera to my eyes and focus on something in the distance. It was this distance I eliminated on the day I stopped carrying my camera with me whenever I spent time with friends. As I said to the photographer who questioned me at the retrospective, “I can’t do two things at once.”</span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>Nowadays, in our smartphone universe, my photographic caveats are quaint and, frankly, incomprehensible. The ten thousand photographs stored on a cellphone are a dramatic refutation of my photographic diffidence. In the face of our present insatiability for miniaturized screen images, what could be more irrelevant than to suggest that these photographs, which lock us into certain moments, often organized photogenic moments, may deform the way in which we recall the past? Or that the uncultivated spaces in between our photographs may be the most fertile ground of memory.</span></span></span></span></span></span></span></span></span></p>

<p><span><span><span><span><span><span><span><span><span>Were they worth it, those childbirth photographs? Did they turn out well? One did. Only one. (The rest are generic.) The doctor, cradling the child in one hand, presents him, headfirst, to his mother, who gazes in amazement at the wailing newborn. I printed the photograph more than fifty years ago—one print—and it sits in a box somewhere in my attic. The photograph was too intimate to share with anybody but my wife—much less strangers in a gallery—and when Susan and I divorced, the photograph fell into that limbo which is sadly reserved for those family photographs that no longer find themselves in a family.</span></span></span></span></span></span></span></span></span></p>


                                    </article>

                

                <p>
                    Reprinted from <i>The Hedgehog Review</i> 27.1
                    (Spring 2025). This essay may not be resold, reprinted,
                    or redistributed for compensation of any kind without prior written permission. Please contact
                    <a href="mailto:hedgehog@virginia.edu"><i>The Hedgehog Review</i></a> for further details.
                </p>

                            </div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Signal Clone the Trump Admin Uses Was Hacked (151 pts)]]></title>
            <link>https://www.404media.co/the-signal-clone-the-trump-admin-uses-was-hacked/</link>
            <guid>43890179</guid>
            <pubDate>Sun, 04 May 2025 22:34:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.404media.co/the-signal-clone-the-trump-admin-uses-was-hacked/">https://www.404media.co/the-signal-clone-the-trump-admin-uses-was-hacked/</a>, See on <a href="https://news.ycombinator.com/item?id=43890179">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
<!--kg-card-begin: html-->

<!--kg-card-end: html-->
<p>A hacker has breached and stolen customer data from TeleMessage, an obscure <a href="https://www.404media.co/behind-the-blog-the-news-hits-different/"><u>Israeli</u></a> company that sells modified versions of Signal and other messaging apps to the U.S. government to archive messages, 404 Media has learned. The data stolen by the hacker contains the contents of some direct messages and group chats sent using its Signal clone, as well as modified versions of WhatsApp, Telegram, and WeChat. TeleMessage was recently the center of a wave of media coverage after Mike Waltz accidentally revealed he used the tool in a cabinet meeting with President Trump.</p><p>The hack shows that an app gathering messages of the highest ranking officials in the government—Waltz’s chats on the app include recipients that appear to be Marco Rubio, Tulsi Gabbard, and JD Vance—contained serious vulnerabilities that allowed a hacker to trivially access the archived chats of some people who used the same tool. The hacker has not obtained the messages of cabinet members, Waltz, and people he spoke to, but the hack shows that the archived chat logs are not end-to-end encrypted between the modified version of the messaging app and the ultimate archive destination controlled by the TeleMessage customer.</p><p>Data related to Customs and Border Protection (CBP), the cryptocurrency giant Coinbase, and other financial institutions are included in the hacked material, according to screenshots of messages and backend systems obtained by 404 Media.</p>
</div><div>
  <div>
    <h2>This post is for paid members only</h2>
    <p>Become a paid member for unlimited ad-free access to articles, bonus podcast content, and more.</p>
    <p><a href="https://www.404media.co/membership/">Subscribe</a>
  </p></div>
  <div>
    <h2>Sign up for free access to this post</h2>
    <p>Free members get access to posts like this one along with an email round-up of our week's stories.</p>
    <p><a href="https://www.404media.co/signup/">Subscribe</a>
  </p></div>
  <p>Already have an account? <a href="https://www.404media.co/signin/" data-portal="signin">Sign in</a></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Helmdar: 3D Scanning Brooklyn on Rollerblades (135 pts)]]></title>
            <link>https://owentrueblood.com/blog/2025/05/04/helmdar/</link>
            <guid>43889875</guid>
            <pubDate>Sun, 04 May 2025 21:49:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://owentrueblood.com/blog/2025/05/04/helmdar/">https://owentrueblood.com/blog/2025/05/04/helmdar/</a>, See on <a href="https://news.ycombinator.com/item?id=43889875">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <header>
      
      <b>2025 May 4</b>
    </header>
    <p><img src="https://owentrueblood.com/assets/helmdar/st-anns-warehouse-scan.jpg" alt=""></p>

<p>One of my favorite joys is exploring a city late at night on rollerblades. I’ve been doing it fairly regularly for about
10 years now, first in Boston and then in NYC. Every time day turns to night and back again a city takes a breath. At
night people flow out or huddle up in buildings, leaving the streets clear for the people and machines that reset
the urban environment for the next day. Garbage trucks lumber about, workers unload fresh stock at stores, repairs
happen in subway tunnels and on roads. Without all the people it’s easier to see the naked form of the streets,
buildings, and infrastructure.</p>

<p>When you’re moving slow you spend more time taking in the details. When you’re moving fast the world becomes a blur. The
world around you is a brush that paints into your perception, and the speed of the brush strokes helps set the style of
the painting. I like rollerblading in particular because it gives those perceptual brush strokes a lot of range. You can
quickly stop and soak in a detail, change direction, occupy a tight space, or fly downhill in a long straight line.</p>

<h2 id="stickdar">Stickdar</h2>

<video src="https://owentrueblood.com/assets/helmdar/walking-stick-scan.mp4" loop="" autoplay="" controls="" muted=""></video>

<p>Some years ago I picked up a 2D LiDAR scanner (RPLidar A1) without a particular purpose in mind. As it spins it tells
you its current angle and the distance to the environment in the direction it’s pointing. They’re often used in robot
vacuums to map walls and other obstacles. One night in 2021 I put it on the end of a stick and carried it around with my
laptop recording timestamped measurements from it. By putting each scan sweep on its own layer I could make
visualizations like this:</p>

<video src="https://owentrueblood.com/assets/helmdar/sidewalk-snowstorm.mp4" loop="" autoplay="" controls="" muted=""></video>
<p><em>Taken outside my apartment at the time during heavy snowfall. You can see the path cut through the snow on the
sidewalk, the apartment building wall, windows, cars along the sidewalk, and points on a tree.</em></p>

<p><img src="https://owentrueblood.com/assets/helmdar/scan-outside-newlab.jpg" alt="">
<em>Walking along the perimeter wall outside New Lab. Just behind the character is scaffolding. There are rectangles from
windows. And if I remember right there was snow on the ground at that time too. This one is much more distorted because
I wasn’t so careful to keep the sensor stable while moving.</em></p>

<p>I think about devices like this as “weird cameras” - imperfect leaky imaging systems that don’t faithfully reproduce
a precise representation of what they are pointed at. Instead they mix in side channels that the user or environment can
affect, and that frees them up for more interesting creative expression.</p>

<h2 id="helmdar">Helmdar</h2>

<p>While I was experimenting with the stickdar I had the idea that it would be fun to make maps on a larger scale by
carrying it around while I was rollerblading. But when I tried that out the maps were very chaotic because it was harder
to keep it steady. I moved onto other projects, but then the other week this project thread popped back into mind.</p>

<p>Over the years I’ve done various projects which needed 6 DoF tracking through space (i.e. machine needs to know where it
is and where it is pointing). A very convenient way to achieve this nowadays for something quick and dirty is to use
mobile phones, because they come with AR frameworks that know how to use the sensors and cameras onboard to do very good
“inside-out” (no external sensors) 6 DoF tracking. On Android that’s even exposed to web browsers via the WebXR API so
you can bash together a web app to access that data, no app development required (hot tip: works on the Quest VR
headsets too, including hand tracking, which I’ve
<a href="https://vimeo.com/730845606">had fun using for projects in the past</a>).</p>

<p>So when the stickdar popped back into mind I started thinking about attaching the LiDAR to a phone to track its position
and orientation in space. Then I could work out the position of all the points returned by the sensor in 3D world space,
building up a point cloud map of the world as I moved through it. In general doing this is a problem known as
<a href="https://en.wikipedia.org/wiki/Simultaneous_localization_and_mapping">simultaneous localization and mapping (SLAM)</a>, and
nowadays there are plenty of very good ways to solve it. But in the spirit of weird cameras, because I was curious about
how well this would work, and for fun I decided to try it this way.</p>

<p>Here’s what I came up with:</p>

<p><img src="https://owentrueblood.com/assets/helmdar/the-helmet-scanner.jpg" alt=""></p>

<p>I built a frame out of aluminum extrusion and attached the phone (a Pixel 6) and the LiDAR to the front with some laser
cut and 3D printed brackets. I affixed this to the helmet using flexible brackets printed in TPU and VHB double-stick
tape, with some white duct tape for insurance. The LiDAR plugs into the phone’s USB-C jack via a USB-to-serial adapter
for data and power. The squares on the side are AprilTags, which are visual tracking markers that I wanted to try using
for tracking the helmet in space to do some VFX experiments. They’re unrelated to the mapping. The whole thing felt
surprisingly sturdy but was pretty front-heavy so I added a power bank on the back purely as a counterweight.</p>

<p><img src="https://owentrueblood.com/assets/helmdar/wearing-the-helmet-scanner.jpg" alt=""></p>

<p><em>(Photo credit: Sally)</em></p>

<p>On the software side, I wrote an Android app that implements a driver for the LiDAR. This wasn’t a big challenge because
of this nice <a href="https://github.com/mik3y/usb-serial-for-android">usb-serial-for-android</a> library and
<a href="https://github.com/Roboticia/RPLidar">an existing python library</a> I used as reference which implements the simple
serial protocol that the LiDAR uses. The app also set up ARCore to provide the 6 DoF tracking data. I made a rudimentary
UI which showed the latest scan as an outline overlaid on a 3D AR scene showing the tracking results from ARCore (mainly
any detected planes, which I used to check if the tracking was working before starting scans). There is one toggle
button which starts and stops captures.</p>

<p>While a capture is happening the data from the LiDAR is being decoded and paired up with 6 DoF poses from ARCore, then
appended to a binary log file. So while using it I just needed to hold the helmet, check that I see some planes being
detected in the camera image so I know the tracking is working, hit the capture button, and then put it on my head and
go! When I finished a scan I’d take the helmet off my head and hit the stop button. Then later I could grab the log
files off the phone and visualize them however I liked.</p>

<p>I didn’t want to wait until I got back home to check on how the scans were turning out and I didn’t want to carry my
main laptop in a backpack while rollerblading around for fear of smashing it so I took a very cheap laptop and bolted it
to an IKEA cutting board that I routed a handle into. I wrote a quick web app for decoding the scan data and displaying
it in 3D using Three.js. When I wanted to check on the latest scan I just sat down, plugged the phone into the laptop,
and loaded it up in this web app. That ended up working great, and it was surprisingly fun to have the weight of the
laptop to swing around while rollerblading.</p>

<p><img src="https://owentrueblood.com/assets/helmdar/the-whole-helmdar-rig.jpg" alt=""></p>

<p><em>(Photo credit: Sally)</em></p>

<h2 id="scans">Scans</h2>

<p>I didn’t know what to expect from the scans. I have only used ARCore on scales up to maybe a few 10s of meters. So I
thought maybe it would lose tracking entirely after I went far enough, or the scans would be very distorted as they got
bigger. But I was very pleasantly surprised when I started looking at the results.</p>

<p>Here’s one of the first scans I did shown from a bird’s eye view:</p>

<p><img src="https://owentrueblood.com/assets/helmdar/top-down-scan-3.jpg" alt=""></p>

<p>I made a circuit around a rectangular park, starting in one place and stopping in a different place. As far as I could
tell by eye everything matched up and there was minimal distortion over the distance. That gave me confidence to try
much longer distances.</p>

<p>Here you can see a scan overlaid on Google Maps:</p>

<p><img src="https://owentrueblood.com/assets/helmdar/dumbo-scan-on-map.jpg" alt=""></p>

<p>I had started in the lower right under the Manhattan Bridge, meandered down Front St, backtracked and made a circuit
around the plaza near the bridge anchorage, went through the anchorage archway, down Water St., and then north on Main
St. and west along the water towards the park. Note that all of the scans here are taken late at night well after dark.
I think if you’re familiar with the challenges of visual odometry you’ll recognize this consistency over such a distance
in low light as extremely impressive. I wish I knew what Google was doing under the hood of ARCore to achieve this.</p>

<p>Let’s take a more dynamic and 3D view:</p>

<video src="https://owentrueblood.com/assets/helmdar/rollerblading-thru-anchorage-fast.mp4" loop="" autoplay="" controls="" muted=""></video>

<p>This is me rollerblading through the anchorage from the other direction. It shows the limits of the range of the LiDAR,
catching the ceiling of the anchorage archway but not its opposite wall.</p>

<p><img src="https://owentrueblood.com/assets/helmdar/anchorage-scan.jpg" alt=""></p>

<p>Here is a smaller scan from some buildings into a park. You can see points from trees and cars. And how the lines flip
around when I turn my head to look for cars while crossing the street:</p>

<p><img src="https://owentrueblood.com/assets/helmdar/park-street-scan.jpg" alt=""></p>

<p>A quality I like about these scans is that they are not utility maps trying to represent the true structure of the
world, like how you’d use Google Maps to get to a destination. These are distorted in a way that shows how I moved
through the world. The lines bunch up or spread out as I slow down or speed up. There are wiggles where I turn my head
to look for cars and discontinuities when the phone loses track of where it is because I went through someplace dark.
There’s texture in the data that comes from me and matches up with my personal lived experience. I had way more fun than
I expected when I looked back at the scans and tried to remember where I was exactly at each point. It’s not as obvious
as a photo, so I ended up drawing on those other hints to jog my memory.</p>

<p>Another quality that I enjoyed from the scans was the abstract shapes they took when viewed from above. These scans vary
in size from 10s of meters to maybe kilometers. On some of them you can see major discontinuities from tracking
failures.</p>



<p><a href="https://owentrueblood.com/assets/helmdar/top-down-scan-1.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-1.jpg" alt="Top-down scan #1">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-2.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-2.jpg" alt="Top-down scan #2">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-3.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-3.jpg" alt="Top-down scan #3">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-4.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-4.jpg" alt="Top-down scan #4">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-5.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-5.jpg" alt="Top-down scan #5">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-6.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-6.jpg" alt="Top-down scan #6">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-7.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-7.jpg" alt="Top-down scan #7">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-8.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-8.jpg" alt="Top-down scan #8">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-9.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-9.jpg" alt="Top-down scan #9">
  </a>
  <a href="https://owentrueblood.com/assets/helmdar/top-down-scan-10.jpg">
    <img src="https://owentrueblood.com/assets/helmdar/top-down-scan-10.jpg" alt="Top-down scan #10">
  </a>
</p>


<h2 id="appendices">Appendices</h2>

<h3 id="experiments-in-visualizing-the-scans">Experiments in Visualizing The Scans</h3>

<video src="https://owentrueblood.com/assets/helmdar/dumbo-rollerblading-viz.mp4" loop="" autoplay="" controls="" muted=""></video>

<p>After I realized that the scanner would produce point clouds that were accurate in real world coordinates I wanted to
see if I could make a composite render overlaying a 3D render of the scan data on footage of me taking the scan, because
I thought that would make it clearer what’s going on. In order to do that I needed to have some means to make a virtual
camera match the real world camera exactly. That always involves figuring out two things: 1) the intrinsic parameters of
the camera for its lens model (e.g. focal length) and 2) the extrinsic parameters of the camera like where it is in
space and how it’s oriented.</p>

<p>That’s why I added the AprilTags on the side of the helmdar, because I thought I might be able to use them to
automatically track the 3D position of the helmet in the footage and then align that track with the data from the scan.
This ended up being a deep but educational rabbit hole. Just using an
<a href="https://pypi.org/project/pupil-apriltags/">AprilTag library</a> out of the box did not work because of poor lighting, low
resolution, and motion blur. I tried various means to get around those problems like applying de-blurring to the footage
and more robust but slower tag tracking implementations, and maybe I’ll write about those things some other time. But
eventually I just wanted to get some visualizations working so I reverted back to semi-automated motion tracking in
Blender.</p>

<p>I tracked the corners of the AprilTag in the footage in Blender which produced 4 tracks in the camera pixel space. To
get a 3D trajectory from those tracks I needed to solve the
<a href="https://en.wikipedia.org/wiki/Perspective-n-Point">Perspective-n-Points problem</a>, which is where you have pairs of
points in 3D space and points in a camera’s pixel space and then figure out the position of the camera such that those
3D points would show up at the corresponding locations in the image. This can be done pretty easily with OpenCV, but you
need to have the intrinsic parameters of the camera.</p>

<p>There I had a problem because I captured my footage using a GoPro using its wide angle SuperView mode. When I was
capturing the footage I liked the wide view and figured I’d be able to work out how to deal with the distortion later.
Doing that was harder than I anticipated because it turned out that Superview is a warped view applied in software, so
a conventional fish-eye lens model doesn’t apply. What I ended up doing was unwarping the footage using some cool open
source software called <a href="https://gyroflow.xyz/">Gyroflow</a> which includes ST maps for many types of lenses, including the
soft-warped GoPro Superview “lens”. After that I was able to take footage I shot containing a chessboard calibration
pattern with <a href="https://docs.opencv.org/4.x/d7/d21/tutorial_interactive_calibration.html">opencv_interactive-calibration</a>
to determine the intrinsics I needed. Then I could do any VFX I wanted, render out, and then reapply the warp at the end
if I so desired (in the end I didn’t bother adding it back). I was interested in trying something like this because I
heard it’s what was done for the VFX in the movie <a href="https://en.wikipedia.org/wiki/Hardcore_Henry">Hardcore Henry</a>.</p>

<p>So with the Blender tag tracks from the unwarped footage and camera intrinsics in hand I applied the OpenCV perspective-
n-points solvers to get the tag track in 3D. Then I brought that back into Blender and manually lined it up with the
scan poses reported by the helmdar rig. Finally, I used geometry nodes to animate the scan data filling in.</p>

<video src="https://owentrueblood.com/assets/helmdar/rollerblading-thru-anchorage-viz.mp4" loop="" autoplay="" controls="" muted=""></video>

<h3 id="point-cloud-viewer">Point Cloud Viewer</h3>

<p>I made a quick-and-dirty point cloud viewer so you can interactively view some of the scans. Tech note: All of the point
cloud visualizations were made in SideFX Houdini and I set up a little pipeline from there to this viewer so I can keep
the same camera and colors.</p>



<canvas id="pc1"></canvas>


<canvas id="pc2"></canvas>


<canvas id="pc3"></canvas>


<p>Here’s a scan I made while talking about the project at <a href="https://sideprojectsaturday.com/">Side Project Saturday</a>:</p>
<canvas id="pc4"></canvas>


<canvas id="pc5"></canvas>



    <hr>
    
  

</div>]]></description>
        </item>
    </channel>
</rss>