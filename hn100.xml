<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 11 Sep 2024 17:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[The CIA-in-Chile Scandal at 50 (123 pts)]]></title>
            <link>https://nsarchive.gwu.edu/briefing-book/chile/2024-09-09/cia-chile-scandal-50</link>
            <guid>41511050</guid>
            <pubDate>Wed, 11 Sep 2024 13:14:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nsarchive.gwu.edu/briefing-book/chile/2024-09-09/cia-chile-scandal-50">https://nsarchive.gwu.edu/briefing-book/chile/2024-09-09/cia-chile-scandal-50</a>, See on <a href="https://news.ycombinator.com/item?id=41511050">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><strong>Washington, D.C., September 9, 2024</strong> – Fifty years ago, as the <em>New York Times</em> prepared to break a major exposé on CIA covert operations in Chile, the architect of those operations, Henry Kissinger, misled President Gerald Ford about clandestine U.S. efforts to undermine the elected government of Socialist Party leader Salvador Allende, documents posted today by the National Security Archive show. The covert operations were “designed to keep the democratic process going,” Kissinger briefed Ford in the Oval Office two days before the article appeared fifty years ago this week. According to Kissinger, “there was no attempt at a coup.”</p><p>“I saw the Chile story,” Ford told Kissinger on September 9, 1974. “Are there any repercussions?” Kissinger replied: “Not really.”</p><p>In fact, the front-page story written by investigative reporter Seymour Hersh—<a href="https://www.nytimes.com/1974/09/08/archives/cia-chief-tells-house-of-8million-campaign-against-allende-in-7073.html">“C.I.A. Chief Tells House Of $8 Million Campaign Against Allende in ‘70-’73”</a>—set in motion the biggest scandal on covert operations the intelligence community had ever experienced. Hersh’s September 8, 1974, article led directly to the formation of a special Senate committee, chaired by Senator Frank Church, that conducted the first major investigation of CIA covert actions in Chile and elsewhere and that was the first congressional body to evaluate the role of secret, clandestine operations in a democratic society. The political repercussions forced President Ford to publicly acknowledge the CIA operations in Chile while forcefully denying they had anything to do with fomenting a coup. The president’s White House lawyer subsequently advised Ford that his statement “was not fully consistent with the facts because all the facts had not been made known to you.”</p><p><iframe width="560" height="315" src="https://www.youtube.com/embed/pzmZRTto4PM?si=ED5a8IurvsJYrwXJ&amp;start=703" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p><p><em>At a September 16th press conference, Gerald Ford became the first president to publicly acknowledge and defend CIA covert operations, which he characterized as limited to protecting Chilean democratic institutions from the threat of Allende. He stated that the CIA actions were "in the best interest of the people in Chile, and certainly in our best interest." (See timecode 11:55 in tape for Ford's statement.)&nbsp;</em></p><p>The Senate investigation, which also revealed CIA assassination plots against foreign leaders, and a similar investigative effort in the House of Representatives led to legislation to enhance checks and balances on CIA operations and curtail the ability of future presidents to “plausibly deny” covert action programs abroad. White House documents reveal the acute consternation expressed by Ford and Kissinger that covert operations might be restrained. “We need a CIA and we need covert operations,” Ford told his Cabinet nine days after the <em>Times </em>exposé was published. The article and a flood of follow up CIA stories by Hersh, as Kissinger later conceded in his memoirs, “had the effect of a burning match in a gasoline depot.”</p><article>
  
      
            <p><a href="https://nsarchive.gwu.edu/sites/default/files/2024-09/image1.jpg"><img loading="lazy" src="https://nsarchive.gwu.edu/sites/default/files/styles/wide/public/2024-09/image1.jpg?itok=UsffHA9Q" alt="Stern's report and Kissinger's remarks" typeof="foaf:Image">

</a>
</p>
      
  </article>
<p><strong>THE LEAK THAT CHANGED HISTORY</strong></p><p>The Hersh story was based on a summary of secret testimony by CIA director William Colby and a legendary agency official, David Atlee Phillips, who provided an overview of covert operations against Allende in Chile during an executive session of the House Armed Services Committee on April 22, 1974. According to the summary, Colby informed the Committee that between 1962 and 1973, the ultra-secret “40 Committee,” which oversaw covert operations, had authorized the CIA to spend $11 million in Chile, including $8 million to “destabilize” the Allende government and “to precipitate its downfall.” The summary stated that “the agency activities were viewed as a prototype, or laboratory experiment, to test the techniques of heavy financial investment in efforts to discredit and bring down a government.”</p><p>The summary was drafted by a liberal congressman from Massachusetts, Michael J. Harrington, who had heard about Colby’s TOP SECRET testimony and requested special permission to review it. Harrington read the 48-page hearing transcript twice—on June 5, and June 12, 1974—and realized Colby’s testimony clearly contradicted previous denials by Kissinger and top CIA officials (during earlier hearings on the CIA and ITT’s operations in Chile) that there had been any covert efforts to undermine Allende.</p><p>Harrington shared his concern that CIA officers had committed perjury with Senator Frank Church’s staff director, Jerome Levinson. In his unpublished memoir, Levinson recalled that Harrington “asked what I thought he should do.” Levinson recommended that Harrington write a letter to the chairman of the Senate Foreign Relations Committee, Senator William Fulbright, requesting a full inquiry into the CIA’s role in Chile. On July 18, 1974, Harrington sent a lengthy letter to Fulbright, providing a summary of the secret CIA testimony and concluding that Congress and the American people “have a right to learn what was done in our name in Chile.”</p><p>After it became clear that Fulbright was not inclined to order a major investigation into the CIA role in Chile, Levinson decided to take the audacious step of calling attention to Colby’s still-secret testimony: he leaked the Harrington letter to Seymour Hersh. In early September, after lunch with Hersh at Jean-Pierre’s, a swanky D.C. restaurant, Levinson slipped Hersh a copy of the Harrington letter. On September 5, 1974, Hersh began calling State Department officials for comment on his forthcoming scoop, setting in motion a flurry of White House meetings, briefings and reports on what information Hersh might have obtained. On September 8, the <em>Times</em> published the story on the front page of its Sunday newspaper, generating a major scandal and eventually resulting in the prosecution of former CIA director Richard Helms for lying to Congress.</p><article>
  
      
            <p><a href="https://nsarchive.gwu.edu/sites/default/files/2024-09/image2_0.jpg"><img loading="lazy" src="https://nsarchive.gwu.edu/sites/default/files/styles/wide/public/2024-09/image2_0.jpg?itok=eUpJ9BST" alt="telcon" typeof="foaf:Image">

</a>
</p>
      
  </article>
<p><strong>REACTION OF THE CIA’s CHILEAN AGENTS</strong></p><p>The leak of Colby’s testimony forced the CIA to urgently contact its Chilean agents to ascertain the repercussions of the Hersh revelations on its network of assets and informants. In a revealing secret report four days after the <em>Times</em> article appeared, the CIA station transmitted the reactions of several Chilean operatives—identified by codenames such as FUBARGAIN, FUPOCKET and FUBRIG—who were embedded inside the Chilean military, the Chilean Christian Democrat political party, and the <em>El Mercurio</em> newspaper, which the CIA had financed as a bullhorn of opposition to the government of Salvador Allende. “Following Station agents were contacted, period 8-10 September, in connection with referenced revelations,” the Santiago Station informed CIA headquarters.</p><p>The agent codenamed “FUBRIG-2 “took the news calmly but was most concerned about implications of efforts of revelations and expressed opinion that system in Washington should be changed to prevent such leaks,” the CIA reported. “He was relieved that El Mercurio was not mentioned by name.”</p><p>According to this cable, the agent inside the Chilean military, FUBARGAIN-1, told the CIA that “General Pinochet did not seem very upset but [had] commented … that the disclosure ‘seemed to be a dumb thing to do.’” But the same agent told the CIA that other younger Chilean military officers interpreted the leak as a deliberate attempt to “damage [the] Junta and falsely cast doubt on their independence and role in bringing down Allende.” “Sum is that Chilean officer corps becoming increasingly baffled and resentful about U.S., according to this source.”</p><p><strong>STILL-SECRET DOCUMENTS</strong></p><p>Fifty years after the scandal broke over CIA operations in Chile, Colby’s original testimony before the House Armed Services Committee remains classified, as does the entire 48-page transcript of the closed hearing. Last year, the Chilean government officially requested that the Biden administration declassify those records as a gesture of “declassification diplomacy” for the 50th anniversary of the coup, but the CIA proved to be uncooperative.</p><p>“For the sake of historical accountability, it is imperative that the CIA declassify Colby’s testimony on Chile, as well as other relevant documentation,” stated Peter Kornbluh who directs the Archive’s Chile Documentation Project. As the 50th anniversary of the formation of the special Senate Committee to Study Government Operations with Respect to Intelligence Activities approaches in January 2025, the Archive also called on Senate leaders to initiate the release the Church Committee’s voluminous investigative archives on Chile and other countries targeted for covert regime change operations.</p><p>“A half century of secrecy surrounding these records,” Kornbluh noted, “must come to an end.”</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Building a browser using Servo as a web engine (117 pts)]]></title>
            <link>https://servo.org/blog/2024/09/11/building-browser/</link>
            <guid>41510402</guid>
            <pubDate>Wed, 11 Sep 2024 11:43:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://servo.org/blog/2024/09/11/building-browser/">https://servo.org/blog/2024/09/11/building-browser/</a>, See on <a href="https://news.ycombinator.com/item?id=41510402">Hacker News</a></p>
Couldn't get https://servo.org/blog/2024/09/11/building-browser/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[We spent $20 to achieve RCE and accidentally became the admins of .mobi (727 pts)]]></title>
            <link>https://labs.watchtowr.com/we-spent-20-to-achieve-rce-and-accidentally-became-the-admins-of-mobi/</link>
            <guid>41510252</guid>
            <pubDate>Wed, 11 Sep 2024 11:19:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://labs.watchtowr.com/we-spent-20-to-achieve-rce-and-accidentally-became-the-admins-of-mobi/">https://labs.watchtowr.com/we-spent-20-to-achieve-rce-and-accidentally-became-the-admins-of-mobi/</a>, See on <a href="https://news.ycombinator.com/item?id=41510252">Hacker News</a></p>
Couldn't get https://labs.watchtowr.com/we-spent-20-to-achieve-rce-and-accidentally-became-the-admins-of-mobi/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Why Is Pave Legal? (613 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=41510103</link>
            <guid>41510103</guid>
            <pubDate>Wed, 11 Sep 2024 10:50:55 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=41510103">Hacker News</a></p>
Couldn't get https://news.ycombinator.com/item?id=41510103: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Radicle 1.0 – A local-first, P2P alternative to GitHub (167 pts)]]></title>
            <link>https://radicle.xyz/2024/09/10/radicle-1.0.html</link>
            <guid>41509713</guid>
            <pubDate>Wed, 11 Sep 2024 09:40:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://radicle.xyz/2024/09/10/radicle-1.0.html">https://radicle.xyz/2024/09/10/radicle-1.0.html</a>, See on <a href="https://news.ycombinator.com/item?id=41509713">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
      <p><em>Radicle is a peer-to-peer, local-first code
        collaboration stack built on Git.</em></p>
      <br>
      <header>
        <h2>Radicle 1.0</h2>
        <span>10.09.2024</span>
      </header>
      <p>On March 26th, we <a href="https://x.com/radicle/status/1772659708978991605?s=20">announced</a> the first release candidate for Radicle 1.0.
Today, after five months of feedback and 17 release candidates, we are ready to
launch Radicle <code>1.0</code>.</p>

<p>If you’ve been waiting for the right moment to try Radicle or to reintroduce
yourself to the stack, now is a great time to dive in: our <a href="https://radicle.xyz/">website</a>
and <a href="https://radicle.xyz/guides">guides</a> should have all the information you need to get started.
You can also browse the latest <a href="https://app.radicle.xyz/nodes/seed.radicle.xyz/rad:z3gqcJUoA1n9HaHKufZs5FCSGazv5">code</a>, hosted on Radicle.</p>

<p>If you’ve been tagging along, thank you, it’s been a bumpy ride and we couldn’t
have done it without you!</p>

<h2 id="try-it-out">Try it out!</h2>

<p>You can grab the latest release with the following command:</p>

<div><pre><code>curl -sSf https://radicle.xyz/install | sh
</code></pre></div>

<p>Or head over to the <a href="https://radicle.xyz/download">download</a> section to download and verify the
binaries yourself.</p>

<h2 id="whats-in-the-box-">What’s in the box 📦</h2>

<p>Radicle 1.0 represents the culmination of <a href="https://radicle.xyz/history">years</a> of experimentation
and hard work from our team and community, where we set out to ensure that free
and open source software ecosystems can flourish without having to rely on the
whims of Big Tech. We designed Radicle with a first-principles approach, as a
natural extension to Git, expanding it to work in a collaborative, local-first,
peer-to-peer setting.</p>

<p>This milestone includes:</p>

<ul>
  <li>An extensible, homegrown, peer-to-peer gossip and sync <a href="https://radicle.xyz/guides/protocol">protocol</a>
built on the Git protocol.</li>
  <li>Social interactions such as issues, patches and code review, using our
extensible <a href="https://radicle.xyz/guides/protocol#collaborative-objects">Collaborative Objects</a> system which keeps all artifacts
in the repository.</li>
  <li>A secure authentication and authorization protocol using public key
cryptography, which allows all published content to be verified locally,
without centralized authority.</li>
  <li>An intuitive CLI that should be familiar to users of Git, as well as a web
frontend for browsing Radicle repositories and seed nodes.</li>
  <li>Privacy at the protocol level, with truly private repositories and built-in
<a href="https://radicle.xyz/guides/user/#4-embracing-the-onion">Tor support</a>.</li>
  <li>Reproducible and signed <a href="https://radicle.xyz/download">builds</a> for all Radicle binaries.</li>
</ul>

<p>To us, Radicle 1.0 means that Radicle is <em>ready to use</em>. It stands as a
testament that sovereign code forges are possible today, and in our opinion,
<em>necessary</em>.</p>

<p>We feel comfortable now inviting you to join us, replicate, and
<a href="https://radicle.xyz/guides/user">collaborate</a> within the Radicle network or even <a href="https://radicle.xyz/guides/seeder">run a seed
node</a>.</p>

<p>For an in-depth explanation of how Radicle works, check out our <a href="https://radicle.xyz/guides/protocol">Protocol
Guide</a>.</p>

<h2 id="stability-️">Stability ⛰️</h2>

<p>Radicle 1.0 marks our commitment to stability: from this release onwards, all
changes to the protocol will be designed in backwards compatible way, and any
necessary change on the CLI will include a seamless upgrade path.</p>

<p>We are aware that the release candidate phase was rockier than expected for
some, but we are now in a good place to slow things down and improve stability.</p>

<p>Along with this commitment will come a more dependable and streamlined release
process which starts with this release!</p>

<h2 id="future-plans-">Future plans 🔮</h2>

<p>There are several things in the pipeline that we intend to release when ready:</p>

<ul>
  <li>Native CI/CD capabilities</li>
  <li>The Radicle TUI (Terminal User Interface)</li>
  <li>Advanced code review functionality</li>
  <li>An inbox system for repository notifications</li>
  <li>Multi-device support and user profiles</li>
  <li>Support for other canonical references, such as tags</li>
  <li>Seed node moderation and management tools</li>
  <li>The Radicle desktop application</li>
</ul>

<h2 id="growing-ecosystem-">Growing ecosystem 🌱</h2>

<p>Outside of the core stack, the ecosystem is growing nicely:  an independent
team working on integrations &amp; tooling for Radicle has developed a <a href="https://app.radicle.at/nodes/seed.radicle.gr/rad:z3Makm6fsQQXmpSFE43DZqwupaEhk">VS
Code</a> and <a href="https://app.radicle.at/nodes/seed.radicle.gr/rad:z3WHS4GSf8hChLjGYfPkJY7vCxsBK">JetBrains</a> plugin. The Radicle network now also
comprises several deployments of the Radicle <a href="https://app.radicle.xyz/nodes/seed.radicle.xyz/rad:z4V1sjrXqjvFdnCUbxPFqd5p4DtH5">frontend</a>, and there are more
than 40 seed nodes operating on the network, freely replicating user content.</p>

<h2 id="invitation-to-forge-the-future-">Invitation to forge the future 🤝</h2>

<p>Once you <a href="https://radicle.xyz/guides/user#installation">install</a> Radicle and set up your identity, you’ll have access
to all public repositories on any public node, making it easier to explore and
contribute to the ecosystem. Compared to traditional self-hosted forges, which
often result in fragmented collaboration environments, Radicle represents an
evolutionary step for Git-based collaboration, with a single cryptographic
identity that works across nodes.</p>

<p>Lastly, in the spirit of free and open source software, we believe that power
lies in community. As we embark on further iterating the protocol and stack, we
also invite you to shape the future of Radicle with us. Consider joining us on
our <a href="https://radicle.zulipchat.com/">Zulip</a> instance. Your ideas and insights
are invaluable to our mission of creating a sovereign forge.</p>

<p>Together, we can make significant progress towards reclaiming the internet.</p>

<p><em>Free your code!</em></p>

<p>👾👾👾</p>

<hr>

<p><strong>Follow us</strong> on 🐘 <a href="https://toot.radicle.xyz/@radicle">Mastodon</a>, 🦋 <a href="https://bsky.app/profile/radicle.xyz">Bluesky</a> or 🐦
<a href="https://twitter.com/radicle">Twitter</a> to stay updated.</p>

<p><strong>Contribute</strong> to Radicle as a 🌱 <a href="https://radicle.xyz/guides/seeder">seeder</a>, 🧙
<a href="https://app.radicle.xyz/nodes/seed.radicle.xyz/rad:z3gqcJUoA1n9HaHKufZs5FCSGazv5">developer</a> or by 🪞 <a href="https://radicle.xyz/guides/user/#git-going-with-repositories">mirroring</a> your repositories on
the Radicle network.</p>

<p><strong>Join</strong> our community on 💬 <a href="https://radicle.zulipchat.com/">Zulip</a> and discuss your ideas to
improve Radicle.</p>


    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Yaak is now open source (120 pts)]]></title>
            <link>https://yaak.app/blog/now-open-source</link>
            <guid>41509156</guid>
            <pubDate>Wed, 11 Sep 2024 08:05:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://yaak.app/blog/now-open-source">https://yaak.app/blog/now-open-source</a>, See on <a href="https://news.ycombinator.com/item?id=41509156">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>I hate to admit it, but <strong>the Reddit, HackerNews, and Lobsters folks were right.</strong></p>
<p>Three months ago I published <a href="https://yaak.app/blog/why-not-open-source">Why Not Open Source</a> as an
attempt to explain why Yaak <em>wouldn't</em> be open source. Having burnt out on OSS in the
past, I thought that others might find my decision-making process useful, so I shared it
to the usual places.</p>
<p>Yaak users mostly agreed, which makes sense, as they were already happy with the
close-source reality. The broader open-source community, however, strongly disagreed with
almost everything.</p>
<ul>
<li><a href="https://lobste.rs/s/qeqgiq">lobste.rs post</a></li>
<li><a href="https://www.reddit.com/r/opensource/comments/1dgis44/why_yaak_is_not_open_source/">Reddit r/opensource post</a></li>
<li><a href="https://news.ycombinator.com/item?id=41424910">HackerNews post</a></li>
</ul>
<p>Here are a few of the highlights:</p>
<blockquote>
<p>Don’t conflate “open source”/“free software” with github’s specific social model of
drive-by contributions, or even contributions at all...
→ <a href="https://lobste.rs/s/qeqgiq/why_yaak_is_not_open_source#c_k7tr74">lobste.rs</a></p>
</blockquote>
<blockquote>
<p>But all of those things are also true of closed source software.
→ <a href="https://news.ycombinator.com/item?id=41425136">ycombinator.com</a></p>
</blockquote>
<blockquote>
<p>The claims of this text are complete bullshit. No idea what this "app" is about,
anyways.
Dont need it. Can go to the trash can of history
→ <a href="https://www.reddit.com/r/opensource/comments/1dgis44/comment/l8qn0v9/">reddit.com</a></p>
</blockquote>
<p>While most of the replies weren't constructive, the quoted
<a href="https://lobste.rs/s/qeqgiq/why_yaak_is_not_open_source#c_k7tr74">500-word lobste.rs comment</a>
is absolute gold. It immediately got me thinking that <strong>maybe I was wrong.</strong> 🙈</p>
<p>I wanted feedback, and that's exactly what I got.</p>
<p>The main theme was that <em><strong>open source doesn't mean open contribution.</strong></em> You can still
get most of the benefits by simply making the code public:</p>
<ul>
<li>Open to security audits</li>
<li>Transparent functionality (no shady stuff)</li>
<li>Flexibility (can still fork and modify)</li>
<li>Runnable even if the developer leaves</li>
</ul>
<p>I wanted Yaak users to experience these benefits too, which is why Yaak is now open source
but closed (mostly) for contribution.</p>
<h2 id="-open-source-closedish-contribution">🙈 Open source, closed(ish) contribution</h2>
<p>Many commenters pointed to projects like SQLite which are open-source but don't allow
outside contribution. For some reason, I never even considered this to be a possibility.
While Googling for more projects like this, I came
across <a href="https://github.com/benbjohnson/litestream?tab=readme-ov-file#contribution-policy">Litestream</a>,
which was initially closed to contribution and eventually opened for bug-fixes only.</p>
<p>This model made perfect sense to me, so it's exactly what I'm doing. <strong>Yaak is now open
source under the MIT license and open to contribution for bug fixes only.</strong></p>
<p><em>Now the desktop Linux users can fix their own bugs (please don't hate me)</em> 😅</p>
<p>~ Greg</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AppleWatchAmmeter (128 pts)]]></title>
            <link>https://github.com/jp3141/AppleWatchAmmeter</link>
            <guid>41508752</guid>
            <pubDate>Wed, 11 Sep 2024 07:01:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/jp3141/AppleWatchAmmeter">https://github.com/jp3141/AppleWatchAmmeter</a>, See on <a href="https://news.ycombinator.com/item?id=41508752">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">AppleWatchAmmeter</h2><a id="user-content-applewatchammeter" aria-label="Permalink: AppleWatchAmmeter" href="#applewatchammeter"></a></p>
<p dir="auto">Turn your Apple Watch or any watch with an accessible magnetometer into an ammeter to measure DC currents.</p>
<p dir="auto">Apple Watches newer than Series 5 which have a compass also contain a magnetometer. The magnetometer is also sensitive to magnetic fields from nearby currents.</p>
<p dir="auto">This demonstration uses a coil of wire around the watch to alter the magnetic field sensed. A circular coil of wire with N turns and a diameter D will generate a magnetic field of B = u0.I/D (u0 is defined to be 4.π.10^-7); so for a watch with a diameter of about 48 mm (approximately Apple Watch 5), 5 turns with 1 A will generate a field of 5 * 4.π.10^-7 * 1/0.048 = 131 uT (or 1.3 gauss). Because the magnetometer is not centered in the coil (it's usually in the very bottom right corner of the watch), the actual sensitivity is a bit lower; 100 uT/A is a reasonable approximation that can be improved by calibrating.</p>
<p dir="auto">An app could easily be written to perform some calibration and zero offset as well as display current in Amperes. however nearly any app that can display raw magnetometer data can be used. I use 'Sensor-App' which is free. Note that you can only detect DC currents; the magnetometer is too slow to react to AC (e.g. household power) currents.</p>
<p dir="auto">In this demonstration, a 5-turn coil can show curent changes of about 10 mA (about 1 uT in the Z direction).</p>
<p dir="auto">The Earth's background magnetic field is around 60 uT (not only in a North-South direction). With a 5-turn winding, each 1 A generates an additional ~ 100 uT in the Z direction; there is some noise in the readings, but with care, 10 mA (1 uT) changes can be discerned.</p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/7691273/365412852-7a0e5de4-8679-49e0-82f7-6bd6a99a204e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNzYxMDQsIm5iZiI6MTcyNjA3NTgwNCwicGF0aCI6Ii83NjkxMjczLzM2NTQxMjg1Mi03YTBlNWRlNC04Njc5LTQ5ZTAtODJmNy02YmQ2YTk5YTIwNGUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTczMDA0WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MDQzMjFlMGE1OTNmNGE1NTU2YjRiNWQ0NjU4NThjZTFkYTA5YjAwNTg1NTJiOTM1ZGRjYzBhMmQ3M2E3OTczMyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.h_lD85_fPXR6nYdVzt5xsFIu1wb3kD_3sD2MJvlmAqM"><img width="483" alt="Watch Ammeter" src="https://private-user-images.githubusercontent.com/7691273/365412852-7a0e5de4-8679-49e0-82f7-6bd6a99a204e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNzYxMDQsIm5iZiI6MTcyNjA3NTgwNCwicGF0aCI6Ii83NjkxMjczLzM2NTQxMjg1Mi03YTBlNWRlNC04Njc5LTQ5ZTAtODJmNy02YmQ2YTk5YTIwNGUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTczMDA0WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MDQzMjFlMGE1OTNmNGE1NTU2YjRiNWQ0NjU4NThjZTFkYTA5YjAwNTg1NTJiOTM1ZGRjYzBhMmQ3M2E3OTczMyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.h_lD85_fPXR6nYdVzt5xsFIu1wb3kD_3sD2MJvlmAqM"></a>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/7691273/365460942-f63312f5-ba97-4c33-8e38-28b9935bb610.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNzYxMDQsIm5iZiI6MTcyNjA3NTgwNCwicGF0aCI6Ii83NjkxMjczLzM2NTQ2MDk0Mi1mNjMzMTJmNS1iYTk3LTRjMzMtOGUzOC0yOGI5OTM1YmI2MTAucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTczMDA0WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9M2NkODI3M2IxNDI0NTI2YmQ5M2FkMWVlN2NlZDJkZGFkMTRlODI4YTczMjFlZmQ5MzhkZmQyOTFmMWRhZTNkOSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.NEAEDPhVk_FOi8Bwx00Y3CwBaxKYmgcV72SWI753VtU"><img width="998" alt="Coil holder with wires" src="https://private-user-images.githubusercontent.com/7691273/365460942-f63312f5-ba97-4c33-8e38-28b9935bb610.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNzYxMDQsIm5iZiI6MTcyNjA3NTgwNCwicGF0aCI6Ii83NjkxMjczLzM2NTQ2MDk0Mi1mNjMzMTJmNS1iYTk3LTRjMzMtOGUzOC0yOGI5OTM1YmI2MTAucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTczMDA0WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9M2NkODI3M2IxNDI0NTI2YmQ5M2FkMWVlN2NlZDJkZGFkMTRlODI4YTczMjFlZmQ5MzhkZmQyOTFmMWRhZTNkOSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.NEAEDPhVk_FOi8Bwx00Y3CwBaxKYmgcV72SWI753VtU"></a>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Possibly all the ways to get loop-finding in graphs wrong (144 pts)]]></title>
            <link>https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/findloop/</link>
            <guid>41508355</guid>
            <pubDate>Wed, 11 Sep 2024 05:47:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/findloop/">https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/findloop/</a>, See on <a href="https://news.ycombinator.com/item?id=41508355">Hacker News</a></p>
Couldn't get https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/findloop/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[I wish I didn't miss the '90s-00s internet (178 pts)]]></title>
            <link>https://rohan.ga/blog/early-internet/</link>
            <guid>41508040</guid>
            <pubDate>Wed, 11 Sep 2024 04:32:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rohan.ga/blog/early-internet/">https://rohan.ga/blog/early-internet/</a>, See on <a href="https://news.ycombinator.com/item?id=41508040">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <h2 id="about-me">about me</h2>
<p>I am 18, born in 2006. This is generally a good thing as I am in the prime of life currently. I am not one of those people who think they were “born in the wrong decade”, I think I was born at the perfect time to take advantage of superlinearly growing technological advancements.</p>
<h2 id="the-internet-today">the internet today</h2>
<p>I generally greatly dislike social media, although I am an avid user of it. When social media caught on, the people running these companies were tasked to make it profitable. In doing this, social media got completely ruined.</p>
<p>Our data got commodified[1], our attention got commodified, and a substantive part of who we say we are got commodified. This, in general, has led to a degradation in the quality of the internet.</p>
<p>They basically made social media like a drug, as addictive as possible. They do this by promoting FOMO and comparison in Instagram’s case. Instagram is a game, it is extremely performative. People carefully curate each part of their insta to give certain impressions.</p>
<p>What’s the ratio of followers to following you have? Are your story highlights organized and “aesthetic”? What reels are you liking?</p>
<p>There are a lot of “rules” in this game, which are enforced by social “ins” and mutual respect.</p>
<p>When it comes to shortform content, hundreds of people compete for slivers of our attention. We are not agents in this, they are just presented to us. Completely depersonalized. They are forgotten within seconds. Ask someone watching tiktok to describe the previous tiktoks they just watched, they would be hard pressed to tell you more than a few minutes in the past. Something about tiktok is unusually addictive. all the while providing absolutely no value.</p>
<p>It has become so shallow, you can tell almost nothing about who someone actually is through Instagram or tiktok. You can only tell how they want to portray themselves to the general population and, by how they organize their profile, if they are eligible to be a part of your social circle.</p>
<h2 id="the-appeal-of-simplicity">the appeal of simplicity</h2>
<p>I wish I was around when people had blogs or even myspace. This era was deeply personal and creative. Most writing on the internet was individual, not written in search of “SEO” or profit but driven by the need and want of people to share knowledge–pure curiosity.</p>
<p>I want the thrill of finding new websites searching through web rings; when the web was truly the wild west and not another arm of control by mega corporations.</p>
<p>This is also reflective in the quality of content. There was little incentive to lie, to manipulate truth, and each blog entry or piece of information was tied to identity. (except in the cases of anonymity).</p>
<p>Even the content written by normal people for normal people has been commodified by sites like reddit and quora. What happened to an old fashioned forums or even usenet groups? (granted, especially for cars and hacking, there still exists plenty of forums)</p>
<p>Also, websites just simply looked cooler. Occasionally I scroll on the geocities archive and wonder, how did we get here?  What happened to the patterned backgrounds, the bright maximalist jpegs and gifs?  This is sort of contradictory to my website, as it’s almost annoyingly minimalist, but this more has to do with social norms and simplicity. Having a personal blog is already out of the ordinary, but the simple design and clear technical direction/theme gives me an excuse. I also am not that personal on here, because only a few of my friends frequent my blogs, and I want the site to be as simple and to the point as possible if a random person wants to know who I am.</p>
<h2 id="a-niche-resurgence">a niche resurgence</h2>
<p>There is <a href="https://neocities.org/">neocites</a>, and a small community of people who share this philosophy about the web (and that are relatively young), but I have not met anyone my age, in the real world, that would choose to do something like this.</p>
<p>The majority of people (my age) today would think sites like those (and, by extension, their creators) are weird.</p>
<p>[1] you can substitute “commodified” with “bought and sold”</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The magic of DC-DC voltage conversion (306 pts)]]></title>
            <link>https://lcamtuf.substack.com/p/the-magic-of-dc-dc-voltage-conversion</link>
            <guid>41507879</guid>
            <pubDate>Wed, 11 Sep 2024 03:53:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lcamtuf.substack.com/p/the-magic-of-dc-dc-voltage-conversion">https://lcamtuf.substack.com/p/the-magic-of-dc-dc-voltage-conversion</a>, See on <a href="https://news.ycombinator.com/item?id=41507879">Hacker News</a></p>
Couldn't get https://lcamtuf.substack.com/p/the-magic-of-dc-dc-voltage-conversion: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[How economical is your local Taco Bell? (213 pts)]]></title>
            <link>https://taconomical.com</link>
            <guid>41507563</guid>
            <pubDate>Wed, 11 Sep 2024 02:39:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://taconomical.com">https://taconomical.com</a>, See on <a href="https://news.ycombinator.com/item?id=41507563">Hacker News</a></p>
Couldn't get https://taconomical.com: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Building the same app using various web frameworks (152 pts)]]></title>
            <link>https://eugeneyan.com/writing/web-frameworks/</link>
            <guid>41507271</guid>
            <pubDate>Wed, 11 Sep 2024 01:13:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eugeneyan.com/writing/web-frameworks/">https://eugeneyan.com/writing/web-frameworks/</a>, See on <a href="https://news.ycombinator.com/item?id=41507271">Hacker News</a></p>
Couldn't get https://eugeneyan.com/writing/web-frameworks/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Arvo Pärt's Journey (112 pts)]]></title>
            <link>https://www.plough.com/en/topics/culture/music/arvo-parts-journey</link>
            <guid>41506218</guid>
            <pubDate>Tue, 10 Sep 2024 22:24:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.plough.com/en/topics/culture/music/arvo-parts-journey">https://www.plough.com/en/topics/culture/music/arvo-parts-journey</a>, See on <a href="https://news.ycombinator.com/item?id=41506218">Hacker News</a></p>
Couldn't get https://www.plough.com/en/topics/culture/music/arvo-parts-journey: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Chai-1 Defeats AlphaFold 3 (256 pts)]]></title>
            <link>https://www.chaidiscovery.com/blog/introducing-chai-1</link>
            <guid>41506157</guid>
            <pubDate>Tue, 10 Sep 2024 22:13:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.chaidiscovery.com/blog/introducing-chai-1">https://www.chaidiscovery.com/blog/introducing-chai-1</a>, See on <a href="https://news.ycombinator.com/item?id=41506157">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-framer-name="Content" data-framer-component-type="RichTextContainer"><p>We’re excited to release Chai-1, a new multi-modal foundation model for molecular structure prediction that performs at the state-of-the-art across a variety of tasks relevant to drug discovery. Chai-1 enables unified prediction of proteins, small molecules, DNA, RNA, covalent modifications, and more.</p><p>The model is available for free via a <a href="https://lab.chaidiscovery.com/" target="_blank" rel="noopener">web interface</a>, including for commercial applications such as drug discovery. We are also releasing the model weights and inference code as a <a href="https://github.com/chaidiscovery/chai-lab" target="_blank" rel="noopener">software library</a> for non-commercial use.</p><h2>A frontier model for biomolecular interactions</h2><p>We tested Chai-1 across a large number of benchmarks, and found that the model achieves a 77% success rate on the PoseBusters benchmark (vs. 76% by AlphaFold3), as well as an Cα LDDT of 0.849 on the CASP15 protein monomer structure prediction set (vs. 0.801 by ESM3-98B).</p><p><img alt="" data-framer-asset="data:framer/asset-reference,nAGHKUD9XOHtavXDEpA6XH8Wo4.png" data-framer-height="896" data-framer-width="1814" height="448" src="https://framerusercontent.com/images/nAGHKUD9XOHtavXDEpA6XH8Wo4.png" width="907"></p><p>Unlike many existing structure prediction tools which require multiple sequence alignments (MSAs), Chai-1 can also be run in single sequence mode without MSAs while preserving most of its performance. The model can fold multimers more accurately (69.8%) than the MSA-based AlphaFold-Multimer model (67.7%), as measured by the DockQ acceptable prediction rate. Chai-1 is the first model that’s able to predict multimer structures using single-sequences alone (without MSA search) at AlphaFold-Multimer level quality.</p><p>For more information, and a comprehensive analysis of the model, read our <a href="https://chaiassets.com/chai-1/paper/technical_report_v1.pdf" target="_blank" rel="noopener">technical report</a>.</p><h2><strong>A natively multi-modal foundation model</strong></h2><p>In addition to its frontier modeling capabilities directly from sequences, Chai-1 can be prompted with new data, e.g. restraints derived from the lab, which boost performance by double-digit percentage points.&nbsp;We explore a number of these capabilities in our technical report, such as epitope conditioning – using even a handful of contacts or pocket residues (potentially derived from lab experiments) doubles antibody-antigen structure prediction accuracy, making antibody engineering more feasible using AI.</p><p><img alt="" data-framer-asset="data:framer/asset-reference,icSSrTXU76WdTzKi30rSK70UY.png" data-framer-height="1962" data-framer-width="4716" height="981" src="https://framerusercontent.com/images/icSSrTXU76WdTzKi30rSK70UY.png" width="2358"></p><h2><strong>Releasing the model for all</strong></h2><p>We are releasing Chai-1 via a web interface for free, including for commercial applications such as drug discovery. We are also releasing the code for Chai-1 for non-commercial use as a software library. We believe that when we build in partnership with the research and industrial communities, the entire ecosystem benefits.</p><p>Try Chai-1 for yourself by visiting <a href="http://lab.chaidiscovery.com/" rel="noopener">lab.chaidiscovery.com</a>, or run it from our GitHub repository at <a href="https://github.com/chaidiscovery/chai-lab" target="_blank" rel="noopener">github.com/chaidiscovery/chai-lab</a>.</p><h2><strong>What's next?</strong></h2><p>The team comes from pioneering research and applied AI companies such as OpenAI, Meta FAIR, Stripe, and Google X. Collectively, we have played pivotal roles in the advancement of research in AI for biology. The majority of the team has been Head of AI at leading drug discovery companies, and has collectively helped advance over a dozen drug programs.&nbsp;</p><p>Chai-1 is the result of a few months of intense work, and yet we are only at the starting line. Our broader mission at Chai Discovery is to transform biology from science into engineering. To that end, we'll be building further AI foundation models that predict and reprogram interactions between biochemical molecules, the fundamental building blocks of life. We’ll have more to share on this soon.</p><p>We are grateful for the partnership of <a href="https://www.dimensioncap.com/" rel="noopener">Dimension</a>, <a href="https://www.thrivecap.com/" rel="noopener">Thrive Capital</a>, <a href="https://openai.com/" rel="noopener">OpenAI</a>, <a href="https://www.conviction.com/" rel="noopener">Conviction</a>, <a href="https://neo.com/" rel="noopener">Neo</a>, Lachy Groom, and <a href="https://www.amplifypartners.com/" rel="noopener">Amplify Partners</a>, as well as Anna and Greg Brockman, Blake Byers, Fred Ehrsam, Julia and Kevin Hartz, Will Gaybrick, David Frankel, R. Martin Chavez, and many others.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Flipper Zero Gets Major Firmware Update, Can Eavesdrop on Walkie-Talkies (214 pts)]]></title>
            <link>https://www.pcmag.com/news/flipper-zero-gets-major-firmware-update</link>
            <guid>41505670</guid>
            <pubDate>Tue, 10 Sep 2024 21:15:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pcmag.com/news/flipper-zero-gets-major-firmware-update">https://www.pcmag.com/news/flipper-zero-gets-major-firmware-update</a>, See on <a href="https://news.ycombinator.com/item?id=41505670">Hacker News</a></p>
Couldn't get https://www.pcmag.com/news/flipper-zero-gets-major-firmware-update: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Rust in illumos (122 pts)]]></title>
            <link>https://wegmueller.it/blog/posts/2024-09-02-rust-on-illumos</link>
            <guid>41505665</guid>
            <pubDate>Tue, 10 Sep 2024 21:15:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wegmueller.it/blog/posts/2024-09-02-rust-on-illumos">https://wegmueller.it/blog/posts/2024-09-02-rust-on-illumos</a>, See on <a href="https://news.ycombinator.com/item?id=41505665">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	<article>

<p>With the recent rust in Linux events in the last couple of days, It’s a good time to write up Rust in illumos. Both to spread the word a bit and also to set expectations for both sides (Rust and illumos/OpenIndiana devs) what is currently possible and what work would need to be invested to make things smooth. And also to let the rust community know about what illumos people were talking about. </p>
<p>What most of the talk currently is about, are the technical details. But we must not leave the social aspects out of it. Software distributions are not made by lone walkers but by groups of people. Bringing in a new language means facilitating change. And that means there are more topics to discuss than just API design. We are talking about impacts on the whole software lifecycle.</p>
<h2>Linux DRM API design</h2>
<p>Looking at the things people like Asahi Lina want to address inside the Linux Kernel with the Rust bindings and how she describes the issues with Locking I get the feeling something with DRM is not consistent. Looking into our code and our <a href="https://illumos.org/books/wdd/mt-17026.html#mt-17026" rel="nofollow">docs</a> for this topic I can already see that things are more complex in the whole kernel than just “do X” We have some general recommendations but it’s a case by case issue when looking at it over the whole kernel sources.  When looking at the illumos DRM fork I can see that a lot of X11 code seems to have wandered into the Kernel. And not many files are created by the same people. I am not surprised that this has gotten messy. The illumos kernel docs talk about multiple cases where Data can be accessed and different needs for locking with them. I assume the Linux kernel has similar cases, hence at least mentioning what locks the driver needs to do and which the DRM API does needs to be documented. </p>
<h2>Rust in the illumos Kernel</h2>
<p>The development model of illumos is different from Linux and thus there are no Rust drivers in upstream illumos yet. But that is to be expected for new things. In our model, we take the time to mature new tech in a fork, and for rust, the Oxide fork has taken that role. In there, we have several drivers for the Oxide Networking stack that are in rust. Based on that some experience could be gained. The current state is, that making things in Rust takes more time compared to C for a trained developer. There is Bindgen which has an overhead to learn and use and there is Language training that people need to become productive. It’s one thing to understand the language but becoming productive usually means quite a bit more training on top of that. So far userland tools have proven to be small enough to get to a working result within a reasonable time. OPTE and fast path Networking exist but they still need an integration into the MAC network framework. So more work needs to happen on that front. Smaller drivers are also a possibility to do I am currently unaware of somebody that had an interest though.</p>
<h2>The lack of Systems package manager support in rust</h2>
<p>Ever since npm started the packaging ecosystem has changed drastically in focus. Where package managers originally installed Software as a System they now shifted to install software on different Systems in the same way. This also changed how responsibilities are handled and how people now develop software. Distributions have become obsolete and are not of interest to people. And that leads to a couple of interesting issues. Because at the end of the day, you need a distribution to start using a Computer. And people that make distributions also need to make some income for that work. But software developers now only need to focus on their software for things to work. Compiling from source has become trivial. But only if you follow the software developer’s workflow and know the tools. For people needing to read themselves into how cargo works, some quirks make sense for software developer workflows but are a hindrance for system development workflows. Keep in mind these are different requirements than the ones the kernel needs. Systems Distributors usually do the following:</p>
<ul><li>Download the sources and make an archive with all the patches they want to bring</li>
<li>patch the sources from the patch files</li>
<li>build the binaries </li>
<li>pack them into an archive for distribution (depends on the package manager)</li></ul>
<p>Several of cargo’s features are now counterintuitive and Are the ones I find people criticising. Cargo wants to secure and check that the vendor folder has not been modified. There is no central vendor folder.  Rust software can easily have upwards of 100 dependencies and micro dependencies. So if people want audit software it becomes a lot of work. I don’t mind. I am long enough in this industry that I have lived through the Java dependency problems on Linux systems. Cargo improves upon that situation. Several other OS’s believe that there needs to be a clear differentiation between system and Third-party software. And I agree with that. The Debian approach of putting everything into one system and only having one version of each dependency is not feasible for a huge international community of people that develop together but never meet. Most of the time the devs do not talk to each other at all. I am personally of the opinion, that most of rust builds and their tier system works. And I am happy to rely on that and not just my tools. As a side note. None of this topic requires Harsh words. Systems packagers and Software developers (especially the folks in Debian and traditional Linux distros) have very different ways of thinking and cargo is not a tool for system packagers. It would be nice if it grew some support for that but that does not require harsh words. System source repos like illumos-gate can easily vendor and produce binaries with a small list of dependencies to deliver the binaries via a Package manager. The tools work.</p>
<h2>Missing support for shared libraries</h2>
<p>A feature not wanted by Software developers, developing for multiple platforms. For systems packagers, this is a required feature. Shared libraries delimit the boundary between two responsibilities. And if those people coordinate then that works well. It becomes a system. There are limits to where this can happen. So I don’t know what the perfect solution is. If shared libraries are needed at all or if that feature can fade out. But it is worth a try to build systems and to give people the possibility to do so. So I would wish Rust and Cargo gained shared library support so that we can build such componentized systems easily.</p>
<h2>An invite</h2>
<p>With all this said I would love to have some more rust folks in the illumos community. And I know this has been expressed by others as well. Userland tools are easy to make in Rust and I for one would love to have people help me with the new <a href="https://github.com/Toasterson/illumos-installer" rel="nofollow">Installer</a> and with the package <a href="https://github.com/toasterson/forge" rel="nofollow">Forge</a> We have gained rust crates for our unique API’s such as <a href="https://github.com/illumos/libcontract-sys" rel="nofollow">libcontract</a> Our new image builder for ISO’s is in rust <a href="https://github.com/illumos/image-builder" rel="nofollow">image-builder</a> and we are always looking for driver developers. Check out the <a href="https://github.com/orgs/illumos/repositories?type=all" rel="nofollow">illumos</a> for all repos Including a config manager. Want to write complete Wifi kernel parts? A small serial Adapter that you have lying around? Want to integrate with an existing Kernel without rewriting it? If anything of that makes you want to head over to <a href="https://illumos.org/books/wdd/preface.html#preface" rel="nofollow">https://illumos.org/books/wdd/preface.html#preface</a> and <a href="https://illumos.org/books/dev/" rel="nofollow">https://illumos.org/books/dev/</a> or Simply just interests you. Then we would love to have your contribution.</p>
<p>Hope to talk to some folks on Socials and email</p>
<p>– Toasty</p></article>
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lottery Simulator (2023) (186 pts)]]></title>
            <link>https://perthirtysix.com/tool/lottery-simulator</link>
            <guid>41505593</guid>
            <pubDate>Tue, 10 Sep 2024 21:09:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://perthirtysix.com/tool/lottery-simulator">https://perthirtysix.com/tool/lottery-simulator</a>, See on <a href="https://news.ycombinator.com/item?id=41505593">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p>A New Daily Game!</p><p> We built a daily poll game called the <a href="https://perthirtysix.com/communal-plot-daily-poll">Communal Plot</a>! We hope it's a fun way to engage with the community and see how your opinions stack up. Check it out and let us know what you think! </p></div><p> Every so often, a lottery jackpot will get so high that I'll hear about it on the news or from a friend. When this happens, I immediate start wondering about two things: what I would do with hundreds of millions of dollars and what the odds of winning really are. </p><p> While major lotteries publish some of this information, I wanted to build something that would make it easier to play around with the data in a more exploratory way. With that, here is the PerThirtySix Lottery Simulator! </p><p> This tool is broken up into two sections: Setup and Simulation. The Setup section lets explore probabilities for an existing American lottery or for your own lottery with custom rules. The Simulation section lets you pick some numbers and play up to thousands of tickets per second, and visualizes the returns for you. Note that this tool makes some simplifying assumptions, like that there's only one jackpot winner and that taxes are ignored. </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why Not Comments (221 pts)]]></title>
            <link>https://buttondown.com/hillelwayne/archive/why-not-comments/</link>
            <guid>41505389</guid>
            <pubDate>Tue, 10 Sep 2024 20:52:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://buttondown.com/hillelwayne/archive/why-not-comments/">https://buttondown.com/hillelwayne/archive/why-not-comments/</a>, See on <a href="https://news.ycombinator.com/item?id=41505389">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                
                    <date>
                        
                            September 10, 2024
                        </date>
                
                
                
                    <h2>
                        Why not "why not" comments? Not why "not comments"
                    </h2>
                

                

                
                    
                        <h2>Logic For Programmers v0.3</h2>
<p><a href="https://leanpub.com/logic/" target="_blank">Now available</a>! It's a light release as I learn more about formatting a nice-looking book. You can see some of the differences between v2 and v3 <a href="https://bsky.app/profile/hillelwayne.com/post/3l3egdqnqj62o" target="_blank">here</a>.</p>
<h2>Why Not Comments</h2>
<p>Code is written in a structured machine language, comments are written in an expressive human language. The "human language" bit makes comments more expressive and communicative than code. Code has a limited amount of something <em>like</em> human language contained in identifiers. "Comment the why, not the what" means to push as much information as possible into identifiers. <a href="https://buttondown.com/hillelwayne/archive/3866bd6e-22c3-4098-92ef-4d47ef287ed8" target="_blank">Not all "what" can be embedded like this</a>, but a lot can.</p>
<p>In recent years I see more people arguing that <em>whys</em> do not belong in comments either, that they can be embedded into <code>LongFunctionNames</code> or the names of test cases. Virtually all "self-documenting" codebases add documentation through the addition of identifiers.<sup id="fnref:exception"><a href="#fn:exception">1</a></sup></p>
<p>So what's something in the range of human expression that <em>cannot</em> be represented with more code?</p>
<p>Negative information, drawing attention to what's <em>not</em> there. The "why nots" of the system.</p>
<h3>A Recent Example</h3>
<p>This one comes from <em>Logic for Programmers</em>. For convoluted technical reasons the epub build wasn't translating math notation (<code>\forall</code>) into symbols (<code>∀</code>). I wrote a script to manually go through and replace tokens in math strings with unicode equivalents. The easiest way to do this is to call <code>string = string.replace(old, new)</code> for each one of the 16 math symbols I need to replace (some math strings have multiple symbols).</p>
<p>This is incredibly inefficient and I could instead do all 16 replacements in a single pass. But that would be a more complicated solution. So I did the simple way with a comment:</p>
<div><pre><span></span><code>Does 16 passes over each string
BUT there are only 25 math strings in the book so far and most are &lt;5 characters.
So it's still fast enough.
</code></pre></div>
<p>You can think of this as a "why I'm using slow code", but you can also think of it as "why not fast code". It's calling attention to something that's <em>not there</em>.</p>
<h3>Why the comment</h3>
<p>If the slow code isn't causing any problems, why have a comment at all?</p>

<p>Well first of all the code might be a problem later. If a future version of <em>LfP</em> has hundreds of math strings instead of a couple dozen then this build step will bottleneck the whole build. Good to lay a signpost now so I know exactly what to fix later.</p>
<p>But even if the code is fine forever, the comment still does something important: it shows <em>I'm aware of the tradeoff</em>. Say I come back to my project two years from now, open <code>epub_math_fixer.py</code> and see my terrible slow code. I ask "why did I write something so terrible?" Was it inexperience, time crunch, or just a random mistake?</p>
<p>The negative comment tells me that I <em>knew</em> this was slow code, looked into the alternatives, and decided against optimizing. I don't have to spend a bunch of time reinvestigating only to come to the same conclusion. </p>
<h2>Why this can't be self-documented</h2>
<p>When I was first playing with this idea, someone told me that my negative comment isn't necessary, just name the function <code>RunFewerTimesSlowerAndSimplerAlgorithmAfterConsideringTradeOffs</code>. Aside from the issues of being long, not explaining the tradeoffs, and that I'd have to change it everywhere if I ever optimize the code... This would make the code <em>less</em> self-documenting. It doesn't tell you what the function actually <em>does</em>.</p>
<p>The core problem is that function and variable identifiers can only contain one clause of information. I can't store "what the function does" and "what tradeoffs it makes" in the same identifier. </p>
<p>What about replacing the comment with a test. I guess you could make a test that greps for math blocks in the book and fails if there's more than 80? But that's not testing <code>EpubMathFixer</code> directly. There's nothing in the function itself you can hook into. </p>
<p>That's the fundamental problem with self-documenting negative information. "Self-documentation" rides along with written code, and so describes what the code is doing. Negative information is about what the code is <em>not</em> doing. </p>
<h3>End of newsletter speculation</h3>
<p>I wonder if you can think of "why not" comments as a case of counterfactuals. If so, are "abstractions of human communication" impossible to self-document in general? Can you self-document an analogy? Uncertainty? An ethical claim?</p>

                    
                

                
                    <p><em>If you're reading this on the web, you can subscribe <a href="https://buttondown.com/hillelwayne" target="_blank">here</a>. Updates are once a week. My main website is <a href="https://www.hillelwayne.com/" target="_blank">here</a>.</em></p>
                

            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Some of us like "interdiff" code review (175 pts)]]></title>
            <link>https://gist.github.com/thoughtpolice/9c45287550a56b2047c6311fbadebed2</link>
            <guid>41505266</guid>
            <pubDate>Tue, 10 Sep 2024 20:39:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gist.github.com/thoughtpolice/9c45287550a56b2047c6311fbadebed2">https://gist.github.com/thoughtpolice/9c45287550a56b2047c6311fbadebed2</a>, See on <a href="https://news.ycombinator.com/item?id=41505266">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="file-index-md">
    <article itemprop="text">
<p dir="auto">I am currently in the process of evaluating <a href="https://www.gerritcodereview.com/" rel="nofollow">Gerrit Code Review</a> for work. Gerrit is an open source code review tool, as the name might imply, and works with Git repositories. What that means is that given some repository, you can:</p>
<ol dir="auto">
<li>Write patches to the codebase, and submit them for review</li>
<li>Other people look at the code you wrote</li>
<li>They leave comments telling you to fix various problems</li>
<li>You might even fix some of them</li>
<li>Code review is a pretty good idea, in general</li>
<li>If it's open source, someone might merge your code, and you let out a sigh of relief, knowing that you are off the hook and have increased their responsibilities and technical debt for all time</li>
<li>If it's open source, you then disappear into an eternal void, never to be seen or heard from again by the maintainer</li>
</ol>
<p dir="auto">There are many tools you can use to increase the burden on all future developers like this, such as:</p>
<ul dir="auto">
<li>Gerrit</li>
<li>GitHub (the website you are on)</li>
<li>Phabricator (RIP)</li>
<li>Uploading <code>.patch</code> files into a bug tracker and waiting until the maintainer sees it, downloads it, and reads it</li>
<li>Emailing someone via <code>git send-email</code> telling them to pull from a <code>git://</code> URL that is hosted on a 7 year old "server" somewhere in your house and then reading the email they send back</li>
<li>Implainting the idea in your coworkers head with a long discussion so that they end up implementing it while you do something else</li>
</ul>
<p dir="auto">I have done all of these, both as the person writing <em>and</em> reviewing the patches, and they are all workable to various degrees.</p>
<p dir="auto">Some open source projects also use Gerrit, such as the Go programming language. Some, like KDE and LLVM, used Phabricator. We have entertained the idea of using Gerrit for <a href="https://github.com/martinvonz/jj">Jujutsu</a>. Linux, the kernel itself, uses the email workflow in a particular and special way. Most projects use GitHub, because it is easy and has zero activation energy.</p>
<p dir="auto">But why are these tools important? Doesn't everyone just use GitHub? Isn't that good enough? Are all these really the same? No, they are not.</p>
<p dir="auto"><h2 dir="auto">The ideal patch series</h2><a id="user-content-the-ideal-patch-series" aria-label="Permalink: The ideal patch series" href="#the-ideal-patch-series"></a></p>
<p dir="auto">The following image indicates a series of 3 patches, to be submitted to a software project. They have a typical child/parent relationship, like any linear sequence of commits in Git would have. We call this a <em>series</em> because it isn't just a <em>patch</em>. It's a "series" of "three" "patches." Get it?</p>
<p dir="auto">This series represents, believe it or not, something close to the <em>ideal</em> patch series — for the author, the reviewer, and the future schmuck who will inherit your codebase. You can ignore the exact numbers for a second and whether 500LOC is too much (we'll get back to it.)</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/3416/304284460-8c866c0e-0d8e-43d5-90cb-647c29799cc2.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDI4NDQ2MC04Yzg2NmMwZS0wZDhlLTQzZDUtOTBjYi02NDdjMjk3OTljYzIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9M2E0NWVlMmMyY2E2ZGE5NGNmZjY5ZjJiYzY1MTAyZjMwZTA0ZGZkNDdkMDkzMDNlMjk5NmFiZWY0ZDAwMDFmMyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.gbNiSp7r5CkswjeQBX_lP_WktGXwLVsUL8-sv2mLIUM"><img width="510" alt="image" src="https://private-user-images.githubusercontent.com/3416/304284460-8c866c0e-0d8e-43d5-90cb-647c29799cc2.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDI4NDQ2MC04Yzg2NmMwZS0wZDhlLTQzZDUtOTBjYi02NDdjMjk3OTljYzIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9M2E0NWVlMmMyY2E2ZGE5NGNmZjY5ZjJiYzY1MTAyZjMwZTA0ZGZkNDdkMDkzMDNlMjk5NmFiZWY0ZDAwMDFmMyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.gbNiSp7r5CkswjeQBX_lP_WktGXwLVsUL8-sv2mLIUM"></a>
</p>
<ol dir="auto">
<li>You're going to do a "thing", but notice you can clean up some code, coincidentally.</li>
<li>You write a bunch of code — in this case, you add a new API to the codebase. Maybe it's a fast data structure, intended to replace a slower one.</li>
<li>You migrate the users of the old API to the new API. Your program is now faster.</li>
</ol>
<p dir="auto">The most important point is that changes are:</p>
<ol dir="auto">
<li>Logically separated. And,</li>
<li>I can read the code <em>as if</em> each patch was individually applied in the series. So I start with the first patch, then the second, then the third. The series represents an <em>evolution of the code</em>, step by step.</li>
</ol>
<p dir="auto">The specifics here aren't too important. Sometimes, there will be no refactoring. Sometimes, it will be 100 lines. Sometimes, it will be 500 lines because it's a core API change and you have to break every call site and fix them. And so on and so forth.</p>
<p dir="auto">But even if this is the ideal series in a logical sense, it still needs to go through code review. Which brings us to...</p>
<p dir="auto"><h2 dir="auto">The GitHub school of code review: "diff soup"</h2><a id="user-content-the-github-school-of-code-review-diff-soup" aria-label="Permalink: The GitHub school of code review: &quot;diff soup&quot;" href="#the-github-school-of-code-review-diff-soup"></a></p>
<p dir="auto">GitHub encourages you to do code review by <em>adding new commits on top of the original commits</em> to address reviews.</p>
<p dir="auto">GitHub encourages this both explicitly but also implicitly, for a few reasons and due to the way the UX is designed.</p>
<p dir="auto">Two of your coworkers, Alice and Bob, leave comments on the GitHub review. They tell you to make various fixes and adjustments, which you dutifully perform.</p>
<p dir="auto">Also, you didn't add tests to the new API yet; it worked before, but everyone wants tests of course. So you need to add those on top as well.</p>
<p dir="auto">Also, you made a small tweak after all that, a change to the implementation API, which is very small. Maybe you noticed a simple tweak in your fast, cutting edge data structure. Surely it can't a chain reaction that leads massive regression in production that will cause a pager to light up at 3am, right? It's only a <code>+/- 2 lines</code> delta! That's silly.</p>
<p dir="auto">This is now what your commit series has become, and this is what you will push to your branches on GitHub for review. The original 3 commits, then several "address review" commits (orange), and finally your regression (red).</p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/3416/304287432-c4e37fa8-111e-4323-8834-e9b1973181eb.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDI4NzQzMi1jNGUzN2ZhOC0xMTFlLTQzMjMtODgzNC1lOWIxOTczMTgxZWIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZjRjN2RkMTQ4MjNlNmNmNmZhNTI1NGFhYzI3NTJkZGU1OWYyZTMyYWJlZjU3MTBjNmE3ODlmZGJmZmExZDY5YSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.DB6z0XIEnD48bdqKjHa99grIRZkeApsVbjtLde4bCiA"><img width="1218" alt="image" src="https://private-user-images.githubusercontent.com/3416/304287432-c4e37fa8-111e-4323-8834-e9b1973181eb.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDI4NzQzMi1jNGUzN2ZhOC0xMTFlLTQzMjMtODgzNC1lOWIxOTczMTgxZWIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZjRjN2RkMTQ4MjNlNmNmNmZhNTI1NGFhYzI3NTJkZGU1OWYyZTMyYWJlZjU3MTBjNmE3ODlmZGJmZmExZDY5YSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.DB6z0XIEnD48bdqKjHa99grIRZkeApsVbjtLde4bCiA"></a>
<p dir="auto">The black lines represent edges in the commit graph, i.e. the things that show up in <code>git log</code>. While the dotted colored lines represent the "implicit dependencies" caused by review. Bob for example told you to change one extra call site in the third commit (blue dotted line) and one thing in the refactored code (purple dotted line). Alice however told you to fix something in the API you added, <em>and</em> fix something in the refactoring commit (purple and green dotted lines.) Your freshly written tests are really just related to your lack of tests in the new API (green dotted line.) Finally, the <code>"minor"</code> change is a tweak to the new API code (red dotted line).</p>
<p dir="auto">This is what your code has become, and this <em>sucks</em>. It sucks because:</p>
<ol dir="auto">
<li>The implicit relationship between the "fix review" commits and the original is not really visible. Only the actual parent/child relationship between Git commits remains, but that isn't the whole story, because now you don't know <em>why</em> these commits are related. (This is essentially a loss of "provenance.")
<ul dir="auto">
<li>Notice how all the original commits were a single color, because they had one "purpose." But the orange commits have <em>multiple</em> arrows, with different colors, establishing implicit relationships. The fact that a single orange commit touches multiple original commits means that the conceptual model is now more complex; some commits represent single changes, while others might address multiple changes at once.</li>
<li>You can fix this by having each Orange commit only address exactly one complaint-per-change, i.e. only one dotted line leaving it. However, now you have 6 fixup commits instead of 4.</li>
</ul>
</li>
<li><code>git blame</code> now sucks completely because changes overlap. <code>blame</code> works on the level of a line, so if <code>"fix alice review"</code> changes a single bit in a line that came from <code>"minor refactoring"</code>, that line is now misattributed. You have to go N commits deeper to find the real change.</li>
<li><code>git bisect</code> now also sucks. When you do bisection on these commits, the <code>"minor"</code> commit may not be the actual root cause commit; it may only be a <em>trigger</em> for a bug that existed from the moment the new API was added. It's unclear whether <code>"minor"</code> or <code>"new API"</code> are at fault, but realistically you probably have to just revert both after figuring it out because the word <code>"minor"</code> does not tell you anything about why the change was made.
<ul dir="auto">
<li>Backing out both changes may not always be desirable or even <em>possible</em> if, for example, the new API is a massive performance uplift and backing it out will cause cascading downstream effects.</li>
<li>And also this regression may only pop up weeks later.</li>
<li>If I am your coworker, and I do <code>git bisect</code> on a 3am production issue to find the root cause of a regression, and I land on a commit that says <code>"minor"</code> from the above PR that landed 3 weeks ago, and it has your name on it? You are going to get a phone call from me within seconds where I will give you a <a href="https://www.youtube.com/watch?v=jZOywn1qArI" rel="nofollow">monologue about how scary I can be</a>.</li>
<li>Even if the <code>"minor"</code> commit was never added, maybe the regression would still happen, and the above might all still be true, but at least you didn't have to spend an extra 15 minutes doing archaeology bullshit while you are in a P1 conference call with 5 other people.</li>
</ul>
</li>
</ol>
<p dir="auto">Just to be clear, this example is what it looks like <strong>when only two reviews take place</strong>. If your review is cycling 5 times, well, the above becomes far, far worse. And yes, in open source contexts, you will often go back and forth multiple times with someone, because they may not have context you do, and there may be no point in doing further review until other nits are addressed. Many projects like this go through multiple review cycles.</p>
<p dir="auto">Part of the problem, the reason why this happens, is due to some design and UX flaws:</p>
<ul dir="auto">
<li><strong>The new commits are the only way to do incremental reviews on GitHub</strong>. In the above model, if you don't want to review the 500 lines of code in the new API over and over again, the only way to do it is by adding new commits on top, and viewing those. It's much easier to read the <code>"fix alice review"</code> patch, which is <code>+/- 10 lines</code>, than it is to read the new API — which is 500 LOC.</li>
<li><strong>Github always shows you the whole diff by default</strong>: When you have a PR on GitHub and view the "diff" tab, it shows you <em>all</em> the commits crammed together as a single diff; it is the moral equivalent of running <code>git diff master..foo-branch</code> and looking at that. But that isn't how people write changes, and it isn't how people read them either. This behavior <em>further</em> encourages you to add new commits on top of old ones, and then the reviewers just read those commits individually because the alternative is to re-read things you already reviewed, constantly.</li>
<li><strong>It's difficult to view the differences between anything except branches</strong>. In general, all of GitHub's whole UX works on the named branch model — and to a large extent so does Git itself. Because of that, it's difficult to use workflows like <code>git rebase</code>, because force-pushing a branch removes the old branch entirely. And at that point, you can't do things like <code>git range-diff</code> between branches.
<ul dir="auto">
<li>Actually, this isn't fully true. If you force push on GitHub, you <em>can</em> see <em>a diff</em>, if you click on this weird little un-identifiable "Compare" button that pops up on the "Force Push" line that appears in a PR: <a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/3416/305154958-1b81aeab-e1fc-4d03-8d42-c096fcb2c795.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNTE1NDk1OC0xYjgxYWVhYi1lMWZjLTRkMDMtOGQ0Mi1jMDk2ZmNiMmM3OTUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9N2ZhOWY5ZTgwNmQxZmNkZTk0M2ZhMjk5ZDI5ZGQxZGZjNDEwNmIyZDcxMDA5NTEwYjUwMzVlMTBkNDcyNjNiZCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.zAgKsOJhOr7R-1oCto5uxx3Kdu3A34yPRy6CKt45si8"><img width="553" alt="image" src="https://private-user-images.githubusercontent.com/3416/305154958-1b81aeab-e1fc-4d03-8d42-c096fcb2c795.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNTE1NDk1OC0xYjgxYWVhYi1lMWZjLTRkMDMtOGQ0Mi1jMDk2ZmNiMmM3OTUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9N2ZhOWY5ZTgwNmQxZmNkZTk0M2ZhMjk5ZDI5ZGQxZGZjNDEwNmIyZDcxMDA5NTEwYjUwMzVlMTBkNDcyNjNiZCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.zAgKsOJhOr7R-1oCto5uxx3Kdu3A34yPRy6CKt45si8"></a></li>
<li>Except it this button only shows you <em>the whole diff</em> from the previous branch head to the current branch head. Again, this means you end up re-reading</li>
<li>You're on your own figuring out the Commit IDs and punching them into the URL bar if you want something more granular.</li>
<li>Why is this button so hard to see? Nobody knows.</li>
</ul>
</li>
</ul>
<p dir="auto">I call this review model "diff soup", because that's what it is: GitHub just shows you a big bundle of changes mixed together in a big bowl of gruel, and then you are expected to live with it and shovel it down your throat. Beggars can't be choosers.</p>
<p dir="auto"><h2 dir="auto">A better way: "interdiff" review (AKA <code>git range-diff</code>)</h2><a id="user-content-a-better-way-interdiff-review-aka-git-range-diff" aria-label="Permalink: A better way: &quot;interdiff&quot; review (AKA git range-diff)" href="#a-better-way-interdiff-review-aka-git-range-diff"></a></p>
<p dir="auto">The idea is actually simple: instead of publishing new commits on <em>top</em> of the three original commits, just publish a new <em>version</em> of the three commits, addressing the changes.</p>
<p dir="auto">So you start off with "version 1" or "v1" of your patch, like above.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/3416/304319502-ae00c29d-7157-4cdf-9f49-f5f4c557e41a.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDMxOTUwMi1hZTAwYzI5ZC03MTU3LTRjZGYtOWY0OS1mNWY0YzU1N2U0MWEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NzZjZmNmZWIzOWE5NWU1YmQzOGUxNWE3YWUxOWM2ZGJhNmJmZWE0MmE1MTk2NmQ0NzI3NmM3MjM3ZDhiOWQ4YSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.pLFA4n8Y5ABOIzbttQBZvT_6qSEhMXftD82_IHssGGg"><img width="654" alt="image" src="https://private-user-images.githubusercontent.com/3416/304319502-ae00c29d-7157-4cdf-9f49-f5f4c557e41a.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDMxOTUwMi1hZTAwYzI5ZC03MTU3LTRjZGYtOWY0OS1mNWY0YzU1N2U0MWEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NzZjZmNmZWIzOWE5NWU1YmQzOGUxNWE3YWUxOWM2ZGJhNmJmZWE0MmE1MTk2NmQ0NzI3NmM3MjM3ZDhiOWQ4YSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.pLFA4n8Y5ABOIzbttQBZvT_6qSEhMXftD82_IHssGGg"></a>
</p>
<p dir="auto">In Git terminology, the orange <code>v1</code> on the side is, roughly speaking, the name of a branch, though normally it would be something like <code>aseipp/new-foobar-api</code> or something.</p>
<p dir="auto">Next, Bob leaves comments, asking you to fix the refactoring and update a new call site (before Alice is done.) So you address his review by updating the first commit and third commit. This creates a new series, which would be "version 2", which we send out wholesale:</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/3416/304319742-b7b4aef4-5bc0-4c12-aaaa-14e87b9fbe2e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDMxOTc0Mi1iN2I0YWVmNC01YmMwLTRjMTItYWFhYS0xNGU4N2I5ZmJlMmUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MDhjYWMxYmFhNGJmOWMzZWRlNWJkODAzYTY3MWI3NjJhMDM3ZTIzMzBjY2RjN2Q2MzhhYjI1OTc0ZmRiOWRjMSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.6094EkUTCPcs1vv96ziZKkHK4QEfNyNSfTppl8UUkbk"><img width="711" alt="image" src="https://private-user-images.githubusercontent.com/3416/304319742-b7b4aef4-5bc0-4c12-aaaa-14e87b9fbe2e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDMxOTc0Mi1iN2I0YWVmNC01YmMwLTRjMTItYWFhYS0xNGU4N2I5ZmJlMmUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MDhjYWMxYmFhNGJmOWMzZWRlNWJkODAzYTY3MWI3NjJhMDM3ZTIzMzBjY2RjN2Q2MzhhYjI1OTc0ZmRiOWRjMSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.6094EkUTCPcs1vv96ziZKkHK4QEfNyNSfTppl8UUkbk"></a>
</p>
<p dir="auto">There is now a <code>v2</code> branch, containing 3 commits, and the patches are updated as Bob wanted them.</p>
<p dir="auto">The orange dotted arrows take place of the previous colored dotted arrows; they effectively represent the fact the given commit has "evolved" and changed. Note that there are only dotted orange lines, and no other colors; the "implicit relationship" established by the earlier graph is no longer a concern, because there aren't any extra commits. The relationship between <code>v1</code> and <code>v2</code> is obvious. Commit A version 1 becomes Commit A version 2, and so on and so forth. The entire issue somewhat vanishes.</p>
<p dir="auto">We repeat this process to address Alice's concerns, to add tests, and to introduce the <code>"minor"</code> regression. The result looks like this, where we end up with a final version of the three patches, version 5:</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/3416/304320399-1c40e4c4-e7dd-443a-9078-501da9b0e612.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDMyMDM5OS0xYzQwZTRjNC1lN2RkLTQ0M2EtOTA3OC01MDFkYTliMGU2MTIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NjRjYmRhZDIzOThjYTVjOWZiYWU5YmRiYWI0ODMwOTJjNDNiYmNkZDBhMzg4M2NiN2IwZThlMWEyNThlOTgwNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.h7K0Rtufn4OpFw5iksoszviOthOXxTDEPERHQ1KO4Ro"><img width="618" alt="image" src="https://private-user-images.githubusercontent.com/3416/304320399-1c40e4c4-e7dd-443a-9078-501da9b0e612.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYwNTgxMzIsIm5iZiI6MTcyNjA1NzgzMiwicGF0aCI6Ii8zNDE2LzMwNDMyMDM5OS0xYzQwZTRjNC1lN2RkLTQ0M2EtOTA3OC01MDFkYTliMGU2MTIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTFUMTIzMDMyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NjRjYmRhZDIzOThjYTVjOWZiYWU5YmRiYWI0ODMwOTJjNDNiYmNkZDBhMzg4M2NiN2IwZThlMWEyNThlOTgwNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.h7K0Rtufn4OpFw5iksoszviOthOXxTDEPERHQ1KO4Ro"></a>
</p>
<p dir="auto">The entire evolutionary process of the series has been inverted. At the end of this process, there are still only three commits, that address all review comments. Note that:</p>
<ul dir="auto">
<li><code>git blame</code> will now assign lines to changes <em>with less noise</em>. You no longer have to worry about running <code>git show abcdefg</code> on a blamed line and seeing it came from <code>"fix alice review"</code>, it will come from a change like the first commit, <code>"refactor and deduplicate controller code"</code> or whatnot.</li>
<li><code>git bisect</code> is now far more likely to tell you the new API code introduced this regression, without having to dig further.</li>
</ul>
<p dir="auto">Two of your best tools now work <em>much</em> more reliably because there is simply a better signal to noise ratio. But there's a very important and subtle difference that only the code <em>reviewer</em>, not <em>author</em>, can appreciate, which is...</p>
<p dir="auto"><strong>You now can review code incrementally, and not re-read the whole diff</strong></p>
<p dir="auto">When Alice leaves her review on v2, telling you to change the green commit with 500 lines of code, you will eventually respond by doing so. But for Alice, <strong>re-reading the 500 lines of code again in <code>v3</code> is a waste of time</strong>. She wants to see an <em>incremental diff</em> that can prove that you actually listened to her. This means she might only need to read a 50 line diff — a 10x difference in code.</p>
<p dir="auto">Alice can use a tool called <code>git range-diff</code> to do this, like so:</p>
<div dir="auto"><pre>git range-diff \
  main..v1 \
  main..v2</pre></div>
<p dir="auto">In English, this means "Take the 3 commits from branch <code>v1</code>, and show the pairwise diff between the 3 commits from branch <code>v2</code>." So if <code>v1</code> has the following commit IDs:</p>
<pre><code>A -&gt; B -&gt; C
</code></pre>
<p dir="auto">And <code>v2</code> has the commit IDs:</p>
<pre><code>X -&gt; Y -&gt; Z
</code></pre>
<p dir="auto">You will see the changes between commit 1 <code>diff(A, X)</code>, followed by commit 2 <code>diff(B, Y)</code>, and commit 3 <code>diff(C, Z)</code>.</p>
<p dir="auto">In contrast, <strong>Github always shows you <code>diff(main, C)</code> or <code>diff(main, Z)</code></strong>, i.e. it shows you the entire branch as one diff, AKA diff soup.</p>
<p dir="auto">This is the essence of "interdiff code review." You</p>
<ul dir="auto">
<li>Don't publish new changes on top, you publish <em>new versions</em></li>
<li>You don't diff between the base branch and the tip of the developer's branch, you diff between <em>versions of commits</em></li>
<li>Now, reviewers get an incremental review process, while authors don't have to clutter the history with 30 "address review" noise commits.</li>
<li>Your basic diagnostic tools work better, with a better signal-to-noise ratio.</li>
</ul>
<p dir="auto"><h2 dir="auto">Interlude: Strategies for merging patches</h2><a id="user-content-interlude-strategies-for-merging-patches" aria-label="Permalink: Interlude: Strategies for merging patches" href="#interlude-strategies-for-merging-patches"></a></p>
<p dir="auto">TODO: Explain how the above is independent of your merge strategy (e.g. <code>git rebase</code> on tip versus multi-parent <code>git merge</code> commits).</p>
<p dir="auto"><h2 dir="auto">Interlude: Can you please just tell me if <code>git rebase</code> is evil or not so that we can derail the entire discussion over it?</h2><a id="user-content-interlude-can-you-please-just-tell-me-if-git-rebase-is-evil-or-not-so-that-we-can-derail-the-entire-discussion-over-it" aria-label="Permalink: Interlude: Can you please just tell me if git rebase is evil or not so that we can derail the entire discussion over it?" href="#interlude-can-you-please-just-tell-me-if-git-rebase-is-evil-or-not-so-that-we-can-derail-the-entire-discussion-over-it"></a></p>
<p dir="auto">It's fine. Just don't use it on public branches that you expect others to base their own commits off of. It's that simple.</p>
<p dir="auto">Interdiff review systems typically encourage smaller, more "juicy" patches that land in the main branch more quickly than the alternative. You don't have to wait on all 5 commits to be ready to go; maybe the first 3 are OK, and the last 2 need more work. You merge 3 out of 5.</p>
<p dir="auto">The intent of the system is that others will just base their work off the main branch, mitigating the need to have cases where you merge a remote that merged 5 remotes that merged... and so on and so forth. So you don't have long lived patches, typically, and most users don't base branches off other branches.</p>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">Some projects tend to explicitly publish branches off of other branches, or merge public branches across repos. The most famous example is the Linux kernel. Therefore, most Linux developers will use <code>git rebase</code> to <em>create</em> a patch series and refine it, but they won't force-push any public branches after they create them, because they might get merged into someone elses tree (without them knowing.) They will just create new branches with new commits.</p>
</div>
<p dir="auto"><h2 dir="auto">Other notes</h2><a id="user-content-other-notes" aria-label="Permalink: Other notes" href="#other-notes"></a></p>
<p dir="auto"><h2 dir="auto">Conclusion</h2><a id="user-content-conclusion" aria-label="Permalink: Conclusion" href="#conclusion"></a></p>
<p dir="auto">That's the sales pitch. I'll write more here later.</p>
</article>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Another police raid in Germany (485 pts)]]></title>
            <link>https://forum.torproject.org/t/tor-relays-artikel-5-e-v-another-police-raid-in-germany-general-assembly-on-sep-21st-2024/14533</link>
            <guid>41505009</guid>
            <pubDate>Tue, 10 Sep 2024 20:12:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forum.torproject.org/t/tor-relays-artikel-5-e-v-another-police-raid-in-germany-general-assembly-on-sep-21st-2024/14533">https://forum.torproject.org/t/tor-relays-artikel-5-e-v-another-police-raid-in-germany-general-assembly-on-sep-21st-2024/14533</a>, See on <a href="https://news.ycombinator.com/item?id=41505009">Hacker News</a></p>
Couldn't get https://forum.torproject.org/t/tor-relays-artikel-5-e-v-another-police-raid-in-germany-general-assembly-on-sep-21st-2024/14533: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Tutorial on diffusion models for imaging and vision (202 pts)]]></title>
            <link>https://arxiv.org/abs/2403.18103</link>
            <guid>41504885</guid>
            <pubDate>Tue, 10 Sep 2024 19:59:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2403.18103">https://arxiv.org/abs/2403.18103</a>, See on <a href="https://news.ycombinator.com/item?id=41504885">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <p>
      <h2>Computer Science &gt; Machine Learning</h2>
    </p>

    <p><strong>arXiv:2403.18103</strong> (cs)
    </p>

<div id="content-inner">
    <p>
  [Submitted on 26 Mar 2024 (<a href="https://arxiv.org/abs/2403.18103v1">v1</a>), last revised 6 Sep 2024 (this version, v2)]</p>
    
                
    <p><a href="https://arxiv.org/pdf/2403.18103">View PDF</a></p><blockquote>
            <span>Abstract:</span>The astonishing growth of generative tools in recent years has empowered many exciting applications in text-to-image generation and text-to-video generation. The underlying principle behind these generative tools is the concept of diffusion, a particular sampling mechanism that has overcome some shortcomings that were deemed difficult in the previous approaches. The goal of this tutorial is to discuss the essential ideas underlying the diffusion models. The target audience of this tutorial includes undergraduate and graduate students who are interested in doing research on diffusion models or applying these models to solve other problems.
    </blockquote>

    <!--CONTEXT-->
    
  </div>
    <div>
      <h2>Submission history</h2><p> From: Stanley Chan [<a href="https://arxiv.org/show-email/052533b7/2403.18103">view email</a>]      <br>            <strong><a href="https://arxiv.org/abs/2403.18103v1">[v1]</a></strong>
        Tue, 26 Mar 2024 21:01:41 UTC (3,221 KB)<br>
    <strong>[v2]</strong>
        Fri, 6 Sep 2024 19:58:27 UTC (3,822 KB)<br>
</p></div>
  </div><div id="labstabs"><p>
    <label for="tabone">Bibliographic Tools</label></p><div>
      <h2>Bibliographic and Citation Tools</h2>
      <div>
          <p><label>
              
              <span></span>
              <span>Bibliographic Explorer Toggle</span>
            </label>
          </p>
          
        </div>
        
        
        
    </div>


    <p>
    <label for="tabtwo">Code, Data, Media</label></p><div>
      <h2>Code, Data and Media Associated with this Article</h2>
      

      
      
      
      
      
      
    </div>


      <p>
      <label for="labstabs-demos-input" id="labstabs-demos-label">Demos</label></p><div>
        <h2>Demos</h2>
        
        
        
        
      </div>
      <p>
      <label for="tabfour">Related Papers</label></p><div>
        <h2>Recommenders and Search Tools</h2>
        <div>
            <p><label>
                
                <span></span>
                <span>IArxiv recommender toggle</span>
              </label>
            </p>
            
          </div>
        
        
        
        
        
      </div>

      <p>
      <label for="tabfive">
        About arXivLabs
      </label></p><div>
            <h2>arXivLabs: experimental projects with community collaborators</h2>
            <p>arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.</p>
            <p>Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.</p>
            <p>Have an idea for a project that will add value for arXiv's community? <a href="https://info.arxiv.org/labs/index.html"><strong>Learn more about arXivLabs</strong></a>.</p>
          </div>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Git Bash is my preferred Windows shell (186 pts)]]></title>
            <link>https://www.ii.com/git-bash-is-my-preferred-windows-shell/</link>
            <guid>41504832</guid>
            <pubDate>Tue, 10 Sep 2024 19:54:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ii.com/git-bash-is-my-preferred-windows-shell/">https://www.ii.com/git-bash-is-my-preferred-windows-shell/</a>, See on <a href="https://news.ycombinator.com/item?id=41504832">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><h3 id="_case_insensitivity"><a href="#_case_insensitivity">Case insensitivity</a></h3><p>Normally
<a href="https://www.ii.com/portal/nix-nux/" title="#nix-nux Portal on Infinite Ink">Unix-like</a>
shells are case sensitive, but
Git&nbsp;Bash, in general, is case insensitive.</p></div><div><h3 id="_paths"><a href="#_paths">Paths</a></h3><p>To view your current path, run
the
following command, which means
“print working directory.”</p><p>To go to your Git&nbsp;Bash home directory,
which is also known as <code>~</code>,
run either of the following equivalent commands.</p><p>On most systems, your Git&nbsp;Bash home directory
is…</p><p>with <code>USERNAME</code> replaced with your user name.</p><p>Note that in Git&nbsp;Bash…</p><div><ul><li><p>The path delimiter is slash (<code>/</code>), which is also known as forward slash.</p></li><li><p>The <code>C:</code> drive is mounted as <code>/c/</code>.
To list all mounts, run the <code>mount</code> command.</p></li><li><p>You can display a Windows-type path of the current working directory with
<code>pwd&nbsp;-W</code>.
The format of the path this command displays is sometimes called
“mixed&nbsp;type”
because it starts with a drive letter, such as <code>C:</code>,
and uses
forward&nbsp;slashes
(<code>/</code>)
rather than backslashes
(<code>\</code>)
as path separators.
For example, this sequence of commands…</p></li></ul></div><p>displays…</p><div><pre>/c/Users/USERNAME
C:/Users/USERNAME</pre></div></div><div><h3 id="_the_start_command"><a href="#_the_start_command">The <code>start</code> command</a></h3><p>When you are at a Git&nbsp;Bash prompt, you can launch
a file or directory in your system’s default app
by using
the <code>Start</code> command,
which is equivalent
to
the <code>start</code> command (thanks to case insensitivity).
Below are some examples.</p><p>To open the current directory in Windows File&nbsp;Explorer, run:</p><div><pre>start .
      👆
     Notice this dot (.)</pre></div><p>To open your home directory in Windows File&nbsp;Explorer, run:</p><p>To open your $APPDATA directory in Windows File&nbsp;Explorer, run:</p><p>To open <code>/c</code> in Windows File&nbsp;Explorer, run either of these equivalent commands:</p><p>To open the parent directory of the current directory in Windows File&nbsp;Explorer, run:</p><p>To open an HTML file in your default web browser,
run
something like this:</p></div><div><h3 id="_launching_any_app_on_your_path"><a href="#_launching_any_app_on_your_path">Launching any app on your path</a></h3><p>You can launch
any app that’s on your path
from a Git&nbsp;Bash prompt.
For example, if Visual Studio Code is
installed on your system and is on your path,
you can use the following to open the current directory
in VS Code.</p><div><pre>code .
     👆
    Notice this dot (.)</pre></div></div><div><h3 id="_environment_variables"><a href="#_environment_variables">Environment variables</a></h3><p>To find out
the
environment variables
available
to
Git&nbsp;Bash,
run:</p><p>This includes the PATH environment variable, which lists the directories that are searched for executables.</p></div><div><h3 id="_scripting"><a href="#_scripting">Scripting</a></h3><p>I’d rather write a bash or
sh⁠<sup>[<a href="#_footnotedef_14" title="View footnote.">14</a>]</sup>
<a href="https://wikipedia.org/wiki/Shell_script">shell script</a>
than a
Windows
<a href="https://wikipedia.org/wiki/Batch_file">batch file</a>
to
deal with apps, files, and folders
that live in my Windows file system.
Thanks to
Git&nbsp;Bash,
It’s easy to do this.
(I have learned the hard way that it’s not so easy to do this
in
WSL.⁠<sup>[<a href="#_footnotedef_15" title="View footnote.">15</a>]</sup>)</p><div><h4 id="_where_to_put_scripts"><a href="#_where_to_put_scripts">Where to put scripts</a></h4><p>When you run <code>printenv</code>, you can see that the <code>~/bin/</code> directory
(usually <code>/c/users/USERNAME/bin/</code>)
is
on your PATH. This is a reasonable place to put your Git&nbsp;Bash scripts.
To create this directory, run this command:</p></div><div><h4 id="_example_script"><a href="#_example_script">Example script</a></h4><p>One of my scripts is called
<code>gvim-winpath</code>
and it looks like this:</p><div><pre>#!/bin/sh

## Created: 2024-05-15
## Filename: gvim-winpath
## Usage: gvim-winpath "C:\path\to\filename"

/c/windows/gvim.bat `cygpath "$1"`</pre></div><p>I use this to launch gvim on a file that
is specified using a Windows-style backslash path.
To learn about the <code>cygpath</code> command, which is used in this script, run
one of
the following commands at a Git&nbsp;Bash prompt.</p><div><pre>cygpath --help
cygpath --help |less</pre></div><p>If you pipe the <code><nobr>cygpath&nbsp;--help</nobr></code> output to the <code>less</code> pager, you
need to know
how to
use <code>less</code>:
The essentials are
that
within <code>less</code>, you can
press <kbd>Space</kbd> to page down,
press <kbd>b</kbd> (for back) to page up,
and press
<kbd>q</kbd>
to quit.</p></div><div><h4 id="_no_need_to_chmod"><a href="#_no_need_to_chmod">No need to chmod</a></h4><p>In most Unix-like shells, you need to <code>chmod&nbsp;+x</code> executables
but in Git&nbsp;Bash this is not needed.</p></div></div><div><h3 id="_unicode"><a href="#_unicode">Unicode</a></h3><p>If you have issues with
non-ASCII
Unicode characters, run
the following at a Git&nbsp;Bash prompt
and make sure each
setting
includes <code>UTF-8</code>.</p><p>Also,
you can
try
to solve
Unicode issues
by
running
the following sequence of
<code>chcp.com</code>⁠<sup>[<a href="#_footnotedef_12" title="View footnote.">12</a>]</sup>
commands at a Git&nbsp;Bash prompt.</p><div><pre>chcp.com
chcp.com 65001
chcp.com</pre></div><p>This <strong>ch</strong>anges the <strong>c</strong>ode <strong>p</strong>age to 65001, which supports UTF-8 encoding.</p><div><table><tbody><tr><td><p><span>ℹ</span></p></td><td>Nowadays
UTF-8 is the standard file encoding
of the internet (and of Unicode
in&nbsp;general).</td></tr></tbody></table></div></div><div><h3 id="_case_insensitivity_exceptions"><a href="#_case_insensitivity_exceptions">Case insensitivity exceptions</a></h3><div><h4 id="_help_and_other_command_arguments"><a href="#_help_and_other_command_arguments">--help and other command arguments</a></h4><p>Arguments to nix-⁠nux commands, in general, are case sensitive. For example,
in the following</p><p>The command <code>cygpath</code> is case insensitive,
but
its argument <code>--help</code> is case sensitive.
For example,
this works:</p><p>but this does not work:</p></div><div><h4 id="_exit"><a href="#_exit">exit</a></h4><p>To quit Git&nbsp;Bash, you can either
click the close-window X in the upper right corner of the terminal window
or type the following at the command prompt:</p><p>This <code>exit</code> command
is a
<a href="https://wikipedia.org/wiki/System_call">system&nbsp;call</a>
and
must be all lower
case.⁠<nobr> <span>◊</span></nobr></p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Iron Mountain: It's Time to Talk About Hard Drives (123 pts)]]></title>
            <link>https://www.mixonline.com/business/inside-iron-mountain-its-time-to-talk-about-hard-drives</link>
            <guid>41504331</guid>
            <pubDate>Tue, 10 Sep 2024 19:04:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.mixonline.com/business/inside-iron-mountain-its-time-to-talk-about-hard-drives">https://www.mixonline.com/business/inside-iron-mountain-its-time-to-talk-about-hard-drives</a>, See on <a href="https://news.ycombinator.com/item?id=41504331">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
						<article id="post-147171">
	<header>
        
    

    <p>Iron Mountain Media and Archive Services sounds the alarm: Aging tracks created through an all-digital workflow aren't guaranteed to play back.</p>
	
</header>


	<section>
		<figure id="attachment_147159" aria-describedby="caption-attachment-147159"><img fetchpriority="high" decoding="async" src="https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-Boyers-10_Cropped.jpg" alt="Shelves of media assets stretch as far as the eye can see at Iron Mountain’s secure, climate-controlled, underground facility in Boyers, Penn. Photo: Courtesy of Iron Mountain." width="372" height="640" srcset="https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-Boyers-10_Cropped.jpg 700w, https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-Boyers-10_Cropped-353x607.jpg 353w" sizes="(max-width: 372px) 100vw, 372px"><figcaption id="caption-attachment-147159">Shelves of media assets stretch as far as the eye can see at Iron Mountain’s secure, climate-controlled, underground facility in Boyers, Penn. Photo: Courtesy of Iron Mountain.</figcaption></figure>
<p>New York, NY (August 19, 2024)—A few years ago, archiving specialist <a href="https://www.imes.media/" target="_blank" rel="noopener">Iron Mountain Media and Archive Services</a> did a survey of its vaults and discovered an alarming trend: Of the thousands and thousands of archived hard disk drives from the 1990s that clients ask the company to work on, around one-fifth are unreadable. Iron Mountain has a broad customer base, but if you focus strictly on the music business, says Robert Koszela, Global Director Studio Growth and Strategic Initiatives, “That means there are historic sessions from the early to mid-’90s that are dying.”</p>
<p>Until the turn of the millennium, the workflow for record releases was simple enough. Once the multitrack was mixed, the 2-track master was turned into a piece of vinyl, a cassette tape or, starting in 1982, a compact disc, and those original tapes—by and large— then went into storage. Around 2000, with the advent of 5.1-surround releases, then in 2005 with the debut of the Guitar Hero video game, things started to get complicated. When rights holders went to the vaults to transfer, remix and repurpose some of their catalog tracks for these new platforms, they discovered that some tapes were deteriorating while others were unplayable. Not all assets had been stored under optimum conditions. Some recordings had been made on machines that were now obsolete, in formats that could no longer be easily played. And some recordings were missing.</p>
<p>In short, for the past 25 or more years, the music industry has been focused on its magnetic tape archives, and on the remediation, digitization and migration of assets to more accessible, reliable storage. Hard drives also became a focus of the industry during that period, ever since the emergence of the first DAWs in the late 1980s. But unlike tape, surely, all you need to do, decades later, is connect a drive and open the files. Well, not necessarily. And Iron Mountain would like to alert the music industry at large to the fact that, even though you may have followed recommended best practices at the time, those archived drives may now be no more easily playable than a 40-year-old reel of Ampex 456 tape.</p>
<p>“The big challenge that we face is just getting the word out there,” says Koszela, who racked up years of experience on the record label side with UMG before joining Iron Mountain Media and Archive Services. Iron Mountain handles millions of data storage assets for a diverse list of clients, from Fortune 500 companies to major players in the entertainment industry, so the company has a significant sample size to analyze, he points out. “In our line of work, if we discover an inherent problem with a format, it makes sense to let everybody know. It may sound like a sales pitch, but it’s not; it’s a call for action.”</p>
<h4>CAN YOU PLAY?</h4>
<p>Many asset owners—labels, artists, artists’ estates—sleep soundly at night believing that their recordings are safe in a climate-controlled vault, Koszela notes. But just like tape, hard drives are susceptible to any number of issues that may only be discovered when, for example, the project is pulled off the shelf to create an immersive mix.</p>
<p>“It’s so sad to see a project come into the studio, a hard drive in a brand-new case with the wrapper and the tags from wherever they bought it still in there,” Koszela says. “Next to it is a case with the safety drive in it. Everything’s in order. And both of them are bricks.”</p>
<p>Let’s say a drive containing a 1995 session does spin up. “You’ve got to update the Pro Tools session and you’re probably going to have to fix some plug-ins,” Koszela warns. “You’re off to the races, and you can create an immersive mix—but not if you wait too long and let that stuff die.”</p>
<figure id="attachment_147157" aria-describedby="caption-attachment-147157"><img decoding="async" src="https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-AMICS-MACHINE-10.jpg" alt="Iron Mountain archivists at work among the vaults in the company’s Boyers, Penn., facility. Photo: Courtesy of Iron Mountain." width="1000" height="665" srcset="https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-AMICS-MACHINE-10.jpg 1000w, https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-AMICS-MACHINE-10-353x235.jpg 353w, https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-AMICS-MACHINE-10-726x483.jpg 726w, https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-AMICS-MACHINE-10-768x511.jpg 768w" sizes="(max-width: 1000px) 100vw, 1000px"><figcaption id="caption-attachment-147157">Iron Mountain archivists at work among the vaults in the company’s Boyers, Penn., facility. Photo: Courtesy of Iron Mountain.</figcaption></figure>
<p>A lot has changed in the world of digital media during the past three decades, so legacy disk formats like Jaz and Zip, obsolete and unsupported connections, and even something as simple as a lost, proprietary wall wart for the enclosure can be a challenge with some older archived assets. Based on years of experience, Iron Mountain has developed hubs at its facilities that can power up, connect to and read virtually any storage medium. If the disk platters spin and aren’t damaged, Iron Mountain Media and Archive Services techs can access the content.</p>
<p>As with tape, pulling an archived drive off the shelf and discovering any challenges to playing it will typically only occur if there is a commercial imperative. “Most of the resources are freed up based on exploitation,” Koszela confirms, such as the label’s need for that immersive mix. However, an archived drive may hold an early transfer from tape at a lower resolution than is now the norm. If there’s enough budget, someone may need to go back to the tape and— hopefully, barring any issues—transfer it again at today’s accepted standard of 24 bits/192 kHz.</p>
<h4><u><a href="https://www.mixonline.com/business/automating-the-archive" target="_blank" rel="noopener">How IMES Automated The Archive</a></u></h4>
<p>Again, like tape, it’s not always that easy to pinpoint the exact asset that needs to be pulled. As with old tapes, where there may be little more than a ballpoint scrawl on the box label, the metadata—the writing, barcodes or other information carried along with the content—is also critical to finding the right disk drive in the archive, and the right version of the track that you are looking for. “The outside of the case might just have an artist’s name as an acronym,” Koszela says. “You don’t know if that’s a video session, an interview or what it is.”</p>
<p>While with UMG, Koszela would take the assets from the projects that came through Interscope’s studios and send them to the label’s archive team. “We started receiving a lot of black cases that didn’t have anything on them,” he recalls. “We would open up the drive, mount it, open up the catalog tree so we could see all the folders, then screenshot and print it, and put that in the case.” It wasn’t the most elegant solution, he admits. “But it allowed us to quickly see what’s on the drive without going through the trouble of spinning it up.”</p>
<p>There are apps that now make that task easier. “Neofinder goes through the catalog tree and makes everything searchable,” he says. But these days, metadata might be embedded with the files on disk or in the cloud, not on a box or a case. Searching through that data could eventually be a task for AI, Koszela believes.</p>
<figure id="attachment_147158" aria-describedby="caption-attachment-147158"><img decoding="async" src="https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-bob-koszela.jpg" alt="Robert Koszela, Global Director Studio Growth and Strategic Initiatives, Iron Mountain Media and Archive Services. Photo: Courtesy of Iron Mountain." width="1000" height="665" srcset="https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-bob-koszela.jpg 1000w, https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-bob-koszela-353x235.jpg 353w, https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-bob-koszela-726x483.jpg 726w, https://www.mixonline.com/wp-content/uploads/2024/08/2024-08-19-Iron-Mountain-bob-koszela-768x511.jpg 768w" sizes="(max-width: 1000px) 100vw, 1000px"><figcaption id="caption-attachment-147158">Robert Koszela, Global Director Studio Growth and Strategic Initiatives, Iron Mountain Media and Archive Services. Photo: Courtesy of Iron Mountain.</figcaption></figure>
<h4>DO YOU KNOW WHAT YOU HAVE?</h4>
<p>When people in the 1990s started producing music using DAWs, the entire workflow became digital, from writing to demo to tracking and mixing, but there’s a potential challenge there, years later, for anyone trying to find the complete and final master. “What if somebody brought something in on an Akai MPX [sampler] and they didn’t fly those tracks in, they triggered them?” Koszela asks. “Did the samples ever get copied to a master hard drive? And if they did, are they labeled?”</p>
<p>Similarly, in today’s production workflow, a session could easily have been tracked at one studio, overdubbed at another, had strings added at yet another, then mixed and even remixed, perhaps across continents. “Who has the final copy of the session that consolidates everything?” Koszela asks once more. “If that master is lost, is there a copy or a version from earlier in the production workflow that will suffice, such as a producer’s, engineer’s or studio’s backup copy?</p>
<p>“It’s a plus that the data’s probably out there somewhere, but it’s also a minus, because there’s so much of it, and in so many different states of completion. Who’s got the right version? Is the master lost? Probably not, but will you ever find it? Possibly not.”</p>
<p>Smaller entities, like independent labels or artist’s estates, with little budget for asset preservation, are generally letting drives sit in the archive. The bigger labels are unlikely to find and address any issues unless an asset is being commercially repurposed. Without some proactive initiative, Koszela says, “My worry is that these assets will just be lost. People need to know that their hard drives are dying.”</p>
	</section>

	
</article>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New York Times tech workers union votes to authorize a strike (320 pts)]]></title>
            <link>https://www.axios.com/2024/09/10/nyt-tech-union-strike-vote</link>
            <guid>41504026</guid>
            <pubDate>Tue, 10 Sep 2024 18:30:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.axios.com/2024/09/10/nyt-tech-union-strike-vote">https://www.axios.com/2024/09/10/nyt-tech-union-strike-vote</a>, See on <a href="https://news.ycombinator.com/item?id=41504026">Hacker News</a></p>
Couldn't get https://www.axios.com/2024/09/10/nyt-tech-union-strike-vote: Error: timeout of 10000ms exceeded]]></description>
        </item>
    </channel>
</rss>