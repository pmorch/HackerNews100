<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 05 Jan 2025 18:30:12 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[The day I taught AI to read code like a Senior Developer (274 pts)]]></title>
            <link>https://nmn.gl/blog/ai-senior-developer</link>
            <guid>42601847</guid>
            <pubDate>Sun, 05 Jan 2025 14:15:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nmn.gl/blog/ai-senior-developer">https://nmn.gl/blog/ai-senior-developer</a>, See on <a href="https://news.ycombinator.com/item?id=42601847">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <p><em>A messy experiment that changed how we think about AI code analysis</em></p>

<p>Last week, I watched our AI choke on a React codebase - again. As timeout errors flooded my terminal, something clicked. We’d been teaching AI to read code like a fresh bootcamp grad, not a senior developer.</p>

<p>Here’s what I mean.</p>

<!--more-->

<h2 id="the-bootcamp-vs-senior-mindset">The Bootcamp vs Senior Mindset</h2>

<p>Remember your first day reading production code? Without any experience with handling mature codebases, you probably quickly get lost in the details<sup>[0]</sup></p>

<p>But watch a senior dev review a massive PR:</p>

<ul>
  <li>They jump straight to the core files</li>
  <li>Group changes by feature (“all auth changes, all db changes”)</li>
  <li>Build a mental model of architecture first</li>
  <li>Only then dive into implementation</li>
</ul>

<p>Obvious in hindsight, right? This realization led us to completely rewire our analyzer.</p>

<h2 id="the-experiment">The Experiment</h2>

<p>Instead of dumping files linearly, we built a context-aware grouping system:</p>

<div><pre><code><span>interface</span> <span>FileGroup</span> <span>{</span>
  <span>files</span><span>:</span> <span>ProjectFile</span><span>[];</span>
  <span>totalSize</span><span>:</span> <span>number</span><span>;</span>
  <span>groupContext</span><span>:</span> <span>string</span><span>;</span> <span>// 'auth', 'database', etc.</span>
<span>}</span>

<span>export</span> <span>const</span> <span>groupFiles</span> <span>=</span> <span>(</span><span>files</span><span>:</span> <span>ProjectFile</span><span>[]):</span> <span>FileGroup</span><span>[]</span> <span>=&gt;</span> <span>{</span>
  <span>// Group files by related functionality and size</span>
  <span>const</span> <span>fileInfos</span> <span>=</span> <span>files</span><span>.</span><span>map</span><span>(</span><span>file</span> <span>=&gt;</span> <span>({</span>
    <span>file</span><span>,</span>
    <span>size</span><span>:</span> <span>file</span><span>.</span><span>content</span><span>?.</span><span>length</span> <span>||</span> <span>0</span><span>,</span>
    <span>context</span><span>:</span> <span>getFileContext</span><span>(</span><span>file</span><span>.</span><span>path</span><span>)</span>
  <span>}));</span>

  <span>// Process larger, more important files first</span>
  <span>fileInfos</span><span>.</span><span>sort</span><span>((</span><span>a</span><span>,</span> <span>b</span><span>)</span> <span>=&gt;</span> <span>b</span><span>.</span><span>size</span> <span>-</span> <span>a</span><span>.</span><span>size</span><span>);</span>

  <span>const</span> <span>groups</span><span>:</span> <span>FileGroup</span><span>[]</span> <span>=</span> <span>[];</span>
  <span>let</span> <span>currentGroup</span> <span>=</span> <span>createEmptyGroup</span><span>();</span>

  <span>for</span> <span>(</span><span>const</span> <span>{</span> <span>file</span><span>,</span> <span>size</span><span>,</span> <span>context</span> <span>}</span> <span>of</span> <span>fileInfos</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>shouldStartNewGroup</span><span>(</span><span>currentGroup</span><span>,</span> <span>size</span><span>,</span> <span>context</span><span>))</span> <span>{</span>
      <span>groups</span><span>.</span><span>push</span><span>(</span><span>currentGroup</span><span>);</span>
      <span>currentGroup</span> <span>=</span> <span>createNewGroup</span><span>(</span><span>file</span><span>,</span> <span>size</span><span>,</span> <span>context</span><span>);</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>addFileToGroup</span><span>(</span><span>currentGroup</span><span>,</span> <span>file</span><span>,</span> <span>size</span><span>);</span>
    <span>}</span>
  <span>}</span>

  <span>return</span> <span>groups</span><span>;</span>
<span>}</span>
</code></pre></div>

<p>Then we changed how we prompt the AI. Instead of “analyze this file”, we give it context about the feature group first:</p>

<div><pre><code><span>const</span> <span>buildGroupPrompt</span> <span>=</span> <span>(</span><span>group</span><span>:</span> <span>FileGroup</span><span>):</span> <span>string</span> <span>=&gt;</span> <span>{</span>
  <span>return</span> <span>`
    Analyzing authentication system files:
    - Core token validation logic
    - Session management
    - Related middleware
    
    Focus on:
    1. How these integrate with existing auth patterns
    2. Security implications
    3. Performance impact on other systems

    Files to analyze:
    </span><span>${</span><span>formatFiles</span><span>(</span><span>group</span><span>.</span><span>files</span><span>)}</span><span>
  `</span><span>;</span>
<span>}</span>
</code></pre></div>

<h2 id="the-holy-shit-moment">The Holy Shit Moment</h2>

<p>The results broke our benchmark script. We thought it was a bug.</p>

<p>The AI went from:</p>
<div><pre><code>"This file contains authentication logic using JWT tokens"
</code></pre></div>

<p>To:</p>
<div><pre><code>"Warning: This auth change could impact websocket connections.
The token refresh logic shares patterns with the notification 
service (added last month), suggesting a potential race 
condition during high-traffic socket reconnects.

Related PR: #1234 (merged last week) modified the same
retry logic. Consider adding backoff."
</code></pre></div>

<p>That’s senior dev level awareness. It was catching connections we hadn’t explicitly taught it about.</p>

<h2 id="what-actually-changed">What Actually Changed?</h2>

<p>The magic isn’t in fancy ML or bigger models. It’s in mirroring how senior devs think:</p>

<ol>
  <li><strong>Context First</strong>: We front-load system understanding before diving into code</li>
  <li><strong>Pattern Matching</strong>: Group similar files to spot repeated approaches</li>
  <li><strong>Impact Analysis</strong>: Consider changes in relation to the whole system</li>
  <li><strong>Historical Understanding</strong>: Track why code evolved certain ways</li>
</ol>

<h2 id="the-unexpected-side-effects">The Unexpected Side Effects</h2>

<p>The system started catching things we didn’t design for:</p>

<ul>
  <li>Spotting copy-pasted code across different features</li>
  <li>Flagging inconsistent error handling patterns</li>
  <li>Warning about potential performance bottlenecks</li>
  <li>Suggesting architectural improvements based on usage patterns</li>
</ul>

<h2 id="why-this-matters">Why This Matters</h2>

<p>Every few days there’s a new “AI-powered IDE” on Product Hunt. They’re solving the wrong problem. Making code suggestions without deep context is like having a brilliant junior dev who just joined yesterday - they’ll write clean code that subtly breaks everything.</p>

<p>The key isn’t better code generation. It’s better code understanding.</p>

<h2 id="open-questions">Open Questions</h2>

<p>We’re still figuring out:</p>

<ul>
  <li>When to refresh vs preserve historical understanding</li>
  <li>How to handle conflicting patterns in different parts of the system</li>
  <li>Whether to expose uncertainty in the analysis</li>
</ul>

<h2 id="whats-next">What’s Next?</h2>

<p>I’m curious if we can teach AI to spot other senior dev instincts:</p>

<ul>
  <li>Identifying tech debt before it happens</li>
  <li>Suggesting architectural improvements</li>
  <li>Catching security issues from usage patterns</li>
  <li>Understanding unwritten team conventions</li>
</ul>

<p>The problem isn’t making AI write more code. It’s teaching it to think about code the way experienced developers do.</p>

<p><small>
[0] Previously said <em>You probably did what I did - start at line 1, read every file top to bottom, get lost in the details.</em>, edited in response to <a href="https://news.ycombinator.com/item?id=42602156">feedback from advael</a>
</small></p>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[You Wouldn't Download an AI (133 pts)]]></title>
            <link>https://altayakkus.substack.com/p/you-wouldnt-download-an-ai</link>
            <guid>42601549</guid>
            <pubDate>Sun, 05 Jan 2025 13:19:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://altayakkus.substack.com/p/you-wouldnt-download-an-ai">https://altayakkus.substack.com/p/you-wouldnt-download-an-ai</a>, See on <a href="https://news.ycombinator.com/item?id=42601549">Hacker News</a></p>
Couldn't get https://altayakkus.substack.com/p/you-wouldnt-download-an-ai: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[A story on home server security (147 pts)]]></title>
            <link>https://raniseth.com/blog/2025-01-04-Home-Server-Security.html</link>
            <guid>42601374</guid>
            <pubDate>Sun, 05 Jan 2025 12:36:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://raniseth.com/blog/2025-01-04-Home-Server-Security.html">https://raniseth.com/blog/2025-01-04-Home-Server-Security.html</a>, See on <a href="https://news.ycombinator.com/item?id=42601374">Hacker News</a></p>
Couldn't get https://raniseth.com/blog/2025-01-04-Home-Server-Security.html: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[How Nat Traversal Works (2020) (218 pts)]]></title>
            <link>https://tailscale.com/blog/how-nat-traversal-works</link>
            <guid>42600846</guid>
            <pubDate>Sun, 05 Jan 2025 10:15:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tailscale.com/blog/how-nat-traversal-works">https://tailscale.com/blog/how-nat-traversal-works</a>, See on <a href="https://news.ycombinator.com/item?id=42600846">Hacker News</a></p>
Couldn't get https://tailscale.com/blog/how-nat-traversal-works: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[The funniest thing I ever did – a.k.a. "How To Make $100K From A Dick Joke." (182 pts)]]></title>
            <link>https://imgur.com/gallery/KZ4u3c4</link>
            <guid>42600595</guid>
            <pubDate>Sun, 05 Jan 2025 09:03:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://imgur.com/gallery/KZ4u3c4">https://imgur.com/gallery/KZ4u3c4</a>, See on <a href="https://news.ycombinator.com/item?id=42600595">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Struggle with CSS Flexbox? This Playground Is for You (189 pts)]]></title>
            <link>https://yoavsbg.github.io/css-flexbox-playground/</link>
            <guid>42600586</guid>
            <pubDate>Sun, 05 Jan 2025 09:02:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://yoavsbg.github.io/css-flexbox-playground/">https://yoavsbg.github.io/css-flexbox-playground/</a>, See on <a href="https://news.ycombinator.com/item?id=42600586">Hacker News</a></p>
Couldn't get https://yoavsbg.github.io/css-flexbox-playground/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Back to basics: Why we chose long-polling over websockets (125 pts)]]></title>
            <link>https://www.inferable.ai/blog/posts/postgres-nodejs-longpolling.mdx</link>
            <guid>42600276</guid>
            <pubDate>Sun, 05 Jan 2025 07:14:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.inferable.ai/blog/posts/postgres-nodejs-longpolling.mdx">https://www.inferable.ai/blog/posts/postgres-nodejs-longpolling.mdx</a>, See on <a href="https://news.ycombinator.com/item?id=42600276">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><header><div><p>Learn how we implemented real-time updates using Node.js, TypeScript, and PostgreSQL with HTTP long polling. A practical guide to building scalable real-time systems without WebSockets.</p><div><p><span>Nadeesha Cabral</span></p><p><span>•</span><time datetime="04-01-2025">04-01-2025</time></p></div></div></header><p>Like many teams building real-time systems with Node.js and TypeScript, we've been exploring ways to handle real-time updates at scale. Our system handles hundreds of worker nodes constantly polling our PostgreSQL-backed control plane for new jobs (tool calls issued by agents), while agents themselves continuously pull for execution and chat state updates. What started as an exploration into WebSockets led us to a surprisingly effective "old-school" solution: HTTP long polling with Postgres.</p>
<h2>The Challenge: Real-time Updates at Scale</h2>
<p>Our Node.js/TypeScript backend faced two main challenges:</p>
<ol>
<li><strong>Worker Node Updates</strong>: Hundreds of worker nodes running our Node.js / Golang / C# SDKs needed to know about new jobs as soon as they were available, requiring a querying strategy that didn't bring down our Postgres database</li>
<li><strong>Agent State Synchronization</strong>: Agents required real-time updates about execution and chat state, which we needed to stream efficiently.</li>
</ol>
<h2>Long Polling vs WebSockets: A Refresher</h2>
<h3>How Long Polling Works</h3>
<pre>sequenceDiagram
    participant Client
    participant Server
    participant Database
    
    Client-&gt;&gt;Server: Request new data
    
    alt Data available immediately
        Server-&gt;&gt;Database: Check for data
        Database--&gt;&gt;Server: Return data
        Server--&gt;&gt;Client: Return response immediately
    else No data available
        Server-&gt;&gt;Database: Check for data
        Database--&gt;&gt;Server: No data
        Note over Server: Hold connection
        loop Check periodically
            Server-&gt;&gt;Database: Poll for new data
            Database--&gt;&gt;Server: New data arrives
        end
        Server--&gt;&gt;Client: Return response
    end
    Client-&gt;&gt;Server: Next request begins
</pre>
<p>The key difference between approaches can be understood with a simple train analogy:</p>
<p>Short polling is like a train that departs strictly according to a timetable - it leaves the station at fixed intervals regardless of whether there are passengers or not. WebSockets, on the other hand, are like having a dedicated train line always ready to transport passengers.</p>
<p>Long polling? It's like a train that waits at the station until at least one passenger boards before departing. If no passengers show up within a certain time (TTL), only then does it leave empty. This approach gives you the best of both worlds - immediate departure when there's data (passengers) and efficient resource usage when there's not.</p>
<p>In technical terms:</p>
<ol>
<li>With short polling, the server responds immediately whether there's data or not</li>
<li>With long polling, the server holds the connection open until either:<!-- -->
<ul>
<li>New data becomes available</li>
<li>A timeout is reached (TTL)</li>
</ul>
</li>
</ol>
<h2>Our Implementation Deep Dive</h2>
<p>Let's break down our Node.js implementation:</p>
<pre><code><span>export</span> <span>const</span> <span>getJobStatusSync</span> = <span>async</span> (<span>{
  jobId,
  owner,
  ttl = <span>60_000</span>,
}: {
  jobId: <span>string</span>;
  owner: { clusterId: <span>string</span> };
  ttl?: <span>number</span>;
}</span>) =&gt; {
  <span>let</span> <span>jobResult</span>: {
    <span>service</span>: <span>string</span>;
    <span>status</span>: <span>"pending"</span> | <span>"running"</span> | <span>"success"</span> | <span>"failure"</span> | <span>"stalled"</span>;
    <span>result</span>: <span>string</span> | <span>null</span>;
    <span>resultType</span>: <span>ResultType</span> | <span>null</span>;
  } | <span>undefined</span>;

  <span>const</span> start = <span>Date</span>.<span>now</span>();
</code></pre>
<p>The function accepts:</p>
<ul>
<li><code>jobId</code>: Unique identifier for the job we're tracking</li>
<li><code>owner.clusterId</code>: Cluster identifier for multi-tenancy</li>
<li><code>ttl</code>: Time-to-live in milliseconds (defaults to 60 seconds)</li>
</ul>
<h3>The Polling Loop</h3>
<pre><code>  <span>do</span> {
    <span>const</span> [job] = <span>await</span> data.<span>db</span>
      .<span>select</span>({
        <span>service</span>: data.<span>jobs</span>.<span>service</span>,
        <span>status</span>: data.<span>jobs</span>.<span>status</span>,
        <span>result</span>: data.<span>jobs</span>.<span>result</span>,
        <span>resultType</span>: data.<span>jobs</span>.<span>result_type</span>,
      })
      .<span>from</span>(data.<span>jobs</span>)
      .<span>where</span>(<span>and</span>(<span>eq</span>(data.<span>jobs</span>.<span>id</span>, jobId), <span>eq</span>(data.<span>jobs</span>.<span>cluster_id</span>, owner.<span>clusterId</span>)));

    <span>if</span> (!job) {
      <span>throw</span> <span>new</span> <span>NotFoundError</span>(<span>`Job <span>${jobId}</span> not found`</span>);
    }

    <span>if</span> (job.<span>status</span> === <span>"success"</span> || job.<span>status</span> === <span>"failure"</span>) {
      jobResult = job;
    } <span>else</span> {
      <span>await</span> <span>new</span> <span>Promise</span>(<span><span>resolve</span> =&gt;</span> <span>setTimeout</span>(resolve, <span>500</span>));
    }
  } <span>while</span> (!jobResult &amp;&amp; <span>Date</span>.<span>now</span>() - start &lt; ttl);
</code></pre>
<p>Key aspects:</p>
<ol>
<li>The loop continues until either:<!-- -->
<ul>
<li>We get a final status (<code>success</code> or <code>failure</code>)</li>
<li>We hit the TTL timeout</li>
</ul>
</li>
<li>We use a 500ms delay between checks to prevent hammering the database</li>
<li>Database query is optimized with proper indexes on <code>id</code> and <code>cluster_id</code></li>
</ol>
<h3>Error Handling and Response</h3>
<pre><code>  <span>if</span> (jobResult) {
    <span>return</span> jobResult;
  } <span>else</span> {
    <span>throw</span> <span>new</span> <span>JobPollTimeoutError</span>(<span>`Call did not resolve within <span>${ttl}</span>ms`</span>);
  }
</code></pre>
<p>The function concludes by:</p>
<ol>
<li>Throwing a timeout error if no result was found</li>
<li>Returning the job result if successful</li>
</ol>
<h2>Database Optimization</h2>
<p>For this pattern to work efficiently, proper Postgres indexing needs to be implemented:</p>
<pre><code><span>CREATE</span> INDEX idx_jobs_status <span>ON</span> jobs(id, cluster_id);
<span>CREATE</span> INDEX idx_jobs_lookup <span>ON</span> jobs(status) <span>WHERE</span> status <span>IN</span> (<span>'success'</span>, <span>'failure'</span>);
</code></pre>
<p>This ensures our frequent polling queries are fast and don't put unnecessary load on the database.</p>
<h2>The Hidden Benefits of Long Polling</h2>
<p>One of the most compelling aspects of long polling is what you don't have to build. Here's what we avoided:</p>
<h3><strong>Observability Remains Unchanged</strong></h3>
<p>One of the biggest wins is that we don't need to modify our observability stack for WebSockets. All our standard HTTP metrics just work out of the box, and our existing logging patterns do exactly what we need. There's no need to figure out new ways to monitor persistent connections or implement additional logging for WebSocket state.</p>
<h3><strong>Authentication Simplicity</strong></h3>
<p>We completely avoid the headache of implementing a new authentication mechanism for incoming WebSocket connections. We just keep using our standard HTTP authentication that we already have in place. All our existing security patterns continue to work exactly as they always have.</p>
<p>When we implemented Websockets earlier, this became extremely gnarly due to the RBAC restrictions we had to honor. Basically, we needed to be really careful about what data we push to the connected clients, and the privilege escalation that happens when a client moves from one cluster to another.</p>
<h3><strong>Infrastructure Compatibility</strong></h3>
<p>Corporate firewalls blocking WebSocket connections was one of our other worries. Some  of our users are behind firewalls, and we don't need the IT headache of getting them to open up WebSockets.</p>
<p>Not our problem. We don't need any special proxy configurations or complex infrastructure setups. Our standard load balancer configuration works fine without any modifications. The entire stack just keeps humming along as it always has.</p>
<h3><strong>Operational Simplicity</strong></h3>
<p>We never have to worry about server restarts dropping WebSocket connections. There's no connection state to manage or maintain. When something goes wrong (and something always goes wrong), it's much easier to debug and troubleshoot because we're just dealing with standard HTTP requests and responses.</p>
<p>We use Cloudflare for our edge, and that means our existing configuration rules and DDoS protection didn't need any changing.</p>
<h3><strong>Client Implementation</strong></h3>
<p>The client-side code stays remarkably simple. It works with any HTTP client, no special WebSocket libraries needed. Even better, reconnection handling comes for free with basic retry logic. The entire client implementation can often be just a few lines of code.</p>
<h2>Why Not ElectricSQL?</h2>
<p>While exploring solutions, we looked at <a href="https://electric-sql.com/blog/2024/07/17/electric-next">ElectricSQL</a>, which synchronizes Postgres data to the frontend. They make an interesting case for long polling over WebSockets:</p>
<blockquote>
<p>"Switching to an HTTP protocol may at first seem like a regression or a strange fit. Web sockets are built on top of HTTP specifically to serve the kind of realtime data stream that Electric provides. However, they are also more stateful and harder to cache."</p>
</blockquote>
<p>In fact, we actually recommend ElectricSQL if you don't need extreme control or low-level constructs to handle real-time updates. It's a solid, battle-tested solution that handles many edge cases and provides a great developer experience.</p>
<h3>Why We Chose Raw Long Polling</h3>
<p>The message delivery mechanism is a core part of our product - it's not just an implementation detail, it's central to what we do. You can't afford to have something as fundamental as message delivery abstracted away in a third-party library, no matter how good that library might be.</p>
<p>Our specific use case required:</p>
<ol>
<li><strong>Core Product Control</strong>: Full control over our message delivery mechanism - it's not just infrastructure, it's our product</li>
<li><strong>Zero External Dependencies</strong>: We needed our stack to be as simple as possible for self-hosting</li>
<li><strong>Close to the Metal</strong>: Direct control over the polling mechanism and connection handling</li>
<li><strong>Maximum Control</strong>: Ability to fine-tune every aspect of the implementation, including implementing dynamic polling intervals</li>
<li><strong>Simplicity</strong>: Making it easy for users to understand and modify the codebase</li>
</ol>
<p>For us, staying close to the metal with a simple HTTP long polling implementation was the right choice. But if you don't need this level of control, ElectricSQL provides a more feature-rich solution that could save you significant development time.</p>
<h2>Application Layer Best Practices</h2>
<p>When implementing long polling, there are several critical practices to follow to ensure reliable operation:</p>
<h3><strong>Mandatory TTL Implementation</strong></h3>
<p>You must implement a Time-To-Live (TTL) for your HTTP connections. Without this, you'll inevitably run into connection reset errors. Your polling logic should always return within this TTL, no matter what.</p>
<pre><code><span>const</span> <span>getJobStatus</span> = <span>async</span> (<span>jobId: <span>string</span>, ttl = <span>60_000</span></span>) =&gt; {
  <span>const</span> start = <span>Date</span>.<span>now</span>();
  
  <span>// Always check if we've exceeded TTL</span>
  <span>while</span> (<span>Date</span>.<span>now</span>() - start &lt; ttl) {
    <span>// polling logic here</span>
  }
  
  <span>return</span> <span>null</span>; <span>// TTL exceeded</span>
}
</code></pre>
<h3><strong>Client-Configurable TTL with Server Limits</strong></h3>
<p>While clients should be able to specify their desired TTL, the server must enforce a maximum limit:</p>
<pre><code><span>const</span> <span>MAX_TTL</span> = <span>120_000</span>; <span>// 2 minutes</span>

<span>const</span> <span>getJobStatus</span> = <span>async</span> (<span>jobId: <span>string</span>, clientTtl: <span>number</span></span>) =&gt; {
  <span>const</span> ttl = <span>Math</span>.<span>min</span>(clientTtl, <span>MAX_TTL</span>);
  <span>// ... polling logic</span>
}
</code></pre>
<h3><strong>Infrastructure-Aware TTL Settings</strong></h3>
<p>Your maximum TTL must stay under the minimum HTTP connection timeout across your entire infrastructure stack:</p>
<ul>
<li>Application server timeouts</li>
<li>Client timeouts</li>
<li>Load balancer timeouts</li>
<li>Edge server timeouts</li>
<li>Proxy timeouts</li>
</ul>
<p>For example, if your edge server has a 30-second timeout, your max TTL should be comfortably under this, say 25 seconds.</p>
<h3><strong>Sensible Database Polling Intervals</strong></h3>
<p>As shown in our implementation, include a reasonable wait time between database polls. We use a 500ms interval:</p>
<pre><code><span>await</span> <span>new</span> <span>Promise</span>(<span><span>resolve</span> =&gt;</span> <span>setTimeout</span>(resolve, <span>500</span>));
</code></pre>
<p>This prevents hammering your database while still providing reasonably quick updates.</p>
<h3><strong>Optional: Exponential Backoff</strong></h3>
<p>While not implemented in our current system, you can implement exponential backoff for more efficient resource usage:</p>
<pre><code><span>const</span> <span>getJobStatus</span> = <span>async</span> (<span>jobId: <span>string</span>, ttl = <span>60_000</span></span>) =&gt; {
  <span>const</span> start = <span>Date</span>.<span>now</span>();
  <span>let</span> waitTime = <span>100</span>; <span>// Start with 100ms</span>
  
  <span>while</span> (<span>Date</span>.<span>now</span>() - start &lt; ttl) {
    <span>const</span> result = <span>await</span> <span>checkJob</span>(jobId);
    
    <span>if</span> (result) <span>return</span> result;
    
    <span>// Exponential backoff with max of 2 seconds</span>
    waitTime = <span>Math</span>.<span>min</span>(waitTime * <span>2</span>, <span>2000</span>);
    <span>await</span> <span>new</span> <span>Promise</span>(<span><span>resolve</span> =&gt;</span> <span>setTimeout</span>(resolve, waitTime));
  }
  
  <span>return</span> <span>null</span>;
}
</code></pre>
<p>This approach means:</p>
<ul>
<li>Active requests (those likely to get data soon) terminate quickly</li>
<li>Inactive requests gradually increase their polling interval</li>
<li>System resources are used more efficiently</li>
</ul>
<h2>A Case for WebSockets: The Other Side of the Story</h2>
<p>While we've found long polling to be a great solution for our needs, it's not the only option. WebSockets are not inherently bad. They just require a lot of love and attention.</p>
<p>The challenges we mentioned aren't insurmountable - they just require proper engineering attention:</p>
<ul>
<li>
<p><strong>Observability</strong>: WebSockets are more stateful, so you need to implement additional logging and monitoring for persistent connections.</p>
</li>
<li>
<p><strong>Authentication</strong>: You need to implement a new authentication mechanism for incoming WebSocket connections.</p>
</li>
<li>
<p><strong>Infrastructure</strong>: You need to configure your infrastructure to support WebSockets, including load balancers and firewalls.</p>
</li>
<li>
<p><strong>Operations</strong>: You need to manage WebSocket connections and reconnections, including handling connection timeouts and errors.</p>
</li>
<li>
<p><strong>Client Implementation</strong>: You need to implement a client-side WebSocket library, including handling reconnections and state management.</p>
</li>
</ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hacker gains access to the RP2350 OTP secret by glitching the RISC-V cores (177 pts)]]></title>
            <link>https://www.tomshardware.com/raspberry-pi/it-looks-like-the-raspberry-pi-rp2350-hacking-challenge-has-been-beaten-hacker-gains-access-to-the-otp-secret-by-glitching-the-risc-v-cores-to-enable-debugging</link>
            <guid>42599971</guid>
            <pubDate>Sun, 05 Jan 2025 05:24:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/raspberry-pi/it-looks-like-the-raspberry-pi-rp2350-hacking-challenge-has-been-beaten-hacker-gains-access-to-the-otp-secret-by-glitching-the-risc-v-cores-to-enable-debugging">https://www.tomshardware.com/raspberry-pi/it-looks-like-the-raspberry-pi-rp2350-hacking-challenge-has-been-beaten-hacker-gains-access-to-the-otp-secret-by-glitching-the-risc-v-cores-to-enable-debugging</a>, See on <a href="https://news.ycombinator.com/item?id=42599971">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">

<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture data-new-v2-image="true">
<source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:320/yB6wiDWXxE5MZmYV7D2CSG.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:480/yB6wiDWXxE5MZmYV7D2CSG.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:650/yB6wiDWXxE5MZmYV7D2CSG.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:970/yB6wiDWXxE5MZmYV7D2CSG.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1024/yB6wiDWXxE5MZmYV7D2CSG.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1200/yB6wiDWXxE5MZmYV7D2CSG.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1301/yB6wiDWXxE5MZmYV7D2CSG.jpg.webp 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)">
<img src="https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:320/yB6wiDWXxE5MZmYV7D2CSG.jpg" alt="RP2350 Hacking Challenge" srcset="https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:320/yB6wiDWXxE5MZmYV7D2CSG.jpg 320w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:480/yB6wiDWXxE5MZmYV7D2CSG.jpg 480w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:650/yB6wiDWXxE5MZmYV7D2CSG.jpg 650w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:970/yB6wiDWXxE5MZmYV7D2CSG.jpg 970w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1024/yB6wiDWXxE5MZmYV7D2CSG.jpg 1024w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1200/yB6wiDWXxE5MZmYV7D2CSG.jpg 1200w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1301/yB6wiDWXxE5MZmYV7D2CSG.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/yB6wiDWXxE5MZmYV7D2CSG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/yB6wiDWXxE5MZmYV7D2CSG.jpg" data-pin-nopin="true" fetchpriority="high" crossorigin="anonymous">
</picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/yB6wiDWXxE5MZmYV7D2CSG.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Aedan Cullen)</span>
</figcaption>
</div>

<div id="article-body">
<p>We may have a winner for the $20,000 Raspberry Pi and Hextree RP2350 <a data-analytics-id="inline-link" href="https://www.raspberrypi.com/news/can-you-hack-our-new-chip/" data-url="https://www.raspberrypi.com/news/can-you-hack-our-new-chip/" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">Hacking Challenge</a>, but we won't officially find out who the winner is until January 14. Engineer Aedan Cullen went public with his <a data-analytics-id="inline-link" href="https://media.ccc.de/v/38c3-hacking-the-rp2350" data-url="https://media.ccc.de/v/38c3-hacking-the-rp2350" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">Hacking the RP2350</a> presentation at the recent 38th Chaos Communication Congress (38C3), and there is a <a data-analytics-id="inline-link" href="https://github.com/aedancullen/hacking-the-rp2350/tree/master" data-url="https://github.com/aedancullen/hacking-the-rp2350/tree/master" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">GitHub repo</a> now published to accompany the video <a data-analytics-id="inline-link" href="https://github.com/aedancullen/hacking-the-rp2350/blob/master/README.md" data-url="https://github.com/aedancullen/hacking-the-rp2350/blob/master/README.md" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">here</a>. Cullen studied the RP2350 in detail before going for a voltage injection glitch attack on pin 53 of the RP2350 chip, which managed to turn on the 'permanently disabled' RISC-V cores and their debug access port, enabling him to read the secret.</p><p>Raspberry Pi <a data-analytics-id="inline-link" href="https://www.tomshardware.com/raspberry-pi/raspberry-pi-pico/whats-inside-the-raspberry-pi-pico-2s-rp2350" data-before-rewrite-localise="https://www.tomshardware.com/raspberry-pi/raspberry-pi-pico/whats-inside-the-raspberry-pi-pico-2s-rp2350">introduced the RP2350 </a>via the <a data-analytics-id="inline-link" href="https://www.tomshardware.com/raspberry-pi/raspberry-pi-pico/raspberry-pi-pico-2-launches-with-arm-risc-v-cores-hands-on-with-the-new-dollar5-microcontroller" data-before-rewrite-localise="https://www.tomshardware.com/raspberry-pi/raspberry-pi-pico/raspberry-pi-pico-2-launches-with-arm-risc-v-cores-hands-on-with-the-new-dollar5-microcontroller">Raspberry Pi Pico 2</a> as a successor to the <a data-analytics-id="inline-link" href="https://www.tomshardware.com/news/raspberry-pi-10-million-rp2040s" data-before-rewrite-localise="https://www.tomshardware.com/news/raspberry-pi-10-million-rp2040s">RP2040</a> – with added <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/security" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/security">security</a> features to appeal to commercial and industrial customers. To publicize the new microcontroller it teamed up with Hextree to devise the RP2350 Hacking Challenge, <a data-analytics-id="inline-link" href="https://www.raspberrypi.com/news/can-you-hack-our-new-chip/" data-url="https://www.raspberrypi.com/news/can-you-hack-our-new-chip/" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">announced at DEF CON in August</a>. This challenge concluded on 31 Dec 2024, but we must wait until January 14 for the official winner announcement. Cullen made his presentation at 38C3 on Dec 27 and also shared a GitHub repo with an outline of his hacking process and Python code. However, we don't know if Cullen is the winner, so this may not be the $20K winning hack method.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-1200-80.jpg.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-320-80.jpg" alt="RP2350 Hacking Challenge" srcset="https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG-1200-80.jpg 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/ibXQxW6autxYfKtTJxaTQG.jpg"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Aedan Cullen)</span></figcaption></figure><p>Specifically, the RP2350 comes with a quartet of new security features, that Raspberry Pi was keen to highlight. These are Secure Boot, TrustZone, Redundancy Coprocessor (RCP), and Glitch Detectors. The setters of the challenge hid a secret on one of these 'fully secured' chips, which would be supplied to hackers who applied, and the first demonstrable success story would get $20,000 and the kudos of being the winner of the challenge. Attacks using hardware and/or software means were permissible by the competition rules, so it was almost an anything-goes situation.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-1200-80.jpg.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-320-80.jpg" alt="RP2350 Hacking Challenge" srcset="https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG-1200-80.jpg 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/GBWvVvGr6TbJk6ujN9bTQG.jpg"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Aedan Cullen)</span></figcaption></figure><p>Raspberry Pi and Hextree would hide the secret in the RP2350's OTP (One Time Programmable) memory on the chip, said to be a once-set but never-forget binary code. Picotool was used to write the covert code to the OTP. Then the RP2350's OTP memory was locked behind the Page Locks hardware protection feature, set to an 'inaccessible' state '13:12' as per the table above. Firmware was also signed, with Secure Boot enabled, and they disabled the chip debug feature, so prying eyes couldn't get to the secret via a Serial Wire Debug (SWD) interface. Furthermore, all other bootkeys were disabled, the RP2350 Glitch Detector was turned on and then set to its highest sensitivity. It certainly sounds like it was locked down.</p><p>Cullen says he started his hacking process by studying the RP2350 data sheet and the dependencies outlined in the documentation. Then Cullen drilled down on how the RP2350 boots and establishes its security settings, with particular attention to the OTP.</p><p>Cullen's first idea was to get the OTP to misread its critical bit settings, you could get the chip to work in a non-secure way. Cullen even X-rayed the RP2350 as part of his investigations and annotated the chip blocks. However, he stresses that this was just a pursuit of interest and not really instrumental to beating the challenge.</p><p>Research compelled Cullen to focus on Pin 53, labeled USB-OTP_VDD, as it is connected to OTP (and USB) functions. Perhaps a hacker could "mess with this power supply externally" to affect these functions, he pondered. So he took off the chip and isolated Pin 53 (physically cutting PCB trace), so it was ready to be electrically tampered with separately on a reassembled board.</p><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-nQ4sTaGVvBq3RDynH4YwZQ"><section><p>Get Tom's Hardware's best news and in-depth reviews, straight to your inbox.</p></section></div><div aria-hidden="false" data-swipeable="true" data-hydrate="true" id="slice-container-imageGallery-nQ4sTaGVvBq3RDynH4YwZQ-V5ppwQPQlYKQEEzp8YfYNSf4WgG7yCzH"><figure data-bordeaux-image-check="false"><div><picture data-hydrate="true"><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-1200-80.jpg.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG.jpg" data-pin-nopin="true" data-slice-image="true"><source type="image/jpeg" srcset="https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG-1200-80.jpg 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG.jpg" data-pin-nopin="true" data-slice-image="true"><img src="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" alt="RP2350 Hacking Challenge" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/VqTQyzSKcfsLApECYJYjTG.jpg" data-pin-nopin="true" data-slice-image="true"></picture></div><figcaption><span itemprop="copyrightHolder">(Image credit: Aedan Cullen )</span></figcaption></figure></div><p>With this hardware-modified setup, Cullen probed Pin 53 to "inject whatever voltages I want" and checked what happened. An unprotected RP2350 board was kept on hand for side-by-side comparisons. Once the hardware was set up he watched what normally occurs when a secured and a non-secured RP2350 started up – according to the probe readout on an oscilloscope.</p><p>16 groups of spikes were seen, corresponding with 16 initial OTP reads on startup. Cullen then tested injecting power glitches to Pin 53 at certain points in the boot process. Disappointingly, the debug remained locked down. Next, a Python script was used to sweep the position of a glitch power input through the entire 600-microsecond range of OTP reads during startup. The debug functionality was checked but never became available. So Cullen looked at the unlocked RP2350 board again, with debugging enabled, for clues.</p><p>Then, something interesting was observed, as the RISC-V cores showed up via the glitch on the unsecured RP2350. Cullen then used another script to check where the RISC-V debug access port shows up. This technique could also be triggered on the secured RP2350 – and a debugger could now be connected to the secured RP2350 and the secret read from the OTP!</p><h2 id="secret-gets-busted-3">Secret gets busted</h2><p>The 'permanently disabled' RISC-V cores had been woken by the glitch to enable this access. Cullen explains the odd underlying reason that the glitch 0x00030033 works is that it disables both Arm and RISC-V cores but, the Arm disable instruction has higher priority, leaving RISC-V turned on. Importantly the glitch successfully clears Debug_Disable.</p><div aria-hidden="false" data-swipeable="true" data-hydrate="true" id="slice-container-imageGallery-nQ4sTaGVvBq3RDynH4YwZQ-NKOg5Y8ErILypSgdcOnKfaOiUe7TF7Qt"><figure data-bordeaux-image-check="false"><div><picture data-hydrate="true"><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-1200-80.jpg.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG.jpg" data-pin-nopin="true" data-slice-image="true"><source type="image/jpeg" srcset="https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG-1200-80.jpg 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG.jpg" data-pin-nopin="true" data-slice-image="true"><img src="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" alt="RP2350 Hacking Challenge" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/vkU8csoeyzL6rtQTzQKcQG.jpg" data-pin-nopin="true" data-slice-image="true"></picture></div><figcaption><span itemprop="copyrightHolder">(Image credit: Aedan Cullen )</span></figcaption></figure></div><p>For more information about the background to this hack, particularly bypassing the guard read mechanism, we advise watching the video recorded during the 38c3 (linked top). There's also an interesting Q&amp;A at the end of the session. You might find attendees ask similar questions to those you may have.</p><p>Cullen concluded his presentation with three pithy points:</p><ul><li>Human communication factors are huge. Sidense [the company behind OTP NV memory tech used] knew how to do guards properly, and RPi missed out.</li><li>“Permanent” is not a thing unless it involves chip destruction. There is some copper somewhere with each signal…</li><li>Remember to glitch in the places they don’t tell you.</li></ul>
</div>



<!-- Drop in a standard article here maybe? -->




<div id="slice-container-authorBio-nQ4sTaGVvBq3RDynH4YwZQ"><p>Mark Tyson is a news editor at Tom's Hardware. He enjoys covering the full breadth of PC tech; from business and semiconductor design to products approaching the edge of reason.</p></div>
</section>





<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>








</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Guten: A Tiny Newspaper Printer (224 pts)]]></title>
            <link>https://amanvir.com/guten</link>
            <guid>42599599</guid>
            <pubDate>Sun, 05 Jan 2025 03:47:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://amanvir.com/guten">https://amanvir.com/guten</a>, See on <a href="https://news.ycombinator.com/item?id=42599599">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[No more needles Tracking blood sugar on your wrist (322 pts)]]></title>
            <link>https://uwaterloo.ca/news/media/no-more-needles-tracking-blood-sugar-your-wrist</link>
            <guid>42599189</guid>
            <pubDate>Sun, 05 Jan 2025 02:12:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://uwaterloo.ca/news/media/no-more-needles-tracking-blood-sugar-your-wrist">https://uwaterloo.ca/news/media/no-more-needles-tracking-blood-sugar-your-wrist</a>, See on <a href="https://news.ycombinator.com/item?id=42599189">Hacker News</a></p>
<div id="readability-page-1" class="page"><div property="content:encoded"><p>Imagine shrinking satellite technology that predicts the weather into a device that transmits vital information about the health of the person wearing it.</p>

<p>University of Waterloo engineers have achieved this&nbsp;technological feat to help people faced with&nbsp;chronic health problems such as diabetes monitor their glucose levels.</p>

<p>The Waterloo team’s breakthrough addresses the major challenge of creating non-invasive, continuous glucose monitoring, essential for those managing diabetes.</p>

<p>Currently, diabetics must frequently prick their fingers or rely on invasive wearable patches with micro-needles to track their blood-sugar levels. But the system designed by Dr. George Shaker, an adjunct associate professor at Waterloo’s Department of Electrical and Computer Engineering, and his colleagues eliminates this need, thereby reducing pain, the risk of infection and improving people’s quality of life.</p>

<p><img alt="George Shaker picture" height="233" src="https://uwaterloo.ca/news/sites/ca.news/files/resize/styles/feature_small/public/george_shaker_23-06-13_0853_1-350x233.jpg?itok=mvnnwrr9" width="350">“We’ve developed radar technology that can now fit inside a smart watch and sense glucose levels more accurately than ever before,” Shaker said. “Just like you use glasses to improve your vision, our technology helps for better sensing of glucose levels.”</p>

<p>To explain how the new system works, Shaker points to weather satellites that use radar to monitor the Earth’s atmosphere and, for example, measure storm movements and other kinds of cloud cover.</p>

<p>“We’ve figured a way to miniaturize these radar systems on satellites and put them in a wearable device and use the same radar technology that looks at changes in the atmosphere to look at changes in the human body,” he said</p>

<p>The system’s key components are a radar chip, which sends and receives signals through the body, an engineered “meta-surface”, which helps focus these signals for better accuracy, and microcontrollers, which process the radar signals using artificial intelligence algorithms. The algorithms improve the accuracy and reliability of the readings by learning from the data over time.</p>

<p>The unique aspect of this system is the meta-surface which Shaker and his team have developed. It further improves the radar’s resolution and sensitivity, allowing for more accurate glucose readings.</p>

<p>“Unlike existing methods that require skin penetration our system is entirely non-invasive and can detect even small changes in glucose level,” Shaker said. “No other technology can provide this level of precision without direct contact with the bloodstream.”</p>

<p>More work remains to perfect their system. Although the engineers now power their device with a USB cable, they’re planning to optimize it for battery use to improve portability. Eventually, they hope it can be used to gather other health-related data, such as blood pressure.</p>

<p>The team is currently working with industry partners to introduce the technology to be installed in the next generation of wearables.</p>

<p>“We have a minimum viable product that’s already being used in clinical trials, and while there’s more work to be done, we’re much closer to a full marketable device,” Shaker said.</p>

<p>The research paper, “Radar near-field sensing using metasurface for biomedical applications” was recently featured in Nature’s <a href="https://www.nature.com/articles/s44172-024-00194-4"><i>Communications Engineering</i></a>.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Web page annoyances that I don't inflict on you here (243 pts)]]></title>
            <link>http://rachelbythebay.com/w/2025/01/04/cruft/</link>
            <guid>42599102</guid>
            <pubDate>Sun, 05 Jan 2025 01:54:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://rachelbythebay.com/w/2025/01/04/cruft/">http://rachelbythebay.com/w/2025/01/04/cruft/</a>, See on <a href="https://news.ycombinator.com/item?id=42599102">Hacker News</a></p>
Couldn't get http://rachelbythebay.com/w/2025/01/04/cruft/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Nearly half Dell's US workforce has rejected RTO. Rather WFH than get promoted (2024) (192 pts)]]></title>
            <link>https://www.msn.com/en-us/money/companies/nearly-half-of-dell-s-full-time-workforce-in-the-u-s-has-rejected-returning-to-the-office-they-d-rather-work-from-home-than-get-promoted/ar-BB1oBygb</link>
            <guid>42598722</guid>
            <pubDate>Sun, 05 Jan 2025 00:32:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.msn.com/en-us/money/companies/nearly-half-of-dell-s-full-time-workforce-in-the-u-s-has-rejected-returning-to-the-office-they-d-rather-work-from-home-than-get-promoted/ar-BB1oBygb">https://www.msn.com/en-us/money/companies/nearly-half-of-dell-s-full-time-workforce-in-the-u-s-has-rejected-returning-to-the-office-they-d-rather-work-from-home-than-get-promoted/ar-BB1oBygb</a>, See on <a href="https://news.ycombinator.com/item?id=42598722">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[University of Alabama Engineer Pioneers New Process for Recycling Plastics (2024) (138 pts)]]></title>
            <link>https://news.ua.edu/2024/10/ua-chemical-engineer-plastic-recycling/</link>
            <guid>42598458</guid>
            <pubDate>Sat, 04 Jan 2025 23:30:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.ua.edu/2024/10/ua-chemical-engineer-plastic-recycling/">https://news.ua.edu/2024/10/ua-chemical-engineer-plastic-recycling/</a>, See on <a href="https://news.ycombinator.com/item?id=42598458">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="primary">
					
<article id="post-160701">
	<!-- .entry-header -->

	<div>
		
<p>Plastic recycling is commonplace but imperfect. Part of the problem, says <a href="https://eng.ua.edu/eng-directory/dr-jason-e-bara/" target="_blank" rel="noreferrer noopener">Dr. Jason Bara</a>, is that current processes yield lower-quality plastics with reduced value and fewer end uses. In a circular plastic economy, any plastic could be broken down to its component parts and then reconstituted into new products with little or no waste.</p>



<p>The science is not there yet, but it may be one step closer.</p>



<div>
<div>
<figure><img decoding="async" width="828" height="1024" src="https://news.ua.edu/wp-content/uploads/2024/10/2209032_BH_119_Jason_Bara-828x1024.jpg" alt="Dr. Jason Bara of The University of Alabama. " srcset="https://news.ua.edu/wp-content/uploads/2024/10/2209032_BH_119_Jason_Bara-828x1024.jpg 828w, https://news.ua.edu/wp-content/uploads/2024/10/2209032_BH_119_Jason_Bara-243x300.jpg 243w, https://news.ua.edu/wp-content/uploads/2024/10/2209032_BH_119_Jason_Bara-768x950.jpg 768w, https://news.ua.edu/wp-content/uploads/2024/10/2209032_BH_119_Jason_Bara-1242x1536.jpg 1242w, https://news.ua.edu/wp-content/uploads/2024/10/2209032_BH_119_Jason_Bara-1656x2048.jpg 1656w" sizes="(max-width: 828px) 100vw, 828px"><figcaption>Dr. Jason Bara</figcaption></figure>
</div>



<div>
<p>Bara, a professor in the College of Engineering, leads a team at The University of Alabama working to improve <a href="https://news.ua.edu/2021/08/ua-researchers-part-of-national-effort-to-tackle-plastic-waste/">methods to recycle</a> the ubiquitous plastics we interact with daily.</p>



<p>Polyethylene terephthalate (PET) is a common plastic that responds well to chemolysis, a chemical process that depolymerizes plastic for recycling. Much of the previous work on chemolysis and PET has focused on water, alcohols, and amines.&nbsp; Amines are a group of compounds derived from ammonia and are especially effective for PET depolymerization, but most products formed from the aminolysis of PET have limited uses, Bara said.</p>
</div>
</div>



<h2 id="h-let-s-see-what-happens"><strong>“Let’s See What Happens”</strong></h2>



<p>Nothing in the literature pointed to the effectiveness of imidazoles in this process. Imidazole, and its related compounds, are a group of organic molecules that are used in a wide range of applications and even appear within biologically important compounds.</p>



<p>“I’ve been working with imidazole for much of my career,” said Bara. “It’s pretty amazing how versatile it is.” Bara had been working for two years with using amines to break down plastics as part of a National Science Foundation grant geared toward reducing plastic waste. His appreciation for imidazole’s versatility made it a natural extension to see what happened when he tried using it for chemolysis.</p>



<p>“My student came back into the lab and said oh — the plastic is gone. It’s all gone.”</p>



<p>The University of Alabama has filed a patent application for the process, which offers several key advantages over other chemical recycling methods for PET. Among these is the lack of need of an additional solvent or catalyst because imidazole has a relatively low melting point. These are favorable qualities for developing a cost efficient and commercially viable process.</p>



<p>Breaking down PET via imidazolysis yields chemical intermediates that can be transformed to a range of other chemicals that are hard to get by traditional methods.</p>



<p>“Our imidazolysis process is unique in that it’s a flexible recycling technology, and you can get a wider range of final products from PET depolymerization when you do it our way,” Bara said.</p>



<h2 id="h-chasing-the-next-challenge"><strong>Chasing the Next Challenge</strong></h2>



<p>Bara says one of the more exciting things about the research is what lies ahead.</p>



<div><p>PET is among the easier plastics to recycle. For one thing, it is relatively clean because it is used in food containers and drink bottles, and it generally contains few additives. Based on their results so far, imidazolysis is also useful in depolymerizing polyurethanes, which are trickier to work with than PET.</p><figure><img loading="lazy" decoding="async" width="1024" height="683" src="https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_480960525-1024x683.jpeg" alt="Wooden box marked with a recycling symbol holding a variety of plastic bottles. " srcset="https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_480960525-1024x683.jpeg 1024w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_480960525-300x200.jpeg 300w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_480960525-768x512.jpeg 768w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_480960525-1536x1024.jpeg 1536w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_480960525-2048x1366.jpeg 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></figure></div>



<p>“There is generally good awareness around the need to recycle plastics and other materials (paper, metal) that commonly go into our recycling bins,” he said. “But it’s harder to appreciate that polyurethanes can also be chemically recycled.”</p>



<p>Polyurethanes are generally encountered as foams that are full of air, do not melt and often are formulated with any number of inorganic additives. Think packing foams, seat cushions, memory foam mattresses and automobile seats.</p>



<figure><img loading="lazy" decoding="async" width="2560" height="1439" src="https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-scaled.jpeg" alt="Yellow chunks of polyurethane foam, torn into irregular pieces. " srcset="https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-scaled.jpeg 2560w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-300x169.jpeg 300w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-1024x576.jpeg 1024w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-768x432.jpeg 768w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-1536x864.jpeg 1536w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-2048x1152.jpeg 2048w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-1280x720.jpeg 1280w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-640x360.jpeg 640w, https://news.ua.edu/wp-content/uploads/2024/10/AdobeStock_294651475-edited-320x180.jpeg 320w" sizes="(max-width: 2560px) 100vw, 2560px"><figcaption>The new process could increase the recycling of polyurethane foam, which is widely used a variety of consumer products.</figcaption></figure>



<p>“While municipal recycling is limited to the most common thermoplastics, consumers likely don’t understand the magnitude of the polyurethane problem that needs to be addressed.”</p>



<p>Imidazolysis not only works to break down polyurethanes and allows for recovery of the molecular components (the polyols used to make polyurethanes can be especially valuable to recover), but the physical properties of imidazole also make it a better reagent for carrying out the reaction.</p>



<p>“While I think what we’ve already published on the successful imidazolysis of PET is very exciting,” Bara said, “The chemical recycling of polyurethanes is where imidazolysis may potentially have a much bigger impact.”</p>



<p>This work on recycling PET and PU via imidazolysis has been supported by active funding from NSF and includes contributions from researchers at Iowa State University.</p>
	</div><!-- .entry-content -->

	<!-- .entry-footer -->
</article><!-- #post-160701 -->



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Begining of the End for ANT+ Wireless (103 pts)]]></title>
            <link>https://www.dcrainmaker.com/2025/01/the-begining-of-the-end-for-ant-wireless.html</link>
            <guid>42597395</guid>
            <pubDate>Sat, 04 Jan 2025 20:19:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dcrainmaker.com/2025/01/the-begining-of-the-end-for-ant-wireless.html">https://www.dcrainmaker.com/2025/01/the-begining-of-the-end-for-ant-wireless.html</a>, See on <a href="https://news.ycombinator.com/item?id=42597395">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						<p><img loading="lazy" title="HRM.png" src="https://media.dcrainmaker.com/images/2025/01/HRM.png" alt="" width="718" height="404" srcset="https://media.dcrainmaker.com/images/2025/01/HRM.png 718w, https://media.dcrainmaker.com/images/2025/01/HRM-200x113.png 200w, https://media.dcrainmaker.com/images/2025/01/HRM-124x70.png 124w, https://media.dcrainmaker.com/images/2025/01/HRM-300x169.png 300w" sizes="(max-width: 718px) 100vw, 718px"></p>
<p>First off, no, your ANT+ devices aren’t going to stop working. In fact, companies are not only supporting them going forward, but will continue to make ANT+ devices for some time to come. Instead, ANT+ (or more technically, Garmin), has announced a policy change that effectively and officially ceases the development of new ANT+ standards. Though practically speaking, that mostly happened long ago.</p>
<p>The core reason for this change is the <a href="https://single-market-economy.ec.europa.eu/sectors/electrical-and-electronic-engineering-industries-eei/radio-equipment-directive-red_en">European Union’s Radio Equipment Directive</a> (simply called EU RED), which will ultimately take full effect next summer (it’s currently in a transitional phase). That directive covers a flotilla of different areas, but one of the most applicable pieces is that it requires authentication and encryption for wireless communications of personal information. Or, at the very least, it requires manufacturers to make you aware when data is being transmitted without such protections.</p>
<p>While ANT+ has long offered the ability to authenticate and encrypt data streams, it hasn’t been implemented in common profiles like heart rate or cycling power. Garmin says that to do so going forward would effectively break backward compatibility, as it significantly increases the payload sent in any message. Given the landscape of devices and Bluetooth in 2025, there’s virtually no appetite from other manufacturers to re-create the wheel when it comes to ANT+.</p>
<p>As a result, Garmin is making a bunch of changes around the certification side, development, and program side. None of these ANT+ changes will impact consumers in any way, anytime soon. However, there are some other Garmin changes that will soon start to impact consumers.</p>
<p>Let’s dive into it – but first, it’s important to understand a tiny bit of backstory here, to see the long term challenges that lie ahead.</p>
<h3 data-test="1/5" id="a-bit-of-backstory"><span><strong>A Bit of Backstory:</strong></span></h3>
<p>Regardless of how you feel about ANT+ (or Garmin’s ownership of it), it has remained as the most stable thing in the sports tech universe for almost two decades. I say ‘stable’, because it forced companies to align to a standard, which made communications and interoperability seamless for devices like heart rate sensors and cycling power meters. There’s no question that cycling power meters wouldn’t have taken off if we were still back in the days of proprietary SRM wireless, or wired PowerTap SL hubs. And certainly, as the Bluetooth power meter profile has (and continues to) demonstrate – it’s far from a reliable standard. In a review set for tomorrow, I’ll show how a popular watch doesn’t seem to implement this decade-old Bluetooth power meter standard correctly.</p>
<p>Of course, Bluetooth Low Energy (the direct competitor to ANT+, versus full-blown Bluetooth used for audio that’s a different beast), quickly gained popularity in the early 2010’s after the consortium announced standards around fitness devices, notably the heart rate strap first. While <a href="https://www.dcrainmaker.com/2013/10/samsung-mobile-devices.html">companies like Samsung</a> and <a href="https://www.dcrainmaker.com/2011/09/hands-on-review-of-sony-ericsson-xperia.html">Sony had adopted ANT+</a> in their phones, it was Apple’s decision to skip it that ultimately doomed ANT+. In fact, to this day, the mere mention of ANT+ in front of Apple employees in the know, is akin to smearing poop on the bathroom stall (seriously). It should be noted, for funsies, that Fitbit actually used to use ANT+ for communications between their early devices and the initial wireless adapter for your computer.</p>
<p>It’d be remiss to write an article about ANT+, without mentioning Dynastream (based in Cochrane, Alberta). That’s the original company behind ANT+, <a href="https://sgbonline.com/garmin-to-acquire-dynastream-in-36-million-deal/">that Garmin acquired in 2006</a>. The founder of Dynastream would eventually go on to found 4iiii in 2010, maker of power meters and many other products over the last 15 years. Still, despite Garmin’s ownership of ANT+, it was never really a meaningful problem for competitors. The (significant) value in having a common interoperability standard far outweighed the very small licensing fee these companies paid to Dynastream/Garmin. Consumers saw that value, and gravitated towards products that had standards in place.</p>
<h3 data-test="2/5" id="the-tipping-point"><span><strong>The Tipping Point:</strong></span></h3>
<p><img loading="lazy" title="PolarVeritySEnse.jpg" src="https://media.dcrainmaker.com/images/2025/01/PolarVeritySEnse.jpg" alt="" width="719" height="478" srcset="https://media.dcrainmaker.com/images/2025/01/PolarVeritySEnse.jpg 719w, https://media.dcrainmaker.com/images/2025/01/PolarVeritySEnse-200x133.jpg 200w, https://media.dcrainmaker.com/images/2025/01/PolarVeritySEnse-300x200.jpg 300w" sizes="(max-width: 719px) 100vw, 719px"></p>
<p>A key part of any device communication on either ANT+ or Bluetooth smart are so-called sport/sensor/device profiles.</p>
<p>Think of a sensor/device profile as a way to define how certain types of devices communicate. For example, there’s a heart rate device profile for heart rate sensors. Or the cycling power meter one, and so on. Companies that have a stake in these profiles come together to try and create a single cohesive standard. For ANT+, <a href="https://www.thisisant.com/company/activity-icons/">there are dozens of these profiles</a>. Some companies like SRAM did an exceptional job of each new product they launched, they created an open profile for it (such as Dropper Post or ANT+ shifting). And Garmin largely did the same as well for each new product.</p>
<p>In the case of ANT+, this process was highly regulated, and sometimes (ok, most times) a wee bit slow. But if a company had a vision for the profile and a specific product launch timeframe/date, it was generally pretty efficient. It became less efficient the more companies got involved, or if the company didn’t have a specific product launch date. Said differently: If you danced your own dance with purpose, you could get a standard profile pretty darn quickly. If you involved a massive committee of competitors or were wishy-washy on dates, it dragged on for years. One only needs to see the much-requested Aero sensor profile as an example of that. And there are many more.</p>
<p>However, the Bluetooth SIG side had its own issues. These profiles were coming hot and heavy, but often driven by players that frankly didn’t have any business being part of that profile. We’d see automotive companies involved in the cycling power meter profile, for example. Thus, that profile still suffers plenty of problems to this day as it doesn’t really capture everything that power meters did 10 years ago, let alone today.</p>
<p>Still, by the mid-late 2010’s, most of the core sports profiles used were available in Bluetooth, including Bluetooth footpods, Bluetooth power meters, Bluetooth heart rate sensors, Bluetooth Speed &amp; Cadence sensors, and Bluetooth FTMS (for smart trainer control). Likewise, by that time, most of the chipsets used were dual ANT+/Bluetooth Smart. Almost every sensor made since 2016ish has been dual ANT+/Bluetooth Smart, albeit, it wasn’t until a few years later when multi-channel Bluetooth chipsets became commonplace, ensuring users could connect to their heart rate strap from more than one device at once (a problem primarily in the indoor training space).</p>
<p>As a result, Bluetooth finally became not only viable for sports use, but just as reliable in most scenarios. And in some cases, it handled wireless interference better than ANT+ did.</p>
<!-- BEGIN THM NATIVE CODE -->

<!-- END THM NATIVE CODE -->      <h3 data-test="3/5" id="how-ant-ends"><span><strong>How ANT+ Ends:</strong></span></h3>
<p><img loading="lazy" title="EndOfANT.png" src="https://media.dcrainmaker.com/images/2025/01/EndOfANT.png" alt="" width="720" height="307" srcset="https://media.dcrainmaker.com/images/2025/01/EndOfANT.png 1440w, https://media.dcrainmaker.com/images/2025/01/EndOfANT-200x85.png 200w, https://media.dcrainmaker.com/images/2025/01/EndOfANT-720x307.png 720w" sizes="(max-width: 720px) 100vw, 720px"></p>
<p>As I mentioned earlier on, the single biggest dagger to ANT+ is the EU RED, and the need to encrypt data. All of this would require a massive overhaul of ANT+, breaking backward compatibility with tens (if not hundreds) of millions of devices. Setting aside whether or not consumers actually want their live heart rate data at the gym encrypted, that’s where we find ourselves. As a result, Garmin has <a href="https://www.thisisant.com/business/go-ant/ant-brand/">announced the following changes</a>:</p>
<p><strong>– They are discontinuing membership programs/fees:</strong> Up until now, there were different membership tiers of ANT+ that companies/startups could join. These had fees, though relatively minor. Still, Garmin says it wouldn’t be right to charge companies for a membership that doesn’t have long-term viability in it.<br>
<strong>– They are discontinuing certification programs:</strong> Companies could submit products to be certified as compliant with standards. Some companies like Wahoo took this quite seriously, and sent everything. As of March 31st, ANT+ will stop accepting certification submissions. And as of June 30th, they’ll stop certifying new products.<br>
<strong>– They are ceasing development of new ANT+ Profiles:</strong> No surprise here, there’s no new development/expansion of ANT+ profiles.<br>
<strong>– They are however continuing to ensure ANT+ is available on silicon:</strong> This ensures that ANT+ is still available on chipset providers for a long time to come. As one might expect, there are millions of devices, both from a sensor and display (e.g., watch/bike computer) standpoint, that still want to use ANT+ connections. Garmin says they’re working to ensure these chipset providers continue to make dual ANT+/Bluetooth chipsets.<br>
<strong>– All documentation to be made fully available online:</strong> Certain tier ANT+ members could access more detailed documentation than lower tiers. This basically makes all ANT+ documents available to everyone.</p>
<p>All of this basically means that your ANT+ devices will continue to work just fine, and we’ll actually probably continue to see ANT+ devices made by companies like Garmin/Wahoo/etc for quite some time as well. That’s because there are workarounds to the EU RED requirements, such as notifying the user. Or, simply assuming that portions of the EU RED will get delayed yet again.</p>
<p>In fact, we’re already seeing Garmin introduce some mitigations. In recent Garmin watch/bike computer beta firmware versions, you’ll see a new connection option type shown:</p>
<p><img loading="lazy" title="IMG_2431.jpeg" src="https://media.dcrainmaker.com/images/2025/01/IMG_2431.jpeg" alt="" width="355" height="266" srcset="https://media.dcrainmaker.com/images/2025/01/IMG_2431.jpeg 710w, https://media.dcrainmaker.com/images/2025/01/IMG_2431-200x150.jpeg 200w" sizes="(max-width: 355px) 100vw, 355px"> <img loading="lazy" title="IMG_2432.jpeg" src="https://media.dcrainmaker.com/images/2025/01/IMG_2432.jpeg" alt="" width="355" height="266" srcset="https://media.dcrainmaker.com/images/2025/01/IMG_2432.jpeg 710w, https://media.dcrainmaker.com/images/2025/01/IMG_2432-200x150.jpeg 200w" sizes="(max-width: 355px) 100vw, 355px"></p>
<p>More on related things later/soonish.</p>
<p>As for the reduction of ANT+ positions within Garmin, the company noted that they “have a shortage of people, not ideas”. Everyone in the Cochrane office is simply being reassigned to other work areas. Garmin has largely leveraged the Cochrane office in recent years for projects related to sensors and other communication technologies (e.g., heart rate sensors, power meters, etc…).</p>
<h3 data-test="4/5" id="a-lot-of-gaps"><span><strong>A Lot of Gaps:</strong></span></h3>
<p><img loading="lazy" title="Radar.jpg" src="https://media.dcrainmaker.com/images/2025/01/Radar.jpg" alt="" width="720" height="480" srcset="https://media.dcrainmaker.com/images/2025/01/Radar.jpg 720w, https://media.dcrainmaker.com/images/2025/01/Radar-200x133.jpg 200w, https://media.dcrainmaker.com/images/2025/01/Radar-300x200.jpg 300w" sizes="(max-width: 720px) 100vw, 720px"></p>
<p>Now going back to that initial excitement period in the 2010’s, standards-based profiles largely halted. Most companies, including Garmin, saw the Bluetooth SIG as a hopeless entity more concerned with putting in place roadblocks than progress. We saw companies like Polar and Wahoo – who used to have significant presence on the Bluetooth SIGs (committee groups), significantly reduce involvement. As a result, there’s been no new sports/fitness profiles in nearly a decade.</p>
<p>Thus, while it’s easy for many consumers to dismiss ANT+ as irrelevant, it’s very much still a part of certain scenes – the biggest being cycling. Things get really messy, really quick.</p>
<p><strong>Got a cycling radar (like a Varia Radar device)?</strong> Yup, that’s almost exclusively on ANT+. The only Bluetooth implementations are private/proprietary implementations that are unique to each company. Even radars from Bryton, Magene, and others all use ANT+ as the primary protocol.</p>
<p><strong>Got wireless shifting or Di2?</strong> Those too are on ANT. In the case of SRAM/Campagnolo/FSA, that’s broadcasting your gear and battery status on the ANT+ shifting protocol. In the case of Shimano, that’s using their proprietary ANT (but not ANT+) protocol. Of course, <a href="https://www.dcrainmaker.com/2022/05/shimano-hammerhead-functionality.html">that’s resulted in all sorts of messiness</a>. But there is absolutely *zero* Bluetooth alternative for any of these companies right now.</p>
<p><strong>How about cycling lights?</strong> If you want those cycling lights connected to your Wahoo/Garmin/Hammerhead/COROS/whatever bike computer, that’s using ANT+. Sure, there are, again, proprietary Bluetooth implementations out there. But they only work within that specific company’s ecosystem (thinking of Lezyne as an example).</p>
<p>Sure, for heart rate data the standard is well understood on Bluetooth. It simply doesn’t matter whether or not you have an ANT+ or Bluetooth Smart heart rate strap, they both work perfectly fine. There are minor pros and cons to each, but for 99.9% of consumers, it just doesn’t matter.</p>
<p>So what happens to mitigate these gaps?</p>
<h3 data-test="5/5" id="what-happens-next-for-consumers"><span><strong>What Happens Next for Consumers:</strong></span></h3>
<p><img loading="lazy" title="ANTSymp.jpg" src="https://media.dcrainmaker.com/images/2025/01/ANTSymp.jpg" alt="" width="720" height="480" srcset="https://media.dcrainmaker.com/images/2025/01/ANTSymp.jpg 720w, https://media.dcrainmaker.com/images/2025/01/ANTSymp-200x133.jpg 200w, https://media.dcrainmaker.com/images/2025/01/ANTSymp-300x200.jpg 300w" sizes="(max-width: 720px) 100vw, 720px"></p>
<p>The answer to this section headline is simple: Back to walled gardens.</p>
<p>Of course, that was already mostly the trend the last 4-5 years. Unfortunately, the COVID era further cemented that by eliminating various interoperability conferences/events that had occurred prior. Adding to that is the heavy shift towards startup tech companies that have largely eschewed standards as well, be it protocol or file format.</p>
<p>While one might assume Bluetooth SIGs would be the answer going forward, history and current company commentary have very clearly indicated otherwise. I’ve yet to find a single sports tech company that wants to deal with pushing forward new device profiles with the Bluetooth SIG. Companies don’t see that as a viable route to success, and certainly not worth their time and headaches.</p>
<p>Instead, companies like Garmin say they’re going to work to make private profiles more available. I asked Garmin, for example, about the radar profile, for which Garmin has had a private Bluetooth implementation available for years now. They give that to some companies upon request, to implement within their apps. They didn’t have (yet) a specific firm answer for how that’ll look going forward, but instead pointed to Wahoo’s early release a decade ago of their trainer control protocols as an example of the likely direction.</p>
<p>For those that don’t remember the early 2010 protocol days of Wahoo smart trainers, they basically created their own trainer control standard, and then published the API/SDK on a website for all to use. That quickly made Wahoo’s KICKR trainer protocol the de facto standard for a period before the <a href="https://www.dcrainmaker.com/2016/07/everything-wanted-trainers.html">ANT+ FE-C standard came into play</a>.</p>
<p>Garmin has plenty of history of doing variants of that, both within the ANT+ sphere, but also their Connect IQ developer programs. But whether they actually do so is a different matter. In the trainer space, Garmin/Wahoo/Elite/Zwift all kinda quietly work together on various protocol things, but they don’t often reach the finish line in a public way.</p>
<p>The sports tech industry needs some replacement for what the <a href="https://www.dcrainmaker.com/tag/ant-symposium">ANT+ Symposium</a> did for over a decade, both in terms of an event to talk protocols (with competitors no less), but also the backend process to keep companies aligned to standards for the other 51 weeks of the year. Unfortunately, I don’t see how that happens going forward.</p>
<p>Until then, the good news is our ANT+ devices will continue to keep working.</p>
<p>With that, thanks for reading!</p>
<h3 data-test="6/5" id="found-this-post-useful-support-the-site">FOUND THIS POST USEFUL? SUPPORT THE SITE!</h3>
<p>Hopefully, you found this post useful. The website is really a labor of love, so please consider becoming a <a href="https://www.dcrainmaker.com/support" target="_blank">DC RAINMAKER Supporter</a>. This gets you an ad-free experience, and access to our (mostly) bi-monthly behind-the-scenes video series of “<a href="https://www.youtube.com/watch?v=-qbE3feTkds&amp;t=1s" target="_blank">Shed Talkin’</a>”.</p>
<p><a href="https://www.amazon.com/gp/browse.html?rw_useCurrentProtocol=1&amp;node=8916179011&amp;linkCode=ll2&amp;tag=dcr07-20&amp;linkId=2cf083a39b98796644643a4089b57a7a&amp;language=en_US&amp;ref_=as_li_ss_tl" target="_blank">Support DCRainMaker - Shop&nbsp;on&nbsp;Amazon</a></p>
<p>Otherwise, perhaps consider using the below link if <a href="https://www.amazon.com/gp/browse.html?rw_useCurrentProtocol=1&amp;node=8916179011&amp;linkCode=ll2&amp;tag=dcr07-20&amp;linkId=2cf083a39b98796644643a4089b57a7a&amp;language=en_US&amp;ref_=as_li_ss_tl" target="_blank">shopping on Amazon</a>. As an Amazon Associate, I earn from qualifying purchases. It doesn’t cost you anything extra, but your purchases help support this website a lot. It could simply be <a href="https://amzn.to/3SEEIK9" target="_blank">buying toilet paper</a>, or this <a href="https://amzn.to/3SEMN1M" target="_blank">pizza oven</a> we use and love.</p>

						
							

											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ELKS: Linux for 16-bit Intel Processors (188 pts)]]></title>
            <link>https://github.com/ghaerr/elks</link>
            <guid>42596983</guid>
            <pubDate>Sat, 04 Jan 2025 19:23:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ghaerr/elks">https://github.com/ghaerr/elks</a>, See on <a href="https://news.ycombinator.com/item?id=42596983">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ghaerr/elks/blob/master/Documentation/img/ELKS-Logo.png"><img src="https://github.com/ghaerr/elks/raw/master/Documentation/img/ELKS-Logo.png" alt="logo"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/jbruchon/elks/workflows/cross/badge.svg"><img src="https://github.com/jbruchon/elks/workflows/cross/badge.svg" alt="cross"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/jbruchon/elks/workflows/main/badge.svg"><img src="https://github.com/jbruchon/elks/workflows/main/badge.svg" alt="main"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is ELKS?</h2><a id="user-content-what-is-elks" aria-label="Permalink: What is ELKS?" href="#what-is-elks"></a></p>
<p dir="auto">ELKS is a project providing a Linux-like OS for systems based on the Intel
IA16 architecture (16-bit processors: 8086, 8088, 80188, 80186, 80286,
NEC V20, V30 and compatibles). Such systems are ancient computers (IBM-PC
XT / AT and clones) as well as more recent SBCs, SoCs, and FPGAs. ELKS supports networking and installation to HDD using both MINIX and FAT file systems.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Memory requirements</h2><a id="user-content-memory-requirements" aria-label="Permalink: Memory requirements" href="#memory-requirements"></a></p>
<ul dir="auto">
<li>Stock images require 512k RAM</li>
<li>ELKS requires 256k RAM to run, 512k to be really useful</li>
<li>No hardware MMU required</li>
<li>ROM-based systems can run in 128k RAM</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Try ELKS online</h2><a id="user-content-try-elks-online" aria-label="Permalink: Try ELKS online" href="#try-elks-online"></a></p>
<p dir="auto">You can <a href="https://copy.sh/v86/?profile=elks" rel="nofollow">play with ELKS online</a> thanks to the v86 emulator. Login with "root" and no password. Go to the bin folder and try the different commands available. Try nxtetris. Start the game by pressing "n".</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Watch ELKS in action</h2><a id="user-content-watch-elks-in-action" aria-label="Permalink: Watch ELKS in action" href="#watch-elks-in-action"></a></p>
<ul dir="auto">
<li><a href="https://www.youtube.com/watch?v=eooviN1SdQ8" rel="nofollow">ELKS, a 16-bit no-MMU Linux on Amstrad PC 2086</a> (thanks @pawoswm-arm)</li>
<li><a href="https://www.youtube.com/watch?v=6rwlqmdebxk" rel="nofollow">Booting ELKS on an old 286 MB from 1,44MB floppy</a> (thanks @xrayer)</li>
<li><a href="https://youtu.be/ZDffBj6zY-w?t=687" rel="nofollow">Epson PC Portable Q150A / Equity LT (Nec V30 8086 - 1989)</a> (thanks Alejandro)</li>
<li><a href="https://www.youtube.com/watch?v=Tr2yMjrgP8o" rel="nofollow">ELKS on ESP32 through IBM PC emulator</a> (thanks @fdivitto)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<p dir="auto">ELKS running on QEMU
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ghaerr/elks/blob/master/Screenshots/ELKS_0.7.0.png"><img src="https://github.com/ghaerr/elks/raw/master/Screenshots/ELKS_0.7.0.png" alt="ss1"></a></p>
<p dir="auto">Olivetti M24 8086 CPU
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ghaerr/elks/blob/master/Screenshots/Olivetti_M24_8086_CPU.png"><img src="https://github.com/ghaerr/elks/raw/master/Screenshots/Olivetti_M24_8086_CPU.png" alt="ss2"></a></p>
<p dir="auto">ELKS Networking showing netstat and process list
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ghaerr/elks/blob/master/Screenshots/ELKS_Networking.png"><img src="https://github.com/ghaerr/elks/raw/master/Screenshots/ELKS_Networking.png" alt="ss3"></a></p>
<p dir="auto">Running ELKS Basic on PC-9801UV21 (NEC V30 CPU)
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ghaerr/elks/blob/master/Screenshots/PC-9801UV21_V30_CPU.png"><img src="https://github.com/ghaerr/elks/raw/master/Screenshots/PC-9801UV21_V30_CPU.png" alt="ss4"></a></p>
<p dir="auto">Running Matrix and vi on multiple consoles
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ghaerr/elks/blob/master/Screenshots/ELKS_Matrix.jpg"><img src="https://github.com/ghaerr/elks/raw/master/Screenshots/ELKS_Matrix.jpg" alt="ss5"></a></p>
<p dir="auto">Of course Doom
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ghaerr/elks/blob/master/Screenshots/ELKS_Doom.png"><img src="https://github.com/ghaerr/elks/raw/master/Screenshots/ELKS_Doom.png" alt="ss6"></a></p>
<p dir="auto">Telnet to an old BBS
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ghaerr/elks/blob/master/Screenshots/ELKS_telnet_BBS.jpg"><img src="https://github.com/ghaerr/elks/raw/master/Screenshots/ELKS_telnet_BBS.jpg" alt="ss7"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Downloads</h2><a id="user-content-downloads" aria-label="Permalink: Downloads" href="#downloads"></a></p>
<p dir="auto">A full set of disk images are available for download, for you to try out ELKS: <a href="https://github.com/ghaerr/elks/releases">Downloads</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to build</h2><a id="user-content-how-to-build" aria-label="Permalink: How to build" href="#how-to-build"></a></p>
<p dir="auto">Full build instructions are <a href="https://github.com/ghaerr/elks/blob/master/BUILD.md">here</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Wiki</h2><a id="user-content-wiki" aria-label="Permalink: Wiki" href="#wiki"></a></p>
<p dir="auto">Help on how to use ELKS, as well as technical tutorials, are available on our <a href="https://github.com/ghaerr/elks/wiki">Wiki</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Documentation</h2><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto">More information is in the Documentation folder: <a href="https://htmlpreview.github.io/?https://github.com/ghaerr/elks/blob/master/Documentation/index.html" rel="nofollow">Index of ELKS Documentation</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Resources</h2><a id="user-content-resources" aria-label="Permalink: Resources" href="#resources"></a></p>
<p dir="auto">Other projects and resources interesting to ELKS and our programming community:</p>
<ul dir="auto">
<li><a href="https://github.com/ghaerr/blink16">blink16</a> A visual 8086 emulator and debugger capable of booting the ELKS kernel for symbolic debugging, as well as an emulator for ELKS executables.</li>
<li><a href="https://justine.lol/sizetricks/" rel="nofollow">Size Optimization Tricks</a> A great article from Justine Tunney's blog showing how big things can be done without bloat.</li>
<li><a href="https://github.com/tkchia/gcc-ia16">gcc-ia16</a> TK Chia's gcc compiler targeted for 8086, maintained and used for the ELKS kernel and all its applications.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">More information</h2><a id="user-content-more-information" aria-label="Permalink: More information" href="#more-information"></a></p>
<p dir="auto">Questions? Problems? Patches? Open an issue on the ELKS GitHub project!</p>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>