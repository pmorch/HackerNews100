<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 07 May 2025 16:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Waiting for Postgres 18: Accelerating Disk Reads with Asynchronous I/O (110 pts)]]></title>
            <link>https://pganalyze.com/blog/postgres-18-async-io</link>
            <guid>43916577</guid>
            <pubDate>Wed, 07 May 2025 14:57:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pganalyze.com/blog/postgres-18-async-io">https://pganalyze.com/blog/postgres-18-async-io</a>, See on <a href="https://news.ycombinator.com/item?id=43916577">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>With the Postgres 18 Beta 1 release this week a multi-year effort, and significant architectural shift in Postgres is taking shape: <strong>Asynchronous I/O (AIO)</strong>. These capabilities are still under active development, but they represent a fundamental change in how Postgres handles I/O, offering the potential for significant performance gains, particularly in cloud environments where latency is often the bottleneck.</p>
<div>
<ul>
<li>
<p><a href="#why-asynchronous-io-matters">Why asynchronous I/O matters</a></p>
<ul>
<li><a href="#how-postgres-17s-read-streams-paved-the-way">How Postgres 17’s read streams paved the way</a></li>
</ul>
</li>
<li>
<p><a href="#new-io_method-setting-in-postgres-18">New io_method setting in Postgres 18</a></p>
<ul>
<li><a href="#io_method--sync">io_method = sync</a></li>
<li><a href="#io_method--worker">io_method = worker</a></li>
<li><a href="#io_method--io_uring">io_method = io_uring</a></li>
</ul>
</li>
<li>
<p><a href="#asynchronous-io-in-action">Asynchronous I/O in action</a></p>
<ul>
<li><a href="#benchmark-on-aws-doubling-read-performance--even-greater-gains-from-io_uring">Benchmark on AWS: Doubling read performance &amp; even greater gains from io_uring</a></li>
<li><a href="#tuning-effective_io_concurrency">Tuning effective_io_concurrency</a></li>
<li><a href="#monitoring-ios-in-flight-with-pg_aios">Monitoring I/Os in flight with pg_aios</a></li>
</ul>
</li>
<li>
<p><a href="#heads-up-async-io-makes-io-timing-information-hard-to-interpret">Heads Up: Async I/O makes I/O timing information hard to interpret</a></p>
</li>
<li>
<p><a href="#conclusion">Conclusion</a></p>
<ul>
<li><a href="#in-summary">In summary</a></li>
<li><a href="#references">References</a></li>
</ul>
</li>
</ul>
</div>
<p>While some features may still be adjusted or dropped during the beta period before the final release, now is the best time to test and validate how Postgres 18 performs in practice. In Postgres 18 AIO is limited to read operations; writes remain synchronous, though support may expand in future versions.</p>
<p>In this post, we explain what asynchronous I/O is, how it works in Postgres 18, and what it means for performance optimization.</p>
<h2 id="why-asynchronous-io-matters"><a href="#why-asynchronous-io-matters" aria-label="why asynchronous io matters permalink"></a>Why asynchronous I/O matters</h2>
<p>Postgres has historically operated under a synchronous I/O model, meaning every read request is a blocking system call. The database must pause and wait for the operating system to return the data before continuing. This design introduces unnecessary waits on I/O, especially in cloud environments where storage is often network-attached (e.g. Amazon EBS) and I/O can have over 1ms of latency.</p>
<p>In a simplified model, we can illustrate the difference like this, ignoring any prefetching/batching the Linux kernel might do:</p>
<p><span>
      <a href="https://pganalyze.com/static/cd0be5dde105345bb288ac73655b90f1/913b9/sync_vs_async.png" target="_blank" rel="noopener">
    <span></span>
  <img alt="Diagram showing synchronous vs asynchronous I/O model with concurrent requests" title="In the asynchronous I/O model, multiple read requests can be in flight simultaneously" src="https://pganalyze.com/static/cd0be5dde105345bb288ac73655b90f1/1d69c/sync_vs_async.png" srcset="https://pganalyze.com/static/cd0be5dde105345bb288ac73655b90f1/4dcb9/sync_vs_async.png 188w, https://pganalyze.com/static/cd0be5dde105345bb288ac73655b90f1/5ff7e/sync_vs_async.png 375w, https://pganalyze.com/static/cd0be5dde105345bb288ac73655b90f1/1d69c/sync_vs_async.png 750w, https://pganalyze.com/static/cd0be5dde105345bb288ac73655b90f1/78797/sync_vs_async.png 1125w, https://pganalyze.com/static/cd0be5dde105345bb288ac73655b90f1/aa440/sync_vs_async.png 1500w, https://pganalyze.com/static/cd0be5dde105345bb288ac73655b90f1/913b9/sync_vs_async.png 1822w" sizes="(max-width: 750px) 100vw, 750px" loading="lazy" decoding="async">
  </a>
    </span></p>
<p>You can picture synchronous I/O like an imaginary librarian who retrieves one book at a time, returning before fetching the next. This inefficiency compounds as the number of physical reads for a logical operation increases.</p>
<p>Asynchronous I/O eliminates that bottleneck by allowing programs to issue multiple read requests concurrently, without waiting for prior reads to return. In an async program flow, I/O requests are scheduled to be read into a memory location and the program waits for completion of those reads, instead of issuing each read individually.</p>
<h3 id="how-postgres-17s-read-streams-paved-the-way"><a href="#how-postgres-17s-read-streams-paved-the-way" aria-label="how postgres 17s read streams paved the way permalink"></a>How Postgres 17’s read streams paved the way</h3>
<p>The work for implementing asynchronous I/O in Postgres has been many years in the making. Postgres 17 introduced an essential internal abstration, <a href="https://pganalyze.com/blog/5mins-postgres-17-streaming-io">with the introduction of read stream APIs</a>. These internal changes standardized how read operations were issued across different subsystems and streamlined the use of <code>posix_fadvise()</code> to request that the operating system prefetch data in advance.</p>
<p>However, this advisory mechanism only hinted to the kernel to load data into the OS page cache, not into Postgres’ own shared buffers. Postgres still had to issue syscalls for each read, and OS readahead behaviour is not always consistent.</p>
<p>The upcoming Postgres 18 release removes this indirection. With true asynchronous reads, data is fetched directly into shared buffers by the database itself, bypassing reliance on kernel-level heuristics and enabling more predictable, higher-throughput I/O behavior.</p>
<h2 id="new-io_method-setting-in-postgres-18"><a href="#new-io_method-setting-in-postgres-18" aria-label="new io_method setting in postgres 18 permalink"></a>New io_method setting in Postgres 18</h2>
<p>To control the mechanism used for asynchronous I/O, Postgres 18 introduces a new configuration parameter: <code>io_method</code>. This setting determines how read operations are dispatched under the hood, and whether they’re handled synchronously, offloaded to I/O workers, or submitted directly to the kernel via <code>io_uring</code>.</p>
<p>The <code>io_method</code> setting must be set in postgresql.conf and cannot be changed without restarting. It controls which  I/O implementation Postgres will use and is essential to understand when tuning I/O performance in Postgres 18. There are three possible settings for io_method, with the current default (as of Beta 1) being <code>worker</code>.</p>
<h3 id="io_method--sync"><a href="#io_method--sync" aria-label="io_method  sync permalink"></a>io_method = sync</h3>
<p>The <code>sync</code> setting in Postgres 18 mirrors the synchronous behavior as was implemented in Postgres 17. Reads are still synchronous and blocking, using <code>posix_fadvise()</code> to achieve read-ahead in the Linux kernel.</p>
<h3 id="io_method--worker"><a href="#io_method--worker" aria-label="io_method  worker permalink"></a>io_method = worker</h3>
<p>The <code>worker</code> setting utilizes dedicated <strong>I/O worker processes</strong> running in the background that retrieve data independently of query execution. The main backend process enqueues read requests, and these workers interact with the Linux kernel to fetch data, which is then delivered into shared buffers, <strong>without blocking the main process</strong>.</p>
<p>The number of I/O workers can be configured through the new <code>io_workers</code> setting, and defaults to <code>3</code>. These workers are always running, and shared across all connections and databases.</p>
<h3 id="io_method--io_uring"><a href="#io_method--io_uring" aria-label="io_method  io_uring permalink"></a>io_method = io_uring</h3>
<p>This Linux-specific method uses <strong><code>io_uring</code></strong>, a high-performance I/O interface introduced in kernel version 5.1. Asynchronous I/O has been available in Linux since kernel version 2.5, but it was largely considered inefficient and hard to use. <code>io_uring</code> establishes a <strong>shared ring buffer</strong> between Postgres and the kernel, minimizing syscall overhead. This is the most efficient option, <strong>eliminating the need for I/O worker processes entirely</strong>, but is only available on newer Linux kernels and requires file systems and configurations compatible with <code>io_uring</code> support.</p>
<p><strong>Important note:</strong> As of the Postgres 18 Beta 1, asynchronous I/O is supported for sequential scans, bitmap heap scans, and maintenance operations like <code>VACUUM</code>.</p>
<h2 id="asynchronous-io-in-action"><a href="#asynchronous-io-in-action" aria-label="asynchronous io in action permalink"></a>Asynchronous I/O in action</h2>
<p>Asynchronous I/O delivers the most noticeable gains in cloud environments where storage is network-attached, such as Amazon EBS volumes. In these setups, individual disk reads often take multiple milliseconds, introducing substantial latency compared to local SSDs.</p>
<p>With traditional synchronous I/O, each of these reads blocks query execution until the data arrives, leading to idle CPU time and degraded throughput. By contrast, asynchronous I/O allows Postgres to issue multiple read requests in parallel and continue processing while waiting for results. This reduces query latency and enables much more efficient use of available I/O bandwidth and CPU cycles.</p>
<h3 id="benchmark-on-aws-doubling-read-performance--even-greater-gains-from-io_uring"><a href="#benchmark-on-aws-doubling-read-performance--even-greater-gains-from-io_uring" aria-label="benchmark on aws doubling read performance  even greater gains from io_uring permalink"></a>Benchmark on AWS: Doubling read performance &amp; even greater gains from io_uring</h3>
<p>To evaluate the performance impact of asynchronous I/O, we benchmarked a representative workload on AWS, comparing Postgres 17 with Postgres 18 using different <code>io_method</code> settings. The workload remained identical across versions, allowing us to isolate the effects of the new I/O infrastructure.</p>
<p>We've tested on an AWS c7i.8xlarge instance (32 vCPUs, 64 GB RAM), with a dedicated 100GB <code>io2</code> EBS volume for Postgres, with 20,000 provisioned IOPS. The test table was 3.5GB in size:</p>
<div data-language="sql"><pre><code><span>CREATE</span> <span>TABLE</span> test<span>(</span>id <span>int</span><span>)</span><span>;</span>
<span>INSERT</span> <span>INTO</span> test <span>SELECT</span> <span>*</span> <span>FROM</span> generate_series<span>(</span><span>0</span><span>,</span> <span>100000000</span><span>)</span><span>;</span></code></pre></div>
<div data-language="text"><pre><code>test=# \dt+
                                   List of relations
 Schema | Name | Type  |  Owner   | Persistence | Access method |  Size   | Description 
--------+------+-------+----------+-------------+---------------+---------+-------------
 public | test | table | postgres | permanent   | heap          | 3458 MB | 
(1 row)</code></pre></div>
<p>Between test runs we cleared the OS page cache (<code>sync; echo 3 &gt; /proc/sys/vm/drop_caches</code>), and restarted Postgres, to gather cold cache results. Warm cache results represent running the query a second time. We repeated the complete test run for each configuration multiple times, retaining the best result out of three.</p>
<p>Whilst we also tested with parallel query, to keep results easier to understand all results below are with parallel query turned off (<code>max_parallel_workers_per_gather = 0</code>).</p>
<p><strong>Cold cache results:</strong></p>
<p>Postgres 17, using synchronous I/O, established the baseline. It showed consistent read latency, but throughput was limited by the need to complete each I/O request before issuing the next:</p>
<div data-language="text"><pre><code>test=# SELECT COUNT(*) FROM test;
   count   
-----------
 100000001
(1 row)

Time: 15830.880 ms (00:15.831)</code></pre></div>
<p>Postgres 18, when configured with <code>io_method = sync</code>, performed nearly identically, confirming that behavior remains unchanged without enabling asynchronous I/O:</p>
<div data-language="text"><pre><code>test=# SELECT COUNT(*) FROM test;
   count   
-----------
 100000001
(1 row)

Time: 15071.089 ms (00:15.071)</code></pre></div>
<p>However, when we switch to using the <code>worker</code> method, with 3 I/O workers (the default) a clear improvement shows:</p>
<div data-language="text"><pre><code>test=# SELECT COUNT(*) FROM test;
   count   
-----------
 100000001
(1 row)

Time: 10051.975 ms (00:10.052)</code></pre></div>
<p>We observed some gains by raising the number of I/O workers, but the biggested improvement comes when utilizing <code>io_uring</code>:</p>
<div data-language="text"><pre><code>test=# SELECT COUNT(*) FROM test;
   count   
-----------
 100000001
(1 row)

Time: 5723.423 ms (00:05.723)</code></pre></div>
<p>When we graph this (measuring runtime in ms, lower is better), it’s clear that Postgres 18 performs significantly better in cold cache situations:</p>
<p><span>
      <a href="https://pganalyze.com/static/506febf39b7d14c7ba413260d30b63cc/50e7d/runtime-compared.png" target="_blank" rel="noopener">
    <span></span>
  <img alt="Read performance comparison between Postgres 17 and 18 with different io_method settings" title="Read performance comparison between Postgres 17 and 18 with different io_method settings" src="https://pganalyze.com/static/506febf39b7d14c7ba413260d30b63cc/1d69c/runtime-compared.png" srcset="https://pganalyze.com/static/506febf39b7d14c7ba413260d30b63cc/4dcb9/runtime-compared.png 188w, https://pganalyze.com/static/506febf39b7d14c7ba413260d30b63cc/5ff7e/runtime-compared.png 375w, https://pganalyze.com/static/506febf39b7d14c7ba413260d30b63cc/1d69c/runtime-compared.png 750w, https://pganalyze.com/static/506febf39b7d14c7ba413260d30b63cc/78797/runtime-compared.png 1125w, https://pganalyze.com/static/506febf39b7d14c7ba413260d30b63cc/aa440/runtime-compared.png 1500w, https://pganalyze.com/static/506febf39b7d14c7ba413260d30b63cc/50e7d/runtime-compared.png 1738w" sizes="(max-width: 750px) 100vw, 750px" loading="lazy" decoding="async">
  </a>
    </span></p>
<p>For cold cache tests, both <code>worker</code> and <code>io_uring</code> delivered a consistent <strong>2-3x improvement</strong> in read performance compared to the legacy <code>sync</code> method.</p>
<p>Whilst <code>worker</code> offers a slight benefit for warm cache tests due to its parallelism, <code>io_uring</code> consistently performed better in cold cache tests, and its lower syscall overhead and reduced process coordination would make <strong><code>io_uring</code> the recommended setting</strong> for maximizing I/O performance in Postgres 18.</p>
<p>This performance shift for disk reads has meaningful implications for infrastructure planning, especially in cloud environments. By reducing I/O wait time, asynchronous reads can substantially increase query throughput, reduce latency and CPU overhead. For read-heavy workloads, this may translate into smaller instance sizes or better utilization of existing resources.</p>
<h3 id="tuning-effective_io_concurrency"><a href="#tuning-effective_io_concurrency" aria-label="tuning effective_io_concurrency permalink"></a>Tuning effective_io_concurrency</h3>
<p>In Postgres 18, <code>effective_io_concurrency</code> becomes more interesting, but only when used with an asynchronous <code>io_method</code> such as <code>worker</code> or <code>io_uring</code>. Previously, this setting merely advised the OS to prefetch data using <code>posix_fadvise</code>. Now, it directly controls how many asynchronous read-ahead requests Postgres issues internally.</p>
<p>The number of blocks read ahead is influenced by both <code>effective_io_concurrency</code> and <code>io_combine_limit</code>, following the general formula:</p>
<div data-language="text"><pre><code>maximum read-ahead = effective_io_concurrency × io_combine_limit</code></pre></div>
<p>This gives DBAs and engineers greater control over I/O behavior. The optimal value requires benchmarking, as it depends on your I/O subsystem. For example, higher values may benefit cloud environments with high latency that also support high concurrency, like AWS EBS with high provisioned IOPS.</p>
<p>When doing our benchmarks, we also tested higher <code>effective_io_concurrency</code> (between 16 and 128) but did not see a meaningful difference. However, that is likely due to the simple test query used.</p>
<p>It’s worth noting that the previous default of effective_io_concurrency was 1 in Postgres 17, which is now raised to 16, <a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=ff79b5b2ab">based on benchmarks done by the Postgres community</a>.</p>
<h3 id="monitoring-ios-in-flight-with-pg_aios"><a href="#monitoring-ios-in-flight-with-pg_aios" aria-label="monitoring ios in flight with pg_aios permalink"></a>Monitoring I/Os in flight with pg_aios</h3>
<p>As mentioned, previous versions of Postgres with synchronous I/O made it easy to spot read delays: the backend process would block while waiting for disk access, and monitoring tools like pganalyze can reliably surface <code>IO / DataFileRead</code> as a wait event during these stalls.</p>
<p>For example, here we can see wait events clearly in Postgres 17 synchronous I/O.</p>
<p><span>
      <a href="https://pganalyze.com/static/67303bca18e1ab006c16c26979172b33/8deec/wait_events_io_read.png" target="_blank" rel="noopener">
    <span></span>
  <img alt="Screenshot of pganalyze showing wait events in Postgres 17" title="pganalyze interface showing clear IO / DataFileRead wait events in Postgres 17" src="https://pganalyze.com/static/67303bca18e1ab006c16c26979172b33/1d69c/wait_events_io_read.png" srcset="https://pganalyze.com/static/67303bca18e1ab006c16c26979172b33/4dcb9/wait_events_io_read.png 188w, https://pganalyze.com/static/67303bca18e1ab006c16c26979172b33/5ff7e/wait_events_io_read.png 375w, https://pganalyze.com/static/67303bca18e1ab006c16c26979172b33/1d69c/wait_events_io_read.png 750w, https://pganalyze.com/static/67303bca18e1ab006c16c26979172b33/78797/wait_events_io_read.png 1125w, https://pganalyze.com/static/67303bca18e1ab006c16c26979172b33/aa440/wait_events_io_read.png 1500w, https://pganalyze.com/static/67303bca18e1ab006c16c26979172b33/8deec/wait_events_io_read.png 2136w" sizes="(max-width: 750px) 100vw, 750px" loading="lazy" decoding="async">
  </a>
    </span></p>
<p>With asynchronous I/O in Postgres 18, backend wait behavior changes. When using <code>io_method = worker</code>, the backend process delegates reads to a separate I/O worker. As a result, the backend may appear idle or show the new <code>IO / AioIoCompletion</code> wait event, while the I/O worker shows the actual I/O wait events:</p>
<div data-language="sql"><pre><code><span>SELECT</span> backend_type<span>,</span> query<span>,</span> state<span>,</span> wait_event_type<span>,</span> wait_event
  <span>FROM</span> pg_stat_activity
 <span>WHERE</span> backend_type <span>=</span> <span>'client backend'</span> <span>OR</span> backend_type <span>=</span> <span>'io worker'</span><span>;</span></code></pre></div>
<div data-language="text"><pre><code>  backend_type  | state  | wait_event_type |   wait_event    
----------------+--------+-----------------+-----------------
 client backend | active | IO              | AioIoCompletion
 io worker      |        | IO              | DataFileRead
 io worker      |        | IO              | DataFileRead
 io worker      |        | IO              | DataFileRead
(4 rows)</code></pre></div>
<p>With <code>io_method = io_uring</code>, read operations are submitted directly to the kernel and completed asynchronously. The backend does not block on a traditional I/O syscall, so this activity is not visible from the Postgres side, even though I/O is in progress.</p>
<p>To help with debugging of I/O requests in flight, the new <code>pg_aios</code> view can show Postgres internal state, even when using <code>io_uring</code>:</p>

<div data-language="text"><pre><code>  pid  | io_id | io_generation |    state     | operation |    off    | length | target | handle_data_len | raw_result | result  |                   target_desc                    | f_sync | f_localmem | f_buffered 
-------+-------+---------------+--------------+-----------+-----------+--------+--------+-----------------+------------+---------+--------------------------------------------------+--------+------------+------------
 91452 |     1 |          4781 | SUBMITTED    | read      | 996278272 | 131072 | smgr   |              16 |            | UNKNOWN | blocks 383760..383775 in file "base/16384/16389" | f      | f          | t
 91452 |     2 |          4785 | SUBMITTED    | read      | 996147200 | 131072 | smgr   |              16 |            | UNKNOWN | blocks 383744..383759 in file "base/16384/16389" | f      | f          | t
 91452 |     3 |          4796 | SUBMITTED    | read      | 996409344 | 131072 | smgr   |              16 |            | UNKNOWN | blocks 383776..383791 in file "base/16384/16389" | f      | f          | t
 91452 |     4 |          4802 | SUBMITTED    | read      | 996016128 | 131072 | smgr   |              16 |            | UNKNOWN | blocks 383728..383743 in file "base/16384/16389" | f      | f          | t
 91452 |     5 |          3175 | COMPLETED_IO | read      | 995885056 | 131072 | smgr   |              16 |     131072 | UNKNOWN | blocks 383712..383727 in file "base/16384/16389" | f      | f          | t
(5 rows)</code></pre></div>
<p>Understanding these behavior changes and understanding the impact of asynchronous execution is essential when optimizing I/O performance in Postgres 18.</p>
<h2 id="heads-up-async-io-makes-io-timing-information-hard-to-interpret"><a href="#heads-up-async-io-makes-io-timing-information-hard-to-interpret" aria-label="heads up async io makes io timing information hard to interpret permalink"></a>Heads Up: Async I/O makes I/O timing information hard to interpret</h2>
<p>Asynchronous I/O introduces a shift in how execution timing is reported. When the backend no longer blocks directly on disk reads (as is the case with <code>worker</code> or <code>io_uring</code>) the complete time spent doing I/O may not be reflected in <code>EXPLAIN ANALYZE</code> output. This can make I/O-bound queries seem to require less I/O effort than previously.</p>
<p>First, let's run the earlier query in <code>EXPLAIN ANALYZE</code> on a cold cache in Postgres 17:</p>
<div data-language="text"><pre><code>test=# EXPLAIN (ANALYZE, BUFFERS, TIMING OFF) SELECT COUNT(*) FROM test;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Aggregate  (cost=1692478.40..1692478.41 rows=1 width=8) (actual rows=1 loops=1)
   Buffers: shared read=442478
   I/O Timings: shared read=14779.316
   -&gt;  Seq Scan on test  (cost=0.00..1442478.32 rows=100000032 width=0) (actual rows=100000001 loops=1)
         Buffers: shared read=442478
         I/O Timings: shared read=14779.316
 Planning:
   Buffers: shared hit=13 read=6
   I/O Timings: shared read=3.182
 Planning Time: 8.136 ms
 Execution Time: 18006.405 ms
(11 rows)</code></pre></div>
<p>We've read 442,478 buffers in 14.8 seconds.</p>
<p>And now, we repeat the test on Postgres 18 with the default settings (<code>io_method = worker</code>):</p>
<div data-language="text"><pre><code>test=# EXPLAIN (ANALYZE, BUFFERS, TIMING OFF) SELECT COUNT(*) FROM test;
                                                QUERY PLAN                                                 
-----------------------------------------------------------------------------------------------------------
 Aggregate  (cost=1692478.40..1692478.41 rows=1 width=8) (actual rows=1.00 loops=1)
   Buffers: shared read=442478
   I/O Timings: shared read=7218.835
   -&gt;  Seq Scan on test  (cost=0.00..1442478.32 rows=100000032 width=0) (actual rows=100000001.00 loops=1)
         Buffers: shared read=442478
         I/O Timings: shared read=7218.835
 Planning:
   Buffers: shared hit=13 read=6
   I/O Timings: shared read=2.709
 Planning Time: 2.925 ms
 Execution Time: 10480.827 ms
(11 rows)</code></pre></div>
<p>We've read 442,478 buffers in 7.2 seconds.</p>
<p>Whilst with parallel query we get a summary of all the I/O time across all parallel workers, no such summarization occurs with I/O workers. What we are seeing is the wait time for the I/O to be completed, ignoring any parallelism that may happen behind the scenes.</p>
<p>This is technically not a behaviour change, since even in Postgres 17 the time reported was the time spent waiting on I/Os, not the time spent performing the I/O, e.g. Kernel I/O time for readahead was never accounted for.</p>
<p>Historically I/O timing was often equated with I/O effort, instead of just looking at shared buffer read counts, in order to distinguish from a OS page cache hit. Now, in Postgres 18, interpreting I/O timing requires more caution: asynchronous I/O can hide I/O overhead in query plans.</p>
<h2 id="conclusion"><a href="#conclusion" aria-label="conclusion permalink"></a>Conclusion</h2>
<p>To summarize, the upcoming release of Postgres 18 marks the beginning of a major evolution in how I/O is handled. While currently limited to reads, asynchronous I/O already opens the door to significant performance improvements in high-latency cloud environments.</p>
<p>But some of these gains come with tradeoffs. Engineering teams will need to adjust their observability practices, learn new semantics for timing and wait events, and perhaps revisit tuning parameters with previously limited impact, like <code>effective_io_conurrency</code>.</p>
<h3 id="in-summary"><a href="#in-summary" aria-label="in summary permalink"></a>In summary</h3>
<ul>
<li>Asynchronous I/O support in Postgres 18 introduces <code>worker</code> (as the default) and <code>io_uring</code> options under the new <code>io_method</code> setting.</li>
<li>Benchmarks show up to a 2-3x throughput improvement for read-heavy workloads in cloud environments.</li>
<li>Observability practices need to evolve: <code>EXPLAIN ANALYZE</code> may underreport I/O effort, and new views like <code>pg_aios</code> will help provide insights.</li>
<li>Tools like pganalyze will be adapting to these changes to continue surfacing relevant performance insights.</li>
</ul>
<p>As Postgres development continues, future versions (19 and beyond) may bring asynchronous write support, further reducing I/O bottlenecks in modern workloads, and enabling production use of Direct I/O.</p>
<h3 id="references"><a href="#references" aria-label="references permalink"></a>References</h3>
<ul>
<li><a href="https://www.postgresql.org/docs/devel/runtime-config-resource.html#GUC-IO-METHOD">PostgreSQL <code>io_method</code> GUC (Postgres 18)</a></li>
<li><a href="https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-EFFECTIVE-IO-CONCURRENCY">PostgreSQL <code>effective_io_concurrency</code></a></li>
<li><a href="https://www.postgresql.org/docs/current/storage-buffer.html">PostgreSQL Shared Buffers and Buffer Management</a></li>
<li><a href="https://www.postgresql.org/docs/current/monitoring-stats.html#PG-STAT-ACTIVITY-VIEW"><code>pg_stat_activity</code> View</a></li>
<li><a href="https://www.postgresql.org/docs/devel/monitoring-stats.html#PG-STAT-IO-VIEW"><code>pg_stat_io</code> View</a></li>
<li><a href="https://www.postgresql.org/docs/devel/monitoring-stats.html#PG-AIOS-VIEW"><code>pg_aios</code> View (New in Postgres 18)</a></li>
<li><a href="https://man7.org/linux/man-pages/man2/posix_fadvise.2.html"><code>posix_fadvise()</code> System Call</a></li>
<li><a href="https://www.google.com/url?q=https://www.man7.org/linux/man-pages/man7/io_uring.7.html&amp;sa=D&amp;source=docs&amp;ust=1746206271490972&amp;usg=AOvVaw1B_RmjsiRaB-HDroNJCv6b">Linux io_uring Man Page</a></li>
<li><a href="https://pganalyze.com/blog/5mins-postgres-17-streaming-io">5mins of Postgres: Waiting for Postgres 17: Streaming I/O for sequential scans &amp; ANALYZE</a></li>
</ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Unity’s Open-Source Double Standard: the ban of VLC (320 pts)]]></title>
            <link>https://mfkl.github.io/2024/01/10/unity-double-oss-standards.html</link>
            <guid>43914832</guid>
            <pubDate>Wed, 07 May 2025 12:33:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mfkl.github.io/2024/01/10/unity-double-oss-standards.html">https://mfkl.github.io/2024/01/10/unity-double-oss-standards.html</a>, See on <a href="https://news.ycombinator.com/item?id=43914832">Hacker News</a></p>
<div id="readability-page-1" class="page"><section itemprop="text">
        
        <h2 id="vlc-for-unity-integration">VLC for Unity integration</h2>

<p>For the readers unaware, we started distributing binaries on the Unity Store for the open-source <a href="https://code.videolan.org/videolan/vlc-unity">VLC for Unity</a> integration back in December 2019.</p>

<p>The integration essentially was a bridge between the Unity game engine and the VLC multimedia engine, allowing to build your own media-player based on VLC technology in Unity-based games. Both Unity, through Mono, and LibVLC are highly portable so this is a compelling argument for this cross-platform integration.</p>

<p>Since the start, we have had many users downloading the assets from the Unity Store for their Unity apps and games when requiring demanding multimedia solutions. We had 3 assets targeting specific platforms:</p>
<ul>
  <li>Windows,</li>
  <li>UWP,</li>
  <li>Android.</li>
</ul>

<h2 id="unity-store-ban">Unity Store ban</h2>

<p>This all changed at the end of the summer 2023 when Unity emailed us the following:</p>

<p>
    <img src="https://mfkl.github.io/assets/unity-store-email.png">
</p>

<p>And just like this, our <a href="https://assetstore.unity.com/publishers/39987">publisher account was instantly banned</a>.</p>

<p>After <em>months</em> of slow back-and-forth over email trying to find a compromise, including offering to exclude LGPL code from the assets, Unity basically told us we were not welcome back to their Store, ever. <em>Even if we were to remove all LGPL code from the Unity package</em>.</p>

<p>Where it gets fun is that there are currently hundreds if not thousands of Unity assets that include LGPL dependencies (such as FFmpeg) in the Store <strong>right now</strong>. Enforcement is seemingly totally random, unless you get reported by someone, apparently.</p>

<p>It gets better… Unity itself, both the Editor and the runtime (which means <em>your shipped game</em>) <strong>is already using LGPL dependencies</strong>! Unity is built on libraries such as Lame, libiconv, libwebsockets and websockify.js (at least). Full list of open-source Unity dependencies <a href="https://gist.github.com/mfkl/ad5cbeadf144e52a762a09fac6a05a70">here</a>.</p>

<p>So Unity gets to use and benefit from LGPL open-source libraries, games built with Unity depend on LGPL code by default (hello glibc!), but publishers and Unity users are not allowed to do so through the Unity Store?</p>

<h2 id="introducing-the-videolabs-store">Introducing the <a href="https://videolabs.io/store">Videolabs Store</a></h2>

<p>
    <a href="https://videolabs.io/store"><img src="https://mfkl.github.io/assets/vlabs-store-1.png"></a>
</p>

<p>If you are a company requiring multimedia products or consulting for your own projects, this store will be of interest to you.</p>

<p>After our assets got removed, previous and new customers started emailing us about the status of VLC for Unity. Are we going to keep maintaining the assets? How to get build updates? etc.</p>

<p>Numerous companies make use of the LibVLC SDK and other related technologies (like FFmpeg).</p>

<p>For this reason, we decided to publish a simple Store on the <a href="https://videolabs.io/">Videolabs</a> website.</p>

<p>This way, existing and new customers can still <a href="https://videolabs.io/store/unity">purchase the binaries for the open-source VLC Unity plugin</a> without our presence on the Unity Store.</p>

<h3 id="flexible-multimedia-consulting-packages">Flexible multimedia consulting packages</h3>

<p>Sometimes users will run into issues or request a new feature and while the community can sometimes help, the limited time of a few volunteers only goes so far. I have written about <a href="https://mfkl.github.io/2020/10/25/OSS-sutainability.html">OSS sustainability before</a> and that is very much on topic here.</p>

<p>It is in the best interest of both open-source project maintainers and commercial consumers to have a clear products and services offering for a given project, and that is what we have created with the <a href="https://videolabs.io/store">Videolabs Store</a> for both LibVLC and FFmpeg.</p>

<p>The Videolabs team is composed of VLC and FFmpeg experts in most protocols, formats and platforms.</p>

<p>If you are using or planning to use LibVLC or FFmpeg in your project and need help, whether it be custom builds, bug fixes, SDK integration or simply answers to your questions for your specific needs, these packages are for you!</p>

<p>
    <a href="https://videolabs.io/store"><img src="https://mfkl.github.io/assets/vlabs-store-2.png"></a>
</p>

<p>We have created 3 multimedia consulting packages: 3 hours, 10 hours and 24 hours. They can be purchased for a one-time service or a monthly subscription.</p>

<p>No matter which OS platform or toolkit you are building with, we can help.</p>

<h3 id="other-products">Other products</h3>

<p>The <a href="https://videolabs.io/store/libvlcsharp/">LibVLCSharp commercial license</a> and the <a href="https://mfkl.gumroad.com/l/libvlc-good-parts">LibVLC ebook</a> can also be found in the <a href="https://videolabs.io/store">Videolabs Store</a>, as well as other upcoming products such as Kyber, our new ultra low latency game/desktop streaming and remote control SDK, and more game engine integration such as Unreal.</p>

<p>
    <a href="https://videolabs.io/store"><img src="https://mfkl.github.io/assets/vlabs-store-3.png"></a>
</p>

        
      </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[CLion Is Now Free for Non-Commercial Use (322 pts)]]></title>
            <link>https://blog.jetbrains.com/clion/2025/05/clion-is-now-free-for-non-commercial-use/</link>
            <guid>43914705</guid>
            <pubDate>Wed, 07 May 2025 12:18:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.jetbrains.com/clion/2025/05/clion-is-now-free-for-non-commercial-use/">https://blog.jetbrains.com/clion/2025/05/clion-is-now-free-for-non-commercial-use/</a>, See on <a href="https://news.ycombinator.com/item?id=43914705">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    				<p><a href="https://blog.jetbrains.com/clion/category/news/">News</a></p><h2 id="major-updates">CLion Is Now Free for Non-Commercial Use</h2>                    
                    
<blockquote>

<cite>“C makes it easy to shoot yourself in the foot. C++ makes it harder, but when you do, it blows away your whole leg.” — Bjarne Stroustrup</cite></blockquote>



<p>We can’t make С and C++ simpler, but we can make working with them a bit easier. <a href="https://www.jetbrains.com/clion/" target="_blank" rel="noopener">CLion</a> is now free for non-commercial use!</p>



<p>Yes, finally.</p>



<p>Whether you’re a student, an Arduino experimenter, or someone who loves С and C++ with all your heart despite all the challenges these languages present, CLion is now available to you for free – as long as you’re not using it for commercial work.</p>



<h2>What’s happening?</h2>



<p>Last year we implemented a new licensing model for <a href="https://www.jetbrains.com/rust/" target="_blank" rel="noopener">RustRover</a>, <a href="https://www.jetbrains.com/rider/" target="_blank" rel="noopener">Rider</a>, and <a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">WebStorm</a>, making them free for non-commercial use. We’re now extending this model to CLion. If you’re using it for non-commercial purposes, such as <strong>learning</strong>, <strong>open-source project development</strong>, <strong>content creation</strong>, or <strong>hobby development</strong>, you can now do so for free. For commercial use, our existing licensing model still applies.</p>



<p>Note that while CLion now joins RustRover, Rider, and WebStorm in being free for non-commercial use, this update <strong>doesn’t apply to other JetBrains IDEs</strong> at this time. We’re keeping an eye on how things go and will continue evaluating the impact of this initiative.</p>



<h2>Why are we doing this?</h2>



<p>In making non-commercial development free, we aim to make JetBrains IDEs more accessible to a broader audience. We hope the new licensing model will further lower the barrier to using our IDEs, helping you learn, grow, and stay creative.</p>



<p>You can find more details about why we’re introducing this update in the <a href="https://blog.jetbrains.com/blog/2024/10/24/webstorm-and-rider-are-now-free-for-non-commercial-use/">blog post making the original announcement</a>.</p>



<h2>Why CLion?</h2>



<p>C++ is powerful, but it’s not exactly known for being easy or forgiving. And then there’s C – lean, low-level, and still a core part of many computer science curricula. Whether you’re learning these languages, diving into systems programming, or exploring embedded development on your own, C and C++ often come with a steep learning curve.</p>



<p>We want to support that journey. With CLion now free for non-commercial use, it’s easier for you to experiment, learn, and build – without worrying about the IDE license.</p>



<h2>Commercial vs. non-commercial use</h2>



<p>As defined in the <a href="https://www.jetbrains.com/legal/docs/toolbox/license_non-commercial/" target="_blank" rel="noopener">Toolbox Subscription Agreement for Non-Commercial Use</a>, commercial use means developing products and earning commercial benefits from your activities. However, certain categories are explicitly excluded from this definition. Common examples of non-commercial uses include learning and self-education, open-source contributions without earning commercial benefits, any form of content creation, and hobby development.</p>



<p>It’s important to note that, if you’re using a non-commercial license, you cannot opt out of the collection of anonymous usage statistics. We use this information to improve our products. The data we collect is exclusively that of anonymous feature usages of our IDEs. It is focused on what actions are performed and what types of functionality of the IDE are used. We do not collect any other data. This is similar to our Early Access Program (EAP) and is in compliance with our Privacy Policy.</p>



<h2>FAQ</h2>



<p>Below are answers to the most common questions. Check out the <a href="https://sales.jetbrains.com/hc/en-gb/articles/18950890312210-The-free-non-commercial-licensing-FAQ" target="_blank" rel="noopener"><strong>full FAQ</strong></a> for more information.</p>



<h3>Licensing</h3>



<h4>What features are included under the free license?</h4>



<p>With the new non-commercial license type, you can enjoy a full-featured IDE that is identical to its paid version. The only difference is in the Code With Me feature – you get <a href="https://www.jetbrains.com/code-with-me/buy/?section=personal&amp;billing=monthly" target="_blank" rel="noopener">Code With Me Community</a> with your free license.</p>



<h4>Which license should I choose if I want to use CLion for both non-commercial and commercial projects?</h4>



<p>If you intend to use CLion for commercial development for which you will receive direct or indirect commercial advantage or monetary compensation within the meaning of the definitions provided in the <a href="https://www.jetbrains.com/legal/docs/toolbox/license_non-commercial/" target="_blank" rel="noopener">Toolbox Subscription Agreement for Non-Commercial Use</a>, you will need to purchase a commercial subscription (either individual or organizational). This license can then also be used for non-commercial development.</p>



<h4>How do renewals and upgrades work now?</h4>



<p>Non-commercial subscriptions are issued for one year and will automatically renew after that. However, for the renewal to happen, you must have used the assigned license at least once during the last 6 months of the subscription period. If it has been more than 6 months since you last used an IDE activated with this type of license and the renewal did not occur automatically, you can request a new non-commercial subscription again at any time.</p>



<h4>Am I eligible for a refund if I’ve already bought a paid subscription but do non-commercial development?</h4>



<p>If you’re unsure whether you qualify for a refund, you’ll find full details of our policy <a href="https://sales.jetbrains.com/hc/en-gb/articles/115000913704-How-can-I-get-a-refund" target="_blank" rel="noopener">here</a>. Please note that if you also work on projects that qualify as commercial usage, you can’t use the free license for them.</p>



<h3>Anonymous data collection&nbsp;</h3>



<h4>Does my IDE send any data to JetBrains?</h4>



<p>The terms of the non-commercial agreement assume that the product may also electronically send JetBrains anonymized statistics (IDE telemetry) related to your usage of the product’s features. This information may include but is not limited to frameworks, file templates used in the product, actions invoked, and other interactions with the product’s features. This information does not contain personal data.</p>



<h4>Is there a way to opt out of sending anonymized statistics?</h4>



<p>We appreciate that this might not be convenient for everyone, but there is unfortunately no way to opt out of sending anonymized statistics to JetBrains under the terms of the Toolbox agreement for non-commercial use. The only way to opt out is by switching to either a paid subscription or one of the complimentary options mentioned <a href="https://www.jetbrains.com/store/?section=students&amp;billing=yearly" target="_blank" rel="noopener">here</a>.</p>



<h3>Getting a non-commercial subscription&nbsp;</h3>



<h4>What should I do to apply for this subscription?</h4>



<p>It can be easily done right inside your IDE:</p>



<ol>
<li>Install CLion and run it.</li>



<li>Upon startup, there will be a license dialog box where you can choose the <em>Non-commercial use </em>option.</li>



<li>Log in to your JetBrains account or create a new one.&nbsp;</li>



<li>Accept the <a href="https://www.jetbrains.com/legal/docs/toolbox/license_non-commercial/" target="_blank" rel="noopener">Toolbox Subscription Agreement for Non-Commercial Use</a>.</li>



<li>Enjoy development in your IDE.</li>
</ol>



<p>If you’ve already started a trial period or have activated your IDE using a paid license, you still can switch to a non-commercial subscription by following these steps:</p>



<ol>
<li>Go to <em>Help | Register.</em></li>



<li>In the window that opens, click on the <em>Remove License</em> button.</li>



<li>Choose <em>Non-commercial use.</em></li>



<li>Log in to your JetBrains account or create a new one.&nbsp;</li>



<li>Accept the <a href="https://www.jetbrains.com/legal/docs/toolbox/license_non-commercial/" target="_blank" rel="noopener">Toolbox Subscription Agreement for Non-Commercial Use</a>.</li>



<li>Enjoy development in your IDE.</li>
</ol>



<h4>I don’t see the <em>Non-commercial use</em> option in my IDE. What should I do?&nbsp;</h4>



<p>The most likely explanation for this is that you’re using an older version of CLion. Unfortunately, we don’t support obtaining the non-commercial license for any releases prior to CLion 2025.1.1. That’s it for today! If you don’t find an answer to your question, feel free to leave a comment or contact us at <a href="https://www.jetbrains.com/support/sales/#email-sales" target="_blank" rel="noopener">sales@jetbrains.com</a>.</p>



<p>Your CLion team<br>
<em>JetBrains</em><br>
<em>Make it happen. With code.</em></p>
                    
                                                                                                                                                                                                                            <div>
                                <div>
                                                                            <h4>Subscribe to CLion Blog updates</h4>
                                                                                                            
                                </div>
                                
                                <p><img src="https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg" alt="image description">
                                                                    </p>
                            </div>
                                                            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[So Much Blood (175 pts)]]></title>
            <link>https://dynomight.net/blood/</link>
            <guid>43913751</guid>
            <pubDate>Wed, 07 May 2025 09:41:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dynomight.net/blood/">https://dynomight.net/blood/</a>, See on <a href="https://news.ycombinator.com/item?id=43913751">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
    
  <section>
    <p>In a recent post about <a href="https://dynomight.net/money/">trading stuff for money</a>, I mentioned:</p>

<blockquote>
  <p>Europe had a [blood plasma] shortage of around 38%, which it met by importing plasma from paid donors in the United States, where blood products account for 2% of <em>all</em> exports by value.</p>
</blockquote>

<p>The internet’s reaction was: “TWO PERCENT?” “<strong>TWO PERCENT OF U.S. EXPORTS ARE BLOOD!?</strong>”</p>

<p>Well, I took that 2% number from a 2024 <a href="https://www.economist.com/finance-and-economics/2024/08/29/the-plasma-trade-is-becoming-ever-more-hypocritical">article in the Economist</a>:</p>

<blockquote>
  <p>Last year American blood-product exports accounted for 1.8% of the country’s total goods exports, up from just 0.5% a decade ago—and were worth $37bn. That makes blood the country’s ninth-largest goods export, ahead of coal and gold. All told, America now supplies 70% or so of the plasma used to make medicine.</p>
</blockquote>

<p>I figured the Economist was trustworthy on matters of economics. But note:</p>

<ol>
  <li>That 1.8% number is for blood <em>products</em>, not just blood.</li>
  <li>It’s a percentage of <em>goods</em> exported, excluding services.</li>
  <li>It’s wrong.</li>
</ol>

<p>The article doesn’t explain how they arrived at 1.8%. And since the Economist speaks in the voice of God (without bylines), I can’t corner and harass the actual journalist. I’d have liked to reverse-engineer their calculations, but this was impossible since the world hasn’t yet caught on that they should always <a href="https://dynomight.net/digits/">show lots of digits</a>.</p>

<p>So what’s the right number? In 2023, total US goods exports were <a href="https://www.census.gov/foreign-trade/Press-Release/ft900/ft900_2405.pdf#page=20">$2,045 billion</a>, almost exactly ⅔ of all exports, including services.</p>

<p>How much of that involves blood? Well, the government keeps statistics on trade based on an insanely detailed <a href="https://hts.usitc.gov/reststop/file?release=2023HTSARev8&amp;filename=Chapter%2098">classification scheme</a>. All goods get some number. For example, <a href="https://en.wikipedia.org/wiki/Airship">dirigibles</a> fall under <a href="https://hts.usitc.gov/reststop/file?release=2025HTSRev9&amp;filename=Chapter%2088">HTS 8801.90.0000</a>:</p>

<p><img src="https://dynomight.net/img/blood/dirgibles.png" alt=""></p>

<p>Leg warmers fall under HTS 6406.99.1530:</p>

<p><img src="https://dynomight.net/img/blood/leg_warmers.png" alt="leg warmers"></p>

<p>So what about blood? Well, <a href="https://www.usitc.gov/publications/docs/tata/hts/bychapter/1000c30.pdf#page=3">HTS 3002</a> is the category for:</p>

<blockquote>
  <p>Human blood; animal blood prepared for therapeutic, prophylactic or diagnostic uses; antisera and other blood fractions and modified immunological products, whether or not obtained by means of biotechnological processes; vaccines, toxins, cultures of micro-organisms (excluding yeasts) and similar products:</p>
</blockquote>

<p>The total exports in this category in 2023 were 41.977 billion, or 2.05% of all goods exports. But that category includes many products that don’t require human blood such as most vaccines.</p>

<p>To get the actual data, you need to go through a <a href="https://dataweb.usitc.gov/trade/search/Export/HTS">website</a> maintained by the US Trade Commission. This website has good and bad aspects. On the one hand, it’s slow and clunky and confusing and often randomly fails to deliver any results. On the other hand, when you re-submit, it clears your query and then blocks you for submitting too many requests, which is nice.</p>

<p>But after a lot of tearing of hair, I got what seems to be the most detailed breakdown of that category available. There are some finer subcategories in the taxonomy, but they don’t seem to have any data.</p>

<p>So let’s go through those categories. To start, here are some that would seem to almost always contain human blood:</p>

<table>
  <thead>
    <tr>
      <th>Category</th>
      <th>Description</th>
      <th>Exports ($)</th>
      <th>Percentage of US goods exports</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>3002.12.00.10</td>
      <td>HUMAN BLOOD PLASMA</td>
      <td>5,959,103,120</td>
      <td>0.2914%</td>
    </tr>
    <tr>
      <td>3002.12.00.20</td>
      <td>NORMAL HUMAN BLOOD SERA, WHETHER OR NOT FREEZE-DRIED</td>
      <td>38,992,251</td>
      <td>0.0019%</td>
    </tr>
    <tr>
      <td>3002.12.00.30</td>
      <td>HUMAN IMMUNE BLOOD SERA</td>
      <td>5,608,090</td>
      <td>0.0003%</td>
    </tr>
    <tr>
      <td>3002.12.00.90</td>
      <td>ANTISERA AND OTHER BLOOD FRACTIONS</td>
      <td>4,808,069,119</td>
      <td>0.2351%</td>
    </tr>
    <tr>
      <td>3002.90.52.10</td>
      <td>WHOLE HUMAN BLOOD</td>
      <td>22,710,898</td>
      <td>0.0011%</td>
    </tr>
    <tr>
      <td><strong>TOTAL</strong></td>
      <td><strong>(YES BLOOD)</strong></td>
      <td><strong>10,834,483,478</strong></td>
      <td><strong>0.5298%</strong></td>
    </tr>
  </tbody>
</table>

<p>Next, there are several categories that would seem to essentially <em>never</em> contain human blood:</p>

<table>
  <thead>
    <tr>
      <th>Category</th>
      <th>Description</th>
      <th>Exports ($)</th>
      <th>Percentage of US goods exports</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>3002.12.00.40</td>
      <td>FETAL BOVINE SERUM (FBS)</td>
      <td>146,026,727</td>
      <td>0.0071%</td>
    </tr>
    <tr>
      <td>3002.42.00.00</td>
      <td>VACCINES FOR VETERINARY MEDICINE</td>
      <td>638,191,743</td>
      <td>0.0312%</td>
    </tr>
    <tr>
      <td>3002.49.00.00</td>
      <td>VACCINES, TOXINS, CULTURES OF MICRO-ORGANISMS EXCLUDING YEASTS, AND SIMILAR PRODUCTS, NESOI</td>
      <td>1,630,036,341</td>
      <td>0.0797%</td>
    </tr>
    <tr>
      <td>3002.59.00.00</td>
      <td>CELL CULTURES, WHETHER OR NOT MODIFIED, NESOI</td>
      <td>79,384,134</td>
      <td>0.0039%</td>
    </tr>
    <tr>
      <td>3002.90.10.00</td>
      <td>FERMENTS</td>
      <td>361,418,233</td>
      <td>0.0177%</td>
    </tr>
    <tr>
      <td><strong>TOTAL</strong></td>
      <td><strong>(NO BLOOD)</strong></td>
      <td><strong>2,869,107,296</strong></td>
      <td><strong>0.1403%</strong></td>
    </tr>
  </tbody>
</table>

<p>Finally, there are categories that include <em>some</em> products that <em>might</em> contain human blood:</p>

<table>
  <thead>
    <tr>
      <th>Category</th>
      <th>Description</th>
      <th>Exports ($)</th>
      <th>Percentage of US goods exports</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>3002.13.00.00</td>
      <td>IMMUNOLOGICAL PRODUCTS, UNMIXED, NOT PUT UP IN MEASURED DOSES OR IN FORMS OR PACKINGS FOR RETAIL SALE</td>
      <td>624,283,112</td>
      <td>0.0305%</td>
    </tr>
    <tr>
      <td>3002.14.00.00</td>
      <td>IMMUNOLOGICAL PRODUCTS, MIXED, NOT PUT UP IN MEASURED DOSES OR IN FORMS OR PACKINGS FOR RETAIL SALE</td>
      <td>5,060,866,208</td>
      <td>0.2475%</td>
    </tr>
    <tr>
      <td>3002.15.01.00</td>
      <td>IMMUNOLOGICAL PRODUCTS, PUT UP IN MEASURED DOSES OR IN FORMS OR PACKINGS FOR RETAIL SALE</td>
      <td>13,317,356,469</td>
      <td>0.6512%</td>
    </tr>
    <tr>
      <td>3002.41.00.00</td>
      <td>VACCINES FOR HUMAN MEDICINE, NESOI</td>
      <td>7,760,695,744</td>
      <td>0.3795%</td>
    </tr>
    <tr>
      <td>3002.51.00.00</td>
      <td>CELL THERAPY PRODUCTS</td>
      <td>595,963,010</td>
      <td>0.0291%</td>
    </tr>
    <tr>
      <td>3002.90.52.50</td>
      <td>HUMAN BLOOD; ANIMAL BLOOD PREPARED FOR THERAPEUTIC, PROPHYLATIC OR DIAGNOSTIC USES; ANTISERA AND OTHER BLOOD FRACTIONS, ETC. NESOI</td>
      <td>914,348,561</td>
      <td>0.0447%</td>
    </tr>
    <tr>
      <td><strong>TOTAL</strong></td>
      <td><strong>(MAYBE BLOOD)</strong></td>
      <td><strong>28,273,513,104</strong></td>
      <td><strong>1.3826%</strong></td>
    </tr>
  </tbody>
</table>

<p>The biggest contributor here is IMMUNOLOGICAL PRODUCTS (be they MIXED or UNMIXED, PUT UP or NOT PUT UP). The largest fraction of these is probably antibodies.</p>

<p>Antibodies are <em>sometimes</em> made from human blood. You may remember that in 2020, some organizations collected human blood from people who’d recovered from Covid to make antibodies. But it’s important to stress that this is quite rare. Human blood, after all, is expensive. So—because capitalism—whenever possible animals are used instead, often rabbits, goats, sheep, or <a href="https://en.wikipedia.org/wiki/Humanized_mouse">humanized mice</a>.</p>

<p>I can’t find any hard statistics on this. But I know several people who work in this industry. So I asked them to just guess what fraction might include human blood. Biologists don’t like numbers, so this took a lot of pleading, but my best estimate is 8%.</p>

<p>When looking at similar data a few years ago, <a href="http://marketdesigner.blogspot.com/2020/05/plasma-and-plasma-products-such-as.html">Market Design</a> suggested that that <a href="https://en.wikipedia.org/wiki/Immunoglobulin_therapy">immunoglobulin products</a> might also fall under this category. But as far as I can tell this is not true. I looked up the tariff codes for a few immunoglobulin products, and they all seem to fall under 3002.90 (“HUMAN BLOOD; ANIMAL BLOOD PREPARED FOR THERAPEUTIC, PROPHYLATIC OR DIAGNOSTIC USES; ANTISERA AND OTHER BLOOD FRACTIONS, ETC. NESOI”)</p>

<p>What about vaccines or <a href="https://en.wikipedia.org/wiki/Cell_therapy">cell therapy</a> products? These almost never contain human blood. But they are <em>sometimes</em> made by growing human cell lines, and <em>sometimes</em> those cell lines require human <a href="https://en.wikipedia.org/wiki/Serum_(blood)">blood <em>serum</em></a> to grow. More pleading with the biologists produced a guess that this is true for 5% of vaccines and 80% of cell therapies.</p>

<p><em>Aside</em>: Even if they do require blood serum, it’s somewhat debatable if they should count as “blood products”. How far down the supply chain does that classification apply? If I make cars, and one of my employees gets injured and needs a blood transfusion, are my cars now “blood products”?</p>

<p>Anyway, here’s my best guess for the percentage of products in this middle category that use human blood:</p>

<table>
  <thead>
    <tr>
      <th>Category</th>
      <th>Description</th>
      <th>Needs blood (guess)</th>
      <th>Exports ($)</th>
      <th>Percentage of US goods exports</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>3002.13.00.00</td>
      <td>IMMUNOLOGICAL PRODUCTS, UNMIXED, NOT PUT UP IN MEASURED DOSES OR IN FORMS OR PACKINGS FOR RETAIL SALE</td>
      <td>8%</td>
      <td>49,942,648</td>
      <td>0.0024%</td>
    </tr>
    <tr>
      <td>3002.14.00.00</td>
      <td>IMMUNOLOGICAL PRODUCTS, MIXED, NOT PUT UP IN MEASURED DOSES OR IN FORMS OR PACKINGS FOR RETAIL SALE</td>
      <td>8%</td>
      <td>404,869,296</td>
      <td>0.0198%</td>
    </tr>
    <tr>
      <td>3002.15.01.00</td>
      <td>IMMUNOLOGICAL PRODUCTS, PUT UP IN MEASURED DOSES OR IN FORMS OR PACKINGS FOR RETAIL SALE</td>
      <td>8%</td>
      <td>1,065,388,517</td>
      <td>0.0521%</td>
    </tr>
    <tr>
      <td>3002.41.00.00</td>
      <td>VACCINES FOR HUMAN MEDICINE, NESOI</td>
      <td>5%</td>
      <td>388,034,787</td>
      <td>0.0190%</td>
    </tr>
    <tr>
      <td>3002.51.00.00</td>
      <td>CELL THERAPY PRODUCTS</td>
      <td>80%</td>
      <td>476,770,408</td>
      <td>0.0233%</td>
    </tr>
    <tr>
      <td>3002.90.52</td>
      <td>HUMAN BLOOD; ANIMAL BLOOD PREPARED FOR THERAPEUTIC, PROPHYLATIC OR DIAGNOSTIC USES; ANTISERA AND OTHER BLOOD FRACTIONS, ETC. NESOI</td>
      <td>90%</td>
      <td>822,913,704</td>
      <td>0.0402%</td>
    </tr>
    <tr>
      <td><strong>TOTAL</strong></td>
      <td><strong>(GUESSED BLOOD)</strong></td>
      <td>&nbsp;</td>
      <td><strong>3,207,919,363</strong></td>
      <td><strong>0.1569%</strong></td>
    </tr>
  </tbody>
</table>

<p>So 0.5298% of goods exports almost certainly use blood, and my best guess is that another 0.1569% of exports also include blood, for a total of 0.6867%.</p>

<p>Obviously, this is a rough cut. But I couldn’t find any other source that shows their work in any detail, so I hoped that by publishing this I could at least prod Cunningham’s law into action. Sorry for all the numbers.</p>

  </section>
  
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zed: High-performance AI Code Editor (278 pts)]]></title>
            <link>https://zed.dev/blog/fastest-ai-code-editor</link>
            <guid>43912844</guid>
            <pubDate>Wed, 07 May 2025 06:38:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://zed.dev/blog/fastest-ai-code-editor">https://zed.dev/blog/fastest-ai-code-editor</a>, See on <a href="https://news.ycombinator.com/item?id=43912844">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><p>For millions of years, humans have used tools to create things. We programmers have recently created some very useful tools for ourselves: large language models. So far, these futuristic tools have been accessible to programmers in one of three ways:</p>
<ol>
<li>Copy/pasting from a website</li>
<li>Running in a terminal emulator</li>
<li>Baked into a closed-source fork of an open-source fork of a web browser</li>
</ol>
<p>As of today, there is now a fourth option:</p>
<p>Zed, the world’s fastest AI code editor.</p>
<h2 id="built-in-rust-open-source-gpl"><a href="#built-in-rust-open-source-gpl" aria-label="Copy heading link"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="4" x2="20" y1="9" y2="9"></line><line x1="4" x2="20" y1="15" y2="15"></line><line x1="10" x2="8" y1="3" y2="21"></line><line x1="16" x2="14" y1="3" y2="21"></line></svg></span><span>Built in Rust, Open Source (GPL)</span></a></h2>
<p>The entire Zed code editor is open source under <a href="https://github.com/zed-industries/zed/blob/main/LICENSE-GPL">GPL version 3</a>, and scratch-built in Rust all the way down to <a href="https://zed.dev/blog/120fps">handcrafted GPU shaders and OS graphics API calls</a>.
Zed's new AI capabilities are also open-source, just like the rest of the editor, so you can see exactly what the new Agent Panel is doing under the hood.</p>
<p>Here it is in action:</p>
<p><figure><video src="https://customer-snccc0j9v3kfzkif.cloudflarestream.com/003e3457740dae547ae58c4ddb88384c/downloads/default.mp4" width="1920" height="1080" controls=""></video><figcaption>A walkthrough of Agentic Editing in Zed.</figcaption></figure></p>
<p><a href="https://zed.dev/agentic">The Agent Panel</a> lets you tell an AI agent what to do, and it'll do as you asked to the best of its ability.
This can be anything from asking questions about your code base to having it directly make changes and write new code.</p>
<p>For example, here I opened the Agent Panel and asked the agent to make a change about a blog post format:</p>
<div><figure><img src="https://zed.dev/img/agentic/blog-1-post-format.webp" alt="Asking the agent to help with blog post author's name display."><figcaption>Asking the agent to help with blog post author's name display.</figcaption></figure></div>
<p>I just typed in the words and pressed Enter; I didn’t have to teach the agent anything about my code base first, or wait for an indexing process to finish.
The agent quickly figured out what it needed by searching the code base—the same thing I’d do if I found myself in a new code base and wanted to orient myself.</p>
<p>This example had the agent making a trivial edit, but agents can be helpful even when I want to handcraft code myself.
For example, in an unfamiliar part of a large code base, an agent can save me time by tracking down the spot where I need to make the change.</p>
<h2 id="privacy-and-security-by-default"><a href="#privacy-and-security-by-default" aria-label="Copy heading link"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="4" x2="20" y1="9" y2="9"></line><line x1="4" x2="20" y1="15" y2="15"></line><line x1="10" x2="8" y1="3" y2="21"></line><line x1="16" x2="14" y1="3" y2="21"></line></svg></span><span>Privacy and Security by Default</span></a></h2>
<p>Your conversation with the agent is private by default; Zed doesn't harvest your data for training purposes (or any other purpose).
If you want to share feedback to help improve Zed's AI, we've made it easy to do that by pressing a thumbs-up/thumbs-down button... but unless you opt into it by pressing the button, your conversation is never saved on our servers.</p>
<div><figure><img src="https://zed.dev/img/agentic/blog-2-feedback.webp" alt="Thumbs up and down buttons at the end of every Agent message."><figcaption>Thumbs up and down buttons at the end of every Agent message.</figcaption></figure></div>
<p>The agent will also prompt you for confirmation before doing things that potentially couldn't be undone, like running terminal commands.
(You can also tell it to always confirm, if you aren’t worried about what it might run.)</p>
<div><figure><img src="https://zed.dev/img/agentic/blog-3-confirmation.webp" alt="Request for confirmation before running a command."><figcaption>Request for confirmation before running a command.</figcaption></figure></div>
<p>Security prompts aside, generally the agent is designed to run in the background without bothering you, so you can do other things while it works.
When the agent is done, you get a notification if you had Zed in the background (including if you had a second Zed window open so you could work on another git checkout while the agent does its thing).</p>
<div><figure><img src="https://zed.dev/img/agentic/blog-4-notification.webp" alt="One of your agents notifying work has been done!"><figcaption>One of your agents notifying work has been done!</figcaption></figure></div>
<p>Once it’s done, you can review everything it did in one unified diff.</p>
<div><figure><img src="https://zed.dev/img/agentic/blog-review.webp" alt="The editable, multibuffer &quot;Review Changes&quot; tab."><figcaption>The editable, multibuffer "Review Changes" tab.</figcaption></figure></div>
<p>The diff is fully editable, so you can easily make changes to whatever the model came up with.
It supports multicursor editing, language server integrations, and all the speed you love from the rest of Zed.</p>

<p>A dropdown lets you choose which language model powers the agent. In addition to our selection of popular models like Claude 3.7 Sonnet and Gemini 2.5—available either through your Zed account or by bringing your own API key—you can also run custom models on your own hardware via Ollama.</p>
<div><figure><img src="https://zed.dev/img/agentic/blog-5-models.webp" alt="The Agent Panel selector showing models from different providers."><figcaption>The Agent Panel selector showing models from different providers.</figcaption></figure></div>
<p>Each agent can access the full capabilities of the editor.
That means not only can it edit the filesystem, it can also run language servers, linters, formatters, and even terminal commands in your local shell (with your permission).
Every extension you install can give the agent new powers.</p>
<p>You can also customize which powers an agent may use on a given task.
Revoking an agent’s access to a tool is as simple as unchecking that tool from a list, and you can save those preferences to Profiles for quickly switching between tool configurations later.
Zed ships with three convenient built-in Profiles: Write (all tools enabled), Ask (just the readonly tools), and Minimal (no tools at all, for when you just want to chat with the model).</p>
<div><figure><img src="https://zed.dev/img/agentic/blog-6-tools.webp" alt="All the tools in the Ask profile."><figcaption>All the tools in the Ask profile.</figcaption></figure></div>
<p>You can extend the agent’s capabilities with new tools, via Zed’s support for the <a href="https://zed.dev/blog/mcp">Model Context Protocol</a>.
This can give the agent access to things like databases, analytics, creating pull requests, and <a href="https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer">browser automation</a>.</p>
<div><figure><img src="https://zed.dev/img/agentic/blog-7-mcps.webp" alt="All tools available from each MCP server."><figcaption>All tools available from each MCP server.</figcaption></figure></div>
<p>As an example of how MCP tools can be tailored to your specific use-case, <a href="https://x.com/josevalim/status/1917296901268910405">check out this demo</a> that Elixir creator José Valim made of a MCP tool that works directly with the popular <a href="https://www.phoenixframework.org/">Phoenix Web Framework</a>.</p>
<h2 id="what-does-it-cost"><a href="#what-does-it-cost" aria-label="Copy heading link"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="4" x2="20" y1="9" y2="9"></line><line x1="4" x2="20" y1="15" y2="15"></line><line x1="10" x2="8" y1="3" y2="21"></line><line x1="16" x2="14" y1="3" y2="21"></line></svg></span><span>What does it cost?</span></a></h2>
<p>It costs nothing to use Zed without the AI features.
As always, you can <a href="https://zed.dev/download">download Zed</a> (or <a href="https://github.com/zed-industries/zed/">build it from source</a>) and use it as a non-AI editor without signing up for anything.
All the non-AI features will work as normal.
This is how it’s always been, and we don’t plan to change that!</p>
<p>You can also pay someone else to use Zed’s AI features.
That is, you can bring your own API keys and they will Just Work with the new Agent Panel.
As with Zed’s other AI features, you can also use Ollama to run Zed’s agents on your own hardware.
(The only AI feature that doesn’t support this yet is <a href="https://zed.dev/blog/edit-prediction">Edit Predictions</a>; custom models are on the roadmap but haven’t landed yet.)</p>
<p>We’re also giving away some amount of AI usage.
On our free plan you'll get 50 prompts per month and on our new Pro plan you'll get 500 prompts for $20/month.
Check out our <a href="https://zed.dev/pricing">Pricing page</a> for more details.</p>
<p>We’re offering these plans because monthly limits are a popular alternative pricing structure to usage-based APIs—but if you’d prefer to bring your own API keys and pay (someone else) per token, you absolutely can.
It doesn’t cost us anything when you do that, so we don’t charge anything for it either!</p>
<p>Our goal at Zed has always been to make the world’s best code editor.
We built the Agent Panel because we believe the world’s best code editor should give its users easy access to helpful AI agents, not because we’re trying to make money by charging a premium on top of third-party AI services.</p>
<p>Long-term, we aim to build a self-sustaining business where revenue comes mostly from optional paid features that make an already-great experience even better.</p>
<h2 id="try-it-out"><a href="#try-it-out" aria-label="Copy heading link"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="4" x2="20" y1="9" y2="9"></line><line x1="4" x2="20" y1="15" y2="15"></line><line x1="10" x2="8" y1="3" y2="21"></line><line x1="16" x2="14" y1="3" y2="21"></line></svg></span><span>Try it out!</span></a></h2>
<p>You can try out Zed’s new Agentic Editing experience right now—just <a href="https://zed.dev/download">download Zed here</a>.
That’s the easiest way to see what you think of it!</p>
<p>Right now, Zed only has a stable release for macOS and Linux.
Windows users can build from source, but the reason we don’t have a stable release for Windows is that it’s not finished yet.
(Scratch-building an editor means scratch-building support for each OS individually!) We plan to have a stable release of Windows later in 2025, and you can <a href="https://zed.dev/windows">sign up for the beta</a> right now.</p>
<p>As exciting as this launch is, we’re just getting warmed up. Stay tuned for:</p>
<ul>
<li>A major debugger release later this month</li>
<li>Improved collaboration between programmers and AI agents</li>
<li>Windows!</li>
</ul><hr></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[EPA Plans to Shut Down the Energy Star Program (218 pts)]]></title>
            <link>https://www.nytimes.com/2025/05/06/climate/epa-energy-star-eliminated.html</link>
            <guid>43911252</guid>
            <pubDate>Wed, 07 May 2025 01:11:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/05/06/climate/epa-energy-star-eliminated.html">https://www.nytimes.com/2025/05/06/climate/epa-energy-star-eliminated.html</a>, See on <a href="https://news.ycombinator.com/item?id=43911252">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/05/06/climate/epa-energy-star-eliminated.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Jury orders NSO to pay $167M for hacking WhatsApp users (199 pts)]]></title>
            <link>https://arstechnica.com/security/2025/05/jury-orders-nso-to-pay-167-million-for-hacking-whatsapp-users/</link>
            <guid>43911167</guid>
            <pubDate>Wed, 07 May 2025 00:54:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/security/2025/05/jury-orders-nso-to-pay-167-million-for-hacking-whatsapp-users/">https://arstechnica.com/security/2025/05/jury-orders-nso-to-pay-167-million-for-hacking-whatsapp-users/</a>, See on <a href="https://news.ycombinator.com/item?id=43911167">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                      
                      
          <p>A jury has awarded WhatsApp $167 million in punitive damages in a case the company brought against Israel-based NSO Group for exploiting a software vulnerability that hijacked the phones of thousands of users.</p>
<p>The verdict, reached Tuesday, comes as a major victory not just for Meta-owned WhatsApp but also for privacy- and security-rights advocates who have long criticized the practices of NSO and other exploit sellers. The jury also awarded WhatsApp $444 million in compensatory damages.</p>
<h2>Clickless exploit</h2>
<p>WhatsApp sued NSO <a href="https://arstechnica.com/information-technology/2019/10/whatsapp-suit-says-israeli-spyware-maker-exploited-its-app-to-infect-1400-users/">in 2019</a> for an attack that targeted roughly 1,400 mobile phones belonging to attorneys, journalists, human-rights activists, political dissidents, diplomats, and senior foreign government officials. NSO, which works on behalf of governments and law enforcement authorities in various countries, exploited a critical WhatsApp vulnerability that allowed it to install NSO’s proprietary spyware <a href="https://arstechnica.com/information-technology/2017/04/found-quite-possibly-the-most-sophisticated-android-espionage-app-ever/">Pegasus</a> on iOS and Android devices. The clickless exploit worked by placing a call to a target's app. A target did not have to answer the call to be infected.</p>
<p>“Today’s verdict in WhatsApp’s case is an important step forward for privacy and security as the first victory against the development and use of illegal spyware that threatens the safety and privacy of everyone,” WhatsApp said in a <a href="https://about.fb.com/news/2025/05/winning-the-fight-against-spyware-merchant-nso/">statement</a>. “Today, the jury’s decision to force NSO, a notorious foreign spyware merchant, to pay damages is a critical deterrent to this malicious industry against their illegal acts aimed at American companies and the privacy and security of the people we serve.”</p>
<p>NSO created WhatsApp accounts in 2018 and used them a year later to initiate calls that exploited the critical vulnerability on phones, which, among others, included 100 members of "civil society" from 20 countries, according to an investigation research group Citizen Lab performed on behalf of WhatsApp. The calls passed through WhatsApp servers and injected malicious code into the memory of targeted devices. The targeted phones would then use WhatsApp servers to connect to malicious servers maintained by NSO.</p>

          
                      
                  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FTC bans hidden fees for live events and short-term rentals, effective May 12 (183 pts)]]></title>
            <link>https://techcrunch.com/2025/05/05/ftc-bans-hidden-fees-for-live-events-and-short-term-rentals-effective-may-12/</link>
            <guid>43910794</guid>
            <pubDate>Tue, 06 May 2025 23:41:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://techcrunch.com/2025/05/05/ftc-bans-hidden-fees-for-live-events-and-short-term-rentals-effective-may-12/">https://techcrunch.com/2025/05/05/ftc-bans-hidden-fees-for-live-events-and-short-term-rentals-effective-may-12/</a>, See on <a href="https://news.ycombinator.com/item?id=43910794">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	<div>
		<figure><img width="1024" height="683" src="https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?w=1024" alt="The Federal Trade Commission (FTC) headquarters in Washington, DC" decoding="async" fetchpriority="high" srcset="https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg 1024w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=150,100 150w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=300,200 300w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=768,512 768w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=680,454 680w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=430,287 430w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=720,480 720w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=900,600 900w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=800,534 800w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=668,446 668w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=562,375 562w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=925,617 925w, https://techcrunch.com/wp-content/uploads/2024/12/GettyImages-2174603749.jpg?resize=708,472 708w" sizes="(max-width: 1024px) 100vw, 1024px"><figcaption><strong>Image Credits:</strong>Stefani Reynolds/Bloomberg / Getty Images</figcaption></figure>	</div>
	<div>
						<p><time datetime="2025-05-05T14:17:46-07:00">2:17 PM PDT · May 5, 2025</time></p>											</div>
</div><div>
		
		<div>
			<div>
<p id="speakable-summary">The U.S. Federal Trade Commission (FTC) on Monday <a href="https://www.ftc.gov/news-events/news/press-releases/2025/05/ftc-rule-unfair-or-deceptive-fees-take-effect-may-12-2025" target="_blank" rel="noreferrer noopener nofollow">released</a> new documentation detailing its new “<a href="https://techcrunch.com/2024/12/17/ftc-bans-hidden-junk-fees-in-short-term-lodging-live-event-ticket-prices/">Rule on Unfair or Deceptive Fees</a>.”&nbsp;The rule, set to take effect on May 12, prohibits hidden fees for live events, hotels, and short-term rentals. It also bans practices such as “bait-and-switch pricing” and any actions that conceal or misrepresent total prices and fees.</p>

<p>In a newly published FAQ, the FTC offers a guide for these types of businesses, providing detailed information about pricing transparency. </p>







<p>The rule will <a href="https://techcrunch.com/2024/12/17/ftc-bans-hidden-junk-fees-in-short-term-lodging-live-event-ticket-prices/">impact businesses</a>, including live-event ticket sellers and short-term lodging providers, like hotels, motels, Airbnb, or VRBO. Third-party platforms, resellers, and travel agents are also covered by the new regulation. (Airbnb already <a href="https://techcrunch.com/2025/04/21/airbnb-will-automatically-display-total-price-to-all-users/">updated its service in advance of this new regulation</a> to show users the total cost of their stay upfront.)</p>

<p>According to the FTC:</p>

<ul>
<li>Live-event tickets include those for concerts, sporting events, music, theater, and other live performances that audiences watch as they occur, but not pre-recorded audio or visual performances.</li>



<li>The total price must include all known charges and fees.&nbsp;&nbsp;</li>



<li>Sites must disclose the total price upfront in ads and other offers for live-event tickets or short-term lodging.&nbsp;&nbsp;</li>



<li>The total price must also be more prominently displayed than any other pricing information.&nbsp;&nbsp;</li>



<li>There should be no misrepresentation about fees and charges.</li>



<li>Sites should provide truthful information about fees, including refund policies.&nbsp;&nbsp;</li>



<li>Sites should avoid vague terms like “convenience fees,” “service fees,” or “processing fees.”&nbsp;</li>



<li>Dynamic pricing strategies are still allowed as long as the pricing information isn’t misleading.</li>
</ul>

<p>Also included in the FTC’s new FAQ are the types of fees that can be excluded, such as taxes or government fees, shipping charges, and charges for optional goods or services people may select to buy as part of the same transaction. (Note that handling charges aren’t on this list.)&nbsp;</p>

<p>However, the FTC notes that businesses must disclose that it has excluded charges from the total price before asking for payment. For example, if a business excludes shipping charges from the advertised price, it’s required to clearly state the amount and purpose of those charges.</p>

<p>The FTC first passed the rule in December 2024, a landmark regulation that marked a significant win for consumers who have been frustrated for years about hidden fees.</p>
<div>
		
		<p>Techcrunch event</p>
		<div>
			
			<p><span>Berkeley, CA</span>
													<span>|</span>
													<span>June 5</span>
							</p>
							<p><a href="https://techcrunch.com/events/tc-sessions-ai/exhibit/?promo=tc_inline_exhibit&amp;utm_campaign=tcsessionsai2025&amp;utm_content=exhibit&amp;utm_medium=ad&amp;utm_source=tc">
					<span>BOOK NOW</span>
				</a>
					</p></div>
	</div>


</div>

			

			


			
			
			

			




			
			
			

			



			
<div>
	
	
	
	

	
<div>
	<p>
		Lauren covers media, streaming, apps and platforms at TechCrunch.	</p>
</div>


	
	<p>
		<a data-ctatext="View Bio" data-destinationlink="https://techcrunch.com/author/lauren-forristal/" data-event="button" href="https://techcrunch.com/author/lauren-forristal/">View Bio <svg style="width: 1em;" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><path fill="var(--c-svg, currentColor)" d="M16.5 12 9 19.5l-1.05-1.05L14.4 12 7.95 5.55 9 4.5z"></path></svg></a>
	</p>
	
</div>


		</div>
		

		
		<div id="wp-block-techcrunch-most-popular-posts__heading">
<h2 id="h-most-popular">Most Popular</h2>

</div>
		
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bloat is still software's biggest vulnerability (2024) (224 pts)]]></title>
            <link>https://spectrum.ieee.org/lean-software-development</link>
            <guid>43910745</guid>
            <pubDate>Tue, 06 May 2025 23:33:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://spectrum.ieee.org/lean-software-development">https://spectrum.ieee.org/lean-software-development</a>, See on <a href="https://news.ycombinator.com/item?id=43910745">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-headline="Why Bloat Is Still Software’s Biggest Vulnerability"><p><em>This post is dedicated to the memory of </em><a href="https://ethz.ch/en/news-and-events/eth-news/news/2024/01/computer-pioneer-niklaus-wirth-has-died.html" rel="noopener noreferrer" target="_blank"><em>Niklaus Wirth</em></a><em>, a computing pioneer who passed away 1 January 2024. In 1995 he wrote an influential article called “</em><a href="https://cr.yp.to/bib/1995/wirth.pdf" rel="noopener noreferrer" target="_blank"><em>A Plea for Lean Software</em></a><em>,”</em><em> published in </em><a href="https://ieeexplore.ieee.org/document/348001" target="_blank">Computer</a><em>, the magazine for members of the <a href="https://spectrum.ieee.org/tag/ieee-computer-society">IEEE Computer Society</a>, which I read early in my career as an entrepreneur and software developer. In what follows, I try to make the same case nearly 30 years later, updated for today’s computing horrors. A version of this post was </em><a href="https://berthub.eu/articles/posts/a-2024-plea-for-lean-software/" rel="noopener noreferrer" target="_blank"><em>originally published</em></a><em> on my personal blog, <a href="http://berthub.eu/" target="_blank">Berthub.eu</a>.</em><br></p><p>Some years ago I did a talk at a local university on <a href="https://spectrum.ieee.org/tag/cybersecurity">cybersecurity</a>, titled “<a href="https://berthub.eu/cyber-mad/Cyber%20and%20information%20security.pdf" rel="noopener noreferrer" target="_blank">Cyber and Information Security: Have We All Gone Mad?</a>” It is still worth reading today since we <em>have</em> gone quite mad collectively.</p><p>The way we build and ship software these days is mostly ridiculous, leading to apps using millions of lines of code to open a garage door, and other simple programs importing <a href="https://github.com/SashenJayathilaka/Photo-Sharing-Application" target="_blank">1,600 external code libraries</a>—dependencies—of unknown provenance. <a href="https://spectrum.ieee.org/tag/software-security">Software security</a> is dire, which is a function both of the quality of the code and the sheer amount of it. Many of us <a href="https://spectrum.ieee.org/tag/programmers">programmers</a> know the current situation is untenable. Many programmers (and their management) sadly haven’t ever experienced anything else. And for the rest of us, we rarely get the time to do a better job.</p><p>It is not just you; we are not merely suffering from nostalgia: Software really is very weird today.</p><p> Let me briefly go over the terrible state of software security, and then spend some time on why it is so bad. I also mention some regulatory and legislative things going on that we might use to make software quality a priority again. Finally, I talk about <a href="https://berthub.eu/articles/trifecta" rel="noopener noreferrer" target="_blank">an actual useful piece of software I wrote</a> as a proof of concept that one can still make <a href="https://berthub.eu/articles/posts/trifecta-technology" rel="noopener noreferrer" target="_blank">minimal and simple yet modern software</a>.</p><p>I hope that this post provides some mental and moral support for suffering programmers and technologists who want to improve things. It is not just you; We are not merely suffering from nostalgia: Software really is very weird today.</p><h2>The terrible state of software security</h2><p>Without going all <a href="https://knowyourmeme.com/memes/old-man-yells-at-cloud" rel="noopener noreferrer" target="_blank">“Old man (48) yells at cloud</a>,” let me restate some obvious things. The state of software security is <em>dire</em>. If we only look at the past year, if you ran industry-standard software like <a href="https://www.ncsc.gov.uk/news/exploitation-ivanti-vulnerabilities" rel="noopener noreferrer" target="_blank">Ivanti</a>, <a href="https://en.wikipedia.org/wiki/2023_MOVEit_data_breach" rel="noopener noreferrer" target="_blank">MOVEit</a>, <a href="https://www.bleepingcomputer.com/news/microsoft/russian-hackers-exploiting-outlook-bug-to-hijack-exchange-accounts/" rel="noopener noreferrer" target="_blank">Outlook</a>, <a href="https://confluence.atlassian.com/security/cve-2023-22518-improper-authorization-vulnerability-in-confluence-data-center-and-server-1311473907.html" rel="noopener noreferrer" target="_blank">Confluence</a>, <a href="https://www.mandiant.com/resources/blog/barracuda-esg-exploited-globally" rel="noopener noreferrer" target="_blank">Barracuda Email Security Gateway</a>, <a href="https://www.mandiant.com/resources/blog/remediation-netscaler-adc-gateway-cve-2023-4966" rel="noopener noreferrer" target="_blank">Citrix NetScaler ADC, and NetScaler Gateway</a>, chances are you got hacked. Even companies with near-infinite resources (like Apple and <a href="https://spectrum.ieee.org/tag/google">Google</a>) made <a href="https://www.schneier.com/blog/archives/2023/09/critical-vulnerability-in-libwebp-library.html" rel="noopener noreferrer" target="_blank">trivial “worst practice” security mistakes</a> that put <a href="https://www.bleepingcomputer.com/news/security/apple-zero-click-imessage-exploit-used-to-infect-iphones-with-spyware/" rel="noopener noreferrer" target="_blank">their customers in danger</a>. Yet we continue to rely on all these products.</p><p>Software is now (rightfully) considered so dangerous that we tell everyone not to run it themselves.<em></em></p><p>Software is now (rightfully) considered so dangerous that we tell everyone not to run it themselves. Instead, you are supposed to leave that to an “<em>X</em> as a service” provider, or perhaps just to “the cloud.” Compare this to a hypothetical situation where cars are so likely to catch fire that the advice is not to drive a car yourself, but to leave that to professionals who are always accompanied by professional firefighters.</p><p>The assumption is then that the cloud is somehow able to make insecure software trustworthy. Yet in the past year, we’ve learned that Microsoft’s <a href="https://thehackernews.com/2023/09/outlook-breach-microsoft-reveals-how.html" rel="noopener noreferrer" target="_blank">email platform was thoroughly hacked</a>, including classified government email. (<a href="https://metacurity.substack.com/p/russian-hacking-group-midnight-blizzard" rel="noopener noreferrer" target="_blank">Twice!</a>) There are also <a href="https://www.lastweekinaws.com/blog/azures-terrible-security-posture-comes-home-to-roost/" rel="noopener noreferrer" target="_blank">well-founded worries about the security of the Azure cloud</a>. Meanwhile, industry darling Okta, which provides cloud-based software that enables user log-in to various applications, <a href="https://www.reuters.com/technology/cybersecurity/okta-says-hackers-stole-data-all-customer-support-users-cyber-breach-2023-11-29/" rel="noopener noreferrer" target="_blank">got comprehensively owned</a>. This was their second breach within two years. Also, there was a suspicious spate of Okta users subsequently getting hacked.</p><p>Clearly, we need better software.</p><p>The <a href="https://spectrum.ieee.org/tag/european-union">European Union</a> has launched three pieces of <a href="https://spectrum.ieee.org/tag/legislation">legislation</a> to this effect: <a href="https://digital-strategy.ec.europa.eu/en/policies/nis2-directive" rel="noopener noreferrer" target="_blank">NIS2 for important services</a>; the <a href="https://digital-strategy.ec.europa.eu/en/policies/cyber-resilience-act" rel="noopener noreferrer" target="_blank">Cyber Resilience Act </a>for almost all commercial software and electronic devices; and a revamped <a href="https://www.euractiv.com/section/digital/news/eu-updates-product-liability-regime-to-include-software-artificial-intelligence/" rel="noopener noreferrer" target="_blank">Product Liability Directive</a> that also extends to software. Legislation is always hard, and it remains to be seen <a href="https://berthub.eu/articles/posts/eu-cra-what-does-it-mean-for-open-source/" rel="noopener noreferrer" target="_blank">if they got it right</a>. But that software security is terrible enough these days to warrant legislation seems obvious.</p><h2>Why software security is so bad</h2><p>I want to touch on incentives. The situation today is clearly working well for commercial operators. Making more secure software takes time and is a lot of work, and the current security incidents don’t appear to be impacting the bottom line or stock prices. You can <a href="https://www.microsoft.com/en-us/research/publication/software-components-only-the-giants-survive/" rel="noopener noreferrer" target="_blank">speed up time to market by cutting corners</a>. So from an economic standpoint, what we see is entirely predictable. Legislation could be very important in changing this equation.</p><p>The security of software depends on two factors—the <em>density</em> of security issues in the <a href="https://spectrum.ieee.org/tag/source-code">source code</a> and the sheer <em>amount of code</em> accessible by <a href="https://spectrum.ieee.org/tag/hackers">hackers</a>. As the U.S. defense community loved to point out in the 1980s, <a href="https://www.quora.com/Who-said-Quantity-has-a-quality-all-its-own" rel="noopener noreferrer" target="_blank">quantity has a quality all of its own</a>. The reverse applies to software—the more you have of it, the more risks you run.</p><p>As a case in point, Apple iPhone users got repeatedly hacked over many years because of the huge attack surface exposed by iMessage. It is possible to send an unsolicited iMessage to an Apple user. The phone will then immediately process that message so it can preview it. The problem is that Apple in its wisdom decided that such unsolicited messages needed to support a vast array of image formats, accidentally <a href="https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html" rel="noopener noreferrer" target="_blank">including PDFs with weird embedded compressed fonts</a> using an ancient format that effectively included a <a href="https://spectrum.ieee.org/tag/programming">programming</a> language. So someone could send an unsolicited message to your iPhone that could probe for weaknesses in the rest of the phone.</p><p>In this way, attackers were able to benefit from security bugs in the phone’s millions of lines of code. You don’t need a high bug density to find <a href="https://www.europarl.europa.eu/meetdocs/2014_2019/plmrep/COMMITTEES/PEGA/DV/2023/05-08/REPORTcompromises_EN.pdf" rel="noopener noreferrer" target="_blank">an exploitable hole</a> in millions of lines of code.</p><p>Wiping out all the bugs in your code won’t save you from the decision to implement a feature to automatically execute code embedded in documents.</p><p>Apple could have prevented this situation by restricting previews to a far smaller range of image formats, or even a single “known good” image format. Apple could have saved themselves an enormous amount of pain simply by <a href="https://github.com/berthubert/sbox#sbox" target="_blank">exposing fewer lines of their code</a> to attackers. Incidentally, the E.U.’s Cyber Resilience Act <a href="https://berthub.eu/articles/posts/eu-cra-secure-coding-solution/" target="_blank">explicitly tells vendors to minimize the attack surface</a>.</p><p><span></span>Apple is (by far) not the worst offender in this field. But it is a widely respected and well-resourced company that usually thinks through what they do. And even they got it wrong by needlessly shipping and exposing too much code.</p><h2>Could we not write better code?</h2><p>There are those who think the biggest problem is the quality of the code, expressed in terms of the density of bugs in it. There are many interesting things happening on this front, like the use of <a href="https://www.nsa.gov/Press-Room/Press-Releases-Statements/Press-Release-View/Article/3608324/us-and-international-partners-issue-recommendations-to-secure-software-products/" target="_blank">memory safe languages</a> like <a href="https://www.rust-lang.org/" target="_blank">Rust</a>. Other languages are <a href="https://github.com/google/sanitizers/wiki/AddressSanitizer" target="_blank">also upping their security game</a>. <a href="https://en.wikipedia.org/wiki/Fuzzing" rel="noopener noreferrer" target="_blank">Fuzzers</a>—test tools that automatically modify inputs to computer programs to find weaknesses and bugs—are also getting ever more advanced.</p><p>But many security problems are in the logic underlying the code. For example, the Barracuda email exploit originated in a third-party library that would actually <a href="https://www.cvedetails.com/cve/CVE-2023-7101/" rel="noopener noreferrer" target="_blank">execute code</a> in Excel spreadsheets when they were scanned for <a href="https://spectrum.ieee.org/tag/viruses">viruses</a>. Wiping out all the bugs in your code won’t save you from the decision to implement a feature to automatically execute code embedded in documents.</p><h2>The state of shipping software</h2><p>Another problem is that we often don’t know what code we are actually shipping. Software has gotten <em>huge</em>. In 1995 <a href="https://en.wikipedia.org/wiki/Niklaus_Wirth" rel="noopener noreferrer" target="_blank">Niklaus Wirth</a> lamented that software had grown to megabytes in size. In his article “A Plea for Lean Software,” he went on to describe his <a href="https://en.wikipedia.org/wiki/Oberon_(operating_system)" rel="noopener noreferrer" target="_blank">Oberon operating system</a>, which was only 200 kilobytes, including an editor and a compiler. There are now projects that have more than 200 KB for their configuration files alone.</p><p>A typical app today is built on <a href="https://www.electronjs.org/" rel="noopener noreferrer" target="_blank">Electron JS</a>, a framework that incorporates both Chromium (“Chrome”) and Node.JS, which provides access to tens of thousands of software packages for <a href="https://spectrum.ieee.org/tag/javascript">JavaScript</a>. I estimate just using Electron JS entails at least 50 million lines of code if you include dependencies. Perhaps more. The app meanwhile likely pulls in hundreds or thousands of helper packages. Many packages used will also, by default, snitch on your users to advertisers and other data brokers. Dependencies pull in further dependencies, and exactly what gets included in the build can change on a daily basis, and no one really knows.</p><p>If this app controls anything in your house, it will also connect to a software stack over at <a href="https://spectrum.ieee.org/tag/amazon">Amazon</a>, probably also powered by Node.js, also pulling in many dependencies. </p><p>We are likely looking at over 50 million active lines of code to open a garage door….</p><p>But wait, there’s more. We used to ship software as the output of a compiler, or perhaps as a bunch of files to be interpreted. Such software then had to be <em>installed</em> and <em>configured</em> to work right. Getting your code packaged to ship like this is a lot of work. But it was good work since it forced people to think about what was in their “package.” This software package would then integrate with an <a href="https://spectrum.ieee.org/tag/operating-system">operating system</a> and with local services, based on the configuration.</p><p>Since the software ran on a different computer than the one it was developed on, people really had to know what they shipped and think it through. And sometimes it didn’t work, leading to the joke where a developer tells the operations people, “Well, it works on my system,” and the retort “Then back up your email, we’re taking your laptop into production!”</p><p>This used to be a joke, but these days we often ship software as containers, shipping not only the software itself but also including operating system files to make sure the software runs in a well-known environment. This frequently entails effectively shipping a complete computer disk image. This again vastly expands the amount of code being deployed. Note that you can do good things with containers like <a href="https://spectrum.ieee.org/tag/docker">Docker</a> (see below), but there are a lot of images over 350 MB on the <a href="https://hub.docker.com/explore" rel="noopener noreferrer" target="_blank">Docker Hub</a>.</p><p>Add it all up and we are likely looking at over 50 million active lines of code to open a garage door, running several operating-system images on multiple servers.</p><p>Now, even if all the included dependencies are golden, are we sure that their security updates are making it to your garage door opener app? I wonder how many Electron apps are still shipping with the <a href="https://www.schneier.com/blog/archives/2023/09/critical-vulnerability-in-libwebp-library.html" rel="noopener noreferrer" target="_blank">image processing bug</a> that had Google and Apple scramble to put out updates last year. We don’t even know.</p><p>But even worse, it is a known fact that all these dependencies are <em>not</em> golden. The Node.js ecosystem has a <a href="https://thehackernews.com/2023/02/researchers-hijack-popular-npm-package.html" rel="noopener noreferrer" target="_blank">comical history</a> of package repositories <a href="https://snyk.io/blog/npm-security-preventing-supply-chain-attacks/" rel="noopener noreferrer" target="_blank">being taken over</a>, hijacked, or resurrected under the same name by someone else, someone with nefarious<a href="https://www.theregister.com/2023/06/19/npm_s3_buckets_malware/" rel="noopener noreferrer" target="_blank"> plans for your security</a>. <a href="https://www.theregister.com/2023/06/02/novel_pypi_attack_reversinglabs/" rel="noopener noreferrer" target="_blank">PyPI</a> (a <a href="https://spectrum.ieee.org/tag/python">Python</a> counterpart of Node.js) has suffered from <a href="https://www.theregister.com/2023/01/04/pypi_pytorch_dependency_attack/" rel="noopener noreferrer" target="_blank">similar problems</a>. Dependencies always need scrutiny, but no one can reasonably be expected to <a href="https://medium.com/graph-commons/analyzing-the-npm-dependency-network-e2cf318c1d0d" rel="noopener noreferrer" target="_blank">check thousands of them frequently</a>. But we prefer not to think about this. (Note that you should also not overshoot and needlessly reimplement everything yourself to prevent dependencies. There are very good modules that <a href="https://sqlite.org/" rel="noopener noreferrer" target="_blank">likely are more secure</a> than what you could type in on your own.)</p><p>The world is shipping far too much code where we don’t even know what we ship and we aren’t looking hard enough (or at all) at what we <em>do</em> know we ship.</p><h2>You <em>can</em> write lean code today</h2><p>Writing has been called the process by which you find out you don’t <a href="https://fs.blog/writing-to-think/" rel="noopener noreferrer" target="_blank">know what you are talking about</a>. Actually doing stuff, meanwhile, is the process by which you find out you also did not know what you were writing about.</p><p>In a small reenactment of Wirth’s Oberon Project, I too wrote some code to prove a point, and to reassure myself I still know what I am talking and writing about. Can you still make useful and modern software the old way? I decided to try to create a minimalistic but full-featured image-sharing solution that I could trust.</p><p>Trifecta is the result. It is <a href="https://berthub.eu/articles/trifecta/" rel="noopener noreferrer" target="_blank">actual stand-alone software</a> that lets you use a browser to drag and drop images for easy sharing. It has pained me for years that I had to use <a href="https://imgur.com/" rel="noopener noreferrer" target="_blank">imgur</a> for this purpose. Not only does imgur install lots of cookies and trackers in my browser, I also force these trackers onto the people who view the images that I share. If you want to self-host a Web service like this, you also don’t want to get hacked. Most image-sharing solutions I found that you could run yourself are based on huge frameworks that I don’t trust too much for the reasons outlined above.</p><p>So, also to make a point, I decided to create a minimalistic but also useful image-sharing solution that I could trust. And more important, that other people could trust as well, because you can check out all Trifecta’s code within a few hours. It consists of <a href="https://berthub.eu/articles/posts/trifecta-technology" target="_blank">1,600 lines of new source code</a>, plus around five important dependencies. </p><p>You end up with a grand total of 3 megabytes of code.</p><p>To contrast, <a href="https://github.com/CaramelFur/Picsur/pkgs/container/picsur" rel="noopener noreferrer" target="_blank">one other image-sharing solution</a> ships as a 288-MB Docker image, although admittedly it looks better and has some more features. But not 285 MB worth of them. Another comparison is <a href="https://github.com/SashenJayathilaka/Photo-Sharing-Application" rel="noopener noreferrer" target="_blank">this Node-based picture-sharing solution</a>, which <a href="https://spectrum.ieee.org/tag/clocks">clocks</a> in at 1,600 dependencies, apparently totaling over 4 million lines of JavaScript.</p><p>The world ships too much code, most of it by third parties, sometimes unintended, most of it uninspected. <em></em></p><p><span></span>Note that Trifecta is not intended as a public site where random people can share images, as that does not tend to end well. It is however very suitable for company or personal use. You can read more about the project <a href="https://berthub.eu/articles/trifecta" target="_blank">here</a>, and there is also <a href="https://berthub.eu/articles/posts/trifecta-technology" target="_blank">a page</a> about the technology used to deliver such a tiny self-contained solution.</p><h2>Response to Trifecta</h2><p>This has been rather interesting. The most common response to Trifecta so far has been that I should use a whole bag of Amazon Web Services to deploy it. This is an exceedingly odd response to a project with the clearly stated goal of providing stand-alone software that does not rely on external services. I’m not sure what is going on here.</p><p>Another reaction has been that I treat Docker unfairly, and that you could definitely use containers for good. And I agree wholeheartedly. But I also look at what people are actually doing (also with other forms of containers or virtual machines), and it’s not so great.</p><p>I want to end this post with some observations from <a href="https://cr.yp.to/bib/1995/wirth.pdf" target="_blank">Niklaus Wirth’s 1995 paper</a>:</p><blockquote>“To some, complexity equals power. (…) Increasingly, <em>people seem to misinterpret complexity as sophistication</em>, which is baffling—the incomprehensible should cause suspicion rather than admiration.”</blockquote><p>I’ve similarly observed that some people prefer complicated systems. As <a href="https://en.wikipedia.org/wiki/Tony_Hoare" rel="noopener noreferrer" target="_blank">Tony Hoare</a> noted long ago, “[T]here are two methods in software design. <a href="https://dl.acm.org/doi/pdf/10.1145/1283920.1283936" rel="noopener noreferrer" target="_blank">One is to make the program so simple, there are obviously no errors</a>. The other is to make it so complicated, there are no obvious errors.” If you can’t do the first variant, the second way starts looking awfully attractive perhaps.</p><p>Back to Wirth: </p><blockquote>“Time pressure is probably the foremost reason behind the emergence of bulky software. The time pressure that designers endure discourages careful planning. It also discourages improving acceptable solutions; instead, it encourages quickly conceived software additions and corrections. Time pressure gradually corrupts an engineer’s standard of quality and perfection. It has a detrimental effect on people as well as products.”</blockquote><p>Why spend weeks paring down your software when you can also ship a whole pre-installed operating-system image that just works?</p><blockquote>“The plague of software explosion is not a ‘law of nature.’ It is avoidable, and it is the software engineer’s task to curtail it.”</blockquote><p>If this is indeed on the shoulders of software people, we should perhaps demand more time for it.</p><p>The world ships too much code, most of it by third parties, sometimes unintended, most of it uninspected. Because of this, there is a huge <em>attack surface</em> full of mediocre code. Efforts are ongoing to improve the quality of code itself, but many exploits are due to logic fails, and less progress has been made scanning for those. Meanwhile, great strides could be made by paring down just how much code we expose to the world. This will increase time to market for products, but legislation is around the corner that should force vendors to take security more seriously.</p><p>Trifecta is, like Wirth’s Oberon Project mentioned above, meant as a proof that you can deliver a lot of functionality even with a limited amount of code and dependencies. With effort and legislation, maybe the future could again bring sub-50-million-line garage-door openers. Let’s try to make it happen.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The DEA is now abandoning body cameras (144 pts)]]></title>
            <link>https://www.propublica.org/article/drug-enforcement-administration-ends-body-camera-program-trump</link>
            <guid>43910720</guid>
            <pubDate>Tue, 06 May 2025 23:28:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.propublica.org/article/drug-enforcement-administration-ends-body-camera-program-trump">https://www.propublica.org/article/drug-enforcement-administration-ends-body-camera-program-trump</a>, See on <a href="https://news.ycombinator.com/item?id=43910720">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-pp-location="article body">

        
                    <div data-pp-location="top-note">
                

                                                
            <p>ProPublica is a nonprofit newsroom that investigates abuses of power. Sign up to receive <a href="https://www.propublica.org/newsletters/the-big-story?source=www.propublica.org&amp;placement=top-note&amp;region=national">our biggest stories</a> as soon as they’re published.</p>

                

            </div><!-- end .article-body__top-notes -->
        
        
        




                    

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        
            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

        
    
                    
<p data-pp-blocktype="copy" data-pp-id="2.0">The Drug Enforcement Administration has quietly ended its body camera program barely four years after it began, according to an internal email obtained by ProPublica.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="3.0">On April 2, DEA headquarters emailed employees announcing that the program had been terminated effective the day before. The DEA has not publicly announced the policy change, but by early April, <a href="https://www.dea.gov/es/node/223436">links to pages about body camera policies</a> on the DEA’s website were broken.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="4.0">The email said the agency made the change to be “consistent” with a Trump executive order rescinding the 2022 requirement that all federal law enforcement agents use body cameras.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="5.0">But at least two other federal law enforcement agencies within the Justice Department — the U.S. Marshals Service and the Bureau of Alcohol, Tobacco, Firearms and Explosives — are still requiring body cameras, according to their spokespeople. The FBI referred questions about its body camera policy to the Justice Department, which declined to comment.</p>
        
    
                        
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="7.0">The DEA did not respond to questions about its decision to stop using the cameras, saying that the agency “does not comment on tools and techniques.” Reuters reported on the change as part of a story about <a href="https://www.reuters.com/world/us/white-house-seeks-budget-cuts-justice-department-law-enforcement-offices-sources-2025-05-02/">budget cuts for law enforcement offices</a>.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="8.0">One former federal prosecutor expressed concern that the change would make life more difficult for DEA agents.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="9.0">“The vast majority of times I viewed body camera footage is based on allegations from a defense attorney about what a cop did,” said David DeVillers, former U.S. attorney for the Southern District of Ohio. “And I would say 95% of the time it absolves the cop of wrongdoing.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="11.0">The Justice Department started requiring that its federal agents wear the devices in 2021 in the wake of the protests over George Floyd’s death the previous summer.</p>
        
    
                    
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="13.0">“We welcome the addition of body worn cameras and appreciate the enhanced transparency and assurance they provide to the public and to law enforcement officers working hard to keep our communities safe and healthy,” then-DEA Administrator Anne Milgram said in a <a href="https://www.justice.gov/archives/opa/pr/justice-department-announces-first-federal-agents-use-body-worn-cameras?utm_source=chatgpt.com">Sept. 1, 2021, press release</a> announcing the use of the cameras.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="14.0">In May 2022, then-President Joe Biden issued an executive order expanding the use of body cameras to all federal law enforcement officers. </p>

<p data-pp-blocktype="copy" data-pp-id="14.1">In January, the incoming Trump administration rescinded that order, along with almost 100 others it considered “harmful.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="15.0">In early February, U.S. Immigration and Customs Enforcement, which is part of the Department of Homeland Security, was <a href="https://thehill.com/homenews/administration/5147728-border-patrol-to-stop-usage-of-body-cameras-in-the-field-report/">one of the first agencies to get rid of its body cameras</a>. Subsequent videos show plainclothes immigration agents making arrests with no visible body cameras.</p>
        
    
                        
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="17.0">The DOJ wrote in a 2022 Office of Inspector General management report that the cameras were a “means of enhancing police accountability and the public’s trust in law enforcement.” Studies have consistently shown that departments that use body cameras experience a drop in complaints against officers, according to the <a href="https://www.policeforum.org/assets/BWCdecadelater.pdf">nonprofit Police Executive Research Forum</a>, though it’s not clear if the drop is due to improvements in officer behavior or to a decrease in frivolous complaints.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="18.0">“Eliminating these videos is really taking away a tool that we’ve seen be of benefit to law enforcement practices,” said Cameron McEllhiney, executive director of the National Association for Civilian Oversight of Law Enforcement. “It’s also a great teaching tool, besides keeping community members safe from the potential misconduct that could occur.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="19.0">The DOJ put a lot of money into the body camera initiative. In August of 2021, it awarded Axon, the company that dominates the body camera market, a $30.4 million contract for cameras and the software to handle the evidence they created. The contract, according to Axon, remains active. But only about one-sixth of it has been paid out, according to <a href="https://www.usaspending.gov/award/CONT_IDV_15DDHQ21D00000010_1524">federal contracting data</a>.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="20.0">The most recent publicly available version of the DEA’s body camera policy dates to December 2022. It only required agents to wear the devices when they were conducting preplanned arrests or searches and seizures that required a warrant. It also only required DEA officers to wear their body cameras when they were working within the United States.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="21.0">Agents had 72 hours after the end of an operation to upload their video evidence, unless there was a shooting, in which case they were instructed to upload the video evidence as soon as possible. The policy laid out in detail how and by whom evidence from the cameras should be handled in the event officers used force, and it authorized the DEA to use the video evidence when investigating its own officers.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="22.0">The DEA had planned to implement the policy in phases so that eventually its officers nationwide would be wearing the devices when serving warrants or carrying out planned arrests. In its 2025 fiscal year <a href="https://www.dea.gov/sites/default/files/2024-05/dea_fy_2025_presidents_budget_narrative_omb_cleared_03-07-2024_final_leg_changes_1.pdf">budget request</a> to Congress, the agency asked for $15.8 million and 69 full time employees, including five attorneys, “to enable the DEA’s phased implementation plan of nationwide use of Body Worn Cameras.”</p>
        
    
                                  
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="24.0">Records obtained via Freedom of Information Act request by Citizens for Responsibility and Ethics in Washington show that the Biden-era DOJ had an ambitious plan to capture agencywide metrics and data about the efficiency and use of body cameras by its law enforcement officers.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="25.0">Laura Iheanachor, senior counsel at CREW, said that before federal law enforcement started wearing body cameras, several local <a href="https://www.startribune.com/ear-after-bidens-executive-order-body-cameras-majority-federal-agents-minnesota-not-yet-wearing/600278243?utm_source=chatgpt.com">police agencies had declined to participate</a> in federal task forces because doing so would have forced their officers to remove their cameras.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="26.0">“It’s a protective measure for officers, for the public,” Iheanachor said. “And it allows state and federal law enforcement to work together in harmony.”</p>
        
    
        
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[VVVVVV Source Code (371 pts)]]></title>
            <link>https://github.com/TerryCavanagh/VVVVVV</link>
            <guid>43910681</guid>
            <pubDate>Tue, 06 May 2025 23:22:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/TerryCavanagh/VVVVVV">https://github.com/TerryCavanagh/VVVVVV</a>, See on <a href="https://news.ycombinator.com/item?id=43910681">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/TerryCavanagh/VVVVVV/blob/master/logo.gif"><img src="https://github.com/TerryCavanagh/VVVVVV/raw/master/logo.gif" alt="logo" title="VVVVVV" data-animated-image=""></a></p>
<p dir="auto">This is the source code to VVVVVV, the 2010 indie game by <a href="http://distractionware.com/" rel="nofollow">Terry Cavanagh</a>, with music by <a href="http://souleye.madtracker.net/" rel="nofollow">Magnus Pålsson</a>. You can read the <a href="http://distractionware.com/blog/2020/01/vvvvvv-is-now-open-source/" rel="nofollow">announcement</a> of the source code release on Terry's blog!</p>
<p dir="auto">The source code for the desktop version is in <a href="https://github.com/TerryCavanagh/VVVVVV/blob/master/desktop_version">this folder</a>.</p>
<p dir="auto">VVVVVV is still commercially available at <a href="https://thelettervsixtim.es/" rel="nofollow">thelettervsixtim.es</a> if you'd like to support it, but you are completely free to compile the game for your own personal use. If you're interested in distributing a compiled version of the game, see <a href="https://github.com/TerryCavanagh/VVVVVV/blob/master/LICENSE.md">LICENSE.md</a> for more information.</p>
<p dir="auto">Discussion about VVVVVV updates mainly happens on the "unofficial" <a href="https://discord.gg/Zf7Nzea" rel="nofollow">VVVVVV discord</a>, in the <code>vvvvvv-code</code> channel.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<ul dir="auto">
<li>Created by <a href="http://distractionware.com/" rel="nofollow">Terry Cavanagh</a></li>
<li>Room Names by <a href="http://www.foddy.net/" rel="nofollow">Bennett Foddy</a></li>
<li>Music by <a href="https://magnuspalsson.com/" rel="nofollow">Magnus Pålsson</a></li>
<li>Metal Soundtrack by <a href="https://link.space/@familyjules" rel="nofollow">FamilyJules</a></li>
<li>2.0 Update (C++ Port) by <a href="http://www.machinestudios.co.uk/" rel="nofollow">Simon Roth</a></li>
<li>2.2 Update (SDL2/PhysicsFS/Steamworks port) by <a href="http://www.flibitijibibo.com/" rel="nofollow">Ethan Lee</a></li>
<li>Additional coding by <a href="https://infoteddy.info/" rel="nofollow">Misa Kai</a></li>
<li>Beta Testing by Sam Kaplan and Pauli Kohberger</li>
<li>Ending Picture by Pauli Kohberger</li>
<li>Localisations by <a href="https://github.com/TerryCavanagh/VVVVVV/blob/master/desktop_version/TRANSLATORS.txt">our localisation teams</a></li>
<li>With additional contributions by <a href="https://github.com/TerryCavanagh/VVVVVV/blob/master/desktop_version/CONTRIBUTORS.txt">many others here on github</a> &lt;3</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[iOS Kindle app now has a ‘get book’ button after changes to App Store rules (181 pts)]]></title>
            <link>https://www.theverge.com/news/661719/amazon-app-ios-apple-iphone-ipad-kindle-buy-books</link>
            <guid>43909432</guid>
            <pubDate>Tue, 06 May 2025 20:41:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/news/661719/amazon-app-ios-apple-iphone-ipad-kindle-buy-books">https://www.theverge.com/news/661719/amazon-app-ios-apple-iphone-ipad-kindle-buy-books</a>, See on <a href="https://news.ycombinator.com/item?id=43909432">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="zephr-anchor"><p>Following a <a href="https://www.theverge.com/news/659246/apple-epic-app-store-judge-ruling-control">ruling on April 30th</a> by the <em>Epic Games v. Apple</em> judge Yvonne Gonzalez Rogers, Apple can no longer collect a 27 percent commission on purchases made outside of apps or restrict how developers can direct users to alternate payment options. Apple has <a href="https://www.theverge.com/news/661032/apple-epic-games-app-store-antitrust-ninth-circuit">appealed the decision</a>, but is also complying with it in the interim, prompting several companies to <a href="https://www.theverge.com/news/660084/spotify-app-iphone-apple-update-external-payment-links">announce app updates</a> making it <a href="https://www.theverge.com/news/659754/patreon-update-iphone-ios-app-apple-payment-system-ruling">easier for users to pay for subscriptions and services</a>. That now includes Amazon’s iOS Kindle app. Contrary to prior limitations, there is now a prominent orange “Get book” button on Kindle app’s book listings.</p><p>“We regularly make improvements to our apps to help ensure we are providing customers the most convenient experience possible,” Amazon spokesperson Tim Gillman told <em>The Verge</em> over email. “By selecting ‘Get Book’ within the Kindle for iOS app, customers can now complete their purchase through their mobile web browser.”</p><p>Amazon wasn’t the first company to release a dedicated reading device with an E Ink screen. Companies like Sony beat them to the punch by a couple of years. What helped make the Kindle popular, and arguably destined to dominate the e-reader market, was that you could buy books right on the device, even if you didn’t have Wi-Fi access thanks to <a href="https://www.theverge.com/2021/7/28/22598747/kindle-3g-network-shutdown-e-readers-no-internet">Amazon’s now discontinued cellular Whispernet</a> service.</p><p>Before today’s updates, buying books wasn’t a feature you’d find in the Kindle mobile app following app store rule changes Apple implemented in 2011 that required developers to remove links or buttons leading to alternate ways to make purchases. You could <a href="https://www.theverge.com/2013/7/30/4572170/amazon-finds-clever-way-around-apple-restrictions-with-kindle-ios-app">search for books that offered samples</a> for download, add them to a shopping list, and read titles you already own, but you couldn’t actually buy titles through the Kindle or Amazon app, or even see their prices. </p><p>To avoid having to pay Apple’s 30 percent cut of in-app purchases, and the <a href="https://www.theverge.com/2024/1/18/24042892/apple-critics-27-percent-app-store-tax">27 percent tax on alternative payment methods</a> Apple introduced in January 2024, Amazon previously required you to visit and login to its online store through a device’s web browser to purchase ebooks on your iPhone or iPad, which were then synchronized to the app. It was a cumbersome process compared to the streamlined experience of buying ebooks directly on a Kindle e-reader.</p><p>Amazon probably isn’t going to change its mind about avoiding Apple’s 30 percent cut on ebook sales, but the update to the Kindle app now makes it much easier to purchase ebooks on your iPhone for those times when your Kindle e-reader doesn’t have a reliable Wi-Fi connection.</p><p>However, there’s still the chance Apple could win its appeal, forcing Amazon to undo these updates and improvements and once again make buying ebooks on iPhones overcomplicated and inconvenient.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[India launches attack on 9 sites in Pakistan and Pakistani Jammu and Kashmir (442 pts)]]></title>
            <link>https://www.reuters.com/world/india/india-launches-attack-9-sites-pakistan-pakistan-occupied-jammu-kashmir-2025-05-06/</link>
            <guid>43909430</guid>
            <pubDate>Tue, 06 May 2025 20:41:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/world/india/india-launches-attack-9-sites-pakistan-pakistan-occupied-jammu-kashmir-2025-05-06/">https://www.reuters.com/world/india/india-launches-attack-9-sites-pakistan-pakistan-occupied-jammu-kashmir-2025-05-06/</a>, See on <a href="https://news.ycombinator.com/item?id=43909430">Hacker News</a></p>
Couldn't get https://www.reuters.com/world/india/india-launches-attack-9-sites-pakistan-pakistan-occupied-jammu-kashmir-2025-05-06/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Claude's system prompt is over 24k tokens with tools (496 pts)]]></title>
            <link>https://github.com/asgeirtj/system_prompts_leaks/blob/main/claude.txt</link>
            <guid>43909409</guid>
            <pubDate>Tue, 06 May 2025 20:39:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/asgeirtj/system_prompts_leaks/blob/main/claude.txt">https://github.com/asgeirtj/system_prompts_leaks/blob/main/claude.txt</a>, See on <a href="https://news.ycombinator.com/item?id=43909409">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>GitHub Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_advanced_security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_advanced_security_link_product_navbar&quot;}" href="https://github.com/security/advanced-security">
      
      <div>
        <p>GitHub Advanced Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code Review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      
      <div>
        <p>Code Search</p><p>
        Find more, search less
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
                    <p><span id="resources-explore-heading">Explore</span></p><ul aria-labelledby="resources-explore-heading">
                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;events_amp_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;events_amp_webinars_link_resources_navbar&quot;}" href="https://resources.github.com/">
      Events &amp; Webinars

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ebooks_amp_whitepapers&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ebooks_amp_whitepapers_link_resources_navbar&quot;}" href="https://github.com/resources/whitepapers">
      Ebooks &amp; Whitepapers

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;executive_insights&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;executive_insights_link_resources_navbar&quot;}" href="https://github.com/solutions/executive-insights">
      Executive Insights

    
</a></li>

                </ul>
              </div>
</li>


                <li>
      
      <div>
              <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

                </ul>
              </div>
              <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

                </ul>
              </div>
              
          </div>
</li>


                <li>
      
      <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="https://github.com/enterprise">
      
      <div>
        <p>Enterprise platform</p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>


                <li>
    <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:asgeirtj/system_prompts_leaks" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="wv0UXW1dirF5gA-9HM0woKoMRCEtGnh9m7tRv6zJoGuklWEgFX2VSxqBIjyXhj-NGIEcd2M5fqugW4Z3CEcI-g" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="asgeirtj/system_prompts_leaks" data-current-org="" data-current-owner="asgeirtj" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>


            

              <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=asgeirtj%2Fsystem_prompts_leaks" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/asgeirtj/system_prompts_leaks/blob/main/claude.txt&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="3418ddca557bb3eb94fb8b097e459a1a9fcb6f8b51fa460cf951ed358d877d36" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
                Sign up
              </a>

              
          
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TeleMessage, used by Trump officials, can access plaintext chat logs (242 pts)]]></title>
            <link>https://micahflee.com/despite-misleading-marketing-israeli-company-telemessage-used-by-trump-officials-can-access-plaintext-chat-logs/</link>
            <guid>43909220</guid>
            <pubDate>Tue, 06 May 2025 20:17:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://micahflee.com/despite-misleading-marketing-israeli-company-telemessage-used-by-trump-officials-can-access-plaintext-chat-logs/">https://micahflee.com/despite-misleading-marketing-israeli-company-telemessage-used-by-trump-officials-can-access-plaintext-chat-logs/</a>, See on <a href="https://news.ycombinator.com/item?id=43909220">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <article>
                    <header>
                        
                            <figure>
        <img srcset="https://micahflee.com/content/images/size/w300/2025/05/TM-SGNL-diagram-1.png 300w,
                    https://micahflee.com/content/images/size/w720/2025/05/TM-SGNL-diagram-1.png 720w,
                    https://micahflee.com/content/images/size/w960/2025/05/TM-SGNL-diagram-1.png 960w,
                    https://micahflee.com/content/images/size/w1200/2025/05/TM-SGNL-diagram-1.png 1200w,
                    https://micahflee.com/content/images/size/w2000/2025/05/TM-SGNL-diagram-1.png 2000w,
                    https://micahflee.com/content/images/2025/05/TM-SGNL-diagram-1.png" sizes="(max-width: 1200px) 100vw, 1200px" src="https://micahflee.com/content/images/size/w1200/2025/05/TM-SGNL-diagram-1.png" alt="Despite misleading marketing, Israeli company TeleMessage, used by Trump officials, can access plaintext chat logs">
            <figcaption><span>Diagram of how TeleMessage archives Signal messages, based on my analysis of the source code</span></figcaption>
    </figure>
                    </header>

                <section>
                    <p>Despite their misleading marketing, TeleMessage, the company that makes a modified version of Signal used by senior Trump officials, can access plaintext chat logs from its customers.</p><p>In this post I give a high level overview of how the TeleMessage fake Signal app, called TM SGNL, works and why it's so insecure. Then I give a thorough analysis of the source code for TM SGNL's Android app, and what led me to conclude that TeleMessage can access plaintext chat logs. Finally, I back up my analysis with as-of-yet unpublished details about the <a href="https://micahflee.com/the-signal-clone-the-trump-admin-uses-was-hacked/" rel="noreferrer">hack</a> of TeleMessage.</p><p>But first, here's a quick timeline of events.</p><ul><li>On Thursday, 404 Media <a href="https://www.404media.co/mike-waltz-accidentally-reveals-obscure-app-the-government-is-using-to-archive-signal-messages/" rel="noreferrer">reported</a> that in the Reuters <a href="https://www.reutersconnect.com/item/us-national-security-advisor-mike-waltz-attends-a-cabinet-meeting-held-by-president-trump-at-the-white-house-in-washington/dGFnOnJldXRlcnMuY29tLDIwMjU6bmV3c21sX1JDMkg4RUFEOEtGRw%3D%3D?ref=404media.co" rel="noreferrer">photo</a> showing former National Security Advisor and <a href="https://zeteo.com/p/signal-chat-war-crimes-revealed-yemen-trump-admin" rel="noreferrer">war criminal</a> Mike Waltz checking his Signal messages under the table, he was actually using an obscure modified Signal app called TM SGNL, and not the real and actually secure Signal app.</li><li>On Friday, I wrote <a href="https://micahflee.com/tm-sgnl-the-obscure-unofficial-signal-app-mike-waltz-uses-to-text-with-trump-officials/" rel="noreferrer">an analysis</a> of everything I could find out about TM SGNL using OSINT, including the fact that it's nearly impossible to install without a device enrolled in an MDM service that's tied to an Apple Business Manager or a Google Enterprise account.</li><li>On Saturday, after <a href="https://todon.eu/@ljrk/114444796069542288" rel="noreferrer">discovering</a> that TeleMessage <a href="https://web.archive.org/web/20250503004419/https://www.telemessage.com/developer/api-libraries/" rel="noreferrer">published</a> the source code for the TM SGNL apps for Android and iPhone themselves, I <a href="https://micahflee.com/heres-the-source-code-for-the-unofficial-signal-app-used-by-trump-officials/" rel="noreferrer">re-published them</a> on GitHub with the goal of making them easier to research. (It looks like the iOS source code is actually just unmodified Signal, so maybe they actually only published their Android code.)</li><li>On Saturday night, an anonymous source told me they hacked TeleMessage.</li><li>On Sunday, I, along with Joseph Cox, <a href="https://www.404media.co/the-signal-clone-the-trump-admin-uses-was-hacked/" rel="noreferrer">published an article</a> about the hack to 404 Media (and to <a href="https://micahflee.com/the-signal-clone-the-trump-admin-uses-was-hacked/" rel="noreferrer">my blog</a>).</li><li>On Monday, NBC News <a href="https://www.nbcnews.com/tech/security/telemessage-suspends-services-hackers-say-breached-app-rcna204925" rel="noreferrer">reported</a> that TeleMessage suspended its service after a <em>second hacker</em> breached TeleMessage and "downloaded a large cache of files."</li><li>Today, Senator Ron Wyden <a href="https://www.wyden.senate.gov/imo/media/doc/doj_letter_telemessage.pdf" rel="noreferrer">published</a> a letter, which cites the 404 Media article and my analysis of TM SGNL, to Attorney General Pam Bondi, requesting that the Justice Department investigate the "serious threat to U.S. national security posed by TeleMessage, a federal contractor that sold dangerously insecure communications software to the White House and other federal agencies."</li></ul><p>The devastating hacks confirm the analysis that I'm sharing in this post: that TeleMessage's server –  hosted on the public AWS cloud, run by an <a href="https://www.dropsitenews.com/p/mikewaltz-tech-israel-nationalsecurity-signal" rel="noreferrer">Israeli company</a> that's lead by a former IDF spook – has plaintext access to the Signal chat logs they're archiving (along with chat logs for Telegram, WeChat, and WhatsApp).</p><p><em>If you find this interesting, </em><a href="https://micahflee.com/tm-sgnl-the-obscure-unofficial-signal-app-mike-waltz-uses-to-text-with-trump-officials/#/portal/signup" rel="noreferrer"><em>subscribe</em></a><em> to get these posts emailed directly to your inbox. If you want to support my work, considering becoming a paid supporter.</em></p><p><strong>Table of Contents</strong></p><ul><li><a href="#overview" rel="noreferrer">Overview</a><ul><li><a href="#the-tm-sgnl-app" rel="noreferrer">The TM SGNL app</a></li><li><a href="#telemessages-archive-server" rel="noreferrer">TeleMessage's archive server</a></li><li><a href="#microsoft-365" rel="noreferrer">Microsoft 365</a></li><li><a href="#why-this-is-so-terribly-insecure" rel="noreferrer">Why this is so terribly insecure</a></li></ul></li><li><a href="#analysis-of-the-tm-sgnl-android-source-code" rel="noreferrer">Analysis of the TM SGNL Android source code</a><ul><li><a href="https://micahflee.com/the-signal-clone-the-trump-admin-uses-was-hacked/" rel="noreferrer">Decompiling shared libraries</a></li><li><a href="#important-components" rel="noreferrer">Important components</a></li><li><a href="#signaldatabase" rel="noreferrer">SignalDatabase</a></li><li><a href="#datagrabber" rel="noreferrer">DataGrabber</a></li><li><a href="#archivemessagesprocessor" rel="noreferrer">ArchiveMessagesProcessor</a></li><li><a href="#syncadapter" rel="noreferrer">SyncAdapter</a></li><li><a href="#networkmanager" rel="noreferrer">NetworkManager</a></li><li><a href="#tying-it-all-together" rel="noreferrer">Tying it all together</a></li><li><a href="#conclusion" rel="noreferrer">Conclusion</a></li></ul></li><li><a href="#corroborative-evidence-from-the-hack" rel="noreferrer">Corroborative evidence from the hack</a><ul><li><a href="#a-plaintext-signal-message" rel="noreferrer">A plaintext Signal message</a></li><li><a href="#a-plaintext-telegram-message" rel="noreferrer">A plaintext Telegram message</a></li><li><a href="#a-plaintext-whatsapp-message" rel="noreferrer">A plaintext WhatsApp message</a></li><li><a href="#an-encrypted-whatsapp-message" rel="noreferrer">An encrypted WhatsApp message</a></li><li><a href="#private-key-material" rel="noreferrer">Private key material</a></li></ul></li></ul><h2 id="overview">Overview</h2><p>TeleMessage makes modified versions of popular messaging apps, including Signal, WhatsApp, Telegram, and WeChat. The modified Signal app is almost entirely identical to the authentic version of Signal, except it also archives copies of every message to a destination determined by the TeleMessage customer. (Presumably, WhatsApp, Telegram, and WeChat work in the same way, but I have only analyzed the TM SGNL for Android source code.)</p><h3 id="the-tm-sgnl-app">The TM SGNL app</h3><p>TM SGNL is interoperable with Signal. When a TM SGNL user registers a new account, they're registering it with the official Signal server. TM SGNL users can send messages to Signal users and visa versa. If you're a Signal user, you have no way of knowing when you're talking to a TM SGNL user, because the apps are nearly identical and use the same infrastructure.</p><p>This is how Mike Waltz could accidentally add The Atlantic editor-in-chief Jeffrey Goldberg to a group chat where they discussed <a href="https://zeteo.com/p/signal-chat-war-crimes-revealed-yemen-trump-admin" rel="noreferrer">bombing an apartment building full of civilians</a>: Waltz was presumably using TM SGNL, and Goldberg was presumably using Signal.</p><p>Note that we don't know how long Trump officials have been using TM SGNL. It's possible they've been using it since around Trump's inauguration on January 20. If this is the case, the chat logs for the Signal group where Waltz invited Goldberg will have been collected by TeleMessage. But it's also possible that they only started using TM SGNL <em>after</em> Signalgate, maybe as a way to attempt to start complying with record keeping laws. So far, we don't know the timeline. This would be good to get to the bottom of to understand what laws they have already broken.</p><p>Anyway, on Mike Waltz's phone – and quite likely, the phones of Pete Hegseth, Marco Rubio, Tulsi Gabbard, JD Vance, and many others, possibly even including Donald Trump – the TM SGNL app basically works like this:</p><ul><li>Every message the TM SGNL app sees gets stored in a SQLite database with a <code>status</code> column set to <code>WaitingToBeDelivered</code>.</li><li>TM SGNL registers with the phone's background syncing service. On a regular basis, the app runs some sync code that selects messages that are <code>WaitingToBeDelivered</code>. If there are any, it delivers them to TeleMessage's archive server at <code>https://archive.telemessage.com</code>, and updates their status to <code>Sent</code>.</li></ul><h3 id="telemessages-archive-server">TeleMessage's archive server</h3><p>As I discussed in <a href="https://micahflee.com/tm-sgnl-the-obscure-unofficial-signal-app-mike-waltz-uses-to-text-with-trump-officials/" rel="noreferrer">my initial OSINT analysis</a>, according to this documentation <a href="https://micahflee.com/content/files/2025/05/Capture-Mobile--TeleMessage-_Signal-Capture_20250502.pdf" rel="noreferrer">PDF</a>, the admins for organizations that use TeleMessage set up archive plans and assign users to them.</p><figure><img src="https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-02-13-09-10-1.png" alt="" loading="lazy" width="1795" height="771" srcset="https://micahflee.com/content/images/size/w600/2025/05/Screenshot-From-2025-05-02-13-09-10-1.png 600w, https://micahflee.com/content/images/size/w1000/2025/05/Screenshot-From-2025-05-02-13-09-10-1.png 1000w, https://micahflee.com/content/images/size/w1600/2025/05/Screenshot-From-2025-05-02-13-09-10-1.png 1600w, https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-02-13-09-10-1.png 1795w" sizes="(min-width: 1200px) 1200px"><figcaption><span>How TM SNGL archive plans work, on page 22 of the documentation PDF</span></figcaption></figure><p>Each archive plan has a source messaging app (like TM SGNL) and a destination, which is controlled by the TeleMessage customer. Destinations can include Microsoft 365, email servers (SMTP), or file servers (SFTP). The admin assigns TeleMessage users – like Mike Waltz –  to an archive plan, which determines where their chat logs will get archived.</p><p>Once the TM SGNL app sends chat logs to the archive server, the archive server is supposed to do something like this: It looks up the user that sent the chat log, then looks up that user's archive plan, then forwards the messages to destination defined in the archive plan (via SMTP or SFTP), and presumably (but who really knows for sure) deletes the chat logs from the archive server.</p><p>Here's a diagram of how the whole system appears to work:</p><figure><img src="https://micahflee.com/content/images/2025/05/TM-SGNL-diagram-2.png" alt="" loading="lazy" width="1200" height="825" srcset="https://micahflee.com/content/images/size/w600/2025/05/TM-SGNL-diagram-2.png 600w, https://micahflee.com/content/images/size/w1000/2025/05/TM-SGNL-diagram-2.png 1000w, https://micahflee.com/content/images/2025/05/TM-SGNL-diagram-2.png 1200w" sizes="(min-width: 720px) 720px"><figcaption><span>Diagram of how TeleMessage archives Signal messages, based on my analysis of the source code</span></figcaption></figure><h3 id="microsoft-365">Microsoft 365</h3><p>The archive server appears to connect directly to SMTP and SFTP destinations to push chat logs. However, according to <a href="https://learn.microsoft.com/en-us/purview/archive-signal-archiver-data" rel="noreferrer">Microsoft's documentation</a>, Microsoft 365 works the opposite way: Microsoft 365 logs into the archive server and pulls the chat logs once a day. Their docs state:</p><blockquote>The Signal Archiver connector that you create in the Microsoft Purview portal connects to the TeleMessage site every day and transfers the email messages from the previous 24 hours to a secure Azure Storage area in the Microsoft Cloud.</blockquote><p>They even published their own diagram explaining how it works:</p><figure><img src="https://micahflee.com/content/images/2025/05/signalconnectorworkflow.png" alt="" loading="lazy" width="748" height="457" srcset="https://micahflee.com/content/images/size/w600/2025/05/signalconnectorworkflow.png 600w, https://micahflee.com/content/images/2025/05/signalconnectorworkflow.png 748w" sizes="(min-width: 720px) 720px"><figcaption><span>Using a connector to archive Signal communication data in Microsoft 365, from Microsoft's documentation</span></figcaption></figure><h3 id="why-this-is-so-terribly-insecure">Why this is so terribly insecure</h3><p>Signal is the gold standard of end-to-end encrypted messaging apps.</p><p>Messages are encrypted between endpoints – whether that's a phone running Signal, a computer running Signal Desktop, or even a phone running TM SGNL. The Signal server, and any internet eavesdroppers, cannot access the chat logs.</p><p>However, once they're at an endpoint, they are in plaintext (if they weren't, you wouldn't be able to read your texts). At this point, they're protected by various forms of disk encryption depending on the device. This is how Signal messages sometimes end up as evidence in court records: someone's phone or laptop with Signal installed was searched, after the messages were already decrypted.</p><p><strong>TM SGNL <em>completely breaks this security</em>. The communication between the TM SGNL app and the final archive destination <em>is not end-to-end encrypted</em>.</strong></p><p>TeleMessage lies about this in their marketing material, claiming that TM SGNL supports "End-to-End encryption from the mobile phone through to the corporate archive."</p><p>Here's a screenshot from an <a href="https://web.archive.org/web/20250501200805/https://www.telemessage.com/mobile-archiver/signal-archiver/" rel="noreferrer">archived version</a> of their site (since they've taken down all of the content):</p><figure><img src="https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-20-22-08.png" alt="" loading="lazy" width="1637" height="1239" srcset="https://micahflee.com/content/images/size/w600/2025/05/Screenshot-From-2025-05-05-20-22-08.png 600w, https://micahflee.com/content/images/size/w1000/2025/05/Screenshot-From-2025-05-05-20-22-08.png 1000w, https://micahflee.com/content/images/size/w1600/2025/05/Screenshot-From-2025-05-05-20-22-08.png 1600w, https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-20-22-08.png 1637w" sizes="(min-width: 720px) 720px"><figcaption><span>TeleMessage falsely claims that TM SGNL supports "End-to-End encryption from the mobile phone through to the corporate archive"</span></figcaption></figure><p>Instead, TM SGNL sends the plaintext, already decrypted versions of chat logs to the archive server. (There might be some encryption involved some of the time, which I go over the "Corroborative evidence from the hack" section at the bottom.)</p><p>The archive server then forwards these to the destination.</p><p>Anyway, after TM SGNL decrypts messages, it sends the plaintext chat logs to TeleMessage's archive server. <strong>At this point, a lot of people might have access to the chat logs.</strong></p><p>The archive server was hosted in the public AWS cloud in their data center in Northern Virginia. This is not an approved place to store classified information, and potentially rogue AWS employees could have had access. This server was open to the public – anyone in the world could send HTTP requests to it to try to get chat logs back in a response. On Saturday, <a href="https://micahflee.com/the-signal-clone-the-trump-admin-uses-was-hacked/" rel="noreferrer">one of those people did</a>.</p><p>I'm saying the server "was" hosted in AWS because TeleMessage <a href="https://www.nbcnews.com/tech/security/telemessage-suspends-services-hackers-say-breached-app-rcna204925" rel="noreferrer">took down</a> their archive server shortly after we published the story about the hack. As of this writing, their archive server is offline.</p><p>TeleMessage also might be sharing chat logs with Israeli intelligence.</p><p>TeleMessage is an Israeli company. It was founded in 1999 by Guy Levit, the same year he left his job in the Israel Defense Force where he "served as the head of the planning and development of one of the IDF’s Intelligence elite technical units," according to his bio on the TeleMessage website (they have since taken all the content off their website).</p><p>Levit, and others at his firm, have access to the archive server and all of the chat logs it contains. I don't know what Israel's version of the Patriot Act is like, but I do know that it would be trivial for TeleMessage to add a bit of code that forwards a copy of everything to Israeli intelligence – far simpler than it was to add code to Signal to forward a copy to themselves.</p><p>To be clear, there's no evidence yet that TeleMessage is sharing chat logs with the Israeli government. <strong>But the fact that they designed their archiving system to <em>not be end-to-end encrypted</em>, and that they lie about it, is quite a big red flag.</strong></p><p>This is the app that Mike Waltz uses. While we don't really know the timeline, it's possible that everyone in the 19-person Signalgate group, where they discussed bombing Yemen, were also using this app same app. These include JD Vance, John Ratcliffe, Marco Rubio, Pete Hegseth, Stephen Miller, Tulsi Gabbard, and others. It's plausible that Israeli intelligence has been reading the internal chat logs of the most powerful members of Trump's authoritarian government.</p><h2 id="analysis-of-the-tm-sgnl-android-source-code">Analysis of the TM SGNL Android source code</h2><p>I've only analyzed the the <a href="https://github.com/micahflee/TM-SGNL-Android" rel="noreferrer">TM SGNL Android source code</a>, not the <a href="https://github.com/micahflee/TM-SGNL-iOS" rel="noreferrer">iPhone source code</a>. I'm assuming that the iPhone app works in the same way as the Android app, and anything that I learn from analyzing the Android app is applicable to the iPhone app as well.</p><p>I've focused on Android because it's much easier to reverse engineer Android apps than iPhone apps. There are excellent tools available for analyzing Android apps, like <a href="https://apktool.org/" rel="noreferrer">apktool</a>, <a href="https://github.com/EFForg/apkeep" rel="noreferrer">apkeep</a>, and even the official <a href="https://developer.android.com/studio" rel="noreferrer">Android Studio</a>. Furthermore, Android apps are programmed in Java and Kotlin (which both compile to Java bytecode), and it's easy to decompile Java bytecode, turning it back into human readable source code, and making it so much easier to work with.</p><p>Also, while TeleMessage <a href="https://web.archive.org/web/20250503004419/https://www.telemessage.com/developer/api-libraries/" rel="noreferrer">posted links</a> to ZIP files claiming to be contain the Android and iOS source code on their website, the iOS version <a href="https://github.com/micahflee/TM-SGNL-iOS/issues/1" rel="noreferrer">appears</a> to actually be the source code for Signal for iOS itself, without any extra TeleMessage code added.</p><div><p>💡</p><p>As you can see in the <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/LICENSE" rel="noreferrer">LICENSE</a> file included with the source code, TM SGNL is licensed under GNU Affero General Public License v3.0. This gives me, and everyone else, the unlimited right to access, analyze, reverse engineer, and pretty much do anything else we wish to with the code, so long as we release any derivative works under the same license.</p></div><p>I've only had a few days to look at this code so far – and I paused work on analyzing it so I could break the story about TeleMessage getting hacked – so there's a lot that I still don't fully understand. It's also possible I have gotten things wrong – please <a href="https://micahflee.com/contact/" rel="noreferrer">let me know</a> if that's the case. In any case, I'm showing all of my work here so that others can reproduce it and build on it.</p><h3 id="decompiling-shared-libraries">Decompiling shared libraries</h3><p>The TM SGNL source code is mostly the same as the <a href="https://github.com/signalapp/Signal-Android" rel="noreferrer">Signal for Android source code</a>, but there are some differences. Most of the new code can be found in these three places:</p><p>The <a href="https://github.com/micahflee/TM-SGNL-Android/tree/libs/app/src/tm/java/org" rel="noreferrer">app/src/tm/java/org/</a> folder contains TeleMessage code.</p><figure><img src="https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-12-21-32.png" alt="" loading="lazy" width="1583" height="827" srcset="https://micahflee.com/content/images/size/w600/2025/05/Screenshot-From-2025-05-05-12-21-32.png 600w, https://micahflee.com/content/images/size/w1000/2025/05/Screenshot-From-2025-05-05-12-21-32.png 1000w, https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-12-21-32.png 1583w" sizes="(min-width: 720px) 720px"><figcaption><span>TeleMessage code in app/src/tm/java/org/</span></figcaption></figure><p>The <a href="https://github.com/micahflee/TM-SGNL-Android/tree/libs/app/src/main/java/org/tm/archive" rel="noreferrer">app/src/main/java/org/tm/archive/</a> folder also contains TeleMessage code:</p><figure><img src="https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-17-02-15.png" alt="" loading="lazy" width="1763" height="1188" srcset="https://micahflee.com/content/images/size/w600/2025/05/Screenshot-From-2025-05-05-17-02-15.png 600w, https://micahflee.com/content/images/size/w1000/2025/05/Screenshot-From-2025-05-05-17-02-15.png 1000w, https://micahflee.com/content/images/size/w1600/2025/05/Screenshot-From-2025-05-05-17-02-15.png 1600w, https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-17-02-15.png 1763w" sizes="(min-width: 720px) 720px"><figcaption><span>More TeleMessage code in app/src/main/java/org/tm/archive/</span></figcaption></figure><p>And finally, the <a href="https://github.com/micahflee/TM-SGNL-Android/tree/master/app/libs" rel="noreferrer">app/libs/</a> folder contains TeleMessage's shared libraries in Android archive (<code>.aar</code>) format. These include <code>androidcopysdk-signal</code>, <code>authenticatorsdk-signal</code>, and <code>common</code>. Shared libraries are re-usable pieces of code that can be imported into different projects. These libraries appear to contain code that might also be shared in TeleMessage's other Android apps for WhatsApp, WeChat, and Telegram. The Android archive files are compressed Java bytecode.</p><figure><img src="https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-12-25-26.png" alt="" loading="lazy" width="1583" height="954" srcset="https://micahflee.com/content/images/size/w600/2025/05/Screenshot-From-2025-05-05-12-25-26.png 600w, https://micahflee.com/content/images/size/w1000/2025/05/Screenshot-From-2025-05-05-12-25-26.png 1000w, https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-12-25-26.png 1583w" sizes="(min-width: 720px) 720px"><figcaption><span>Shared libraries in app/libs/</span></figcaption></figure><p>The first step to reverse engineering this is to turn these shared libraries into actual human-readable (or at least, human nerd-readable) Java code.</p><p>There are various local tools that can do this, but I've found using online services to decompile Android apps is the simplest approach. I ran the release versions of the shared libraries through this <a href="https://appscms.com/aar" rel="noreferrer">Android archive decompiler</a>, and it gave me zip files with the decompiled source code.</p><p>To make things easier for others to follow along, I have made a new git branch in my TM-SGNL-Android repository called <code>libs</code> and I committed the decompiled shared library code there. I've made the <code>libs</code> branch the default branch, too. You can now access all of the shared library code in the <a href="https://github.com/micahflee/TM-SGNL-Android/tree/libs/app/libs" rel="noreferrer">apps/libs/</a> folder of the <code>libs</code> branch:</p><figure><img src="https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-12-30-12.png" alt="" loading="lazy" width="1583" height="1040" srcset="https://micahflee.com/content/images/size/w600/2025/05/Screenshot-From-2025-05-05-12-30-12.png 600w, https://micahflee.com/content/images/size/w1000/2025/05/Screenshot-From-2025-05-05-12-30-12.png 1000w, https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-12-30-12.png 1583w" sizes="(min-width: 720px) 720px"><figcaption><span>The app/libs/ folder, with folders full of human-readable Java source code</span></figcaption></figure><p>Now that we all have access to the same source code, I will try to give a brief tour of what I've found to be the relevant pieces of code to bring me to my conclusion.</p><h3 id="important-components">Important components</h3><p>Here are some important components in the codebase:</p><ul><li><a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/main/java/org/tm/archive/database/SignalDatabase.kt" rel="noreferrer"><code>SignalDatabase</code></a>: This class represents the SQLite database that stores all of the Signal data (messages, attachments, media, threads, identities, drafts, groups, recipients, stickers, reactions, and so on), for delivering to the archive server.</li><li><a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/DataGrabber.java" rel="noreferrer"><code>DataGrabber</code></a>: This class (in the <code>androidcopysdk</code> shared library) seems to do a few things.<ul><li>Many of its 2,577 lines of code are devoted to capturing the phone's SMS and MMS messages, as well as call logs – though I don't think this code is used in the SGNL app.</li><li>It also has a <code>setMessage</code> method, which the SGNL app does use. In this method, it uses a <a href="https://dev.to/vishwajithshettigar/understanding-contentprovider-and-contentresolver-in-android-with-kotlin-17eg" rel="noreferrer"><code>ContentResolver</code></a> to store messages in a separate SQLite database, staging messages before they get sent to the archive server. I'll call this the <em>staging database</em>.</li></ul></li><li><a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/tm/java/org/archiver/di/TeleMessageApplicationDependencyProvider.kt" rel="noreferrer"><code>TeleMessageApplicationDependencyProvider</code></a>: This class provides access to the SDK module (an object with pointers to various singleton components like the <code>DataGrabber</code> and <code>SignalDatabase</code> objects).<ul><li>It also provides access to the <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/device/DefaultMessageStoreObserver.java" rel="noreferrer"><code>messageStoreObserver</code></a>. This object can have processors, which are basically hooks that get executed when message statuses change.</li><li><a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/device/ArchiveMessagesProcessor.java" rel="noreferrer"><code>ArchiveMessagesProcessor</code></a>: This is a <code>messageStoreObserver</code> processor. When messages in <code>SignalDatabase</code> get created (or edited or deleted), this runs <code>DataGrabber.setMessage</code> to store the message in the staging database.</li></ul></li><li><a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/SyncAdapter.java" rel="noreferrer"><code>SyncAdapter</code></a>: This class (also in the <code>androidcopysdk</code> shared library) is an Android <a href="https://developer.android.com/training/sync-adapters/creating-sync-adapter" rel="noreferrer">sync adapter</a>. It defines a background service that, every time the <code>onPerformSync</code> method is called, uses the <code>ContentResolver</code> to select <code>WaitingToBeDelivered</code> data from the staging database, and then submits it to the TeleMessage's archive server.</li></ul><p>Now I'm going to go into a bit more detail about these components, and how they tie together.</p><h3 id="signaldatabase">SignalDatabase</h3><p>Here's the beginning of the <code>SignalDatabase</code> <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/main/java/org/tm/archive/database/SignalDatabase.kt#L30" rel="noreferrer">class definition</a>. As you can see, it defines the tables that will be used to store different types of Signal data:</p><pre><code>open class SignalDatabase(private val context: Application, databaseSecret: DatabaseSecret, attachmentSecret: AttachmentSecret) :
  SQLiteOpenHelper(
    context,
    DATABASE_NAME,
    databaseSecret.asString(),
    null,
    SignalDatabaseMigrations.DATABASE_VERSION,
    0,
    SqlCipherErrorHandler(DATABASE_NAME),
    SqlCipherDatabaseHook(),
    true
  ),
  SignalDatabaseOpenHelper, IDatabase&lt;Long&gt; { // TM_SA implement IDatabase

  val messageTable: MessageTable = TeleMessageTable(context, this)  // TM_SA TeleMessageTable
  val attachmentTable: AttachmentTable = TeleAttachmentTable(context, this, attachmentSecret) // TM_SA TeleAttachmentTable
  val mediaTable: MediaTable = MediaTable(context, this)
  val threadTable: ThreadTable = ThreadTable(context, this)
  val identityTable: IdentityTable = IdentityTable(context, this)
  val draftTable: DraftTable = DraftTable(context, this)
  val groupTable: GroupTable = GroupTable(context, this)
  val recipientTable: RecipientTable = RecipientTable(context, this)
  val groupReceiptTable: GroupReceiptTable = GroupReceiptTable(context, this)
  val preKeyDatabase: OneTimePreKeyTable = OneTimePreKeyTable(context, this)
  val signedPreKeyTable: SignedPreKeyTable = SignedPreKeyTable(context, this)
  val sessionTable: SessionTable = SessionTable(context, this)
  val senderKeyTable: SenderKeyTable = SenderKeyTable(context, this)
  val senderKeySharedTable: SenderKeySharedTable = SenderKeySharedTable(context, this)
  val pendingRetryReceiptTable: PendingRetryReceiptTable = PendingRetryReceiptTable(context, this)
  val searchTable: SearchTable = SearchTable(context, this)
  val stickerTable: StickerTable = StickerTable(context, this, attachmentSecret)
  val storageIdDatabase: UnknownStorageIdTable = UnknownStorageIdTable(context, this)
  val remappedRecordTables: RemappedRecordTables = RemappedRecordTables(context, this)
  val mentionTable: MentionTable = MentionTable(context, this)
  val paymentTable: PaymentTable = PaymentTable(context, this)
  val chatColorsTable: ChatColorsTable = ChatColorsTable(context, this)
  val emojiSearchTable: EmojiSearchTable = EmojiSearchTable(context, this)
  val messageSendLogTables: MessageSendLogTables = MessageSendLogTables(context, this)
  val avatarPickerDatabase: AvatarPickerDatabase = AvatarPickerDatabase(context, this)
  val reactionTable: ReactionTable = ReactionTable(context, this)
  val notificationProfileDatabase: NotificationProfileDatabase = NotificationProfileDatabase(context, this)
  val donationReceiptTable: DonationReceiptTable = DonationReceiptTable(context, this)
  val distributionListTables: DistributionListTables = DistributionListTables(context, this)
  val storySendTable: StorySendTable = StorySendTable(context, this)
  val cdsTable: CdsTable = CdsTable(context, this)
  val remoteMegaphoneTable: RemoteMegaphoneTable = RemoteMegaphoneTable(context, this)
  val pendingPniSignatureMessageTable: PendingPniSignatureMessageTable = PendingPniSignatureMessageTable(context, this)
  val callTable: CallTable = CallTable(context, this)
  val kyberPreKeyTable: KyberPreKeyTable = KyberPreKeyTable(context, this)
  val callLinkTable: CallLinkTable = CallLinkTable(context, this)</code></pre><p>The <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/main/java/org/tm/archive/database/SignalDatabase.kt#L85-L160" rel="noreferrer"><code>onCreate</code></a> method creates the tables if they don't exist.</p><p>I'll need to dig into the code further to see the exact places where it happens, but I believe whenever the TM SGNL app receives or sends Signal messages, they get inserted into this database.</p><h3 id="datagrabber">DataGrabber</h3><p>Here is the <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/DataGrabber.java#L2035-L2047" rel="noreferrer"><code>setMessage</code></a> method in the <code>DataGrabber</code> class:</p><pre><code>public synchronized void setMessage(MessageDetailsArchive messageDetailsArchive) {
    Log.d("info", "setTextMessage start");
    String lasttime = getLastMessageByType(this.mContext, MessageType.SMS);
    Long.valueOf(lasttime).longValue();
    ContentValues contentValues = prepareValues(messageDetailsArchive.getProtocol(), messageDetailsArchive.getToPhonesArray(), messageDetailsArchive.getFromPhoneNumber(), messageDetailsArchive.getBody(), messageDetailsArchive.getId(), messageDetailsArchive.getDate(), messageDetailsArchive.getSubject(), messageDetailsArchive.getMyNumber(), messageDetailsArchive.getChatMode(), messageDetailsArchive.getChatName(), messageDetailsArchive.getChatId(), messageDetailsArchive.getFromName(), messageDetailsArchive.getFromValue(), messageDetailsArchive.getToNameArray(), messageDetailsArchive.getToPhoneNumberArrayValue(), messageDetailsArchive.getMessageType());
    contentValues.put("type", MessageType.SMS.name());
    Uri path = this.mContext.getContentResolver().insert(MessageContentProvider.CONTENT_URI, contentValues);
    Log.d("grabber", "insert message and id and time , id: " + path.getPath() + " " + messageDetailsArchive.getDate() + " " + messageDetailsArchive.getId() + "  sub = " + messageDetailsArchive.getSubject());
    SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(this.mContext).edit();
    editor.putString(MessageType.SMS.name() + DATE_OF_MESSAGE, messageDetailsArchive.getDate()).apply();
    Log.d("info", "setTextMessage end");
    CommonUtils.startBackupService(this.mContext);
}</code></pre><p>Notice that even though we're storing Signal messages, this line explicitly sets the message type to SMS, which will be important later:</p><pre><code>contentValues.put("type", MessageType.SMS.name());</code></pre><p>This line of code inserts the message into the staging database:</p><pre><code>Uri path = this.mContext.getContentResolver().insert(MessageContentProvider.CONTENT_URI, contentValues);</code></pre><p>And this line of code triggers the <code>SyncAdapter</code> to run:</p><pre><code>CommonUtils.startBackupService(this.mContext);</code></pre><h3 id="archivemessagesprocessor">ArchiveMessagesProcessor</h3><p>This is a processor in the <code>messageStoreObserver</code>. Whenever a message in <code>SignalDatabase</code> is created/modified, the <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/device/ArchiveMessagesProcessor.java#L116-L147" rel="noreferrer"><code>processAfterMessageStateChanged</code></a> method gets called:</p><pre><code>@Override // com.tm.androidcopysdk.device.MessageStoreProcessor
protected void processAfterMessageStateChanged(@NotNull ArchiveMessage message, @Nullable ArchiveMessage existing) {
    Intrinsics.checkNotNullParameter(message, "message");
    String cleanAccountPhoneNumber = message.getCleanAccountPhoneNumber();
    if (cleanAccountPhoneNumber == null || cleanAccountPhoneNumber.length() == 0) {
        Log.d(getTag(), "ignoring archive message " + message.getArchiveId() + ", account phone number is missing.");
        return;
    }
    boolean isNewEdit = message.isNewEdit(existing);
    if (!isArchivingSupported(message, isNewEdit) || message.getTimestamp().getValue() &lt;= 0) {
        Log.d(getTag(), "ignoring unsupported message " + message.getArchiveId() + " of type " + message.getType() + " created at " + message.getTimestamp().getValue() + '.');
    } else if (message.hasDeletions()) {
        archiveDeletedMessage(message, existing);
    } else if (isNewEdit) {
        archiveEditMessage(message, existing);
    } else {
        ArchiveMessageType type = message.getType();
        switch (type == null ? -1 : WhenMappings.$EnumSwitchMapping$0[type.ordinal()]) {
            case 1:
                archiveMessage(message, existing);
                return;
            case 2:
                archiveMmsMessage(message, existing);
                return;
            case 3:
                archiveCallMessage(message, existing);
                return;
            default:
                Log.w(getTag(), "not sure how to handle " + message + ' ' + existing + ' ' + this.detailsConverter.convert(message, existing));
                return;
        }
    }
}</code></pre><p>As you can see, this code will archive messages when they get deleted (<code>archiveDeletedMessage</code>), when they get edited (<code>archiveEditMessage</code>), as well as when they get created (<code>archiveMessage</code>).</p><p>Here's the code in <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/device/ArchiveMessagesProcessor.java#L175-L185" rel="noreferrer"><code>archiveMessage</code></a>:</p><pre><code>private final void archiveMessage(ArchiveMessage message, ArchiveMessage existing) {
    if (existing != null) {
        Log.d(getTag(), "message " + message.getArchiveId() + " was already archived, skipping.");
    } else if (message.getStatus() == MessageStatus.Sending &amp;&amp; !message.getChat().isSecret()) {
        Log.d(getTag(), "message " + message.getArchiveId() + " is still in 'Sending' state, skipping.");
    } else {
        MessageDetailsArchive details = this.detailsConverter.convert(message, existing);
        Log.d(getTag(), "archiveMessage " + message + ' ' + details);
        this.module.getDataGrabber().setMessage(details);
    }
}</code></pre><p>When a message is archived, it runs <code>setMessage</code> on <code>DataGrabber</code>, which, as described above, inserts the message into the staging database and triggers the sync adapter.</p><h3 id="syncadapter">SyncAdapter</h3><p>The <code>SyncAdapter</code>'s <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/SyncAdapter.java#L96-L409" rel="noreferrer"><code>onPerformSync</code></a> method is too long to quote in full here, so I will just quote pieces of it at a time. This is the method that Android will call in the background at regular intervals, or that the app itself can trigger, such as when a new message comes in.</p><p>Near the beginning of the method, <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/SyncAdapter.java#L122-L127" rel="noreferrer">this code</a> creates a <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/network/NetworkManager.java" rel="noreferrer"><code>NetworkManager</code></a> object, which is the class used to communicate with TeleMessage's archive server.</p><pre><code>String baseurl = bundle.getString("baseurl");
String keeperUrl = PreferenceManager.getDefaultSharedPreferences(this.mContext).getString("keeperUrl", null);
if (!TextUtils.isEmpty(keeperUrl)) {
    baseurl = keeperUrl;
}
NetworkManager nm = new NetworkManager(this.mContext, baseurl);
String myNumber = FlavorSettings.getInstance().getMSISDN(PreferenceManager.getDefaultSharedPreferences(getContext()).getString("phonenumber", "999999999"));</code></pre><p>When it creates the <code>NetworkManager</code> object, it passes in the base URL. How it determines this URL is a bit confusing. But ultimately, if <code>keeperUrl</code> is not empty, then it uses that value as the base URL. As I will describe below, the <code>keeperUrl</code> value comes from <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/tm/java/org/archiver/ArchiveConstants.kt#L24" rel="noreferrer"><code>ArchiveConstants</code></a>:</p><pre><code>const val prodKeeper = "https://archive.telemessage.com"</code></pre><p>It also sets <code>myNumber</code> to be the current user's phone number.</p><p>Next in <code>SyncAdapter</code>'s <code>onPerformSync</code> method, <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/SyncAdapter.java#L131-L138" rel="noreferrer">this code</a> makes a SQL query to the staging database, selecting all messages that are waiting to be delivered (for the sake of easier reading, I've added some newlines to the code displayed here, but I haven't modified any of it):</p><pre><code>long installation_date = PrefManager.getLongPref(
    this.mContext.getApplicationContext(), 
    PrefManagerConstants.SHARED_PREFERENCE_INSTALLATION_DATE_KEY, 
    PreferenceManager.getDefaultSharedPreferences(this.mContext).getLong(PrefManagerConstants.SHARED_PREFERENCE_INSTALLATION_DATE_KEY, 0L)
);
Log.d(TAG, "installation_date: " + installation_date);
Log.d(TAG, "baseurl: " + baseurl);
String[] condition = {
    String.valueOf(installation_date), 
    MessageContentProvider.MessageDeliveryStatus.WaitingToBeDelivered.name()
};
Cursor cur = this.mContentResolver.query(
    MessageContentProvider.CONTENT_URI, 
    null, 
    "date &gt;= ? AND status = ? ", 
    condition, 
    "date DESC"
);
Log.d(TAG, "count: " + cur.getCount());
boolean z = 0 != (this.mContext.getApplicationInfo().flags &amp; 2);
cur.moveToFirst();</code></pre><p>First, it pulls <code>installation_date</code> from the app preferences –  this was the timestamp that TM SGNL was installed.</p><p>Then it defines <code>condition</code> to be an array with the first item a string version of the <code>installation_date</code> timestamp, and the second item the message delivery status <code>WaitingToBeDelivered</code>.</p><p>Then, using the <code>ContentResolver</code>, it queries the staging database to select all messages where the date is greater than or equal to <code>installation_date</code>, and the status is <code>WaitingToBeDelivered</code>, with the results sorted by date in descending order.</p><p>Next in <code>onPerformSync</code>, <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/SyncAdapter.java#L147-L154" rel="noreferrer">this code</a> starts looping through every message found in the SQL results, submitting them to the archive server:</p><pre><code>do {
    String typestr = cur.getString(cur.getColumnIndex("type"));
    if (MessageType.valueOf(typestr) == MessageType.SMS) {
        BodyBase sr = Packager.packENATextMessage(cur, myNumber);
        DBKeepAliveQueryHelper.updateSendToServerTime(this.mContext, ((TelemessageArchiverMessage) sr).getNativeId(), String.valueOf(System.currentTimeMillis()));
        Log.d("network", "send message:" + ((TelemessageArchiverMessage) sr).getNativeId());
        Response&lt;Void&gt; res = nm.start(sr, this, getContext().getApplicationContext(), false);
        Log.d("network", "after sent object");</code></pre><p>The code checks if the message type is <code>MessageType.SMS</code> here, but as I described in the <code>DataGrabber</code> section above, Signal messages are treated as SMS messages.</p><p>It then creates a variable <code>sr</code> which contains the current message row from the SQL query, along with the user's phone number. In the following two lines, notice that it typecasts <code>sr</code> to <code>TelemessageArchiverMessage</code>, meaning that <code>sr</code> is of type <code>TelemessageArchiverMessage</code>.</p><p>Finally, it runs <code>nm.start</code> in the <code>NetworkManager</code> object, passing in the <code>sr</code> variable with the message data. This is the where the actual HTTP request to the base URL (the TeleMessage archive server) happens.</p><h3 id="networkmanager">NetworkManager</h3><p>Let's take a quick peak over in <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/network/NetworkManager.java#L65-L166" rel="noreferrer"><code>NetworkManager.start</code></a>:</p><pre><code>public &lt;T&gt; retrofit2.Response&lt;T&gt; start(BodyBase message, HandleResponseListener listener, Context context, boolean log) {
    this.mListener = listener;
    Log.d("network", "started api call");
    INetworkProvider networkProvider = context.getApplicationContext().networkProvider();
    TMCredentialsStore credentialsStore = TMCredentialsStore.getInstance(context);
    networkProvider.headersInterceptor().setAuthentication(credentialsStore.userName(context), credentialsStore.password(context));
    AndroidCopyServerAPI TMAndroidCopyAPI = (AndroidCopyServerAPI) networkProvider.service(this.mBaseUrl, AndroidCopyServerAPI.class);
    Call caller = null;
    if (message instanceof TeleMessageMMSArchive) {
        if (!CommonUtils.isUserArchive(context)) {
            caller = TMAndroidCopyAPI.postTelemessageMMSMessage(NetworkManagerAPIUtil.getPostMessageURLByAPIVersion(context), new EnaMmsRequestBody(context, (TeleMessageMMSArchive) message));
        }
    } else if (message instanceof TelemessageArchiverMessage) {
        if (!CommonUtils.isUserArchive(context)) {
            networkProvider.headersInterceptor().setMessageId(message.getMessageId());
            caller = TMAndroidCopyAPI.postSMSMessage(NetworkManagerAPIUtil.getPostMessageURLByAPIVersion(context), (TelemessageArchiverMessage) message);
        }
    } else if (message instanceof SMSMessageRecord) {</code></pre><p>This is the code that makes an API call. There's a big if/else block that checks for different types of messages. If the message type is <code>TelemessageArchiverMessage</code> (which it is for these Signal messages), it runs <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/network/NetworkManager.java#L80" rel="noreferrer">this</a> line of code:</p><pre><code>caller = TMAndroidCopyAPI.postSMSMessage(NetworkManagerAPIUtil.getPostMessageURLByAPIVersion(context), (TelemessageArchiverMessage) message);</code></pre><p>If you look at <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/libs/androidcopysdk-signal/sources/com/tm/androidcopysdk/network/AndroidCopyServerAPI.java#L26-L27" rel="noreferrer"><code>AndroidCopyServerAPI.postSMSMessage</code></a>, you'll see that it makes a POST request to <code>https://archive.telemessage.com/api/rest/archive/telemessageincomingmessage/</code>, with the message content in the body:</p><pre><code>@POST("api/rest/archive/telemessageincomingmessage")
Call&lt;Void&gt; postSMSMessage(@Body SMSMessageRecord sMSMessageRecord);</code></pre><p><strong>To be clear, this is where TM SGNL sends the plaintext, already decrypted Signal message to TeleMessage's archive server.</strong></p><h3 id="tying-it-all-together"><strong>Tying it all together</strong></h3><p>That was a lot. Now I'm going to tie it all together from the beginning, the <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/tm/java/org/tm/archive/TeleMessageSignalApplication.kt" rel="noreferrer"><code>TeleMessageSignalApplication</code></a> object, which is created when the app is created.</p><p>Here's the <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/tm/java/org/tm/archive/TeleMessageSignalApplication.kt#L37-L44" rel="noreferrer"><code>onCreate</code></a> method, which is called when the app starts:</p><pre><code>override fun onCreate() {
  super.onCreate()
  Log.createInstance(applicationContext)
  ArchiveLogger.sendArchiveLog("TeleMessage logger created")

  initializeSdk()
  initArchiveUrlsAndStartArchive()
}</code></pre><p>This runs <code>initializeSdk</code>, followed by <code>initArchiveUrlsAndStartArchive</code>. Here's <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/tm/java/org/tm/archive/TeleMessageSignalApplication.kt#L67-L73" rel="noreferrer"><code>initializeSdk</code></a>:</p><pre><code>private fun initializeSdk() {
  val module = getSdkModule(requireNotNull(SignalDatabase.instance))
  val messageObserver = TeleMessageApplicationDependencyProvider.messageStoreObserver
  messageObserver.addProcessor(ArchiveMessagesProcessor(module))
  messageObserver.addProcessor(SendSignatureProcessor(module))
  messageObserver.initialize(module)
}</code></pre><p>This initializes the SDK module, passing in the <code>SignalDatabase</code> instance, which initializes that too.</p><p>Then it creates the message observer, and adds the <code>ArchiveMessagesProcessor</code> as a processor, passing in the SDK module (and hence, the <code>SignalDatabase</code>).</p><p>Now whenever messages get added to <code>SignalDatabase</code>, the following will happen:</p><ul><li><code>ArchiveMessageProcessor.processAfterMessageStateChanged</code> will run, calling <code>DataGrabber.setMessage</code>.</li><li><code>DataGrabber.setMessage</code> will save the message in the staging database and trigger the sync adapter to run.</li><li><code>SyncAdapter.onPerformSync</code> will select the message from the staging database and pass it into <code>NetworkManager.start</code>.</li><li><code>NetworkManager.start</code> will send the message to TeleMessage's archive server at <code>https://archive.telemessage.com</code>.</li></ul><p>Next, the <code>TeleMessageSignalApplication</code>'s <code>onCreate</code> method calls <code>initArchiveUrlsAndStartArchive</code>. You can read the code for <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/tm/java/org/tm/archive/TeleMessageSignalApplication.kt#L75-L104" rel="noreferrer">that method here</a>, but the important part is where it it sets the URLs:</p><pre><code>CommonUtils.setUrl(context, ArchiveConstants.charlieProduction, ArchiveConstants.prodKeeper)</code></pre><p>These values are <a href="https://github.com/micahflee/TM-SGNL-Android/blob/libs/app/src/tm/java/org/archiver/ArchiveConstants.kt#L23-L24" rel="noreferrer">defined in</a> <code>ArchiveConstants</code>:</p><pre><code>const val charlieProduction = "https://rest.telemessage.com"
const val prodKeeper = "https://archive.telemessage.com"</code></pre><p>So basically, I stated above, <code>prodKeeper</code> is set to <code>https://archive.telemessage.com</code>, and this is ultimately where chat logs get sent. And finally, this method starts the sync adapter:</p><pre><code>CommonUtils.startBackupService(context)</code></pre><p>And then the app starts, with Signal messages getting synced to the archive server in the background.</p><h3 id="conclusion">Conclusion</h3><p>There's still a lot of this codebase that I haven't fully wrapped my mind around.</p><p>But after all of this analysis, it sure looked to me like TM SGNL is simply submitting plaintext chat logs to the TeleMessage archive server, completely breaking Signal's E2EE.</p><p>Still, I've only manually analyzed the source code. I haven't tried running it, much less setting up a dummy archive server to see what data the app tries to send (something that is worth trying, but that I haven't had nearly enough time to implement).</p><p>But on Saturday night, a hacker exploited a vulnerability in the archive server and exfiltrated plaintext messages from it, including Signal messages, as I <a href="https://micahflee.com/the-signal-clone-the-trump-admin-uses-was-hacked/" rel="noreferrer">reported</a> in 404 Media. This confirms my findings that communication between the TM SGNL app and the archive destination is not end-to-end encrypted, and that the archive server has access to plaintext chat logs.</p><h2 id="corroborative-evidence-from-the-hack">Corroborative evidence from the hack</h2><p>As Joseph Cox and I reported, a hacker was able to obtain "snapshots of data passing through TeleMessage’s servers at a point in time." The snapshots contained fragments of data, including chat logs in JSON format, that was in the archive server's memory at the moment it was exploited.</p><p>To prove that the archive server has plaintext access to chat logs, I'm sharing redacted samples of some of that data here. Below is a plaintext Signal message, a plaintext Telegram message, and a plaintext WhatsApp message.</p><p>I'm also sharing an encrypted WhatsApp message. As I hinted at earlier in this post, some of the chat logs have encrypted content, and I have not yet uncovered how that works.</p><p>The snapshots of data from my source contained fragments of WeChat messages, but no complete WeChat messages, so I don't have an example of those to show.</p><p>Finally, I'm also sharing a redacted screenshot of a private key I found in the snapshots of data from the archive server.</p><h3 id="a-plaintext-signal-message">A plaintext Signal message</h3><p>We mentioned a Signal message that was present in one of those snapshots:</p><blockquote>A message sent to a group chat called “Upstanding Citizens Brigade” included in the hacked data says its “source type” is “Signal,” indicating it came from TeleMessage’s modified version of the messaging app. The message itself was a link to this tweet posted on Sunday which is a clip of an NBC Meet the Press interview with President Trump about his memecoin. The hacked data includes phone numbers that were part of the group chat.</blockquote><p>Here's the JSON object version of that Signal message. I have redacted the phone numbers in this JSON object by replacing them with <code>==redacted==</code>.</p><pre><code>{
    "typ": "RawMessage",
    "gatewayReceivedDate": 1746387273449,
    "partner": "NONE",
    "securityContent": null,
    "sourceService": null,
    "internalSecurityData": {
        "version": "0.0.2",
        "internalDecryptionData": {
            "typ": "nothing",
            "encryptionType": "DO_NOTHING",
            "params": {}
        }
    },
    "networkType": "SIGNAL",
    "sourceType": "SIGNAL",
    "ownerExtClassId": null,
    "body": {
        "owner": {
            "value": "==redacted==",
            "type": "PHONE"
        },
        "messageId": "==redacted==",
        "messageType": "APP_MESSAGE",
        "messageTime": 1746387273000,
        "sender": {
            "value": "==redacted==",
            "type": "PHONE"
        },
        "recipients": [
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            }
        ],
        "direction": "IN",
        "subject": "Signal message from ==redacted== to chat group Upstanding Citizens Brigade",
        "textField": {
            "extractor": {
                "typ": "WrapperExt",
                "data": "https://x.com/degeneratenews/status/1919109508120371209?s=46"
            },
            "length": 60
        },
        "attachment": [
            {
                "name": "C2-C233F59B-FEC7-4A78-90E0-F29342B15C23.jpg",
                "contentType": "image/jpeg",
                "digest": null,
                "content": "&lt;Kafkafied&gt;:/shared/cloud/apigateway/attachments/2025_05_04_19_tm_tmp/str6706918773573153616.txt",
                "attachmentSize": {
                    "attachmentSizeType": "BASE64",
                    "sizeInBytes": 72936
                },
                "attachmentDate": null
            }
        ],
        "messageStatus": "NA",
        "callInfo": null,
        "partner": null,
        "groupData": {
            "name": "Upstanding Citizens Brigade",
            "id": "",
            "type": "BROADCAST"
        },
        "threadID": "tm-1441784229",
        "threadName": null,
        "subUserId": 0,
        "participantEnrichments": {},
        "originalMessageData": null,
        "ban": null,
        "acceptedPayloadIdentifier": "8b6ab08e-edef-4d44-a0fe-2be24f66f907",
        "groupName": "Upstanding Citizens Brigade",
        "groupId": "",
        "groupMessage": false,
        "text": "https://x.com/degeneratenews/status/1919109508120371209?s=46"
    },
    "kafkafied": true
}
</code></pre><p>This plaintext chat log contains the following information, extracted from the archive server:</p><ul><li><code>networkType</code> and <code>sourceType</code> are both <code>SIGNAL</code></li><li><code>messageTime</code> is <code>1746387273000</code>, a Unix timestamp that corresponds to Sunday, May 4th, 2025, at 3:34pm Eastern time</li><li>It includes a phone number for the <code>owner</code> and <code>sender</code>, along with the 5 <code>recipients</code> in the Signal group</li><li>The email <code>subject</code> line, <code>Signal message from ==redacted== to chat group Upstanding Citizens Brigade</code></li><li><code>groupName</code> of <code>Upstanding Citizens Brigade</code></li><li><code>text</code> of <code>https://x.com/degeneratenews/status/1919109508120371209?s=46</code></li></ul><p>Clearly, TeleMessage's archive server has plaintext access to Signal messages.</p><h3 id="a-plaintext-telegram-message">A plaintext Telegram message</h3><p>In our reporting, we mentioned that some of the data exfiltrated from the archive server appears to belong to Coinbase. Here's an example of a redacted plaintext Telegram message, apparently from a Coinbase employee.</p><pre><code>{
    "typ": "RawMessage",
    "gatewayReceivedDate": 1746322842371,
    "partner": "NONE",
    "securityContent": null,
    "sourceService": null,
    "internalSecurityData": {
        "version": "0.0.2",
        "internalDecryptionData": {
            "typ": "nothing",
            "encryptionType": "DO_NOTHING",
            "params": {}
        }
    },
    "networkType": "TELEGRAM",
    "sourceType": "TELEGRAM",
    "ownerExtClassId": null,
    "body": {
        "owner": {
            "value": "==redacted==",
            "type": "PHONE"
        },
        "messageId": "EDIT-1746100232_7221627375_0-1",
        "messageType": "APP_MESSAGE",
        "messageTime": 1746114419000,
        "sender": {
            "value": "UNKNOWN",
            "type": "ALPHANUMERIC"
        },
        "recipients": [
            {
                "value": "==redacted==",
                "type": "PHONE"
            }
        ],
        "direction": "IN",
        "subject": "Telegram message from [Intl Ex] Elk (Falcon Capital) - Coinbase to channel [Intl Ex] Elk (Falcon Capital) - Coinbase",
        "textField": {
            "extractor": {
                "typ": "WrapperExt",
                "data": "Hi @==redacted== please find the latest report: https://coinbase.sendsafely.com/receive/?==redacted=="
            },
            "length": 211
        },
        "attachment": null,
        "messageStatus": "NA",
        "callInfo": null,
        "partner": null,
        "groupData": {
            "name": "",
            "id": "",
            "type": "CHAT"
        },
        "threadID": "815213310",
        "threadName": null,
        "subUserId": 0,
        "participantEnrichments": {
            "{\"value\":\"UNKNOWN\",\"type\":\"ALPHANUMERIC\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            }
        },
        "originalMessageData": null,
        "ban": null,
        "acceptedPayloadIdentifier": "f298b776-d5d4-42da-89b3-95d2d4dd5345",
        "groupName": "",
        "groupId": "",
        "groupMessage": false,
        "text": "Hi @==redacted== please find the latest report: https://coinbase.sendsafely.com/receive/?==redacted=="
    },
    "kafkafied": true
}
</code></pre><p>This plaintext chat log contains the following information, extracted from the archive server:</p><ul><li><code>networkType</code> and <code>sourceType</code> are both <code>TELEGRAM</code></li><li><code>messageTime</code> is <code>1746114419000</code>, a Unix timestamp that corresponds to May 1, 2025 at 11:46 AM Eastern time (I'm honestly not sure why a message from May 1 was in the archive server's memory at this moment)</li><li>It includes the phone number of the sender under <code>owner</code></li><li>The email <code>subject</code> line, <code>Telegram message from [Intl Ex] Elk (Falcon Capital) - Coinbase to channel [Intl Ex] Elk (Falcon Capital) - Coinbase</code></li><li><code>text</code> of <code>Hi @==redacted== please find the latest report: https://coinbase.sendsafely.com/receive/?==redacted==</code> (this message included the link to a shared document on Coinbases's SendSafely account, which I have redacted)</li></ul><h3 id="a-plaintext-whatsapp-message">A plaintext WhatsApp message</h3><p>I don't know much about this WhatsApp message, or the group it was sent to. But here's a redacted sample:</p><pre><code>{
    "typ": "RawMessage",
    "gatewayReceivedDate": 1746319698418,
    "partner": "NONE",
    "securityContent": null,
    "sourceService": null,
    "internalSecurityData": {
        "version": "0.0.2",
        "internalDecryptionData": {
            "typ": "nothing",
            "encryptionType": "DO_NOTHING",
            "params": {}
        }
    },
    "networkType": "WHATSAPP_CLOUD_ARCHIVER",
    "sourceType": "WHATSAPP_CLOUD_ARCHIVER",
    "ownerExtClassId": null,
    "body": {
        "owner": {
            "value": "==redacted==",
            "type": "PHONE"
        },
        "messageId": "544323f6830025dd76a3",
        "messageType": "APP_MESSAGE",
        "messageTime": 1746319698000,
        "sender": {
            "value": "==redacted==",
            "type": "PHONE"
        },
        "recipients": [
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            },
            {
                "value": "==redacted==",
                "type": "PHONE"
            }
        ],
        "direction": "IN",
        "subject": "WhatsApp message from ==redacted== to Yenta AF chat group",
        "textField": {
            "extractor": {
                "typ": "WrapperExt",
                "data": "And u look so pretty Dani"
            },
            "length": 25
        },
        "attachment": null,
        "messageStatus": "NA",
        "callInfo": null,
        "partner": null,
        "groupData": {
            "name": "Yenta AF",
            "id": "17862479908-1457977547@g.us",
            "type": "CHAT"
        },
        "threadID": "tm-643721925",
        "threadName": "Yenta AF",
        "subUserId": 0,
        "participantEnrichments": {
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            }
        },
        "originalMessageData": null,
        "ban": null,
        "acceptedPayloadIdentifier": "62db9b07-89c7-46a0-853b-550a9f6c0bb8",
        "groupName": "Yenta AF",
        "groupId": "17862479908-1457977547@g.us",
        "groupMessage": true,
        "text": "And u look so pretty Dani"
    },
    "kafkafied": true
}
</code></pre><p>This plaintext chat log contains the following information extracted from the archive server:</p><ul><li><code>networkType</code> and <code>sourceType</code> are both <code>WHATSAPP_CLOUD_ARCHIVER</code></li><li><code>messageTime</code> is <code>1746319698000</code>, which is a Unix timestamp that corresponds to May 3, 2025 at 8:48 PM Eastern time</li><li><code>sender</code>'s phone number</li><li>Phone numbers and first and last names for all 12 members of the WhatsApp group</li><li>The email <code>subject</code> line, <code>WhatsApp message from ==redacted== to Yenta AF chat group</code></li><li><code>groupName</code> is <code>Yenta AF</code></li><li><code>text</code> of <code>And u look so pretty Dani</code></li></ul><p>TeleMessage's archive server has plaintext access to at least some WhatsApp messages.</p><h3 id="an-encrypted-whatsapp-message">An encrypted WhatsApp message</h3><p>Some of the data passing through TeleMessage's archive server is encrypted, and I haven't yet uncovered exactly why. Here's an example of an encrypted WhatsApp message.</p><p>I've redacted the plaintext metadata in this sample. I haven't redacted the encrypted session key or the ciphertext of the message.</p><pre><code>{
    "typ": "RawMessage",
    "gatewayReceivedDate": 1746322853699,
    "partner": "DEFAULT",
    "securityContent": {
        "encryptionData": {
            "keyId": "08a7fe36a6ddd8bca98ef407e254ecc230ef80b0b39ce1753371c1a8f7427cb1",
            "encSessionKey": "y7BbPA1mpNLkFGjcVRZWTRNbf22lWvjEtqfhzTYlq4V32Jg94jUWzu+krLkJ34ff2AVqJ5gTUhEsh/suPn5ZRjDCzRw3z/XXeW+LftJL0GpHkI4mICzHzTYzMfeEHPmdJRZV8chuAWVL04XfGxEkFjg4ExQKDykhL9KnXxzPre7smyMwEsY3VQ+yx5pVONvCoWLBfKZ6jxDDHAyiw9DhMu97X0WmL5Xb0vkvKxXk6hyyH8oY23pCSiVID4/4waRi5iv7bbbMNhiaJWEyl9lqQ1BmnjqvwO75xYtMCemL/eCd/VEfsA8oxxEnHns6PEga3U/c2JLNGFDQEeU92mXQg8zCPV9qfkYCNYPmGgBcxtnaJxisfkfnVioe50wYxiQ8Ml88xptHa1ZHtajR1Si1puTc8UmueZ2Zem2dUTijXeK07upG+ou+XzhN/uonnpVlPKNd7b8KN/cP5MPwTHTMzpSh5bxQA3zuzqGUgYziUuxQp+VFB1Y3/v7/ba0zlYawmvCC3RN7md9/4bkGfpktii/sm+MsarwVPL2dD7wbzJYvZMo67HQEXW1zhG1hslro9HNJU+e7cgyNTHHdbWd09i5xe9WfMQGi+ty5yrehRDYizC++s7H78WhmMUcQVAjnNaOhJSYqxsLVKVNzdO4NuO70uWTL5x8re/sPKJo8SJO1e64CZlozqyopyycFgaEl"
        },
        "integrityHeaderContent": "7C967D5A3BD5C59284EAB8D2CE56A79DA6012EE6B8BC2037AEE1CD5042C15E01"
    },
    "sourceService": null,
    "internalSecurityData": {
        "version": "0.0.2",
        "internalDecryptionData": {
            "typ": "hybrid",
            "params": {
                "ENC_SESSION_KEY": {
                    "typ": "encskey",
                    "value": "y7BbPA1mpNLkFGjcVRZWTRNbf22lWvjEtqfhzTYlq4V32Jg94jUWzu+krLkJ34ff2AVqJ5gTUhEsh/suPn5ZRjDCzRw3z/XXeW+LftJL0GpHkI4mICzHzTYzMfeEHPmdJRZV8chuAWVL04XfGxEkFjg4ExQKDykhL9KnXxzPre7smyMwEsY3VQ+yx5pVONvCoWLBfKZ6jxDDHAyiw9DhMu97X0WmL5Xb0vkvKxXk6hyyH8oY23pCSiVID4/4waRi5iv7bbbMNhiaJWEyl9lqQ1BmnjqvwO75xYtMCemL/eCd/VEfsA8oxxEnHns6PEga3U/c2JLNGFDQEeU92mXQg8zCPV9qfkYCNYPmGgBcxtnaJxisfkfnVioe50wYxiQ8Ml88xptHa1ZHtajR1Si1puTc8UmueZ2Zem2dUTijXeK07upG+ou+XzhN/uonnpVlPKNd7b8KN/cP5MPwTHTMzpSh5bxQA3zuzqGUgYziUuxQp+VFB1Y3/v7/ba0zlYawmvCC3RN7md9/4bkGfpktii/sm+MsarwVPL2dD7wbzJYvZMo67HQEXW1zhG1hslro9HNJU+e7cgyNTHHdbWd09i5xe9WfMQGi+ty5yrehRDYizC++s7H78WhmMUcQVAjnNaOhJSYqxsLVKVNzdO4NuO70uWTL5x8re/sPKJo8SJO1e64CZlozqyopyycFgaEl",
                    "type": "ENC_SESSION_KEY"
                },
                "PUBLIC_KEY_ID": {
                    "typ": "pubkey",
                    "value": "08a7fe36a6ddd8bca98ef407e254ecc230ef80b0b39ce1753371c1a8f7427cb1",
                    "type": "PUBLIC_KEY_ID"
                }
            },
            "encryptionType": "HYBRID"
        }
    },
    "networkType": "WHATSAPP_ARCHIVER",
    "sourceType": "WHATSAPP_ARCHIVER",
    "ownerExtClassId": null,
    "body": {
        "owner": {
            "value": "==redacted==",
            "type": "PHONE"
        },
        "messageId": "b849fa65750cbed6cf5be5cb9a69d943",
        "messageType": "APP_MESSAGE",
        "messageTime": 1746322850000,
        "sender": {
            "value": "==redacted==",
            "type": "PHONE"
        },
        "recipients": [
            {
                "value": "==redacted==",
                "type": "PHONE"
            }
        ],
        "direction": "IN",
        "subject": "STATUS - WhatsApp message from ==redacted== to ==redacted==",
        "textField": {
            "extractor": {
                "typ": "WrapperExt",
                "data": "CrlDZrXBN1jL+V7Yht6lDpx4oFHQ05M6kVM7HjecbWY1smMWZkK0yzGxV96TiKlReLanCHtYkxJkF0PR74ePIQ=="
            },
            "length": 88
        },
        "attachment": [
            {
                "name": "eee44412-b56f-47ff-9548-f00fc3ed1cd3.jpg",
                "contentType": "image/jpeg",
                "digest": null,
                "content": "&lt;Kafkafied&gt;:/shared/cloud/apigateway/attachments/2025_05_04_01_tm_tmp/str13594102991037415607.txt",
                "attachmentSize": {
                    "attachmentSizeType": "BASE64",
                    "sizeInBytes": 44352
                },
                "attachmentDate": null
            }
        ],
        "messageStatus": "NA",
        "callInfo": null,
        "partner": null,
        "groupData": {
            "name": "",
            "id": "status@broadcast",
            "type": "CHAT"
        },
        "threadID": "1790853601",
        "threadName": null,
        "subUserId": 0,
        "participantEnrichments": {
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            },
            "{\"value\":\"==redacted==\",\"type\":\"PHONE\"}": {
                "firstName": "==redacted==",
                "lastName": "==redacted=="
            }
        },
        "originalMessageData": null,
        "ban": null,
        "acceptedPayloadIdentifier": "b7b88772-f3b7-4e20-8bc8-074ab7cb75f7",
        "groupName": "",
        "groupId": "status@broadcast",
        "groupMessage": true,
        "text": "CrlDZrXBN1jL+V7Yht6lDpx4oFHQ05M6kVM7HjecbWY1smMWZkK0yzGxV96TiKlReLanCHtYkxJkF0PR74ePIQ=="
    },
    "kafkafied": true
}
</code></pre><p>This encrypted WhatsApp chat log is different than the plaintext one in a few ways:</p><ul><li>The <code>networkType</code> and <code>sourceType</code> are both <code>WHATSAPP_ARCHIVER</code>, while in the plaintext WhatsApp message they were <code>WHATSAPP_CLOUD_ARCHIVER</code></li><li>The encrypted message contains encryption information in <code>securityContent</code> and <code>internalSecurityData</code>, while in the plaintext WhatsApp message they didn't</li><li><code>text</code> is a Base64 block of encrypted text instead of plaintext message content</li></ul><p>Even with encryption, this chat log contains the following plaintext information:</p><ul><li>The <code>sender</code> and <code>recipients</code> phone numbers and full names</li><li>The email <code>subject</code> line, <code>STATUS - WhatsApp message from ==redacted== to ==redacted==</code></li><li><code>messageTime</code> is <code>1746322850000</code>, a Unix timestamp that corresponds to May 3, 2025 at 9:40 PM Eastern time</li></ul><h3 id="private-key-material">Private key material</h3><p>As Joseph and I mentioned in our reporting in 404 Media, the snapshots of data from the archive server contained more than just chat logs. There were usernames and plaintext passwords – the hacker used these to login to archive site, gaining access to a list of apparently 747 Customs and Border Protection employees.</p><p>But also, I found private key material in the snapshots, though I have not yet uncovered what the keys are for. Here's one of the private keys I found, redacted, of course:</p><figure><img src="https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-22-50-10.png" alt="" loading="lazy" width="1338" height="894" srcset="https://micahflee.com/content/images/size/w600/2025/05/Screenshot-From-2025-05-05-22-50-10.png 600w, https://micahflee.com/content/images/size/w1000/2025/05/Screenshot-From-2025-05-05-22-50-10.png 1000w, https://micahflee.com/content/images/2025/05/Screenshot-From-2025-05-05-22-50-10.png 1338w" sizes="(min-width: 1200px) 1200px"><figcaption><span>A redacted private key</span></figcaption></figure><p><em>If you found this interesting, </em><a href="https://micahflee.com/tm-sgnl-the-obscure-unofficial-signal-app-mike-waltz-uses-to-text-with-trump-officials/#/portal/signup" rel="noreferrer"><em>subscribe</em></a><em> to get these posts emailed directly to your inbox. If you want to support my work, considering becoming a paid supporter.</em></p>
                    
                </section>

                    

                
            </article>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Brush (Bo(u)rn(e) RUsty SHell) a POSIX and Bash-Compatible Shell in Rust (145 pts)]]></title>
            <link>https://github.com/reubeno/brush</link>
            <guid>43908368</guid>
            <pubDate>Tue, 06 May 2025 18:47:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/reubeno/brush">https://github.com/reubeno/brush</a>, See on <a href="https://news.ycombinator.com/item?id=43908368">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">brush</h2><a id="user-content-brush" aria-label="Permalink: brush" href="#brush"></a></p>
<p dir="auto"><a href="https://crates.io/crates/brush-shell" rel="nofollow"><img src="https://camo.githubusercontent.com/0ca51096e82f1ec4d8b9ac01efdc8c0c0dab0ccd9ec029f870868748888ec86e/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f62727573682d7368656c6c3f7374796c653d666c61742d737175617265" alt="Published version" data-canonical-src="https://img.shields.io/crates/v/brush-shell?style=flat-square"></a>
<a href="https://crates.io/crates/brush-shell" rel="nofollow"><img src="https://camo.githubusercontent.com/e18581221afe9d784f523662085d74d41b9735b8d6715ef137a5802123191ea9/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f642f62727573682d7368656c6c3f7374796c653d666c61742d737175617265" alt="Download count" data-canonical-src="https://img.shields.io/crates/d/brush-shell?style=flat-square"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e5d8479ce59960d9ad796320a99f7b181a60acbdcdcd5c7e787d61b358b4d0fb/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f6d7372762f62727573682d7368656c6c"><img src="https://camo.githubusercontent.com/e5d8479ce59960d9ad796320a99f7b181a60acbdcdcd5c7e787d61b358b4d0fb/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f6d7372762f62727573682d7368656c6c" alt="MSRV" data-canonical-src="https://img.shields.io/crates/msrv/brush-shell"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dbfe9cebb8b7aad11ae48b4159fb16d69543b9d1cfef075f167b0aa86e348672/68747470733a2f2f746f6b65692e72732f62312f6769746875622f72657562656e6f2f62727573683f63617465676f72793d636f6465"><img src="https://camo.githubusercontent.com/dbfe9cebb8b7aad11ae48b4159fb16d69543b9d1cfef075f167b0aa86e348672/68747470733a2f2f746f6b65692e72732f62312f6769746875622f72657562656e6f2f62727573683f63617465676f72793d636f6465" alt="Lines of code badge" data-canonical-src="https://tokei.rs/b1/github/reubeno/brush?category=code"></a>
<a href="https://github.com/reubeno/brush/blob/main/LICENSE"><img src="https://camo.githubusercontent.com/cd0bfc1f47fd7a02efde25ce2186a8fdf66484289931c5528cc3f728cd6006be/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75653f7374796c653d666c61742d737175617265" alt="License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue?style=flat-square"></a>
<a href="https://github.com/reubeno/brush/actions/workflows/ci.yaml"><img src="https://github.com/reubeno/brush/actions/workflows/ci.yaml/badge.svg" alt="CI workflow badge"></a></p>
<p dir="auto"><a href="https://repology.org/project/brush/versions" rel="nofollow"><img src="https://camo.githubusercontent.com/a627b53119ffc2ac8e3473da3ed96fed96d3e8a01df9d6adc1a5d1788790547d/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f766572746963616c2d616c6c7265706f732f62727573682e737667" alt="Packaging status" data-canonical-src="https://repology.org/badge/vertical-allrepos/brush.svg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">About</h2><a id="user-content-about" aria-label="Permalink: About" href="#about"></a></p>
<p dir="auto"><code>brush</code> (<strong>B</strong>o(u)rn(e) <strong>RU</strong>sty <strong>SH</strong>ell) is a <a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html" rel="nofollow">POSIX-</a> and <a href="https://www.gnu.org/software/bash/" rel="nofollow">bash-</a>compatible shell,
implemented in Rust. It's built and tested on Linux and macOS, with experimental support on Windows. (Its Linux build is fully supported running on Windows via WSL.)</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/10508433/404689022-0e64d1b9-7e4e-43be-8593-6c1b9607ac52.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDY1OTI1MDEsIm5iZiI6MTc0NjU5MjIwMSwicGF0aCI6Ii8xMDUwODQzMy80MDQ2ODkwMjItMGU2NGQxYjktN2U0ZS00M2JlLTg1OTMtNmMxYjk2MDdhYzUyLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA1MDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNTA3VDA0MzAwMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYwMTNiMzkxNDVhYjlmZDhhNjJmM2ZjOWMwMWMyMjYwZjVlZTc5MGQwNGViNGY3MmMyMWMyNGVmODNhZDJlOGEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.xfsZVMMIzVkWyb-SHlSLcZVp66TUSVqAu5TO1QxYXl4"><img src="https://private-user-images.githubusercontent.com/10508433/404689022-0e64d1b9-7e4e-43be-8593-6c1b9607ac52.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDY1OTI1MDEsIm5iZiI6MTc0NjU5MjIwMSwicGF0aCI6Ii8xMDUwODQzMy80MDQ2ODkwMjItMGU2NGQxYjktN2U0ZS00M2JlLTg1OTMtNmMxYjk2MDdhYzUyLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA1MDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNTA3VDA0MzAwMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYwMTNiMzkxNDVhYjlmZDhhNjJmM2ZjOWMwMWMyMjYwZjVlZTc5MGQwNGViNGY3MmMyMWMyNGVmODNhZDJlOGEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.xfsZVMMIzVkWyb-SHlSLcZVp66TUSVqAu5TO1QxYXl4" alt="screenshot" data-animated-image=""></a></p>
<p dir="auto"><code>brush</code> is functional for interactive use as a daily driver! It can execute most <code>sh</code> and <code>bash</code> scripts we've
encountered. Known limitations are tracked with filed issues. Out of an abundance of caution,
we wouldn't recommend using it yet in <em>production</em> scenarios in case it doesn't behave identically
to your existing stable shell. (If you do find any behavioral differences, though, please report them with an
issue!)</p>
<p dir="auto">Contributions and feedback of all kinds are welcome! For more guidance, please consult our
<a href="https://github.com/reubeno/brush/blob/main/CONTRIBUTING.md">contribution guidelines</a>. For more technical details, please consult the
<a href="https://github.com/reubeno/brush/blob/main/docs/README.md">documentation</a> in this repo.</p>
<p dir="auto">This project was originally borne out of curiosity and a desire to learn. We're doing our best to keep that
attitude :).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">License</h3><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Available for use and distribution under the <a href="https://github.com/reubeno/brush/blob/main/LICENSE">MIT license</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Try it out!</h3><a id="user-content-try-it-out" aria-label="Permalink: Try it out!" href="#try-it-out"></a></p>
<p dir="auto">We don't publish binary releases of <code>brush</code>, but if you have a working <code>rust</code> toolchain installed you can simply run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cargo install --locked brush-shell"><pre>cargo install --locked brush-shell</pre></div>
<p dir="auto">This will install the most recently released version of <code>brush</code> from <code>crates.io</code>. Alternatively, for the latest and
greatest bits, you can clone this repo and execute <code>cargo run</code>.</p>
<p dir="auto">If you don't have <code>rust</code> installed, we recommend installing it via <a href="https://rustup.rs/" rel="nofollow"><code>rustup</code></a>.</p>
<p dir="auto">(If you <em>are</em> interested in having a binary release, then please let us know in the 'Discussions' area of this
project or by filing a feature request in 'Issues'.)</p>
<p dir="auto">If you are a Nix user, you can also use the registered version.</p>
<div dir="auto" data-snippet-clipboard-copy-content="nix run 'github:NixOS/nixpkgs/nixpkgs-unstable#brush' -- --version"><pre>nix run <span><span>'</span>github:NixOS/nixpkgs/nixpkgs-unstable#brush<span>'</span></span> -- --version</pre></div>
<p dir="auto">Arch Linux users can install <code>brush</code> <a href="https://aur.archlinux.org/packages/brush" rel="nofollow">from the AUR</a> with their <a href="https://wiki.archlinux.org/title/AUR_helpers" rel="nofollow">AUR helper</a> of choice, e.g.</p>

<p dir="auto">When you run <code>brush</code>, it should look exactly as <code>bash</code> would on your system since it processes <code>.bashrc</code> and
other usual configuration. If you'd like to customize the look of <code>brush</code> to distinguish it from the other shells
installed on your system, then you can also author a <code>~/.brushrc</code> file.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Known limitations</h3><a id="user-content-known-limitations" aria-label="Permalink: Known limitations" href="#known-limitations"></a></p>
<p dir="auto">There are some known gaps in compatibility. Most notably:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Some <code>set</code> and <code>shopt</code> options.</strong>
The <code>set</code> builtin is implemented, as is <code>set -x</code> and many frequently used <code>set</code>/<code>shopt</code> options, but a number aren't fully implemented. For example, <code>set -e</code> will execute but its semantics aren't applied across execution.</p>
</li>
<li>
<p dir="auto"><strong>Anything tagged with a <code>TODO</code> comment or where <code>error::unimp()</code> is used to return a "not implemented" error</strong>.
These aren't all tracked with GitHub issues right now, but there's a number of these scattered throughout the code base. Some are indicative of missing functionality that may be straightforward to implement; others may be more complicated.</p>
</li>
</ul>
<p dir="auto">If you feel so inclined, we'd love contributions toward any of the above, with broadening test coverage, deeper compatibility evaluation, or really any other opportunities you can find to help us make this project better.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Testing strategy</h2><a id="user-content-testing-strategy" aria-label="Permalink: Testing strategy" href="#testing-strategy"></a></p>
<p dir="auto">This project is primarily tested by comparing its behavior with other existing shells, leveraging the latter as test oracles. The integration tests implemented in this repo include <a href="https://github.com/reubeno/brush/blob/main/brush-shell/tests/cases">550+ test cases</a> run on both this shell and an oracle, comparing standard output and exit codes.</p>
<p dir="auto">For more details, please consult the <a href="https://github.com/reubeno/brush/blob/main/docs/reference/integration-testing.md">reference documentation on integration testing</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<p dir="auto">There's a long list of OSS crates whose shoulders this project rests on. Notably, the following crates are directly relied on for major portions of shell functionality:</p>
<ul dir="auto">
<li><a href="https://github.com/nushell/reedline"><code>reedline</code></a> - for readline-like input and interactive usage</li>
<li><a href="https://github.com/clap-rs/clap"><code>clap</code></a> - command-line parsing, used both by the top-level brush CLI as well as built-in commands</li>
<li><a href="https://github.com/fancy-regex/fancy-regex"><code>fancy-regex</code></a> - relied on for everything regex</li>
<li><a href="https://github.com/tokio-rs/tokio"><code>tokio</code></a> - async, well, everything</li>
<li><a href="https://github.com/nix-rust/nix"><code>nix</code> rust crate</a> - higher-level APIs for Unix/POSIX system APIs</li>
</ul>
<p dir="auto">For testing, performance benchmarking, and other important engineering support, we use and love:</p>
<ul dir="auto">
<li><a href="https://github.com/tikv/pprof-rs"><code>pprof-rs</code></a> - for sampling-based CPU profiling</li>
<li><a href="https://github.com/bheisler/criterion.rs"><code>criterion.rs</code></a> - for statistics-based benchmarking</li>
<li><a href="https://github.com/scop/bash-completion"><code>bash-completion</code></a> - for its completion test suite and general completion support!</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Links: other shell implementations</h2><a id="user-content-links-other-shell-implementations" aria-label="Permalink: Links: other shell implementations" href="#links-other-shell-implementations"></a></p>
<p dir="auto">There are a number of other POSIX-ish shells implemented in a non-C/C++ implementation language. Some inspirational examples include:</p>
<ul dir="auto">
<li><a href="https://www.nushell.sh/" rel="nofollow"><code>nushell</code></a> - modern Rust-implemented shell (which also provides the <code>reedline</code> crate we use!)</li>
<li><a href="https://github.com/shellgei/rusty_bash"><code>rusty_bash</code></a></li>
<li><a href="https://github.com/mvdan/sh"><code>mvdan/sh</code></a></li>
</ul>
<p dir="auto">We're sure there are plenty more; we're happy to include links to them as well.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Matt Godbolt sold me on Rust (by showing me C++) (519 pts)]]></title>
            <link>https://www.collabora.com/news-and-blog/blog/2025/05/06/matt-godbolt-sold-me-on-rust-by-showing-me-c-plus-plus/</link>
            <guid>43907820</guid>
            <pubDate>Tue, 06 May 2025 17:51:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.collabora.com/news-and-blog/blog/2025/05/06/matt-godbolt-sold-me-on-rust-by-showing-me-c-plus-plus/">https://www.collabora.com/news-and-blog/blog/2025/05/06/matt-godbolt-sold-me-on-rust-by-showing-me-c-plus-plus/</a>, See on <a href="https://news.ycombinator.com/item?id=43907820">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Matt Godbolt, of <a href="https://godbolt.org/" target="_blank" rel="noopener">Compiler Explorer</a> fame, is awesome and you should scour the web for every single bit of content he puts out. That is exactly what I was doing when I watched <a href="https://www.youtube.com/watch?v=nLSm3Haxz0I" target="_blank" rel="noopener">Correct by Construction: APIs That Are Easy to Use and Hard to Misuse</a>. After 20+ years of working with C/C++, this theme resonates a lot with me.</p>
<p>While watching the talk I kept thinking "Yes! And that's why Rust does it that way." I came out at the end thinking that this talk was actually a great way of getting the intuition for how Rust helps you beyond the whole memory safety thing, and that is what this article intends to show.</p>
<p>But before we talk about that we should talk about the problems Matt raised and how he proposes to solve them in C++. Do yourself a favor and watch the full talk, but let me break one of them down!</p>
<h3>What's in a type</h3>
<p>Matt starts the talk by showing what a function that sends orders to a stock exchange might look like.</p>
<pre>void sendOrder(const char *symbol, bool buy, int quantity, double price)</pre>
<p>Before we go any further, let me just say he acknowledges floating point is not right for price and later talks about how he usually deals with it. But it makes for a nice example, bear with us.</p>
<p>Another obvious improvement that anyone used to this stuff will call out immediately is the bool for identifying a buy. That is error prone and Matt does call it out towards the end of this section.</p>
<p>But he first focuses on quantity and price and how C++ makes it really hard for you to stop callers from confusing them: the compiler will allow 1000.00 for quantity and 100 for price with no warnings, despite them being different types. It just silently converts.</p>
<p>How about some type aliasing?</p>
<pre>#include 

using Price = double;
using Quantity = int;

void sendOrder(const char *symbol, bool buy, int quantity, double price) {
  std::cout &lt;&lt; symbol &lt;&lt; " " &lt;&lt; buy &lt;&lt; " " &lt;&lt; quantity &lt;&lt; " " &lt;&lt; price
            &lt;&lt; std::endl;
}

int main(void) {
  sendOrder("GOOG", false, Quantity(100), Price(1000.00)); // Correct
  sendOrder("GOOG", false, Price(1000.00), Quantity(100)); // Wrong
}</pre>
<p>No luck! Both clang 19 and gcc 14 will take that and not complain - <em>even with -std=c++23 -Wall -Wextra -Wpedantic</em>, which I use for all of the C++ code in this article! A few rounds of improvements and we have the following version:</p>
<pre>#include 

class Price {
public:
  explicit Price(double price) : m_price(price) {};
  double m_price;
};

class Quantity {
public:
  explicit Quantity(unsigned int quantity) : m_quantity(quantity) {};
  unsigned int m_quantity;
};

void sendOrder(const char *symbol, bool buy, Quantity quantity, Price price) {
  std::cout &lt;&lt; symbol &lt;&lt; " " &lt;&lt; buy &lt;&lt; " " &lt;&lt; quantity.m_quantity &lt;&lt; " "
            &lt;&lt; price.m_price &lt;&lt; std::endl;
}

int main(void) {
  sendOrder("GOOG", false, Quantity(100), Price(1000.00));  // Correct
  sendOrder("GOOG", false, Quantity(-100), Price(1000.00)); // Wrong
}</pre>
<p>We have classes, we have explicit constructors (very important or C++ will trip you!), we have unsigned types… and now it's hard to put a Price where you want a Quantity! But we can still give Quantity a negative value without a single compiler warning, even though we moved to an unsigned type. A bit more magic and we can make that go away:</p>
<pre>#include 
#include 

class Price {
public:
  explicit Price(double price) : m_price(price) {};
  double m_price;
};

class Quantity {
public:
  template  explicit Quantity(T quantity) : m_quantity(quantity) {
    static_assert(std::is_unsigned(), "Please use only unsigned types");
  }

  unsigned int m_quantity;
};

void sendOrder(const char *symbol, bool buy, Quantity quantity, Price price) {
  std::cout &lt;&lt; symbol &lt;&lt; " " &lt;&lt; buy &lt;&lt; " " &lt;&lt; quantity.m_quantity &lt;&lt; " "
            &lt;&lt; price.m_price &lt;&lt; std::endl;
}

int main(void) {
  sendOrder("GOOG", false, Quantity(100u), Price(1000.00)); // Correct
  sendOrder("GOOG", false, Quantity(-100), Price(1000.00)); // Wrong
}</pre>
<p>Finally we can get clang (and gcc) to complain loudly that this is being misused. All it took was a templated constructor that performs a static assert at compile time. Nice!</p>
<pre>order/order-5.cpp:13:19: error: static assertion failed due to requirement 'std::is_unsigned()': Please use only unsigned types
   13 |     static_assert(std::is_unsigned(), "Please use only unsigned types");
      |                   ^~~~~~~~~~~~~~~~~~~~~
order/order-5.cpp:26:28: note: in instantiation of function template specialization 'Quantity::Quantity' requested here
   26 |   sendOrder("GOOG", false, Quantity(-100), Price(1000.00)); // Wrong
      |                            ^
1 error generated.</pre>
<p>It's a lot of code, but at least we now have compiler protection. We are good, there is no other way to misuse quantity and price. Right?</p>
<p>What if we need to pass in a value the user typed on a UI, such that we need to convert it from string? Well, you are out of luck again:</p>
<pre>sendOrder("GOOG", false, Quantity(static_cast(atoi("-100"))),
            Price(1000.00)); // Wrong</pre>
<p>Not only will it not fail to compile, but it will also not produce any errors at runtime. You will end up selling 4294967196 shares and going bankrupt.</p>
<p>Not ideal.</p>
<p>Matt keeps going, showing a few more magic tricks (and their pitfalls) to perform the runtime checks you will need to fully defend against this. I think this is a good point for us to stop on the C++ side and look at how Rust does, shall we?</p>
<h3>Enter Rust</h3>
<p>So is Rust any better? Rust has the benefit of decades of learning from all of these issues. And learn it did. Let's take a look. How does our first attempt fare?</p>
<pre>fn send_order(symbol: &amp;str, buy: bool, quantity: i64, price: f64) {
    println!("{symbol} {buy} {quantity} {price}");
}

fn main() {
    send_order("GOOG", false, 100, 1000.00); // Correct
    send_order("GOOG", false, 1000.00, 100); // Wrong
}</pre>
<p>After all the work we had to do with C++ it can't be this easy, can it?</p>
<pre>error[E0308]: arguments to this function are incorrect
 --&gt; order/order-1.rs:7:5
  |
7 |     send_order("GOOG", false, 1000.00, 100); // Wrong
  |     ^^^^^^^^^^                -------  --- expected `f64`, found `{integer}`
  |                               |
  |                               expected `i64`, found `{float}`
  |
note: function defined here
 --&gt; order/order-1.rs:1:4
  |
1 | fn send_order(symbol: &amp;str, buy: bool, quantity: i64, price: f64) {
  |    ^^^^^^^^^^ ------------  ---------  -------------  ----------
help: swap these arguments
  |
7 |     send_order("GOOG", false, 100, 1000.00); // Wrong
  |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</pre>
<p>Welp, what do you know? It even tells us the arguments we swapped, and everything. It's like we live in the future! Ok, but numbers are still easy to confuse, we could also create types like we did in C++ to make it extra explicit, right? Indeed, and let's throw in protection against negative values by switching from i64 to u64. Is it that easy?</p>
<pre>struct Price(pub f64);
struct Quantity(pub u64);

fn send_order(symbol: &amp;str, buy: bool, quantity: Quantity, price: Price) {
    println!("{symbol} {buy} {} {}", quantity.0, price.0);
}

fn main() {
    send_order("GOOG", false, Quantity(100), Price(1000.00)); // Correct
    send_order("GOOG", false, Quantity(-100), Price(1000.00)); // Wrong
}</pre>
<p>Yes, it is that easy:</p>
<pre>error[E0600]: cannot apply unary operator `-` to type `u64`
  --&gt; order/order-4.rs:10:40
   |
10 |     send_order("GOOG", false, Quantity(-100), Price(1000.00)); // Wrong
   |                                        ^^^^ cannot apply unary operator `-`
   |
   = note: unsigned values cannot be negated</pre>
<p>Ok, all that remains is the case where we need to convert the number from a string the user typed. I got you now, Rust… runtime input is not something you can fix at compile time, how would you ever be able to improve on the C++ case?</p>
<pre>struct Price(pub f64);
struct Quantity(pub u64);

fn send_order(symbol: &amp;str, buy: bool, quantity: Quantity, price: Price) {
    println!("{symbol} {buy} {} {}", quantity.0, price.0);
}

fn main() {
    send_order("GOOG", false, Quantity(100), Price(1000.00)); // Correct
    send_order(
        "GOOG",
        false,
        Quantity("-100".parse::()),
        Price(1000.00),
    ); // Wrong
}</pre>
<p>How about forcing the user to handle potential bad conversions caused by the target type not being able to represent the number we have on the string, does that help?</p>
<pre>error[E0308]: mismatched types
  --&gt; order/order-6.rs:13:18
   |
13 |         Quantity("-100".parse::()),
   |         -------- ^^^^^^^^^^^^^^^^^^^^^ expected `u64`, found `Result&lt;u64, ParseIntError&gt;`
   |         |
   |         arguments to this struct are incorrect
   |
   = note: expected type `u64`
              found enum `Result&lt;u64, ParseIntError&gt;`
note: tuple struct defined here
  --&gt; order/order-6.rs:2:8
   |
2  | struct Quantity(pub u64);
   |        ^^^^^^^^
help: consider using `Result::expect` to unwrap the `Result&lt;u64, ParseIntError&gt;` value, panicking if the value is a `Result::Err`
   |
13 |         Quantity("-100".parse::().expect("REASON")),
   |                                       +++++++++++++++++

error: aborting due to 1 previous error</pre>
<p>Yes, it does help, I can’t just blindly cast.</p>
<p>Damn, you’re good.</p>
<p>This error should be enough for me as a user of this API to understand that I should elegantly handle this possibility and maybe return an error all the way to the UI saying "no negative numbers, please". But what if I just go ahead and add that .expect() it is telling me about and then a user types a negative number? Well, then I get a crash at runtime. Better than going bankrupt? I would say so.</p>
<pre>&gt; ./order-6
GOOG false 100 1000
thread 'main' panicked at order/order-6.rs:16:18:
Quantities cannot be negative: ParseIntError { kind: InvalidDigit }
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace</pre>
<h3>Closing thoughts</h3>
<p>You know what's the most interesting part of this whole article? The thing Rust is very famous for, memory safety, did not feature at all. Sure, you could make the argument that mixing integers with floats is a memory issue, but you'd be stretching the definition most people have for memory safety.</p>
<p>What we learn in this exercise is that a well designed language can protect you from mistakes in ways that go way beyond stopping you from writing a use after free or a data race. The design can save you a lot of brain cycles by not forcing you to think about how to protect your code from the simplest mistakes — the language has your back.</p>
<p>Now, let's be honest. Most of the brain power you save will go, as a Rust beginner, to figuring out how to convince the borrow checker what you are doing is correct. It gets better, I promise. But I won't lie to you: your first few months with the borrow checker will suck.</p>
<p>Are we done here? Not really. There are two more topics that Matt covers in his talk that I will discuss in future articles, one of them related to my biggest pet peeve with C++. And for those of you who are thinking "if C++ had decades to learn it would also have features that are this well designed", well… let's just say you are in for a treat.</p>
<p>Again, go check <a href="https://xania.org/MattGodbolt" target="_blank" rel="noopener">Matt Godbolt</a>. Listen to what the man says, read everything he writes, watch every video of his talks on YouTube, and play with his Compiler Explorer. You'll learn a lot and have fun while doing it!</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Is Planet Nine Alone in the Outer System? (109 pts)]]></title>
            <link>https://www.centauri-dreams.org/2025/05/06/is-planet-nine-alone-in-the-outer-system/</link>
            <guid>43907586</guid>
            <pubDate>Tue, 06 May 2025 17:29:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.centauri-dreams.org/2025/05/06/is-planet-nine-alone-in-the-outer-system/">https://www.centauri-dreams.org/2025/05/06/is-planet-nine-alone-in-the-outer-system/</a>, See on <a href="https://news.ycombinator.com/item?id=43907586">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
					<p>It was Robert Browning who said “Ah, but a man’s reach should exceed his grasp, or what’s a heaven for?” A rousing thought, but we don’t always know where we should reach. In terms of space exploration, a distant but feasible target is the solar gravitational lens distance beginning around 550 AU. So far the SGL definitely exceeds our grasp, but solid work in mission design by Slava Turyshev and team is ongoing at the Jet Propulsion Laboratory. </p>
<p>Targets need to tantalize, and maybe a target that we hadn’t previously considered is now emerging. Planet Nine, the hypothesized world that may lurk somewhere in our Solar System’s outer reaches, would be such an extraordinary discovery that it would tempt future mission designers in the same way.</p>
<p>This is interesting because right now our deep space targets need to be well defined. I love the idea of <a href="https://www.centauri-dreams.org/2022/04/15/nasa-interstellar-probe-overview-and-prospects/">Interstellar Probe</a>, the craft designed at JHU/APL, but it’s hard to excite the public with the idea of looking back at the heliosphere from the outside (although the science return would be fabulous). Pluto was hard enough to sell to the powers that be, but Allen Stern and team got the job done because they had a whole world that had never been seen up close. Will Planet Nine, if found, turn out to be the destination that some budget-strapped team finds a way to explore?</p>
<p>We have a lot to learn about planetary demographics given that our planet-finding technologies work best for larger worlds closer in to their stars. But a recent microlensing study suggests that as many as one out of every three stars in our galaxy should host a super-Earth in a Jupiter-like orbit (citation below). Microlensing is helpful because it can reveal planets at large distances from their parent stars. Super-Earths appear to be abundant. If it exists, Planet Nine isn’t in a Jovian orbit, but it’s probably smaller than Neptune.</p>
<p>In so many ways this planet makes sense. We’ve found planets like it in innumerable stellar systems. We also know that mechanisms of gravitational slingshotting can push a planet either out of its system entirely or into an entirely new orbit, explaining our prior lack of detection. We’re talking about a planet on the order of a super-Earth or a mini-Neptune, the former larger than our planet but still rocky, the latter smaller than Neptune but gaseous.</p>
<p><img fetchpriority="high" decoding="async" src="https://www.centauri-dreams.org/wp-content/uploads/2025/05/20250428_on_planet9.jpg" alt="" width="620" height="410" srcset="https://www.centauri-dreams.org/wp-content/uploads/2025/05/20250428_on_planet9.jpg 620w, https://www.centauri-dreams.org/wp-content/uploads/2025/05/20250428_on_planet9-480x317.jpg 480w" sizes="(min-width: 0px) and (max-width: 480px) 480px, (min-width: 481px) 620px, 100vw"> </p>
<p><strong>Image:</strong> An illustration shows what Planet Nine might look like orbiting far from our Sun. We have found many such worlds around other stars, but finding one in our own backyard is taking time because of its distance and an orbit that is probably well off the ecliptic. Assuming a planet is there at all. Image credit: NASA/Caltech.</p>
<p>The evidence in the orbits of a number of outer system objects points to something perturbing their paths, and seems to implicate something big. Now we have, after years of evidence gathering and debate, at least a possible candidate for this world. In process at <em>Publications of the Astronomical Society of Australia (PASA)</em>, although not yet published, the paper digs deep into data from the Infrared Astronomical Satellite as well as AKARI, a Japanese satellite somewhat more sensitive than IRAS and launched in 2006.</p>
<p>The distant Sedna and other similar bodies with unusual orbital characteristics tell us that something has to account for their high eccentricity and inclination, while a number of Kuiper Belt objects seem to be similarly affected, as shown in the orientation of their orbits (described through what is known as the <a href="https://astronomy.swin.edu.au/cosmos/a/argument+of+perihelion"><em>argument of perihelion</em></a>). Computations thus far indicate mass on the order of something equal to or greater than 10 Earth masses, with a semi-major axis of about 700 AU.</p>
<p><img loading="lazy" decoding="async" src="https://www.centauri-dreams.org/wp-content/uploads/2025/05/argument.jpg" alt="" width="620" height="349" srcset="https://www.centauri-dreams.org/wp-content/uploads/2025/05/argument.jpg 620w, https://www.centauri-dreams.org/wp-content/uploads/2025/05/argument-480x270.jpg 480w" sizes="(min-width: 0px) and (max-width: 480px) 480px, (min-width: 481px) 620px, 100vw"></p>
<p><strong>Image:</strong> The six most distant known objects in the solar system with orbits exclusively beyond Neptune (magenta) all mysteriously line up in a single direction. Moreover, when viewed in 3-D, the orbits of all these icy little objects are tilted in the same direction, away from the plane of the solar system. PL-Caltech/R. Hurt.</p>
<p>A huge amount of work has gone into this analysis, all ably summarized in the paper, which comes from Terry Long Phan (National Tsing Hua University, Taiwan) and colleagues. Optical surveys have heretofore failed to find this object, but 700 AU is fully 23 times the distance of Neptune from the Sun, far enough out that visible wavelengths need to give way to infrared to find it. </p>
<p>Phan’s team looked for candidate objects in the range of 500 to 700 AU using the two far-infrared surveys mentioned above, which are both all-sky in range but separated by 23 years, making for useful comparisons. The idea was to find an object that moved from an IRAS position to an AKARI position after those 23 years. Assuming the kind of mass and distance they were looking for, they had to remove stars and noisy sources toward galactic center. Narrowing the field to 13 pairings, Phan and his doctoral advisor Tomotsugu Goto found only one that matched in color and brightness, indicating they were the same object. </p>
<p>The paper cites the result this way:</p>
<blockquote><p>After the rigorous selection including the visual image inspection, we found one good candidate pair, in which the IRAS source was not detected at the same position in the AKARI image and vice versa, with the expected angular separation of 42′ – 69.6′.</p></blockquote>
<blockquote><p>The AKARI detection probability map indicated that the AKARI source of our candidate pair satisfied the requirements for a slow-moving object with two detections on one date and no detection on the date of 6 months before.</p></blockquote>
<p><img loading="lazy" decoding="async" src="https://www.centauri-dreams.org/wp-content/uploads/2025/05/planet9paper.jpg" alt="" width="620" height="312" srcset="https://www.centauri-dreams.org/wp-content/uploads/2025/05/planet9paper.jpg 620w, https://www.centauri-dreams.org/wp-content/uploads/2025/05/planet9paper-480x242.jpg 480w" sizes="(min-width: 0px) and (max-width: 480px) 480px, (min-width: 481px) 620px, 100vw"></p>
<p><strong>Image:</strong> This is Figure 5 from the paper. Caption: Comparison between IRAS (left) and AKARI (right) cutout images of our good candidate pair. The green circle indicates the location of IRAS source, while the white circle indicates the location of AKARI source. The size of each circle is 25′′. The yellow arrow with a number in arcminute shows the angular separation between IRAS and AKARI sources. The colour bar represents the pixel intensity in each image in the unit of MJy/sr. The AKARI source in the right panel is not visible as a real physical source due to the characteristics of AKARI-MUSL, which include moving sources without monthly confirmation. Credit: Phan et al.</p>
<p>This could be considered tantalizing but little more, because it is impossible from these two observations to determine an orbit for this object. The authors say that the 570 megapixel Dark Energy Camera (DECam) may be useful for follow-up observations. But I also noted an <a href="https://www.science.org/content/article/astronomers-searching-planet-nine-find-possible-hints-different-planet">article in <em>Science</em></a> by Hannah Richter. The author quotes Caltech astronomer Mike Brown, who came up with the original Planet Nine hypothesis in 2016. </p>
<p>Brown argues that this object is not likely to be Planet Nine because its orbit would be far more tilted than what is predicted for the undiscovered world. In other words, a planet in this position would not have the observed effects on the Solar System. In fact, a planet in this orbit would make the calculated Planet Nine orbit itself unstable, which would eliminate Planet Nine altogether.</p>
<p>Is there an entirely different planet out there? Future observations will have to sort this out. It surprises me that it has taken so long for this kind of search to occur. Discoveries are made when seasoned observers can prompt up-and-coming scientists to consider avenues hitherto unexplored. I think we can applaud Phan’s doctoral adviser, Tomotsugu Goto, for the insight to suggest this direction of study for a young astronomer who will bear watching. </p>
<p>For now, returning to the thoughts with which I began this post, there are a few implications even for missions in their current planning stages. From the paper:</p>
<blockquote><p>Several recent studies proposed and evaluated the prospects of future planetary and deep-space missions for the Planet Nine search, including a dedicated mission to measure modifications of gravity out to 100 AU (Buscaino et al. 2015), the Uranus Orbiter and Probe mission (Bucko, Soyuer, and Zwick 2023), and the Elliptical Uranian Relativity Orbiter mission (Iorio, Girija, and Durante 2023).</p></blockquote>
<p>We’ll be going deeper into these missions in the future. For now, I find the interest in Planet Nine heartening, because even in budget-barren times, we can be doing useful science by way of exploration with existing instruments and considering designs for missions we will one day be able to send. On that score, Planet Nine – or perhaps even a different world equally distant from the Sun – is an incentive for propulsion science and a driver for the imagination.</p>
<p>The paper is Phan et al., “A Search for Planet Nine with IRAS and AKARI Data,” accepted for publication in <em>Publications of the Astronomical Society of Australia (PASA)</em>. <a href="https://arxiv.org/abs/2504.17288">Preprint</a>. The paper on super-Earths is Weicheng Zang et al., “Microlensing events indicate that super-Earth exoplanets are common in Jupiter-like orbits,” <em>Science</em> Vol 388, Issue 6745 (24 April 2025), 400-404 (<a href="https://www.science.org/doi/10.1126/science.adn6088">abstract</a>).</p>
<p><img loading="lazy" decoding="async" src="https://www.centauri-dreams.org/wp-content/uploads/2023/06/tzf_img_post.jpg" alt="" width="500" height="124" srcset="https://www.centauri-dreams.org/wp-content/uploads/2023/06/tzf_img_post.jpg 500w, https://www.centauri-dreams.org/wp-content/uploads/2023/06/tzf_img_post-480x119.jpg 480w" sizes="(min-width: 0px) and (max-width: 480px) 480px, (min-width: 481px) 500px, 100vw"></p>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Curl: We still have not seen a single valid security report done with AI help (421 pts)]]></title>
            <link>https://www.linkedin.com/posts/danielstenberg_hackerone-curl-activity-7324820893862363136-glb1</link>
            <guid>43907376</guid>
            <pubDate>Tue, 06 May 2025 17:07:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.linkedin.com/posts/danielstenberg_hackerone-curl-activity-7324820893862363136-glb1">https://www.linkedin.com/posts/danielstenberg_hackerone-curl-activity-7324820893862363136-glb1</a>, See on <a href="https://news.ycombinator.com/item?id=43907376">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-content" role="main">
      <section>
              <h2>
Daniel Stenberg’s Post</h2>

                
    

    
      

    <article data-activity-urn="urn:li:activity:7324820893862363136" data-featured-activity-urn="urn:li:activity:7324820893862363136" data-attributed-urn="urn:li:share:7324820893258420224">
<!---->
      
<!---->        

      <div data-test-id="main-feed-activity-card__entity-lockup">
          <a href="https://se.linkedin.com/in/danielstenberg?trk=public_post_feed-actor-image" data-tracking-control-name="public_post_feed-actor-image" data-tracking-will-navigate="">
            
      
      
<!---->          </a>
      <div>
        

            <p>
<!---->                curl CEO. Code Emitting Organism
            </p>

              <p><span>
                  <time>
                    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

      2d
  
                      
                      <span>
                        Edited
                      </span>
                  </time>
<!---->              </span>
                </p></div>

<!---->    </div>

      
            
            
  <p dir="ltr" data-test-id="main-feed-activity-card__commentary">That's it. I've had it. I'm putting my foot down on this craziness.

1. Every reporter submitting security reports on <a href="https://www.linkedin.com/signup/cold-join?session_redirect=https%3A%2F%2Fwww.linkedin.com%2Ffeed%2Fhashtag%2Fhackerone&amp;trk=public_post-text" target="_self" data-tracking-control-name="public_post-text" data-tracking-will-navigate="">#Hackerone</a> for <a href="https://www.linkedin.com/signup/cold-join?session_redirect=https%3A%2F%2Fwww.linkedin.com%2Ffeed%2Fhashtag%2Fcurl&amp;trk=public_post-text" target="_self" data-tracking-control-name="public_post-text" data-tracking-will-navigate="">#curl</a> now needs to answer this question:

"Did you use an AI to find the problem or generate this submission?"

(and if they do select it, they can expect a stream of proof of actual intelligence follow-up questions)

2. We now ban every reporter INSTANTLY who submits reports we deem AI slop. A threshold has been reached. We are effectively being DDoSed. If we could, we would charge them for this waste of our time.

We still have not seen a single valid security report done with AI help.</p>



        

        
            
<!---->  
                  

      
          
        

      
          
        

      
            
      
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    

      
  
  
        

      
                
    
    
    

    
  
                      

      
              
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
            

    
    
    
    
    
    

<!---->
    

    
    
    
    

      
  
  
              <a href="https://www.linkedin.com/signup/cold-join?session_redirect=https%3A%2F%2Fwww%2Elinkedin%2Ecom%2Fposts%2Fdanielstenberg_hackerone-curl-activity-7324820893862363136-glb1&amp;trk=public_post_see-more-comments" data-test-id="main-feed-activity-card-with-comments__see-more-comments" data-tracking-control-name="public_post_see-more-comments" data-tracking-will-navigate="">
                See more comments
              </a>
      
        

      
              

    
    
    
    
    
    

    
  
        
    </article>
  
      
  
  
            </section>
      <section>

            <h2>
              Explore topics
            </h2>

<!---->
        
      </section>
    </div></div>]]></description>
        </item>
    </channel>
</rss>