<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 01 Jan 2024 18:00:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Tom Scott: After ten years, it's time to stop making videos [video] (323 pts)]]></title>
            <link>https://www.youtube.com/watch?v=7DKv5H5Frt0</link>
            <guid>38832959</guid>
            <pubDate>Mon, 01 Jan 2024 16:24:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=7DKv5H5Frt0">https://www.youtube.com/watch?v=7DKv5H5Frt0</a>, See on <a href="https://news.ycombinator.com/item?id=38832959">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[OpenVoice: Versatile Instant Voice Cloning (123 pts)]]></title>
            <link>https://arxiv.org/abs/2312.01479</link>
            <guid>38832317</guid>
            <pubDate>Mon, 01 Jan 2024 15:16:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2312.01479">https://arxiv.org/abs/2312.01479</a>, See on <a href="https://news.ycombinator.com/item?id=38832317">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2312.01479.pdf">Download PDF</a>
    <a href="https://browse.arxiv.org/html/2312.01479v4">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>We introduce OpenVoice, a versatile voice cloning approach that requires only a short audio clip from the reference speaker to replicate their voice and generate speech in multiple languages. OpenVoice represents a significant advancement in addressing the following open challenges in the field: 1) Flexible Voice Style Control. OpenVoice enables granular control over voice styles, including emotion, accent, rhythm, pauses, and intonation, in addition to replicating the tone color of the reference speaker. The voice styles are not directly copied from and constrained by the style of the reference speaker. Previous approaches lacked the ability to flexibly manipulate voice styles after cloning. 2) Zero-Shot Cross-Lingual Voice Cloning. OpenVoice achieves zero-shot cross-lingual voice cloning for languages not included in the massive-speaker training set. Unlike previous approaches, which typically require extensive massive-speaker multi-lingual (MSML) dataset for all languages, OpenVoice can clone voices into a new language without any massive-speaker training data for that language. OpenVoice is also computationally efficient, costing tens of times less than commercially available APIs that offer even inferior performance. To foster further research in the field, we have made the source code and trained model publicly accessible. We also provide qualitative results in our demo website. Prior to its public release, our internal version of OpenVoice was used tens of millions of times by users worldwide between May and October 2023, serving as the backend of MyShell.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Zengyi Qin [<a href="https://arxiv.org/show-email/0b6138f7/2312.01479">view email</a>]      <br>            <strong><a href="https://arxiv.org/abs/2312.01479v1">[v1]</a></strong>
        Sun, 3 Dec 2023 18:41:54 UTC (109 KB)<br>
            <strong><a href="https://arxiv.org/abs/2312.01479v2">[v2]</a></strong>
        Wed, 13 Dec 2023 02:25:42 UTC (110 KB)<br>
            <strong><a href="https://arxiv.org/abs/2312.01479v3">[v3]</a></strong>
        Sat, 16 Dec 2023 17:22:45 UTC (234 KB)<br>
    <strong>[v4]</strong>
        Thu, 21 Dec 2023 22:56:45 UTC (234 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Procrastination is connected to perfectionism (311 pts)]]></title>
            <link>https://solvingprocrastination.com/perfectionism/</link>
            <guid>38831446</guid>
            <pubDate>Mon, 01 Jan 2024 12:42:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://solvingprocrastination.com/perfectionism/">https://solvingprocrastination.com/perfectionism/</a>, See on <a href="https://news.ycombinator.com/item?id=38831446">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text"><p><a href="https://solvingprocrastination.com/procrastination/"><em>Procrastination</em></a> is a <a href="https://solvingprocrastination.com/procrastination-statistics/">common issue</a>, which occurs when people unnecessarily postpone decisions or actions, generally despite knowing that doing so is likely to <a href="https://solvingprocrastination.com/procrastination-dangers/">cause them issues</a>.</p><p>One reason why people procrastinate is <i>perfectionism</i>. For example, perfectionistic students might be so critical of themselves for making mistakes in school assignments, that they will postpone doing homework to avoid dealing with the associated negative emotions. Similarly, perfectionistic writers might be so worried about their book being criticized, that they will delay sending the book for feedback.</p><p>The relationship between perfectionism and procrastination can have serious implications, so it’s important to understand it. As such, in the following article you will learn more about how perfectionism and procrastination are connected, and see what you can do about this in practice.</p><div id="ez-toc-container"><nav><ul><li><a href="#The_relationship_between_perfectionism_and_procrastination" title="The relationship between perfectionism and procrastination">The relationship between perfectionism and procrastination</a></li><li><a href="#Associated_psychological_mechanisms" title="Associated psychological mechanisms">Associated psychological mechanisms</a></li><li><a href="#Other_causes_of_procrastination" title="Other causes of procrastination">Other causes of procrastination</a></li><li><a href="#Perfectionistic_procrastinators" title="Perfectionistic procrastinators">Perfectionistic procrastinators</a></li><li><a href="#Dealing_with_perfectionistic_procrastination" title="Dealing with perfectionistic procrastination">Dealing with perfectionistic procrastination</a></li></ul></nav></div><h2><span id="The_relationship_between_perfectionism_and_procrastination"></span>The relationship between perfectionism and procrastination<span></span></h2><p>The relationship between perfectionism and procrastination is <a href="https://doi.org/10.3389/fpsyt.2021.736776">complex</a>, and <a href="https://doi.org/10.1007/s10942-012-0149-5">depends</a>&nbsp;on the <a href="https://doi.org/10.1002/per.2098">specific aspects</a> of perfectionism that a person has:</p><ul><li><strong>Some aspects of perfectionism generally <em>increase</em></strong><strong> procrastination.</strong> These include, most notably, <em>perfectionistic concerns</em>, which are <a href="https://doi.org/10.1002/per.2098">characterized primarily</a> by critical and negative self-evaluations, excessive preoccupation with other people’s expectations, lack of satisfaction from successful performance, excessive <a href="https://doi.org/10.1023/A:1026474715384">worry</a> over <a href="https://doi.org/10.1016/j.sbspro.2011.10.104">making mistakes</a>, and <a href="https://doi.org/10.1080/03069885.2014.896454">doubts</a> about one’s abilities and actions, often in <a href="https://doi.org/10.1037/10808-013">irrational</a> ways or to irrational degrees. Such concerns <a href="https://doi.org/10.1002/per.2098">represent</a> the more <em>maladaptive</em> side of <a href="https://doi.org/10.1016/j.lindif.2014.10.009">perfectionism</a>, since they generally lead people to experience negative outcomes, in terms of factors such as their performance and wellbeing. For example, these concerns can lead a student to unnecessarily delay submitting their assignments, because they’re excessively worried that they’ve made mistakes.</li><li><strong>Some aspects of perfectionism generally <em>decrease</em> procrastination.</strong> These include, most notably, <em>perfectionistic strivings</em>, which are <a href="https://doi.org/10.1002/per.2098">characterized primarily</a> by setting and striving for excessively high personal standards, often with a focus on attaining flawlessness in one’s work. Such strivings <a href="https://doi.org/10.1002/per.2098">represent</a> the more <em>adaptive</em> side of <a href="https://doi.org/10.1016/j.lindif.2014.10.009">perfectionism</a>, since they generally lead people to experience positive outcomes, in terms of factors such as their performance and wellbeing. For example, these strivings can lead a student to submit all their assignments on time, because they want to get a perfect grade.</li></ul><p>Furthermore, <a href="https://doi.org/10.1037/10808-013">other characteristics</a> of people’s perfectionism can also <a href="https://doi.org/10.1080/03069885.2016.1213374">play a role</a> in determining how their perfectionism influences their procrastination. For example, <em>socially-prescribed perfectionism</em>, which <a href="https://doi.org/10.1016/B978-0-12-397045-9.00166-X">involves</a> people having high standards <a href="https://doi.org/10.1007/978-1-4899-0227-6_6">set</a> for them by <a href="https://doi.org/10.2224/sbp.2008.36.6.753">others</a>, is <a href="https://doi.org/10.1037/0033-2909.133.1.65">more likely</a> to increase procrastination, whereas&nbsp;<em>self-oriented perfectionism</em>, which <a href="https://doi.org/10.1037/10808-013">involves</a> people <a href="https://doi.org/10.1016/j.lindif.2017.04.010">setting</a> high standards for <a href="https://doi.org/10.2224/sbp.1992.20.2.85">themselves</a>, is more likely to decrease procrastination.</p><p>In addition, various issues can influence people’s perfectionism, and the <a href="https://doi.org/10.2224/sbp.2008.36.6.753">relationship</a> between it and their procrastination. For example, when people receive <a href="https://doi.org/10.1080/03069885.2016.1213374">parental criticism</a>, this can exacerbate their perfectionistic concerns, which in turn can exacerbate their procrastination. Alternatively, when people have high <em><a href="https://solvingprocrastination.com/self-efficacy/">self-efficacy</a></em>, this can improve their ability to control any perfectionistic concerns that they have, which in turn can decrease their procrastination.</p><p><strong>In summary</strong>, perfectionism can either increase or decrease procrastination, depending on various factors. These factors include the aspects of perfectionism involved (e.g., concerns vs. strivings), the types of perfectionism involved (e.g., self-oriented vs. socially-prescribed), and personality traits, such as self-efficacy. This means that while perfectionism can sometimes cause procrastination, not all perfectionists procrastinate.</p><h2><span id="Associated_psychological_mechanisms"></span>Associated psychological mechanisms<span></span></h2><p>There are <a href="https://doi.org/10.1002/per.2098">various ways</a> in which perfectionism can lead to procrastination. For example, it can increase the negative emotions that people experience when they make mistakes, which leads people to delay their work as a way to <a href="https://solvingprocrastination.com/emotion-regulation/">delay</a> the associated <a href="https://doi.org/10.1007/s12144-021-02653-z">negative emotions</a>. Alternatively, perfectionism can substantially increase people’s expectations of themselves, which <a href="https://doi.org/10.1002/per.2098">increases</a> the <a href="https://doi.org/10.1016/j.paid.2017.02.059">discrepancy</a> between people’s current situation and their desired situation so much that their goals feel unattainable, which causes them to give up.</p><p>These mechanisms can <a href="https://doi.org/10.1016/j.jrp.2012.08.006">cause people</a> to enter a <a href="https://solvingprocrastination.com/procrastination-cycle/">perfectionism-procrastination cycle</a>. For example, this can happen when someone’s perfectionism makes them afraid of negative feedback, which causes them to procrastinate, which leads them to perform poorly and get negative feedback, which makes them more afraid of getting negative feedback again in the future, and so on.</p><h2><span id="Other_causes_of_procrastination"></span>Other causes of procrastination<span></span></h2><p>People can procrastinate for <a href="https://solvingprocrastination.com/why-people-procrastinate/">many reasons</a> beyond perfectionism, such as <a href="https://solvingprocrastination.com/anxiety/">anxiety</a>, <a href="https://solvingprocrastination.com/fear/">fear of failure</a>, and <a href="https://solvingprocrastination.com/depression/">depression</a>. Accordingly, although perfectionism can sometimes lead to procrastination, not all procrastinators are perfectionists, and even those who are don’t necessarily procrastinate because of their perfectionism, or <em>only</em> because of it. Nevertheless, many <a href="https://solvingprocrastination.com/why-people-procrastinate/">other causes of procrastination</a>,&nbsp;<a href="https://doi.org/10.1037/10808-013">such as</a> anxiety and fear of failure, are <a href="https://doi.org/10.1177/00332941930733pt123">associated</a> with perfectionism in <a href="https://doi.org/10.1023/A:1026474715384">various ways</a>, for example by <a href="https://doi.org/10.1080/03069885.2014.896454">co-occurring</a> with it, or by being <a href="https://doi.org/10.1007/s12144-021-02653-z">involved</a> in perfectionistic concerns.</p><h2><span id="Perfectionistic_procrastinators"></span>Perfectionistic procrastinators<span></span></h2><p>There’s no universal definition for what constitutes a <em>perfectionistic procrastinator</em>. Nevertheless, this term generally refers to people who suffer from <a href="https://solvingprocrastination.com/chronic-procrastination/">substantial procrastination</a> that’s caused primarily by their perfectionism. For example, an artist can be considered a perfectionistic procrastinator if they unnecessarily delay publishing their work for a long time, because they worry the public won’t think it’s perfect.</p><p>In addition, the term “perfectionistic procrastinator” can be when perfectionism is only one of the key causes of a person’s procrastination, in conjunction with other key causes as descriptors. For example, if someone procrastinates due to a combination of perfectionism and depression, then they may be referred to as a <em>perfectionistic and depressed procrastinator</em>.</p><h2><span id="Dealing_with_perfectionistic_procrastination"></span>Dealing with perfectionistic procrastination<span></span></h2><p>If you realize that your perfectionism is causing you to procrastinate, there are several key things that you can do about it:</p><ul><li><strong>Set reasonable goals and standards.</strong> This doesn’t mean that you should aim low, but rather that you should assess the situation, to determine what performance will be&nbsp;<em><a href="https://effectiviology.com/good-enough-is-good-enough-letting-go-of-perfectionism-to-get-things-done/">good enough</a></em> for you to achieve what you want and need to achieve.</li><li><strong>Focus on yourself, rather than on others.</strong> Many of the issues associated with perfectionism come from caring too much about what others expect of you, or about what others will say or think. If this is a problem for you, then you should instead focus on goals and standards that you set for yourself, and minimize the degree to which you care about other people’s opinions.</li><li><strong>Question and address your fears.</strong> For example, if you realize that you’re <a href="https://solvingprocrastination.com/fear/">afraid</a> of someone criticizing you for not having perfect work, you can ask yourself things such as “how likely is it that they will actually care if I make some small mistakes” or “so what if this person criticizes my work?”. When doing this, it could help to use <a href="https://effectiviology.com/self-distancing-rational-decisions/">self-distancing techniques</a>, for example by asking yourself “why should <em>you</em> care so about making small mistakes?” or by considering what advice you would give to a friend if they were in your situation.</li><li><strong>Consider the negative impact of your perfectionism.</strong> For example, you might consider how your perfectionism-driven procrastination means that you’re not getting any feedback on your work, which is preventing you from making progress.</li><li><strong>Give yourself permission to make mistakes.</strong> For example, if you’re writing a paper, accept that your work won’t be perfect, especially when it comes to the first draft. Essentially, you should <a href="https://doi.org/10.1037/10808-013">avoid</a> an&nbsp;<em>all-or-nothing</em> approach, both when it comes to your work, and when it comes to your attempts to reduce procrastination (i.e., don’t let <em>perfect</em> become the enemy of&nbsp;<em>good enough</em>).</li><li><strong>Develop self-efficacy.</strong> Specifically, this is your <a href="https://solvingprocrastination.com/self-efficacy/">belief</a> in your ability to perform the actions needed to achieve your goals. You can develop it in <a href="https://solvingprocrastination.com/self-efficacy/">various ways</a>, such as identifying the strategies that you can use to achieve your goals, and then thinking about how you can execute those strategies successfully.</li><li><strong>Develop self-compassion.</strong> Specifically, you should develop the three components of <a href="https://solvingprocrastination.com/self-compassion/">self-compassion</a>:&nbsp;<em>self-kindness</em>, which involves being nice to yourself,&nbsp;<em>common humanity</em>, which involves recognizing that everyone experiences challenges, and&nbsp;<a href="https://solvingprocrastination.com/procrastination-study-mindfulness/"><em>mindfulness</em></a>, which involves accepting your emotions in a non-judgmental manner. There are <a href="https://solvingprocrastination.com/self-compassion/">many techniques</a> for doing this, including some that are particularly relevant in the case of perfectionism, such as changing your critical self-talk to make it more positive and compassionate.</li><li><strong>Get support and encouragement from others.</strong> For example, you can talk with a professional therapist about your perfectionistic concerns, or you can ask a friend to be by your side and motivate you when it’s time to act. If you’re reluctant to ask for help because of your perfectionism, remind yourself that it’s perfectly fine and normal to ask for help, and that doing so can help you achieve better outcomes and feel better in the long term.</li></ul><p>Before choosing which of these techniques to use, you should assess your perfectionism and procrastination, to understand how they’re connected. This can help you figure out which specific aspects of your perfectionism you should address and how you should address them.</p><p>In addition, there are many other <a href="https://solvingprocrastination.com/how-to-stop-procrastinating/">anti-procrastination techniques</a> that you might benefit from using to reduce your perfectionism-driven procrastination. These include the following:</p><ul><li><strong>Break your work into small and manageable steps.</strong> For example, if you have a large project that feels overwhelming, such as writing a research paper, you can break it down into a series of small steps, such as creating an outline, finding relevant resources, and writing the introduction.</li><li><strong>Start with a tiny step.</strong> For example, commit to writing only a single sentence or exercising for only 2 minutes, while giving yourself permission to stop after taking that tiny first step, to reduce the pressure associated with getting started.</li><li><strong>Switch between tasks.</strong> For example, if you’re stuck on a task and can’t make progress, switch to a <a href="https://solvingprocrastination.com/productive-procrastination/">different task</a> until you’re ready to go back to the first one.</li><li><strong>Acknowledge and reward your progress.</strong> For example, you can treat yourself to some pleasant treat once you’ve managed to achieve your study goals for a week in a row.</li><li><strong>Schedule your work according to your productivity cycles.</strong> For example, if you find it easier to concentrate on creative tasks in the morning, then you should schedule such tasks for that time period as much as possible.</li><li><strong>Improve your work environment.</strong> For example, if your current work environment has a lot of irritating background noise, get noise-canceling headphones or go somewhere quieter.</li><li><strong>Get enough rest.</strong> For example, if you need to work hard on tasks that require deep concentration, make sure to take enough breaks that you don’t get burnt out. To encourage yourself to do this, you can remind yourself that even if getting rest can reduce your productivity in the short term, it will often be much better for you in the long term, both in terms of your productivity and in terms of your wellbeing.</li><li><strong>Forgive yourself for past procrastination.</strong> For example, if you need to get started on a task that you’ve been postponing for a long time, you can say “I shouldn’t have postponed this task in the first place, but that’s in the past, and what’s important now is to move on and just get this done”.</li></ul><p>Before using these techniques, you should figure out <a href="https://solvingprocrastination.com/why-people-procrastinate/">why you procrastinate</a>, especially if there are other reasons for your procrastination beyond perfectionism, as well as when and how you procrastinate. This will then help you find the best <a href="https://solvingprocrastination.com/how-to-stop-procrastinating/">anti-procrastination techniques</a> to use in your particular situation, and will also figure out how to use these techniques as effectively as possible.</p> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Standard Ebooks (104 pts)]]></title>
            <link>https://standardebooks.org/</link>
            <guid>38831219</guid>
            <pubDate>Mon, 01 Jan 2024 11:51:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://standardebooks.org/">https://standardebooks.org/</a>, See on <a href="https://news.ycombinator.com/item?id=38831219">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	<h2>Free and liberated ebooks,<br> carefully produced for the true book lover.</h2>
	<picture>
		<source srcset="https://standardebooks.org/images/devices@2x.avif 2x, https://standardebooks.org/images/devices.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/devices@2x.png 2x, https://standardebooks.org/images/devices.png 1x" type="image/png">
		<img src="https://standardebooks.org/images/devices@2x.png" alt="Ereaders with a Standard Ebook open.">
	</picture>
	<p>Standard Ebooks is a volunteer-driven project that produces new editions of public domain ebooks that are lovingly formatted, open source, free of U.S. copyright restrictions, and free of cost.</p>
	<p>Ebook projects like <a href="https://www.gutenberg.org/">Project Gutenberg</a> transcribe ebooks and make them available for the widest number of reading devices. Standard Ebooks takes ebooks from sources like Project Gutenberg, formats and typesets them using a carefully designed and professional-grade style manual, fully proofreads and corrects them, and then builds them to create a new edition that takes advantage of state-of-the-art ereader and browser technology.</p>
	<p>Standard Ebooks aren’t just a beautiful addition to your digital library—they’re a high quality standard to build your own ebooks on.</p><a href="https://standardebooks.org/ebooks">Browse our library of free ebooks</a>
	<section>
		<h2>What makes Standard Ebooks different?</h2>
		<section>
			<h3>Modern &amp; consistent typography</h3>
			<div>
				<div>
					<p>Other free ebooks don’t put much effort into professional-quality typography: they use "straight" quotes instead of “curly” quotes, they ignore details like em- and en-dashes, and they look more like early-90’s web pages instead of actual books.</p>
					<p>Standard Ebooks applies a rigorous and modern <a href="https://standardebooks.org/manual">style manual</a> when developing each and every ebook to ensure they meet a professional-grade and consistent typographical standard. Our ebooks look <em>good</em>.</p>
				</div>
				<figure>
					<picture>
						<source srcset="https://standardebooks.org/images/typography-bad@2x.avif 2x, https://standardebooks.org/images/typography-bad.avif 1x" type="image/avif">
						<source srcset="https://standardebooks.org/images/typography-bad@2x.png 2x, https://standardebooks.org/images/typography-bad.png 1x" type="image/png">
						<img src="https://standardebooks.org/images/typography-bad@2x.png" alt="An example of bad typography." height="150" width="300">
					</picture>
					<picture>
						<source srcset="https://standardebooks.org/images/typography-good@2x.avif 2x, https://standardebooks.org/images/typography-good.avif 1x" type="image/avif">
						<img src="https://standardebooks.org/images/typography-good@2x.png" alt="An example of Standard Ebooks typography." height="150" width="300">
					</picture>
					<img alt="An arrow pointing from bad typography to good typography." src="https://standardebooks.org/images/arrow-down.png">
				</figure>
			</div>
		</section>
		<section>
			<h3>Full proofing with careful corrections</h3>
			<div>
				<div>
					<p>Transcriptions from other sources are often filled with typos or suffer from issues like inconsistent spelling, missing accent marks, or missing punctuation. Submitting corrections to such sources can be difficult or impossible, so errors are rarely fixed.</p>
					<p>At Standard Ebooks, we do a careful and complete readthrough of each ebook before releasing it, checking it against a scan of the original pages to fix as many typos as possible. Even if we <em>do</em> miss something, our ebooks are stored in the hugely popular Git source control system, allowing anyone to easily submit a correction.</p>
				</div>
				<figure>
					<picture>
						<source srcset="https://standardebooks.org/images/proofreading@2x.avif 2x, https://standardebooks.org/images/proofreading.avif 1x" type="image/avif">
						<source srcset="https://standardebooks.org/images/proofreading@2x.png 2x, https://standardebooks.org/images/proofreading.png 1x" type="image/png">
						<img src="https://standardebooks.org/images/proofreading@2x.png" alt="A text with proofreader’s marks." height="200" width="400">
					</picture>
				</figure>
			</div>
		</section>
		<section>
			<h3>Rich &amp; detailed metadata</h3>
			<div>
				<p>Our ebooks include complete, well-researched, and consistent metadata, including original, detailed book blurbs and links to encyclopedia sources. Perfect for machine processing or for extra-curious, technically-minded readers.</p>
				<figure>
					<picture>
						<source srcset="https://standardebooks.org/images/metadata@2x.avif 2x, https://standardebooks.org/images/metadata.avif 1x" type="image/avif">
						<source srcset="https://standardebooks.org/images/metadata@2x.png 2x, https://standardebooks.org/images/metadata.png 1x" type="image/png">
						<img src="https://standardebooks.org/images/metadata@2x.png" alt="Ebook metadata displayed in an ereader program." height="200" width="400">
					</picture>
				</figure>
			</div>
		</section>
		<section>
			<h3>State-of-the-art technology</h3>
			<div>
				<div>
					<p>Each Standard Ebook takes full advantage of the latest ereader technology, including:</p>
					<ul>
						<li>
							<p>Hyphenation support,</p>
						</li>
						<li>
							<p>Popup footnotes,</p>
						</li>
						<li>
							<p>High-resolution and scalable vector graphics,</p>
						</li>
						<li>
							<p>Ereader-compatible tables of contents,</p>
						</li>
					</ul>
					<p>and more. One of our goals is to ensure our ebooks stay up-to-date with the best reading experience technology can provide. Just because it’s a classic doesn’t mean it has to use old technology.</p>
				</div>
				<figure>
					<picture>
						<source srcset="https://standardebooks.org/images/endnote@2x.avif 2x, https://standardebooks.org/images/endnote.avif 1x" type="image/avif">
						<source srcset="https://standardebooks.org/images/endnote@2x.png 2x, https://standardebooks.org/images/endnote.png 1x" type="image/png">
						<img src="https://standardebooks.org/images/endnote@2x.png" alt="A screenshot of a popup endnote." height="150" width="300">
					</picture>
					<picture>
						<source srcset="https://standardebooks.org/images/toc@2x.avif 2x, https://standardebooks.org/images/toc.avif 1x" type="image/avif">
						<source srcset="https://standardebooks.org/images/toc@2x.png 2x, https://standardebooks.org/images/toc.png 1x" type="image/png">
						<img src="https://standardebooks.org/images/toc@2x.png" alt="A screenshot of an ebook’s table of contents." height="150" width="300">
					</picture>
				</figure>
			</div>
		</section>
		<section>
			<h3>Quality covers</h3>
			<div>
				<div>
					<p>Everyone knows a book is judged by its cover, but most free ebooks leave it to your ereader software to generate a drab default cover.</p>
					<p>Standard Ebooks draws from a vast collection of public domain fine art to create attractive, unique, appropriate, and consistent covers for each of our ebooks.</p>
				</div>
				<figure>
					<picture>
						<source srcset="https://standardebooks.org/images/covers@2x.avif 2x, https://standardebooks.org/images/covers.avif 1x" type="image/avif">
						<source srcset="https://standardebooks.org/images/covers@2x.jpg 2x, https://standardebooks.org/images/covers.jpg 1x" type="image/jpg">
						<img src="https://standardebooks.org/images/covers@2x.jpg" alt="An ebookshelf featuring Standard Ebooks covers." height="125" width="400">
					</picture>
				</figure>
			</div>
		</section>
		<section>
			<h3>Clean code &amp; semantic markup</h3>
			<div>
				<div>
					<p>Our strict coding standards allow technologists and ebook producers to use Standard Ebooks files as reliable, easy to read, and robust bases for their own work—not to mention as models of what well-crafted ebook files look like. Common code patterns are repeated through different ebooks, so the code never surprises you.</p>
					<p>Each ebook is also enhanced with careful standards-based semantic markup that opens the gateway for exciting new kinds of machine processing.</p>
				</div>
				<figure>
					<picture>
						<source srcset="https://standardebooks.org/images/code@2x.avif 2x, https://standardebooks.org/images/code.avif 1x" type="image/avif">
						<source srcset="https://standardebooks.org/images/code@2x.png 2x, https://standardebooks.org/images/code.png 1x" type="image/png">
						<img src="https://standardebooks.org/images/code@2x.png" alt="The source code for an ebook." height="200" width="400">
					</picture>
				</figure>
			</div>
		</section>
		<section>
			<h3>Free, open-source, &amp; public domain</h3>
			<div>
				<div>
					<p>We use the popular Git source control system to track each and every change made to our ebooks. Anyone can easily see a history of changes, or contribute their own changes with the click of a mouse.</p>
					<p>And while all of the ebooks we feature and the cover art we draw from are <em>already</em> believed to be in the public domain in the U.S., Standard Ebooks releases all of the work we put in to each ebook into the public domain too. That makes each and every one of our ebook files not just free, but <a href="https://en.wikipedia.org/wiki/Gratis_versus_libre">libre</a> too—because the world deserves more unrestricted culture.</p>
				</div>
				<figure>
					<img alt="The Git SCM logo." src="https://standardebooks.org/images/git.svg" height="150" width="150">
					<img alt="The no-copyright symbol." src="https://standardebooks.org/images/no-copyright.svg" height="150" width="150">
					<img alt="The anti-DRM symbol." src="https://standardebooks.org/images/no-drm.svg" height="137" width="150">
				</figure>
			</div>
		</section>
	</section>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Magnitude 7.4 earthquake stikes Japan, major tsunami warning issued for Ishikawa (218 pts)]]></title>
            <link>https://www3.nhk.or.jp/nhkworld/en/news/20240101_15/</link>
            <guid>38830281</guid>
            <pubDate>Mon, 01 Jan 2024 07:41:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www3.nhk.or.jp/nhkworld/en/news/20240101_15/">https://www3.nhk.or.jp/nhkworld/en/news/20240101_15/</a>, See on <a href="https://news.ycombinator.com/item?id=38830281">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                <p>A massive magnitude-7.6 earthquake has struck Ishikawa Prefecture, in central Japan, along the Japan Sea coast.</p>
                <p>A major tsunami warning has been issued for the prefecture.</p>
                <p>Tsunami warnings were also issued for Niigata, Toyama, Yamagata, Fukui and Hyogo prefectures, also along the Japan Sea Coast.</p>
                <p>An intensity of seven on the Japanese scale of 0 to seven was observed on the Noto Peninsula, Ishikawa Prefecture.</p>
              </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Disney's Mickey Mouse enter public domain (322 pts)]]></title>
            <link>https://www.bbc.com/news/entertainment-arts-67833411</link>
            <guid>38830264</guid>
            <pubDate>Mon, 01 Jan 2024 07:35:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.com/news/entertainment-arts-67833411">https://www.bbc.com/news/entertainment-arts-67833411</a>, See on <a href="https://news.ycombinator.com/item?id=38830264">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main id="main-content" data-testid="main-content"><article><header></header><div data-component="image-block"><figure><p><span><picture><source srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg.webp 240w, https://ichef.bbci.co.uk/news/320/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg.webp 320w, https://ichef.bbci.co.uk/news/480/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg.webp 480w, https://ichef.bbci.co.uk/news/624/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg.webp 624w, https://ichef.bbci.co.uk/news/800/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg.webp 800w, https://ichef.bbci.co.uk/news/976/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg.webp 976w" type="image/webp"><img alt="A picture of Mickey Mouse in Steamboat Willie" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg 240w, https://ichef.bbci.co.uk/news/320/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg 320w, https://ichef.bbci.co.uk/news/480/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg 480w, https://ichef.bbci.co.uk/news/624/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg 624w, https://ichef.bbci.co.uk/news/800/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg 800w, https://ichef.bbci.co.uk/news/976/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg 976w" src="https://ichef.bbci.co.uk/news/976/cpsprodpb/0A9C/production/_132161720_steamboatwillieresized.jpg" width="976" height="549" loading="eager"></picture></span><span role="text"><span>Image source, </span>Disney</span></p><figcaption><span>Image caption, </span><p>A picture of Mickey Mouse in the 1928 short film Steamboat Willie</p></figcaption></figure></div><div data-component="text-block"><p><b>It was the animation that launched the House of Mouse.</b></p></div><div data-component="text-block"><p>Steamboat Willie, a 1928 short film featuring early non-speaking versions of Mickey and Minnie, is widely seen as the moment that transformed Disney's fortunes and made cinema history.</p></div><div data-component="text-block"><p>Their images are now available to the public in the US, after Disney's copyright expired. </p></div><div data-component="text-block"><p>It means creatives like cartoonists can now rework and use the earliest versions of Mickey and Minnie.</p></div><div data-component="text-block"><p>In fact, anyone can use those versions without permission or cost.</p></div><div data-component="text-block"><p>But Disney warned that more modern versions of Mickey are still covered by copyright.</p></div><div data-component="text-block"><p>"We will, of course, continue to protect our rights in the more modern versions of Mickey Mouse and other works that remain subject to copyright," the company said.</p></div><div data-component="text-block"><p>US copyright law says the rights to characters can be held for 95 years, which means the characters in Steamboat Willie entered the public domain on Monday, 1 January 2024.</p></div><div data-component="text-block"><p>Those works can now legally be shared, performed, reused, repurposed or sampled.</p></div><div data-component="text-block"><p>The early versions of Mickey and Minnie are just two of the works entering the public domain in the US on New Year's Day.</p></div><div data-component="text-block"><p>Other famous films, books, music and characters from 1928 are now also available to the American public.</p></div><div data-component="image-block"><figure><p><span><span></span></span><span role="text"><span>Image source, </span>Getty Images</span></p><figcaption><span>Image caption, </span><p>A 1928 lobbycard, or small poster, for The Circus, which won Charlie Chaplin a special Academy Award</p></figcaption></figure></div><div data-component="text-block"><p>They include Charlie Chaplin's silent romantic comedy The Circus; English author AA Milne's book The House at Pooh Corner, which introduced the character Tigger; Virginia Woolf's Orlando; and DH Lawrence's Lady Chatterley's Lover.</p></div><div data-component="text-block"><p>The UK has its own copyright rules and different expiration dates. </p></div><div data-component="text-block"><p>Disney has faced losing the copyright over its original cartoons several times in the past.</p></div><div data-component="text-block"><p>The characters were first expected to go into the public domain in 1984, but Congress extended the term by 20 years.</p></div><div data-component="text-block"><p>Before the next expiry date came up in 2004, another 20-year extension was passed.</p></div><p data-component="subheadline-block"><h2 tabindex="-1" id="Deeply-symbolic"><span role="text">'Deeply symbolic'</span></h2></p><div data-component="text-block"><p>Disney's efforts to protect its characters have even led to the law being dubbed "the Mickey Mouse Protection Act". But the moment has finally come.</p></div><div data-component="text-block"><p>Jennifer Jenkins, director of the Duke Centre for the Study of the Public Domain, told the BBC it was a "deeply symbolic and long awaited" milestone.</p></div><div data-component="text-block"><p>"What that means for us is that as of 2024, anyone will be free to copy, share and build upon those original cartoons from 1928 and the characters within them," she said.</p></div><div data-component="text-block"><p>Jenkins said the moment was particularly significant because of Disney's "perceived role" in the extension of the copyright term, which prevented its properties from going into the public domain for so long.</p></div><div data-component="image-block"><figure><p><span><span></span></span><span role="text"><span>Image source, </span>Getty Images</span></p></figure></div><div data-component="text-block"><p>Disney still separately holds a trademark on Mickey as a brand identifier and a corporate mascot. That means there are still limits on how the public can use these images, Jenkins said.</p></div><div data-component="text-block"><p>"What I cannot do is start making merchandise and the same kinds of products that Disney sells," she said.</p></div><div data-component="text-block"><p>"So if I'm selling T-shirts with Mickey and Minnie on them, and someone seeing those T-shirts thinks erroneously that they're getting a Disney product when they're not, that's what trademark stops."</p></div><div data-component="text-block"><p>So any use of Mickey Mouse that gives the impression he belongs to a brand other than Disney would still be a trademark issue.</p></div><div data-component="text-block"><p>Jack Kendall, a 32-year-old digital content creator from Warwickshire who runs a YouTube channel for Disney news explainers, believes someone may try to give Mickey and Minnie the horror movie treatment.</p></div><div data-component="text-block"><p>He likened it to when Winnie the Pooh entered the public domain and was turned into the R-rated horror film Blood and Honey, which was <a href="https://www.rottentomatoes.com/m/winnie_the_pooh_blood_and_honey/reviews">one of this year's worst-rated films</a>.</p></div><div data-component="text-block"><p>Kendall, who has more than 168,000 subscribers to his DSNY Newscast channel, believes Disney would want to avoid any further legal fights given that the firm has become "a political lightning rod in pop culture".</p></div><div data-component="text-block"><p>"But they also want to protect their two most identifiable characters," he told the BBC.</p></div><div data-component="text-block"><p>He believes Disney's active use of the trademarked versions in Steamboat Willie merchandise, new animated shorts, and even a studios theatrical logo, is "Disney's way of safeguarding the characters if they want to go the legal route in any egregious use of the characters". </p></div><div data-component="text-block"><p>A Disney spokesperson said that ever since Mickey Mouse's first appearance in 1928, people have associated the character with the company.</p></div><div data-component="text-block"><p>"That will not change when the copyright in the Steamboat Willie film expires," they said.</p></div><div data-component="text-block"><p>"More modern versions of Mickey will remain unaffected by the expiration of the Steamboat Willie copyright, and Mickey will continue to play a leading role as a global ambassador for the Walt Disney Company in our storytelling, theme park attractions, and merchandise."</p></div><div data-component="text-block"><p>The company added that it would "work to safeguard against consumer confusion caused by unauthorised uses of Mickey and our other iconic characters".</p></div><div data-component="text-block"><p><i>Additional reporting by Leisha Chi-Santorelli</i></p></div><section data-component="links-block"><p><h2>More on this story</h2></p></section></article></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Steamboat Willie [video] (169 pts)]]></title>
            <link>https://www.youtube.com/watch?v=hmzO--ox7X0</link>
            <guid>38830223</guid>
            <pubDate>Mon, 01 Jan 2024 07:20:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=hmzO--ox7X0">https://www.youtube.com/watch?v=hmzO--ox7X0</a>, See on <a href="https://news.ycombinator.com/item?id=38830223">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Git Things (154 pts)]]></title>
            <link>https://matklad.github.io/2023/12/31/git-things.html#Git-Things</link>
            <guid>38830194</guid>
            <pubDate>Mon, 01 Jan 2024 07:10:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://matklad.github.io/2023/12/31/git-things.html#Git-Things">https://matklad.github.io/2023/12/31/git-things.html#Git-Things</a>, See on <a href="https://news.ycombinator.com/item?id=38830194">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <article>

    
<p><span>A grab bag of less frequently talked about git adjacent points.</span></p>
<section id="Not-Rocket-Science-Rule-Applies-To-Merge-Commits">

    <h2>
    <a href="#Not-Rocket-Science-Rule-Applies-To-Merge-Commits"><span>Not Rocket Science Rule Applies To Merge Commits</span> </a>
    </h2>
<p><span>Should every commit pass the tests? If it should, then your </span><a href="https://graydon2.dreamwidth.org/1597.html"><span>not rocket science</span>
<span>rule</span></a><span> implementation must be verifying this property. It</span>
<span>probably doesn</span>’<span>t, and only tests the final result of merging the feature branch into the main</span>
<span>branch.</span></p>
<p><span>That</span>’<span>s why for typical project it is useful to </span><em><span>merge</span></em><span> pull requests into the main branch </span>—<span> the</span>
<span>linear sequence of merge commits is a record of successful CI runs, and is a set of commits you want</span>
<span>to </span><code>git bisect</code><span> over.</span></p>
<p><span>Within a feature branch, not every commit necessary passes the tests (or even builds), and that is a</span>
<span>useful property! Here</span>’<span>s some ways this can be exploited:</span></p>
<ul>
<li>
<p><span>When fixing a bug, add a failing test first, as a separate commit.</span>
<span>That way it becomes easy to verify for anyone that the test indeed fails without the follow up</span>
<span>fix.</span></p>
<p><span>Related advice: often I see people commenting out tests that currently fail, or tests that are yet</span>
<span>to be fixed in the future. That</span>’<span>s bad, because commented-out code rots faster than the JavaScript</span>
<span>framework of the day. Instead, adjust the asserts such that they lock down the current (wrong)</span>
<span>behavior, and add a clear </span><code>// TODO:</code><span> comment explaining what would be the correct result. This</span>
<span>prevents such tests from rotting and also catches cases where the behavior is fixed by an</span>
<span>unrelated change.</span></p>
</li>
<li>
<p><span>To refactor an API which has a lot of usages, split the work in two commits. In the first commit,</span>
<span>change the API itself, but don</span>’<span>t touch the usages. In the second commit, mechanically adjust all</span>
<span>call sites.</span></p>
<p><span>That way during review it is trivial to separate meaningful changes from a large, but trivial</span>
<span>diff.</span></p>
</li>
<li>
<p><code>git mv</code><span> is fake. For a long time, I believed that </span><code>git mv</code><span> adds some special bit of git metadata</span>
<span>which tells it that the file was moved, such that it can be understood by </span><code>diff</code><span> or </span><code>blame</code><span>.</span>
<span>That</span>’<span>s not the case: </span><code>git mv</code><span> is essentially </span><code>mv</code><span> followed by </span><code>git add</code><span>. There</span>’<span>s nothing in git to</span>
<span>track that a file was moved specifically, the </span>“<span>moved</span>”<span> illusion is created by the diff tool when it</span>
<span>heuristically compares repository state at two points in time.</span></p>
<p><span>For this reason, if you want to reliably record file moves during refactors in git, you should do</span>
<span>two commits: the first commit </span><em><span>just</span></em><span> moves the file without any changes, the second commit applies</span>
<span>all the required fixups.</span></p>
<p><span>Speaking of moves, consider adding this to your </span><code>gitconfig</code><span>:</span></p>

<figure>


<pre><code><span>[diff]</span>
<span>  colormoved = "default"</span>
<span>  colormovedws = "allow-indentation-change"</span></code></pre>

</figure>
<p><span>This way, moved lines will be colored differently in </span><code>diff</code><span>, so that code motions not confused</span>
<span>with additions and deletions, and are easier to review. It is unclear to me why this isn</span>’<span>t the</span>
<span>default, and why this isn</span>’<span>t an option in GitHub</span>’<span>s UI.</span></p>
</li>
</ul>
<p>“<span>Merge into main, but rebase feature branches</span>”<span> might be a hard rule to wrap your head around if you</span>
<span>are new to git. Luckily, it</span>’<span>s easy to use not-rocket-science rule to enforce this property. The</span>
<span>history is as much a part of your project as is the source code. You can write a test that shells</span>
<span>out to git and checks that the only merge commits in the history are those from the merge bot. While</span>
<span>you are at it, it would be a good idea to test that no large large files are present in the</span>
<span>repository </span>—<span> the size of a repository only grows, and you can</span>’<span>t easily remove large blobs from the</span>
<span>repo later on!</span></p>
</section>
<section id="Commit-Messages">

    <h2>
    <a href="#Commit-Messages"><span>Commit Messages</span> </a>
    </h2>
<p><span>Let me phrase this in the most inflammatory way possible :)</span></p>
<p><span>If your project has great commit messages, with short and precise summary lines and long and</span>
<span>detailed bodies, this probably means that your CI and code review process suck.</span></p>
<p><span>Not all changes are equal. In a typical project, most of the changes that </span><em><span>should</span></em><span> be made are small</span>
<span>and trivial </span>—<span> some renames, visibility tightening, </span>“<span>attention to details</span>”<span> polish in user-visible</span>
<span>features.</span></p>
<p><span>However, in a typical project, landing a trivial change is slow. How long would it take you to fix</span>
<code>it's/its</code><span> typo in a comment? Probably 30 seconds to push the actual change, 30 minutes to get the</span>
<span>CI results, and 3 hours for a review roundtrip.</span></p>
<p><span>The fixed costs to making a change are tremendous. Main branch gatekeeping strongly incentivizes</span>
<span>against trivial changes. As a result, such changes either are not being made, or are tacked onto</span>
<span>larger changes as a drive by bonus. In any case, the total number of commits and PRs goes down. And</span>
<span>you are crafting a novel of a commit message because you have to wait for your previous PR to land</span>
<span>anyway.</span></p>
<p><span>What can be done better?</span></p>
<p><em><span>First</span></em><span>, make changes smaller and more frequent.</span>
<span>Most likely, this is possible for you.</span>
<span>At least, I tend to out-commit most colleagues (</span><a href="https://github.com/intellij-rust/intellij-rust/graphs/contributors"><span>example</span></a><span>).</span>
<span>That</span>’<span>s not because I am more productive </span>—<span> I just do work in smaller batches.</span></p>
<p><em><span>Second</span></em><span>, make CI asynchronous.</span>
<span>At no point in your workflow you should be waiting for CI to pass.</span>
<span>You should flag a change for merging, move on to the next thing, and only get back if CI fails.</span>
<span>This is something bors-ng does right </span>—<span> it</span>’<span>s possible to </span><code>r+</code><span> a commit immediately on submission.</span>
<span>This is something GitHub merge queue does wrong </span>—<span> it</span>’<span>s impossible to add a PR to queue until checks on the PR itself are green.</span></p>
<p><em><span>Third</span></em><span>, our review process is backwards. Review is done </span><em><span>before</span></em><span> code gets into main, but that</span>’<span>s</span>
<span>inefficient for most of the non-mission critical projects out there. A better approach is to</span>
<span>optimistically merge most changes as soon as not-rocket-science allows it, and then later review the</span>
<span>code in situ,  in the main branch. And instead of adding comments in web ui, just changint the code</span>
<span>in-place, sending a new PR ccing the original author.</span></p>

<figure>
<blockquote><ol start="14">
<li>
<span>Maintainers SHALL NOT make value judgments on correct patches.</span>
</li>
<li>
<span>Maintainers SHALL merge correct patches from other Contributors rapidly.</span>
</li>
</ol>
<p>…</p>
<ol start="18">
<li>
<span>Any Contributor who has value judgments on a patch SHOULD express these via their own patches.</span>
</li>
</ol>
</blockquote>
<figcaption><cite><a href="https://rfc.zeromq.org/spec/42/"><span>Collective Code Construction Contract</span></a></cite></figcaption>
</figure>
<p><span>I am skeptical that this exact workflow would</span>
<span>ever fly, but I am cautiously optimistic about </span><a href="https://zed.dev/"><span>Zed</span>’<span>s</span></a><span> idea about just allowing</span>
<span>two people to code in the same editor at the same time. I think that achieves a similar effect, and</span>
<span>nicely dodges unease about allowing temporarily unreviewed code.</span></p>
<p><span>Ok, back to git!</span></p>
<p><em><span>First</span></em><span>, not every project needs a clean history. Have you ever looked at the git history of your</span>
<span>personal blog or dotfiles? If you haven</span>’<span>t, feel free to use a </span><code>.</code><span> as a commit message. I do that for</span>
<span><a href="https://github.com/matklad/matklad.github.io">https://github.com/matklad/matklad.github.io</a><span>,</span></span>
<span>it works fine so far.</span></p>
<p><em><span>Second</span></em><span>, not every change needs a great commit message. If a change is really minor, I would say</span>
<code>minor</code><span> is an okay commit message!</span></p>
<p><em><span>Third</span></em><span>, some changes absolutely do require very detailed commit messages. If there </span><em><span>is</span></em><span> a context,</span>
<span>by all means, include all of it into the commit message (and spill some as comments in the source</span>
<span>code). And here</span>’<span>s a tip for this case: </span><em><span>write the commit message first!</span></em></p>
<p><span>When I work on a larger feature, I start with</span>
<code>git commit --allow-empty</code>
<span>to type out what I set to do. Most of the time, by the third paragraph of the commit message I</span>
<span>realize that there</span>’<span>s a flaw in my plan and refine it. So, by the time I get to actually writing the</span>
<span>code, I am already on the second iteration. And, when I am done, I just amend the commit with the</span>
<span>actual changes, and the commit message is already there, needing only minor adjustments.</span></p>
<p><span>And the last thing I want to touch about commit messages: </span><code>man git-commit</code><span> tells me that the summary</span>
<span>line should be shorter than 50 characters. This feels obviously wrong, that</span>’<span>s much too short!</span>
<a href="https://www.kernel.org/doc/html/v4.10/process/submitting-patches.html"><span>Kernel docs</span></a><span> suggest a much</span>
<span>more reasonable 70-75 limit! And indeed, looking at a some recent kernel commits, 50 is clearly not</span>
<span>enough!</span></p>

<figure>


<pre><code><span>&lt;---               50 characters              ---&gt;</span>
<span></span>
<span>get_maintainer: remove stray punctuation when cleaning file emails</span>
<span>get_maintainer: correctly parse UTF-8 encoded names in files</span>
<span>locking/osq_lock: Clarify osq_wait_next()</span>
<span>locking/osq_lock: Clarify osq_wait_next() calling convention</span>
<span>locking/osq_lock: Move the definition of optimistic_spin_node into osq_lock.c</span>
<span>ftrace: Fix modification of direct_function hash while in use</span>
<span>tracing: Fix blocked reader of snapshot buffer</span>
<span>ring-buffer: Fix wake ups when buffer_percent is set to 100</span>
<span>platform/x86/intel/pmc: Move GBE LTR ignore to suspend callback</span>
<span>platform/x86/intel/pmc: Allow reenabling LTRs</span>
<span>platform/x86/intel/pmc: Add suspend callback</span>
<span>platform/x86: p2sb: Allow p2sb_bar() calls during PCI device probe</span>
<span></span>
<span>&lt;---               50 characters              ---&gt;</span></code></pre>

</figure>
<p><span>Happy new year, dear reader!</span></p>
</section>
</article>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Website Impersonating a Desktop Environment (317 pts)]]></title>
            <link>https://dustinbrett.com/</link>
            <guid>38830132</guid>
            <pubDate>Mon, 01 Jan 2024 06:48:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dustinbrett.com/">https://dustinbrett.com/</a>, See on <a href="https://news.ycombinator.com/item?id=38830132">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[27 Years Ago, Steve Jobs Said the Best Employees Focus on Content, Not Process (277 pts)]]></title>
            <link>https://www.inc.com/jeff-haden/27-years-ago-steve-jobs-said-best-employees-focus-on-content-not-process-workplace-research-shows-he-was-right.html</link>
            <guid>38829845</guid>
            <pubDate>Mon, 01 Jan 2024 05:04:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.inc.com/jeff-haden/27-years-ago-steve-jobs-said-best-employees-focus-on-content-not-process-workplace-research-shows-he-was-right.html">https://www.inc.com/jeff-haden/27-years-ago-steve-jobs-said-best-employees-focus-on-content-not-process-workplace-research-shows-he-was-right.html</a>, See on <a href="https://news.ycombinator.com/item?id=38829845">Hacker News</a></p>
Couldn't get https://www.inc.com/jeff-haden/27-years-ago-steve-jobs-said-best-employees-focus-on-content-not-process-workplace-research-shows-he-was-right.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Beginner dev looks at how YouTube sends videos (140 pts)]]></title>
            <link>https://vincentsg.dev/dec31?</link>
            <guid>38829786</guid>
            <pubDate>Mon, 01 Jan 2024 04:45:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://vincentsg.dev/dec31?">https://vincentsg.dev/dec31?</a>, See on <a href="https://news.ycombinator.com/item?id=38829786">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>

        

        <p>The day before 2023 on of my favorite artists decided to drop a new track (link)! Amazing, I thought, I’ll add it to my Spotify playlist.</p>
        <img src="https://vincentsg.dev/images/article/dec31/Spotify.png" alt="me searching for the song on spotify">

    	<p>Unfortunately it was no where to be found, and this wasn’t the only song. Easy! I can just download the mp3 off YouTube and add it to my Spotify playlist manually. Let me just find a website.</p>
        <img src="https://vincentsg.dev/images/article/dec31/ytmp3.png" alt="mp3 downloader website">

        <p>Admittedly the website was pretty nice with only a single strange ad, however it still left a bit of a bad taste in my mouth. Downloading random files off websites like these probably isn’t the most hygienic computing practice. After all I’ve been a full stack dev for a little bit (just graduated college!) This should be no problem let’s just see what YouTube does…</p>
        <img src="https://vincentsg.dev/images/article/dec31/youtubeNetwork.png" alt="youtube network traffic">
        <p>Oh... that's ALOT of parameters</p>
        <p>wondering if anyone else had already reversed it, which led me to a hackernews post and then to this site <a href="https://tyrrrz.me/blog/reverse-engineering-youtube-revisited">https://tyrrrz.me/blog/reverse-engineering-youtube-revisited</a></p>
        <p>After reading throught the entire AMAZING post I created a fetch request in node using the android example only to get back a 403 error...Not readable. No biggie I'll switch to the embedded web player it seems much more useful anyway! I carefully extracted the decoder from the youtube player just as the blog said and prepared the request</p>

        <img src="https://vincentsg.dev/images/article/dec31/embeddedAttempt.png" alt="my fetch request to youtube using an embeded context">
        <p>I sent it off and BOOM! ....wait what? a 403?? I double cheked my code and the decryption but didn't find any faults. At this point I was pretty bummed but remembered about an open source project called invidious that Lous Rossman mentioend. I nagivated to the website and noticed that they were pulling the videos directly from youtube's rr endpoint. Exactly what I wanted to do! How is this possible? On a closer inspection of the netowrk traffic I saw the keywork ANDROID. The original method I was using, but how did they get theirs to work?</p>

        
        <p>Since the project is open source I parsed their github only to find it was in a language called crystal. Despite me being unfamilliar it was easy enough to read and reminded me of bash. Eventually I stumbeled on two functions</p>

        <img src="https://vincentsg.dev/images/article/dec31/invidiousPlayer.png" alt="invidious player source code">
        <p>This was the function I needed! Looking at the request it seems that they had additional context compared to what I had especially the html5 context. I found where the function was called and determined that they initally used and ANDROID client for the first attempt, matching what I initally saw in their network traffic. With all of this I put together my own network call and.... BOOM!!! FINALLY A STREAM. Since this wasn't using the web client I didn't need to decode the signature it was free to access.</p>

        <p>
     
            let data = { <br>
                "videoId": videoId,<br>
                "context": {<br>
                    "client": {<br>
                        "hl": "en",<br>
                        "gl": "US",<br>
                        "clientName": "ANDROID",<br>
                        "clientVersion": "17.10.35",<br>
                        "androidSdkVersion": 30,<br>
                        "osName": "Android",<br>
                        "osVersion": "12",<br>
                        "platform": "MOBILE"<br>
                    }<br>
                },<br>
                "params": "2AMBCgIQBg",<br>
                "contentCheckOk": true,<br>
                "racyCheckOk": true,<br>
                "user": {<br>
                    "lockedSafetyMode": false<br>
                },<br>
                "playbackContext": {<br>
                    "contentPlaybackContext": {<br>
                        "html5Preference": "HTML5_PREF_WANTS",<br>
                    },<br>
                },<br>
            }<br>

        </p>

        
        <p>I quickly threw together an ugly frontend and posted it to digital ocean under an express server and prepped another project to repair my broken discord bot.</p>
        <a href="https://www.yt-linkify.com/">https://www.yt-linkify.com</a>
        <p>Hopefully this is usefull to someone or just an interesting read. Big shoutout to the invidious project and tyrrrz's blog they did basically all of the heavy lifting for this new developer! </p>
        <p>If this ever makes it to Hacker News, I love you guys! I read the site multiple times a day. You all keep me motivated especially in times like this where I'm not sure if I should continue being a developer. Thanks for keeping me sane and happy new year!</p> 
        <p>If anyone is hiring check out the other links on the site to get in contact with me Cheers! </p>


    	
    </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using a Markov chain to generate readable nonsense with 20 lines of Python (165 pts)]]></title>
            <link>https://benhoyt.com/writings/markov-chain/</link>
            <guid>38829772</guid>
            <pubDate>Mon, 01 Jan 2024 04:40:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://benhoyt.com/writings/markov-chain/">https://benhoyt.com/writings/markov-chain/</a>, See on <a href="https://news.ycombinator.com/item?id=38829772">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="container">

<p>November 2023</p>

<blockquote>
  <p><strong>Go to:</strong> <a href="#the-algorithm">Algorithm</a> | <a href="#some-better-examples">Examples</a> | <a href="#python-implementation">Python implementation</a> | <a href="#conclusion">Conclusion</a></p>
</blockquote>

<p>I recently learned how to generate text using a simple <a href="https://en.wikipedia.org/wiki/Markov_chain">Markov chain</a>. The generated text is readable but is also complete nonsense; as prose it’s not worth much, but for predicting the next word like your phone keyboard’s suggestions, it’s surprisingly useful.</p>

<p>I learned about this algorithm in chapter 3 of Kernighan and Pike’s book <a href="https://www.cs.princeton.edu/~bwk/tpop.webpage/"><em>The Practice of Programming</em></a>, where they implement such a generator in various programming languages to discuss program design and data structures.</p>

<p>Note that this algorithm is only one small use for Markov chains, which are a much more general statistical concept.</p>

<h2 id="the-algorithm">The algorithm</h2>

<p>The algorithm is easy to explain: start with an input text whose phrases will be used to generate the output. For every pair of words in the input, record a list of the possible words that come after the word pair.</p>

<p>Once you’ve built that data structure, you can generate as much or as little output as you want. Start with any pair of words that occurs in the input, and then randomly pick one of the possible third words. Then move along, so the second word in the pair is the word you just generated, randomly pick another word, and so on.</p>

<p>That’s all there is to it!</p>

<p>This algorithm uses pairs of words, also called <a href="https://en.wikipedia.org/wiki/Bigram">bigrams</a>. You could generalise the algorithm to use single words or trigrams instead of pairs. However, as <em>The Practice of Programming</em> points out:</p>

<blockquote>
  <p>Making the prefix shorter tends to produce less coherent prose; making it longer tends
to reproduce the input text verbatim. For English text, using two words to select a
third is a good compromise; it seems to recreate the flavor of the input while adding
its own whimsical touch.</p>
</blockquote>

<p>Let’s work through an example. For small inputs, you want some repetition for it to work, so as input we’ll use the last five of the Ten Commandments from the King James Bible:</p>

<blockquote>
  <p>Thou shalt not kill.</p>

  <p>Thou shalt not commit adultery.</p>

  <p>Thou shalt not steal.</p>

  <p>Thou shalt not bear false witness against thy neighbour.</p>

  <p>Thou shalt not covet thy neighbours house, thou shalt not covet thy neighbours wife, nor his manservant, nor his maidservant, nor his ox, nor his ass, nor any thing that is thy neighbours.</p>
</blockquote>

<p>Here’s what the “possible third words” data structure looks like, showing the first few entries with the word pair on the left and the possibilities separated by <code>|</code> on the right:</p>

<div><pre><code>shalt not         kill. | commit | steal. | bear | covet | covet
Thou shalt        not | not | not | not | not
nor his           manservant, | maidservant, | ox, | ass,
not covet         thy | thy
covet thy         neighbours | neighbours
thy neighbours    house, | wife,
not kill.         Thou
kill. Thou        shalt
not commit        adultery.
...
</code></pre></div>

<p>So if you start with “shalt not”, you randomly choose “kill.”, “commit”, “steal.”, “bear”, or “covet” as the next word. Because “covet” appears twice in the list of possibilities, it’s twice as likely to be chosen as the next word.</p>

<p>You can see how we’ve included capital letters and punctuation in the words. This keeps the word-splitting simpler, but it also means the generated output will automatically generate “sentences” with capitalization and punctuation that actually occurred in the input. It’s quite a neat trick!</p>

<p>What does the generated output look like? Let’s try it using the Ten Commandments input above:</p>

<blockquote>
  <p>Thou shalt not bear false witness against thy neighbour. Thou shalt
not commit adultery. Thou shalt not steal. Thou shalt not covet thy
neighbours house, thou shalt not commit adultery. Thou shalt not covet
thy neighbours house, thou shalt not steal. Thou shalt not commit
adultery. Thou shalt not steal. Thou shalt not covet thy neighbours…</p>
</blockquote>

<p>As you can see, the problem with using such a small input text is that the output is often a verbatim copy of the input text – or something randomly close to it.</p>

<p>If you use a larger input text, you get much more interesting output.</p>

<h2 id="some-better-examples">Some better examples</h2>

<p>Below are some more fun outputs using larger input texts. We’ll generate 100 words from each input. The books were sourced from <a href="https://www.gutenberg.org/">Project Gutenberg</a>.</p>

<h3 id="using-my-articles">Using my articles</h3>

<p>Using the <a href="https://benhoyt.com/writings/">articles I’ve written</a> as input:</p>

<blockquote>
  <p>Especially if you need to return a value, but are now very flat – almost 5x as fast. Still, if you need a custom exception; use built-in exceptions if appropriate. Only break backwards compatibility if you’re on Linux, this uses the x86’s SSE/SIMD instructions to process CSV using AWK, such as <code>NF</code> are read-only in AWKGo. What does “Pythonic” mean? That’s a lot of fun. My recommendation: roll your own type-safe <code>OrderedMap&lt;int&gt;</code>. But because Lox strings don’t support escape sequences, there’s no <code>null</code> or <code>undefined</code>, and you have it! A minimalist Make in one of its revenue comes from the…</p>
</blockquote>

<p>I love how it captures most of my technical interests: performance, idiomatic code, backwards compatibility, AWK, CSV, little languages, and so on. It’s no ChatGPT, but if you squint the text looks quite plausible!</p>

<p>Note how the output even includes valid Markdown from the input (though I removed a couple of links).</p>

<h3 id="using-alice-in-wonderland">Using <em>Alice in Wonderland</em></h3>

<p>Here’s one using Lewis Carroll’s <em>Alice in Wonderland</em> as input. The book is more or less nonsense to begin with, so this almost works:</p>

<blockquote>
  <p>A large rose-tree stood near the entrance of the cakes, and was
delighted to find that her flamingo was gone in a great hurry; “and
their names were Elsie, Lacie, and Tillie; and they can’t prove I did:
there’s no use denying it. I suppose Dinah’ll be sending me on
messages next!” And she opened the door began sneezing all at once.
The Dormouse had closed its eyes again, to see what was going off into
a large fan in the pool, “and she sits purring so nicely by the hand,
it hurried off, without waiting for the limited right of replacement…</p>
</blockquote>

<h3 id="using-the-old-testament-from-the-king-james-bible">Using the Old Testament (from the King James Bible)</h3>

<p>Note how the output includes (nonsensical) verse numbers, which were part of the input.</p>

<p>Look for the roast the king of Babylon gets!</p>

<blockquote>
  <p>Benjamin, Jaasiel the son of Berachiah, the son of Jehoiakim king of
Gomorrah, and toward the holy gods is in your own will. 22:30 On the
south in the porch of the sea, over against the mount out of the LORD
shall smite the waves thereof. 107:26 They mount up to mount up to
bury them, them, their children, shewing to the priest; 13:17 And the
king of Babylon roasted in the name of the dust. 18:1 Then answered
one of them, did Joshua take, and put his hand over the servants of
Saul my father nor my life from perishing by…</p>
</blockquote>

<h3 id="using-the-new-testament-from-the-king-james-bible">Using the New Testament (from the King James Bible)</h3>

<p>Kind of funny that the New Testament output starts with “Moses”, a key Old Testament figure (but whose name appears 80 times in the New Testament too).</p>

<p>My computer also seems rather heretical: “we have preached the word of the body is the will of man”.</p>

<p>And yes, <a href="https://en.wiktionary.org/wiki/throughly">“throughly”</a> is an (archaic) word.</p>

<blockquote>
  <p>Moses, ye would that we dwell in them. 2:11 Wherefore remember, that
by my voice against them. 20:20 And they said, Is not this he that
humbleth himself shall be given, and he will throughly purge his
floor, and gather the wheat into the sea, and get victuals: for we
have preached the word of the body is the will of man, it shall be:
but we have sent for me? 10:30 And Jesus went into the kingdom of God.
5:6 Let no man may say, Thou fool, that he was nigh to Joppa, and the
other side. 10:33 But whosoever shall…</p>
</blockquote>

<h3 id="using-the-war-of-the-worlds">Using <em>The War of the Worlds</em></h3>

<p>And one more, for good measure. This is using <em>The War of the Worlds</em>, by H. G. Wells.</p>

<blockquote>
  <p>At Halliford I had the appearance of that blackness looks on a Derby
Day. My brother turned down towards the iron gates of Hyde Park. I had
seen two human skeletons—not bodies, but skeletons, picked clean—and
in the pit—that the man drove by and stopped at the fugitives, without
offering to help. The inn was closed, as if by a man on a bicycle,
children going to seek food, and told him it would be a cope of lead
to him, therefore. That, indeed, was the dawn of the houses facing the
river to Shepperton, and the others. An insane resolve possessed…</p>
</blockquote>

<p>With insane resolve, let’s now look at the Python code I used to implement this.</p>

<h2 id="python-implementation">Python implementation</h2>

<p>First, here’s the full program – it’s 24 lines with blanks and comments, 16 without:</p>

<div><pre><code><span>import</span> <span>collections</span><span>,</span> <span>random</span><span>,</span> <span>sys</span><span>,</span> <span>textwrap</span>

<span># Build possibles table indexed by pair of prefix words (w1, w2)
</span><span>w1</span> <span>=</span> <span>w2</span> <span>=</span> <span>''</span>
<span>possibles</span> <span>=</span> <span>collections</span><span>.</span><span>defaultdict</span><span>(</span><span>list</span><span>)</span>
<span>for</span> <span>line</span> <span>in</span> <span>sys</span><span>.</span><span>stdin</span><span>:</span>
    <span>for</span> <span>word</span> <span>in</span> <span>line</span><span>.</span><span>split</span><span>():</span>
        <span>possibles</span><span>[</span><span>w1</span><span>,</span> <span>w2</span><span>].</span><span>append</span><span>(</span><span>word</span><span>)</span>
        <span>w1</span><span>,</span> <span>w2</span> <span>=</span> <span>w2</span><span>,</span> <span>word</span>

<span># Avoid empty possibles lists at end of input
</span><span>possibles</span><span>[</span><span>w1</span><span>,</span> <span>w2</span><span>].</span><span>append</span><span>(</span><span>''</span><span>)</span>
<span>possibles</span><span>[</span><span>w2</span><span>,</span> <span>''</span><span>].</span><span>append</span><span>(</span><span>''</span><span>)</span>

<span># Generate randomized output (start with a random capitalized prefix)
</span><span>w1</span><span>,</span> <span>w2</span> <span>=</span> <span>random</span><span>.</span><span>choice</span><span>([</span><span>k</span> <span>for</span> <span>k</span> <span>in</span> <span>possibles</span> <span>if</span> <span>k</span><span>[</span><span>0</span><span>][:</span><span>1</span><span>].</span><span>isupper</span><span>()])</span>
<span>output</span> <span>=</span> <span>[</span><span>w1</span><span>,</span> <span>w2</span><span>]</span>
<span>for</span> <span>_</span> <span>in</span> <span>range</span><span>(</span><span>int</span><span>(</span><span>sys</span><span>.</span><span>argv</span><span>[</span><span>1</span><span>])):</span>
    <span>word</span> <span>=</span> <span>random</span><span>.</span><span>choice</span><span>(</span><span>possibles</span><span>[</span><span>w1</span><span>,</span> <span>w2</span><span>])</span>
    <span>output</span><span>.</span><span>append</span><span>(</span><span>word</span><span>)</span>
    <span>w1</span><span>,</span> <span>w2</span> <span>=</span> <span>w2</span><span>,</span> <span>word</span>

<span># Print output wrapped to 70 columns
</span><span>print</span><span>(</span><span>textwrap</span><span>.</span><span>fill</span><span>(</span><span>' '</span><span>.</span><span>join</span><span>(</span><span>output</span><span>)))</span>
</code></pre></div>

<p>You can judge for yourself, but I think it’s fairly readable.</p>

<p>The program expects the number of words as a command-line argument (<code>sys.argv[1]</code>), and the input text on standard input. To run it, use a command like this:</p>

<div><pre><code>$ python3 markov.py 100 &lt;AliceInWonderland.txt 
A large rose-tree stood near the entrance of the cakes, and was
...
</code></pre></div>

<p>The code is also available as a GitHub Gist: <a href="https://gist.github.com/benhoyt/619cf3113866450aa31d8a2c1f8e01dc">markov.py</a>. This program is hardly original – I hereby give you permission to do whatever you want with it.</p>

<h2 id="conclusion">Conclusion</h2>

<p>I find it fascinating that a simple data structure and a random number generator can produce such interesting output.</p>

<p>I also think the trick of including capital letters and punctuation in the recorded “words” is quite clever. It’s not a trick at all, of course, but an elegant design choice that makes the program simpler <em>and</em> the output better. I wonder how many similar design choices are hiding in existing programs, waiting to be simplified?</p>

<p>Have fun generating text from your own inputs!</p>

<p>I’d love it if you <a href="https://github.com/sponsors/benhoyt/">sponsored me on GitHub</a> – it will motivate me to work on my open source projects and write more good content. Thanks!</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Meshtastic: An open source, off-grid, decentralized, mesh network (257 pts)]]></title>
            <link>https://meshtastic.org/</link>
            <guid>38829448</guid>
            <pubDate>Mon, 01 Jan 2024 02:57:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://meshtastic.org/">https://meshtastic.org/</a>, See on <a href="https://news.ycombinator.com/item?id=38829448">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__docusaurus_skipToContent_fallback"><header><div><h2></h2><p>An open source, off-grid, decentralized, mesh network built to run on affordable, low-power devices</p></div></header><main><div><h3>Connect with us.</h3></div><div><h2>Getting started with Meshtastic is as easy as 1, 2, 3!</h2><ul><div><p>Hardware you will want to consider:</p><ul><li>Radio</li><li>Battery</li><li>Case</li><li>Antenna (most devices include an antenna, but the quality can be a bit of a mixed bag from some suppliers on stock antennas)</li></ul></div><div><p>The Meshtastic Web-Based Flasher &amp; Clients can assist you in flashing the firmware and configuring settings.</p></div><div><p>Applications are available for the following systems:</p><ul><li>Android</li><li>iOS</li><li>Mac</li><li>Web Browser</li></ul></div></ul></div><br></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I Vote on Plagiarism Cases at Harvard College. Gay's Getting Off Easy (117 pts)]]></title>
            <link>https://www.thecrimson.com/article/2023/12/31/honor-council-member-gay/</link>
            <guid>38828804</guid>
            <pubDate>Mon, 01 Jan 2024 00:50:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thecrimson.com/article/2023/12/31/honor-council-member-gay/">https://www.thecrimson.com/article/2023/12/31/honor-council-member-gay/</a>, See on <a href="https://news.ycombinator.com/item?id=38828804">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><span>I have served as a voting member of the Harvard College Honor Council, the body tasked with upholding the College’s community standards of academic integrity.</span></p><p><span>In my time on the Council, I heard dozens of cases. When students — my classmates, peers, and friends — appear before the council, they are distraught. For most, it is the worst day of their college careers. For some, it is the worst day of their lives. They often cry.</span></p><p><span>It is because I have seen first-hand how heart-wrenching these decisions can be, and still think them necessary, that I call on University President Claudine Gay to resign for her numerous and serious violations of academic ethics.</span></p><p><span>Let’s compare the treatment of Harvard undergraduates suspected of plagiarism with that of their president.</span></p><p><span>A plurality of the Honor Council’s investigations concern plagiarism. In the 2021-22 school year, the last year for which data is publicly available, <a href="https://www.thecrimson.com/article/2023/5/22/harvard-honor-council-2021-2022/">43 percent of cases involved plagiarism</a> or misuse of sources.</span></p><p><span>Omitting quotation marks, citing sources incompletely, or not citing sources at all constitutes plagiarism according to Harvard’s definitions.</span></p><p><span>In my experience, when students omit quotation marks and citations, as President Gay did, the sanction is usually one term of probation — a permanent mark on a student’s record. A student on probation is no longer considered in good standing, disqualifying them from opportunities like fellowships and study-abroad programs. Good standing is also required to receive a degree.</span></p><p><span>What is striking about the allegations of plagiarism against President Gay is that the improprieties are routine and pervasive.</span></p><p><span>She is accused of plagiarism in her dissertation and at least two of her 11 journal articles. Two sentences from the acknowledgement section of her dissertation even seem to have been copied from another work.</span></p><p><span>According to the Honor Council’s procedures, the response to a violation depends on the “seriousness of the infraction” and “extenuating circumstances, including the extent to which a student has had similar trouble before.” In other words, while a single lifted paragraph could be blamed on a lapse in judgment, a pattern is more concerning.</span></p><p><span>In my experience, when a student is found responsible for multiple separate Honor Code violations, they are generally required to withdraw — i.e., suspended — from the College for two semesters. Since the Council was established in 2015, roughly 16 percent of students who have appeared before us have been required to withdraw.</span></p><p><span>It is a serious thing for the Council to render this judgment, and I have never taken any such vote lightly. Voting to suspend a peer with whom I might share a dorm, club, or class is not easy. We have even voted to suspend seniors just about to graduate.</span></p><p><span>But strict sanctions are necessary to demonstrate that our community values academic integrity. Cheating on exams is not okay. Plagiarism is not okay.</span></p><p><span>It may be true that the plagiarism allegations against President Gay fall short of the Faculty of Arts and Sciences’ interim policy on research misconduct. She may not have “intentionally, knowingly, and recklessly” tried to represent the work of her doctoral advisor and others as her own. And there is no evidence that any of her arguments posited as original contributions were plagiarized.</span></p><p><span>But President Gay’s pattern of mistakes is serious, and the Harvard Corporation should not minimize these allegations of plagiarism, <a href="https://www.thecrimson.com/article/2023/12/12/gay-stays-in-office-corporation-support/">as it has readily done</a>.</span></p><p><span>In a Dec. 12 University-wide letter, the Corporation described the alleged plagiarism as “a few instances of inadequate citation.” The letter lauded President Gay for “proactively” correcting her articles by inserting citations and quotation marks.</span></p><p><span>By definition, Gay’s corrections were not proactive but reactive — she only made them after she was caught. And that the Corporation considers her corrections an adequate response is not fair to undergraduates, who cannot simply submit corrections to avoid penalties.</span></p><p><span>When my peers are found responsible for multiple instances of inadequate citation, they are often suspended for an academic year. When the president of their university is found responsible for the same types of infractions, the fellows of the Corporation “unanimously stand in support of” her.</span></p><p><span>There is one standard for me and my peers and another, much lower standard for our University’s president. The Corporation should resolve the double standard by demanding her resignation.</span></p><p><span><em><strong>Editor’s Note:</strong> In order to protect the author from retaliation, and because the proceedings of the Harvard College Honor Council are sensitive and confidential, we made the decision to grant this author anonymity.</em></span></p><p><span><em>Readers should also note that online commenting has been disabled for this piece in an effort to help protect the author’s identity.</em></span></p><p><span><em>—Tommy Barone and Jacob M. Miller, Editorial Chairs</em></span></p><p><span><em>—J. Sellers Hill, President</em></span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: What software/tech blogs/magazines should I be reading in 2024? (136 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=38828682</link>
            <guid>38828682</guid>
            <pubDate>Mon, 01 Jan 2024 00:27:12 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=38828682">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="38829907"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38829907" href="https://news.ycombinator.com/vote?id=38829907&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>Slightly contrarian perspective: I'm trying to read less temporal (things that matter <i>now</i>) and more fundamental (stuff that mattered 1+ year ago and will still matter in 1+ year, with even wider intervals for non-tech content).<p>This does result in missing ~important things occasionally (e.g. I <i>still</i> don't know what happened with SamA at OpenAI, and yes, I am curious), but that's a small price to pay for greater intellectual sanctity and an increased attention budget to distribute across important tasks or funnel into something hyper focussed.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38829943"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38829943" href="https://news.ycombinator.com/vote?id=38829943&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I am trying to do this as well, but being surrounded by news/social/stream outlets that just push unnecessary hype its hard to achieve this. Any recommendation on how to filter out the junk?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38829961"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38829961" href="https://news.ycombinator.com/vote?id=38829961&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>Read Books, is the answer I think.<p>The entire online news chain is polluted it seems to me.</p><p>If you have access to a decent Library, I believe the benefits to the individual by using it are:</p><p>1) economic, save you money
2) social, you interact with people
3) physical, you are moving around 
4) mental health, you are using a different part of your brain and being proactive by planning to engage in new knowledge</p><p>Then hopefully you can feel positive, optimistic, and look forward to reading the books you just borrowed!</p><p>Then you reappear the cycle when you return them!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38830098"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_38830098" href="https://news.ycombinator.com/vote?id=38830098&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I really like this viewpoint. I can understand more now why elderly people use the library so much (beyond the obvious technical divide).</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="38830063"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38830063" href="https://news.ycombinator.com/vote?id=38830063&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>Some tips:<p>- If material is a few years old yet still very highly regarded, it's <i>probably</i> worthy.</p><p>- Prepare yourself some content in advance that's both interesting and useful so it's low-effort to switch if you find yourself reading or scrolling out of boredom. I have rails guides bookmarked for this purpose - 5 minutes waiting for an uber gains me some useful knowledge while alleviating boredom.</p><p>- Search wide, be selective. A few good reads is better than a lot of average/bad ones. Be prepared to skip chapters if it isn't delivering value after 2-3 chapters, and quit entirely if you can't find worthy content after reading a few chapters + table of contents and skimming a few more chapters. Give it a little longer if you're unfamiliar with the topic or style.</p><p>- A lot of 200+ page books could have instead been 10 page essays. Quickly move over unimportant sections if you get the impression they're filler. Same (or, more so) for other mediums too.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38829952"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38829952" href="https://news.ycombinator.com/vote?id=38829952&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I think a lot of good tech bloggers (and I try to be one of them) are also trying to focus on content that is less of-the-moment in nature.  See Dan Luu's blog for great examples.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38830270"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38830270" href="https://news.ycombinator.com/vote?id=38830270&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I strongly recommend slogging through both the old and new testaments in that case. Bang for buck, you're not going to find a better lens on western paradigmatics</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="38829811"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38829811" href="https://news.ycombinator.com/vote?id=38829811&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>Paged Out! Institute
<a href="https://pagedout.institute/" rel="nofollow">https://pagedout.institute/</a><p># What is Paged Out!?</p><p>Paged Out! is a free experimental (one article == one page) technical magazine about programming (especially programming tricks!), hacking, security hacking, retro computers, modern computers, electronics, demoscene, and other similar topics.</p><p>It's made by the community for the community. And it's not-for-profit (though in time, we hope it will be self-sustained) - this means that the issues will always be free to download, share, and print.</p><p>&gt; Reminiscent of the vintage original Freaker/Hacker Publications, though clearly devoted to one page technical articles.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38830205"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38830205" href="https://news.ycombinator.com/vote?id=38830205&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>That’s a real little gem! I never heard of it before but I love the format and the content, thank you! Any other *zine suggestions ?</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38830195"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38830195" href="https://news.ycombinator.com/vote?id=38830195&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>This is so cool. I wish I could read this right now but it's late so I'll have to dream about it.<p>Happy new year btw, thanks for posting this!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38829663"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38829663" href="https://news.ycombinator.com/vote?id=38829663&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>None of them. Study Knuth. Study the Intel manuals. Study “The Art of Multiprocessor Programming”. Study compilers. Study TCP/IP. Study algorithms and data structures. Write lots of code for all of those things.<p>Disregard the noise. Ban yourself from reading blogs and magazines and tech news. Focus on what is fundamental to the field. Look where nobody else is looking.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38829672"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38829672" href="https://news.ycombinator.com/vote?id=38829672&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I don't know about this. It seems that there is more demand for high level work than low level. But I hope you are right!</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38829677"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38829677" href="https://news.ycombinator.com/vote?id=38829677&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I think OP is saying to go off and study tech and build shit, don't waste time reading hype noise BS. I agree!</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38829755"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_38829755" href="https://news.ycombinator.com/vote?id=38829755&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>If I did I wouldn't have seen their comment and given that perspective consideration. It's almost like...a reasonable balance is the best path. lol</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38830312"><td></td></tr>
            <tr id="38830140"><td></td></tr>
                        <tr id="38830138"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38830138" href="https://news.ycombinator.com/vote?id=38830138&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>Good knowledge of fundamentals translate well into high level work.<p>Understanding the timeless things deeply will serve you much better than continually trying to understand what is hyped only to have to constantly move on to the next hyped thing before being able to get more thana superficial understanding.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38829919"><td></td></tr>
                <tr id="38830018"><td></td></tr>
                <tr id="38830094"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_38830094" href="https://news.ycombinator.com/vote?id=38830094&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>Embedded is not the only low level work there is. Databases for example require a lot of low level knowledge, but the market big enough to pay well.</span></p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="38830210"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38830210" href="https://news.ycombinator.com/vote?id=38830210&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>&gt; Study the Intel manuals.<p>Which Intel manuals in particular? How much relevance remains in Intel's content given the popularity of ARM nowadays?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38830107"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38830107" href="https://news.ycombinator.com/vote?id=38830107&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>Guys like Sam Altman did exactly not this. They gained breadth in what was specifically relevant to the problem being solved.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38829901"><td></td></tr>
                  <tr id="38829639"><td></td></tr>
                <tr id="38829816"><td></td></tr>
                  <tr id="38829443"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38829443" href="https://news.ycombinator.com/vote?id=38829443&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>I've recently started reading bluesnews again after a 15+ year hiatus. I love how the site seems to be more or less exactly the same. Runs great on all my devices (crazy I have to point that out in modern times).<p>For those that don't know it's primarily a game news site but has some daily rundowns of some various tech news stories so I think it fits the criteria.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38829769"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38829769" href="https://news.ycombinator.com/vote?id=38829769&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I second bluesnews. It reminds me of a bygone era when news aggregators like bluesnews were all curated by a person/small team and while the content is not exhaustive, it is actually enough.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="38829224"><td></td></tr>
                <tr id="38829601"><td></td></tr>
                <tr id="38829682"><td></td></tr>
                  <tr id="38829563"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38829563" href="https://news.ycombinator.com/vote?id=38829563&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>Agreed, many HN posts discussing articles/posts from the aforementioned sites have comments that give more insight than TFA and maybe even corrections. Which you would not get by reading the articles/posts alone.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38829703"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38829703" href="https://news.ycombinator.com/vote?id=38829703&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I frequently find myself spending as much or more time reading the HN comment section than reading the submitted article/link itself.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38829765"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_38829765" href="https://news.ycombinator.com/vote?id=38829765&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>Agreed. I put all my effort into commenting and simply don’t read any of the articles/links themselves.</span></p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="38829622"><td></td></tr>
                <tr id="38829756"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38829756" href="https://news.ycombinator.com/vote?id=38829756&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span><a href="https://www.acm.org/publications/openaccess" rel="nofollow">https://www.acm.org/publications/openaccess</a><p><i>&gt; ACM will become fully Open Access by the end of 2025, but we have already begun that process in phases and large parts of the ACM Digital Library are already Open Access today, including the first 50 years of ACM's archive - all articles published between 1951 and 2000 have been placed in front of the ACM Digital Library subscription paywall.</i>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38829900"><td></td></tr>
            <tr id="38829776"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38829776" href="https://news.ycombinator.com/vote?id=38829776&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I've found a small number of indie game devlogs to be inspiring in seeing the amount of shit 1 guy can get done</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38829793"><td></td></tr>
                <tr id="38829904"><td></td></tr>
                        <tr id="38829627"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38829627" href="https://news.ycombinator.com/vote?id=38829627&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>In addition to the answers here, I'd recommend checking with your local library. I recently found out that mine has a subscription to Udemy. They have tech magazines as well. A great resource that can fly under the radar sometimes.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38830069"><td></td></tr>
            <tr id="38829936"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38829936" href="https://news.ycombinator.com/vote?id=38829936&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>NextApex -- my eclectic digest (nextapex.co) with a newsletter at nextapex.beehiiv.com -- basically covering science, tech, ai breakthrus in a 3-min rundown.  Made a dynamic link sharing site that operates like HN to go along with it and make collation easier.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38829821"><td></td></tr>
                <tr id="38830035"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38830035" href="https://news.ycombinator.com/vote?id=38830035&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>This. Very high-quality writeups. Also, one should read Roots of Progress newsletters - I found the signal:noise ratio extremely high for these two newsletters.<p>The former is more CS x economy. The latter is more Science x history x economy.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38829944"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38829944" href="https://news.ycombinator.com/vote?id=38829944&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><p><span>Like calling a physicist : "Neumann meets Einstein"<p>&gt; Stratechery meets Money Stuff</p><p>Couldn't imagine more glowing praise for a newsletter. Bookmarked.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38830191"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38830191" href="https://news.ycombinator.com/vote?id=38830191&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I want to read a ton of stuff on physics and science. The past few weeks I've read about thermodynamics,  next I want to read about quantum physics, optics, then math. Any recommendations for a beginner?</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38830062"><td></td></tr>
            <tr id="38830122"><td></td></tr>
            <tr id="38829775"><td></td></tr>
            <tr id="38829647"><td></td></tr>
            <tr id="38829581"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38829581" href="https://news.ycombinator.com/vote?id=38829581&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I would love any recommendations for physical magazines. I know they are mostly ads and yada yada, but I like to sit down with an actual magazine for some reason.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38829861"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38829861" href="https://news.ycombinator.com/vote?id=38829861&amp;how=up&amp;goto=item%3Fid%3D38828682"></a></center>    </td><td><br><div>
                  <p><span>I strongly recommend Foreign Affairs magazine (<a href="https://www.foreignaffairs.com/" rel="nofollow">https://www.foreignaffairs.com/</a>).  It's full of essays from the serious policy and academic establishment. You might disagree with them heartily, but they are well reasoned and don't hew to any particular political viewpoint (or rather, the magazine has contributions from all sides). About $60 USD per year for six issues plus an app, downloadable articles and audio, and website.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38829614"><td></td></tr>
            <tr id="38829767"><td></td></tr>
                  <tr id="38829984"><td></td></tr>
            <tr id="38829792"><td></td></tr>
            <tr id="38829505"><td></td></tr>
            </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Nim on a Real-Time Operating System: Apache NuttX RTOS and Ox64 BL808 SBC (102 pts)]]></title>
            <link>https://lupyuen.codeberg.page/articles/nim.html</link>
            <guid>38828619</guid>
            <pubDate>Mon, 01 Jan 2024 00:15:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lupyuen.codeberg.page/articles/nim.html">https://lupyuen.codeberg.page/articles/nim.html</a>, See on <a href="https://news.ycombinator.com/item?id=38828619">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <!--[if lte IE 8]>
    <div class="warning">
        This old browser is unsupported and will most likely display funky
        things.
    </div>
    <![endif]-->

        <!-- Begin scripts/rustdoc-before.html: Pre-HTML for Custom Markdown files processed by rustdoc, like chip8.md -->

    <!-- Begin Theme Picker -->
    
    
    
    <!-- Theme Picker -->

    <!-- End scripts/rustdoc-before.html -->
    

    
    <nav id="TOC"><ul>
<li><a href="#basic-nim-from-scratch">1 Basic Nim from scratch</a><ul></ul></li>
<li><a href="#blink-an-led">2 Blink an LED</a><ul></ul></li>
<li><a href="#import-nuttx-functions">3 Import NuttX Functions</a><ul></ul></li>
<li><a href="#run-nim-on-qemu">4 Run Nim on QEMU</a><ul></ul></li>
<li><a href="#nim-blinky-on-ox64">5 Nim Blinky on Ox64</a><ul></ul></li>
<li><a href="#inside-nim-on-nuttx">6 Inside Nim on NuttX</a><ul></ul></li>
<li><a href="#led-driver-for-ox64">7 LED Driver for Ox64</a><ul></ul></li>
<li><a href="#whats-next">8 What’s Next</a><ul></ul></li>
<li><a href="#appendix-build-nuttx-for-qemu">9 Appendix: Build NuttX for QEMU</a><ul></ul></li>
<li><a href="#appendix-build-nuttx-for-ox64">10 Appendix: Build NuttX for Ox64</a><ul></ul></li>
<li><a href="#appendix-opensbi-timer-for-nuttx">11 Appendix: OpenSBI Timer for NuttX</a><ul></ul></li></ul></nav><p>📝 <em>1 Jan 2024</em></p>
<p><img src="https://lupyuen.codeberg.page/images/nim-ox64.png" alt="Apache NuttX RTOS on Ox64 BL808 RISC-V SBC: Works great with Nim!"></p>
<p>Happy New Year! 2024 is here and we’re running <a href="https://www.hackster.io/lupyuen/8-risc-v-sbc-on-a-real-time-operating-system-ox64-nuttx-474358"><strong>Apache NuttX RTOS</strong></a> (Real-Time Operating System) on Single-Board Computers with <strong>plenty of RAM</strong>…</p>
<p>Like <a href="https://wiki.pine64.org/wiki/Ox64"><strong>Pine64 Ox64 BL808</strong></a> RISC-V SBC with <strong>64 MB RAM!</strong> (Pic below)</p>
<p><em>How will we use the Plentiful RAM?</em></p>
<p>In this article, we create a <strong>Blinky LED</strong> app with a Modern, Garbage-Collected Language: <a href="https://nim-lang.org/"><strong>Nim Programming Language</strong></a>.</p>
<p><a href="https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)"><strong>Garbage-Collected</strong></a> Languages (like Nim) require <a href="https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)#Disadvantages"><strong>a bit more RAM</strong></a> than Low-Level Languages (like C). Perfect for our roomy (and vroomy) SBC!</p>
<p><a href="https://youtube.com/shorts/KCkiXFxBgxQ">(Watch the <strong>Demo on YouTube</strong>)</a></p>
<p><em>But we need a RISC-V SBC?</em></p>
<p>No worries! We’ll run Nim + NuttX on the <strong>QEMU Emulator</strong> for 64-bit RISC-V. Which works great on Linux, macOS and Windows machines.</p>
<p>Everything that happens on Ox64 SBC, we’ll see the <strong>exact same thing</strong> in QEMU!</p>
<p><a href="https://lupyuen.codeberg.page/images/nim-blink.jpg">(Except the <strong>blinkenlight</strong>)</a></p>
<p><em>Hmmm Garbage Collection… Won’t it jitter: run-pause-run-pause?</em></p>
<p>The fine folks at <a href="https://www.wildernesslabs.co/"><strong>Wilderness Labs</strong></a> are running <a href="https://www.wildernesslabs.co/developers"><strong>.NET on NuttX</strong></a> with Garbage Collection. <a href="https://nim-lang.org/blog/2022/11/11/a-cost-model-for-nim.html"><strong>Optimising for performance</strong></a> really helps!</p>
<p><a href="https://www.mdpi.com/2079-9292/12/1/143">(See <strong>TinyGo</strong> and <strong>MicroPython</strong>)</a></p>
<p><em>How is Nim different from Rust and Zig?</em></p>
<p>We’ve tested <a href="https://lupyuen.codeberg.page/articles/rusti2c"><strong>Rust on NuttX</strong></a> and <a href="https://lupyuen.codeberg.page/articles/lvgl4"><strong>Zig on NuttX</strong></a>. <strong>Nim is different</strong> because it…</p>
<ul>
<li>
<p><strong>Compiles to C</strong> (instead of Machine Code)</p>
</li>
<li>
<p>Syntax is <strong>Python-like</strong> (but Statically Compiled)</p>
</li>
<li>
<p>Automatic <strong>Garbage Collection</strong> (no Borrow Checker)</p>
</li>
<li>
<p>And it’s <a href="https://nim-lang.org/faq.html"><strong>Memory Safe</strong></a> (like Rust)</p>
</li>
</ul>
<p>First we say hello to Nim…</p>
<p><img src="https://lupyuen.codeberg.page/images/ox64-solder.jpg" alt="Pine64 Ox64 64-bit RISC-V SBC (Sorry for my substandard soldering)"></p>
<h2 id="basic-nim-from-scratch"><a href="#basic-nim-from-scratch">1 Basic Nim from scratch</a></h2>
<p><em>(3 languages in a title heh heh)</em></p>
<p>This is the <strong>simplest Nim Program</strong> that will run on NuttX: <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/hello_nim_async.nim#L54-L63">hello_nim_async.nim</a></p>
<div><pre><code>## Main Function in Nim.
## Will be called by NuttX, so we export to C.
proc hello_nim() {.exportc, cdecl.} =

  ## Print something
  echo "Hello Nim!"

  ## Force the Garbage Collection
  GC_runOrc()
</code></pre></div>
<p>Which looks a lot like Python!</p>
<p><em>What’s GC_runOrc?</em></p>
<p>Our Nim Program will be <strong>called by C</strong>. (Remember NuttX?)</p>
<p>And Nim works with <a href="https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)"><strong>Garbage Collection</strong></a>. Thus we call <a href="https://nim-lang.org/blog/2022/11/11/a-cost-model-for-nim.html"><strong>GC_runOrc</strong></a> to…</p>
<ul>
<li>
<p>Force the Garbage Collection to complete</p>
</li>
<li>
<p>Clean up all remaining Nim Objects</p>
</li>
<li>
<p>Then return to C and NuttX</p>
</li>
</ul>
<p><em>What if we forget to call GC_runOrc?</em></p>
<p>Erm don’t! To make it unforgettable, we <a href="https://nim-lang.org/docs/manual.html#exception-handling-defer-statement"><strong><code>defer</code></strong></a> the Garbage Collection: <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/hello_nim_async.nim#L54-L63">hello_nim_async.nim</a></p>
<div><pre><code>## Main Function in Nim
proc hello_nim() {.exportc, cdecl.} =

  ## On Return: Force the Garbage Collection
  defer: GC_runOrc()

  ## Print something
  echo "Hello Nim!"
</code></pre></div>
<p><a href="https://nim-lang.org/docs/manual.html#exception-handling-defer-statement"><strong><code>defer</code></strong></a> ensures that the Garbage Collection <strong>will always happen</strong>, as soon as we return from the Main Function.</p>
<p>Now we do something cool and enlightening…</p>
<p>(<a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/hello_nim_async.nim#L54-L67"><strong>hello_nim</strong></a> is called by our C Program <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/hello_nim_main.c#L35-L42"><strong>hello_nim_main.c</strong></a>)</p>
<p><img src="https://lupyuen.codeberg.page/images/nim-code.jpg" alt="Blink an LED with Nim"></p>
<h2 id="blink-an-led"><a href="#blink-an-led">2 Blink an LED</a></h2>
<p>This is how we <strong>blink an LED</strong> with Nim on NuttX: <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/hello_nim_async.nim#L19-L50">hello_nim_async.nim</a></p>
<div><pre><code>## Blink the LED
proc blink_led() =

  ## Open the LED Driver
  echo "Opening /dev/userleds"
  let fd = c_open("/dev/userleds", O_WRONLY)

  ## Check the File Descriptor for error
  if fd &lt; 0:
    echo "Failed to open /dev/userleds"
    return
</code></pre></div>
<p>First we call the NuttX Function <strong><code>open</code></strong> to access the <strong>LED Driver</strong>.</p>
<p>We might forget to <strong><code>close</code></strong> the LED Driver (in case of error), so we <a href="https://nim-lang.org/docs/manual.html#exception-handling-defer-statement"><strong><code>defer</code></strong></a> the closing…</p>
<div><pre><code>  ## On Return: Close the LED Driver
  defer: c_close(fd)
</code></pre></div>
<p>Next we call the NuttX Function <strong><code>ioctl</code></strong> to flip <strong>LED 0 to On</strong>…</p>
<div><pre><code>  ## Turn on LED
  echo "Set LED 0 to 1"
  var ret = c_ioctl(fd, ULEDIOC_SETALL, 1)
  if ret &lt; 0:
    echo "ioctl(ULEDIOC_SETALL) failed"
    return
</code></pre></div>
<p><a href="https://github.com/apache/nuttx/blob/master/include/nuttx/leds/userled.h#L57-L66"><strong>ULEDIOC_SETALL</strong></a> accepts a Bit Mask of LED States. The value <strong><code>1</code></strong> says that <strong>LED 0</strong> (Bit 0) will be flipped On.</p>
<p>(Other LEDs will be flipped Off)</p>
<p>We <strong>pause a while</strong>…</p>
<div><pre><code>  ## Wait a second (literally)
  ## Because 1 million microseconds = 1 second
  echo "Waiting..."
  c_usleep(1000_000)
</code></pre></div>
<p>Finally we flip <strong>LED 0 to Off</strong>…</p>
<div><pre><code>  ## Turn off LED
  echo "Set LED 0 to 0"
  ret = c_ioctl(fd, ULEDIOC_SETALL, 0)
  if ret &lt; 0:
    echo "ioctl(ULEDIOC_SETALL) failed"
    return

  ## Wait again
  echo "Waiting..."
  c_usleep(1000_000)
</code></pre></div>
<p>In our <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/hello_nim_async.nim#L54-L67"><strong>Main Function</strong></a>: We call the above function <strong>20 times</strong> to blink our LED (pic below)…</p>
<div><pre><code>## Main Function in Nim
proc hello_nim() {.exportc, cdecl.} =

  ## On Return: Force the Garbage Collection
  defer: GC_runOrc()

  ## Blink the LED 20 times
  for loop in 0..19:
    blink_led()
</code></pre></div>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello/hello_main.c#L40-L85">(Looks mighty similar to the <strong>C Version</strong>)</a></p>
<p>And we’re almost done! Nim needs to discover our NuttX Functions…</p>
<p><img src="https://lupyuen.codeberg.page/images/nim-blink2.jpg" alt="Apache NuttX RTOS on Ox64 BL808 RISC-V SBC: Nim blinks our LED"></p>
<h2 id="import-nuttx-functions"><a href="#import-nuttx-functions">3 Import NuttX Functions</a></h2>
<p><em>How will Nim know about open, close, ioctl, usleep?</em></p>
<p>We <strong>import the NuttX Functions</strong> from C into Nim: <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/hello_nim_async.nim#L1-L19">hello_nim_async.nim</a></p>
<div><pre><code>## Import NuttX Functions from C.
## Based on https://github.com/nim-lang/Nim/blob/devel/lib/std/syncio.nim

proc c_open(filename: cstring, mode: cint): cint {.
  importc: "open",
  header: "&lt;fcntl.h&gt;".}

proc c_close(fd: cint): cint {.
  importc: "close",
  header: "&lt;fcntl.h&gt;",
  discardable.}

proc c_ioctl(fd: cint, request: cint): cint {.
  importc: "ioctl",
  header: "&lt;sys/ioctl.h&gt;",
  varargs.}

proc c_usleep(usec: cuint): cint {.
  importc: "usleep",
  header: "&lt;unistd.h&gt;",
  discardable.}
</code></pre></div>
<p><a href="https://nim-lang.org/docs/manual.html#statements-and-expressions-discard-statement">(<strong>discardable</strong> tells Nim Compiler that the Return Value is Optional)</a></p>
<p>We do the same for <strong>NuttX Macros</strong>…</p>
<div><pre><code>## Import NuttX Macros from C.
## Based on https://github.com/nim-lang/Nim/blob/devel/lib/std/syncio.nim

var O_WRONLY {.
  importc: "O_WRONLY", 
  header: "&lt;fcntl.h&gt;".}: cint

var ULEDIOC_SETALL {.
  importc: "ULEDIOC_SETALL", 
  header: "&lt;nuttx/leds/userled.h&gt;".}: cint
</code></pre></div>
<p>We’re ready to run this!</p>
<p><img src="https://lupyuen.codeberg.page/images/nim-qemu.png" alt="Nim with Apache NuttX RTOS on QEMU RISC-V (64-bit)"></p>
<h2 id="run-nim-on-qemu"><a href="#run-nim-on-qemu">4 Run Nim on QEMU</a></h2>
<p><em>How to run Nim Blinky on QEMU Emulator?</em></p>
<p>We begin by <strong>booting NuttX RTOS</strong> on RISC-V QEMU Emulator (64-bit)…</p>
<ol>
<li>
<p>Install <a href="https://www.qemu.org/download/"><strong>QEMU Emulator for RISC-V (64-bit)</strong></a>…</p>
<div><pre><code>## For macOS:
brew install qemu

## For Debian and Ubuntu:
sudo apt install qemu-system-riscv64
</code></pre></div></li>
<li>
<p>Download <strong><code>nuttx</code></strong> from the <a href="https://github.com/lupyuen/nuttx-nim/releases/tag/qemu-1"><strong>NuttX Release</strong></a>…</p>
<p><a href="https://github.com/lupyuen/nuttx-nim/releases/download/qemu-1/nuttx"><strong>nuttx: NuttX Image for 64-bit RISC-V QEMU</strong></a></p>
<p>If we prefer to <strong>build NuttX</strong> ourselves: <a href="https://lupyuen.codeberg.page/articles/nim#appendix-build-nuttx-for-qemu"><strong>Follow these steps</strong></a></p>
</li>
<li>
<p>Start the <strong>QEMU RISC-V Emulator</strong> (64-bit) with NuttX RTOS…</p>
<div><pre><code>qemu-system-riscv64 \
  -semihosting \
  -M virt,aclint=on \
  -cpu rv64 \
  -smp 8 \
  -bios none \
  -kernel nuttx \
  -nographic
</code></pre></div>
<p><a href="https://lupyuen.codeberg.page/articles/riscv#qemu-emulator-for-risc-v">(About the <strong>QEMU Options</strong>)</a></p>
</li>
<li>
<p>NuttX is now running in the <strong>QEMU Emulator</strong>! (Pic above)</p>
<div><pre><code>NuttShell (NSH) NuttX-12.0.3
nsh&gt;
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa#file-qemu-nuttx-nim-build-log-L199-L208">(See the <strong>Complete Log</strong>)</a></p>
</li>
<li>
<p>At the NuttX Prompt, enter “<strong>hello_nim</strong>”…</p>
<div><pre><code>nsh&gt; hello_nim
Hello Nim!
Opening /dev/userleds
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa#file-qemu-nuttx-nim-build-log-L472-L497">(Enter “<strong>help</strong>” to see the available commands)</a></p>
</li>
<li>
<p>Nim on NuttX blinks our <strong>Simulated LED</strong>…</p>
<div><pre><code>Set LED 0 to 1
board_userled_all: led=0, val=1
Waiting...

Set LED 0 to 0
board_userled_all: led=0, val=0
Waiting...

Set LED 0 to 1
board_userled_all: led=0, val=1
Waiting...
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa#file-qemu-nuttx-nim-build-log-L210-L471">(See the <strong>Complete Log</strong>)</a></p>
</li>
<li>
<p>To Exit QEMU: Press <strong><code>Ctrl-A</code></strong> then <strong><code>x</code></strong></p>
</li>
</ol>
<p>Now we step out from the Virtual World into the Real World (like “The Matrix”)…</p>
<p><img src="https://lupyuen.codeberg.page/images/nim-wiring.jpg" alt="Connect an LED to Ox64 SBC at GPIO 29, Pin 21"></p>
<h2 id="nim-blinky-on-ox64"><a href="#nim-blinky-on-ox64">5 Nim Blinky on Ox64</a></h2>
<p><em>Will Nim Blinky run on a real RISC-V SBC?</em></p>
<p>Yep! Connect an LED to Ox64 SBC at <strong>GPIO 29, Pin 21</strong> (pic above)…</p>
<div><table><thead><tr><th>Connect</th><th>To</th><th>Wire</th></tr></thead><tbody>
<tr><td><strong>Ox64 Pin 21</strong> <br><em>(GPIO 29)</em></td><td><strong>Resistor</strong> <br><em>(47 Ohm)</em></td><td>Red</td></tr>
<tr><td><strong>Resistor</strong> <br><em>(47 Ohm)</em></td><td><strong>LED +</strong> <br><em>(Curved Edge)</em></td><td>Breadboard</td></tr>
<tr><td><strong>LED -</strong> <br><em>(Flat Edge)</em></td><td><strong>Ox64 Pin 23</strong> <br><em>(GND)</em></td><td>Black</td></tr>
</tbody></table>
</div>
<p><a href="https://wiki.pine64.org/wiki/File:Ox64_pinout.png">(See the <strong>Ox64 Pinout</strong>)</a></p>
<p>(Resistor is <strong>47 Ohm</strong>, yellow-purple-black-gold, almost Karma Chameleon)</p>
<p>Follow these steps to <strong>boot NuttX RTOS</strong> on our Ox64 BL808 SBC…</p>
<ol>
<li>
<p>Flash <a href="https://lupyuen.codeberg.page/articles/ox64#flash-opensbi-and-u-boot"><strong>OpenSBI and U-Boot Bootloader</strong></a> to Ox64</p>
</li>
<li>
<p>Prepare a <strong>Linux microSD</strong> for Ox64 as described <a href="https://lupyuen.codeberg.page/articles/ox64"><strong>in the previous article</strong></a></p>
</li>
<li>
<p>Download <strong><code>Image</code></strong> from the <a href="https://github.com/lupyuen/nuttx-nim/releases/tag/ox64-1"><strong>NuttX Release</strong></a>…</p>
<p><a href="https://github.com/lupyuen/nuttx-nim/releases/download/ox64-1/Image"><strong>Image: NuttX Image for Ox64 BL808 SBC</strong></a></p>
<p>If we prefer to <strong>build NuttX</strong> ourselves: <a href="https://lupyuen.codeberg.page/articles/nim#appendix-build-nuttx-for-ox64"><strong>Follow these steps</strong></a></p>
</li>
<li>
<p>Copy the <strong><code>Image</code></strong> file and overwrite the <strong><code>Image</code></strong> in the Linux microSD</p>
</li>
<li>
<p>Insert the <a href="https://lupyuen.codeberg.page/images/ox64-sd.jpg"><strong>microSD into Ox64</strong></a> and power up Ox64</p>
</li>
<li>
<p>NuttX is now running on our <strong>Ox64 SBC</strong>! (Pic below)</p>
<div><pre><code>Starting kernel...
NuttShell (NSH) NuttX-12.0.3
nsh&gt;
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/553c2da4ad5d119468d223e162573e96#file-ox64-nuttx-nim-blink-log-L112-L125">(See the <strong>Complete Log</strong>)</a></p>
</li>
<li>
<p>At the NuttX Prompt, enter “<strong>hello_nim</strong>”…</p>
<div><pre><code>nsh&gt; hello_nim
Hello Nim!
Opening /dev/userleds
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa#file-qemu-nuttx-nim-build-log-L472-L497">(Enter “<strong>help</strong>” to see the available commands)</a></p>
</li>
<li>
<p>Nim on NuttX <a href="https://lupyuen.codeberg.page/images/nim-blink.jpg"><strong>blinks our LED</strong></a>…</p>
<div><pre><code>Set LED 0 to 1
board_userled_all: led=0, val=1
Waiting...

Set LED 0 to 0
board_userled_all: led=0, val=0
Waiting...

Set LED 0 to 1
board_userled_all: led=0, val=1
Waiting...
</code></pre></div>
<p><a href="https://youtube.com/shorts/KCkiXFxBgxQ">(Watch the <strong>Demo on YouTube</strong>)</a></p>
<p><a href="https://gist.github.com/lupyuen/553c2da4ad5d119468d223e162573e96#file-ox64-nuttx-nim-blink-log-L129-L395">(See the <strong>Complete Log</strong>)</a></p>
</li>
</ol>
<p>Nim blinks a real LED on a real RISC-V SBC! Let’s figure out how it works…</p>
<p><img src="https://lupyuen.codeberg.page/images/nim-ox64.png" alt="Apache NuttX RTOS on Ox64 BL808 RISC-V SBC: Works great with Nim!"></p>
<h2 id="inside-nim-on-nuttx"><a href="#inside-nim-on-nuttx">6 Inside Nim on NuttX</a></h2>
<p><em>Nim runs incredibly well on NuttX. How is that possible?</em></p>
<p>That’s because <strong>Nim compiles to C</strong>. As far as NuttX is concerned…</p>
<p>Nim looks like <strong>any other C Program!</strong></p>
<p><em>Whoa! How is Nim compiled to C?</em></p>
<p>Our <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/Makefile#L37-L41"><strong>NuttX Makefile</strong></a> calls the Nim Compiler…</p>
<div><pre><code>## Compile Nim to C
export TOPDIR=$PWD/nuttx
cd apps/examples/hello_nim
nim c --header hello_nim_async.nim 
</code></pre></div>
<p>Nim Compiler compiles our <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/hello_nim_async.nim#L54-L63"><strong>Nim Program</strong></a>…</p>
<div><pre><code>## Nim Program that prints something
proc hello_nim() {.exportc, cdecl.} =
  echo "Hello Nim!"
</code></pre></div>
<p>Into this <a href="https://gist.github.com/lupyuen/4d3f44b58fa88b17ca851decb0419b86#file-mhello_nim_async-nim-c-L198-L203"><strong>C Program</strong></a>…</p>
<div><pre><code>// Main Function compiled from Nim to C:
// echo "Hello Nim!"
N_LIB_PRIVATE N_CDECL(void, hello_nim)(void) {
  ...
  // `echo` comes from the Nim System Library
  // https://github.com/nim-lang/Nim/blob/devel/lib/system.nim#L2849-L2902
  echoBinSafe(TM__1vqzGCGyH8jPEpAwiaNwvg_2, 1);
  ...
}

// String "Hello Nim!" compiled from Nim to C
static NIM_CONST tyArray__nHXaesL0DJZHyVS07ARPRA TM__1vqzGCGyH8jPEpAwiaNwvg_2 
  = {{10, (NimStrPayload*)&amp;TM__1vqzGCGyH8jPEpAwiaNwvg_3}};

// Actual String for "Hello Nim!"
static const struct { NI cap; NIM_CHAR data[10+1]; } TM__1vqzGCGyH8jPEpAwiaNwvg_3 
  = { 10 | NIM_STRLIT_FLAG, "Hello Nim!" };
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/4d3f44b58fa88b17ca851decb0419b86#file-mhello_nim_async-nim-c-L198-L203">(From .nimcache/@mhello_nim_async.nim.c)</a></p>
<p><a href="https://github.com/lupyuen/nuttx-nim/releases/download/ox64-1/nimcache.tar">(See the <strong>nimcache</strong>)</a></p>
<p>Hence Nim Compiler has produced a <a href="https://gist.github.com/lupyuen/4d3f44b58fa88b17ca851decb0419b86#file-mhello_nim_async-nim-c-L198-L203"><strong>perfectly valid C Program</strong></a>. That will compile with any C Compiler!</p>
<p><em>How will NuttX compile this?</em></p>
<p>Nim Compiler generates the code above into the <a href="https://github.com/lupyuen/nuttx-nim/releases/download/ox64-1/nimcache.tar"><strong><code>.nimcache</code></strong></a> folder.</p>
<p>Our <a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/examples/hello_nim/Makefile#L31-L35"><strong>NuttX Makefile</strong></a> compiles everything inside <a href="https://github.com/lupyuen/nuttx-nim/releases/download/ox64-1/nimcache.tar"><strong><code>.nimcache</code></strong></a> with the GCC Compiler…</p>
<div><pre><code>## Compile everything in the .nimcache folder
NIMPATH = $(shell choosenim show path)
CFLAGS += -I $(NIMPATH)/lib -I ../../.nimcache
CSRCS  += $(wildcard ../../.nimcache/*.c)
</code></pre></div>
<p>And links the Nim Modules (compiled by GCC) into NuttX.</p>
<p><em>So Nim Compiler is aware of NuttX?</em></p>
<p>Yep! Nim Compiler is internally wired to <strong>produce NuttX Code</strong> (that GCC will compile correctly)…</p>
<ul>
<li>
<p><a href="https://github.com/nim-lang/Nim/pull/21372/files"><strong>Nim Support for NuttX</strong></a></p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/blob/nim/config.nims"><strong>Nim Configuration for NuttX: config.nims</strong></a></p>
</li>
</ul>
<p>Kudos to <a href="https://github.com/apache/nuttx-apps/pull/1597"><strong>centurysys</strong></a> and the Nim Community for making this possible!</p>
<p><em>Everything is hunky dory with Nim on NuttX?</em></p>
<p>We made some <strong>Minor Fixes</strong>, we’ll upstream to NuttX shortly…</p>
<ul>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/pull/3/files#diff-7fb4194c7b9e7b17a2a650d4182f39fb0e932cc9bb566e9b580d22fa8a7b4307"><strong>Makefile</strong></a>: Nimcache has moved 2 folders up</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/pull/3/files#diff-be274e89063d9377278fad5fdcdd936e89d2f32efd7eb8eb8a6a83ac4c711879"><strong>config.nims</strong></a>: Add support for 64-bit RISC-V</p>
</li>
</ul>
<p>Here we see the Nim Compiler working perfectly, <a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa#file-qemu-nuttx-nim-build-log-L55-L185"><strong>compiling our program</strong></a> for NuttX (by parsing the <a href="https://github.com/lupyuen/nuttx-nim/releases/download/ox64-1/nuttx.config"><strong>NuttX Build Config</strong></a>)…</p>
<div><pre><code>$ export TOPDIR=/workspaces/bookworm/nuttx
$ cd /workspaces/bookworm/apps/examples/hello_nim
$ nim c --header hello_nim_async.nim

read_config: /workspaces/bookworm/nuttx/.config
line=CONFIG_DEBUG_SYMBOLS=y
line=CONFIG_DEBUG_FULLOPT=y
line=CONFIG_ARCH="risc-v"
@["keyval=", "ARCH", "\"risc-v\""]
keyval[1]="risc-v"
line=CONFIG_RAM_SIZE=33554432
* arch:    riscv64
* opt:     oSize
* debug:   true
* ramSize: 33554432
* isSim:   false
Hint: used config file '/home/vscode/.choosenim/toolchains/nim-#devel/config/nim.cfg' [Conf]
Hint: used config file '/home/vscode/.choosenim/toolchains/nim-#devel/config/config.nims' [Conf]
Hint: used config file '/workspaces/bookworm/apps/config.nims' [Conf]
....................................................................................................................................
Hint: mm: orc; opt: size; options: -d:danger
92931 lines; 1.214s; 137.633MiB peakmem; proj: /workspaces/bookworm/apps/examples/hello_nim/hello_nim_async.nim; out: /workspaces/bookworm/apps/.nimcache/hello_nim_async.json [SuccessX]
</code></pre></div>
<p><em>Isn’t Nim supposed to be Memory Safe?</em></p>
<p>Yeah so far we’re doing Low-Level Coding with NuttX. And the <a href="https://nim-lang.org/faq.html"><strong>Nim Memory Safety</strong></a> doesn’t shine through.</p>
<p>Later when we write <strong>LVGL Graphical Apps</strong> in Nim, we’ll appreciate the <a href="https://github.com/mantielero/lvgl.nim/blob/main/examples/ex02_label.nim"><strong>safety and simplicity</strong></a> of Nim…</p>
<ul>
<li>
<p><a href="https://github.com/mantielero/lvgl.nim"><strong>Nim Wrapper for LVGL Graphics Library</strong></a></p>
<p><a href="https://nim-lang.org/docs/nimc.html#nim-for-embedded-systems">(More about <strong>Embedded Nim</strong>)</a></p>
<p><a href="https://nim-lang.org/docs/nimc.html">(More about <strong>Nim Compiler</strong>)</a></p>
</li>
</ul>
<p><img src="https://lupyuen.codeberg.page/images/nim-gpio.jpg" alt="GPIO 29 in BL808 Reference Manual (Page 119)"></p>
<p><a href="https://github.com/bouffalolab/bl_docs/blob/main/BL808_RM/en/BL808_RM_en_1.3.pdf"><em>GPIO 29 in BL808 Reference Manual (Page 119)</em></a></p>
<h2 id="led-driver-for-ox64"><a href="#led-driver-for-ox64">7 LED Driver for Ox64</a></h2>
<p><em>Nim Blinky needs an LED Driver for Ox64…</em></p>
<p><em>What’s the Quickest Way to create a NuttX LED Driver?</em></p>
<p><a href="https://gist.github.com/lupyuen/553c2da4ad5d119468d223e162573e96#file-ox64-nuttx-nim-blink-log-L79-L112"><strong>U-Boot Bootloader</strong></a> can help! Power up Ox64 and press Enter a few times to reveal the <strong>U-Boot Command Prompt</strong>.</p>
<p>We enter these <strong>U-Boot Commands</strong>…</p>
<div><pre><code>## Dump the GPIO 29 Register at 0x20000938 (gpio_cfg29)
$ md 0x20000938 1
20000938: 00400803                             ..@.

## Set GPIO 29 Output to 1:
## (1 &lt;&lt; 6) | (11 &lt;&lt; 8) | (0 &lt;&lt; 30) | (0 &lt;&lt; 4) | (1 &lt;&lt; 24)
## = 0x1000b40
$ mw 0x20000938 0x1000b40 1

## Dump the GPIO 29 Register to verify
$ md 020000938 1
20000938: 01000b40                             @...

## Set GPIO 29 Output to 0:
## (1 &lt;&lt; 6) | (11 &lt;&lt; 8) | (0 &lt;&lt; 30) | (0 &lt;&lt; 4) | (0 &lt;&lt; 24)
## = 0xb40
$ mw 0x20000938 0xb40 1

## Dump the GPIO 29 Register to verify
$ md 0x20000938 1
20000938: 00000b40                             @...
</code></pre></div>
<p>And our LED (GPIO 29) will <strong>flip On and Off</strong>!</p>
<p>Thus we have verified the <strong>Magic Bits</strong> for flipping our LED…</p>
<ul>
<li>
<p>Write to <strong>GPIO 29 Register</strong> at <strong><code>0x2000</code> <code>0938</code></strong> (gpio_cfg29)</p>
</li>
<li>
<p>Register Value <strong><code>0x100</code> <code>0B40</code></strong> will flip the LED On</p>
</li>
<li>
<p>Register Value <strong><code>0xB40</code></strong> will flip the LED Off</p>
</li>
</ul>
<p><em>How did we figure out the Magic Bits for GPIO 29?</em></p>
<p>From <a href="https://github.com/bouffalolab/bl_docs/blob/main/BL808_RM/en/BL808_RM_en_1.3.pdf"><strong>BL808 Reference Manual</strong></a> (Page 56), “Normal GPIO Output Mode”…</p>
<ul>
<li>
<p>Set <strong>reg_gpio_29_oe</strong> (Bit 6) to <strong><code>1</code></strong> to enable GPIO Output Mode <br>
= (1 &lt;&lt; 6)</p>
</li>
<li>
<p>Set <strong>reg_gpio_29_func_sel</strong> (Bits 8 to 12) to <strong><code>11</code></strong> to enter SWGPIO Mode <br>
= (11 &lt;&lt; 8)</p>
</li>
<li>
<p>Set <strong>reg_gpio_29_mode</strong> (Bits 30 to 31) to <strong><code>0</code></strong> to enable Normal Output Function of I/O <br>
= (0 &lt;&lt; 30)</p>
</li>
<li>
<p>Set <strong>reg_gpio_29_pu</strong> (Bit 4) and <strong>reg_gpio_29_pd</strong> (Bit 5) to <strong><code>0</code></strong> to disable Internal Pull-Up and Pull-Down functions <br>
= (0 &lt;&lt; 4)</p>
</li>
<li>
<p>Set the Pin Level (<strong><code>0</code></strong> or <strong><code>1</code></strong>) through <strong>reg_gpio_29_o</strong> (Bit 24) <br>
= Either (0 &lt;&lt; 24) Or (1 &lt;&lt; 24)</p>
</li>
</ul>
<p><a href="https://lupyuen.codeberg.page/images/nim-gpio.jpg">(<strong>GPIO Bits</strong> are listed in the pic above)</a></p>
<p>Which means…</p>
<ul>
<li>
<p><strong>Set GPIO Output to 0</strong> <br>
= (1 &lt;&lt; 6) | (11 &lt;&lt; 8) | (0 &lt;&lt; 30) | (0 &lt;&lt; 4) | (0 &lt;&lt; 24) <br>
= <strong><code>0xB40</code></strong></p>
</li>
<li>
<p><strong>Set GPIO Output to 1</strong> <br>
= (1 &lt;&lt; 6) | (11 &lt;&lt; 8) | (0 &lt;&lt; 30) | (0 &lt;&lt; 4) | (1 &lt;&lt; 24) <br>
= <strong><code>0x100</code> <code>0B40</code></strong></p>
</li>
</ul>
<p>And we write the above values to <strong>GPIO 29 Register</strong> at <strong><code>0x2000</code> <code>0938</code></strong> (gpio_cfg29)</p>
<p><em>How to flip the GPIO in our LED Driver?</em></p>
<p>We do this in our <strong>NuttX LED Driver</strong>: <a href="https://github.com/lupyuen2/wip-pinephone-nuttx/blob/nim/boards/risc-v/bl808/ox64/src/bl808_userleds.c#L176-L209">bl808_userleds.c</a></p>
<div><pre><code>// Flip the LEDs On and Off according to the LED Set
// (Bit 0 = LED 0)
void board_userled_all(uint32_t ledset) {

  // For LED 0 to 2...
  for (int i = 0; i &lt; BOARD_LEDS; i++) {

    // Get the desired state of the LED
    const bool val = ((ledset &amp; g_led_setmap[i]) != 0);

    // If this is LED 0...
    if (i == 0) {

      // Flip it On or Off?
      if (val) {

        // Flip LED 0 (GPIO 29) to On:
        // Set gpio_cfg29 to (1 &lt;&lt; 6) | (11 &lt;&lt; 8) | (0 &lt;&lt; 30) | (0 &lt;&lt; 4) | (1 &lt;&lt; 24)
        // mw 0x20000938 0x1000b40 1
        *(volatile uint32_t *) 0x20000938 = 0x1000b40;
      } else {

        // Flip LED 0 (GPIO 29) to Off:
        // Set gpio_cfg29 to (1 &lt;&lt; 6) | (11 &lt;&lt; 8) | (0 &lt;&lt; 30) | (0 &lt;&lt; 4) | (0 &lt;&lt; 24)
        // mw 0x20000938 0xb40 1
        *(volatile uint32_t *) 0x20000938 = 0xb40;
      }
    }
  }
}
</code></pre></div>
<p>That’s how we created a barebones LED Driver for Ox64!</p>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/blob/nim/boards/risc-v/bl808/ox64/src/bl808_autoleds.c">(Remember to add the <strong>Auto LED Driver</strong>)</a></p>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/pull/47/files#diff-60cc096e3a9b22a769602cbbc3b0f5e7731e72db7b0338da04fcf665ed753b64">(And update the <strong>Board Kconfig</strong>)</a></p>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/blob/nim/boards/risc-v/bl808/ox64/src/bl808_appinit.c#L167-L179">(And start our <strong>LED Driver</strong>)</a></p>
<p><em>Ahem it looks a little messy…</em></p>
<p>No Worries! Later we’ll replace the (awful) code above by the <strong>BL808 GPIO Driver</strong>. Which we’ll copy from <a href="https://github.com/apache/nuttx/blob/master/arch/risc-v/src/bl602/bl602_gpio.c"><strong>NuttX for BL602</strong></a>…</p>
<div><pre><code>// Get the desired state of LED[i]
const bool val = ((ledset &amp; g_led_setmap[i]) != 0);

// Call the BL808 GPIO Driver to flip the LED On or Off
bl808_gpio_write(  // Write to the GPIO Output...
  g_led_map[i],    // GPIO Number for LED[i]
  val              // Flip it On or Off
);
</code></pre></div>
<p><em>Anything else we patched?</em></p>
<p>We fixed the <strong>NuttX Timer</strong> for Ox64 (otherwise we can’t blink)…</p>
<ul>
<li><a href="https://lupyuen.codeberg.page/articles/nim#appendix-opensbi-timer-for-nuttx"><strong>“OpenSBI Timer for NuttX”</strong></a></li>
</ul>
<p><img src="https://lupyuen.codeberg.page/images/nim-blink.jpg" alt="Apache NuttX RTOS on Ox64 BL808 RISC-V SBC: Nim blinks our LED"></p>
<h2 id="whats-next"><a href="#whats-next">8 What’s Next</a></h2>
<p>Today we ran some Fun Experiments with <strong>Nim on NuttX</strong>…</p>
<ul>
<li>
<p>We blinked a Simulated LED on <strong>QEMU Emulator</strong></p>
</li>
<li>
<p>Then we blinked a Real LED on <strong>Ox64 BL808 RISC-V SBC</strong> (pic above)</p>
</li>
<li>
<p>We peeked <strong>inside Nim on NuttX</strong></p>
</li>
<li>
<p>To figure out how <strong>Nim compiles to C</strong></p>
</li>
<li>
<p>Even though it’s Python-like with <strong>Garbage Collection</strong></p>
</li>
<li>
<p>And <strong>Everything works OK</strong>!</p>
<p>(With minor fixes to Nim Config, LED Driver and RISC-V Timer)</p>
</li>
</ul>
<p>We’ll do more with Nim on NuttX. (Maybe <strong>LVGL</strong>?) Stay Tuned!</p>
<p>Many Thanks to my <a href="https://github.com/sponsors/lupyuen"><strong>GitHub Sponsors</strong></a> (and the awesome NuttX Community) for supporting my work! This article wouldn’t have been possible without your support.</p>
<ul>
<li>
<p><a href="https://github.com/sponsors/lupyuen"><strong>Sponsor me a coffee</strong></a></p>
</li>
<li>
<p><a href="https://news.ycombinator.com/item?id=38828619"><strong>Discuss this article on Hacker News</strong></a></p>
</li>
<li>
<p><a href="https://forum.pine64.org/showthread.php?tid=18986"><strong>Discuss this article on Pine64 Forum</strong></a></p>
</li>
<li>
<p><a href="https://bbs.bouffalolab.com/d/274-article-nim-on-a-real-time-operating-system-apache-nuttx-rtos-ox64-bl808"><strong>Discuss this article on Bouffalo Lab Forum</strong></a></p>
</li>
<li>
<p><a href="https://github.com/lupyuen/nuttx-ox64"><strong>My Current Project: “Apache NuttX RTOS for Ox64 BL808”</strong></a></p>
</li>
<li>
<p><a href="https://github.com/lupyuen/nuttx-star64"><strong>My Other Project: “NuttX for Star64 JH7110”</strong></a></p>
</li>
<li>
<p><a href="https://github.com/lupyuen/pinephone-nuttx"><strong>Older Project: “NuttX for PinePhone”</strong></a></p>
</li>
<li>
<p><a href="https://lupyuen.codeberg.page/"><strong>Check out my articles</strong></a></p>
</li>
<li>
<p><a href="https://lupyuen.codeberg.page/rss.xml"><strong>RSS Feed</strong></a></p>
</li>
</ul>
<p><em>Got a question, comment or suggestion? Create an Issue or submit a Pull Request here…</em></p>
<p><a href="https://github.com/lupyuen/lupyuen.github.io/blob/master/src/nim.md"><strong>lupyuen.github.io/src/nim.md</strong></a></p>
<p><img src="https://lupyuen.codeberg.page/images/nim-qemu.png" alt="Nim with Apache NuttX RTOS on QEMU RISC-V (64-bit)"></p>
<h2 id="appendix-build-nuttx-for-qemu"><a href="#appendix-build-nuttx-for-qemu">9 Appendix: Build NuttX for QEMU</a></h2>
<p>In this article, we compiled a Work-In-Progress Version of <strong>Apache NuttX RTOS for QEMU RISC-V (64-bit)</strong> that has Minor Fixes for Nim…</p>
<ul>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/pull/47/files#diff-dd54e0076f30825f912248f2424460e3126c2a8f4e2880709f5c68af9342ddcf"><strong>nsh64/defconfig</strong></a>: NuttX Config for QEMU</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/pull/47/files#diff-5905dc63d5fd592e0a1e25ab25783ae99e54180a7b98fb59f56a73dee79104e6"><strong>qemu_rv_autoleds.c</strong></a>
: Auto LED Driver for QEMU</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/pull/47/files#diff-a6fd389669ddef88302f00a34d401479886cb8983f7be58b32ba075699cb5bb8"><strong>qemu_rv_userleds.c</strong></a>: User LED Driver for QEMU</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/pull/47/files#diff-beeaeb03fa5642002a542446c89251c9a7c5c1681cfe915387740ea0975e91b3"><strong>qemu_rv_appinit.c</strong></a>: Start LED Driver</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/pull/3/files#diff-7fb4194c7b9e7b17a2a650d4182f39fb0e932cc9bb566e9b580d22fa8a7b4307"><strong>Makefile</strong></a>: Nimcache has moved 2 folders up</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/pull/3/files#diff-be274e89063d9377278fad5fdcdd936e89d2f32efd7eb8eb8a6a83ac4c711879"><strong>config.nims</strong></a>: Add support for 64-bit RISC-V</p>
</li>
</ul>
<p>First we install <a href="https://nim-lang.org/install_unix.html"><strong>Nim Compiler</strong></a> (only the Latest Dev Version supports NuttX)…</p>
<div><pre><code>## Install Nim Compiler: https://nim-lang.org/install_unix.html
curl https://nim-lang.org/choosenim/init.sh -sSf | sh

## Add Nim to PATH
export PATH=$HOME/.nimble/bin:$PATH

## Select Latest Dev Version of Nim. Will take a while!
choosenim devel --latest

## Version should be 2.1.1 or later:
## Nim Compiler Version 2.1.1 [Linux: amd64]
## Compiled at 2023-12-22
nim -v
</code></pre></div>
<p><a href="https://github.com/lupyuen/nuttx-nim#build-nuttx-with-debian-container-in-vscode">(Nim won’t install? Try a <strong>Linux Container</strong>)</a></p>
<p>Then we download and build NuttX for <strong>QEMU RISC-V (64-bit)</strong>…</p>
<div><pre><code>## Download the WIP NuttX Source Code
git clone \
  --branch nim \
  https://github.com/lupyuen2/wip-pinephone-nuttx \
  nuttx
git clone \
  --branch nim \
  https://github.com/lupyuen2/wip-pinephone-nuttx-apps \
  apps

## Configure NuttX for QEMU RISC-V (64-bit)
cd nuttx
tools/configure.sh rv-virt:nsh64

## Build NuttX
make

## Dump the disassembly to nuttx.S
riscv64-unknown-elf-objdump \
  --syms --source --reloc --demangle --line-numbers --wide \
  --debugging \
  nuttx \
  &gt;nuttx.S \
  2&gt;&amp;1
</code></pre></div>
<p><a href="https://lupyuen.codeberg.page/articles/release#build-nuttx-for-star64">(Remember to install the <strong>Build Prerequisites and Toolchain</strong>)</a></p>
<p><a href="https://github.com/lupyuen/nuttx-nim/releases/tag/qemu-1">(See the <strong>Build Script</strong>)</a></p>
<p><a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa">(See the <strong>Build Log</strong>)</a></p>
<p><a href="https://github.com/lupyuen/nuttx-nim/releases/tag/qemu-1">(See the <strong>Build Outputs</strong>)</a></p>
<p>This produces the NuttX ELF Image <strong><code>nuttx</code></strong> that we may boot on QEMU RISC-V Emulator…</p>
<div><pre><code>## Start the QEMU RISC-V Emulator (64-bit) with NuttX RTOS
qemu-system-riscv64 \
  -semihosting \
  -M virt,aclint=on \
  -cpu rv64 \
  -smp 8 \
  -bios none \
  -kernel nuttx \
  -nographic
</code></pre></div>
<p>At the NuttX Prompt, enter “<strong>hello_nim</strong>”…</p>
<div><pre><code>nsh&gt; hello_nim
Hello Nim!
Opening /dev/userleds
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa#file-qemu-nuttx-nim-build-log-L472-L497">(Enter “<strong>help</strong>” to see the available commands)</a></p>
<p>Nim on NuttX blinks our <strong>Simulated LED</strong>…</p>
<div><pre><code>Set LED 0 to 1
board_userled_all: led=0, val=1
Waiting...

Set LED 0 to 0
board_userled_all: led=0, val=0
Waiting...

Set LED 0 to 1
board_userled_all: led=0, val=1
Waiting...
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa#file-qemu-nuttx-nim-build-log-L210-L471">(See the <strong>NuttX Log</strong>)</a></p>
<p>To Exit QEMU: Press <strong><code>Ctrl-A</code></strong> then <strong><code>x</code></strong></p>
<p><img src="https://lupyuen.codeberg.page/images/nim-ox64.png" alt="Apache NuttX RTOS on Ox64 BL808 RISC-V SBC: Works great with Nim!"></p>
<h2 id="appendix-build-nuttx-for-ox64"><a href="#appendix-build-nuttx-for-ox64">10 Appendix: Build NuttX for Ox64</a></h2>
<p>In this article, we compiled a Work-In-Progress Version of <strong>Apache NuttX RTOS for Ox64</strong> that has Minor Fixes for Nim…</p>
<ul>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/pull/47/files#diff-fa4b30efe1c5e19ba2fdd2216528406d85fa89bf3d2d0e5161794191c1566078"><strong>nsh/defconfig</strong></a>: NuttX Config for Ox64</p>
</li>
<li>
<p><a href="https://lupyuen.codeberg.page/articles/nim#appendix-opensbi-timer-for-nuttx"><strong>bl808_timerisr.c</strong></a>: RISC-V Timer for Ox64</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/pull/47/files#diff-efdf5ed87983905c7021de03a7add73932da529d4312b80f948eb199c256b170"><strong>bl808_autoleds.c</strong></a>: Auto LED Driver for Ox64</p>
</li>
<li>
<p><a href="https://lupyuen.codeberg.page/articles/nim#led-driver-for-ox64"><strong>bl808_userleds.c</strong></a>: User LED Driver for Ox64</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/pull/47/files#diff-902a3cb106dc7153d030370077938ef28c9412d8b3434888fca8bbf1a1cfbd54"><strong>bl808_appinit.c</strong></a>: Start LED Driver for Ox64</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/pull/3/files#diff-7fb4194c7b9e7b17a2a650d4182f39fb0e932cc9bb566e9b580d22fa8a7b4307"><strong>Makefile</strong></a>: Nimcache has moved 2 folders up</p>
</li>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx-apps/pull/3/files#diff-be274e89063d9377278fad5fdcdd936e89d2f32efd7eb8eb8a6a83ac4c711879"><strong>config.nims</strong></a>: Add support for 64-bit RISC-V</p>
</li>
</ul>
<p>First we install <a href="https://nim-lang.org/install_unix.html"><strong>Nim Compiler</strong></a> (only the Latest Dev Version supports NuttX)…</p>
<div><pre><code>## Install Nim Compiler: https://nim-lang.org/install_unix.html
curl https://nim-lang.org/choosenim/init.sh -sSf | sh

## Add Nim to PATH
export PATH=$HOME/.nimble/bin:$PATH

## Select Latest Dev Version of Nim. Will take a while!
choosenim devel --latest

## Version should be 2.1.1 or later:
## Nim Compiler Version 2.1.1 [Linux: amd64]
## Compiled at 2023-12-22
nim -v
</code></pre></div>
<p><a href="https://github.com/lupyuen/nuttx-nim#build-nuttx-with-debian-container-in-vscode">(Nim won’t install? Try a <strong>Linux Container</strong>)</a></p>
<p>Then we download and build NuttX for <strong>Ox64 BL808 SBC</strong>…</p>
<div><pre><code>## Download the WIP NuttX Source Code
git clone \
  --branch nim \
  https://github.com/lupyuen2/wip-pinephone-nuttx \
  nuttx
git clone \
  --branch nim \
  https://github.com/lupyuen2/wip-pinephone-nuttx-apps \
  apps

## Configure NuttX for Ox64 BL808 RISC-V SBC
cd nuttx
tools/configure.sh ox64:nsh

## Build NuttX
make

## Export the NuttX Kernel
## to `nuttx.bin`
riscv64-unknown-elf-objcopy \
  -O binary \
  nuttx \
  nuttx.bin

## Dump the disassembly to nuttx.S
riscv64-unknown-elf-objdump \
  --syms --source --reloc --demangle --line-numbers --wide \
  --debugging \
  nuttx \
  &gt;nuttx.S \
  2&gt;&amp;1

## Dump the hello_nim disassembly to hello_nim.S
riscv64-unknown-elf-objdump \
  --syms --source --reloc --demangle --line-numbers --wide \
  --debugging \
  ../apps/bin/hello_nim \
  &gt;hello_nim.S \
  2&gt;&amp;1
</code></pre></div>
<p><a href="https://lupyuen.codeberg.page/articles/release#build-nuttx-for-star64">(Remember to install the <strong>Build Prerequisites and Toolchain</strong>)</a></p>
<p>We build the <strong>Initial RAM Disk</strong> that contains NuttX Shell and NuttX Apps…</p>
<div><pre><code>## Build the Apps Filesystem
make -j 8 export
pushd ../apps
./tools/mkimport.sh -z -x ../nuttx/nuttx-export-*.tar.gz
make -j 8 import
popd

## Generate the Initial RAM Disk `initrd`
## in ROMFS Filesystem Format
## from the Apps Filesystem `../apps/bin`
## and label it `NuttXBootVol`
genromfs \
  -f initrd \
  -d ../apps/bin \
  -V "NuttXBootVol"

## Prepare a Padding with 64 KB of zeroes
head -c 65536 /dev/zero &gt;/tmp/nuttx.pad

## Append Padding and Initial RAM Disk to NuttX Kernel
cat nuttx.bin /tmp/nuttx.pad initrd \
  &gt;Image
</code></pre></div>
<p><a href="https://github.com/lupyuen/nuttx-nim/releases/tag/ox64-1">(See the <strong>Build Script</strong>)</a></p>
<p><a href="https://gist.github.com/lupyuen/578a7eb2d4d827aa252fff37c172dd18">(See the <strong>Build Log</strong>)</a></p>
<p><a href="https://github.com/lupyuen/nuttx-nim/releases/tag/ox64-1">(See the <strong>Build Outputs</strong>)</a></p>
<p>This produces the NuttX Image for Ox64: <strong><code>Image</code></strong></p>
<p>Next we prepare a <strong>Linux microSD</strong> for Ox64 as described <a href="https://lupyuen.codeberg.page/articles/ox64"><strong>in the previous article</strong></a>.</p>
<p><a href="https://lupyuen.codeberg.page/articles/ox64#flash-opensbi-and-u-boot">(Remember to flash <strong>OpenSBI and U-Boot Bootloader</strong>)</a></p>
<p>And we do the <a href="https://lupyuen.codeberg.page/articles/ox64#apache-nuttx-rtos-for-ox64"><strong>Linux-To-NuttX Switcheroo</strong></a>: Copy the <strong><code>Image</code></strong> file (from above) and overwrite the <strong><code>Image</code></strong> in the Linux microSD…</p>
<div><pre><code>## Overwrite the Linux Image
## on Ox64 microSD
cp Image \
  "/Volumes/NO NAME/Image"
diskutil unmountDisk /dev/disk2
</code></pre></div>
<p>Insert the <a href="https://lupyuen.codeberg.page/images/ox64-sd.jpg"><strong>microSD into Ox64</strong></a> and power up Ox64.</p>
<p>Ox64 boots <a href="https://lupyuen.codeberg.page/articles/sbi"><strong>OpenSBI</strong></a>, which starts <a href="https://lupyuen.codeberg.page/articles/linux#u-boot-bootloader-for-star64"><strong>U-Boot Bootloader</strong></a>, which starts <strong>NuttX Kernel</strong> and the NuttX Shell (NSH).</p>
<p>At the NuttX Prompt, enter “<strong>hello_nim</strong>”…</p>
<div><pre><code>nsh&gt; hello_nim
Hello Nim!
Opening /dev/userleds

Set LED 0 to 1
board_userled_all: led=0, val=1
Waiting...

Set LED 0 to 0
board_userled_all: led=0, val=0
Waiting...
</code></pre></div>
<p><a href="https://gist.github.com/lupyuen/09e653cbd227b9cdff7cf3cb0a5e1ffa#file-qemu-nuttx-nim-build-log-L472-L497">(Enter “<strong>help</strong>” to see the available commands)</a></p>
<p>Nim on NuttX <a href="https://lupyuen.codeberg.page/images/nim-blink.jpg"><strong>blinks our LED</strong></a>.</p>
<p><a href="https://youtube.com/shorts/KCkiXFxBgxQ">(Watch the <strong>Demo on YouTube</strong>)</a></p>
<p><a href="https://gist.github.com/lupyuen/553c2da4ad5d119468d223e162573e96">(See the <strong>NuttX Log</strong>)</a></p>
<p><img src="https://lupyuen.codeberg.page/images/privilege-title.jpg" alt="OpenSBI Supervisor Binary Interface"></p>
<h2 id="appendix-opensbi-timer-for-nuttx"><a href="#appendix-opensbi-timer-for-nuttx">11 Appendix: OpenSBI Timer for NuttX</a></h2>
<p><em>The <code>sleep</code> command hangs in NuttX Shell. How to fix it?</em></p>
<p>That’s because we haven’t implemented the <strong>RISC-V Timer</strong> for Ox64! We should call <a href="https://www.hackster.io/lupyuen/8-risc-v-sbc-on-a-real-time-operating-system-ox64-nuttx-474358#toc-bare-metal-experiments-8"><strong>OpenSBI Supervisor Binary Interface</strong></a> to handle the Timer…</p>
<ul>
<li>
<p><a href="https://github.com/lupyuen2/wip-pinephone-nuttx/commit/57ea5f000636f739ac3cb8ea1e60936798f6c3a9#diff-535879ffd6d9fc8e7d84b37a88bdeb1609c4a90e3777150939a96bed18696aee"><strong>Fix RISC-V Timer for Ox64</strong></a></p>
<p>(Ignore <a href="https://github.com/lupyuen2/wip-pinephone-nuttx/commit/57ea5f000636f739ac3cb8ea1e60936798f6c3a9#diff-922834c58227800347b4486fa310c3570cd4014f200ac5ea0cd2e40764cefac4">riscv_mtimer.c</a>)</p>
</li>
</ul>
<p>We only need to change the <strong>Timer Initialisation</strong>:&nbsp;<a href="https://github.com/lupyuen2/wip-pinephone-nuttx/blob/nim/arch/risc-v/src/bl808/bl808_timerisr.c#L44-L116">bl808_timerisr.c</a></p>
<div><pre><code>// Timer Frequency
#define MTIMER_FREQ 1000000

// This function is called during start-up to initialize the timer interrupt.
void up_timer_initialize(void) {
  struct oneshot_lowerhalf_s *lower = riscv_mtimer_initialize(
    0, 0, RISCV_IRQ_STIMER, MTIMER_FREQ);
  DEBUGASSERT(lower);
  up_alarm_set_lowerhalf(lower);
}
</code></pre></div>
<p>How it works: At startup, <a href="https://github.com/lupyuen2/wip-pinephone-nuttx/blob/nim/arch/risc-v/src/bl808/bl808_timerisr.c#L98-L116"><strong>up_timer_initialize</strong></a> (above) calls…</p>
<ul>
<li>
<p><a href="https://github.com/apache/nuttx/blob/master/arch/risc-v/src/common/riscv_mtimer.c#L318-L332"><strong>riscv_mtimer_initialize</strong></a> which calls…</p>
</li>
<li>
<p><a href="https://github.com/apache/nuttx/blob/master/arch/risc-v/src/common/riscv_mtimer.c#L136-L141"><strong>riscv_mtimer_set_mtimecmp</strong></a> which calls…</p>
</li>
<li>
<p><a href="https://github.com/apache/nuttx/blob/master/arch/risc-v/src/common/supervisor/riscv_sbi.c#L94-L107"><strong>riscv_sbi_set_timer</strong></a> which calls…</p>
</li>
<li>
<p><a href="https://github.com/apache/nuttx/blob/master/arch/risc-v/src/common/supervisor/riscv_sbi.c#L53-L76"><strong>sbi_ecall</strong></a> which makes an ecall to OpenSBI</p>
</li>
<li>
<p>Which accesses the <strong>RISC-V System Timer</strong></p>
</li>
</ul>
<p>Originally we set&nbsp;<strong>MTIMER_FREQ</strong> to <code>10000000</code>:&nbsp;<a href="https://github.com/lupyuen2/wip-pinephone-nuttx/blob/nim/arch/risc-v/src/bl808/bl808_timerisr.c#L44-L48">bl808_timerisr.c</a></p>
<div><pre><code>#define MTIMER_FREQ 10000000
</code></pre></div>
<p>But this causes the command <strong><code>sleep 1</code></strong> to pause for 10 seconds. So we divide the frequency by 10: <a href="https://github.com/lupyuen2/wip-pinephone-nuttx/blob/nim/arch/risc-v/src/bl808/bl808_timerisr.c#L44-L48">bl808_timerisr.c</a></p>
<div><pre><code>#define MTIMER_FREQ 1000000
</code></pre></div>
<p>Now the <strong><code>sleep</code></strong> command works correctly in NuttX Shell! Here’s the log (ignore the errors)…</p>
<ul>
<li><a href="https://gist.github.com/lupyuen/8aa66e7f88d1e31a5f198958c15e4393"><strong><code>sleep</code> works OK on Ox64</strong></a></li>
</ul>

    


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Stuff we figured out about AI in 2023 (150 pts)]]></title>
            <link>https://simonwillison.net/2023/Dec/31/ai-in-2023/</link>
            <guid>38828594</guid>
            <pubDate>Mon, 01 Jan 2024 00:08:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/">https://simonwillison.net/2023/Dec/31/ai-in-2023/</a>, See on <a href="https://news.ycombinator.com/item?id=38828594">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>



<p>31st December 2023</p>

<p>2023 was the breakthrough year for Large Language Models (LLMs). I think it’s OK to call these AI—they’re the latest and (currently) most interesting development in the academic field of Artificial Intelligence that <a href="https://en.wikipedia.org/wiki/Dartmouth_workshop">dates back to the 1950s</a>.</p>
<p>Here’s my attempt to round up the highlights in one place!</p>
<ul>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#large-language-models">Large Language Models</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#easy-to-build">They’re actually quite easy to build</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#on-your-devices">You can run LLMs on your own devices</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#hobbyist-fine-tuning">Hobbyists can build their own fine-tuned models</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#cant-build-gpt4">We don’t yet know how to build GPT-4</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#vibes-based-development">Vibes Based Development</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#smart-and-dumb">LLMs are really smart, and also really, really dumb</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#gullibility-unsolved">Gullibility is the biggest unsolved problem</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#code-best-application">Code may be the best application</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#ethics-diabolically-complex">The ethics of this space remain diabolically complex</a></li>
  <li><a href="https://simonwillison.net/2023/Dec/31/ai-in-2023/#my-blog-2023">My blog in 2023</a></li>
</ul>
<h4 id="large-language-models">Large Language Models</h4>
<p>In the past 24-36 months, our species has discovered that you can take a GIANT corpus of text, run it through a pile of GPUs, and use it to create a fascinating new kind of software.</p>
<p>LLMs can do a lot of things. They can answer questions, summarize documents, translate from one language to another, extract information and even write surprisingly competent code.</p>
<p>They can also help you cheat at your homework, generate unlimited streams of fake content and be used for all manner of nefarious purposes.</p>
<p>So far, I think they’re a net positive. I’ve used them on a personal level to <a href="https://simonwillison.net/2023/Mar/27/ai-enhanced-development/">improve my productivity</a> (and entertain myself) in all sorts of different ways. I think people who learn how to use them effectively can gain a significant boost to their quality of life.</p>
<p>A lot of people are yet to be sold on their value! Some think their negatives outweigh their positives, some think they are all hot air, and some even think they represent an existential threat to humanity.</p>
<h4 id="easy-to-build">They’re actually quite easy to build</h4>
<p>The most surprising thing we’ve learned about LLMs this year is that they’re actually quite easy to build.</p>
<p>Intuitively, one would expect that systems this powerful would take millions of lines of complex code. Instead, it turns out a <a href="https://github.com/karpathy/nanoGPT/blob/master/train.py">few hundred lines of Python</a> is genuinely enough to train a basic version!</p>
<p>What matters most is the training  data. You need a <em>lot</em> of data to make these things work, and the quantity and quality of the training data appears to be the most important factor in how good the resulting model is.</p>
<p>If you can gather the right data, and afford to pay for the GPUs to train it, you can build a LLM.</p>
<p>A year ago, the only organization that had released a generally useful LLM was OpenAI. We’ve now seen better-than-GPT-3 class models produced by Anthropic, Mistral, Google, Meta, EleutherAI, Stability AI, TII in Abu Dhabi (<a href="https://falconllm.tii.ae/">Falcon</a>), Microsoft Research, xAI, Replit, Baidu and a bunch of other organizations.</p>
<p>The training cost (hardware and electricity) is still significant—initially millions of dollars, but that seems to have dropped to the tens of thousands already. Microsoft’s Phi-2 <a href="https://www.microsoft.com/en-us/research/blog/phi-2-the-surprising-power-of-small-language-models/">claims to have used</a> “14 days on 96 A100 GPUs”, which works out at around $35,000 <a href="https://lambdalabs.com/service/gpu-cloud">using current Lambda pricing</a>.</p>
<p>So training an LLM still isn’t something a hobbyist can afford, but it’s no longer the sole domain of the super-rich. I like to compare the difficulty of training an LLM to that of building a suspension bridge—not trivial, but hundreds of countries around the world have figured out how to do it.</p>
<h4 id="on-your-devices">You can run LLMs on your own devices</h4>
<p>In January of this year, I thought it would be years before I could run a useful LLM on my own computer. GPT-3 and 3.5 were pretty much the only games in town, and I thought that even if the model weights were available it would take a $10,000+ server to run them.</p>
<p>Then in February, Meta released Llama. And a few weeks later in March, Georgi Gerganov released code that got it working on a MacBook.</p>
<p>I wrote about how <a href="https://simonwillison.net/2023/Mar/11/llama/">Large language models are having their Stable Diffusion moment</a>, and with hindsight that was a very good call!</p>
<p>This unleashed a whirlwind of innovation, which was accelerated further in July when Meta <a href="https://simonwillison.net/2023/Jul/18/accessing-llama-2/">released Llama 2</a>—an improved version which, crucially, included permission for commercial use.</p>
<p>Today there are literally thousands of LLMs that can be run locally, on all manner of different devices.</p>
<p>I run a bunch of them on my laptop. I run Mistral 7B (a surprisingly great model) <a href="https://llm.mlc.ai/#ios">on my iPhone</a>. You can install several different apps to get your own, local, completely private LLM.</p>
<p>You can even <a href="https://simonwillison.net/2023/Apr/16/web-llm/">run them entirely in your browser</a> using WebAssembly and the latest Chrome!</p>
<h4 id="hobbyist-fine-tuning">Hobbyists can build their own fine-tuned models</h4>
<p>I said earlier that building an LLM was still out of reach of hobbyists. That may be true for training from scratch, but fine-tuning one of those models is another matter entirely.</p>
<p>There’s now a fascinating ecosystem of people training their own models on top of these foundations, publishing those models, building fine-tuning datasets and sharing those too.</p>
<p>The Hugging Face <a href="https://huggingface.co/spaces/HuggingFaceH4/open_llm_leaderboard">Open LLM Leaderboard</a> is one place that tracks these. I can’t even attempt to count them, and any count would be out-of-date within a few hours.</p>
<p>The best overall openly licensed LLM at any time is rarely a foundation model: instead, it’s whichever fine-tuned community model has most recently discovered the best combination of fine-tuning data.</p>
<p>This is a huge advantage for open over closed models: the closed, hosted models don’t have thousands of researchers and hobbyists around the world collaborating and competing to improve them.</p>
<h4 id="cant-build-gpt4">We don’t yet know how to build GPT-4</h4>
<p>Frustratingly, despite the enormous leaps ahead we’ve had this year, we are yet to see an alternative model that’s better than GPT-4.</p>
<p>OpenAI released GPT-4 in March, though it later turned out we had a sneak peak of it in February when Microsoft used it as part of the new Bing.</p>
<p>This may well change in the next few weeks: Google’s Gemini Ultra has big claims, but isn’t yet available for us to try out.</p>
<p>The team behind Mistral are working to beat GPT-4 as well, and their track record is <a href="https://simonwillison.net/2023/Dec/18/mistral/">already extremely strong</a> considering their first public model only came out in September, and they’ve released two significant improvements since then.</p>
<p>Still, I’m surprised that no-one has beaten the now almost year old GPT-4 by now. OpenAI clearly have some substantial tricks that they haven’t shared yet.</p>
<h4 id="vibes-based-development">Vibes Based Development</h4>
<p>As a computer scientist and software engineer, LLMS are <em>infuriating</em>.</p>
<p>Even the openly licensed ones are still the world’s most convoluted black boxes. We continue to have very little idea what they can do, how exactly they work and how best to control them.</p>
<p>I’m used to programming where the computer does exactly what I tell it to do. Prompting an LLM is decidedly not that!</p>
<p>The worst part is the challenge of evaluating them.</p>
<p>There are plenty of benchmarks, but no benchmark is going to tell you if an LLM actually “feels” right when you try it for a given task.</p>
<p>I find I have to work with an LLM for a few weeks in order to get a good intuition for it’s strengths and weaknesses. This greatly limits how many I can evaluate myself!</p>
<p>The most frustrating thing for me is at the level of individual prompting.</p>
<p>Sometimes I’ll tweak a prompt and capitalize some of the words in it, to emphasize that I <em>really</em> want it to OUTPUT VALID MARKDOWN or similar. Did capitalizing those words make a difference? I still don’t have a good methodology for figuring that out.</p>
<p>We’re left with what’s effectively Vibes Based Development. It’s vibes all the way down.</p>
<p>I’d love to see us move beyond vibes in 2024!</p>
<h4 id="smart-and-dumb">LLMs are really smart, and also really, really dumb</h4>
<p>On the one hand, we keep on finding new things that LLMs can do that we didn’t expect—and that the people who trained the models didn’t expect either. That’s usually really fun!</p>
<p>But on the other hand, the things you sometimes have to do to get the models to behave are often <em>incredibly</em> dumb.</p>
<p>Does ChatGPT <a href="https://arstechnica.com/information-technology/2023/12/is-chatgpt-becoming-lazier-because-its-december-people-run-tests-to-find-out/">get lazy in December</a>, because it’s hidden system prompt includes the current date and its training data shows that people provide less useful answers coming up to the holidays?</p>
<p>The honest answer is “maybe”! No-one is entirely sure, but if you give it a different date its answers may skew slightly longer.</p>
<p>Sometimes it omits sections of code and leaves you to fill them in, but if you tell it you can’t type because you don’t have any fingers it produces the full code for you instead.</p>
<p>There are so many more examples like this. Offer it cash tips for better answers. Tell it your career depends on it. Give it positive reinforcement. It’s all so dumb, but it works!</p>
<h4 id="gullibility-unsolved">Gullibility is the biggest unsolved problem</h4>
<p>I <a href="https://simonwillison.net/2022/Sep/12/prompt-injection/">coined the term prompt injection</a> in September last year.</p>
<p>15 months later, I regret to say that we’re still no closer to a robust, dependable solution to this problem.</p>
<p>I’ve written <a href="https://simonwillison.net/series/prompt-injection/">a ton about this already</a>.</p>
<p>Beyond that specific class of security vulnerabilities, I’ve started seeing this as a wider problem of <strong>gullibility</strong>.</p>
<p>Language Models are gullible. They “believe” what we tell them—what’s in their training data, then what’s in the fine-tuning data, then what’s in the prompt.</p>
<p>In order to be useful tools for us, we need them to believe what we feed them!</p>
<p>But it turns out a lot of the things we want to build need them <em>not</em> to be gullible.</p>
<p>Everyone wants an AI personal assistant. If you hired a real-world personal assistant who believed <em>everything</em> that anyone told them, you would quickly find that their ability to positively impact your life was severely limited.</p>
<p>A lot of people are excited about AI agents—an infuriatingly vague term that seems to be converging on “AI systems that can go away and act on your behalf”. We’ve been talking about them all year, but I’ve seen few if any examples of them running in production, despite lots of exciting prototypes.</p>
<p>I think this is because of gullibility.</p>
<p>Can we solve this? Honestly, I’m beginning to suspect that you can’t fully solve gullibility without achieving <a href="https://en.wikipedia.org/wiki/Artificial_general_intelligence">AGI</a>. So it may be quite a while before those agent dreams can really start to come true!</p>
<h4 id="code-best-application">Code may be the best application</h4>
<p>Over the course of the year, it’s become increasingly clear that writing code is one of the things LLMs are <em>most</em> capable of.</p>
<p>If you think about what they do, this isn’t such a big surprise. The grammar rules of programming languages like Python and JavaScript are massively less complicated than the grammar of Chinese, Spanish or English.</p>
<p>It’s still astonishing to me how effective they are though.</p>
<p>One of the great weaknesses of LLMs is their tendency to hallucinate—to imagine things that don’t correspond to reality. You would expect this to be a particularly bad problem for code—if an LLM hallucinates a method that doesn’t exist, the code should be useless.</p>
<p>Except... you can run generated code to see if it’s correct. And with patterns <a href="https://simonwillison.net/2023/Apr/12/code-interpreter/">like ChatGPT Code Interpreter</a> the LLM can execute the code itself, process the error message, then rewrite it and keep trying until it works!</p>
<p>So hallucination is a much lesser problem for code generation than for anything else. If only we had the equivalent of Code Interpreter for fact-checking natural language!</p>
<p>How should we feel about this as software engineers?</p>
<p>On the one hand, this feels like a threat: who needs a programmer if ChatGPT can write code for you?</p>
<p>On the other hand, as software engineers we are better placed to take advantage of this than anyone else. We’ve all been given <a href="https://simonwillison.net/2023/Oct/17/open-questions/#open-questions.036.jpeg">weird coding interns</a>—we can use our deep knowledge to prompt them to solve coding problems more effectively than anyone else can.</p>
<h4 id="ethics-diabolically-complex">The ethics of this space remain diabolically complex</h4>
<p>In September last year Andy Baio and I <a href="https://simonwillison.net/2022/Sep/5/laion-aesthetics-weeknotes/">produced the first major story</a> on the unlicensed training data behind Stable Diffusion.</p>
<p>Since then, almost every major LLM (and most of the image generation models) have also been trained on unlicensed data.</p>
<p>Just this week, the New York Times <a href="https://www.nytimes.com/2023/12/27/business/media/new-york-times-open-ai-microsoft-lawsuit.html">launched a landmark lawsuit against OpenAI and Microsoft</a> over this issue. The <a href="https://nytco-assets.nytimes.com/2023/12/NYT_Complaint_Dec2023.pdf">69 page PDF</a> is genuinely worth reading—especially the first few pages, which lay out the issues in a way that’s surprisingly easy to follow. The rest of the document includes some of the clearest explanations of what LLMs are, how they work and how they are built that I’ve read anywhere.</p>
<p>The legal arguments here are complex. I’m not a lawyer, but I don’t think this one will be easily decided. Whichever way it goes, I expect this case to have a profound impact on how this technology develops in the future.</p>
<p>Law is not ethics. Is it OK to train models on people’s content without their permission, when those models will then be used in ways that compete with those people?</p>
<p>As the quality of results produced by AI models has increased over the year, these questions have become even more pressing.</p>
<p>The impact on human society in terms of these models is already huge, if difficult to objectively measure.</p>
<p>People have certainly lost work to them—anecdotally, I’ve seen this for copywriters, artists and translators.</p>
<p>There are a great deal of untold stories here. I’m hoping 2024 sees significant amounts of dedicated journalism on this topic.</p>
<h4 id="my-blog-2023">My blog in 2023</h4>
<p>Here’s a tag cloud for content I posted to my blog in 2023 (generated <a href="https://simonwillison.net/dashboard/tag-cloud-by-year/?year=2023">using Django SQL Dashboard</a>):</p>
<p><img src="https://static.simonwillison.net/static/2023/2023-tag-cloud.jpg" alt="Tag cloud words in order of size: ai, generativeai, llms, openai, chatgpt, projects, python, datasette, ethics, llama, homebrewllms, sqlite, gpt3, promptengineering, promptinjection, llm, security, opensource, gpt4, weeknotes "></p>
<p>The top five: <a href="https://simonwillison.net/tags/ai/">ai</a> (342), <a href="https://simonwillison.net/tags/generativeai/">generativeai</a> (300), <a href="https://simonwillison.net/tags/llms/">llms</a> (287), <a href="https://simonwillison.net/tags/openai/">openai</a> (86), <a href="https://simonwillison.net/tags/chatgpt/">chatgpt</a> (78).</p>
<p>I’ve written a lot about this stuff!</p>
<p>I grabbed a screenshot of my <a href="https://plausible.io/">Plausible</a> analytics for the year, fed that to ChatGPT Vision, told it to extract the data into a table, then got it to mix in entry titles (from a SQL query it wrote) and produced this table with it. Here are my top entries this year by amount of traffic:</p>
<table>
<thead>
<tr>
<th>Article</th>
<th>Visitors</th>
<th>Pageviews</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://simonwillison.net/2023/Feb/15/bing/">Bing: “I will not harm you unless you harm me first”</a></td>
<td>1.1M</td>
<td>1.3M</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/May/4/no-moat/">Leaked Google document: “We Have No Moat, And Neither Does OpenAI”</a></td>
<td>132k</td>
<td>162k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Mar/11/llama/">Large language models are having their Stable Diffusion moment</a></td>
<td>121k</td>
<td>150k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Apr/14/worst-that-can-happen/">Prompt injection: What’s the worst that can happen?</a></td>
<td>79.8k</td>
<td>95.9k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Oct/23/embeddings/">Embeddings: What they are and why they matter</a></td>
<td>61.7k</td>
<td>79.3k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Aug/3/weird-world-of-llms/">Catching up on the weird world of LLMs</a></td>
<td>61.6k</td>
<td>85.9k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Nov/29/llamafile/">llamafile is the new best way to run a LLM on your own computer</a></td>
<td>52k</td>
<td>66k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/May/2/prompt-injection-explained/">Prompt injection explained, with video, slides, and a transcript</a></td>
<td>51k</td>
<td>61.9k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Mar/27/ai-enhanced-development/">AI-enhanced development makes me more ambitious with my projects</a></td>
<td>49.6k</td>
<td>60.1k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Jun/8/gpt-tokenizers/">Understanding GPT tokenizers</a></td>
<td>49.5k</td>
<td>61.1k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Nov/15/gpts/">Exploring GPTs: ChatGPT in a trench coat?</a></td>
<td>46.4k</td>
<td>58.5k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Mar/17/beat-chatgpt-in-a-browser/">Could you train a ChatGPT-beating model for $85,000 and run it in a browser?</a></td>
<td>40.5k</td>
<td>49.2k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Jan/13/semantic-search-answers/">How to implement Q&amp;A against your documentation with GPT3, embeddings and Datasette</a></td>
<td>37.3k</td>
<td>44.9k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/May/27/lawyer-chatgpt/">Lawyer cites fake cases invented by ChatGPT, judge is not amused</a></td>
<td>37.1k</td>
<td>47.4k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Oct/26/add-a-walrus/">Now add a walrus: Prompt engineering in DALL-E 3</a></td>
<td>32.8k</td>
<td>41.2k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Apr/16/web-llm/">Web LLM runs the vicuna-7b Large Language Model entirely in your browser, and it’s very impressive</a></td>
<td>32.5k</td>
<td>38.2k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Mar/10/chatgpt-internet-access/">ChatGPT can’t access the internet, even though it really looks like it can</a></td>
<td>30.5k</td>
<td>34.2k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Mar/13/alpaca/">Stanford Alpaca, and the acceleration of on-device large language model development</a></td>
<td>29.7k</td>
<td>35.7k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Aug/01/llama-2-mac/">Run Llama 2 on your own Mac using LLM and Homebrew</a></td>
<td>27.9k</td>
<td>33.6k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/May/4/midjourney-51/">Midjourney 5.1</a></td>
<td>26.7k</td>
<td>33.4k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Apr/02/calculator-for-words/">Think of language models like ChatGPT as a “calculator for words”</a></td>
<td>25k</td>
<td>31.8k</td>
</tr>
<tr>
<td><a href="https://simonwillison.net/2023/Oct/14/multi-modal-prompt-injection/">Multi-modal prompt injection image attacks against GPT-4V</a></td>
<td>23.7k</td>
<td>27.4k</td>
</tr>
</tbody>
</table>
<p>I also gave a bunch of talks and podcast appearances. I’ve started habitually <a href="https://simonwillison.net/2023/Aug/6/annotated-presentations/">turning my talks into annotated presentations</a>—here are my best from 2023:</p>
<ul>
<li><a href="https://simonwillison.net/2023/May/2/prompt-injection-explained/">Prompt injection explained, with video, slides, and a transcript</a></li>
<li><a href="https://simonwillison.net/2023/Aug/3/weird-world-of-llms/">Catching up on the weird world of LLMs</a></li>
<li><a href="https://simonwillison.net/2023/Aug/27/wordcamp-llms/">Making Large Language Models work for you</a></li>
<li><a href="https://simonwillison.net/2023/Oct/17/open-questions/">Open questions for AI engineering</a></li>
<li><a href="https://simonwillison.net/2023/Oct/23/embeddings/">Embeddings: What they are and why they matter</a></li>
<li><a href="https://simonwillison.net/2023/Nov/10/universe/">Financial sustainability for open source projects at GitHub Universe</a></li>
</ul>
<p>And in podcasts:</p>
<ul>
<li>
<a href="https://simonwillison.net/2023/Apr/2/what-ai-can-do-for-you/">What AI can do for you</a> on the Theory of Change</li>
<li>
<a href="https://simonwillison.net/2023/Apr/8/working-in-public/">Working in public</a> on Path to Citus Con</li>
<li>
<a href="https://simonwillison.net/2023/Apr/8/llms-break-the-internet/">LLMs break the internet</a> on the Changelog</li>
<li>
<a href="https://simonwillison.net/2023/Sep/29/llms-podcast/">Talking Large Language Models</a> on Rooftop Ruby</li>
<li>
<a href="https://simonwillison.net/2023/Nov/25/newsroom-robots/">Thoughts on the OpenAI board situation</a> on Newsroom Robots</li>
<li>
<a href="https://simonwillison.net/2023/Dec/20/mitigate-prompt-injection/">Industry’s Tardy Response to the AI Prompt Injection Vulnerability</a> on RedMonk Conversations</li>
</ul>




</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bazzite – a SteamOS-like OCI image for desktop, living room, and handheld PCs (348 pts)]]></title>
            <link>https://github.com/ublue-os/bazzite</link>
            <guid>38828040</guid>
            <pubDate>Sun, 31 Dec 2023 22:21:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ublue-os/bazzite">https://github.com/ublue-os/bazzite</a>, See on <a href="https://news.ycombinator.com/item?id=38828040">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/ublue-os/bazzite/blob/main/repo_content/Bazzite_Tagline.svg?raw=true"><img src="https://github.com/ublue-os/bazzite/raw/main/repo_content/Bazzite_Tagline.svg?raw=true" alt="Bazzite"></a>
</p>
<p dir="auto"><a href="https://github.com/ublue-os/bazzite/actions/workflows/build.yml"><img src="https://github.com/ublue-os/bazzite/actions/workflows/build.yml/badge.svg" alt="build-bazzite"></a></p>
<hr>
<h2 tabindex="-1" dir="auto">Table of Contents</h2>
<ul dir="auto">
<li><a href="https://github.com/ublue-os/bazzite#about--features">Features for <strong>All</strong> Bazzite Images</a>
<ul dir="auto">
<li><a href="https://github.com/ublue-os/bazzite#desktop">Features for <strong>Desktop</strong> Images</a></li>
<li><a href="https://github.com/ublue-os/bazzite#steam-deckhome-theater-pcs-htpcs">Features for <strong>Steam Deck / HTPC</strong> Images</a></li>
<li><a href="https://github.com/ublue-os/bazzite#gnome">Features for <strong>GNOME</strong> Images</a></li>
<li><a href="https://github.com/ublue-os/bazzite#features-from-upstream">Features from Upstream</a></li>
</ul>
</li>
<li><a href="https://github.com/ublue-os/bazzite#why">Why &amp; Frequently Asked Questions</a></li>
<li><a href="https://github.com/ublue-os/bazzite#showcase">Showcase &amp; Newsletter</a></li>
<li><a href="https://github.com/ublue-os/bazzite#custom-packages">Custom Packages</a></li>
<li><a href="https://github.com/ublue-os/bazzite#verification">Verification &amp; Metrics</a></li>
<li><a href="https://github.com/ublue-os/bazzite#special-thanks">Special Thanks</a></li>
<li><a href="https://github.com/ublue-os/bazzite#build-your-own">Building Your Own</a></li>
<li><a href="https://github.com/ublue-os/bazzite#join-the-community">Community</a></li>
</ul>
<hr>
<h2 tabindex="-1" dir="auto">About &amp; Features</h2>
<p dir="auto">Bazzite is an OCI image that serves as an alternative operating system for the <a href="https://www.steamdeck.com/" rel="nofollow">Steam Deck</a>, and a ready-to-game SteamOS-like for desktop computers and living room home theater PCs.</p>
<p dir="auto">Bazzite is built from <a href="https://github.com/ublue-os/main">ublue-os/main</a> and <a href="https://github.com/ublue-os/nvidia">ublue-os/nvidia</a> using <a href="https://fedoraproject.org/" rel="nofollow">Fedora</a> technology, which means expanded hardware support and built in drivers are included. Additionally, Bazzite adds the following features:</p>
<ul dir="auto">
<li>Proprietary Nvidia drivers pre-installed.</li>
<li>Full hardware accelerated codec support for H264 decoding.</li>
<li>Full support for AMD's ROCM OpenCL/HIP run-times.</li>
<li><a href="https://github.com/medusalix/xone">xone</a>, <a href="https://github.com/atar-axis/xpadneo">xpadneo</a>, and <a href="https://github.com/ublue-os/xpad-noone">xpad-noone</a> drivers for Xbox controllers.</li>
<li>Full support for <a href="https://www.synaptics.com/products/displaylink-graphics" rel="nofollow">DisplayLink</a>.</li>
<li>Includes Valve's KDE themes from SteamOS.</li>
<li><a href="https://github.com/ishitatsuyuki/LatencyFleX">LatencyFleX</a>, <a href="https://github.com/DadSchoorse/vkBasalt">vkBasalt</a>, <a href="https://github.com/flightlessmango/Mangohud">MangoHud</a>, and <a href="https://github.com/nowrep/obs-vkcapture">OBS VkCapture</a> installed and available by default</li>
<li>Support for <a href="https://www.wallpaperengine.io/en" rel="nofollow">Wallpaper Engine</a>. <sub><sup>(Only on KDE)</sup></sub></li>
<li><a href="https://github.com/GerbilSoft/rom-properties">ROM Properties Page shell extension</a> included.</li>
<li>Full support for <a href="https://github.com/Frogging-Family/wine-tkg-git/issues/936" data-hovercard-type="issue" data-hovercard-url="/Frogging-Family/wine-tkg-git/issues/936/hovercard">Winesync/Fastsync/NTsync</a>.</li>
<li><a href="https://github.com/89luca89/distrobox">Distrobox</a> preinstalled with automatic updates for created containers.</li>
<li>Automated <code>duperemove</code> and <code>rmlint</code> services for reducing the disk space used by wine prefix contents.</li>
<li>Support for HDMI CEC via <a href="https://libcec.pulse-eight.com/" rel="nofollow">libCEC</a>.</li>
<li><a href="https://github.com/pop-os/system76-scheduler">System76-Scheduler</a> preinstalled, providing automatic process priority tweaks to your focused application and keeping CPU time for background processes to a minimum.</li>
<li>Customized System76-Scheduler config with additional rules.</li>
<li>Uses <a href="https://github.com/google/bbr">Google's BBR TCP congestion control</a> by default.</li>
<li><a href="https://github.com/sezanzeb/input-remapper">Input Remapper</a> preinstalled and enabled. <sub><sup>(Available but default-disabled on the Deck variant)</sup></sub></li>
<li>Bazzite Portal provides an easy way to install numerous applications and tweaks, including installing <a href="https://gitlab.com/corectrl/corectrl" rel="nofollow">CoreCtrl</a> and <a href="https://gitlab.com/leinardi/gwe" rel="nofollow">GreenWithEnvy</a>.</li>
<li><a href="https://nixos.org/" rel="nofollow">Nix</a> package manager with <a href="https://getfleek.dev/" rel="nofollow">Fleek</a> optionally available for install via Bazzite Portal.</li>
<li><a href="https://brew.sh/" rel="nofollow">Brew</a> package manager optionally available for install via Bazzite Portal.</li>
<li><a href="https://waydro.id/" rel="nofollow">Waydroid</a> preinstalled for running Android apps. Set it up with this <a href="https://universal-blue.discourse.group/docs?topic=32" rel="nofollow">quick guide</a>. Future releases will offer to set this up for you through Bazzite Portal. <sub><sup>(Not available on Nvidia builds)</sup></sub></li>
<li>Manage applications using <a href="https://github.com/tchx84/Flatseal">Flatseal</a>, <a href="https://github.com/flattool/warehouse">Warehouse</a>, and <a href="https://github.com/mijorus/gearlever">Gear Lever</a>.</li>
<li><a href="https://gitlab.com/CalcProgrammer1/OpenRGB" rel="nofollow">OpenRGB</a> i2c-piix4 and i2c-nct6775 drivers for controlling RGB on certain motherboards.</li>
<li><a href="https://openrazer.github.io/" rel="nofollow">OpenRazer</a> drivers built in, Select OpenRazer in Bazzite Portal or run <code>ujust install-openrazer</code> in a terminal to begin using it.</li>
<li><a href="https://opentabletdriver.net/" rel="nofollow">OpenTabletDriver</a> udev rules built in, with the full software suite installable via Bazzite Portal or by running <code>ujust install-opentabletdriver</code> in a terminal.</li>
<li><a href="https://github.com/hannesmann/gcadapter-oc-kmod">GCAdapter_OC</a> driver for overclocking Nintendo's Gamecube Controller Adapter to 1000hz polling.</li>
<li>Out of the box support for <a href="https://wooting.io/" rel="nofollow">Wooting</a> keyboards.</li>
<li>Built in support for Southern Islands <sub><sup>(HD 7000)</sup></sub> and Sea Islands <sub><sup>(HD 8000)</sup></sub> AMD GPUs under the <code>amdgpu</code> driver.</li>
<li>A fix is available for <a href="https://github.com/ValveSoftware/Source-1-Games/issues/5043" data-hovercard-type="issue" data-hovercard-url="/ValveSoftware/Source-1-Games/issues/5043/hovercard">a 32-bit Source 1 engine game bug <sub><sup>(IE: TF2)</sup></sub></a> that makes the game crash on launch - <code>ujust patch-source1-tcmalloc</code></li>
<li><a href="https://invent.kde.org/system/xwaylandvideobridge" rel="nofollow">XwaylandVideoBridge</a> is available for Discord screensharing on Wayland.</li>
<li><a href="https://github.com/linuxmint/webapp-manager">Webapp Manager</a> is available for creating applications from websites for a variety of browsers, including Firefox.</li>
</ul>
<h3 tabindex="-1" dir="auto">Desktop</h3>
<p dir="auto">Common variant available as <code>bazzite</code>, suitable for desktop computers.</p>
<ul dir="auto">
<li>Automatic updates for the OS, Flatpaks, Nix packages <sup><sub>(Via Fleek)</sub></sup>, and all Distrobox containers.</li>
</ul>
<div dir="auto"><p dir="auto">Important</p><p dir="auto"><strong>ISOs can be downloaded from our releases page <a href="https://github.com/ublue-os/bazzite/releases">here</a>, and a helpful install guide can be found <a href="https://universal-blue.discourse.group/docs?topic=30" rel="nofollow">here</a>.</strong> If you experience any issues with installing Bazzite, then check out our <a href="https://universal-blue.discourse.group/docs?topic=34" rel="nofollow">troubleshoot guide</a>.</p>
</div>
<p dir="auto">If you're on an existing Universal Blue image follow <a href="https://universal-blue.org/images/#image-list" rel="nofollow">these instructions</a>. To rebase an existing upstream Fedora Silverblue/Kinoite ostree system to this image:</p>
<div dir="auto" data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite:latest"><pre>rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite:latest</pre></div>
<p dir="auto">or for devices with Nvidia GPUs:</p>
<div dir="auto" data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-nvidia:latest"><pre>rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-nvidia:latest</pre></div>
<p dir="auto"><strong>For users with Secure Boot enabled:</strong> Run <code>ujust enroll-secure-boot-key</code> and enter the password <code>ublue-os</code> if prompted to enroll the required key.</p>
<h3 tabindex="-1" dir="auto">Steam Deck/Home Theater PCs (HTPCs)</h3>
<div dir="auto"><p dir="auto">Important</p><p dir="auto">Devices that are NOT the Steam Deck can still use the bazzite-deck images, but must use an AMD/Intel GPU.</p>
</div>
<p dir="auto">Variant designed for usage as an alternative to SteamOS on the Steam Deck, and for a console-like experience on HTPCs, available as <code>bazzite-deck</code>:</p>
<ul dir="auto">
<li>Directly boots to Gamemode matching SteamOS's behavior.</li>
<li><strong>Automatic <code>duperemove</code> greatly trims the size of compatdata.</strong></li>
<li><strong>Latest version of Mesa creates smaller shader caches and does not require them to prevent stutter.</strong></li>
<li><strong>Able to be booted even if the drive is full.</strong></li>
<li><strong>Support for every language supported by upstream Fedora.</strong></li>
<li><strong>Uses Wayland on the desktop with <a href="https://github.com/Supreeeme/extest">support for Steam input</a>.</strong></li>
<li>Features ported versions of most SteamOS packages, including drivers, firmware updaters, and fan controllers <a href="https://gitlab.com/evlaV" rel="nofollow">from the evlaV repository</a>.</li>
<li>Patched Mesa for proper framerate control from Gamescope.</li>
<li>Comes with patches from <a href="https://gitlab.com/popsulfr/steamos-btrfs" rel="nofollow">SteamOS BTRFS</a> for full BTRFS support for the SD card by default.</li>
<li>Ships with a ported copy of <a href="https://github.com/kmicki/SteamDeckGyroDSU">SDGyroDSU</a>, enabled by default.</li>
<li>Option to install <a href="https://github.com/SteamDeckHomebrew/decky-loader">Decky Loader</a>, <a href="https://www.emudeck.com/" rel="nofollow">EmuDeck</a>, <a href="https://retrodeck.net/" rel="nofollow">RetroDECK</a>, and <a href="https://davidotek.github.io/protonup-qt/" rel="nofollow">ProtonUp-Qt</a>, among numerous other useful packages on installation.</li>
<li>Custom update system allows for the OS, Flatpaks, Nix packages <sup><sub>(Via Fleek)</sub></sup>, and Distrobox images to be updated directly from the Gamemode UI.</li>
<li>Built in support for Windows dual-boot thanks to Fedora's installation of GRUB being left intact.</li>
<li>Update break something? Easily roll back to the previous version of Bazzite thanks to <code>rpm-ostree</code>'s rollback functionality. You can even select previous images at boot.</li>
<li>Steam and Lutris preinstalled on the image as layered packages.</li>
<li><a href="https://github.com/trigg/Discover">Discover Overlay</a> for Discord pre-installed and automatically launches in both Gamemode and on the Desktop if Discord is installed. <a href="https://trigg.github.io/Discover/bazzite" rel="nofollow">View the official documentation here</a>.</li>
<li>Uses ZRAM<sub><sup>(4GB)</sup></sub> with the ZSTD compression algorithm by default with the option to switch back to a 1GB swap file and set a custom size for it if desired.</li>
<li>Kyber I/O scheduler to prevent I/O starvation when installing games or during background <code>duperemove</code> and <code>rmlint</code> processes.</li>
<li>Applies SteamOS's kernel parameters.</li>
<li>Color calibrated display profiles for matte and reflective Steam Deck screens included.</li>
<li>Default-disabled power-user features, including:
<ul dir="auto">
<li>Service for low-risk undervolting of the Steam Deck via <a href="https://github.com/FlyGoat/RyzenAdj">RyzenAdj</a> and <a href="https://gitlab.com/leogx9r/ryzen_smu" rel="nofollow">Ryzen SMU</a>, see <code>ryzenadj.service</code> and <code>/etc/default/ryzenadj</code>.</li>
<li>Service for limiting the max charge level of the battery, see <code>batterylimit.service</code> and <code>/etc/default/batterylimit</code>. <sup><sub>(Works even when the device is off)</sub></sup></li>
<li>Built in support for display overclocking. For example, add <code>GAMESCOPE_OVERRIDE_REFRESH_RATE=40,70</code> to <code>/etc/environment</code>.</li>
<li>Ability to use X11 on the desktop if desired by editing <code>/etc/default/desktop-wayland</code>.</li>
<li>32GB RAM mod your Steam Deck? Enjoy double the maximum VRAM amount, automatically applied. <sup><sub>(Can you share your soldering skills?)</sub></sup></li>
</ul>
</li>
<li>Steam Deck hardware-specific services can be disabled by running <code>ujust disable-deck-services</code> in the terminal, useful for trying this image on other handhelds or for use on HTPCs.</li>
<li>More information can be found <a href="https://universal-blue.discourse.group/docs?topic=37" rel="nofollow">here</a> on the Bazzite Steam Deck images.</li>
</ul>
<div dir="auto"><p dir="auto">Warning</p><p dir="auto"><strong>Due to an upstream bug, Bazzite cannot be used on Steam Decks with 64GB eMMC storage at this time. Upgrading the storage resolves the issue.</strong></p>
</div>
<div dir="auto"><p dir="auto">Important</p><p dir="auto"><strong>ISOs can be downloaded from our releases page <a href="https://github.com/ublue-os/bazzite/releases">here</a>, and a helpful install guide can be found <a href="https://universal-blue.discourse.group/docs?topic=30" rel="nofollow">here</a>.</strong> If you experience any issues with installing Bazzite, then check out our <a href="https://universal-blue.discourse.group/docs?topic=34" rel="nofollow">troubleshoot guide</a>.</p>
</div>
<p dir="auto">If you're on an existing Universal Blue image follow <a href="https://universal-blue.org/images/#image-list" rel="nofollow">these instructions</a>. To rebase an existing upstream Fedora Silverblue/Kinoite ostree system to this image:</p>
<div dir="auto" data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-deck:latest"><pre>rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-deck:latest</pre></div>
<h3 tabindex="-1" dir="auto">GNOME</h3>
<p dir="auto">Builds with the GNOME desktop environment are available in both desktop and deck flavors. These builds come with the following additional features:</p>
<ul dir="auto">
<li><a href="https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/1154" rel="nofollow">Variable refresh rate support and fractional scaling enabled under Wayland</a>.</li>
<li>Custom menu in the top bar for returning to game mode, launching Steam, and opening a number of useful utilities. <sub><sup>(Only on Steam Deck builds)</sup></sub></li>
<li><a href="https://extensions.gnome.org/extension/1319/gsconnect/" rel="nofollow">GSConnect</a> preinstalled and ready to use.</li>
<li>Features optional Valve-inspired themes matching Vapor and VGUI2 from SteamOS.</li>
<li><a href="https://github.com/jeffshee/gnome-ext-hanabi">Hanabi extension</a> included to offer similar features to Wallpaper Engine in KDE.</li>
<li>Numerous optional extensions pre-installed, including <a href="https://www.youtube.com/watch?v=nbCg9_YgKgM" rel="nofollow">important user experience fixes</a>.</li>
<li>Automatic updates for the <a href="https://github.com/rafaelmardojai/firefox-gnome-theme">Firefox GNOME theme</a> and <a href="https://github.com/rafaelmardojai/thunderbird-gnome-theme">Thunderbird GNOME theme</a>. <sup><sub>(If installed)</sub></sup></li>
</ul>
<div dir="auto"><p dir="auto">Important</p><p dir="auto"><strong>ISOs can be downloaded from our releases page <a href="https://github.com/ublue-os/bazzite/releases">here</a>, and a helpful install guide can be found <a href="https://universal-blue.discourse.group/docs?topic=30" rel="nofollow">here</a>.</strong> If you experience any issues with installing Bazzite, then check out our <a href="https://universal-blue.discourse.group/docs?topic=34" rel="nofollow">troubleshoot guide</a>.</p>
</div>
<p dir="auto">To rebase an existing ostree system to the <strong>desktop</strong> release:</p>
<div dir="auto" data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-gnome:latest"><pre>rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-gnome:latest</pre></div>
<p dir="auto">To rebase an existing ostree system to the <strong>desktop with Nvidia drivers</strong> release:</p>
<div dir="auto" data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-gnome-nvidia:latest"><pre>rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-gnome-nvidia:latest</pre></div>
<div dir="auto"><p dir="auto">Warning</p><p dir="auto"><strong>Due to an upstream bug, Bazzite cannot be used on Steam Decks with 64GB eMMC storage at this time.</strong></p>
</div>
<p dir="auto">To rebase an existing ostree system to the <strong>Steam Deck/HTPC</strong> release:</p>
<div dir="auto" data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-deck-gnome:latest"><pre>rpm-ostree rebase ostree-unverified-registry:ghcr.io/ublue-os/bazzite-deck-gnome:latest</pre></div>
<h3 tabindex="-1" dir="auto">Features from Upstream</h3>
<h4 tabindex="-1" dir="auto">Universal Blue</h4>
<ul dir="auto">
<li>Flathub is enabled by default.</li>
<li><a href="https://github.com/casey/just"><code>ujust</code></a> commands for convenience.</li>
<li>Multi-media codecs out of the box.</li>
<li>Rollback Bazzite from any build within the last 90 days.</li>
</ul>
<h4 tabindex="-1" dir="auto">Features from Fedora Linux (Kinoite &amp; Silverblue)</h4>
<ul dir="auto">
<li>A rock solid and stable base.</li>
<li>System packages stay relatively up to date.</li>
<li>Can layer Fedora packages to the image without losing them between updates.</li>
<li>Security focused with <a href="https://github.com/SELinuxProject/selinux">SELinux</a> preinstalled and configured out of the box.</li>
<li>The ability to rebase to different Fedora libostree images, if desired, without losing user data.</li>
<li>Printing support thanks to <a href="https://www.cups.org/" rel="nofollow">CUPS</a> being preinstalled.</li>
</ul>
<h2 tabindex="-1" dir="auto">Why</h2>
<p dir="auto">Bazzite started as a project to resolve some of the issues that plague SteamOS, mainly out of date packages (despite an Arch base) and the lack of a functional package manager.</p>
<p dir="auto">Despite this project also being image-based, you are able to install any Fedora package straight from the command line. These packages will persist across updates <sub><sup>(So go ahead and install that obscure VPN software you spent an hour trying to get working in SteamOS)</sup></sub>. Additionally, Bazzite is updated multiple times a week with packages from upstream Fedora, giving you the best possible performance and latest features - all on a stable base.</p>
<p dir="auto">Bazzite ships with the latest Linux kernel and SELinux enabled by default with full support for secure boot <sub><sup>(Run <code>ujust enroll-secure-boot-key</code> and enter the password <code>ublue-os</code> if prompted to enroll our key)</sup></sub> and disk encryption, making this a sensible solution for general computing. <sup><sub>(Yes, you can print from Bazzite)</sub></sup></p>
<p dir="auto">Check out the <a href="https://universal-blue.discourse.group/docs?topic=33" rel="nofollow">Frequently Asked Questions</a> for details on what makes Bazzite stand out from other Linux operating systems.</p>
<h2 tabindex="-1" dir="auto">Showcase</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ublue-os/bazzite/blob/main/repo_content/desktop1.png?raw=true"><img src="https://github.com/ublue-os/bazzite/raw/main/repo_content/desktop1.png?raw=true" alt="KDE Vapor Theme" title="KDE Vapor Theme"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ublue-os/bazzite/blob/main/repo_content/desktop2.png?raw=true"><img src="https://github.com/ublue-os/bazzite/raw/main/repo_content/desktop2.png?raw=true" alt="KDE VGUI2 Theme" title="KDE VGUI2 Theme"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ublue-os/bazzite/blob/main/repo_content/gamemode.png?raw=true"><img src="https://github.com/ublue-os/bazzite/raw/main/repo_content/gamemode.png?raw=true" alt="Steam Game Mode" title="Steam Game Mode"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ublue-os/bazzite/blob/main/repo_content/waydroid.png?raw=true"><img src="https://github.com/ublue-os/bazzite/raw/main/repo_content/waydroid.png?raw=true" alt="Waydroid" title="Waydroid"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ublue-os/bazzite/blob/main/repo_content/distrobox.png?raw=true"><img src="https://github.com/ublue-os/bazzite/raw/main/repo_content/distrobox.png?raw=true" alt="Distrobox Terminals" title="Distrobox Terminals"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ublue-os/bazzite/blob/main/repo_content/gnome1.png?raw=true"><img src="https://github.com/ublue-os/bazzite/raw/main/repo_content/gnome1.png?raw=true" alt="GNOME Vapor Theme" title="GNOME Vapor Theme"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ublue-os/bazzite/blob/main/repo_content/gnome2.png?raw=true"><img src="https://github.com/ublue-os/bazzite/raw/main/repo_content/gnome2.png?raw=true" alt="GNOME VGUI2 Theme" title="GNOME VGUI2 Theme"></a></p>
<p dir="auto">Check out our <a href="https://universal-blue.discourse.group/tag/bazzite-buzz" rel="nofollow">newsletters</a> and <a href="https://universal-blue.discourse.group/tags/c/bazzite/5/announcements" rel="nofollow">announcements</a> that get published on a regular basis for updates on the project.</p>
<h2 tabindex="-1" dir="auto">Custom Packages</h2>
<p dir="auto">Ported SteamOS and ChimeraOS packages, among others used by Bazzite, are built on Copr in <a href="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/" rel="nofollow">bazzite</a> and <a href="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/" rel="nofollow">bazzite-multilib</a>.</p>
<table>
<thead>
<tr>
<th>Package</th>
<th>Status</th>
</tr>
</thead>
<tbody>
<tr>
<td>bluez</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/536f2db12b9b36ee55f575bc134a2bf8623f327249cc8e9ab5e1658470cf72dc/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f626c75657a2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/536f2db12b9b36ee55f575bc134a2bf8623f327249cc8e9ab5e1658470cf72dc/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f626c75657a2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/package/bluez/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/trigg/Discover">discover-overlay</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/d6d4838e055473884c72547af3671e07ec7717727199bc07b1838b0f31bd8154/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f646973636f7665722d6f7665726c61792f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/d6d4838e055473884c72547af3671e07ec7717727199bc07b1838b0f31bd8154/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f646973636f7665722d6f7665726c61792f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/discover-overlay/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>ds-inhibit</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b2f3420031e30cb466fa328b88f8577de702c6fe61872d4bb9455e0e3a0fb553/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f64732d696e68696269742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/b2f3420031e30cb466fa328b88f8577de702c6fe61872d4bb9455e0e3a0fb553/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f64732d696e68696269742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/ds-inhibit/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>duperemove</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/febc1cbb1455ade9e7ca14685895293ab75be0787ec1814bc1d3485e3a602043/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f6475706572656d6f76652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/febc1cbb1455ade9e7ca14685895293ab75be0787ec1814bc1d3485e3a602043/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f6475706572656d6f76652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/duperemove/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/Supreeeme/extest">extest</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e3b94e1a15d43c99e757eaf78c1baac6117d12ad4eed8f53d574db22f5a2d4a4/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f6578746573742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/e3b94e1a15d43c99e757eaf78c1baac6117d12ad4eed8f53d574db22f5a2d4a4/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f6578746573742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/package/extest/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>gamescope</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/17fd13fea7504e9ad8dad032ffdfb87dd0524f1f82721603811a3072b4d18610/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f67616d6573636f70652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/17fd13fea7504e9ad8dad032ffdfb87dd0524f1f82721603811a3072b4d18610/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f67616d6573636f70652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/package/gamescope/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/ChimeraOS/gamescope-session">gamescope-session-plus</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/5f9eaf4689a55631082a8fcfea16aad113e83ecc071a3cdd4d0ca38870708310/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f67616d6573636f70652d73657373696f6e2d706c75732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/5f9eaf4689a55631082a8fcfea16aad113e83ecc071a3cdd4d0ca38870708310/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f67616d6573636f70652d73657373696f6e2d706c75732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/gamescope-session-plus/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/ChimeraOS/gamescope-session-steam">gamescope-session-steam</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e86192ba573003cc60c0f967ae6338b491626c5f94e4eff551fdc956da0e3165/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f67616d6573636f70652d73657373696f6e2d737465616d2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/e86192ba573003cc60c0f967ae6338b491626c5f94e4eff551fdc956da0e3165/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f67616d6573636f70652d73657373696f6e2d737465616d2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/gamescope-session-steam/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>gamescope-shaders</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3af54f73202b9110cfad829da693f59985d3f1d3a76152ee87721d6f0cc752bb/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f67616d6573636f70652d736861646572732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/3af54f73202b9110cfad829da693f59985d3f1d3a76152ee87721d6f0cc752bb/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f67616d6573636f70652d736861646572732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/gamescope-shaders/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>galileo-mura</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/2ecce8f04aaad491e8403a28453d9209bddecf0fb88bd219784462fe022e3fbb/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f67616c696c656f2d6d7572612f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/2ecce8f04aaad491e8403a28453d9209bddecf0fb88bd219784462fe022e3fbb/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f67616c696c656f2d6d7572612f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/galileo-mura/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/maxwellainatchi/gnome-randr-rust">gnome-randr-rust</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/50a547471f1f2d1c82b274f197212ea1e0cf4f84c17af5dd33585850df771b49/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d72616e64722d727573742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/50a547471f1f2d1c82b274f197212ea1e0cf4f84c17af5dd33585850df771b49/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d72616e64722d727573742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/gnome-randr-rust/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>gnome-shell-extension-bazzite-menu</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/7bf2076145532016012cdedaecea51a5e7cc4a342c628deb99696cfe20ac13e9/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d7368656c6c2d657874656e73696f6e2d62617a7a6974652d6d656e752f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/7bf2076145532016012cdedaecea51a5e7cc4a342c628deb99696cfe20ac13e9/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d7368656c6c2d657874656e73696f6e2d62617a7a6974652d6d656e752f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/gnome-shell-extension-bazzite-menu/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://extensions.gnome.org/extension/1326/block-caribou/" rel="nofollow">gnome-shell-extension-caribou-blocker</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fd3e7af11b6988d7fab794ec4c47e3bcf954925bca9bd7622cfe82151d97dfc4/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d7368656c6c2d657874656e73696f6e2d63617269626f752d626c6f636b65722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/fd3e7af11b6988d7fab794ec4c47e3bcf954925bca9bd7622cfe82151d97dfc4/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d7368656c6c2d657874656e73696f6e2d63617269626f752d626c6f636b65722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/gnome-shell-extension-caribou-blocker/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/jeffshee/gnome-ext-hanabi">gnome-shell-extension-hanabi</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/66345e2a3d1ef77ffe823b05a7182c7349792c8c66203f498e2771eb2e0b80bf/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d7368656c6c2d657874656e73696f6e2d68616e6162692f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/66345e2a3d1ef77ffe823b05a7182c7349792c8c66203f498e2771eb2e0b80bf/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d7368656c6c2d657874656e73696f6e2d68616e6162692f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/gnome-shell-extension-hanabi/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/hermes83/compiz-windows-effect">gnome-shell-extension-compiz-windows-effect</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/be1e08e2af58f1ac233d18249a0cd549d87aabd606739e2990b5553b44aa27c4/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d7368656c6c2d657874656e73696f6e2d636f6d70697a2d77696e646f77732d6566666563742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/be1e08e2af58f1ac233d18249a0cd549d87aabd606739e2990b5553b44aa27c4/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f676e6f6d652d7368656c6c2d657874656e73696f6e2d636f6d70697a2d77696e646f77732d6566666563742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/gnome-shell-extension-compiz-windows-effect/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/antheas/hhd">hhd</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/37a3d09ae1244765d4d0ddb84a3c71d54f5f0f68fbc561cb54e009cf3e533c8d/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f6868642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/37a3d09ae1244765d4d0ddb84a3c71d54f5f0f68fbc561cb54e009cf3e533c8d/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f6868642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/hhd/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>jupiter-fan-control</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0ae1e8ee492f2da2ecda2f3c79d35dd3a40a47eaff4b963a696b7b7ecbbba7ad/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f6a7570697465722d66616e2d636f6e74726f6c2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/0ae1e8ee492f2da2ecda2f3c79d35dd3a40a47eaff4b963a696b7b7ecbbba7ad/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f6a7570697465722d66616e2d636f6e74726f6c2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/jupiter-fan-control/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>jupiter-hw-support-<a href="https://gitlab.com/popsulfr/steamos-btrfs" rel="nofollow">btrfs</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/d0ab12d200b84514a848bf78f4f848a63b139e1d2f4643f12ac9f549e766ee71/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f6a7570697465722d68772d737570706f72742d62747266732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/d0ab12d200b84514a848bf78f4f848a63b139e1d2f4643f12ac9f549e766ee71/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f6a7570697465722d68772d737570706f72742d62747266732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/jupiter-hw-support-btrfs/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/flightlessmango/MangoHud">mangohud</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/09c6f5fa53846d193d83bfbba0089a3045c6a3015ccd4408fbed900d4da122d9/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f6d616e676f6875642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/09c6f5fa53846d193d83bfbba0089a3045c6a3015ccd4408fbed900d4da122d9/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f6d616e676f6875642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/package/mangohud/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>mesa</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/8ffd6d0354916a25ad2bd187aafd2b3e2b06b3ec4b11b224a4cc8d9cf33232bc/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f6d6573612f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/8ffd6d0354916a25ad2bd187aafd2b3e2b06b3ec4b11b224a4cc8d9cf33232bc/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f6d6573612f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/package/mesa/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>pipewire</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/5fd667343ec0c1474ed3ae14d9d481155209b506c448218ca6a142c031dd2c4e/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f70697065776972652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/5fd667343ec0c1474ed3ae14d9d481155209b506c448218ca6a142c031dd2c4e/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f70697065776972652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/package/pipewire/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>powerbuttond</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/7be9f6765604bedc50e181fa38b0af6e9ad7cd18181f78b71838307c44ab1278/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f706f776572627574746f6e642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/7be9f6765604bedc50e181fa38b0af6e9ad7cd18181f78b71838307c44ab1278/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f706f776572627574746f6e642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/powerbuttond/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/apmorton/pyhidapi">python3-hid</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/034505a818c03b097a525ccbc625732acf256897c917cbf121277d267e5b2d0d/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f707974686f6e332d6869642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/034505a818c03b097a525ccbc625732acf256897c917cbf121277d267e5b2d0d/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f707974686f6e332d6869642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/python3-hid/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>rmlint</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b560fe78fc1eddf76cd810d83893c4337b66520d2f3bf179f3fcbf2be97ccff1/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f726d6c696e742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/b560fe78fc1eddf76cd810d83893c4337b66520d2f3bf179f3fcbf2be97ccff1/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f726d6c696e742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/rmlint/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/FlyGoat/RyzenAdj">ryzenadj</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/372d5ab26b2c1b3ef5a4dcc3b6953fdd7d9af7b060405f2f13ed99cf764b7c1e/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f72797a656e61646a2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/372d5ab26b2c1b3ef5a4dcc3b6953fdd7d9af7b060405f2f13ed99cf764b7c1e/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f72797a656e61646a2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/ryzenadj/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://github.com/kmicki/SteamDeckGyroDSU">sdgyrodsu</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dc99552eaf551acbec6d4f5aa0fdf085877a85b59b37ff251ec6b89645e210f6/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f73646779726f6473752f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/dc99552eaf551acbec6d4f5aa0fdf085877a85b59b37ff251ec6b89645e210f6/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f73646779726f6473752f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/sdgyrodsu/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>steamdeck-dsp</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c9486d12ec29467d5791c624c997303a55685d997b4aaf41ea23509f74cbb615/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d6465636b2d6473702f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/c9486d12ec29467d5791c624c997303a55685d997b4aaf41ea23509f74cbb615/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d6465636b2d6473702f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/steamdeck-dsp/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>steamdeck-gnome-presets</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/f28f46e76021fe6fa7ab6f84ec0f60eda37858834bd97c8a1d229dec612b4d8b/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d6465636b2d676e6f6d652d707265736574732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/f28f46e76021fe6fa7ab6f84ec0f60eda37858834bd97c8a1d229dec612b4d8b/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d6465636b2d676e6f6d652d707265736574732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/steamdeck-gnome-presets/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>steamdeck-kde-presets</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/305bea6d902a8771df83f54279070f5f3e78a29edb843a36b4f1cc517521e6d5/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d6465636b2d6b64652d707265736574732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/305bea6d902a8771df83f54279070f5f3e78a29edb843a36b4f1cc517521e6d5/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d6465636b2d6b64652d707265736574732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/steamdeck-kde-presets/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>steamdeck-kde-presets-desktop</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/baa7be29b4ec1ab2cf7d8f381902bb26aaaf274b90ba75ab9075e26837407bf4/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d6465636b2d6b64652d707265736574732d6465736b746f702f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/baa7be29b4ec1ab2cf7d8f381902bb26aaaf274b90ba75ab9075e26837407bf4/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d6465636b2d6b64652d707265736574732d6465736b746f702f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/steamdeck-kde-presets-desktop/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>steam_notif_daemon</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/f4e9ca22da49be25089f0909f362582eb562180c31b0a1194cfb4b757d17214b/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d5f6e6f7469665f6461656d6f6e2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/f4e9ca22da49be25089f0909f362582eb562180c31b0a1194cfb4b757d17214b/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f737465616d5f6e6f7469665f6461656d6f6e2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/steam_notif_daemon/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>udisks2</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/685c653dbc6c79a83f3c30813187fe2457c4a6ab6962e5078405bcc268f33a28/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f756469736b73322f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/685c653dbc6c79a83f3c30813187fe2457c4a6ab6962e5078405bcc268f33a28/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f756469736b73322f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/udisks2/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>upower</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/f9a0527b080e74b5010e34a4a2dd2bb1498cf6b9209c68e9de9953982f67f4d1/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f75706f7765722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/f9a0527b080e74b5010e34a4a2dd2bb1498cf6b9209c68e9de9953982f67f4d1/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f75706f7765722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/upower/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>vpower</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/97195ff69476b367208208285ce9377ec74910a18001a17a142d9e9890ffef35/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f76706f7765722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/97195ff69476b367208208285ce9377ec74910a18001a17a142d9e9890ffef35/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f76706f7765722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/vpower/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>wireplumber</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e3fad21b3e514572c496ed7fac21eadca181fc10fed606127477e69c9aa3154a/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f77697265706c756d6265722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/e3fad21b3e514572c496ed7fac21eadca181fc10fed606127477e69c9aa3154a/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652f7061636b6167652f77697265706c756d6265722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/package/wireplumber/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td>xorg-x11-server-Xwayland</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/88a3c9d5d6994d89b5468d198b84030558f550729a82078826d05b57df7931bf/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f786f72672d7831312d7365727665722d587761796c616e642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/88a3c9d5d6994d89b5468d198b84030558f550729a82078826d05b57df7931bf/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f62617a7a6974652d6d756c74696c69622f7061636b6167652f786f72672d7831312d7365727665722d587761796c616e642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/package/xorg-x11-server-Xwayland/status_image/last_build.png?"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">Additionally, the following packages are used from other Copr repos:</p>
<table>
<thead>
<tr>
<th>Package</th>
<th>Status</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/ublue-os/akmods/" rel="nofollow">gcadapter_oc-kmod</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/4290851104060fd33dad88b3c4d047f1e923db6b8a3796a0d5856ad299a00c1d/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f75626c75652d6f732f616b6d6f64732f7061636b6167652f6763616461707465725f6f632d6b6d6f642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/4290851104060fd33dad88b3c4d047f1e923db6b8a3796a0d5856ad299a00c1d/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f75626c75652d6f732f616b6d6f64732f7061636b6167652f6763616461707465725f6f632d6b6d6f642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/ublue-os/akmods/package/gcadapter_oc-kmod/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/gnome-vrr/" rel="nofollow">gnome-vrr</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c7edbeab3bd6854a4288ebbf7321d774b46a1520204e8a70829e924952a32a13/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f676e6f6d652d7672722f7061636b6167652f6d75747465722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/c7edbeab3bd6854a4288ebbf7321d774b46a1520204e8a70829e924952a32a13/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f676e6f6d652d7672722f7061636b6167652f6d75747465722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/gnome-vrr/package/mutter/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/hl2linux-selinux/" rel="nofollow">hl2linux-selinux</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/21dede1356c21597a69ad36fcdf8c257e23a9dfa87d10e375459b158348aea26/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f686c326c696e75782d73656c696e75782f7061636b6167652f686c326c696e75782d73656c696e75782f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/21dede1356c21597a69ad36fcdf8c257e23a9dfa87d10e375459b158348aea26/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f686c326c696e75782d73656c696e75782f7061636b6167652f686c326c696e75782d73656c696e75782f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/hl2linux-selinux/package/hl2linux-selinux/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/joycond/" rel="nofollow">joycond</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/46b6bf1bc86a33cb2df42cbca3e24ae0277f274ccd61bf35aea8c45b93706568/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f6a6f79636f6e642f7061636b6167652f6a6f79636f6e642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/46b6bf1bc86a33cb2df42cbca3e24ae0277f274ccd61bf35aea8c45b93706568/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f6a6f79636f6e642f7061636b6167652f6a6f79636f6e642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/joycond/package/joycond/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/sentry/kernel-fsync/" rel="nofollow">kernel-fsync</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/921c1aebca99f4a56a78151176e52c94da72d86e2c01d29715bd073ed8e480e2/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f73656e7472792f6b65726e656c2d6673796e632f7061636b6167652f6b65726e656c2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/921c1aebca99f4a56a78151176e52c94da72d86e2c01d29715bd073ed8e480e2/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f73656e7472792f6b65726e656c2d6673796e632f7061636b6167652f6b65726e656c2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/sentry/kernel-fsync/package/kernel/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/LatencyFleX/" rel="nofollow">latencyflex-vulkan-layer</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/31ed1e79a79457b0747e72a6e5bef7ad43e9d1508daa8cd549c9301c71887e5c/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f4c6174656e6379466c65582f7061636b6167652f6c6174656e6379666c65782d76756c6b616e2d6c617965722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/31ed1e79a79457b0747e72a6e5bef7ad43e9d1508daa8cd549c9301c71887e5c/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f4c6174656e6379466c65582f7061636b6167652f6c6174656e6379666c65782d76756c6b616e2d6c617965722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/LatencyFleX/package/latencyflex-vulkan-layer/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/ycollet/audinux/" rel="nofollow">noise-suppression-for-voice</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0873bd265ce6fb1c653d33c0ffb438065803c30b2ce75702de0a09c8dc292684/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f79636f6c6c65742f617564696e75782f7061636b6167652f6e6f6973652d7375707072657373696f6e2d666f722d766f6963652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/0873bd265ce6fb1c653d33c0ffb438065803c30b2ce75702de0a09c8dc292684/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f79636f6c6c65742f617564696e75782f7061636b6167652f6e6f6973652d7375707072657373696f6e2d666f722d766f6963652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/ycollet/audinux/package/noise-suppression-for-voice/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/obs-vkcapture/" rel="nofollow">obs-vkcapture</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/97a8828d70feeb5ed0f8fb91fc743654abd2e7e763347c803b2339ce975e5f1c/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f6f62732d766b636170747572652f7061636b6167652f6f62732d766b636170747572652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/97a8828d70feeb5ed0f8fb91fc743654abd2e7e763347c803b2339ce975e5f1c/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f6f62732d766b636170747572652f7061636b6167652f6f62732d766b636170747572652f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/obs-vkcapture/package/obs-vkcapture/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://gitlab.gnome.org/chergert/prompt" rel="nofollow">prompt</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a2eb216341ab8fc970d4bb7522a33bc95b64004329cc6d23f67ebea85bef6f44/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f70726f6d70742f7061636b6167652f70726f6d70742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/a2eb216341ab8fc970d4bb7522a33bc95b64004329cc6d23f67ebea85bef6f44/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f70726f6d70742f7061636b6167652f70726f6d70742f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/prompt/package/prompt/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/rom-properties/" rel="nofollow">rom-properties</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/d2368cf0631c511a7bf20bcbd6b4c4c8ab8f21bf603e633b4d19896729e18197/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f726f6d2d70726f706572746965732f7061636b6167652f726f6d2d70726f706572746965732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/d2368cf0631c511a7bf20bcbd6b4c4c8ab8f21bf603e633b4d19896729e18197/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f726f6d2d70726f706572746965732f7061636b6167652f726f6d2d70726f706572746965732f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/rom-properties/package/rom-properties/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/ublue-os/akmods/" rel="nofollow">steamdeck-kmod</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b30591698bc7ab114dbb9b6a1feac40d46f3aff5c7ec82b0bb9b333a46935763/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f75626c75652d6f732f616b6d6f64732f7061636b6167652f6a7570697465722d6b6d6f642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/b30591698bc7ab114dbb9b6a1feac40d46f3aff5c7ec82b0bb9b333a46935763/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f75626c75652d6f732f616b6d6f64732f7061636b6167652f6a7570697465722d6b6d6f642f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/ublue-os/akmods/package/jupiter-kmod/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/system76-scheduler/" rel="nofollow">system76-scheduler</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/20c53914e08b7ddc7b262c82ed67f86ab45b454c44437d44f459418bba7cadd2/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f73797374656d37362d7363686564756c65722f7061636b6167652f73797374656d37362d7363686564756c65722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/20c53914e08b7ddc7b262c82ed67f86ab45b454c44437d44f459418bba7cadd2/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f73797374656d37362d7363686564756c65722f7061636b6167652f73797374656d37362d7363686564756c65722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/system76-scheduler/package/system76-scheduler/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/VTFLib/" rel="nofollow">VTFLib</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/4ccbea7ae4234b6c9ed06c338dc2477cb568ad8a0309fe10dc53b7041adb1e15/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f5654464c69622f7061636b6167652f5654464c69622f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/4ccbea7ae4234b6c9ed06c338dc2477cb568ad8a0309fe10dc53b7041adb1e15/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f5654464c69622f7061636b6167652f5654464c69622f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/VTFLib/package/VTFLib/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/wallpaper-engine-kde-plugin/" rel="nofollow">wallpaper-engine-kde-plugin</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a6e1105f7e487aec0f001b18c0d5a5949f717a068b72d06f33eff47d3c64f478/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f77616c6c70617065722d656e67696e652d6b64652d706c7567696e2f7061636b6167652f77616c6c70617065722d656e67696e652d6b64652d706c7567696e2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/a6e1105f7e487aec0f001b18c0d5a5949f717a068b72d06f33eff47d3c64f478/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f77616c6c70617065722d656e67696e652d6b64652d706c7567696e2f7061636b6167652f77616c6c70617065722d656e67696e652d6b64652d706c7567696e2f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/wallpaper-engine-kde-plugin/package/wallpaper-engine-kde-plugin/status_image/last_build.png?"></a></td>
</tr>
<tr>
<td><a href="https://copr.fedorainfracloud.org/coprs/kylegospo/webapp-manager/" rel="nofollow">webapp-manager</a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/348c1aa2ea09e7a61fd2e28d801537d75602cba43feb8352ac8c9161ea63bc78/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f7765626170702d6d616e616765722f7061636b6167652f7765626170702d6d616e616765722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f"><img src="https://camo.githubusercontent.com/348c1aa2ea09e7a61fd2e28d801537d75602cba43feb8352ac8c9161ea63bc78/68747470733a2f2f636f70722e6665646f7261696e667261636c6f75642e6f72672f636f7072732f6b796c65676f73706f2f7765626170702d6d616e616765722f7061636b6167652f7765626170702d6d616e616765722f7374617475735f696d6167652f6c6173745f6275696c642e706e673f" alt="Build Status" data-canonical-src="https://copr.fedorainfracloud.org/coprs/kylegospo/webapp-manager/package/webapp-manager/status_image/last_build.png?"></a></td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Verification</h2>
<p dir="auto">These images are signed with sigstore's <a href="https://docs.sigstore.dev/cosign/overview/" rel="nofollow">cosign</a>. You can verify the signature by downloading the <code>cosign.pub</code> key from this repo and running the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cosign verify --key cosign.pub ghcr.io/ublue-os/bazzite"><pre>cosign verify --key cosign.pub ghcr.io/ublue-os/bazzite</pre></div>
<h3 tabindex="-1" dir="auto">Contributor Metrics</h3>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fd1917b922ea9c126485c71ae837ffd1c4ca13445c5e695731f4693492a3ef17/68747470733a2f2f7265706f62656174732e6178696f6d2e636f2f6170692f656d6265642f383662353030643739633631333031356164313666353664663736633865313366336664393861652e737667"><img src="https://camo.githubusercontent.com/fd1917b922ea9c126485c71ae837ffd1c4ca13445c5e695731f4693492a3ef17/68747470733a2f2f7265706f62656174732e6178696f6d2e636f2f6170692f656d6265642f383662353030643739633631333031356164313666353664663736633865313366336664393861652e737667" alt="Bazzite" title="Repobeats analytics image" data-canonical-src="https://repobeats.axiom.co/api/embed/86b500d79c613015ad16f56df76c8e13f3fd98ae.svg"></a></p>
<h2 tabindex="-1" dir="auto">Special Thanks</h2>
<p dir="auto">Bazzite is a community effort and wouldn't exist without everyone's support. Below are some of the people who've helped us along the way:</p>
<ul dir="auto">
<li><a href="https://github.com/reisvg">rei.svg</a> - For creating our logo and overall branding.</li>
<li><a href="https://gitlab.com/evlaV" rel="nofollow">evlaV</a> - For making Valve's code available and for being <a href="https://xkcd.com/2347/" rel="nofollow">this person</a>.</li>
<li><a href="https://chimeraos.org/" rel="nofollow">ChimeraOS</a> - For gamescope-session and for valuable support along the way.</li>
<li><a href="https://github.com/Jovian-Experiments">Jovian-NixOS</a> - For supporting us with technical issues and for creating a similar project. Seriously, go check it out. It's our Nix-based cousin.</li>
<li><a href="https://copr.fedorainfracloud.org/coprs/sentry/" rel="nofollow">sentry</a> - For assistance with needed kernel patches and for creating the <a href="https://copr.fedorainfracloud.org/coprs/sentry/kernel-fsync/" rel="nofollow">kernel-fsync repo</a> we now use.</li>
<li><a href="https://deckbrew.xyz/" rel="nofollow">Steam Deck Homebrew</a> - For choosing to support distributions other than SteamOS despite the extra work, and a special thanks to <a href="https://github.com/PartyWumpus">PartyWumpus</a> for getting Decky Loader working with SELinux for us.</li>
<li><a href="https://github.com/cyrv6737">cyrv6737</a> - For the initial inspiration and the base that became bazzite-arch.</li>
</ul>
<h2 tabindex="-1" dir="auto">Build Your Own</h2>
<p dir="auto">Bazzite is built entirely in GitHub and creating your own custom version of it is as easy as forking this repository, adding a private signing key, and enabling GitHub actions.</p>
<p dir="auto"><a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets">Familiarize yourself</a> on keeping secrets in github. You'll need to <a href="https://docs.sigstore.dev/cosign/overview/" rel="nofollow">generate a new keypair</a> with cosign. The public key can be in your public repo <sub><sup>(Your users need it to check the signatures)</sup></sub>, and you can paste the private key in <code>Settings -&gt; Secrets -&gt; Actions</code> with the name <code>SIGNING_SECRET</code>.</p>
<p dir="auto">We also ship a config for the popular <a href="https://github.com/apps/pull">pull app</a> if you'd like to keep your fork in sync with upstream. Enable this app on your repo to keep track of Bazzite changes while also making your own modifications.</p>
<h2 tabindex="-1" dir="auto">Join The Community</h2>
<p dir="auto">You can find us on the <a href="https://discord.gg/f8MUghG5PB" rel="nofollow">Universal Blue Discord</a>.</p>
<p dir="auto">You can also discuss Bazzite on our <a href="https://universal-blue.discourse.group/c/bazzite/5" rel="nofollow">Discourse</a> and find additional <a href="https://universal-blue.discourse.group/docs?category=5" rel="nofollow">documentation</a> surrounding the project too.</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An Easy Fix (111 pts)]]></title>
            <link>https://chhopsky.itch.io/an-easy-fix</link>
            <guid>38827582</guid>
            <pubDate>Sun, 31 Dec 2023 21:16:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chhopsky.itch.io/an-easy-fix">https://chhopsky.itch.io/an-easy-fix</a>, See on <a href="https://news.ycombinator.com/item?id=38827582">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>You are an engineer at&nbsp;<em>40 More Servers Studios</em>, makers of the hit online game&nbsp;<strong>Facebreaker</strong>.</p>
<p>It's 10am on a Thursday. Any other week, this would be patch day, but today it's not.</p>
<p>Instead, you've got a clear calendar, no meetings, and only one bug left to fix before the end of the sprint tomorrow. It's a weird one, but you've finally figured out how to fix it, and you're super happy about that.</p>
<p>Sure is a nice day you've got planned. Would be a shame if something happened to it.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Threads.net is the new app.net but with ads and interoperable (105 pts)]]></title>
            <link>https://www.fromjason.xyz/p/notebook/copy-acquire-kill-how-meta-could-pull-off-the-most-extraordinary-pivot-in-tech-history/</link>
            <guid>38826617</guid>
            <pubDate>Sun, 31 Dec 2023 19:13:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fromjason.xyz/p/notebook/copy-acquire-kill-how-meta-could-pull-off-the-most-extraordinary-pivot-in-tech-history/">https://www.fromjason.xyz/p/notebook/copy-acquire-kill-how-meta-could-pull-off-the-most-extraordinary-pivot-in-tech-history/</a>, See on <a href="https://news.ycombinator.com/item?id=38826617">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>   

<p>Meta's sudden interest in ActivityPub and Mastodon doesn't make much sense. There are a few impossibly consistent talking points floating through the Fediverse. Each tries to explain away the oddity of Meta's presence.</p>
<p>I don't buy <em>any of it</em>. This is a plan years in the making. And we're watching Meta's biggest hurdle play out in real-time.</p>
<p>What if Meta's hidden objective behind the Threads-to-Mastodon initiative is a play on&nbsp;<a href="https://en.wikipedia.org/wiki/app.net">app.net</a>? And, what if threads.net is a measured step towards what could be the greatest pivot in all of tech?</p>
<p>Put on your tinfoil hats, kids. Papa's got a story.</p>
<p>Over the past four years, Mark Zuckerberg has made moves that imply he's positioning Meta as a sort of <strong>Platform as a Service</strong> provider for social media companies.</p>
<p>This theory is in good company. Here's a 2019 tweet from "a member of Facebook's inner circle” reported by the Mostly Cloudy Newsletter<sup><a href="#fn1" id="fnref1">[1]</a></sup>:</p>
<blockquote>
<p>I'm going to make a prediction: in five years, &gt;25% of Facebook Inc's revenue will comes from selling cloud services to other UGC companies to meet global compliance needs.</p>
</blockquote>
<p>If successful, Meta would usher in a new social media era as the first lords of the "social web.” The aftermath could mean that Meta gains an unprecedented concentration of power over what we see, who we interact with, and where developers can build digital communities.</p>
<p>Indie developers could gain a much-needed revenue stream through an ad-share program, which would be great if it weren't Meta writing the checks. We saw what happened to small businesses and aggregator websites. We saw what almost happened to corporate media after Facebook launched Instant Articles.</p>
<p>Everyday-users would pay the highest price. We'd be left with little more than the illusion of choice, resembling something approaching Proctor &amp; Gamble's generic competitive strategy. We may gain the <em>technical</em> ability to move platforms with our followers and content in hand, but only so much as non-Meta affiliated social media exist. And perhaps not even then.</p>
<p>Meta must create a new market out of thin air to accomplish this monumental pivot. Such a feat could prove risky without something to compel indie developers and server admins to use Meta's shiny new infrastructure. That something could be regulation. Targeted lobbying has made it difficult for start-ups to compete in social media. Four new bills are floating around Congress. Each bill resembles Mark Zuckerberg's four-point plan.</p>
<p>Zuck's plan, published in the Washington Post, came one year after Cambridge Analytica and three months before the prediction tweet.</p>
<p>It sounds <em>absurd</em> that the biggest social media company would pivot from its golden goose. But when you peek into Meta's egg basket, you see it's empty. My guess is that goose was cooked a long time ago.</p>
<p>I'm not suggesting it happens all at once. It'll take years to fully pivot. And it's not like Meta will give away the billions of users it currently serves. But a decision has been made, and action taken.</p>
<p>Here's what I think happened: Zuck saw the writing on the wall, and he finally had enough— the congressional hearings, EU regulators, the impossible content moderation trap— all of it. It was time to get out of the social media game for good. Meta has the infrastructure skills and political influence to pull it off. He only needed the right angle to dip his toe in the water.</p>
<h3 id="mark-zuckerberg-s-four-point-plan" tabindex="-1">Mark Zuckerberg's Four-Point Plan <a href="#mark-zuckerberg-s-four-point-plan">#</a></h3>
<p>In 2019, Mark Zuckerberg <a href="https://www.washingtonpost.com/opinions/mark-zuckerberg-the-internet-needs-new-rules-lets-start-in-these-four-areas/2019/03/29/9e6f0504-521a-11e9-a3f7-78b7525a8d5f_story.html">published an op-ed</a> in the Washington Post calling for more government regulation of social media. He identified four areas needing policy— harmful content, election integrity, privacy, and <strong>data portability</strong>.</p>
<p>From <em>Internet needs new rules. Let's start in these four areas, by Mark Zuckerberg, March 30th, 2019</em>:</p>
<blockquote>
<p>Finally, regulation should guarantee the principle of data portability. If you share data with one service, you should be able to move it to another. This gives people choice and enables developers to innovate and compete.</p>
</blockquote>
<p>Zuckerberg then announces his support for the <a href="https://dtinit.org/">Data Transfer Project</a>.</p>
<p>The Data Transfer Project, or Data Transfer Initiative (no one can keep the name straight), was founded in 2018. It provides a common framework for internet-based service providers to transfer user data between each other.</p>
<p>The project (or initiative) has some big names attached to it—Google, Microsoft, and then Meta in 2019. Twitter may have dropped out recently, as it's no longer included in press coverage.</p>
<p>All involved with DTP/DTI frame their efforts as a step towards users' controlling their own data. Not so much the <em>type</em> of data big tech may collect on us or what it's allowed to do with it. Just the swapping part. There are a lot of folks jumping from Instagram to Microsoft these days?</p>
<p>On Meta's engineering website, the company <a href="https://engineering.fb.com/2019/12/02/security/data-transfer-project/">writes in length</a> about the mission's importance and protocol's ease of use. But the tone for the project shifts within the context of the Fediverse.</p>
<p>A recent conference hosted by DTI (again with the name) announced guests from "the world's biggest ActivityPub projects" and Big Tech™. The <a href="https://dtinit.org/docs/dtp-federated-miniconference-report">event notes reveal</a> that participants were concerned with trust and safety challenges that arise with data transfers on ActivityPub:</p>
<blockquote>
<p>As a baseline, the ability of users to migrate their data between federated services is desirable, but any naive approach to this goal is a loaded gun.</p>
</blockquote>
<p>That's... <em>bleak</em>. Where have all the techno-optimists gone?</p>
<p>It's unclear which participants shared concerns, as statements were anonymous. Perhaps DTI implemented Chatham House Rules. The event also notes that it can't provide an investigation and appeals process because the Data Transfer Initiative is "a small organization.” I hope Meta sprung for lunch.</p>
<p>The ACCESS Act was introduced in 2019 and reintroduced in 2022 and 2023. It would make data portability required by law. The bill is still under revision.</p>
<p>The RESTRICT Act, SAFE TECH Act, and Kids Online Safety Act also float around Congress. Each addresses one point in Zuckerberg's four-point plan.</p>
<p>The final versions of these bills could be a public good. Or, it could make starting your own social media company only possible with supplemental infrastructure. My bet is on whatever history would suggest.</p>
<h2 id="threads-net-is-the-new-app-net-but-with-ads-and-interoperable" tabindex="-1">threads.net is the new app.net but with ads and interoperable <a href="#threads-net-is-the-new-app-net-but-with-ads-and-interoperable">#</a></h2>
<p>Consider a scenario where Meta leadership believed its business model was no longer viable long-term. What would their first step look like?</p>
<p>It might look a lot like the now-defunct app.net.</p>
<p>App.net was a microblogging platform that tried to compete with Twitter. App.net had a robust API that allowed 3rd party developers to build on its infrastructure. What made the start-up unique was that its founders encouraged developers to create social media platforms with their own branding, features, and experiences.</p>
<p>Threads.net would market itself similarly but with a few key differences— interoperability, content ownership, and a revenue split program. These flagship features make the platform attractive to small developers and server admins.</p>
<p>Threads.net's potential flagship features:</p>
<ol>
<li><strong>Interoperability ‌</strong>: All third-party apps are connected, or “federated”. Users can engage, follow, and migrate between apps easily.</li>
<li><strong>Content Ownership</strong>: Unlike app.net, third-party developers and users "own” their published data. Each third-party platform has a distinct URL where content lives.</li>
<li><strong>Ad revenue split</strong>: threads.net offers a turnkey ad delivery system. Qualifying third-party developers and admins can enroll in a revenue split program. If approved, they gain a dependable revenue stream.</li>
</ol>
<p>An ad-revenue split would likely gain enthusiastic participation in the tech community. Most indie devs scrape by for years, and that's if they're lucky. The poor saps who receive VC funding get to watch their best feature copied on Instagram.</p>
<p>The interoperable and data storage features would also be widely supported. Martin Reece, creator of Micro.blog wrote about app.net in his online book. He suggested that what the start-up got wrong was its centralization.</p>
<p>From&nbsp;<em>Indie Microblogging</em>:</p>
<blockquote>
<p>The app.net team got so much right —&nbsp;the early crowdfunding, the well-designed API, the developer story — that I didn't notice what they had left out until much later.&nbsp;<strong>All data lived at&nbsp;<code>app.net</code>&nbsp;URLs, and when the platform was gone, all the posts and data went with it. There was no way to own your content.</strong></p>
</blockquote>
<p>Server admins would have their choice of third-party apps if they chose not to develop. For the adventurous, Meta would likely provide tools, resources, and UI kits for developing bespoke threads.net apps. Thanks to <a href="https://ai.meta.com/llama/">Llama</a>, Meta's open-source AI development tool, almost anyone can build their very own social media platform. Perhaps even large influencers with the means and desire to create a branded experience.</p>
<p>Meta's vision for threads.net won't be a cakewalk, though. This market doesn't actually exist. Except it does, and Meta has already leached onto its network. All Mastodon server admins need is a push in the right direction.</p>
<h2 id="copy-acquire-and-kill" tabindex="-1">Copy, Acquire, and Kill <a href="#copy-acquire-and-kill">#</a></h2>
<p>In some ways, app.net failed where Mastodon succeeded. Eugene Rochko, Mastodon's CEO, has helped cultivate an impossibly vibrant social commons. He did it with zero ads, a decentralized network, and interoperable servers. If Meta could copy Mastodon's strategy, scale the ecosystem, and then monetize, it could pivot, <em>and</em> kill Mastodon at the same time.</p>
<p>The biggest lie in the Fediverse is that Mastodon is too small for Meta to care about. By all accounts and reason, that's simply not true. Zuck is in this impossible position because of how often and indiscriminately he kills off start-ups. Universities have <em>studied it.</em></p>
<p>Meta's <strong>Copy, Acquire, and Kill</strong> strategy is well documented. In 2020, Mark Zuckerberg faced a US Congress on allegations that Meta spies on small start-ups to identify targets for its insidious tactics.</p>
<p>Representative Pramila Jayapal:</p>
<blockquote>
<p>"Your company uses data to spy on competitors and to copy, acquire, and kill rivals,” Jayapal added. "You've used Facebook's power to threaten smaller competitors and to ensure that you always get your way."</p>
</blockquote>
<p>There are some immediately apparent reasons why Meta is interested in Mastodon. None of which relate to building a better social media for regular folks. Mastodon has experienced server admins and nine million users that Meta can siphon after it fully invades the platform.</p>
<h2 id="a-thousand-little-nodes" tabindex="-1">A thousand little nodes <a href="#a-thousand-little-nodes">#</a></h2>
<p>My guess is Meta's plans are an open secret amongst the tech elite. A swarm of new micro blogging nodes are already buzzing around ActivityPub with great enthusiasm— Flipboard, Mozilla, Tumblr, Medium, Post.News, Pebble (previously T2), WordPress, Vivaldi, and Mammoth, to name a few. Some are even <a href="https://techcrunch.com/2023/02/28/mozilla-leads-mastodon-app-mammoths-pre-seed-funding/amp/">well-funded</a>. None seem to have a viable monetization strategy. Shareholders can't buy a third house with the spirit of the open web, you guys.</p>
<p>As Meta pushes forward, we'll see more of these little nodes. Each will offer something unique, and Threads will be careful not to overlap. Post.news interoperable with a no-news Threads is perfect, don't you think?</p>
<p>But here's the question— why ActivityPub?</p>
<p>This is a tougher nut to crack. On the one hand, the protocol is a perfect fit for Meta's threads.net ambitions. But wouldn't the Data Transfer Project Initiative meet those needs as well? Perhaps. But DTI's "mission” isn't necessarily social, and I think Meta wants to keep it that way.</p>
<p>Look, there are lots of good people with the best intentions at every level of that project- er, initiative. But surely, Meta will use DTI to migrate Mastodon users over to threads.net at some point. By isolating the social graph portability to ActivityPub, Meta can swap the protocol out with something proprietary (and more restrictive) once it ditches the Fediverse.</p>
<p>In the end, ActivityPub still exists, but its platforms are a virtual wasteland. Some version of Mastodon lives on through threads.net. But at what cost?</p>
<h3 id="mark-s-catch-22" tabindex="-1">Mark's Catch 22 <a href="#mark-s-catch-22">#</a></h3>
<p>Mark Zuckerberg is in a bit of a pickle right now. If he could, I think he'd be cool just swallowing up start-ups and surfing with that white shit on his face the rest of his life. I think he wants to <em>avoid</em> pivoting to infrastructure. Was the whole Metaverse thing his last-ditch effort to do anything but Platform as a Service? I wonder.</p>
<p>Meta could've offered those services years ago. Instead, it routinely gives away its server architecture. Those contributions are the least objectionable thing about Meta.</p>
<p>But he can't <em>not</em> grow the company. Wall Street won't allow it. And he can't grow it through acquisition because of anti-trust. He's stuck.</p>
<p>After Cambridge Analytica, Meta couldn't buy a WordPress blog from Theme Forrest without the government up their ass. Zuck's biggest fear is anti-trust breaking up Instagram and WhatsApp. If he can remove the "Gatekeeper” characterization, he might have a chance to save his empire.</p>
<p>Infrastructure is Zuckerberg's only play. It's a good one, too. Effectively, four companies currently run the cloud. Barriers to entry are high, and infrastructure is costly. Just ask Meta. In the last four years, they've <a href="https://www.datacenterfrontier.com/hyperscale/article/11427952/facebook-showcases-its-40-million-square-feet-of-global-data-centers">spent billions</a> on non-Metaverse, non-AI data center expansion<sup><a href="#fn2" id="fnref2">[2]</a></sup>.</p>
<p>Today, all your favorite apps run on Amazon Web Services. Soon, all your social media will run on threads.net.<sup><a href="#fn3" id="fnref3">[3]</a></sup></p>
<hr>
<section>
<ol>
<li id="fn1"><p>The tweet has since been deleted but <a href="https://mostlycloudy.substack.com/p/mostly-cloudy-why-regulating-social">exists as an embed</a> on the Mostly Cloudy Newsletter post. <a href="#fnref1">↩︎</a></p>
</li>
<li id="fn2"><p>Since 2019, Meta grew from 15 to 21 data centers across the globe, with at least three more reportedly in construction. This activity is in <em>addition</em> to any Metaverse needs, as Meta signed a long-term contract with Amazon Web Services for its virtual reality computing. In February 2023, Data Center Frontier <a href="https://www.datacenterfrontier.com/hyperscale/article/21548840/meta-will-abandon-some-data-center-builds-run-servers-longer">reported Meta halted at least three data center projects</a>. Its architects achieved a breakthrough that extended the lifespans of its servers. Meta decided to include those updates in new centers, so it delayed construction. The improvements did <strong>not</strong> extend to AI-based servers. <a href="#fnref2">↩︎</a></p>
</li>
<li id="fn3"><p>Or maybe the Metaverse? Who knows. Hit me up on Mastodon with a good name: <a href="https://mastodon.social/@fromjason">@fromjason@mastodon.social</a> <a href="#fnref3">↩︎</a></p>
</li>
</ol>
</section>

 </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Happy New Year HN! (1326 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=38826283</link>
            <guid>38826283</guid>
            <pubDate>Sun, 31 Dec 2023 18:33:34 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=38826283">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="38826587"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826587" href="https://news.ycombinator.com/vote?id=38826587&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>I used to have friends in uni with whom i could share very nerdy/technical conversations. near graduation we no longer get together sadly. this has taken a toll on me. HN is a place that feels like home, even if I'm usually just lurking around and overhearing conversations. Thanks everyone for sharing!</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38826781"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38826781" href="https://news.ycombinator.com/vote?id=38826781&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>Same happened to me. We drifted apart, live in different cities. But nearly 20 years later, with life settled and kids grown we're rekindling via messaging. I hope firstly, you get your group back, and second it doesn't take 20 years</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38826672"><td></td></tr>
                <tr id="38826743"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38826743" href="https://news.ycombinator.com/vote?id=38826743&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>Parent should if they can! But there's also a big difference in intentionality between meeting someone on the quad / outside your room and starting a meetup with friends (or new friends!) scattered across town.<p>Would also suggest looking for social clubs. I've found the "general social hangouts + minimal focus on a shared interest" are great for people time.</p><p>Avoids the monomaniacal over-focus of a single-interest activity, while still providing a bridge with random strangers ("You like thing? I like thing!").
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826692"><td></td></tr>
                <tr id="38826745"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_38826745" href="https://news.ycombinator.com/vote?id=38826745&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>Monthly lunches?<p>Meet up to play a tabletop game?</p><p>Go for a hike?</p><p>Have a group receive a tech presentation once a quarter?</p><p>Lots of options, most just take your time and emails/contacting possibly interested folks.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38826791"><td></td></tr>
            <tr id="38826903"><td></td></tr>
                  <tr id="38826746"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_38826746" href="https://news.ycombinator.com/vote?id=38826746&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>I've run a few book clubs online and in NYC this last year. And a Discord for folks in the area in systems programming. And a systems programming coffee meetup in NYC. Stuff like that is what I might guess Erik means! :)</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38826744"><td></td></tr>
                              <tr id="38826948"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826948" href="https://news.ycombinator.com/vote?id=38826948&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>Happy new year! Likewise, this is generally the only remaining site that I feel better after I leave it and more informed. No ads, excellent moderation, useful discussion and links. No gamification and chasing the modern web. Years of lurking and then years of sparse posting it still feels the same.<p>Here is to hoping this doesn’t change. Keep it up dang.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38827013"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38827013" href="https://news.ycombinator.com/vote?id=38827013&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>Happy New Year to you too!<p><i>Likewise, this is generally the only remaining site that I feel better after I leave it and more informed.</i></p><p>Hacker News, but also lobster.rs
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38826999"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826999" href="https://news.ycombinator.com/vote?id=38826999&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>Happy New Year everyone! HN will always remain in my heart and mind. 5 years ago I moved to Amsterdam to work on a super interesting R&amp;D project that taught me a lot about GPS, coordinate systems, algorithms, and sadly the importance of having a short commute. I spent an hour and a half to get in either direction. That was demotivating and made me depressed and tired. HN was how I passed time, first on the train, then on the bus, reading curated articles and through thoughtful comments. I couldn't have managed without you all. Once again, I wish you all a Happy New Year and luck in all your endeavours!</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38827000"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38827000" href="https://news.ycombinator.com/vote?id=38827000&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>Happy new years everyone.<p>I started regularly browsing Hacker News around the start of corona when I graduated from university as well. It has been an amazing few years, and I look forward to the coming year.</p><p>A lot has changed these last years, but somehow Hacker News always remains a solid place to procrastinate and/or learn new things.</p><p>When I tell other developers that if they want to keep up to date with tech, I tell them about Hacker News, it always goes like this: Come for the articles stay for the community. Thanks to everyone making Hacker News both an interesting and welcoming space to hang out!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826566"><td></td></tr>
                <tr id="38826859"><td></td></tr>
                  <tr id="38826839"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826839" href="https://news.ycombinator.com/vote?id=38826839&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>HN has literally changed my life — it was the who’s hiring a few years back that got me my first startup job here in Germany and the rest is history.<p>I do spend too much time here but I tend to learn a lot.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38827001"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38827001" href="https://news.ycombinator.com/vote?id=38827001&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>This is the only social media I use, but  the special thing about it is that it doesn’t really feel like social media. The content is edifying and the community is well run thanks to dang.  Happy New Year everyone!</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38826972"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826972" href="https://news.ycombinator.com/vote?id=38826972&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>I love HN. Dang does an amazing job moderating this place.<p>My new-years resolution: to not post a single political thing; interesting technical things only. Let's see how that goes in a US election year!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826631"><td></td></tr>
                <tr id="38826826"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38826826" href="https://news.ycombinator.com/vote?id=38826826&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>I'm fairly confident that yes, <i>this</i> will be the year of the Linux desktop:<p>2024 = 20 | 24</p><p>20 x 3 + 16 = 76, which is the ASCII value of 'L'.</p><p>24 x 3 + 12 = 84, which is the ASCII value of 'T'.</p><p>= LT = Linux Torvalds
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38826855"><td></td></tr>
                  <tr id="38826809"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38826809" href="https://news.ycombinator.com/vote?id=38826809&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>Nope, I’ve been informed it’s the year of the dragon. Looking at the list, there doesn’t seem to be a year of the Linux desktop.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38826964"><td></td></tr>
                  <tr id="38826787"><td></td></tr>
            <tr id="38826725"><td></td></tr>
                  <tr id="38826621"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826621" href="https://news.ycombinator.com/vote?id=38826621&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>Time to ship 2024 to production.
Happy new year, fellow hackers. 
May your code always work on the first try and never regress.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38826751"><td></td></tr>
                <tr id="38826785"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38826785" href="https://news.ycombinator.com/vote?id=38826785&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>We tried delaying new year deployment in 2020, 2021, and 2022... it didn't go so well.<p>So back to the tried and true pipeline!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38826816"><td></td></tr>
                  <tr id="38826861"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826861" href="https://news.ycombinator.com/vote?id=38826861&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>I still find it a bit crazy how familiar HN still feels after so many years I've been reading posts here. Most of that time was me lurking and latter me starting to interact with the community.<p>It's always nice to get your world view shattered by someone more knowledgeable or getting a point of view you wouldn't get anywhere else. Stay the same HN and kudos to dang for keeping up with all the comments and posts being submitted.</p><p>Happy new years y'all
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826520"><td></td></tr>
                <tr id="38826550"><td></td></tr>
                  <tr id="38826653"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826653" href="https://news.ycombinator.com/vote?id=38826653&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>Happy New Year everyone, huge thanks dang for your work and everyone for the civil and interesting discussions.<p>HN feels like one of the few places similar to how early internet was.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826974"><td></td></tr>
            <tr id="38826815"><td></td></tr>
            <tr id="38826600"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826600" href="https://news.ycombinator.com/vote?id=38826600&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>The 6th 'Happy new year' submission today made it. The first 5 from other users didn't get enough upvotes. You won the karma lottery.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38826837"><td></td></tr>
                  <tr id="38826624"><td></td></tr>
                <tr id="38826680"><td></td></tr>
                  <tr id="38826805"><td></td></tr>
            <tr id="38826873"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826873" href="https://news.ycombinator.com/vote?id=38826873&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>I have a fantastic feeling about 2024...<p>HN is somewhere that feels like home to me. As it does for a lot of people. I'm grateful to have it in my life.</p><p>All the best.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826892"><td></td></tr>
            <tr id="38826925"><td></td></tr>
            <tr id="38826817"><td></td></tr>
                <tr id="38826850"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38826850" href="https://news.ycombinator.com/vote?id=38826850&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>You got some real natural fireworks over there. Hope the sight is nice (have no idea if Grindavik is still erupting)</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38826866"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38826866" href="https://news.ycombinator.com/vote?id=38826866&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>I think it calmed down the last week or so but tourism isn't exactly encouraged around that area.<p>We're in the capital with plenty of man made fireworks :)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="38826870"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826870" href="https://news.ycombinator.com/vote?id=38826870&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>Happy New Year!<p>I hope this year brings (physical and financial) health to you and your family as well as fun times.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826778"><td></td></tr>
            <tr id="38826578"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826578" href="https://news.ycombinator.com/vote?id=38826578&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>Thanks everyone. I have learned so much here and have a backlog of interesting articles to consume. All the best to everyone in 2024.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38826820"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826820" href="https://news.ycombinator.com/vote?id=38826820&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>Happy new year! Committed to making this new year my, and your, best year so far!<p>Thanks for being a great community.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826620"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826620" href="https://news.ycombinator.com/vote?id=38826620&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>I can only second that.<p>And by the way, it always makes me happy to see a 'thunderbong' submission reach the front page. To me that's a reassuring sign that we haven't been gentrified yet ;)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826671"><td></td></tr>
            <tr id="38826714"><td></td></tr>
            <tr id="38826955"><td></td></tr>
            <tr id="38826760"><td></td></tr>
            <tr id="38826696"><td></td></tr>
            <tr id="38826656"><td></td></tr>
            <tr id="38826664"><td></td></tr>
            <tr id="38826657"><td></td></tr>
            <tr id="38826580"><td></td></tr>
            <tr id="38826710"><td></td></tr>
            <tr id="38826867"><td></td></tr>
            <tr id="38826753"><td></td></tr>
            <tr id="38826659"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826659" href="https://news.ycombinator.com/vote?id=38826659&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>i'll be extremely cautious on underdetermined wishes and will request a new year that s better than last year.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38826884"><td></td></tr>
            <tr id="38826687"><td></td></tr>
            <tr id="38826586"><td></td></tr>
            <tr id="38826693"><td></td></tr>
            <tr id="38826761"><td></td></tr>
            <tr id="38826707"><td></td></tr>
            <tr id="38826765"><td></td></tr>
            <tr id="38826591"><td></td></tr>
            <tr id="38826810"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826810" href="https://news.ycombinator.com/vote?id=38826810&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><br><div>
                  <p><span>HNY to everyone here. While I don’t agree with some of you this is probably one of the finest communities left on the net. Hat tip to you all.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38826727"><td></td></tr>
            <tr id="38826593"><td></td></tr>
            <tr id="38826755"><td></td></tr>
            <tr id="38826573"><td></td></tr>
            <tr id="38826767"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826767" href="https://news.ycombinator.com/vote?id=38826767&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>This is one of the only places I still post. I post a little on Mastodon and occasionally lobste.rs but that's about it.<p>I attribute its retaining of quality to banning memes and other low-effort junk and severely limiting (both as policy and culturally) politics and culture war flame wars. Also <i>being text only</i> helps a lot.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826547"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38826547" href="https://news.ycombinator.com/vote?id=38826547&amp;how=up&amp;goto=item%3Fid%3D38826283"></a></center>    </td><td><p><span>I discovered HN this year, and my takeaway from it all is: great links, questionable debates in the comments.<p>Happy new year everyone!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38826634"><td></td></tr>
                      </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Interesting double-poly latches inside AMD's vintage LANCE Ethernet chip (139 pts)]]></title>
            <link>https://www.righto.com/2023/12/amd-lance-ethernet-double-poly.html</link>
            <guid>38826187</guid>
            <pubDate>Sun, 31 Dec 2023 18:20:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.righto.com/2023/12/amd-lance-ethernet-double-poly.html">https://www.righto.com/2023/12/amd-lance-ethernet-double-poly.html</a>, See on <a href="https://news.ycombinator.com/item?id=38826187">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-4836335289577539405" itemprop="description articleBody">
<p>I've studied a lot of chips from the 1970s and 1980s, so I usually know what to expect.
But an Ethernet chip from 1982 had something new: a strange layer of yellow wiring on the die.
After some study, I learned that the yellow wiring is a second layer of resistive polysilicon, used in
the chip's static storage cells and latches.</p>
<p><a href="https://static.righto.com/images/lance-poly/poly.jpg"><img alt="A closeup of the die of the LANCE chip. The metal has been removed to show the layers underneath." height="355" src="https://static.righto.com/images/lance-poly/poly-w350.jpg" title="A closeup of the die of the LANCE chip. The metal has been removed to show the layers underneath." width="350"></a></p><p>A closeup of the die of the LANCE chip. The metal has been removed to show the layers underneath.</p>
<p>The die photo above shows a closeup of a latch circuit, with the diagonal yellow stripe in the middle.
For this photo, I removed the chip's metal layer so you can see the underlying circuitry.
The bottom layer, silicon, appears gray-purple under the microscope, with the active silicon regions slightly darker and bordered in black.
On top of the silicon, the pink regions are polysilicon, a special type of silicon.
Polysilicon has a critical role in the chip: when it crosses active silicon, polysilicon forms the gate of
a transistor. The circles are contacts between the metal layer and the underlying silicon or polysilicon.
So far, the components of the chip match most NMOS chips of that time.
But what about the bright yellow line crossing the circuit diagonally? That was new to me.
This second layer of polysilicon provides resistance. It crosses over the other layers, connected to the silicon at the ends with
a complex ring structure.</p>
<p>Why would you want high-resistance wiring in your digital chip? To understand this, let's first look at
how a bit can be stored.
An efficient way to store a bit is to connect two inverters in a loop, as shown below.
Each inverter sends the opposite value to the other inverter, so the circuit will be stable in two states,
holding one bit: a 1 or a 0.</p>
<p><a href="https://static.righto.com/images/lance-poly/inverters.jpg"><img alt="Two cross-coupled inverters can store either a 0 or a 1 bit." height="161" src="https://static.righto.com/images/lance-poly/inverters-w350.jpg" title="Two cross-coupled inverters can store either a 0 or a 1 bit." width="350"></a></p><p>Two cross-coupled inverters can store either a 0 or a 1 bit.</p>
<p>But how do you store a new value into the inverter loop? There are a few techniques.
One is to use pass transistors to break the loop, allowing a new value to be stored.
In the schematic below, if the <em>hold</em> signal is activated, the transistor turns on, completing the loop.
But if <em>hold</em> is dropped and <em>load</em> is activated, a new value can be loaded from the input into the inverter loop.</p>
<p><a href="https://static.righto.com/images/lance-poly/pass-latch.png"><img alt="A latch, controlled by pass transistors." height="133" src="https://static.righto.com/images/lance-poly/pass-latch-w300.png" title="A latch, controlled by pass transistors." width="300"></a></p><p>A latch, controlled by pass transistors.</p>
<p>An alternative is to use a weak inverter that produces a low-current output.
In this case, the input
signal can simply overpower the value produced by the inverter, forcing the loop into a new state.
The advantage of this circuit is that it
eliminates the "hold" transistor. However, a weak inverter turns out to be larger than a regular inverter,
negating much of the space saving.<span id="fnref:size"><a href="#fn:size">1</a></span> (The Intel 386 processor uses this type of latch.)</p>
<p><a href="https://static.righto.com/images/lance-poly/weak-latch.png"><img alt="A latch using a weak inverter." height="87" src="https://static.righto.com/images/lance-poly/weak-latch-w300.png" title="A latch using a weak inverter." width="300"></a></p><p>A latch using a weak inverter.</p>
<p>A third alternative, used in the Ethernet chip, is to use a resistor for the feedback, limiting the
current.<span id="fnref:power"><a href="#fn:power">2</a></span>
As in the previous circuit, the input can overpower the low feedback current.
However, this circuit is more compact since it doesn't require a larger inverter.
The resistor doesn't require additional space since it can overlap the rest of the circuitry, as shown in the
photo at the top of the article.
The disadvantage is that manufacturing the die requires additional processing steps to create the resistive
polysilicon layer.</p>
<p><a href="https://static.righto.com/images/lance-poly/latch-resistor.png"><img alt="A latch using a resistor for feedback." height="86" src="https://static.righto.com/images/lance-poly/latch-resistor-w300.png" title="A latch using a resistor for feedback." width="300"></a></p><p>A latch using a resistor for feedback.</p>
<p>In the Ethernet chip, this type of latch is used in many circuits. For example, shift registers are built
by connecting latches in sequence, controlled by the clock signals.
Latches are also used to create binary counters, with the latch value toggled when the lower bits produce a carry.</p>
<h2>The SRAM cell</h2>
<p>It would be overkill to create a separate polysilicon layer just for a few latches.
It turns out that the chip was constructed with AMD's "64K dynamic RAM process".
Dynamic RAM uses tiny capacitors to store data. In the late 1970s, dynamic RAM chips started using
a "double-poly" process with one layer of polysilicon to form the capacitors and a second layer of polysilicon
for transistor gates and wiring (<a href="https://www.righto.com/2020/11/reverse-engineering-classic-mk4116-16.html">details</a>).</p>
<p>The double-poly process was also useful for shrinking the size of static RAM.<span id="fnref:patent-cell"><a href="#fn:patent-cell">3</a></span>
The Ethernet chip contains several blocks of storage buffers for various purposes. These blocks are implemented as static RAM,
including a 22×16 block, a 48×9 block, and a 16×7 block.
The photo below shows a closeup of some storage cells, showing how they are arranged in a regular grid.
The yellow lines of resistive polysilicon are visible in each cell.</p>
<p><a href="https://static.righto.com/images/lance-poly/storage.jpg"><img alt="A block of 28 storage cells in the chip. Some of the second polysilicon layer is damaged." height="363" src="https://static.righto.com/images/lance-poly/storage-w500.jpg" title="A block of 28 storage cells in the chip. Some of the second polysilicon layer is damaged." width="500"></a></p><p>A block of 28 storage cells in the chip. Some of the second polysilicon layer is damaged.</p>
<p>A static RAM storage cell is roughly similar to the latch cell, with two inverters in
a loop to store each bit.
However, the storage is arranged in a grid: each row corresponds to a particular word, and each column
corresponds to the bits in a word.
To select a word, a word select line is activated, turning on the pass transistors in that row.
Reading and writing the cell is done through a pair of bitlines; each bit has a bitline and a complemented bitline.
To read a word, the bits in the word are accessed through the bitlines.
To write a word, the new value and its complement are applied to the bitlines, forcing the inverters into
the desired state.
(The bitlines must be driven with a high-current signal that can overcome the signal from the inverters.)</p>
<p><a href="https://static.righto.com/images/lance-poly/cell-schematic.png"><img alt="Schematic of one storage cell." height="195" src="https://static.righto.com/images/lance-poly/cell-schematic-w300.png" title="Schematic of one storage cell." width="300"></a></p><p>Schematic of one storage cell.</p>
<p>The diagram below shows the physical layout of one memory cell, consisting of two resistors and four transistors.
The black lines indicate the vertical metal wiring that was removed.
The schematic on the right corresponds to the physical arrangement of the circuit.
Each inverter is constructed from a transistor and a pull-up resistor, and the inverters are connected into a loop.
(The role of these resistors is completely different from the feedback resistors in the latch.)
The two transistors at the bottom are the pass transistors that provide access to the cell for reads or writes.</p>
<p><a href="https://static.righto.com/images/lance-poly/cell-labeled.jpg"><img alt="One memory cell static memory cell as it appears on the die, along with its schematic." height="408" src="https://static.righto.com/images/lance-poly/cell-labeled-w600.jpg" title="One memory cell static memory cell as it appears on the die, along with its schematic." width="600"></a></p><p>One memory cell static memory cell as it appears on the die, along with its schematic.</p>
<p>The layout of this storage cell is highly optimized to minimize its area. Note that the yellow resistors take
almost no additional area, as they overlap other parts of the cell.
If constructed without resistors, each inverter would require an additional transistor, making the cell larger.</p>
<p>To summarize, although the double-poly process was introduced for DRAM capacitors, it can also be used for SRAM cell pull-up resistors.
Reducing the size of the SRAM cells was probably the motivation to use this process for the Ethernet chip, with
the latch feedback resistors a secondary benefit.</p>
<h2>The Am7990 LANCE Ethernet chip</h2>
<p>I'll wrap up with some background on the AMD Ethernet chip.
Ethernet was invented in 1973 at Xerox PARC and became a standard in 1980.
Ethernet was originally implemented with a board full of chips, mostly TTL. 
By the early 1980s, companies such as Intel, Seeq, and AMD introduced chips to put most of the circuitry onto VLSI chips. 
These chips reduced the complexity of Ethernet interface hardware, causing the price to drop from <a href="https://books.google.com/books?id=3kpkQKds0lAC&amp;pg=PA4#v=onepage&amp;q&amp;f=false">$2000</a> to $1000.</p>
<p>The chip that I'm examining is AMD's Am7990 LANCE (Local Area Network Controller for Ethernet).
This chip implemented much of the functionality for Ethernet and "Cheapernet" (now known as 10BASE2 Ethernet).
The chip handles serial/parallel conversion,
computing the 32-bit CRC checksum, handling collisions and backoff, and recognizing desired addresses.
The chip also provides DMA access for interfacing with a microcomputer.</p>
<p>The chip doesn't handle everything, though.
It was designed to work with an Am7992 Serial Interface Adapter chip that encodes and decodes the bitstream
using Manchester encoding.
The third chip was the Am7996 transceiver that handled the low-level signaling and interfacing with the coaxial network cable, as well as
detecting collisions if two nodes transmitted at the same time.</p>
<p>The LANCE chip is fairly complicated.
The die photo below shows the main functional blocks of the chip.
The chip is controlled by the large block of microcode ROM in the lower right.
The large dark rectangles are storage, implemented with the static RAM cells described above.
The chip has 48 pins, connected by tiny bond wires to the square pads around the edges of the die.</p>
<p><a href="https://static.righto.com/images/lance-poly/die-labeled.jpg"><img alt="Main functional blocks of the LANCE chip." height="597" src="https://static.righto.com/images/lance-poly/die-labeled-w600.jpg" title="Main functional blocks of the LANCE chip." width="600"></a></p><p>Main functional blocks of the LANCE chip.</p>
<p>Thanks to Robert Garner for providing the AMD LANCE chip and information, thanks to a bunch of people on Twitter
for <a href="https://twitter.com/kenshirriff/status/1736444057503875516">discussion</a>, and
thanks to Bob Patel for providing the functional block labeling and other information.
For more,
follow me on Twitter <a href="https://twitter.com/kenshirriff">@kenshirriff</a> or <a href="https://www.righto.com/feeds/posts/default">RSS</a> for updates.
I'm also on Mastodon occasionally as <a href="https://oldbytes.space/@kenshirriff">@<span data-cfemail="3358565d405b5a41415a5555735c5f57514a4756401d4043525056">[email&nbsp;protected]</span></a>.</p>
<h2>Notes and references</h2>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[WWII heroics of 'Bazooka Charlie' doubted until daughter sets record straight (115 pts)]]></title>
            <link>https://www.dispatch.com/story/news/local/2023/12/31/bazooka-charlies-granville-daughter-shares-wwii-heroics-in-new-book/72033226007/</link>
            <guid>38826130</guid>
            <pubDate>Sun, 31 Dec 2023 18:13:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dispatch.com/story/news/local/2023/12/31/bazooka-charlies-granville-daughter-shares-wwii-heroics-in-new-book/72033226007/">https://www.dispatch.com/story/news/local/2023/12/31/bazooka-charlies-granville-daughter-shares-wwii-heroics-in-new-book/72033226007/</a>, See on <a href="https://news.ycombinator.com/item?id=38826130">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content"><article><p>On a night when Carol Apacki had trouble sleeping, she found herself at the computer typing a search for “Rosie the Rocketer.”</p><partner-banner util-module-path="elements/partner" min-height="600" fluid="" outstream="" momentum=""></partner-banner><p>That was the name her dad had given his airplane during World War II, and she knew he had done some amazing things with it during the war.</p><p>The first thing that came up in her search was a very long, technical discussion about whether her father, Maj. Charles Carpenter, actually could have strapped six bazookas onto the wings of his 800-pound reconnaissance plane made of cloth over a frame of welded steel and wood – and used those weapons to take out German tanks.</p><p>With what little evidence they had and their knowledge of the Piper L-4 Grasshopper’s construction and capabilities, the war enthusiasts cast doubt about whether the stories of his heroics were true. They suggested it was myth at best and perhaps even wartime propaganda.</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><p>“As for ‘rosie,’ I’m inclined to dismiss it using a highly technical term: ‘Complete Bollocks,’” wrote one skeptic. “During WWII, propaganda, both against the enemy and to bolster the Home Front, was in high gear. Rosie appears to be the result of yet more ‘home-grown hero’ wishes.”</p><p>The typically mild-mannered and kindly Apacki could feel her face flush.</p><media-image image-set="https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033373007-carol-apacki-with-bazooka-charlie-book.JPEG bestCrop, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033373007-carol-apacki-with-bazooka-charlie-book.JPEG?crop=1800,1351,x0,y92 4:3, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033373007-carol-apacki-with-bazooka-charlie-book.JPEG?crop=1152,1535,x630,y0 3:4, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033373007-carol-apacki-with-bazooka-charlie-book.JPEG?crop=1800,1013,x0,y76 16:9" image-alt="" credit="Courtesy of Carol Apacki" caption="Carol Apacki holds up the book &quot;Bazook Charlie&quot; that tells the story of her father, Maj. Charles Carpenter, during and after World War II. Apacki insisted the book also share the emotional physical trauma her father suffered after the war as well as the strength of her mother on the homefront." orientation="horizontal" util-module-path="elements/media"></media-image><p>“That made me a little angry,” said Apacki, 81, of Granville, who had plenty of evidence that all of it was true. Her dad, a history teacher before and after the war, was a prolific letter writer, and her mom, Elda, had saved all of his letters and the photos he sent home.</p><partner-inline util-module-path="elements/partner" placement="native-article_link" sizes="[[300, 250], [3, 3]]" min-height="250" fluid="" outstream=""></partner-inline><cta-atoms-container-inline util-module-path="elements/cta"></cta-atoms-container-inline><p>So she pulled out box after box of letters, photos and documents and began to school the historians on the true story of a humble soldier and an otherwise quiet family man from Illinois who became known as “Bazooka Charlie.”</p><p>She shared, with evidence in his own handwriting, that Maj. Carpenter repeatedly flew his military version of a Piper Cub low over enemy troops – who were firing at him with pistols and rifles – and took out German tanks and other armored vehicles by firing missiles at them.</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="600" outstream="" momentum=""></partner-banner><partner-inline util-module-path="elements/partner" placement="native-article_link" sizes="[[300, 250], [3, 3]]" min-height="250" fluid="" outstream=""></partner-inline><p>“There’s no question he saved countless lives,” Apacki said.</p><p>The doubters were stunned, and the online conversation caught the eye of Colin Powers of La Pine, Oregon, a retired mechanical engineer and pilot who had restored several planes like the one Apacki’s dad flew.</p><p>Powers encouraged Apacki to write a story about her dad and offer it to the<a href="https://www.eaa.org/eaa"> Experimental Aircraft Association</a> Warbirds magazine.</p><p>It was a small act inspired by respect for her father and her passion for accuracy. It also led to a book and, almost miraculously, the recovery and restoration of the very plane Bazooka Charlie Carpenter flew on his remarkable missions. The plane is now in the<a href="https://www.collingsfoundation.org/"> Collings Foundation’s</a><a href="https://www.americanheritagemuseum.org/aircrafts/piper-l4-grasshopper-rosie-the-rocketer/"> American Heritage Museum</a> in Hudson, Massachusetts.</p><p>“In 2016, I got a call from a woman named Carol from Ohio,” said James P. Busha, the EAA magazine’s editor and a retired Oshkosh, Wisconsin, police detective lieutenant. “She said she wanted to submit a story about her dad. She said he was a pilot in World War II.</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><p>“Then she said her father was Charles Carpenter, and she must have thought the phone went dead. I was speechless,” Busha said. “This was a woman talking about her father, but it was a path into history.”</p><media-image image-set="https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033374007-elda-carol-and-charles-carpenter.JPEG bestCrop, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033374007-elda-carol-and-charles-carpenter.JPEG?crop=1491,1119,x0,y177 4:3, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033374007-elda-carol-and-charles-carpenter.JPEG?crop=1331,1774,x74,y0 3:4, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033374007-elda-carol-and-charles-carpenter.JPEG?crop=1491,839,x0,y266 16:9" image-alt="" credit="Courtesy of Carol Apacki" caption="Maj. Charles Carpenter, right, in this undated family photo with wife, Elda, and daughter, Carol. His daughter, now Carol Apacki, helped tell his story in a recent book titled &quot;Bazooka Charlie: The Unbelievable Story of Major Charles Carpenter and Rosie the Rocketer.&quot;" orientation="vertical" util-module-path="elements/media"></media-image><p>After the article appeared, it led to the discovery of her dad’s plane, and Busha contacted Apacki and said, ‘I think there’s a book here.’”</p><p>During his visit to Granville in 2020 to meet with Apacki and her husband, Ken, Busha said, “I was gobsmacked when I saw all of the letters and documents and diaries.” Apacki’s mother had collected and saved all of it.</p><partner-inline util-module-path="elements/partner" placement="native-article_link" sizes="[[300, 250], [3, 3]]" min-height="250" fluid="" outstream=""></partner-inline><p>Apacki was excited that someone wanted to help tell her father’s story, to set the record straight and document his accomplishments. She was thinking it would be a self-published book with enough copies to share with family and friends.</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><p>“I came back the next day, and she had these lemon cookies for me,” Busha said. “She told me, ‘I thought at first you might be a shyster, but you’re OK.’”</p><p>Busha and Apacki went on a journey through time and deep into history – including some personal history about the toll the war took on her father, his marriage and his family.</p><p>Apacki insisted that any book about her dad’s heroics should also include the effects on his mental and physical health – and the home-front heroics of her mother, who stood by him and held their family together during very difficult circumstances.</p><p>The story was not just about her dad, “but about what can happen to a marriage and a family. It’s many people’s story,” said Apacki, who was born while her father was at war. “I didn’t see my dad until I was 4 – and I didn’t really like him because he was so stern. I’m sure he had (post-traumatic stress disorder).”</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><p>Some veterans who have read the book or heard Apacki talk about the war’s effects on her dad and her family have been overwhelmed with appreciation for her willingness to be so open.</p><p>“I had people come up to me in tears – Vietnam veterans – who said, ‘Thank you for telling this story.’”</p><p>Apacki said the book started as a gift for her family. “I have 13 grandchildren who knew nothing of him. For my family, it has been a wonderful reconnection with their roots.”</p><media-image image-set="https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033371007-charles-and-rosie-2.JPEG bestCrop, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033371007-charles-and-rosie-2.JPEG?crop=1432,1073,x94,y0 4:3, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033371007-charles-and-rosie-2.JPEG?crop=806,1073,x378,y0 3:4, https://www.gannett-cdn.com/authoring/authoring-images/2023/12/26/NCOD/72033371007-charles-and-rosie-2.JPEG?crop=1892,1065,x0,y4 16:9" image-alt="" credit="Courtesy of Carol Apacki" caption="Maj. Charles Carpenter strapped six bazookas onto the wings of his 800-pound reconnaissance plane made of cloth over a frame of welded steel and wood – and used those weapons to take out German tanks during World War II, earning him the nickname &quot;Bazooka Charlie.&quot;" orientation="horizontal" util-module-path="elements/media"></media-image><p>Her dad grew up as one of six children in a home where his dad drank and gambled so much that he lost the family farm. Adversity led Carpenter as a 17-year-old, to write this personal creed:</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><partner-inline util-module-path="elements/partner" placement="native-article_link" sizes="[[300, 250], [3, 3]]" min-height="250" fluid="" outstream=""></partner-inline><p><em>“I have resolved to exert all of my efforts toward being a nobler and stronger fellow, a gentleman, a scholar, a friend, and a real man. To the best of my ability, I will ever strive to self-control, self-improvement, freedom, wisdom, courage, generosity, truth and true nobility before gods and men. I will be better.” – Charles Marston Carpenter, 1929</em></p><p>Apacki said the creed framed who her father would become, but the war challenged his values. He enlisted after Japan attacked Pearl Harbor in 1941, and by 1944, he was firing missiles at German tanks as U.S. troops swept across Europe.</p><p>“He was seeing devastation,” she said. “He was brave but not the man he wanted to be. He was a man of peace, and he saw untold deaths and destruction – day after day, endless death and destruction.”</p><p>In one incredible act of bravery, Carpenter, who had flown over an occupied village, landed near some U.S. troops just outside town and asked why the troops were not moving to rout the few Germans holding it.</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><p>The troops were under the impression the town was swarming with German troops, so they stayed at bay – until Carpenter jumped onto a U.S. tank, grabbed a 50-caliber machine gun and threatened to use it if they didn’t take the village.</p><p>His bold move inspired the troops, and they captured the village.</p><p>He might have been court-martialed for that move if not for Maj. Gen. John Wood, Commander of the 4th Armored Division, who appreciated Carpenter’s moxie and his military skills, particularly his flying. Wood made Carpenter his personal reconnaissance pilot.&nbsp;</p><partner-inline util-module-path="elements/partner" placement="native-article_link" sizes="[[300, 250], [3, 3]]" min-height="250" fluid="" outstream=""></partner-inline><p>Apacki said she was stunned when she finally saw the plane she had read so much about.</p><p>“I couldn’t believe how small it was,” she said. “It looked like a kid’s toy.”</p><p>Her dad’s letters talked about being shot at by German troops, “and the restorer found bullet holes in the plane.”</p><p>The Collings Foundation located the plane in a museum in Austria, where it had been used after WWII to pull gliders into the air. The museum operators clearly didn’t know its history and sold it for a song, Busha said.</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><p>The foundation hired Colin Powers to restore the plane, given his experience rebuilding several Piper L-4s.</p><p>“I restored it for Collings but also for Carol,” Powers said.</p><p>When he stripped off the old fabric, he found that “Rosie had bullet holes, and a lot of signatures of the people who built it were on the wooden spars.”</p><p>It took him a year to restore it, and when it came time to apply the “Rosie the Rocketer” image on the new fabric skin, he invited Apacki’s daughter and Carpenter’s granddaughter to put paintbrush to canvas.</p><p>Erin Pata is<a href="https://www.butterbeanstudios.com/"> a graphic artist</a> living in California, and Powers said she nailed the “nose art” on the plane.</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><p>As he was completing the restoration, Powers made a special request of Apacki.</p><p>“When I finished the restoration, I asked Carol for a photo of her mom to use as a pin-up in the cockpit,” he said. “Carol sent me a picture of her mom and Carol as a child. It was a very special touch.”</p><partner-inline util-module-path="elements/partner" placement="native-article_link" sizes="[[300, 250], [3, 3]]" min-height="250" fluid="" outstream=""></partner-inline><p>At the Experimental Aircraft Association’s annual airshow in Oshkosh in July, an event that drew more than 800,000 enthusiasts over seven days, Apacki was a guest of honor and center of attention. She was invited to center stage to talk about her dad and the book,<a href="https://schifferbooks.com/products/bazooka-charlie"> “Bazooka Charlie: The Unbelievable Story of Major Charles Carpenter and Rosie the Rocketer.”</a></p><p>She was beaming, Busha said, and taken aback by the several hundred people who came to hear her.</p><p>“I saw the youngest 80-year-old woman I have ever seen in my life,” he said. “You would have thought I was escorting an 18-year-old girl around. She was giddy. She was the star of the show. I introduced her as Charles Carpenter’s daughter, and she was the rock star.”</p><p>At the largest aviation event in the world, Busha said, everyone knows the name Charles Carpenter, “or the legend of him.”</p><partner-banner util-module-path="elements/partner" fluid="" bottom="" lazy="" min-height="390" outstream=""></partner-banner><p>And now they have a book full of facts about the man, the myth, the legend – the humble World War II hero Carol Apacki knew simply as dad.</p><p><em>Alan Miller writes for </em><a href="https://www.thereportingproject.org/"><em>TheReportingProject.org</em></a><em>, the nonprofit news organization of Denison University’s Journalism program, which is sponsored in part by the Mellon Foundation and </em><a href="https://denison.kindful.com/?campaign=1246449"><em>donations</em></a><em> from readers. Sign up for The Reporting Project newsletter </em><a href="https://www.thereportingproject.org/coming-soon-the-reporting-projects-weekly-newsletter/"><em>here</em></a><em>.</em></p><lit-timestamp slot="timestamp" publishdate="2023-12-31 11:04:58 +0000 UTC" updatedate="2023-12-31 11:05:04 +0000 UTC"></lit-timestamp><p><a alt="Post the article to your Facebook Timeline" data-size="large" onclick="fireNavShareAnalytics('facebook');" rel="noopener" target="_blank"><svg view-box="0 0 24 24">
                <path d="M12.6143832,21 L3.99346182,21 C3.44462725,21 3,20.5550968 3,20.006476 L3,3.99345411 C3,3.44469364 3.44469709,3 3.99346182,3 L20.006608,3 C20.5552331,3 21,3.44469364 21,3.99345411 L21,20.006476 C21,20.5551667 20.5551632,21 20.006608,21 L15.4197395,21 L15.4197395,14.029408 L17.7594454,14.029408 L18.1097832,11.3128446 L15.4197395,11.3128446 L15.4197395,9.57849053 C15.4197395,8.79198274 15.6381418,8.25600363 16.7659836,8.25600363 L18.2044917,8.25537504 L18.2044917,5.82565895 C17.9557072,5.79255313 17.1017938,5.71858885 16.108332,5.71858885 C14.0343128,5.71858885 12.6143832,6.98457234 12.6143832,9.30945332 L12.6143832,11.3128446 L10.2686707,11.3128446 L10.2686707,14.029408 L12.6143832,14.029408 L12.6143832,21 L12.6143832,21 Z"></path>
            </svg><span>Facebook</span></a>
<a alt="Tweet about this article" data-size="large" onclick="fireNavShareAnalytics('twitter')" rel="noopener" target="_blank"><svg view-box="0 0 24 24">
                <path d="M21,6.77573131 C20.338616,7.07692308 19.6265188,7.28060672 18.8795563,7.3716143 C19.6423666,6.9035753 20.2276809,6.16143012 20.5034337,5.27735645 C19.7892235,5.71072589 19,6.02600217 18.1568938,6.19501625 C17.4849445,5.45937161 16.5245642,5 15.461701,5 C13.4236661,5 11.770206,6.69555796 11.770206,8.78656555 C11.770206,9.08342362 11.8019017,9.3716143 11.8652932,9.64897075 C8.79609086,9.4907909 6.07554147,7.98483207 4.25303751,5.69122427 C3.93502377,6.2524377 3.75330164,6.9035753 3.75330164,7.59696641 C3.75330164,8.91007584 4.40517697,10.0693391 5.39619651,10.7486457 C4.79186476,10.7302275 4.22134179,10.5579632 3.72266244,10.276273 L3.72266244,10.3228602 C3.72266244,12.1581798 4.9957739,13.6890574 6.68621236,14.035753 C6.37665082,14.1245937 6.05018489,14.1690141 5.71315372,14.1690141 C5.47543582,14.1690141 5.24300053,14.1462622 5.01796091,14.1018418 C5.4881141,15.6056338 6.85103011,16.7009751 8.46751189,16.7302275 C7.20390914,17.7464789 5.61067089,18.3521127 3.88114105,18.3521127 C3.58320127,18.3521127 3.28843106,18.3347779 3,18.3001083 C4.63444268,19.3726977 6.57633386,20 8.66085578,20 C15.4543053,20 19.1679873,14.2307692 19.1679873,9.22643554 C19.1679873,9.06175515 19.1648177,8.89707476 19.1584786,8.73564464 C19.8800845,8.20151679 20.5066033,7.53521127 21,6.77573131"></path>
            </svg><span>Twitter</span></a>
<a alt="Email this article" onclick="fireNavShareAnalytics('email')" rel="noopener" target="_blank"><svg view-box="0 0 24 24">
            <path d="M3,5.8757627 C3,5.39209232 3.39269552,5 3.8926228,5 L20.1073772,5 C20.6003592,5 21,5.40389442 21,5.8757627 L21,18.1242373 C21,18.6079077 20.6073045,19 20.1073772,19 L3.8926228,19 C3.39964084,19 3,18.5961056 3,18.1242373 L3,5.8757627 Z M12,11.09375 L3,6.74107143 L3,8.48214286 L12,12.8348214 L21,8.48214286 L21,6.74107143 L12,11.09375 Z"></path>
        </svg><span>Email</span></a></p></article></div></div>]]></description>
        </item>
    </channel>
</rss>