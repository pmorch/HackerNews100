<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 28 Feb 2024 05:00:20 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Show HN: I made an app to use local AI as daily driver (139 pts)]]></title>
            <link>https://recurse.chat/</link>
            <guid>39532367</guid>
            <pubDate>Wed, 28 Feb 2024 00:40:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://recurse.chat/">https://recurse.chat/</a>, See on <a href="https://news.ycombinator.com/item?id=39532367">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="local-first"> <h2> <span>
Local first.
</span> <span>
Offline capable.
</span> </h2> <p> <span>
Talk to AI offline without complicated setup. Chat with local LLM privately.
</span> <!-- or bring your own API key to chat with GPT models. --> <span>
No subscription.
</span> </p> <video autoplay="" loop="" muted="" playsinline=""> <source src="https://recurse.chat/videos/multi-modal-llava.mp4" type="video/mp4"> </video> </div><div id="import-and-search"> <h2> <span>
Simple, yet mighty.
</span> </h2> <p> <span>
Talk to local LLM, no technical knowledge required.
</span> <span>
Multimodal chat with images.
</span> <span>
Import ChatGPT history, and continue chats with local AI.
</span> <span>
Blazingly fast full text search.
</span> </p> <video autoplay="" loop="" muted="" playsinline=""> <source src="https://recurse.chat/videos/import-chatgpt-history-search.mp4" type="video/mp4"> </video> </div><div id="customizable"> <h2> <span>
Customizable to the core.
</span> </h2> <p> <span>
Customize AI personality.
</span> <span>
Customize Appearance.
</span> <span>
Use your own GGUF model.
</span> </p> <video autoplay="" loop="" muted="" playsinline=""> <source src="https://recurse.chat/videos/customizable.mp4" type="video/mp4"> </video> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Testcontainers (240 pts)]]></title>
            <link>https://testcontainers.com/</link>
            <guid>39531536</guid>
            <pubDate>Tue, 27 Feb 2024 23:15:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://testcontainers.com/">https://testcontainers.com/</a>, See on <a href="https://news.ycombinator.com/item?id=39531536">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content"><main><div><div><h2>Test dependencies as code</h2><div><p>No more need for mocks or complicated environment configurations. Define your test dependencies as code, then simply run your tests and containers will be created and then deleted.</p><p>With support for many languages and testing frameworks, all you need is Docker.</p></div></div><div><div data-id="java"><pre><code>GenericContainer redis = new GenericContainer("redis:5.0.3-alpine")
    .withExposedPorts(6379);
</code></pre></div><div data-id="go"><pre><code>container, err := testcontainers.GenericContainer(ctx, testcontainers.GenericContainerRequest{
    ContainerRequest: testcontainers.ContainerRequest{
        Image:        "redis:5.0.3-alpine",
        ExposedPorts: []string{"6379/tcp"},
        WaitingFor:   wait.ForLog("Ready to accept connections"),
    },
    Started:          true,
})
</code></pre></div><div data-id="dotnet"><pre><code>RedisContainer redisContainer = new RedisBuilder().Build();
await redisContainer.StartAsync();
</code></pre></div><div data-id="nodejs"><pre><code>const redis = await new GenericContainer("redis:5.0.3-alpine")
    .withExposedPorts(6379)
    .withWaitStrategy(Wait.forLogMessage("Ready to accept connections"))
    .start();
</code></pre></div><div data-id="python"><pre><code>redis = (
    DockerContainer("redis:5.0.3-alpine")
        .with_exposed_ports(6379)
)
redis.start()
wait_for_logs(redis, "Ready to accept connections")
</code></pre></div><div data-id="rust"><pre><code>let docker = clients::Cli::default();
let redis = docker.run(redis::Redis::default());
</code></pre></div><div data-id="haskell"><pre><code>redis &lt;-
  run $
    containerRequest (TestContainers.fromTag "redis:5.0.3-alpine")
      &amp; setExpose ["6379/tcp"]
      &amp; setWaitingFor (waitUntilMappedPortReachable "6379/tcp")
</code></pre></div><div data-id="ruby"><pre><code>redis = Testcontainers::DockerContainer.new("redis:5.0.3-alpine").with_exposed_port(6379)
redis.start
</code></pre></div><div data-id="clojure"><pre><code>(def container (-&gt; (tc/create {:image-name "redis:5.0.3-alpine")
                               :exposed-ports [6379]})
                   (tc/start!)))
</code></pre></div><div data-id="elixir"><pre><code>{:ok, _} = Testcontainers.start_link()
config = %Testcontainers.Container{image: "redis:5.0.3-alpine"}
{:ok, container} = Testcontainers.start_container(config)
</code></pre></div></div></div><div><div><h2>How Testcontainers can help you</h2></div><div><div><p><img src="https://testcontainers.com/images/icons/database.svg" alt="" title="" width="50" height="50" lazy="false"></p><div><h3>Data access layer integration tests</h3><p>Use a containerized instance of your database to test your data access layer code for complete compatibility, without requiring a complex setup on developer machines. Trust that your tests will always start with a known state.</p></div></div><div><p><img src="https://testcontainers.com/images/icons/browser.svg" alt="" title="" width="50" height="50" lazy="false"></p><div><h3>UI/Acceptance tests</h3><p>Use containerized web browsers, compatible with Selenium, to run automated UI tests. Each test gets a fresh, clean instance of the browser, without having to worry about variations in plugins or required updates.</p></div></div><div><p><img src="https://testcontainers.com/images/icons/puzzle.svg" alt="" title="" width="50" height="50" lazy="false"></p><div><h3>Application integration tests</h3><p>Run your application in a short-lived test mode with dependencies, such as databases, message queues or web servers, to give you a rich interactive and explorative testing environment.</p></div></div></div></div><div><h2>Supported Languages</h2><p>There are implementations of Testcontainers in all of your favorite languages. Click through to read their specific documentation.</p></div><div><h2>Inspirational members of the community</h2><p>Testcontainers Community Champions actively contribute to the growth and betterment of the Testcontainers community. They are passionate about Testcontainer, and use their knowledge and skills to help others succeed.</p><a href="https://testcontainers.com/community-champions">Meet our Community Champions<svg height="10" viewBox="0 0 10 10"><use href="#icon-caret"></use></svg></a></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[U.S. Launches Antitrust Investigation of UnitedHealth (395 pts)]]></title>
            <link>https://www.wsj.com/health/healthcare/u-s-launches-antitrust-investigation-of-healthcare-giant-unitedhealth-ff5a00d2</link>
            <guid>39530487</guid>
            <pubDate>Tue, 27 Feb 2024 21:46:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/health/healthcare/u-s-launches-antitrust-investigation-of-healthcare-giant-unitedhealth-ff5a00d2">https://www.wsj.com/health/healthcare/u-s-launches-antitrust-investigation-of-healthcare-giant-unitedhealth-ff5a00d2</a>, See on <a href="https://news.ycombinator.com/item?id=39530487">Hacker News</a></p>
Couldn't get https://www.wsj.com/health/healthcare/u-s-launches-antitrust-investigation-of-healthcare-giant-unitedhealth-ff5a00d2: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Nintendo is suing the creators of Switch emulator Yuzu (629 pts)]]></title>
            <link>https://overkill.wtf/nintendo-sue-yuzu-emulator/</link>
            <guid>39530203</guid>
            <pubDate>Tue, 27 Feb 2024 21:25:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://overkill.wtf/nintendo-sue-yuzu-emulator/">https://overkill.wtf/nintendo-sue-yuzu-emulator/</a>, See on <a href="https://news.ycombinator.com/item?id=39530203">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
<div>
<p>
Nintendo of America is suing the creators behind the Nintendo Switch emulator Yuzu, claiming their tech facilitates piracy.
</p>
<p>New documents filed Monday, February 26 reveal that videogame giant Nintendo is taking action against the creators of the popular emulator tool Yuzu. </p><p><a href="https://dockets.justia.com/docket/rhode-island/ridce/1:2024cv00082/56980?ref=overkill.wtf" rel="noreferrer">The copyright infringement filing</a>, from Nintendo of America, states that the Yuzu tool (from developer Tropic Haze LLC) illegally circumvents the software encryption and copyright protection systems of Nintendo Switch titles, and thus facilitates piracy and infringes copyright under the Digital Millennium Copyright Act (DMCA).</p><p>Nintendo alleges that Tropic Haze's free Yuzu emulator tool unlawfully allows pirated Switch games to be played on PCs and other devices, bypassing Nintendo's protection measures. </p><p>The <a href="https://yuzu-emu.org/wiki/faq/?ref=overkill.wtf#how-do-i-get-games" rel="noreferrer">official Yuzu website</a> suggests that the tool is to be used with software you yourself own: "<em>You are legally required to dump your games from your Nintendo Switch</em>" —&nbsp;but it's common knowledge, that this is not how these tools are primarily used.</p><p>The legal document claims that over a million copies of last year's The Legend of Zelda: Tears of the Kingdom were downloaded prior to the game's official retail release. </p><p>Additionally, Nintendo's filing points to the success of <a href="https://www.patreon.com/yuzuteam?ref=overkill.wtf" rel="noreferrer">Yuzu's Patreon page</a>, highlighting how the project is actively supported by over 7,000 members. At time of writing, the Yuzu Patreon currently brings in close to $30,000 per month. Nintendo's filing alludes that this Patreon page has been actively engaged in promoting the emulator, and thus by extension piracy. </p><figure><img src="https://overkill.wtf/content/images/2024/02/yuzu-patreon.jpg" alt="Yuzu on Patreon" loading="lazy" width="900" height="294" srcset="https://overkill.wtf/content/images/size/w600/2024/02/yuzu-patreon.jpg 600w, https://overkill.wtf/content/images/2024/02/yuzu-patreon.jpg 900w" sizes="(min-width: 720px) 720px"><figcaption><span>The Yuzu project on Patreon</span></figcaption></figure><p>As a result, Nintendo is now seeking a trial by jury, damages, and is demanding that the Yuzu emulator is shut down. </p><p><em>Developing...</em></p><hr><p>Via:<em> </em><a href="https://twitter.com/stephentotilo/status/1762576284817768457?ref=overkill.wtf" rel="noreferrer"><em>Stephen Totilo</em></a><em> of </em><a href="https://www.gamefile.news/?ref=overkill.wtf" rel="noreferrer"><em>Game File</em></a></p>
</div>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Does this 8088 code in the Leisure Suit Larry 2 game do anything? (172 pts)]]></title>
            <link>https://retrocomputing.stackexchange.com/questions/29565/does-this-8088-code-in-the-leisure-suit-larry-2-game-actually-do-anything</link>
            <guid>39530113</guid>
            <pubDate>Tue, 27 Feb 2024 21:18:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://retrocomputing.stackexchange.com/questions/29565/does-this-8088-code-in-the-leisure-suit-larry-2-game-actually-do-anything">https://retrocomputing.stackexchange.com/questions/29565/does-this-8088-code-in-the-leisure-suit-larry-2-game-actually-do-anything</a>, See on <a href="https://news.ycombinator.com/item?id=39530113">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
<p>It's most definitely not a program 'written' by a programmer, but rather a listing of some random program segment using the disassembly command of a <a href="https://en.wikipedia.org/wiki/Debugger" rel="noreferrer">debugger</a>.</p>
<p>Have you tried to find that code within the program?</p>
<h2>Let's See What We Got</h2>
<p>Hard to say anything definitive with only this (incomplete) section. A few details visible are:</p>
<pre><code>01: INT 21         ; An unknown (*1) call to DOS, function code would have been set prior to this line
02: JB 0103        ; Jump to address 0103h if DOS returns NO error
03: MOV AH,4D      ; Get return code from DOS (*1)
04: INT 21
05: CS:            ; (*2)
06: MOV [OBEA],AX  ; Save return information within the program code at offset 0BEAh
07: JMP 02B2       ; Continue at 02B2h
08: JMP 1451       ; Continue at 1451h (*3)
09: CS:            ; (*4)
10: TEST BYTE PTR [0C59],01 ; Test the lowest bit of the byte at 0C59h within code 
11: JZ 0150        ; Continue at 0150h if not set (*6)
12: CS:
13: TEST BYTE PTR [OC59],02 ; Test the second lowest bit 
14: JZ 014F        ; Continue at 014Fh if not set (*6)
15: IRET           ; Return from Interrupt to terminate the program(*5,*6)
16: INT 21         ; Again a an unknown DOS call (*7)
17: JB 0103        ; Continue at 0103h if no error reported (*8)
18: TEST BYTE PTR [0C59],04 ; Test the third lowest bit
19: JZ 0169        ; Continue at 0169h if not set
20: CMP AH,01      ; check AH for 01h (*7)
21: JA 014F        ; If AH was greater than 01h continue at 014Fh (*9)
</code></pre>
<p>*1 - Since the second INT 21h (L:04), made when an error is returned, asks DOS for a <a href="https://fd.lod.bz/rbil/interrup/dos_kernel/214d.html" rel="noreferrer">program's return code</a>, the previous DOS call (L:01) was most likely an <a href="https://fd.lod.bz/rbil/interrup/dos_kernel/214b.html" rel="noreferrer">EXEC call</a> to run a different program as child process. Using this function also tells that the program was written/compiled for MS-DOS 2.0 or later.</p>
<p>*2 - A hint that the debugger used was most likely the one supplied with MS-DOS.</p>
<p>*3 - Line 08  might be a target from a previous branch, one like the one on L:02. Such would be a typical compiler structure to continue from a branch to a destination more than 128 bytes away.</p>
<p>*4 - An entry point, like *2, except here operation continues</p>
<p>*5 - Using an IRET here is a strong indicator that the program may be a .COM program and this being used to terminate it.</p>
<p>DOS prepares the memory of a COM program much like CP/M, including a way that a jump at address 0000h will terminate it. This is done by placing it's original <a href="https://fd.lod.bz/rbil/interrup/dos_kernel/20.html" rel="noreferrer">termination interrupt</a> INT 20h at the start of the PSP - which is at CS:0 for COM programs - and pushing a word of 0000h onto the stack.</p>
<p>Now a simple RET NEAR can be used to terminate. This of course only works if CS doesn't get changed inbetween. A condition true for most simple programs, especially such converted from 8080 code. To still use that way of termination while possibly changing CS during program run it was common for COM programs to start by pushing CS and another word of 0000h onto the stack. Now a RETF could  used, no matter what content CS had at the moment (and as long as all stack levels were cleaned up).</p>
<p>EXE programs added a little issue as their initial CS is not pointing to the PSP. But DS is loaded in both types with the PSP address, so pushing DS instead of CS would make the code usable for both types of program.</p>
<p>Since that 'trick' would leave a a single word on stack (the one provided by DOS to start with), it became common to use an IRET instead of a RET FAR, which does take that word as well off the stack. Not that it made a difference, but it felt better :))</p>
<p>*6 - It's extreme hard to do any guess without knowing the address that code is located. But having two jumps targeted only one byte apart means that either some (for x86) unusual program trick is used, or 014Fh containing a single byte instruction. Considering that an IRET/INT combination is rather unusual and that IRET is a single byte instruction, it could quite well be that it's address is 014Fh. But then again the previous JZ wont make much sense, as either way would lead to taking the IRET.</p>
<p>*7 - Checking AH after DOS functions is rare, as the standard return code is contained in AL (AX). Get Return code (see L:03/04) in turn does use AH and AL different. AL contains the child return code, while AH contains the termination reason. Here 00h/01h are regular termination reasons, while 02h is a critical error abort. Checking for above 01h would make sense if the previous INT 21h was as well an EXEC call.</p>
<p>*7 - Note this being he same target as used on line 02, which seems to be the default good exit.</p>
<p>*8 - Note this being he same target as used on line 14</p>
<hr>
<h2>Conclusions From Code</h2>
<p>The code snipplet is most likely part of an exec function that starts a child program and checks if the execution went well and continues afterwards. It might thus be some menu system/framework starting overlay modules for different tasks (game sections??). It seems to be written in some High level language.</p>
<p>Also, it's most likely not from DOS or any OS level software, but user space, as it used INT 21h functions.</p>
<p>Using the IRET termination hints to some really old code with DOS 1.x origin, or a compiler using that trick to save code size if here are multiple termination points. It must be an older one, as MS discouraged use of returning via PSP:0 and INT 20h in general with DOS 3</p>
<p>Taking into account that the target for 'good' execution (L:02/L:17) points to a very low address within this code, this could be an endless loop starting around the loading and executing a child process. Together with the fact that it checks flags within its own code segment after returning from the child process to decide how to continue, I could imagine this being a loader for a larger program, whose only job is to reload that program whenever it got normally terminated, unless some flags have been set by the child before termination.</p>
<p>A program like this could be a simple solution to catch certain errors without adding lots of error checking code within the application. Any error detection would just exit the child, which then gets restarted from above code.</p>
<p>Note: These are all wild guesses, not necessary true. There is no way to tell where it's originated, unless one finds exactly that code in some program.</p>
<h2>Now, What is It?</h2>
<p>Nothing. I'd say they just started up their debugger, loaded some program, dumped a random section of 21 lines and copied them into the game text. Could be from the game or any other program.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[All you need is Wide Events, not "Metrics, Logs and Traces" (153 pts)]]></title>
            <link>https://isburmistrov.substack.com/p/all-you-need-is-wide-events-not-metrics</link>
            <guid>39529775</guid>
            <pubDate>Tue, 27 Feb 2024 20:53:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://isburmistrov.substack.com/p/all-you-need-is-wide-events-not-metrics">https://isburmistrov.substack.com/p/all-you-need-is-wide-events-not-metrics</a>, See on <a href="https://news.ycombinator.com/item?id=39529775">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png" width="1456" height="373" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:373,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:284538,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c4740a-18a4-4553-8a72-b27a090b6699_2454x628.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>This quote from Charity Majors is probably the best summary of the current state of observability in the tech industry - a total, mass confusion. Everyone is confused. What is a trace? What is a span? Is log line a span? Do I need traces if I have logs? Why I need traces if I have great metrics? The list of questions like these goes on. Charity - together with other great folks from observability system called </span><a href="https://www.honeycomb.io/" rel="nofollow ugc noopener">Honeycomb</a><span> - have been doing a great job shedding light on these questions. Yet, per my own experience it’s still extremely hard to explain what does Charity meant by “logs are thrash”, let alone the fact that logs and traces are essentially the same things. Why is everyone so confused?</span></p><p>With the risk of being spicy a little, I’m going to blame Open Telemetry. Yes, it’s powering the modern observability stack and yet I blame it for the mass confusion. Not because it’s a bad solution - it’s great! But the presentation and the whole approach of explaining what Open Telemetry is and what it does makes the observability look tricky and complex.</p><p>First, Open Telemetry from the very beginning makes a clear distinctions between traces, metrics and logs:</p><blockquote><p>OpenTelemetry is a collection of APIs, SDKs, and tools. Use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software’s performance and behavior.</p></blockquote><p>Then it goes deeper in explaining each of these 3.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png" width="1456" height="1050" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1050,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:679568,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F66bae5d5-989e-4064-a2ab-4b946c67fa49_3428x2472.png 1456w" sizes="100vw"></picture></div></a></figure></div><p><span>This is screenshot from the part of open telemetry website introducing traces. Based on my experience talking to people who work with OpenTelemetry, this presentation has indeed become one of the main pictures being associated with observability. For some, this IS the observability. And it also sets traces apart from anything else. This is clear not a log, is it? This also doesn’t look like a metric, right? It’s something </span><em>special, </em><span>probably a bit </span><em>sacred, </em><span>and requiring learning investment. Per my experience, once people learned about traces, they only think about them in the context of this picture and the whole set of terms like spans, root spans, nested spans and the rest. OpenTelemetry site has a </span><a href="https://opentelemetry.io/docs/concepts/glossary/" rel="nofollow ugc noopener">glossary</a><span> page with more than 60 terms! This all is insanely complex!</span></p><p>But what’s more important - does this focus on “logs, metrics and traces” represent the true power of observability? It does cover some scenarios that’s true, but when it comes to the distributed systems at scale what’s more important is an ability to “dig” into data - “slice and dice” it, build and analyse various views, correlate, search for anomalies… And systems that offer all of this do exist.</p><p>When I was working at Meta, I wasn’t aware that I was privileged to be using the best observability system ever. This system is called Scuba and it’s the top 1 thing by a large margin that people miss when they leave Meta.</p><p>The basic idea of Scuba is extremely simple and doesn’t require a glossary page for people to grasp. It operates with Wide Events. Wide Event is just a collection of fields with names and values, pretty much like a json document. If you need to record some information - whether it’s the current state of the system, or an event caused by an API call, background job or whatever - you can just write some Wide Event to Scuba. For instance, if a system serves ads, the natural desire would be to record Ad Impressions - the facts that a certain ad has been seen by a user. The corresponding Wide Event might be looking like this:</p><pre><code><code>{
    "Timestamp": "1707951423",
    "AdId": "542508c92f6f47c2916691d6e8551279”,
    "UserCountry": "US",
    "Placement": "mobile_feed",
    "CampaingType": "direct_ads",
    "UserOS": "Android",
    "OSVersion": "14",
    "AppVersion": "798de3c28b074df9a24a479ce98302b6",
    ...
}</code></code></pre><p><span>Such events called wide, because it’s encouraged to dump to them all the information one can think of. Anything that might be relevant in the context of a certain data - just put it there, it might be useful later. This approach is laying the groundwork for dealing with </span><em>unknown unknowns</em><span> - something you can’t think of now that may be revealed later during an incident investigation.</span></p><p>Dealing with unknown unknowns can be better demonstrated on an example. Scuba has a nice intuitive interface which is easy to explore and play with. It has a section where one can pick a metric to look at, as well as sections for filters and groupings - and Scuba would draw a nice time series chart. Firs look for Ad Impressions dataset would simply draw a chart with impressions count:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png" width="1456" height="628" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:628,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:6919861,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc2b8e77d-5800-46b9-acf7-42eed73cdfa3_4466x1926.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>If we express what’s exactly is selected here in terms of SQL, then this is something like</p><pre><code><code>SELECT COUNT(*) FROM AdImpressions
WHERE IsTest = False</code></code></pre><p><span>Well, it’s actually not exactly like that. Scuba also has a concept of </span><em>native sampling.</em><span> When a certain event is written to Scuba, it also must write a field called </span><strong>samplingRate</strong><span> - the rate this particular event is being sampled with. Scuba uses this information to properly “upscale” results shown on the charts, so there is no need to do this upscaling in the head. This is a really great concept because it allows a dynamic sampling - e.g. some type of impressions may be sampled more than another, while preserving the “real” values in the UI. So, the actual query under the hood is</span></p><pre><code><code>SELECT SUM(samplingRate) FROM AdImpressions
WHERE IsTest = False</code></code></pre><p>Note that this whole “upscaling” is done transparently by the UI and users don’t think about it during querying.</p><p>And so assume some alert happened and indicated that our precious Ad Impression chart is looking weird:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png" width="1456" height="743" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:743,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:7077824,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba9830b4-b4c8-4ce4-99ff-5c15c03101a2_4478x2284.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>The first instinct of everyone who’re using Scuba for investigation is to “slice and dice”, i.e. filter or group by, to see if we can learn </span><em>something</em><span>. We don’t know what we’re looking for, but we believe that we’ll find it. So we would group by say impression type, or user country, or the placement, until we would find something suspicious. Let’s assume it’s CampaignType grouping:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png" width="1456" height="626" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:626,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:7041811,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F058f8dc3-c1a1-4724-a4cc-c769fcce528a_4448x1912.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>We see that some campaign type called </span><strong>in_app_purchases </strong><span>(just in case want to note that this type name is completely made-up by me)</span><strong> </strong><span>seems to look differently than others. We don’t really know that does it mean - we don’t need to! - to continue our digging. Okay, now we can filter these campaigns only, and continue grouping by something else we can think of. For instance, User OS makes sense.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png" width="1456" height="627" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:627,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:7197287,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffe79fa2c-1d06-4f9c-b295-7aa1b05bfa5b_4452x1916.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Hmmm, Android seems to be in trouble. iOS is OK, which suggests that the problem is on the client side - a broken app version maybe?</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png" width="1456" height="629" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d2546f00-e979-45bb-8251-add07e00de41_4454x1924.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:629,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:7411193,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd2546f00-e979-45bb-8251-add07e00de41_4454x1924.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Weird. Some are suffering, some others don’t. Check OS Version maybe?</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png" width="1456" height="629" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:629,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:7409766,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0068b568-bf44-4718-b95f-9cae5a8cf9d8_4450x1922.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Ha! It’s the newest version of the OS, and looks like some of the app versions are not doing well on this OS version for this type of campaign. The dedicated teams may look deeper now, given this information.</p><p><span>What happened? Without any knowledge of the system we’ve narrowed down the scope of the issue, and identified the teams to take a lead for further investigation. Could we know in advance that this weird combination of OS, OS Version, Campaign Type and App Version might lead to some issue, to have a dedicated metric prepared? Of course no. This is an example of dealing with </span><em>unknown unknowns</em><span>. We’ve just dropped all the relevant context into Wide Events, and used it later when needed. Scuba made it simple to do the exploration because it’s fast and has a really nice easy-to-use UI. Also note that we have never mentioned anything about cardinality. Because it doesn’t matter - any field can be of any cardinality. Scuba works with raw events and doesn’t pre-aggregate anything, and so cardinality is not an issue.</span></p><p><span>Sometimes UI / Visualisation aspect doesn’t get enough attention, and observability systems offer some query language - either a proprietary (bad-bad-bad), or SQL (slightly better, but still bad). Such an interface makes it close to impossible to conduct similar investigations. One important aspect of Scuba that all the fields - function, filter, grouping, etc. - are </span><em>explorable.</em><span> Meaning that there is an easy way to see what kind of values we can pick. When the owners of a certain field are not lazy, they even included a detailed description for the given field with relevant links etc. This is huge. I have successfully investigated a lot of incidents myself, without full understanding of either the whole system, or the data available in this dataset. And boy I did learn a lot about the system during these investigations, simply via playing around with Scuba! This was amazing. This was observability paradise.</span></p><p>Now imagine my level of confusion and disbelief when I left Meta and got to know the state of observability systems outside.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png" width="1456" height="1456" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1456,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:5866743,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F949fb3f4-e47c-4630-8dc9-8fab4c8376c2_2418x2418.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Logs? Traces? Metrics? What the hell? Wide Events, anyone? Can I please not learn that 60 terms from the Glossary and just … explore stuff?</p><p>It took me quite a while to map my Scuba-based mental model to Open Telemetry mental model. I realised that Open Telemetry’s Span is, in fact, the Wide Event. Actually, I’m still not quite sure I got it right:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png" width="482" height="96.33379120879121" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:291,&quot;width&quot;:1456,&quot;resizeWidth&quot;:482,&quot;bytes&quot;:97885,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e6d61c9-25a3-49e8-a70d-94e8aa715061_1710x342.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>If we take AdImpression example, this impression is not really an operation, it’s just some fact we want to record… To be fair, there is some notion of Event in Open Telemetry:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png" width="1456" height="154" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:154,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:129442,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd315dea4-ff72-45d5-9e33-5edd56c61073_3016x318.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>But if we follow the links to dig deeper, we again find out that Event is in fact one of Traces, Metrics or Logs 🤷</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png" width="472" height="91.41758241758242" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:282,&quot;width&quot;:1456,&quot;resizeWidth&quot;:472,&quot;bytes&quot;:98430,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a096676-d54d-4f66-8677-453c999a54ce_1732x336.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>But anyway, Span is the closest concept to Wide Event. The thing is - it’s extremely hard to advocate for this mental model when the one suggested by Open Telemetry is already learned. Which is really upsetting, because Traces, Metrics and Logs are all just special cases of Wide Events really:</p><ul><li><p><strong>Traces and Spans:</strong><span> These are just wide events having </span><strong>SpanId, TraceId and ParentSpanId</strong><span> fields. So we can filter all spans with a given TraceId, topologically sort them using SpanId → ParentSpanId relation, and draw that distributed tracing view everyone loves.</span></p></li><li><p><strong>Logs:</strong><span> Honestly, I’m really confused what Open Telemetry means by Logs. Looks like </span><a href="https://opentelemetry.io/docs/specs/otel/glossary/#logs" rel="nofollow ugc noopener">a lot of things</a><span>, and one of them is Structured Log which is pretty much the Wide Event. Great! The problem, however, that “a log” is quite a defined concept, and usually people mean by it is what is produced by those </span><code>logger.info(…)</code><span> calls. Anyway, whatever is meant, logs can be easily mapped to wide events, of course. In the simplest case we can just get the log message, put it to the “log_message” field, add a bunch of metadata, and be happy. In a more complex case, we can try to automatically extract a template from a log message via removing tokens that looks like IDs, and get a hash of this template. This can allow to quickly get the most frequent error, for instance, via grouping by this hash. Meta has such a system, and it’s pretty cool.</span></p></li><li><p><strong>Metrics:</strong><span> Metrics can be easily mapped, too. We just need to emit a Wide Event once per some interval containing the state of the system (system metrics like cpu, various counters,…). Prometheus, by the way, does exactly that with the scraping approach - takes a snapshot of the system once in a while. Unlike with prometheus, however, with Wide Events approach we don’t need to worry about cardinality.</span></p></li></ul><p><span>But Wide Events can offer much much more than these “3 pillars”. The aforementioned debugging session is already a case which is not really covered by Traces, Logs and Metrics - not naturally, at least. There could be other use cases, too - for instance, continuous profiling data can be easily represented as a Wide Event, and queried to build a </span><a href="https://www.brendangregg.com/flamegraphs.html" rel="nofollow ugc noopener">Flame Graph</a><span>. No need to have a separate system for this - a single system working with Wide Events can do it all. Imagine the possibilities for cross-correlation &amp; root cause analysis when everything in one place, stored together. Especially now, in the era of raise of AI-based tools that are pretty good in finding correlations in data.</span></p><p>I don’t know… I just wanted to express my frustration with the level of confusion and this focus on “3 pillars”.</p><p><span>I just wish that observability vendors took a stand against confusion, and offered a simple and natural way to interact with the system. </span><a href="https://www.honeycomb.io/" rel="nofollow ugc noopener">Honeycomb</a><span> seems is </span><a href="https://x.com/mipsytipsy/status/1738048200630792245?s=20" rel="nofollow ugc noopener">doing that</a><span>, as well as some other systems like </span><a href="https://axiom.co/" rel="nofollow ugc noopener">Axiom</a><span>. This is great! And hope the others will follow.</span></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SuperTux (211 pts)]]></title>
            <link>https://github.com/SuperTux/supertux</link>
            <guid>39528726</guid>
            <pubDate>Tue, 27 Feb 2024 19:42:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/SuperTux/supertux">https://github.com/SuperTux/supertux</a>, See on <a href="https://news.ycombinator.com/item?id=39528726">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">SuperTux</h2><a id="user-content-supertux" aria-label="Permalink: SuperTux" href="#supertux"></a></p>
<p dir="auto"><a href="https://github.com/SuperTux/supertux/actions/workflows/windows.yml?branch=master"><img src="https://github.com/SuperTux/supertux/actions/workflows/windows.yml/badge.svg?branch=master" alt="Windows"></a>
<a href="https://github.com/SuperTux/supertux/actions/workflows/macos.yml?branch=master"><img src="https://github.com/SuperTux/supertux/actions/workflows/macos.yml/badge.svg?branch=master" alt="MacOS"></a>
<a href="https://github.com/SuperTux/supertux/actions/workflows/gnulinux.yml?branch=master"><img src="https://github.com/SuperTux/supertux/actions/workflows/gnulinux.yml/badge.svg?branch=master" alt="GNU/Linux"></a>
<a href="https://github.com/SuperTux/supertux/actions/workflows/android.yml?branch=master"><img src="https://github.com/SuperTux/supertux/actions/workflows/android.yml/badge.svg?branch=master" alt="Android"></a></p>


<p dir="auto"><a href="https://github.com/SuperTux/supertux/actions/workflows/wasm.yml?branch=master"><img src="https://github.com/SuperTux/supertux/actions/workflows/wasm.yml/badge.svg?branch=master" alt="WebAssembly"></a>
<a href="https://github.com/SuperTux/supertux/actions/workflows/ubuntu-touch.yml?branch=master"><img src="https://github.com/SuperTux/supertux/actions/workflows/ubuntu-touch.yml/badge.svg?branch=master" alt="Ubuntu Touch"></a>
<a href="https://github.com/SuperTux/supertux"><img src="https://camo.githubusercontent.com/c21f9c6489415815fbb984d60bf009ca12ed6cfbb132679febe80a0c21d91baf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f73757065727475782f73757065727475782f746f74616c2e7376673f6d61784167653d32353932303030" alt="Github All Releases" data-canonical-src="https://img.shields.io/github/downloads/supertux/supertux/total.svg?maxAge=2592000"></a></p>
<p dir="auto">SuperTux is a jump'n'run game with strong inspiration from the
Super Mario Bros. games for the various Nintendo platforms.</p>
<p dir="auto">Run and jump through multiple worlds, fighting off enemies by jumping
on them, bumping them from below or tossing objects at them, grabbing
power-ups and other stuff on the way.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a000e64a070a28c3ee44a019e35c1119a01c36ec6a7dbaff62410ddba9f006fb/68747470733a2f2f7777772e73757065727475782e6f72672f696d616765732f305f365f302f305f365f305f332e706e67"><img src="https://camo.githubusercontent.com/a000e64a070a28c3ee44a019e35c1119a01c36ec6a7dbaff62410ddba9f006fb/68747470733a2f2f7777772e73757065727475782e6f72672f696d616765732f305f365f302f305f365f305f332e706e67" alt="Screenshot" data-canonical-src="https://www.supertux.org/images/0_6_0/0_6_0_3.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Story: Penny gets captured!</h2><a id="user-content-story-penny-gets-captured" aria-label="Permalink: Story: Penny gets captured!" href="#story-penny-gets-captured"></a></p>
<p dir="auto">Tux and Penny were out having a nice picnic on the ice fields of
Antarctica. Suddenly, a creature jumped from behind an ice bush, there
was a flash, and Tux fell asleep!</p>
<p dir="auto">When Tux wakes up, he finds that Penny is missing. Where she lay
before now lies a letter:</p>
<blockquote>
<p dir="auto">Tux, my arch enemy! I have captured your beautiful Penny and have
taken her to my fortress. The path to my fortress is littered with my
minions. Give up on the thought of trying to reclaim her, you haven't
got a chance!</p>
<p dir="auto">-Nolok</p>
</blockquote>
<p dir="auto">Tux looks and sees Nolok's fortress in the distance. Determined to
save his beloved Penny, he begins his journey.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">For major platforms, stable releases are built and available for download from
<a href="https://www.supertux.org/download.html" rel="nofollow">supertux.org</a> or alternatively directly
from <a href="https://github.com/SuperTux/supertux/releases">GitHub</a>. You should be able
to install these using default tools provided by your platform. On macOS, when
Gatekeeper is enabled (default) it will refuse to open SuperTux. This is due to
the lack of a signature on the application. If you wish to open SuperTux anyway
without disabling the Gatekeeper feature entirely, you can open the application
from the context menu (control click on the icon). macOS will then remember your
choice the next time.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Documentation</h2><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto">Important documentation for SuperTux is contained in multiple files.
Please see them:</p>
<ul dir="auto">
<li><code>INSTALL.md</code> - Requirements, compiling and installing.</li>
<li><code>README.md</code> - This file</li>
<li><code>NEWS.md</code> - Changes since the previous versions of SuperTux.</li>
<li><code>LICENSE.txt</code> - The GNU General Public License, under whose terms SuperTux is
licensed. (Most of the data subdirectory is also licensed under
CC-by-SA)</li>
<li><code>data/credits.stxt</code> - Credits for people that contributed to the creation of
SuperTux. (You can view these in the game menu as well.)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Playing the game</h2><a id="user-content-playing-the-game" aria-label="Permalink: Playing the game" href="#playing-the-game"></a></p>
<p dir="auto">Both keyboards and joysticks/gamepads are supported. You can change
the controls via the Options menu. Basically, the only keys you will
need to use in-game are to do the following actions: jump, duck,
right, left, action and 'P' to pause/unpause the game. There isn't much
to tell about the first few, but the "action" key allows you to pick
up objects and use any powerup you got. For instance, with the fire
flower, you can shoot fireballs, or with the ice flower fire ice pellets.</p>
<p dir="auto">Other useful keys include the Esc key, which is used to go to the menu
or to go up a level in the menu. The menu can be navigated using the
arrow keys or the mouse.</p>
<p dir="auto">In the worldmap, the arrow keys are used to navigate and Enter to
enter the current level.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Community</h2><a id="user-content-community" aria-label="Permalink: Community" href="#community"></a></p>
<p dir="auto">In case you need help, feel free to reach out using the following means:</p>
<ul dir="auto">
<li><strong>IRC:</strong> #supertux on
<a href="https://libera.chat/" rel="nofollow">Libera Chat</a> hosts most of the discussions between
developers. Also, real-time support can be provided here. If you don't know
how to use an IRC client, you access the channel using a web-based
<a href="https://kiwiirc.com/nextclient/irc.libera.chat:+6697/?nick=Guest?#supertux" rel="nofollow">client</a>.
Please stay around after asking questions, otherwise you will be disconnected
and might miss potential answers.</li>
<li><strong>Matrix:</strong> <a href="https://matrix.to/#/#supertux:matrix.org" rel="nofollow">#supertux:matrix.org</a>
is bridged to our IRC room.</li>
<li><strong><a href="https://forum.freegamedev.net/viewforum.php?f=66" rel="nofollow">Forum</a>:</strong> The SuperTux
community is very active on the forum, the discussion ranges from feature
proposals to support questions. In particular, most community-contributed
add-ons are published there first, so this is worth checking.</li>
<li><strong>Mailing Lists:</strong> The
<a href="http://lists.lethargik.org/listinfo.cgi/supertux-devel-lethargik.org" rel="nofollow">supertux-devel</a>
mailing list is dead. Here is the <a href="https://github.com/supertux-community/supertux-devel-maillist">archive</a>.</li>
<li><strong>Social Media:</strong> Mostly on <a href="https://twitter.com/supertux_team" rel="nofollow">Twitter</a> at
the moment.</li>
<li><strong>Discord:</strong> Also, you can join our <a href="https://discord.com/invite/AcvtHWz" rel="nofollow">Discord server</a> to get in touch with us.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development status</h2><a id="user-content-development-status" aria-label="Permalink: Development status" href="#development-status"></a></p>
<p dir="auto">As of now, with the release of SuperTux 0.6.3 (December 2021), the Forest World is almost
finished, since the ghost forest section has been included. However, some levels, especially
the Ghostree Level, are considered to be placeholders, because for the next version (0.7.0) a
great overhaul is planned with new features like reworked boss fights, graphics, and worlds.
If you have some Constructive Feedback, Contributions or ideas to share, don't hestitate
to contact us with one of the possibilities given above.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple Cancels Work on Electric Car, Shifts Team to Generative AI (716 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2024-02-27/apple-cancels-work-on-electric-car-shifts-team-to-generative-ai</link>
            <guid>39528134</guid>
            <pubDate>Tue, 27 Feb 2024 19:02:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2024-02-27/apple-cancels-work-on-electric-car-shifts-team-to-generative-ai">https://www.bloomberg.com/news/articles/2024-02-27/apple-cancels-work-on-electric-car-shifts-team-to-generative-ai</a>, See on <a href="https://news.ycombinator.com/item?id=39528134">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pure Programming Language (114 pts)]]></title>
            <link>https://agraef.github.io/pure-lang/</link>
            <guid>39526922</guid>
            <pubDate>Tue, 27 Feb 2024 17:38:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://agraef.github.io/pure-lang/">https://agraef.github.io/pure-lang/</a>, See on <a href="https://news.ycombinator.com/item?id=39526922">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="center">
    
    <p><a href="https://agraef.github.io/pure-lang/"><img src="https://agraef.github.io/pure-lang/images/waterdrop.png" id="rightimg" alt="[Pure]"></a></p><p>Pure is a modern-style functional programming language based on term rewriting. It offers equational definitions with pattern matching, full symbolic rewriting capabilities, dynamic typing, eager and lazy evaluation, lexical closures, built-in list and matrix support and an easy-to-use C interface. The interpreter uses <a href="http://llvm.org/">LLVM</a> as a backend to JIT-compile Pure programs to fast native code.</p>

<p>Pure is the successor of the author's <a href="http://q-lang.sf.net/">Q</a> language. It offers many new and powerful features and programs run much faster than their Q equivalents. It also integrates nicely with a number of other computing environments, most notably <a href="https://github.com/agraef/pure-lang/wiki/Faust">Faust</a>, <a href="https://github.com/agraef/pure-lang/wiki/PureData">Pure Data</a>, <a href="https://github.com/agraef/pure-lang/wiki/Octave">Octave</a>, <a href="https://github.com/agraef/pure-lang/wiki/Reduce">Reduce</a> and <a href="https://github.com/agraef/pure-lang/wiki/TeXmacs">TeXmacs</a>. A fairly extensive collection of <a href="https://github.com/agraef/pure-lang/wiki/Addons">addon modules</a> is available, which makes Pure usable as a compiled scripting language for a variety of purposes.</p>

    <p><b>NOTE:</b> Pure has moved from Bitbucket to Github. Please check the <a href="https://bitbucket.org/purelang/pure-lang/downloads/">Bitbucket downloads</a> page for some of the older downloads. The original website on Bitbucket can still be found <a href="https://purelang.bitbucket.io/">here</a>.</p>

    <p>Please also check out my <a href="https://agraef.github.io/">personal
    Github page</a> for more projects related to Pure.</p>

    <h4><a name="EXAMPLES" id="EXAMPLES"></a><a href="#EXAMPLES">EXAMPLES</a></h4>

    <p>A little code sample that prints the first 1000 Fibonacci numbers:</p>
    <p><tt>extern int puts(char*);<br>
      do (puts.str) (take 1000 (fibs 0L 1L)) with fibs a b = a : fibs b (a+b) &amp; end;</tt></p>
    <p>You can execute this snippet by typing or pasting it at the Pure interpreter prompt. It uses the C <code>puts</code> function to do the printing. Note that if you remove the <code>take 1000</code>, all Fibonacci numbers will be printed (press <code>Ctrl-C</code> when you get bored). An explanation of this example can be found in the <a href="https://agraef.github.io/pure-docs/pure.html#lazy-evaluation-and-streams">Pure manual</a>. More examples can be found <a href="https://agraef.github.io/pure-docs/pure.html#examples">here</a>. (This points to the Examples section of the Pure manual which quickly gives you an idea how Pure programs look like.)</p>
    <p>The above is normal business in functional programming, but what about symbolic computation? For instance, here is a famous equation which you hopefully remember from high school algebra: <tt>(x+y)^2 = x^2+2*x*y+y^2;</tt> Again, you can just paste this line into the interpreter, and lo and behold, it just works in Pure:</p>
    <p><tt>&gt; (a*x+(y+b))^2;<br>(a*x)^2+2*(a*x)*(y+b)+(y^2+2*y*b+b^2)</tt></p>
    <p>Now this might seem like an arcane feature, but many if not most real-world programming tasks involve a substantial amount of symbolic computations these days, and as a term rewriting language, Pure makes those easy. E.g., check the <a href="https://github.com/agraef/pure-lang/tree/master/pure/examples/units.pure">units.pure</a> script in the sources for a practical example. (More examples from the sources can be found on the <a href="https://github.com/agraef/pure-lang/wiki/Examples">Examples</a> wiki page.)</p>
	
    <h4><a name="SUPPORTED-SYSTEMS" id="SUPPORTED-SYSTEMS"></a><a href="#SUPPORTED-SYSTEMS">SUPPORTED SYSTEMS</a></h4>
    <p>FreeBSD, GNU/Linux, Mac OS X and Windows are all known to work. Porting to other POSIX platforms should be a piece of cake. In principle Pure should be able to run on any system which is supported by <a href="http://llvm.org/">LLVM</a>.</p>
			
    <h4><a name="LICENSE" id="LICENSE"></a><a href="#LICENSE">LICENSE</a></h4>
    <p><a href="http://www.gnu.org/licenses/lgpl.html">GNU Lesser General Public License V3</a> or later. Please see the <a href="https://agraef.github.io/pure-docs/pure.html#copying">documentation</a> for details.</p>
			
    <h4><a name="DOCUMENTATION" id="DOCUMENTATION"></a><a href="#DOCUMENTATION">DOCUMENTATION</a></h4>

    <p>The complete <a href="https://agraef.github.io/pure-docs/">Pure Language and Library Documentation</a> is available online (also in <a href="https://agraef.github.io/pure-docs/puredoc.pdf">pdf</a> format, 900+ pages). As the amount of information in the online manuals can be overwhelming, you may first want to check out the <a href="https://agraef.github.io/pure-lang/quickref/pure-quickref.pdf">Pure Quick Reference</a> guide (pdf, 80+ pages). It includes examples, references, index and an appendix with the Pure grammar and a brief introduction to term rewriting. Also, the <a href="https://agraef.github.io/pure-docs/pure.html#examples">Examples</a> section of the Pure manual can be used as a tutorial introduction to the language.</p>

    <p>Additional pointers to documentation, related software, packages, ports and other resources can be found in the <a href="https://github.com/agraef/pure-lang/wiki/Home">Wiki</a>. Please also check the sidebar for a few selected wiki pages which should help you to get up and running quickly.</p>
    
    <h4><a name="COMMUNITY" id="COMMUNITY"></a><a href="#COMMUNITY">COMMUNITY</a></h4>

    <p>We have a mailing list at <a href="http://groups.google.com/group/pure-lang">Google Groups</a> and an IRC chat at <a href="irc://irc.freenode.net/pure-lang">Freenode</a> (archived <a href="https://yanovich.net/pure-lang/">here</a>; thanks yano!). Please join us there to discuss Pure and ask whatever questions you have. There's also a little <a href="http://pure-lang.blogspot.com/">weblog</a> for release announcements and other newsworthy information.</p>

    <h4><a name="AUTHOR" id="AUTHOR"></a><a href="#AUTHOR">AUTHOR</a></h4>

    <p><a href="https://plus.google.com/+AlbertGraef">Albert
    Gräf</a> &lt;aggraef at gmail.com&gt;, Dept. of Computer Music, Johannes
    Gutenberg University of Mainz (Germany) </p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dad died in 2022. Since 2023, things he selfhosted have slowly begun breaking (181 pts)]]></title>
            <link>https://old.reddit.com/r/selfhosted/comments/1b0rdft/dad_died_in_2022_since_2023_things_he_selfhosted/</link>
            <guid>39526863</guid>
            <pubDate>Tue, 27 Feb 2024 17:34:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/selfhosted/comments/1b0rdft/dad_died_in_2022_since_2023_things_he_selfhosted/">https://old.reddit.com/r/selfhosted/comments/1b0rdft/dad_died_in_2022_since_2023_things_he_selfhosted/</a>, See on <a href="https://news.ycombinator.com/item?id=39526863">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Throwaway for privacy reasons. As I said, things he maintained have been going down since at least mid-2023. His death was very sudden, so we didn't exactly have things set up for others to take over. Before anyone asks, I don't think he posted here. I don't see any of his usual handles, and he'd been running these things longer than Reddit has existed.</p>

<p>The main thing I'm hoping to recover is the webmail (I think) service most of my family used. That went down in September, and we've lost access to a number of other accounts because of that. There's also a Plex server and a handful of websites he hosted that would be good to get up and running. </p>

<p>I'm computer literate, but not tech-savvy enough to even really know where to start. I'm sorry if this is basic or not much to go off of, but I'm kind of overwhelmed. I just need some starting steps. Here's what little I do know:  </p>

<ul>
<li>Dad had two physical servers, Ranma and Akane. One is a mail server and the other a web server. We know the mail server (Ranma, I think) went down in September, but rebooting it wasn't enough.</li>
<li>Last we checked, the domain names for the websites are still safe. I'm guessing that just means the hosting server went down, which is probably the mentioned web server?</li>
<li>We do have a list of passwords. It's not very well organized, and I seem to remember we had trouble finding the admin password last time we tried to check on the servers, but in theory we're able to get in eventually.</li>
<li>The mail service seems to be IMAP.</li>
</ul>

<p>What I don't know:</p>

<ul>
<li><p>The operating system of either server. They're <em>probably</em> Macs, but more than that I don't know. They've been running for as long as I can remember, and I have no idea how much their hardware or software were updated over the years.
EDIT: Based on comments, probably Linux. Kinda just a command line terminal.</p></li>
<li><p>Assuming things don't fix themselves once we're into the servers, how do I get things back online? I don't know anything about hosting websites or mail services.</p></li>
<li><p>Any details about how anything was run. He didn't talk much about it, but then again, we never asked much about it.</p></li>
</ul>

<p>It's entirely possible that successfully logging in will be enough to get things running, but I haven't been able to test that far. The servers are physically located across town, and getting there without a car is kind of a multi-hour process. Dad was able to use remote logins for most issues, but I don't know how to do that.</p>

<p>Even if that did work, though, I'll need to know some basic troubleshooting steps if I want to keep them running long term, even if it's only in maintenance mode. Again, I'm sorry if this seems basic or unhelpful, I am just really out of my element here.</p>

<p>Edit: Hello! Thank you all for the comments and messages, I am slowly picking through everything. I figured I should add some more info based on what’s been mentioned.</p>

<p>I haven’t been able to check the hardware as of the evening after posting the thread due to a small miscommunication with the building owner, but we know the storage for the Plex server, at least, is on a Synology. Everything else, who knows. I’ll hopefully know more tomorrow afternoon.</p>

<p>Several people have urged me to clone or backup everything before I mess around. I agree! That’s a very good idea. How do I do that? I think we do have actually have a drive cloner, but it’s for one drive at a time and I think exclusively SSDs, which I’m not 100% sure the setup is using. Plus, I’m not sure I want to be removing drives before knowing the state of everything.</p>

<p>Lastly, it genuinely didn’t occur to me that people would offer to help locally. I don’t want to publicly give the specific city, but if any of you are or know someone in the Colorado Front Range, feel free to message me.</p>

<p>Thank you all for the comments. I’ll try and keep this post updated.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The /unblock API from Browserless: dodging bot detection as a service (133 pts)]]></title>
            <link>https://www.browserless.io/blog/2024/02/26/unblock-api/?apcid=00620de59ffc742367908900&amp;utm_campaign=unblock-api-announcement&amp;utm_content=unblock-api-announcement&amp;utm_medium=email&amp;utm_source=ortto</link>
            <guid>39526797</guid>
            <pubDate>Tue, 27 Feb 2024 17:30:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.browserless.io/blog/2024/02/26/unblock-api/?apcid=00620de59ffc742367908900&#x26;utm_campaign=unblock-api-announcement&#x26;utm_content=unblock-api-announcement&#x26;utm_medium=email&#x26;utm_source=ortto">https://www.browserless.io/blog/2024/02/26/unblock-api/?apcid=00620de59ffc742367908900&#x26;utm_campaign=unblock-api-announcement&#x26;utm_content=unblock-api-announcement&#x26;utm_medium=email&#x26;utm_source=ortto</a>, See on <a href="https://news.ycombinator.com/item?id=39526797">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>The cat-and-mouse between bots and WAFs requires increasingly sophisticates solutions.</p>



<p>Traditional methods often rely on “mocking” JavaScript APIs or setting Chrome flags, but these are becoming less reliable due to advances in protections from Cloudflare. Even plugins like<code> puppeteer-extra-plugin-stealth</code> fails to mask fundamental aspects of how Puppeteer effects a browser.</p>



<p>It’s why we’ve taken a new deeper approach to humanizing traffic.</p>



<h2>When was the last time you loaded a browser at 800×600 pixels?</h2>



<p>That’s what Puppeteer does. Every time you run a script with Puppeteer, it creates a 800x600px browsers.</p>



<p>Even if you use <code>Page.setViewport()</code>, it will only change resize the browser once it’s been instantiated at the default size. This behavior is just one of the many dead giveaways that the traffic is coming from a bot, not a human.</p>



<p>To hide fingerprints like these, our /unblock API runs modifies behavior at the CDP layer.</p>



<p>For this browser size example, the API creates the browser at a more typical 1920×1080 pixels. Only once that’s done is Puppeteer allowed to connect to it. By feeding Chrome modified instructions with the Chrome DevTools Protocol, we’re able to tidy away all the breadcrumbs like these which bot detectors pick up on.</p>



<h2>Launching Chrome like a human would</h2>



<p>The aim of this /unblock API is to launch Chrome with settings that are what you’d expect on a normal computer. Bot detectors can’t start filtering out traffic using a 1920×1080 browser, as that would start blocking authentic traffic. </p>



<p>While there will still be some amount of cat and mouse as we find increasingly subtle fingerprints, we expect that once changed that each one will permanently help with avoiding bot blockers.</p>



<h2>Ask and you shall receive (a site)</h2>



<p>Whether you’re looking to connect Puppeteer to an “unblocked” browser, or you’re simply after cookies, our JSON-based API is designed to cater to a wide range of needs. This flexibility is crucial for developers with different setups. </p>



<p>The experience using the Unblock API is as follows: </p>



<ol>
<li>You provide a URL of the website that’s difficult to access.</li>



<li>We’ll instantiate the browser leaving as few breadcrumbs as possible and bypass bot detection depending on mechanisms identified on the site.</li>



<li>Once the site is accessed, the API will return the data of that site.</li>



<li>Unless cookies content or screenshot are set to false in the POST’ed payload, it’ll generate those.</li>



<li>If browserWSEndpoint is set to true, it’ll generate a custom one-time link for puppeteer or any other CDP-like library to reconnect to.</li>



<li>It’ll return these values above in a JSON response.</li>
</ol>



<p>You shouldn’t need to setup stealth libraries, test chrome flags combinations, or implement bot-solving technologies. However, you might still want to use our usual<a href="https://www.browserless.io/docs/bypass-bot-detection" target="_blank" rel="noreferrer noopener"> bypassing bot detection mechanisms</a> such as residential proxies.</p>



<h2>Staying ahead of bot detection mechanisms</h2>



<p>Looking ahead, we commit to continuously improving. This means we’ll constantly update and fixes for new detection mechanisms. We’re always open to knowing what sites you’re having a problem bypassing because we can use those as samples of sites we need to analyze and setup bypassing mechanisms on.</p>



<p>Some sites enforce Captchas 100% even on our real human computers, which means we’re also working on supporting Captcha auto-solving soon.</p>



<h2>Try the /unblock API yourself</h2>



<p>To use the API you’ll need to use our new V2 service. That means the code becomes:</p>


<div><pre><code><span>curl --request POST \
</span><span>  --url </span><span>'https://production-sfo.browserless.io/unblock?timeout=300000&amp;token=YOUR-API-TOKEN'</span><span> \
</span><span>  --header </span><span>'content-type: application/json'</span><span> \
</span><span>  --data </span><span>'{
</span><span>  "url": "https://example.com",
</span><span>  "browserWSEndpoint":true
</span><span>}'
</span></code></pre></div>


<p>Or use production-lon.browserless.io for the London server.</p>



<p>The API is now publicly available for our users. Sign up for a 7-day trial of browserless to test it with your existing Puppeteer scripts.</p>



<p><a href="https://www.browserless.io/pricing/">7-Day Browserless Trial</a></p>



<p><em>Note: as this process is resource intensive, it will use extra Units, and is not available for our free tier users.</em></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The unwritten rules of negotiating with Meta (119 pts)]]></title>
            <link>https://interviewing.io/blog/how-to-negotiate-with-meta</link>
            <guid>39526316</guid>
            <pubDate>Tue, 27 Feb 2024 16:52:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://interviewing.io/blog/how-to-negotiate-with-meta">https://interviewing.io/blog/how-to-negotiate-with-meta</a>, See on <a href="https://news.ycombinator.com/item?id=39526316">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>At interviewing.io, one of the services we offer our users is salary negotiation. Even though I’m the founder, I still do many of the sessions myself because they give me an invaluable insider’s perspective on what’s actually going on in the engineering market, what different companies’ offers look like, how companies extend offers, what kinds of deadlines they give, and how much they go up in compensation, under what circumstances.</p>
<p>Access to this kind of data is great because it helps me make better business decisions. But sometimes I see questionable patterns of behavior among companies. Recently, I’ve observed a string of practices at Meta that I find reprehensible, and that’s what this post is about. I’ve seen the same practices with enough candidates, and across enough different titles and positions, that it’s become clear to me that they are not isolated incidents or a rogue recruiter’s doing but rather a consistent implementation of a deliberate strategy that comes from the top.</p>
<p>I’m writing about this for two reasons. First, if you’re negotiating with Meta, you need to know how they operate and understand the unwritten rules of the game. If you do not know the rules, you will fail — long before you even start negotiating.</p>
<p>Second, I’m hoping that someone at Meta sees this post and that maybe it’ll spark an internal discussion about changing the rules.</p>
<p><em>By the way, if I’m wrong, I will gladly issue a retraction and a public apology. Please contact me if you’re a recruiter at Meta and find something incorrect in this post. My email is <a href="mailto:aline@interviewing.io">aline@interviewing.io</a>.</em></p>
<p>Before we get into the details of Meta’s negotiation practices, if you’re about to interview there or are interviewing there already, please <a href="https://interviewing.io/guides/hiring-process/meta-facebook#meta">read our free, long-form guide to their interview process and questions</a>.</p>
<h2>Meta basically has a monopoly on FAANG hiring right now</h2>
<p>I mentioned above that we do salary negotiation, but our main business is mock interviews. We offer anonymous mock interviews in the style of a bunch of different companies (mostly FAANGs). This means we know how many people are practicing for interviews at Google vs. Meta vs. other FAANGs, and that lets us guess (pretty accurately) how much hiring is actually happening at these companies.</p>
<p>You can read in way more detail about how all the FAANGs are doing in our <a href="https://interviewing.io/blog/when-is-hiring-coming-back-predictions-for-2024">recent blog post where we made 2024 predictions</a> based on our proprietary data. But while I was writing that post, I noticed something odd. Meta was hiring way more engineers than any of the other FAANGs. In fact, Meta hiring is up more than 10X since January of last year.
<img src="https://strapi-iio.s3.us-west-2.amazonaws.com/Mock_interview_purchases_for_FAANG_companies_on_interviewing_io_as_a_proxy_for_hiring_volume_in_2023_c7dbe9a6d7.png" alt="Mock interview purchases for FAANG companies on interviewing.io (as a proxy for hiring volume) in 2023" width="600" height="500">
You can see that more recently Amazon has picked up a bit, but it’s very recent and not enough to drive major change in other companies’ behaviors (at least not yet). And, yes, Netflix is hiring too, but Meta’s eng team is more than 10X the size of Netflix’s, so in the absolute, Netflix’s hiring volume isn’t enough to balance Meta out. For all intents and purposes, Meta’s the only FAANG that’s really hiring at scale — and they’re currently getting away with treating candidates really poorly as a result.</p>
<h2>How Meta negotiates, given that they have a monopoly</h2>
<p>Here’s how Meta runs their hiring process. These practices have been consistent across every negotiation client we’ve had in the past 6 months or so.</p>
<p>Meta’s hiring is centralized, which means that you enter one big interview process that’s completely divorced from which team you might end up on and you interview with people whom you might never work with again. If you do well, there will be a team matching component after you pass the onsite but before you get an offer<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>. With that in mind, here’s how they run their process, once you get the green light.</p>
<ol>
<li><strong>Team matching</strong>. This can take days or weeks, depending on how many teams you speak to and how many conversations you have with the people on each team. You'll speak with hiring managers to gauge fit and chemistry, and if you’d like, you can also talk to peers. We've heard that sometimes you get the chance to talk to a handful of teams, and sometimes it's over 10. After your team-matching conversations, your recruiter will ask you to choose a team. In order to move forward, both you and the hiring manager have to opt in<sup><a href="#user-content-fn-2" id="user-content-fnref-2" data-footnote-ref="" aria-describedby="footnote-label">2</a></sup>.</li>
<li><strong>Likely down-level you</strong>. Sometime during team matching, you’ll probably find out that you’ve been down-leveled. Often, your recruiter will cite your performance in the system design portion (and sometimes the behavioral portion). According to a recent survey we did, something like 55% of Meta candidates get down-leveled (more likely for generalist SWE roles, less likely for more niche roles like ML).</li>
<li><strong>Make a lowball offer with just a few days to make a decision</strong>. Once you’re done with team matching, things get dicey. Your recruiter will make you a lowball offer that’s often $50k or more (!!) below the average TC on levels.fyi. Moreover, you usually just get a couple of days to make a decision. If you were down-leveled, your lowball offer may include a small signing bonus as a consolation prize.</li>
<li><strong>Refuse to negotiate unless you can show them other offers from comparable companies</strong>. Your recruiter will say something like, “If you’d like to increase your offer, I can take this to the compensation committee, but I need a compelling reason [i.e., another offer]."</li>
<li><strong>If you have other offers, they will apologize for the lowball offer, citing that it’s “automatic numbers from our computer” and raise the numbers by $100K or more (in first year’s TC)</strong>. If you do not, you will be stuck with a lowball offer, though you may be able to negotiate a small signing bonus if the offer didn’t come with one already.</li>
</ol>
<h2>How to negotiate with Meta</h2>
<p>Below are the steps for negotiating with Meta in a hard climate where they have a monopoly on hiring. We hope that most of these won’t be necessary in the future. They are:</p>
<ul>
<li>Don’t share anything with your recruiter</li>
<li>Make sure you have other offers</li>
<li>Slow-play team matching</li>
<li>Build rapport with every hiring manager you talk to</li>
<li>Actually negotiate (this is the easy part)</li>
</ul>
<h3>Don’t share anything with your recruiter</h3>
<p>We wrote a whole post about how to avoid sharing information with your recruiter and why this is so vital. If you share where you’re interviewing or how far along you are, or if you start negotiating prematurely, the strategies below won’t work.</p>
<p>Please <a href="https://interviewing.io/blog/sabotage-salary-negotiation-before-even-start">read our post on not shooting yourself in the foot during negotiations</a> before you continue!</p>
<h3>Make sure you have other offers</h3>
<p>As you may have guessed from reading the previous section, it’s critical to have other offers, and not just any offers but ones from top-tier companies who pay very competitively<sup><a href="#user-content-fn-3" id="user-content-fnref-3" data-footnote-ref="" aria-describedby="footnote-label">3</a></sup>.</p>
<p>We realize that saying “have other offers” doesn’t capture the blood, sweat, and tears that go into months of interview prep, applications, emails, recruiter calls, and interviews. We know it’s hard, but as you’ll see, it makes a huge difference in your compensation.</p>
<p>Getting those offers doesn’t start when you’ve received your Meta offer. It starts months before. Make sure that you get enough initial conversations with other FAANGs, FAANG-adjacent companies, and late-stage sexy startups to end up with at least one other offer, ideally at least two. Depending on your interview performance, this might be anywhere from 4 to 10 initial conversations.<sup><a href="#user-content-fn-4" id="user-content-fnref-4" data-footnote-ref="" aria-describedby="footnote-label">4</a></sup></p>
<h3>Slow-play team matching</h3>
<p>Having your offers come in around the same time is critical for <a href="https://interviewing.io/blog/negotiate-salary-recruiter">any negotiation</a>, but it’s especially important with Meta because they take such a hard line — without other offers, they will not meaningfully budge.</p>
<p>Obviously, you’ll want to start your conversations with other companies well in advance of your Meta interviews and do everything you can to make sure they all come in at the same time. However, even with your best efforts, it’s not guaranteed that your timing will match up. <strong>Here’s how to make sure that your offers come in at the same time: slow-play Meta’s team-matching process</strong>.</p>
<p>Team matching is actually the part of your Meta journey where you have the most leverage and power. Why leverage? At this point, they know they want you, but they can’t yet hold an offer deadline over you. We’ve already mentioned that once they make the offer, your recruiter is going to push very hard to have you accept, often giving you a deadline of something like two days. In your recruiter’s eyes, you’re a ticking time bomb, where for every day you don’t sign, the deal loses momentum, and your odds of signing drop off. Recruiters are also evaluated on how many candidates they close, so it’s in their interest to create a false sense of scarcity in order to rush you and to use high-pressure sales tactics to get you to seal the deal.</p>
<p>And what power do you have? It turns out you can really control how long team matching takes, within reason —  if you’ve gotten to team matching with, say, Meta, and you’re still wrapping phone screens with other companies, the best thing you can do is to slow-play your hiring manager conversations. Here’s how to do it.</p>
<p><strong>We’ve recently heard that Meta is now insisting that hiring manager conversations happen in serial, but even if Meta lets you talk to multiple hiring managers concurrently, try to serialize those conversations as much as possible</strong>. For instance, if you hear from your recruiter that you’re going to start team matching on a Monday, and they offer to set up some calls for Wednesday, ask to do the first call on a Friday and the next call the following Tuesday.
When we advise our users to do this, we often get pushback because they’re worried that slowing things down will make them look disinterested/not serious. We promise you that’s not the case. The biggest risk you run when you slow-play team matching scheduling like this is losing the chance to work on a specific team. If you find that your recruiter has proposed what seems like the perfect team for you, you can and should prioritize doing that call as soon as possible.</p>
<p><strong>In addition to serializing your hiring manager conversations, for each team, ask to talk to a few individual contributors on teams that you’re serious about</strong>. This isn’t just a stalling tactic. These are the people you’ll be working closely with every day, and they’re the ones doing the job you may have in the future. They’re also less likely to do hard sells, and if you ask thoughtful questions, you’ll learn a lot about what to expect. We’re always surprised by how few candidates ask to speak to their future peers, out of a mistaken concern that asking for too much will make them look disinterested or unengaged.
Just like with hiring manager calls, if you need to slow things down, we recommend scheduling calls with your peers a few days apart.</p>
<h3>Situations where slow-playing may bite you, and how to know the difference</h3>
<p>We have seen two instances when our advice about slow-playing could backfire. You probably remember when companies started to freeze hiring aggressively in mid-2022 — if you didn’t get matched before the ax came down, you were left out in the cold. Much more recently, we heard from some of our users that Meta put a pause on team matching for E4 roles (largely outside the Bay Area), and many candidates were stuck in a holding pattern (while Meta figured out headcount constraints, though it looks like it’s since been resolved, and picking back up in earnest. Slow-playing and then getting stuck is obviously an unfortunate situation, as is being on the wrong end of a hiring freeze, but these situations are rare, and in our humble opinion, not worth optimizing for — in most cases, you will not be dealing with an impending freeze or stalled matching. If you’re unsure about team supply or the state of hiring, you can do two things:</p>
<ol>
<li>Always ask your recruiter up front to share the number of teams that candidates have had the chance to talk to, on average, recently.</li>
<li>Look at our <a href="https://interviewingio-metabase.herokuapp.com/public/dashboard/11313b19-b9fd-4532-9a3f-d2aad7e027c3">real-time graph of FAANG hiring volume</a> (as opposed to the graph above, which is a monthly snapshot). In this real-time graph, you can see what portion of our mock interview volume is dedicated to practice in the style of Meta, Amazon, and Google. Historically, our purchasing behavior has lined up very well with what’s actually going on in the market, and the rate of change in this graph should give you an idea of whether Meta is slowing down. As you can see, there was a dip in February (and one in December, but that almost always happens because hiring slows down over the holidays). If you see dips like these, you’ll want to make sure that you do (1) and ask your recruiter about the situation inside. You may also choose not to slow-play for too long.</li>
</ol>
<h3>Build rapport with every hiring manager you talk to</h3>
<p>Outside of using the team-matching process to control your timeline, there is one other important tactical piece of advice: Do your best to build rapport with hiring managers.</p>
<p><strong>As we said above, recruiters are trying to close the deal. That’s their job. Hiring managers, on the other hand, are trying to lay the groundwork for a good working relationship with you</strong>. As a result, their interests are much more aligned with yours. Of course, they still want to close you, but it’s not worth it to them to employ high-pressure tactics, and it’s not something they’re trained in or comfortable with (in fact, many of them hated these tactics when they were on the other end of it while looking for work)<sup><a href="#user-content-fn-5" id="user-content-fnref-5" data-footnote-ref="" aria-describedby="footnote-label">5</a></sup>.</p>
<p>As such, hiring managers will generally be a lot more transparent with you about how much time you actually have to make a decision, and their answers will likely be very different from the ones you get from recruiters.</p>
<p>We’ve advised all of our Meta candidates to ask their prospective hiring managers about when they realistically have to make a decision by, and the differences between what the hiring manager has told them (“Take your time; you have a few weeks at least.”) and what their recruiter has told them (“We’re talking to a lot of candidates for that team. To ensure your spot, you should make a decision in the next few days.”) are stark.</p>
<p>There’s simply no downside to building rapport with hiring managers. At worst, you make a professional connection. At best, you get a head start on a great working relationship with your new boss.</p>
<p><strong>One practical note: Always ask your hiring manager for their email address in case you have more questions later</strong>. This way, if your recruiter starts telling you that you need to make a decision by Friday, you can ping your hiring manager, explain that you’re still thinking, and ask if it’s OK to take a few more days. Almost always they will say yes.</p>
<h3>Actually negotiate (this is the easy part)</h3>
<p>If you’ve done everything else in this post, the negotiation is the easy part. By now, you’ve wrapped up team matching, chosen a team, and have likely gotten an aggressive offer deadline.</p>
<p>You have also not shared any offer details till now. As we said at the beginning of this post, the success of your strategy hinges on the recruiter not being aware of the other companies you’re interviewing with. This will be the first time they find out about it, and that will put them on their proverbial back foot.</p>
<p><img src="https://64.media.tumblr.com/4e9087066942c43406fd478dcc34ba90/f2c80ff8d660cda3-62/s540x810/9f0a2c2a8f29b0782c59e0551444d001ec1a7a26.gif" width="600" height="500"></p><p>To respond to the offer, you can send an email<sup><a href="#user-content-fn-6" id="user-content-fnref-6" data-footnote-ref="" aria-describedby="footnote-label">6</a></sup> that looks something like the below. The details will differ, and how much you reveal about the other offers will vary, but here’s the general idea.</p>
<hr>
<p><em>Hey [Recruiter name],</em></p><p><em>
<p>Thank you so much for the offer, for working with me throughout this process, and for all your help with team matching.  I wanted to share some details with you. I currently have offers from {Company 1}, {Company 2}, and {Company 3}.</p>
<p>{Company 1} has offered me a significantly higher base salary of $220k. {Company 2} has a comparable base but has offered me significantly more equity: $500k. I know {Company 2} is a startup, but they’re late stage and handing out RSUs. Those RSUs are as valuable to me as public company equity.</p>
<p>Finally, {Company 3} has thrown in a meaningful signing bonus, and their performance bonus is actually at 25%, not 15%.</p>
<p>I’m very excited about the opportunity to work at Meta and about the team. {Insert some authentic reasons why you’re excited about the company, the team, your new boss, etc.} It’d be great to see a meaningful increase in compensation to make my decision easier.</p>
</em></p><p><em>Thank you, and I look forward to hearing from you.</em></p>
<hr>
<p>By the way, this isn’t the only approach you can take, and with other companies, you might have better luck with the <a href="https://interviewing.io/blog/negotiate-salary-recruiter">Reverse Used Car Salesman</a>. However, in our experience, if you don’t share offer details, your Meta recruiter will immediately ask you to share, so you might as well control the flow of information.</p>
<p>In the template above, I’ve assumed that not all of your offers are stronger than Meta’s across the board, which is why I’ve cherry-picked which pieces to share. Sometimes, if you’re lucky, you’ll have multiple offers that have a higher base, more equity, and a higher signing bonus. In that case, it’s less of a game of skill — just throw the numbers at them, and they’ll exceed the other offers without much prompting.</p>
<p>If you run this play, your recruiter will apologize for low-balling you, blaming the “computer” for giving them those numbers. Then, like clockwork, you will see a $50k to $150k jump in your offer (precisely how much depends on where your other offers are from and how strong they are).<sup><a href="#user-content-fn-7" id="user-content-fnref-7" data-footnote-ref="" aria-describedby="footnote-label">7</a></sup></p>
<p>Now, whether you take that offer is up to you.</p>
<p>Some closing thoughts. I’m a capitalist. Meta’s behavior here is aggressively capitalistic, if short-sighted – once other FAANGs start meaningfully hiring again, and Meta employees figure out that there’s a $150k comp differential between people with the same job title, they’re going to pay the piper and likely see a bunch of attrition. Ultimately, the market will correct these practices. However, I also believe that individuals have the right and duty to be as informed as possible and to wield whatever weapons in their arsenal to advocate for themselves, rather than waiting on the mercy of slow, indifferent market forces.</p>
<p>As such, we hope this post has given you some ammunition in your negotiations and helped reduce the information asymmetry between you and Meta, a huge, aggressive player with basically a monopoly on eng hiring at the moment. And we hope that if anyone from Meta is reading this, it’ll spark some internal conversations about what’s right. And if they don’t, other FAANGs’ recruiters will swoop in soon enough.</p>
<div><div><p>Want to know if you’re ready to interview at Meta? Do anonymous mock interviews with real Meta interviewers, and see exactly where you stack up.</p><a href="https://interviewing.io/signup"><p>See available times</p></a></div><p><img alt="" loading="lazy" width="573" height="400" decoding="async" data-nimg="1" srcset="https://interviewing.io/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcta.47351a0d.png&amp;w=640&amp;q=75 1x, https://interviewing.io/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcta.47351a0d.png&amp;w=1200&amp;q=75 2x" src="https://interviewing.io/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcta.47351a0d.png&amp;w=1200&amp;q=75"></p></div>
<h2>Footnotes</h2>
<section data-footnotes="">
<ol>
<li id="user-content-fn-1">
<p>How team matching works changed fairly recently. In the past, you’d get an offer before you matched with a team and do a 6-week “bootcamp” where you’d get up to speed on Meta’s tech stack, infrastructure, and systems, followed by a multi-week “speed dating”-esque team matching cycle. Bootcamp still exists, but now it's much shorter (2-4 weeks), and the focus is getting new engineers ramped up on generic tools. After that, new engineers continue to ramp up on their specific teams. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1">↩</a></p>
</li>
<li id="user-content-fn-2">
<p>We’ve recently heard that Meta may now be insisting that team matching conversations happen in serial, i.e., you can only do one at a time. However, this doesn’t meaningfully change our advice. <a href="#user-content-fnref-2" data-footnote-backref="" aria-label="Back to reference 2">↩</a></p>
</li>
<li id="user-content-fn-3">
<p>You might say, “Aline, why can’t I just make up offers?” We could never, in good conscience, advise that. It’s unethical, and though I’d argue that while Meta’s negotiation practices are also unethical, that’s not the way to win. Outside of ethical considerations, while the risks of getting caught are low, they’re not zero. Lying about offers, in our mind, is the last refuge of the incompetent. <a href="#user-content-fnref-3" data-footnote-backref="" aria-label="Back to reference 3">↩</a></p>
</li>
<li id="user-content-fn-4">
<p>The advice in this post is orthogonal from your career goals and what you want to work on. This blog post is about navigating an unfair system filled with opaque rules while maximizing your cash. It is not about self-actualization, though we’d argue that creating the most optionality for yourself helps with self-actualization as well. You can also talk to smaller companies and use your big-co offers as leverage to increase your startup equity. There’s nothing wrong with that, but more detail on optionality and self-actualization is outside the scope of this post. <a href="#user-content-fnref-4" data-footnote-backref="" aria-label="Back to reference 4">↩</a></p>
</li>
<li id="user-content-fn-5">
<p>Of course, some hiring managers will use high-pressure sales tactics or create false timelines to try to close you. But that’s the exception rather than the rule. You can decide if that’s something that you want to weigh when judging whether or not you want to work for them. <a href="#user-content-fnref-5" data-footnote-backref="" aria-label="Back to reference 5">↩</a></p>
</li>
<li id="user-content-fn-6">
<p>We strongly urge you to avoid negotiating over the phone and over text, whenever possible. Your recruiter does 5 of these calls a day. You might do one of these calls every few years. Do the hard part over email. It’s the best way to level the playing field. <a href="https://interviewing.io/blog/sabotage-salary-negotiation-before-even-start">Read this post</a> to learn how to avoid synchronous phone negotiations (just look for “phone”). <a href="#user-content-fnref-6" data-footnote-backref="" aria-label="Back to reference 6">↩</a></p>
</li>
<li id="user-content-fn-7">
<p>One advanced maneuver is to pit all your other companies against each other and raise up their initial offers BEFORE talking to Meta. We’ll likely write about how to run this play in a future post. <a href="#user-content-fnref-7" data-footnote-backref="" aria-label="Back to reference 7">↩</a></p>
</li>
</ol>
</section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How Netflix really uses Java (124 pts)]]></title>
            <link>https://www.infoq.com/presentations/netflix-java/</link>
            <guid>39526220</guid>
            <pubDate>Tue, 27 Feb 2024 16:44:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.infoq.com/presentations/netflix-java/">https://www.infoq.com/presentations/netflix-java/</a>, See on <a href="https://news.ycombinator.com/item?id=39526220">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="presentationNotes">
                                    <h2>Transcript</h2>

<p>Bakker: I'm going to talk about how Netflix is really using Java. You probably know that Netflix is really just about RxJava microservices, with Hystrix and Spring Cloud. Really, Chaos Monkeys are just running the show. I'm only half getting here because a few years ago, this was actually mostly true, maybe except the Chaos Monkeys. This stack was something that we were building on in the last several years. Things have changed. Quite often, I have conversations with people at conferences like this one, where they're like, yes, we were using the Netflix stack. Like, which stack exactly are you talking about? It's almost never the stack that we're actually using. These are just things that people associate with Netflix, because we've been talking about our technology for so many years, but things might have changed a little bit. We're going to bust some myths. We're going to take a look at what we're actually doing with Java. Things are ever-evolving. Things are literally just changing all the time.</p>

<h2>Background</h2>

<p>My name is Paul. I'm in the Java Platform at Netflix. Java Platform is responsible for the libraries, frameworks, and tooling that we built around Java, so that all our Java developers have a good time developing Java applications. I'm also a Java champion. I have been in the Java space for quite a long time. In the past, I wrote two books about Java modularity. I'm also one of the first authors of the DGS framework, that's the GraphQL framework we use for Java. We'll talk quite a bit about DGS, and how that all fits in the architecture.</p>

<h2>Evolving Architecture</h2>

<p>Before we start diving into JVMs and how we use Java, and the framework that we're using, we have to understand a little bit better how our architecture has been evolving. That explains why we did things in a certain way with Java several years ago, and we're doing things quite differently today. What you should understand about Java at Netflix is that we have a lot of Java. We are basically a Java shop, and every backend at Netflix is basically a Java app. We have many applications. At the size of Netflix, there's lots of internal applications to just keep track of things. We're also one of the largest film studios in the world. There's a lot of software being developed just to produce films, basically, again, all Java. Then of course, we have what we call the streaming app, which is basically the Netflix app, as you probably know it. That is what we're looking at here. This screen here is what we call the LOLOMO, the list of list of movies. That is just one example of an application that is backed by Java. You have to understand that pretty much everything that I'm talking about, that is true for basically every backend in Java. We use the same architecture now for pretty much all our different systems, both internal and consumer facing, and we use the same tech stack everywhere. Although I'm giving that example, because it's just a large example to play with, it's much more universal than that.</p>

<h2>The Groovy Era</h2>

<p>When I joined Netflix almost seven years ago, we were in what I call the Groovy era. What you probably know about Netflix, and this is still true, is that Netflix has a microservices ecosystem. Basically, every piece of functionality and every piece of data is owned by a specific microservice. There's many of them, literally thousands of them. On the slide here, I just made it up, because it makes sense in my head. It's a much-simplified version of what we actually have in production. Think about this LOLOMO screen, this list of list of movies that we just looked at, at a previous slide, you're probably familiar with that screen, that to render that screen, we would have to fetch data from many different microservices. Maybe there's like a top 10 service that we need, because we need a top 10 list of movies. That's backed by a specific service. Then there's an artwork service that gives us the images as we show in the LOLOMO, and these are all personalized as well. There's probably a movie metadata service, which gives us movie titles and actors and descriptions of movies. There's probably a LOLOMO service which is actually giving us what lists to actually render, which again is personalized. I say that we have maybe 10 services to call out to. It will be usually inefficient if your device, let's say, your TV, or your iOS device will just do 10 network calls to these different microservices. It will just not scale at all. You would have a very bad customer experience. It would feel like using the Disney app. It's just not ideal. Instead, we need a single front door for the API where your device is calling out to. From there, we do a fanout to all the different microservices, because now we are in our network, we are on a very fast network. Now we can do that fanout without performance implications. We have another problem to solve, because all these different devices, in subtle ways, they're all a little bit different. We try to make the UI look and behave similar on every different device. All these different devices, like a TV versus an iOS device have very different limitations when it comes to memory, network bandwidth. They actually load data in subtly different ways.</p>

<p>Think about, how would you create an API that would work for all these different devices? Let's say you create a REST API. We're probably going to get either too little or too much data. If we create one REST API to rule them all, it's going to be a bad experience for all these different devices, because we always waste some data, or we have to do multiple network calls, which is also bad. To fix that problem, what we did is we used what we call a backend for frontend pattern. Basically, every frontend, every UI gets its own mini backend. That mini backend is then responsible for doing the fanout and get the data that that UI exactly needs at that specific point. They used to be backed by a Groovy script. That mini backend was basically a Groovy script for a specific screen on a specific device, or actually a version of a specific device. These scripts would be written by UI developers, because they are the only ones who actually know what data exactly they need to render a specific screen. This Groovy script would just live in an API server, which is a giant Java app, basically. It would do a fanout to all these different microservices by just calling Java client libraries. These client libraries are just basically wrappers for either a gRPC service, or a REST client.</p>

<p>Now, here we started seeing an interesting problem, because, how do you take care of such a fanout in Java? That's actually really not trivial. Because if you will do this the traditional way, you create a bunch of threads, and you start to manage that fanout with just minimal thread management, that gets very hairy very quickly, because it's not just managing a bunch of threads, it is also taking care of fault tolerance. What if one of those services are not responding quickly enough? What if it is just failing? Now we have to clean up threads and make sure that everything comes together nicely again. Again, not trivial at all. This is where RxJava and reactive programming really came in. Because reactive programming gives you a much better way to do such fanouts. It will take care of all the thread management and stuff like that you need to do. Exactly because of this fanout behavior, that is why we went so deep into the reactive programming space, and we were partly responsible for making RxJava a big thing many years ago. On top of RxJava, we created Hystrix, which is a fault tolerant library, which takes care of failover and bulkheading, and all these things. This made a lot of sense seven years ago when I joined. This was the big architecture that was serving most traffic. Actually, it is still a big part of our architecture, because depending on what device you're using, if it's a slightly older device, you probably still get served by this API, because we don't have just the one architecture we have many architectures, because it is nicer that way.</p>

<h2>Limitations</h2>

<p>There are some limitations, although this obviously works really well, because we have been able to grow our member base based on this architecture primarily. One downside is that there's a script for each endpoint. Because, again, we need an API for each of these different UIs. There are just a lot of scripts to maintain and manage. Another problem is that because the UI developers have to create all the mini backends because they are the ones who know what data they need, they have to write those. Now they are in the Groovy Java space and using RxJava. Although they're very capable of doing so, it's probably not a primary language that they are using on a daily basis. The main problem is really that reactive is just really hard. Speaking for myself, I've been doing reactive programming for at least 10 years. I used to be extremely excited about it, and tell everyone about how great it all is. It is actually hard, because even if with that experience, look at a non-trivial piece of reactive code, I have no clue what's going on. It takes me quite a bit of time to actually wrap my head around, ok, this is actually what's happening. These are the operations that are supposed to happen. This is the fallback behavior. It's hard.</p>

<h2>GraphQL Federation</h2>

<p>Slowly, we have been migrating to a completely new architecture, and that is, we're putting things to a different perspective. That's all based on GraphQL Federation. Comparing GraphQL to REST, one very important aspect of GraphQL is that with GraphQL, you always have a schema. In your schema, you put all your operations, so your queries and your mutations, and you define them, and you tell it exactly which fields are available from the types that you're returning from your queries. Here we have a shows query, which returns a show type, and a show as a title, and it has reviews. Reviews again is another type that we define. Then we can send a query to our API, which is on the right-hand side of the slide. What we have to do there, and this is, again, really important, we have to be explicit about our field selection. We can't just ask for shows and get old data from shows. Now we have to say specifically that you want to get a title and the star score on reviews on a show. If we're not asking for a field, we're not getting a field. It is super important because again, compared with REST, very basically, you get whatever the REST service decides to send you. You're just getting the data that you're explicitly asking for. It's more work if you specify your query, but it solves the whole problem of over-fetching, where you get much more data than you actually need. This makes it much easier to create one API that serves all the different UIs. Typically, when you send a GraphQL query, you will just get the result back encoded as JSON.</p>

<p>We're not just doing GraphQL, we're actually doing GraphQL Federation to fit it back into our microservices architecture. In this picture, we still have our microservices, but now we call them DGSs. They're just a term that we at Netflix came up with. It's a domain graph service. Basically, it's just a GraphQL service. There's really nothing special about it, but we call them DGSs. A DGS is just a Java microservice, but it has a GraphQL endpoint. It has a GraphQL API. That also means it has a schema, because we said that for GraphQL, you always have a schema. The interesting thing is that we have, of course, many different DGSs, many different microservices. From the perspective of a device, so from the perspective of your TV, for example, there's just one big GraphQL schema. The GraphQL schema contains all the possible data that we have to render, let's say a LOLOMO. Your device doesn't care that there might be a whole bunch of different microservices in the backend, and that these different microservices might provide part of that schema. On the other side of the story on the microservices sides, in this example, our LOLOMO DGS is defining a type show, with just a title. The images DGS can extend that type show and add an artwork URL to it. These two different DGSs don't know anything about each other than the fact that there is a show type. It can both contribute parts of that schema, even on the same types. All they need to do is publish their schema to the federated gateway. Now the federated gateway knows how to talk to a DGS because they all have a /GraphQL endpoint. That's it. It knows these different parts of the schema, so if a query comes in where we ask for both title and artwork URL, it knows that it has to call out to these different DGSs, and fetch the data that it needs. On a very high level, not that different from what you previously had, but there's a lot of differences in the details.</p>

<p>I'll also change our story here. First of all, we don't have any API duplication anymore. We don't need a backend for frontend anymore because GraphQL as an API is flexible enough, because of field selection that we don't really need to create those device specific APIs anymore. It also means we don't have server-side development for UI engineers anymore. That's great. We do get a schema to collaborate on. That's a big deal, because now we have closed the gap between UI developers and backend engineers, because now they can collaborate on a schema and figure out, ok, what data do we need in what format? Very importantly, we don't have any client libraries in Java anymore, because the federated gateway just knows how to talk to a generic GraphQL service. It doesn't need specific code to call out to the specific API. It's all just GraphQL. All it needs to know, how to talk to a GraphQL service. That's all. It's all based on the GraphQL specification. We don't need specific code to call to a specific microservice anymore.</p>

<h2>What Does that Mean for Our Java Stack?</h2>

<p>Now we get into, how does that change our Java stack? There's really no place anymore where we need Rx, or Hystrix, or such things, because previously, we needed this because we needed that specific code to call out, ok, I want to call this microservice and then this microservice, and at the same time, this other microservice. We needed an API for that. We don't need it anymore, because that's now taken care of by the GraphQL Federation specification. That's not completely true, because the federated gateway itself is actually still using a web client to call the different DGSs, and that is still reactive. However, it is not using any specific code for this microservice anymore. It's actually a very straightforward piece of web client code where it knows, ok, I have to call these three services, just go do it. It's all GraphQL, so it's very simple. All the DGSs and the other microservices in the backend, they're all just normal Java apps. There's not really anything specific about them. They don't need to do any reactive style of programming pretty much anywhere.</p>

<h2>The Micro in Microservices</h2>

<p>Before we dive deep into the rest of our Java stack, I want to speak a little bit about the micro in microservices, because it's another thing that people seem to be confused about how it actually works in practice. It is true that a microservice owns a specific functionality or dataset. More importantly that such microservices are owned by a single team. That is a really important part about microservices. It is all even more true with this GraphQL federated architecture, because it's now even easier to just split things out in different microservices and make it all work very nicely. However, don't be fooled by the size of those microservices, because a lot of those so-called microservices at Netflix are a lot larger, just looking at the code base, than the big monoliths that I've worked at, at many other companies. Some of these systems are really big. There's a lot of code there. Of course, when they get deployed, they might be deployed on clusters of thousands of AWS instances. There's really nothing small about them. That also answers the question, should I do microservices? It depends on your team size. Do you have like the one team that takes care of everything, and it's just a small team? If you would add microservices there, you're just adding complexity at that point for no good reason. If you want to split your team into smaller teams, basically, and just because of team size, then it also makes sense to split up your larger system into smaller pieces so that each team can own and operate one or more of those services.</p>

<h2>Java at Netflix</h2>

<p>Time to actually really get into the Java side of things. We now know, on a higher level, how and where we're using Java. Now we talk about how it actually looks like. We are now mostly on Java 17. It is about time. We are already also actively testing and rolling out with Java 21. Java 21 just came out officially. We're just using a regular Azul Zulu JVM. It's just an OpenJDK build. We are not building our own JVM, we don't have any plans to build our own JVM. Although there was a very interesting Reddit thread claiming that we do. We really don't, and have no interest in doing so. OpenJDK is really great. We have about 2800 Java applications. These are mostly all microservices of a variety of sizes. Then about 1500 internal libraries. Some of them are actual libraries, and many of them are just client libraries, which is basically just sitting in front of a gRPC or REST service. For our build system, we use Gradle, and on top of Gradle we have Nebula, that's a set of open sourced Gradle plugins. The most important aspect of Nebula, and I highly recommend looking into this, is, first in resolution of libraries. As you know, Java has a flat classpath. You can only have the one version of the library at a given time, if you have more than one version, interesting things happen. To prevent these interesting things from happening, you really want to just pick one, basically, and Nebula takes care of that. The next thing that Nebula does is version locking. Basically, you will get reproducible builds that you always build with the same set of versions of libraries until you explicitly upgrade. That makes it all very reproducible. We're pretty much exclusively using IntelliJ as our IDE. In the last few years, we have also invested a lot of effort in actually developing IntelliJ plugins, to help developers doing the right thing.</p>

<h2>The Java 17 Upgrade</h2>

<p>We are mostly on Java 17. That is actually a big deal, because this is embarrassing, but at the beginning of the year, we were mostly on Java 8. Java 8 is old. Why were we still on Java 8? Because we had Java 11, and then Java 17 available for a very long time already. Somehow, we just didn't move. One of the reasons is that until about a year ago, about half of our microservices, especially the bigger ones, were still on our old application stack. It was not Spring. It was a homegrown thing based on Guice, and a lot of old Java EE APIs, lots of old libraries that were no longer maintained. At the very beginning when we started upgrading to Java 11 initially, a lot of these older libraries were just not compatible. Then developers just got the impression that this upgrade is hard, and it breaks things, and I should probably just not do it. On the other hand, there was also very limited perceived benefits for developers, because if you compare Java 8 to Java 17, there's definitely some nice language features. Text blocks alone are enough reason for me to upgrade, but it's not that big of a deal. The differences between 8 and 17 is nice, but it's not like changing your life that much. There was more excitement about moving to Kotlin than we did in just upgrading to JDK.</p>

<p>When we finally did start pushing on updating to Java 17, we saw something really interesting. We saw about 20% better CPU usage on 17 versus Java 8, without any code changes. It was all just because of improvements in G1, the garbage collector that we are mostly using. Twenty-percent better CPU is a big deal at the scale that we're running. That's a lot of money, potentially. Speaking about G1, G1 is the garbage collector that we use for most of our workloads, at the moment. We've tested with all the different garbage collectors available. G1 is generally where we got the best balance of tradeoffs. There are some exceptions, for example, Zuul, which is our proxy. It runs on Shenandoah, that's the low pause time garbage collector. For most workloads, Shenandoah doesn't work as well as G1 does. Although G1 isn't that exciting anymore, it is still just really good.</p>

<h2>Java 21+</h2>

<p>Now that we have finally made a big push to Java 17, and we've got most services just upgraded, we also have Java 21 available. We've been testing with that for quite a few months already. Now things really get exciting. The first exciting thing is that if you're on Java 17, upgrading to Java 21 is almost a no-op. It's just super easy. You don't have the problems that we had from Java 8 to newer versions. There's also just a lot more interesting features. The first obvious one that I'm super excited about is virtual threads. This is just copy-paste, it's from the JEP, the specification from Java 21 of virtual threads. It's supposed to enable server applications written in a simple thread-per-request style to scale at near optimal hardware utilization. It sounds pretty good. This thread-per-request style, if you're using something that's based on servlets, so Spring Web MVC, or any other framework based on servlets, thread-per-request is basically what you get. A request comes in, Tomcat or whatever server you're using gives it a thread. That thread is basically where all the work happens, or starts happening for the specific request, and stays through that request until the request is done. That is a very simple style and easy to understand style of programming, and all the frameworks are based on that. It has some scalability limitations, because you can only have so many threads effectively running in a system. If you have a lot of requests coming in, which we obviously have, then the number of threads is just a limiting factor in how you can scale your systems. Changing that model is really important. The alternative to that is, of course, doing reactive again, so do something like WebFlux. That also gets you in reactive programming, again, with all the complexities that we already talked about.</p>

<p>Now, I think that virtual threads is probably the most exciting Java feature since probably lambdas. I think that down the line, it is really going to change the way we write and scale our Java code. I think that, in the end, it is probably going to further reduce reactive code, because there's just not really any need for it anymore. It just takes away that complexity. We have already been running virtual threads in production for the last month or so, experimenting with it a little bit. I'll get back to that in more detail. Then the other interesting feature in Java 21 is the new garbage collector or the updated garbage collector, because ZGZ is not new. That was already available in previous versions. They now made it generational, and that makes it give more benefits over G1 as a garbage collector has. That will make ZGC a better fit for a broader variety of workloads. It's still focused on low pause times, but it will just work in a broader variety of use cases. It's a little bit early to tell because we haven't done enough testing with this yet, but we are expecting that ZGC is now going to be a really good performance upgrade, basically, for a lot of our workloads and a lot of our services. Again, these things are a really big deal, where we could save a lot of money on resources. Shenandoah is also now generational, but that is still in preview. Again, we're going to just run with that and see what happens. Garbage collection is really just too complex of a topic to just know that, drop in this garbage collector with this flex, and it's all going to be magic and super-fast. Just doesn't work that way. It's a business where you just try things out and then you tweak it a bit, and you try it again, and then you find the optimal state. We're not quite there yet. We are expecting to see some very interesting things there. Then, finally, in Java 21, you just also have a lot of nice language features. We get this concept of data-oriented programming now in the Java language. It is really nice. It's the combination of records and pattern matching and things like that. Java is pretty nice right now.</p>

<h2>Virtual Threads</h2>

<p>Back to virtual threads. Although I said that this is a big deal, and is probably going to change the way we write our code and scale our code, it is also not a free lunch. It's not just that you enable Java 21 on your instances, and now by the magic of virtual threads, everything runs faster. It doesn't work that way. First of all, we have to change our framework library, and to some extent application code to actually start leveraging virtual threads, so step one. There are a few obvious places where we can do that and already started experimenting, so the Tomcat connection pool. Again, these are the pool of threads where it gives threads-per-request. That seems a fairly obvious place where we can just use virtual threads instead. Instead of using a thread pool, you use virtual threads. Before you enable that, you are already running some big services in production with virtual threads enabled. It doesn't automatically make things a lot faster, because you need to do other things as well to really leverage it. It also doesn't make things worse. If you can just safely enable this basically, sometimes get some benefits out of it, sometimes it doesn't really change it because it wasn't a limiting factor. That's something that you should probably start with. Async task execution in Spring that is, again, just a thread pool, and very often you get blocking code for other network calls there anyway. It seems to be a good candidate for virtual threads, so we enabled it there. Then a really big one that we haven't really gotten into yet, but I expect that will be game changing is how we do GraphQL query execution. Potentially with GraphQL, every field can be fetched in parallel. It makes a lot of sense that we would actually do that on virtual threads because, again, this is often work in code where you do more network calls and things like that. Virtual threads just make a lot of sense there, but we have to implement this and test it out, and it'll probably take a little bit of time before we get the optimal model there.</p>

<p>Then we have some other places that seemed obvious. For example, we have a thread worker pool for gRPC clients where the gRPC calls to outgoing services happen. It seemed like such an obvious place like, let's drop in virtual threads there. Then we saw that we actually decreased performance by a few percent. It turns out that these gRPC client worker pools are very CPU intensive. If you then drop in virtual threads, you actually make things worse. That's not a bad thing, necessarily. This is just something that we had to learn. It does show that this is not a free lunch. We actually have to figure out, where does it make sense, where does it not make sense, and implement virtual threads at the right points, basically. The good news is this is mostly all framework work at this point. We can do it as a platform team, and we can do it in open source libraries that we're using. Then our developers will just get faster apps, basically. It's good. In Spring 6.1, or Spring Boot 3.2, there's a lot of work being done to leverage virtual threads out of the box, that will come out next month. We will probably adopt that somewhere early next year. Then there's a really interesting discussion going on on GitHub, in GraphQL Java, about changing the GraphQL query execution, or potentially even rewriting it to fully leverage virtual threads. That is not figured out yet. It's a discussion going on. If you're in that space, that's definitely something to contribute to, I think. Then for the user code, because all this other stuff is mostly framework code, for user code, I think structured concurrency is the other place that we're going to see a lot of replacement of reactive code. Because structured concurrency is finally giving us the API to deal with things like fanouts, and then bringing everything together again. Structured concurrency is still in preview in Java 21. It seems very close to final, so I think it's at least safe to start experimenting with this and try things out. Then a little bit further down the line, we also get scoped values, which is another new specification coming out related to virtual threads. That is going to give us a way to basically get rid of ThreadLocal. This is again mostly framework related work. It's just a much nicer and more efficient way of something similar to ThreadLocal.</p>

<h2>Spring Boot Netflix</h2>

<p>I've already mentioned a little bit that we use Spring Boot. Since about a year or so we have completely standardized on Spring Boot. Up until a year ago, about 50% of our applications were still on our own homegrown, not maintained at all, Java stack based on Guice, and a bunch of very outdated Java EE libraries. We didn't really make a good push in getting everything on Spring Boot. All the new applications were based on Spring Boot already. That became very messy, especially because that old homegrown framework just wasn't maintained very well. We made a really big effort to just get all the services migrated to Spring Boot. That migration was mostly just a lot of blood, sweat, and tears of a lot of teams. It's just not easy to go from one programming model to another one. As platform teams, we did provide a lot of tooling, for example, IntelliJ plugins to take care of, where possible, the code migrations and configuration migrations and things like that. Still, it was just a lot of work. Pretty painful. Now that we are on Spring Boot, though, we have like the one framework that everyone is using that makes things a lot nicer for everyone. We are trying to mostly just use the latest version of OSS Spring Boot. We're going to be using 3.1, and try to stay as close as possible to the open source community because that's where we get the most benefit. On top of that, we need a lot of integration with our Netflix ecosystem and the infrastructure that we have. That is what we call Spring Boot Netflix, and is basically just a whole set of modules which we build on top of Spring Boot. That's basically just developed in the same way as Spring Boot itself is built, so lots of auto-configurations. That's where we add things like gRPC client and server support that's very integrated with our SSO stack, for AuthZ and AuthN. You get observability, so tracing, metrics, and distributed logging. We have a whole bunch of HTTP clients that take care of mTLS and again observability and integration with the security stack. We deploy all these applications with embedded Tomcat, which is pretty standard for a Spring Boot application.</p>

<p>To give an idea of the features, how that looks like. We have, for example, a gRPC Spring client. This looks very Spring-like, but it is something that we added. Basically, this is referencing a property file, which describes the gRPC service, it tells where the service lives. It configures failover behavior. That way, you can just use a Java API with an extra annotation to call another gRPC service. With that, you also get things like observability completely for free. For any request, either gRPC or HTTP, you get observability for free with tracing, and metrics, and all these things available. Another example is maybe integrate with Spring security, so we can get our SSO color. You get the user basically, that's called your service, even if there were many services in between in a cold chain. As I said, we integrated with Spring Security to also do role-based authentication based on our own authentication models.</p>

<h2>Why Spring Boot?</h2>

<p>You might be wondering, why are we using Spring Boot, why not some other more fancy framework? Because, of course, there's been a lot of innovation in the Java space in the last few years with other frameworks available. Spring Boot is really the most popular Java framework, that doesn't necessarily make it better, but it does give a lot of leverage when it comes to using the open source community, which is really big, of course, for Spring Boot, and accessing documentation, training, and all these things. More importantly, I think, is just looking at the Spring framework, it has been just so well maintained over the years. I think I started using the Spring framework 15 years ago. It is quite amazing, actually, that that framework has been so stable and so well-evolved, basically, over time, because it's not the same thing as it was 15 years ago, but a lot of the concepts are still there. It gives us a lot of trust, basically in the Spring team that also in the future, this will be a very good place to be basically.</p>

<h2>The Road to Spring Boot 3</h2>

<p>Almost a year ago, Spring Boot 3 came out, and that was a big deal, because Spring Boot 3 really just involves the Java ecosystem, I think, because the Java ecosystem was a little bit stuck in two different ways. The first reason is that if you look at the open source ecosystem in Java, it was stuck on Java 8, because a lot of companies were stuck on Java 8, and no one wanted to be the first one who would break that basically. Companies didn't upgrade because everything just worked fine on Java 8 anyway. Now, finally, the Spring team has said, we are done with Java 8, Java 17 is your new baseline. Now we force the whole community basically, to say, ok, fine, we'll do Java 17, and everything can start moving again. Now we can start leveraging those new language features. It also makes it possible that although it's just baseline on Java 17, we can actually also start using Java 21 with virtual threads under the hood. That's exactly what they're doing. The second part is the whole mess around Javax to Jakarta, thanks to Oracle. This is just a simple namespace change, but it is extremely complex for a library ecosystem, because a library can either use Javax or Jakarta, and that makes it either compatible with one but not the other. That's super painful now, because the Spring team is now saying, ok, if you're just doing Jakarta, now the whole ecosystem can start moving because it had such a big impact. We finally get past that point that they were stuck on. It is a big change to get on these new things still, so moving to Spring Boot 3 isn't fulfilled, and we've done a lot of tooling work to make that happen. Probably the most interesting one there is we open sourced a Gradle plugin that does bytecode transformation at artifact resolution time. When you download an artifact, a JAR file, it will do bytecode translation if you're on Spring Boot 3 from Javax to Jakarta, so it basically just fixes that whole namespace problem on the fly, and you don't have to change your library. That gets us unstuck.</p>

<h2>DGS Framework</h2>

<p>Then I talked quite a bit about DGS. DGS is not some concept, GraphQL Federation is the concept. The DGS framework is just a framework that that we use to build our GraphQL services in Java. About three or four years ago, when we started the journey on to GraphQL and GraphQL Federation, there really wasn't any good Java framework out there, that was mature enough for us to use it at our scale. There was GraphQL Java, which is a lower level GraphQL library. That library is great, and we are building on top of it. This is completely crucial for us, but it's too low level to use directly in an application, at least in my opinion. With v1 that is a GraphQL framework for Spring Boot, and basically giving a programming model based on annotation as you are used to in Spring Boot. We needed things like code generation for schema types, and support for federation and all these things. That's exactly what you're getting with the DGS framework. About, I think it's almost three years ago, we decided to open source the DGS framework. It's on GitHub. There's a really large community. There's lots of companies using it now. It's also exactly the version that we were using at Netflix, so we're not using a fork or anything like that. It's really evolved really nicely over the last few years.</p>

<p>You might be wondering if you are actually in the GraphQL and Spring space, you probably have seen that in Spring Boot 3, the Spring team also added GraphQL support, which they called Spring GraphQL. That was not ideal for the larger community, because now the community would have to choose between, ok, do I bet on the DGS framework, or do I go with Spring GraphQL? Both seem interesting, both seem great. Both have an interesting feature set, but a different feature set. What do I bet on? I could go and sell you the DGS framework, how that's better and better evolves, and faster, and all these things which are right now probably true, because we've been around for a little bit longer. That's really not the point, the point is that you shouldn't have to choose. In the last few months, we have been working with the Spring team to get full integration between those two frameworks. What you basically get with that is that you can combine the DGS and Spring GraphQL programming models and its features in the same app, and it will just happily live together. That's possible because we're both using GraphQL Java as the low-level library. That's how it all fits together. We just integrated the framework really deeply. We're still finishing that, and that is probably going to be released early 2024. At least that gives you that idea. It doesn't really matter if you would pick the DGS framework today. It doesn't get you stuck in there and not be able to leverage features coming from Spring team, because very soon you will just be able to combine both very nicely.</p>

<h2>Questions and Answers</h2>

<p>Participant 1: Are you guys still using Zuul?</p>

<p>Bakker: We are, yes. Zuul is sitting in front of literally every request. Zuul is just a proxy. It's doing a lot of traffic control, basically. It's not the API server that we talked about earlier. Zuul sits in front of either the DGS federated architecture or like the old architecture.</p>

<p>Participant 2: You talked about the upgrade for Java having a limited perceived value there. I think that's interesting. I think a lot of enterprises tend to have this mindset of if it isn't broke, don't fix it, [inaudible 00:44:02]. What did you do to change that perception, or was it just the Spring upgrade that kicked your guys about to do the upgrade?</p>

<p>Bakker: No, actually, the main story was the performance benefit. The fact that we could say that, you get 20% better performance. It depends a little bit on the service, how that number actually looks like and what it actually means. The number is real. The fact that you could say that, that made a lot of service owners more interested in it, but it also gave leadership higher up just to push like, this is going to save money, go do it. That was actually the most helpful thing. The Spring Boot upgrade came later, and also forces the issue, but it was after the fact.</p>

<p>Participant 3: A lot of advancements to OpenJDK, so from 8 to 17, did it directly go from 8 to 17?</p>

<p>Bakker: We had services running on Java 11 because the plan was 8, 11, 17. Java 11, we had services running there, it never really took off because there just wasn't enough benefit. We mostly went from 8 to 17.</p>

<p>Participant 3: Then that's one of the things depending on the collectors as he was talking about, there was some impact with respect to stop-the-world pauses and some background collections that's happening with Shenandoah and ZGC. There's a tradeoff, but a lot of improvements went into reducing the memory sets and everything like that.</p>

<p>Participant 4: You mentioned that 20% was what you needed, but how did you even secure the time to actually experiment with that? How did you convince stakeholders to say, we're going to spend some time doing an upgrade on some services, and then we'll demonstrate the values with that?</p>

<p>Bakker: There is the benefit of having a platform team as we have. If I look at my own time, I could do whatever I want. If I think there is some interesting failure to be had in experimenting with garbage collection, I'm actually not mostly doing performance work, there's actually other folks who are much better at that. It's just an example. If there is potential failure in there, if you can get a time to just experiment with it and play with it, basically, because our time of like one or two people is like drops in the water.</p>

<p>Participant 5: Did you see any difference in the memory footprint between virtual threads versus a traditional one for the same number of request-responses. The second is regarding the GraphQL versus traditional SOAP, because SOAP was superseded by REST back in the days when I was thinking that was very precious, and your network was very important if you don't have a large number of data going through easily. Now that data is cheap, so it has the disadvantage of the schema going between the client and the server. I see that GraphQL also had the same problem now that we have the other query and the schema, going between the client and the server. How do you see the REST, SOAP, and GraphQL in that conjecture?</p>

<p>Bakker: I think SOAP had, conceptually, a few things. For example, the fact that there is a schema, that was a good thing. It was so incredibly hard to use and complex, that the overhead of doing the right things was just too much. Then REST, at least the way everyone is using REST, went the other extreme like no schema, no nothing at all, nothing is defined. You just throw in some data and we're all good. I think GraphQL sits in the middle there. It doesn't have a lot of overhead for developers to implement the schema. It's very easy. It's much easier than SOAP was, just from using it. You do get a schema and that takes away a lot of the downsides of just having REST in the schema. It feels like it has found the sweet spot for APIs. Probably if I'm back here 10 years from now, I will be like, "GraphQL, a terrible idea. How did we ever get to that?" You know how that goes. Right now, it feels like a sweet spot.</p>

<p>There is a difference, that is why we have to be very careful about ending virtual threads where we replace traditional thread pools. Depending on if these thread pools are very CPU intensive or not, it does or does not make a lot of sense. The memory footprint doesn't seem to be a big factor. We haven't seen any significant bumps there at all. Again, it's all very early days, and we're just experimenting with everything. We haven't quite figured it out yet. It seems to be very straightforward from memory.</p>

<p>Participant 6: Then I was just wondering about your Kotlin usage percentage, and what that is looking like?</p>

<p>Bakker: It is fairly low. For a while we had a bunch of teams, including my own team, very excited about Kotlin. The DGS framework itself is written in Kotlin, although it's targeting mostly Java apps. That's my choice. We have microservices written in Kotlin, as well. The only downside that we see with Kotlin is we invest more in developer tooling, so IntelliJ plugins and automated tooling based on Gradle to help with these version upgrades with Spring, and all these things. That story is much harder for a platform team if you have to deal with multiple languages. Because either for an IntelliJ plugin, even if it's both from JetBrains, you need to write your inspections in IntelliJ twice if you want to use both Java and Kotlin. It's just a lot more work. It's just a lot easier for platform teams if everyone is just happily using Java. That doesn't make Kotlin bad, though. We have only seen good things about Kotlin and it works just pretty well. It's a great language.</p>




<p><big><strong>See more <a href="https://www.infoq.com/transcripts/presentations/">presentations with transcripts</a></strong></big></p>



                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Airfoil (1789 pts)]]></title>
            <link>https://ciechanow.ski/airfoil/</link>
            <guid>39526057</guid>
            <pubDate>Tue, 27 Feb 2024 16:32:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ciechanow.ski/airfoil/">https://ciechanow.ski/airfoil/</a>, See on <a href="https://news.ycombinator.com/item?id=39526057">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The dream of soaring in the sky like a bird has captivated the human mind for <a href="https://en.wikipedia.org/wiki/Icarus">ages</a>. Although many failed, some eventually <a href="https://en.wikipedia.org/wiki/Wright_Flyer">succeeded</a> in achieving that goal. These days we take air transportation for granted, but the physics of flight can still be puzzling.</p>
<p>In this article we’ll investigate what makes airplanes fly by looking at the forces generated by the flow of air around the aircraft’s wings. More specifically, we’ll focus on the cross section of those wings to reveal the shape of an <a href="https://en.wikipedia.org/wiki/Airfoil"><em>airfoil</em></a> – you can see it presented in <span><strong>yellow</strong></span> below:</p>


<p>We’ll find out how the shape and the <span><strong>orientation</strong></span> of the <span><strong>airfoil</strong></span> helps airplanes remain airborne. We’ll also learn about the behavior and properties of air and other flowing matter. In the demonstration below, you can see a fluid flowing around a <span><strong>gray cube</strong></span>. Using the slider to change just one <span><strong>property</strong></span> of this substance, we can end up with vastly different effects on the liveliness of that flow:</p>


<p>Over the course of this blog post we’ll build some intuitions for why these different effects happen to airfoils and other objects placed in flowing air. We’ll start this journey by looking at some of the methods we can use to visualize the motion of the air.</p>
<h2 id="visualizing-flow">Visualizing Flow<a href="https://ciechanow.ski/airfoil/#visualizing-flow" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>If you’ve ever been outside in a grassy area on a windy fall day, you may have witnessed something similar to the little scene seen below. The slider lets you control the <span><strong>speed of time</strong></span> to observe in detail how the <span><strong>falling leaves</strong></span> and the bending <span><strong>blades of grass</strong></span> are visibly affected by the wind sweeping through this area:</p>


<p>We intuitively understand that it’s the flowing air that pushes the vegetation around, but note that we only observe the effects that the wind has on other objects – we can’t see the motion of the air <em>itself</em>. I could show you a similarly windy scene without the <span><strong>grass</strong></span> and <span><strong>leaves</strong></span>, and I could try to convince you that there is something going on there, but that completely empty demonstration wouldn’t be very gratifying.</p>
<p>Since the air’s transparency prevents us from tracking its movement directly, we have to come up with some other ways that can help us see its motion. Thankfully, the little outdoor scene already provides us with some ideas.</p>
<p>Notice that as the wind hits a blade of grass, that blade naturally bends in the direction of the blowing gust, and the faster that gust, the stronger the bending. A&nbsp;single blade indicates the direction and speed of the flow of air in that area.</p>
<p>In the next demonstration we’re looking at the same grassy field from above. When seen from this perspective, all the <span><strong>blades</strong></span> form short lines that are locally aligned with the wind. The more leaned over a blade of grass is, the longer the line it forms. We can mimic this behavior with a collection of <span><strong>small arrows</strong></span> placed all over the area, as seen on the right side:</p>


<p>Each <span><strong>arrow</strong></span> represents the direction and the speed of the flow of air at that location – the longer the <span><strong>arrow</strong></span>, the faster the flow. In these windy conditions the flow varies from place to place and it also changes over time, which we can clearly see in the motion of the <span><strong>arrows</strong></span>.</p>
<p>Note that we have some flexibility in how the speed of wind corresponds to the length of an <span><strong>arrow</strong></span>. I adjusted the lengths of the <span><strong>arrows</strong></span> to prevent them from visually overlapping, but I also made sure to maintain their <em>relative</em> lengths – if one <span><strong>arrow</strong></span> is twice as long as the other, then the flow at that location is also twice as fast.</p>
<p>For visual clarity I’m also not packing the <span><strong>arrows</strong></span> as densely as the <span><strong>blades of grass</strong></span> are placed, but it’s important to note that <em>every</em> point in the flow has its own velocity which contributes to the complete velocity <a href="https://en.wikipedia.org/wiki/Vector_field"><em>field</em></a> present in this area. If we wanted to, we could draw a <span><strong>velocity arrow</strong></span> at any of the seemingly empty spots on the right side.</p>
<p>The arrows are convenient, but the grassy scene also has another aid for visualizing flows. Many light objects like <span><strong>leaves</strong></span>, flower petals, dust, or smoke are very easily influenced by the motion of the surrounding air. They quickly change their velocity to match the flow of the wind. We can replicate the behavior of these light objects with <span><strong>little markers</strong></span> that are pushed around by that flow. You can see them on the right side:</p>


<p>These little <span><strong>markers</strong></span> also show us the motion of the air. Each <span><strong>marker</strong></span> represents an object so small and light that it instantly picks up the speed of the surrounding airflow. We’d have a hard time seeing these miniscule specks at their actual sizes, so I’m drawing the <span><strong>markers</strong></span> as visible dots.</p>
<p>In fact, the motion of each <span><strong>marker</strong></span> is equivalent to the motion of the parcel of air right around it. If you <a href="#" onclick="grass3_f0();return false;">slow down time</a>, you’ll be able to see how each <span><strong>marker</strong></span> just moves in the direction of the <span><strong>arrows</strong></span> underneath it. I also made each <span><strong>marker</strong></span> leave a little ghost trail behind it – this lets us track the path the air, as represented by the <span><strong>marker</strong></span>, took on the way to its current position.</p>
<p>Let’s pause for a second to emphasize what the <span><strong>grass</strong></span>-like <span><strong>arrows</strong></span> and <span><strong>leaf</strong></span>-like <span><strong>markers</strong></span> represent –&nbsp;they both show the <em>velocity</em> of the flow of air, but in slightly different ways. An <span><strong>arrow</strong></span> is attached to its fixed point in space, so it represents the current direction and speed of the flow at <em>that location</em>. The whole collection of arrows lets us easily see what the entire flow is doing at the moment.</p>
<p>On the other hand, the little <span><strong>markers</strong></span> are actively following the flow, letting us see how the air is actually <em>moving</em> through space, with the ghosty trails giving us some historical overview of where this parcel of air has come from.</p>
<p>The two methods we’ve seen so far are very versatile, but sometimes we don’t care about the local direction of the flow, only its speed – in the middle of this grassy field one might get cold from a fast blowing wind regardless of the direction from which that wind is coming. This brings us the third way of visualizing flow:</p>


<p>In this method we show the <em>speed</em> of the airflow using colors of varying brightness – the faster the wind, the brighter the color. You can see the whole <strong><span>spectrum of colors</span></strong> in the scale below the plot.</p>
<p>This method shows the speed of the flow at <em>all</em> locations giving us a more fine-grained insight into the motion of air at the cost of the directional information. To help with that I’ll sometimes overlay the regular arrows on top to let us know where the flow is going as well.</p>
<p>You may have noticed that all these methods present a flat, two dimensional view of the flow. It’s based on the assumption that the wind in our little scene doesn’t change with elevation, and that it also doesn’t blow towards or away from the ground.</p>
<p>In reality, the air velocity could vary in all three dimensions, and that air could also flow upwards or downwards. Thankfully, the air flows we’ll consider in this article will be two dimensional and the simple flat drawings will suffice.</p>
<p>Before we finish this section, let me bring up visualization of a simple airflow, but this time I’ll give you some control over its <span><strong>direction</strong></span>, which you can change using the second slider. The first one once more controls the <span><strong>speed of time</strong></span>:</p>



<p>Don’t be misled by the frozen arrows, the wind is actually blowing there. Remember that the arrows represent the local velocity of the flow of air, so while the velocity doesn’t change, the <em>position</em> of each packet of does. You can see those changes by tracking the <span><strong>markers</strong></span> moving around with the flow. This demonstration represents a <a href="https://en.wikipedia.org/wiki/Fluid_dynamics#Steady_vs_unsteady_flow"><em>steady flow</em></a>, which means that its properties don’t change over time.</p>
<p>So far we’ve been exploring the notion of airflow’s velocity on a more intuitive level, with a general understanding that’s it’s “the air” moving around in some direction and at some speed. I illustrated that concept using simple <span><strong>arrows↑</strong></span>, <span><strong>markers&nbsp;•</strong></span>, and <strong><span>varying colors</span></strong>, but we’re now ready to investigate the details hiding behind those straightforward graphical representations.</p>
<p>To do that, we have to look at individual particles of air. Although I <a href="https://ciechanow.ski/sound/#air">briefly discussed</a> the particle nature of air before, this time around we’re going to take a closer look at the motion of these molecules, and what it means for airflow as a whole.</p>
<h2 id="velocity">Velocity<a href="https://ciechanow.ski/airfoil/#velocity" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>Let’s take a look at the air particles in a small, marked out volume of space seen in the demonstration below – you can drag the cube around to change the viewing angle. The slider controls the <span><strong>speed of time</strong></span>:</p>


<p>You’re witnessing the motion of over twelve thousand air particles. It may seem like a lot, but this cube is <em>extremely</em> <span>tiny</span>, its sides are only 80 nanometers long. To put this in perspective using more familiar sizes, if that cube’s side measured just <span>1 inch</span><span>1 centimeter</span>, it would contain around <span>410 quintillion, or 4.1×10<sup>20</sup></span><span>25 quintillion, or 2.5×10<sup>19</sup></span> particles.</p>
<p>The particles are zipping around in random directions, constantly entering and leaving this region. However, despite all this motion what you’re seeing here is a simulation of <em>still</em> air.</p>
<p>To understand how all this movement ends up creating still conditions, we first have to look at the velocity of each particle – I’ll visualize it with a small arrow in the direction of motion. To make things a easier to see, I’ll also <span><strong>highlight</strong></span> a few of the particles while fading out the rest of them:</p>


<p>The length of an arrow is proportional to the speed of a particle, so when you <a href="#" onclick="particles2_f0();return false;">freeze the time</a> you should be able to see how some particles are slower and some are faster. This speed variation follows a <a href="https://en.wikipedia.org/wiki/Maxwell%E2%80%93Boltzmann_distribution">certain distribution</a> that’s related to temperature – the warmer the air, the faster the motion of its particles.</p>
<p>At room temperature the average speed of a particle in air is an astonishing <span>1030&nbsp;mph</span><span>1650&nbsp;km/h</span>, which is many times higher than even <a href="https://en.wikipedia.org/wiki/Saffir%E2%80%93Simpson_scale#Category_5">the most severe hurricanes</a>. Given the size of the cube, this means that even at the <a href="#" onclick="particles2_f1();return false;">fastest speed of simulation</a> everything happens 11 <em>billions</em> time slower than in real life.</p>
<p>If you paid close attention, you may have also noticed that sometimes the particles randomly change direction and speed of their motion – this happens when molecules collide. Each particle experiences roughly ten billion collisions per second. We’ll get back to these interactions later on, but for now let’s try to figure out how all this turmoil creates still air.</p>
<p>Having just seen the small velocity arrows of individual particles, let’s calculate the <em>average</em> velocity of a group of three <span><strong>particles</strong></span>, using the process shown below. We first take the velocity arrows <span><strong>from</strong></span> <span><strong>each</strong></span> <span><strong>particle</strong></span> and place them head to toe, one after another. Then we connect the start of the <span><strong>first arrow</strong></span> with the end of the <span><strong>last arrow</strong></span> to create the <span><strong>sum</strong></span> of all velocities. Finally, we divide, or scale down, the length of this <span><strong>sum</strong></span> by the number of particles to get the <span><strong>average velocity</strong></span>:</p>

<p>In the next demonstration we’re repeating this whole procedure by tallying up all the particles inside the <span><strong>red box</strong></span>. You can change the <span><strong>size</strong></span> of that region with the second slider. The <strong>large arrow</strong> in the middle shows the average velocity of particles in the box. To make that <strong>central arrow</strong> visible, I’m making it much larger than the tiny arrows tied to particles:</p>



<p>The counter in the bottom part of the demonstration tracks the current number of particles in the <span><strong>red cube</strong></span>. That value fluctuates as the molecules enter and leave that region. While aggregating over a small number of particles creates a very <a href="#" onclick="particles3_f0();return false;">noisy readout</a>, it doesn’t take <em>that</em> many particles to get a much <a href="#" onclick="particles3_f1();return false;">steadier measure</a>.</p>
<p>Recall that the scale of the <strong>large central arrow</strong> is much larger than the scale of individual tiny arrows attached to each particle. Despite that increase in size, the <strong>arrow</strong> practically disappears when we average out a larger number of particles and we can clearly see that the average velocity of particles is more or less zero even in this extremely small volume.</p>
<p>In still conditions, all these motions in different directions average out to nothing. As some particles enter the area from a random direction, the others also leave it in a random way. The <em>bulk</em> of air doesn’t really go anywhere and the particles just meander in a random fashion.</p>
<p>An imperfect, but convenient analogy is to imagine a swarm of bees flying in the air. While all the individual insects are actively roaming around at different speeds, the group as a whole may steadily stay in one place.</p>
<p>All these experiments form the key to understanding what happens when wind sweeps through an area. In the demonstration below, we’re once again watching a small volume of space, but this time you can control the <span><strong>speed</strong></span> of the blowing wind:</p>



<p>Notice the <span>mph</span><span>km/h</span> speedometer in the bottom of the demonstration. This is not a mistake –&nbsp;even with <a href="#" onclick="particles4_f0();return false;">hurricane-level wind speeds</a> it’s very hard to see any difference in the motion of the particles. Perhaps you’ve managed to see the tiniest shifts in the small particle arrows as you drag the <span><strong>second slider</strong></span> around with <a href="#" onclick="particles4_f1();return false;">time paused</a>, but it’s difficult to even perceive from which direction the wind is blowing.</p>
<p>However, when we use the procedure of averaging the velocity of all the particles, we can reveal the motion of their group in the box of a given <span><strong>size</strong></span>, at a specific <span><strong>speed</strong></span> of the flow:</p>




<p>Because the motion of each individual particle is so disordered, we have to look at many of them at once to discern any universal characteristics. And when we do <a href="#" onclick="particles5_f0();return false;">just that</a>, from all the chaos emerges order.</p>
<p>It’s important to note that with this approach we’re tracking the velocity of the flow within the same region of space outlined by the <span><strong>red box</strong></span> – the molecules keep entering and leaving this area as the flow moves and the <strong>arrow</strong> in the middle shows the average velocity of the air’s particles in that <span><strong>area</strong></span>.</p>
<p>This is <em>exactly</em> what the grass-like arrows we’ve played with in the previous section represent – each one shows the average velocity of air particles in that local region of space. The <strong>big arrow</strong> we just saw in the middle of the swarm in the <span><strong>averaging red box</strong></span> is equivalent to each of the <span><strong>arrows</strong></span> seen below:</p>


<p>Naturally, the <span><strong>averaging box</strong></span> needs to be large enough to avoid the jitteriness related to aggregation of too few particles, but at any scale that we could care about the noisy readout completely disappears.</p>
<p>The <em>average</em> motion of particles is very different than the motion of each individual molecule. Even in very fast flows, many of the molecules move in the opposite direction than what the arrow indicates, but if we tally up all the particle motion, the air as a whole does make forward progress in the direction of velocity.</p>
<p>Up to this point, we’ve mostly looked at the flow of air by looking at wind and the way it moves through space, but what we consider a motion of air is relative. Let’s see how, by merely changing the point of view, we can create a motion of air in otherwise windless conditions.</p>
<h2 id="relative-velocity">Relative Velocity<a href="https://ciechanow.ski/airfoil/#relative-velocity" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>Let’s zoom away from the world of microscopic particles to look at the motion of larger bodies. In the demonstration below, you can see two different views of the same <span><strong>car</strong></span> driving in the left direction. In the top part, the camera stays firmly on the ground, but in the bottom part, the camera tracks the motion of the <span><strong>vehicle</strong></span>. If needed, you can restart the scene with the button in the bottom left corner or tweak the <span><strong>speed of time</strong></span> with the slider:</p>


<p>These two views show the exact same scene – we’re just changing what the camera is focusing on. As seen in the top part, from the perspective of the static camera, it’s only the <span><strong>car</strong></span> that has some velocity in the left direction.</p>
<p>On the other hand, from the perspective of the camera focused on the <span><strong>vehicle</strong></span>, the <span><strong>car</strong></span> doesn’t move, but <em>everything else</em> does. The poles and road markings all move to the right with a speed equal to that of the <span><strong>car</strong></span>. This shouldn’t come as a surprise from daily experience in any form of transportation – when you’re sitting in a moving vehicle, static things in the surrounding environment seem to move towards and past you.</p>
<p>The very same rules apply to any region of air – I’ve outlined some of them with dashed boxes <span></span>  up in the sky. For the observer on the ground that air is still, but from the <span><strong>car’s</strong></span> perspective, that air is moving.</p>
<p>With that in mind, let’s see the same scene, but this time I’ll add the familiar small arrows showing the air’s velocity as “seen” by the camera:</p>


<p>From the point of view of the <span><strong>car</strong></span>, as seen in the bottom view, the air is moving to the right, as if there was some wind blowing right at the <span><strong>vehicle</strong></span>. You’ve probably felt this many times by sticking your hand out the window – it feels no different than if you were standing still on the ground with the wind hitting your fingers.</p>
<p>In fact, there is absolutely no difference between “regular” wind and wind experienced by the <span><strong>car</strong></span>  or your hand sticking out the window – both are simply a motion of air relative to some object. This means that we can use our arrows to represent any motion of air, as long as we note what that motion is relative to.</p>
<p>You may have also noticed that the moving <span><strong>car</strong></span> affects the motion of air in its vicinity. Let me bring up the previous demonstration one more time:</p>


<p>In the top view, we can see how the front of the <span><strong>vehicle</strong></span> pushes the air forward, and how the air “bends” and speeds up around the shape of the <span><strong>car</strong></span> to roughly follow its shape, only to end up circling right behind the <span><strong>machine</strong></span>.</p>
<p>The same effects are seen in the bottom view – they’re just experienced differently. For example, the air right in front of the <span><strong>car</strong></span> slows down, while the air on top moves even faster than the rest of the undisturbed, distant air.</p>
<p>We’ll soon explore <em>why</em> the air behaves this way when flowing around an object, but for now let’s raise above the ground to see the motion of an <span><strong>airplane</strong></span> flying in the sky. We’ll use the familiar setup of a camera kept steady relative the ground, as seen in the top part, and a camera that follows the <span><strong>airplane</strong></span>, seen in the bottom part:</p>


<p>Before we continue, notice that it’s getting a little hard to pay close attention to what happens to the moving objects in the ground-fixed camera view – the bodies quickly leave the field of view of the demonstrations. For the rest of this article I’ll stick to the camera style seen in the bottom part of the demonstration – this will let us directly track the interaction between the object and the air that flows around that object.</p>
<p>From the point of view of the <span><strong>airplane</strong></span>, it also experiences a flow of incoming air as seen by the air “boxes” approaching the <span><strong>plane</strong></span>, which is very similar to the car example. What’s completely different from the car example is the fact that the <span><strong>airplane</strong></span> somehow stays suspended in the air, despite gravity pulling it down towards the ground. This means that there must be some other force acting on it to prevent the plane from falling from the sky.</p>
<p>Let’s compare these two vehicles by looking at the basic forces affecting their motion, starting with the diagram of forces acting on the <span><strong>car</strong></span>:</p>


<p>The down-pulling <span><strong>gravity force</strong></span> is counteracted by the <span><strong>reaction forces</strong></span> from the ground – they act through the <span><strong>car’s</strong></span> tires to prevent the <span><strong>car</strong></span> from sinking. The air drag and other forms of resistance <span><strong>push</strong></span> the car back, but the <span><strong>car’s</strong></span> tires powered by the engine keep <span><strong>propelling</strong></span> the car forward.</p>
<p>In my previous article I presented a <a href="https://ciechanow.ski/bicycle/#forces">more elaborate description</a> of the interplay between forces and objects, but to briefly recap here, if forces acting on an object are balanced, then that object will maintain its current velocity.</p>
<p>All forces on the <span><strong>car</strong></span> <em>are</em> balanced and the <span><strong>vehicle</strong></span> moves forward with constant speed, and it doesn’t move at all in the up or down direction – the <span><strong>object’s</strong></span> velocity is indeed constant.</p>
<p>Let’s draw a similar diagram of forces for the flying <span><strong>plane</strong></span>:</p>


<p>We still have the <span><strong>air drag</strong></span> that pushes the <span><strong>vehicle</strong></span> back, and the <span><strong>plane’s</strong></span> propeller powered by the engine keeps  <span><strong>pushing</strong></span> it forward. As a result the <span><strong>plane</strong></span> moves forward with constant speed.</p>
<p>We also have the down-pulling <span><strong>gravity</strong></span>. This time, however, that <span><strong>gravity</strong></span> is not countered by the reaction forces from the ground, but instead it’s balanced by <a href="https://en.wikipedia.org/wiki/Lift_(force)"><em>lift</em></a>, a <span><strong>force</strong></span> that pushes the <span><strong>plane</strong></span> up. When <span><strong>gravity</strong></span> and <span><strong>lift</strong></span> are equalized, the plane doesn’t move up or down either.</p>
<p>Airplanes create most of their lift with wings, which are carefully designed to generate that force. While length, area, and the overall geometry of the wings are very important, in this article we’ll focus on the shape of the cross-section of a wing which I highlighted below in <span><strong>yellow</strong></span>:</p>

<p>This is an <span><strong>airfoil</strong></span>, the protagonist of this article. This <span><strong>airfoil</strong></span> has a smooth, rounded front and a sharp trailing edge. Let’s take a closer look at the flow of air around this <span><strong>airfoil</strong></span> using the grass-like arrows that show the velocity of air at that location:</p>


<p>These arrows paint an interesting picture, but in the demonstration below I’ve also added the little leaf-like <strong>markers</strong> that track the motion of air parcels in the flow. I&nbsp;steadily release a whole line of them from the left side, but you can also <span>click</span><span>tap</span> anywhere in the flow to drop a <strong>marker</strong> at that location. You can do this in any demonstration that has a little hand symbol in the bottom right corner:</p>

<p>The <strong>markers</strong> show that the flow splits ahead of the <span><strong>airfoil</strong></span>, then it gently changes direction to glide above and below the <span><strong>shape</strong></span>. Moreover, the <strong>markers</strong> right in front of the <span><strong>airfoil</strong></span> gradually slow down and lag behind their neighbors. The air somehow senses the presence of the body.</p>
<p>It may be hard to see, but the top and bottom sections of this <span><strong>airfoil</strong></span> aren’t symmetric. This asymmetric design is very important, but right now it will needlessly complicate our discussion on how the flow around this shape arises.</p>
<p>To simplify things a little, let’s use a less complicated shape of a <em>symmetric</em> <span><strong>airfoil</strong></span> – you can see it in the demonstration below. I overlay the previous asymmetric shape with a <span>dashed</span> outline to show the difference between the two:</p>

<p>The motion of air around this airfoil is very similar – the flow changes its direction and speed when it passes around an object. Until now we’ve simply been observing that the flow changes to adapt to the shape of the body, but it’s finally time to understand <em>why</em> it happens. To explain that behavior we need to go back to the world of air particles to discuss the concept of pressure.</p>
<h2 id="pressure">Pressure<a href="https://ciechanow.ski/airfoil/#pressure" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>As we’ve discussed, even in the seemingly steady conditions the particles of air are zipping around at high speeds colliding with each other at an incredible rate. The surface of any object placed in the air will also experience these bounces.</p>
<p>In the demonstration below, you can see air particles bombarding a <span><strong>small box</strong></span>. Every time a collision happens I briefly mark it with a <strong>dark spot</strong> on the surface of that <span><strong>cube</strong></span>:</p>


<p>To understand the implications of these collisions, let’s first take a look at objects with more ordinary sizes. In the demonstration below, <span><strong>tennis balls</strong></span> are hitting a large <span><strong>cardboard box</strong></span> from the left and right side. By dragging the slider you can change the <span><strong>intensity</strong></span> of both streams of balls:</p>


<p>When a <span><strong>tennis ball</strong></span> hits the <span><strong>box</strong></span>, the collision imparts some force on it, causing the <span><strong>box</strong></span> to move. However, in this simulation the collisions from all the <span><strong>balls</strong></span> on each side balance each other out, so the <span><strong>box</strong></span> doesn’t make any consistent progress in either direction.</p>
<p>In real air, the situation is similar, but at vastly different scales. The mass of each particle constituting air is absolutely miniscule, so the impact of an individual collision on any object of meaningful size is completely imperceptible.</p>
<p>Moreover, each air particle hitting an object has a different speed, and it strikes the surface of that object at a different angle – some hit the object straight on, but some barely graze it. Due to the enormous number of these collisions happening at every instant of time, all these variations average out, and even a small section of surface of any body experiences uniform bombardment.</p>
<p>In aggregate, we say that the air exerts <a href="https://en.wikipedia.org/wiki/Pressure"><em>pressure</em></a> on any object present in that air. The magnitude of this pressure depends on the intensity of these collisions across an area.</p>
<p>Let’s see how this pressure manifests on our <span><strong>tiny cube</strong></span>. In the demonstration below, you can use the second slider to control the <span><strong>number of air molecules</strong></span> present in this volume:</p>



<p>The <span><strong>black arrows</strong></span> you see on the sides of the cube symbolize the magnitude of pressure on these walls. As we <em>uniformly</em> increase the <span><strong>number of particles</strong></span> in this volume, the intensity of collisions, and thus the <span><strong>pressure</strong></span>, also increases. Because the collisions happen at more or less the same rate on every side of the <span><strong>box</strong></span>, the net balance of forces is also maintained and the <span><strong>cube</strong></span> doesn’t move, regardless of how big or small the overall <span><strong>pressure</strong></span> is.</p>
<p>This is exactly what happens in the Earth’s atmosphere – everything is constantly squeezed by relatively high pressure caused by the barrage of countless air particles. That pressure is typically balanced either by an object’s material, which resists compression like a spring, or by the air itself that fills the insides of the object. When that inner air is removed, the seemingly innocuous atmospheric pressure <a href="https://www.youtube.com/watch?v=0N17tEW_WEU&amp;t=165s">reveals its might</a>.</p>
<p>The underlying particle nature also shows us that pressure is never negative. Without any particle collisions, we reach the lowest possible pressure of zero. Beyond that, any impacts on the surface of an object create some amount of positive pressure.</p>
<p>In the demonstrations we’ve seen so far, the <em>balanced</em> number of collisions on each wall was very important for keeping the objects steady. Unsurprisingly, more interesting things happen when this harmony isn’t maintained. Let’s first investigate this scenario using the <span><strong>tennis balls</strong></span>. In the demonstration below, the slider controls if it’s the <span><strong>left side or the right side</strong></span> that’s shooting more balls:</p>


<p>As you can see, if one of the sides has a <a href="#" onclick="balls2_f0();return false;">higher number of collisions</a>, the forces acting on the <span><strong>box</strong></span> are no longer balanced and the <span><strong>box</strong></span> starts to move.</p>
<p>The very same situation happens in air, which you can witness in the simulation below. Notice that the volume in which the <span><strong>tiny cube</strong></span> exists has more particles on one side than the other. Observe what happens to <span><strong>cube</strong></span> once you let <span><strong>the time run</strong></span> using the slider:</p>


<p>The higher number of particle collisions on one side of the <span><strong>cube</strong></span> creates higher <span><strong>pressure forces</strong></span> on that wall. The uneven forces end up pushing the <span><strong>block</strong></span> to the side. In this demonstration, the pressure re-balances after a while and the <span><strong>cube</strong></span> stops moving.</p>
<p>Intuitively, the air exerts an imbalanced net force on the <span><strong>cube</strong></span> only when different parts of that <span><strong>object</strong></span> experience different pressure – it’s the <em>spatial variation</em> in pressure that creates an acting net force. When the <em>difference</em> in pressure between any two points increases, the net force acting on the object also grows.</p>
<p>It’s easy to see that a larger number of collisions on the left side of an object would start to exert a net force pushing that object to the right, but, perhaps surprisingly, the same rules apply to any chunk of air itself.</p>
<p>In the demonstration below, I once again made one half of the test volume contain more particles than the other half. As you <span><strong>unpause</strong></span> the demonstration, observe the average velocity of molecules in the  <span><strong>marked out</strong></span> section of air:</p>



<p>The particles on the more occupied side can easily travel to the less crowded side, because there are fewer particles there to collide with and bounce back from. Additionally, each particle in the less populated section is more likely to hit a particle in the more populated section, which will typically cause that particle from the desolate side to bounce back where it came from.</p>
<p>The particles end up, on average, traveling from the area of high pressure to the area of lower pressure. Even though we don’t have any clean borders between different sections, we can still see the bulk of particles getting accelerated towards the less dense section.</p>
<p>Once again, the initial pressure differences in the test volume dissipate after a while. On their own, these freely suspended pressure variations quickly disappear, but we will soon see how, with the aid of airflow, these areas of different pressure can be sustained indefinitely.</p>
<p>In the examples we’ve been playing with, the notion of increased pressure came from an increased number of collisions, which in turn came from an increased number of particles in the area. This shows that, all other things being equal, pressure is tied to the local density of the air, which was very easy to perceive in an increased concentration of molecules.</p>
<p>However, the pressure can also grow due to increased average speed of the particles, which in turn comes with increased temperature. As particles get faster, each collision gets more impactful and it pushes on an object or other particles a bit harder, causing the overall pressure to also increase. In the demonstration below, we can simulate this with <span><strong>tennis balls</strong></span> hitting the <span><strong>cardboard box</strong></span> at the same rate, but with <span><strong>different speeds</strong></span>, which you can control with the slider:</p>


<p>As we make the <span><strong>balls</strong></span> on one side of the <span><strong>box</strong></span> <a href="#" onclick="balls3_f0();return false;">faster</a>, their impacts also become stronger and the <span><strong>package</strong></span> starts moving to the right, even though the <em>number</em> of collisions per second is equal on both sides.</p>
<p>The important point from these discussions is that air pressure exerts force on everything inside it, be it a solid object or any parcel of air. It’s a little unintuitive that the air itself both exerts the pressure and it also “feels” the pressure, but it’s all just a consequence of very rapid motions of particles and the collisions between them happening at an enormous rate.</p>
<p>Recall that even in small volumes of air there are billions of billions of particles, and each particle experiences roughly ten billion collisions per second. What we’ve simulated at a micro scale and in slow motion as countable, individual interactions, very quickly smooths out into a uniform and uninterrupted notion of force-exerting pressure.</p>
<p>This fact lets us abandon the molecules and their collisions yet again. It’s not a big loss, since counting the number and intensity of collisions was never convenient in the first place, but we can now investigate some other ways of visualizing pressure in a region of air.</p>
<h2 id="visualizing-pressure">Visualizing Pressure<a href="https://ciechanow.ski/airfoil/#visualizing-pressure" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>As we’ve seen in the particle simulations, pressure can vary from place to place. One of the most convenient ways to express this variation is to use colors of different intensities. Let’s see how that simple approach could work here. In the demonstration below, the dashed circles represent regions of high <span></span> and low <span></span> pressure – you can drag them around to change their position:</p>

<p>This map of pressure is colored with <strong><span data-color0="E3BFBB" data-color1="E5432E">varying shades of red</span></strong> as indicated by the scale below – the <span><strong>redder</strong></span> the color, the <span><strong>higher</strong></span> the pressure. The small triangle <span>▼</span> in the middle of the scale indicates the location of the  base, <em>static</em> pressure present in the atmosphere.</p>
<p>In this simulation we have complete control over where the different locations of <span><strong>lower</strong></span>  and <span><strong>higher</strong></span> pressure are. To make things more interesting, each draggable pressure circle has a different strength and range. You can infer this variation from color changes around these points.</p>
<p>Let’s put an <span><strong>airfoil</strong></span> in this area to see how it’s affected by the pressure of the surrounding air. The <span><strong>arrows</strong></span> seen below symbolize the force that pressure exerts on the surface of the <span><strong>airfoil</strong></span> at that location. They’re the exact same <span><strong>arrows</strong></span> that we’ve seen acting on the walls of the tiny yellow cube, here we just see them at a larger scale:</p>

<p>As you move around the locations of <span><strong>lower</strong></span>  and <span><strong>higher</strong></span> pressure, the <span><strong>forces</strong></span> acting on the surface of the <span><strong>airfoil</strong></span> also change, matching what we’ve seen with little cubes bombarded by air particles. The static pressure always exerts some base load, but in the areas of <span><strong>higher</strong></span> pressure the <span><strong>surface forces</strong></span> are higher, and in the areas of <span><strong>lower</strong></span> pressure the <span><strong>surface forces</strong></span> are lower than these base forces.</p>
<p>Note that you can also move the pressure circles into the <span><strong>airfoil</strong></span>, but it only serves as a convenience to let you customize the shape of the air pressure field <em>around</em> that body – we don’t particularly care about the pressure inside the solid itself.</p>
<p>When we tally up all the <span><strong>pressure forces</strong></span> acting on each piece of the <span><strong>airfoil’s</strong></span> surface, we end up with the <span><strong>net force</strong></span> acting on that object. In the demonstration below, I’m showing it with the <span><strong>big arrow</strong></span> at the center of the <span><strong>airfoil</strong></span>:</p>

<p>By changing the distribution of pressure around the <span><strong>airfoil</strong></span>, we can affect the <span><strong>total force</strong></span> that this object feels.</p>
<p>The reddish plots we’ve been looking at are correct, but a little inconvenient. Recall that <span><strong>final net force</strong></span> on the object depends only on the <em>differences</em> of pressure – when we uniformly increased the number of collisions on the walls of the tiny cube, it steadily remained in place.</p>
<p>This means that the static background pressure doesn’t matter for the <span><strong>cumulative forces</strong></span> acting on an object. It’s only the differences relative to that static pressure that affect the overall balance. This lets us overhaul our visual representation of pressure – we can use no color where the pressure has the static value, use <span><strong>blue color</strong></span> when the pressure is <span><strong>lower</strong></span> than the static pressure, and use <span><strong>red color</strong></span> when the pressure is <span><strong>higher</strong></span> than the static pressure:</p>

<p>This is the <em>exact</em> same distribution of pressure that we’ve just seen. All the pressure demos in this section are connected, and here we simply changed the reference point against which we present the pressure variation.</p>
<p>If we then throw in the <span><strong>airfoil</strong></span> back into the mix we can now also adjust the <span><strong>arrows</strong></span> representing the <span><strong>forces</strong></span> that the pressure exerts on the surface of that <span><strong>object</strong></span>:</p>

<p>The areas of <span><strong>higher</strong></span> pressure still seem to push on the surface of the <span><strong>airfoil</strong></span>, but the areas of <span><strong>lower</strong></span> pressure now seem to <em>pull</em> it. However, I need to emphasize once more that pressure <em>always</em> pushes on the object, and we can only talk about a pulling force when we discard that uniform, pushing contribution coming from the static pressure. In those “pulling” areas the pressure is still pushing, it just pushes less intensely.</p>
<p>I will also use the convenient terms of <span><strong>positive</strong></span> and <span><strong>negative</strong></span> pressure, but remember that this refers to their difference from the static pressure. The phrase “pressure lower than static pressure” is a mouthful, so the expression “negative pressure” is very handy, even when it hides the fact that pressure is always positive.</p>
<p>While the color variations used here show the true nature of the smoothly varying pressure changes, they make it a little hard to see how quickly those changes happen. To fix this, I’ll also draw the <a href="https://en.wikipedia.org/wiki/Contour_line"><em>contour lines</em></a> that join the locations of the same pressure – they’re very similar to lines of the same altitude you may have seen on maps:</p>

<p>Every point on one of those contour lines has the same value of pressure, and each subsequent line is drawn at the same increment of pressure – you can see this in the scale placed below the plot. This means that the closer the lines are together, the more quickly the pressure changes in that area.</p>
<p>The mathematical concept that describes the direction and rapidness of these changes is known as a <a href="https://en.wikipedia.org/wiki/Gradient"><em>gradient</em></a>. Informally, gradient describes how some property changes from one point to another, and, thankfully, this notion tracks closely with how this word is used in graphic design to describe smooth color changes. Wherever you see a <strong><span data-color0="3F90CD" data-color1="dddddd" data-color2="E5432E"> color gradient</span></strong> , this also implies that there is a <strong><span data-color0="3F90CD" data-color1="dddddd" data-color2="E5432E">pressure gradient</span></strong>  – the pressure changes from place to place.</p>
<p>This spatial variation is particularly important for the motion of air. Recall that the air pressure differences don’t just exert forces on solid objects, but also on the air itself – any small parcel of air is subject to the same whims of pressure forces.</p>
<p>Those spatial variations in pressure end up pushing the air around, changing its velocity. Let’s see this in action using the little leaf-like <strong>markers</strong> that are moved around by pressure differences. In the demonstration below, I’m steadily releasing the <strong>markers</strong> from the left side –&nbsp;notice how their trajectory changes when you modify the pressure field:</p>


<p>You may still find it a little difficult to grasp how pressure differences affect the motion of a parcel of air. Luckily, we can draw parallels between the contour lines of pressure seen on these pressure maps and the contour lines of elevation seen on traditional maps. This lets us build a little pressure-landscape analogy.</p>
<p>In the demonstration below, the very same distribution of pressure is expressed as a mountainy landscape. <span><strong>Positive</strong></span> pressure lifts the ground above the base level and <span><strong>negative</strong></span> pressure depresses it below the base level. A parcel of air moves like a marble that loses speed when climbing uphill and accelerates when rolling downhill. You can drag the demo around to change the viewing angle:</p>


<p>Notice that when the pressure changes more rapidly and the contour lines are closer, the steepness of the corresponding hill or valley also increases, and so do the forces acting on a parcel of air. If the pressure is increasing by a large amount, it may even make the <strong>marker</strong> go back. This landscape analogy also shows that the static pressure doesn’t matter for the motion of air parcels, as any changes in static pressure would just lift all the areas by the same amount without changing their steepness.</p>
<p>When watching these air parcels move around, you may have noticed that things were a little bit off. For example, it’s possible for air parcels coming from different directions to arrive at the same location, and then continue to travel in different directions. You can see an example of that on the left side of the demonstration below, with the slider letting you <span><strong>scrub back and forth in time</strong></span>:</p>


<p>Recall that the markers always follow the local velocity of air, so the motion seen in the left part implies that the air at the <a href="#" onclick="parcels_crossing_f0();return false;">location of the meetup</a> of the <span><strong>two</strong></span> <span><strong>markers</strong></span>  has two different velocities at the same time, which is not realistic.</p>
<p>It’s worth pointing out that the situation seen on right side, where <span><strong>one marker</strong></span> merely <a href="#" onclick="parcels_crossing_f1();return false;">intersects</a> the <strong><span data-color0="F0D9C0" data-color1="E09F56">historical path</span></strong> of the <span><strong>other</strong></span>, <em>can</em> be realistic, as long as we’re dealing with an unsteady flow, where the <span><strong>velocity</strong></span> of the air at the crossing location has changed since the <span><strong>first marker</strong></span> was there. For steady conditions in which no changes occur over time, the scenario seen on the right is also not physically correct.</p>
<p>We’ll look at some unsteady flows later in the article, but for now we’re interested in steady conditions so the crossing paths of our <strong>markers</strong> indicate implausible velocities. Even more dubious result happen when we simulate the motion of these <strong>markers</strong> with an <span><strong>airfoil</strong></span> present in the flow:</p>


<p>For most distributions of pressure, the air markers will flow right through the <span><strong>body</strong></span>. This is clearly wrong! The demonstrations we’ve seen so far correctly represent what would happen to individual air parcels and bodies placed in these pressure fields, but those pressure fields themselves were completely made up and didn’t correspond to any physical reality. Our mistake was that we completely ignored any interactions between the pressure of the air and the <em>motion</em> of that air.</p>
<p>The flow of air, the pressure of air, and the shape of the objects placed in that air are all tied together – for a given incoming flow speed and the shape of the object, we can’t just arbitrarily arrange the pressure field like we did in our artificial demonstrations. Instead, that pressure field will arise on its own.</p>
<p>Let’s see a <em>real</em> distribution of pressure around this airfoil and witness how it affects the motion of air parcels around it:</p>

<p>The behavior of air parcels now matches our intuitive expectations – the <strong>markers</strong> don’t go through the body, and in these steady conditions they also don’t cross paths.</p>
<p>We’re now one step closer to understanding how the flow of air takes its shape to move around an <span><strong>airfoil</strong></span> – it’s the pressure differences that cause the flow to change its direction and speed.</p>
<p>The pressure field we’ve just seen clearly works – regions of <span><strong>lower</strong></span> and <span><strong>higher</strong></span> pressure guide the air around the airfoil. However, it’s still unclear how these areas emerged in the first place. Let’s try to follow nature’s path to see how this pressure distribution is created and sustained in a flow.</p>
<h2 id="airfoil-flow">Airfoil Flow<a href="https://ciechanow.ski/airfoil/#airfoil-flow" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>Before we start building the correct pressure field from scratch, let’s first establish two guiding principles that the flow around any object has to follow.</p>
<p>Firstly, the air can’t penetrate solid walls. A valid pressure field should either completely stop the flow at the surface of the object, or redirect that flow to make it travel in the direction perpendicular to the walls. This means that the markers that we track can never get inside the object.</p>
<p>Secondly, we also have the restrictions on the relative motion of the markers. For now we’ll only be interested in steady conditions, which means that the markers can’t cross their paths – we expect the ghostly historical trails to never intersect.</p>
<p>Let’s first focus on the pressure field in front of the airfoil. In the demonstration below, I created an <em>artificial</em> pressure field in that frontal region, you can control it using the slider:</p>


<p>It should quickly become clear that to prevent the approaching air from getting into the object, the pressure in the frontal region has to be <span><strong>positive</strong></span>, so that it pushes the incoming air away.</p>
<p>If that <span><strong>positive pressure</strong></span> in front is <a href="#" onclick="symmetric_airfoil_fvm4_f0();return false;">too low</a> the air can still erroneously flow through the object. If that pressure is <a href="#" onclick="symmetric_airfoil_fvm4_f1();return false;">too high</a>, the air parcels arriving at the airfoil will turn back and incorrectly cross paths with the incoming air. When the pressure is <a href="#" onclick="symmetric_airfoil_fvm4_f2();return false;">just right</a>, the air parcels don’t go through the wall, and, at least in front of the object, they also don’t cross their paths.</p>
<p>The faster the incoming flow, the higher the pushing force required to slow down and redirect the incoming air. In the demonstration below, you can also control the <span><strong>speed</strong></span> of that incoming air using the second slider:</p>



<p>While for <a href="#" onclick="symmetric_airfoil_fvm5_f0();return false;">slow flows</a>, only a small amount of <span><strong>positive pressure</strong></span>  is <a href="#" onclick="symmetric_airfoil_fvm5_f1();return false;">enough</a> to stop the incoming air, for <a href="#" onclick="symmetric_airfoil_fvm5_f2();return false;">fast flows</a>, the pressure in front of the airfoil has to become <a href="#" onclick="symmetric_airfoil_fvm5_f3();return false;">much higher</a>.</p>
<p>The pressure needed to stop air at a given velocity is known as <a href="https://en.wikipedia.org/wiki/Stagnation_pressure"><em>stagnation pressure</em></a> and it’s proportional to the <em>square</em> of that velocity – twice as high speed requires four times larger pressure.  Naturally, when there is <a href="#" onclick="symmetric_airfoil_fvm5_f4();return false;">no flow</a>, no pressure is required as the air no longer tries to flow through the object.</p>
<p>In the previous two demonstrations, we manually adjusted the pressure to get the correct result, but in nature this process happens on its own – it’s the flow <em>itself</em> that creates this region of increased pressure in front of the object.</p>
<p>As the incoming parcels of air arrive at the surface of the airfoil, they can’t continue going forward, but air parcels from further up ahead continuously want to keep flowing into this region. This compresses the air close to the object, which causes the pressure in front to increase, which then helps to slow down the incoming flow.</p>
<p>This mechanism is self-balancing – if the pressure is too low to push away the incoming air parcels, the air parcels will compact the existing air more, causing an increase in pressure. If the pressure is too high, it will easily push the incoming air away, which relieves the frontal area, causing the pressure to decrease. Any fluctuations quickly settle to an equilibrium that balances the pressure in the entire frontal region.</p>
<p>Let’s look at the distribution of the <span><strong>positive</strong></span> frontal pressure once more:</p>

<p>Notice that the <span><strong>positive pressure</strong></span> isn’t limited to just the close vicinity of the airfoil, but it spreads out much further ahead to gradually reach the value of the static pressure, far away from the airfoil itself.</p>
<p>All in all, we have a large area of increasing pressure that starts far away from the body and ends at its surface. Those pressure differences create a pressure “hill” that not only gradually slows the incoming air down, but it also redirects that air to flow around the object.</p>
<p>It seems that with our frontal pressure field we’ve easily completed our goal of preventing the air from flowing through the walls of the body. However, our second guideline of non-crossing marker paths is still not fulfilled – this condition is broken above and below the airfoil.</p>
<p>Let’s first try to rectify this manually. In the demonstration below, you can control the pressure in these two regions using the slider:</p>


<p>While <span><strong>positive</strong></span> values of pressure in those zones make the <a href="#" onclick="symmetric_airfoil_fvm6_f0();return false;">problem worse</a>, <span><strong>negative</strong></span> values get us <a href="#" onclick="symmetric_airfoil_fvm6_f1();return false;">much closer</a> to the expected behavior – in the top and bottom areas the <strong>markers</strong> no longer veer off into different directions. However, that pressure can’t bo <a href="#" onclick="symmetric_airfoil_fvm6_f2();return false;"><em>too</em> low</a>, otherwise it will pull the <strong>markers</strong> back into the body.</p>
<p>In real flow, these regions of <span><strong>lower</strong></span> pressure arise on their own, but the explanation for this phenomenon is a little less straightforward than what I’ve described for the area of <span><strong>positive</strong></span> pressure in the frontal region. We can get <em>some</em>, albeit a bit hand-wavy,  understanding by observing what happens to the air <strong>markers</strong> when those <span><strong>negative</strong></span> regions are <a href="#" onclick="symmetric_airfoil_fvm6_f3();return false;">missing</a>.</p>
<p>In that scenario, the incoming air parcels no longer reach those areas above and below the airfoil, causing some local depletion of air that has since left those zones. This decreases the pressure in those regions, and that lower pressure attracts the surrounding air to flow into those less occupied spaces.</p>
<p>If that lower pressure is <em>too</em> negative, more air will come in and the pressure will rise. If the pressure is not negative enough, those region will get depleted again. Once again, it’s the flow itself that creates the balancing system – without the flow no pressure differences would arise.</p>
<p>As we’ll see later on, in more extreme scenarios that negative pressure can alter the flow more dramatically, and the regions of “missing” air get filled through other means, but for now let’s close things up by tweaking the pressure in the rear part of the airfoil:</p>


<p>Some amount of <span><strong>positive</strong></span> pressure in the rear <a href="#" onclick="symmetric_airfoil_fvm7_f0();return false;">prevents</a> the air parcels from smashing into each other after leaving the airfoil. Intuitively, this pressure arises naturally from the flow, because as the air slides off from the ends of the top and bottom sides, it all arrives into the same region, creating some compression.</p>
<p>If that compressive pressure in the rear is too low, more air will manage to get in, which will further increase the pressure. If that pressure is too high, it will push the incoming air away, which depletes the area and the pressure decreases. The system balances itself yet again.</p>
<p>The quite informal description of these balances that I’ve presented can be formalized mathematically using the <a href="https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_equations"><em>Navier–Stokes equations</em></a>. These equations describe the motion of liquids and gasses, collectively known as <a href="https://en.wikipedia.org/wiki/Fluid"><em>fluids</em></a>, subject to various forces like gravity, or, most importantly for us, pressure.</p>
<p>Navier–Stokes equations are <a href="https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_existence_and_smoothness"><em>notoriously difficult</em></a> to solve analytically, but a lot of insight about the behavior of fluids can be gained with computer simulations with various degrees of complexity.</p>
<p>In this article, I’m also employing simulations to investigate the flow of air around objects. However, the computer models used here are quite simplified and they don’t reflect the <em>full</em> richness of physics involved in the motion of air. These <em>slow-motion</em> demonstrations are intended to present the broad strokes of the delicate interaction between the air and the airfoil, but I would advise against relying on them when building an airworthy airplane.</p>
<p>With all of these caveats in place, let’s get back to the pressure distribution around a symmetric airfoil. We’re done recreating the nature-made pressure field, but there is one small aspect that we haven’t yet accounted for.</p>
<p>For our experiments, I kept the pressure steady in time so that we could focus on its general outlines. In practice, a pressure field imposed by a fast flow around any object will experience some degree of instability, which you can see in the demonstration below. You can once more drop the markers at any location to track the flow in the area:</p>

<p>As the pressure builds up on one side, it redirects the flow, which changes the pressure again. The pressure ends up oscillating back and forth like a swing. The pressure distribution and the flow direction are once again at the mercy of their mutual balance, one affecting the other. We’ll soon see some other examples of these unstable behaviors.</p>
<p>As we’ve just seen, the variation in pressure doesn’t just happen in the close vicinity of the airfoil, but it stretches quite far away from the body itself. This means that the velocity of the flow is also affected quite far away from the shape.</p>
<p>However, when it comes to the forces exerted on the airfoil, it’s only the pressure right at the surface of the airfoil that matters. Let’s bring back the two tools we’ve used before: <span><strong>surface arrows</strong></span> that show how the air pushes or “pulls” on the airfoil, and the <span><strong>net force</strong></span> arrow that tallies up the net results of <span><strong>these forces</strong></span>:</p>

<p>As the pressure field fluctuates, the resulting <span><strong>net force</strong></span> also moves around. Let’s decompose this force into two different components, one  <span><strong>perpendicular</strong></span> to the flow, and one <span><strong>parallel</strong></span> to it:</p>

<p>The force acting in the direction perpendicular to the flow is known as <span><strong>lift</strong></span>, and the one acting in the direction of the flow is known as <span><strong>pressure drag</strong></span>, or <a href="https://en.wikipedia.org/wiki/Parasitic_drag#Form_drag"><em>form drag</em></a>. As the name implies, this component of drag is created by the distribution of pressure around the shape.</p>
<p>For this airfoil, the <span><strong>pressure drag</strong></span> is very tiny. While airfoils are specifically designed to minimize the overall drag, most of that force hindering their motion comes from another source – we’ll discuss it soon enough.</p>
<p>Notice that as this flow fluctuates, the <span><strong>lift</strong></span> force jumps around, but averaged over time the upward and downward swings of that <span><strong>force</strong></span> end up balancing each other. This airfoil in <em>this</em> configuration doesn’t generate any continuous lift.</p>
<p>This shouldn’t come as a surprise since this situation is completely symmetric, so the pressure forces on the upper and lower sides of the airfoil are, on average, completely balanced. However, there is an easy way to disturb that symmetry. In the demonstration below, we’re once again meeting the plain, symmetric airfoil, but this time we can gently <span><strong>tilt</strong></span> it using the slider:</p>


<p>The <span><strong>slider</strong></span> controls the so-called <a href="https://en.wikipedia.org/wiki/Angle_of_attack"><em>angle of attack</em></a>, which is spanned between some reference line on the body, like the one joining the front and back, and the direction of the incoming flow. I’m showing this angle right in the middle of the airfoil.</p>
<p>As we <a href="#" onclick="symmetric_airfoil_fvm20_f0();return false;">change</a> the <span><strong>angle of attack</strong></span>, the shape that the airflow “sees” is no longer symmetrical relative to the incoming direction of that flow. The velocity and pressure fields adapt in their mutual push and pull to form a new, asymmetric distribution. Notice that the stagnation point of <span><strong>high pressure</strong></span> has moved around, and the little markers that indicate the motion of air now travel on very different paths below and above and below the airfoil.</p>
<p>If we then put the <span><strong>pressure arrows</strong></span> back in, we can tally them all up to get the resulting <span><strong>lift</strong></span> and <span><strong>pressure drag</strong></span>. When compared to the previous simulation, I’m scaling down all the arrows to make them fit in the bounds of the demonstration:</p>


<p>When this symmetric airfoil is <a href="#" onclick="symmetric_airfoil_fvm21_f0();return false;">tilted up</a>, the asymmetric pressure distribution generates a <span><strong>lift force</strong></span> that pushes the object up. Conversely, for a <a href="#" onclick="symmetric_airfoil_fvm21_f1();return false;">downward tilted airfoil</a>, the pressure forces <span><strong>push</strong></span> the airfoil down.</p>
<p>Naturally, we’re typically interested in upward-pointing forces, and when the <span><strong>lift</strong></span> generated by the wings is equal to the weight of the plane, the plane will stay in the air without raising or falling to the ground – we’re finally flying.</p>
<p>Let’s plot the dependence between the <span><strong>lifting force</strong></span> and the <span><strong>angle of attack</strong></span> of an airfoil – you can see it in the right side of the demonstration below. Note that this plot presents time-averaged and <em>settled</em> values, so you may have to wait a little for the flow to normalize and the <span><strong>lift</strong></span> to start oscillating around the expected value:</p>


<p>Clearly, as the <span><strong>angle of attack</strong></span> increases, so does the generated <span><strong>lift</strong></span>. The same thing happens on the other end of the spectrum, where a more negative  <span><strong>angle of attack</strong></span> creates more negative lift. Note that for this symmetric airfoil the positive and negative sides of the diagram are just mirror images of each other, so let’s focus only on positive  <span><strong>angles of attack</strong></span>.</p>
<p>One could naively hope that we could keep increasing the  <span><strong>angle of attack</strong></span> to generate more and more <span><strong>lift</strong></span>. Let’s see what happens in practice:</p>


<p>Initially, the <span><strong>lift</strong></span> force indeed keeps increasing with the <span><strong>angle of attack</strong></span>, but at some point <a href="#" onclick="symmetric_airfoil_fvm23_f0();return false;">it plateaus</a>. Once that <em>critical</em> angle of attack is surpassed, the <span><strong>lift</strong></span> force <a href="#" onclick="symmetric_airfoil_fvm23_f1();return false;">starts to fall</a> after the flow <a href="#" onclick="symmetric_airfoil_fvm23_f2();return false;">fully develops</a>.</p>
<p>What we’re witnessing here is known as a <a href="https://en.wikipedia.org/wiki/Stall_(fluid_dynamics)"><em>stall</em></a>. The onset of a stall imposes limits on how much <span><strong>lift</strong></span> the wings of an airplane can generate from merely increasing the angle of attack.</p>
<p>Notice that when the stall happens, the pressure distribution on the upper part of the airfoil becomes very erratic – it’s not only the surface <span><strong>pressure arrows</strong></span> that are changing rapidly, but the whole pressure field in that area is very disturbed.</p>
<p>Let’s bring in the velocity arrows and markers to get a better feel on what’s going on in that region:</p>


<p>At high angles of attack, the flow above the upper part of the airfoil becomes very complicated. If you <span>click</span><span>tap</span> in that region to drop a few markers, you’ll notice that the air is trapped in various swirling eddies that are eventually shed to fly away with rest of the flow.</p>
<p>We’re witnessing <a href="https://en.wikipedia.org/wiki/Flow_separation"><em>flow separation</em></a>, where the main part of the flow detaches from the surface and doesn’t follow its shape anymore. The interactions in the complicated flow right above the airfoil affect the pressure field, which then <em>decreases</em> <span><strong>lift</strong></span>.</p>
<p>There is a lot going on there, but to understand how these effects arise we have to talk about a property that affects the flow of every fluid: viscosity.</p>
<h2 id="viscosity">Viscosity<a href="https://ciechanow.ski/airfoil/#viscosity" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>You might have heard the term <a href="https://en.wikipedia.org/wiki/Viscosity"><em>viscosity</em></a> used to describe “thickness” of different liquids, with a classic example that contrasts the slowness of the flow of honey to the rapidness of the flow of water.</p>
<p>Viscosity is also a property of gasses like air, but before I describe this concept more formally, we’ll first build an intuitive understanding of what viscosity is and what it does to the flow of different fluids.</p>
<p>In the demonstration below, the fluid flows in from the left side, but note that the flow in the top half is faster than the flow in the bottom half, which is reflected by the different lengths of the arrows. Dragging the slider to the left decreases the <span><strong>viscosity</strong></span> of the fluid, and dragging the slider to the right increases <span><strong>viscosity</strong></span>:</p>


<p>While we can see some changes to the arrows as we move the slider around, you probably agree that, for this flow, the arrow-based visualization isn’t very rewarding. Let’s add the color-based <strong><span>visualization of speed</span></strong> distribution in this flow:</p>


<p>We can now see how <span><strong>viscosity</strong></span> blends the speed variation between different sections of the fluid. For highly <a href="#" onclick="fdm2_f0();return false;">viscous fluids</a>, this mixing behavior spreads very easily and the initially distinct velocities of the two layers average out quite rapidly.</p>
<p>At <a href="#" onclick="fdm2_f1();return false;">lower viscosity</a> these two layers with different speeds remain quite separated. If you make the viscosity <a href="#" onclick="fdm2_f2();return false;">low enough</a>, you may even notice that, after a while, the flow develops some interesting wave-like phenomena – we’ll get back to these soon.</p>
<p>All this mixing behavior may remind you of a <a href="https://en.wikipedia.org/wiki/Diffusion"><em>diffusion</em></a> process, where some quantity, like temperature or concentration, evens out over time. Let’s see some basic diffusion in action. In the simulation below, I filled half of the bottle with with <span><strong>red-dyed water</strong></span>, while the other half is filled with <span><strong>blue-dyed water</strong></span>. The slider lets you control the <span><strong>speed of time</strong></span>:</p>


<p>As <a href="#" onclick="bottle_f0();return false;">time passes</a>, the sharp difference between the two layer blends more and more to eventually completely disappear. Clearly, there is some similarity between the diffusion of differently <span><strong>colored</strong></span> <span><strong>dyes</strong></span> and the averaging of velocity that we’ve seen in the earlier example.</p>
<p>In our flow demonstrations, <span><strong>viscosity</strong></span> seemed to have controlled the diffusion of velocity. To define it more precisely, <span><strong>viscosity</strong></span> controls the diffusion of <a href="https://en.wikipedia.org/wiki/Momentum"><em>momentum</em></a>, which is a product of velocity <em>and</em> mass. The simplified fluids we’re looking at have more or less constant density, so each equally-sized parcel of those fluids has the same mass. Therefore, if it makes things easier for you, wherever you see the word momentum you can think of velocity, but in more complex scenarios these differences can matter.</p>
<p>Let me bring in the previous flow simulation one more time:</p>


<p>You’ve probably noticed that, as the flow moves to the right, the size of this blended region increases. When the regions of fluid with different momentums meet for the first time, they barely have any time to average out, and the blending is minimal. As time passes, these regions of fluid get to average out more, similarly to how two different layers of dyed water mix more over time.</p>
<p>However, as time is passing, these parcels also <em>keep moving</em>, and that stronger blending happens further to the right. The downstream regions had more time to mix and average out, so the visible thickness of the blended region on the right side is also larger.</p>
<p>With higher <span><strong>viscosity</strong></span>, the size of blended region grows much more quickly, which lets us be more precise about our working definition – <span><strong>viscosity</strong></span> controls the <em>rate</em> of the diffusion of momentum.</p>
<p>So far we’ve only observed flows with nicely separated horizontal layers, but <span><strong>viscosity</strong></span> averages momentum between <em>any</em> two regions of fluids. In the demonstration below, you can witness how <span><strong>viscosity</strong></span> affects a swirly motion of fluid in a <a href="https://en.wikipedia.org/wiki/Vortex"><em>vortex</em></a>:</p>


<p>Notice that with <a href="#" onclick="fdm4_f0();return false;">high viscosity</a> any differences in velocity are very quickly diluted out into nothing, but with <a href="#" onclick="fdm4_f1();return false;">low viscosity</a> the revolving motion can survive for quite a while.</p>
<p><span><strong>Viscosity</strong></span> has a damping or smoothing effect that makes it much harder to sustain any large variation in a velocity field. Let’s see how this affects the motion of objects in fluids of various viscosity. In the demonstration below, we’re tracking a velocity field close to a very <span><strong>thin plate</strong></span> put directly in the stream of an incoming fluid of adjustable <span><strong>viscosity</strong></span>:</p>


<p>With <a href="#" onclick="fdm5_f0();return false;">high viscosity</a>, there is a large region of slow down around the <span><strong>plate</strong></span> that regains its speed fairly quickly behind the object. At <a href="#" onclick="fdm5_f1();return false;">lower viscosity</a> that surrounding region is much smaller, but it extends much further behind the <span><strong>plate</strong></span>. For <a href="#" onclick="fdm5_f2();return false;">very low viscosity</a> we’re once again seeing some more unusual behavior that we’ll get back to in a minute.</p>
<p>From the dark colors we can easily see that right by the surface of the <span><strong>plate</strong></span> the fluid doesn’t move at all – it sticks to that surface. This velocity difference between the halted flow at the wall and the moving outer flow gets smoothed out over time by <span><strong>viscosity</strong></span>, similar to how it blended in the flow between two different layers of fluid.</p>
<p>As before, with higher <span><strong>viscosity</strong></span>, the velocity averaging process becomes more rapid, and the blended region becomes more widespread. This averaging effect doesn’t just alter the velocity of fluid, but it also affects the plate. In some sense, the <span><strong>viscosity</strong></span> also wants to make the velocity of the surface of the <span><strong>plate</strong></span> to be more like the velocity of the surrounding flow.</p>
<p>The viscosity makes the flow want to pull the <span><strong>plate</strong></span> with it, which creates a <a href="https://en.wikipedia.org/wiki/Shear_force"><em>shearing force</em></a> that tries to slide the surface of this object away. The net effect is that that viscosity creates additional drag known as <a href="https://en.wikipedia.org/wiki/Skin_friction_drag"><em>skin friction drag</em></a> that wants to slow down any object moving in it.</p>
<p>All of these effects underline why highly viscous fluids are “thick”. Viscosity not only quickly averages any local differences in velocity, which prevents those fluids from flowing easily, but it also represses motion of objects in those fluids – you’ve likely experienced the difficulty of moving a spoon through a jar of honey.</p>
<p>The flow of any fluid exhibits tiny, random disturbances. In fluids with high viscosity, these variations are very quickly dispersed, so their motion is rarely erratic. Fluids with low viscosity aren’t as effective at damping motion, and these disturbances can grow to create oscillatory patterns. We’ve seen glimpses of them in the previous simulations, but here is another example:</p>


<p>At lower viscosity the flow becomes <a href="#" onclick="fdm10_f0();return false;">quite wave-y</a>. Those <a href="https://en.wikipedia.org/wiki/Kelvin%E2%80%93Helmholtz_instability"><em>instabilities</em></a> happen at the border of regions of fluid with different velocities, like where the slow wake behind a plate is in contact with the fast external flow. In those regions, any tiny random intrusion of slower flow into the faster flow can get magnified and rolled over like a wave.</p>
<p>In our discussion of the motion of air around an airfoil, we’ve seen how the flow, the pressure field, and the shape of the body have effects on each other. These influences can be quite dynamic in nature, with distributions of velocity and pressure swinging back and forth in a never-ending fight for dominance.</p>
<p>In the demonstration below, we can see a more dramatic example of these battles, where, depending on the <span><strong>viscosity</strong></span>, the flow around a <span><strong>gray cube</strong></span> can take many different forms:</p>


<p>With very <a href="#" onclick="fdm9_f0();return false;">high viscosity</a>, the flow is completely stable, but as <a href="#" onclick="fdm9_f1();return false;">viscosity decreases</a>, it starts to regularly oscillate from side to side, <a href="https://en.wikipedia.org/wiki/Vortex_shedding"><em>shedding vortices</em></a> in the process. At <a href="#" onclick="fdm9_f2();return false;">very low viscosity</a>, the motion becomes even more erratic.</p>
<p>While I can’t easily simulate it here, with further decrease in viscosity, the flow <a href="https://www.youtube.com/watch?v=c8zKWaxohng">can develop</a> full featured <a href="https://en.wikipedia.org/wiki/Turbulence"><em>turbulence</em></a> in which highly irregular and chaotic mixing motions occur at different scales. Turbulent flow stands in contrast to <a href="https://en.wikipedia.org/wiki/Laminar_flow"><em>laminar flow</em></a>, in which neighboring areas of fluid move in an orderly way past each other without any varying fluctuations.</p>
<p>Although we’ve put most of our focus on <span><strong>viscosity</strong></span>, which is often denoted with the Greek letter <strong>μ</strong>, the general behavior of the flow also depends on its velocity <strong>u</strong>, density <strong>ρ</strong>, and the size <strong>L</strong> of the body or container involved in the flow. These parameters are tied together by the <a href="https://en.wikipedia.org/wiki/Reynolds_number"><em>Reynolds number</em></a> <strong>Re</strong>:</p>
<p>
Re = <span>
    <span>ρ · u · L</span>
    <span>/</span>
    <span>μ</span> 
</span>
</p>
<p>Flows with the same Reynolds numbers exhibit similar behavior, which means that if we make the obstacle size <strong>L</strong> twice as large and we halve the speed of the flow <strong>u</strong>, the Reynolds number won’t change and neither will the characteristics of the flow – it will exhibit the same smooth or oscillatory motion.</p>
<p>The Reynolds number also “predicts” the onset of turbulence. When we increase the speed of the flow <strong>u</strong>, or decrease the viscosity <strong>μ</strong>, the Reynolds number rises. When it reaches a high enough value, turbulence is likely to occur.</p>
<p>Let’s quantify the difference in viscosity between different fluids. The precise values aren’t that important to us, but to briefly be a bit more formal, viscosity is expressed in units of pascal-seconds, or <strong>Pa·s</strong>. To let us use more manageable numbers, the following table uses millipascal-seconds, or <strong>mPa·s</strong>:</p>
<table>
<tbody><tr><td>honey</td><td>~10000 <span>mPa·s</span></td></tr>
<tr><td>olive oil</td><td>~100 <span>mPa·s</span></td></tr>
<tr><td>water</td><td>1.0 <span>mPa·s</span></td></tr>
<tr><td>air</td><td>0.018 <span>mPa·s</span></td></tr>
</tbody></table>
<p>These values are measured at <span>68 °F</span><span>20 °C</span>, but many fluids like oil get much less viscous with increased temperature. As expected, honey is significantly more viscous than water. Compared to water, the viscosity of air is around 50 times less still, but even a very low viscosity has effects on flow and its interaction with solid walls.</p>
<p>To understand how viscosity arises in gasses like air, we have to once more get back to the world of particles. So far we’ve been watching them from a distance, with individual collisions barely perceptible in the moving swarm. This time we’re going take a closer look at these interactions.</p>
<p>In the demonstration below, you can experience a simplified simulation of <span><strong>two</strong></span> <span><strong>molecules</strong></span> colliding in space. Each molecule represents nitrogen or oxygen – these two elements constitute the vast majority of air, and, in normal conditions, each one consists of two atoms.</p>
<p>You can drag the <span><strong>orange particle</strong></span> around, and once you let go I’ll automatically aim it so that it hits the <span><strong>blue particle</strong></span>. The speed of the <span><strong>orange molecule</strong></span> is four times larger than the speed of the <span><strong>blue one</strong></span>:</p>

<p>Notice that after the collision, it’s the <span><strong>orange molecule</strong></span> that’s slow, and it’s the <span><strong>blue one</strong></span> that’s fast. In this demonstration the two particles have the same mass and they collide straight on, so they simply end up trading velocities.</p>
<p>More generally, particles of different masses that strike each other at different angles will exchange some amount of momentum. Recall that the heavier the particle, or the faster it moves, the higher its momentum.</p>
<p>Let’s see how this behavior ends up affecting the average velocities of larger quantities of molecules. In the <span><strong>paused</strong></span> demonstration below, air molecules are grouped into two different parts. The air in the <span><strong>blue region</strong></span> has higher velocity than the air in the <span><strong>red region</strong></span>, which you can see in the black arrows showing the <span><strong>average velocity</strong></span> in those regions. Notice what happens to <span><strong>these averages</strong></span> as you let <span><strong>time flow</strong></span> by dragging the slider:</p>



<p>At the very beginning, the <span><strong>average velocities</strong></span> in these <span><strong>two</strong></span> <span><strong>sections</strong></span> are visibly different, but they quickly even out when fast particles from the <span><strong>blue region</strong></span> flow into the slower <span><strong>red region</strong></span>, and the slower particles from the <span><strong>red region</strong></span> move into the faster <span><strong>blue region</strong></span>, balancing the initial velocity differences.</p>
<p>Moreover, some of the faster particles collide with slower particles in the <span><strong>red region</strong></span> and some of the slower particles collide with faster particles from <span><strong>above</strong></span>. The faster particles lose some of their higher momentum, while the slower particles gain some of the momentum. All of these effects “dilute” some of those average velocity differences between the two regions.</p>
<p>You may also remember that when we observed a flow of fluid around a flat plate, that fluid wasn’t moving at all right on the surface of that plate, because it was stuck to it. Let’s see how this behavior may arise on a microscopic scale.</p>
<p>In the demonstration below, we’re watching the familiar air particles right next to the <span><strong>surface of an object</strong></span>. To make tracking easier, I’m <span><strong>highlighting</strong></span> some of the particles in the vicinity of this <span><strong>surface</strong></span>:</p>


<p>When seen at a very large magnification, this <span><strong>surface</strong></span>, like almost all surfaces, isn’t perfectly smooth and has various peaks and valleys. The particles hitting these irregularities get bounced in more or less random directions. Some of the unlucky molecules can even get stuck for a while in these local crevices.</p>
<p>Close to the <span><strong>surface</strong></span>, the random collisions with peaks and valleys prevent the particles from making bulk progress in <em>any</em> direction. The average velocity of the air flow by the wall is more or less zero. Some molecular interactions between the particles and the <span><strong>surface</strong></span> can also prevent the fluid from moving.</p>
<p>This sticking behavior is known as the <a href="https://en.wikipedia.org/wiki/No-slip_condition"><em>no‑slip condition</em></a> and it holds true for most typical flows of fluids that we experience day to day. It’s only in extreme conditions of very rarified gasses in the upper parts of the atmosphere or flows in microscopic capillaries that can break this assumption.</p>
<p>Let’s leave the world of particles behind for the last time and see how these two effects play an important role of influencing the airflow close to the surface of any object.</p>
<h2 id="boundary-layer">Boundary Layer<a href="https://ciechanow.ski/airfoil/#boundary-layer" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>Let’s take another look at a <span><strong>thin plate</strong></span>  placed in the stream of incoming fluid:</p>

<p>From this broader perspective, it’s hard to see how the flow interacts with the surface of that <span><strong>plate</strong></span>, because the effects of viscosity are limited to the region close to that surface. Let’s focus our attention on the small area that I’ve outlined with a <span>dashed</span> line, right in the top part of the <span><strong>plate</strong></span>. Here it is zoomed up close:</p>

<p>We can once more see that, due to the no-slip condition, the velocity is zero at the <span><strong>wall</strong></span>, and then it <strong><span>grows to meet</span></strong> the velocity of the flow further away from the surface itself. What we’re seeing here is known as the <a href="https://en.wikipedia.org/wiki/Boundary_layer"><em>boundary layer</em></a>, which spans the region between the <span><strong>surface</strong></span> of the object and the “outer” flow, which is mostly unaffected by the presence of the object.</p>
<p>Because the velocity in the boundary layer smoothly approaches the speed of the outer flow, it doesn’t have a well-defined end point. One of the choices is to agree that the boundary layer ends where the speed reaches 99% of the speed of the surrounding flow far away from the <span><strong>solid surface</strong></span>. Let me visualize this boundary in the flow using a <span><strong>dashed line</strong></span>:</p>

<p>As we move with the flow along the distance of the plate, the viscosity keeps averaging out the velocity differences, making the boundary layer thicker – this is similar to what we’ve seen at larger scales with highly viscous flows around objects.</p>
<p>Let’s quantify the distribution of speed in the boundary layer a little more precisely. In the demonstration below, I put the velocity arrows back in. I then connected the ends of these arrows with a thin line to show a <em>profile</em> of velocity at that location along the <span><strong>surface</strong></span>:</p>

<p>Notice that, initially, the velocity close to the wall increases almost linearly, but then it smoothly tapers to reach the speed of the external flow. The velocity profile close to the surface has a certain steepness, which I’m showing with the <span><strong>white dotted line</strong></span>. This line determines the amount of skin friction drag at that spot – the closer to the <span><strong>surface</strong></span>, or more horizontal, the <span><strong>line</strong></span> is, the higher the skin drag.</p>
<p>As the differences in velocity become less severe, the force with which viscosity wants to drag the surface with the flow also decreases. In the conditions present in the demonstration, the skin friction drag decreases over distance.</p>
<p>At this point you hopefully have an intuitive grasp of how viscosity affects the flow close to the surface of the object. From our earlier discussion, you may also remember that pressure differences also affect how the flow behaves, with parcels of air slowing down when climbing the hill of <strong><span data-color0="3F90CD" data-color1="dddddd" data-color2="E5432E">increasing pressure</span></strong> and accelerating on the downhill of the <strong><span data-color0="E5432E" data-color1="dddddd" data-color2="3F90CD">decreasing pressure</span></strong>.</p>
<p>In the boundary layer flows we played with, the pressure distribution was more or less constant in the investigated region. Let’s see how the flow changes when we vary that pressure.</p>
<p>In the top part of the demonstration below we see the exact same view of velocity we’ve experimented with so far. In the bottom part of the demonstration below you can see the pressure distribution in the boundary layer, which you can change using the slider below.</p>


<p>If the pressure <a href="#" onclick="boundary4_f0();return false;">decreases</a> in the direction of the flow in the boundary layer, we say that the pressure gradient is <em>favorable</em>. <strong><span data-color0="E5432E" data-color1="dddddd" data-color2="3F90CD">Favorable pressure gradient</span></strong> accelerates the air, and the boundary layer doesn’t grow as quickly, since the slowdown caused by viscosity is opposed by that acceleration.</p>
<p>When the pressure <a href="#" onclick="boundary4_f1();return false;">increases</a> in the direction of the flow, we say that the pressure gradient is <em>adverse</em>. <strong><span data-color0="3F90CD" data-color1="dddddd" data-color2="E5432E">Adverse pressure gradient</span></strong> pushes <em>against</em> the direction of motion of the air. Far away from the <span><strong>surface</strong></span>, the air has enough momentum that the adverse pressure merely slows the flow down. However, close to the <span><strong>surface</strong></span>, the flow in the boundary layer was slow in the first place, so a pushing <strong><span data-color0="3F90CD" data-color1="dddddd" data-color2="E5432E">adverse pressure gradient</span></strong> may even reverse the direction of the flow.</p>
<p>When the flow in the boundary layer gets reversed, we say that the boundary layer <em>separates</em>. This region of reversed flow can form a sort of wedge that can lift the rest of the flow away from the <span><strong>surface</strong></span>.</p>
<p>Let’s take a step back from the subtleties of boundary layers to see how what we’ve learned corresponds to behavior of a flow around an airfoil. Let me once more bring up the demonstration that brought us here in the first place:</p>


<p>As we move across the surface of the airfoil, the <span><strong>high pressure</strong></span> at the stagnation point up front gradually decreases to reach <span><strong>minimum</strong></span> close to the “peak” of that curved surface. Across this transition the <strong><span data-color0="E5432E" data-color1="dddddd" data-color2="3F90CD">pressure gradient is favorable</span></strong>, and that distribution works in our favor – the boundary layer stays nicely attached to the surface.</p>
<p>However, as the air reaches the valley of the <span><strong>lowest pressure</strong></span>, it then has to start climbing back up to reach the <span><strong>slightly positive</strong></span> pressure in the rear of the airfoil. For <a href="#" onclick="symmetric_airfoil_fvm24a_f0();return false;">small values</a> of the  <span><strong>angle of attack</strong></span>, the pressure pit from which the air has to climb out is not very deep and the <strong><span data-color0="3F90CD" data-color1="dddddd" data-color2="E5432E">adverse pressure gradient</span></strong> isn’t very strong, so the boundary layer remains attached.</p>
<p>As we <a href="#" onclick="symmetric_airfoil_fvm24a_f1();return false;">increase</a> the <span><strong>angle of attack</strong></span> of the airfoil, the pressure on top becomes <span><strong>lower</strong></span> and <span><strong>lower</strong></span>. For even <a href="#" onclick="symmetric_airfoil_fvm24a_f2();return false;">higher angles</a>, the <strong><span data-color0="3F90CD" data-color1="dddddd" data-color2="E5432E">adverse pressure gradient</span></strong> becomes so strong that it  <a href="#" onclick="symmetric_airfoil_fvm24a_f3();return false;">eventually</a> reverses the flow in the boundary layer, creating separation. Let’s look at this region up close to see how the arrows of velocity in the separated region point in the other direction:</p>

<p>If you <span>click</span><span>tap</span> to add <strong>markers</strong> in the bottom right corner of the simulation you’ll notice that many of them move <em>against</em> the bulk of the flow – the boundary layer and the flow have separated.</p>
<p>We’ll get back to looking at airfoils soon enough, but we still have a few things to wrap up in the world of boundary layers.</p>
<p>The boundary layers we’ve looked at so far were <em>laminar</em> – the layers of fluid with different velocities flowed in an orderly way on top of each other. However, at higher flow speeds and over larger distances, or at high Reynolds numbers, the flow in the boundary layer transitions to a <em>turbulent</em> flow:</p>

<p>Be aware that what you’re seeing here is a very simplified simulation of a turbulent boundary layer. Turbulence is inherently three dimensional and it contains various evolving structures of different sizes that are extremely computationally expensive to evaluate in detail. Thankfully, you can find many videos of <a href="https://www.youtube.com/watch?v=Wr984EOmNaY">computer</a> <a href="https://www.youtube.com/watch?v=wXsl4eyupUY">simulations</a> and <a href="https://www.youtube.com/watch?v=e1TbkLIDWys">real flows</a> showing turbulent boundary layers.</p>
<p>While the laminar boundary layers we’ve seen in the past exhibited very organized flows, the turbulent one is very chaotic, with large and small swirls causing the flow to mix very rapidly. The transition from laminar to turbulent boundary layer happens spontaneously, but for a given flow speed, the location of the transition depends on surface roughness, steadiness of the flow outside of the boundary layer, and presence of pressure gradients.</p>
<p>At any given moment, the velocity profile in the turbulent boundary layer is very unsteady, but it can be averaged over time to get the mean distribution of speed. Let’s compare the <em>time-averaged</em> profiles of the <span><strong>laminar</strong></span> and <span><strong>turbulent</strong></span> boundary layers:</p>

<p>In the dynamic simulation of the <span><strong>turbulent</strong></span> boundary layer, we saw how the slower flow close to the <span><strong>surface</strong></span> rapidly mixed with the upper regions of the flow. This slows down those faster sections, and we need to go farther away from the <span><strong>surface</strong></span> for these sluggish intrusions to stop affecting the flow. For this reason, the <span><strong>turbulent</strong></span> boundary layer is thicker and grows faster than a <span><strong>laminar</strong></span> boundary layer.</p>
<p>On the other hand, the strong <span><strong>turbulent</strong></span>  mixing causes the fast external flow to get close to the body, so the overall velocity profile by the <span><strong>surface</strong></span> increases much more quickly in the <span><strong>turbulent</strong></span> case as opposed to <span><strong>laminar</strong></span> case – I’m showing that with <span><strong>white dotted lines</strong></span>.</p>
<p>Recall that the more horizontal the velocity profile at the <span><strong>surface</strong></span> of the object, the bigger the skin friction drag – a <span><strong>turbulent</strong></span>  boundary layer has higher skin friction drag than a <span><strong>laminar</strong></span> layer. Despite the cost of increased friction drag, a <span><strong>turbulent</strong></span>  boundary layer is often beneficial.</p>
<p>Because of that higher velocity closer to the surface, a turbulent boundary layer is more resistant to <strong><span data-color0="3F90CD" data-color1="dddddd" data-color2="E5432E">adverse pressure gradients</span></strong> and it can stay attached to the surface of an object for longer distances.</p>
<p>For some objects like golf balls, which purposefully make their boundary layer turbulent by roughing up the surface with little dimples, the delayed separation also decreases the <span><strong>pressure drag</strong></span> caused by uneven pressure distribution. That reduction more than compensates for the increased skin friction drag, making the dimply golf balls fly farther than equivalent smooth balls.</p>
<p>For airfoils, a turbulent boundary layer delays separation of the flow, which can help prevent stall at higher angles of attack, but at normal cruising conditions the increased skin friction becomes an important drawback. For many aerodynamic shapes in typical conditions, the skin friction frag is the primary contributor to the total drag that these objects experience.</p>
<p>As we’ve seen, by increasing the angle of attack on an airfoil, the lift force grows up to a certain limit, at which the boundary layer separates over most of the upper surface. By staying under this limit, a symmetric airfoil can safely generate lift force.</p>
<p>However, when it comes to  <span><strong>angle of attack</strong></span> and <span><strong>lift</strong></span>, the shape of an airfoil isn’t particularly unique in its <span><strong>lift</strong></span>-creation capabilities. Most simple elongated shapes generate <span><strong>lift</strong></span> when put in a flow at an  <span><strong>angle of attack</strong></span>. In the demonstration below, you can <span><strong>tilt</strong></span> a <span><strong>flat plate</strong></span> and see the forces exerted by the pressure field around it:</p>


<p>You may be surprised to see that, at small  <span><strong>angles of attack</strong></span>, this flat plate also generates <span><strong>lift</strong></span>. An airfoil-like shape is not a requirement for <span><strong>lift</strong></span> generation. After all, paper airplanes with their flat wings can fly just fine. <span><strong>Lift</strong></span> is just an outcome of the pressure distribution created and sustained by the flow.</p>
<p>Although it doesn’t take a sophisticated shape to generate lift at an angle of attack, a well-designed airfoil can often create more lift and with lower drag. In the last section of this article, we’ll explore how other variations to the shape of an airfoil can affect its characteristics.</p>
<h2 id="airfoil-shapes">Airfoil Shapes<a href="https://ciechanow.ski/airfoil/#airfoil-shapes" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>Let’s go back to the simple symmetric airfoil we’ve been playing with thus far. This time, however, we’re able to control its <span><strong>thickness</strong></span> using the slider:</p>


<p>Notice that as we increase the <span><strong>thickness</strong></span> of the airfoil, the pressure on the top and bottom sections of the shape becomes more <span><strong>negative</strong></span>. For this symmetric airfoil at 0° angle of attack the thickness doesn’t change much other than increasing the <span><strong>pressure drag</strong></span>.</p>
<p>However, if we break the symmetry of the shape, we can use thickness-dependence to make one side of the airfoil have a higher <span><strong>negative</strong></span> pressure than the other. In the demonstration below, you can control the “thickness” of the upper surface of the airfoil using the slider:</p>


<p>Notice that an asymmetric shape creates an asymmetric pressure distribution, which ends up creating <span><strong>lift</strong></span> without any changes to angle of attack. With some slight tweaking of this shape we finally recreated the asymmetric shape we first saw on the airplane in the early sections of this article.</p>
<p>Naturally, when combined with an increasing <span><strong>angle of attack</strong></span>, this airfoil will generate even more <span><strong>lift</strong></span> until it eventually reaches stalling conditions:</p>


<p>While symmetric airfoils are sometimes used in acrobatic airplanes, which often find themselves flying upside down, most typical planes use an asymmetric airfoil shape.</p>
<p>The underlying mechanism of <span><strong>lift</strong></span> generation by changing the <span><strong>angle of attack</strong></span> or by shaping the object differently is ultimately the same – we’re changing the placement and orientation of the surface of the body relative to the incoming flow. The flow reacts by changing the velocity and pressure distribution, and the resulting pressure field creates the forces on that object.</p>
<p>This all means that we have a lot of flexibility in how an airfoil is shaped, as long as the resulting pressure distribution fulfills the design goals of achieving a certain amount of lift while minimizing drag.</p>
<p>For example, in some applications it’s important to minimize the skin friction drag caused by a turbulent boundary layer. Some <em>laminar flow airfoils</em> achieve this by shaping the airfoil to move the “pit” of <span><strong>negative pressure</strong></span> further to the back of the airfoil:</p>


<p>The <strong><span data-color0="E5432E" data-color1="dddddd" data-color2="3F90CD">favorable pressure gradient</span></strong> between the front and the lowest pressure point extends over a longer distance across the surface of this airfoil, which, at least in principle, helps to keep the boundary layer laminar to keep the skin friction low.</p>
<p>Notice that even this unusual airfoil had a rounded front and a sharp back. The roundness of the front helps the air smoothly flow around this area at different  <span><strong>angles of attack</strong></span>, and the sharp back reduces the pressure drag by avoiding the separation of the flow.</p>
<p>The velocity of the flow around the airfoil is also a contributing factor to the design of the shape. Let’s look at the speed distribution in the flow around a simple asymmetric airfoil using the <strong><span>varying colors</span></strong> and <strong>markers</strong>:</p>


<p>The flow above the airfoil is faster than the incoming flow as indicated by brighter colors. The markers that start in the same line don’t end up sliding off the airfoil in the same formation – the ones on top are further ahead. This is particularly visible for <a href="#" onclick="airfoil_fvm3_f0();return false;">larger</a> values of the <span><strong>angles of attack</strong></span>.</p>
<p>This acceleration in the upper part becomes another point of consideration for airfoil design. While commercial airliners don’t fly faster than the speed of sound, the accelerated flow in the top part of an airfoil <em>can</em> break that barrier. This creates a shockwave that can sometimes be <a href="https://www.youtube.com/watch?v=HekbC6Pl4_Y">seen in flight</a>. Modern airliners use <a href="https://en.wikipedia.org/wiki/Supercritical_airfoil">supercritical airfoils</a> that are designed to reduce these drag-causing shockwaves by carefully controlling the speed of the flow around the wing.</p>
<p>Planes designed to fly <em>above</em> the speed of sound use <a href="https://en.wikipedia.org/wiki/Supersonic_airfoils"><em>supersonic airfoils</em></a> that are quite different from the shapes we’ve seen. These airfoils have a thin profile and their front edge is sharp and not rounded. <a href="https://en.wikipedia.org/wiki/Supersonic_speed"><em>Supersonic</em></a> flows of air are more complicated than what we’ve explored in this article, as variations in density and temperature become an important component of the behavior of the flow.</p>
<p>Many of the airfoils used today are designed specifically for the plane they’ll be used in. Moreover, that cross-sectional shape may change across the length of the wing. Real airplanes are three dimensional and the <a href="https://en.wikipedia.org/wiki/Wing_configuration">overall shape of the wings</a> also significantly affects the lift and drag of an airplane, but ultimately all the resulting forces are an outcome of interactions between the flow and the body.</p>
<h2 id="further-reading-and-watching">Further Reading and Watching<a href="https://ciechanow.ski/airfoil/#further-reading-and-watching" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>John Anderson’s <a href="https://www.mheducation.com/highered/product/fundamentals-aerodynamics-anderson/1264151926.html">Fundamentals of Aerodynamics</a> is a very well-written textbook on aerodynamics. Over the course of over a thousand pages, the author presents a classic exposition of the motion of fluids and their interactions with bodies put in those flows.</p>
<p><a href="https://www.wiley.com/en-us/Understanding+Aerodynamics%3A+Arguing+from+the+Real+Physics-p-9781119967514">Understanding Aerodynamics</a> by Doug McLean is a great textbook that takes a different approach of explaining aerodynamic phenomena using physical reasoning. For me, the crowning achievement of the publication is showing that many popular explanations of the origins of lift are either incorrect or they’re based on merely mathematically convenient theorems. The author’s <a href="https://www.youtube.com/watch?v=QKCK4lJLQHU">video lecture</a> gives an overview of some of these misconceptions.</p>
<p>In this article, I’m using <a href="https://en.wikipedia.org/wiki/Computational_fluid_dynamics"><em>computational fluid dynamics</em></a> to simulate the flow of air around different objects. For an approachable introduction to these methods I enjoyed Tony Saad’s <a href="https://www.youtube.com/playlist?list=PLEaLl6Sf-KIC7oet7zvNfW03aocrIq-s4">series of lectures</a> on the topic. For an alternative, and slightly more rigorous approach, Lorena Barba created <a href="https://lorenabarba.com/blog/cfd-python-12-steps-to-navier-stokes/">12 steps to Navier-Stokes</a>. That website is also accompanied by <a href="https://www.youtube.com/playlist?list=PL30F4C5ABCE62CB61">video lectures</a>.</p>
<p>Finally, YouTuber <a href="https://www.youtube.com/@braintruffle/videos">braintruffle</a> created a series of <a href="https://www.youtube.com/playlist?list=PLMoTR49uj6ld32zLVWmcGXaW7w2ey7Vh4">beautiful videos</a> that start with the behavior of fluids on a quantum scale and build up increasingly abstract models that can be used in more practical applications. The videos are packed with interesting takes on fluid mechanics, and they’re worth watching for their visuals alone.</p>
<h2 id="final-words">Final Words<a href="https://ciechanow.ski/airfoil/#final-words" arialabel="Anchor"><img src="https://ciechanow.ski/images/anchor.png" width="16px" height="8px"></a> </h2>
<p>If you were to sit on a flying airplane and look out the window to glance at its wings, you’d often have a hard time seeing anything going on. However, in that crisp clearness of air whose invisible flow sustains the varied pressure field, lies the hidden source of lift that overcomes the might of gravity to keep the plane safely above the ground.</p>
<p>Since the first human flight, we’ve now mastered the art of soaring in the skies by bending the flow of air to our will, using physical quantities like pressure and velocity to help shape our designs. These tangible concepts are ultimately just a manifestation of motions and collisions of billions of inanimate air particles that somehow conspire to assemble the forces we need.</p>
<p>I hope this deeper, technical exploration of airfoils hasn’t diminished your appreciation of the greatness of flight. Perhaps paradoxically, by seeing how all the pieces fit together, you’ll find the whole thing even more magical.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Testing the F-35C Tailhook (374 pts)]]></title>
            <link>https://the-engi-nerd.github.io/posts/welcome/</link>
            <guid>39525243</guid>
            <pubDate>Tue, 27 Feb 2024 15:32:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://the-engi-nerd.github.io/posts/welcome/">https://the-engi-nerd.github.io/posts/welcome/</a>, See on <a href="https://news.ycombinator.com/item?id=39525243">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="quarto-content">
<!-- sidebar -->
<!-- margin-sidebar -->
    
<!-- main -->
<main id="quarto-document-content">





<p>Welcome to the blog. As a way to kick things off, here’s a single-page version of my thread on the F-35C tailhook.</p>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-270015806.png"></p>
<p>The primary source for material here, aside from my own experiences, is “F-35C Carrier Suitability Testing” by Tony “Brick” Wilson, who gives us one of the greatest flexes in an AIAA paper I’ve ever seen.</p>
<div>
<figure>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-3796555614.png" width="800"></p>
</figure>
</div>
<p>The F-35C is the variant of the F-35 Joint Strike Fighter intended for use on CATOBAR (Catapult Assisted TakeOff, Barrier Assisted Recovery) aircraft carriers operated by the United States Navy. Aircraft are launched via steam or electromagnetic catapults, and on landing, the aircraft uses a tailhook to engage an arresting wire.</p>
<p>The F-35C hook is stowed in a bay that’s covered by clamshell doors during flight. The hook is electronically controlled and moved by hydraulics. And originally, it didn’t work.</p>
<div>
<figure>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-2200776526.png" width="500"></p>
</figure>
</div>
<p>We began serious carrier suitability testing with F-35C at Lakehurst NAS in the summer of 2011. We would hold our briefings in the same hangar that the Hindenburg was trying to reach when it crashed. This is a level of irony that took zoomers another ten years to reach.</p>
<div>
<figure>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-1904785528.png"></p>
</figure>
</div>
<p>After things like Jet Blast Deflector compatibility testing, we get down to testing the hook. Brick tells us, in a masterful understatement:</p>
<div>
<figure>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-4221285650.png"></p>
</figure>
</div>
<p>I was at Lakehurst for most of this testing and I never saw the hook engage the wire. It was interesting to see it play out this way. I heard it predicted first, by, of all people, one of our instrumentation technicians on November 6, 2010 That was the day CF-01 arrived at Pax. We went to look at the jet. I remember standing with this tech, looking at the hook.</p>
<p>“Boss,” he says to me, “This fucker ain’t gonna work. Look at this thing. It’s short, it’s too close to the wheels, and look at this dumbass hook shoe they got on it. If the wire don’t hit it exactly right, it’s just gonna go under the hook and you’ll bolter.”</p>
<p>The hook point is only a little over 7 feet from the main landing gear axle center. The amount of space in the airframe available is extremely tight, so this is what the designers had to work with.</p>
<p>Here’s pretty much what we were looking at in this conversation. <img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-4283089921.png"> Why was it like this?</p>
<p>Because the engineers at Northrop Grumman engineered to a computer model that can simulate how an arresting wire acts when used for arrestment, and the model was wrong.</p>
<p>I heard years later in the course of my job verifying and validating other F-35 simulations that the wire dynamics model supplied by the Navy had not been properly V&amp;V’d.&nbsp;I don’t know this for sure. However it happened, the model led to a design that didn’t work.</p>
<p>To understand <em>how</em> it didn’t work, back to Brick’s article. When an aircraft performing an arrestment lands, its main and/or nose tires hit the wire first. This starts a wave in the wire that moves away from the tire. Here’s an example, the nose gear has just hit the wire.</p>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-2195312844.png"></p>
<p>Now the aircraft continues to move forward. We have a wave propagating in both directions along the wire, causing the wire to lay mostly flat against the deck. <img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-3079080065.png"> The wire dynamics model said that what should happen next is that the wire rebounds off the deck. But what actually happened is that the wire stayed down and the hook skips over the wire. <img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-1366193013.png"> What isn’t shown is how FAST the hook would rebound into the jet. The readings were so high that the test team believed the accelerometer measuring hook up-swing was broken, but it wasn’t.</p>
<p>We tried, and tried, and tried over and over again to get the hook to work. While we were at Lakehurst, the program had a few days where we were forbidden from flying due to an IPP issue, but we kept trying roll-in arrestments at slower and slower speeds. None were successful. The hook kept rebounding at very high angular accelerations, damaging our very fragile tailhook instrumentation.</p>
<p>Many of my memories of August 2011 are of sitting on the concrete floor of a clamshell near the old F-8/F-14 engineering building, cleaning up damaged wiring and tediously calibrating rotational position sensors on the tailhook. All usually done late at night.</p>
<p>Hurricane Irene came through late in the month and made a direct line for us at Lakehurst. I came in to work one morning only to turn around and go back to my hotel and leave for home; the jet was sent back to PAX, ending our frustrating trials.</p>
<p>It was clear that the hook needed a redesign. The new hook has much stronger hold down damper, an all new damper for the upstroke, a better lateral limiter, and improved instrumentation that didn’t break on every arrestment. Here’s the new hook:</p>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-1416251102.png"></p>
<p>We also got an all new hook shoe! This one looks much more like a scoop, to catch the wire even if it’s down low on the deck. The new hook profile in red, old in blue, the arresting cable shown in purple:</p>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-1418549673.png"></p>
<p>Now, program note: for personal circumstances, I left the F-35 program entirely in mid 2012 only to return a little less than two years later to the same job. So I wasn’t there to see this in 2013:</p>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-3587626872.png"></p>
<p>The story most definitely does NOT end here though, because we had much struggle to go. We kept having issues with the bearing that the pitch pivot pin sits within. The pin is supposed to last at least 25 arrestments, but we were getting 1-2 before the pin sleeve would gall. We had a position sensor in that pin/sleeve to directly tell the control room the hook angular position during test, and all this pivot pin replacement meant I and a few other engineers spent a LOT of time working on CF-03’s tailhook.</p>
<p>During my years on the F-35 flight test program, I usually worked night shift engineering. Night shift had next to no meetings, it was pure flight support, problem solving, and performing instrumentation preflights for the next day’s test. Me and another engineer almost always worked together on the mission systems jets. CF-03 and its tailhook (as well as its launch bar and gear) instrumentation needed so much care and feeding that one of us would work just on CF-03. The other would take both BF-04 and BF-05.</p>
<p>We worked out some tricks for being able to replace a pitch pivot pin without having to re-perform a synchro (rotational position sensor) calibration. Why? because new calibrations mean new instrumentation projects, which took several days and required a display check. Engineers, saving your program time and money out of the sheer laziness of not wanting to make a new XML format for an instrumentation project. This is how progress is made in the world, I guess. Most of 2015 saw me paying more attention to instrumentation project efficiency (something that, I am pleasantly surprised to see, gets a 1 paragraph mention in “From Concept to Cockpit”) but in 2016 I returned to Lakehurst with CF-03 to perform the trickiest tailhook tests.</p>
<p>We were doing tests with full external weapons (modulo not having AIM-9X on the outer wing stations…the wing structure needed a fix) and trying for off-center arrestments.</p>
<p>One cloudy day in May 2016 we try for an arrestment as far off centerline as we can go.</p>
<p>Here’s the story of that day.</p>
<p>I am sitting in something called the MITS (Mobile Instrumentation/Telemetry System). It’s literally a giant 18 wheeler trailer the Navy made that’s a mini control room. I am watching my instrumentation health screen and listening to the test audio, while watching the video on a television in the trailer.</p>
<p>An F-35C coming in for landing is usually at about 11 to 13 degrees nose high so that when it hits the carrier deck, it looks something like this:</p>
<p><img src="https://the-engi-nerd.github.io/posts/welcome/images/clipboard-2481399230.png"></p>
<p>Everything seems normal at first. I hear our pilot call the ball. But then I see on the screen that he’s actually coming in almost flat, and sinking like a stone. I expect to hear “WAVE OFF” from the fellow pilot monitoring him on the ground, acting as the Landing Signal Officer. I don’t hear that. And horrified, I watch on the video screen as the F-35 hits the ground with all three tires at once, then bounces off the runway, hits the runway again. The control room is full of engineers muttering curses under their breaths and staring at their screens.</p>
<p>Through the hotmic channel we have recording everything our pilot says and hears, I hear him yell “FUCK!” but he keeps control somehow and gets back in the air. “Lightning seven three is airborne, going back around” he says on the radio. Someone in the control room says hat we have violated a flight test continuation criterion: we hit so hard that all the landing gear bottomed out. The lead test engineer gets on the radio and says “We need a gentle flared landing.” The pilot replies, “My body needs a gentle flared landing.”</p>
<p>Fortunately, once we come back around for a conventional landing, there is no further difficulty. But now, the post-flight debrief we we have to talk about what happened and decide what to do next.</p>
<p>An immediate review of the data shows that the landing was at such a high sink rate that it is as if we have taken the F-35C and dropped it from a height of 20 feet. We hit almost entirely flat, just 2 degrees angle of attack.</p>
<p>It turns out that somehow the fresnel lens optical landing system (FLOLS) we are using was not set properly. Thus when the pilot thought he was flying on glideslope, he was flying a much too steep path. The LSO did not realize what was happening until it was too late.</p>
<p>Much consultation has to be done with the leaders of the program at Fort Worth. The day is late, the jet is impounded by the crew chief and no one is to work on it until formal inspection criteria are created. They arrive the next morning in my email, 200+ steps that I must conduct just on my flight test instrumentation hardware. Other maintainers and engineers have their own thick inspection stacks. It takes three days. We discover that we need new landing gear, but that can’t happen at Lakehurst. ortunately it looks like the gear is good enough to support one more takeoff/landing cycle, so back to PAX it goes. The program decides to officially stop trying to chase the off-center arrrestments and wire only arrestments.</p>
<p>Thus ends the tailhook test saga.</p>



</main> <!-- /main -->

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I built an open-source data copy tool called ingestr (128 pts)]]></title>
            <link>https://github.com/bruin-data/ingestr</link>
            <guid>39525071</guid>
            <pubDate>Tue, 27 Feb 2024 15:18:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/bruin-data/ingestr">https://github.com/bruin-data/ingestr</a>, See on <a href="https://news.ycombinator.com/item?id=39525071">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto">
    <p><a target="_blank" rel="noopener noreferrer" href="https://github.com/bruin-data/ingestr/blob/main/resources/ingestr.svg?raw=true"><img src="https://github.com/bruin-data/ingestr/raw/main/resources/ingestr.svg?raw=true" width="500"></a></p><p dir="auto">Ingest &amp; copy data from any source to any destination without any code</p>
    <p><a target="_blank" rel="noopener noreferrer" href="https://github.com/bruin-data/ingestr/blob/main/resources/demo.gif?raw=true"><img src="https://github.com/bruin-data/ingestr/raw/main/resources/demo.gif?raw=true" width="750" data-animated-image=""></a>
</p></div>
<p><a href="https://join.slack.com/t/bruindatacommunity/shared_invite/zt-2dl2i8foy-bVsuMUauHeN9M2laVm3ZVg" rel="nofollow">
    <img src="https://camo.githubusercontent.com/ea115899fa0532d5780c65e501a59037a95ccf3d84985b8cf89ab73eb4ee3800/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e2d646c742e7376673f636f6c6f723d643935663566266c6f676f3d736c61636b" data-canonical-src="https://img.shields.io/badge/slack-join-dlt.svg?color=d95f5f&amp;logo=slack">
  </a>
</p>
<hr>
<p dir="auto">Ingestr is a command-line application that allows you to ingest data from any source into any destination using simple command-line flags, no code necessary.</p>
<ul dir="auto">
<li>✨ copy data from your database into any destination</li>
<li>➕ incremental loading: <code>append</code>, <code>merge</code> or <code>delete+insert</code></li>
<li>🐍 single-command installation</li>
</ul>
<p dir="auto">ingestr takes away the complexity of managing any backend or writing any code for ingesting data, simply run the command and watch the data land on its destination.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Quickstart</h2><a id="user-content-quickstart" aria-label="Permalink: Quickstart" href="#quickstart"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ingestr ingest \
    --source-uri 'postgresql://admin:admin@localhost:8837/web?sslmode=disable' \
    --source-table 'public.some_data' \
    --dest-uri 'bigquery://<your-project-name>?credentials_path=/path/to/service/account.json' \
    --dest-table 'ingestr.some_data'"><pre>ingestr ingest \
    --source-uri <span><span>'</span>postgresql://admin:admin@localhost:8837/web?sslmode=disable<span>'</span></span> \
    --source-table <span><span>'</span>public.some_data<span>'</span></span> \
    --dest-uri <span><span>'</span>bigquery://&lt;your-project-name&gt;?credentials_path=/path/to/service/account.json<span>'</span></span> \
    --dest-table <span><span>'</span>ingestr.some_data<span>'</span></span></pre></div>
<p dir="auto">That's it.</p>
<p dir="auto">This command will:</p>
<ul dir="auto">
<li>get the table <code>public.some_data</code> from the Postgres instance.</li>
<li>upload this data to your BigQuery warehouse under the schema <code>ingestr</code> and table <code>some_data</code>.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Documentation</h2><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto">You can see the full documentation <a href="https://bruin-data.github.io/ingestr/getting-started/quickstart.html" rel="nofollow">here</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Community</h2><a id="user-content-community" aria-label="Permalink: Community" href="#community"></a></p>
<p dir="auto">Join our Slack community <a href="https://join.slack.com/t/bruindatacommunity/shared_invite/zt-2dl2i8foy-bVsuMUauHeN9M2laVm3ZVg" rel="nofollow">here</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Supported Sources &amp; Destinations</h2><a id="user-content-supported-sources--destinations" aria-label="Permalink: Supported Sources &amp; Destinations" href="#supported-sources--destinations"></a></p>
<table>
<thead>
<tr>
<th>Database</th>
<th>Source</th>
<th>Destination</th>
</tr>
</thead>
<tbody>
<tr>
<td>Postgres</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>BigQuery</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Snowflake</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Redshift</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Databricks</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>DuckDB</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Microsoft SQL Server</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Local CSV file</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Oracle</td>
<td>✅</td>
<td>❌</td>
</tr>
<tr>
<td>SQLite</td>
<td>✅</td>
<td>❌</td>
</tr>
<tr>
<td>MySQL</td>
<td>✅</td>
<td>❌</td>
</tr>
</tbody>
</table>
<p dir="auto">More to come soon!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgements</h2><a id="user-content-acknowledgements" aria-label="Permalink: Acknowledgements" href="#acknowledgements"></a></p>
<p dir="auto">This project would not have been possible without the amazing work done by the <a href="https://www.sqlalchemy.org/" rel="nofollow">SQLAlchemy</a> and <a href="https://dlthub.com/" rel="nofollow">dlt</a> teams. We relied on their work to connect to various sources and destinations, and built <code>ingestr</code> as a simple, opinionated wrapper around their work.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Mountaineer – Webapps in Python and React (117 pts)]]></title>
            <link>https://github.com/piercefreeman/mountaineer</link>
            <guid>39524874</guid>
            <pubDate>Tue, 27 Feb 2024 14:59:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/piercefreeman/mountaineer">https://github.com/piercefreeman/mountaineer</a>, See on <a href="https://news.ycombinator.com/item?id=39524874">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/piercefreeman/mountaineer/blob/main/docs/media/header.png"><img src="https://github.com/piercefreeman/mountaineer/raw/main/docs/media/header.png" alt="Mountaineer Header"></a></p>
<p dir="auto"><i>Move fast. Climb mountains. Don't break things.</i></p>
<p dir="auto">Mountaineer 🏔️ is a framework to easily build webapps in Python and React. If you've used either of these languages before for development, we think you'll be right at home.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Main Features</h2><a id="user-content-main-features" aria-label="Permalink: Main Features" href="#main-features"></a></p>
<p dir="auto">Each framework has its own unique features and tradeoffs. Mountaineer focuses on developer productivity above all else, with production speed a close second.</p>
<ul dir="auto">
<li>📝 Typehints up and down the stack: frontend, backend, and database</li>
<li>🎙️ Trivially easy client&lt;-&gt;server communication, data binding, and function calling</li>
<li>🌎 Optimized server rendering for better accessibility and SEO</li>
<li>🏹 Static analysis of web pages for strong validation: link validity, data access, etc.</li>
<li>🤩 Skip the API or Node.js server just to serve frontend clients</li>
</ul>
<blockquote>
<p dir="auto">We built Mountaineer out of a frustration that we were reinventing the webapp wheel time and time again. We love Python for backend development and the interactivity of React for frontend UX. But they don't work seamlessly together without a fair amount of glue. So: we built the glue. While we were at it, we embedded a V8 engine to provide server-side rendering, added conventions for application configuration, built native Typescript integrations, and more. Our vision is for you to import one slim dependency and you're off to the races.</p>
<p dir="auto">We're eager for you to give Mountaineer a try, and equally devoted to making you successful if you like it. File an Issue if you see anything unexpected or if there's a steeper learning curve than you expect. There's much more to do - and we're excited to do it together.</p>
<p dir="auto">~ Pierce</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">New Project</h3><a id="user-content-new-project" aria-label="Permalink: New Project" href="#new-project"></a></p>
<p dir="auto">To get started as quickly as possible, we bundle a project generator that sets up a simple project after a quick Q&amp;A. Make sure you have pipx <a href="https://pipx.pypa.io/stable/installation/" rel="nofollow">installed</a>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ pipx run create-mountaineer-app

? Project name [my-project]: my_webapp
? Author [Pierce Freeman <pierce@freeman.vc>] Default
? Use poetry for dependency management? [Yes] Yes
? Create stub MVC files? [Yes] Yes
? Use Tailwind CSS? [Yes] Yes"><pre>$ pipx run create-mountaineer-app

<span>?</span> Project name [my-project]: my_webapp
<span>?</span> Author [Pierce Freeman <span>&lt;</span>pierce@freeman.vc<span>&gt;</span>] Default
<span>?</span> Use poetry <span>for</span> dependency management<span>?</span> [Yes] Yes
<span>?</span> Create stub MVC files<span>?</span> [Yes] Yes
<span>?</span> Use Tailwind CSS<span>?</span> [Yes] Yes</pre></div>
<p dir="auto">Mountaineer projects all follow a similar structure. After running this CLI you should see a new folder called <code>my_webapp</code>, with folders like the following:</p>
<div data-snippet-clipboard-copy-content="my_webapp
  /controllers
    /home.py
  /models
    /mymodel.py
  /views
    /app
      /home
        /page.tsx
      /layout.tsx
    /package.json
    /tsconfig.json
  /app.py
  /cli.py
pyproject.toml
poetry.lock"><pre><code>my_webapp
  /controllers
    /home.py
  /models
    /mymodel.py
  /views
    /app
      /home
        /page.tsx
      /layout.tsx
    /package.json
    /tsconfig.json
  /app.py
  /cli.py
pyproject.toml
poetry.lock
</code></pre></div>
<p dir="auto">Every service file is nested under the <code>my_webapp</code> root package. Views are defined in a disk-based hierarchy (<code>views</code>) where nested routes are in nested folders. This folder acts as your React project and is where you can define requirements and build parameters in <code>package.json</code> and <code>tsconfig.json</code>. Controllers are defined nearby in a flat folder (<code>controllers</code>) where each route is a separate file. Everything else is just standard Python code for you to modify as needed.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Development</h3><a id="user-content-development" aria-label="Permalink: Development" href="#development"></a></p>
<p dir="auto">If you're starting a new application from scratch, you'll typically want to create your new database tables. Make sure you have postgres running. We bundle a docker-compose file for convenience with <code>create-mountaineer-app</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker-compose up -d
poetry run createdb"><pre>docker-compose up -d
poetry run createdb</pre></div>
<p dir="auto">Mountaineer relies on watching your project for changes and doing progressive compilation. We provide a few CLI commands to help with this.</p>
<p dir="auto">While doing development work, you'll usually want to preview the frontend and automatically build dependent files. You can do this with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ poetry run runserver

INFO:     Started server process [93111]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://127.0.0.1:5006 (Press CTRL+C to quit)"><pre>$ poetry run runserver

INFO:     Started server process [93111]
INFO:     Waiting <span>for</span> application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://127.0.0.1:5006 (Press CTRL+C to quit)</pre></div>
<p dir="auto">Navigate to <a href="http://127.0.0.1:5006/" rel="nofollow">http://127.0.0.1:5006</a> to see your new webapp running.</p>
<p dir="auto">Or, if you just want to watch the source tree for changes without hosting the server. Watching will allow your frontend to pick up API definitions from your backend controllers:</p>

<p dir="auto">Both of these CLI commands are specified in your project's <code>cli.py</code> file.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Walkthrough</h3><a id="user-content-walkthrough" aria-label="Permalink: Walkthrough" href="#walkthrough"></a></p>
<p dir="auto">Below we go through some of the unique aspects of Mountaineer. Let's create a simple Todo list where we can add new items.</p>
<p dir="auto">For the purposes of this walkthrough we assume your project is generated with <code>create-mountaineer-app</code> and you've skipped MVC stub files. If not, you'll have to delete some of the pre-existing files.</p>
<p dir="auto">Let's get started by creating the data models that will persist app state to the database. These definitions are effectively Pydantic schemas that will be bridged to the database via <a href="https://github.com/tiangolo/sqlmodel">SQLModel</a>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="# my_webapp/models/todo.py

from mountaineer.database import SQLModel, Field
from uuid import UUID, uuid4

class TodoItem(SQLModel, table=True):
    id: UUID = Field(default_factory=uuid4, primary_key=True)

    description: str
    completed: bool = False"><pre><span># my_webapp/models/todo.py</span>

<span>from</span> <span>mountaineer</span>.<span>database</span> <span>import</span> <span>SQLModel</span>, <span>Field</span>
<span>from</span> <span>uuid</span> <span>import</span> <span>UUID</span>, <span>uuid4</span>

<span>class</span> <span>TodoItem</span>(<span>SQLModel</span>, <span>table</span><span>=</span><span>True</span>):
    <span>id</span>: <span>UUID</span> <span>=</span> <span>Field</span>(<span>default_factory</span><span>=</span><span>uuid4</span>, <span>primary_key</span><span>=</span><span>True</span>)

    <span>description</span>: <span>str</span>
    <span>completed</span>: <span>bool</span> <span>=</span> <span>False</span></pre></div>
<p dir="auto">Update the index file as well:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# my_webapp/models/__init__.py

from .todo import TodoItem # noqa: F401"><pre><span># my_webapp/models/__init__.py</span>

<span>from</span> .<span>todo</span> <span>import</span> <span>TodoItem</span> <span># noqa: F401</span></pre></div>
<p dir="auto">Make sure you have a Postgres database running. We bundle a docker-compose file for convenience with <code>create-mountaineer-app</code>. Launch it in the background and create the new database tables from these code definitions:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker-compose up -d
poetry run createdb
poetry run runserver"><pre>docker-compose up -d
poetry run createdb
poetry run runserver</pre></div>
<p dir="auto">Great! At this point we have our database tables created and have a basic server running. We next move to creating a new controller, since this will define which data you can push and pull to your frontend.</p>
<div dir="auto" data-snippet-clipboard-copy-content="# my_webapp/controllers/home.py

from mountaineer import sideeffect, ControllerBase, RenderBase
from mountaineer.database import DatabaseDependencies

from fastapi import Request, Depends
from sqlalchemy.ext.asyncio import AsyncSession
from sqlmodel import select

from my_webapp.models.todo import TodoItem

class HomeRender(RenderBase):
    client_ip: str
    todos: list[TodoItem]

class HomeController(ControllerBase):
    url = &quot;/&quot;
    view_path = &quot;/app/home/page.tsx&quot;

    async def render(
        self,
        request: Request,
        session: AsyncSession = Depends(DatabaseDependencies.get_db_session)
    ) -> HomeRender:
        todos = await session.execute(select(TodoItem))

        return HomeRender(
            client_ip=(
                request.client.host
                if request.client
                else &quot;unknown&quot;
            ),
            todos=todos.scalars().all()
        )"><pre><span># my_webapp/controllers/home.py</span>

<span>from</span> <span>mountaineer</span> <span>import</span> <span>sideeffect</span>, <span>ControllerBase</span>, <span>RenderBase</span>
<span>from</span> <span>mountaineer</span>.<span>database</span> <span>import</span> <span>DatabaseDependencies</span>

<span>from</span> <span>fastapi</span> <span>import</span> <span>Request</span>, <span>Depends</span>
<span>from</span> <span>sqlalchemy</span>.<span>ext</span>.<span>asyncio</span> <span>import</span> <span>AsyncSession</span>
<span>from</span> <span>sqlmodel</span> <span>import</span> <span>select</span>

<span>from</span> <span>my_webapp</span>.<span>models</span>.<span>todo</span> <span>import</span> <span>TodoItem</span>

<span>class</span> <span>HomeRender</span>(<span>RenderBase</span>):
    <span>client_ip</span>: <span>str</span>
    <span>todos</span>: <span>list</span>[<span>TodoItem</span>]

<span>class</span> <span>HomeController</span>(<span>ControllerBase</span>):
    <span>url</span> <span>=</span> <span>"/"</span>
    <span>view_path</span> <span>=</span> <span>"/app/home/page.tsx"</span>

    <span>async</span> <span>def</span> <span>render</span>(
        <span>self</span>,
        <span>request</span>: <span>Request</span>,
        <span>session</span>: <span>AsyncSession</span> <span>=</span> <span>Depends</span>(<span>DatabaseDependencies</span>.<span>get_db_session</span>)
    ) <span>-&gt;</span> <span>HomeRender</span>:
        <span>todos</span> <span>=</span> <span>await</span> <span>session</span>.<span>execute</span>(<span>select</span>(<span>TodoItem</span>))

        <span>return</span> <span>HomeRender</span>(
            <span>client_ip</span><span>=</span>(
                <span>request</span>.<span>client</span>.<span>host</span>
                <span>if</span> <span>request</span>.<span>client</span>
                <span>else</span> <span>"unknown"</span>
            ),
            <span>todos</span><span>=</span><span>todos</span>.<span>scalars</span>().<span>all</span>()
        )</pre></div>
<p dir="auto">The only three requirements of a controller are setting the:</p>
<ul dir="auto">
<li>URL</li>
<li>View path</li>
<li>Initial data payload</li>
</ul>
<p dir="auto">This <code>render()</code> function is a core building block of Mountaineer. All Controllers need to have one. It defines all the data that your frontend will need to resolve its view. This particular controller retrieves all Todo items from the database, alongside the user's current IP.</p>
<div dir="auto"><p dir="auto">Tip</p><p dir="auto">render() functions accepts all parameters that FastAPI endpoints do: paths, query parameters, and dependency injected functions. Right now we're just grabbing the <code>Request</code> object to get the client IP.</p>
</div>
<p dir="auto">Note that the database session is provided via dependency injection, which plug-and-plays with <a href="https://github.com/tiangolo/fastapi">FastAPI's</a> Depends syntax. The standard library provides two main dependency providers:</p>
<ul dir="auto">
<li>mountaineer.CoreDependencies: helper functions for configurations and general dependency injection</li>
<li>mountaineer.database.DatabaseDependencies: helper functions for database lifecycle and management</li>
</ul>
<p dir="auto">Now that we've newly created this controller, we wire it up to the application. This registers it for display when you load the homepage.</p>
<div dir="auto" data-snippet-clipboard-copy-content="# my_webapp/app.py
from mountaineer.app import AppController
from mountaineer.js_compiler.postcss import PostCSSBundler
from mountaineer.render import LinkAttribute, Metadata

from my_webapp.views import get_view_path
from my_webapp.config import AppConfig
from my_webapp.controllers.home import HomeController

controller = AppController(
    view_root=get_view_path(&quot;&quot;),
    config=AppConfig(),
    global_metadata=Metadata(
        links=[LinkAttribute(rel=&quot;stylesheet&quot;, href=&quot;/static/app_main.css&quot;)]
    ),
    custom_builders=[
        PostCSSBundler(),
    ],
)

controller.register(HomeController())"><pre><span># my_webapp/app.py</span>
<span>from</span> <span>mountaineer</span>.<span>app</span> <span>import</span> <span>AppController</span>
<span>from</span> <span>mountaineer</span>.<span>js_compiler</span>.<span>postcss</span> <span>import</span> <span>PostCSSBundler</span>
<span>from</span> <span>mountaineer</span>.<span>render</span> <span>import</span> <span>LinkAttribute</span>, <span>Metadata</span>

<span>from</span> <span>my_webapp</span>.<span>views</span> <span>import</span> <span>get_view_path</span>
<span>from</span> <span>my_webapp</span>.<span>config</span> <span>import</span> <span>AppConfig</span>
<span>from</span> <span>my_webapp</span>.<span>controllers</span>.<span>home</span> <span>import</span> <span>HomeController</span>

<span>controller</span> <span>=</span> <span>AppController</span>(
    <span>view_root</span><span>=</span><span>get_view_path</span>(<span>""</span>),
    <span>config</span><span>=</span><span>AppConfig</span>(),
    <span>global_metadata</span><span>=</span><span>Metadata</span>(
        <span>links</span><span>=</span>[<span>LinkAttribute</span>(<span>rel</span><span>=</span><span>"stylesheet"</span>, <span>href</span><span>=</span><span>"/static/app_main.css"</span>)]
    ),
    <span>custom_builders</span><span>=</span>[
        <span>PostCSSBundler</span>(),
    ],
)

<span>controller</span>.<span>register</span>(<span>HomeController</span>())</pre></div>
<p dir="auto">Let's move over to the frontend.</p>
<div dir="auto" data-snippet-clipboard-copy-content="/* my_webapp/views/app/home/page.tsx */

import React from &quot;react&quot;;
import { useServer, ServerState } from &quot;./_server/useServer&quot;;

const CreateTodo = ({ serverState }: { serverState: ServerState }) => {
  return (
  <div className=&quot;flex gap-x-4&quot;>
    <input
      type=&quot;text&quot;
      className=&quot;grow rounded border-2 border-gray-200 px-4 py-2&quot;
    />
    <button
      className=&quot;rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700&quot;
    >
      Create
    </button>
  </div>
  )
}

const Home = () => {
  const serverState = useServer();

  return (
    <div className=&quot;mx-auto max-w-2xl space-y-8 p-8 text-2xl&quot;>
      <p>
        Hello {serverState.client_ip}, you have {serverState.todos.length} todo items.
      </p>
      <CreateTodo serverState={serverState} />
      {
        /* Todo items are exposed as typehinted Typescript interfaces */
        serverState.todos.map((todo) => (
          <div key={todo.id} className=&quot;rounded border-2 border-gray-200 p-4&quot;>
            <div>{todo.description}</div>
          </div>
        ))
      }
    </div>
  );
};

export default Home;"><pre><span>/* my_webapp/views/app/home/page.tsx */</span>

<span>import</span> <span>React</span> <span>from</span> <span>"react"</span><span>;</span>
<span>import</span> <span>{</span> <span>useServer</span><span>,</span> <span>ServerState</span> <span>}</span> <span>from</span> <span>"./_server/useServer"</span><span>;</span>

<span>const</span> <span>CreateTodo</span> <span>=</span> <span>(</span><span>{</span> serverState <span>}</span>: <span>{</span> <span>serverState</span>: <span>ServerState</span> <span>}</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>return</span> <span>(</span>
  <span>&lt;</span><span>div</span> <span>className</span><span>=</span><span>"flex gap-x-4"</span><span>&gt;</span>
    <span>&lt;</span><span>input</span>
      <span>type</span><span>=</span><span>"text"</span>
      <span>className</span><span>=</span><span>"grow rounded border-2 border-gray-200 px-4 py-2"</span>
    <span>/</span><span>&gt;</span>
    <span>&lt;</span><span>button</span>
      <span>className</span><span>=</span><span>"rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700"</span>
    <span>&gt;</span>
      Create
    <span>&lt;</span><span>/</span><span>button</span><span>&gt;</span>
  <span>&lt;</span><span>/</span><span>div</span><span>&gt;</span>
  <span>)</span>
<span>}</span>

<span>const</span> <span>Home</span> <span>=</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> <span>serverState</span> <span>=</span> <span>useServer</span><span>(</span><span>)</span><span>;</span>

  <span>return</span> <span>(</span>
    <span>&lt;</span><span>div</span> <span>className</span><span>=</span><span>"mx-auto max-w-2xl space-y-8 p-8 text-2xl"</span><span>&gt;</span>
      <span>&lt;</span><span>p</span><span>&gt;</span>
        Hello <span>{</span><span>serverState</span><span>.</span><span>client_ip</span><span>}</span>, you have <span>{</span><span>serverState</span><span>.</span><span>todos</span><span>.</span><span>length</span><span>}</span> todo items.
      <span>&lt;</span><span>/</span><span>p</span><span>&gt;</span>
      <span>&lt;</span><span>CreateTodo</span> <span>serverState</span><span>=</span><span>{</span><span>serverState</span><span>}</span> <span>/</span><span>&gt;</span>
      <span>{</span>
        <span>/* Todo items are exposed as typehinted Typescript interfaces */</span>
        <span>serverState</span><span>.</span><span>todos</span><span>.</span><span>map</span><span>(</span><span>(</span><span>todo</span><span>)</span> <span>=&gt;</span> <span>(</span>
          <span>&lt;</span><span>div</span> <span>key</span><span>=</span><span>{</span><span>todo</span><span>.</span><span>id</span><span>}</span> <span>className</span><span>=</span><span>"rounded border-2 border-gray-200 p-4"</span><span>&gt;</span>
            <span>&lt;</span><span>div</span><span>&gt;</span><span>{</span><span>todo</span><span>.</span><span>description</span><span>}</span><span>&lt;</span><span>/</span><span>div</span><span>&gt;</span>
          <span>&lt;</span><span>/</span><span>div</span><span>&gt;</span>
        <span>)</span><span>)</span>
      <span>}</span>
    <span>&lt;</span><span>/</span><span>div</span><span>&gt;</span>
  <span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>export</span> <span>default</span> <span>Home</span><span>;</span></pre></div>
<p dir="auto">We define a simple view to show the data coming from the backend. To accomplish this conventionally, we'd need to wire up an API layer, a Node server, or format the page with Jinja templates.</p>
<p dir="auto">Here instead we use our automatically generated <code>useServer()</code> hook. This hook payload will provide all the <code>HomeRender</code> fields as properties of serverState. And it's available instantly on page load without any roundtrip fetches. Also - if your IDE supports language servers (which most do these days), you should see the fields auto-suggesting for <code>serverState</code> as you type.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/piercefreeman/mountaineer/blob/main/docs/media/ide_typehints.png"><img src="https://github.com/piercefreeman/mountaineer/raw/main/docs/media/ide_typehints.png" alt="IDE Typehints" width="500px"></a></p>
<p dir="auto">If you access this in your browser at <code>localhost:5006/</code> we can see our welcome message, but we can't really <em>do</em> anything with the todos yet. Let's add some interactivity.</p>
<div dir="auto"><p dir="auto">Tip</p><p dir="auto">Try disabling Javascript in your browser. The page will still render as-is with all variables intact, thanks to our server-side rendering.</p>
</div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/piercefreeman/mountaineer/blob/main/docs/media/server_side_rendering.png"><img src="https://github.com/piercefreeman/mountaineer/raw/main/docs/media/server_side_rendering.png" alt="Server-side rendering" height="400px"></a></p>
<p dir="auto">What good is todo list that doesn't get longer? We define a <code>add_todo</code> function that accepts a pydantic model <code>NewTodoRequest</code>, which defines the required parameters for a new todo item. We then cast this to a database object and add it to the postgres table.</p>
<div dir="auto" data-snippet-clipboard-copy-content="# my_webapp/controllers/home.py

from pydantic import BaseModel

class NewTodoRequest(BaseModel):
    description: str

class HomeController(ControllerBase):
    ...

    @sideeffect
    async def add_todo(
        self,
        payload: NewTodoRequest,
        session: AsyncSession = Depends(DatabaseDependencies.get_db_session)
    ):
        new_todo =  TodoItem(description=payload.description)
        session.add(new_todo)
        await session.commit()"><pre><span># my_webapp/controllers/home.py</span>

<span>from</span> <span>pydantic</span> <span>import</span> <span>BaseModel</span>

<span>class</span> <span>NewTodoRequest</span>(<span>BaseModel</span>):
    <span>description</span>: <span>str</span>

<span>class</span> <span>HomeController</span>(<span>ControllerBase</span>):
    ...

    <span>@<span>sideeffect</span></span>
    <span>async</span> <span>def</span> <span>add_todo</span>(
        <span>self</span>,
        <span>payload</span>: <span>NewTodoRequest</span>,
        <span>session</span>: <span>AsyncSession</span> <span>=</span> <span>Depends</span>(<span>DatabaseDependencies</span>.<span>get_db_session</span>)
    ):
        <span>new_todo</span> <span>=</span>  <span>TodoItem</span>(<span>description</span><span>=</span><span>payload</span>.<span>description</span>)
        <span>session</span>.<span>add</span>(<span>new_todo</span>)
        <span>await</span> <span>session</span>.<span>commit</span>()</pre></div>
<p dir="auto">The important part here is the <code>@sideeffect</code>. Once you create a new Todo item, the previous state on the frontend is outdated. It will only show the todos before you created a new one. That's not what we want in an interactive app. This decorator indicates that we want the frontend to refresh its data, since after we update the todo list on the server the client state will be newly outdated.</p>
<p dir="auto">Mountaineer detects the presence of this sideeffect function and analyzes its signature. It then exposes this to the frontend as a normal async function.</p>
<div dir="auto" data-snippet-clipboard-copy-content="/* my_webapp/views/app/home/page.tsx */

import React, { useState } from &quot;react&quot;;
import { useServer } from &quot;./_server/useServer&quot;;

/* Replace the existing CreateTodo component definition you have */
const CreateTodo = ({ serverState }: { serverState: ServerState }) => {
  const [newTodo, setNewTodo] = useState(&quot;&quot;);

  return (
    <div className=&quot;flex gap-x-4&quot;>
      <input
        type=&quot;text&quot;
        className=&quot;grow rounded border-2 border-gray-200 px-4 py-2&quot;
        value={newTodo}
        onChange={(e) => setNewTodo(e.target.value)}
      />
      <button
        className=&quot;rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700&quot;
        onClick={
          /* Here we call our sideeffect function */
          async () => {
            await serverState.add_todo({
              requestBody: {
                description: newTodo,
              },
            });
            setNewTodo(&quot;&quot;);
            setShowNew(false);
          }
        }
      >
        Create
      </button>
    </div>
  );
};

...

export default Home;"><pre><span>/* my_webapp/views/app/home/page.tsx */</span>

<span>import</span> <span>React</span><span>,</span> <span>{</span> <span>useState</span> <span>}</span> <span>from</span> <span>"react"</span><span>;</span>
<span>import</span> <span>{</span> <span>useServer</span> <span>}</span> <span>from</span> <span>"./_server/useServer"</span><span>;</span>

<span>/* Replace the existing CreateTodo component definition you have */</span>
<span>const</span> <span>CreateTodo</span> <span>=</span> <span>(</span><span>{</span> serverState <span>}</span>: <span>{</span> <span>serverState</span>: <span>ServerState</span> <span>}</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> <span>[</span><span>newTodo</span><span>,</span> <span>setNewTodo</span><span>]</span> <span>=</span> <span>useState</span><span>(</span><span>""</span><span>)</span><span>;</span>

  <span>return</span> <span>(</span>
    <span>&lt;</span><span>div</span> <span>className</span><span>=</span><span>"flex gap-x-4"</span><span>&gt;</span>
      <span>&lt;</span><span>input</span>
        <span>type</span><span>=</span><span>"text"</span>
        <span>className</span><span>=</span><span>"grow rounded border-2 border-gray-200 px-4 py-2"</span>
        <span>value</span><span>=</span><span>{</span><span>newTodo</span><span>}</span>
        <span>onChange</span><span>=</span><span>{</span><span>(</span><span>e</span><span>)</span> <span>=&gt;</span> <span>setNewTodo</span><span>(</span><span>e</span><span>.</span><span>target</span><span>.</span><span>value</span><span>)</span><span>}</span>
      <span>/</span><span>&gt;</span>
      <span>&lt;</span><span>button</span>
        <span>className</span><span>=</span><span>"rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700"</span>
        <span>onClick</span><span>=</span><span>{</span>
          <span>/* Here we call our sideeffect function */</span>
          <span>async</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
            <span>await</span> <span>serverState</span><span>.</span><span>add_todo</span><span>(</span><span>{</span>
              <span>requestBody</span>: <span>{</span>
                <span>description</span>: <span>newTodo</span><span>,</span>
              <span>}</span><span>,</span>
            <span>}</span><span>)</span><span>;</span>
            <span>setNewTodo</span><span>(</span><span>""</span><span>)</span><span>;</span>
            <span>setShowNew</span><span>(</span><span>false</span><span>)</span><span>;</span>
          <span>}</span>
        <span>}</span>
      <span>&gt;</span>
        Create
      <span>&lt;</span><span>/</span><span>button</span><span>&gt;</span>
    <span>&lt;</span><span>/</span><span>div</span><span>&gt;</span>
  <span>)</span><span>;</span>
<span>}</span><span>;</span>

...

<span>export</span> <span>default</span> <span>Home</span><span>;</span></pre></div>
<p dir="auto"><code>useServer()</code> exposes our <code>add_todo</code> function so we can call our backend directly from our frontend. Also notice that we don't have to read or parse the output value of this function to render the new todo item to the list. Since the function is marked as a sideeffect, the frontend will automatically refresh its data after the function is called.</p>
<p dir="auto">Go ahead and load it in your browser. If you open up your web tools, you can create a new Todo and see POST requests sending data to the backend and receiving the current server state. The actual data updates and merging happens internally by Mountaineer.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/piercefreeman/mountaineer/blob/main/docs/media/final_todo_list.png"><img src="https://github.com/piercefreeman/mountaineer/raw/main/docs/media/final_todo_list.png" alt="Getting Started Final TODO App" height="400px"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/piercefreeman/mountaineer/blob/main/docs/media/network_debug.png"><img src="https://github.com/piercefreeman/mountaineer/raw/main/docs/media/network_debug.png" alt="Getting Started Final TODO App" height="400px"></a></p>
<p dir="auto">You can use these serverState variables anywhere you'd use dynamic React state variables (useEffect, useCallback, etc). But unlike React state, these variables are automatically updated when a relevant sideeffect is triggered.</p>
<p dir="auto">And that's it. We've just built a fully interactive web application without having to worry about an explicit API. You specify the data model and actions on the server and the appropriate frontend hooks are generated and updated automatically. It gives you the power of server rendered html and the interactivity of a virtual DOM, without having to compromise on complicated data mutations to keep everything in sync.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Learn More</h3><a id="user-content-learn-more" aria-label="Permalink: Learn More" href="#learn-more"></a></p>
<p dir="auto">We have additional documentation that does more of a technical deep dive on different features of Mountaineer. We order these roughly in the order that we anticipate you'll need them.</p>
<ul dir="auto">
<li><a href="https://github.com/piercefreeman/mountaineer/blob/main/docs/client_actions.md">Client Actions</a>: Details on @sideeffect, @passthrough, and masking @sideeffect fields for partial re-rendering.</li>
<li><a href="https://github.com/piercefreeman/mountaineer/blob/main/docs/view.md">View Definition</a>: How to define the view and use the serverState hook. Covers <code>page.tsx</code> and <code>layout.tsx</code> conventions to easily nest your site designs.</li>
<li><a href="https://github.com/piercefreeman/mountaineer/blob/main/docs/metadata.md">Page Metadata</a>: How to set the title, description, and other metadata for your pages.</li>
<li><a href="https://github.com/piercefreeman/mountaineer/blob/main/docs/links.md">Link Generation</a>: Generate links to other pages within your webapp, with typehinting and automatic URL generation.</li>
<li><a href="https://github.com/piercefreeman/mountaineer/blob/main/docs/error_handling.md">Error Handling</a>: Conventions for handling client-side errors while fetching data in your webapp.</li>
<li><a href="https://github.com/piercefreeman/mountaineer/blob/main/docs/postcss.md">PostCSS</a>: PostCSS build plugin for TailwindCSS support and other CSS processing.</li>
<li><a href="https://github.com/piercefreeman/mountaineer/blob/main/docs/core_library.md">Core Library</a>: Details on how to do local development on the core library.</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Blazer: Business intelligence made simple (183 pts)]]></title>
            <link>https://github.com/ankane/blazer</link>
            <guid>39524327</guid>
            <pubDate>Tue, 27 Feb 2024 14:13:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ankane/blazer">https://github.com/ankane/blazer</a>, See on <a href="https://news.ycombinator.com/item?id=39524327">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Blazer</h2><a id="user-content-blazer" aria-label="Permalink: Blazer" href="#blazer"></a></p>
<p dir="auto">Explore your data with SQL. Easily create charts and dashboards, and share them with your team.</p>
<p dir="auto"><a href="https://blazer.dokkuapp.com/" rel="nofollow">Try it out</a></p>
<p dir="auto"><a href="https://blazer.dokkuapp.com/" rel="nofollow"><img src="https://camo.githubusercontent.com/783368f9610fcf4b8727603a35c7bbf4ddf9d24ca0deda713fe46eacee8858f4/68747470733a2f2f626c617a65722e646f6b6b756170702e636f6d2f6173736574732f626c617a65722d613130626161343066656631636132663562623235666339376263663236316136613534313932666231616430663839336330663536326238633763343639372e706e67" alt="Screenshot" data-canonical-src="https://blazer.dokkuapp.com/assets/blazer-a10baa40fef1ca2f5bb25fc97bcf261a6a54192fb1ad0f893c0f562b8c7c4697.png"></a></p>
<p dir="auto">Blazer is also available as a <a href="https://github.com/ankane/blazer-docker">Docker image</a>.</p>
<p dir="auto">🍊 Battle-tested at <a href="https://www.instacart.com/opensource" rel="nofollow">Instacart</a></p>
<p dir="auto"><a href="https://github.com/ankane/blazer/actions"><img src="https://github.com/ankane/blazer/actions/workflows/build.yml/badge.svg" alt="Build Status"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li><strong>Multiple data sources</strong> - PostgreSQL, MySQL, Redshift, and <a href="#full-list">many more</a></li>
<li><strong>Variables</strong> - run the same queries with different values</li>
<li><strong>Checks &amp; alerts</strong> - get emailed when bad data appears</li>
<li><strong>Audits</strong> - all queries are tracked</li>
<li><strong>Security</strong> - works with your authentication system</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Docs</h2><a id="user-content-docs" aria-label="Permalink: Docs" href="#docs"></a></p>
<ul dir="auto">
<li><a href="#installation">Installation</a></li>
<li><a href="#queries">Queries</a></li>
<li><a href="#charts">Charts</a></li>
<li><a href="#dashboards">Dashboards</a></li>
<li><a href="#checks">Checks</a></li>
<li><a href="#cohorts">Cohorts</a></li>
<li><a href="#anomaly-detection">Anomaly Detection</a></li>
<li><a href="#forecasting">Forecasting</a></li>
<li><a href="#uploads">Uploads</a></li>
<li><a href="#data-sources">Data Sources</a></li>
<li><a href="#query-permissions">Query Permissions</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">Add this line to your application’s Gemfile:</p>

<p dir="auto">Run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="rails generate blazer:install
rails db:migrate"><pre>rails generate blazer:install
rails db:migrate</pre></div>
<p dir="auto">And mount the dashboard in your <code>config/routes.rb</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="mount Blazer::Engine, at: &quot;blazer&quot;"><pre><span>mount</span> <span>Blazer</span>::<span>Engine</span><span>,</span> <span>at</span>: <span>"blazer"</span></pre></div>
<p dir="auto">For production, specify your database:</p>
<div dir="auto" data-snippet-clipboard-copy-content="ENV[&quot;BLAZER_DATABASE_URL&quot;] = &quot;postgres://user:password@hostname:5432/database&quot;"><pre><span>ENV</span><span>[</span><span>"BLAZER_DATABASE_URL"</span><span>]</span> <span>=</span> <span>"postgres://user:password@hostname:5432/database"</span></pre></div>
<p dir="auto">When possible, Blazer tries to protect against queries which modify data by running each query in a transaction and rolling it back, but a safer approach is to use a read-only user. <a href="#permissions">See how to create one</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Checks (optional)</h4><a id="user-content-checks-optional" aria-label="Permalink: Checks (optional)" href="#checks-optional"></a></p>
<p dir="auto">Be sure to set a host in <code>config/environments/production.rb</code> for emails to work.</p>
<div dir="auto" data-snippet-clipboard-copy-content="config.action_mailer.default_url_options = {host: &quot;blazer.dokkuapp.com&quot;}"><pre><span>config</span><span>.</span><span>action_mailer</span><span>.</span><span>default_url_options</span> <span>=</span> <span>{</span><span>host</span>: <span>"blazer.dokkuapp.com"</span><span>}</span></pre></div>
<p dir="auto">Schedule checks to run (with cron, <a href="https://elements.heroku.com/addons/scheduler" rel="nofollow">Heroku Scheduler</a>, etc). The default options are every 5 minutes, 1 hour, or 1 day, which you can customize. For each of these options, set up a task to run.</p>
<div dir="auto" data-snippet-clipboard-copy-content="rake blazer:run_checks SCHEDULE=&quot;5 minutes&quot;
rake blazer:run_checks SCHEDULE=&quot;1 hour&quot;
rake blazer:run_checks SCHEDULE=&quot;1 day&quot;"><pre>rake blazer:run_checks SCHEDULE=<span><span>"</span>5 minutes<span>"</span></span>
rake blazer:run_checks SCHEDULE=<span><span>"</span>1 hour<span>"</span></span>
rake blazer:run_checks SCHEDULE=<span><span>"</span>1 day<span>"</span></span></pre></div>
<p dir="auto">You can also set up failing checks to be sent once a day (or whatever you prefer).</p>
<div dir="auto" data-snippet-clipboard-copy-content="rake blazer:send_failing_checks"><pre>rake blazer:send_failing_checks</pre></div>
<p dir="auto">Here’s what it looks like with cron.</p>
<div data-snippet-clipboard-copy-content="*/5 * * * * rake blazer:run_checks SCHEDULE=&quot;5 minutes&quot;
0   * * * * rake blazer:run_checks SCHEDULE=&quot;1 hour&quot;
30  7 * * * rake blazer:run_checks SCHEDULE=&quot;1 day&quot;
0   8 * * * rake blazer:send_failing_checks"><pre><code>*/5 * * * * rake blazer:run_checks SCHEDULE="5 minutes"
0   * * * * rake blazer:run_checks SCHEDULE="1 hour"
30  7 * * * rake blazer:run_checks SCHEDULE="1 day"
0   8 * * * rake blazer:send_failing_checks
</code></pre></div>
<p dir="auto">For Slack notifications, create an <a href="https://slack.com/apps/A0F7XDUAZ-incoming-webhooks" rel="nofollow">incoming webhook</a> and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="BLAZER_SLACK_WEBHOOK_URL=https://hooks.slack.com/..."><pre>BLAZER_SLACK_WEBHOOK_URL=https://hooks.slack.com/...</pre></div>
<p dir="auto">Name the webhook “Blazer” and add a cool icon.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Authentication</h2><a id="user-content-authentication" aria-label="Permalink: Authentication" href="#authentication"></a></p>
<p dir="auto">Don’t forget to protect the dashboard in production.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Basic Authentication</h3><a id="user-content-basic-authentication" aria-label="Permalink: Basic Authentication" href="#basic-authentication"></a></p>
<p dir="auto">Set the following variables in your environment or an initializer.</p>
<div dir="auto" data-snippet-clipboard-copy-content="ENV[&quot;BLAZER_USERNAME&quot;] = &quot;andrew&quot;
ENV[&quot;BLAZER_PASSWORD&quot;] = &quot;secret&quot;"><pre><span>ENV</span><span>[</span><span>"BLAZER_USERNAME"</span><span>]</span> <span>=</span> <span>"andrew"</span>
<span>ENV</span><span>[</span><span>"BLAZER_PASSWORD"</span><span>]</span> <span>=</span> <span>"secret"</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Devise</h3><a id="user-content-devise" aria-label="Permalink: Devise" href="#devise"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="authenticate :user, ->(user) { user.admin? } do
  mount Blazer::Engine, at: &quot;blazer&quot;
end"><pre><span>authenticate</span> <span>:user</span><span>,</span> <span>-&gt;</span><span>(</span><span>user</span><span>)</span> <span>{</span> <span>user</span><span>.</span><span>admin?</span> <span>}</span> <span>do</span>
  <span>mount</span> <span>Blazer</span>::<span>Engine</span><span>,</span> <span>at</span>: <span>"blazer"</span>
<span>end</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Other</h3><a id="user-content-other" aria-label="Permalink: Other" href="#other"></a></p>
<p dir="auto">Specify a <code>before_action</code> method to run in <code>blazer.yml</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="before_action_method: require_admin"><pre><span>before_action_method</span>: <span>require_admin</span></pre></div>
<p dir="auto">You can define this method in your <code>ApplicationController</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def require_admin
  # depending on your auth, something like...
  redirect_to root_path unless current_user &amp;&amp; current_user.admin?
end"><pre><span>def</span> <span>require_admin</span>
  <span># depending on your auth, something like...</span>
  <span>redirect_to</span> <span>root_path</span> <span>unless</span> <span>current_user</span> &amp;&amp; <span>current_user</span><span>.</span><span>admin?</span>
<span>end</span></pre></div>
<p dir="auto">Be sure to render or redirect for unauthorized users.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Permissions</h2><a id="user-content-permissions" aria-label="Permalink: Permissions" href="#permissions"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">PostgreSQL</h3><a id="user-content-postgresql" aria-label="Permalink: PostgreSQL" href="#postgresql"></a></p>
<p dir="auto">Create a user with read-only permissions:</p>
<div dir="auto" data-snippet-clipboard-copy-content="BEGIN;
CREATE ROLE blazer LOGIN PASSWORD 'secret';
GRANT CONNECT ON DATABASE dbname TO blazer;
GRANT USAGE ON SCHEMA public TO blazer;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO blazer;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO blazer;
COMMIT;"><pre><span>BEGIN</span>;
CREATE ROLE blazer LOGIN PASSWORD <span><span>'</span>secret<span>'</span></span>;
<span>GRANT</span> CONNECT <span>ON</span> DATABASE dbname TO blazer;
<span>GRANT</span> USAGE <span>ON</span> SCHEMA public TO blazer;
<span>GRANT</span> <span>SELECT</span> <span>ON</span> ALL TABLES <span>IN</span> SCHEMA public TO blazer;
ALTER DEFAULT PRIVILEGES <span>IN</span> SCHEMA public <span>GRANT</span> <span>SELECT</span> <span>ON</span> TABLES TO blazer;
<span>COMMIT</span>;</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">MySQL</h3><a id="user-content-mysql" aria-label="Permalink: MySQL" href="#mysql"></a></p>
<p dir="auto">Create a user with read-only permissions:</p>
<div dir="auto" data-snippet-clipboard-copy-content="CREATE USER 'blazer'@'127.0.0.1' IDENTIFIED BY 'secret';
GRANT SELECT, SHOW VIEW ON dbname.* TO 'blazer'@'127.0.0.1';
FLUSH PRIVILEGES;"><pre><span>CREATE</span> <span>USER</span> '<span>blazer</span>'@<span><span>'</span>127.0.0.1<span>'</span></span> IDENTIFIED BY <span><span>'</span>secret<span>'</span></span>;
<span>GRANT</span> <span>SELECT</span>, SHOW VIEW <span>ON</span> dbname.<span>*</span> TO <span><span>'</span>blazer<span>'</span></span>@<span><span>'</span>127.0.0.1<span>'</span></span>;
FLUSH PRIVILEGES;</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sensitive Data</h2><a id="user-content-sensitive-data" aria-label="Permalink: Sensitive Data" href="#sensitive-data"></a></p>
<p dir="auto">If your database contains sensitive or personal data, check out <a href="https://github.com/ankane/hypershield">Hypershield</a> to shield it.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Encrypted Data</h2><a id="user-content-encrypted-data" aria-label="Permalink: Encrypted Data" href="#encrypted-data"></a></p>
<p dir="auto">If you need to search encrypted data, use <a href="https://github.com/ankane/blind_index">blind indexing</a>.</p>
<p dir="auto">You can have Blazer transform specific variables with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="Blazer.transform_variable = lambda do |name, value|
  value = User.generate_email_bidx(value) if name == &quot;email_bidx&quot;
  value
end"><pre><span>Blazer</span><span>.</span><span>transform_variable</span> <span>=</span> <span>lambda</span> <span>do</span> |<span>name</span><span>,</span> <span>value</span>|
  <span>value</span> <span>=</span> <span>User</span><span>.</span><span>generate_email_bidx</span><span>(</span><span>value</span><span>)</span> <span>if</span> <span>name</span> == <span>"email_bidx"</span>
  <span>value</span>
<span>end</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Queries</h2><a id="user-content-queries" aria-label="Permalink: Queries" href="#queries"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Variables</h3><a id="user-content-variables" aria-label="Permalink: Variables" href="#variables"></a></p>
<p dir="auto">Create queries with variables.</p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT * FROM users WHERE gender = {gender}"><pre><span>SELECT</span> <span>*</span> <span>FROM</span> users <span>WHERE</span> gender <span>=</span> {gender}</pre></div>
<p dir="auto">Use <code>{start_time}</code> and <code>{end_time}</code> for time ranges. <a href="https://blazer.dokkuapp.com/queries/9-time-range-selector?start_time=1997-10-03T05%3A00%3A00%2B00%3A00&amp;end_time=1997-10-04T04%3A59%3A59%2B00%3A00" rel="nofollow">Example</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT * FROM ratings WHERE rated_at >= {start_time} AND rated_at <= {end_time}"><pre><span>SELECT</span> <span>*</span> <span>FROM</span> ratings <span>WHERE</span> rated_at <span>&gt;=</span> {start_time} <span>AND</span> rated_at <span>&lt;=</span> {end_time}</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Smart Variables</h3><a id="user-content-smart-variables" aria-label="Permalink: Smart Variables" href="#smart-variables"></a></p>
<p dir="auto"><a href="https://blazer.dokkuapp.com/queries/1-smart-variable" rel="nofollow">Example</a></p>
<p dir="auto">Suppose you have the query:</p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT * FROM users WHERE occupation_id = {occupation_id}"><pre><span>SELECT</span> <span>*</span> <span>FROM</span> users <span>WHERE</span> occupation_id <span>=</span> {occupation_id}</pre></div>
<p dir="auto">Instead of remembering each occupation’s id, users can select occupations by name.</p>
<p dir="auto">Add a smart variable with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="smart_variables:
  occupation_id: &quot;SELECT id, name FROM occupations ORDER BY name ASC&quot;"><pre><span>smart_variables</span>:
  <span>occupation_id</span>: <span><span>"</span>SELECT id, name FROM occupations ORDER BY name ASC<span>"</span></span></pre></div>
<p dir="auto">The first column is the value of the variable, and the second column is the label.</p>
<p dir="auto">You can also use an array or hash for static data and enums.</p>
<div dir="auto" data-snippet-clipboard-copy-content="smart_variables:
  period: [&quot;day&quot;, &quot;week&quot;, &quot;month&quot;]
  status: {0: &quot;Active&quot;, 1: &quot;Archived&quot;}"><pre><span>smart_variables</span>:
  <span>period</span>: <span>["day", "week", "month"]</span>
  <span>status</span>: <span>{0: "Active", 1: "Archived"}</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Linked Columns</h3><a id="user-content-linked-columns" aria-label="Permalink: Linked Columns" href="#linked-columns"></a></p>
<p dir="auto"><a href="https://blazer.dokkuapp.com/queries/3-linked-column" rel="nofollow">Example</a> - title column</p>
<p dir="auto">Link results to other pages in your apps or around the web. Specify a column name and where it should link to. You can use the value of the result with <code>{value}</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="linked_columns:
  user_id: &quot;/admin/users/{value}&quot;
  ip_address: &quot;https://www.infosniper.net/index.php?ip_address={value}&quot;"><pre><span>linked_columns</span>:
  <span>user_id</span>: <span><span>"</span>/admin/users/{value}<span>"</span></span>
  <span>ip_address</span>: <span><span>"</span>https://www.infosniper.net/index.php?ip_address={value}<span>"</span></span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Smart Columns</h3><a id="user-content-smart-columns" aria-label="Permalink: Smart Columns" href="#smart-columns"></a></p>
<p dir="auto"><a href="https://blazer.dokkuapp.com/queries/2-smart-column" rel="nofollow">Example</a> - occupation_id column</p>
<p dir="auto">Suppose you have the query:</p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT name, city_id FROM users"><pre><span>SELECT</span> name, city_id <span>FROM</span> users</pre></div>
<p dir="auto">See which city the user belongs to without a join.</p>
<div dir="auto" data-snippet-clipboard-copy-content="smart_columns:
  city_id: &quot;SELECT id, name FROM cities WHERE id IN {value}&quot;"><pre><span>smart_columns</span>:
  <span>city_id</span>: <span><span>"</span>SELECT id, name FROM cities WHERE id IN {value}<span>"</span></span></pre></div>
<p dir="auto">You can also use a hash for static data and enums.</p>
<div dir="auto" data-snippet-clipboard-copy-content="smart_columns:
  status: {0: &quot;Active&quot;, 1: &quot;Archived&quot;}"><pre><span>smart_columns</span>:
  <span>status</span>: <span>{0: "Active", 1: "Archived"}</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Caching</h3><a id="user-content-caching" aria-label="Permalink: Caching" href="#caching"></a></p>
<p dir="auto">Blazer can automatically cache results to improve speed. It can cache slow queries:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cache:
  mode: slow
  expires_in: 60 # min
  slow_threshold: 15 # sec"><pre><span>cache</span>:
  <span>mode</span>: <span>slow</span>
  <span>expires_in</span>: <span>60</span> <span><span>#</span> min</span>
  <span>slow_threshold</span>: <span>15</span> <span><span>#</span> sec</span></pre></div>
<p dir="auto">Or it can cache all queries:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cache:
  mode: all
  expires_in: 60 # min"><pre><span>cache</span>:
  <span>mode</span>: <span>all</span>
  <span>expires_in</span>: <span>60</span> <span><span>#</span> min</span></pre></div>
<p dir="auto">Of course, you can force a refresh at any time.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Charts</h2><a id="user-content-charts" aria-label="Permalink: Charts" href="#charts"></a></p>
<p dir="auto">Blazer will automatically generate charts based on the types of the columns returned in your query.</p>
<p dir="auto"><strong>Note:</strong> The order of columns matters.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Line Chart</h3><a id="user-content-line-chart" aria-label="Permalink: Line Chart" href="#line-chart"></a></p>
<p dir="auto">There are two ways to generate line charts.</p>
<p dir="auto">2+ columns - timestamp, numeric(s) - <a href="https://blazer.dokkuapp.com/queries/4-line-chart-format-1" rel="nofollow">Example</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT date_trunc('week', created_at), COUNT(*) FROM users GROUP BY 1"><pre><span>SELECT</span> date_trunc(<span><span>'</span>week<span>'</span></span>, created_at), <span>COUNT</span>(<span>*</span>) <span>FROM</span> users <span>GROUP BY</span> <span>1</span></pre></div>
<p dir="auto">3 columns - timestamp, string, numeric - <a href="https://blazer.dokkuapp.com/queries/5-line-chart-format-2" rel="nofollow">Example</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT date_trunc('week', created_at), gender, COUNT(*) FROM users GROUP BY 1, 2"><pre><span>SELECT</span> date_trunc(<span><span>'</span>week<span>'</span></span>, created_at), gender, <span>COUNT</span>(<span>*</span>) <span>FROM</span> users <span>GROUP BY</span> <span>1</span>, <span>2</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Column Chart</h3><a id="user-content-column-chart" aria-label="Permalink: Column Chart" href="#column-chart"></a></p>
<p dir="auto">There are also two ways to generate column charts.</p>
<p dir="auto">2+ columns - string, numeric(s) - <a href="https://blazer.dokkuapp.com/queries/6-column-chart-format-1" rel="nofollow">Example</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT gender, COUNT(*) FROM users GROUP BY 1"><pre><span>SELECT</span> gender, <span>COUNT</span>(<span>*</span>) <span>FROM</span> users <span>GROUP BY</span> <span>1</span></pre></div>
<p dir="auto">3 columns - string, string, numeric - <a href="https://blazer.dokkuapp.com/queries/7-column-chart-format-2" rel="nofollow">Example</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT gender, zip_code, COUNT(*) FROM users GROUP BY 1, 2"><pre><span>SELECT</span> gender, zip_code, <span>COUNT</span>(<span>*</span>) <span>FROM</span> users <span>GROUP BY</span> <span>1</span>, <span>2</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Scatter Chart</h3><a id="user-content-scatter-chart" aria-label="Permalink: Scatter Chart" href="#scatter-chart"></a></p>
<p dir="auto">2 columns - both numeric - <a href="https://blazer.dokkuapp.com/queries/16-scatter-chart" rel="nofollow">Example</a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Pie Chart</h3><a id="user-content-pie-chart" aria-label="Permalink: Pie Chart" href="#pie-chart"></a></p>
<p dir="auto">2 columns - string, numeric - and last column named <code>pie</code> - <a href="https://blazer.dokkuapp.com/queries/17-pie-chart" rel="nofollow">Example</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT gender, COUNT(*) AS pie FROM users GROUP BY 1"><pre><span>SELECT</span> gender, <span>COUNT</span>(<span>*</span>) <span>AS</span> pie <span>FROM</span> users <span>GROUP BY</span> <span>1</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Maps</h3><a id="user-content-maps" aria-label="Permalink: Maps" href="#maps"></a></p>
<p dir="auto">Columns named <code>latitude</code> and <code>longitude</code> or <code>lat</code> and <code>lon</code> or <code>lat</code> and <code>lng</code> - <a href="https://blazer.dokkuapp.com/queries/15-map" rel="nofollow">Example</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT name, latitude, longitude FROM cities"><pre><span>SELECT</span> name, latitude, longitude <span>FROM</span> cities</pre></div>
<p dir="auto">or a column named <code>geojson</code></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT name, geojson FROM counties"><pre><span>SELECT</span> name, geojson <span>FROM</span> counties</pre></div>
<p dir="auto">To enable, get an access token from <a href="https://www.mapbox.com/" rel="nofollow">Mapbox</a> and set <code>ENV["MAPBOX_ACCESS_TOKEN"]</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Targets</h3><a id="user-content-targets" aria-label="Permalink: Targets" href="#targets"></a></p>
<p dir="auto">Use the column name <code>target</code> to draw a line for goals. <a href="https://blazer.dokkuapp.com/queries/8-target-line" rel="nofollow">Example</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT date_trunc('week', created_at), COUNT(*) AS new_users, 100000 AS target FROM users GROUP BY 1"><pre><span>SELECT</span> date_trunc(<span><span>'</span>week<span>'</span></span>, created_at), <span>COUNT</span>(<span>*</span>) <span>AS</span> new_users, <span>100000</span> <span>AS</span> target <span>FROM</span> users <span>GROUP BY</span> <span>1</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Dashboards</h2><a id="user-content-dashboards" aria-label="Permalink: Dashboards" href="#dashboards"></a></p>
<p dir="auto">Create a dashboard with multiple queries. <a href="https://blazer.dokkuapp.com/dashboards/1-dashboard-demo" rel="nofollow">Example</a></p>
<p dir="auto">If the query has a chart, the chart is shown. Otherwise, you’ll see a table.</p>
<p dir="auto">If any queries have variables, they will show up on the dashboard.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Checks</h2><a id="user-content-checks" aria-label="Permalink: Checks" href="#checks"></a></p>
<p dir="auto">Checks give you a centralized place to see the health of your data. <a href="https://blazer.dokkuapp.com/checks" rel="nofollow">Example</a></p>
<p dir="auto">Create a query to identify bad rows.</p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT * FROM ratings WHERE user_id IS NULL /* all ratings should have a user */"><pre><span>SELECT</span> <span>*</span> <span>FROM</span> ratings <span>WHERE</span> user_id IS <span>NULL</span> <span><span>/*</span> all ratings should have a user <span>*/</span></span></pre></div>
<p dir="auto">Then create check with optional emails if you want to be notified. Emails are sent when a check starts failing, and when it starts passing again.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Cohorts</h2><a id="user-content-cohorts" aria-label="Permalink: Cohorts" href="#cohorts"></a></p>
<p dir="auto">Create a cohort analysis from a simple SQL query. <a href="https://blazer.dokkuapp.com/queries/19-cohort-analysis-from-first-order" rel="nofollow">Example</a></p>
<p dir="auto">Create a query with the comment <code>/* cohort analysis */</code>. The result should have columns named <code>user_id</code> and <code>conversion_time</code> and optionally <code>cohort_time</code>.</p>
<p dir="auto">You can generate cohorts from the first conversion time:</p>
<div dir="auto" data-snippet-clipboard-copy-content="/* cohort analysis */
SELECT user_id, created_at AS conversion_time FROM orders"><pre><span><span>/*</span> cohort analysis <span>*/</span></span>
<span>SELECT</span> user_id, created_at <span>AS</span> conversion_time <span>FROM</span> orders</pre></div>
<p dir="auto">(the first conversion isn’t counted in the first time period with this format)</p>
<p dir="auto">Or from another time, like sign up:</p>
<div dir="auto" data-snippet-clipboard-copy-content="/* cohort analysis */
SELECT users.id AS user_id, orders.created_at AS conversion_time, users.created_at AS cohort_time
FROM users LEFT JOIN orders ON orders.user_id = users.id"><pre><span><span>/*</span> cohort analysis <span>*/</span></span>
<span>SELECT</span> <span>users</span>.<span>id</span> <span>AS</span> user_id, <span>orders</span>.<span>created_at</span> <span>AS</span> conversion_time, <span>users</span>.<span>created_at</span> <span>AS</span> cohort_time
<span>FROM</span> users <span>LEFT JOIN</span> orders <span>ON</span> <span>orders</span>.<span>user_id</span> <span>=</span> <span>users</span>.<span>id</span></pre></div>
<p dir="auto">This feature requires PostgreSQL or MySQL 8.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Anomaly Detection</h2><a id="user-content-anomaly-detection" aria-label="Permalink: Anomaly Detection" href="#anomaly-detection"></a></p>
<p dir="auto">Blazer supports three different approaches to anomaly detection.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prophet</h3><a id="user-content-prophet" aria-label="Permalink: Prophet" href="#prophet"></a></p>
<p dir="auto">Add <a href="https://github.com/ankane/prophet">prophet-rb</a> to your Gemfile:</p>

<p dir="auto">And add to <code>config/blazer.yml</code>:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Trend</h3><a id="user-content-trend" aria-label="Permalink: Trend" href="#trend"></a></p>
<p dir="auto"><a href="https://trendapi.org/" rel="nofollow">Trend</a> uses an external service by default, but you can run it on your own infrastructure as well.</p>
<p dir="auto">Add <a href="https://github.com/ankane/trend">trend</a> to your Gemfile:</p>

<p dir="auto">And add to <code>config/blazer.yml</code>:</p>

<p dir="auto">For the <a href="https://github.com/ankane/trend-api">self-hosted API</a>, create an initializer with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="Trend.url = &quot;http://localhost:8000&quot;"><pre><span>Trend</span><span>.</span><span>url</span> <span>=</span> <span>"http://localhost:8000"</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">AnomalyDetection.rb</h3><a id="user-content-anomalydetectionrb" aria-label="Permalink: AnomalyDetection.rb" href="#anomalydetectionrb"></a></p>
<p dir="auto">Add <a href="https://github.com/ankane/AnomalyDetection.rb">anomaly_detection</a> to your Gemfile:</p>

<p dir="auto">And add to <code>config/blazer.yml</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="anomaly_checks: anomaly_detection"><pre><span>anomaly_checks</span>: <span>anomaly_detection</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Forecasting</h2><a id="user-content-forecasting" aria-label="Permalink: Forecasting" href="#forecasting"></a></p>
<p dir="auto">Blazer supports for two different forecasting methods. <a href="https://blazer.dokkuapp.com/queries/18-forecast?forecast=t" rel="nofollow">Example</a></p>
<p dir="auto">A forecast link will appear for queries that return 2 columns with types timestamp and numeric.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prophet</h3><a id="user-content-prophet-1" aria-label="Permalink: Prophet" href="#prophet-1"></a></p>
<p dir="auto">Add <a href="https://github.com/ankane/prophet">prophet-rb</a> to your Gemfile:</p>
<div dir="auto" data-snippet-clipboard-copy-content="gem &quot;prophet-rb&quot;, &quot;>= 0.2.1&quot;"><pre><span>gem</span> <span>"prophet-rb"</span><span>,</span> <span>"&gt;= 0.2.1"</span></pre></div>
<p dir="auto">And add to <code>config/blazer.yml</code>:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Trend</h3><a id="user-content-trend-1" aria-label="Permalink: Trend" href="#trend-1"></a></p>
<p dir="auto"><a href="https://trendapi.org/" rel="nofollow">Trend</a> uses an external service by default, but you can run it on your own infrastructure as well.</p>
<p dir="auto">Add <a href="https://github.com/ankane/trend">trend</a> to your Gemfile:</p>

<p dir="auto">And add to <code>config/blazer.yml</code>:</p>

<p dir="auto">For the <a href="https://github.com/ankane/trend-api">self-hosted API</a>, create an initializer with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="Trend.url = &quot;http://localhost:8000&quot;"><pre><span>Trend</span><span>.</span><span>url</span> <span>=</span> <span>"http://localhost:8000"</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Uploads</h2><a id="user-content-uploads" aria-label="Permalink: Uploads" href="#uploads"></a></p>
<p dir="auto">Create database tables from CSV files. <a href="https://blazer.dokkuapp.com/uploads" rel="nofollow">Example</a></p>
<p dir="auto">Run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="rails generate blazer:uploads
rails db:migrate"><pre>rails generate blazer:uploads
rails db:migrate</pre></div>
<p dir="auto">And add to <code>config/blazer.yml</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="uploads:
  url: postgres://...
  schema: uploads
  data_source: main"><pre><span>uploads</span>:
  <span>url</span>: <span>postgres://...</span>
  <span>schema</span>: <span>uploads</span>
  <span>data_source</span>: <span>main</span></pre></div>
<p dir="auto">This feature requires PostgreSQL. Create a new schema just for uploads.</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Data Sources</h2><a id="user-content-data-sources" aria-label="Permalink: Data Sources" href="#data-sources"></a></p>
<p dir="auto">Blazer supports multiple data sources 🎉</p>
<p dir="auto">Add additional data sources in <code>config/blazer.yml</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  main:
    url: <%= ENV[&quot;BLAZER_DATABASE_URL&quot;] %>
    # timeout, smart_variables, linked_columns, smart_columns
  catalog:
    url: <%= ENV[&quot;CATALOG_DATABASE_URL&quot;] %>
    # ...
  redshift:
    url: <%= ENV[&quot;REDSHIFT_DATABASE_URL&quot;] %>
    # ..."><pre><span>data_sources</span>:
  <span>main</span>:
    <span>url</span>: <span>&lt;%= ENV["BLAZER_DATABASE_URL"] %&gt;</span>
    <span><span>#</span> timeout, smart_variables, linked_columns, smart_columns</span>
  <span>catalog</span>:
    <span>url</span>: <span>&lt;%= ENV["CATALOG_DATABASE_URL"] %&gt;</span>
    <span><span>#</span> ...</span>
  <span>redshift</span>:
    <span>url</span>: <span>&lt;%= ENV["REDSHIFT_DATABASE_URL"] %&gt;</span>
    <span><span>#</span> ...</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Full List</h3><a id="user-content-full-list" aria-label="Permalink: Full List" href="#full-list"></a></p>
<ul dir="auto">
<li><a href="#amazon-athena">Amazon Athena</a></li>
<li><a href="#amazon-redshift">Amazon Redshift</a></li>
<li><a href="#apache-drill">Apache Drill</a></li>
<li><a href="#apache-hive">Apache Hive</a></li>
<li><a href="#apache-ignite">Apache Ignite</a></li>
<li><a href="#apache-spark">Apache Spark</a></li>
<li><a href="#cassandra">Cassandra</a></li>
<li><a href="#druid">Druid</a></li>
<li><a href="#elasticsearch">Elasticsearch</a></li>
<li><a href="#google-bigquery">Google BigQuery</a></li>
<li><a href="#ibm-db2-and-informix">IBM DB2 and Informix</a></li>
<li><a href="#influxdb">InfluxDB</a></li>
<li><a href="#mysql-1">MySQL</a></li>
<li><a href="#neo4j">Neo4j</a></li>
<li><a href="#opensearch">OpenSearch</a></li>
<li><a href="#oracle">Oracle</a></li>
<li><a href="#postgresql-1">PostgreSQL</a></li>
<li><a href="#presto">Presto</a></li>
<li><a href="#salesforce">Salesforce</a></li>
<li><a href="#socrata-open-data-api-soda">Socrata Open Data API (SODA)</a></li>
<li><a href="#snowflake">Snowflake</a></li>
<li><a href="#sqlite">SQLite</a></li>
<li><a href="#sql-server">SQL Server</a></li>
</ul>
<p dir="auto">You can also <a href="#creating-an-adapter">create an adapter</a> for any other data store.</p>
<p dir="auto"><strong>Note:</strong> In the examples below, we recommend using environment variables for urls.</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: <%= ENV[&quot;BLAZER_MY_SOURCE_URL&quot;] %>"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>&lt;%= ENV["BLAZER_MY_SOURCE_URL"] %&gt;</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Amazon Athena</h3><a id="user-content-amazon-athena" aria-label="Permalink: Amazon Athena" href="#amazon-athena"></a></p>
<p dir="auto">Add <a href="https://github.com/aws/aws-sdk-ruby">aws-sdk-athena</a> and <a href="https://github.com/aws/aws-sdk-ruby">aws-sdk-glue</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: athena
    database: database

    # optional settings
    output_location: s3://some-bucket/
    workgroup: primary
    access_key_id: ...
    secret_access_key: ...
    region: ..."><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>athena</span>
    <span>database</span>: <span>database</span>

    <span><span>#</span> optional settings</span>
    <span>output_location</span>: <span>s3://some-bucket/</span>
    <span>workgroup</span>: <span>primary</span>
    <span>access_key_id</span>: <span>...</span>
    <span>secret_access_key</span>: <span>...</span>
    <span>region</span>: <span>...</span></pre></div>
<p dir="auto">Here’s an example IAM policy:</p>
<div dir="auto" data-snippet-clipboard-copy-content="{
    &quot;Version&quot;: &quot;2012-10-17&quot;,
    &quot;Statement&quot;: [
        {
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Action&quot;: [
                &quot;athena:GetQueryExecution&quot;,
                &quot;athena:GetQueryResults&quot;,
                &quot;athena:StartQueryExecution&quot;
            ],
            &quot;Resource&quot;: [
                &quot;arn:aws:athena:region:account-id:workgroup/primary&quot;
            ]
        },
        {
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Action&quot;: [
                &quot;glue:GetTable&quot;,
                &quot;glue:GetTables&quot;
            ],
            &quot;Resource&quot;: [
                &quot;arn:aws:glue:region:account-id:catalog&quot;,
                &quot;arn:aws:glue:region:account-id:database/default&quot;,
                &quot;arn:aws:glue:region:account-id:table/default/*&quot;
            ]
        }
    ]
}"><pre>{
    <span>"Version"</span>: <span><span>"</span>2012-10-17<span>"</span></span>,
    <span>"Statement"</span>: [
        {
            <span>"Effect"</span>: <span><span>"</span>Allow<span>"</span></span>,
            <span>"Action"</span>: [
                <span><span>"</span>athena:GetQueryExecution<span>"</span></span>,
                <span><span>"</span>athena:GetQueryResults<span>"</span></span>,
                <span><span>"</span>athena:StartQueryExecution<span>"</span></span>
            ],
            <span>"Resource"</span>: [
                <span><span>"</span>arn:aws:athena:region:account-id:workgroup/primary<span>"</span></span>
            ]
        },
        {
            <span>"Effect"</span>: <span><span>"</span>Allow<span>"</span></span>,
            <span>"Action"</span>: [
                <span><span>"</span>glue:GetTable<span>"</span></span>,
                <span><span>"</span>glue:GetTables<span>"</span></span>
            ],
            <span>"Resource"</span>: [
                <span><span>"</span>arn:aws:glue:region:account-id:catalog<span>"</span></span>,
                <span><span>"</span>arn:aws:glue:region:account-id:database/default<span>"</span></span>,
                <span><span>"</span>arn:aws:glue:region:account-id:table/default/*<span>"</span></span>
            ]
        }
    ]
}</pre></div>
<p dir="auto">You also need to configure <a href="https://aws.amazon.com/premiumsupport/knowledge-center/access-denied-athena/" rel="nofollow">S3 permissions</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Amazon Redshift</h3><a id="user-content-amazon-redshift" aria-label="Permalink: Amazon Redshift" href="#amazon-redshift"></a></p>
<p dir="auto">Add <a href="https://github.com/kwent/activerecord6-redshift-adapter">activerecord6-redshift-adapter</a> or <a href="https://github.com/ConsultingMD/activerecord5-redshift-adapter">activerecord5-redshift-adapter</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: redshift://user:password@hostname:5439/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>redshift://user:password@hostname:5439/database</span></pre></div>
<p dir="auto">Use a <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_GRANT.html" rel="nofollow">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Apache Drill</h3><a id="user-content-apache-drill" aria-label="Permalink: Apache Drill" href="#apache-drill"></a></p>
<p dir="auto">Add <a href="https://github.com/ankane/drill-sergeant">drill-sergeant</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: drill
    url: http://hostname:8047"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>drill</span>
    <span>url</span>: <span>http://hostname:8047</span></pre></div>
<p dir="auto">Use a <a href="https://drill.apache.org/docs/roles-and-privileges/" rel="nofollow">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Apache Hive</h3><a id="user-content-apache-hive" aria-label="Permalink: Apache Hive" href="#apache-hive"></a></p>
<p dir="auto">Add <a href="https://github.com/ankane/hexspace">hexspace</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: hive
    url: sasl://user:password@hostname:10000/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>hive</span>
    <span>url</span>: <span>sasl://user:password@hostname:10000/database</span></pre></div>
<p dir="auto">Use a <a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Authorization" rel="nofollow">read-only user</a>. Requires <a href="https://cwiki.apache.org/confluence/display/Hive/Setting+Up+HiveServer2" rel="nofollow">HiveServer2</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Apache Ignite</h3><a id="user-content-apache-ignite" aria-label="Permalink: Apache Ignite" href="#apache-ignite"></a></p>
<p dir="auto">Add <a href="https://github.com/ankane/ignite-ruby">ignite-client</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: ignite://user:password@hostname:10800"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>ignite://user:password@hostname:10800</span></pre></div>
<p dir="auto">Use a <a href="https://www.gridgain.com/docs/latest/administrators-guide/security/authorization-permissions" rel="nofollow">read-only user</a> (requires a third-party plugin).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Apache Spark</h3><a id="user-content-apache-spark" aria-label="Permalink: Apache Spark" href="#apache-spark"></a></p>
<p dir="auto">Add <a href="https://github.com/ankane/hexspace">hexspace</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: spark
    url: sasl://user:password@hostname:10000/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>spark</span>
    <span>url</span>: <span>sasl://user:password@hostname:10000/database</span></pre></div>
<p dir="auto">Use a read-only user. Requires the <a href="https://spark.apache.org/docs/latest/sql-distributed-sql-engine.html" rel="nofollow">Thrift server</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Cassandra</h3><a id="user-content-cassandra" aria-label="Permalink: Cassandra" href="#cassandra"></a></p>
<p dir="auto">Add <a href="https://github.com/datastax/ruby-driver">cassandra-driver</a> (and <a href="https://github.com/knu/sorted_set">sorted_set</a> for Ruby 3+) to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: cassandra://user:password@hostname:9042/keyspace"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>cassandra://user:password@hostname:9042/keyspace</span></pre></div>
<p dir="auto">Use a <a href="https://docs.datastax.com/en/cql-oss/3.3/cql/cql_using/useSecurePermission.html" rel="nofollow">read-only role</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Druid</h3><a id="user-content-druid" aria-label="Permalink: Druid" href="#druid"></a></p>
<p dir="auto">Enable <a href="http://druid.io/docs/latest/querying/sql.html#configuration" rel="nofollow">SQL support</a> on the broker and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: druid
    url: http://hostname:8082"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>druid</span>
    <span>url</span>: <span>http://hostname:8082</span></pre></div>
<p dir="auto">Use a <a href="https://druid.apache.org/docs/latest/development/extensions-core/druid-basic-security.html" rel="nofollow">read-only role</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Elasticsearch</h3><a id="user-content-elasticsearch" aria-label="Permalink: Elasticsearch" href="#elasticsearch"></a></p>
<p dir="auto">Add <a href="https://github.com/elastic/elasticsearch-ruby">elasticsearch</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: elasticsearch
    url: http://user:password@hostname:9200"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>elasticsearch</span>
    <span>url</span>: <span>http://user:password@hostname:9200</span></pre></div>
<p dir="auto">Use a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-privileges.html" rel="nofollow">read-only role</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Google BigQuery</h3><a id="user-content-google-bigquery" aria-label="Permalink: Google BigQuery" href="#google-bigquery"></a></p>
<p dir="auto">Add <a href="https://github.com/GoogleCloudPlatform/google-cloud-ruby/tree/master/google-cloud-bigquery">google-cloud-bigquery</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: bigquery
    project: your-project
    keyfile: path/to/keyfile.json"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>bigquery</span>
    <span>project</span>: <span>your-project</span>
    <span>keyfile</span>: <span>path/to/keyfile.json</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">IBM DB2 and Informix</h3><a id="user-content-ibm-db2-and-informix" aria-label="Permalink: IBM DB2 and Informix" href="#ibm-db2-and-informix"></a></p>
<p dir="auto">Add <a href="https://github.com/ibmdb/ruby-ibmdb">ibm_db</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: ibm-db://user:password@hostname:50000/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>ibm-db://user:password@hostname:50000/database</span></pre></div>
<p dir="auto">Use a <a href="https://www.ibm.com/support/pages/creating-read-only-database-permissions-user" rel="nofollow">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">InfluxDB</h3><a id="user-content-influxdb" aria-label="Permalink: InfluxDB" href="#influxdb"></a></p>
<p dir="auto">Add <a href="https://github.com/influxdata/influxdb-ruby">influxdb</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: influxdb
    url: http://user:password@hostname:8086/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>influxdb</span>
    <span>url</span>: <span>http://user:password@hostname:8086/database</span></pre></div>
<p dir="auto">Use a <a href="https://docs.influxdata.com/influxdb/v1.8/administration/authentication_and_authorization/" rel="nofollow">read-only user</a>. Supports <a href="https://docs.influxdata.com/influxdb/v1.8/query_language/explore-data/" rel="nofollow">InfluxQL</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">MySQL</h3><a id="user-content-mysql-1" aria-label="Permalink: MySQL" href="#mysql-1"></a></p>
<p dir="auto">Add <a href="https://github.com/brianmario/mysql2">mysql2</a> to your Gemfile (if it’s not there) and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: mysql2://user:password@hostname:3306/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>mysql2://user:password@hostname:3306/database</span></pre></div>
<p dir="auto">Use a <a href="#mysql">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Neo4j</h3><a id="user-content-neo4j" aria-label="Permalink: Neo4j" href="#neo4j"></a></p>
<p dir="auto">Add <a href="https://github.com/neo4jrb/neo4j-core">neo4j-core</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: neo4j
    url: http://user:password@hostname:7474"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>neo4j</span>
    <span>url</span>: <span>http://user:password@hostname:7474</span></pre></div>
<p dir="auto">Use a <a href="https://neo4j.com/docs/cypher-manual/current/access-control/manage-privileges/" rel="nofollow">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">OpenSearch</h3><a id="user-content-opensearch" aria-label="Permalink: OpenSearch" href="#opensearch"></a></p>
<p dir="auto">Add <a href="https://github.com/opensearch-project/opensearch-ruby">opensearch-ruby</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: opensearch
    url: http://user:password@hostname:9200"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>opensearch</span>
    <span>url</span>: <span>http://user:password@hostname:9200</span></pre></div>
<p dir="auto">Use a <a href="https://opensearch.org/docs/latest/security-plugin/access-control/permissions/" rel="nofollow">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Oracle</h3><a id="user-content-oracle" aria-label="Permalink: Oracle" href="#oracle"></a></p>
<p dir="auto">Add <a href="https://github.com/rsim/oracle-enhanced">activerecord-oracle_enhanced-adapter</a> and <a href="https://github.com/kubo/ruby-oci8">ruby-oci8</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: oracle-enhanced://user:password@hostname:1521/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>oracle-enhanced://user:password@hostname:1521/database</span></pre></div>
<p dir="auto">Use a <a href="https://docs.oracle.com/cd/B19306_01/network.102/b14266/authoriz.htm" rel="nofollow">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">PostgreSQL</h3><a id="user-content-postgresql-1" aria-label="Permalink: PostgreSQL" href="#postgresql-1"></a></p>
<p dir="auto">Add <a href="https://github.com/ged/ruby-pg">pg</a> to your Gemfile (if it’s not there) and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: postgres://user:password@hostname:5432/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>postgres://user:password@hostname:5432/database</span></pre></div>
<p dir="auto">Use a <a href="#postgresql">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Presto</h3><a id="user-content-presto" aria-label="Permalink: Presto" href="#presto"></a></p>
<p dir="auto">Add <a href="https://github.com/treasure-data/presto-client-ruby">presto-client</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: presto://user@hostname:8080/catalog"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>presto://user@hostname:8080/catalog</span></pre></div>
<p dir="auto">Use a <a href="https://prestodb.io/docs/current/security/built-in-system-access-control.html" rel="nofollow">read-only user</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Salesforce</h3><a id="user-content-salesforce" aria-label="Permalink: Salesforce" href="#salesforce"></a></p>
<p dir="auto">Add <a href="https://github.com/restforce/restforce">restforce</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: salesforce"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>salesforce</span></pre></div>
<p dir="auto">And set the appropriate environment variables:</p>
<div dir="auto" data-snippet-clipboard-copy-content="SALESFORCE_USERNAME=&quot;username&quot;
SALESFORCE_PASSWORD=&quot;password&quot;
SALESFORCE_SECURITY_TOKEN=&quot;security token&quot;
SALESFORCE_CLIENT_ID=&quot;client id&quot;
SALESFORCE_CLIENT_SECRET=&quot;client secret&quot;
SALESFORCE_API_VERSION=&quot;41.0&quot;"><pre>SALESFORCE_USERNAME=<span><span>"</span>username<span>"</span></span>
SALESFORCE_PASSWORD=<span><span>"</span>password<span>"</span></span>
SALESFORCE_SECURITY_TOKEN=<span><span>"</span>security token<span>"</span></span>
SALESFORCE_CLIENT_ID=<span><span>"</span>client id<span>"</span></span>
SALESFORCE_CLIENT_SECRET=<span><span>"</span>client secret<span>"</span></span>
SALESFORCE_API_VERSION=<span><span>"</span>41.0<span>"</span></span></pre></div>
<p dir="auto">Use a read-only user. Supports <a href="https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm" rel="nofollow">SOQL</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Socrata Open Data API (SODA)</h3><a id="user-content-socrata-open-data-api-soda" aria-label="Permalink: Socrata Open Data API (SODA)" href="#socrata-open-data-api-soda"></a></p>
<p dir="auto">Set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: soda
    url: https://soda.demo.socrata.com/resource/4tka-6guv.json
    app_token: ..."><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>soda</span>
    <span>url</span>: <span>https://soda.demo.socrata.com/resource/4tka-6guv.json</span>
    <span>app_token</span>: <span>...</span></pre></div>
<p dir="auto">Supports <a href="https://dev.socrata.com/docs/functions/" rel="nofollow">SoQL</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Snowflake</h3><a id="user-content-snowflake" aria-label="Permalink: Snowflake" href="#snowflake"></a></p>
<p dir="auto">First, install ODBC. For Homebrew, use:</p>

<p dir="auto">For Ubuntu, use:</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt-get install unixodbc-dev"><pre>sudo apt-get install unixodbc-dev</pre></div>
<p dir="auto">For Heroku, use the <a href="https://github.com/heroku/heroku-buildpack-apt">Apt buildpack</a> and create an <code>Aptfile</code> with:</p>
<div data-snippet-clipboard-copy-content="unixodbc-dev
https://sfc-repo.snowflakecomputing.com/odbc/linux/2.21.5/snowflake-odbc-2.21.5.x86_64.deb"><pre lang="text"><code>unixodbc-dev
https://sfc-repo.snowflakecomputing.com/odbc/linux/2.21.5/snowflake-odbc-2.21.5.x86_64.deb
</code></pre></div>
<blockquote>
<p dir="auto">This installs the driver at <code>/app/.apt/usr/lib/snowflake/odbc/lib/libSnowflake.so</code></p>
</blockquote>
<p dir="auto">Then, download the <a href="https://docs.snowflake.net/manuals/user-guide/odbc-download.html" rel="nofollow">Snowflake ODBC driver</a>. Add <a href="https://github.com/localytics/odbc_adapter">odbc_adapter</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: snowflake
    conn_str: Driver=/path/to/libSnowflake.so;uid=user;pwd=password;server=host.snowflakecomputing.com"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>snowflake</span>
    <span>conn_str</span>: <span>Driver=/path/to/libSnowflake.so;uid=user;pwd=password;server=host.snowflakecomputing.com</span></pre></div>
<p dir="auto">Use a <a href="https://docs.snowflake.com/en/user-guide/security-access-control-configure.html" rel="nofollow">read-only role</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">SQLite</h3><a id="user-content-sqlite" aria-label="Permalink: SQLite" href="#sqlite"></a></p>
<p dir="auto">Add <a href="https://github.com/sparklemotion/sqlite3-ruby">sqlite3</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: sqlite3:path/to/database.sqlite3"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>sqlite3:path/to/database.sqlite3</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">SQL Server</h3><a id="user-content-sql-server" aria-label="Permalink: SQL Server" href="#sql-server"></a></p>
<p dir="auto">Add <a href="https://github.com/rails-sqlserver/tiny_tds">tiny_tds</a> and <a href="https://github.com/rails-sqlserver/activerecord-sqlserver-adapter">activerecord-sqlserver-adapter</a> to your Gemfile and set:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    url: sqlserver://user:password@hostname:1433/database"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>url</span>: <span>sqlserver://user:password@hostname:1433/database</span></pre></div>
<p dir="auto">Use a <a href="https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/getting-started-with-database-engine-permissions?view=sql-server-ver15" rel="nofollow">read-only user</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Creating an Adapter</h2><a id="user-content-creating-an-adapter" aria-label="Permalink: Creating an Adapter" href="#creating-an-adapter"></a></p>
<p dir="auto">Create an adapter for any data store with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="class FooAdapter < Blazer::Adapters::BaseAdapter
  # code goes here
end

Blazer.register_adapter &quot;foo&quot;, FooAdapter"><pre><span>class</span> <span>FooAdapter</span> &lt; <span>Blazer</span>::<span>Adapters</span>::<span>BaseAdapter</span>
  <span># code goes here</span>
<span>end</span>

<span>Blazer</span><span>.</span><span>register_adapter</span> <span>"foo"</span><span>,</span> <span>FooAdapter</span></pre></div>
<p dir="auto">See the <a href="https://github.com/ankane/blazer/blob/master/lib/blazer/adapters/presto_adapter.rb">Presto adapter</a> for a good example. Then use:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data_sources:
  my_source:
    adapter: foo
    url: http://user:password@hostname:9200/"><pre><span>data_sources</span>:
  <span>my_source</span>:
    <span>adapter</span>: <span>foo</span>
    <span>url</span>: <span>http://user:password@hostname:9200/</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Query Permissions</h2><a id="user-content-query-permissions" aria-label="Permalink: Query Permissions" href="#query-permissions"></a></p>
<p dir="auto">Blazer supports a basic permissions model.</p>
<ol dir="auto">
<li>Queries without a name are unlisted</li>
<li>Queries whose name starts with <code>#</code> are only listed to the creator</li>
<li>Queries whose name starts with <code>*</code> can only be edited by the creator</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Learn SQL</h2><a id="user-content-learn-sql" aria-label="Permalink: Learn SQL" href="#learn-sql"></a></p>
<p dir="auto">Have team members who want to learn SQL? Here are a few great, free resources.</p>
<ul dir="auto">
<li><a href="https://dataschool.com/learn-sql/" rel="nofollow">The Data School</a></li>
<li><a href="https://sqlbolt.com/" rel="nofollow">SQLBolt</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Useful Tools</h2><a id="user-content-useful-tools" aria-label="Permalink: Useful Tools" href="#useful-tools"></a></p>
<p dir="auto">For an easy way to group by day, week, month, and more with correct time zones, check out <a href="https://github.com/ankane/groupdate.sql">Groupdate.sql</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Standalone Version</h2><a id="user-content-standalone-version" aria-label="Permalink: Standalone Version" href="#standalone-version"></a></p>
<p dir="auto">Looking for a standalone version? Check out <a href="https://github.com/buren/ghost_blazer">Ghost Blazer</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Performance</h2><a id="user-content-performance" aria-label="Permalink: Performance" href="#performance"></a></p>
<p dir="auto">By default, queries take up a request while they are running. To run queries asynchronously, add to your config:</p>

<p dir="auto"><strong>Note:</strong> Requires caching to be enabled. If you have multiple web processes, your app must use a centralized cache store like Memcached or Redis.</p>
<div dir="auto" data-snippet-clipboard-copy-content="config.cache_store = :mem_cache_store"><pre><span>config</span><span>.</span><span>cache_store</span> <span>=</span> <span>:mem_cache_store</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Archiving</h2><a id="user-content-archiving" aria-label="Permalink: Archiving" href="#archiving"></a></p>
<p dir="auto">Archive queries that haven’t been viewed in over 90 days.</p>
<div dir="auto" data-snippet-clipboard-copy-content="rake blazer:archive_queries"><pre>rake blazer:archive_queries</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Content Security Policy</h2><a id="user-content-content-security-policy" aria-label="Permalink: Content Security Policy" href="#content-security-policy"></a></p>
<p dir="auto">If views are stuck with a <code>Loading...</code> message, there might be a problem with strict CSP settings in your app. This can be checked with Firefox or Chrome dev tools. You can allow Blazer to override these settings for its controllers with:</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Upgrading</h2><a id="user-content-upgrading" aria-label="Permalink: Upgrading" href="#upgrading"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">3.0</h3><a id="user-content-30" aria-label="Permalink: 3.0" href="#30"></a></p>
<p dir="auto">Maps now use Mapbox GL JS v1 instead of Mapbox.js, which affects Mapbox billing.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">2.6</h3><a id="user-content-26" aria-label="Permalink: 2.6" href="#26"></a></p>
<p dir="auto">Custom adapters now need to specify how to quote variables in queries (there is no longer a default)</p>
<div dir="auto" data-snippet-clipboard-copy-content="class FooAdapter < Blazer::Adapters::BaseAdapter
  def quoting
    :backslash_escape # single quote strings and convert ' to \' and \ to \\
    # or
    :single_quote_escape # single quote strings and convert ' to ''
    # or
    ->(value) { ... } # custom method
  end
end"><pre><span>class</span> <span>FooAdapter</span> &lt; <span>Blazer</span>::<span>Adapters</span>::<span>BaseAdapter</span>
  <span>def</span> <span>quoting</span>
    <span>:backslash_escape</span> <span># single quote strings and convert ' to \' and \ to \\</span>
    <span># or</span>
    <span>:single_quote_escape</span> <span># single quote strings and convert ' to ''</span>
    <span># or</span>
    <span>-&gt;</span><span>(</span><span>value</span><span>)</span> <span>{</span> ... <span>}</span> <span># custom method</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">2.3</h3><a id="user-content-23" aria-label="Permalink: 2.3" href="#23"></a></p>
<p dir="auto">To archive queries, create a migration</p>
<div dir="auto" data-snippet-clipboard-copy-content="rails g migration add_status_to_blazer_queries"><pre>rails g migration add_status_to_blazer_queries</pre></div>
<p dir="auto">with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="add_column :blazer_queries, :status, :string
Blazer::Query.update_all(status: &quot;active&quot;)"><pre><span>add_column</span> <span>:blazer_queries</span><span>,</span> <span>:status</span><span>,</span> <span>:string</span>
<span>Blazer</span>::<span>Query</span><span>.</span><span>update_all</span><span>(</span><span>status</span>: <span>"active"</span><span>)</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">2.0</h3><a id="user-content-20" aria-label="Permalink: 2.0" href="#20"></a></p>
<p dir="auto">To use Slack notifications, create a migration</p>
<div dir="auto" data-snippet-clipboard-copy-content="rails g migration add_slack_channels_to_blazer_checks"><pre>rails g migration add_slack_channels_to_blazer_checks</pre></div>
<p dir="auto">with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="add_column :blazer_checks, :slack_channels, :text"><pre><span>add_column</span> <span>:blazer_checks</span><span>,</span> <span>:slack_channels</span><span>,</span> <span>:text</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">History</h2><a id="user-content-history" aria-label="Permalink: History" href="#history"></a></p>
<p dir="auto">View the <a href="https://github.com/ankane/blazer/blob/master/CHANGELOG.md">changelog</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Thanks</h2><a id="user-content-thanks" aria-label="Permalink: Thanks" href="#thanks"></a></p>
<p dir="auto">Blazer uses a number of awesome open source projects, including <a href="https://github.com/rails/rails/">Rails</a>, <a href="https://github.com/vuejs/vue">Vue.js</a>, <a href="https://github.com/jquery/jquery">jQuery</a>, <a href="https://github.com/twbs/bootstrap">Bootstrap</a>, <a href="https://github.com/brianreavis/selectize.js">Selectize</a>, <a href="https://github.com/jmosbech/StickyTableHeaders">StickyTableHeaders</a>, <a href="https://github.com/joequery/Stupid-Table-Plugin">Stupid jQuery Table Sort</a>, and <a href="https://github.com/dangrossman/bootstrap-daterangepicker">Date Range Picker</a>.</p>
<p dir="auto">Demo data from <a href="https://grouplens.org/datasets/movielens/" rel="nofollow">MovieLens</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Want to Make Blazer Better?</h2><a id="user-content-want-to-make-blazer-better" aria-label="Permalink: Want to Make Blazer Better?" href="#want-to-make-blazer-better"></a></p>
<p dir="auto">That’s awesome! Here are a few ways you can help:</p>
<ul dir="auto">
<li><a href="https://github.com/ankane/blazer/issues">Report bugs</a></li>
<li>Fix bugs and <a href="https://github.com/ankane/blazer/pulls">submit pull requests</a></li>
<li>Write, clarify, or fix documentation</li>
<li>Suggest or add new features</li>
</ul>
<p dir="auto">Check out the <a href="https://github.com/ankane/blazer-dev">dev app</a> to get started.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Botanical gardens can cool city air by an average of 5°C (354 pts)]]></title>
            <link>https://newatlas.com/environment/surrey-cooling-effects-green-spaces-waterways/</link>
            <guid>39524164</guid>
            <pubDate>Tue, 27 Feb 2024 13:59:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newatlas.com/environment/surrey-cooling-effects-green-spaces-waterways/">https://newatlas.com/environment/surrey-cooling-effects-green-spaces-waterways/</a>, See on <a href="https://news.ycombinator.com/item?id=39524164">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Temperatures around the world are <a href="https://newatlas.com/science/hottest-summer-record-2023-nasa/" data-cms-ai="0">on the rise</a>, with 2023 recently confirmed as the <a href="https://newatlas.com/environment/2023-hottest-year-on-record/" data-cms-ai="0">hottest since records began</a>. A new study has found that bringing nature into cities could help lower temperatures during heatwaves.</p><p>If you're lucky enough to live near forested areas, you'll know that one of the best ways to escape the mid-day heat while out rambling is to head for tree cover. Living in a concrete jungle might present fewer options than being out in the sticks, but even a visit to a local park or botanical garden could help you keep your cool.</p><p>In fact, research led by the University of Surrey in the UK has found that botanical gardens can lower the temperature of inner city air by as much as 5 °C. Wetlands and rain gardens are not far behind in the cooling stakes, at 4.7 and 4.5 °C respectively, trees planted along streets also lowered air temps by 3.8 °C while city parks managed 3.2 °C.</p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="The potential cooling effects of GBGI infrastructure across 10 categories selected in the study" width="996" height="653" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/693cf14/2147483647/strip/true/crop/996x653+0+0/resize/440x288!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg 440w,https://assets.newatlas.com/dims4/default/e4cd2cb/2147483647/strip/true/crop/996x653+0+0/resize/800x524!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg 800w,https://assets.newatlas.com/dims4/default/2245c57/2147483647/strip/true/crop/996x653+0+0/resize/1200x787!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg 1200w,https://assets.newatlas.com/dims4/default/e8c2679/2147483647/strip/true/crop/996x653+0+0/resize/1920x1259!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg 1920w" data-src="https://assets.newatlas.com/dims4/default/18d46a4/2147483647/strip/true/crop/996x653+0+0/resize/996x653!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/693cf14/2147483647/strip/true/crop/996x653+0+0/resize/440x288!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg 440w,https://assets.newatlas.com/dims4/default/e4cd2cb/2147483647/strip/true/crop/996x653+0+0/resize/800x524!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg 800w,https://assets.newatlas.com/dims4/default/2245c57/2147483647/strip/true/crop/996x653+0+0/resize/1200x787!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg 1200w,https://assets.newatlas.com/dims4/default/e8c2679/2147483647/strip/true/crop/996x653+0+0/resize/1920x1259!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg 1920w" src="https://assets.newatlas.com/dims4/default/18d46a4/2147483647/strip/true/crop/996x653+0+0/resize/996x653!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F40%2Fb0%2Fb1e7462e421faa42df63e8454a8a%2F1-s2.0-S2666675824000262-fx1_lrg.jpg">
</p>



    
    

    
        <div><figcaption itemprop="caption">The potential cooling effects of GBGI infrastructure across 10 categories selected in the study</figcaption><p>Prashant Kumar et al</p></div>
    
</figure>

                
            </div><p>"We have known for some time that green spaces and water can cool cities down," said Professor Prashant Kumar, founding director of the Global Center for Clean Air Research at the University of Surrey, as well as professor and chair in Air Quality and Health, and co-director at the Institute for Sustainability. "However, this study provides us the most comprehensive picture yet. What's more – we can explain why. From trees providing shade, to evaporating water cooling the air."</p><p>The paper notes that an air temperature of 40.3 °C (104.5 °F) broke records in the UK on July 19, 2022, some 62,862 deaths were linked to summer heat across Europe in the same year while the 2003 heatwave in Europe led to an economic loss of €16 billion thanks to drought and crop failures. The team of 29 scientists from the UK, Australia, Brazil, China, Hong Kong and the US also says that the IPCC reckons that "green and blue urban infrastructure elements are particularly effective in reducing air temperatures in cities."</p><p>From a pool of more than 27,000 research papers, the researchers selected 202 for meta-analysis based on a number of urban green-blue-grey infrastructure categories – including parks, engineered greening projects, wetlands, green walls, parks and botanical gardens.</p><p>Trees and plants, for example, help reduce heat by reducing the amount of direct sunlight reaching the ground, while also releasing moisture into the air. Water bodies cool the surrounding environment via "<a href="https://en.wikipedia.org/wiki/Evapotranspiration" target="_blank" data-cms-ai="0">evapotranspiration</a>, shading, the <a href="https://en.wikipedia.org/wiki/Albedo" target="_blank" data-cms-ai="0">albedo effect</a>, groundwater recharge and temperature buffering" and could also serve as heatsinks, cooling during daylight hours and offering warming potential at night. Green roofs and walls not only help insulate buildings, but also reduce heat absorption, and vegetation can serve as windbreaks for natural ventilation.</p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="Table showing the cooling effects of several green spaces and waterways" width="1396" height="687" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/14acb79/2147483647/strip/true/crop/1396x687+0+0/resize/440x217!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg 440w,https://assets.newatlas.com/dims4/default/30fb544/2147483647/strip/true/crop/1396x687+0+0/resize/800x394!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg 800w,https://assets.newatlas.com/dims4/default/075c8ea/2147483647/strip/true/crop/1396x687+0+0/resize/1200x591!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg 1200w,https://assets.newatlas.com/dims4/default/9ae51da/2147483647/strip/true/crop/1396x687+0+0/resize/1920x945!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg 1920w" data-src="https://assets.newatlas.com/dims4/default/0162ba8/2147483647/strip/true/crop/1396x687+0+0/resize/1396x687!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/14acb79/2147483647/strip/true/crop/1396x687+0+0/resize/440x217!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg 440w,https://assets.newatlas.com/dims4/default/30fb544/2147483647/strip/true/crop/1396x687+0+0/resize/800x394!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg 800w,https://assets.newatlas.com/dims4/default/075c8ea/2147483647/strip/true/crop/1396x687+0+0/resize/1200x591!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg 1200w,https://assets.newatlas.com/dims4/default/9ae51da/2147483647/strip/true/crop/1396x687+0+0/resize/1920x945!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg 1920w" src="https://assets.newatlas.com/dims4/default/0162ba8/2147483647/strip/true/crop/1396x687+0+0/resize/1396x687!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F9a%2Ff4%2F33d5aa8f4112942745dea2f15e28%2Ftable.jpg">
</p>



    
    

    
        <div><figcaption itemprop="caption">Table showing the cooling effects of several green spaces and waterways</figcaption><p>University of Surrey</p></div>
    
</figure>

                
            </div><p>We've already seen a number of <a href="https://newatlas.com/architecture/la-serre-mvrdv/" data-cms-ai="0">architecture projects</a> <a href="https://newatlas.com/architecture/wonderwoods-vertical-forest/" data-cms-ai="0">around the world</a> employ <a href="https://newatlas.com/architecture/hangzhou-oil-refinery-factory-park/" data-cms-ai="0">large amounts</a> of <a href="https://newatlas.com/architecture/vincent-callebaut-green-line/" data-cms-ai="0">greenery</a> to both enliven facades and promote local cooling, along with beneficial landscaping. The researchers conclude by stating that "all urban green-blue-grey infrastructure types provide cooling benefits" and that "nature needs to be brought back into densifying and expanding cities and any opportunity to expand plant cover on the ground, podiums, wall and roofs must be taken."</p><p>But they also recognize that there isn't one simple solution to suit every locale, and much will depend on effective planning – "before selecting suitable urban green-blue-grey infrastructure interventions, it is necessary to assess the local context, environmental conditions, available resources and the budget to ensure their long-term effectiveness and avoid <a href="https://newatlas.com/trees-increase-smog-ozone-heat-wave/49607/" data-cms-ai="0">possible drawbacks</a>."</p><p>"Our paper confirms just how many ways there are to keep cool," added Professor Maria de Fatima Andrade of the Atmospheric Sciences Department at the University of Sao Paulo, Brazil. "But it also reveals how much work is left to do. Institutions around the world need to invest in the right research – because what’s very clear from our study is that there is no one-size-fits-all solution. It depends on what works for your community."</p><p>The study is open access via the journal <i><a href="https://www.sciencedirect.com/science/article/pii/S2666675824000262?via%3Dihub" target="_blank" data-cms-ai="0">The Innovation</a></i>.</p><p>Source: <a href="https://www.surrey.ac.uk/news/wetlands-parks-and-even-botanical-gardens-among-best-ways-cool-cities-during-heatwaves" target="_blank" data-cms-ai="0">University of Surrey</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sony Interactive Entertainment lays off 900 people (105 pts)]]></title>
            <link>https://sonyinteractive.com/en/news/blog/difficult-news-about-our-workforce/</link>
            <guid>39523957</guid>
            <pubDate>Tue, 27 Feb 2024 13:41:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sonyinteractive.com/en/news/blog/difficult-news-about-our-workforce/">https://sonyinteractive.com/en/news/blog/difficult-news-about-our-workforce/</a>, See on <a href="https://news.ycombinator.com/item?id=39523957">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
									
							<article>
				
				
				<figure><img width="1920" height="1056" src="https://sonyinteractive.com/tachyon/2024/02/SIE.blog_SIE-Banner_Grey.jpg?resize=1920%2C1056&amp;crop_strategy=smart" alt="Sony Interactive Entertainment logo on a grey background" decoding="async" fetchpriority="high"></figure>
				<div>
<p>The PlayStation community means everything to us, so I felt it was important to update you on a difficult day at our company. We have made the extremely hard decision to announce our plan to commence a reduction of our overall headcount globally by about 8% or about 900 people, subject to local law and consultation processes. Employees across the globe, including our studios, are impacted.&nbsp;&nbsp;</p>



<p>These are incredibly talented people who have been part of our success, and we are very grateful for their contributions. However, the industry has changed immensely, and we need to future ready ourselves to set the business up for what lies ahead. We need to deliver on expectations from developers and gamers and continue to propel future technology in gaming, so we took a step back to ensure we are set up to continue bringing the best gaming experiences to the community.&nbsp;&nbsp;&nbsp;</p>



<p>Below I’ve shared a copy of the email I sent out to the company this morning to provide more context on our thinking. We deeply appreciate support and understanding from the PlayStation community as these decisions are very difficult. Please rest assured that our plans for reorganizing and streamlining are so we can continue to deliver the best gaming experiences possible.&nbsp;</p>



<hr>



<p><strong><em>Email</em></strong>&nbsp;</p>



<p><em>Subject: Important Update Regarding Organizational Restructuring</em>&nbsp;</p>



<p><em>Team,</em>&nbsp;</p>



<p><em>It is important to provide you with updates about the business as often as possible. Today, I am writing with sad news. Through discussions over the past few months about the evolving economic landscape, changes in the way we develop, distribute, and launch products, and ensuring our organization is future ready in this rapidly changing industry, we have concluded that tough decisions have become inevitable. The leadership team and I made the incredibly difficult decision to restructure operations, which regrettably includes a reduction in our workforce impacting very talented individuals who have contributed to our success.&nbsp;&nbsp;</em></p>



<p><em>After careful consideration and many leadership discussions over several months, it has become clear changes need to be made to continue to grow the business and develop the company. We had to step back, look at our business holistically, and move forward focusing on the long-term sustainability of the company and delivering the best experiences possible for our community. The goal is to streamline our resources to ensure our continued success and ability to deliver experiences gamers and creators have come to expect from us.</em>&nbsp;&nbsp;</p>



<p><em>I want to be as transparent as possible with you, our partners, and our community about what this means:</em>&nbsp;&nbsp;</p>



<ul>
<li><em>We envision reducing our headcount by about 900 people, or about 8% of our current workforce</em>&nbsp;</li>



<li><em>There will be impact for employees across all SIE regions – Americas, EMEA, Japan, and APAC</em>&nbsp;&nbsp;</li>



<li><em>Several PlayStation Studios are affected</em>&nbsp;</li>
</ul>



<p><em>I know that receiving this news will be hard and unsettling and you are wondering what this means for you. Timelines and procedures for how we approach this will vary based on your location due to local laws and regulations</em>.</p>



<ul>
<li><em>For those of you in the US, all impacted employees will be notified today.&nbsp;&nbsp;</em></li>



<li><em>In the UK, it is proposed: &nbsp;</em>
<ul>
<li><em>That PlayStation Studios’ London Studio will close in its entirety;</em></li>



<li><em>That there will be reductions in Firesprite studio;&nbsp;&nbsp;</em></li>



<li><em>And that there will be reductions in various functions across SIE in the UK.</em></li>
</ul>
</li>
</ul>



<p><em>The proposed changes mean that we will enter a period of collective consultation before any final decisions are taken. All employees who are part of the collective consultation will be made aware of the next steps today.&nbsp;&nbsp;</em></p>



<ul>
<li><em>In Japan, we will implement a next career support program. Details will be communicated separately.&nbsp;&nbsp;</em></li>



<li><em>In other countries, we will begin conversations with those who are potentially at risk or impacted as a result of this proposed course of action.&nbsp;&nbsp;</em></li>
</ul>



<p><em>For those who will be leaving SIE: You are leaving this company with our deepest respect and appreciation for all your efforts during your tenure.&nbsp;</em></p>



<p><em>For those who will be staying at SIE: We will be saying goodbye to friends and colleagues that we cherish during this process, and this will be painful. Your resilience, sensitivity, and adaptiveness will be critical in the weeks and months to come.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em></p>



<p><em>This will not be easy, and I am aware of the impact it will have on wellbeing. Affected employees will receive support, including severance benefits. While these are challenging times, it is not indicative of a lack of strength of our company, our brand, or our industry. Our goal is to remain agile and adaptable and to continue to focus on delivering the best gaming experiences possible now and in the future.&nbsp;</em></p>



<p><em>Thank you for your understanding during this difficult period. Please be kind to yourselves and to each other.&nbsp;</em></p>



<p><em>Jim&nbsp;</em></p>
</div>
			</article>
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Boeing missing key elements of safety culture: FAA report (346 pts)]]></title>
            <link>https://www.ainonline.com/aviation-news/air-transport/2024-02-26/boeing-missing-key-elements-safety-culture-faa-report</link>
            <guid>39523813</guid>
            <pubDate>Tue, 27 Feb 2024 13:30:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ainonline.com/aviation-news/air-transport/2024-02-26/boeing-missing-key-elements-safety-culture-faa-report">https://www.ainonline.com/aviation-news/air-transport/2024-02-26/boeing-missing-key-elements-safety-culture-faa-report</a>, See on <a href="https://news.ycombinator.com/item?id=39523813">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-grid-variation="default" data-variation="more-in"><div><a href="https://www.ainonline.com/aviation-news/business-aviation/2024-02-27/utah-medevac-program-aims-save-stricken-service-dogs"><div data-sponsored="false" data-variation="media-top" data-blurred="false"><div><h2>Utah Medevac Program Aims To Save Stricken Service Dogs</h2><h3>It represents the third program of its kind in the U.S.</h3><p>Rotorcraft</p></div><p><img alt="K9 handlers with their charges by helicopter" loading="lazy" width="700" height="395" decoding="async" data-nimg="1" srcset="https://www.ainonline.com/cdn-cgi/image/width=750,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/362%20Intermountain%20Life%20Flight%20Canine.jpeg?h=413144ff&amp;itok=rv2wmtRm 1x, https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/362%20Intermountain%20Life%20Flight%20Canine.jpeg?h=413144ff&amp;itok=rv2wmtRm 2x" src="https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/362%20Intermountain%20Life%20Flight%20Canine.jpeg?h=413144ff&amp;itok=rv2wmtRm"></p></div></a></div><div><a href="https://www.ainonline.com/aviation-news/business-aviation/2024-02-26/argus-prism-sms-success-and-2024-helicopter-market"><div data-sponsored="false" data-variation="media-top" data-blurred="false"><div><h2>Argus: Prism SMS Success and the 2024 Helicopter Market</h2><h3>Global helicopter activity was up almost 20 percent in 2023</h3><p>Rotorcraft</p></div><p><img alt="Airbus Heli" loading="lazy" width="700" height="395" decoding="async" data-nimg="1" srcset="https://www.ainonline.com/cdn-cgi/image/width=750,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Airbus-Heli_CDPH-7409-00057R.jpg?h=2361f00c&amp;itok=ztr84gf- 1x, https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Airbus-Heli_CDPH-7409-00057R.jpg?h=2361f00c&amp;itok=ztr84gf- 2x" src="https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Airbus-Heli_CDPH-7409-00057R.jpg?h=2361f00c&amp;itok=ztr84gf-"></p></div></a></div><div><a href="https://www.ainonline.com/aviation-news/business-aviation/2024-02-26/vita-aerospace-unveiling-rapid-extraction-device"><div data-sponsored="false" data-variation="media-top" data-blurred="true"><div><h2>Vita Aerospace Unveiling Rapid Extraction Device</h2><h3>The new device enables safer hoisting of unconscious victims</h3><p>Rotorcraft</p></div><p><img alt="Vita Pelican Rapid Extraction Device " loading="lazy" width="885" height="500" decoding="async" data-nimg="1" srcset="https://www.ainonline.com/cdn-cgi/image/width=1080,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_885x500/public/2024-02/334web--HAI24_VitaAerospaceRED_mrosales_1595.jpg?h=aecc625a&amp;itok=fzlytipR 1x, https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_885x500/public/2024-02/334web--HAI24_VitaAerospaceRED_mrosales_1595.jpg?h=aecc625a&amp;itok=fzlytipR 2x" src="https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_885x500/public/2024-02/334web--HAI24_VitaAerospaceRED_mrosales_1595.jpg?h=aecc625a&amp;itok=fzlytipR"></p></div></a></div><div><a href="https://www.ainonline.com/aviation-news/business-aviation/2024-02-25/airbus-seeks-boost-output-and-performance"><div data-sponsored="false" data-variation="media-top" data-blurred="false"><div><h2>Airbus Seeks To Boost Output and Performance</h2><h3>Rotorcraft accounted for the strongest earnings growth across the Airbus group</h3><p>Rotorcraft</p></div><p><img alt="Airbus Helicopters" loading="lazy" width="700" height="395" decoding="async" data-nimg="1" srcset="https://www.ainonline.com/cdn-cgi/image/width=750,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/EXPH-2142-003.jpg?h=9e7ae2bd&amp;itok=2txfqylj 1x, https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/EXPH-2142-003.jpg?h=9e7ae2bd&amp;itok=2txfqylj 2x" src="https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/EXPH-2142-003.jpg?h=9e7ae2bd&amp;itok=2txfqylj"></p></div></a></div><div><a href="https://www.ainonline.com/aviation-news/business-aviation/2024-02-23/union-balks-bringing-super-pumas-back-north-sea"><div data-sponsored="false" data-variation="media-top" data-blurred="false"><div><h2>Union Balks at Bringing Super Pumas Back to North Sea</h2><h3>Calls it an 'insult' to the memory of 33 killed</h3><p>Safety</p></div><p><img alt="Airbus" loading="lazy" width="700" height="395" decoding="async" data-nimg="1" srcset="https://www.ainonline.com/cdn-cgi/image/width=750,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Screenshot%202024-02-23%20at%208.55.43%20AM.png?h=7d56c686&amp;itok=vPoJKcAX 1x, https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Screenshot%202024-02-23%20at%208.55.43%20AM.png?h=7d56c686&amp;itok=vPoJKcAX 2x" src="https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Screenshot%202024-02-23%20at%208.55.43%20AM.png?h=7d56c686&amp;itok=vPoJKcAX"></p></div></a></div><div><a href="https://www.ainonline.com/aviation-news/business-aviation/2024-02-22/ainsight-bucket-list-professional-pilots"><div data-sponsored="false" data-variation="media-top" data-blurred="false"><h2>AINsight: The Bucket List for Professional Pilots</h2><h3>Trying out new ways to fly is a sure way to recharge a pilot's batteries</h3><p>Training and Workforce</p></div></a></div><div><a href="https://www.ainonline.com/aviation-news/business-aviation/2024-02-21/transport-canada-reissues-shoulder-harness-exemption"><div data-sponsored="false" data-variation="media-top" data-blurred="false"><div><h2>Transport Canada Reissues Shoulder Harness Exemption</h2><h3>Pilots can fly without wearing shoulder harnesses above 10,000 feet</h3><p>Safety</p></div><p><img alt="pilots shot" loading="lazy" width="700" height="395" decoding="async" data-nimg="1" srcset="https://www.ainonline.com/cdn-cgi/image/width=750,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/uploads/2022/01/334_pilots-ipadweb.jpg?h=cc766518&amp;itok=lKTqMgxi 1x, https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/uploads/2022/01/334_pilots-ipadweb.jpg?h=cc766518&amp;itok=lKTqMgxi 2x" src="https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/uploads/2022/01/334_pilots-ipadweb.jpg?h=cc766518&amp;itok=lKTqMgxi"></p></div></a></div><div><a href="https://www.ainonline.com/aviation-news/general-aviation/2024-02-21/firefighting-radio-system-now-available-latin-america"><div data-sponsored="false" data-variation="media-top" data-blurred="false"><div><h2>Firefighting Radio System Now Available in Latin America</h2><h3>First orders set to ship in six to eight weeks</h3><p>Avionics</p></div><p><img alt="A mockup of the new AEM radio." loading="lazy" width="700" height="395" decoding="async" data-nimg="1" srcset="https://www.ainonline.com/cdn-cgi/image/width=750,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Screen%20Shot%202024-02-21%20at%201.56.30%20PM.png?h=2bc11df2&amp;itok=awBANAeD 1x, https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Screen%20Shot%202024-02-21%20at%201.56.30%20PM.png?h=2bc11df2&amp;itok=awBANAeD 2x" src="https://www.ainonline.com/cdn-cgi/image/width=1920,format=webp/https://backend.ainonline.com/sites/default/files/styles/fpsc_700x395/public/2024-02/Screen%20Shot%202024-02-21%20at%201.56.30%20PM.png?h=2bc11df2&amp;itok=awBANAeD"></p></div></a></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ant Geopolitics (240 pts)]]></title>
            <link>https://aeon.co/essays/the-strange-and-turbulent-global-world-of-ant-geopolitics</link>
            <guid>39523495</guid>
            <pubDate>Tue, 27 Feb 2024 12:57:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://aeon.co/essays/the-strange-and-turbulent-global-world-of-ant-geopolitics">https://aeon.co/essays/the-strange-and-turbulent-global-world-of-ant-geopolitics</a>, See on <a href="https://news.ycombinator.com/item?id=39523495">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>It is a familiar story: a small group of animals living in a wooded grassland begin, against all odds, to populate Earth. At first, they occupy a specific ecological place in the landscape, kept in check by other species. Then something changes. The animals find a way to travel to new places. They learn to cope with unpredictability. They adapt to new kinds of food and shelter. They are clever. And they are <em>aggressive</em>.</p>
<p>In the new places, the old limits are missing. As their population grows and their reach expands, the animals lay claim to more territories, reshaping the relationships in each new landscape by eliminating some species and nurturing others. Over time, they create the largest animal societies, in terms of numbers of individuals, that the planet has ever known. And at the borders of those societies, they fight the most destructive within-species conflicts, in terms of individual fatalities, that the planet has ever known.</p>
<p>This might sound like our story: the story of a hominin species, living in tropical Africa a few million years ago, becoming global. Instead, it is the story of a group of ant species, living in Central and South America a few hundred years ago, who spread across the planet by weaving themselves into European networks of exploration, trade, colonisation and war – some even stowed away on the 16th-century Spanish galleons that carried silver across the Pacific from Acapulco to Manila. During the past four centuries, these animals have globalised their societies alongside <span>our own.</span></p>
<figure><img alt="" loading="lazy" width="1080" height="1080" decoding="async" data-nimg="1" srcset="https://images.aeonmedia.co/user_image_upload/2864/insert-98657943-invicta51.jpg?width=1080&amp;quality=75&amp;format=auto 1x, https://images.aeonmedia.co/user_image_upload/2864/insert-98657943-invicta51.jpg?width=3840&amp;quality=75&amp;format=auto 2x" src="https://images.aeonmedia.co/user_image_upload/2864/insert-98657943-invicta51.jpg?width=3840&amp;quality=75&amp;format=auto"><figcaption><p>A polygyne population of red imported fire ants at Brackenridge Field. Austin, Texas, USA. Photo by Alexander Wild</p></figcaption></figure>
<p>It is tempting to look for parallels with human empires. Perhaps it is impossible <em>not</em> to see rhymes between the natural and human worlds, and as a science journalist I’ve contributed more than my share. But just because words rhyme, it doesn’t mean their definitions align. Global ant societies are not simply echoes of human struggles for power. They are something new in the world, existing at a scale we can measure but struggle to grasp: there are roughly 200,000 times more ants on our planet than the <span>100 billion</span> stars in the <span>Milky Way.</span></p>
<p>In late 2022, colonies of the most notorious South American export, the red fire ant (<em>Solenopsis invicta</em>) were unexpectedly <a href="https://www.sciencedirect.com/science/article/abs/pii/S0960982223009740" target="_blank" rel="noreferrer noopener">found</a> in Europe for the first time, alongside a river estuary close to the Sicilian city of Syracuse. People were shocked when a total of 88 colonies were eventually located, but the appearance of the red fire ant in Europe shouldn’t be a surprise. It was entirely predictable: another ant species from <span><em>S invicta</em></span><span>’s</span> native habitats in South America had already found its way to Europe.</p>
<p>What is surprising is how poorly we still understand global ant societies: there is a science-fiction epic going on under our feet, an alien geopolitics being negotiated by the <span>20 quadrillion</span> ants living on Earth today. It might seem like a familiar story, but the more time I spend with it, the less familiar it seems, and the more I want to resist relying on human analogies. Its characters are strange; its scales hard to conceive. Can we tell the story of global ant societies without simply retelling our own story?</p>
<p><span>S</span>ome animal societies hold together because their members recognise and remember one another when they interact. Relying on memory and experience in this way – in effect, trusting only friends – limits the size of groups to their members’ capacity to sustain personal relationships with one another. Ants, however, operate differently by forming what the ecologist Mark Moffett <a href="https://academic.oup.com/beheco/article/23/5/925/232024" target="_blank" rel="noreferrer noopener">calls</a> ‘anonymous societies’ in which individuals from the same species or group can be expected to accept and cooperate with each other even when they have never met before. What these societies depend on, Moffett writes, are ‘shared cues recognised by all its members’.</p>
<p>Recognition looks very different for humans and insects. Human society relies on networks of reciprocity and reputation, underpinned by language and culture. Social insects – ants, wasps, bees and termites – rely on chemical badges of identity. In ants, this badge is a blend of waxy compounds that coat the body, keeping the exoskeleton watertight and clean. The chemicals in this waxy blend, and their relative strengths, are genetically determined and variable. This means that a newborn ant can quickly learn to distinguish between nest mates and outsiders as it becomes sensitive to its colony’s unique scent. Insects carrying the right scent are fed, groomed and defended; those with the wrong one are rejected or fought.</p>
<p>Colonies spread without ever drawing boundaries because workers treat all of their own kind as allies</p>
<p>The most successful invasive ants, including the tropical fire ant (<em>Solenopsis geminata</em>) and red fire ant <span>(</span><span><em>S invicta</em></span><span>),</span> share this quality. They also share social and reproductive traits. Individual nests can contain many queens (in contrast to species with one queen per nest) who mate inside their home burrows. In single-queen species, newborn queens leave the nest before mating, but in unicolonial species, mated queens will sometimes leave their nest on foot with a group of workers to set up a new nest nearby. Through this budding, a network of allied and interconnected colonies begins to grow.</p>
<p>In their native ranges, these multi-nest colonies can <a href="https://www.jstor.org/stable/4095293" target="_blank" rel="noreferrer noopener">grow</a> to a few hundred metres across, limited by physical barriers or other ant colonies. This turns the landscape to a patchwork of separate groups, with each chemically distinct society fighting or avoiding others at their borders. Species and colonies coexist, without any prevailing over the others. However, for the ‘anonymous societies’ of unicolonial ants, as they’re known, transporting a small number of queens and workers to a new place can cause the relatively stable arrangement of groups to break down. As new nests are created, colonies bud and spread without ever drawing boundaries because workers treat all others of their own kind as allies. What was once a patchwork of complex relationships becomes a simplified, and unified, social system. The relative genetic homogeneity of the small founder population, replicated across a growing network of nests, ensures that members of unicolonial species tolerate each other. Spared the cost of fighting one another, these ants can live in denser populations, spreading across the land as a plant might, and turning their energies to capturing food and competing with other species. Chemical badges keep unicolonial ant societies together, but also allow those societies to rapidly expand.</p>
<p><span>A</span>ll five of the ants included in the International Union for the Conservation of Nature’s (IUCN) <a href="https://www.iucngisd.org/gisd/100_worst.php" target="_blank" rel="noreferrer noopener">list</a> of 100 of the world’s worst invasive alien species are unicolonial. Three of these species – the aforementioned red fire ant <span>(</span><span><em>S invicta</em></span><span>),</span> the Argentine ant (<em>Linepithema humile</em>) and the little fire ant (<em>Wasmannia auropunctata</em>) – are originally from Central and/or South America, where they are found sharing the same landscapes. It is likely that the first two species, at least, began their global expansion centuries ago on ships out of Buenos Aires. Some of these ocean journeys might have lasted longer than a single worker ant’s lifetime.</p>
<p>Unicolonial ants are superb and unfussy scavengers that can hunt animal prey, eat fruit or nectar, and tend insects such as aphids for the sugary honeydew they excrete. They are also adapted to living in regularly disrupted environments, such as river deltas prone to flooding (the ants either get above the waterline, by climbing a tree, for example, or gather into living rafts and float until it subsides). For these ants, disturbance is a kind of environmental reset during which territories have to be reclaimed. Nests – simple, shallow burrows – are abandoned and remade at short notice. If you were looking to design a species to invade cities, suburbs, farmland and any wild environment affected by humans, it would probably look like a unicolonial ant: a social generalist from an unpredictable, intensely competitive environment.</p>
<p>When these ants show up in other places, they can make their presence felt in spectacular fashion. An early example comes from the 1850s, when the big-headed ant (<em>Pheidole megacephala</em>), another species now listed on the IUCN’s <span>top 100,</span> found its way from Africa to the Madeiran capital of Funchal. ‘You eat it in your puddings, vegetables and soups, and wash your hands in a decoction of it,’ complained one British visitor in 1851. When the red fire ant <span>(</span><span><em>S invicta</em></span><span>),</span> probably the best-known unicolonial species, spread through the US farming communities surrounding the port of Mobile, Alabama in the 1930s, it wreaked havoc in different ways. ‘Some farmers who have heavily infested land are unable to hire sufficient help, and are forced to abandon land to the ants,’ was how <span>E O Wilson</span> in 1958 <a href="https://www.jstor.org/stable/24940940" target="_blank" rel="noreferrer noopener">described</a> the outcome of their arrival. Today, the red fire ant does billions of dollars of damage each year and inflicts its agonising bite on millions of people. But the largest colonies, and most dramatic moments in the global spread of ant societies, belong to the Argentine ant <span>(</span><span><em>L humile</em></span><span>).</span></p>
<p>New Zealand is the only country to have prevented the spread of the red fire ant</p>
<p>Looking at the history of this species’ expansion in the late 19th and early <span>20th centuries,</span> it can seem as if the spread of global trade was an Argentine ant plot for world domination. One outbreak <a href="https://link.springer.com/chapter/10.1007/978-3-319-74986-0_4" target="_blank" rel="noreferrer noopener">appeared</a> in Porto, following the 1894 Exhibition of the Islands and Colonies of Portugal. The insects had likely travelled on produce and wares displayed at the exhibition from Madeira – ornamental plants, which tend to travel with a clump of their home soil, are particularly good for transporting invasive species. In 1900, a Belfast resident, Mrs Corry, found a ‘dark army’ of the same species crossing her kitchen floor and entering the larder, where they covered a leg of mutton so completely that ‘one could scarcely find room for a pin-point’. In 1904, the US Bureau of Entomology dispatched a field agent, Edward Titus, to <a href="https://www.biodiversitylibrary.org/item/132322#page/81/mode/1up" target="_blank" rel="noreferrer noopener">investigate</a> a plague of Argentine ants in New Orleans. He heard reports of the ants crawling into babies’ mouths and nostrils in such numbers that they could be dislodged only by repeatedly dunking the infant in water. Other reports described the ants entering hospitals and ‘busily carrying away the sputum’ from a tuberculosis patient. When the species arrived on the French Riviera a few years later, holiday villas were abandoned and a children’s hospital was evacuated.</p>
<p>In December 1927, Italy’s king Vittorio <span>Emmanuel III </span>and its prime minister Benito Mussolini signed a law setting out the measures to be taken against the Argentine ant, splitting the cost equally with invaded provinces. The state’s effectiveness, or lack of it, is shown in the novella <em>The Argentine Ant</em> (1952) by Italo Calvino, one of Italy’s great postwar writers. Calvino, whose parents were plant biologists, sets his tale in an unnamed seaside town much like the one where he grew up, in the northwestern province of Liguria. The ant has outlasted both Mussolini and the monarchy, and saturates the unnamed town, burrowing underground (and into people’s heads). Some residents drench their houses and gardens with pesticides or build elaborate traps involving hammers covered in honey; others try to ignore or deny the problem. And then there is Signor Baudino, an employee of the Argentine Ant Control Corporation, who has spent <span>20 years</span> putting out bowls of molasses laced with a weak dose of poison. The locals suspect him of feeding the ants to keep himself in <span>a job.</span></p>
<p>In reality, people who found themselves living in the path of such ant plagues learned to stand the feet of their cupboards, beds and cots in dishes of kerosene. However, this was not a long-term solution: killing workers away from the nest achieves little when most, along with their queens, remain safe at home. Slower-acting insecticides (like Baudino’s poison), which workers take back to the nest and feed to queens, can be more effective. But because unicolonial workers can enter any number of nests in their network, each containing many queens, the chances of delivering a fatal dose gets much slimmer.</p>
<p>In the early 20th century, an intensive period in the human war against ants, pest-control researchers advocated using broad-spectrum poisons, most of which are now banned for use as pesticides, to set up barriers or fumigate nests. Nowadays, targeted insecticides can be effective for clearing relatively small areas. This has proved useful in orchards and vineyards (where the ants’ protection of sap-sucking insects makes them a hazard to crops) and in places such as the Galápagos or Hawaii <a href="https://bioone.org/journals/florida-entomologist/volume-88/issue-2/0015-4040_2005_088_0159_EOTLFA_2.0.CO_2/ERADICATION-OF-THE-LITTLE-FIRE-ANT-WASMANNIA-AUROPUNCTATA-HYMENOPTERA/10.1653/0015-4040(2005)088%5b0159:EOTLFA%5d2.0.CO;2.full" target="_blank" rel="noreferrer noopener">where</a> the ants <a href="https://link.springer.com/article/10.1023/B:BINV.0000010121.45225.cc" target="_blank" rel="noreferrer noopener">threaten</a> rare species. Large-scale eradications are a different matter, and few places have tried. New Zealand, the world leader in controlling invasive species, is the only country to have prevented the spread of the red fire ant, mostly by eradicating nests on goods arriving at airports and ports. The country is also home to a spaniel trained to sniff out Argentine ants nests and prevent the insects from reaching small islands important for seabirds.</p>
<p><span>H</span>uman inconvenience pales in comparison with the ants’ effects on other species. Exploring the countryside around New Orleans in 1904, Titus found the Argentine ant overwhelming the indigenous ant species, bearing away the corpses, eggs and larvae of the defeated to be eaten: ‘column after column of them arriving on the scene of battle’. Other entomologists at the time learned to recognise the disappearance of native ants as a sign of an invader’s arrival. Unicolonial species are aggressive, quick to find food sources and tenacious in defending and exploiting them. Unlike many ant species, in which a worker who finds a new food source returns to the nest to recruit other foragers, the Argentine ant <a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0070888" target="_blank" rel="noreferrer noopener">enlists</a> other workers already outside the nest, thus recruiting foragers more quickly. However, the decisive advantage of unicolonial ant species lies in their sheer force of numbers, which is usually what decides ant conflicts. They often become the only ant species in invaded areas.</p>
<p>The effects of these invasions cascade through ecosystems. Sometimes, the damage is direct: on the Galápagos, fire ants prey on tortoise hatchlings and bird chicks, threatening their survival. In other cases, the damage falls on species that once relied on native ants. In California, the tiny Argentine ant (typically under <span>3 mm</span> long) has <a href="https://www.jstor.org/stable/2641040" target="_blank" rel="noreferrer noopener">replaced</a> the larger native species that once formed the diet of horned lizards, leaving the reptiles starving – it seems they do not recognise the much smaller invader as food. In the scrublands of the South African fynbos heathland, which has some of the most distinctive flora on Earth, many plants <a href="https://www.jstor.org/stable/1938311" target="_blank" rel="noreferrer noopener">produce</a> seeds bearing a fatty blob. Native ants ‘plant’ the seeds by carrying them into their nests, where they eat the fat and discard the rest. Argentine ants – almost certainly imported to South Africa around 1900 along with horses shipped from Buenos Aires by the British Empire to fight the Boer War – either ignore the seeds, leaving them to be eaten by mice, or strip the fat where it lies, leaving the seed on the ground. This makes it harder for endemic flora such as proteas to reproduce, tipping the balance towards invasive plants such as acacias and eucalypts.</p>
<p>In the past 150 years, the Argentine ant has spread to pretty much everywhere that has hot, dry summers and cool, wet winters. A single supercolony, possibly descended from as few as half a dozen queens, now <a href="https://www.pnas.org/doi/10.1073/pnas.092694199" target="_blank" rel="noreferrer noopener">stretches</a> along 6,000 kilometres of coastline in southern Europe. Another runs most of the length of California. The species has arrived in South Africa, Australia, New Zealand and Japan, and even <a href="https://www.antweb.org/description.do?rank=species&amp;genus=linepithema&amp;name=humile" target="_blank" rel="noreferrer noopener">reached</a> Easter Island in the Pacific and <span>St Helena</span> in the Atlantic. Its allegiances span oceans: workers from different continents, across millions of nests containing trillions of individuals, will <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3352483/" target="_blank" rel="noreferrer noopener">accept</a> each other as readily as if they had been born in the same nest. Workers of the world united, indeed. But not <em>completely</em> united.</p>
<p>As with inbred species everywhere, this may make them prone to disease</p>
<p>Expanding in parallel with the world-spanning supercolony are separate groups of the Argentine ant that bear different chemical badges – the legacy of other journeys from the homeland. Same species, different ‘smells’. In places where these distinct colonies come into contact, hostilities resume.</p>
<p>In Spain, one such colony holds a stretch of the coast of Catalonia. In Japan, four mutually hostile groups fight it out <a href="https://onlinelibrary.wiley.com/doi/10.1111/j.1472-4642.2012.00934.x" target="_blank" rel="noreferrer noopener">around</a> the port city of Kobe. The best-studied conflict zone is in southern California, a little north of San Diego, where the Very Large Colony, as the state-spanning group is known, shares a border with a separate group called the Lake Hodges colony, with a territory measuring just <span>30 kilometres</span> around. Monitoring this border for a six-month period between April and September 2004, a team of researchers <a href="https://onlinelibrary.wiley.com/doi/10.1111/j.1365-294X.2006.03038.x" target="_blank" rel="noreferrer noopener">estimated</a> that <span>15 million</span> ants died on a frontline a few centimetres wide and several kilometres long. There were times when each group seemed to gain ground, but over longer periods stalemate was the rule. Those seeking to control ant populations believe provoking similar conflicts might be a way to weaken invasive ants’ dominance. There are also hopes, for example, that artificial pheromones – chemical misinformation, in other words – might <a href="https://vcresearch.berkeley.edu/news/creating-new-trail-solve-old-problem" target="_blank" rel="noreferrer noopener">cause</a> colony mates to turn on one another, although no products have yet come to market.</p>
<p>In the very long term, the fate of unicolonial societies is unclear. A survey of Madeira’s ants between 2014 and 2021 <a href="https://jhr.pensoft.net/article/81624/" target="_blank" rel="noreferrer noopener">found</a>, contrary to fears that invasive ants would wipe the island clean of other insects, very few big-headed ants and, remarkably, no Argentine ants. Invasive ants are <a href="https://link.springer.com/article/10.1007/s10530-016-1214-2" target="_blank" rel="noreferrer noopener">prone</a> to population crashes for reasons that aren’t understood but may be related to genetic homogeneity: a single colony of Argentine ants in their homeland <a href="https://www.cell.com/trends/ecology-evolution/fulltext/S0169-5347(09)00089-5" target="_blank" rel="noreferrer noopener">contains</a> as much genetic diversity as the whole of California’s state-spanning supercolony. As with inbred species everywhere, this may make them prone to disease. Another potential issue is that the ants’ lack of discrimination about whom they help may also <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9810424/" target="_blank" rel="noreferrer noopener">favour</a> the evolution of free-riding ‘lazy workers’ in colonies, who selfishly prosper by exploiting their nest mates’ efforts. Though it’s assumed this uneven distribution of work may eventually lead to social breakdown, no examples have been found.</p>
<p>Unless natural selection turns against them, one of the most effective curbs on unicolonial ants is other unicolonial ants. In the southeastern United States, red fire ants seem to have <a href="https://pubmed.ncbi.nlm.nih.gov/15245397/" target="_blank" rel="noreferrer noopener">prevented</a> the Argentine ant forming a single vast supercolony as it has in California, instead returning the landscape to a patchwork of species. In southern Europe, however, the Argentine ant has had a century longer to establish itself, so, even if the fire ant does gain a European foothold, there’s no guarantee that the same dynamic will play out. In the southern US, red fire ants are themselves now being <a href="https://www.sciencedirect.com/science/article/pii/S0960982214003376" target="_blank" rel="noreferrer noopener">displaced</a> by the tawny crazy ant (<em>Nylanderia fulva</em>), another South American species, which has immunity to fire ant venom.</p>
<p><span>I</span>t is remarkable how irresistible the language of human warfare and empire can be when trying to describe the global history of ant expansion. Most observers – scientists, journalists, others – seem not to have tried. Human efforts to control ants are regularly described as a war, as is competition between invaders and native ants, and it is easy to see why comparisons are made between the spread of unicolonial ant societies and human colonialism. People have been drawing links between insect and human societies for millennia. But what people see says more about them than about insects.</p>
<p>A beehive is organised along similar lines to an ant nest, but human views of bee society tend to be benign and utopian. When it comes to ants, the metaphors often polarise, either towards something like communism or something like fascism – one mid-20th-century US eugenicist even used the impact of the Argentine ant as an argument for immigration control. For the entomologist Neil Tsutsui, who <a href="https://radiolab.org/podcast/226523-ants" target="_blank" rel="noreferrer noopener">studies</a> unicolonial ants at the University of California, Berkeley, insects are like Rorschach tests. Some people see his research as evidence that we should all get along, while others see the case for racial purity.</p>
<p>In addition to conflating a natural ‘is’ with a political ‘ought’, the temptations of ant anthropomorphism can also lead to a limited, and limiting, view of natural history. Surely the <a href="https://resjournals.onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-3032.1989.tb00947.x" target="_blank" rel="noreferrer noopener">habit</a> of worker ants in Argentine nests to kill nine-tenths of their queens every spring – seemingly clearing out the old to make way for the new – is enough to deter parallels between ant societies and human politics?</p>
<p>Unicolonial species can overwhelmingly alter ecological diversity when they arrive <span>somewhere new</span></p>
<p>The more I learn, the more I am struck by the ants’ strangeness rather than their similarities with human society. There is another way to be a globalised society – one that is utterly unlike our own. I am not even sure we have the language to convey, for example, a colony’s ability to take bits of information from thousands of tiny brains and turn it into a distributed, constantly updated picture of their world. Even ‘smell’ seems a feeble word to describe the ability of ants’ antennae to read chemicals on the air and on each other. How can we imagine a life where sight goes almost unused and scent forms the primary channel of information, where chemical signals show the way to food, or mobilise a response to threats, or distinguish queens from workers and the living from the <a href="https://www.pnas.org/doi/10.1073/pnas.0901270106" target="_blank" rel="noreferrer noopener">dead</a>?</p>
<p>As our world turns alien, trying to think like an alien will be a better route to finding the imagination and humility needed to keep up with the changes than looking for ways in which other species are like us. But trying to think like an ant, rather than thinking about how ants are like us, is not to say that I welcome our unicolonial insect underlords. Calamities follow in the wake of globalised ant societies. Most troubling among these is the way that unicolonial species can overwhelmingly alter ecological diversity when they arrive somewhere new. Unicolonial ants can turn a patchwork of colonies created by different ant species into a landscape dominated by a single group. As a result, textured and complex ecological communities become simpler, less diverse and, crucially, less different to each other. This is not just a process; it is an era. The current period in which a relatively small number of super-spreading animals and plants expands across Earth is sometimes called the Homogecene. It’s not a cheering word, presaging an environment that favours the most pestilential animals, plants and microbes. Unicolonial ants contribute to a more homogenous future, but they also speak to life’s ability to escape our grasp, regardless of how we might try to order and exploit the world. And there’s something hopeful about that, for the planet, if not <span>for us.</span></p>
<p>The scale and spread of ant societies is a reminder that humans should not confuse impact with control. We may be able to change our environment, but we’re almost powerless when it comes to manipulating our world exactly how we want. The global society of ants reminds us that we cannot know how other species will respond to our reshaping of the world, only that <span>they will.</span></p>
<p>If you want a parable of ants’ ability to mock human hubris, it’s hard to improve on the story of <span>Biosphere 2.</span> This giant terrarium in the Arizona desert, funded by a billionaire financier in the late 1980s, was intended as a grand experiment and model for long-distance space travel and colonisation. It was designed to be a self-sustaining living system, inhabited by eight people, with no links to the world’s atmosphere, water, soil. Except that, soon after it began operations in 1991, the black crazy ant (<em>Paratrechina longicornis</em>), a unicolonial species originally from southeast Asia, <a href="https://www.jstor.org/stable/3496865" target="_blank" rel="noreferrer noopener">found</a> a way in, reshaped the carefully engineered invertebrate community inside, and turned the place into a honeydew farm.</p>
<p>It is possible to be both a scourge and a marvel.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SpaceX discloses cause of Starship anomalies as it clears an FAA hurdle (201 pts)]]></title>
            <link>https://arstechnica.com/space/2024/02/faa-closes-starship-inquiry-and-spacex-details-causes-of-november-accidents/</link>
            <guid>39523403</guid>
            <pubDate>Tue, 27 Feb 2024 12:48:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/space/2024/02/faa-closes-starship-inquiry-and-spacex-details-causes-of-november-accidents/">https://arstechnica.com/space/2024/02/faa-closes-starship-inquiry-and-spacex-details-causes-of-november-accidents/</a>, See on <a href="https://news.ycombinator.com/item?id=39523403">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <h4>
      RUD    —
</h4>
            
            <h2 itemprop="description">"Several engines began shutting down before one engine failed energetically."</h2>
                    </div><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/11/F_VbEJcbQAAv3Ak-800x1199.jpg" alt="Starship launches on its second flight on November 18, 2023.">
      <figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2023/11/F_VbEJcbQAAv3Ak-scaled.jpg" data-height="2560" data-width="1708">Enlarge</a> <span>/</span> Starship launches on its second flight on November 18, 2023.</p><p>SpaceX</p></figcaption>  </figure>

  




<!-- cache hit 345:single/related:60f3482123c7bd87bb91cca2a1c93565 --><!-- empty -->
<p>A little more than three months after the most recent launch of a Starship vehicle, which ended with both the booster and upper stage being lost in flight, the Federal Aviation Administration has closed its investigation of the mishap.</p>
<p>"SpaceX identified, and the FAA accepts, the root causes and 17 corrective actions documented in SpaceX’s mishap report," the federal agency said in a statement issued Monday. "Prior to the next launch, SpaceX must implement all corrective actions and receive a license modification from the FAA that addresses all safety, environmental and other applicable regulatory requirements."</p>
<p>SpaceX must still submit additional information to the FAA, which is responsible for the safety of people and property on the ground, before the agency completes its review of an application to launch Starship for a third time. The administrator for Commercial Space Transportation at the Federal Aviation Administration, Kelvin Coleman, <a href="https://arstechnica.com/space/2024/02/spacex-seeks-to-launch-starship-at-least-nine-times-this-year/">said last week</a> that early to mid-March is a reasonable timeline for the regulatory process to conclude.</p>
<p>A launch attempt is likely to follow soon after.</p>
<h2>What went wrong</h2>
<p>In conjunction with Monday's announcement, SpaceX released details for the first time of what happened to cause the November 18 launch to go awry.</p>
<p>In this update, SpaceX noted that the Super Heavy first stage of the rocket performed nominally, with all 33 Raptor engines on this massive rocket igniting successfully. The booster then performed a full-duration burn to reach stage separation. At this point, the upper stage executed a successful "hot staging" maneuver in which the Starship stage separated from the booster while some of the booster's engines were still firing.</p>
<p>For the Super Heavy booster, the next step was to perform a series of burns to make a soft landing in the Gulf of Mexico. As part of the initial burn, 13 of the rocket's engines were intended to fire.</p>
<p>"During this burn, several engines began shutting down before one engine failed energetically, quickly cascading to a rapid unscheduled disassembly of the booster," <a href="https://www.spacex.com/updates">SpaceX said</a>. "The vehicle breakup occurred more than three and a half minutes into the flight at an altitude of ~90 km over the Gulf of Mexico."</p>                                            
                                                        
<p>The problem was subsequently linked to a problem with supplying liquid oxygen to the Raptor engines.</p>
<p>"The most likely root cause for the booster RUD was determined to be filter blockage where liquid oxygen is supplied to the engines, leading to a loss of inlet pressure in engine oxidizer turbopumps that eventually resulted in one engine failing in a way that resulted in loss of the vehicle," the company stated. "SpaceX has since implemented hardware changes inside future booster oxidizer tanks to improve propellant filtration capabilities and refined operations to increase reliability."</p>
<h2>Starship vents</h2>
<p>As Super Heavy was experiencing these problems, the six Raptor engines on the Starship upper stage were burning nominally and pushing the vehicle along a flight path intended to take it nearly two-thirds of the way around Earth before splashing down near Hawaii. However, at about seven minutes after liftoff, a large vent of liquid oxygen occurred. There was excess liquid oxygen on the vehicle, SpaceX said, to gather data representative of future payload deployment missions. It needed to be released before Starship splashed down.</p>
<p>"A leak in the aft section of the spacecraft that developed when the liquid oxygen vent was initiated resulted in a combustion event and subsequent fires that led to a loss of communication between the spacecraft’s flight computers," the company said. "This resulted in a commanded shut down of all six engines prior to completion of the ascent burn, followed by the Autonomous Flight Safety System detecting a mission rule violation and activating the flight termination system, leading to vehicle breakup."</p>
<p>At the time, the vehicle had reached an altitude of 150 km, well into outer space, and had achieved a velocity of about 24,000 km/h. This is just short of orbital velocity, which is 28,000 km/h.</p>
<p>In its statement, SpaceX said it was implementing changes to the Super Heavy and Starship stages to account for these issues. The company is also seeking to improve the overall performance of Starship, with the addition of a new electronic Thrust Vector Control system for Starship’s upper-stage Raptor engines and more rapid propellant loading operations prior to launch.</p>
<p>SpaceX has four Starships in complete, or nearly complete, build stages. Should the next flight go smoothly, the company could begin to launch the world's largest rocket on a more frequent basis.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Easter eggs on Swiss maps (182 pts)]]></title>
            <link>https://www.atlasobscura.com/articles/swiss-map-secrets</link>
            <guid>39523187</guid>
            <pubDate>Tue, 27 Feb 2024 12:21:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.atlasobscura.com/articles/swiss-map-secrets">https://www.atlasobscura.com/articles/swiss-map-secrets</a>, See on <a href="https://news.ycombinator.com/item?id=39523187">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="article-body">
<p><span>Swiss humor. </span>Now there’s two words you don’t often see together. In fact, Google Trends<a href="https://trends.google.com/trends/explore?date=all&amp;geo=DK&amp;q=Swiss%20humor"> lists <em>zero</em> occurrences</a> of the phrase between 2004 and now. Even “German humor” produces a graph (albeit a rather flat one). But not only is there some evidence that Swiss comedy does exist, it might just be that being well-hidden is kind of its thing. Find it and laugh. Or don’t, and the joke’s on you!</p>
<p>That evidence, as it turns out, is cartographic. The Swiss Federal Office of National Topography,<a href="https://www.swisstopo.admin.ch/"> Swisstopo</a> for short, is a decidedly serious institution. Many serious things—time and money, for starters—depend on the accuracy of its maps. In the case of its mountain maps, actual lives hang in the balance. Yet in decades past, the austere institute’s maps have served as the canvas for a series of in-jokes among its more fun-loving cartographers.</p>
<figure><img src="https://img.atlasobscura.com/TF_h2N2cGkEVAU5ELOD91Wp4msaxylLzh8m1CevqMmc/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9kY2Q5MTk5NS02/NTg5LTQxMzQtYTlk/Zi0xNTkxZTFkM2Nh/YmQzNzc0ZmYzOGRm/NDFmZTVjNmRfc2Ft/dWVsLWZlcnJhcmEt/SUVIUEROazItOHct/dW5zcGxhc2guanBn.jpg" alt="Switzerland's geography proved to inspire map makers in surprising ways." width="auto" data-kind="article-image" id="article-image-100240" data-src="https://img.atlasobscura.com/TF_h2N2cGkEVAU5ELOD91Wp4msaxylLzh8m1CevqMmc/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9kY2Q5MTk5NS02/NTg5LTQxMzQtYTlk/Zi0xNTkxZTFkM2Nh/YmQzNzc0ZmYzOGRm/NDFmZTVjNmRfc2Ft/dWVsLWZlcnJhcmEt/SUVIUEROazItOHct/dW5zcGxhc2guanBn.jpg"><figcaption>Switzerland’s geography proved to inspire map makers in surprising ways. <a target="_blank" href="https://unsplash.com/photos/landscape-photography-of-mountain-during-daytime-IEHPDNk2-8w">Samuel Ferrara/Public Domain</a></figcaption></figure>
<p>These mapmakers played a game of wits against their superiors, the ones whose duties included checking the maps before publication. Over the years, the cartographers managed to slip in—on maps that were supposed to contain only dry topographic facts—drawings of an airplane, a fish, a marmot, a mountaineer, a face, a spider, even of a naked lady. Once discovered, these humorous additions were removed without pardon. At least, that’s how it used to be.</p>
<p>Either way, it doesn’t matter. Swisstopo is defeated by its own thoroughness. Its<a href="https://map.geo.admin.ch/"> map page</a> allows you not just to zoom in and out of the most recent maps but also to browse historical maps and thus revisit these “Easter eggs” that prove, however obliquely, the existence of a sense of humor among the mountains of Switzerland.</p>
<figure><img src="https://img.atlasobscura.com/ouhDVpuIXAo3SFvcq5PVwthqjPAkbzTO4k_6bBpsS_4/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8xMjczZGVkYy01/OTZkLTRiNjMtYjJk/Zi04ZTZhNDI4ZGI0/ZDIzNzc0ZmYzOGRm/NDFmZTVjNmRfenVy/aWNoLWFpcnBvcnQu/anBn.jpg" alt="Topographic maps normally never have planes on them." width="auto" data-article-image-id="undefined" data-full-size-image="https://assets.atlasobscura.com/article_images/full/100239/image" data-kind="article-image" id="article-image-100239" data-src="https://img.atlasobscura.com/ouhDVpuIXAo3SFvcq5PVwthqjPAkbzTO4k_6bBpsS_4/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8xMjczZGVkYy01/OTZkLTRiNjMtYjJk/Zi04ZTZhNDI4ZGI0/ZDIzNzc0ZmYzOGRm/NDFmZTVjNmRfenVy/aWNoLWFpcnBvcnQu/anBn.jpg"><figcaption>Topographic maps normally never have planes on them. <a target="_blank" href="https://map.geo.admin.ch/">Swisstopo</a></figcaption></figure>
<h3><strong>The plane that disappeared—twice</strong></h3>
<p>In 1994, an anonymous cartographer at Swisstopo included an airplane in this map of Kloten, the international airport of Zürich. While it may seem only natural for airplanes to show up at airports, that is normally not the case on topographic maps.</p>
<p>The error remained undetected until a revision of the map in 2000, when the offending craft was erased. However, the plane reappeared on the 2007 map at exactly the same spot—the tarmac before Gate A—only to vanish again in 2013.</p>
<figure><img src="https://img.atlasobscura.com/mFxxMnNDB8tJkzL-zeT_e8ZOhhui_kPnDnPs2m523OY/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8yYzVkYzliMy05/MWNiLTRhY2ItODFj/NS01NmQ4ODk4OGVj/NDgzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDAuanBn.jpg" alt="Despite having no head, the figure's filled-in lines leave little to the imagination." width="auto" data-article-image-id="undefined" data-full-size-image="https://assets.atlasobscura.com/article_images/full/100238/image" data-kind="article-image" id="article-image-100238" data-src="https://img.atlasobscura.com/mFxxMnNDB8tJkzL-zeT_e8ZOhhui_kPnDnPs2m523OY/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8yYzVkYzliMy05/MWNiLTRhY2ItODFj/NS01NmQ4ODk4OGVj/NDgzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDAuanBn.jpg"><figcaption>Despite having no head, the figure’s filled-in lines leave little to the imagination. <a target="_blank" href="https://map.geo.admin.ch/">Swisstopo</a></figcaption></figure>
<h3><strong>The Naked Lady of Künten</strong></h3>
<p>Possibly the oldest topographical Easter egg, and the current record holder for the longest-lasting one, is the Naked Lady of Künten. First appearing on the topographical map of 1954, the reclining figure wasn’t discovered until 2012. Admittedly, without head, arms and feet, she is hard to spot. Her odalisque-like forms are suggested by the curvature of a stream and an elongated green patch indicating vegetation.</p>
<p>The world—or at least that bit between Eggenrain and Sunnenberg—was put to right again in the 2013 edition of the local map. But it’s still easy to see how that particular distribution of topographic features could have inspired a lonely 1950s cartographer to pencil in something that wasn’t there.</p>
<figure><img src="https://img.atlasobscura.com/LEowyKb-jUX75vzlXCCd-XpNr-972ODbpHk0rXnK9ZI/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9jODliYzIzYS1l/MjZjLTRjODEtOThh/Yy0wYWVkYWE2ZjBk/ZGYzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDIuanBn.jpg" alt="Any serious federal office could not allow a stray fish on its maps." width="auto" data-article-image-id="undefined" data-full-size-image="https://assets.atlasobscura.com/article_images/full/100237/image" data-kind="article-image" id="article-image-100237" data-src="https://img.atlasobscura.com/LEowyKb-jUX75vzlXCCd-XpNr-972ODbpHk0rXnK9ZI/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9jODliYzIzYS1l/MjZjLTRjODEtOThh/Yy0wYWVkYWE2ZjBk/ZGYzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDIuanBn.jpg"><figcaption>Any serious federal office could not allow a stray fish on its maps. <a target="_blank" href="https://map.geo.admin.ch/">Swisstopo</a></figcaption></figure>
<h3><strong>A Swiss fish in a French lake</strong></h3>
<p>It was never discovered who reshaped the aforementioned landscape feature into a female form. But the younger generation of Easter-eggers is known by name.</p>
<p>In 1980, Werner Leuenberger even went international. He drew a fish at the southern end of the <em>Lac de Remoray</em>, a small lake just across the Franco-Swiss border. The fish felt right at home among the lines marking out the area as swampy. However, it was caught five years later, and has been left off the map since 1986.</p>
<figure><img src="https://img.atlasobscura.com/B75neSF-cnLwT1-neEsUt3Kz6RdXLTNIhqArKjXXN1c/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy82ODhkNTllMy00/NjEwLTQ2ZTUtODJm/Yy00OTM1OGYxNDc2/YTQzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDQuanBn.jpg" alt="The spider once aligned with a particularly dangerous part of the mountain." width="auto" data-article-image-id="undefined" data-full-size-image="https://assets.atlasobscura.com/article_images/full/100236/image" data-kind="article-image" id="article-image-100236" data-src="https://img.atlasobscura.com/B75neSF-cnLwT1-neEsUt3Kz6RdXLTNIhqArKjXXN1c/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy82ODhkNTllMy00/NjEwLTQ2ZTUtODJm/Yy00OTM1OGYxNDc2/YTQzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDQuanBn.jpg"><figcaption>The spider once aligned with a particularly dangerous part of the mountain. <a target="_blank" href="https://map.geo.admin.ch/">Swisstopo</a></figcaption></figure>
<h3><strong>Attack of the giant Eiger spider</strong></h3>
<p>In 1981, Othmar Wyss inserted a spider near the top of the Eiger, one of Switzerland’s most iconic Alpine summits, at a location actually known by mountaineers as quite dangerous.</p>
<p>The giant spider survived for six years in the freezing cold. The snowfield that made up the spider’s body—and made the northern approach of the Eiger so hard—has apparently also disappeared in the intervening years.</p>
<figure><img src="https://img.atlasobscura.com/OmKdGctdFCdkTLWR-Z0xPqsbGh44cNg9vp-5d8bZwJE/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9mYjhlMTliNy05/MWIxLTRiMzAtODgz/My1iZjE1NWRmM2Jm/MTczNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDUuanBn.jpg" alt="A face still leers on a mountain slope today." width="auto" data-article-image-id="undefined" data-full-size-image="https://assets.atlasobscura.com/article_images/full/100235/image" data-kind="article-image" id="article-image-100235" data-src="https://img.atlasobscura.com/OmKdGctdFCdkTLWR-Z0xPqsbGh44cNg9vp-5d8bZwJE/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9mYjhlMTliNy05/MWIxLTRiMzAtODgz/My1iZjE1NWRmM2Jm/MTczNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDUuanBn.jpg"><figcaption>A face still leers on a mountain slope today. <a target="_blank" href="https://map.geo.admin.ch/">Swisstopo</a></figcaption></figure>
<h3><strong>Haunted monk trapped in a map</strong></h3>
<p>A rock formation on a slope of the Harder Kulm, a mountain near Interlaken, looks like a face. This is the <em>Hardermandli</em>, or “little Harder man.” Legend has it that he was a lecherous monk, condemned to look down on the place where he chased a girl to her death.</p>
<p>Cartographer Friedrich Siegfried extended the curse to cartography, for since 1980 and until this day, the Hardermandli also lives on the map.</p>
<figure><img src="https://img.atlasobscura.com/g2miEHJwmdwJQi70um2E7ys6xc9gdynMeJXGeqG0YQs/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8zZjRlN2JmMS1m/ZTQ0LTRlMmItYTBm/Yy03MTZkNDc5MmI2/YzQzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDYuanBn.jpg" alt="Where's Waldo in Italy?" width="auto" data-article-image-id="undefined" data-full-size-image="https://assets.atlasobscura.com/article_images/full/100234/image" data-kind="article-image" id="article-image-100234" data-src="https://img.atlasobscura.com/g2miEHJwmdwJQi70um2E7ys6xc9gdynMeJXGeqG0YQs/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8zZjRlN2JmMS1m/ZTQ0LTRlMmItYTBm/Yy03MTZkNDc5MmI2/YzQzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDYuanBn.jpg"><figcaption>Where’s Waldo in Italy? <a target="_blank" href="https://map.geo.admin.ch/">Swisstopo</a></figcaption></figure>
<h3><strong>Beats waiting for the Italians</strong></h3>
<p>For the 1997 map update, Mr. Siegfried etched the likeness of a mountaineer on the Italian side of a mountain slope near Val Müstair. Reportedly, he got tired of waiting on the data for the area, which his Italian counterparts were slow to provide, so he found a creative way to plug the gap. Topography, like nature, also abhors a vacuum, apparently.</p>
<p>Swisstopo seems to have taken to heart the cartographer’s slight against his Italian colleagues, because the mountaineer still appears on the contemporary map, in 1:100,000 scale at least.</p>
<figure><img src="https://img.atlasobscura.com/OmislREC2TDa1cme6jqtn7dlGEZA2d_DmVaP7eM0WMo/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8yYTk0YTI2NS1m/YWJiLTQ0YzctODBi/Zi03ZGYxYzU5Zjcw/OTEzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDkuanBn.jpg" alt="The marmot is the most recent Easter egg." width="auto" data-article-image-id="undefined" data-full-size-image="https://assets.atlasobscura.com/article_images/full/100233/image" data-kind="article-image" id="article-image-100233" data-src="https://img.atlasobscura.com/OmislREC2TDa1cme6jqtn7dlGEZA2d_DmVaP7eM0WMo/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8yYTk0YTI2NS1m/YWJiLTQ0YzctODBi/Zi03ZGYxYzU5Zjcw/OTEzNzc0ZmYzOGRm/NDFmZTVjNmRfMjY0/MTY2NDkuanBn.jpg"><figcaption>The marmot is the most recent Easter egg. <a target="_blank" href="https://map.geo.admin.ch/">Swisstopo</a></figcaption></figure>
<h3><strong>The marmot of the Aletsch glacier</strong></h3>
<p>Swisstopo’s most famous map gag—or at least the most recent one to be revealed, in 2014—is the marmot, which has been hiding in a rock near the Aletsch glacier since it was put there by cartographer Paul Ehrlich in 2011, shortly before his retirement. The marmot is still there, and perhaps it and its fellow map oddities may be allowed to survive.</p>
<p>On its website, Swisstopo says that “these hidden drawings do not affect the accuracy and level of detail of our maps, nor on the safety and security of their users. They merely add a note of mystery to our nation’s maps.”</p>
<p>Are there any other gags hidden in the official maps of Switzerland? Swisstopo itself claims it has no knowledge of any other cartographic oddities. But knowing and not telling, that’s exactly the kind of thing they would find funny, isn’t it?</p>
<p><a href="https://bigthink.com/strange-maps/swiss-maps/"><em>This article</em></a><em> originally appeared on</em><a href="https://bigthink.com/?utm_source=syndication&amp;utm_medium=organicpartner&amp;utm_campaign=atlasobscura"> <em>Big Think</em></a><em>, home of the brightest minds and biggest ideas of all time.</em><a href="https://bigthink.com/subscribe/?utm_source=syndication&amp;utm_medium=organicpartner&amp;utm_campaign=atlasobscura"> <em>Sign up for Big Think’s newsletter.</em></a></p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Second Golden Age of Emacs (109 pts)]]></title>
            <link>https://batsov.com/articles/2024/02/27/m-x-reloaded-the-second-golden-age-of-emacs/</link>
            <guid>39523122</guid>
            <pubDate>Tue, 27 Feb 2024 12:13:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://batsov.com/articles/2024/02/27/m-x-reloaded-the-second-golden-age-of-emacs/">https://batsov.com/articles/2024/02/27/m-x-reloaded-the-second-golden-age-of-emacs/</a>, See on <a href="https://news.ycombinator.com/item?id=39523122">Hacker News</a></p>
<div id="readability-page-1" class="page"><section itemprop="text">
        
        <blockquote>
  <p>The people who live in a Golden Age usually go around complaining how yellow
everything looks.</p>

  <p>– Randall Jarell</p>
</blockquote>

<p>Yesterday I wrote that I think Emacs is currently experiencing its (second)
Golden Age.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" rel="footnote">1</a></sup> Today I’ll expand on this and I’ll offer my perspective on
the reasons and factors that lead to it.</p>

<h2 id="the-road-to-success">The Road to Success</h2>

<p>Yesterday someone mentioned on X the following:</p>

<blockquote>
  <p>I think @emacs was kind of revived thanks to  VSCode (LSP) and Atom (tree-sitter).</p>
</blockquote>

<p>While having access to shared editor infrastructure definitely helps, I think that’s only a tiny part of the reasons for Emacs’s “resurgence” in recent years.
I believe that numerous factors played a part in this and I’ll try to list the ones I consider the most important.
I’ll list those in no particular order in the sections that follow.</p>

<h3 id="github">GitHub</h3>

<p>The creation of GitHub in 2008 was a revolution for OSS developers around the world.
It was a massive step forward from the days of SourceForge and EmacsWiki,
and a ton of Emacs projects were born on it.</p>

<p>I rarely contributed to OSS projects before the birth of GitHub, but drastically changed afterwards. GitHub was a big part of my OSS work and all of my projects are still hosted there. Its scale and reach allowed projects to connect with numerous potential contributors. Many of the most impactful Emacs packages
in recent history were born and popularized on GitHub.<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" rel="footnote">2</a></sup></p>

<p>I think it a bit ironic that a proprietary platform did so much for FOSS community, but I don’t think anyone can argue with the results. I won’t dwell much on this section, as I doubt that anything I can say about GitHub will be news to anyone.</p>

<h3 id="clojure">Clojure</h3>

<p>Around the same time (in 2007) Clojure was created. The language generated a ton of interest in excitement in the programming
community when it was released and this translated into increased interest in Emacs. Why so?</p>

<p>Well, Emacs was the first editor to provide some decent support for Clojure programming - <code>clojure-mode</code> (a slightly modified version of <code>lisp-mode</code>)
and a Clojure adapter for SLIME (<code>swank-clojure</code>). CIDER (the successor of SLIME + <code>swank-clojure</code>) is still one of the most popular and
most powerful Clojure programming environments today.</p>

<p>I’ve noticed that many of the active contributors to the Emacs community were connected to Clojure in some way. Here are a few examples:</p>

<ul>
  <li>Phil Hegelberg (a.k.a. <code>technomancy</code>), a prolific Emacs hacker. He had also made one of the most famous “intro to Emacs” back in the day - <a href="https://www.pluralsight.com/courses/meet-emacs">Meet Emacs</a>.</li>
  <li>Artur Malabarba of <a href="https://endlessparentheses.com/">Endless Parentheses</a></li>
  <li>Magnar Sveen (Emacs Rocks, <code>dash.el</code>, <code>multiple-cursors.el</code> and many others)</li>
  <li>Steve Purcell (author/maintainer of many Emacs packages, one of the driving forces behind MELPA)</li>
  <li>Me :-) Yeah, I was an Emacs user even before I got interested in Clojure, but much of passion for Emacs was coming from my passion for Lisps. Clojure gave me more reasons
to use spend time in Emacs and motivated to work harder on improving things in Emacs.</li>
</ul>

<p>I’m reasonably sure that Clojure played a major role in the success of Emacs in recent years by attracting both new users and new contributors to the project.</p>

<p>There’s more to the story, though. Clojure also had some impact on the core Emacs APIs, as macros like <code>if-let</code> and <code>thread-first</code> and libraries like <code>dash.el</code> and <code>seq.el</code> were influenced by it.</p>

<h3 id="melpa">MELPA</h3>

<p>Sadly many Emacs packages were a total mess a few years ago. Many maintainers would never cut releases and users were just expected to use the latest version of the code.
This made the concept of a package repository that’s distributing only “tagged” releases problematic. Not to mention that <code>package.el</code> was very new and wasn’t popular enough
to encourage people to change their ways. Do you remember that many Emacs packages weren’t using VCS and were distributed only on EmacsWiki? Fun times!</p>

<p><a href="https://melpa.org/">MELPA</a> was a true revolution was it was released - a repo that was building snapshot release packages from a ton of sources (GitHub, person code repos, EmacsWiki). It was trivial
to add a package there and it was a “one and thing” (unlike its predecessor Marmalade, when you had to upload each new release manually). You’d just submit a package recipe and MELPA will rebuild your package when needed.</p>

<p>Today MELPA hosts a whopping 6000 (!!!) Emacs packages and its’ a true pillar of our community. For context - the official GNU ELPA and NonGNU ELPA repos are home to about 650 packages. I don’t know about you, but I’ve discovered a lot of cool packages while browsing MELPA and I can’t imagine the Emacs community without it.</p>

<h3 id="killer-apps">Killer “Apps”</h3>

<p>Without going into much details:</p>

<ul>
  <li><a href="https://orgmode.org/">org-mode</a></li>
  <li><a href="https://magit.vc/">Magit</a></li>
  <li><a href="https://www.gnu.org/software/auctex/">Auctex</a> (probably the best way to author LaTeX documents)</li>
  <li><a href="https://slime.common-lisp.dev/">SLIME</a> (amazing Common Lisp programming environment)</li>
  <li><a href="https://github.com/emacsmirror/geiser">Geiser</a> (amazing Scheme programming environment)</li>
  <li><a href="https://cider.mx/">CIDER</a> (Clojure development that rocks)</li>
</ul>

<p>What would you add to this list?</p>

<h3 id="spacemacs-and-friends">Spacemacs (and friends)</h3>

<p><a href="https://www.spacemacs.org/">Spacemacs</a> showcased the full potential of Emacs to a lot of people and managed to convert many Vim users to Emacs. That’s no small feat!
It wasn’t the first Emacs distro by any means, but it was the most ambitious one at the time for sure. Its decision to leverage heavily <code>evil-mode</code> and to target
Vim users turned out to be a great choice!</p>

<p>Emacs “Distributions” in general were quite important to bridge the gap between the spartan default Emacs experience and what users of the other
editors would often expect.</p>

<h3 id="shared-editor-infrastructure-lsp-treesitter">Shared Editor Infrastructure (LSP, TreeSitter)</h3>

<p>Emacs was getting a lot of criticism for lacking some of the advanced code analysis and refactoring capabilities of “modern” editors and IDEs.
Its adoption of the industry standards LSP (Language Server Protocol) and TreeSitter changes this and makes sure Emacs developers don’t have to
invest time solving problems that are already solved elsewhere.</p>

<p>The complete transition to LSP and TreeSitter won’t happen overnight and we’ll need years
to finish it. Still, the progress to date is nothing short of amazing.</p>

<h3 id="progressive-emacs-maintainers">Progressive Emacs maintainers</h3>

<p>Richard Stallman stepped down as the head maintainer of Emacs in 2008, and was succeeded by a string of more progressive Emacs maintainers.
I think that Stefan Monnier, John Wiegly and Eli Zaretskii have helped create an environment that’s collaborative and welcoming
to contributions.</p>

<p>Here we can highlight a few major milestones:</p>

<ul>
  <li>Switching from CVS to Bazaar in 2008</li>
  <li>Switching to Git in 2014</li>
  <li>The adoption of <code>package.el</code> as the standard package manager (bundled with Emacs 24 in 2012)</li>
  <li>The creation of NonGNU ELPA (an official package repo with relaxed requirements for package inclusion)</li>
  <li>Native JSON support, native compilation, built-in LSP support, TreeSitter, etc</li>
</ul>

<p>Probably there are other extremely important achievements resulting from the actions of the head maintainers that I’ve forgotten about. Feel free to mention those in the comments.</p>

<h3 id="people-looking-for-something-different">People Looking for Something Different</h3>

<blockquote>
  <p>You can never be wrong by being yourself.</p>
</blockquote>

<p>While the editors of the day (e.g. VS Code) get the job done they aren’t necessary a great fit for everyone. There will always be those of us who are looking for something different for whatever reasons.</p>

<p>Given how similar most editors are today, those who are not happy with the status quo don’t really have that many options. If you want an editor that’s different from the mainstream and has a strong community - it’s essentially a choice between Emacs and Vim.</p>

<p>And if you want to build an editor that’s uniquely tailored to your preferences in every conceivable way - it’s probably Emacs.</p>

<h2 id="closing-thoughts">Closing Thoughts</h2>

<blockquote>
  <p>Success occurs when opportunity meets preparation.</p>

  <p>– Zig Ziglar</p>
</blockquote>

<p>As you can see - that was quite the journey, that spans over 15 years. If I had pick one year that was the most important for what followed next it would
probably be 2008:</p>

<ul>
  <li>The rise of GitHub and Clojure</li>
  <li>The change of the Emacs leadership</li>
  <li>The creation of Magit</li>
</ul>

<p>What a year!</p>

<p>So there you have it - my take on the factors and the events that lead to Emacs’s second Golden Age. Is there anything you’d disagree with?
Is there anything important that you think I’ve missed? Please, let me know in the comments!</p>

<h2 id="epilogue">Epilogue</h2>

<blockquote>
  <p>You’re here because you know something. What you know you can’t explain, but
you feel it. You’ve felt it your entire life, that there’s something wrong
with the world. You don’t know what it is, but it’s there, like a splinter in
your mind, driving you mad. It is this feeling that has brought you to me.</p>

  <p>– Morpheus (“The Matrix”)</p>
</blockquote>

<p>So, why should you try Emacs in 2024?</p>

<ul>
  <li>You’re a curious person and a constant tinkerer who likes playing with (insanely cool) vintage software.</li>
  <li>You want to experience life outside the mainstream.</li>
  <li>You’ve always wanted to learn a bit of Lisp.</li>
  <li>You want to build an editor that’s uniquely tailored to your needs and preferences.</li>
  <li>You’ve got a lot of time to kill.</li>
</ul>

<p>You’re now ready to begin your life-long journey to Emacs mastery. Meta-x forever! In parentheses we trust!</p>



        
      </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rainwater everywhere on the planet is unsafe to drink due to chemicals (2022) (230 pts)]]></title>
            <link>https://phys.org/news/2022-08-rainwater-unsafe-due-chemicals.html</link>
            <guid>39522798</guid>
            <pubDate>Tue, 27 Feb 2024 11:27:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phys.org/news/2022-08-rainwater-unsafe-due-chemicals.html">https://phys.org/news/2022-08-rainwater-unsafe-due-chemicals.html</a>, See on <a href="https://news.ycombinator.com/item?id=39522798">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
										
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2022/rainwater-1.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2022/rainwater-1.jpg" data-sub-html="Credit: Pixabay/CC0 Public Domain">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2022/rainwater-1.jpg" alt="rainwater" title="Credit: Pixabay/CC0 Public Domain" width="800" height="530">
             <figcaption>
                Credit: Pixabay/CC0 Public Domain
            </figcaption>        </figure>
    </div><p>Rainwater everywhere on the planet is unsafe to drink due to levels of toxic chemicals known as PFAS that exceed the latest guidelines, according to a new study by Stockholm University scientists.</p>


										      
																																	<p>Commonly known as 'forever chemicals' because they disintegrate extremely slowly, PFAS (per- and <a href="https://phys.org/tags/polyfluoroalkyl+substances/" rel="tag">polyfluoroalkyl substances</a>) were initially found in packaging, shampoo or makeup but have spread to our entire environment, including water and air.</p>
<p>"There is nowhere on Earth where the rain would be safe to drink, according to the measurements that we have taken," Ian Cousins, a professor at the university and the lead author of the study published in <i>Environmental Science and Technology</i>, told AFP.</p>
<p>A compilation of the data since 2010 that his team studied showed that "even in Antarctica or the Tibetan plateau, the levels in the rainwater are above the drinking water guidelines that the US EPA (Environmental Protection Agency) proposed", he said.</p>
<p>Normally considered pristine, the two regions still have PFAS levels "14 times higher" than the US drinking water guidelines.</p>
<p>The EPA recently lowered its PFAS guidelines significantly after discovering that the chemicals may affect the <a href="https://phys.org/tags/immune+response/" rel="tag">immune response</a> in children to vaccines, Cousins noted.</p>
<p>Once ingested, PFAS accumulate in the body.</p>
<p>According to some studies, exposure can also lead to problems with fertility, <a href="https://phys.org/tags/developmental+delays/" rel="tag">developmental delays</a> in children, increased risks of obesity or certain cancers (prostate, kidney and testicular), an increase in <a href="https://phys.org/tags/cholesterol+levels/" rel="tag">cholesterol levels</a>.<br>
—Planet 'irreversibly contaminated'—</p>

																																						
																																			<p>Cousins said PFAS were now "so persistent" and ubiquitous that they will never disappear from the planet.</p>
<p>"We have made the planet inhospitable to human life by irreversibly contaminating it now so that nothing is clean anymore. And to the point that's it's not clean enough to be safe", he said.</p>
<p>"We have crossed a planetary boundary", he said, referring to a central paradigm for evaluating Earth's capacity to absorb the impact of human activity.</p>
<p>However, Cousins noted that PFAS levels in people have actually dropped "quite significantly in the last 20 years" and "ambient levels (of PFAS in the environment) have been the same for the past 20 years".</p>
<p>"What's changed is the guidelines. They've gone down millions of times since the early 2000s, because we've learned more about the toxicity of these substances."</p>
<p>Cousins said we have to learn to live with it.</p>
<p>"I'm not super concerned about the everyday exposure in mountain or stream <a href="https://phys.org/tags/water/" rel="tag">water</a> or in the food. We can't escape it... we're just going to have to live with it."</p>
<p>"But it's not a great situation to be in, where we've contaminated the environment to the point where background exposure is not really safe."</p>

																																																					
																				<div>
																						<p><strong>More information:</strong>
												Per- and polyfluoroalkyl substances (PFAS) define a new planetary boundary for novel entities that has been exceeded, <i>Environmental Science &amp; Technology</i> (2022). <a data-doi="1" href="https://dx.doi.org/10.1021/acs.est.2c02765" target="_blank">DOI: 10.1021/acs.est.2c02765</a>
																						
																						</p>
																					</div>
                               											
																															 <p>
												  © 2022 AFP
											 </p>
										                                        
										<!-- print only -->
										<div>
											 <p><strong>Citation</strong>:
												Rainwater unsafe to drink due to chemicals: study (2022, August 10)
												retrieved 27 February 2024
												from https://phys.org/news/2022-08-rainwater-unsafe-due-chemicals.html
											 </p>
											 <p>
											 This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
											 part may be reproduced without the written permission. The content is provided for information purposes only.
											 </p>
										</div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Blender Open Movies. Featuring all the production files, assets, and artwork (204 pts)]]></title>
            <link>https://studio.blender.org/films/</link>
            <guid>39522499</guid>
            <pubDate>Tue, 27 Feb 2024 10:42:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://studio.blender.org/films/">https://studio.blender.org/films/</a>, See on <a href="https://news.ycombinator.com/item?id=39522499">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
    <p>The iconic Blender Open Movies. Featuring all the production files, assets, artwork, and never-seen-before content.</p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I turned my open-source project into a full-time business (513 pts)]]></title>
            <link>https://docs.emailengine.app/how-i-turned-my-open-source-project-into/</link>
            <guid>39522348</guid>
            <pubDate>Tue, 27 Feb 2024 10:16:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://docs.emailengine.app/how-i-turned-my-open-source-project-into/">https://docs.emailengine.app/how-i-turned-my-open-source-project-into/</a>, See on <a href="https://news.ycombinator.com/item?id=39522348">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="site-main">
<article>

    <header>

        

        


        <section>

            <ul>
                <li>
                    <a href="https://docs.emailengine.app/author/andris/">
                        <img src="https://www.gravatar.com/avatar/0bc4849da2f3ad66fe4d3fa53a3d45f2?s=250&amp;d=mm&amp;r=x" alt="Andris Reinman">
                    </a>
                </li>
            </ul>

            <div>
                
                <p><time datetime="2024-02-27">Feb 27, 2024</time>
                        <span><span>•</span> 4 min read</span>
                </p>
            </div>

        </section>

            <figure>
                <img srcset="https://docs.emailengine.app/content/images/size/w300/2024/02/EmailEngine_logo_horiz.jpg 300w,
                            https://docs.emailengine.app/content/images/size/w600/2024/02/EmailEngine_logo_horiz.jpg 600w,
                            https://docs.emailengine.app/content/images/size/w1000/2024/02/EmailEngine_logo_horiz.jpg 1000w,
                            https://docs.emailengine.app/content/images/size/w2000/2024/02/EmailEngine_logo_horiz.jpg 2000w" sizes="(min-width: 1400px) 1400px, 92vw" src="https://docs.emailengine.app/content/images/size/w2000/2024/02/EmailEngine_logo_horiz.jpg" alt="How I turned my open-source project into a business">
            </figure>

    </header>

    <section>
        <p>When I started writing and publishing open-source software about 15 years ago, I was pretty radical about it. I only used permissive licenses like MIT or BSD, as all I cared about was reach. Using a copyleft license with strings attached seemed to hinder that reach. Getting another A-category company to use my open-source libraries like <a href="https://nodemailer.com/?ref=docs.emailengine.app">Nodemailer</a> was a badge of honor. I even went so far that when a founder of a major transactional email service sent me an email regarding Nodemailer and offered to make a donation to promote my efforts, I rejected it. I did not want to seem affected by one of the dominant providers because this would not be fair to other providers.</p><p>In hindsight, what a fool I was.</p><p>In any case, it changed years later when a startup using Nodemailer was acquired for half a billion dollars. I was financially not in a good place back then, and when I saw the news, I started to wonder – what did I get out of this? Sending email notifications was a huge part of that service, and they probably sent millions of email notifications a day using Nodemailer. At the very least, I saved them tons of developer hours by providing a free and solid library for sending these emails. I searched my mailbox for emails related to that company and found a single complaint about a feature. No pull requests, no donations, no nothing. And there was nowhere to complain either as I had knowingly given my software for the world to use with no requirements to compensate anything. My empty wallet was not happy about the turn of events.</p><p>So, when I started what eventually became <a href="https://emailengine.app/?ref=docs.emailengine.app">EmailEngine</a>, I tried to cover my back as much as possible. I released the software under the copyleft LGPL license. I also set up an automated CLA process so that no one was able to get their PR merged without signing a CLA first. Many people hate CLAs, and several persons opened a PR first but closed it once they realized that there was a CLA requirement. Well, to be honest, I didn't really care. For example, 98.1% of the code for Nodemailer was written by myself, and only 1.9% was from other contributors, so not getting PRs merged was not a major issue. For EmailEngine, after a year and a half of being published as open source, the same numbers were 99.8% vs 0.2%.</p><blockquote>I use <a href="https://cla-assistant.io/?ref=docs.emailengine.app">CLA assistant</a> for managing CLAs in my projects</blockquote><p>Obviously, I wanted to make some money from my new project, and my business plan was simple. I published the project (it was called IMAP API at that time) as an LGPL-licensed application. I also offered an MIT version, but to get that, you had to subscribe. The subscription fee was 250€ per year. My assumption was that companies - the main target for the software - do not like copyleft licenses and would convert to the permissive license once they see how useful the app is.</p><p>Well, it turns out my business plan was bonkers. I only gained a few paying subscribers, and it seemed to me those people weren't even using IMAP API. They just wanted to support my effort. It turned out that smaller companies did not care about the license at all, and larger companies were not using it. After a year and a half and 750€ in total revenue, I decided to jump ship — enough of providing free stuff.</p><p>I re-designed the UI of the app to look more professional and implemented a license key system. From that moment if you wanted to use EmailEngine (the new name for IMAP API), you needed a license key that was only available for paying subscribers. I also changed the license from LGPL to a commercial license. The source code is still published publicly on <a href="https://github.com/postalsys/emailengine?ref=docs.emailengine.app">GitHub</a>. It is no longer <em>open-source</em> by definition but <em>source-available</em>. This change of license was only possible due to requiring outside committers to sign a CLA from the start.</p><blockquote>I still publish MIT-licensed projects, but only for smaller tools, not larger projects. The goal of these tools is to promote my main effort. For example, I extracted the IMAP client functions from EmailEngine and published it under an MIT license as a generic IMAP client library for Node.js. This module &nbsp;(<a href="https://imapflow.com/?ref=docs.emailengine.app">ImapFlow</a>) is gaining steam in adoption as it is by far better than any pre-existing alternative. The documentation page sends about 100 visitors per month to EmailEngine's homepage, which is not much, but hey, it is free traffic, and sometimes these visitors do convert, making the effort fruitful.</blockquote><p>At first, there wasn't even a trial option. If you did not provide a valid license key 15 minutes after the application started, the app just stopped working.</p><p>I kept the price the same, 250€ per year, and during the first month, I sold 1750€ worth of subscriptions. That's like twice the amount I made in the previous year and a half, and it sealed the fate of the project. There was no going back.</p><p>Next, I started to increase the pricing; 250€ became 495€, then 695€ and 795€, and finally 895€. To my surprise, it did not mean getting fewer customers. I guess any sub-$1k amount for businesses is peanuts, so the only thing these price increases changed was improving the revenue.</p><p>The current MRR for EmailEngine is 6100€ and grows steadily, which in Estonia, where I live, allows me to pay myself a decent salary so that I can work on my project full-time. The only regret I have is that I did not start selling my software earlier and only published free, open-source software. Yes, I have some sponsors in GitHub, but it has never been a substantial amount, ranging from $50-$750 per month, depending on how many sponsors I happen to have. Selling to business customers is definitely more reliable and predictable than depending on the goodwill of random people.</p>
    </section>


</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why time seems to pass faster as we age (228 pts)]]></title>
            <link>https://invertedpassion.com/why-time-seems-to-pass-faster-as-we-age/</link>
            <guid>39522249</guid>
            <pubDate>Tue, 27 Feb 2024 10:02:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://invertedpassion.com/why-time-seems-to-pass-faster-as-we-age/">https://invertedpassion.com/why-time-seems-to-pass-faster-as-we-age/</a>, See on <a href="https://news.ycombinator.com/item?id=39522249">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-2155">
		<!-- .entry-header -->
	<div>
		
		
<p>1/&nbsp;I’ve been mega-obsessed with this feeling.</p>



<p>A year as a 36-year-old seems so much shorter as compared to when I was a kid or even as a teen.</p>



<p>It seems cosmically unfair – <strong>we have fewer years to live, and each year flies by faster.</strong></p>



<p>2/&nbsp;But, why is that happening?</p>



<p>My tentative conclusion is that <strong>it’s an unfortunate outcome of how evolution shaped our brain to be an efficient storage device.&nbsp;</strong></p>



<p>3/&nbsp;Our brain is a prediction device.</p>



<p>Its top job is to <strong>construct a model of the world so that we get a survival and reproductive edge.&nbsp;</strong></p>



<p>4/&nbsp;To be able to predict a phenomenon is to be able to control it and have power over it, so <strong>our brain is obsessed with predicting how things are going to go.</strong></p>



<p>It wants to be able to predict how mates are found, how money is made, what makes people laugh, and so on..&nbsp;<sup></sup></p>



<p>5/&nbsp;But it’s also efficient.</p>



<p>If an event has happened before, what’s the point of paying attention to it and storing it in memory?</p>



<p>Redundant storage is inefficient, so the b<strong>rain likely only pays attention to and memorises what’s new and surprising.&nbsp;</strong></p>



<p>6/&nbsp;As kids, everything is new and surprising.</p>



<p><strong>The world is full of learning opportunities, so the brain makes massive updates in memories.</strong></p>



<p>Full snapshots of your birthdays, vacations, days at school and so on.&nbsp;<sup></sup></p>



<p>7/&nbsp;<strong>Surprising information comes in droves every single day, so the brain simply paid a lot of attention</strong>, and hence you felt there were so-many-slices-of-time in a day.</p>



<p>It also stored that rich information in memory, so even looking back, days felt longer.&nbsp;</p>



<p>8/&nbsp;<strong>As we grow, new surprises become a merely tiny-patch on an old memory.</strong></p>



<p>Why store the full details of your N-th vacation when you can simply store the diff of it from your first one?&nbsp;<sup></sup></p>



<p>9/&nbsp;In other words, as we age, our memories and attention become low-fidelity versions of their former self.</p>



<p><strong>As patterns in life start repeating themselves, the slices-of-time that you notice and memorise become fewer and coarser.&nbsp;</strong></p>



<p>10/&nbsp;Naturally, <strong>if anyone asks where did time in your life go, you’d access your memory and find the majority of them relating to childhood</strong>, and very few from the recent times.</p>



<p>And that’s why time feels like it accumulated in the past, and not in the recent present.&nbsp;<sup></sup></p>



<p>11/&nbsp;The main culprit in time-speeding up is predictability.</p>



<p><strong>The more predictable your days are, the shorter they will feel.&nbsp;</strong></p>



<p>12/&nbsp;A thought experiment.</p>



<p>If you have a stable job, you can pretty much mentally time travel a full year and find your days to be similar.</p>



<p><strong>But if I ask you to imagine doing a PhD in Sanskrit at a foreign university, you would have no idea what your days are going to look like.&nbsp;</strong></p>



<p>13/&nbsp;So, <strong>predictability not just impacts perception of time in the present but also for the future.</strong></p>



<p>As kids, a vacation was full of surprising information, so it actually felt rich and long.</p>



<p>Now, your nth trip to Goa feels much shorter as you know what you’re going to do.&nbsp;<sup></sup></p>



<p>14/&nbsp;So, what to do? How to slow down time?</p>



<p><strong>The only approach I can think of is to break the predictability and actively plan to be (massively) surprised.</strong></p>



<p>Take on projects that you have no idea about.&nbsp;<sup></sup></p>



<p>15/&nbsp;<strong>Unfortunately, we are evolved to avoid exploring and taking risks as we age.</strong></p>



<p>Our brain pushes us to exploit more of the world we have come to understand better instead of pushing us to explore more.</p>



<p>But that’s precisely how you’ll make your years fly.&nbsp;<sup></sup></p>



<p>16/&nbsp;You need to ask yourself.</p>



<p>How do you want to answer how you lived your life?</p>



<p><strong>Long one, or the one that *feels* long?</strong></p>



<p>What’s more important to you?</p>



<p>17/ Interestingly, <strong>the solution to slowing down time is not boredom</strong> (as I thought). </p>



<p>Boredom is a negative state. The solution is to dive head-first into unknown territory. </p>



<p><strong>That is, to travel physically or mentally,</strong></p>



<p>18/ Note that <strong>we’re really good at grokking patterns / making predictive models. </strong></p>



<p>As soon as we figure out a winning condition for a game or the story plot, we lose interest in it.</p>



<p>19/ So <strong>an existential crisis is a spoiler alert for life. </strong></p>



<p>The brain with all its predictive models asks: is this all to life? </p>



<p>But it’s mistaken – <strong>it’s all only to the life that it has chosen to live.</strong></p>



<p>20/ A (radically) different life that it can’t predict will keep brain at its toes. </p>



<p>The key word here is “radically”. </p>



<p><strong>The smaller the change, the less memorable the time.</strong></p>



<hr>





<p><small><strong>Join 150k+ followers</strong></small><br>
<a href="https://twitter.com/paraschopra" data-show-count="true">Follow @paraschopra</a></p>







			</div><!-- .entry-content -->
						<!-- .entry-footer -->
		</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[React Labs: What We've Been Working On – February 2024 (105 pts)]]></title>
            <link>https://react.dev/blog/2024/02/15/react-labs-what-we-have-been-working-on-february-2024</link>
            <guid>39522031</guid>
            <pubDate>Tue, 27 Feb 2024 09:33:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://react.dev/blog/2024/02/15/react-labs-what-we-have-been-working-on-february-2024">https://react.dev/blog/2024/02/15/react-labs-what-we-have-been-working-on-february-2024</a>, See on <a href="https://news.ycombinator.com/item?id=39522031">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>February 15, 2024 by <a href="https://twitter.com/en_JS" target="_blank" rel="nofollow noopener noreferrer">Joseph Savona</a>, <a href="https://twitter.com/rickhanlonii" target="_blank" rel="nofollow noopener noreferrer">Ricky Hanlon</a>, <a href="https://twitter.com/acdlite" target="_blank" rel="nofollow noopener noreferrer">Andrew Clark</a>, <a href="https://twitter.com/mattcarrollcode" target="_blank" rel="nofollow noopener noreferrer">Matt Carroll</a>, and <a href="https://twitter.com/dan_abramov" target="_blank" rel="nofollow noopener noreferrer">Dan Abramov</a>.</p>
<hr>
<p>In React Labs posts, we write about projects in active research and development. We’ve made significant progress since our <a href="https://react.dev/blog/2023/03/22/react-labs-what-we-have-been-working-on-march-2023">last update</a>, and we’d like to share our progress.</p>
<div><h3><svg width="2em" height="2em" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_40_48064)"><path d="M24 27C24 25.3431 25.3431 24 27 24H45C46.6569 24 48 25.3431 48 27C48 28.6569 46.6569 30 45 30H27C25.3431 30 24 28.6569 24 27Z" fill="currentColor"></path><path d="M24 39C24 37.3431 25.3431 36 27 36H39C40.6569 36 42 37.3431 42 39C42 40.6569 40.6569 42 39 42H27C25.3431 42 24 40.6569 24 39Z" fill="currentColor"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M12 18C12 13.0294 16.0294 9 21 9H51C55.9706 9 60 13.0294 60 18V54C60 58.9706 55.9706 63 51 63H21C16.0294 63 12 58.9706 12 54V18ZM21 15H51C52.6569 15 54 16.3431 54 18V54C54 55.6569 52.6569 57 51 57H21C19.3431 57 18 55.6569 18 54V18C18 16.3431 19.3431 15 21 15Z" fill="currentColor"></path></g><defs><clipPath id="clip0_40_48064"><rect width="72" height="72" fill="white"></rect></clipPath></defs></svg>Note</h3><div><p>React Conf 2024 is scheduled for May 15–16 in Henderson, Nevada! If you’re interested in attending React Conf in person, you can <a href="https://forms.reform.app/bLaLeE/react-conf-2024-ticket-lottery/1aRQLK" target="_blank" rel="nofollow noopener noreferrer">sign up for the ticket lottery</a> until February 28th.</p><p>For more info on tickets, free streaming, sponsoring, and more, see <a href="https://conf.react.dev/" target="_blank" rel="nofollow noopener noreferrer">the React Conf website</a>.</p></div></div>
<hr>
<h2 id="react-compiler">React Compiler <a href="#react-compiler" aria-label="Link for React Compiler " title="Link for React Compiler "><svg width="1em" height="1em" viewBox="0 0 13 13" xmlns="http://www.w3.org/2000/svg"><g fill="currentColor" fill-rule="evenodd"><path d="M7.778 7.975a2.5 2.5 0 0 0 .347-3.837L6.017 2.03a2.498 2.498 0 0 0-3.542-.007 2.5 2.5 0 0 0 .006 3.543l1.153 1.15c.07-.29.154-.563.25-.773.036-.077.084-.16.14-.25L3.18 4.85a1.496 1.496 0 0 1 .002-2.12 1.496 1.496 0 0 1 2.12 0l2.124 2.123a1.496 1.496 0 0 1-.333 2.37c.16.246.42.504.685.752z"></path><path d="M5.657 4.557a2.5 2.5 0 0 0-.347 3.837l2.108 2.108a2.498 2.498 0 0 0 3.542.007 2.5 2.5 0 0 0-.006-3.543L9.802 5.815c-.07.29-.154.565-.25.774-.036.076-.084.16-.14.25l.842.84c.585.587.59 1.532 0 2.122-.587.585-1.532.59-2.12 0L6.008 7.68a1.496 1.496 0 0 1 .332-2.372c-.16-.245-.42-.503-.685-.75z"></path></g></svg></a></h2>
<p>React Compiler is no longer a research project: the compiler now powers instagram.com in production, and we are working to ship the compiler across additional surfaces at Meta and to prepare the first open source release.</p>
<p>As discussed in our <a href="https://react.dev/blog/2023/03/22/react-labs-what-we-have-been-working-on-march-2023#react-optimizing-compiler">previous post</a>, React can <em>sometimes</em> re-render too much when state changes. Since the early days of React our solution for such cases has been manual memoization. In our current APIs, this means applying the <a href="https://react.dev/reference/react/useMemo"><code dir="ltr">useMemo</code></a>, <a href="https://react.dev/reference/react/useCallback"><code dir="ltr">useCallback</code></a>, and <a href="https://react.dev/reference/react/memo"><code dir="ltr">memo</code></a> APIs to manually tune how much React re-renders on state changes. But manual memoization is a compromise. It clutters up our code, is easy to get wrong, and requires extra work to keep up to date.</p>
<p>Manual memoization is a reasonable compromise, but we weren’t satisfied. Our vision is for React to <em>automatically</em> re-render just the right parts of the UI when state changes, <em>without compromising on React’s core mental model</em>. We believe that React’s approach — UI as a simple function of state, with standard JavaScript values and idioms — is a key part of why React has been approachable for so many developers. That’s why we’ve invested in building an optimizing compiler for React.</p>
<p>JavaScript is a notoriously challenging language to optimize, thanks to its loose rules and dynamic nature. React Compiler is able to compile code safely by modeling both the rules of JavaScript <em>and</em> the “rules of React”. For example, React components must be idempotent — returning the same value given the same inputs — and can’t mutate props or state values. These rules limit what developers can do and help to carve out a safe space for the compiler to optimize.</p>
<p>Of course, we understand that developers sometimes bend the rules a bit, and our goal is to make React Compiler work out of the box on as much code as possible. The compiler attempts to detect when code doesn’t strictly follow React’s rules and will either compile the code where safe or skip compilation if it isn’t safe. We’re testing against Meta’s large and varied codebase in order to help validate this approach.</p>
<p>For developers who are curious about making sure their code follows React’s rules, we recommend <a href="https://react.dev/reference/react/StrictMode">enabling Strict Mode</a> and <a href="https://react.dev/learn/editor-setup#linting">configuring React’s ESLint plugin</a>. These tools can help to catch subtle bugs in your React code, improving the quality of your applications today, and future-proofs your applications for upcoming features such as React Compiler. We are also working on consolidated documentation of the rules of React and updates to our ESLint plugin to help teams understand and apply these rules to create more robust apps.</p>
<p>To see the compiler in action, you can check out our <a href="https://www.youtube.com/watch?v=qOQClO3g8-Y" target="_blank" rel="nofollow noopener noreferrer">talk from last fall</a>. At the time of the talk, we had early experimental data from trying React Compiler on one page of instagram.com. Since then, we shipped the compiler to production across instagram.com. We’ve also expanded our team to accelerate the rollout to additional surfaces at Meta and to open source. We’re excited about the path ahead and will have more to share in the coming months.</p>
<h2 id="actions">Actions <a href="#actions" aria-label="Link for Actions " title="Link for Actions "><svg width="1em" height="1em" viewBox="0 0 13 13" xmlns="http://www.w3.org/2000/svg"><g fill="currentColor" fill-rule="evenodd"><path d="M7.778 7.975a2.5 2.5 0 0 0 .347-3.837L6.017 2.03a2.498 2.498 0 0 0-3.542-.007 2.5 2.5 0 0 0 .006 3.543l1.153 1.15c.07-.29.154-.563.25-.773.036-.077.084-.16.14-.25L3.18 4.85a1.496 1.496 0 0 1 .002-2.12 1.496 1.496 0 0 1 2.12 0l2.124 2.123a1.496 1.496 0 0 1-.333 2.37c.16.246.42.504.685.752z"></path><path d="M5.657 4.557a2.5 2.5 0 0 0-.347 3.837l2.108 2.108a2.498 2.498 0 0 0 3.542.007 2.5 2.5 0 0 0-.006-3.543L9.802 5.815c-.07.29-.154.565-.25.774-.036.076-.084.16-.14.25l.842.84c.585.587.59 1.532 0 2.122-.587.585-1.532.59-2.12 0L6.008 7.68a1.496 1.496 0 0 1 .332-2.372c-.16-.245-.42-.503-.685-.75z"></path></g></svg></a></h2>
<p>We <a href="https://react.dev/blog/2023/03/22/react-labs-what-we-have-been-working-on-march-2023#react-server-components">previously shared</a> that we were exploring solutions for sending data from the client to the server with Server Actions, so that you can execute database mutations and implement forms. During development of Server Actions, we extended these APIs to support data handling in client-only applications as well.</p>
<p>We refer to this broader collection of features as simply “Actions”. Actions allow you to pass a function to DOM elements such as <a href="https://react.dev/reference/react-dom/components/form"><code dir="ltr">&lt;form/&gt;</code></a>:</p>
<!--$--><div dir="ltr"><pre><code><p><span>&lt;</span><span>form</span> <span>action</span>=<span>{</span><span>search</span><span>}</span><span>&gt;</span><br></p><p><span>&lt;</span><span>input</span> <span>name</span>=<span>"query"</span> <span>/&gt;</span><br></p><p><span>&lt;</span><span>button</span> <span>type</span>=<span>"submit"</span><span>&gt;</span>Search<span>&lt;/</span><span>button</span><span>&gt;</span><br></p><p><span>&lt;/</span><span>form</span><span>&gt;</span></p></code></pre></div><!--/$-->
<p>The <code dir="ltr">action</code> function can operate synchronously or asynchronously. You can define them on the client side using standard JavaScript or on the server with the  <a href="https://react.dev/reference/react/use-server"><code dir="ltr">'use server'</code></a> directive. When using an action, React will manage the life cycle of the data submission for you, providing hooks like <a href="https://react.dev/reference/react-dom/hooks/useFormStatus"><code dir="ltr">useFormStatus</code></a>, and <a href="https://react.dev/reference/react-dom/hooks/useFormState"><code dir="ltr">useFormState</code></a> to access the current state and response of the form action.</p>
<p>By default, Actions are submitted within a <a href="https://react.dev/reference/react/useTransition">transition</a>, keeping the current page interactive while the action is processing. Since Actions support async functions, we’ve also added the ability to use <code dir="ltr">async/await</code> in transitions. This allows you to show pending UI with the <code dir="ltr">isPending</code> state of a transition when an async request like <code dir="ltr">fetch</code> starts, and show the pending UI all the way through the update being applied.</p>
<p>Alongside Actions, we’re introducing a feature named <a href="https://react.dev/reference/react/useOptimistic"><code dir="ltr">useOptimistic</code></a> for managing optimistic state updates. With this hook, you can apply temporary updates that are automatically reverted once the final state commits. For Actions, this allows you to optimistically set the final state of the data on the client, assuming the submission is successful, and revert to the value for data received from the server. It works using regular <code dir="ltr">async</code>/<code dir="ltr">await</code>, so it works the same whether you’re using <code dir="ltr">fetch</code> on the client, or a Server Action from the server.</p>
<p>Library authors can implement custom <code dir="ltr">action={fn}</code> props in their own components with <code dir="ltr">useTransition</code>. Our intent is for libraries to adopt the Actions pattern when designing their component APIs, to provide a consistent experience for React developers. For example, if your library provides a <code dir="ltr">&lt;Calendar onSelect={eventHandler}&gt;</code> component, consider also exposing a <code dir="ltr">&lt;Calendar selectAction={action}&gt;</code> API, too.</p>
<p>While we initially focused on Server Actions for client-server data transfer, our philosophy for React is to provide the same programming model across all platforms and environments. When possible, if we introduce a feature on the client, we aim to make it also work on the server, and vice versa. This philosophy allows us to create a single set of APIs that work no matter where your app runs, making it easier to upgrade to different environments later.</p>
<p>Actions are now available in the Canary channel and will ship in the next release of React.</p>
<h2 id="new-features-in-react-canary">New Features in React Canary <a href="#new-features-in-react-canary" aria-label="Link for New Features in React Canary " title="Link for New Features in React Canary "><svg width="1em" height="1em" viewBox="0 0 13 13" xmlns="http://www.w3.org/2000/svg"><g fill="currentColor" fill-rule="evenodd"><path d="M7.778 7.975a2.5 2.5 0 0 0 .347-3.837L6.017 2.03a2.498 2.498 0 0 0-3.542-.007 2.5 2.5 0 0 0 .006 3.543l1.153 1.15c.07-.29.154-.563.25-.773.036-.077.084-.16.14-.25L3.18 4.85a1.496 1.496 0 0 1 .002-2.12 1.496 1.496 0 0 1 2.12 0l2.124 2.123a1.496 1.496 0 0 1-.333 2.37c.16.246.42.504.685.752z"></path><path d="M5.657 4.557a2.5 2.5 0 0 0-.347 3.837l2.108 2.108a2.498 2.498 0 0 0 3.542.007 2.5 2.5 0 0 0-.006-3.543L9.802 5.815c-.07.29-.154.565-.25.774-.036.076-.084.16-.14.25l.842.84c.585.587.59 1.532 0 2.122-.587.585-1.532.59-2.12 0L6.008 7.68a1.496 1.496 0 0 1 .332-2.372c-.16-.245-.42-.503-.685-.75z"></path></g></svg></a></h2>
<p>We introduced <a href="https://react.dev/blog/2023/05/03/react-canaries">React Canaries</a> as an option to adopt individual new stable features as soon as their design is close to final, before they’re released in a stable semver version.</p>
<p>Canaries are a change to the way we develop React. Previously, features would be researched and built privately inside of Meta, so users would only see the final polished product when released to Stable. With Canaries, we’re building in public with the help of the community to finalize features we share in the React Labs blog series. This means you hear about new features sooner, as they’re being finalized instead of after they’re complete.</p>
<p>React Server Components, Asset Loading, Document Metadata, and Actions have all landed in the React Canary, and we’ve added docs for these features on react.dev:</p>
<ul>
<li>
<p><strong>Directives</strong>: <a href="https://react.dev/reference/react/use-client"><code dir="ltr">"use client"</code></a> and <a href="https://react.dev/reference/react/use-server"><code dir="ltr">"use server"</code></a> are bundler features designed for full-stack React frameworks. They mark the “split points” between the two environments: <code dir="ltr">"use client"</code> instructs the bundler to generate a <code dir="ltr">&lt;script&gt;</code> tag (like <a href="https://docs.astro.build/en/concepts/islands/#creating-an-island" target="_blank" rel="nofollow noopener noreferrer">Astro Islands</a>), while <code dir="ltr">"use server"</code> tells the bundler to generate a POST endpoint (like <a href="https://trpc.io/docs/concepts" target="_blank" rel="nofollow noopener noreferrer">tRPC Mutations</a>). Together, they let you write reusable components that compose client-side interactivity with the related server-side logic.</p>
</li>
<li>
<p><strong>Document Metadata</strong>: we added built-in support for rendering <a href="https://react.dev/reference/react-dom/components/title"><code dir="ltr">&lt;title&gt;</code></a>, <a href="https://react.dev/reference/react-dom/components/meta"><code dir="ltr">&lt;meta&gt;</code></a>, and metadata <a href="https://react.dev/reference/react-dom/components/link"><code dir="ltr">&lt;link&gt;</code></a> tags anywhere in your component tree. These work the same way in all environments, including fully client-side code, SSR, and RSC. This provides built-in support for features pioneered by libraries like <a href="https://github.com/nfl/react-helmet" target="_blank" rel="nofollow noopener noreferrer">React Helmet</a>.</p>
</li>
<li>
<p><strong>Asset Loading</strong>: we integrated Suspense with the loading lifecycle of resources such as stylesheets, fonts, and scripts so that React takes them into account to determine whether the content in elements like <a href="https://react.dev/reference/react-dom/components/style"><code dir="ltr">&lt;style&gt;</code></a>, <a href="https://react.dev/reference/react-dom/components/link"><code dir="ltr">&lt;link&gt;</code></a>, and <a href="https://react.dev/reference/react-dom/components/script"><code dir="ltr">&lt;script&gt;</code></a> are ready to be displayed. We’ve also added new <a href="https://react.dev/reference/react-dom#resource-preloading-apis">Resource Loading APIs</a> like <code dir="ltr">preload</code> and <code dir="ltr">preinit</code> to provide greater control for when a resource should load and initialize.</p>
</li>
<li>
<p><strong>Actions</strong>: As shared above, we’ve added Actions to manage sending data from the client to the server. You can add <code dir="ltr">action</code> to elements like <a href="https://react.dev/reference/react-dom/components/form"><code dir="ltr">&lt;form/&gt;</code></a>, access the status with <a href="https://react.dev/reference/react-dom/hooks/useFormStatus"><code dir="ltr">useFormStatus</code></a>, handle the result with <a href="https://react.dev/reference/react-dom/hooks/useFormState"><code dir="ltr">useFormState</code></a>, and optimistically update the UI with <a href="https://react.dev/reference/react/useOptimistic"><code dir="ltr">useOptimistic</code></a>.</p>
</li>
</ul>
<p>Since all of these features work together, it’s difficult to release them in the Stable channel individually. Releasing Actions without the complementary hooks for accessing form states would limit the practical usability of Actions. Introducing React Server Components without integrating Server Actions would complicate modifying data on the server.</p>
<p>Before we can release a set of features to the Stable channel, we need to ensure they work cohesively and developers have everything they need to use them in production. React Canaries allow us to develop these features individually, and release the stable APIs incrementally until the entire feature set is complete.</p>
<p>The current set of features in React Canary are complete and ready to release.</p>
<h2 id="the-next-major-version-of-react">The Next Major Version of React <a href="#the-next-major-version-of-react" aria-label="Link for The Next Major Version of React " title="Link for The Next Major Version of React "><svg width="1em" height="1em" viewBox="0 0 13 13" xmlns="http://www.w3.org/2000/svg"><g fill="currentColor" fill-rule="evenodd"><path d="M7.778 7.975a2.5 2.5 0 0 0 .347-3.837L6.017 2.03a2.498 2.498 0 0 0-3.542-.007 2.5 2.5 0 0 0 .006 3.543l1.153 1.15c.07-.29.154-.563.25-.773.036-.077.084-.16.14-.25L3.18 4.85a1.496 1.496 0 0 1 .002-2.12 1.496 1.496 0 0 1 2.12 0l2.124 2.123a1.496 1.496 0 0 1-.333 2.37c.16.246.42.504.685.752z"></path><path d="M5.657 4.557a2.5 2.5 0 0 0-.347 3.837l2.108 2.108a2.498 2.498 0 0 0 3.542.007 2.5 2.5 0 0 0-.006-3.543L9.802 5.815c-.07.29-.154.565-.25.774-.036.076-.084.16-.14.25l.842.84c.585.587.59 1.532 0 2.122-.587.585-1.532.59-2.12 0L6.008 7.68a1.496 1.496 0 0 1 .332-2.372c-.16-.245-.42-.503-.685-.75z"></path></g></svg></a></h2>
<p>After a couple of years of iteration, <code dir="ltr">react@canary</code> is now ready to ship to <code dir="ltr">react@latest</code>. The new features mentioned above are compatible with any environment your app runs in, providing everything needed for production use. Since Asset Loading and Document Metadata may be a breaking change for some apps, the next version of React will be a major version: <strong>React 19</strong>.</p>
<p>There’s still more to be done to prepare for release. In React 19, we’re also adding long-requested improvements which require breaking changes like support for Web Components. Our focus now is to land these changes, prepare for release, finalize docs for new features, and publish announcements for what’s included.</p>
<p>We’ll share more information about everything React 19 includes, how to adopt the new client features, and how to build support for React Server Components in the coming months.</p>
<h2 id="offscreen-renamed-to-activity">Offscreen (renamed to Activity). <a href="#offscreen-renamed-to-activity" aria-label="Link for Offscreen (renamed to Activity). " title="Link for Offscreen (renamed to Activity). "><svg width="1em" height="1em" viewBox="0 0 13 13" xmlns="http://www.w3.org/2000/svg"><g fill="currentColor" fill-rule="evenodd"><path d="M7.778 7.975a2.5 2.5 0 0 0 .347-3.837L6.017 2.03a2.498 2.498 0 0 0-3.542-.007 2.5 2.5 0 0 0 .006 3.543l1.153 1.15c.07-.29.154-.563.25-.773.036-.077.084-.16.14-.25L3.18 4.85a1.496 1.496 0 0 1 .002-2.12 1.496 1.496 0 0 1 2.12 0l2.124 2.123a1.496 1.496 0 0 1-.333 2.37c.16.246.42.504.685.752z"></path><path d="M5.657 4.557a2.5 2.5 0 0 0-.347 3.837l2.108 2.108a2.498 2.498 0 0 0 3.542.007 2.5 2.5 0 0 0-.006-3.543L9.802 5.815c-.07.29-.154.565-.25.774-.036.076-.084.16-.14.25l.842.84c.585.587.59 1.532 0 2.122-.587.585-1.532.59-2.12 0L6.008 7.68a1.496 1.496 0 0 1 .332-2.372c-.16-.245-.42-.503-.685-.75z"></path></g></svg></a></h2>
<p>Since our last update, we’ve renamed a capability we’re researching from “Offscreen” to “Activity”. The name “Offscreen” implied that it only applied to parts of the app that were not visible, but while researching the feature we realized that it’s possible for parts of the app to be visible and inactive, such as content behind a modal. The new name more closely reflects the behavior of marking certain parts of the app “active” or “inactive”.</p>
<p>Activity is still under research and our remaining work is to finalize the primitives that are exposed to library developers. We’ve deprioritized this area while we focus on shipping features that are more complete.</p>
<hr>
<p>In addition to this update, our team has presented at conferences and made appearances on podcasts to speak more on our work and answer questions.</p>
<ul>
<li>
<p><a href="https://react.dev/community/team#sathya-gunasekaran">Sathya Gunasekaran</a> spoke about the React Compiler at the <a href="https://www.youtube.com/watch?v=kjOacmVsLSE" target="_blank" rel="nofollow noopener noreferrer">React India</a> conference</p>
</li>
<li>
<p><a href="https://react.dev/community/team#dan-abramov">Dan Abramov</a> gave a talk at <a href="https://www.youtube.com/watch?v=zMf_xeGPn6s" target="_blank" rel="nofollow noopener noreferrer">RemixConf</a> titled “React from Another Dimension” which explores an alternative history of how React Server Components and Actions could have been created</p>
</li>
<li>
<p><a href="https://react.dev/community/team#dan-abramov">Dan Abramov</a> was interviewed on <a href="https://changelog.com/jsparty/311" target="_blank" rel="nofollow noopener noreferrer">the Changelog’s JS Party podcast</a> about React Server Components</p>
</li>
<li>
<p><a href="https://react.dev/community/team#matt-carroll">Matt Carroll</a> was interviewed on the <a href="https://www.buzzsprout.com/2226499/14462424-interview-the-two-reacts-with-rachel-nabors-evan-bacon-and-matt-carroll" target="_blank" rel="nofollow noopener noreferrer">Front-End Fire podcast</a> where he discussed <a href="https://overreacted.io/the-two-reacts/" target="_blank" rel="nofollow noopener noreferrer">The Two Reacts</a></p>
</li>
</ul>
<p>Thanks <a href="https://twitter.com/potetotes" target="_blank" rel="nofollow noopener noreferrer">Lauren Tan</a>, <a href="https://twitter.com/sophiebits" target="_blank" rel="nofollow noopener noreferrer">Sophie Alpert</a>, <a href="https://threads.net/someextent" target="_blank" rel="nofollow noopener noreferrer">Jason Bonta</a>, <a href="https://twitter.com/Eli_White" target="_blank" rel="nofollow noopener noreferrer">Eli White</a>, and <a href="https://twitter.com/_gsathya" target="_blank" rel="nofollow noopener noreferrer">Sathya Gunasekaran</a> for reviewing this post.</p>
<p>Thanks for reading, and <a href="https://conf.react.dev/" target="_blank" rel="nofollow noopener noreferrer">see you at React Conf</a>!</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Shittier: Code formatting tool that makes your code look terrible (106 pts)]]></title>
            <link>https://github.com/rohitdhas/shittier</link>
            <guid>39521944</guid>
            <pubDate>Tue, 27 Feb 2024 09:21:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/rohitdhas/shittier">https://github.com/rohitdhas/shittier</a>, See on <a href="https://news.ycombinator.com/item?id=39521944">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:rohitdhas/shittier" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="FWdhSicj8xYdT51_JVIn5kWdKJODi3yO7CZWYznamEXXNYV2Wsu-d0GlUY3bU1AV8OqkYcuoMI9yWv-pdqZRuw" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="rohitdhas/shittier" data-current-org="" data-current-owner="rohitdhas" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=GADFAsfhtLPi4AGWUyBIe3vZLW5W1DoP3iWNLq72pgLEWYwdugd37OYDmwn8vqlBlJa%2B1sR3u6eK4X1OFrc0nGFaZRaTlKaDzn6IBQMpci0RUqN6BW8bDYqcUP14h3gjudh68CQi%2F57d3m2KgAf00Gniu2QxEdn0txpzzm0GZHhctTiiMuMhWLC4Rozaj3HzVgbCx9e9Hzx4enUbIbabEJYkcu0oqU9%2FWavrhy75ATGECGMdLaPvMZQgURbyxLRhB9o74KpWQWn2SWZ7B8f%2F3%2B8p5UW3W5NE1iMtAzoFyQGmQJXF2p3V%2BtCW%2FAko%2F%2Fa7KGaP9NM4mCsViuzMphL56e6xvNlA4eInBcjiD08lbHp3hiv4rmO9KcRaMC%2FiJWC5H%2Bc3v4HmB2BMrSnVbhvIO5T35omZ4M8iyAeH9cG5HnWXSDYd2WuboiXA9pSqOA%2Fy28r4TS2jTV%2BmGFtIXFgfMDBGHmcoRC3ndVZD4X7sDIYuTCKynQDOj679jmCS9RMJ%2BIg4LRB59e8Nu3bSKCs%3D--WDjLJ4mcd0AVgtlb--kvMXHQMqaKR02dgI1R4CFA%3D%3D&quot; />">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=rohitdhas%2Fshittier" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/rohitdhas/shittier&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="5f28916b646394bb66688b8439e9abe704d2ffc13e75813cf2d6d977df415d3a" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How I Backup (104 pts)]]></title>
            <link>https://sive.rs/backup</link>
            <guid>39521930</guid>
            <pubDate>Tue, 27 Feb 2024 09:20:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sive.rs/backup">https://sive.rs/backup</a>, See on <a href="https://news.ycombinator.com/item?id=39521930">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<article>
<header>


<small>2024-02-27</small>
</header>

<p>
Some people have asked, so here is how I do my backups.
It takes me about <strong>ten seconds per day</strong> and <strong>five minutes per month</strong> to maintain.
</p><p>
It works well for me, but I’m always open to suggestions.
Just <a href="https://sive.rs/contact">email me</a> with any ideas or questions.
</p>

<h2>every-day documents (~40 GB)</h2>
<p>
Files I use and change every day: documents, emails, code, diary, ideas, website, accounts, etc.
</p>
<ul><li>
I have a desktop and a laptop, so I keep this ~40 GB directory cloned with rsync every day or so between them.
Whenever I turn on one computer, I sync it from the other.
</li><li>
Daily rsync to an encrypted Linux USB stick attached to the desktop.
</li><li>
Daily rsync to an encrypted MacOS USB stick attached to the laptop.
</li><li>
Daily rsync to an encrypted ZFS SSD inside the desktop.
</li><li>
Daily rsync to OpenBSD remote attached storage at vultr.com as <a href="https://sive.rs/ti">described at my “Tech Independence” page</a>.
</li></ul>
<p>
I’ve written shortcuts for these rsync commands so it’s really as simple as me typing <code>bkz</code> or <code>bkstick</code> in the terminal as I’m working anyway.
I do it a few times a day, especially if I’ve just made or saved something of value.
And always right before I shut down the computer, which I do almost any time I step away from it for more than a few minutes.
That’s why I say it’s like ten seconds a day, just typing that command occasionally.
</p>

<h2>keepsakes (~3 TB)</h2>
<p>
Rarely-accessed files I want to keep forever: videos and photos of my kid, music and film collection.
</p>
<ul><li>
Three different external 4TB 2.5" drives, in three different formats: ZFS, OpenBSD, MacOS.
</li><li>
Every month or so, I connect them via USB cable, and rsync everything to each of them, bringing one down to a safe deposit box downtown, and taking out the one that was there from my last visit.
</li><li>
5TB at <a href="https://www.hetzner.com/storage/storage-box">Hetzner Storage Box</a>, I rsync remotely.
</li><li>
4TB at <a href="https://zfs.rent/">ZFS.rent</a>, a ZFS encrypted clone.
</li></ul>
<p>
So that’s five copies of my keepsakes in four different locations.
Each one also has a recent copy of my every-day documents from above.
So a few minutes a month to connect the USB drives, and I only do the safe deposit box when I’m going that way anyway, and only takes a couple minutes.
</p><p>
In the days of spinning-platter hard drives, they used to die surprisingly often, so I like the security of many copies.
But it also helps to have some deliberately behind others, so on the rare case where I’ve deleted something, then rsynced my dailies and even my monthly, then realized I need that thing I deleted, then I know the drive in the safe deposit box has it since I haven’t updated that one in a couple months.
</p>


</article>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Berlin TYPE: The official type for the city of Berlin (2020) (151 pts)]]></title>
            <link>https://www.hvdfonts.com/custom-cases/berlin-type</link>
            <guid>39521650</guid>
            <pubDate>Tue, 27 Feb 2024 08:42:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.hvdfonts.com/custom-cases/berlin-type">https://www.hvdfonts.com/custom-cases/berlin-type</a>, See on <a href="https://news.ycombinator.com/item?id=39521650">Hacker News</a></p>
Couldn't get https://www.hvdfonts.com/custom-cases/berlin-type: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Submarine cables linking Africa-Asia-Europe severed (124 pts)]]></title>
            <link>https://en.globes.co.il/en/article-houthis-hit-underwater-communications-cables-1001472165</link>
            <guid>39521626</guid>
            <pubDate>Tue, 27 Feb 2024 08:39:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://en.globes.co.il/en/article-houthis-hit-underwater-communications-cables-1001472165">https://en.globes.co.il/en/article-houthis-hit-underwater-communications-cables-1001472165</a>, See on <a href="https://news.ycombinator.com/item?id=39521626">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="F_Content">
        <h2 id="coteret_SubCoteret">"Globes" has learned that four submarine communications cables have been damaged in the Red Sea between Jeddah in Saudi Arabia and Djibouti in East Africa.</h2>


        <article>
            <p>Three months after the Houthis began attacking merchant ships, the Yemenite rebels have carried out another one of their threats. "Globes" has learned that four submarine communication cables have been damaged in the Red Sea between Jeddah in Saudi Arabia and Djibouti in East Africa.</p>
<p>According to the reports, these are cables from the companies AAE-1, Seacom, EIG and TGN. This is causing serious disruption of Internet communications between Europe and Asia, with the main damage being felt in the Gulf countries and India.</p>



<section id="moreArticles"> 
    <h2>RELATED ARTICLES</h2>
    
    
    

    <p>
        <a href="https://en.globes.co.il/en/article-egypt-asks-houthis-to-attack-only-israeli-ships-report-1001468870">
            <h3>Egypt asks Houthis to attack only Israeli ships - report</h3>
        </a>
    </p>

</section>



<p>Estimates are that the damage to communications activities is significant but not critical because other cables pass through the same region linking Asia, Africa and Europe that have not been hit. The repair of such a large number of underwater cables may take at least eight weeks according to estimates and involve exposure to risk from the Houthi terror organization. The telecommunications companies will be forced to look for companies that will agree to carry out the repair work and probably pay them a high risk premium.</p>
<p>EIG (European India Gateway) connects Southern Europe with Egypt, Saudi Arabia, Djibouti, the UAE and India. The underwater cable was laid by Tyco arm Alcatel-Lucent at a cost of $700 million and was the first cable stretching from the UK to India. Shares in EIG are held by a consortium including AT&amp;T, Saudi Telecom, Verizon, and India's Bharat Sanchar.</p>
<p>TGN Atlantic was laid by Tyco International in 2001 and sold to Indian company Tata Communications in 2005 for $130 million. The AAE-1 cable which has also been cut links East Asia to Europe via Egypt. The cable, which has a 40 terabyte per second capacity, links China with the west via countries belonging to the Chinese-Iranian axis including those countries and Pakistan and Qatar.</p>
<p>The Seacom cable links Europe, Africa and India as well as South Africa.</p>
<p>Senior executives at international communications and underwater cable companies have posted reports about the damage on LinkedIn and X.</p>
<p><em>Published by Globes, Israel business news - <a href="https://en.globes.co.il/">en.globes.co.il</a> - on February 26, 2024.</em></p>
<p><em>© Copyright of Globes Publisher Itonut (1983) Ltd., 2024.</em></p>
			<!-- f67 -->
        </article>
        
        
            

        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Open Letter to Tim Cook, Sabotaging Web Apps Is Indefensible (139 pts)]]></title>
            <link>https://letter.open-web-advocacy.org/</link>
            <guid>39521200</guid>
            <pubDate>Tue, 27 Feb 2024 07:35:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://letter.open-web-advocacy.org/">https://letter.open-web-advocacy.org/</a>, See on <a href="https://news.ycombinator.com/item?id=39521200">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <p><em>Dear Tim Cook,</em></p>
          <p>We write to express our concern at Apple’s decision to remove Web Apps (PWAs) from iOS and Safari in the European Union (EU), and to avail ourselves of our rights under the Digital Markets Act (DMA).</p>
          <p>Apple points to Web Apps as the open alternative to the App Store, and actions to remove them have created deep concern in the web community. iOS demoting Web Apps to shortcuts threaten data loss and undermine the web as a reliable platform for iOS users. These silently-introduced changes threaten critical features including integration with iOS, push notifications, unread count badging, and the ability to run full screen. Their removal will break Web Apps for students, governments, health care institutions, journalists, and startups.</p>
          <p>Entire categories of apps will no longer be viable on the web as a result. More troubling, we understand iOS will not include APIs for competing browsers to implement these features either. This will do vast, immediate, and ongoing harm to users, developers, and businesses, both inside and outside the EU.</p>
          <p>Apple’s justifications gesture toward security and privacy, but are at best unfounded. Web Apps provide safe computing that puts users in control through their browsers, and iOS opening up to competing browser engines will enhance, rather than erode, security and privacy. Web Apps powered by competing browsers can be safer and more capable than today’s apps, and removing support cannot be justified on security grounds. Apple’s arguments regarding the safety of competing browsers have been conclusively rejected by regulators worldwide, and this situation is no different.</p>
          <p>We, the undersigned “end users” and “business users”, avail ourselves of our rights under Articles 5 and 6 of the EU’s DMA. In particular, we assert our right under Article 6(7) ensuring businesses effective interoperability with the software features of the operating system. </p>
          <p>Pursuant to these rights, Apple is obligated to preserve the functionality to allow Safari and other iOS browsers to add Web Apps to the home screen, allow them to run in top-level activities (not in tabs), integrate with iOS settings and permissions, enable Push Notifications and homescreen icon badging, and to run fullscreen.</p>
          <p>Further, we assert that Apple’s proposed changes violate Article 13 of the DMA which prohibits anti-circumvention efforts by designated gatekeepers. Specifically, Article 13(6) which states:</p>

          <blockquote>
          <p>6. The gatekeeper <strong>shall not degrade the conditions or quality of any of the core platform services</strong> provided to <strong>business users</strong> or <strong>end users</strong> who <strong>avail themselves of the rights</strong> or choices laid down in Articles 5, 6 and 7, or ...</p>
          <cite><a rel="noreferrer" target="_blank" href="https://eur-lex.europa.eu/legal-content/EN/TXT/?toc=OJ%3AL%3A2022%3A265%3ATOC&amp;uri=uriserv%3AOJ.L_.2022.265.01.0001.01.ENG#:~:text=6.%C2%A0%C2%A0%C2%A0The%20gatekeeper%20shall%20not%20degrade,user%20interface%20or%20a%20part%20thereof.">EU Digital Markets Act, Article 13(6)</a> (emphasis added)</cite>
          </blockquote>

          <p>It is still possible for Apple to reverse course and preserve essential functionality iOS users and developers have relied on since 2007 when Steve Jobs introduced Web Apps for the iPhone. Degrading these features in iOS and Safari is not required by the DMA. We encourage Apple to engage with all stakeholders urgently, transparently, and in good faith to restore and enhance these essential capabilities.
          </p>
          
          <p>Preserving these features, making them available to competitors, and allowing browser choice worldwide is the only good-faith path forward, and we call on you to both comply with Apple’s legal obligations and to allow fair and effective competition on your platforms globally. Apple has the ability to compete on merit, rather than relying on lock-in and self-preferencing.</p>

          <p>Sincerely</p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Netlify just sent me a $104K bill for a simple static site (1361 pts)]]></title>
            <link>https://old.reddit.com/r/webdev/comments/1b14bty/netlify_just_sent_me_a_104k_bill_for_a_simple/</link>
            <guid>39520776</guid>
            <pubDate>Tue, 27 Feb 2024 06:29:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/webdev/comments/1b14bty/netlify_just_sent_me_a_104k_bill_for_a_simple/">https://old.reddit.com/r/webdev/comments/1b14bty/netlify_just_sent_me_a_104k_bill_for_a_simple/</a>, See on <a href="https://news.ycombinator.com/item?id=39520776">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>So I received an email from Netlify last weekend saying that I have a $104,500.00 bill overdue. At first I thought this is a joke or some scam email but after checking my dashboard it seems like I am truly owing them 104K dollars:</p>

<p><a href="https://preview.redd.it/do33l577a2lc1.png?width=1091&amp;format=png&amp;auto=webp&amp;s=6718c5f3358e3df4c6e502fc7c7a558eec47a2cf">That's 190TB bandwidth in 4 days</a></p>

<p>So I was like 😅😅😅 and think okay maybe I got ddos attacked. Since Netlify charges 55$/100GB for the exceeding bandwith, the peak day Feb 16 has 33385/55 * 100GB = 60.7TB bandwidth in a day. I mean, it's not impossible but why attack a simple static site like mine? This site has been on Netlify for 4 years and is okay with the free tier. The monthly bandwith never exceeded even 10GB, and has only ~200 daily visitors.</p>

<p>I contacted their billing support and they responded me that they looked into it and the bandwidth came from some user agents, meaning it is a ddos attack. Then they say such cases happen and they usually charge their customer 20% on this. And since my amount is too large, they offer to discount to 5%, which means I still need to pay 5 thousand dollars.</p>

<p>This feels more like a scam to me. Why do serverless platforms like Netlify and Vercel not have ddos protection, or at least a spend limit? They should have alerted me if the spending skyrocketed. I checked my inbox and spam folder and found nothing. The only email is "Extra usage package purchased for bandwidth". It feels like they deliberately not support these features so that they can cash grab in situations like this.</p>

<p>The ddos attack was focused on a file on my site. Yes it's partly my fault to put a 3.44MB size sound file on my site rather than using a third-party platform like SoundCloud. But still this doesn't invalidate the point of having protection against such attacks, and limit the spending.</p>

<p>And yes I have migrated my site to Cloudflare. Learned my lesson and will never use Netlify (or even Vercel) again.</p>

<p>​</p>

<p>UPDATE: Thank you all for the suggestions I have posted this on <a href="https://news.ycombinator.com/item?id=39520776">HackerNews</a>.</p>

<p>​</p>
</div></div>]]></description>
        </item>
    </channel>
</rss>