<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 13 Feb 2025 13:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Trump's firing of the U.S. government archivist is far worse than it might seem (153 pts)]]></title>
            <link>https://www.fastcompany.com/91277620/trump-firing-national-archivist-colleen-shogan</link>
            <guid>43033493</guid>
            <pubDate>Thu, 13 Feb 2025 07:18:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fastcompany.com/91277620/trump-firing-national-archivist-colleen-shogan">https://www.fastcompany.com/91277620/trump-firing-national-archivist-colleen-shogan</a>, See on <a href="https://news.ycombinator.com/item?id=43033493">Hacker News</a></p>
Couldn't get https://www.fastcompany.com/91277620/trump-firing-national-archivist-colleen-shogan: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Why young parents should focus on building trust with their kids (283 pts)]]></title>
            <link>https://desunit.com/blog/marshmallow-test-and-parenting/</link>
            <guid>43033463</guid>
            <pubDate>Thu, 13 Feb 2025 07:12:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://desunit.com/blog/marshmallow-test-and-parenting/">https://desunit.com/blog/marshmallow-test-and-parenting/</a>, See on <a href="https://news.ycombinator.com/item?id=43033463">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Today, when my 1.9-year-old daughter tried to grab and eat an unwashed orange, I asked her to give it to me so I could wash and peel it if she could wait for a moment. She did. It got me thinking about the marshmallow experiment, where the idea was that patience equals success. But … it wasn’t the whole story.</p>



<p>The marshmallow experiment is famous: a little kid in a room staring at a marshmallow. If they wait 15 minutes, they get two marshmallows instead of just one. Some kids would poke the marshmallow, lick it, or just gobble it up. Others found clever ways to distract themselves – singing, closing their eyes, even falling asleep. The results – children who waited supposedly went on to achieve higher scores in school and better life outcomes. The message was clear: if you can delay gratification, you’re set for life.&nbsp;But later studies revealed some serious holes in that conclusion.</p>



<figure><p>
<iframe title="The Marshmallow Test | Igniter Media | Church Video" width="500" height="281" src="https://www.youtube.com/embed/QX_oy9614HQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
</p></figure>



<p>First of all, it’s not just about willpower. A follow-up study showed that kids from stable, reliable homes were much more likely to wait than kids from unpredictable ones. If you’re a kid and the adults in your life constantly break promises, why would you trust them this time? Why wait for the second marshmallow if history tells you it might not show up? Waiting isn’t a character trait; it’s a strategy. And strategies are shaped by experience.</p>



<p>Kids are like tiny detectives, watching and learning from every single thing we do. My toddler loves routines – the same bedtime story, the same morning/evening ritual. He thrives on knowing what’s next. So when I tell him to wait and then actually deliver, I’m teaching him something important: trust. But if I say “five more minutes” and don’t follow through, I’m sending a different message – that waiting might not be worth it.</p>



<p>Back to the marshmallow test. Another big revelation came when researchers looked at economic backgrounds. Kids from wealthier families waited longer than kids from low-income families. Not because they had more self-control, but because their environment made waiting feel safer. If you grow up knowing there will always be food on the table, waiting for an extra marshmallow isn’t a big deal. But if your life is more uncertain, grabbing what you can when you can make total sense.&nbsp;It’s a survival skill, not a lack of discipline.</p>



<p>This reminds me of a moment last week. My daughter asked me to swing her in my arms, but I was busy and promised her we’d do it once I finished my work. She switched to another task and waited. When I finally asked, “Would you like to have fun now?” she cheerfully screamed, “Yes!” Would she have trusted me if I forgot about it? Probably not.</p>



<p>Kids crave predictability. That’s why they ask for the same bedtime story 300 nights in a row. It’s why they get upset if the routine changes without warning. Predictability equals safety. And safety builds trust. When they trust us, they’re willing to wait, to try, to take risks.</p>



<p>So, here’s where the marshmallow test gets it wrong: it’s not just about the kid’s ability to wait; it’s about the adult’s ability to create an environment worth waiting in. If we, as parents, and teachers, aren’t consistent, why would a kid believe us when we say, “Just hold on, something better is coming”?</p>



<p>Another thing I’ve noticed is how much modeling matters. My daughter watches everything I do. If I tell her to wait and then lose my patience two seconds later because the internet is slow, what’s the lesson there? Waiting is for other people? The best way to teach patience is to live it – easier said than done …</p>



<p>The marshmallow test also doesn’t account for cultural differences. In some cultures, waiting is baked into daily life. Think about Japan, where kids are often taught to wait quietly for meals or gifts. Compare that to the US, where instant gratification is practically a way of life. These cultural norms shape how kids approach situations like the marshmallow test. It’s not just about personality; it’s about the world they live in.</p>



<p>In 2012, researchers added a modification to the marshmallow experiment. Before the test, kids were split into two groups. One group experienced a broken promise (they were told they’d get crayons to draw with, but never did). The other group experienced a kept promise (they actually got the crayons). Then came the marshmallow test. Which group waited longer? The kids who saw promises kept. The trust made all the difference.</p>



<p>So what’s the takeaway here? It’s simple, really: as parents, we set the tone. Our actions, promises, and reliability shape how our kids see the world. Are we building an environment where they feel safe enough to wait? Or are we teaching them that they need to grab what they can, when they can?</p>



<p>The marshmallow test highlights how our actions shape our kids’ lives. Small gestures – like keeping promises, sticking to “just five more minutes,” or reading bedtime stories – build trust and security. These moments might even help them wait for their own second marshmallow – or decide they don’t need to. Ultimately, it’s about the environment we are creating for them. And who knows, maybe one day they will pass their own version of the marshmallow test – not because they have to, but because they know they can.</p>





</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Federal data is disappearing. On Thursday, meet the teams working to rescue it (122 pts)]]></title>
            <link>https://www.muckrock.com/news/archives/2025/feb/10/federal-data-is-disappearing-on-thursday-meet-the-teams-working-to-rescue-it-and-learn-how-you-can-help/</link>
            <guid>43033157</guid>
            <pubDate>Thu, 13 Feb 2025 06:07:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.muckrock.com/news/archives/2025/feb/10/federal-data-is-disappearing-on-thursday-meet-the-teams-working-to-rescue-it-and-learn-how-you-can-help/">https://www.muckrock.com/news/archives/2025/feb/10/federal-data-is-disappearing-on-thursday-meet-the-teams-working-to-rescue-it-and-learn-how-you-can-help/</a>, See on <a href="https://news.ycombinator.com/item?id=43033157">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <time title="2025-02-10T12:17:46-05:00" datetime="2025-02-10T12:17:46-05:00" itemprop="datePublished">February 10, 2025</time>
          <meta itemprop="dateModified" content="2025-02-10T12:17:46-05:00">
          
          
            <summary itemprop="description"><p>Join the Internet Archive and the Library Innovation Lab on Feb. 13, 3pm Eastern for a special event exploring the terabytes of data they have already saved and how to access it.</p></summary>
            
            
        </div><div itemprop="articleBody">
        <p>Since the start of the new Trump administration, hundreds of federal data sets and government websites have gone offline without warning, sometimes returning with major changes and sometimes not returning at all.</p>
<p>Fortunately, <a href="https://www.muckrock.com/news/archives/2025/feb/04/the-fight-to-preserve-federal-government-data/">a range of civil society organizations had been preparing for this scenario</a>. Just last week, Harvard’s Library Innovation Lab team released 16 terabytes of archived data.gov — <a href="https://lil.law.harvard.edu/blog/2025/02/06/announcing-data-gov-archive/">a complete collection of the data that platform had hosted</a>.</p>
<p> <center><id="create-request-button"> <a href="https://us02web.zoom.us/webinar/register/WN_YEWblXS7Tge8ax_Io7WW8w#/registration">Register for event</a></id="create-request-button"></center></p>

<p>On February 13th, 3pm Eastern, <a href="https://us02web.zoom.us/webinar/register/WN_YEWblXS7Tge8ax_Io7WW8w#/registration">MuckRock will host an event with organizations that are helping lead the efforts to preserve the public’s data</a>. In this special conversation, Mark Graham of the Internet Archive and Jack Cushman of the Harvard Law School Library Innovation Lab will share what data they have seen as being most at risk; how journalists, researchers and others can take advantage of the data that has been rescued; and how you can contribute to efforts already underway to preserve public data.</p>
<p>MuckRock is also here to support groups that are working to preserve, understand and share government data. We can help with archival projects, work with you to <a href="https://www.muckrock.com/news/archives/2023/dec/04/klaxon-cloud-free-simple-alerts-when-a-webpage-updates/">monitor government information that may go missing</a> or collaborate with our <a href="https://www.data-liberation-project.org/">Data Liberation Project effort</a>. If you are working on an effort that could use help getting the word out or finding additional support, <a href="mailto:news@muckrock.com">get in touch with our team</a>.</p>
<hr>
<p><em>Photo credit: Screenshot of The White House’s 404 page.</em></p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to professionally say (2022) (127 pts)]]></title>
            <link>https://github.com/AkashRajpurohit/howtoprofessionallysay</link>
            <guid>43031740</guid>
            <pubDate>Thu, 13 Feb 2025 01:24:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/AkashRajpurohit/howtoprofessionallysay">https://github.com/AkashRajpurohit/howtoprofessionallysay</a>, See on <a href="https://news.ycombinator.com/item?id=43031740">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">
<p dir="auto">
  <a href="https://howtoprofessionallysay.akashrajpurohit.com/" rel="nofollow">
    <img src="https://github.com/AkashRajpurohit/howtoprofessionallysay/raw/main/public/static/images/twitter-card.png" alt="How to Professionally Say" width="600">
  </a>
  </p><p dir="auto"><h3 tabindex="-1" dir="auto">How to Professionally Say</h3><a id="user-content-how-to-professionally-say" aria-label="Permalink: How to Professionally Say" href="#how-to-professionally-say"></a></p>
  <div dir="auto">
    <p><samp>A guide for your daily "professional" interactions</samp></p><p>
    
    <a href="https://twitter.com/akashwhocodes" rel="nofollow">
      <img alt="follow on twitter" src="https://camo.githubusercontent.com/6688ecf2a07ceb5231b754912afe18a4458c3229ec31904e272a67912af74ba4/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f616b61736877686f636f6465732e7376673f7374796c653d736f6369616c266c6162656c3d40616b61736877686f636f646573" data-canonical-src="https://img.shields.io/twitter/follow/akashwhocodes.svg?style=social&amp;label=@akashwhocodes">
    </a></p></div><p dir="auto">
      <a href="https://www.producthunt.com/posts/how-to-professionally-say?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-how-to-professionally-say" rel="nofollow"><img src="https://camo.githubusercontent.com/0201d269776242811e26c5de8d90ac18560558c19522eefd56f18ed4556054df/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d333531333935267468656d653d6c69676874" alt="How to professionally say - A guide for your daily &quot;professional&quot; interactions | Product Hunt" width="250" height="54" data-canonical-src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=351395&amp;theme=light"></a>
      <a href="https://www.producthunt.com/posts/how-to-professionally-say?utm_source=badge-top-post-badge&amp;utm_medium=badge&amp;utm_souce=badge-how-to-professionally-say" rel="nofollow"><img src="https://camo.githubusercontent.com/04d567e74b59c1f1fa63e9f37211644820c8b6a7b0e4abcadf2fa0ec2cf7c30f/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f746f702d706f73742d62616467652e7376673f706f73745f69643d333531333935267468656d653d6c6967687426706572696f643d6461696c79" alt="How to professionally say - A guide for your daily &quot;professional&quot; interactions | Product Hunt" width="250" height="54" data-canonical-src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=351395&amp;theme=light&amp;period=daily"></a>
    </p>
    <p dir="auto">
      <a href="https://howtoprofessionallysay.akashrajpurohit.com/" rel="nofollow">View the website</a>
        ·
      <a href="https://github.com/AkashRajpurohit/howtoprofessionallysay/issues/new?template=bug_report.md">Bug report</a>
      ·
      <a href="https://github.com/AkashRajpurohit/howtoprofessionallysay/issues/new?template=feature_request.md">Feature request</a>
    </p>
  

<hr>
<p dir="auto">A simple static website for common phrases we might want to say to your colleagues but want to make it sound more professional.</p>
<p dir="auto">The data for this is being collected from content created by <em><a href="https://www.instagram.com/loewhaley/" rel="nofollow">@loewhaley</a></em> on Instagram.</p>
<p dir="auto"><strong>Read more about the project <a href="https://akashrajpurohit.com/blog/journey-into-how-to-professionally-say-project/" rel="nofollow">here</a></strong></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Disclaimer ❎</h2><a id="user-content-disclaimer-" aria-label="Permalink: Disclaimer ❎" href="#disclaimer-"></a></p>
<p dir="auto">Hello reader. If you are coming from <a href="https://news.ycombinator.com/item?id=31224996" rel="nofollow">hackernews</a> or <a href="https://www.reddit.com/r/programming/comments/ug5ivo/how_to_professionally_say/" rel="nofollow">reddit</a>, firstly I want to thank you for sharing your thoughts and suggestions (if any). The intent of the project is not to make you respond in a passive aggressive tone but to show you some alternatives of <strong>how you might feel like saying sometimes</strong> over <strong>how you can reframe it a bit better (in some cases at least)</strong></p>
<p dir="auto">I have gathered the data from a content creator on Instagram (<a href="https://www.instagram.com/loewhaley/" rel="nofollow">@loewhaley</a>) and yes of course the credits are mentioned everywhere about this.</p>
<p dir="auto">Based on the responses there it seems like what I started as fun activity can be something more than I thought.</p>
<p dir="auto">I'll be looking into the possibilities of improving the content to make it less satire and more appropriate for most of the people out there.</p>
<p dir="auto">Since it's an open sourced project, you can share your feedbacks and idea improvements <a href="https://github.com/AkashRajpurohit/howtoprofessionallysay/issues/new?template=feature_request.md">here</a>.</p>
<p dir="auto">At ending note, I would just like to say to anyone who feels this is really good and I'm going to use this word by word, please don't, take this as a grain of salt and not seriously (atleast at this point of time till I better structure the content) and anyone who feels negative about this, I'm sorry you feel that way but don't take this very seriously.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Technology Stack 💻</h2><a id="user-content-technology-stack-" aria-label="Permalink: Technology Stack 💻" href="#technology-stack-"></a></p>
<ul dir="auto">
<li>Framework: <a href="https://nextjs.org/" rel="nofollow">Next.js</a></li>
<li>Styling: <a href="https://tailwindcss.com/" rel="nofollow">TailwindCSS</a></li>
<li>Deployment: <a href="https://pages.cloudflare.com/" rel="nofollow">Cloudflare Pages</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Bugs or Requests 🐛</h2><a id="user-content-bugs-or-requests-" aria-label="Permalink: Bugs or Requests 🐛" href="#bugs-or-requests-"></a></p>
<p dir="auto">If you encounter any problems feel free to open an <a href="https://github.com/AkashRajpurohit/howtoprofessionallysay/issues/new?template=bug_report.md">issue</a>. If you feel the project is missing a feature, please raise a <a href="https://github.com/AkashRajpurohit/howtoprofessionallysay/issues/new?template=feature_request.md">ticket</a> on GitHub and I'll look into it. Pull request are also welcome.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributions 🤝</h2><a id="user-content-contributions-" aria-label="Permalink: Contributions 🤝" href="#contributions-"></a></p>
<p dir="auto">Please check the <a href="https://github.com/AkashRajpurohit/howtoprofessionallysay/blob/main/CONTRIBUTING.md">guide</a> to learn more about contributing to this project</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits 🙏</h2><a id="user-content-credits-" aria-label="Permalink: Credits 🙏" href="#credits-"></a></p>
<ul dir="auto">
<li><a href="https://www.instagram.com/loewhaley/" rel="nofollow">@loewhaley</a> and her work bestie</li>
<li>Icons from <a href="https://www.flaticon.com/authors/eucalyp" rel="nofollow">flaticon</a> and <a href="https://feathericons.com/" rel="nofollow">feathericons</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Where to find me? 👦🏽</h2><a id="user-content-where-to-find-me-" aria-label="Permalink: Where to find me? 👦🏽" href="#where-to-find-me-"></a></p>
<p dir="auto"><a href="https://akashrajpurohit.com/" rel="nofollow"><img src="https://camo.githubusercontent.com/3ada64a59580e209712ffe89fc7597ff529fba2719c49be2d3233d7337f9d42c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d616b61736872616a7075726f6869742e636f6d2d3362353939383f6c6f676f3d676f6f676c652d6368726f6d65266c6f676f436f6c6f723d7768697465" alt="Website Badge" data-canonical-src="https://img.shields.io/badge/-akashrajpurohit.com-3b5998?logo=google-chrome&amp;logoColor=white"></a>
<a href="https://twitter.com/AkashWhoCodes" rel="nofollow"><img src="https://camo.githubusercontent.com/e50f2d5e4d0f85956d263943549e329087fc162d59c0a1bdcf39e003dcdefccd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d40616b61736877686f636f6465732d3030616365653f6c6f676f3d54776974746572266c6f676f436f6c6f723d7768697465" alt="Twitter Badge" data-canonical-src="https://img.shields.io/badge/-@akashwhocodes-00acee?logo=Twitter&amp;logoColor=white"></a>
<a href="https://linkedin.com/in/AkashRajpurohit" rel="nofollow"><img src="https://camo.githubusercontent.com/dc4a65a4c3b9afb7358dad16e08c4821325f045c156f76369d98973f8d9bf277/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d40416b61736852616a7075726f6869742d3065373661383f6c6f676f3d4c696e6b6564696e266c6f676f436f6c6f723d7768697465" alt="Linkedin Badge" data-canonical-src="https://img.shields.io/badge/-@AkashRajpurohit-0e76a8?logo=Linkedin&amp;logoColor=white"></a>
<a href="https://instagram.com/akashwho.codes/" rel="nofollow"><img src="https://camo.githubusercontent.com/2365813315a746420bbe8ef1fad118fe8f312ff78dc44b7dce5d616e3e49d0cd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d40616b61736877686f2e636f6465732d6534343035663f6c6f676f3d496e7374616772616d266c6f676f436f6c6f723d7768697465" alt="Instagram Badge" data-canonical-src="https://img.shields.io/badge/-@akashwho.codes-e4405f?logo=Instagram&amp;logoColor=white"></a>
<a href="https://t.me/AkashRajpurohit" rel="nofollow"><img src="https://camo.githubusercontent.com/3a755c7d985a27769f3ad0fcb64af4e6c3027e98bc56944745c48483e2ed2e85/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d40416b61736852616a7075726f6869742d3030383863633f6c6f676f3d54656c656772616d266c6f676f436f6c6f723d7768697465" alt="Telegram Badge" data-canonical-src="https://img.shields.io/badge/-@AkashRajpurohit-0088cc?logo=Telegram&amp;logoColor=white"></a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tiny JITs for a Faster FFI (258 pts)]]></title>
            <link>https://railsatscale.com/2025-02-12-tiny-jits-for-a-faster-ffi/</link>
            <guid>43030388</guid>
            <pubDate>Wed, 12 Feb 2025 22:20:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://railsatscale.com/2025-02-12-tiny-jits-for-a-faster-ffi/">https://railsatscale.com/2025-02-12-tiny-jits-for-a-faster-ffi/</a>, See on <a href="https://news.ycombinator.com/item?id=43030388">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content">
        <article itemscope="" itemtype="http://schema.org/BlogPosting">

  

  <div itemprop="articleBody">
    <p>Can we have a faster FFI for CRuby?  Yes.</p>

<h2 id="can-we-have-a-faster-ffi-for-cruby">Can we have a faster FFI for CRuby?</h2>

<p>I love programming in Ruby, and I advocate for people to write as much Ruby as possible.
But sometimes you really really must call out to native code.
Even in those cases, I encourage people to <em>write as much Ruby as possible</em>, especially because YJIT can optimize Ruby code but not C code.</p>

<p>Taken to its logical extreme, this guidance means that if you want to call a native library, you should write a native extension with a very very limited API
where most work is done in Ruby.
Any native code would be a very thin wrapper around the function <em>we actually want to call</em> that just converts Ruby types in to the types required by the native function.</p>

<p>Of course such a simplistic API would be well suited to work with a library like FFI.</p>

<p>Now, usually I steer clear of FFI, and to be honest the reason is simply that it doesn’t provide the same performance as a native extension.</p>

<p>Lets take a look at a very simple example benchmark to better understand what I mean.
In this benchmark, we’re going to wrap the <code>strlen</code> C function with FFI.
We’ll compare the FFI implementation with a C extension that does the same thing (using the <code>strlen</code> Ruby Gem that yours truly wrote just for this post).
We’ll also include a comparison with indirectly calling the <code>String#bytesize</code>, as well as directly calling <code>String#bytesize</code>.</p>

<div><pre><code><span>require</span> <span>"ffi"</span>
<span>require</span> <span>"strlen"</span>
<span>require</span> <span>"benchmark/ips"</span>

<span>module</span> <span>A</span>
  <span>extend</span> <span>FFI</span><span>::</span><span>Library</span>
  <span>ffi_lib</span> <span>'c'</span>
  <span>attach_function</span> <span>:strlen</span><span>,</span> <span>[</span><span>:string</span><span>],</span> <span>:int</span>
<span>end</span>

<span>module</span> <span>B</span>
  <span>def</span> <span>self</span><span>.</span><span>strlen</span><span>(</span><span>x</span><span>)</span>
    <span>x</span><span>.</span><span>bytesize</span>
  <span>end</span>
<span>end</span>

<span>str</span> <span>=</span> <span>"foo"</span>

<span>Benchmark</span><span>.</span><span>ips</span> <span>do</span> <span>|</span><span>x</span><span>|</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"strlen-ffi"</span><span>)</span>  <span>{</span> <span>A</span><span>.</span><span>strlen</span><span>(</span><span>str</span><span>)</span> <span>}</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"strlen-ruby"</span><span>)</span> <span>{</span> <span>B</span><span>.</span><span>strlen</span><span>(</span><span>str</span><span>)</span> <span>}</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"strlen-cext"</span><span>)</span> <span>{</span> <span>Strlen</span><span>.</span><span>strlen</span><span>(</span><span>str</span><span>)</span> <span>}</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"ruby-direct"</span><span>)</span> <span>{</span> <span>str</span><span>.</span><span>bytesize</span> <span>}</span>
  <span>x</span><span>.</span><span>compare!</span>
<span>end</span>
</code></pre></div>

<p>Here is the output from the benchmark:</p>

<div><pre><code>ruby 3.5.0dev (2025-02-11T16:42:26Z master 4ac75f6f64) +PRISM [arm64-darwin24]
Warming up --------------------------------------
          strlen-ffi     1.557M i/100ms
         strlen-ruby     2.875M i/100ms
         strlen-cext     3.047M i/100ms
         ruby-direct     4.048M i/100ms
Calculating -------------------------------------
          strlen-ffi     15.682M (± 0.5%) i/s   (63.77 ns/i) -     79.398M in   5.063141s
         strlen-ruby     28.697M (± 0.3%) i/s   (34.85 ns/i) -    143.747M in   5.009135s
         strlen-cext     30.661M (± 0.8%) i/s   (32.61 ns/i) -    155.406M in   5.068838s
         ruby-direct     39.879M (± 0.6%) i/s   (25.08 ns/i) -    202.412M in   5.075857s

Comparison:
         ruby-direct: 39878845.7 i/s
         strlen-cext: 30661398.4 i/s - 1.30x  slower
         strlen-ruby: 28697184.3 i/s - 1.39x  slower
          strlen-ffi: 15681971.0 i/s - 2.54x  slower
</code></pre></div>

<p>First, directly calling <code>String#bytesize</code> is the fastest, and we can think of it as our baseline.
Any indirection we add will necessarily add more overhead, and we probably can’t “beat” this number.
Calling <code>strlen</code> via C extension is second fastest, followed by indirectly calling <code>String#bytesize</code>, and finally the FFI implementation is slowest.</p>

<p>These benchmark results can teach us a couple interesting things.</p>

<p>First, the difference between the “ruby-direct” benchmark and the “strlen-ruby” benchmark shows that there definitely is overhead in pushing and popping stack frames.
Eliminating this overhead is one of the things that JIT compilers like YJIT specialize in.</p>

<p>Second, the difference between the “strlen-cext” benchmark and the “strlen-ffi” benchmark shows that there is significant overhead incurred when calling a native function via FFI.
Calling the C extension is slower than directly calling <code>String#bytesize</code>, but calling <code>strlen</code> via FFI adds <em>even more</em> overhead than the C extension does.</p>

<p>In other words, if Ruby provides a method to do something you need, then just use the method that Ruby provides.
But if you need to call a foreign function, a small C extension wrapper will generally have less overhead than an FFI wrapper.</p>

<p>I’ve not avoided FFI because I think it’s <em>intrinsically worse</em> than a C extension.
Rather, paying the FFI tax is just a reality I’ve tried to avoid.</p>

<h3 id="can-we-change-reality">Can we change reality?</h3>

<p>A few years ago <a href="https://chrisseaton.com/">Chris Seaton</a> gave me an idea that’s been rattling around in my head ever since.
Rather than calling out to a 3rd party library, could we just JIT the code required to call the external function?</p>

<p>Lets take a look at the FFI wrapper example:</p>

<div><pre><code><span>module</span> <span>A</span>
  <span>extend</span> <span>FFI</span><span>::</span><span>Library</span>
  <span>ffi_lib</span> <span>'c'</span>
  <span>attach_function</span> <span>:strlen</span><span>,</span> <span>[</span><span>:string</span><span>],</span> <span>:int</span>
<span>end</span>
</code></pre></div>

<p>The call to <code>attach_function</code> tells us the name of the function we need to call (<code>strlen</code>) as well as the parameter types (a string) and the return type (an int).
Since we know these types at the time we’re defining the wrapper function, we could generate the machine code required to wrap and unwrap Ruby types, as well as call in to the foreign function.</p>

<p>For years I’ve been scheming for a way to do this, and I think the stars will finally align with the release of Ruby 3.5 later this year.</p>

<p>In order to make this dream happen, we need a few things to come together.</p>

<p>First, we need a way to generate machine code. This is why I wrote <a href="https://github.com/tenderlove/aarch64">the AArch64 gem</a> as well as <a href="https://github.com/tenderlove/fisk">the Fisk gem</a> which can generate ARM64 and x86_64 machine code respectively.</p>

<p>Second, we need a way to allocate executable memory so that we can actually <em>execute</em> the machine code.
Assembling machine code isn’t good enough, we have to place that machine code in memory that’s marked as “executable”.
That is why I wrote the creatively named <a href="https://github.com/tenderlove/jit_buffer">JITBuffer gem</a>.</p>

<p>With these utilities, we have a way to generate executable machine code.
Unfortunately, we have one more hurdle to overcome, and that is trying to <em>get Ruby to jump in to the machine code</em>.</p>

<p>It’s not good enough to just generate executable machine code.
Any rag-tag team of misfits can do that.
We also need to get Ruby to jump in to that machine code so that we can <em>skip the FFI overhead</em>.</p>

<h3 id="leveraging-rjit">Leveraging RJIT</h3>

<p>For those that don’t know, RJIT is a JIT compiler for Ruby that is itself written in Ruby, and also it ships with Ruby.
It’s internal structure is quite similar to YJIT, but it wasn’t intended for production use, which is why most people have probably heard of YJIT but not RJIT.</p>

<p>Kokubun, the author of RJIT, recently filed a feature request to <a href="https://bugs.ruby-lang.org/issues/21116">extract RJIT as a gem</a>.
The major feature provided by this extraction is that people will be able to more easily write JIT compilers for Ruby as 3rd party gems.
The proposed feature does 2 important things.</p>

<p>First, it extracts RJIT as a gem.  RJIT uses a mechanism similar to <a href="https://github.com/rust-lang/rust-bindgen">bindgen from Rust</a>, where it <strong>generates Ruby data structures</strong> that map out all of Ruby’s internal types (you can see some of that generated code <a href="https://github.com/ruby/ruby/blob/f32d5071b7b01f258eb45cf533496d82d5c0f6a1/rjit_c.rb">here</a>).  This means that 3rd party JIT compilers can get the information they need to <em>wrap and unwrap Ruby data types</em>.</p>

<p>The second important thing it does is <em>always execute the JIT entry function pointer if there is one</em>.  This is important because it means that 3rd party JITs will have a way to register their machine code and Ruby will automatically jump to that machine code.</p>

<p>With these two pieces in place, we can write a very small-scale, single-purpose JIT compiler that acts as an FFI interface.</p>

<h3 id="proof-of-concept">Proof of Concept</h3>

<p>I created a very small <a href="https://gist.github.com/tenderworks/f4cbb60f2c0dc3ab334eb73fec36f702">proof of concept</a> called “FJIT”.
“FJIT” is short for “FFI JIT” and does what it says on the tin.
Namely, it generates machine code at runtime that can call a foreign function.
In this case we’re going to use it to call the <code>strlen</code> function.</p>

<p>I’m not going to put the entire program in this post because even though it’s “small”, it still contains a whole JIT compiler.
The important part is the benchmark:</p>

<div><pre><code><span>module</span> <span>A</span>
  <span>extend</span> <span>FFI</span><span>::</span><span>Library</span>
  <span>ffi_lib</span> <span>'c'</span>
  <span>attach_function</span> <span>:strlen</span><span>,</span> <span>[</span><span>:string</span><span>],</span> <span>:int</span>
<span>end</span>

<span>module</span> <span>B</span>
  <span>def</span> <span>self</span><span>.</span><span>strlen</span><span>(</span><span>x</span><span>)</span>
    <span>x</span><span>.</span><span>bytesize</span>
  <span>end</span>
<span>end</span>

<span>module</span> <span>C</span>
  <span>extend</span> <span>FJIT</span>
  <span>attach_function</span> <span>:strlen</span><span>,</span> <span>[</span><span>:string</span><span>],</span> <span>:int</span>
<span>end</span>

<span>str</span> <span>=</span> <span>"foo"</span>

<span>Benchmark</span><span>.</span><span>ips</span> <span>do</span> <span>|</span><span>x</span><span>|</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"strlen-ffi"</span><span>)</span>  <span>{</span> <span>A</span><span>.</span><span>strlen</span><span>(</span><span>str</span><span>)</span> <span>}</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"strlen-ruby"</span><span>)</span> <span>{</span> <span>B</span><span>.</span><span>strlen</span><span>(</span><span>str</span><span>)</span> <span>}</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"strlen-cext"</span><span>)</span> <span>{</span> <span>Strlen</span><span>.</span><span>strlen</span><span>(</span><span>str</span><span>)</span> <span>}</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"ruby-direct"</span><span>)</span> <span>{</span> <span>str</span><span>.</span><span>bytesize</span> <span>}</span>
  <span>x</span><span>.</span><span>report</span><span>(</span><span>"strlen-fjit"</span><span>)</span> <span>{</span> <span>C</span><span>.</span><span>strlen</span><span>(</span><span>str</span><span>)</span> <span>}</span>
  <span>x</span><span>.</span><span>compare!</span>
<span>end</span>
</code></pre></div>

<p>Module <code>C</code> in this updated benchmark uses an <code>FJIT</code> module, and you can see that its interface is very similar to that of FFI.
When <code>attach_function</code> is called, FJIT will generate the machine code required to unwrap the Ruby string, call the <code>strlen</code> function, and return the length of the string as a Ruby object.</p>

<p>Here are the benchmark results:</p>

<div><pre><code>ruby 3.5.0dev (2025-02-11T16:42:26Z master 4ac75f6f64) +RJIT +PRISM [arm64-darwin24]
Warming up --------------------------------------
          strlen-ffi     1.558M i/100ms
         strlen-ruby     2.953M i/100ms
         strlen-cext     2.981M i/100ms
         ruby-direct     4.142M i/100ms
         strlen-fjit     3.206M i/100ms
Calculating -------------------------------------
          strlen-ffi     15.629M (± 0.7%) i/s   (63.98 ns/i) -     79.455M in   5.083899s
         strlen-ruby     28.851M (± 0.3%) i/s   (34.66 ns/i) -    144.704M in   5.015659s
         strlen-cext     29.778M (± 2.8%) i/s   (33.58 ns/i) -    149.025M in   5.008456s
         ruby-direct     41.907M (± 0.8%) i/s   (23.86 ns/i) -    211.219M in   5.040449s
         strlen-fjit     32.508M (± 0.9%) i/s   (30.76 ns/i) -    163.504M in   5.030060s

Comparison:
         ruby-direct: 41907248.7 i/s
         strlen-fjit: 32507961.2 i/s - 1.29x  slower
         strlen-cext: 29778234.0 i/s - 1.41x  slower
         strlen-ruby: 28850712.3 i/s - 1.45x  slower
          strlen-ffi: 15629443.7 i/s - 2.68x  slower
</code></pre></div>

<p>Of course directly calling <code>String#bytesize</code> is still the fastest. However, the machine code generated by FJIT is second fastest.
Surprisingly, it’s slightly faster than the <code>strlen</code> C extension.
But even more promising is that it’s faster than the indirect Ruby call, and more than 2x faster than calling via FFI!</p>

<h3 id="conclusion">Conclusion</h3>

<p>I think this is very exciting because it means that we can achieve the same speeds (or even better) than a C extension while maintaining the “write as much Ruby as possible” philosophy.
I’ve been very jealous of programming languages like Zig, that are able to support calling native code without the use of FFI.
If we can get all of these moving parts to settle, then I think Ruby can have the same advantages.</p>

<h3 id="caveats">Caveats</h3>

<p>I know the conclusion is supposed to come last, since it is a “conclusion”.
But I didn’t want people to wade through the current caveats before getting to the good stuff.</p>

<p>First, the JIT compiler I wrote <a href="https://gist.github.com/tenderworks/f4cbb60f2c0dc3ab334eb73fec36f702">in the proof of concept</a> is limited to ARM64 platforms.
If we want to make this “for real”, we need to add an x86_64 backend.
Of course this is possible, it just needs to be done.
Second, it currently doesn’t handle all parameter types and return types.
I am confident we can support all parameter types and the work would not be onerous.
Third, it also only handles functions that take a single parameter and return a single parameter.
Again, I think it’s just a matter of fleshing out the rest of the compiler.
Fourth, you have to run Ruby with <code>--rjit --rjit-disable</code> flags at the moment.
Once <a href="https://bugs.ruby-lang.org/issues/21116">Kokubun’s feature</a> lands, that shouldn’t be the case anymore.
Last, this proof of concept only runs with current Ruby head at the moment.</p>

<p>Whew, I know its a fairly long list of restrictions, but it is shorter than the average EULA, and also nothing we can’t overcome.</p>

<p>Anyway, that’s the end. Have a good day!</p>

  </div>
</article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I made my own OS from scratch because I was bored (158 pts)]]></title>
            <link>https://jotalea.com.ar/misc/jotaleaos/</link>
            <guid>43029686</guid>
            <pubDate>Wed, 12 Feb 2025 20:55:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jotalea.com.ar/misc/jotaleaos/">https://jotalea.com.ar/misc/jotaleaos/</a>, See on <a href="https://news.ycombinator.com/item?id=43029686">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[The average CPU performance of PCs and notebooks fell for the first time (238 pts)]]></title>
            <link>https://www.cpubenchmark.net/year-on-year.html</link>
            <guid>43029474</guid>
            <pubDate>Wed, 12 Feb 2025 20:34:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cpubenchmark.net/year-on-year.html">https://www.cpubenchmark.net/year-on-year.html</a>, See on <a href="https://news.ycombinator.com/item?id=43029474">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
					<p>This graph showing year on year performance is made up of thousands of <a href="https://www.passmark.com/products/pt.htm">PerformanceTest</a> benchmark results
							and is updated bi-weekly (i.e. every two weeks). The chart is composed of data from PerformanceTest
							V5 to the V11. PerformanceTest V8 (released 2012) was the first version to collect single thread performance. The
							different data series can be enabled or disabled by checking the corresponding checkboxes below the graph.</p>
					
				</div><div>
						
						<h2>Year on Year Performance</h2>
						<p>Updated 10th of February 2025</p><br>
						

						<div>
							<ul>
								<li>This graph counts the baselines submitted to us during these
									time period and therefore is representative of CPUs tested during this time.</li>
								<li>The years are by the calendar year. (i.e. starts January 1st and ends December 31st)</li>
								<li>Baselines can be submitted from anywhere therefore these are global
									statistics.</li>
								<li>This chart only includes CPUs installed into PCs and does not include
									game consoles.</li>
								<li>Prior to 2021...
									<ul>
										<li>...this chart only includes x86 processors and does not include other chip architectures. ARM processors are included from 2021 onwards.</li>
										<li>...PerformanceTest software only runs on Windows OS and counts on user
									submitting their benchmarks. This chart may be non reflective of non Windows user base before this date. PerformanceTest CPU Tests were Standardized across platforms (Windows, Linux, Mobile) in 2021.</li>
									</ul>
								</li>
								<li>As the chart is updated bi-weekly, but the data point that may change is for the current year. The first few days or weeks of a new year are less accurate compared to the end of a year.</li>
								<li>The chart is composed of data from PerformanceTest V5 to the V11. PerformanceTest V8 (released 2012) was the first version to record single thread performance.</li>
							</ul>
						</div>

						<h2>Top CPU Performance to Date</h2>
						<p>Updated 10th of February 2025</p><br>
						

						<div>
							<ul>
								<li>This graph shows the average of the top performing CPU to date within the Calendar Year submitted by users.</li>
								<li>The years are by the calendar year. (i.e. starts January 1st and ends December 31st)</li>
								<li>Baselines can be submitted from anywhere therefore these are global	statistics.</li>
								<li>This chart only includes CPUs installed into PCs and does not include
									game consoles.</li>
								<li>Prior to 2021...
									<ul>
										<li>...this chart only includes x86 processors and does not include other chip architectures. ARM processors are included from 2021 onwards.</li>
										<li>...PerformanceTest software only runs on Windows OS and counts on user
									submitting their benchmarks. This chart may be non reflective of non Windows user base before this date. PerformanceTest CPU Tests were Standardized across platforms (Windows, Linux, Mobile) in 2021.</li>
									</ul>
								</li>
								<li>As the chart is updated bi-weekly, but the data point that may change is for the current year. The first few days or weeks of a new year are less accurate compared to the end of a year.</li>
								<li>The chart is composed of data from PerformanceTest V8 to the V11.</li>
							</ul>
						</div>

						

						<!-- 71161633/PMS_cpub/chart_hrec_2 --><!-- 71161633/PMS_cpub/mob_chart_mrec_2 -->
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Imapsync (162 pts)]]></title>
            <link>https://imapsync.lamiral.info/</link>
            <guid>43028468</guid>
            <pubDate>Wed, 12 Feb 2025 18:54:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://imapsync.lamiral.info/">https://imapsync.lamiral.info/</a>, See on <a href="https://news.ycombinator.com/item?id=43028468">Hacker News</a></p>
<div id="readability-page-1" class="page">

<!--
<div  class="center" >
<figure>
<figcaption>Advertisement for Cloudasta</figcaption>
<a  href="https://cloudasta.com/">
<img alt="Advertisement from Cloudasta" class="CloudastaImage"  width="600" title="Advertisement from Cloudasta" src="S/images/cloudasta-and-google-partner-badge-212.svg" />
</a>
<hr />
</figure>
</div>
-->








<div id="centered-logo">
<p><a href="https://imapsync.lamiral.info/">
<img width="486" height="309" alt="imapsync logo" title="Imapsync official website" src="https://imapsync.lamiral.info/S/images/logo_imapsync.png">
</a></p><h2>The Mailbox Changer
</h2>
<h2>Afraid of losing all your precious emails?<br>
It's time to copy all of them elsewhere!<br>
Safely.
</h2>

<!-- I use SSI here only to pass a strict xhtml validation that facebook/twitter/coinbase can't pass -->
<!-- remove space before #include to activate these ssi -->

<!-- #include file="S/tw-mention.html" --> 
<!-- #include file="S/fb-like.html" --><p>


Site last updated on <b>Tuesday, 14-Jan-2025 00:35:42 UTC</b><br>
<a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Old_Style_Web_Design.txt">Why this website looks so old fashion?</a>


</p></div>



<h2>What is imapsync? <a href="#TOP" id="WHATIS"><small>(back to menu)</small></a>
</h2>

<p>
<object data="https://www.youtube.com/embed/15Lz_U9qgJg"></object><br>
Imapsync presentation by Gilles
</p>


<p>
Imapsync is an <b>IMAP transfer tool</b>.
The purpose of imapsync is to <b>migrate</b> IMAP accounts or to <b>backup</b> IMAP accounts. 
IMAP, IMAP4 in fact (started December 1994), is one of the three current standard protocols used to access mailboxes,
the two other being POP3 (started November 1988) and HTTP (started May 1996) with webmails, 
webmails are often tied to an IMAP server.
</p>

<p>The latest imapsync published release 2.290 
was written on Tuesday, 20-Aug-2024 10:39:22 UTC
</p>

<p><b>Imapsync</b> is a command-line tool that allows incremental and
recursive <b>IMAP</b> transfers from one mailbox to another, both anywhere on the internet
or in your local network.  Imapsync runs on <b>Windows</b>, <b>Linux</b>, <b>Mac OS X</b>.

"<b>Incremental</b>" means you can stop the transfer at any time
and restart it later efficiently, without generating duplicates.

"<b>Recursive</b>" means the complete folders hierarchy can be copied, all folders, all subfolders etc.

"<b>Command-line</b>" means it's not a graphical tool, on Windows you have to run imapsync 
from a <a href="#DOC_BASIC">batch file</a>.
Anyway there is a visual online service, 
you can try imapsync online at <a href="https://imapsync.lamiral.info/X/">https://imapsync.lamiral.info/X/</a>
</p>

<h2>What imapsync can't do? <a href="#TOP" id="CANTDO"><small>(back to menu)</small></a>
</h2>


<p>
<b>Imapsync can't migrate Contacts and Calendars</b>. 
Most email systems don't set or get Contacts or Calendars via the IMAP protocol.
No way via IMAP, no way via imapsync 
but it can be done with other tools or via export/import of csv or ics files.
Also consider using <a href="http://caldavsynchronizer.org/">caldavsynchronizer</a>
or asking experts at <a href="https://twitter.com/sumatra_dev">Sumatra company</a>.
</p>

<p>
<b>Imapsync is not suitable</b> for maintaining a synchronization <b>between two
active imap accounts</b> while the user is working on both sides.
See why in the <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Two_Ways_Sync.txt">Two Ways Sync</a> document.

Use <a href="http://offlineimap.org/"><b>offlineimap</b></a> (written by John Goerzen) 
or <a href="http://isync.sourceforge.net/"><b>mbsync</b></a> (written by Michael R. Elkins) 
for <b>bidirectional (2 ways) synchronizations</b>.
</p>

<p>
<b>Imapsync can't backup</b> nor <b>restore</b> email messages <b>to or from a local directory</b>.
Imapsync works only with IMAP accounts, which always belong to some IMAP server. 
Read the <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Archiving.txt">Archiving</a> 
document to get several solutions, at least four solutions, to this issue.
</p>

<p>Alternatives to imapsync are listed in the <a href="https://imapsync.lamiral.info/S/external.shtml"><b>Similar softwares</b></a> section.
</p>

<p>Alternatives to the <a href="https://imapsync.lamiral.info/X/" title="Free online service">imapsync online service</a>
are listed in the <a href="https://imapsync.lamiral.info/S/external.shtml#ONLINE_OTHERS"><b>External online services</b></a> section.

</p>

<!--
<p>Imapsync used to be free, open and gratis, that was before November 2010. 
Now imapsync is free, open and not gratis from the homepage. 
Imapsync is still under the <a href="./NOLIMIT">NOLIMIT</a> license, 
claiming no limit to do anything with this work and this license,
so one of the most open license of the universe.

It is the best decision I've made about imapsync in order to continue to maintain it.
See detailed explanation and motivation here when 
<a href="http://www.linux-france.org/prj/imapsync_list/msg00459.html">I looked for a business model</a>.

"Download and donate if happy" doesn't work well.
"Pay for download and I pay back if unhappy" works well, a 100 times better.
</p>
-->

<h2 id="Quiz">Imapsync Quiz
</h2>



<h2>Contact the author, Gilles LAMIRAL 
</h2>

<p><img width="200" height="200" src="https://imapsync.lamiral.info/S/images/gilles_lamiral_400x400.jpeg" alt="Gilles LAMIRAL">
</p>


<div id="hcard_embed">
<p><span>Gilles</span> 
<span>LAMIRAL</span>
</p>




<p><span>work</span>
  <span>cel</span>: <span>+33 6 19 22 03 54</span>
 </p>
 
 <p><span>work</span>
  <span>desk</span>: <span>+33 9 51 84 42 42</span>
 </p>


<div><p>Postal address:

</p><p>22 La Billais</p>
<p><span>BAULON</span>  
<span>35580</span></p><p>FRANCE</p>
</div>

<!--
<div  class="soc">
        <div  class="linkedin"><a  href="http://fr.linkedin.com/in/gilleslamiral"  class="website">Linkedin</a></div>
        <div  class="twitter"><a  href="https://twitter.com/imapsync"  class="website">Twitter</a></div>
        <div  class="facebook"><a  href="https://www.facebook.com/imapsync"  class="website">Facebook</a></div>
</div>
-->

</div> <!-- ends hcard_embed -->

    <p><b>Good feedback is always welcome!</b><br>
    and bad feedback is very often welcome</p>

<p>
It may sounds crazy but I do reply personally to every single email message 
I receive, so don't hesitate to spend time writing to me about your email
problems, you're sure to get my attention and my time.
</p>

<h2>Buy imapsync and support <a href="#TOP" id="buy_all"><small>(back to menu)</small></a>
</h2>

<blockquote>
<p lang="en" dir="ltr">Imapsync was the best investment I've ever done.</p>
<p>— Uwe Keim 
<a href="https://serverfault.com/questions/818818/imapsync-or-php-to-migrate-email">Dec 6 '16 at 12:17</a>
</p>
</blockquote>

  <p>
  Read some other nice and true <a href="https://imapsync.lamiral.info/S/testimonial.shtml">testimonials from users</a>. <br>
  </p>
  
  <p>
  There is no trial version but I offer <b>30-day money back guarantee</b> whatever the
  reason for a refund.  Or drop me a gentle email and I will provide you the latest imapsync because,
  well, you made the effort to contact me.<br>
  After downloading imapsync, go to the <a href="#install">installation</a> documentation.
  </p>

<p>
<big>
<b>Special</b> offer: it's only <b>€120 EUR</b> if you buy 
<b>imapsync</b> + <b>support</b> at once
</big> (instead of 60 + 120 = 180 EUR).
</p>

<p>For <b>€120 EUR</b> you will get:
</p>

<ul>
<li>Imapsync <b>full professional support</b> (that costs also €120 EUR by itself, see why below).</li>

<li>Access without any limit to the imapsync <b>online service</b>, like <b><a href="https://imapsync.lamiral.info/X/">/X</a></b>.
</li>

<li>Standalone <b>imapsync.exe</b> for win32, easy installation done by a zip extraction anywhere. 
    See <a href="https://imapsync.lamiral.info/README_Windows.txt">README_Windows.txt</a> for details.</li>
    
<li>Standalone <b>imapsync_bin_Darwin</b> for <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.Darwin.txt">Mac OS X</a>. (Catalina ok with a permission deed)</li>

<li>Imapsync Perl <b>source code</b> for any operating system, Unix, Windows, OS X.</li>

<li>The <b>visual interface</b>, similar to <b><a href="https://imapsync.lamiral.info/X/">/X</a></b>,
    to <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.OnlineUI.txt">install the service</a> on your own <b>Linux server</b> (not working on Windows yet).</li>
    
<li><b>Lifetime</b> of imapsync <b>updates</b> without extra payment.</li>

<li><b>30-day money back guarantee!</b> No question nor condition to get a refund, really, just request it and you'll sure get a refund!</li>

<li><a href="https://imapsync.lamiral.info/NOLIMIT">No limit</a> to do anything with imapsync and its license.</li>
</ul>

<p>For <b>€60 EUR</b> you will get all the above except imapsync <b>full professional support</b> (the first line).
</p>

<p>
For <b>€120 EUR</b> independently, you get imapsync <b>full professional support</b>,
provided by the imapsync designer and developer, Gilles LAMIRAL, your servitor, who has
been supporting imap migrations with imapsync for more than 20 years (I started in 2001).
See a detailed <a href="#SUPPORT"><b>support description</b></a> below.
</p>

<p>
You may wonder <b>why the support alone is the same price as imapsync+support?</b>

It's because when you buy both at once, I'm not sure I will have to spend some time 
directly with you, it's possible that everything goes smoothly for you,
since this aim is my daily work.
But when you buy the support alone, after buying the software, 
then I will surely spend time (any amount of hours) to help you. 
Does it seem fair enough?
</p>





<p>
<b>Instantly</b> at the end of the payment, Paypal will proposed you to go back to the site,  
via a link  to <b>gilles@lamiral.info</b> (it's my paypal account name),
this link brings you to <b>imapsync download</b>.<br>

You will also receive an email from <b>gilles@lamiral.info</b> a few minutes later 
(it can fall in the Spam folder sometimes).<br>

In order to get an accurate invoice, please make sure the delivery postal address you enter in Paypal 
suits your accounting department, since revised editing is not easy.<br>
Your <b>invoice</b> will be sent within <b>a few days by email</b>.
My company is identified by VAT number FR74429303332 or French SIRET number 42930333200051, 
French APE/NAF number 6201Z ("programmation informatique" in French, aka, computer programming).
</p>

<h3>Support <a href="#TOP" id="SUPPORT"><small>(back to menu)</small></a>
</h3>

<p>For those of you who seek support, <b>contact me</b>, Gilles LAMIRAL, by email or phone:</p>
<ul>
<li>Email address:       <b>gilles@lamiral.info</b>.</li>
<li>Desk phone number:   <b>+33 9 51 84 42 42</b> located in France.</li>
<li>Mobile phone number: <b>+33 6 19 22 03 54</b> located in France (SFR operator).</li>
<li>Twitter: <a href="https://twitter.com/imapsync">https://twitter.com/imapsync</a></li>

<!--  
<li>Facebook: <a  href="https://www.facebook.com/imapsync">https://www.facebook.com/imapsync</a></li>
<li>Jabber address: <b>gilleslamiral@jabber.org</b></li>
 -->
</ul>

<p>The support is done in English, <b>mostly by email</b> or possibly phone/skype.
Office hours start at 10:00, end at 16:00 UTC, extra time is possible in case of emergency.

The <b>support aims at helping you to get your imap migration job done</b>, quickly if possible.
Support includes things like <b>no time to read the documentation</b>,
how to deal with special imap software servers (Gmail, Office365, Exchange etc.), 
choosing and explaining options, explaining error messages, 
solving authentication issues, 
dealing with speed, quotas, special context,
running in parallel, etc., so in summary: <b>anything!</b> except doing the job for you.
</p>

<p>
I have been supporting imap migrations with imapsync since 2001, I still enjoy it!
</p>

<h3>Payment by bank transfer and IBAN <a href="#TOP" id="IBAN"><small>(back to menu)</small></a>
</h3>

<p>If you can't pay with a credit card via Paypal then it is possible to pay via a bank transfer.
</p>
<p>Refund for a bank transfer is less easier than with Paypal so drop me an email to test imapsync 
and to be sure it will do what you need it to do, before any payment.<br>
The bank account references will be given upon request.
</p>
<p>
It will surely add extra work editing manually the invoice, back and forth getting good coordinates,
so I will charge both software and support normal prices for a payment via bank transfer, 
that is 120 EUR.
</p>


<h3 id="bitcoin">Payment with crypto currencies, Bitcoins, Ethereum etc. <a href="#TOP" id="crypto"><small>(back to menu)</small></a>
</h3>

<p>
The funny thing about crypto payments is that I receive very few of them, one or two per year,
and in small amount, one or two dollars equivalent... 
Maybe one day those little crypto coins will be like gold? (I will like that!)
</p>

<!-- 
<div>
  <a class="buy-with-crypto"
     href="https://commerce.coinbase.com/checkout/5e1ad7cb-dd3d-4cda-bbf1-53d8ba94b7b6">
    <span>Buy with Crypto, price equivalent &euro;60 EUR.</span>
  </a>
  <script src="https://commerce.coinbase.com/v1/checkout.js"
  type="text/javascript">
  </script>
</div>
-->

<!-- Second one, does not work anymore
<div>
  <a class="buy-with-crypto"
     href="https://commerce.coinbase.com/checkout/d757d82d-5f54-428e-9260-90c8b032d7ce">
    <span>Buy with Crypto, free price.</span>
  </a>
  <script src="https://commerce.coinbase.com/v1/checkout.js"
  type="text/javascript">
  </script>
</div>

-->

<h2>Facts and figures <a href="#TOP" id="NUMBERS"><small>(back to menu)</small></a> 
</h2>

<!-- 

gilles@ks8:~/imapsync_stats 8$ date
Wed Jan  8 12:05:55 UTC 2025

gilles@ks8:~/imapsync_stats 11$ time verify_year 2024


==== Nb users each month in 2024 
   7514 stats_imapsync_2024_01.ip
   6231 stats_imapsync_2024_02.ip
   6735 stats_imapsync_2024_03.ip
   5871 stats_imapsync_2024_04.ip
   5956 stats_imapsync_2024_05.ip
   5694 stats_imapsync_2024_06.ip
   5806 stats_imapsync_2024_07.ip
   6000 stats_imapsync_2024_08.ip
   6105 stats_imapsync_2024_09.ip
   6460 stats_imapsync_2024_10.ip
   6431 stats_imapsync_2024_11.ip
   6375 stats_imapsync_2024_12.ip
  75178 total



==== Nb users each month in 2023 
  15411 stats_imapsync_2023_01.ip
  16878 stats_imapsync_2023_02.ip
   7905 stats_imapsync_2023_03.ip
   6757 stats_imapsync_2023_04.ip
   6376 stats_imapsync_2023_05.ip
   7328 stats_imapsync_2023_06.ip
   7299 stats_imapsync_2023_07.ip
   5491 stats_imapsync_2023_08.ip
   5572 stats_imapsync_2023_09.ip
   6116 stats_imapsync_2023_10.ip
   6300 stats_imapsync_2023_11.ip
   9682 stats_imapsync_2023_12.ip
 101115 total

==== Nb users each month in 2022 
    7136 stats_imapsync_2022_01.ip
    7619 stats_imapsync_2022_02.ip
    8176 stats_imapsync_2022_03.ip
    7806 stats_imapsync_2022_04.ip
    8351 stats_imapsync_2022_05.ip
    7451 stats_imapsync_2022_06.ip
    7790 stats_imapsync_2022_07.ip
    7187 stats_imapsync_2022_08.ip
    7078 stats_imapsync_2022_09.ip
    6656 stats_imapsync_2022_10.ip
    7443 stats_imapsync_2022_11.ip
   16831 stats_imapsync_2022_12.ip
   99524 total

==== Nb users each month in 2021 
    7443 stats_imapsync_2021_01.ip
    7007 stats_imapsync_2021_02.ip
    7231 stats_imapsync_2021_03.ip
    7877 stats_imapsync_2021_04.ip
    6379 stats_imapsync_2021_05.ip
    6124 stats_imapsync_2021_06.ip
    6130 stats_imapsync_2021_07.ip
    6849 stats_imapsync_2021_08.ip
    6434 stats_imapsync_2021_09.ip
    6487 stats_imapsync_2021_10.ip
    6774 stats_imapsync_2021_11.ip
    6547 stats_imapsync_2021_12.ip
   81282 total

==== Nb runs each month in 2024 
stats_imapsync_2024_01.runs :   19122909 total
stats_imapsync_2024_02.runs :   13912448 total
stats_imapsync_2024_03.runs :   16264896 total
stats_imapsync_2024_04.runs :   14878661 total
stats_imapsync_2024_05.runs :   15137145 total
stats_imapsync_2024_06.runs :   15118957 total
stats_imapsync_2024_07.runs :   14360491 total
stats_imapsync_2024_08.runs :   16637247 total
stats_imapsync_2024_09.runs :   17441123 total
stats_imapsync_2024_10.runs :   19544242 total
stats_imapsync_2024_11.runs :   19000057 total
stats_imapsync_2024_12.runs :   21326381 total



==== Nb runs each month in 2023 
stats_imapsync_2023_01.runs :   17604118 total
stats_imapsync_2023_02.runs :   17770841 total
stats_imapsync_2023_03.runs :   13686205 total
stats_imapsync_2023_04.runs :   15335432 total
stats_imapsync_2023_05.runs :   14966192 total
stats_imapsync_2023_06.runs :   16279725 total
stats_imapsync_2023_07.runs :   21607279 total
stats_imapsync_2023_08.runs :   16855216 total
stats_imapsync_2023_09.runs :   15926080 total
stats_imapsync_2023_10.runs :   16485708 total
stats_imapsync_2023_11.runs :   16821241 total
stats_imapsync_2023_12.runs :   16237345 total

==== Nb runs each month in 2022 
stats_imapsync_2022_01.runs :  14666146 total
stats_imapsync_2022_02.runs :  13341510 total
stats_imapsync_2022_03.runs :  15438358 total
stats_imapsync_2022_04.runs :  14631402 total
stats_imapsync_2022_05.runs :  14631157 total
stats_imapsync_2022_06.runs :  15037912 total
stats_imapsync_2022_07.runs :  15480908 total
stats_imapsync_2022_08.runs :  15202127 total
stats_imapsync_2022_09.runs :  14944001 total
stats_imapsync_2022_10.runs :  15347462 total
stats_imapsync_2022_11.runs :  15040653 total
stats_imapsync_2022_12.runs :  15427459 total

==== Nb runs each month in 2021 
stats_imapsync_2021_01.runs :  13000556 total
stats_imapsync_2021_02.runs :  10554624 total
stats_imapsync_2021_03.runs :  11580320 total
stats_imapsync_2021_04.runs :   9887130 total
stats_imapsync_2021_05.runs :  10969660 total
stats_imapsync_2021_06.runs :  11696577 total
stats_imapsync_2021_07.runs :  12015972 total
stats_imapsync_2021_08.runs :  18112580 total
stats_imapsync_2021_09.runs :  18364370 total
stats_imapsync_2021_10.runs :  16272699 total
stats_imapsync_2021_11.runs :  15176645 total
stats_imapsync_2021_12.runs :  13599796 total


==== % Operating systems in 2024 
Linux 63.74 %
Win32 19.41 %
Darwin 16.61 %
FreeBSD .18 %
Solaris .01 %
OpenBSD .01 %
Cygwin 0 %
Unknown 0 %
Other .01 %


==== % Operating systems in 2023 
Linux 71.58 %
Win32 13.95 %
Darwin 13.91 %
FreeBSD .51 %
Solaris .02 %
OpenBSD 0 %
Cygwin 0 %
Unknown 0 %
Other 0 %


==== % Operating systems in 2022 
Linux 69.71 %
Win32 16.50 %
Darwin 12.15 %
FreeBSD 1.61 %
Solaris .01 %
OpenBSD 0.00 %
Cygwin 0.00 %
Unknown 0.00 %
Other 0.00 %

==== % Operating systems in 2021 
Linux 66.70 %
Win32 19.05 %
Darwin 10.98 %
FreeBSD 3.19 %
Solaris .03 %
OpenBSD .01 %
Cygwin 0.00 %
Unknown 0.00 %
Other .01 %


==== Perl releases in 2024 
5.16 12%
5.18 0%
5.20 0%
5.22 0%
5.24 2%
5.26 4%
5.28 2%
5.30 14%
5.31 0%
5.32 33%
5.34 9%
5.36 12%
5.38 4%
5.40 1%
5.8 0%




==== Perl releases in 2023 
5.14 0%
5.16 46%
5.18 0%
5.20 0%
5.22 0%
5.24 1%
5.26 4%
5.28 2%
5.30 15%
5.31 0%
5.32 20%
5.34 2%
5.36 4%
5.38 0%
5.8 0%


==== Perl releases in 2022 
5.12 2%
5.14 0%
5.16 38%
5.18 1%
5.20 0%
5.22 0%
5.24 1%
5.26 8%
5.28 7%
5.30 14%
5.31 0%
5.32 20%
5.34 2%
5.36 0%
5.8 0%


==== Perl releases in 2021 
5.10 1%
5.12 3%
5.14 0%
5.16 27%
5.18 3%
5.20 0%
5.22 1%
5.24 3%
5.26 17%
5.28 15%
5.30 16%
5.31 0%
5.32 8%
5.34 0%
5.8 0%

==== Biggest users in 2024 
2424723 ns3.dnmech.com "imapsync/2.229 (linux perl 5.38.2, 3.43 imapsync Standard)"
2483101 88-149-173-11.static.eolo.it "imapsync/2.231 (linux perl 5.16.3, 3.37 imapsync Standard)"
2641706 mil47a.supernap.webme.it "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
2716482 mailke.cak.go.ke "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
2755176 81.201.30.34 "imapsync/2.229 (MSWin32 perl 5.32.1, 3.43 imapsync.exe Standard)"
2780199 37x112x250x197.dynamic.nn.ertelecom.ru "imapsync/2.229 (MSWin32 perl 5.32.1, 3.43 imapsync.exe Standard)"
2897183 mail.mmm.co.ke "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
2898625 saturn.filebunker.co.uk "imapsync/2.177 (linux perl 5.16.3, 3.37 imapsync Standard)"
3138770 185.243.148.195 "imapsync/2.229 (linux perl 5.30.0, 3.43 imapsync Standard)"
3298713 213.250.36.164 "imapsync/2.269 (linux perl 5.36.0, 3.43 imapsync Standard)"
4783126 v2202011133577132761.hotsrv.de "imapsync/1.983 (linux perl 5.28.1, 3.42 imapsync Docker)"
5884049 cloud2.web-shop-hosting.com "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
10261878 190.205.33.67.estatic.cantv.net "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
10307339 195.224.205.100 "imapsync/2.229 (linux perl 5.30.0, 3.43 imapsync Standard)"
22564881 90.188.4-135.xdsl.ab.ru "imapsync/2.107 (linux perl 5.26.3, 3.43 imapsync Standard)"



==== Biggest users in 2023 
2345220 relayhost.zoznam.sk "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
2354064 19.60.144.45.host.static.ip.newlogic.it "imapsync/2.229 (linux perl 5.34.0, 3.43 imapsync Standard)"
2582608 41.72.193.38.liquidtelecom.net "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
2966801 saturn.filebunker.co.uk "imapsync/2.177 (linux perl 5.16.3, 3.37 imapsync Standard)"
4156804 197-248-20-169.safaricombusiness.co.ke "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
4583878 v2202011133577132761.hotsrv.de "imapsync/1.983 (linux perl 5.28.1, 3.42 imapsync Docker)"
4619365 195.224.205.100 "imapsync/2.229 (linux perl 5.30.0, 3.43 imapsync Standard)"
4724725 mailoutpro.sicurezzapostale.it "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
4954897 ls00.server.ly "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
5493382 mail.kami.ru.com "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
5976097 187-44-168-155.static.itsweb.com.br "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
7313440 185-3-36-242.ip.wimore.it "imapsync/2.229 (linux perl 5.30.0, 3.43 imapsync Standard)"
8944356 190.205.33.67.estatic.cantv.net "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
10391576 srv.saiu.it "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
18460191 90.188.4-135.xdsl.ab.ru "imapsync/2.107 (linux perl 5.26.3, 3.43 imapsync Standard)"


==== Biggest users in 2022 
1569840 mail.studiomazzi.net "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
1594304 gcenter.gibilogic.eu "imapsync/1.727 (linux perl 5.24.1, 3.42 imapsync)" 
1961719 static.113.204.47.78.clients.your-server.de "imapsync/1.945 (linux perl 5.28.1, 3.42 imapsync)" 
2318571 saturn.filebunker.co.uk "imapsync/2.177 (linux perl 5.16.3, 3.37 imapsync Standard)"
2834364 net-93-149-16-126.cust.vodafonedsl.it "imapsync/2.200 (linux perl 5.30.0, 3.42 imapsync Standard)"
3206484 mail.xmail.center "imapsync/2.200 (linux perl 5.30.0, 3.42 imapsync Standard)"
3521234 ip185.ip-137-74-211.eu "imapsync/1.957 (linux perl 5.24.1, 3.38 imapsync Docker)"
3527762 103.21.150.101 "imapsync/2.157 (linux perl 5.16.3, 3.43 imapsync Standard)"
4955369 v2202011133577132761.hotsrv.de "imapsync/1.983 (linux perl 5.28.1, 3.42 imapsync Docker)"
7027769 imap.datacom.eu "imapsync/1.977 (freebsd perl 5.32.1, 3.42 imapsync Standard)"
9857957 41.72.193.38.liquidtelecom.net "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
9912511 62.94.96.164 "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
10462791 130.136.151.203.sta.inet.co.th "imapsync/2.148 (linux perl 5.26.3, 3.43 imapsync Standard)"
10500864 srv.saiu.it "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)" 
13490995 90.188.4-135.xdsl.ab.ru "imapsync/2.107 (linux perl 5.26.3, 3.43 imapsync Standard)"


==== Biggest users in 2021 
1930148 static.113.204.47.78.clients.your-server.de "imapsync/1.945 (linux perl 5.28.1, 3.42 imapsync)"
2004486 al.cloud.ec "imapsync/1.983 (linux perl 5.28.1, 3.42 imapsync Docker)"
2029974 host246-57-234-109.static.ehiweb.it "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)"
2202168 185.241.64.162 "imapsync/1.945 (MSWin32 perl 5.26.0, 3.42 imapsync.exe)"
2560648 130.61.71.204 "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)"
2686078 90.188.4-135.xdsl.ab.ru "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)"
3953406 v2202011133577132761.hotsrv.de "imapsync/1.983 (linux perl 5.28.1, 3.42 imapsync Docker)"
3954493 srv.saiu.it "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)"
4984373 imap.datacom.eu "imapsync/1.977 (freebsd perl 5.32.1, 3.42 imapsync Standard)"
5539904 mail.kami.ru.com "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)"
6384848 ip185.ip-137-74-211.eu "imapsync/1.957 (linux perl 5.24.1, 3.38 imapsync Docker)"
7918261 90.188.4-135.xdsl.ab.ru "imapsync/2.107 (linux perl 5.26.3, 3.43 imapsync Standard)"
9556282 mz-liberec.onice.io "imapsync/2.148 (linux perl 5.16.3, 3.37 imapsync Standard)"
11809945 41.72.193.38.liquidtelecom.net "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)"
12144716 62.94.96.164 "imapsync/1.727 (linux perl 5.16.3, 3.37 imapsync)"


==== Most releases used in 2024 
    627 2.268
    679 2.284
    943 2.200
   1039 1.882
   1254 2.273
   1287 1.977
   1307 2.279
   1399 2.295
   1462 2.288
   1776 2.277
   2899 2.286
   4653 2.229
   5525 1.727
   6057 2.290
  11553 2.264


==== Most releases used in 2023 
    382 2.140
    386 1.945
    488 1.997
    523 2.269
    711 2.172
    796 2.261
   1025 2.257
   1030 2.178
   1441 1.882
   1947 2.231
   2020 1.977
   2378 2.200
   6064 2.264
   8115 1.727
  40073 2.229


==== Most releases used in 2022 
 271 1.921
 320 1.684
 420 1.836
 484 1.997
 562 1.945
 802 1.983
1217 2.139
1631 1.882
1805 2.140
2075 2.172
3868 1.977
5507 2.178
11410 2.200
13833 1.727
16145 2.229


==== Most releases used in 2021 
 418 2.138
 427 1.921
 429 2.148
 434 1.684
 602 1.997
 726 1.998
 949 2.143
1084 1.945
1098 1.836
1909 1.882
2486 2.139
2783 2.140
3111 1.983
11368 1.977
16062 1.727




==== Nb users each year 
    9640 stats_imapsync_2011.ip
   26284 stats_imapsync_2012.ip
   43336 stats_imapsync_2013.ip
   40209 stats_imapsync_2014.ip
   41324 stats_imapsync_2015.ip
   38837 stats_imapsync_2016.ip
   46197 stats_imapsync_2017.ip
   44116 stats_imapsync_2018.ip
   48103 stats_imapsync_2019.ip
   49562 stats_imapsync_2020.ip
   51639 stats_imapsync_2021.ip
   68309 stats_imapsync_2022.ip
   73792 stats_imapsync_2023.ip
   48647 stats_imapsync_2024.ip
    2301 stats_imapsync_2025.ip
  632296 total

==== Nb runs each year : 
2010: 0
2011: 62268134
2012: 73658942
2013: 144573196
2014: 203982027
2015: 178711357
2016: 98243422
2017: 87832226
2018: 108047481
2019: 158971132
2020: 135913391
2021: 161230929
2022: 179189095
2023: 199575382
2024: 202744558
2025: 4497739

2025~~205209205


-->

<ul>
<li>There are <b>6k</b> imapsync users per month (49k users for the year 2024)
Well, if all users could be buyers! (1k == 1000)
<!--
wc -l stats_imapsync_2024_??.ip
wc -l stats_imapsync_20??.ip
-->
</li>

<li>14M to 21M mailboxes transfers per month during 2024 (M = million = 10^6).
<!--
statistics_runs_each_month 2024
-->
</li>



<li><b>203M</b> transfers for 2024,
that is <b>6 whole mailboxes completely synced each second</b> on average (203*10^6/365/24/3600 ~ 6.3), 
and an estimation of <b>103 Petabytes transferred in 2024</b> ( 1 PiB = 2^50 bytes = 1024^5 ~ 10^15), 
taking a mean of 572 Megabytes per transfer (an estimated mean given by the online /X real stats).
103 Petabytes = 572*10^6*203*10^6.

<!--
xterm -e ssh gilles@ks8 & # 
cd imapsync_stats/    && . memo ii
statistics_nb_runs_each_year

xterm -e ssh root@ks8 &
i 
total_transferred_mean_bytes=`datamash_file_op_index G_Total_bytes_transferred_2024.txt mean 5 %16.1f`
echo $total_transferred_mean_bytes
total_transferred_bytes=`c 203000000*$total_transferred_mean_bytes`
total_transferred=`bytestohuman $total_transferred_bytes`

-->


The 2022 global internet traffic was estimated 4200 Exabytes, no evaluation since then.
(4200 ~ <a href="https://en.wikipedia.org/wiki/Internet_traffic#Global_Internet_traffic">(273+77)</a> * 12 ) 
(1 EiB = 2^60 bytes = 1024^6 ~ 10^18) so imapsync is a very very tiny thing, 25 per million (103/4200000).
</li>


<li>
Let's see it another way, imapsync did 203M transfers for 2024,
that's nearly <b>803M email messages transferred every day</b> (203*1447/366)
taking a mean of 1447 messages per transfer (an estimated mean given by the online /X 2024 real stats).

The internet global estimated number of messages sent every day is 
<a href="https://www.statista.com/statistics/456500/daily-number-of-e-mails-worldwide/">362 billions</a> in 2024
(55% being spam but that's another story...). 
So imapsync does 0.22% (803/362000*100) of all email traffic, not that bad for a command-line tool!
</li>

<li>
See the Wikipedia <a href="https://en.wikipedia.org/wiki/Byte#Multiple-byte_units">Byte page</a> to learn about Petabytes and Exabytes.
</li>


<li><b>Operating systems</b> run by command line imapsync users (in 2024):


<ul>
<li><b>Linux: 64%</b></li>
<li><b>Win32: 19%</b></li>
<li><b>Darwin: 17%</b></li>
<li><b>FreeBSD: 0.18%</b></li>
<li>Solaris: 0.01%</li>
<li>OpenBSD: 0.01%</li>
<li>Other: 0.01%</li>
<li>Cygwin: 0.00%</li>
<li>Unknown: 0.00%</li>
</ul>


</li>
<li><b>Highest use rate</b>: about <b>56M</b> IMAP mailbox transfers by just one host (it was in 2014).</li>
<li><b>Biggest known sole account</b> migrated: <b>2.4M folders!</b> (figure independently reported).</li>

<li><b>Operating systems</b> run by the visual /X online imapsync users in 2023:

<!--
root@ks8:/var/tmp/imapsync_cgi 5# stat_all 2024
...
USER_AGENT
G_HTTP_USER_AGENT_2024.txt
compatible 0 %    ( 10 / 967603 )
Debian 0 %    ( 70 / 967603 )
iPad .02 %    ( 246 / 967603 )
Android .03 %    ( 308 / 967603 )
iPhone .14 %    ( 1376 / 967603 )
Linux .33 %    ( 3236 / 967603 )
X 4.86 %    ( 47058 / 967603 )
Macintosh 19.10 %    ( 184815 / 967603 )
Windows 75.49 %    ( 730484 / 967603 )
-->

<ul>
<li><b>Windows 75%</b></li>
<li><b>Macintosh 19%</b></li>
<li><b>Linux 5%</b></li>
<li><b>iPhone 0.14%</b></li>
<li><b>iPad 0.02%</b></li>
<li><b>Android 0.03%</b></li>
<li><b>Debian  0.00%</b></li>

</ul>
</li>

<li>Do you notice the reverse statistic pattern between command-line users and visual users?</li>

</ul>

<p>
The figures presented here do not include the GitHub imapsync release usage.
It's because --noreleasecheck is on by default in the GitHub release, 
since release 1.592 (2014/05/22).

Looking at the numbers before and after 2014, the figures showed above
could be doubled.
</p>


<p>
Where all those numbers come from?
To know whether a newer imapsync exists or not, imapsync does an http GET to the file
<a href="http://imapsync.lamiral.info/VERSION">VERSION</a>.
Via the <b>User-agent</b> parameter it also sends:</p>
<ul>
 <li>imapsync release</li>
 <li>Perl version</li>
 <li>Mail::IMAPClient version</li>
 <li>Operating System</li>
</ul>

<p>You can <b>remove this behavior</b> by adding the option <b>--noreleasecheck</b> on the command line 
(or by setting $releasecheck = 0 in the source code). 
Check <a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4279">CVE-2013-4279</a>.
</p>


<h2>How to transfer a single mailbox on Windows <a href="#TOP" id="DOC_BASIC"><small>(back to menu)</small></a>
</h2>


<p>
After Imapsync <a rel="help" href="#install">installation</a>, you have to edit a "ready to use" batch file 
called <b><a href="https://imapsync.lamiral.info/examples/imapsync_example.bat">imapsync_example.bat</a></b>
and run it by a double-click.
This batch file is also in the zip archive so it's useless to download it.
</p>


<p>
I strongly advise you to read and follow the document <a href="https://imapsync.lamiral.info/README_Windows.txt">README_Windows.txt</a>
</p>



<h2>How to transfer a single mailbox on Mac <a href="#TOP" id="DOC_BASIC_MAC"><small>(back to menu)</small></a>
</h2>


<p>
After Imapsync <a rel="help" href="#install">installation</a>, you have to edit a "ready to use" script file 
called <b><a href="https://imapsync.lamiral.info/examples/imapsync_example_darwin.sh">imapsync_example_darwin.bat</a></b>
and run it in a shell window.
This script file is also in the tgz archive so it's useless to download it.
</p>


<p>
I strongly advise you to read first and follow the document 
<a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.Darwin.txt">INSTALL.Darwin.txt</a>
and then the document <a href="https://imapsync.lamiral.info/doc/TUTORIAL_Unix.html">TUTORIAL_Unix</a>.
</p>



<h2>How to transfer a single mailbox on Linux/Unix <a href="#TOP" id="DOC_BASIC_UNIX"><small>(back to menu)</small></a>
</h2>

<p>
Here after is presented a Linux imapsync command line example. You can try it on a terminal, as is. 
Anyway, it's easier to edit a shell script with the same exact command and run this 
script in a terminal or from a graphical desktop.

Just take the Bourne shell script example <b><a href="https://imapsync.lamiral.info/examples/imapsync_example.sh">imapsync_example.sh</a></b> 
and adapt with your own parameters.

This shell script file is also in the tgz archive so it can be useless to download it.
</p>

<p>
I strongly advise you to read and follow the document <a href="https://imapsync.lamiral.info/doc/TUTORIAL_Unix.html">TUTORIAL_Unix</a>.
</p>

<p>
After Imapsync  <a rel="help" href="#install">installation</a>, a basic example in a shell terminal is the following: </p>
<pre>./imapsync   \
  --host1 test1.lamiral.info  \
  --user1 test1               \
  --password1  "secret1"      \
  --host2 test2.lamiral.info  \
  --user2 test2               \
  --password2  "secret2"
</pre>



<h2>How to transfer many mailboxes <a href="#TOP" id="DOC_MASS"><small>(back to menu)</small></a>
</h2>

<p>
In order to migrate many mailboxes, you should use a loop over a csv 
file containing only the data credentials.<br>

On Windows, see <b><a href="https://imapsync.lamiral.info/examples/sync_loop_windows.bat">sync_loop_windows.bat</a></b> 
batch example.<br>

On Unix, see <b><a href="https://imapsync.lamiral.info/examples/sync_loop_unix.sh">sync_loop_unix.sh</a></b> 
example.<br>

An example of this csv file is <b><a href="https://imapsync.lamiral.info/examples/file.txt">file.txt</a></b>, 
it can be used with the two previous command scripts.<br>

All example scripts can be found in the <a href="https://imapsync.lamiral.info/examples/">examples/*</a> directory.
</p>

<p>
I strongly advise you to read also the following FAQ documents:
</p>


<ul>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Migration_Plan.txt">Migration plan</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Massive.txt">Massive/bulk migrations</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Admin_Authentication.txt">Admin authentication</a>. </li>
</ul>



<h2>Installation, Hardware, Operating Systems <a href="#TOP" id="install"><small>(back to menu)</small></a>
</h2>


<p>
Hardware system requirements:
</p>
<ul>
<li><b>500 MB of RAM</b> is ok. The mean value RAM used per imapsync process is 230 MB.</li>
<li><b>Any CPU</b> is ok.</li>
<li><b>100 MB of disk space</b> is far enough.</li>
<li><b>Any network link</b> is ok. The average bandwidth rate is 345 KiB/s ~ 2.8 Mbps.</li>
</ul>

<p>
<b>Operating System</b> requirements: Imapsync is avalable on Windows, Mac and Linux.<br>
Which Operating System to chose? <br>
Use the Operating System <b>you are the most familiar with</b>.
</p>



<p>
<b>Location</b> requirements: <br>
Where to place imapsync? <br>
<b>Any host</b> in <b>any place</b> is ok for imapsync as long as it 
has a <b>network access to both IMAP servers</b>, the source and the destination.
</p>


<p>What to do next?<br>
Depending on the system where you will run imapsync:</p>



<ul>
<li>Windows   users, read directly <a href="https://imapsync.lamiral.info/README_Windows.txt">README_Windows.txt</a>.</li>
<li>OS X      users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.Darwin.txt">INSTALL.Darwin.txt</a>. <a href="https://www.macstadium.com/"><img src="https://imapsync.lamiral.info/S/images/5c019d917bba312af7553b49_MacStadium-developerlogo.png" alt="MacStadium logo" width="150" height="61"></a></li>
<li>Centos    users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.Centos.txt">INSTALL.Centos.txt</a>.</li>
<li>CPanel    users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.CPanel.txt">INSTALL.CPanel.txt</a>.</li>
<li>Debian    users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.Debian.txt">INSTALL.Debian.txt</a>.</li>
<li>AWS EC2   users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.AWS_EC2.txt">INSTALL.AWS_EC2.txt</a>.</li>
<li>Ubuntu    users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.Ubuntu.txt">INSTALL.Ubuntu.txt</a>.</li>
<li>WSL       users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.WSL.txt">INSTALL.WSL.txt</a>.</li>

<li>ArchLinux users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.ArchLinux.txt">INSTALL.ArchLinux.txt</a>.</li>
<li>AlpineLinux users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.AlpineLinux.txt">INSTALL.AlpineLinux.txt</a>.</li>

<li>FreeBSD   users, read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.FreeBSD.txt">INSTALL.FreeBSD.txt</a>.</li>

<li>Docker    users, read <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Docker.txt">FAQ.Docker.txt</a>
    or directly the <a href="https://hub.docker.com/r/gilleslamiral/imapsync/">Imapsync Docker page</a>.</li>

<li>Online UI sysadmins, wanting their own <a href="https://imapsync.lamiral.info/X/">/X</a>, 
    read <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.OnlineUI.txt">INSTALL.OnlineUI.txt</a></li>
<li>Other users, read the second part of <a href="https://imapsync.lamiral.info/INSTALL.d/INSTALL.ANY.txt">INSTALL.ANY.txt</a>.</li>
<li>All installation files are located in the <a href="https://imapsync.lamiral.info/INSTALL.d/">INSTALL.d/</a> directory.</li>
</ul>

<p>
After the imapsync installation you should go to the <a href="#doc">documentation</a> section just below.
</p>

<h2>Documentation <a href="#TOP" id="doc"><small>(back to menu)</small></a></h2>
  
<p>Windows users, the <a href="https://imapsync.lamiral.info/README_Windows.txt">README_Windows.txt</a> contains essential 
 knowledge to do your first syncs.
</p>

<p>Unix users, the <a href="https://imapsync.lamiral.info/doc/TUTORIAL_Unix.html">TUTORIAL_Unix</a> will teach you smoothly how 
  to do your first syncs. Windows users can read it too.
</p>


<p>The <a href="https://imapsync.lamiral.info/README">README</a> file contains general and specific pieces of information
to understand imapsync and succeed in your migration or backup.
</p>


<p>The <a href="https://imapsync.lamiral.info/FAQ.d/">FAQ.d/*</a> files present Frequently Asked Questions 
(and not so frequently asked ones) and their answers. Here is the main menu, <b>take at least the time to read the menu</b>, 
you will certainly lose some time to read it, two minutes, but reading this menu will most likely <b>save 
you some struggling hours later</b>, believe me. So read the three columns main menu:</p>
  
  

<div><p>Solving problems (or not...)

</p><ul>
<li> <b><a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Authentication_failure.txt">Authentication failure</a>.</b> </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Folders_Mapping.txt">Changing folders names</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Duplicates.txt">Duplicated messages issues</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Use_addheader.txt">Why use --addheader</a>? </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Passwords_on_Windows.txt">Passwords on Windows</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Passwords_on_Unix.txt">Passwords on Unix</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Passwords_on_Mac.txt">Passwords on Mac</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Flags.txt">Flags issues</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Dates.txt">Dates issues</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Two_Ways_Sync.txt">Two Ways Sync</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Memory.txt">Memory issue</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.APPEND_errors.txt">Append errors</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Messages_Too_Big.txt">How to transfer too big messages</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Contacts_Calendars.txt">Contacts and Calendars issues</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.User_Concurrent_Access.txt">User concurrent access issues</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Use_cache.txt">Option --usecache and its issues</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.SSL_errors.txt">SSL errors</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Signals.txt"><b>Ctrl-c</b> does <b>not end</b> Imapsync</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Virus.txt">Is imapsync a virus?</a>. </li>
</ul>
</div>

<div><p>Various tips

</p><ul>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Migration_Plan.txt">Migration plan</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Massive.txt">Massive/bulk migrations</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Messages_Selection.txt">Selecting messages</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Folders_Selection.txt">Selecting folders</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Folders_Sizes.txt">Sizes of folders</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Admin_Authentication.txt">Admin authentication</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Archiving.txt">Archiving tips</a>. </li>

<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.General.txt">General FAQ</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Fun_Things.txt">Fun things to do with Imapsync</a>. </li>

<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Use_regexmess.txt">Change messages contents with --regexmess</a>. </li>

<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.POP3.txt">POP3 issues</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Reporting_Bugs.txt">Reporting bugs</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Big_Mailbox.txt">Big mailboxes</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.ISP.txt">ISP</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.TTL.txt">TTL</a>  (MX change in DNS). </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Security.txt">Security</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Emptying.txt">Emptying an account</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.XOAUTH2.txt">XOAUTH2 (Gmail)</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.OnlineUI.txt">Online Visual Interface (the web GUI /X)</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Principles.txt">Principles and design ideas</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Bandwidth.txt">Bandwidth used by Imapsync</a>. </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.GDPR.txt">GDPR</a> (General Data Protection Regulation). </li>
<li> <a href="https://imapsync.lamiral.info/FAQ.d/FAQ.Docker.txt">Using Docker.</a> </li>
</ul>
</div>



<p>The <a href="https://imapsync.lamiral.info/ChangeLog">ChangeLog</a> 
to read what changed in details since 2001.</p>

<p>The <a href="https://imapsync.lamiral.info/TODO">TODO</a> file 
lists what may be coded or done in the future.
</p>

<p>All the people I thank are in the 
<a href="https://imapsync.lamiral.info/CREDITS">CREDITS</a> file.
</p>

<p>What you're allowed to do with imapsync is <b>"No limits to do anything with this work and this license."</b> 
like written in the <a href="https://imapsync.lamiral.info/LICENSE">https://imapsync.lamiral.info/LICENSE</a> file (the detour is worth it).
</p>





<hr>
<p>


<b>This document last modified on Tuesday January 14, 2025</b>
($Id: index.shtml,v 1.542 2025/01/14 00:35:30 gilles Exp gilles $)<br>
<a href="#TOP">Top of the page</a>
</p>

<p><img src="https://static.scarf.sh/a.png?x-pxid=28b508c3-c51f-4109-9b88-29f3f6e4cf2f" alt="Scarf Tracker">
</p>



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Game Bub – open-source FPGA retro emulation handheld (229 pts)]]></title>
            <link>https://eli.lipsitz.net/posts/introducing-gamebub/</link>
            <guid>43027335</guid>
            <pubDate>Wed, 12 Feb 2025 17:11:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eli.lipsitz.net/posts/introducing-gamebub/">https://eli.lipsitz.net/posts/introducing-gamebub/</a>, See on <a href="https://news.ycombinator.com/item?id=43027335">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>I’m excited to announce the project I’ve been working on for the last year and a half: <strong>Game Bub</strong>, an open-source FPGA based retro emulation handheld, with support for Game Boy, Game Boy Color, and Game Boy Advance games.</p>


<lite-youtube videoid="_WQGJFFGHmE">
  <a href="https://youtube.com/watch?v=_WQGJFFGHmE" title="Play Video">
    <span>Play Video: </span>
  </a>
</lite-youtube>
<p>Game Bub can play physical cartridges, as well as emulated cartridges using ROM files loaded from a microSD card. Game Bub also supports the <a href="https://en.wikipedia.org/wiki/Game_Link_Cable">Game Link Cable</a> in both GB and GBA modes for multiplayer games. I designed the hardware with a number of bonus features, like video out (HDMI) via a custom dock, a rumble motor, real-time clock (for certain games). Additionally, the hardware is designed with extensibility in mind, allowing future software improvements to expand its capabilities.</p>
<p>Game Bub has a custom-designed 6 layer PCB featuring a Xilinx XC7A100T FPGA with integrated memory,  display, speakers, rechargable battery, GB/GBA cartridge slot, all packaged up in a custom 3D-printed enclosure.</p>
<p>This writeup is a detailed description of how I developed and built Game Bub. I also wrote up a <a href="https://github.com/elipsitz/gamebub/blob/handheld/docs/architecture.md">document explaining the architecture of Game Bub</a>, which is a much shorter read if you’re only interested in the technical details.</p>
<p>Check out the instructions, code, and design files <a href="https://github.com/elipsitz/gamebub">on GitHub</a>. Note that building a Game Bub unit is fairly complex. If you might be interested in buying a complete Game Bub kit, please <a href="https://forms.gle/m1FFUqpCde7x5u5AA">fill out this form</a> to help me gauge interest.</p>
<h2 id="introduction">Introduction</h2>
<p>I first started thinking about this project while I was finishing up work on <a href="https://eli.lipsitz.net/posts/fpga-gameboy-emulator/">my previous Game Boy FPGA emulator</a> in mid-2023.</p>
<p>I had a lot of fun implementing a Game Boy at the hardware level, and I started thinking about how far I could take the project. I was using a Pynq-Z2 development board, which was definitely the right way to get started, but it came with a lot of limitations.</p>
<p>I had to use an external monitor for audio/video, and an external gamepad for input, but a real Game Boy, of course, is a portable handheld. I also wanted to add Game Boy Advance support, but the memory architecture of the Pynq-Z2 had access latency that <a href="https://eli.lipsitz.net/posts/fpga-gameboy-emulator/#fixing-an-audio-bug-on-the-game-boy-color">was just barely acceptable for the Game Boy</a>, and would have been completely unacceptable for the Game Boy Advance. I also wanted to make something less “hacky”: a real device that I could play and give to people, not just a bare PCB.</p>
<p>Furthermore, while there are open-source FPGA retrogaming projects (e.g. <a href="https://en.wikipedia.org/wiki/MiSTer">MiSTer</a>), there doesn’t appear to be anything open-source that supports physical Game Boy and Game Boy Advance cartridges, let alone an open-source handheld device.</p>
<p>Thus, I somewhat naively set out to design what would become by far my most complex electrical engineering and hardware design project to date.</p>
<h3 id="goals">Goals</h3>
<p>I set out some goals for the project:</p>
<ul>
<li>Build a standalone, rechargable battery-powered FPGA handheld</li>
<li>Minimize cost and complexity by using off-the-shelf components wherever possible</li>
<li>Capable of playing Game Boy, Game Boy Color, and Game Boy Advance games</li>
<li>Capable of using physical cartridges, or emulating cartridges (reading ROM files off of a microSD card)</li>
<li>Easy to use: graphical menu and in-game overlay</li>
<li>Integrated display and speakers, with headphone support</li>
<li>Integrated peripherals (rumble, real-time clock, accelerometer) for emulated cartridges</li>
<li>HDMI video output support for playing on a big screen</li>
<li>Decent looking design with good ergonomics</li>
<li>Expansion opportunities in the future: support for more systems, Wi-Fi, etc.</li>
</ul>
<p>And finally, since I was building this project for fun and learning, I wanted to be able to fully understand every single component of the system. I wanted to use my own emulator cores (e.g. not just port them from <a href="https://mister-devel.github.io/MkDocs_MiSTer/">MiSTer</a>), do my own board design, and write my own drivers to interface with peripherals.</p>
<h3 id="a-brief-rant-about-fpga-retrogaming">A brief rant about FPGA retrogaming</h3>
<p>There’s a lot of misleading marketing and hype out there around FPGA retrogaming. Some claim that FPGA retrogaming devices are not emulators (because they supposedly “act like [the system] at the gate level”), that they achieve “perfect accuracy”, or that they’re superior to software emulators.</p>
<p>In my opinion, this is blatantly wrong and actively harmful. FPGA retrogaming devices are emulators: they pretend to be something they’re not. And they’re only as accurate as they’re programmed to be, since they’re recreations. An FPGA can make certain aspects of accuracy easier to achieve, but it doesn’t guarantee it.</p>
<p>Software emulators can be extremely accurate. Furthermore, perfect accuracy (if it’s even possible) is by no means a requirement to play an entire system’s library of games. Some people claim that FPGA emulators are the only way to “preserve” a system, but I’d argue that software emulators are a significantly more accessible (no special hardware needed!) way to further this goal.</p>
<p>I believe that FPGA emulators have only one real advantage over software emulators: they can more easily interface with original hardware, such as physical cartridges or other consoles via link cables.</p>
<p>I did this project not because I think that FPGA emulators are inherently better than software emulators, but because I think they’re interesting and fun to build.</p>
<h2 id="high-level-design">High-level design</h2>
<p>I began work on the project by doing some initial research and sketching out a high level design.</p>
<p>My previous FPGA emulator project used a Xilinx Zynq chip, which integrates FPGA fabric (“PL”) with a dual-core ARM processor running Linux (“PS”). I implemented the entire emulator on the FPGA, and used the Linux system to configure the FPGA, render the UI, and load ROM files from the filesystem.</p>
<p>I decided to keep this same division of responsibilities: using the FPGA to do the core emulation, with a separate processor to do support tasks. However, to make the overall design easier to reason about, I decided to to use an FPGA-only chip (without any hard processor cores), and an external microcontroller (MCU) to do the tasks that the ARM cores did before.</p>
<p>The FPGA would consume input, directly interface to the game cartridges (through level shifters to support both the 3.3 volt GBA and 5 volt Game Boy), and output audio and video to the speakers and display. The MCU would handle the UI, read ROM files from the microSD card, initialize peripherals (display, DAC, IMU), handle power sequencing, and load the FPGA configuration.</p>
<p>I wanted to have Wi-Fi and Bluetooth support: Wi-Fi for software updates, and the possibility of emulating the <a href="https://en.wikipedia.org/wiki/Game_Boy_Advance_Wireless_Adapter">Game Boy Advance Wireless Adapter</a>, and Bluetooth to support wireless game controllers (when connected to an external display). To reduce complexity (and avoid the need for careful RF design), I looked only for complete Wi-Fi/Bluetooth modules with integrated antennas.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/early-block-diagram.svg" alt="An early block diagram I sketched out"> <figcaption>
            <p>An early block diagram I sketched out</p>
        </figcaption>
</figure>

<p>I also drew out rough sketches of what the final device might look like: placement of buttons, screen, speakers, ports, cartridge slot, and battery. I settled on a vertical Game Boy Color-esque design (as opposed to a horizontal Game Boy Advance-style design), because I felt that this would maximize the space in the back of the device for full-size Game Boy Color cartridges and a battery.</p>
<h2 id="component-selection-and-compromises">Component selection and compromises</h2>
<p>After sketching out the goals and high level design, I started component selection: picking out each non-trivial component of the system, evaluating features and requirements (e.g. how they communicate, power consumption and voltages needed).</p>
<p>Since I intended to have this manufactured and assembled at JLCPCB, I strongly preferred parts that were available in their part library. One technique I even used for narrowing down part choices was finding the relevant category in their part search, and sorting by their stock count.</p>
<h3 id="microcontroller">Microcontroller</h3>
<p>I initially planned to use an <a href="https://en.wikipedia.org/wiki/RP2040">RP2040</a> microcontroller, with a separate ESP32-WROOM module to support Wi-Fi and Bluetooth.</p>
<p>The ESP32 supports both Bluetooth Classic and LE, which is essential for supporting a wide range of controllers, and the RP2040 has USB host support, to support wired controllers.</p>
<p>During the schematic design process, I ended up simplifying the RP2040 + ESP32 combination to just a single ESP32-S3 module for a few reasons:</p>
<ul>
<li>I started running out of GPIOs on the RP2040, and I was dedicating 4 of them (2 for UART, 1 for reset, 1 for booting in firmware download mode) to communication with the ESP32. Plus, the ESP32-S3 has more GPIOs overall.</li>
<li>I wanted to write the MCU firmware in Rust, and the ESP32-S3 had support for the Rust standard library (via ESP-IDF and <a href="https://github.com/esp-rs/esp-idf-hal">esp-idf-hal</a>). This seemed like it would be easier to get the software up and running.</li>
<li>Fewer components means easier routing and assembly</li>
<li>The ESP32-S3 has an SDIO module (for interfacing with the microSD card), and FAT filesystem support (via ESP-IDF). It would be possible to do this with the RP2040 PIO, but having a proper peripheral and driver for this makes it a lot easier.</li>
<li>The ESP32-S3 is more powerful than the RP2040, and would probably be able to render a smoother UI.</li>
</ul>
<p>However, the ESP32-S3 has one main disadvantage compared to the original ESP32: it doesn’t have Bluetooth Classic support, only LE. This would greatly limit the range of supported wireless controllers, but I believed the compromise was worth it. I also decided to scrap USB host support, because supporting USB-C dual role (switchable device or host) would have added a lot of additional complexity.</p>
<p>If the RP2350 microcontroller (the successor to the RP2040) had been available when I started this project, I may very well have chosen it, since it has even more power, PIO blocks, memory, and GPIO pins. I might have paired it with an RM2 radio module for Wi-Fi and Bluetooth.</p>
<h3 id="display">Display</h3>
<p>I wanted a display that would support integer scaling for the Game Boy Advance, which has a 240x160 pixel screen. I was also looking for a screen roughly on the order of 3.0-3.5 inches wide (diagonal), to be comfortable to hold in the hand.</p>
<p>I found the ER-TFT035IPS-6 LCD module from <a href="https://www.buydisplay.com/">EastRising</a>, with a 3.5 inch display, and a 320x480 pixel resolution. This allows for a 2x integer scale for the Game Boy Advance (and a 2x scale plus centering for the 160x144 Game Boy display). This checked off almost all of the boxes: integer scaling, a good size, available at a reasonable price, pretty good documentation (for the ILI9488 LCD controller).</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/er-tft035ips-6.jpg" alt="ER-TFT035IPS-6 LCD module" width="1000" height="550"> <figcaption>
            <p>ER-TFT035IPS-6 LCD module</p>
        </figcaption>
</figure>

<p>The main issue, which actually ended up being fairly annoying, is that it’s a 320x480 display, not 480x320. Meaning, it’s oriented in portrait mode, not landscape. I rotated the device 90 degrees to fit in a landscape orientation, but this created two issues:</p>
<ul>
<li>In landscape orientation, the bottom of the display (containing the LCD driver chip and the flex cable) faces to the left or the right, which means that larger bazels are required on the left and right of the display to center the “active area” of the LCD within the handheld.</li>
<li>In landscape orientation, the display refreshes from left to right, not top to bottom.</li>
</ul>
<p>The problem with refreshing from left to right is that the Game Boy and Game Boy Advance (and almost every other system) refresh from top to bottom. This means that the display can’t be refreshed perfectly in sync with the game (zero buffering), and single buffering leads to unsightly diagonal tearing. Instead, I had to use triple buffering, where the game is writing to one framebuffer, the LCD driver is reading from another buffer, and there’s one spare swap buffer. This increases the amount of memory used – and because it needed to be accessed by both the game and LCD driver simultaneously (dual port), it needed to be stored in internal block RAM in the FPGA, a scarce resource.</p>
<p>So, even though the Game Boy emulator uses &lt;10% of the total logic resources of the FPGA, and the Game Boy Advance uses around 30%, I had to use a large (more expensive, and power hungry) FPGA so that I had enough block RAM.</p>
<p>I also stuck a standard size HDMI port into the design, connected directly to the FPGA. HDMI has a few additional, non-video signals that need level shifting from 5V to 3.3V (I opted for discrete transistors), and it requires the source (me!) to supply a small amount of power.</p>
<h3 id="power">Power</h3>
<h4 id="battery">Battery</h4>
<p>I had never previously designed anything that used a lithium ion battery, so I had a fair amount of learning to do. <a href="https://learn.adafruit.com/li-ion-and-lipoly-batteries/overview">Adafruit</a> was a helpful resource. I needed a way to charge the battery from USB power, and a way to measure how charged it is.</p>
<p>Lithium ion batteries can be dangerous if misused. Safely charging a battery is non-trivial, and requires a feedback loop and adjustable voltage sources. A dedicated IC seemed like the best way to do this. A lot of hobbyists use the ultra-cheap TP4056 1A battery charger, but I’d read about a lot of issues it has around safely charging the battery while using it. I decided instead to opt for the <a href="https://www.ti.com/lit/ds/symlink/bq24073.pdf">TI BQ2407x</a> series of battery charger ICs. They seem to be widely used in commercial products, came with a comprehensive datasheet, and had a few critical features: programmable input and charge current limits, safety timers, and “power path management” for safely charging the battery while the device is on.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/lipo-discharge-curve.png" alt="Typical discharge curve for a 3.7V lipo battery (source: Adafruit)" width="579" height="402"> <figcaption>
            <p>Typical discharge curve for a 3.7V lipo battery (source: <a href="https://learn.adafruit.com/assets/979">Adafruit</a>)</p>
        </figcaption>
</figure>

<p>There are a few ways to measure the charge level of the battery, which generally relies on the fact that a lithium ion battery’s voltage depends on its charge level. A fully charged battery is about 4.2 volts, a battery with between 80% and 20% charge is about 3.7 volts, and below that a drained battery falls off pretty quickly to under 3.0 volts. If all you want is a coarse estimate of the battery level, you can use an ADC to read the voltage and estimate whether the battery is fully charged or nearly discharged. However, since the voltage curve is nearly flat between 20% and 80% charge (and is also dependent on the load), this can’t give the fine-grained battery percentage that we’re used to on phones and laptops. Instead, I opted for a discrete fuel gauge IC, the <a href="https://www.analog.com/en/products/max17048.html">MAX17048</a>. It’s simple to integrate and inexpensive.</p>
<h4 id="power-switch">Power switch</h4>
<p>I decided to use a push button for the main power switch, because I needed to be able to do a graceful shutdown, where the microcontroller could save state (e.g. the current save file for an emulated cartridge) before it actually powered off.</p>
<p>I used <a href="http://www.mosaic-industries.com/embedded-systems/microcontroller-projects/electronic-circuits/push-button-switch-turn-on/microcontroller-latching-on-off">this push-on hold-off circuit from Mosaic Industries</a>. The “hold to power off” feature is useful if I need the force the system off, for example if the microcontroller crashes or is misbehaving. The circuit is built out of discrete MOSFETs.</p>
<p>I briefly considered using an ultra-low power, always on microcontroller to act as a custom <a href="https://en.wikipedia.org/wiki/Power_management_integrated_circuit">PMIC</a> provide power switch functionality (and perhaps avoid the need for a separate real-time clock IC, and even a battery gauge). While this would have been flexible and really cool, I figured it wasn’t worth the additional complexity.</p>
<h4 id="power-regulation">Power regulation</h4>
<p>The main system power ranges from about 3.4 V when the battery is discharged, to 4.2 V when the battery is fully charged, up to 5.0 V when the device is plugged in with USB.</p>
<p>The ESP32-S3 module required 3.3 V, and most of the other ICs in the system did too. The main exception is the FPGA, which requires a 1.0 V core power rail, a 1.8 V “auxiliary” power rail, and a 3.3 V power rail for I/O. Moreover, according to the <a href="https://docs.amd.com/v/u/en-US/ds181_Artix_7_Data_Sheet">Xilinx Artix-7 datasheet (DS181)</a>, these power rails need to be powered on in a particular sequence: for my use, this means 1.0 V, then 1.8 V, then 3.3 V. Additionally, I needed a 5.0 V supply to interface with Game Boy / Game Boy Color cartridges.</p>
<p>There are multi-rail power regulators available, and a lot of FPGA development boards use them. However, they all seemed to be expensive and difficult to purchase in low quantities. Instead, I opted for separate power regulators for each rail. I used <a href="https://en.wikipedia.org/wiki/Buck_converter">buck converters</a> instead of <a href="https://en.wikipedia.org/wiki/Linear_regulator">linear regulators</a> to maximize power efficiency.</p>
<p>I used the <a href="https://www.ti.com/product/TLV62585">TLV62585</a> converter for the 3.3 V, 1.8 V, and 1.0 V rails. This is a simple, performant buck converter with a “power good” output, which is useful for power sequencing: you can connect the <em>power good</em> output of one regulator to the <em>enable</em> pin of the next regulator, to power on the rails in the desired order.</p>
<p>For the 5.0 V rail, I used the <a href="https://www.ti.com/product/TPS61022">TPS61022</a> boost converter. This converter is way overkill for the 5.0 V rail (which might use 75mA <em>max</em>), but it was readily available, and conveniently compatible with the same 1µH inductor as the buck converters.</p>
<p>According to the FPGA datasheet, the XC7A100T consumes more than 100mW of static power. That is, it consumes that as long as it’s connected to power, even if it’s doing absolutely nothing. I figured I might want to support a low power sleep mode, so I decided to split the FPGA into a separate power domain with an explicit power enable signal from the MCU. I also used an <a href="https://www.diodes.com/datasheet/download/AP2191.pdf">AP2191W</a> load switch for the FPGA’s 3.3 V rail to be able to keep the 1.0 V → 1.8 V → 3.3 V sequencing.</p>
<h3 id="audio">Audio</h3>
<p>I wanted the device to have both speakers and a 3.5mm headphone jack. Ultimately, the FPGA generates an <a href="https://en.wikipedia.org/wiki/I%C2%B2S">I2S</a> digital audio signal, and I needed a <a href="https://en.wikipedia.org/wiki/Digital-to-analog_converter">DAC</a> to convert it to an analog audio signal, and then an amplifier to drive the speakers (or headphones). I wanted digital volume control (to support volume buttons, rather than a volume knob or slider), and I needed some way to switch the audio output between speakers and the headphones, depending on whether or not headphones are plugged in. With no real audio experience, this seemed like a daunting task.</p>
<p>While searching for multiple separate components, I stumbled upon the <a href="https://www.ti.com/product/TLV320DAC3101">TLV320DAC3101</a>. It combines a stereo DAC with a speaker amplifier and a headphone driver. Additionally, it supports digital volume control, and headphone detection. I think this chip is a good example of how thoughtful component selection can simplify the overall design. Looking through the datasheet, it required a 1.8 V core voltage (unlike essentially every other component other than the FPGA) and a fair amount of configuration registers to set over I2C, but it had all of the features I needed.</p>
<p>I was originally planning to have just a single (mono) speaker, but I figured if I had a stereo DAC, I might as well put two in there. I chose the <a href="https://www.sameskydevices.com/product/audio/speakers/miniature-(10-mm~40-mm)/ces-20134-088pmb">CES-20134-088PMB</a>, an enclosed microspeaker with a JST-SH connector. Having an enclosed speaker simplified audio design, because as it turns out, you can’t just stick a speaker to a board and expect it to sound okay (Same Sky, the manufacturer of that speaker, <a href="https://www.sameskydevices.com/blog/how-to-design-a-micro-speaker-enclosure">has a blog post explaining some of the nuances</a>).</p>
<h3 id="buttons">Buttons</h3>
<p>I prefer the feeling of clicky, tactile buttons (such as those found in the GBA SP, Nintendo DS (original), Nintendo 3DS, Switch) compared to “mushy” membrane buttons (such as those found in the Game Boy Color, original GBA, and Nintendo DS Lite). I learned that the tactile switches used in the GBA SP are a <a href="https://tech.alpsalpine.com/e/products/detail/SKRRAAE010/">widely available off-the-shelf part from Alps Alpine</a>. I used similar, but smaller buttons for the Start/Select/Home buttons, and a right-angle button from the same manufacturer for side volume and power buttons.</p>
<p>Although I only had plans to support Game Boy and Game Boy Advance (requiring a D-pad, A and B buttons, L and R shoulder buttons, and Start/Select), I opted to add two more “X” and “Y” face buttons to leave the possibility open of supporting more systems in the future.</p>
<p>The L and R buttons posed an additional challenge – I found numerous right-angle tactile buttons (to be soldered onto the back, facing towards the top). However, none of them seemed to have the actuator (the part of the button you make contact with) far enough away from the PCB to be easily pressed. At first, I thought about making a separate shoulder button board to move them at the correct distance, but then I started looking at what existing devices do for inspiration. The Game Boy Advance SP actually uses a more complex mechanism for the shoulder buttons: rather than a simple actuator like the face buttons, there’s a hinge with a <a href="https://en.wikipedia.org/wiki/Torsion_spring">torsion spring</a> that hits the actuator at an angle. This is actually part of what makes the shoulder buttons pleasant to press: you don’t need to hit them from exactly the right direction, because they pivot. I ended up just going with a standard right-angle tactile button, opting to solve the problem with the mechanism in the enclosure.</p>


<figure><video controls="" loop="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/gba-sp-shoulder-button-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/gba-sp-shoulder-button.mp4" type="video/mp4">
    </video><figcaption>
            <p>GBA SP shoulder button mechanism</p>
        </figcaption>
</figure>


<h3 id="memory">Memory</h3>
<p>One of my main goals was to allow ROM files to be loaded from a microSD card, rather than only being able to be played from a physical cartridge. To do this, I’d need dedicated RAM for the FPGA to hold the game. Game Boy Advance games, typically, are a maximum of 32 MB. They don’t make SRAMs that large (and if they did, they’d be very expensive). Instead, I needed to use <a href="https://en.wikipedia.org/wiki/Dynamic_random-access_memory">DRAM</a>.</p>
<p>Asynchronous SRAM is very simple: supply a read address to the address pins, and some amount of nanoseconds later, the data you’re reading appears on the data pins. DRAM is more complex: the simplest kind is “single data rate synchronous DRAM” (SDR SDRAM, or just <a href="https://en.wikipedia.org/wiki/Synchronous_dynamic_random-access_memory">SDRAM</a>, distinguishing it from the significantly more complex DDR SDRAM). However, even SDRAM is non-trivial to use. DRAM is organized into banks, rows, and columns, and accessing DRAM requires sending commands to “activate” (open) a rows before reading out “columns”, and then “precharging” (closing) a row. Handling all of this requires a DRAM controller (see this <a href="https://www.fpga4fun.com/SDRAM2.html">simple description of the state machine</a> required). This isn’t terribly complex, but I was signing myself up for more work.</p>
<p>Alternatively, I could have chosen a PSRAM chip (essentially DRAM with an integrated controller to make it have a more SRAM-like interface). However, I couldn’t find a PSRAM part that I was happy with (cost, availability, interface), and so I ended up going with the inexpensive W9825G6KH 32MB 16-bit SDRAM.</p>
<p>I also decided to stick a 512 KiB SRAM chip in the design in case I ended up needing some more simple memory later, like for emulating the SRAM used for Game Boy cartridge save files. Despite being 1/64 the capacity, this chip was about 3x the cost of the SDRAM. This ended up being a wise decision, since a lot of my internal FPGA block ram was eaten up by the triple buffer for the display (see above).</p>
<h3 id="cartridge-and-link-ports">Cartridge and Link Ports</h3>
<p>Of course, there’s no point to an FPGA emulator that can’t play actual cartridges or interact with other devices. The cartridge slot and link ports are no-name parts from Aliexpress, easily available for cheap. These seem to mostly be GBA SP compatible, and are often used as repair parts.</p>
<p>I’d already used these for my cartridge adapter board in <a href="https://eli.lipsitz.net/posts/fpga-gameboy-emulator/#using-real-cartridges-with-the-fpga">my first Game Boy FPGA project</a>, and so I used a similar design: 2x <a href="https://www.ti.com/product/SN74LVCH16T245">16-bit level shifters</a> for the majority of the cartridge slot signals (since the Game Boy runs at 5V, which is incompatible with the FPGA), and a few <a href="https://www.ti.com/product/SN74LVC1T45">1-bit level shifters with individual direction control</a> for some extra signals on the cartridge slot, as well as the four signals on the link port.</p>
<p>The Game Boy Advance can play both Game Boy [Color] and Game Boy Advance games. These run at different voltages and use different protocols, so the device need some way of determining which type of cartridge is inserted.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/gb-vs-gba-cartridge-bottom.jpg" alt="GBA cartridge (top) vs GB cartridge (bottom)" width="1440" height="519"> <figcaption>
            <p>GBA cartridge (top) vs GB cartridge (bottom)</p>
        </figcaption>
</figure>

<p>The cartridges are physically different at the bottom: GBA cartridges (the top cartridge in the image) have a notch on either side. The GBA has a <em>detector switch</em> that senses the absence of a notch on an inserted cartridge and switches the device into Game Boy Color mode.</p>
<p>I measured the size and position of this notch, and searched Digi-Key and Mouser for switches that met these constraints. In the end, I was only able to find a single switch that would work.</p>
<h3 id="miscellaneous-peripherals">Miscellaneous peripherals</h3>
<p>I used the surprisingly cheap <a href="https://www.st.com/en/mems-and-sensors/lsm6ds3tr-c.html">LSM6DS3TR-C</a> IMU from ST. This tiny IMU has a 3-axis accelerometer and gyroscope, more than sufficient for emulating the few GB/GBA cartridges that have motion controls.</p>
<p>For keeping track of time even when the device was off, I used the <a href="https://www.nxp.com/part/PCF8563T">PCF8563T</a> real-time clock chip. I chose this because it was 1) I2C (no additional pins required) 2) cheap and 3) readily available from JLCPCB. Interestingly, all of the real-time clock chips I found count in seconds/minutes/hours/days/months/years. This makes sense for a really simple device with minimal computational power. However, it’s annoying for my purposes, since all I really want is a timestamp I can pass to some other datetime library, and converting between the calendar time and a unix timestamp is non-trivial due to how the chips incompletely handle leap years.</p>
<p>I picked up a few cheap coin vibration motors to use for vibration support (for the rare cartridge that had a built-in vibration motor).</p>
<p>I also used a <a href="https://www.ti.com/product/TCA9535">TCA9535</a> I2C I/O expander to connect the face buttons to the MCU. I ran out of pins, and while I <em>could</em> have used the FPGA as a sort of I/O expander, I figured I’d make it simpler for myself (and allow the buttons to be used even if the FPGA was powered off) by letting the MCU read them itself.</p>
<h2 id="pcb-design">PCB Design</h2>
<h3 id="schematic">Schematic</h3>
<p>For this project, as with my previous ones, I used <a href="https://www.kicad.org/">KiCad</a> to create my schematic and do PCB layout. I really can’t recommend KiCad enough: it’s a great program, intuitive to use, and it’s free and open source.</p>
<p>This was a very ambitious project for my level of electrical engineering experience, and creating the schematic took a couple of weeks. I spent a lot of time designing the circuit for each component, because I was afraid I’d do something wrong and end up with a stack of useless boards without the skills needed to debug them. A lot of the component selection actually happened in parallel with schematic design, as I found new requirements or problems and had to change components.</p>
<p>I gained a lot of experience reading component datasheets. It’s a really valuable skill, both for component selection and for creating designs that use the components. Nearly every datasheet has a “typical application” section, where the manufacturer shows how the component would fit into a circuit. At minimum, this has power supply information (e.g. these voltages to these pins with these decoupling capacitors). For more complex components like the DAC, it also has information about power sequencing, different ways the device could be connected to the rest of the system, a register list, that sort of thing. Some components also included PCB layout recommendations. This information was all really helpful, and gave me a good deal of confidence that my board would work as long as I read through the datasheet and followed the manufacturer’s recommendations.</p>
<p>Then I got to the FPGA. Nearly every component has a single datasheet. Some of them have an additional application note or two. Particularly complex chips (like the ESP32-S3 microcontroller) have a separate datasheet, reference manual, and hardware design guide. The Xilinx Series 7 FPGAs have <em>dozens of datasheets</em>. Overviews, packaging and pinout, configuration guides, BGA design rules, power specifications, clocking resources, I/O specifications, PCB layout guides, design checklists… even a 4MB Excel spreadsheet for estimating power consumption! And believe me, Xilinx didn’t just write documentation for fun: there’s so much documentation because the chip <em>needs</em> this much documentation.</p>
<p>Designing with the FPGA was overwhelming, and <em>way</em> beyond my experience level. At several points I genuinely considered dropping the project altogether. Fortunately, I persevered, and gradually internalized a lot of the information. I also read through the schematics of any open-source Artix-7 development board I could get my hands on. Seeing what other people were doing gave me more confidence that I was doing the right thing.</p>
<p>Eventually, I laid out all of the components, connected them, ensured all of the nets were labeled, and ran KiCad’s electrical rules checker (ERC) to find obvious mistakes, I moved on to layout.</p>
<h3 id="layout">Layout</h3>
<p>I did PCB layout at the same time as some of the initial enclosure CAD. The mechanics of how everything fit together influenced the placement of the display connector, cartridge slot, buttons, speakers, and connectors. After I came up with a plausible enclosure design, I placed some of the first key components onto the PCB and locked them into place while I did the rest of the routing.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/early-shell-design.png" alt="Rough enclosure design to help with board layout" width="2000" height="1298"> <figcaption>
            <p>Rough enclosure design to help with board layout</p>
        </figcaption>
</figure>

<p>I first focused on components that would be hardest to route. Primarily, the FPGA: the package I was using (CSG324) is a <a href="https://en.wikipedia.org/wiki/Ball_grid_array">BGA</a>, 18x18 with 0.8mm pitch between pins. “Fanning out” all of the I/O signals requires careful routing, and at 0.8mm pitch, it’s difficult to do this routing with cheap PCB manufacturing techniques. I ended up being able to do this routing with a 6-layer PCB (three signal, two ground, one power), with 0.1mm track width and spacing, and 0.4/0.25 mm vias. Fortunately, this is all within the realm of JLCPCB’s capabilities.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/bga-fanout.png" alt="BGA fanout with thin traces and small vias" width="1442" height="1102"> <figcaption>
            <p>BGA fanout with thin traces and small vias</p>
        </figcaption>
</figure>

<p>As I routed signals out from the FPGA to other parts, I assigned those signals to the FPGA pins. Similarly, with the MCU, I assigned signals to pins in a way that made routing easier. Certain signals had restrictions (e.g. on the FPGA, the main 50 MHz clock signal can only go into certain pins, or the configuration bitstream can only go to certain pins, or certain pins are differential pairs for HDMI output), but overall, I had a lot of flexibility with pin assignment.</p>
<p>KiCad has a feature where it automatically backs up your project as you work on it. I changed the settings to save every 5 minutes and not delete old backups, which allowed me to generate this timelapse of my layout process:</p>


<figure><video controls="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/layout-anim-rev1-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/layout-anim-rev1.mp4" type="video/mp4">
    </video><figcaption>
            <p>Revision 1 board layout timelapse</p>
        </figcaption>
</figure>


<p>Once I finished placing and routing all of the components, I ran the design rules checker (DRC) and fixed issues. I hesitated for a while before sending the PCB for manufacturing. I re-read the schematics, reviewed the layout, and eventually felt confident enough that I was done. I submitted the order to JLCPCB, and after a few questions by their engineers about component placement, they started manufacturing it.</p>
<h2 id="board-testing-and-bring-up">Board testing and bring-up</h2>
<p>After two weeks or so, I received the assembled boards in the mail:</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/rev1-initial-boards.jpg" alt="An assembled board and an unassembled board" width="1440" height="1026"> <figcaption>
            <p>An assembled board and an unassembled board</p>
        </figcaption>
</figure>

<p>First, I probed the power rail test points with a multimeter to check for shorts. Then, I plugged the boards in for the first time, and pressed the power button. To my delight, the green LED turned on, indicating that the power button circuit, power path, and 3.3V regulator worked. The microcontroller USB enumerated, and I could see that it logged some errors (since I hadn’t flashed anything to it yet).</p>
<p>I intended to write the MCU firmware in Rust, but I did initial board testing and bring-up with <a href="https://micropython.org/">MicroPython</a>. This would let me interactively type in Python and write basic scripts to communicate with the peripherals on the board and make sure I had connected everything correctly. I didn’t have to worry about writing efficient or well-organized code, and could just focus on functionality.</p>
<p>I flashed the MicroPython firmware image, and wrote a couple lines of Python to blink the LED. I powered on the FPGA power domain, and checked that the <code>+1V0</code>, <code>+1V8</code>, and <code>+3V3_FPGA</code> rails had the correct voltage.</p>
<p>Next, I wrote a simple bitstream for the FPGA that read the state of the buttons and produced a pattern on the shared signals between the FPGA and the MCU. I wrote simple Python code to configure the FPGA, loaded up the bitstream, and polled the signals from the FPGA. Pressing buttons changed the state, and confirmed that the FPGA was properly powered, and configurable from the MCU.</p>
<p>After I confirmed the FPGA worked, I started writing a simple display driver to initialize the LCD and push some pixels from the MCU over SPI. The initialization sequence uses a number of LCD-specific parameters (voltages, gamma correction, etc.), that I learned from the LCD manufacturer’s example code.</p>


<figure><video controls="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/lcd-first-signs-of-life-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/lcd-first-signs-of-life.mp4" type="video/mp4">
    </video><figcaption>
            <p>(Slowly) pushing pixels to the LCD</p>
        </figcaption>
</figure>


<p>The LCD module’s controller, an ILI9488, has a few quirks: despite claiming that it supports 16-bit colors over SPI, it actually only supports 18-bit colors. This unfortunately meant that the MCU’s LCD driver would be more inefficient than I expected, since it has to expand 16-bit colors to 18-bit before sending them over the bus. This didn’t end up being a huge issue, however, because the FPGA is the one driving the display most of the time.</p>
<p>Another quirk (hardware bug?) is that the ILI9488 doesn’t stop driving its SPI output line, even when its chip-select signal is inactive. This means that the chip will interfere with any other communication on the bus… including the FPGA, which sits on the same bus. I never actually needed to read any data back from the LCD (and even if I did, it supports <a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface#Three-wire">three-wire SPI</a>), so I just cut the trace between the LCD’s SDO line and the SPI bus.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/lcd-debugging.jpg" alt="Debugging the LCD test code" width="1440" height="954"> <figcaption>
            <p>Debugging the LCD test code</p>
        </figcaption>
</figure>

<h3 id="trouble-with-power-domains">Trouble with power domains</h3>
<p>I started trying to communicate with the I2C peripherals (I/O expander, RTC, etc.), and found that nothing was responding. A bit of probing with a logic analyzer revealed that the SCL/SDA lines were being held low, and that powering on the FPGA power domain let the lines be pulled high and communication to happen.</p>
<p>I deduced that this was due to the DAC, which had its IOVDD powered by <code>+3V3_FPGA</code>, which likely caused its protection diodes to pull the IO lines (SCL and SDA) low:</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/dac-iovdd-issue.png" alt="The problematic portion of the schematic" width="1862" height="656"> <figcaption>
            <p>The problematic portion of the schematic</p>
        </figcaption>
</figure>

<p>I tested out this theory by cutting the PCB traces connecting the DAC’s IOVDD and <code>+3V3_FPGA</code> with a knife. After this, I2C worked even with the FPGA power disabled. Then, I tested a possible fix by adding a wire to power the DAC’s IOVDD from the <code>+3V3</code> rail. I confirmed that I could still talk to the other I2C devices, and once enabling FPGA power, that I could talk to the DAC too.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/dac-iovdd-rework.jpg" alt="DAC IOVDD rework" width="1440" height="1126"> <figcaption>
            <p>DAC IOVDD rework</p>
        </figcaption>
</figure>

<p>While bringing up the LCD, I saw that the FPGA was also pulling down the shared SPI bus lines while it was unpowered. Not enough to prevent communication with the LCD, but it still wasn’t great. Between this and the DAC issue, I learned an important EE lesson: be careful when connecting components in different power domains together. A tristate buffer, such as the <a href="https://www.ti.com/product/SN74LVC1G125">74LVC1G125</a>, could have helped here to isolate the buses.</p>
<p>Once I2C was working, I wrote some basic driver code for the fuel gauge, real-time clock, IMU, and I/O expander, just to check that they all worked correctly. I also checked that the MCU could read from and write to the attached microSD card.</p>
<h4 id="audio-and-video-output-from-the-fpga">Audio and video output from the FPGA</h4>
<p>Next, I updated my testing FPGA bitstream with a to output a test pattern over the <a href="https://hackaday.com/2024/01/25/displays-we-love-hacking-parallel-rgb/">LCD parallel interface (“DPI”)</a>, and a test tone to the DAC over the I2S interface. Then, I began poking on the MCU side to configure the LCD controller and DAC appropriately.</p>
<p>With some amount of trial and error, I convinced the LCD to accept input from the FPGA. Most of the trial and error revolved around the rotation of the LCD module. Soon after, I configured the DAC properly, and it played the test tone from the FPGA over the speakers and the headphones.</p>


<figure><video controls="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/lcd-wip-test-pattern-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/lcd-wip-test-pattern.mp4" type="video/mp4">
    </video><figcaption>
            <p>WIP video output from the FPGA</p>
        </figcaption>
</figure>


<p>At this point, much of the board was working, so I soldered on the rest of the components (cartridge slot, cartridge switch, link port, shoulder buttons).</p>
<p>With the cartridge slot in place, I had everything I needed to port over the Game Boy emulator from my last project. I did a quick-and-dirty port of the emulator, with some hacking around to connect the core to the audio, video, and the physical cartridge. I was able to play the first Game Boy game on the device far sooner than I was expecting:</p>


<figure><video controls="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/first-gbc-output-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/first-gbc-output.mp4" type="video/mp4">
    </video><figcaption>
            <p>Pokemon Silver running from cartridge</p>
        </figcaption>
</figure>


<h4 id="fpga-communication-and-memory">FPGA communication and memory</h4>
<p>I spent the next month or so implementing things on the FPGA. I started on the SPI receiver implementation, so that the MCU and FPGA could communicate.</p>
<p>It was relatively straightforward to write <a href="https://github.com/elipsitz/gamebub/blob/handheld/fpga/src/main/scala/platform/handheld/SpiReceiver.scala">the initial version</a>, which 4x oversampled the SPI signals from the main system clock. For the Game Boy, that was ~8 MHz, for a maximum SPI speed of 2 MHz. The MicroPython ESP32-S3 SPI implementation supported only single SPI, so that allowed for a maximum transfer speed of 256 KB/s. This was sufficient to do most of my initial testing, but I later <a href="https://github.com/elipsitz/gamebub/blob/handheld/fpga/src/main/scala/platform/handheld/SpiReceiverFifo.scala">wrote an improved SPI receiver</a> to run with an internal 200 MHz clock (from a PLL that turned on and off with the chip-select signal to save power), communicating with the rest of the system via a pair of FIFOs. This added a lot of complexity and edge cases, but it greatly improved performance, allowing the bus to run at 40 MHz.</p>
<p>I wrote the SPI interface to the FPGA with memory-like semantics: each SPI transfer starts with a command byte, encoding whether it’s a read or write transfer, the size of each word in the transfer (8, 16, or 32 bits), and whether the “target address” should autoincrement as the transfer progresses. Then, a 32-bit address, followed by reading or writing the data. Each thing that the MCU might want to access (control registers, blocks of memory) are mapped into the 32-bit address space.</p>
<p>As with my previous FPGA project, I wrote almost all of the FPGA code in <a href="https://www.chisel-lang.org/">Chisel</a>, a Scala-based HDL. The remaining bits were the top-level Verilog. Chisel made it really simple to parametrize, compose, and test the various modules that I wrote.</p>
<p>Once I had the SPI receiver working, I wrote controllers for the on-board SRAM and SDRAM. The SRAM was relatively simple (although I still got it slightly wrong at first). The SDRAM was a bit tricky, and even as I write this I’m not quite satisfied with its performance, and intend to rewrite it in the future.</p>
<p>I exposed the SRAM and SDRAM interfaces to the MCU via SPI, which allowed me to read and write to these pieces of memory from the MCU. I used this a lot for testing: writing patterns into memory and reading them back to ensure that read and write both worked.</p>
<p>Side note: SDRAM has to be continuously refreshed, otherwise the stored data decays over time. It depends on the chip, but typically each row has to be read and written back (or auto-refreshed, which does the same thing) at least once every 64 milliseconds to avoid losing state. What I found interesting, however, is that the data can actually persist for quite a bit longer. I discovered that when I was reconfiguring the FPGA between tests, most of the test data that I had previously written would still stick around even without being refreshed. In the first few seconds some bits would start flipping, and over the course of a few minutes, most of what was written was completely unintelligible.</p>
<p>With the SDRAM controller and SPI receiver written, I was then able to implement the “emulated cartridge” part of the Game Boy emulator, where the MCU reads a ROM file off of the microSD card and sends it to the FPGA to be stored in SDRAM. Then, the FPGA “emulates” a cartridge (rather than interfacing with a real physical cartridge). After a few stupid mistakes, I was able to run test ROMs and homebrew. As an added bonus, since I was using my own SDRAM controller directly, I didn’t have any of <a href="https://eli.lipsitz.net/posts/fpga-gameboy-emulator/#fixing-an-audio-bug-on-the-game-boy-color">the performance issues I’d faced before</a> when accessing the ROM stored in memory.</p>
<h2 id="writing-the-microcontroller-firmware-in-rust">Writing the microcontroller firmware in Rust</h2>
<p>By this point I had tested, in some form or another, all of the different components of the system. I’m really surprised that everything worked in my first board revision – even the rework I did early on wasn’t actually required for functionality.</p>
<p>I decided now was a good time to start building an interactive GUI. Up until this point, I had just been running commands in the MicroPython REPL. However, I didn’t want to build a whole UI in Python just to throw it away later, so I also started working on the “production” Rust firmware.</p>
<p>In the last few years, a lot of progress has been made towards making Rust on the ESP32 chips work well, even on the chips that use the Xtensa ISA. I followed the <a href="https://docs.esp-rs.org/book/">Rust on ESP Book</a> and quickly had an environment set up. I opted for the <a href="https://docs.esp-rs.org/book/overview/using-the-standard-library.html">“Rust with the Standard Library”</a> approach, so that I could benefit from <a href="https://idf.espressif.com/">ESP-IDF</a>, especially the built-in support for USB and SD cards with the FAT filesystem.</p>
<p>I started porting over the drivers I had written in Python. I found embedded Rust to be a bit verbose in some cases, but overall pleasant to use and worth the (little) trouble.</p>
<h3 id="gui">GUI</h3>
<p>I starting writing my own minimal GUI framework for basic menus. I poked around with the <a href="https://docs.rs/embedded-graphics/latest/embedded_graphics/"><code>embedded_graphics</code></a> library, but soon found that the typical patterns I was expecting to use weren’t a great fit for Rust. I also started planning out different screens and realized that I probably actually wanted to use a more comprehensive UI framework.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/early-gui-main-menu.png" alt="Early main menu screen" width="480" height="320"> <figcaption>
            <p>Early main menu screen</p>
        </figcaption>
</figure>

<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/early-gui-rom-select.png" alt="Early rom select screen" width="480" height="320"> <figcaption>
            <p>Early rom select screen</p>
        </figcaption>
</figure>

<hr>
<p>Ultimately, I settled on <a href="https://github.com/slint-ui/slint">Slint</a>, a Rust-native declarative GUI framework with excellent support for embedded devices. Slint has a custom DSL to describe the UI and composable components. After a bit of practice I found myself to be really productive with it. I enjoyed using Slint, and I’d use it again in the future. The authors are responsive on GitHub, and the project has steadily improved over the year or so that I’ve been using it.</p>
<p>There were a few rough edges for my use case, however:</p>
<ul>
<li>The built-in GUI elements and examples were all heavily oriented around mouse or touchscreen navigation. Game Bub only has buttons for navigation, however, so I had to make my own widgets (buttons, lists) that worked with key navigation. This involved a few hacks, because Slint’s focus handling was a little bit simplistic.</li>
<li>The built-in GUI styles looked (in my opinion) bad on a low DPI screen. Text was excessively anti-aliased and hard to read at small sizes. This was also fixed by building my own widgets.</li>
<li>Slint doesn’t have a great story around supporting different “screens” – I had to build some of my own infrastructure to be able to support navigation between the main menu, games, rom select, settings, etc.</li>
</ul>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/screenshot-main-menu.png" alt="Main menu" width="480" height="320"> <figcaption>
            <p>Main menu</p>
        </figcaption>
</figure>

<p>The GUI is rendered on the MCU, and then the rendered framebuffer is sent over to the FPGA. Slint supports partial rendering, where only the parts of the screen that have changed are updated, which improved performance. The FPGA maintains a copy of the framebuffer and ultimately is responsible for driving the display. This has a few advantages over driving the display directly from the MCU:</p>
<ul>
<li>Sending a framebuffer at 40 MHz QSPI to the FPGA is 16x faster than sending it to the LCD controller at 10 MHz (the fastest speed supported by the ILI9488)</li>
<li>The UI is rendered at 240x160 to improve performance and maintain the GBA aesthetic, but the LCD controller doesn’t have a scaler, so the MCU would have to send 4x the pixels. The FPGA can easily scale the UI framebuffer itself.</li>
<li>The FPGA can composite the emulator output with a semi-transparent “overlay” to support an in-game menu, volume / brightness bars, battery notifications, etc.</li>
<li>An external display (e.g. monitor or TV) can be driven by the FPGA via HDMI</li>
</ul>
<h3 id="firmware-improvements">Firmware improvements</h3>
<p>I spent some time making a variety of firmware improvements, mostly polish and quality-of-life. I added a settings screen to set the date and time, whether to use Game Boy (DMG) or Game Boy Color (CGB) mode when playing Game Boy games, etc.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/screenshot-settings-early.png" alt="Settings screen" width="480" height="320"> <figcaption>
            <p>Settings screen</p>
        </figcaption>
</figure>

<p>Then I improved the ROM select file browser, and added a battery level indicator.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/screenshot-load-rom.png" alt="Rom select screen" width="480" height="320"> <figcaption>
            <p>Rom select screen</p>
        </figcaption>
</figure>

<p>I also got sick of having to take the microSD card out of the device and connect it to my computer through a series of adapters (microSD to SD to USB-A to USB-C), so I implemented a basic utility to expose the microSD card as a USB Mass Storage Device, using <a href="https://github.com/hathach/tinyusb">TinyUSB</a> and the ESP32-S3’s USB-OTG capabilities.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/screenshot-usb-storage.png" alt="USB Mass Storage screen" width="480" height="320"> <figcaption>
            <p>USB Mass Storage screen</p>
        </figcaption>
</figure>

<p>It was a little bit more difficult than I expected, because USB Mass Storage requires the device to provide raw block access. This means that the filesystem has to be unmounted by the device, otherwise the device and host could conflict and corrupt the filesystem. The ESP32-S3 also only supports USB Full Speed, for a practical maximum transfer speed of ~600KB/sec. It’s really useful for transferring save files or updating the FPGA bitstreams, but less useful for transferring a large number of ROM files.</p>
<p>Later, I implemented <a href="https://gbdev.io/pandocs/MBC7.html">MBC7</a> support in the Game Boy emulator for Kirby Tilt ’n Tumble, using the on-board accelerometer.</p>
<h2 id="creating-the-enclosure">Creating the enclosure</h2>
<p>After I implemented a decent amount of software functionality, I decided to finish the enclosure design. The bare board just wasn’t cutting it anymore, and the taped LCD module, loose speakers, and rubber-banded battery was fragile.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/gamebub-without-shell.jpg" alt="Game Bub looking rough without an enclosure" width="1440" height="1724"> <figcaption>
            <p>Game Bub looking rough without an enclosure</p>
        </figcaption>
</figure>

<p>I came into this project without any CAD or 3D printing experience. I looked at a few different CAD software packages, and I ultimately settled on <a href="https://www.freecad.org/">FreeCAD</a>, primarily because it was free and open source. I learned how to use the software with some video tutorials. FreeCAD, unfortunately, was a little bit rough around the edges and I ended up running into some annoying issues. Nevertheless, I powered through and finished the design.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/enclosure-rev1-cad.png" alt="FreeCAD view of the enclosure and some buttons" width="2000" height="1524"> <figcaption>
            <p>FreeCAD view of the enclosure and some buttons</p>
        </figcaption>
</figure>

<p>I found parametric modeling, where the geometry of the model is defined by constraints and dimensions, to be intuitive. However overall, I found 3D CAD to be very time consuming. I think a large part of this is my inexperience, but thinking in three dimensions is a lot more difficult than, say, a 2D PCB layout. Creating a full assembly was even more difficult: I had to visualize how the front and rear pieces would fit together, where the screws would go, and how the buttons, screen, speaker, cartridge slot, battery, and ports would all fit in. This project definitely pushed the boundaries of my (previously non-existent) product design skills.</p>
<p>After finishing the design, I printed out the technical drawing at a 1:1 scale and physically placed the board and other components down as a final check. Then, I sent it to JLCPCB for manufacturing. I opted for <a href="https://en.wikipedia.org/wiki/Stereolithography">SLA resin printing</a>, for high precision and a smooth finish.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/shell-rev1-technical-drawing.png" alt="Enclosure technical drawing" width="1440" height="971"> <figcaption>
            <p>Enclosure technical drawing</p>
        </figcaption>
</figure>

<p>After a couple weeks, I got the finished enclosure and custom buttons back.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/enclosure-rev1-outside.jpg" alt="Front and rear half, outside" width="1440" height="1009"> <figcaption>
            <p>Front and rear half, outside</p>
        </figcaption>
</figure>

<!-- raw HTML omitted -->
<p>I put the buttons, speakers, and screen into the enclosure, screwed on the PCB, and put the whole thing together.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/assembling-front.jpg" alt="Assembling the front side" width="1440" height="1544"> <figcaption>
            <p>Assembling the front side</p>
        </figcaption>
</figure>



<figure><video controls="" loop="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/assembled-rev1-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/assembled-rev1.mp4" type="video/mp4">
    </video><figcaption>
            <p>Game Bub, fully assembled and functional</p>
        </figcaption>
</figure>


<p>I wasn’t sure how dimensionally accurate the 3D printing would be, so I added a lot of extra clearance around the buttons and ports. As it turned out, the printing was very precise, so the buttons rattled around a little in the oversized button holes.</p>
<p>It’s a little bit chunky (smaller than an original Game Boy, though!) and the ergonomics aren’t ideal, but I was really happy to finally have an enclosure. It actually started (sort of) looking like a real product, and I wasn’t constantly worried about breaking it anymore.</p>
<h2 id="game-boy-advance-support">Game Boy Advance support</h2>
<p>In mid-April 2024, I started working on Game Boy Advance support. I had some prior familiarity with the system, having previously written <a href="https://github.com/elipsitz/gba-emulator">a Game Boy Advance emulator in Rust</a>.</p>
<p>I won’t go into all of the details of how I wrote the emulator here (this article is already long enough!). If you’re interested, my <a href="https://eli.lipsitz.net/posts/fpga-gameboy-emulator/">previous article about my Game Boy FPGA emulator</a> goes into detail about the general process of writing an emulator, and for a high-level introduction to the Game Boy Advance (from a technical perspective), I recommend <a href="https://www.copetti.org/writings/consoles/game-boy-advance/">Rodrigo Copetti’s article</a>. In general, I tried to implement the emulator the way it might actually have been implemented in the original hardware: each cycle of the FPGA corresponds to one actual hardware cycle (no cheating!).</p>
<p>As with the Game Boy, I did nearly all of my development with a simulator backed by <a href="https://www.veripool.org/verilator/">Verilator</a> and <a href="https://www.libsdl.org/">SDL</a>. By the end of the development process, the simulator was running at about 8% of the real-time speed (on an M3 MacBook Air with excellent single-core performance), which was a bit painful.</p>
<h3 id="cpu">CPU</h3>
<p>The Game Boy Advance CPU, the <a href="https://en.wikipedia.org/wiki/ARM7#ARM7TDMI">ARM7TDMI</a>, is significantly more complicated than the Game Boy’s SM83 (a <a href="https://en.wikipedia.org/wiki/Zilog_Z80">Z80</a> / <a href="https://en.wikipedia.org/wiki/Intel_8080">8080</a>-ish hybrid). However, in some ways, it was easier to understand and implement: the ARM7TDMI is much closer to a simple modern processor architecture, and it’s extensively documented by ARM. For example, the <a href="https://developer.arm.com/documentation/ddi0210/c/?lang=en">ARM7TDMI Technical Reference Manual</a> has block diagrams and detailed cycle-by-cycle instruction timing descriptions.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/arm7tdmi-block-diagram.png" alt="ARM7TDMI block diagram (source: ARM7TDMI Technical Reference Manual" width="1442" height="1732"> <figcaption>
            <p>ARM7TDMI block diagram (source: <a href="https://developer.arm.com/documentation/ddi0210/c/?lang=en">ARM7TDMI Technical Reference Manual</a></p>
        </figcaption>
</figure>

<p>I had a lot of fun <a href="https://github.com/elipsitz/gamebub/tree/handheld/fpga/src/main/scala/gba/cpu">implementing the CPU</a>. The architecture has a three-stage pipeline (fetch, decode, execute) – a division that feels natural when you implement it in hardware. The ARM7TDMI has two instruction sets: the standard 32-bit ARM instruction set, and the compressed 16-bit THUMB instruction set. I implemented the CPU the way it works in hardware, where the only difference between ARM and THUMB is the decode stage.</p>
<p>As I was implementing the CPU, I wrote <a href="https://github.com/elipsitz/gamebub/blob/handheld/fpga/src/test/scala/gba/cpu/ARM7TDMISpec.scala">test cases</a> for each instruction. Each test checks the functionality of the instruction: processor state, register values after, as well as the cycle-by-cycle behavior and interaction with the memory bus. This was helpful for catching regressions as I implemented more and more control logic. It was also really satisfying to be able to implement individual instructions, then write the tests, and check that everything worked.</p>
<p>Chisel made it easy to write out the <a href="https://github.com/elipsitz/gamebub/blob/handheld/fpga/src/main/scala/gba/cpu/Control.scala">CPU control logic</a>. The CPU control logic is a state machine that generates microarchitectural control signals (e.g. bus A should hold the value from the first read register, bus B should hold an immediate value, the memory unit should start fetching the computed address, etc.). Chisel allowed me to collect common functionality into functions (e.g. <code>nextInstruction()</code> to set up the signals to dispatch the next decoded instruction, or <code>flushPipeline()</code> to signal that the pipeline should be flushed and a new instruction should be fetched from the current program counter).</p>
<p>I found it helpful to draw out timing diagrams with <a href="https://wavedrom.com/">WaveDrom</a> when working through instructions, especially to deal with the pipelined memory bus.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/timing-arm7tdmi-branch.svg" alt="My timing diagram of the ARM7TDMI branch instructions"> <figcaption>
            <p>My timing diagram of the ARM7TDMI branch instructions</p>
        </figcaption>
</figure>

<p>By mid-May (about a month later), I finished the CPU implementation (with occasional bug fixes after) and moved onto the rest of the system.</p>
<h3 id="ppu-mmio-and-everything-else">PPU, MMIO, and everything else</h3>
<p>Over the next month and a half, I implemented the majority of the rest of the Game Boy Advance. The CPU interacts with the rest of the system via <a href="http://problemkaputt.de/gbatek-gba-i-o-map.htm">memory-mapped IO (MMIO)</a> registers. Unlike the Game Boy CPU, which can only access memory a single byte at a time, the ARM7TDMI can make 8-bit, 16-bit, and 32-bit accesses. This complicates MMIO, and the different hardware registers and memory regions in the GBA respond to different access widths in different ways.</p>
<p>I started with the Picture Processing Unit (PPU), which produces the video output. The author of <a href="https://github.com/nba-emu/NanoBoyAdvance">NanoBoyAdvance</a>, fleroviux, had helpfully documented the <a href="https://nba-emu.github.io/hw-docs/ppu/ppu.html">PPU VRAM access patterns</a>, which gave a lot of insight into how the PPU might work internally. <a href="https://www.coranac.com/tonc/text/toc.htm">Tonc</a> was also immensely helpful for implementing the PPU and testing individual pieces of functionality.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/tonc-test.png" alt="(Sort of) running a Tonc PPU demo" width="963" height="699"> <figcaption>
            <p>(Sort of) running a Tonc PPU demo</p>
        </figcaption>
</figure>

<p>The PPU took a few weeks, and then I moved onto DMA, followed by hardware timers, and audio. Of course, as I’d try new tests, demos, and games, I’d uncover bugs and fix them.</p>


<figure><video controls="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/ppu-kirby-bug-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/ppu-kirby-bug.mp4" type="video/mp4">
    </video><figcaption>
            <p>Kirby <strong>Nightmare</strong> in Dream Land</p>
        </figcaption>
</figure>


<h3 id="cartridge-support">Cartridge support</h3>
<p>Game Boy and Game Boy Advance cartridges use the same 32-pin connector. However, they work very differently. The Game Boy cartridge bus is asynchronous: the game outputs the 16-bit address (64 KiB address space) on one set of pins and lowers the <code>nRD</code> pin, some time later, the 8-bit read data from the ROM stabilizes on a separate set of pins.</p>
<p>For the GBA, Nintendo extended the bus data width to 16-bit and the address space to 25-bit (32 MiB). However, they kept roughly the same set of pins, accomplishing this by multiplexing the 24 data/address pins: the console outputs the address (in increments of the data word size of 16-bits, for a 24-bit physical address), then lowers the <code>nCS</code> signal to “latch” the address in the cartridge. Then, each time the console pulses the <code>nRD</code> pin, the cartridge increments its latched address and outputs the next data over the same pins. This allows for a continuous read of sequential data without having to send a new address for each access. The GBA also allows games to <a href="http://problemkaputt.de/gbatek-gba-system-control.htm">configure cartridge access timings</a> to support different ROM chips.</p>
<h4 id="cartridge-timing">Cartridge timing</h4>
<p>I had to do a lot of my own research here. Software emulators don’t need to care about the precise timing of the cartridge bus, so there wasn’t much documentation. To figure out the exact cycle-accurate timing, I used a <a href="https://www.saleae.com/">Saleae</a> logic analyzer and connected it to the cartridge bus. I wrote a test program for the GBA to do different types of accesses (reads, writes, sequential, non-sequential, DMA) with different timing configurations.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/cartridge-bus-analyzer.jpg" alt="Cartridge bus analysis setup" width="1440" height="1080"> <figcaption>
            <p>Cartridge bus analysis setup</p>
        </figcaption>
</figure>

<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/trace-gba-cartridge.png" alt="Portion of a trace" width="2582" height="734"> <figcaption>
            <p>Portion of a trace</p>
        </figcaption>
</figure>

<p>After coming up with numerous scenarios (especially around the interaction between DMA and the CPU, and starting and stopping burst accesses), I came up with a consistent model for how cartridge accesses worked. I created some timing diagrams to help:</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/cartridge-timing-diagram.svg" alt="Timing diagram of a non-sequential access followed by a sequential access"> <figcaption>
            <p>Timing diagram of a non-sequential access followed by a sequential access</p>
        </figcaption>
</figure>

<p>Finally, I started implementing the cartridge controller state machine based on my observations, paired with an emulated cartridge implementation. With the emulated cartridge, I was able to properly run real games in the simulator.</p>
<h4 id="running-it-on-the-fpga">Running it on the FPGA</h4>
<p>I quickly implemented physical cartridge support, to be able to finally run it on the actual FPGA. I connected the signals, built a new bitstream, and… it didn’t work at all. The Game Boy Advance boot screen ran, but it didn’t get any further than that. I implemented the emulated cartridge on the FPGA (reading ROM files from the SD card), and it worked! Which was great, but physical cartridges still didn’t.</p>
<p>I used the logic analyzer to observe how my emulator was interacting with the cartridge compared to how an actual GBA, and found numerous issues.</p>
<p>One of the first things I noticed was short <a href="https://en.wikipedia.org/wiki/Glitch#Electronics_glitch">glitches</a> on the <code>nCS</code> line. I knew these had to be glitches (rather than incorrect logic), because they were 8 nanoseconds long, much shorter than the ~59.6ns clock period. Since the cartridge latches the address on a falling edge of <code>nCS</code>, glitches cause it to latch an address when it shouldn’t, screwing up reads.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/cartridge-bus-glitches.png" alt="Glitches on the cartridge bus" width="2177" height="600"> <figcaption>
            <p>Glitches on the cartridge bus</p>
        </figcaption>
</figure>

<p>Here, I learned an important lesson in digital design: output signals should come directly from flip-flops, with no logic in between.</p>
<p>After each flip-flop outputs a new value (on the rising edge of the clock), the signals propagate through the chip. As they propagate, taking different paths of different lengths throughout the chip, the output from each lookup table (LUT) is unstable. These values only stabilize near the end of the clock cycle (assuming the design met timing closure), and then each flip-flop stores the stable value at the next rising edge. If you output a signal from logic, this instability is visible from outside of the chip, manifesting as glitches in the output signal. If you instead output the signal from a flip-flop, it’ll change only on each clock edge, remaining stable in the middle.</p>
<p>And of course, I had written the cartridge controller without thinking about this, and <em>all</em> of the output signals were generated from logic. I rewrote the controller to output everything from flip-flops, which had a series of cascading changes since all of the signals now had to be computed one clock cycle earlier than I expected.</p>
<p>There were other issues too – part of the problem was that my emulated cartridge model was too permissive, and didn’t catch some fairly obvious incorrect behavior. After a few days of intensive debugging with the logic analyzer, I got to the point where I could play games from physical cartridges.</p>


<figure><video controls="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/metroid-zero-mission-from-cartridge-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/metroid-zero-mission-from-cartridge.mp4" type="video/mp4">
    </video><figcaption>
            <p>Metroid: Zero Mission running from the cartridge</p>
        </figcaption>
</figure>


<h4 id="cartridge-prefetch-buffer">Cartridge prefetch buffer</h4>
<p>The ARM7TDMI has a single shared instruction and data memory bus. As a result, a long series of sequential memory accesses is rare. Even a linear piece of code without branches that includes “load” or “store” instructions would produce a series of non-sequential memory accesses, as the CPU fetches an instruction from one location, loads a register from a different location, and then goes back to fetching the next instruction.</p>
<p>This poses a real performance issue on the GBA, because every non-sequential access from the cartridge incurs a multi-cycle penalty. Nintendo attempted to mitigate this somewhat with the “prefetch buffer” (<a href="https://mgba.io/2015/06/27/cycle-counting-prefetch/#game-pak-prefetch">read this post by endrift, the author of mGBA, for more details</a>) which attempts to keep a cartridge read burst active between CPU accesses. Without emulating the prefetch buffer, some games lag (I noticed this the most in Mario Kart Super Circuit, and some rooms of Metroid: Zero Mission).</p>
<p>The prefetch buffer, while simple in theory, is not well documented and has a lot of corner cases and weird interactions. Emulator developers often start by taking a shortcut: making all cartridge accesses take a single cycle when the prefetch buffer is enabled. This wouldn’t work for me, since I actually had to interface with the physical cartridge.</p>
<p>So, I set out to do some more research to figure out exactly how the prefetch buffer worked. After making some educated guesses and tests, I came up with a reasonable model of how it might work.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/prefetch-notes.jpg" alt="Notes about the prefetch state machine" width="1440" height="1744"> <figcaption>
            <p>Notes about the prefetch state machine</p>
        </figcaption>
</figure>

<p>Actually implementing it took a lot of work, and I kept stumbling upon more and more corner cases. Eventually I got to the point where all games appeared to run at full speed, and most importantly, didn’t randomly crash. My implementation isn’t perfect: there are still a few <a href="https://github.com/mgba-emu/suite">mGBA test suite</a> timing tests I don’t pass, but it’s certainly sufficient to play games.</p>
<h3 id="link-cable-support">Link cable support</h3>
<p>I also added support for the GBA link cable, for multiplayer games. The GBA supports <a href="http://problemkaputt.de/gbatek-gba-communication-ports.htm">a few different physical protocols</a> with the link cable:</p>
<ul>
<li><em>Normal</em>: standard duplex SPI, used for communicating with accessories</li>
<li><em>Multiplayer</em>: custom multi-drop UART-like protocol, used to link up to four GBAs together for multiplayer games</li>
<li><em>Joybus</em>: the Nintendo N64 and GameCube controller protocol, used to connect to a GameCube</li>
<li><em>UART</em>: duplex <a href="https://en.wikipedia.org/wiki/Universal_asynchronous_receiver-transmitter">UART</a> with flow control, <em>not used by games</em></li>
<li><em>General Purpose</em>: controlling the four pins individually as <a href="https://en.wikipedia.org/wiki/General-purpose_input/output">GPIO</a>, <em>not used by games</em></li>
</ul>
<p>The timing of these isn’t well documented, so I did my own research.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/gba-link-multiplayer-transfer.png" alt="A multiplayer mode transfer with no attached consoles" width="2012" height="558"> <figcaption>
            <p>A <em>multiplayer</em> mode transfer with no attached consoles</p>
        </figcaption>
</figure>

<p>I did a lot of testing with examples from the <a href="https://github.com/afska/gba-link-connection">gba-link-connection</a> library, intended for homebrew GBA games, but helpful for testing the different transfer modes in a controlled environment.</p>


<figure><video controls="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/mario-kart-link-cable-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/mario-kart-link-cable.mp4" type="video/mp4">
    </video><figcaption>
            <p>Multiplayer Mario Kart with Game Bub and a GBA</p>
        </figcaption>
</figure>


<p>Then I got Joybus mode working, so I was able to link with <a href="https://en.wikipedia.org/wiki/GameCube_%E2%80%93_Game_Boy_Advance_link_cable">GameCube games that could connect to the GBA</a>. The adapter didn’t quite fit against the Game Bub enclosure, so I had to take it apart for testing.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/animal-crossing-gamecube-link.jpg" alt="Game Bub linked to a GameCube playing Animal Crossing" width="1440" height="1801"> <figcaption>
            <p>Game Bub linked to a GameCube playing Animal Crossing</p>
        </figcaption>
</figure>

<h3 id="test-roms-and-accuracy">Test ROMs and accuracy</h3>
<p>During the emulator development, I had used various test ROMS (mentioned before) to test basic functionality in isolation. As my emulator became mature enough to run commercial games, however, I started to shift some of my focus to accuracy-focused test ROMs.</p>
<p>These test ROMs (such as the <a href="https://github.com/mgba-emu/suite">mGBA test suite</a>) generally test really specific hardware quirks and timing. For example, they might test what happens when you run an instruction that ARM calls “unpredictable”, or the exact number of cycles it takes to service an interrupt in specific scenarios, or <a href="https://bmchtech.github.io/post/multiply/">the value of the “carry” flag after performing a multiplication</a>. These are the kinds of things that don’t actually matter for playing games, but present a fun challenge and a way to “score” your emulator against others. This also highlights the collaborative nature of the emulation development community: people sharing their research and helping each other out.</p>
<p>I won’t talk about all of the tests here (for my emulator’s test results, <a href="https://github.com/elipsitz/gamebub/blob/handheld/docs/accuracy.md">see this page</a>). But I do want to mention the <a href="https://tcrf.net/AGS_Aging_Cartridge"><strong>AGB Aging Cartridge</strong></a>. This is an official test cartridge from Nintendo, likely used as part of a factory test or RMA procedure. Apparently, Nintendo has <em>also</em> used it to test their emulators (e.g. their GBA emulator on the Nintendo Switch). This test has generally been considered to be difficult to pass (it tests some specific hardware quirks), but it’s easier now that the tests have been <a href="https://github.com/DenSinH/AGSTests/">thoroughly reverse engineered and documented</a>. Still, passing it is a nice milestone:</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/agb-aging-cartridge.png" alt="Passing the AGB Aging Cartridge" width="964" height="700"> <figcaption>
            <p>Passing the AGB Aging Cartridge</p>
        </figcaption>
</figure>

<h2 id="second-hardware-revision">Second hardware revision</h2>
<p>Towards the end of 2024, approximately one year after I originally designed Game Bub, I decided to make a second hardware revision. Over the past year, I had been keeping track of all of the things I would want to change in a future revision. Since the first version of Game Bub miraculously worked without any major issues, this list was primarily minor issues and ergonomics changes.</p>
<h3 id="pcb">PCB</h3>
<p>I fixed the <a href="#trouble-with-power-domains">minor I2C power issues</a>, removed the <a href="https://en.wikipedia.org/wiki/Reference_designator">reference designators</a> from the PCB silkscreen (they looked messy with the dense board, and I didn’t use them for anything anyway), and changed around some test points. I improved the rumble circuit to be more reponsive, and switched to a PCB-mounted vibration motor.</p>
<p>The first version of Game Bub was fairly thick, measuring 12.9mm at the top and 21.9mm on the bottom. The thickness of the rear enclosure was dictated by the thickness of Game Boy cartridges, but I made several changes to the front. I moved the <em>incredibly tall</em> (8.5mm!) link port to the back, and removed the HDMI port (more on that later). I changed the headphone jack (5.0mm tall – no wonder they started getting removed from phones) to a mid-mount one that sunk into the PCB and reduced the overall height.</p>
<p>I also switched from an <code>ESP32-S3-WROOM-1</code> module (3.1mm depth) to an <code>ESP32-S3-MINI-1</code> (2.4mm depth). I should have done this from the beginning, I just didn’t even know the ESP32-S3-MINI existed. This had the side effect of giving me 3 more GPIOs, which allowed me to put the FPGA and LCD on separate SPI busses, avoiding the minor issue of an unpowered FPGA interfering with LCD communication, and allowed for faster boot because the LCD could be configured at the same time as the FPGA.</p>
<p>I switched the speakers, from the fully-enclosed <a href="https://www.sameskydevices.com/product/audio/speakers/miniature-(10-mm~40-mm)/ces-20134-088pmb">CES-20134-088PMB</a> to the <a href="https://www.sameskydevices.com/product/audio/speakers/miniature-(10-mm~40-mm)/cms-160903-18s-x8">CMS-160903-18S-X8</a>. I made this change primarily for ease of assembly. The first speaker had a wire connector that plugged into the board, and I found it difficult to connect during assembly without having the wire interfere with buttons. The new speaker is smaller and has a spring contact connector, so it just presses against the PCB as the device is assembled. This required some speaker enclosure design – an unenclosed speaker in free air sounds quiet and tinny.</p>
<p>I reworked the layout of the face buttons and D-pad to match the spacing of the Nintendo DSi. This allowed me to use the silicone membranes from the DSi for an improved button feel and reduced rattling. I was also hoping to use the plastic buttons from the DSi (which were higher quality compared to my 3D printed buttons), but even with the new thinner design, the buttons weren’t quite tall enough to be easily pressed.</p>
<p>I created another timelapse of my modifications to produce the second version of the PCB:</p>


<figure><video controls="" poster="https://eli.lipsitz.net/posts/introducing-gamebub/media/layout-anim-rev2-poster.jpg" preload="none">
      <source src="https://eli.lipsitz.net/posts/introducing-gamebub/media/layout-anim-rev2.mp4" type="video/mp4">
    </video><figcaption>
            <p>Revision 2 board layout timelapse</p>
        </figcaption>
</figure>


<h3 id="enclosure">Enclosure</h3>
<p>For the second revision of the enclosure, I switched to <a href="https://en.wikipedia.org/wiki/Fusion_360">Fusion 360</a> for the CAD work. While I would have preferred to keep using FreeCAD, I found that it was making it harder for me to be productive. Fusion 360 has a free version for hobbyists (with some limitations that have gradually increased over time), and overall I’ve found it very pleasant to use.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/enclosure-rev2-cad.png" alt="Fusion 360 view of the second enclosure, fully assembled" width="1774" height="1472"> <figcaption>
            <p>Fusion 360 view of the second enclosure, fully assembled</p>
        </figcaption>
</figure>

<p>Unlike with the first revision, I waited until I had a final design for both the enclosure and the PCB before getting anything manufactured. This let me go back and forth, making small modifications to each of them as needed.</p>
<p>I wanted to make the end result look more polished and professional, so I contracted a factory to produce custom LCD cover glass, made out of 0.7mm thick tempered glass with a black silkscreen. It was relatively expensive for a low quantity order, but I’m really happy with how it turned out.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/lcd-cover-glass.jpg" alt="Custom LCD cover glass with adhesive backing" width="1440" height="1369"> <figcaption>
            <p>Custom LCD cover glass with adhesive backing</p>
        </figcaption>
</figure>

<h3 id="manufacturing-and-assembly">Manufacturing and assembly</h3>
<p>I got the PCBs manufactured and assembled, this time with black solder mask to look <em>cool</em>.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/pcb-rev-2.jpg" alt="Assembled PCB, revision 2" width="1440" height="1073"> <figcaption>
            <p>Assembled PCB, revision 2</p>
        </figcaption>
</figure>

<p>I had two enclosures made. The first was black PA-12 Nylon, printed with <a href="https://en.wikipedia.org/wiki/Multi-jet_fusion">MJF</a>. Nylon is strong and durable, and the MJF 3D printing technology produces a slightly grainy surface that’s really pleasant to hold in your hand.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/nylon-closeup.jpg" alt="Closeup of the nylon grainy texture" width="1440" height="894"> <figcaption>
            <p>Closeup of the nylon grainy texture</p>
        </figcaption>
</figure>

<p>The second one was made of transparent resin (SLA, like before). This lets me show off the PCB that I worked so hard on, and evokes the transparent electronics trend from the 90s.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/gamebub-transparent.jpg" alt="Transparent Game Bub" width="1440" height="1920"> <figcaption>
            <p>Transparent Game Bub</p>
        </figcaption>
</figure>

<p>Assembly was a lot easier this time around: the silicone membranes held the face buttons in place, the speakers had a spring contact instead of wires, and the shoulder button assembly was better. In the first revision, I had excessively large tolerances because I wasn’t sure how precise the 3D printing would be. In the second version, I was able to shrink these.</p>
<p>The final product looked and felt a lot better, too. The edges were more rounded, and the device was thinner and easier to hold. The buttons felt <em>much</em> better to press and didn’t rattle around, and the cover glass over the LCD added polish.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/gamebubs-side-by-side.jpg" alt="First revision (left), second revision (center and right)" width="1440" height="742"> <figcaption>
            <p>First revision (left), second revision (center and right)</p>
        </figcaption>
</figure>

<h3 id="dock">Dock</h3>
<p>I previously mentioned that I removed the full-size HDMI port from the first revision. I had first planned to change it to a mini-HDMI or micro-HDMI port to reduce the size, but I was worried about durability.</p>
<p>What I <em>really</em> wanted to do was output video through the USB-C port, avoiding the need for any HDMI port at all. Unfortunately, I had already concluded earlier that I wouldn’t be able to output <a href="https://en.wikipedia.org/wiki/DisplayPort">DisplayPort</a> video signals from the FPGA, which meant that I couldn’t use the standard USB-C DisplayPort alternate mode.</p>
<p>However, an idea struck me towards the end of 2024: I didn’t actually <em>need</em> to use the DisplayPort alt-mode. The USB-C connector, in addition to the USB 2.0 D+/D- pins, has four differential pairs (for USB superspeed). Conveniently, HDMI <em>also</em> uses four differential pairs. The USB specification allows for vendor-specific alt-modes, so I could just implement my own, outputting the HDMI signal directly from the FPGA over the additional pins. Then I could build a custom dock that takes those pins and connects them to the data lines of an HDMI port.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/usb-c-pinout.png" alt="USB-C receptacle pinout with super-speed pairs highlighted (source: Chindi.ap on Wikipedia)" width="1290" height="478"> <figcaption>
            <p>USB-C receptacle pinout with super-speed pairs highlighted (<a href="https://en.wikipedia.org/wiki/File:USB_Type-C_Receptacle_Pinout.svg">source: Chindi.ap on Wikipedia</a>)</p>
        </figcaption>
</figure>

<p>According to the USB specification, alternate modes must be negotiated by both sides first, using the USB-C Power Delivery (USB-PD) protocol, to prevent them from interfering with devices that aren’t expecting them. I don’t actually have a USB-PD controller in Game Bub (too much added complexity), so I took a shortcut: have a microcontroller in the dock communicate with the Game Bub over regular USB and perform a handshake before enabling HDMI output from the FPGA. Once Game Bub detects that it’s been disconnected from the dock, it can just switch back to using the internal display.</p>
<p>I realized that the dock also presents another opportunity for controller support. I originally wanted to build wireless controller support into the handheld, but the ESP32-S3 only supports Bluetooth Low Energy, and the majority of controllers use Bluetooth Classic. Fortunately, the <a href="https://en.wikipedia.org/wiki/Raspberry_Pi#Raspberry_Pi_Pico">Raspberry Pi Pico W</a> (with an RP2040 MCU) supports both types of Bluetooth, so I just decided to use that as the microcontroller on the dock. Game controllers connect to the dock over Bluetooth, and the Pico sends the controller inputs to the device. I wired up the <code>SBU1</code> and <code>SBU2</code> USB-C pins as a direct connection between the FPGA and the dock for low latency input.</p>
<p>The RP2040 acts as the USB host, and Game Bub only needs to be a device. I also added a USB hub chip and some additional USB ports on the back of the dock to allow for wired controller support too. Just like with wireless controllers, the dock handles the direct controller communication, and just passes inputs back to the main Game Bub unit.</p>
<p>Since the dock is so simple (comparatively), it only took about a day to design and lay out.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/dock-pcb.jpg" alt="Assembled dock PCB" width="1440" height="1016"> <figcaption>
            <p>Assembled dock PCB</p>
        </figcaption>
</figure>

<p>I had also hoped to use the dock to solve another problem around HDMI output: HDMI sinks (monitors, TVs) pull the HDMI data lines up to 3.3 volts, and can actually backfeed power to the HDMI source. For Game Bub, this meant that a powered-off unit would turn itself on when connected over HDMI. I used a HDMI buffer chip in the dock to try to alleviate this problem, but the chip I used wasn’t actually properly suited to this use-case and interfered with video output, so I had to carefully rework the board to bypass the chip. I’ll have to fix it in a later revision.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/dock-rework.jpg" alt="Bypassing the HDMI buffer chip" width="1440" height="1359"> <figcaption>
            <p>Bypassing the HDMI buffer chip</p>
        </figcaption>
</figure>

<p>After the rework, HDMI output worked! The rest of the features are still a work in progress.</p>
<figure>
    <img loading="lazy" src="https://eli.lipsitz.net/posts/introducing-gamebub/media/bare-gamebub-in-dock.jpg" alt="Game Bub PCB on the dock, connected to an external monitor" width="1440" height="2116"> <figcaption>
            <p>Game Bub PCB on the dock, connected to an external monitor</p>
        </figcaption>
</figure>

<h2 id="conclusion">Conclusion</h2>
<p>Congratulations on reading this far! This writeup ended up being incredibly long, even with a lot of details left out.</p>
<p>I’m proud of what I accomplished over the last year and a half: I met all of my goals to produce a polished handheld FPGA retrogaming device. I pushed my electrical engineering and product design skills to the limit, and learned a lot in the process. Professional product and hardware designers deserve <em>so much</em> respect.</p>
<!-- raw HTML omitted -->
<h3 id="whats-next">What’s next?</h3>
<p>I deliberately designed this project with lots of possible extension opportunities to keep me occupied for a long time. I worked hard to get to the point where I’m comfortable sharing Game Bub with the world, but I still have a long list of TODOs for the future.</p>
<p>In the near term, I’m going to work on finishing the dock, implementing wireless controller support (and maybe wired). I plan to use the <a href="https://github.com/ricardoquesada/bluepad32">Bluepad32</a> library to do so.</p>
<p>I also want to improve the accuracy of my Game Boy Advance emulator: my goal here is to someday pass the entire <a href="https://github.com/mgba-emu/suite">mGBA test suite</a>. I hope that I can contribute back to the wonderful <em>emudev</em> community with my emulator, and I plan to write-up some of my research around the GBA cartridge interface and link port.</p>
<p>I have a long list of mostly minor changes to make to the MCU firmware: improving UI render performance, bits of polish like low battery notifications, eliminating display glitching when reloading the FPGA, and that sort of thing. I also plan to add more utilities, like a cartridge dumper and save backup/restore feature.</p>
<p>Some day, I want to emulate the <a href="https://en.wikipedia.org/wiki/Game_Boy_Advance_Wireless_Adapter">Game Boy Advance Wireless Adapter</a> over Wi-Fi, e.g. with <a href="https://docs.espressif.com/projects/esp-idf/en/stable/esp32s3/api-reference/network/esp_now.html">ESP-NOW</a>. This won’t be compatible with the original wireless adapter, unfortunately, since that uses raw 2.4 GHz modulation rather than Wi-Fi.</p>
<p>I added a <a href="https://en.wikipedia.org/wiki/Pmod_Interface">Pmod</a>-compatible header at the top of the device for future hardware expansion. I might make a few add-on boards to support <a href="https://gbdev.io/pandocs/IR.html">Game Boy IR communication</a>, a solar sensor for <a href="https://en.wikipedia.org/wiki/Boktai:_The_Sun_Is_in_Your_Hand">Boktai</a>, or maybe even a basic webcam for <a href="https://en.wikipedia.org/wiki/Game_Boy_Camera">Game Boy Camera</a> emulation.</p>
<h3 id="wishlist">Wishlist</h3>
<p>I designed Game Bub with extremely low production volumes in mind, using off-the-shelf commodity parts to keep the overall cost down. However, there are a few things I would have liked to be able to do, but are only possible with much higher volumes:</p>
<ul>
<li>A better LCD module (likely custom): native landscape mode to avoid the need for triple-buffering. Ideally a 720x480 resolution display, to allow for 3x GBA scaling and filter effects.</li>
<li>High-quality injection molded case and buttons: 3D printing is great for low volume production, but an injection molded case would be great. It would be more precise (allowing for tighter tolerances), stronger, and allow for significantly more color options.</li>
<li>Custom battery pack: or at least customizing the length of the connector wire. The current solution is hacky and doesn’t make the best use of internal space, due to limited off-the-shelf battery options.</li>
<li>Smaller BGA parts for SRAM and SDRAM to free up board space (and move internal signals to 1.8 volts): this is actually something that would be possible in smaller volumes too, if I were willing to send parts from Mouser or DigiKey to JLCPCB for assembly.</li>
</ul>
<h3 id="acknowledgements">Acknowledgements</h3>
<ul>
<li>Thank you to the emulation development community. A lot of people did a lot of research to figure out the details of how the Game Boy, Game Boy Color, and Game Boy Advance work, and write tests.
<ul>
<li><a href="https://discord.gg/dkmJAes">Emulation Development Discord</a> (<code>#gb</code>, <code>#gba</code>, and others). Everyone there is so helpful and supportive.</li>
<li>Emulators for reference and debugging: <a href="https://github.com/mgba-emu/mgba">mGBA</a> by endrift, <a href="https://github.com/nba-emu/NanoBoyAdvance">NanoBoyAdvance</a> by fleroviux, and <a href="https://github.com/LIJI32/SameBoy">SameBoy</a> by LIJI32</li>
<li>Essential GB/GBA references, like the <a href="https://gbdev.io/pandocs/">Pan Docs</a>, <a href="http://problemkaputt.de/gbatek.htm">GBATEK</a>, and <a href="https://www.coranac.com/tonc/text/toc.htm">Tonc</a></li>
<li>Many other resources, some of which are <a href="https://github.com/elipsitz/gba-emulator?tab=readme-ov-file#acknowledgements">linked from my Rust GBA emulator</a>, and <a href="https://eli.lipsitz.net/posts/fpga-gameboy-emulator/#acknowledgements">my post about my Game Boy FPGA emulator</a></li>
</ul>
</li>
<li>Numerous open-source projects: <a href="https://www.kicad.org/">KiCad</a>, <a href="https://www.freecad.org/">FreeCAD</a>, <a href="https://github.com/chipsalliance/chisel">Chisel</a>, <a href="https://github.com/olofk/fusesoc">FuseSoC</a>, <a href="https://github.com/verilator/verilator">Verilator</a>, <a href="https://www.libsdl.org/">SDL</a>, <a href="https://github.com/slint-ui/slint">Slint</a>, <a href="https://github.com/esp-rs/esp-idf-hal"><code>esp-idf-hal</code></a>, <a href="https://github.com/hdl-util/hdmi">Sameer Puri’s HDMI implementation</a>, <a href="https://github.com/Gekkio/gb-hardware">gekkio’s Game Boy related KiCad footprints</a>, <a href="https://www.blender.org/">Blender</a>, and more.</li>
<li>Online CAD video tutorials: <a href="https://www.youtube.com/channel/UCooViVfi0DaWk_eqxIXXiOQ">Product Design Online</a> for Fusion 360, <a href="https://www.youtube.com/watch?v=Odr5viqPwkc">Joko Engineeringhelp</a> for FreeCAD</li>
<li>Lindsey Guan for the use of her Game Boy Color and help with photography</li>
</ul>


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[5G networks meet consumer needs as mobile data growth slows (207 pts)]]></title>
            <link>https://spectrum.ieee.org/5g-bandwidth</link>
            <guid>43027266</guid>
            <pubDate>Wed, 12 Feb 2025 17:04:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://spectrum.ieee.org/5g-bandwidth">https://spectrum.ieee.org/5g-bandwidth</a>, See on <a href="https://news.ycombinator.com/item?id=43027266">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-headline="It’s Time To Rethink 6G"><p><strong>Is the worldwide race</strong> to keep expanding mobile bandwidth a fool’s errand? Could maximum data speeds—on <a href="https://spectrum.ieee.org/tag/mobile-devices">mobile devices</a>, at home, at work—be approaching “fast enough” for most people for most purposes?
</p><p>
	These heretical questions are worth asking, because industry bandwidth tracking data has lately been revealing something surprising: Terrestrial and mobile-data growth is slowing down. In fact, absent a dramatic change in <a href="https://spectrum.ieee.org/tag/consumer-tech">consumer tech</a> and <a href="https://spectrum.ieee.org/tag/broadband">broadband</a> usage patterns, data-rate demand appears set to top out below 1 billion bits per second (1 gigabit per second) in just a few years.
</p><p>
	This is a big deal. A presumption of endless growth in wireless and terrestrial broadband <a href="https://spectrum.ieee.org/tag/data-rates">data rates</a> has for decades been a key driver behind <a href="https://spectrum.ieee.org/tag/telecom">telecom</a> research funding. To keep telecom’s R&amp;D engine rooms revving, research teams around the world have innovated a seemingly endless succession of technologies to expand bandwidth rates, such as 2G’s 
	<a href="https://telephoneworld.org/cellular-phone-history/the-first-digital-cellular-systems-tdma-gsm-and-iden-2g/" rel="noopener noreferrer" target="_blank">move to digital cell networks</a>, 3G’s <a href="https://en.wikipedia.org/wiki/3G" rel="noopener noreferrer" target="_blank">enhanced data-transfer capabilities</a>, and 5G’s <a href="https://www.sciencefocus.com/future-technology/2019-the-year-of-5g" rel="noopener noreferrer" target="_blank">low-latency wireless connectivity</a>.
</p><p>
	Yet present-day consumer usage appears set to throw a spanner in the works. Typical real-world <a href="https://spectrum.ieee.org/tag/5g">5G</a> data rates 
	<a href="https://about.att.com/sites/broadband/performance" rel="noopener noreferrer" target="_blank">today achieve</a> up to 500 megabits per second for download speeds (and less for uploads). And some initial studies suggest <a href="https://spectrum.ieee.org/tag/6g">6G</a> networks could<a href="https://www.livescience.com/technology/communications/6g-speeds-hit-100-gbps-in-new-test-500-times-faster-than-average-5g-cellphones" rel="noopener noreferrer" target="_blank"> one day supply</a> data at 100 Gb/s. But the demand side of the equation suggests a very different situation.
</p><p>Mainstream consumer applications requiring more than 1 Gb/s border on the nonexistent.</p><p>
	This is in part because mobile applications that need more than 15 to 20 Mb/s are rare, while mainstream consumer applications requiring more than 1 Gb/s border on the nonexistent.
</p><p>
	At most, meeting the demand for multiple simultaneous active applications and users requires hundreds of Mb/s range. To date, no new consumer technologies have emerged to expand the bandwidth margins much beyond the 1 Gb/s plateau.
</p><p>
	Yet wireless companies and researchers today still set their sights on a marketplace where consumer demand will gobble up as much bandwidth as can be provided by their <a href="https://spectrum.ieee.org/tag/mobile-networks">mobile networks</a>. The thinking here seems to be that if more bandwidth is available, new use cases and applications will spontaneously emerge to consume it.
</p><p>
	Is that such a foregone conclusion, though? Many technologies have had phases where customers eagerly embrace every improvement in some parameter—until a saturation point is reached and improvements are ultimately met with a collective shrug.
</p><p>
	Consider a very brief history of airspeed in commercial air travel. Passenger aircraft today fly at around 900 kilometers per hour—and have continued to traverse the skies at the same airspeed range for the past five decades. Although <a href="https://spectrum.ieee.org/tag/supersonic">supersonic</a> passenger aircraft found a niche from the 1970s through the early 2000s with 
	<a href="https://en.wikipedia.org/wiki/Concorde" rel="noopener noreferrer" target="_blank">the Concorde</a>, commercial supersonic transport is no longer available for the mainstream consumer marketplace today.
</p><p>
	To be clear, there may still be niche use cases for many gigabits per second of wireless bandwidth—just as there may still be executives or world leaders who continue to look forward to 
	<a href="https://spectrum.ieee.org/the-new-supersonic-boom" target="_self">spanning the globe at supersonic speeds</a>.
</p><p>
	But what if the vast majority of 6G’s consumer bandwidth demand ultimately winds up resembling today’s 5G <a href="https://spectrum.ieee.org/tag/profile">profile</a>? It’s a possibility worth imagining.
</p><h2>Consider a Bandwidth-Saturated World</h2><p>
	Transmitting high-end <a href="https://spectrum.ieee.org/tag/4k-video">4K video</a> today 
	<a href="https://help.netflix.com/en/node/306" rel="noopener noreferrer" target="_blank">requires</a> 15 Mb/s, according to <a href="https://spectrum.ieee.org/tag/netflix">Netflix</a>. Home broadband upgrades from, say, hundreds of Mb/s to 1,000 Mb/s (or 1 Gb/s) typically make little to no noticeable difference <a href="https://www.highspeedinternet.com/how-much-internet-speed-do-i-need" rel="noopener noreferrer" target="_blank">for the average end user</a>. Likewise, for those with good <a href="https://spectrum.ieee.org/tag/4g">4G</a> connectivity, 5G makes <a href="https://news.virginmediao2.co.uk/leaving-the-vanity-metrics-behind-and-focusing-on-what-matters-customer-experience/" rel="noopener noreferrer" target="_blank">much less of an improvement </a>on the mobile experience than advertisers like to claim—despite 5G networks being, <a href="https://www.cisco.com/c/en/us/solutions/what-is-5g/what-are-5g-speeds.html#~q-a" rel="noopener noreferrer" target="_blank">according to Cisco</a>, 1.4 to 14 times as fast as 4G.
</p><p>
	So, broadly, for a typical mobile device today, going much above 15 Mb/s borders on pointless. For a home, assuming two or three inhabitants all separately browsing or watching, somewhere between 100 Mb/s and 1 Gb/s marks the approximate saturation point beyond which further improvements become less and less noticeable, for most use cases.
</p><p>
	Probing a more extreme use case, one of the largest bandwidth requirements in recent consumer tech is 
	<a href="https://www.flightsimulator.com/microsoft-flight-simulator-2024/" rel="noopener noreferrer" target="_blank">Microsoft Flight Simulator 2024</a>, whose “<a href="https://www.windowscentral.com/gaming/xbox/microsoft-flight-simulator-2024-may-take-an-enormous-amount-of-internet-bandwidth" rel="noopener noreferrer" target="_blank">jaw-dropping bandwidth demand</a>,” in the words of <a href="https://spectrum.ieee.org/tag/windows">Windows</a> Central, amounts to a maximum of 180 Mb/s.
</p><p>
	Stop to think about that for one moment. Here is a leading-edge tech product requiring less than one-fifth of 1 Gb/s, and such a voracious bandwidth appetite today is considered “jaw-dropping.”
</p><p>
	But what about the need to “future proof” the world’s networks? Perhaps most mobile and terrestrial networks don’t need many-Gb/s connectivity now, say the bigger-is-always-better proponents. But the world will soon!
</p><p>
	For starters, then, what bandwidth-hogging technologies are today on the horizon?
</p><p>
	In September, Apple unveiled its <a href="https://spectrum.ieee.org/tag/iphone">iPhone</a> 16, which CEO <a href="https://spectrum.ieee.org/tag/tim-cook">Tim Cook</a><a href="https://www.fierce-network.com/modernization/killer-app-5g-will-arrive-next-week" rel="noopener noreferrer" target="_blank">said </a>would feature <a href="https://spectrum.ieee.org/tag/generative-ai">generative AI</a> broadly “across [Apple] products.” Could Apple’s new AI capabilities perhaps be a looming, bandwidth-consuming dark horse?
</p><p>
	One high-bandwidth use case would involve the latest iPhone using the camera to recognize a scene and comment on what’s in it. However, that’s not dissimilar to <a href="https://spectrum.ieee.org/tag/google">Google</a> Lens’s 
	<a href="https://lens.google/howlensworks/" rel="noopener noreferrer" target="_blank">visual search feature</a>, which hasn’t markedly changed <a href="https://spectrum.ieee.org/tag/network-traffic">network traffic</a>. Indeed, this sort of feature, perhaps used a few times per day, could require bandwidth equivalent to a second or two of high-definition video. None of this would come close to saturating the general bandwidth capacities noted above.
</p><p>
	To play devil’s advocate a little more, consider a representative batch of five soon-to-be-scaled-up, potentially high-bandwidth consumer technologies that 
	<em><em>do</em></em> already exist. Do any of them appear poised to generate the many-Gb/s demand that present-day net usage does not?
</p><p>
	What about <a href="https://spectrum.ieee.org/tag/autonomous-cars">autonomous cars</a>, for instance? Surely they’ll need as much bandwidth as they can possibly be given.
</p><p>
	Yet, the precious few autonomous cars out in the world today are generally designed to work 
	<a href="https://stlpartners.com/articles/private-cellular/are-automated-vehicles-really-a-killer-use-case-for-5g/" rel="noopener noreferrer" target="_blank">without much </a>in the way of instantaneous <a href="https://spectrum.ieee.org/tag/internet">Internet</a> communication. And no autonomous tech around the bend appears set to change the equation substantially, concerning instantaneous bandwidth needs. The future of autonomy may be revolutionary and ultimately inevitable, but it doesn’t appear to require network connectivity much beyond a decent 5G connection.
</p><p>No new technology has emerged that demands network requirements much beyond what 4G and 5G already deliver. </p><p>
	Much the same argument holds for the 
	<a href="https://spectrum.ieee.org/tag/internet-of-things" target="_self">Internet of things</a> (<a href="https://spectrum.ieee.org/tag/iot">IoT</a>), which is not expected to increase network traffic <a href="https://www.eseye.com/resources/blogs/high-data-low-latency-iot-connectivity/" rel="noopener noreferrer" target="_blank">above what a decent 4G connection could yield</a>.
</p><p><a href="https://spectrum.ieee.org/tag/holographic">
	Holographic</a> communications likewise offer no greater bandwidth sink than any of the above case studies do. For a typical user, <a href="https://spectrum.ieee.org/tag/holograms">holograms</a> are in fact just stereographic video projections. So if a 
	<a href="https://help.netflix.com/en/node/306" rel="noopener noreferrer" target="_blank">single 4K stream demands 15 Mb/s</a>, then <a href="https://spectrum.ieee.org/tag/stereo">stereo</a> 4K streams would require 30 Mb/s. Of course, sophisticated representations of entire 3D scenes for large groups of users interacting with one another in-world could conceivably push bandwidth requirements up. But at this point, we’re getting into <em><em>Matrix</em></em>-like imagined technologies without any solid evidence to suggest a good 4G or 5G connection wouldn’t meet the tech’s bandwidth demands.
</p><p>
	AI in general is the wild card in the deck. The mysterious future directions for this technology suggest that AI broadband and wireless bandwidth needs could conceivably exceed 1 Gb/s. But consider at least the known knowns in the equation: At the moment, present-day AI applications involve small amounts of prompt text or a few images or video clips sent to and from an edge device like a smartphone or a consumer tablet. Even if one allows for the prompt text and photo and video bandwidth requirements to dramatically expand from there, it seems unlikely to match or exceed the already strenuous requirements of a simple 4K video stream. Which, as noted above, would appear to suggest modest bandwidth demands in the range of 15 Mb/s.
</p><p>
	The <a href="https://spectrum.ieee.org/tag/metaverse">metaverse</a>, meanwhile, has flopped. But even if it picks up steam again tomorrow, current estimates of its bandwidth needs run from 
	<a href="https://www.iceconnect.com/blog/tech-tips/metaverse-network-requirements/" rel="noopener noreferrer" target="_blank">100 Mb/s to 1 Gb/s</a>—all within 5G’s range. Admittedly, the most aggressive longer-term forecasts for the metaverse suggest that cutting-edge applications could demand as much as <a href="https://www.lightreading.com/wifi/when-will-wi-fi-really-support-the-metaverse-" rel="noopener noreferrer" target="_blank">5 Gb/s</a> bandwidth. And while it’s true that in January, <a href="https://spectrum.ieee.org/tag/verizon">Verizon</a> delivered more than 5 Gb/s bandwidth in an <a href="https://voip.review/2025/01/09/verizons-5g-lab-trial-achieves-groundbreaking-5-5-gbps-speed/" rel="noopener noreferrer" target="_blank">experimental 5G network</a>, that result is unlikely to be replicable for most consumers in most settings anytime soon.
</p><p>
	Yet, even allowing for the practical unreachability of 5 Gb/s speeds on a real-world <a href="https://spectrum.ieee.org/5g-network">5G network</a>, a reader should still weigh the fact that any such imagined applications that might ultimately consume 5 Gb/s of bandwidth represent an extreme. And only the upper end of that subset is what might one day exceed data speeds that present-day 5G tech delivers.
</p><p>
	I would argue, in other words, that no new technology has emerged that demands network requirements much beyond what 4G and 5G already deliver. So at this point future-proofing telecom in the anticipation of tens or more Gb/s of consumer bandwidth demand seems like expensive insurance being taken out against an improbable event.
</p><h2>Consumers Have Already Discovered the Gigabit Plateau</h2><p>
	As can be seen in the charts below—excerpted from my book, 
	<a href="https://www.amazon.com/Telecoms-History-Prof-William-Webb/dp/B0D83Z5FYJ" rel="noopener noreferrer" target="_blank"><em><em>The End of Telecoms History</em></em></a>, and compiled from a mix of sources, including <a href="https://spectrum.ieee.org/tag/cisco">Cisco</a> and <a href="https://spectrum.ieee.org/tag/barclays">Barclays</a> Research—a downward trend in data growth has been evident for at least the past decade.
</p><p>
	The statistics being tracked in the charts “Growth of Mobile-Data Usage” and “Growth of Landline-Data Usage” may seem a little counterintuitive at first. But it’s important to clarify that these charts do 
	<em><em>not</em></em> suggest that overall bandwidth usage is declining. Rather, the conclusion these charts lead to is that the rate of bandwidth <em><em>growth</em></em> is slowing.</p><p>
	Let’s start with mobile data. Between 2015 and 2023, there’s a consistent decline in bandwidth growth of some 6 percent per year. The overall trend is a little harder to interpret in landline bandwidth data, because there’s a large COVID-related peak in 2020 and 2021. But even after accounting for this entirely understandable anomaly, the trend is that home and office broadband growth fell on average by around 3 percent per year between 2015 and 2023.</p><p>Extrapolating the trends from both of these curves leads to the ultimate conclusion that data growth should ultimately fall to zero or at least a negligibly small number by around 2027.
</p><p>
	This is an unpopular conclusion. It runs contrary to the persistent drumbeat of a many-Gb/s future that telecom “experts” have been claiming for years. For example, in November 2023 the Biden <a href="https://spectrum.ieee.org/tag/white-house">White House</a> published its 
	<a href="https://www.ntia.gov/sites/default/files/publications/national_spectrum_strategy_final.pdf" rel="noopener noreferrer" target="_blank">spectrum strategy</a>, which states, “According to one estimate, data traffic on macro <a href="https://spectrum.ieee.org/tag/cellular-networks">cellular networks</a> is expected to increase by over 250 percent in the next 5 years, and over 500 percent in the next 10 years.”
</p><p>
	Additionally, the Stockholm-based telecom company <a href="https://spectrum.ieee.org/tag/ericsson">Ericsson</a> recently 
	<a href="https://www.ericsson.com/en/reports-and-papers/mobility-report/reports" rel="noopener noreferrer" target="_blank">predicted</a> near-term “surge[s] in mobile data traffic.” And the United Kingdom’s telecommunications <a href="https://spectrum.ieee.org/tag/regulator">regulator</a>, Ofcom <a href="https://www.ofcom.org.uk/__data/assets/pdf_file/0036/248769/conclusions-mobile-spectrum-demand-and-markets.pdf" rel="noopener noreferrer" target="_blank">forecast</a> a bandwidth growth-rate of 40 percent for the foreseeable future.
</p><p>
But, as shown in the charts here, many mobile and Internet users in the developed world seem to be accessing all the bandwidth they need. Data rates are no longer the constraining and determinative factor that they used to be.
</p><p>
	The need to continue developing faster and bigger networks may therefore be overplayed today. That chapter of the Internet’s history is arguably now over, or it soon will be.
</p><h2>The Telecom Industry Will Be Shifting <a href="https://spectrum.ieee.org/tag/gears">Gears</a>, Too</h2><p>
	The implications of having enough coverage and bandwidth are most obvious in the equipment-supply industry.
</p><p>
	Major network suppliers may need to become accustomed to the new reality of data rates leveling out. Are 
	<a href="https://www.ericsson.com/en/press-releases/2024/3/ericsson-announces-headcount-reduction" target="_blank">Ericsson’s</a> and <a href="https://techblog.comsoc.org/2024/04/18/nokia-like-ericsson-announces-fresh-wave-of-job-cuts/" target="_blank">Nokia’s</a><a href="https://www.ericsson.com/en/press-releases/2024/3/ericsson-announces-headcount-reduction" rel="noopener noreferrer" target="_blank"></a>recent <a href="https://spectrum.ieee.org/tag/layoffs">layoffs</a> and the bankruptcies of smaller suppliers (such as <a href="https://www.lightreading.com/finance/airspan-to-return-to-private-life-through-bankruptcy" rel="noopener noreferrer" target="_blank">Airspan Networks</a>) a harbinger of what’s coming for telecom markets?
</p><p>
	Operators are already 
	<a href="https://www2.deloitte.com/us/en/pages/technology-media-and-telecommunications/articles/telecommunications-industry-outlook.html" rel="noopener noreferrer" target="_blank">investing less</a> in 5G equipment and are likely already close to “maintenance only” spending. Most mobile and fixed operators have <a href="https://tefficient.com/analysis/public-industry-analysis/" rel="noopener noreferrer" target="_blank">not seen revenue growth above inflation </a>for many years but hold out hope that somehow this will turn around. Perhaps, though, if the numbers referenced here are to be believed, that turnaround isn’t coming.
</p><p><img alt="An illustration of a man holding a bottle full of items and pouring it out. " data-rm-shortcode-id="f6a474cc701b85a3f800ae7f2931f6ca" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/an-illustration-of-a-man-holding-a-bottle-full-of-items-and-pouring-it-out.png?id=56272704&amp;width=980" height="1351" id="3694e" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/an-illustration-of-a-man-holding-a-bottle-full-of-items-and-pouring-it-out.png?id=56272704&amp;width=980" width="2011"><small placeholder="Add Photo Credit...">Davide Comai</small></p><p>
	Telecommunications has historically been a high-growth industry, but current trends suggest it’s heading toward something more static—more like a public utility, where in this case the public good is delivering data connectivity reliably. Extrapolating these trends, equipment suppliers won’t need to invest as much on bandwidth expansion but instead will focus on improving the margins on existing lines of products.
</p><p>
	Some degree of bandwidth expansion for 6G networks will still be necessary. The metaverse example above suggests a range of “ceiling heights” in the maximum Gb/s that users will demand in the years ahead. For most, 1 Gb/s still appears to be more than enough. For those who use high-end applications like future immersive <a href="https://spectrum.ieee.org/tag/virtual-worlds">virtual worlds</a>, perhaps that ceiling is closer to 5 Gb/s. But concentrating research efforts on 6G deployments that can deliver 10 Gb/s and higher for everyone appears not to be grounded in any currently imaginable consumer technologies.
</p><p>
	To adjust to a potential new reality of operating their <a href="https://spectrum.ieee.org/tag/wireless-networks">wireless networks</a> at closer to utility-like or commodity-like terms, many telecom companies may face a future of restructuring and cost cutting. A useful analogy here are budget <a href="https://spectrum.ieee.org/tag/airlines">airlines</a>, which thrive because most consumers select their airfare on the basis of cost. Similarly, the way for future telecom companies to win a larger share of the customer base may be increasingly dictated not by technological innovation but by price and <a href="https://spectrum.ieee.org/tag/customer-service">customer service.
</a></p><p>
	To be clear, the need for new telecom research will continue. But with bandwidth expansion deprioritized, other innovations will certainly include cheaper and more efficient or more reliable ways to deliver existing services.
</p><p>
	If consumer demand for ever more mobile data continues to dry up, regulators would no longer need to 
	<a href="https://lightyear.ai/blogs/fcc-spectrum-auctions-explained" rel="noopener noreferrer" target="_blank">find new spectrum bands for cellular every few years</a> and then <a href="https://en.wikipedia.org/wiki/Spectrum_auction" rel="noopener noreferrer" target="_blank">conduct auctions</a>. Indeed, the demand for spectrum may abate across most areas. Regulators may also have to consider whether fewer operators may be better for a country, with perhaps only a single underlying fixed and <a href="https://spectrum.ieee.org/tag/mobile-network">mobile network</a> in many places—just as utilities for electricity, water, gas, and the like are often structured around single (or a limited set of) operators.
</p><p>
	Finally, politicians will need to <a href="https://spectrum.ieee.org/tag/rethink">rethink</a> their desire to be at the forefront of metrics such as homes connected by fiber, 5G deployment, or national leadership in 6G. That’s a bit like wanting to be top of the league for the number of Ferraris per capita. Instead, the number of homes with sufficient connectivity and percentage of the country covered by 10 Mb/s mobile may be better metrics to pursue as policy goals.
</p><p>
	Another area of research will surely involve widening coverage in underserved areas and regions of the world—while still keeping costs low with more environmentally friendly solutions. Outside of urban areas, broadband is sometimes slow, with mobile connectivity nonexistent. Even urban areas contain so-called 
	<a href="https://totaltele.com/government-landlords-or-operators-who-is-responsible-for-tackling-the-uks-urban-not-spots/" rel="noopener noreferrer" target="_blank">not-spots</a>, while <a href="https://www.ericsson.com/en/blog/2021/11/delivering-consistent-high-performance-indoor-5g-experience" rel="noopener noreferrer" target="_blank">indoor coverage</a> can be particularly problematic, especially when the building is clad with materials that are near-impenetrable to <a href="https://spectrum.ieee.org/tag/radio-waves">radio waves.
</a></p><p>
	Broadly, there are two main ways for telecoms to shore up the current <a href="https://spectrum.ieee.org/tag/digital-divide">digital divide</a>. The first is regulatory. Government funding, whether through new regulation and existing grants already on the books, can go to telecom providers in many regions that have been identified for broadband expansion. Indirect sources of funding should not be overlooked either—for instance, to allow operators to retain radio-spectrum license fees and without paying auction fees.
</p><p>
	The second component is technological. Lower-cost rural telecom deployments could include 
	<a href="https://spectrum.ieee.org/satellite-cellphone-starlink" target="_self">satellite Internet deployments</a>. Better indoor coverage can happen via <a href="https://spectrum.ieee.org/private-5g-vodafone" target="_self">private 5G networks</a> or through improved access to existing and enhanced <a href="https://spectrum.ieee.org/tag/wi-fi">Wi-Fi.
</a></p><p>
	The above scenarios represent a major change of direction—from an industry built around innovating a new mobile generation every decade toward an industry focused on delivering lower prices and increased reliability. The coming 6G age might not be what telecom forecasters imagine. Its dawn may not herald a bold summit push toward 10 Gb/s and beyond. Instead, the 6G age could usher in something closer to an adjustment period, with the greatest opportunities for those who best understand how to benefit from the end of the era of rapid bandwidth growth in <a href="https://spectrum.ieee.org/tag/telecom-history">telecom history</a>. 
	<span></span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Record-breaking neutrino is most energetic ever detected (204 pts)]]></title>
            <link>https://www.nature.com/articles/d41586-025-00444-1</link>
            <guid>43027150</guid>
            <pubDate>Wed, 12 Feb 2025 16:52:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nature.com/articles/d41586-025-00444-1">https://www.nature.com/articles/d41586-025-00444-1</a>, See on <a href="https://news.ycombinator.com/item?id=43027150">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-container-type="article" data-component="article-container" id="content">
        
            
        

        
            
        
        
            
                <main>
                    <article data-track-component="news" lang="en">
                        
<div>
    <header>
        <div>
            <ul data-test="article-identifier">
                <li data-test="article-category"><span>NEWS</span></li>
                <li><time datetime="2025-02-12">12 February 2025</time></li>
                
            </ul>

            

            <div>
                
                <p>
                    Although still under construction, the sea-floor KM3NeT detector spotted a neutrino 20 times more powerful than any previously detected.
                </p>
            </div>
        </div>
        
            <div data-test="author-info">
    <ol>
        
            <li>
                
                    <span>Davide Castelvecchi</span>
                
                
                
                    
                
            </li>
        
    </ol>
</div>
        
    </header>
    
</div>

            
            


        
            
                
                    
                
            

            
                
                <div data-test="access-teaser"> <figure><picture><source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_50625564.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_50625564.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px"><img alt="Crew members make final inspections of a KM3NeT Detection Unit and Launcher vehicle module before deployed from the ship's deck." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_50625564.jpg"><figcaption><p><span>Engineers prepare to add a KM3NeT module to the network of sea-floor detectors. </span><span>Credit: Paschal Coyle/CNRS</span></p></figcaption></picture></figure><p>Astrophysicists have observed the most energetic neutrino ever. The particle — which probably came from a distant galaxy — was spotted by the Cubic Kilometre Neutrino Telescope (KM3NeT), a collection of light-detecting glass spheres on the floor of the Mediterranean Sea, on 13 February 2023. Researchers monitoring the telescope did not notice the detection until early 2024, when they completed the first analysis of their data. They <a href="https://www.nature.com/articles/d41586-024-02074-5" data-track="click" data-label="https://www.nature.com/articles/d41586-024-02074-5" data-track-category="body text link">unveiled it as a potentially record event last year</a> at a conference in Milan, Italy, but did not disclose details such as the timing, direction or energy of the neutrino.</p><p>“We had to convince ourselves that it wasn’t something strange or weird with the telescope,” says Paschal Coyle, a neutrino physicist at Aix-Marseille University in France and KM3NeT spokesperson. The result was published on 12 February in <i>Nature</i><sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup>, and will be described in four preprints due to be posted on the arXiv preprint server.</p><h2>High-energy neutrinos</h2><p>Neutrinos are electrically neutral particles more than one million times lighter than an electron. They are typically produced in nuclear reactions such as those at the centre of the Sun, from which they emerge with energies on the order of millions of electronvolts (10<sup>6</sup> eV). But for more than 10 years, researchers have been recording neutrinos carrying unprecedented energies of up to several quadrillion electronvolts (10<sup>15</sup> eV, or 1 petaelectronvolt), which are thought to originate in distant galaxies. (The most energetic particle ever detected, at 320,000 PeV, was not a neutrino but a cosmic ray dubbed <a href="https://www.nature.com/articles/d41586-023-03677-0" data-track="click" data-label="https://www.nature.com/articles/d41586-023-03677-0" data-track-category="body text link">the Oh-My-God particle</a>.)</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-024-02074-5" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_50617414.jpg"><p>‘Fantastic’ particle could be most energetic neutrino ever detected</p></a></article><p>KM3NeT consists of strings of sensitive light detectors anchored to the sea floor at a depth of around 3,500 metres off the coast of the Italian island of Sicily, as well as in a second, smaller array near Toulon, France. These sensors pick up light emitted by high-energy, electrically charged particles such as muons. Muons are continuously raining down on Earth’s surface, because they are produced when cosmic rays hit air molecules. But occasionally, a cosmic neutrino that smashes into the planet’s surface also produces a muon.</p><p>In the February 2023 event detected by the Sicily observatory, the team estimated that the muon carried 120 PeV of energy, on the basis of the unusual amount of light it produced. The particle’s path was close to horizontal with respect to Earth’s surface and travelled eastwards, towards Greece.</p><figure><picture><source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_50625836.png?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_50625836.png?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px"><img alt="SEA-FLOOR SENSORS. Graphic showing the trajectory of the particle detected by the Cubic Kilometre Neutrino Telescope." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_50625836.png"><figcaption><p><span>Source: Ref. 1</span><span>Source: Aiello, S. <i>et al.</i> <i>Nature</i> <b>638</b>, 376–382 (2025).</span></p></figcaption></picture></figure></div>
            
                <p><em>doi: https://doi.org/10.1038/d41586-025-00444-1</em></p>

            <div id="references" aria-labelledby="Bib1"><h2 id="Bib1">References</h2></div>
            
                
            

            
                <h2 id="related-articles">Related Articles</h2>
                
    <ul>
        
            <li>
                <p>
                    <a href="https://www.nature.com/articles/d41586-023-03677-0" data-track="click" data-track-label="related article (rank:0)">
                        
                            <img loading="lazy" src="https://media.nature.com/lw100/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_27329452.png" alt="">
                        
                        The most powerful cosmic ray since the Oh-My-God particle puzzles scientists
                    </a>
                </p>
            </li>
        
            <li>
                <p>
                    <a href="https://www.nature.com/articles/d41586-024-02074-5" data-track="click" data-track-label="related article (rank:1)">
                        
                            <img loading="lazy" src="https://media.nature.com/lw100/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_50617414.jpg" alt="">
                        
                        ‘Fantastic’ particle could be most energetic neutrino ever detected
                    </a>
                </p>
            </li>
        
            <li>
                <p>
                    <a href="https://www.nature.com/articles/d41586-023-02427-6" data-track="click" data-track-label="related article (rank:2)">
                        
                            <img loading="lazy" src="https://media.nature.com/lw100/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_26250290.jpg" alt="">
                        
                        The most unusual portrait of the Milky Way yet: mapping the Galaxy with neutrinos
                    </a>
                </p>
            </li>
        
            <li>
                <p>
                    <a href="https://www.nature.com/articles/d41586-022-00425-8" data-track="click" data-track-label="related article (rank:3)">
                        
                            <img loading="lazy" src="https://media.nature.com/lw100/magazine-assets/d41586-025-00444-1/d41586-025-00444-1_23948840.jpg" alt="">
                        
                        A supernova could light up the Milky Way at any time. Astronomers will be watching
                    </a>
                </p>
            </li>
        
    </ul>

            

            
                <h2 id="subjects">Subjects</h2>
                
    

            <section data-component-latest-content="true" data-track="in-view" data-track-action="in-view" data-track-category="latest content" data-track-label="visible">
    <h2 id="tablist-heading">Latest on:</h2>
    
</section>




            

        
            
                    </article>
                </main>
            
        

        
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How Nissan and Honda's $60B merger talks collapsed (153 pts)]]></title>
            <link>https://www.reuters.com/markets/deals/inside-collapse-nissan-hondas-60-billion-mega-deal-2025-02-12/</link>
            <guid>43026934</guid>
            <pubDate>Wed, 12 Feb 2025 16:32:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/markets/deals/inside-collapse-nissan-hondas-60-billion-mega-deal-2025-02-12/">https://www.reuters.com/markets/deals/inside-collapse-nissan-hondas-60-billion-mega-deal-2025-02-12/</a>, See on <a href="https://news.ycombinator.com/item?id=43026934">Hacker News</a></p>
Couldn't get https://www.reuters.com/markets/deals/inside-collapse-nissan-hondas-60-billion-mega-deal-2025-02-12/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[The Prophet of Parking: A eulogy for the great Donald Shoup (253 pts)]]></title>
            <link>https://www.worksinprogress.news/p/the-prophet-of-parking</link>
            <guid>43026920</guid>
            <pubDate>Wed, 12 Feb 2025 16:31:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.worksinprogress.news/p/the-prophet-of-parking">https://www.worksinprogress.news/p/the-prophet-of-parking</a>, See on <a href="https://news.ycombinator.com/item?id=43026920">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em><span>Professor Donald Shoup died on February 6th. </span><a href="https://x.com/mnolangray" rel="">M. Nolan Gray</a><span> explains how his mentor changed political economy of parking, and cities themselves, forever.</span></em></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg" width="1456" height="1065" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1065,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2338971,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75ed47c7-e9a4-4761-ac58-3768ac8291a4_3025x2212.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>As we might say in Los Angeles, Donald Shoup was a professor out of central casting.</p><p>His wardrobe consisted of tweed sport coats, earth-tone khakis, and unfashionably broad ties. He had a long, scruffy beard and spoke in a plodding, measured way. His stalling quirk was a long, ponderous ‘well, yes…’. For much of his career, he biked to campus. From his stuffy office on the fifth floor of the Luskin School of Public Affairs at UCLA, he had chosen to make parking the focus of his studies—an impossibly boring topic, even by the low standards of a city planning department.</p><p>Yet by the final accounting, Shoup has a strong claim on being the scholar who will have had the greatest impact on your day-to-day life, radically changing how we approach the unglamorous problem of how and where we park our cars—and, in turn, where we can live, how we move about, and the form our cities take.</p><p><span>Inspired by his work, San Francisco formally adopted demand-based pricing for curb parking in 2017. That same year, Hartford and Buffalo abolished minimum off-street parking requirements citywide. In 2022, California abolished them within a half-mile of transit statewide; around the same time, New Zealand abolished them nationwide. With religious zeal, an </span><a href="https://parkingreform.org/?gad_source=1&amp;gclid=CjwKCAiAnpy9BhAkEiwA-P8N4qY59-S8EHnWZJpXtajYkCofJDpiWqIDSLlG0x1rjC3SoaXdRQxa4hoCXXgQAvD_BwE" rel="">army</a><span> of self-identified </span><em><a href="https://www.facebook.com/groups/70015940360/" rel="">shoupistas</a></em><span> has gone on to implement his ideas in thousands of cities across dozens of countries—and this is likely only the beginning.</span></p><p>The old professor resisted attempts to hitch his ideas to any particular creed—except Georgism, that school so preoccupied with how we price land. Parking reform is neither conservative nor progressive, neither libertarian nor socialist. (It’s all of these things, Shoup certainly would have argued.) He definitely wouldn’t have identified as a Marxist. And yet, he fully realized that old exhortation from Marx that ‘philosophers have only interpreted the world in various ways; the point is to change it.’</p><p>In a world full of professors with fine enough ideas, what made Shoup different?</p><p><span>The premise of </span><em>The High Cost of Free Parking</em><span>, Shoup’s 800-page </span><em>magnum opus</em><span>, is as simple as it is provocative: parking is nearly always too cheap.</span></p><p><span>An unfortunate fact about cars is that they occupy a lot of space. Worse yet, they only spend about five percent of their lifespan in motion. The remaining 95 percent of the time, we must find a place to put them. When Americans first started buying cars </span><em>en masse</em><span> in the early twentieth century, the solution seemed obvious: park them along the curb. In the most radical shift in city planning in human history, urban streets—once the site of gathering, selling, and playing—were redesigned around moving and storing cars.</span></p><p>The result was a classic ‘tragedy of the commons’ situation: When a good is unpriced, we naturally overconsume it. In pure economics terms, the demand for a good at a price of zero nearly always exceeds the supply, resulting in scarcity. Hence, the ‘tragedy.’ In the case of curb parking, unpriced curbs rapidly fill up with cars whose drivers have no incentive to free up space. Thus, the state of a typical residential street: a travel lane or two framed by two parking lanes lined with cars that rarely move.</p><p><span>All of this ‘free’ curb parking is hardly free. Rather, the typical driver must instead spend time cruising around, looking for parking. One </span><a href="http://shoup.bol.ucla.edu/CruisingForParkingAccess.pdf" rel="">survey</a><span> of the literature suggests that drivers in the typical American city spend an average of eight minutes looking for parking at the end of each trip. If a driver makes seven trips like this a week, she will waste nearly 49 hours each year merely looking for parking. If she values her time at the median US hourly wage, these delays will cost $1,898.75.</span></p><p><span>The hidden costs of ‘free’ curb parking only start there. The same surveys suggest that around a </span><em>third</em><span> of all drivers in the typical American city are actively cruising for parking. The share is likely even higher in dense residential neighborhoods like South Philadelphia or Boston’s Back Bay. If we could flip a switch and reduce traffic by 30 percent—with all the attendant costs to air quality, street safety, honking, wasted time, and street damage—we would almost certainly do it.</span></p><p>As the token economist in UCLA’s planning department, Shoup recognized the solution: price the commons. If you set a high enough price, at least one spot will always be available. Nobody will have any incentive to waste their time cruising. Better yet, if prices can fluctuate in response to demand, drivers will be incentivized to adjust their trips efficiently. Those with options could instead take the bus, minimize driving at peak times, or park a little further away and walk the rest of the way. Thus, the demand and supply would naturally equilibrate.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png" width="1267" height="1127" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/eb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1127,&quot;width&quot;:1267,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb16a056-f336-48a5-91f4-69dbd7f74b8e_1267x1127.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em><span>From Carl C. Magee’s 1935 patent for a coin-operated parking meter. (Source: </span><a href="https://patents.google.com/patent/US2118318A/en" rel="">Google Patents</a><span>)</span></em></figcaption></figure></div><p><span>In fits and starts, cities have tried to price curb parking. In 1935, Oklahoma City installed a newfangled device called the ‘Park-O-Meter’ at the behest of downtown merchants with a financial interest in parking turnover. Absent pricing, commuters would fill up the spots each morning, boxing out shoppers. Yet properly priced curb parking remains the exception. The vast majority of curb parking remains ‘free.’ In New York City, where every square inch of land is enormously valuable, </span><a href="http://park-o-meter/" rel="">97 percent</a><span> of curb parking is unpriced.</span></p><p><span>Why? In the </span><em>Seinfeld</em><span> episode aptly named ‘The Parking Space,’ George balks at Elaine’s suggestion that he pull into a paid garage rather than waste time cruising. ‘It's like going to a prostitute. Why should I pay when, if I apply myself, maybe I can get it for free?’ To the extent </span><em>homo sapien</em><span> falls short of </span><em>homo economicus</em><span>, the politics of pricing curb parking are bleak. We struggle to make sense of the time value of money and hate paying for something we had thought of as free—even if doing so would improve our lives. (Not to imply that you should pay for sex.)</span></p><p><span>Instead, American city planners turned to minimum off-street parking requirements, ‘solving’ the parking problem by mandating that</span><em> </em><span>vast amounts</span><em> </em><span>of it be built as part of any new residential or commercial development. In 1923, Columbus, Ohio, became the first city to require that any new apartment building provide each unit with at least one off-street parking space. Over the next century, such mandates rapidly spread worldwide, becoming a mainstay of modern land-use planning.</span></p><p><span>Today, residential developers are nearly always required to supply one parking space per housing unit. Commercial developers must build anywhere from 2.5 to 10 parking spaces per 1,000 square feet (93 square meters) of office or retail space. These rules are frequently </span><a href="https://escholarship.org/uc/item/4z3061mk" rel="">amusing</a><span> in a byzantine way: In one city, gyms must provide one parking space for every 2,500 gallons of water in a pool, as if deeper pools invite more patrons. In another city, nunneries must provide one parking space for every 10 nuns. What happened to church vans?</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png" width="1456" height="618" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:618,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fae17e1ba-c28d-40c6-b672-af7fcf9d154e_1600x679.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em><span>A sample of Houston’s minimum off-street parking requirements. Note that at least a few of these uses exist to get patrons drunk and in a state where they cannot safely drive. (Source: </span><a href="https://www.houstontx.gov/planning/DevelopRegs/docs_pdfs/parking_req.pdf" rel="">City of Houston</a><span>)</span></em></figcaption></figure></div><p><span>Most cities set their requirements based on the </span><em>Parking Generation Manual</em><span>, a $500 tome published by the Institute of Transportation Engineers. The book estimates parking demand for everything from airports to wineries. At first blush, it seems very scientific, replete with charts, numbers, and statistical jargon. But the typical estimate in the Fifth Edition is based on fewer than 10 observations, often with no clear correlation—that is, </span><a href="https://www.accessmagazine.org/spring-2002/roughly-right-precisely-wrong/" rel="">pseudoscience</a><span>. If you submitted such work as part of an introductory statistics course, the professor would likely ask you to come to his office hours. And yet it became official policy in cities the world over.</span></p><p>Nor are minimum parking requirements even needed: developers have the knowledge and incentives to provide the appropriate amount of off-street parking. If a developer builds too little parking, she will struggle to attract tenants and command lower rents. If she builds too much parking, she will find she cannot compete with other developers on cost. In contexts where no minimum requirements exist, but parking is still needed, developers virtually always provide it. For all their faults, markets have a way of solving issues like this.</p><p><span>The practical effect of these requirements is to force the construction of far more off-street parking than could ever conceivably be necessary. As the Strong Towners have long </span><a href="https://www.strongtowns.org/blackfridayparking" rel="">documented</a><span>, suburban shopping mall parking lots are so cartoonishly overbuilt as a result of minimum off-street parking requirements, that they usually sit empty even on Black Friday, the busiest shopping day of the year.</span></p><p>Minimum parking requirements might seem innocuous. But it’s hard to overstate the deleterious effect they’ve had on the form of our cities. In neighborhoods built before the car, they made a wave of demolitions legally necessary. Today, over a third of the typical American downtown is now taken up by surface parking lots—and that’s before considering parking garages. In the suburbs, built out consistent with these rules, the result is a landscape of garden apartments, strip malls, and office parks surrounded by acres of parking lots that are virtually never full.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png" width="1456" height="884" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3636605c-3a62-4642-b6fe-12483585439b_1600x971.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:884,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3636605c-3a62-4642-b6fe-12483585439b_1600x971.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em><span>In Lexington, Kentucky—a typical example—approximately 38 percent of downtown is covered by surface parking. Happily, the city scrapped minimum off-street parking requirements citywide in 2022. (Source: </span><a href="https://parkingreform.org/resources/parking-lot-map/" rel="">Parking Reform Network</a><span>)</span></em></figcaption></figure></div><p><span>Of course, none of this off-street parking is ‘free’ either. All of this parking takes up space and increases development costs. In the worst case—as with the adaptive reuse of historic buildings or the construction of infill housing—it may make development altogether infeasible. In the best case, it merely makes development more expensive. Estimates </span><a href="https://la.streetsblog.org/2014/10/17/new-ca-database-shows-how-much-parking-costs-and-how-little-its-used" rel="">vary</a><span>, but each additional parking space adds as much as $20,000, $50,000, or $80,000 to the cost of a project, based on whether it involves a surface lot, above-ground garage, or below-ground garage, respectively.</span></p><p>These costs don’t magically disappear. Instead, they translate into higher prices. You might think that Whole Foods parking spot was free, but you can be sure you’re paying for it in more expensive groceries. The impact of minimum parking requirements on housing affordability has earned them the special ire of YIMBYs, who would like to see higher rates of construction and lower prices.</p><p>To understand why, imagine a 675 square foot (63 square meter) two-bedroom apartment—hardly glamorous, but the sort of accessible housing many cities need to get costs under control. In much of the US, a developer could profitably bring this unit to market for under $300,000. But if the city imposes a parking requirement of two spaces per unit or one space per bedroom, it could increase the cost of the unit by as much as a third, requiring future residents to consume as much parking space as they do living space. Many families might happily make that tradeoff. But the thing about a requirement is that you don’t have a choice.</p><p><span>Indeed, the most pernicious thing about these requirements is that they write automobile dependence into law. Perhaps most people like living amid vast parking lots and towering parking garages, spending thousands of dollars each year to shuttle themselves by car. Perhaps nobody wants a smaller, more affordable apartment in a neighborhood where they can safely walk to a storefront café or barbershop, or hop on a subway downtown. Less sophisticated observers insist that everything that exists is merely what consumers </span><em>prefer</em><span>. But in a world without choices, who is to say?</span></p><p>At this point, the typical policy essay would end: In my infinite wisdom, I have shown yet another way in which the world is bad. But I’m sorry to say that the politics of this suboptimal equilibrium are solid. Unfortunately, it’s all too easy for planners to keep curb parking ‘free,’ no matter the harm, while mandating the construction of endless ‘free’ off-street parking that will quietly increase costs in every other aspect of life. Oh, well.</p><p><span>But that’s not where our story ends. In 2005, Donald Shoup published </span><em><a href="https://www.amazon.com/High-Cost-Free-Parking-Updated/dp/193236496X" rel="">The High Cost of Free Parking</a></em><span>. As an academic treatise, it’s a profoundly weird text: the obligatory scholarly patter about what we </span><em>still don’t know</em><span> is absent. The wonky theory, supply-demand curves, and tables of figures are all there, but they’re punctuated by jokes, media snippets, personal anecdotes, and more than a few peculiar allegorical digressions. Taken collectively, it’s the closest a city planning textbook will ever come to </span><em>House of Leaves</em><span>.</span></p><p>It is also strikingly practical. Shoup empathized with the plight of the typical planner: Yes, we know that minimum off-street parking requirements cause all sorts of problems. But if we don’t impose them, we’ll need to price curb parking to avoid a tragedy of the commons situation—and pricing curb parking is beyond the pale.</p><p>His solution to this political problem would end up being his greatest contribution: parking benefits districts. If you take curb parking revenue and invest it in conspicuous local improvements, such as street trees, repaved sidewalks, or regular street sweeping, locals will not only support pricing curb parking—they will often demand it. Once a parking benefits district is established, the politics of pricing curb parking will be secure, and planners can remove minimum off-street parking requirements without fear of backlash.</p><p>As Shoup would readily admit, the idea wasn’t handed down from heaven—though Pasadena comes close. In 1993, the city started installing parking meters in what was then a rundown downtown. Customers, merchants, and landlords balked. As a compromise, city leaders agreed to allocate a share of the revenue to local improvements. Streets were repaved, palm trees replanted, graffiti removed, and sidewalks regularly power-washed. Thirty years later, Old Pasadena is one of the poshest shopping districts in North America.</p><p><span>The release of </span><em>The High Cost of Free Parking </em><span>in 2005 immediately generated buzz among practicing city planners. By then, Shoup had spent decades training generations of planning practitioners and scholars—including </span><a href="https://www.lewis.ucla.edu/research/its-time-to-end-single-family-zoning/" rel="">Michael Manville</a><span>, the current chair of the UCLA planning department—turning parking studies into a lively discipline. In its official </span><a href="https://www.planning.org/timeline/" rel="">timeline</a><span>, the American Planning Association recognizes the book’s publication as one of the seven most important things to happen in planning over the past 25 years.</span></p><p><span>Shortly after its publication, </span><a href="https://siegman.biz/" rel="">Patrick Siegman</a><span>, a planning consultant and early Shoup acolyte, went on a rant about parking at Zeitgeist, a popular bicyclist bar in San Francisco. His conversation partner, local bicycling advocate Dave Snyder </span><a href="https://streetsblog.libsyn.com/replay-the-first-shoupista" rel="">interjected</a><span>: ‘Oh, you’re just a </span><em>shoupista</em><span>.’ The name stuck. A movement had been born. At the depths of the Great Recession in 2008—planners no doubt finding themselves with a lot of free time—a group of </span><em>shoupistas</em><span> started a </span><a href="https://www.facebook.com/groups/70015940360/" rel="">Facebook Group</a><span> to take turns ranting at each other about parking.</span></p><p><span>Across California, planners wasted no time rebuilding parking policy along </span><em>shoupista </em><span>lines.</span><em> </em><span>In 2005, Redwood City overhauled its downtown parking management with the goal of ensuring that at least one or two spaces were always available on each block, eliminating cruising and improving walkability. Closer to home, Ventura started pricing curb parking in 2010, directing part of the revenue into free public WiFi. In Los Angeles, LA Express Park brought sanity to downtown parking in 2012. It was a revolution from above.</span></p><p>In retrospect, these were just a trial run for what would be the most thoroughgoing implementation of Shoup’s ideas: SFPark. Program director Jay Primus’ goal was not merely to install parking meters in a few busy areas. Rather, the goal was to take the program citywide, with prices fluctuating based on demand using sensor-based monitoring. Prices would then be communicated via an app, allowing drivers to make tradeoffs in real time.</p><p>The result was a rare win for San Francisco governance: We know from pilot areas that implementing demand-based pricing reduced congestion and parking citations while speeding up transit and increasing overall sales tax revenue. The program is now widely regarded as a model for parking management.</p><p><span>Alongside these California developments, the revolution was being </span><a href="https://journals.sagepub.com/doi/10.1177/0739456X221141317" rel="">exported</a><span>, with </span><em>shoupistas</em><span> guiding the creation of parking benefits districts in cities like Bangalore, Beijing, and Mexico City.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png" width="1024" height="768" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/caead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:768,&quot;width&quot;:1024,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcaead43d-4412-45eb-a41b-2a1e489dd9b5_1024x768.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>A </em><span>shoupista</span><em> Valentine’s Day card. (Source: The Shoupista Facebook Group)</em></figcaption></figure></div><p><span>Then a strange thing happened: normal people started becoming </span><em>shoupistas</em><span>. In 2015, a cartoon version of Shoup </span><a href="https://www.youtube.com/watch?v=skm6hp99-5A&amp;t=3s&amp;ab_channel=ChrisMcCahill" rel="">appeared</a><span> in an episode of the hit TV show </span><em>Adam Ruins Everything</em><span>, making the case against minimum off-street parking requirements. In 2017, a </span><em>Vox</em><span> video exploring Shoup’s ideas quickly garnered millions of views. The old </span><em>shoupista</em><span> Facebook Group swelled from hundreds of members to thousands, with members producing an </span><a href="https://scontent-lax3-1.xx.fbcdn.net/v/t39.30808-6/472835056_10112521912389133_1907697480871069690_n.jpg?_nc_cat=105&amp;ccb=1-7&amp;_nc_sid=536f4a&amp;_nc_ohc=6J1PZXBAkMoQ7kNvgGmyA5Z&amp;_nc_oc=Adjsk22lMgeF585VGxd3slmElIZn-_FGUNeq_lRID3doQ8v9rNkuzyT4Sb6lrxsHFZPJai_2dfsHoJ61k4iUvFzZ&amp;_nc_zt=23&amp;_nc_ht=scontent-lax3-1.xx&amp;_nc_gid=AYdh2RdoA6xyCExiglK1eus&amp;oh=00_AYDGQmGoPcnpGcn61k87vcnyRDlyTBe_mfLqejIDYW4Ugg&amp;oe=67AF4C58" rel="">endless</a><span> </span><a href="https://scontent-lax3-2.xx.fbcdn.net/v/t39.30808-6/465385255_10164371213058916_846657786274661176_n.jpg?_nc_cat=111&amp;ccb=1-7&amp;_nc_sid=aa7b47&amp;_nc_ohc=MPXTGwKOikAQ7kNvgFPK9D2&amp;_nc_oc=AdjbqIdmzi6iwNBO_pexqGsY7oYvJsJTQOTS9IHw4iSZkqMytvccNCzA0fAtaodbcXWVG05QeR2DHfktHAdgabjS&amp;_nc_zt=23&amp;_nc_ht=scontent-lax3-2.xx&amp;_nc_gid=AjenRlM1hz6EoTcMGN1MEOQ&amp;oh=00_AYDZ56om1ruZ6sZYsvK-bXXoqr4buXSW-zDaoX0LXlA4cA&amp;oe=67AF530D" rel="">stream</a><span> of </span><a href="https://www.facebook.com/photo/?fbid=10161763003985470&amp;set=g.70015940360" rel="">memes</a><span>. </span><em>Shoupistas</em><span> eagerly shared </span><a href="https://scontent-lax3-1.xx.fbcdn.net/v/t1.6435-9/57032107_10156619873917600_5975440771740860416_n.jpg?_nc_cat=110&amp;ccb=1-7&amp;_nc_sid=536f4a&amp;_nc_ohc=6uAzIbqzkKwQ7kNvgEnvYof&amp;_nc_oc=AdgIblkJdRpiHwQ7vc5MTV6_yXImTPBmYDVDwnBWX7jq82LFU8WIKRGRbq2u6fWdN-zQvUT2WhDEL19-JRczL9Yc&amp;_nc_zt=23&amp;_nc_ht=scontent-lax3-1.xx&amp;_nc_gid=AhIatz2ndrmaQjJaLTTUIjT&amp;oh=00_AYC-1GHkmuTJE2wmCB1hubW8r1TNWhphVGHAIIqHi7Plrw&amp;oe=67D0CD54" rel="">photos</a><span> of </span><a href="https://www.facebook.com/photo/?fbid=10216150691895086&amp;set=g.70015940360" rel="">themselves</a><span> with Shoup, </span><a href="https://scontent-lax3-2.xx.fbcdn.net/v/t39.30808-6/398192215_10168314816635394_8505670707992304400_n.jpg?_nc_cat=106&amp;ccb=1-7&amp;_nc_sid=aa7b47&amp;_nc_ohc=cEdoBcZIrVQQ7kNvgEueGwv&amp;_nc_oc=AdgdeGXt0I1cRt7k775sF80H2TnDXEc4TDrAeKoQT_-VfwoAE6kybxLlObxT8-FxeDHYGSlgEckMktcuEGh8yh6V&amp;_nc_zt=23&amp;_nc_ht=scontent-lax3-2.xx&amp;_nc_gid=AjW6nXdrQBJWz_QJHj1nA4B&amp;oh=00_AYCpDktw_GpPm_W4_qugdJeVZhfo-ZUojsUkXmkciSm6BQ&amp;oe=67AF573C" rel="">dressing</a><span> up as Shoup for Halloween, and their tattered </span><a href="https://www.facebook.com/photo/?fbid=10160103553021942&amp;set=g.70015940360" rel="">copies</a><span> of </span><em>The High Cost of Free Parking</em><span>.</span></p><p><span>Back in the real world, the rising YIMBY movement enshrined Shoup as a minor saint and made abolishing minimum off-street parking requirements one of its top priorities. In 2017, the dam broke, with </span><a href="https://archplan.buffalo.edu/research/research-centers/renew.host.html/content/shared/ap/articles/work/2017/repealing-minimum-parking-hess.detail.html" rel="">Buffalo</a><span>, New York, and </span><a href="https://www.cnu.org/publicsquare/2022/12/05/much-its-downtown-gone-hartford-leads-way-parking-reform" rel="">Hartford</a><span>, Connecticut, being the first cities to abolish minimum off-street parking minimums—citywide, and for all uses. In 2020, they were abolished nationwide in New Zealand. And in 2022, California </span><a href="https://cayimby.org/legislation/ab-2097/" rel="">abolished</a><span> minimum off-street parking requirements within a half-mile of transit statewide.</span></p><p><span>At the time of Shoup’s passing, 99 cities in eight countries had completely abolished minimum off-street parking requirements. Thousands more cities have made incremental progress in rolling back these mandates. In 2019, YIMBY activist Tony Jordan founded the </span><a href="https://parkingreform.org/resources/mandates-map/" rel="">Parking Reform Network</a><span>, institutionalizing the revolution—and kicking it into overdrive.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png" width="1456" height="942" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:942,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F953a91ba-a147-4d20-9598-c3b253bffada_1600x1035.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em><span>A map of North American cities that have abolished minimum off-street parking requirements citywide. My sincere apologies for cutting out Anchorage, which did so in 2022. (Source: </span><a href="https://parkingreform.org/resources/mandates-map/" rel="">Parking Reform Network</a><span>)</span></em></figcaption></figure></div><p>In 2005, ideas like implementing dynamic curb pricing or abolishing minimum off-street parking requirements were unthinkable. A mere twenty years later, they now seem inevitable.</p><p><span>Academia is overflowing with hard-working professors with clever ideas that go nowhere. Yet Donald Shoup, perhaps the most unlikely candidate, somehow managed to kick off an international movement and usher in a wave of policy reform. What gives? In my capacity as the teaching assistant for his legendary ‘Parking and the City’ course at UCLA these past four years, I spent a lot of time puzzling over this question. Every quarter I helped teach the course, we had to expand</span><em> </em><span>the capacity to let in students desperate to take it. I have come to at least three conclusions.</span></p><p><span>First, Shoup picked a topic that was simultaneously important, tractable, and neglected. If you ever had more than a 30-minute conversation with him, you no doubt heard the following </span><em>shoupism</em><span>: ‘I’m a bottom feeder. But there’s a lot of food down here.’ The way we manage parking is of profound importance to nearly every aspect of our lives. It’s also something local planners have a lot of control over. And yet, before Shoup took up the issue, there was virtually no scholarship on parking—and even less in the way of activism around the issue. We could use a Donald Shoup on many more issues.</span></p><p><span>The addicting thing about </span><em>shoupism</em><span> is that, once you’re on board, you start to see parking everywhere: A story in the newspaper about two drivers getting in a fight over parking? Well, the parking must have been underpriced. (Henry Grabar starts his excellent </span><a href="https://www.amazon.com/Paved-Paradise-Parking-Explains-World-ebook/dp/B0B9657N8R?crid=WX6CWUYNQ9O1&amp;dib=eyJ2IjoiMSJ9.NMGoF--EHvwqkI4jnnTDimMBv7rxjxn-vjI0yB20-casBXi6MBQ5rnxu7admCuO3.vB4jYDonGpO6S2akcpZLI1ep0vaKMviCKvbL47OjOt8&amp;dib_tag=se&amp;keywords=henry+grabar+-+paved+paradise&amp;qid=1739161537&amp;sprefix=henry+grabar%2Caps%2C151&amp;sr=8-1" rel="">book</a><span> on parking by inviting the reader to try to make sense of such a seemingly senseless story.) Finding yourself depressed by yet another town gutted by parking? That’s the minimum off-street parking requirements for you. You know you’ve fully come around when you start taking strange pleasure in paying for parking.</span></p><p><span>Second, Shoup exercised unparalleled message discipline. He </span><a href="https://www.researchgate.net/profile/Donald-Shoup-2/publication/235359735_Problems_with_Parking_Requirements_in_Zoning_Ordinances/links/00b7d53c67e54d6780000000/Problems-with-Parking-Requirements-in-Zoning-Ordinances.pdf?origin=journalDetail&amp;_tp=eyJwYWdlIjoiam91cm5hbERldGFpbCJ9" rel="">published</a><span> his first paper on the topic in 1978 and spent the next half-century writing on little else. Aware of the responsibility of his celebrity, Shoup studiously avoided taking a position on almost any other issue. When protesters and counter-protesters flooded UCLA’s campus in response to the Israel-Palestine conflict, I asked for his take. ‘I’m just wondering where they all parked,’ he replied.</span></p><p><span>Indeed, Shoup worked hard to make his ideas palatable across the political spectrum. Are you a conservative? People should pay for the services they consume. Are you a progressive? All this unnecessary driving can’t be good for the environment. Are you a libertarian? Clearly, the solution to scarcity is prices and markets. Are you a socialist? Let’s stop privatizing the public realm by turning it into a free parking lot. As a result, the typical </span><em>shoupista</em><span> gathering is an oasis of peaceful coexistence.</span></p><p>Finally, Shoup built up the next generation. He not only trained many young planning practitioners and scholars—he often bent over backward to help them start their careers. Shoup eagerly responded to emails from planners in even the most unremarkable small towns and often helped young scholars to co-author some of their first research on parking. In his seminars, students were encouraged to publish their work via op-eds or academic papers. Regularly, I hear from former students telling me it changed the course of their careers.</p><p><span>Nor did Shoup shy away from activism: When the aforementioned California </span><a href="https://cayimby.org/legislation/ab-2097/" rel="">bill</a><span> was in trouble, he sprung into action, calling everyone in Sacramento who would listen. (The bill’s author, </span><a href="https://x.com/LauraFriedmanCA/status/1888282324116389944" rel="">Laura Friedman</a><span>, is now one of at least a dozen </span><a href="https://lede-admin.usa.streetsblog.org/wp-content/uploads/sites/46/2021/11/ilhan-omar-with-shoup-book.jpg?w=1420&amp;quality=75" rel="">self-identified</a><span> </span><em>shoupistas</em><span> in Congress.) In the last quarter Shoup taught, he had students pestering UCLA administrators with memos </span><a href="https://www.theatlantic.com/ideas/archive/2023/08/california-vehicular-homelessness-car-dwelling-los-angeles/674901/" rel="">explaining</a><span> why they should designate safe parking sites for homeless students. When Los Angeles seemed poised to end a pandemic-era order allowing outdoor dining on parking lots, he worked with former students to make the </span><a href="https://escholarship.org/uc/item/1p53w0bx" rel="">case</a><span> against a crackdown.</span></p><p>If you were ever trying to visit Shoup on campus, you probably didn’t need to look up his office number. His was the room with the door covered with newspaper comics about parking—and the source of periodic laughter. When my book on zoning was about to come out, Shoup counseled: when you work on a superficially boring topic, you have to start by making it funny. One of Shoup’s favorite ways to open a talk was by noting that ‘in an audience this large, some of you were probably conceived in a parked car.’</p><p>Perhaps being able to laugh at a problem is the first step toward fixing it.</p><p data-attrs="{&quot;url&quot;:&quot;https://www.worksinprogress.news/p/the-prophet-of-parking?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://www.worksinprogress.news/p/the-prophet-of-parking?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Former employees' RSUs at risk after startup's IPO (128 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=43026774</link>
            <guid>43026774</guid>
            <pubDate>Wed, 12 Feb 2025 16:13:41 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=43026774">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="43026774">
      <td><span></span></td>      <td><center><a id="up_43026774" href="https://news.ycombinator.com/vote?id=43026774&amp;how=up&amp;goto=item%3Fid%3D43026774"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=43026774">Ask HN: Former employees' RSUs at risk after startup's IPO</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_43026774">106 points</span> by <a href="https://news.ycombinator.com/user?id=jameskuang">jameskuang</a> <span title="2025-02-12T16:13:41 1739376821"><a href="https://news.ycombinator.com/item?id=43026774">9 hours ago</a></span> <span id="unv_43026774"></span> | <a href="https://news.ycombinator.com/hide?id=43026774&amp;goto=item%3Fid%3D43026774">hide</a> | <a href="https://hn.algolia.com/?query=Ask%20HN%3A%20Former%20employees%27%20RSUs%20at%20risk%20after%20startup%27s%20IPO&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=43026774&amp;auth=b81115b0b2ffd042468a53f6e8b2dd7f990a3b86">favorite</a> | <a href="https://news.ycombinator.com/item?id=43026774">107&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>Hi HN,</p><p>A group of us, former employees of a startup that recently went public on Nasdaq, are seeking advice on how to navigate an unexpected RSU settlement process. We would appreciate insights from those with experience in equity compensation, tax law, or corporate governance.</p><p>* The Situation</p><p>We worked at a startup for several years and were granted Restricted Stock Units (RSUs).
These fully vested upon the company’s IPO in 2024, but the company has set the settlement date as March 15, 2025 (185 days post-IPO, However, we are not allowed to sell the shares until April, if we were to receive them).
This means we will only receive the shares then, but there are some aspects of the process that we are unsure about.</p><p>* Key Questions We Have</p><p>1) Prepaying Taxes in Cash: We have been asked to wire a tax prepayment directly to the company’s bank account before receiving our shares.</p><p>Many of us were expecting a sell-to-cover approach (where some shares are withheld for taxes), which is common.
We are wondering if this approach—requiring a direct tax prepayment—is standard practice.</p><p>2) Forfeiture Clause: The company has stated that if we do not prepay the taxes by March 15, 2025, the RSUs will be permanently forfeited.</p><p>We understand that companies have different ways of handling RSU settlements, but we are curious whether this type of forfeiture clause is common.
Since RSUs are considered compensation, we would like to understand if there are alternative ways companies typically handle tax withholding.</p><p>3) Unclear Tax Calculation Guidance: We have been asked to calculate the withholding tax ourselves based on an estimated stock price.</p><p>However, we have not been provided official guidance on how to do this, which makes us concerned about potential errors.
If we underpay, we need to send more money within one business day. If we overpay, we have to apply for a tax refund later.
We’re wondering how companies typically help employees navigate tax prepayment for RSUs.</p><p>4) Difference Between Current and Former Employees:</p><p>We understand that current employees have access to a sell-to-cover option, while former employees are required to prepay in cash.
We are curious if this type of distinction between current and former employees is typical for post-IPO RSU settlements.</p><p>* Seeking Advice from the Community</p><p>We are not looking to place blame—we understand that every company has its own way of structuring RSU settlements. However, since we were surprised by these requirements, we are hoping to learn from others who have experienced similar situations.</p><p>Some of the key things we would love advice on:</p><p>- Have you encountered an RSU settlement process like this before?
- Are there alternative methods (e.g., net exercise, structured buyback) that could be proposed?
- How do companies usually structure tax withholding for RSUs, particularly for former employees?
- Are there legal or negotiation strategies that might be useful in discussing this with the company?
- We are hoping to engage in a conversation with the company to explore potential solutions that work for everyone. We truly appreciate any insights from this community.</p><p>Thanks in advance!</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Most-Watched Software Engineering Talks of 2024 (267 pts)]]></title>
            <link>https://www.techtalksweekly.io/p/100-most-watched-software-engineering</link>
            <guid>43026590</guid>
            <pubDate>Wed, 12 Feb 2025 15:55:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.techtalksweekly.io/p/100-most-watched-software-engineering">https://www.techtalksweekly.io/p/100-most-watched-software-engineering</a>, See on <a href="https://news.ycombinator.com/item?id=43026590">Hacker News</a></p>
<div id="readability-page-1" class="page"><p><strong><a href="https://www.techtalksweekly.io/p/top-tech-talks-of-2023" rel="">Following tradition</a><span>,</span></strong><span> I put together a complete list of the top 100 most watched Software Engineering talks presented in 2024 across </span><strong><a href="https://www.techtalksweekly.io/p/tech-conferences" rel="">almost every</a></strong><span> Software Engineering conference around the world.</span></p><p><strong>Please note that this list contains the most popular talks of the year, so expect your watchlist to grow!</strong></p><p><span>That said, I’m working on another compilation of the top 5 most viewed talks across each conference that </span><strong><a href="https://www.techtalksweekly.io/p/tech-conferences" rel="">I’m tracking</a></strong><span>. Stay tuned!</span></p><div><li><p><strong><a href="https://youtube.com/watch?v=Pv0cfsastFs" rel="">"Beyond the Hype: A Realistic Look at Large Language Models • Jodie Burchell • GOTO 2024"</a></strong></p><p><strong>+139k views</strong><span> ⸱ 19 Jul 2024 ⸱ 00h 42m 52s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=jC1icupHlMs" rel="">"What Is This OpenTelemetry Thing? • Martin Thwaites • GOTO 2024"</a></strong></p><p><strong>+136k views</strong><span> ⸱ 21 Oct 2024 ⸱ 00h 46m 34s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=9Rdwh0rNaf0" rel="">"DuckDB: Crunching Data Anywhere, From Laptops to Servers • Gabor Szarnyas • GOTO 2024"</a></strong></p><p><strong>+122k views</strong><span> ⸱ 23 Oct 2024 ⸱ 00h 36m 30s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=p9taQkF24Fs" rel="">"Understand the Next Phase of Web Development - Steve Sanderson - NDC London 2024"</a></strong></p><p><strong>+114k views</strong><span> ⸱ 23 Apr 2024 ⸱ 00h 57m 49s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=WiPp9YEBV0Q" rel="">"Filesystem in Rust - Kent Overstreet"</a></strong></p><p><strong>+105k views</strong><span> ⸱ 09 Jul 2024 ⸱ 00h 35m 16s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=VAgT7CY572U" rel="">"A Field Guide to Reliability Engineering at Zalando • Heinrich Hartmann • GOTO 2024"</a></strong></p><p><strong>+94k views</strong><span> ⸱ 18 Oct 2024 ⸱ 00h 50m 53s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=EFXxXFHpS0M" rel="">"Java, How Fast Can You Parse 1 Billion Rows of Weather Data? • Roy van Rijn • GOTO 2024"</a></strong></p><p><strong>+93k views</strong><span> ⸱ 12 Jul 2024 ⸱ 00h 42m 16s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=MznD2DzlQCc" rel="">"Inside GPT – Large Language Models Demystified • Alan Smith • GOTO 2024"</a></strong></p><p><strong>+92k views</strong><span> ⸱ 21 Aug 2024 ⸱ 00h 47m 21s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=fxfjYD_5qUI" rel="">"Serverless Compute at the Heart of Your EDA • Julian Wood • GOTO 2024"</a></strong></p><p><strong>+78k views</strong><span> ⸱ 09 Oct 2024 ⸱ 00h 50m 56s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=05csd82RQcQ" rel="">"What's the Best Big Data Architecture for You? • Christoph Windheuser • GOTO 2024"</a></strong></p><p><strong>+73k views</strong><span> ⸱ 14 Oct 2024 ⸱ 00h 43m 33s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=VLUvfIm9wnQ" rel="">"Complexity is the Gotcha of Event-driven Architecture • David Boyne • GOTO 2024"</a></strong></p><p><strong>+70k views</strong><span> ⸱ 02 Jul 2024 ⸱ 00h 46m 58s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=tgaKAF_eiOg" rel="">"The Best Programmer I Know • Daniel Terhorst-North • GOTO 2024"</a></strong></p><p><strong>+70k views</strong><span> ⸱ 04 Sep 2024 ⸱ 00h 48m 33s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=Jf0cjocP8Wk" rel="">"How to Make Your Website Not Ugly: Basic UX for Programmers - Hilary Stohs-Krause"</a></strong></p><p><strong>+69k views</strong><span> ⸱ 16 Sep 2024 ⸱ 00h 48m 17s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=q3HtUfBLtQI" rel="">"Evolving Serverless Architectures • Emily Shea • GOTO 2024"</a></strong></p><p><strong>+63k views</strong><span> ⸱ 28 Oct 2024 ⸱ 00h 29m 57s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=AJOGzVygGcY" rel="">"What's new in React 19 | Lydia Hallie"</a></strong></p><p><strong>+58k views</strong><span> ⸱ 25 Jul 2024 ⸱ 00h 20m 04s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=VGhg6Tfxb60" rel="">"Implementing Domain Driven Design with Spring by Maciej Walkowiak @ Spring I/O 2024"</a></strong></p><p><strong>+57k views</strong><span> ⸱ 19 Jun 2024 ⸱ 00h 50m 18s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=FNi1-x4pojs" rel="">"Peering Forward - C++’s Next Decade - Herb Sutter - CppCon 2024"</a></strong></p><p><strong>+50k views</strong><span> ⸱ 08 Nov 2024 ⸱ 01h 36m 30s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=mVWQQeSOD0M" rel="">"The Aging Programmer - Kate Gregory - NDC TechTown 2024"</a></strong></p><p><strong>+48k views</strong><span> ⸱ 07 Jan 2025 ⸱ 01h 03m 08s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=-6dt7eJ3cMs" rel="">"Data + AI Summit Keynote Day 1 - Ali Ghodsi, Co-founder and CEO of Databricks"</a></strong></p><p><strong>+48k views</strong><span> ⸱ 12 Jun 2024 ⸱ 00h 28m 02s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=SAsoWmMhX3Q" rel="">"Jensen Huang, Founder and CEO of NVIDIA with Ali Ghodsi, Co-founder and CEO of Databricks"</a></strong></p><p><strong>+46k views</strong><span> ⸱ 14 Jun 2024 ⸱ 00h 25m 02s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=2SXr48OYxbA" rel="">"Turbocharged: Writing High-Performance C# and .NET Code - Steve Gordon - NDC Oslo 2024"</a></strong></p><p><strong>+45k views</strong><span> ⸱ 25 Jul 2024 ⸱ 01h 03m 04s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=GQYd6MWKiLI" rel="">"Correcting Common Async/Await Mistakes in .NET 8 - Brandon Minnick - NDC London 2024"</a></strong></p><p><strong>+44k views</strong><span> ⸱ 11 Apr 2024 ⸱ 00h 56m 24s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=cPvRIWXNgaM" rel="">"Keynote: Linus Torvalds, Creator of Linux &amp; Git, in Conversation with Dirk Hohndel"</a></strong></p><p><strong>+43k views</strong><span> ⸱ 26 Apr 2024 ⸱ 00h 31m 00s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=8jwiABwGC6c" rel="">"AI Assistance Beyond Code: What Do We Need to Make it Work? • Birgitta Böckeler • GOTO 2024"</a></strong></p><p><strong>+42k views</strong><span> ⸱ 26 Aug 2024 ⸱ 00h 39m 09s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=1WBIUYJVnok" rel="">"TDD &amp; DDD from the Ground Up Live Coding by Chris Simon"</a></strong></p><p><strong>+42k views</strong><span> ⸱ 20 Jun 2024 ⸱ 00h 53m 21s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=OM_8UOPFpqE" rel="">"Keynote: Linus Torvalds in Conversation with Dirk Hohndel"</a></strong></p><p><strong>+41k views</strong><span> ⸱ 16 Sep 2024 ⸱ 00h 31m 05s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=exqfB1WaqIw" rel="">"Performance oriented Spring Data JPA &amp; Hibernate by Maciej Walkowiak"</a></strong></p><p><strong>+40k views</strong><span> ⸱ 13 Mar 2024 ⸱ 00h 43m 44s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=miUbs3mqPJE" rel="">"Modern Java in Action • Nicolai Parlog • GOTO 2024"</a></strong></p><p><strong>+39k views</strong><span> ⸱ 26 Jul 2024 ⸱ 00h 51m 43s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=xhi5Q_wL9i0" rel="">"7+ million Postgres tables | Kailash Nadh | IndiaFOSS 2024 | FOSS United"</a></strong></p><p><strong>+39k views</strong><span> ⸱ 03 Dec 2024 ⸱ 00h 20m 34s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=HyoLl3VcRFY" rel="">"Spring Security Architecture Principles by Daniel Garnier-Moiroux @ Spring I/O 2024"</a></strong></p><p><strong>+38k views</strong><span> ⸱ 04 Jun 2024 ⸱ 00h 48m 25s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=vzYqxo13I1U" rel="">"Open Source, Open Mind: The Cost of Free Software - Dylan Beattie - NDC Oslo 2024"</a></strong></p><p><strong>+37k views</strong><span> ⸱ 24 Jul 2024 ⸱ 00h 59m 31s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=MkbgZMCTUyU" rel="">"The Future of Microprocessors • Sophie Wilson • GOTO 2024"</a></strong></p><p><strong>+37k views</strong><span> ⸱ 22 Jan 2025 ⸱ 00h 57m 37s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=LkVIpwHcknE" rel="">"Bottom-up Architecture: Bridging the Architecture-Code Gap • Oliver Drotbohm • GOTO 2024"</a></strong></p><p><strong>+36k views</strong><span> ⸱ 16 Aug 2024 ⸱ 00h 49m 15s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=2Aa5uQozbJQ" rel="">"Bootiful Spring Boot 3.x by Josh Long @ Spring I/O 2024"</a></strong></p><p><strong>+34k views</strong><span> ⸱ 07 Jun 2024 ⸱ 00h 54m 26s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=qfknfCsICUM" rel="">"Jon Gjengset - Towards Impeccable Rust"</a></strong></p><p><strong>+34k views</strong><span> ⸱ 03 Apr 2024 ⸱ 00h 55m 59s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=agkXUp0hCW8" rel="">"Keynote: Gang of None? Design Patterns in Elixir - José Valim | ElixirConf EU 2024"</a></strong></p><p><strong>+34k views</strong><span> ⸱ 14 May 2024 ⸱ 00h 56m 49s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=D2HurSldDkE" rel="">"Prompt Engineering is Dead; Build LLM Applications with DSPy Framework"</a></strong></p><p><strong>+33k views</strong><span> ⸱ 23 Jul 2024 ⸱ 00h 42m 17s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=gG4BJ23BFBE" rel="">"The existential threat against C++ and where to go from here - Helge Penne - NDC TechTown 2024"</a></strong></p><p><strong>+33k views</strong><span> ⸱ 02 Jan 2025 ⸱ 00h 44m 36s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=jn8u-gpeGFk" rel="">"Your website does not need JavaScript - Amy Kapernick - NDC Oslo 2024"</a></strong></p><p><strong>+30k views</strong><span> ⸱ 25 Sep 2024 ⸱ 00h 43m 37s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=P1vES9AgfC4" rel="">"Moving IO to the edges of your app: Functional Core, Imperative Shell - Scott Wlaschin"</a></strong></p><p><strong>+30k views</strong><span> ⸱ 12 Apr 2024 ⸱ 01h 00m 35s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=8l0tv3_jFoY" rel="">"Bootiful Spring Boot 3 x by Josh Long"</a></strong></p><p><strong>+30k views</strong><span> ⸱ 07 Feb 2024 ⸱ 00h 44m 32s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=ozI4V_29fj4" rel="">"React for Two Computers | Dan Abramov"</a></strong></p><p><strong>+28k views</strong><span> ⸱ 25 Jul 2024 ⸱ 00h 28m 56s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=KLYkvRbtCIk" rel="">"Building Software Better: API Lifecycle Management for Developers • Erik Wilde • GOTO 2024"</a></strong></p><p><strong>+27k views</strong><span> ⸱ 12 Aug 2024 ⸱ 00h 48m 46s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=Ctuhh8VqtfI" rel="">"Fei Fei Li, Professor, Stanford University on the History and Future of AI at Data + AI Summit 2024"</a></strong></p><p><strong>+26k views</strong><span> ⸱ 14 Jun 2024 ⸱ 00h 18m 26s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=dI_TmTW9S4c" rel="">"Building Production RAG Over Complex Documents"</a></strong></p><p><strong>+26k views</strong><span> ⸱ 23 Jul 2024 ⸱ 01h 22m 18s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=ZcwA0xt8FlQ" rel="">"Vanilla React | Ryan Florence"</a></strong></p><p><strong>+25k views</strong><span> ⸱ 25 Jul 2024 ⸱ 00h 25m 56s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=nZLz0o4duRs" rel="">"Building Container Images the Modern Way - Adrian Mouat, Chainguard"</a></strong></p><p><strong>+25k views</strong><span> ⸱ 23 Mar 2024 ⸱ 00h 33m 26s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=qcJASFx-F5g" rel="">"So You Want to Build An Event Driven System? - James Eastham - NDC London 2024"</a></strong></p><p><strong>+24k views</strong><span> ⸱ 09 Apr 2024 ⸱ 00h 52m 23s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=kPh8pod0-gk" rel="">"Introduction to Wait-free Algorithms in C++ Programming - Daniel Anderson - CppCon 2024"</a></strong></p><p><strong>+24k views</strong><span> ⸱ 10 Dec 2024 ⸱ 01h 04m 42s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=lNPZV9Iqo3U" rel="">"Lock-free Atomic Shared Pointers Without a Split Reference Count? It Can Be Done! - Daniel Anderson"</a></strong></p><p><strong>+23k views</strong><span> ⸱ 03 Jan 2024 ⸱ 01h 02m 11s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=9iLxR1h2208" rel="">"Technical Neglect - Kevlin Henney - NDC London 2024"</a></strong></p><p><strong>+22k views</strong><span> ⸱ 10 Apr 2024 ⸱ 01h 07m 18s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=k_3pRxdv-cI" rel="">"Start over-engineering your CSS | Kevin Powell | CSS Day 2024"</a></strong></p><p><strong>+22k views</strong><span> ⸱ 12 Aug 2024 ⸱ 00h 50m 28s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=55NL0vnjjJg" rel="">"Kotlin After 2.0 | Talking Kotlin #133"</a></strong></p><p><strong>+22k views</strong><span> ⸱ 29 Aug 2024 ⸱ 01h 06m 31s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=fc6_NtD9soI" rel="">"Modularizing the Monolith - Jimmy Bogard - NDC Oslo 2024"</a></strong></p><p><strong>+22k views</strong><span> ⸱ 11 Aug 2024 ⸱ 00h 56m 44s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=KqhhaMgbGhU" rel="">".NET and Containers - each layer of abstraction indistinguishable from magic - Scott Hanselman"</a></strong></p><p><strong>+21k views</strong><span> ⸱ 21 Jun 2024 ⸱ 01h 01m 29s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=t27Uozc2Z58" rel="">"Build faster persistence layers with Spring Data JPA 3 by Thorben Janssen @ Spring I/O 2024"</a></strong></p><p><strong>+21k views</strong><span> ⸱ 06 Jun 2024 ⸱ 00h 49m 50s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=H8ZOp8ayluU" rel="">"The Philosophy of Architecture - Barry O'Reilly - NDC Oslo 2024"</a></strong></p><p><strong>+21k views</strong><span> ⸱ 21 Jul 2024 ⸱ 00h 43m 54s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=qx42r29HhcM" rel="">"Flutter, Dart, and WASM: Shipping a new model for Web applications by Kevin Moore @ Wasm I/O 2024"</a></strong></p><p><strong>+21k views</strong><span> ⸱ 12 Apr 2024 ⸱ 00h 31m 19s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=HKS5sKsIkkc" rel="">"Insights on How Team Topologies Drive Organizational Success • Manuel Pais • GOTO 2024"</a></strong></p><p><strong>+21k views</strong><span> ⸱ 13 Nov 2024 ⸱ 00h 44m 02s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=pw8FAg07kdo" rel="">"React Router 7 Tutorial (framework mode)"</a></strong></p><p><strong>+20k views</strong><span> ⸱ 12 Dec 2024 ⸱ 00h 35m 30s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=pT-UuXrsviE" rel="">"Daniel Thompson-Yvetot - Tauri 2.0 - DevWorld 2024"</a></strong></p><p><strong>+20k views</strong><span> ⸱ 15 May 2024 ⸱ 00h 23m 36s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=TSNAvFJoP4M" rel="">"How to add genuinely useful AI to your webapp (not just chatbots) - Steve Sanderson"</a></strong></p><p><strong>+20k views</strong><span> ⸱ 30 Jul 2024 ⸱ 00h 58m 37s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=K4EG09ll834" rel="">"The Ultimate Cloud Platform Team Topology • Ben Ellerby • GOTO 2024"</a></strong></p><p><strong>+20k views</strong><span> ⸱ 09 Sep 2024 ⸱ 00h 14m 53s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=vVtpqkKaBSA" rel="">"C#’s Functional Journey - Mads Torgersen - NDC Sydney 2024"</a></strong></p><p><strong>+20k views</strong><span> ⸱ 03 Jun 2024 ⸱ 01h 00m 41s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=8QR_y6U2S2I" rel="">"What's new in .NET 8 &amp; C# 12 - Filip Ekberg - NDC London 2024"</a></strong></p><p><strong>+20k views</strong><span> ⸱ 17 Apr 2024 ⸱ 00h 58m 49s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=mT5bhj1Wygg" rel="">"Design more decoupled services with one weird trick - Udi Dahan - NDC Oslo 2024"</a></strong></p><p><strong>+20k views</strong><span> ⸱ 12 Aug 2024 ⸱ 00h 58m 25s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=WyxUilrR6fU" rel="">"C++ RVO: Return Value Optimization for Performance in Bloomberg C++ Codebases - Michelle Fae D'Souza"</a></strong></p><p><strong>+19k views</strong><span> ⸱ 02 Dec 2024 ⸱ 01h 01m 17s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=nRx5pVdtMQA" rel="">"Power BI on Databricks Best Practices"</a></strong></p><p><strong>+19k views</strong><span> ⸱ 18 Mar 2024 ⸱ 00h 50m 51s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=dzvTlhPXvfE" rel="">"Building Green Software Part 5: Green Networking • Anne Currie • GOTO 2024"</a></strong></p><p><strong>+19k views</strong><span> ⸱ 21 Mar 2024 ⸱ 00h 13m 49s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=DHwNR7h3k5Y" rel="">"Know your Java? by Venkat Subramaniam"</a></strong></p><p><strong>+19k views</strong><span> ⸱ 31 Jan 2024 ⸱ 00h 37m 41s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=uB0n4IZmS34" rel="">"Data + AI Summit 2024 - Keynote Day 2 - Full"</a></strong></p><p><strong>+19k views</strong><span> ⸱ 14 Jun 2024 ⸱ 02h 15m 38s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=WzZI_IT6gYo" rel="">"Practical OpenTelemetry in .NET 8 - Martin Thwaites - NDC London 2024"</a></strong></p><p><strong>+19k views</strong><span> ⸱ 07 Apr 2024 ⸱ 01h 00m 41s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=t03DOhiTPkc" rel="">"The Best of Java Shorts Show: 100 Snippets in 50 Minutes by Adam Bien"</a></strong></p><p><strong>+19k views</strong><span> ⸱ 11 Oct 2024 ⸱ 00h 51m 05s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=StZt-WrI2to" rel="">"Deferring Data + Streaming in Remix"</a></strong></p><p><strong>+19k views</strong><span> ⸱ 17 Jan 2024 ⸱ 00h 14m 32s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=WYa9n0F4CRM" rel="">"Migrating from (Spring Data) JPA to Spring Data JDBC by Jens Schauder @ Spring I/O 2024"</a></strong></p><p><strong>+18k views</strong><span> ⸱ 06 Jun 2024 ⸱ 00h 42m 06s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=69qfsnhEl-c" rel="">"Keynote: How To Be A Rockstar Developer - Dylan Beattie - CPH DevFest 2024"</a></strong></p><p><strong>+18k views</strong><span> ⸱ 09 Oct 2024 ⸱ 00h 58m 36s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=kE5M6bwruhw" rel="">"Design Patterns Revisited in Modern Java by Venkat Subramaniam"</a></strong></p><p><strong>+18k views</strong><span> ⸱ 09 Oct 2024 ⸱ 02h 41m 21s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=d1ODcHi5AI4" rel="">"You are doing logging in .NET wrong. Let’s fix it. - Nick Chapsas - NDC London 2024"</a></strong></p><p><strong>+18k views</strong><span> ⸱ 04 Apr 2024 ⸱ 00h 54m 21s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=ghpljMg8Ecc" rel="">"Distributed Scheduling with Spring Boot: the challenges &amp; pitfalls of implementing a background job"</a></strong></p><p><strong>+18k views</strong><span> ⸱ 07 Jun 2024 ⸱ 00h 46m 17s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=Rg_VPMT0XXw" rel="">"Linux Kernel CVEs, What Has Caused So Many to Suddenly Show Up? - Greg Kroah-Hartman"</a></strong></p><p><strong>+18k views</strong><span> ⸱ 17 Sep 2024 ⸱ 00h 39m 30s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=CnoDOc6ML0Y" rel="">"Chris Biscardi - Bevy: A case study in ergonomic Rust"</a></strong></p><p><strong>+18k views</strong><span> ⸱ 11 Apr 2024 ⸱ 00h 54m 25s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=9-S_nZ5gzGE" rel="">"Pushing Java to the Limits: Processing a Billion Rows in under 2 Seconds by ROY VAN RIJN"</a></strong></p><p><strong>+17k views</strong><span> ⸱ 15 May 2024 ⸱ 00h 49m 09s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=auL8vB1Yj5s" rel="">"Background Services in ASP.NET Core and .NET - Steve Gordon - NDC London 2024"</a></strong></p><p><strong>+17k views</strong><span> ⸱ 05 Apr 2024 ⸱ 00h 59m 30s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=_1rjo2l17kI" rel="">"Designing for change with Vertical Slice Architecture - Chris Sainty - NDC London 2024"</a></strong></p><p><strong>+17k views</strong><span> ⸱ 07 May 2024 ⸱ 00h 58m 25s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=p4qpIgj5Zjg" rel="">"Create a RAG based Chatbot with Databricks"</a></strong></p><p><strong>+17k views</strong><span> ⸱ 13 Jun 2024 ⸱ 00h 18m 30s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=8-KLX1PGg8Q" rel="">"Through the Fire and the Flames - Jon Gjengset | EuroRust 2024"</a></strong></p><p><strong>+17k views</strong><span> ⸱ 01 Nov 2024 ⸱ 00h 31m 09s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=00erK_Js9Yg" rel="">"Scala-Powered Strategies for Building Fault-Tolerant Systems | Dmitrii Pakhomov | Conf42 SRE 2024"</a></strong></p><p><strong>+16k views</strong><span> ⸱ 09 May 2024 ⸱ 00h 15m 59s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=Pae2D4XcEIg" rel="">"The Modern Monolith, with Spring Modulith by Cora Iberkleid @ Spring I/O 2024"</a></strong></p><p><strong>+16k views</strong><span> ⸱ 21 Jun 2024 ⸱ 00h 52m 55s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=ZqQOm0PK6ME" rel="">"10 Opinions For Creating More Maintainable .NET Apps - Scott Sauber - NDC Sydney 2024"</a></strong></p><p><strong>+16k views</strong><span> ⸱ 19 May 2024 ⸱ 01h 02m 23s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=rNl591__9zY" rel="">"Fast and Small C++ - When Efficiency Matters - Andreas Fertig - CppCon 2024"</a></strong></p><p><strong>+16k views</strong><span> ⸱ 17 Dec 2024 ⸱ 01h 02m 38s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=-nJmFYUiLqk" rel="">"DynamoDB in an EDA World • Alex DeBrie • GOTO 2024"</a></strong></p><p><strong>+16k views</strong><span> ⸱ 07 Nov 2024 ⸱ 00h 36m 51s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=SpKtpW9TGF0" rel="">"Addy Osmani – The Ai-Assisted Developer Workflow: Build Faster and Smarter Today, JSNation US 2024"</a></strong></p><p><strong>+16k views</strong><span> ⸱ 29 Nov 2024 ⸱ 00h 25m 17s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=LeYF1NE3jQ4" rel="">"Java meets TypeScript: full-stack web app development with Spring Boot and React by Marcus Hellberg"</a></strong></p><p><strong>+16k views</strong><span> ⸱ 25 Jun 2024 ⸱ 00h 49m 25s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=04gTQmLETFI" rel="">"Nicholas Matsakis - Rust 2024 and beyond"</a></strong></p><p><strong>+15k views</strong><span> ⸱ 05 Apr 2024 ⸱ 00h 33m 48s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=ag2ykPO805M" rel="">"Is It Time To Version Observability? (Signs Point To Yes) • Charity Majors • GOTO 2024"</a></strong></p><p><strong>+15k views</strong><span> ⸱ 10 Sep 2024 ⸱ 00h 35m 26s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=pOo7x8OiAec" rel="">"And Now You Understand React Server Components | Kent C. Dodds"</a></strong></p><p><strong>+15k views</strong><span> ⸱ 25 Jul 2024 ⸱ 00h 21m 46s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=Q5SMmKb7qVI" rel="">"React Conf Keynote (Day 2)"</a></strong></p><p><strong>+15k views</strong><span> ⸱ 25 Jul 2024 ⸱ 00h 55m 15s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=0TQ2BLs_ofc" rel="">"How to Lead your Organization's Al-Transformation • Rasmus Lystrøm • GOTO 2024"</a></strong></p><p><strong>+15k views</strong><span> ⸱ 03 Jul 2024 ⸱ 00h 29m 13s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=VRGRTvfOxb4" rel="">"Back to Basics: Almost Always Vector - Kevin Carpenter - CppCon 2024"</a></strong></p><p><strong>+15k views</strong><span> ⸱ 19 Nov 2024 ⸱ 01h 02m 01s</span></p></li><li><p><strong><a href="https://youtube.com/watch?v=lpNzR0fvxDw" rel="">"Adaptive Socio-Technical Systems with Architecture for Flow • Susanne Kaiser • GOTO 2024"</a></strong></p><p><strong>+15k views</strong><span> ⸱ 08 Aug 2024 ⸱ 00h 42m 37s</span></p></li></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[PgAssistant: OSS tool to help devs understand and optimize PG performance (222 pts)]]></title>
            <link>https://github.com/nexsol-technologies/pgassistant</link>
            <guid>43026036</guid>
            <pubDate>Wed, 12 Feb 2025 15:01:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/nexsol-technologies/pgassistant">https://github.com/nexsol-technologies/pgassistant</a>, See on <a href="https://news.ycombinator.com/item?id=43026036">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/pgassistant.png"><img src="https://github.com/nexsol-technologies/pgassistant/raw/main/media/pgassistant.png" alt="pgAssistant" height="120px"></a>
  <br>
  <em>A PostgreSQL assistant for developers<br>
      designed to help understand and optimize PostgreSQL database performance.</em>
  <br>
</p>
<p dir="auto">PgAssistant is an open-source tool designed to help developers understand and optimize their PostgreSQL database performance. It provides insights into database behavior, identifies schema-related issues, and assists in correcting them. Additionally, PgAssistant makes it easy to manage a library of specific SQL queries useful for your project through a simple JSON file.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li><strong>Database Behavior Analysis</strong>: Understand how your PostgreSQL database is performing with detailed analysis.</li>
<li><strong>Schema Optimization</strong>: Identify and correct <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/issues.png">issues</a> related to your database schema.</li>
<li><strong>Query Library Management</strong>: Easily manage a library of specific SQL queries using a <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/myqueries.png">JSON file</a>.</li>
<li><strong>User-Friendly Interface</strong>: Simple and intuitive interface for ease of use.</li>
<li><strong>Lint SQL Code</strong>: Pgassistant is using Python <strong>Sqlfluff</strong> to lint your SQL code</li>
<li><strong>OpenAI helper</strong>: If you have an OpenAI account, the interface can query OpenAI to help you understand your query plan and optimize your SQL queries</li>
<li><strong>Local LLM helper</strong>: If you run a local LLM like <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/llama.png"><strong>ollama</strong></a>, you can use it also with pgAssistant</li>
<li><strong>LLM helper</strong>: If you use a different LLM than OpenAI or ollama, PgAssistant will help you correctly formulate a query to prompt your preferred <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/prompt.png">LLM engine</a>.</li>
<li><strong>Get DDL</strong>: get DDL of Top <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/ddl.png">queries</a> - pgAssistant is using <strong>pg_dump</strong> to achieve this.</li>
<li><strong>PGTune</strong>: <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/pgtune.png">PGTune</a> is on board. Connected to your DB, pgAssistant can help your ALTER SYSTEM parameters !</li>
<li><strong>Docker</strong>: based on pgTune recommandations, pgAssistant can help you writing a <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/pgtune-docker.png">docker-compose</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screen shots</h2><a id="user-content-screen-shots" aria-label="Permalink: Screen shots" href="#screen-shots"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/nexsol-technologies/pgassistant/blob/main/media/pgassistant.gif?raw=true"><img src="https://github.com/nexsol-technologies/pgassistant/raw/main/media/pgassistant.gif?raw=true" alt="Alt text" title="pgAssistant" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Before you begin</h2><a id="user-content-before-you-begin" aria-label="Permalink: Before you begin" href="#before-you-begin"></a></p>
<p dir="auto">pgAssistant needs the <strong>pg_stat_statements</strong> postgresql module to run.</p>
<p dir="auto">To activate this module on your database is very simple. Below, you will find an example of how to activate it if you are in a Docker environment, as well as the PostgreSQL documentation.</p>
<ul dir="auto">
<li>Docker environnement sample here : <a href="https://github.com/nexsol-technologies/pgassistant-postgres-sample/tree/main">https://github.com/nexsol-technologies/pgassistant-postgres-sample/tree/main</a></li>
<li>Postgresql documentation here : <a href="https://www.postgresql.org/docs/current/pgstatstatements.html" rel="nofollow">https://www.postgresql.org/docs/current/pgstatstatements.html</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Special thanks</h2><a id="user-content-special-thanks" aria-label="Permalink: Special thanks" href="#special-thanks"></a></p>
<p dir="auto">Not being a front-end developer, I would like to thank the team that developed Volt BootStrap 5, which is available here: <a href="https://github.com/themesberg/volt-bootstrap-5-dashboard">https://github.com/themesberg/volt-bootstrap-5-dashboard</a>. Thank you guys, you saved my life !
I've used this project to develop the application' interface.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Using LLM with pgAssistant</h2><a id="user-content-using-llm-with-pgassistant" aria-label="Permalink: Using LLM with pgAssistant" href="#using-llm-with-pgassistant"></a></p>
<p dir="auto">Take a look at this documentation : <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/LLM.md">here</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Understanding the myqueries.json file</h2><a id="user-content-understanding-the-myqueriesjson-file" aria-label="Permalink: Understanding the myqueries.json file" href="#understanding-the-myqueriesjson-file"></a></p>
<p dir="auto"><strong>myqueries.json</strong> file is used to store your helpfull queries.</p>
<p dir="auto">Each querie you add to the json file can be searched and executed by pgAssistant.</p>
<p dir="auto">The JSON format is very simple :</p>
<div dir="auto" data-snippet-clipboard-copy-content="        {
            &quot;id&quot;: &quot;db_version&quot;,
            &quot;description&quot;: &quot;Database version&quot;,
            &quot;category&quot;: &quot;Database&quot;,        
            &quot;sql&quot;: &quot;SHOW server_version;&quot;,
            &quot;type&quot;: &quot;select&quot;
            &quot;reference&quot;: &quot;https://www.postgresql.org/docs/current/sql-show.html&quot;
        }"><pre>        {
            <span>"id"</span>: <span><span>"</span>db_version<span>"</span></span>,
            <span>"description"</span>: <span><span>"</span>Database version<span>"</span></span>,
            <span>"category"</span>: <span><span>"</span>Database<span>"</span></span>,        
            <span>"sql"</span>: <span><span>"</span>SHOW server_version;<span>"</span></span>,
            <span>"type"</span>: <span><span>"</span>select<span>"</span></span>
            <span>"reference"</span>: <span><span>"</span>https://www.postgresql.org/docs/current/sql-show.html<span>"</span></span>
        }</pre></div>
<ul dir="auto">
<li><strong>id</strong> A unique ID of the query</li>
<li><strong>description</strong> The description of your SQL query</li>
<li><strong>categorie</strong> A SQL category like Database, Issue, Table, Index or whatever you want</li>
<li><strong>sql</strong> The SQL query ended with a ";"</li>
<li><strong>reference</strong> An URL on the query documentation or your project documentation</li>
<li><strong>type</strong> 2 sql types are alowed
<ul dir="auto">
<li>select : performing a select</li>
<li>param_query : a select query with parameters. Each parameter must be in the format $1, $2, etc.</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">✅ Start in <code>Docker</code> and use the Nexsol technologies image</h2><a id="user-content--start-in-docker-and-use-the-nexsol-technologies-image" aria-label="Permalink: ✅ Start in Docker and use the Nexsol technologies image" href="#-start-in-docker-and-use-the-nexsol-technologies-image"></a></p>
<p dir="auto">Use this <a href="https://github.com/nexsol-technologies/pgassistant/blob/main/docker-compose/docker-compose.yml">docker-compse.yml</a> and run :</p>

<p dir="auto">Visit <code>http://localhost:8080/database.html</code> in your browser. The app should be up &amp; running.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">✅ Manual Build</h2><a id="user-content--manual-build" aria-label="Permalink: ✅ Manual Build" href="#-manual-build"></a></p>
<blockquote>
<p dir="auto">Download the code</p>
</blockquote>

<p dir="auto"><h3 tabindex="-1" dir="auto">👉 Set Up for <code>Unix</code>, <code>MacOS</code></h3><a id="user-content--set-up-for-unix-macos" aria-label="Permalink: 👉 Set Up for Unix, MacOS" href="#-set-up-for-unix-macos"></a></p>
<blockquote>
<p dir="auto">Install modules via <code>VENV</code></p>
</blockquote>
<div dir="auto" data-snippet-clipboard-copy-content="$ virtualenv env
$ source env/bin/activate
$ pip3 install -r requirements.txt"><pre>$ virtualenv env
$ <span>source</span> env/bin/activate
$ pip3 install -r requirements.txt</pre></div>
<br>
<blockquote>
<p dir="auto">Set Up Flask Environment</p>
</blockquote>
<div dir="auto" data-snippet-clipboard-copy-content="$ export FLASK_APP=run.py"><pre>$ <span>export</span> FLASK_APP=run.py</pre></div>
<br>
<blockquote>
<p dir="auto">Start the app</p>
</blockquote>
<div dir="auto" data-snippet-clipboard-copy-content="$ flask run
// OR
$ flask run --cert=adhoc # For HTTPS server"><pre>$ flask run
// OR
$ flask run --cert=adhoc <span><span>#</span> For HTTPS server</span></pre></div>
<p dir="auto">At this point, the app runs at <code>http://127.0.0.1:5000/database.html</code>.</p>
<br>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Visualizing Data Is an Art – We Should Treat It Like One (154 pts)]]></title>
            <link>https://perthirtysix.com/visualizing-data-is-an-art</link>
            <guid>43025645</guid>
            <pubDate>Wed, 12 Feb 2025 14:17:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://perthirtysix.com/visualizing-data-is-an-art">https://perthirtysix.com/visualizing-data-is-an-art</a>, See on <a href="https://news.ycombinator.com/item?id=43025645">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__nuxt"><nav data-v-fef6c375=""><div data-v-fef6c375=""><div data-v-fef6c375=""><p><a href="https://perthirtysix.com/" data-v-fef6c375=""><img src="https://perthirtysix.com/brand/wordmark.svg" alt="PerThirtySix Wordmark" height="36" width="203" data-v-fef6c375=""></a></p><p><a href="https://perthirtysix.com/team" data-v-fef6c375=""><span data-v-fef6c375="">The Team</span></a><a href="https://perthirtysix.com/philosophy" data-v-fef6c375=""><span data-v-fef6c375="">Our Philosophy</span></a></p><!--[--><p><a href="https://perthirtysix.com/nba" data-v-fef6c375=""><span data-v-fef6c375="">NBA</span></a></p><!--]--></div></div></nav><main><!--[--><!--]--></main><div><p><a href="https://instagram.com/perthirtysixers"><span>Instagram</span></a><a href="https://twitter.com/PerThirtySixers"><span>Twitter</span></a><a href="https://www.linkedin.com/company/perthirtysix" target="_bank"><span>LinkedIn</span></a></p><div><p><a href="https://perthirtysix.com/"><img src="https://perthirtysix.com/brand/pts.svg" alt="PerThirtySix Logo" height="21" width="39"></a></p></div></div></div>

</div>]]></description>
        </item>
    </channel>
</rss>