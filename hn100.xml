<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 15 Aug 2025 14:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Steve Wozniak: 'I am the happiest person ever' and 'I never sold out' (395 pts)]]></title>
            <link>https://yro.slashdot.org/comments.pl?sid=23765914&amp;cid=65583466</link>
            <guid>44903803</guid>
            <pubDate>Thu, 14 Aug 2025 18:19:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://yro.slashdot.org/comments.pl?sid=23765914&#x26;cid=65583466">https://yro.slashdot.org/comments.pl?sid=23765914&#x26;cid=65583466</a>, See on <a href="https://news.ycombinator.com/item?id=44903803">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		<p>I gave all my Apple wealth away because wealth and power are not what I live for. I have a lot of fun and happiness. I funded a lot of important museums and arts groups in San Jose, the city of my birth, and they named a street after me for being good. I now speak publicly and have risen to the top. I have no idea how much I have but after speaking for 20 years it might be $10M plus a couple of homes. I never look for any type of tax dodge. I earn money from my labor and pay something like 55% combined tax on it. I am the happiest person ever. Life to me was never about accomplishment, but about Happiness, which is Smiles minus Frowns. I developed these philosophies when I was 18-20 years old and I never sold out.</p>
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA["Privacy preserving age verification" is bullshit (193 pts)]]></title>
            <link>https://pluralistic.net/2025/08/14/bellovin/</link>
            <guid>44903351</guid>
            <pubDate>Thu, 14 Aug 2025 17:40:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pluralistic.net/2025/08/14/bellovin/">https://pluralistic.net/2025/08/14/bellovin/</a>, See on <a href="https://news.ycombinator.com/item?id=44903351">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-11377">
	<!-- .entry-header -->

	
	
	<div>
		<p><!--
Tags:
Privacy preserving age verification, age verification, av, internexit, online safety bill, cryptography, steve bellovin, scholarship, zero knowledge, zero knowledge proofs, pki, public key infrastructure,nerd harder

Summary:
"Privacy preserving age verification" is bullshit; Hey look at this; Upcoming appearances; Recent appearances; Latest books; Upcoming books

URL:
https://pluralistic.net/2025/08/14/bellovin/

Title:
Pluralistic: "Privacy preserving age verification" is bullshit (14 Aug 2025) bellovin

Bullet:
⛱

Separator:
⠂⠄⠄⠂⠁⠁⠂⠄⠄⠂⠁⠁⠂⠄⠄⠂ ⠂⠄⠄⠂⠂⠄⠄⠂⠁⠁⠂⠄⠄⠂⠁⠁⠂⠄⠄⠂ ⠂⠄⠄⠂⠂⠄⠄⠂⠁⠁⠂⠄

Top Sources:
None

--><br>
<a href="https://pluralistic.net/2025/08/14/bellovin/"><img data-recalc-dims="1" decoding="async" src="https://i0.wp.com/craphound.com/images/14Aug2025.jpg?w=840&amp;ssl=1"></a></p>
<h2>Today's links</h2>
<ul>
<li><a href="https://pluralistic.net/2025/08/14/bellovin/#wont-someone-think-of-the-cryptographers">"Privacy preserving age verification" is bullshit</a>: Take it from the guy who invented it.
</li>
<li><a href="https://pluralistic.net/2025/08/14/bellovin/#linkdump">Hey look at this</a>: Delights to delectate.
</li>
<li><a href="https://pluralistic.net/2025/08/14/bellovin/#retro">Object permanence</a>: Vampire sf; Trickle-down Sesame Street; Transgenic mouse bribery; WPA StreetView; Walmart's policy origins.
</li>
<li><a href="https://pluralistic.net/2025/08/14/bellovin/#upcoming">Upcoming appearances</a>: Where to find me.
</li>
<li><a href="https://pluralistic.net/2025/08/14/bellovin/#recent">Recent appearances</a>: Where I've been.
</li>
<li><a href="https://pluralistic.net/2025/08/14/bellovin/#latest">Latest books</a>: You keep readin' em, I'll keep writin' 'em.
</li>
<li><a href="https://pluralistic.net/2025/08/14/bellovin/#upcoming-books">Upcoming books</a>: Like I said, I'll keep writin' 'em.
</li>
<li><a href="https://pluralistic.net/2025/08/14/bellovin/#bragsheet">Colophon</a>: All the rest.
</li>
</ul>

<hr>
<p><a name="wont-someone-think-of-the-cryptographers"></a><br>
<img data-recalc-dims="1" decoding="async" alt="Three kids in a trenchcoat, atop one another's shoulders. They stand before a hellishly complex midcentury computing control room." src="https://i0.wp.com/craphound.com/images/internexit.jpg?w=840&amp;ssl=1"></p>
<h2>"Privacy preserving age verification" is bullshit (<a href="https://pluralistic.net/2025/08/14/bellovin/#wont-someone-think-of-the-cryptographers">permalink</a>)</h2>
<p>I don't think that it's impossible for politicians, even nontechnical politicians, to make good tech policy. After all, the fact that no one in Congress is a microbiologist doesn't stop federal standards from delivering potable water (and it doesn't excuse the ghastly failures, such as Flint, MI):</p>
<p><a href="https://pluralistic.net/2024/11/21/policy-based-evidence/">https://pluralistic.net/2024/11/21/policy-based-evidence/</a></p>
<p>For politicians to make good policy, they don't need to be technical experts: they need to have solid, independent, well-resourced expert agencies. Those would be the very agencies that Trump and Musk have DOGEd into oblivion, which is pretty ominous, since the work of expert agencies is how you avoid dying of food poisoning, water poisoning, air poisoning, collapsing buildings, faulty antilock brakes, train explosions and plane-crashes.</p>
<p>But when it comes to tech policy, politicians get it all so goddamned wrong. Partly that's because the cartel of tech companies lies to them like crazy, even under oath, leading to a kind of nihilistic refusal to believe <em>any</em> expert input. Mark Zuckerberg wants you to think that's it's <em>inconceivable</em> for you to have a social life without him eavesdropping on it, and any rule demanding this is a farce, like a demand to make water that's not wet:</p>
<p><a href="https://pluralistic.net/2022/11/08/divisibility/#technognosticism">https://pluralistic.net/2022/11/08/divisibility/#technognosticism</a></p>
<p>Big Tech's highly resourced bullshit machine convinces some politicians that technical expertise is not to be trusted, and gives other, more cynical politicians cover for ignoring experts by saying, "Oh you people are always telling us that this or that is impossible."</p>
<p>For example, since the Clinton era, politicians all over the world demanded a kind of impossible encryption: encryption that works perfectly when it's doing something legitimate, like keeping hackers from pushing malware to your pacemaker or stealing your life's savings or listening in on you through your phone's microphone, but <em>also</em> they require that this encryption offer <em>no</em> protection to criminals, drug dealers, terrorists, child abusers, and other miscreants.</p>
<p>This really <em>is</em> like water that's not wet. We can make encryption that works. It's hard to get right, but when we do, it offers a wondrous level of protection from interception and eavesdropping, scrambling our data so thoroughly that you would have to consume multiple <em>universes</em> worth of time and space to build all the computers necessary to guess the descrambling key. We can also make encryption that doesn't work. People do this by accident all the time. Sometimes, the NSA does it on purpose (and doesn't mention that fact to the people who rely on it for their safety and integrity):</p>
<p><a href="https://en.wikipedia.org/wiki/Dual_EC_DRBG">https://en.wikipedia.org/wiki/Dual_EC_DRBG</a></p>
<p>But what we absolutely, positively, totally <em>cannot</em> make is encryption that both works <em>and</em> does not work, depending on whose secrets it is protecting. That's impossible.</p>
<p>But when technologists tell policymakers this, they tell us that they have every confidence in our ingenuity, and also, they can't be certain we're not telling a Zuck-style fable about how the stuff we merely disprefer is actually impossible. They tell us to <em>NERD HARDER!</em></p>
<p><em>NERD HARDER!</em> is the answer every time a politician gets a technological idée-fixe about how to solve a social problem by creating a technology that can't exist. It's the answer that EU politicians who backed the catastrophic proposal to require copyright filters for all user-generated content came up with, when faced with objections that these filters would block <em>billions</em> of legitimate acts of speech:</p>
<p><a href="https://memex.craphound.com/2019/04/03/after-months-of-insisting-that-article13-doesnt-require-filters-top-eu-commissioner-says-article-13-requires-filters/">https://memex.craphound.com/2019/04/03/after-months-of-insisting-that-article13-doesnt-require-filters-top-eu-commissioner-says-article-13-requires-filters/</a></p>
<p>When politicians seize on a technological impossibility as a technological necessity, they flail about and desperately latch onto scholarly work that they can brandish as evidence that their idea <em>could</em> be accomplished.</p>
<p>For example, back in 2019, Trump's Bureau of Land Management tried to impose a ton of absolutely bizarre, environmentally devastating requirements on Burning Man's land-use permit. One of these requirements was to effectively ban LED lights at night (!), on the basis that these were so bright at altitude that they could disrupt nocturnal birds.</p>
<p>In support of this measure, the BLM cited a PhD dissertation from a physicist who developed a method for estimating light pollution. That physicist turns out to be a burner, who filed comments in the docket describing how the BLM had misapplied his work, making crude mathematical errors that led them to grossly overstate the amount of light pollution at altitude (I've just spent an hour trying to find this comment and I came up craps – if you can find it, please let me know, as it was <em>delicious</em>).</p>
<p>That kind of Annie Hall/Marshall McLuhan/"You know nothing of my work" moment is always fantastic, and especially so when politicians are demanding that technologists <em>NERD HARDER!</em> to realize their cherished impossibilities.</p>
<p>That's just happened, and in relation to one of the scariest, most destructive <em>NERD HARDER!</em> tech policies ever to be assayed (a stiff competition). I'm talking about the UK Online Safety Act, which imposes a duty on websites to verify the age of people they communicate with before serving them anything that could be construed as child-inappropriate (a category that includes, e.g., much of Wikipedia):</p>
<p><a href="https://wikimediafoundation.org/news/2025/08/11/wikimedia-foundation-challenges-uk-online-safety-act-regulations/">https://wikimediafoundation.org/news/2025/08/11/wikimedia-foundation-challenges-uk-online-safety-act-regulations/</a></p>
<p>The Starmer government has, incredibly, developed a passion for internet regulations that are even stupider than Tony Blair's <em>and</em> David Cameron's. Requiring people to identify themselves (generally, via their credit cards) in order to look at porn will create a giant database of every kink and fetish of every person in the UK, which will inevitably leak and provide criminals and foreign spies with a kompromat system they can sort by net worth of the people contained within.</p>
<p>This hasn't deterred Starmer, who insists that if we just <em>NERD HARDER!</em>, we can use things like "zero-knowledge proofs" to create "privacy-preserving" age verification system, whereby a service can assure itself that it is communicating with an adult without ever being able to determine <em>who</em> it is communicating with.</p>
<p>In support of this idea, Starmer and co like to cite some genuinely exciting and cool cryptographic work on privacy-preserving credential schemes. Now, one of the principal authors of the key papers on these credential schemes, Steve Bellovin, has published a paper that is pithily summed up via its title, "Privacy-Preserving Age Verification—and Its Limitations":</p>
<p><a href="https://www.cs.columbia.edu/~smb/papers/age-verify.pdf">https://www.cs.columbia.edu/~smb/papers/age-verify.pdf</a></p>
<p>The tldr of this paper is that Starmer's idea will not work and cannot work. The research he relies on to defend the technological feasibility of his cherished plan does not support his conclusion.</p>
<p>Bellovin starts off by looking at the different approaches various players have mooted for verifying their users' age. For example, Google says it can deploy a "behavioral" system that relies on Google surveillance dossiers to make guesses about your age. Google refuses to explain how this would work, but Bellovin sums up several of the well-understood behavioral age estimation techniques and explains why they won't work. It's one thing to screw up age estimation when deciding which ad to show you; it's another thing altogether to do this when deciding whether you can access the internet.</p>
<p>Others say they can estimate your age by using AI to analyze a picture of your face. This is a stupid idea for many reasons, not least of which is that biometric age estimation is notoriously unreliable when it comes to distinguishing, say, 16 or 17 year olds from 18 year olds. Nevertheless, there are sitting US Congressmen who not only think this would work – they labor under the misapprehension that this is already going on:</p>
<p><a href="https://pluralistic.net/2023/04/09/how-to-make-a-child-safe-tiktok/">https://pluralistic.net/2023/04/09/how-to-make-a-child-safe-tiktok/</a></p>
<p>So that just leaves the privacy-preserving credential schemes, especially the Camenisch-Lysyanskaya protocol. This involves an Identity Provider (IDP) that establishes a user's identity and characteristics using careful document checks and other procedures. The IDP then hands the user a "primary credential" that can attest to everything the IDP knows about the user, and any number of "subcredentials" that only attest to specific facts about that user (such as their age).</p>
<p>These are used in zero-knowledge proofs (ZKP) – a way for two parties to validate that one of them asserts a fact without learning what that fact is in the process (this is super cool stuff). Users can send their subcredentials to a third party, who can use a ZKP to validate them without learning anything else about the user – so you could prove your age (or even just prove that you are over 18 without disclosing your age at all) without disclosing your identity.</p>
<p>There's some good news for implementing CL on the web: rather than developing a transcendentally expensive and complex new system for these credential exchanges and checks, CL can piggyback on the existing Public Key Infrastructure (PKI) that powers your browser's ability to have secure sessions. When you visit a website with https:// in front of the address (instead of just http://).</p>
<p>However, doing so poses several difficulties, which Bellovin enumerates under a usefully frank section header: "INSURMOUNTABLE OBSTACLES."</p>
<p>The most insurmountable of these obstacles is getting set up with an IDP in the first place – that is, proving who you are to some agency, but only <em>one</em> such agency (so you can't create two primary credentials and share one of them with someone underage). Bellovin cites Supreme Court cases about voter ID laws and the burdens they impose on people who are poor, old, young, disabled, rural, etc.</p>
<p>Fundamentally, it can be insurmountably hard for a lot of people to get, say, a driver's license, or any other singular piece of ID that they can provide to an IDP in order to get set up on the system.</p>
<p>The usual answer for this is for IDPs to allow multiple kinds of ID. This does ease the burden on users, but at the expense of creating fatal weaknesses in the system: if you can set up an identity with multiple kinds of ID, you can visit different IDPs and set up an ID with each (just as many Americans today have drivers licenses from more than one state).</p>
<p>The next obstacle is "user challenges," like the problem of households with shared computers, or computers in libraries, hotels, community centers and other public places. The only effective way to do this is to create (expensive) online credential stores, which are likely to be out of reach of the poor and disadvantaged people who disproportionately rely on public or shared computers.</p>
<p>Next are the "economic issues": this stuff is <em>expensive</em> to set up and maintain, and someone's gotta pay for it. We could ask websites that offer kid-inappropriate content to pay for it, but that sets up an irreconcilable conflict of interest. These websites are going to want to minimize their costs, and everything they can do to reduce costs will make the system unacceptably worse. For example, they could choose only to set up accounts with IDPs that are local to the company that operates the server, meaning that anyone who lives somewhere else and wants to access that website is going to have to somehow get certified copies of e.g. their birth certificate and driver's license to IDPs on the other side of the planet. The alternative to having website foot the bill for this is asking users to pay for it – meaning that, once again, we exclude poor people from the internet.</p>
<p>Finally, there's "governance": who runs this thing? In practice, the security and privacy guarantees of the CL protocol require two different kinds of wholly independent institutions: identity providers (who verify your documents), and certificate authorities (who issue cryptographic certificates based on those documents). If these two functions take place under one roof, the privacy guarantees of the system immediately evaporate.</p>
<p>An IDP's most important role is verifying documents and associating them with a specific person. But not all IDPs will be created equal, and people who wish to cheat the system will gravitate to the worst IDPs. However, lots of people who have no nefarious intent will <em>also</em> use these IDPs, merely because they are close by, or popular, or were selected at random. A decision to strike off an IDP and rescind its verifications will force lots of people – potentially millions of people – to start over with the whole business of identifying themselves, during which time they will be unable to access much of the web. There's no practical way for the average person to judge whether an IDP they choose is likely to be found wanting in the future.</p>
<p>So we can regulate IDPs, but who will do the regulation? Age verification laws affect people outside of a government's national territory – anyone seeking to access content on a webserver falls under age verification's remit. Remember, IDPs handle all kinds of sensitive data: do you want Russia, say, to have a say in deciding who can be an IDP and what disclosure rules you will have to follow?</p>
<p>To regulate IDPs (and certificate authorities), these entities will have to keep logs, which further compromises the privacy guarantees of the CL protocol.</p>
<p>Looming all of this is a problem with the CL protocol as being built on regulated entities, which is that CL is envisioned as a way to do all kinds of business, from opening a bank account to proving your vaccination status or your right to work or receive welfare. Authoritarian governments who order primary credential revocations of their political opponents could thoroughly and terrifyingly "unperson" them at the stroke of a pen.</p>
<p>The paper's conclusions provide a highly readable summary of these issues, which constitute a stinging rebuke to anyone contemplating age-verification schemes. These go well beyond the UK, and are in the works in Canada, Australia, the EU, Texas and Louisiana.</p>
<p>Age verification is an impossibility, and an impossibly terrible idea with impossibly vast consequences for privacy and the open web, as my EFF colleague Jason Kelley explained on the Malwarebytes podcast:</p>
<p><a href="https://www.malwarebytes.com/blog/podcast/2025/08/the-worst-thing-for-online-rights-an-age-restricted-grey-web-lock-and-code-s06e16">https://www.malwarebytes.com/blog/podcast/2025/08/the-worst-thing-for-online-rights-an-age-restricted-grey-web-lock-and-code-s06e16</a></p>
<p>Politicians – even nontechnical ones – can make good tech policy, provided they take expert feedback seriously (and distinguish it from self-interested industry lobbying).</p>
<p>When it comes to tech policy, wanting it badly is not enough. The fact that it would be <em>really cool</em> if we could get technology to do something has no bearing on whether we can actually get technology to do that thing. <em>NERD HARDER!</em> isn't a policy, it's a wish.</p>
<p>Wish in one hand and shit in the other and see which one will be full first:</p>
<p><a href="https://www.reddit.com/r/etymology/comments/oqiic7/studying_the_origins_of_the_phrase_wish_in_one/">https://www.reddit.com/r/etymology/comments/oqiic7/studying_the_origins_of_the_phrase_wish_in_one/</a></p>
<hr>

<h2 heds="0">Hey look at this (<a href="https://pluralistic.net/2025/08/14/bellovin/#linkdump">permalink</a>)</h2>
<p><img data-recalc-dims="1" decoding="async" src="https://i0.wp.com/craphound.com/images/heylookatthis2.jpg?w=840&amp;ssl=1"></p>
<ul>
<li>Australian court finds Apple, Google guilty of being anticompetitive <a href="https://www.ghacks.net/2025/08/12/australian-court-finds-apple-google-guilty-of-being-anticompetitive/">https://www.ghacks.net/2025/08/12/australian-court-finds-apple-google-guilty-of-being-anticompetitive/</a>
</li>
<li>
<p>Fobazi’s road to recovery: Kidney and liver transplant <a href="https://www.gofundme.com/f/support-fobazis-road-to-recovery">https://www.gofundme.com/f/support-fobazis-road-to-recovery</a></p>
</li>
<li>
<p>J.R. “Bob” Dobbs and the Church of the SubGenius <a href="https://dobbstown.org/things-to-buy/">https://dobbstown.org/things-to-buy/</a></p>
</li>
<li>
<p>Quiet politics and the minimum wage <a href="https://dirkmjk.nl/en/453/quiet-politics-and-the-minimum-wage">https://dirkmjk.nl/en/453/quiet-politics-and-the-minimum-wage</a></p>
</li>
<li>
<p>Reddit will block the Internet Archive <a href="https://www.theverge.com/news/757538/reddit-internet-archive-wayback-machine-block-limit">https://www.theverge.com/news/757538/reddit-internet-archive-wayback-machine-block-limit</a></p>
</li>
</ul>
<hr>
<p><a name="retro"></a><br>
<img data-recalc-dims="1" decoding="async" alt="A shelf of leatherbound history books with a gilt-stamped series title, 'The World's Famous Events.'" src="https://i0.wp.com/craphound.com/images/worlds-famous-events.png?w=840&amp;ssl=1"></p>
<h2 heds="0">Object permanence (<a href="https://pluralistic.net/2025/08/14/bellovin/#retro">permalink</a>)</h2>
<p>#20yrsago Lloyds of London to offer insurance for corporate open source users <a href="https://www.theregister.com/2005/08/12/opensource_indemnification/">https://www.theregister.com/2005/08/12/opensource_indemnification/</a></p>
<p>#20yrsago Vampire novel as a work of first-rate science fiction <a href="https://memex.craphound.com/2005/08/14/vampire-novel-as-a-work-of-first-rate-science-fiction/">https://memex.craphound.com/2005/08/14/vampire-novel-as-a-work-of-first-rate-science-fiction/</a></p>
<p>#10yrsago Chinese theme-park queue-jumping techniques <a href="http://www.capndesign.com/archives/2015/08/the_art_of_queue_jumping.php">http://www.capndesign.com/archives/2015/08/the_art_of_queue_jumping.php</a></p>
<p>#10yrsago Even when you turn on Win 10’s “privacy” flags, it still spies on you <a href="https://arstechnica.com/information-technology/2015/08/even-when-told-not-to-windows-10-just-cant-stop-talking-to-microsoft/">https://arstechnica.com/information-technology/2015/08/even-when-told-not-to-windows-10-just-cant-stop-talking-to-microsoft/</a></p>
<p>#10yrsago Trickle-down kids’ TV: Sesame Street will air on HBO 9 months before PBS <a href="https://memex.craphound.com/2015/08/14/trickle-down-kids-tv-sesame-street-will-air-on-hbo-9-months-before-pbs/">https://memex.craphound.com/2015/08/14/trickle-down-kids-tv-sesame-street-will-air-on-hbo-9-months-before-pbs/</a></p>
<p>#10yrsago Transgenic mouse company pays academics who cite them in papers <a href="https://www.badscience.net/2015/08/so-this-company-cyagen-is-paying-authors-for-citations-in-academic-papers/">https://www.badscience.net/2015/08/so-this-company-cyagen-is-paying-authors-for-citations-in-academic-papers/</a></p>
<p>#10yrsago Australian court hands copyright trolls their own asses <a href="https://torrentfreak.com/dallas-buyers-club-ruling-devastates-copyright-trolling-down-under-150814/">https://torrentfreak.com/dallas-buyers-club-ruling-devastates-copyright-trolling-down-under-150814/</a></p>
<p>#10yrsago Student suspended for tweeting two words will get to sue his school, police chief <a href="https://www.techdirt.com/2015/08/14/school-police-chief-must-face-lawsuit-brought-student-suspended-10-days-tweeting-actually-yes/">https://www.techdirt.com/2015/08/14/school-police-chief-must-face-lawsuit-brought-student-suspended-10-days-tweeting-actually-yes/</a></p>
<p>#5yrsago Maidan in Belarus <a href="https://pluralistic.net/2020/08/14/shock-doctrine/#walkaway">https://pluralistic.net/2020/08/14/shock-doctrine/#walkaway</a></p>
<p>#5yrsago NYC Street View, WPA edition <a href="https://pluralistic.net/2020/08/14/shock-doctrine/#wpa-nyc">https://pluralistic.net/2020/08/14/shock-doctrine/#wpa-nyc</a></p>
<p>#5yrsago NYC homeless lose bathroom access <a href="https://pluralistic.net/2020/08/14/shock-doctrine/#everybody-poops">https://pluralistic.net/2020/08/14/shock-doctrine/#everybody-poops</a></p>
<p>#5yrsago The CARES Shock Doctrine <a href="https://pluralistic.net/2020/08/14/shock-doctrine/#shock-doctrine">https://pluralistic.net/2020/08/14/shock-doctrine/#shock-doctrine</a></p>
<p>#1yrago The one weird monopoly trick that gave us Walmart and Amazon and killed Main Street <a href="https://pluralistic.net/2024/08/14/the-price-is-wright/#enforcement-priorities">https://pluralistic.net/2024/08/14/the-price-is-wright/#enforcement-priorities</a></p>
<hr>

<h2 heds="0">Upcoming appearances (<a href="https://pluralistic.net/2025/08/14/bellovin/#upcoming">permalink</a>)</h2>
<p><img data-recalc-dims="1" decoding="async" alt="A photo of me onstage, giving a speech, pounding the podium." src="https://i0.wp.com/craphound.com/images/appearances2.jpg?w=840&amp;ssl=1"></p>
<ul>
<li>Ithaca: AD White keynote (Cornell), Sep 12<br>
<a href="https://deanoffaculty.cornell.edu/events/keynote-cory-doctorow-professor-at-large/">https://deanoffaculty.cornell.edu/events/keynote-cory-doctorow-professor-at-large/</a>
</li>
<li>
<p>DC: Enshittification at Politics and Prose, Oct 8<br>
<a href="https://politics-prose.com/cory-doctorow-10825">https://politics-prose.com/cory-doctorow-10825</a></p>
</li>
<li>
<p>New Orleans: DeepSouthCon63, Oct 10-12<br>
<a href="http://www.contraflowscifi.org/">http://www.contraflowscifi.org/</a></p>
</li>
<li>
<p>Chicago: Enshittification with Kara Swisher (Chicago Humanities), Oct 15<br>
<a href="https://www.oldtownschool.org/concerts/2025/10-15-2025-kara-swisher-and-cory-doctorow-on-enshittification/">https://www.oldtownschool.org/concerts/2025/10-15-2025-kara-swisher-and-cory-doctorow-on-enshittification/</a></p>
</li>
<li>
<p>San Francisco: Enshittification at Public Works (The Booksmith), Oct 20<br>
<a href="https://app.gopassage.com/events/doctorow25">https://app.gopassage.com/events/doctorow25</a></p>
</li>
<li>
<p>Miami: Enshittification at Books &amp; Books, Nov 5<br>
<a href="https://www.eventbrite.com/e/an-evening-with-cory-doctorow-tickets-1504647263469">https://www.eventbrite.com/e/an-evening-with-cory-doctorow-tickets-1504647263469</a></p>
</li>
</ul>
<hr>
<p><a name="recent"></a><br>
<img data-recalc-dims="1" decoding="async" alt="A screenshot of me at my desk, doing a livecast." src="https://i0.wp.com/craphound.com/images/recentappearances2.jpg?w=840&amp;ssl=1"></p>
<h2 heds="0">Recent appearances (<a href="https://pluralistic.net/2025/08/14/bellovin/#recent">permalink</a>)</h2>
<ul>
<li>The Utopias Podcast<br>
<a href="https://www.buzzsprout.com/2272465/episodes/17650124">https://www.buzzsprout.com/2272465/episodes/17650124</a>
</li>
<li>
<p>Tariffs vs IP Law (Firewalls Don't Stop Dragons)<br>
<a href="https://www.youtube.com/watch?v=LFABFe-5-uQ">https://www.youtube.com/watch?v=LFABFe-5-uQ</a></p>
</li>
<li>
<p>ORG at 20: In conversation with Maria Farrell<br>
<a href="https://www.youtube.com/watch?v=M9H2An_D6io">https://www.youtube.com/watch?v=M9H2An_D6io</a></p>
</li>
</ul>
<hr>
<p><a name="latest"></a><br>
<img data-recalc-dims="1" decoding="async" alt="A grid of my books with Will Stahle covers.." src="https://i0.wp.com/craphound.com/images/recent.jpg?w=840&amp;ssl=1"></p>
<h2 heds="0">Latest books (<a href="https://pluralistic.net/2025/08/14/bellovin/#latest">permalink</a>)</h2>
<ul>
<li>
<ul>
<li>Picks and Shovels: a sequel to "Red Team Blues," about the heroic era of the PC, Tor Books (US), Head of Zeus (UK), February 2025 (<a href="https://us.macmillan.com/books/9781250865908/picksandshovels">https://us.macmillan.com/books/9781250865908/picksandshovels</a>).</li>
</ul>
</li>
<li>The Bezzle: a sequel to "Red Team Blues," about prison-tech and other grifts, Tor Books (US), Head of Zeus (UK), February 2024 (<a href="http://the-bezzle.org/">the-bezzle.org</a>).
</li>
<li>
<p>"The Lost Cause:" a solarpunk novel of hope in the climate emergency, Tor Books (US), Head of Zeus (UK), November 2023 (<a href="http://lost-cause.org/">http://lost-cause.org</a>).</p>
</li>
<li>
<p>"The Internet Con": A nonfiction book about interoperability and Big Tech (Verso) September 2023 (<a href="http://seizethemeansofcomputation.org/">http://seizethemeansofcomputation.org</a>). Signed copies at Book Soup (<a href="https://www.booksoup.com/book/9781804291245">https://www.booksoup.com/book/9781804291245</a>).</p>
</li>
<li>
<p>"Red Team Blues": "A grabby, compulsive thriller that will leave you knowing more about how the world works than you did before." Tor Books <a href="http://redteamblues.com/">http://redteamblues.com</a>.</p>
</li>
<li>
<p>"Chokepoint Capitalism: How to Beat Big Tech, Tame Big Content, and Get Artists Paid, with Rebecca Giblin", on how to unrig the markets for creative labor, Beacon Press/Scribe 2022 <a href="https://chokepointcapitalism.com/">https://chokepointcapitalism.com</a></p>
</li>
</ul>
<hr>
<p><a name="upcoming-books"></a><br>
<img data-recalc-dims="1" decoding="async" alt="A cardboard book box with the Macmillan logo." src="https://i0.wp.com/craphound.com/images/upcoming-books.jpg?w=840&amp;ssl=1"></p>
<h2 heds="0">Upcoming books (<a href="https://pluralistic.net/2025/08/14/bellovin/#upcoming-books">permalink</a>)</h2>
<ul>
<li>Canny Valley: A limited edition collection of the collages I create for Pluralistic, self-published, September 2025
</li>
<li>
<p>Enshittification: Why Everything Suddenly Got Worse and What to Do About It, Farrar, Straus, Giroux, October 7 2025<br>
<a href="https://us.macmillan.com/books/9780374619329/enshittification/">https://us.macmillan.com/books/9780374619329/enshittification/</a></p>
</li>
<li>
<p>Unauthorized Bread: a middle-grades graphic novel adapted from my novella about refugees, toasters and DRM, FirstSecond, 2026</p>
</li>
<li>
<p>Enshittification, Why Everything Suddenly Got Worse and What to Do About It (the graphic novel), Firstsecond, 2026</p>
</li>
<li>
<p>The Memex Method, Farrar, Straus, Giroux, 2026</p>
</li>
<li>
<p>The Reverse-Centaur's Guide to AI, a short book about being a better AI critic, Farrar, Straus and Giroux, 2026</p>
</li>
</ul>
<hr>
<p><a name="bragsheet"></a><br>
<img data-recalc-dims="1" decoding="async" src="https://i0.wp.com/craphound.com/images/colophon2.jpg?w=840&amp;ssl=1"></p>
<h2 heds="0">Colophon (<a href="https://pluralistic.net/2025/08/14/bellovin/#bragsheet">permalink</a>)</h2>
<p>Today's top sources:</p>
<p><b>Currently writing: </b></p>
<ul>
<li>"The Reverse Centaur's Guide to AI," a short book for Farrar, Straus and Giroux about being an effective AI critic. (1049 words yesterday, 30960 words total).
</li>
<li>
<p>A Little Brother short story about DIY insulin PLANNING</p>
</li>
</ul>
<hr>
<p><img data-recalc-dims="1" decoding="async" src="https://i0.wp.com/craphound.com/images/by.svg.png?w=840&amp;ssl=1"></p>
<p>This work – excluding any serialized fiction – is licensed under a Creative Commons Attribution 4.0 license. That means you can use it any way you like, including commercially, provided that you attribute it to me, Cory Doctorow, and include a link to pluralistic.net.</p>
<p><a href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></p>
<p>Quotations and images are not included in this license; they are included either under a limitation or exception to copyright, or on the basis of a separate license. Please exercise caution.</p>
<hr>
<h2>How to get Pluralistic:</h2>
<p>Blog (no ads, tracking, or data-collection):</p>
<p><a href="http://pluralistic.net/">Pluralistic.net</a></p>
<p>Newsletter (no ads, tracking, or data-collection):</p>
<p><a href="https://pluralistic.net/plura-list">https://pluralistic.net/plura-list</a></p>
<p>Mastodon (no ads, tracking, or data-collection):</p>
<p><a href="https://mamot.fr/@pluralistic">https://mamot.fr/@pluralistic</a></p>
<p>Medium (no ads, paywalled):</p>
<p><a href="https://doctorow.medium.com/">https://doctorow.medium.com/</a></p>
<p>Twitter (mass-scale, unrestricted, third-party surveillance and advertising):</p>
<p><a href="https://twitter.com/doctorow">https://twitter.com/doctorow</a></p>
<p>Tumblr (mass-scale, unrestricted, third-party surveillance and advertising):</p>
<p><a href="https://mostlysignssomeportents.tumblr.com/tagged/pluralistic">https://mostlysignssomeportents.tumblr.com/tagged/pluralistic</a></p>
<p>"<em>When life gives you SARS, you make sarsaparilla</em>" -Joey "Accordion Guy" DeVilla</p>
<p>READ CAREFULLY: By reading this, you agree, on behalf of your employer, to release me from all obligations and waivers arising from any and all NON-NEGOTIATED agreements, licenses, terms-of-service, shrinkwrap, clickwrap, browsewrap, confidentiality, non-disclosure, non-compete and acceptable use policies ("BOGUS AGREEMENTS") that I have entered into with your employer, its partners, licensors, agents and assigns, in perpetuity, without prejudice to my ongoing rights and privileges. You further represent that you have the authority to release me from any BOGUS AGREEMENTS on behalf of your employer.</p>
<p>ISSN: 3066-764X</p>

	</div><!-- .entry-content -->

	<!-- .entry-footer -->
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Streaming services are driving viewers back to piracy (266 pts)]]></title>
            <link>https://www.theguardian.com/film/2025/aug/14/cant-pay-wont-pay-impoverished-streaming-services-are-driving-viewers-back-to-piracy</link>
            <guid>44902797</guid>
            <pubDate>Thu, 14 Aug 2025 16:56:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/film/2025/aug/14/cant-pay-wont-pay-impoverished-streaming-services-are-driving-viewers-back-to-piracy">https://www.theguardian.com/film/2025/aug/14/cant-pay-wont-pay-impoverished-streaming-services-are-driving-viewers-back-to-piracy</a>, See on <a href="https://news.ycombinator.com/item?id=44902797">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p><span>W</span>ith a trip to Florence booked, all I want is to rewatch <a href="https://www.theguardian.com/tv-and-radio/2016/apr/04/medici-drama-premiere-cannes-tv-festival-dustin-hoffman-renaissance" data-link-name="in body link">Medici</a>. The 2016 historical drama series tells of the rise of the powerful Florentine banking dynasty, and with it, the story of the Renaissance. Until recently, I could simply have gone to Netflix and found it there, alongside a wide array of award-winning and obscure titles. But when I Google the show in 2025, the Netflix link only takes me to a blank page. I don’t see it on HBO Max, Disney+, Apple TV+, or any of the smaller streaming platforms. On Amazon Prime I am required to buy each of the three seasons or 24 episodes separately, whereupon they would be stored in a library subject to <a href="https://www.theguardian.com/media/article/2024/may/14/my-whole-library-is-wiped-out-what-it-means-to-own-movies-and-tv-in-the-age-of-streaming-services?utm_source=chatgpt.com" data-link-name="in body link">overnight deletion</a>. Raised in the land of The Pirate Bay, the Swedish torrent index, I feel, for the first time in a decade, a nostalgia for the high seas of digital piracy. And I am not alone.</p><figure id="disclaimer" data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.DisclaimerBlockElement"><span></span></figure><p>For my teenage self in the 00s, torrenting was the norm. Need the new Coldplay album on your iPod? The <a href="https://www.theguardian.com/technology/pirate-bay" data-link-name="in body link" data-component="auto-linked-tag">Pirate Bay</a>. The 1968 adaptation of Romeo and Juliet? The Pirate Bay. Whatever you needed was accessible with just a couple of clicks. But as smartphones proliferated, so did Spotify, the music streaming platform that is also headquartered in Sweden. The same Scandinavian country had become a hub of illegal torrenting and simultaneously conjured forth its solution.</p><p>“Spotify would never have seen the light of day without The Pirate Bay,” Per Sundin, the then managing director of Universal Music Sweden, <a href="https://www.svd.se/a/2ca5d142-d3a9-3d76-8a3c-d86946e3111c/piratkrigets-forlorare" data-link-name="in body link">reflected in 2011</a>. But music torrenting died out as we all either listened with ads or paid for the subscription. And when Netflix launched in Sweden in late 2012, open talk of torrenting moving images also stopped. Most of the big shows and a great collection of award-winning films could all be found for just 79 SEK (£6) a month. Meanwhile, the three founders of The Pirate Bay were <a href="https://www.theguardian.com/technology/2015/jun/02/last-remaining-pirate-bay-founder-freed-from-jail-fredrik-neij" data-link-name="in body link">arrested and eventually jailed</a>. Pirating faded into the history books as far as I was concerned.</p><p>A decade and a half on from <a href="https://en.wikipedia.org/wiki/The_Pirate_Bay_trial" data-link-name="in body link">the Pirate Bay trial</a>, the winds have begun to shift. On an unusually warm summer’s day, I sit with fellow film critics by the old city harbour, once a haven for merchants and, rumour has it, smugglers. Cold <em>bigstrongs</em> in hand (that’s what they call pints up here), they start venting about the “<a href="https://www.theguardian.com/commentisfree/2023/mar/11/users-advertisers-we-are-all-trapped-in-the-enshittification-of-the-internet" data-link-name="in body link">enshittification</a>” of streaming – enshittification being the process by which platforms degrade their services and ultimately die in the pursuit of profit. Netflix now costs upwards of 199 SEK (£15), and you need more and more subscriptions to watch the same shows you used to find in one place. Most platforms now offer plans that, despite the fee, force advertisements on subscribers. Regional restrictions often compel users to use VPNs to access the full selection of available content. The average European household now spends close to €700 (£600) a year on three or more VOD subscriptions. People pay more and get less.</p><p>A fellow film critic confides anonymously: “I never stopped pirating, and my partner also does it if he doesn’t find the precise edition he is looking for on DVD.” While some people never abandoned piracy, others admit they have recently returned – this time turning to unofficial streaming platforms. One commonly used app is legal but can, through community add-ons, channel illicit streams. “Downloading is too difficult. I don’t know where to start,” says one film viewer. “The shady streams might bombard me with ads, but at least I don’t have to worry about getting hacked or caught.”</p><figure id="b48629a1-38f6-493a-a2f4-d39ff493dcdb" data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.ImageBlockElement"><div id="img-2"><picture><source srcset="https://i.guim.co.uk/img/media/81bce2ef8b608cc355c742fbcc5492d22b27128f/144_0_4309_3447/master/4309.jpg?width=620&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 660px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 660px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/81bce2ef8b608cc355c742fbcc5492d22b27128f/144_0_4309_3447/master/4309.jpg?width=620&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 660px)"><source srcset="https://i.guim.co.uk/img/media/81bce2ef8b608cc355c742fbcc5492d22b27128f/144_0_4309_3447/master/4309.jpg?width=605&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 480px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 480px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/81bce2ef8b608cc355c742fbcc5492d22b27128f/144_0_4309_3447/master/4309.jpg?width=605&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 480px)"><source srcset="https://i.guim.co.uk/img/media/81bce2ef8b608cc355c742fbcc5492d22b27128f/144_0_4309_3447/master/4309.jpg?width=445&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 320px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 320px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/81bce2ef8b608cc355c742fbcc5492d22b27128f/144_0_4309_3447/master/4309.jpg?width=445&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 320px)"><img alt="Life on the open seas … Swedish-based filesharing website The Pirate Bay." src="https://i.guim.co.uk/img/media/81bce2ef8b608cc355c742fbcc5492d22b27128f/144_0_4309_3447/master/4309.jpg?width=445&amp;dpr=1&amp;s=none&amp;crop=none" width="445" height="355.9793455558134" loading="lazy"></picture></div><figcaption data-spacefinder-role="inline"><span><svg width="18" height="13" viewBox="0 0 18 13"><path d="M18 3.5v8l-1.5 1.5h-15l-1.5-1.5v-8l1.5-1.5h3.5l2-2h4l2 2h3.5l1.5 1.5zm-9 7.5c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5 1.6 3.5 3.5 3.5z"></path></svg></span><span>Life on the open seas … Swedish-based filesharing website The Pirate Bay.</span> Photograph: FocusDigital/Alamy</figcaption></figure><p>According to London‑based piracy monitoring and content‑protection firm MUSO, unlicensed streaming is the predominant source of TV and film piracy, <a href="https://6347345.fs1.hubspotusercontent-na1.net/hubfs/6347345/2023%20Piracy%20by%20Industry%20Data%20Review-Final.pdf?utm_campaign=PBI%202023%20Report&amp;utm_medium=email&amp;_hsmi=293335558&amp;utm_content=293335558&amp;utm_source=hs_automation" data-link-name="in body link">accounting for 96% in 2023</a>. Piracy reached a low in 2020, <a href="https://go.skimresources.com/?id=114047X1572903&amp;url=https%3A%2F%2Fwww.muso.com%2Fmagazine%2Fpiracy-in-2020-a-snapshot-view&amp;sref=https://www.theguardian.com/film/2025/aug/14/cant-pay-wont-pay-impoverished-streaming-services-are-driving-viewers-back-to-piracy" data-link-name="in body link" rel="sponsored">with 130bn website visits</a>. But by 2024 that number had <a href="https://go.skimresources.com/?id=114047X1572903&amp;url=https%3A%2F%2Fwww.muso.com%2Fhubfs%2FMUSO%202024%20Piracy%20Trends%20and%20Insights.pdf%3Futm_campaign%3D14558771-PBI%202024%20Report%26utm_medium%3Demail%26_hsenc%3Dp2ANqtz--MxOOHl79OsqQo6ki3Gf5COqdPi0yBUfhx-44mumXNkbtAcNdUjuVEM9ExygGjXWtC96dErUITjwbeR1rwzPTzX320sg%26_hsmi%3D365727189%26utm_content%3D365727189%26utm_source%3Dhs_automation&amp;sref=https://www.theguardian.com/film/2025/aug/14/cant-pay-wont-pay-impoverished-streaming-services-are-driving-viewers-back-to-piracy" data-link-name="in body link" rel="sponsored">risen to 216bn.</a> In Sweden, <a href="https://ttvk.fi/assets/uploads/2023/05/mediavision-nordic-piracy-2023-press-fi.pdf" data-link-name="in body link">25% of people surveyed reported pirating in 2024</a>, a trend mostly driven by those aged 15 to 24. Piracy is back, just sailing under a different flag.</p><figure id="3f649544-04ce-47d8-8048-d7cf351a35fc" data-spacefinder-role="richLink" data-spacefinder-type="model.dotcomrendering.pageElements.RichLinkBlockElement"><gu-island name="RichLinkComponent" priority="feature" deferuntil="idle" props="{&quot;richLinkIndex&quot;:9,&quot;element&quot;:{&quot;_type&quot;:&quot;model.dotcomrendering.pageElements.RichLinkBlockElement&quot;,&quot;prefix&quot;:&quot;Related: &quot;,&quot;text&quot;:&quot;Streaming was supposed to stop piracy. Now it is easier than ever&quot;,&quot;elementId&quot;:&quot;3f649544-04ce-47d8-8048-d7cf351a35fc&quot;,&quot;role&quot;:&quot;richLink&quot;,&quot;url&quot;:&quot;https://www.theguardian.com/film/2021/oct/02/streaming-was-supposed-to-stop-piracy-now-it-is-easier-than-ever&quot;},&quot;ajaxUrl&quot;:&quot;https://api.nextgen.guardianapps.co.uk&quot;,&quot;format&quot;:{&quot;design&quot;:10,&quot;display&quot;:0,&quot;theme&quot;:3}}"></gu-island></figure><p>“Piracy is not a pricing issue,” Gabe Newell, the co-founder of Valve, the company behind the world’s largest PC gaming platform, Steam, <a href="https://www.gamesradar.com/gabe-newell-piracy-issue-service-not-price/" data-link-name="in body link">observed in 2011</a>. “It’s a service issue.” Today, the crisis in streaming makes this clearer than ever. With titles scattered, prices on the rise, and <a href="https://www.forbes.com/sites/barrycollins/2020/05/12/the-netflix-lottery-how-your-browser-choice-affects-streaming-quality/" data-link-name="in body link">bitrates throttled depending on your browser</a>, it is little wonder some viewers are raising the jolly roger again. Studios carve out fiefdoms, build walls and levy tolls for those who wish to visit. The result is artificial scarcity in a digital world that promised abundance.</p><p>Whether piracy today is rebellion or resignation is almost irrelevant; the sails are hoisted either way. As the streaming landscape fractures into feudal territories, more viewers are turning to the high seas. The Medici understood the value linked to access. A client could travel from Rome to London and still draw on their credit, thanks to a network built on trust and interoperability. If today’s studios want to survive the storm, they may need to rediscover that truth.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gemma 3 270M: Compact model for hyper-efficient AI (475 pts)]]></title>
            <link>https://developers.googleblog.com/en/introducing-gemma-3-270m/</link>
            <guid>44902148</guid>
            <pubDate>Thu, 14 Aug 2025 16:08:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://developers.googleblog.com/en/introducing-gemma-3-270m/">https://developers.googleblog.com/en/introducing-gemma-3-270m/</a>, See on <a href="https://news.ycombinator.com/item?id=44902148">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

    
      
    

    

    

    

    
    <div>
          

<div>
    <p data-block-key="8637c">The last few months have been an exciting time for the Gemma family of open models. We introduced <a href="https://blog.google/technology/developers/gemma-3/">Gemma 3</a> and <a href="https://developers.googleblog.com/en/gemma-3-quantized-aware-trained-state-of-the-art-ai-to-consumer-gpus/">Gemma 3 QAT</a>, delivering state-of-the-art performance for single cloud and desktop accelerators. Then, we announced the full release of <a href="https://developers.googleblog.com/en/introducing-gemma-3n/">Gemma 3n</a>, a mobile-first architecture bringing powerful, real-time multimodal AI directly to edge devices. Our goal has been to provide useful tools for developers to build with AI, and we continue to be <a href="https://www.youtube.com/watch?v=Fx6IuEggeac">amazed</a> by the vibrant <a href="https://deepmind.google/models/gemma/gemmaverse/">Gemmaverse</a> you are helping create, celebrating together as downloads surpassed 200 million last week.</p><p data-block-key="6eq2f">Today, we're adding a new, highly specialized tool to the Gemma 3 toolkit: <a href="https://ai.google.dev/gemma/docs/core/huggingface_text_full_finetune">Gemma 3 270M</a>, a compact, 270-million parameter model designed from the ground up for task-specific fine-tuning with strong instruction-following and text structuring capabilities already trained in.</p>
</div>   


    
    <div>
            
                <p><img src="https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/Gemma3-270M_Chart01_RD3-V01.original.jpg" alt="Gemma 3 270M"></p><p>
                        Gemma 3 270M brings strong instruction-following capabilities to a small-footprint model. As shown by the IFEval benchmark (which tests a model's ability to follow verifiable instructions), it establishes a new level of performance for its size, making sophisticated AI capabilities more accessible for on-device and research applications.
                    </p>
                
            
        </div>
  <div>
    <h2 data-block-key="rkc3a" id="core-capabilities-of-gemma-3-270m">Core capabilities of Gemma 3 270M</h2><ul><li data-block-key="4ki9m"><b>Compact and capable architecture:</b> Our new model has a total of 270 million parameters: 170 million embedding parameters due to a large vocabulary size and 100 million for our transformer blocks. Thanks to the large vocabulary of 256k tokens, the model can handle specific and rare tokens, making it a strong base model to be further fine-tuned in specific domains and languages.</li></ul><ul><li data-block-key="394ff"><b>Extreme energy efficiency:</b> A key advantage of Gemma 3 270M is its low power consumption. Internal tests on a Pixel 9 Pro SoC show the INT4-quantized model used just 0.75% of the battery for 25 conversations, making it our most power-efficient Gemma model.</li></ul><ul><li data-block-key="5c37m"><b>Instruction following:</b> An instruction-tuned model is released alongside a pre-trained checkpoint. While this model is not designed for complex conversational use cases, it’s a strong model that follows general instructions right out of the box.</li></ul><ul><li data-block-key="fonft"><b>Production-ready quantization:</b> <a href="https://developers.googleblog.com/en/gemma-3-quantized-aware-trained-state-of-the-art-ai-to-consumer-gpus/">Quantization-Aware Trained</a> (QAT) <a href="https://huggingface.co/collections/google/gemma-3-release-67c6c6f89c4f76621268bb6d">checkpoints are available</a>, enabling you to run the models at INT4 precision with minimal performance degradation, which is essential for deploying on resource-constrained devices.</li></ul><p data-block-key="cr9ib">In engineering, success is defined by efficiency, not just raw power. You wouldn't use a sledgehammer to hang a picture frame. The same principle applies to building with AI.</p><p data-block-key="2mh3o">Gemma 3 270M embodies this "right tool for the job" philosophy. It's a high-quality foundation model that follows instructions well out of the box, and its true power is unlocked through fine-tuning. Once specialized, it can execute tasks like text classification and data extraction with remarkable accuracy, speed, and cost-effectiveness. By starting with a compact, capable model, you can build production systems that are lean, fast, and dramatically cheaper to operate.</p><h2 data-block-key="nmmxb" id="a-real-world-blueprint-for-success"><b><br></b>A real-world blueprint for success</h2><p data-block-key="9ef55">The power of this approach has already delivered incredible results in the real world. A perfect example is <a href="https://deepmind.google/models/gemma/gemmaverse/adaptiveml/">the work done by Adaptive ML with SK Telecom.</a> Facing the challenge of nuanced, multilingual content moderation, they chose to specialize. Instead of using a massive, general-purpose model, Adaptive ML fine-tuned a Gemma 3 4B model. The results were stunning: the specialized Gemma model not only met but exceeded the performance of much larger proprietary models on its specific task.</p><p data-block-key="8htle">Gemma 3 270M is designed to let developers take this approach even further, unlocking even greater efficiency for well-defined tasks. It's the perfect starting point for creating a fleet of small, specialized models, each an expert at its own task.</p><p data-block-key="fah9p">But this power of specialization isn't just for enterprise tasks; it also enables powerful creative applications. For example, check out <a href="https://huggingface.co/spaces/webml-community/bedtime-story-generator">this Bedtime Story Generator web app</a>:</p>
</div>  <div>
    
    
        
            <p>Gemma 3 270M used to power a Bedtime Story Generator web app using Transformers.js. The model’s size and performance make it suitable for offline, web-based, creative tasks. (Credit: Joshua (@xenovacom on X) from the Hugging Face team)</p>
        
    
</div>  <div>
    <h2 data-block-key="emj2p" id="when-to-choose-gemma-3-270m">When to choose Gemma 3 270M</h2><p data-block-key="88i9k">Gemma 3 270M inherits the advanced architecture and robust pre-training of the Gemma 3 collection, providing a solid foundation for your custom applications.</p><p data-block-key="5p4a2">Here’s when it’s the perfect choice:</p><ul><li data-block-key="dp1oc"><b>You have a high-volume, well-defined task.</b> Ideal for functions like sentiment analysis, entity extraction, query routing, unstructured to structured text processing, creative writing, and compliance checks.</li></ul><ul><li data-block-key="fb2n2"><b>You need to make every millisecond and micro-cent count.</b> Drastically reduce, or eliminate, your inference costs in production and deliver faster responses to your users. A fine-tuned 270M model can run on lightweight, inexpensive infrastructure or directly on-device.</li></ul><ul><li data-block-key="7oe6a"><b>You need to iterate and deploy quickly.</b> The small size of Gemma 3 270M allows for rapid fine-tuning experiments, helping you find the perfect configuration for your use case in hours, not days.</li></ul><ul><li data-block-key="e03e8"><b>You need to ensure user privacy.</b> Because the model can run entirely on-device, you can build applications that handle sensitive information without ever sending data to the cloud.</li></ul><ul><li data-block-key="1jppn"><b>You want a fleet of specialized task models.</b> Build and deploy multiple custom models, each expertly trained for a different task, without breaking your budget.</li></ul><h2 data-block-key="0huhw" id="get-started-with-fine-tuning"><b><br></b>Get started with fine-tuning</h2><p data-block-key="1jvma">We want to make it as easy as possible to turn Gemma 3 270M into your own custom solution. It’s built on the same architecture as the rest of the Gemma 3 models, with recipes and tools to get you started quickly. You can find our guide on <a href="https://ai.google.dev/gemma/docs/core/huggingface_text_full_finetune">full fine-tuning</a> using Gemma 3 270M as part of the Gemma docs.</p><ul><li data-block-key="1448a"><b>Download the model:</b> Get the Gemma 3 270M models from <a href="https://huggingface.co/collections/google/gemma-3-release-67c6c6f89c4f76621268bb6d">Hugging Face</a>, <a href="https://ollama.com/library/gemma3">Ollama</a>, <a href="https://www.kaggle.com/models/google/gemma-3">Kaggle</a>, <a href="https://lmstudio.ai/models/google/gemma-3-270m">LM Studio</a>, or <a href="https://hub.docker.com/r/ai/gemma3">Docker</a>. We are releasing both pretrained and instruction tuned models.</li></ul><ul><li data-block-key="aqpc"><b>Try the model:</b> Try the models on <a href="https://console.cloud.google.com/vertex-ai/publishers/google/model-garden/gemma3">Vertex AI</a> or with popular inference tools like <a href="https://huggingface.co/collections/ggml-org/gemma-3-270m-689e0105d56462786413d7fc">llama.cpp</a> <a href="https://www.kaggle.com/models/google/gemma-3/gemmaCpp">Gemma.cpp</a>, <a href="https://huggingface.co/litert-community/gemma-3-270m-it">LiteRT</a>, <a href="https://www.kaggle.com/models/keras/gemma3">Keras</a>, and <a href="https://huggingface.co/collections/mlx-community/gemma-3-67d14a10480a436ad478b0f9">MLX</a>.</li></ul><ul><li data-block-key="1ahr6"><b>Start fine-tuning:</b> Use your favorite tools, including <a href="http://ai.google.dev/gemma/docs/core/huggingface_text_full_finetune">Hugging Face</a>, <a href="https://docs.unsloth.ai/basics/gemma-3-how-to-run-and-fine-tune">UnSloth</a>, and <a href="https://gemma-llm.readthedocs.io/en/latest/colab_finetuning.html">JAX.</a></li></ul><ul><li data-block-key="4vece"><b>Deploy your solution:</b> Once fine-tuned, you can deploy your specialized model anywhere, from <a href="http://localhost:8080/">your own local environment</a> to <a href="https://cloud.google.com/run/docs/run-gemma-on-cloud-run">Google Cloud Run</a>.</li></ul><p data-block-key="1fc66">The Gemmaverse is built on the idea that innovation comes in all sizes. With Gemma 3 270M, we’re empowering developers to build smarter, faster, and more efficient AI solutions. We can’t wait to see the specialized models you create.</p>
</div> 
      </div>
    

    

    
    
    
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I made a real-time C/C++/Rust build visualizer (155 pts)]]></title>
            <link>https://danielchasehooper.com/posts/syscall-build-snooping/</link>
            <guid>44902127</guid>
            <pubDate>Thu, 14 Aug 2025 16:06:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://danielchasehooper.com/posts/syscall-build-snooping/">https://danielchasehooper.com/posts/syscall-build-snooping/</a>, See on <a href="https://news.ycombinator.com/item?id=44902127">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Many software projects take a long time to compile. Sometimes that’s just due to the sheer amount of code, like in the LLVM project. But often a build is slower than it should be for dumb, fixable reasons.</p><p>I’ve had the suspicion that <em>most</em> builds are doing dumb stuff, but I had no way to <em>see it</em>. So I’ve been working on a cross-platform tool to help speed up builds (you can try it, see below). It works with any build system or programming language (Not just C/C++). Its timeline looks like this:</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/rust-proj_hu5c161a437365ba7a83eec07e039d5c8d_343237_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/rust-proj_hu5c161a437365ba7a83eec07e039d5c8d_343237_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/rust-proj_hu5c161a437365ba7a83eec07e039d5c8d_343237_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/rust-proj_hu5c161a437365ba7a83eec07e039d5c8d_343237_675x0_resize_box_3.png 1x" alt="What the Fork showing the build timeline of a Rust project"></p><p>It’s more than just a generic system profiler: it looks for build-specific problems. A few examples: using make without the <code>-j</code> flag, disproportionate time being spent on certain files or compiler phases (as reported by tools like clang’s <code>-ftime-trace</code>), and commands that could’ve been run in parallel but weren’t. It’s especially helpful for optimizing CI builds, which are often clean rebuilds without caching.</p><p>I named it <code>What the Fork</code> after the <a href="https://en.wikipedia.org/wiki/Fork_%28system_call%29" target="_blank" rel="noopener"><code>fork()</code></a> system call that spawns new processes. You use it by writing <code>wtf</code> before a build command:</p><div><pre tabindex="0"><code data-lang="sh"><span><span>$ <span># A few possible examples:</span>
</span></span><span><span>$ wtf make
</span></span><span><span>$ wtf cargo build
</span></span><span><span>$ wtf gradle build
</span></span><span><span>$ wtf npm run build
</span></span><span><span>$ wtf zig build
</span></span><span><span>$ wtf -x <span># starts a build of the front most Xcode window</span>
</span></span></code></pre></div><p>Here it is recording the build of a macOS app:</p><video playsinline="" autoplay="" loop="" muted="" width="100%">
<source src="https://danielchasehooper.com/posts/syscall-build-snooping/build.mp4" type="video/mp4">Your browser does not support the video tag.</video><h2 id="how-it-works">How it works</h2><p>A build is just a bunch of commands that produce your finished program. At its simplest, it could be a shell script like this:</p><div><pre tabindex="0"><code data-lang="sh"><span><span><span>#!/bin/bash
</span></span></span><span><span><span></span>clang main.c -o program
</span></span></code></pre></div><p>That script requires 3 programs to produce the final result: <code>bash</code>, <code>clang</code>, and — <em>surprise!</em> — <code>ld</code>, the linker, which clang runs automatically. Unexpected build steps are often the source of slowdowns and are even more likely in bigger projects, which often use something like <code>cargo</code>, <code>make</code>, <code>bazel</code>, <code>gradle</code>, or <code>xcodebuild</code> instead of a shell script. Those tools still just execute commands, but they also perform caching, dependency analysis, and scheduling to do the least amount of work as efficiently as possible.</p><p>While you can see the commands a build tool runs by watching the terminal output, that doesn’t tell you what commands <em>those</em> commands run (like <code>clang</code> running <code>ld</code>) and doesn’t include detailed timing! So if we want to see <em>everything</em> a build does, we need to listen for the system calls that start and terminate processes: <code>fork</code>, <code>exec</code>, and <code>exit</code>. Each operating system has a its own way to do that:</p><ul><li>macOS has the Endpoint Security API</li><li>Linux has <code>ptrace()</code></li><li>Windows has the “<a href="https://caseymuratori.com/blog_0025" target="_blank" rel="noopener">Worst API Ever Made</a>”: Event Tracing for Windows</li></ul><p>Each of those API are a pain to use for different reasons, but they do provide the information required to reconstruct a timeline. Here is our simple shell script’s execution visualized in the macOS version of <code>What the Fork</code>.</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/small-script_hucab220b15dadc25e4cd89a41bea39703_677666_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/small-script_hucab220b15dadc25e4cd89a41bea39703_677666_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/small-script_hucab220b15dadc25e4cd89a41bea39703_677666_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/small-script_hucab220b15dadc25e4cd89a41bea39703_677666_675x0_resize_box_3.png 1x" alt="build timeline of a simple build script"></p><p>Keen readers will have noticed that these techniques allow the app to be used on any type of program that launches sub-processes - not just builds! If you have any ideas for how that might be useful outside of build optimization, let me know.</p><h2 id="things-ive-noticed">Things I’ve Noticed</h2><p>Being able to see your build reveals a lot. I’ve had engineers from Delta, Mozilla, and Apple try the tool on their projects and each one found something unexpected. Let me give you some examples.</p><p>I’ll start with an open source project that uses cargo to build. I’m going to zoom in on the compilation of a single dependency:</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/capstone-cargo_hu7a47cc24786eaca6491b42c9b080c516_1188612_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/capstone-cargo_hu7a47cc24786eaca6491b42c9b080c516_1188612_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/capstone-cargo_hu7a47cc24786eaca6491b42c9b080c516_1188612_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/capstone-cargo_hu7a47cc24786eaca6491b42c9b080c516_1188612_675x0_resize_box_3.png 1x" alt="cargo compiling a dependency without any parallelism"></p><p>Oops! No parallelism! Files are compiled one at a time. It could be about 10 times faster if cargo ran multiple commands at once on my 10 core M1 CPU. I’d have never noticed this without a timeline visualization. If you want to see what good parallelism looks like, check out how <code>ninja</code> builds the llvm project:</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/llvm-ninja_hudb211a64d5721909fcd6e62f8cf6bcfc_3213324_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/llvm-ninja_hudb211a64d5721909fcd6e62f8cf6bcfc_3213324_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/llvm-ninja_hudb211a64d5721909fcd6e62f8cf6bcfc_3213324_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/llvm-ninja_hudb211a64d5721909fcd6e62f8cf6bcfc_3213324_675x0_resize_box_3.png 1x" alt="ninja compiling llvm"></p><p>Every core of my machine is kept busy the entire time. It’s actually slightly over-subscribed with 12 jobs in flight on my 10 core machine, which <a href="https://github.com/ninja-build/ninja/blob/370edd49a47379d0c3ff0c0ae9d825e627fd37c3/src/ninja.cc#L253-L264" target="_blank" rel="noopener">is intentional</a> in case some jobs are blocked on IO. Perfection. Perfect is boring though, lets look at a problem. Here’s a tiny slice of a CMake build from another open source project:</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/one_file_hu7598642d0b8c3cdff846be8cded6b8df_16601_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/one_file_hu7598642d0b8c3cdff846be8cded6b8df_16601_980x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/one_file_hu7598642d0b8c3cdff846be8cded6b8df_16601_980x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/one_file_hu7598642d0b8c3cdff846be8cded6b8df_16601_675x0_resize_box_3.png 1x" alt="cmake compiling one file"></p><p>Here CMake gets Xcode’s path with <code>xcode-select -print-path</code>, the OS version with <code>sw_vers</code>, and then recursively calls cmake/make a few times for good measure, and finally compiles and links a file.</p><p>Only the green boxes in that timeline are doing useful work. One could argue that <em>none</em> of what CMake does is “useful work”, in the sense that it just builds the thing that actually builds the project. Regardless, let’s just accept that CMake needs to do this weird cmake-&gt;make-&gt;make-&gt;clang dance to figure out the build environment.</p><p>Zooming out reveals that the weird dance happens 85 times!</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/all_files_hu17a5163277e0260f65f3209ecb6b1bf3_558046_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/all_files_hu17a5163277e0260f65f3209ecb6b1bf3_558046_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/all_files_hu17a5163277e0260f65f3209ecb6b1bf3_558046_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/all_files_hu17a5163277e0260f65f3209ecb6b1bf3_558046_675x0_resize_box_3.png 1x" alt="cmake performing 85 actions serially"></p><p>Yikes, no parallelism. It also studiously re-checks the Xcode path and OS version 85 times, just in case the OS version changes mid-build.</p><p>Ok enough about cmake. There are other builds to explore! Here’s <code>xcodebuild</code> building a 100,000 line Objective-C project:</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/principle-xcodebuild_hu177c33e60d46ac5f33a1b6a42745e4be_1310414_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/principle-xcodebuild_hu177c33e60d46ac5f33a1b6a42745e4be_1310414_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/principle-xcodebuild_hu177c33e60d46ac5f33a1b6a42745e4be_1310414_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/principle-xcodebuild_hu177c33e60d46ac5f33a1b6a42745e4be_1310414_675x0_resize_box_3.png 1x" alt="xcodebuild compiling Principle, an Objective-C project"></p><p>Notice how it has gaps towards the end of the build where it only has one or two clang processes running, even when there is a lot more to do.</p><p>It also has 6 seconds of inactivity before starting any useful work. For comparison, <code>ninja</code> takes 0.4 seconds to start compiling the 2,468,083 line llvm project. Ninja is not a 100% fair comparison to other tools, because it benefits from some “baked in” build logic by the tool that created the ninja file, but I think it’s a reasonable “speed of light” performance benchmark for build systems.</p><p>Continuing our tour of various builds, here’s Zig compiling the <a href="https://github.com/orca-app/orca" target="_blank" rel="noopener">Orca Project</a>:</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/orca-zig_hu9ab95d42801dbcc0321d45838c4291e8_2989447_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/orca-zig_hu9ab95d42801dbcc0321d45838c4291e8_2989447_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/orca-zig_hu9ab95d42801dbcc0321d45838c4291e8_2989447_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/orca-zig_hu9ab95d42801dbcc0321d45838c4291e8_2989447_675x0_resize_box_3.png 1x" alt="the Orca project being compiled by zig build"></p><p>What’s interesting here is that <code>zig build</code> builds dependencies in a random order (To expose ordering problems due to misconfigured builds). That means that sometimes it gets lucky with the ordering, like in the previous image where it’s fast. But sometimes it’s unlucky, like below where the <code>curl</code> dependency got scheduled at the verrrry end, so it doesn’t have any parallelism with the rest of the project:</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/orca-unlucky_hub708cfbf5e2380ba8996c638e4c98dfd_2048208_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/orca-unlucky_hub708cfbf5e2380ba8996c638e4c98dfd_2048208_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/orca-unlucky_hub708cfbf5e2380ba8996c638e4c98dfd_2048208_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/orca-unlucky_hub708cfbf5e2380ba8996c638e4c98dfd_2048208_675x0_resize_box_3.png 1x" alt="Orca built with curl scheduled last"></p><p>And finally, here’s make/go compiling the github cli project:</p><p><img src="https://danielchasehooper.com/posts/syscall-build-snooping/go_hua28baab3a050f6559e2a55f546cafcf6_1609376_675x0_resize_box_3.png" width="675" srcset="https://danielchasehooper.com/posts/syscall-build-snooping/go_hua28baab3a050f6559e2a55f546cafcf6_1609376_1350x0_resize_box_3.png 3x, https://danielchasehooper.com/posts/syscall-build-snooping/go_hua28baab3a050f6559e2a55f546cafcf6_1609376_1350x0_resize_box_3.png 2x, https://danielchasehooper.com/posts/syscall-build-snooping/go_hua28baab3a050f6559e2a55f546cafcf6_1609376_675x0_resize_box_3.png 1x" alt="make/go compiling the github cli project"></p><p>That big blank area towards the left is all the project’s dependencies being downloaded, so if I wanted to speed up this project’s clean builds, I’d focus on reducing dependencies first. Dependencies are kind of a build-double-whammy because guess what those long “compile” commands are: the dependencies <code>go-control-plane</code>, <code>protobuf</code>, <code>gojq</code>, etc.</p><p>That’s just a sampling of the things I’ve learned by visualizing builds. Of course there are more nuanced issues you can find by looking at a process’s full command, but today I wanted to focus on things that I could show visually.</p><h2 id="early-access">Early Access</h2><p><code>What the Fork</code> runs on Windows, Linux, and macOS. If you’re interested in trying it and providing feedback, join the early access group <a href="https://docs.google.com/forms/d/e/1FAIpQLScVms7Eu64BOm9usl1vcWxTUxW4IcMfmnopAWutj35QOw9ijg/viewform?usp=dialog" target="_blank" rel="noopener">here</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I built a free alternative to Adobe Acrobat PDF viewer (136 pts)]]></title>
            <link>https://github.com/embedpdf/embed-pdf-viewer</link>
            <guid>44901683</guid>
            <pubDate>Thu, 14 Aug 2025 15:34:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/embedpdf/embed-pdf-viewer">https://github.com/embedpdf/embed-pdf-viewer</a>, See on <a href="https://news.ycombinator.com/item?id=44901683">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto">
  <p><a href="https://www.embedpdf.com/" rel="nofollow">
    <img alt="EmbedPDF logo" src="https://camo.githubusercontent.com/0807ffd40fdb80e7e4ba772447ae1e8327480285cc104a99bf04c37960b7ec6b/68747470733a2f2f7777772e656d6265647064662e636f6d2f6c6f676f2d3139322e706e67" height="96" data-canonical-src="https://www.embedpdf.com/logo-192.png">
  </a></p><p dir="auto"><h2 tabindex="-1" dir="auto">EmbedPDF</h2><a id="user-content-embedpdf" aria-label="Permalink: EmbedPDF" href="#embedpdf"></a></p>
  
<p dir="auto"><a href="https://github.com/embedpdf/embed-pdf-viewer/blob/main/LICENSE"><img alt="License" src="https://camo.githubusercontent.com/3e0bff69db49e978cd4ec699510b6ecc7fa672634599925f82537a546d255692/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f40656d6265647064662f70646669756d2e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030" data-canonical-src="https://img.shields.io/npm/l/@embedpdf/pdfium.svg?style=for-the-badge&amp;labelColor=000000"></a>
<a href="https://snippet.embedpdf.com/" rel="nofollow"><img alt="Live demo" src="https://camo.githubusercontent.com/565a80b8810a01dab63122429036ab0b3565e8ec03e877745153cbc2a7f70379/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5472792532307468652532304c69766525323044656d6f2d6666313439332e7376673f7374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030" data-canonical-src="https://img.shields.io/badge/Try%20the%20Live%20Demo-ff1493.svg?style=for-the-badge&amp;labelColor=000000"></a>
<a href="https://discord.gg/mHHABmmuVU" rel="nofollow"><img alt="Join our Discord" src="https://camo.githubusercontent.com/2a42e7d8077f06a935384f281c31ca56b3adceaaa7bd8267c3c206b66fc58548/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f313335313639343535313034373437353331333f6c6f676f3d646973636f7264267374796c653d666f722d7468652d6261646765266c6162656c436f6c6f723d303030303030" data-canonical-src="https://img.shields.io/discord/1351694551047475313?logo=discord&amp;style=for-the-badge&amp;labelColor=000000"></a></p>
</div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Open‑Source JavaScript PDF Viewer</h2><a id="user-content-opensource-javascript-pdf-viewer" aria-label="Permalink: Open‑Source JavaScript PDF Viewer" href="#opensource-javascript-pdf-viewer"></a></p>
<p dir="auto"><strong>EmbedPDF</strong> is a framework‑agnostic, MIT‑licensed PDF viewer that drops into <em>any</em> JavaScript project. Whether you build with <strong>React, Vue, Svelte, Preact,</strong> or vanilla JS, EmbedPDF delivers a smooth, modern reading experience and a clean developer API.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">📚 Documentation</h2><a id="user-content--documentation" aria-label="Permalink: 📚 Documentation" href="#-documentation"></a></p>
<p dir="auto">Full docs, installation guides, API reference, and examples:</p>
<p dir="auto">👉 <strong><a href="https://www.embedpdf.com/" rel="nofollow">https://www.embedpdf.com</a></strong></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Live Demo</h2><a id="user-content--live-demo" aria-label="Permalink: 🚀 Live Demo" href="#-live-demo"></a></p>
<p dir="auto">Try it now — load your own PDF or use the sample:</p>
<p dir="auto">👉 <strong><a href="https://app.embedpdf.com/" rel="nofollow">https://app.embedpdf.com</a></strong></p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">✨ Features</h2><a id="user-content--features" aria-label="Permalink: ✨ Features" href="#-features"></a></p>
<ul dir="auto">
<li>Annotations (highlight, sticky notes, free text, ink)</li>
<li>True redaction (content is actually removed)</li>
<li>Search, text selection, zoom, rotation</li>
<li>Smooth, virtualized scrolling</li>
<li>Pluggable architecture &amp; tree-shakable plugins</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🤝 Contributing</h2><a id="user-content--contributing" aria-label="Permalink: 🤝 Contributing" href="#-contributing"></a></p>
<p dir="auto">We love contributions! To get started, read our <a href="https://github.com/embedpdf/embed-pdf-viewer/blob/main/CONTRIBUTING.md">contributing guide</a> and jump into the <a href="https://github.com/embedpdf/embed-pdf-viewer/discussions">GitHub discussions</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">📄 License</h2><a id="user-content--license" aria-label="Permalink: 📄 License" href="#-license"></a></p>
<p dir="auto">This project is licensed under the MIT License. See the <a href="https://github.com/embedpdf/embed-pdf-viewer/blob/main/LICENSE">LICENSE</a> file for details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Third-Party Licenses</h2><a id="user-content-third-party-licenses" aria-label="Permalink: Third-Party Licenses" href="#third-party-licenses"></a></p>
<p dir="auto">This project includes PDFium, licensed under the <a href="https://github.com/embedpdf/embed-pdf-viewer/blob/main/packages/pdfium/LICENSE.pdfium">Apache License, Version 2.0</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kodak has no plans to cease, go out of business, or file for bankruptcy (275 pts)]]></title>
            <link>https://www.kodak.com/en/company/blog-post/statement-regarding-misleading-media-reports/</link>
            <guid>44901330</guid>
            <pubDate>Thu, 14 Aug 2025 15:09:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.kodak.com/en/company/blog-post/statement-regarding-misleading-media-reports/">https://www.kodak.com/en/company/blog-post/statement-regarding-misleading-media-reports/</a>, See on <a href="https://news.ycombinator.com/item?id=44901330">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__nuxt" data-server-rendered="true"> <main tabindex="-1"> <div data-fetch-key="PageBlog:0"><p>Media reports that Kodak is ceasing operations, going out of business, or filing for bankruptcy are inaccurate and reflect a fundamental misunderstanding of a recent technical disclosure the Company made to the SEC in its recently filed second quarter earnings report. These articles are misleading and missing critical context, and we'd like to set the record straight.</p>
<p>The most important things to know are:</p>
<ul><li><strong>Kodak has no plans to cease operations, go out of business, or file for bankruptcy protection.</strong></li><li><strong>To the contrary, Kodak is confident it will repay, extend, or refinance its debt and preferred stock on, or before, its due date.</strong></li><li><strong>When the transactions we have planned are completed, which is expected to be early next year, Kodak will have a stronger balance sheet than we have had in years and will be virtually net debt free.</strong></li><li><strong>The "going concern disclosure" is a technical report that is required by accounting rules.</strong></li><li><strong>We will continue to meet our obligations to all pension fund participants. </strong></li></ul>
<p><u>Pension Fund Transaction</u>
<br>Kodak has been preparing for the pension plan termination for some time and expects to receive approximately $500 million of assets – <em>after</em>
meeting our obligations to all pension fund participants – in December 2025 when the transaction closes. Approximately $300 million of the funds are expected to be cash, and approximately $200 million are expected to be investment assets that will be converted into cash. </p>
<p><u>Kodak's Debt Position </u>
<br>To provide context, Kodak currently has $477 million of term debt and $100 million of preferred stock outstanding. Kodak is required by its loan documents to use the $300 million of cash expected to be received in December to repay term debt. Kodak can then address the remaining $177 million of term debt and $100 million of preferred stock.</p>
<p><u>Kodak's Ongoing Operations</u>
<br>In addition to our focus on reducing debt and interest payments, we believe our business is stable and self-sustaining. In Q2 2025 we used only $3 million in cash, primarily to invest in growth initiatives, a significant improvement compared with Q1, and we do not plan to rely on cash from the pension fund transaction to fund our operations.</p>
<p>In short, Kodak is confident in its plan to meet all its obligations and optimistic about its future.</p>
<p>For more detailed information about this topic, please review Kodak's Form 10-Q filed with the SEC on August 11, 2025, including the cautionary language about forward looking statements in such filing which are incorporated by reference herein.</p></div></main> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Meta's flirty AI chatbot invited a retiree to New York (103 pts)]]></title>
            <link>https://www.reuters.com/investigates/special-report/meta-ai-chatbot-death/</link>
            <guid>44901123</guid>
            <pubDate>Thu, 14 Aug 2025 14:53:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/investigates/special-report/meta-ai-chatbot-death/">https://www.reuters.com/investigates/special-report/meta-ai-chatbot-death/</a>, See on <a href="https://news.ycombinator.com/item?id=44901123">Hacker News</a></p>
Couldn't get https://www.reuters.com/investigates/special-report/meta-ai-chatbot-death/: Error: Request failed with status code 401]]></description>
        </item>
    </channel>
</rss>