<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 26 Jul 2024 10:30:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Zulip 9.0: Organized chat for distributed teams (110 pts)]]></title>
            <link>https://blog.zulip.com/2024/07/25/zulip-9-0-released/</link>
            <guid>41075934</guid>
            <pubDate>Fri, 26 Jul 2024 05:14:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.zulip.com/2024/07/25/zulip-9-0-released/">https://blog.zulip.com/2024/07/25/zulip-9-0-released/</a>, See on <a href="https://news.ycombinator.com/item?id=41075934">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <article><section> <a href="https://blog.zulip.com/tag/major-releases/">Major releases</a>, <a href="https://blog.zulip.com/tag/release-announcements/">Release announcements</a> </section><section> <a href="https://blog.zulip.com/author/tabbott/"> <img src="https://blog.zulip.com/_astro/tabbott.Y0j5haym_1QpB1I.webp" alt="" width="100" height="100" loading="lazy" decoding="async"> </a>  <span> <time datetime="2024-07-25"> Jul 25, 2024</time> <span>•</span> 15 min read</span> </section><section> <p>We’re excited to announce the release of Zulip Server 9.0, containing hundreds
of new features and bug fixes!</p>
<p><span><img src="https://blog.zulip.com/_astro/channels-and-topics.CBcwcz3r_Z2f19Cz.webp" alt="" width="996" height="950" loading="lazy" decoding="async"></span> <a href="https://zulip.com/">Zulip</a>
is an open-source team chat application designed for seamless remote and hybrid
work. With conversations
<a href="https://zulip.com/help/introduction-to-topics">organized by topic</a>, Zulip is
<a href="https://zulip.com/why-zulip/">ideal</a> for both live and asynchronous
communication. Zulip’s 100% open-source software is available as a
<a href="https://zulip.com/plans/#cloud">cloud service</a> or a
<a href="https://zulip.com/self-hosting/">self-hosted solution</a>, and is used by
thousands of organizations around the world.</p>
<p><span><img src="https://blog.zulip.com/_astro/channels-and-topics.CBcwcz3r_Z2f19Cz.webp" alt="" width="996" height="950" loading="lazy" decoding="async"></span></p>
<p>Zulip Server 9.0 is a major release, with over 5,300 new commits merged across
the project since the 8.0 release in December 2023. Notable new features include
a UI redesign with larger font size and line spacing, major improvements for
composing messages, and much more!</p>
<p>A total of 124 people contributed commits to Zulip since the 8.0 release,
bringing the project to over 1,450 code contributors. Zulip is remarkable for
its number of major contributors, with <a href="https://zulip.com/team">89 people</a>
who’ve contributed 100+ commits.</p>
<p>Huge thanks to everyone who’s
<a href="https://zulip.readthedocs.io/en/latest/overview/contributing.html">contributed</a>
to Zulip over the last several months, whether by writing code and
documentation,
<a href="https://zulip.com/help/contact-support#product-feedback">reporting issues</a>,
<a href="https://zulip.readthedocs.io/en/latest/translating/translating.html">translating</a>,
<a href="https://github.com/sponsors/zulip">supporting us financially</a>, participating in
discussions in the
<a href="https://zulip.com/development-community/">Zulip development community</a>, or just
suggesting ideas! We could not do this without the hundreds of people
<a href="https://zulip.com/help/support-zulip-project">giving back</a> to the Zulip
community.</p>
<h2 id="project-highlights">Project highlights</h2>
<p>Today marks a release of the Zulip server and web application. We’d also like to
share news and updates for the project as a whole since the 8.0 release last
December:</p>
<h2 id="apps">Apps</h2>
<p>We’ve been hard at work on Zulip’s next-generation mobile app for Android and
iOS, built with Flutter. Users can look forward to redesigned apps and a
<a href="https://chat.zulip.org/#narrow/stream/2-general/topic/Flutter/near/1582367">faster, smoother experience</a>.</p>
<p>We published a first
<a href="https://chat.zulip.org/#narrow/stream/2-general/topic/Flutter/near/1708728">community beta release</a>
last December, and have made 9 more releases since then,
<a href="https://chat.zulip.org/#narrow/stream/1-announce/topic/mobile.20beta/near/1716421">packed with features</a>.
There are over 1,700 commits in the latest release, and progress has been
accelerating, with another full-time developer and three Google Summer of Code
participants joining our mobile team this summer.</p>
<p>Later this year, we’ll announce a public beta here on the Zulip blog, so that
you can try it out and see the new smoother experience for yourself. In the
months after that, we’ll roll out the new app for everyone as the next version
of the official Zulip mobile apps on both iOS and Android.</p>
<p>Meanwhile, we’ve
<a href="https://github.com/zulip/zulip-mobile/releases">continued updating the existing mobile apps</a>
for key Zulip Server 9.0 features you’ll read about below, as well as fixing
selected bugs.</p>
<p><a href="https://github.com/zulip/zulip-terminal#readme">Zulip Terminal</a> features new
since last December include easy-to-read themes when using a transparent
terminal, improved in-app help, the ability to compose and edit messages in
external editors, and a prompt to avoid accidentally closing — and losing — the
message you are composing.</p>
<h2 id="reviews">Reviews</h2>
<ul>
<li>An in-depth
<a href="https://www.hostingadvice.com/blog/emerging-open-source-team-chat-app-set-to-rival-slack/">review of Zulip</a>
on <a href="https://www.hostingadvice.com/">HostingAdvice.com</a> described it as <em>“an
excellent solution for teams collaborating across different time zones.”</em></li>
<li>Zulip was recognized as a
<a href="https://www.getapp.com/collaboration-software/team-communication/category-leaders/">GetApp 2024 category leader</a>
for team communication. Huge thanks to our users for sharing their feedback
and helping others find us!</li>
</ul>
<h2 id="customer-stories">Customer stories</h2>
<ul>
<li>
<p>In a <a href="https://zulip.com/case-studies/gut-contact/">new case study</a>, the folks
at <a href="https://gutcontact.de/">GUT contact</a> shared how they use Zulip to manage
1,000 employees spread across 3 countries. They love how easy it’s been to
self-host the software and onboard their team.</p>
<blockquote>
<p>“Zulip was quite easy to set up, and worked instantly. 1,000 people — no
problem.”</p>
<p>— <span>Erik Dittert, Head of IT at GUT contact</span></p>
</blockquote>
</li>
<li>
<p>In another <a href="https://zulip.com/case-studies/semsee/">new case study</a>, the
InsurTech startup <a href="https://semsee.com/">Semsee</a> shared how Zulip has created
breathing room for focused work and different work schedules for their
distributed team.</p>
</li>
</ul>
<blockquote>
<p>“I don’t like going back to Slack now. It’s just not as efficient a way to
organize communication.”</p>
<p>— <span>James van Lommel, Director of Engineering at
Semsee</span></p>
</blockquote>
<ul>
<li>The Lean Prover community has
<a href="https://leanprover-community.github.io/blog/posts/FLT-announcement/">kicked off</a>
a multi-year collaboration on Zulip to formalize a proof of
<a href="https://en.wikipedia.org/wiki/Fermat%27s_Last_Theorem">Fermat’s Last Theorem</a>.
We wish them the best of luck!</li>
</ul>
<blockquote>
<p>“The project will be run on the
<a href="https://leanprover.zulipchat.com/#narrow/stream/416277-FLT">FLT channel</a> on the
<a href="https://leanprover.zulipchat.com/">Lean Zulip chat</a>, a high-powered research
forum where mathematicians and computer scientists can collaborate in real time,
effortlessly posting code and mathematics using a thread and channel system
which admirably handles the task of enabling many independent conversations to
happen simultaneously.”</p>
<p>— <span>Kevin Buzzard, announcing The Fermat’s Last
Theorem Project</span></p>
</blockquote>
<p>If using Zulip is making a difference for your organization, we’d love to
<a href="https://zulip.com/help/contact-support#product-feedback">hear about it</a>!</p>
<h2 id="mentorship">Mentorship</h2>
<p>Our community is fully committed to helping bring up the next generation of
open-source contributors. 2024 is the ninth consecutive year that Zulip is
participating in <a href="https://summerofcode.withgoogle.com/">Google Summer of Code</a>.
Our 17 GSoC 2024 participants have contributed to many of the features described
in this post!</p>
<blockquote>
<p>“The mentorship I’ve received here is unparalleled in my life, it’s the best
I’ve ever had.”</p>
<p>— <span>Niloth, Google Summer of Code 2024
participant</span></p>
</blockquote>

<p>We proudly sponsor free <a href="https://zulip.com/plans/">Zulip Cloud Standard hosting</a>
for more than 1,500 <a href="https://zulip.com/for/open-source/">open-source projects</a>,
<a href="https://zulip.com/for/communities/">non-profits</a>,
<a href="https://zulip.com/for/education/">educational institutions</a>, and
<a href="https://zulip.com/for/research/">academic research groups</a>. All eligible
organizations are encouraged to
<a href="https://zulip.com/help/zulip-cloud-billing#apply-for-sponsorship">join this program</a>,
or sign up for the
<a href="https://zulip.com/help/self-hosted-billing#apply-for-community-plan">Community plan</a>
for self-hosted organizations.</p>
<blockquote>
<p>“We are a public university that offers free education to 33,000 students across
13 cities in Brazil. We started using Zulip in early 2020, and it works
perfectly for our needs. Zulip’s interface is simple and intuitive.”</p>
<p>— <span>Rafael Cordeiro, head of IT at
</span><a href="https://www.utfpr.edu.br/">UTFPR</a></p>
</blockquote>
<blockquote>
<p>“As a research consortium spread across 14 locations in Germany, we use Zulip to
communicate with each other in a low-threshold manner, without the overhead of
email. Even with more than 200 users across different institutions, Zulip’s
model of topic-labeled conversations makes it easy for our team members to keep
up-to-date on what’s relevant, and work productively together.”</p>
<p>— <span>Christina Schüttler, IT department Team Lead at
</span><a href="https://www.uk-erlangen.de/en/">University Hospital Erlangen</a></p>
</blockquote>
<h2 id="release-highlights">Release highlights</h2>
<p>This section gives an overview of the major features and improvements in Zulip
Server 9.0.</p>
<p>Alongside the major changes, this release contains hundreds of refinements
beyond what can be described here. We believe that getting the little details
right makes a big difference in a product that’s so central to people’s daily
work. To make Zulip
<a href="https://zulip.com/case-studies/rust/#the-language-team-moves-from-discord-to-zulip-its-better-in-all-the-ways-i-care-about">a joy to use</a>,
we relentlessly fine-tune the user experience, and consider it a priority to
investigate and fix even minor bugs.</p>
<h2 id="streams-renamed-to-channels">“Streams” renamed to “channels”</h2>
<p>To better match terminology familiar from other apps, “streams” have been
renamed to “<a href="https://zulip.com/help/introduction-to-channels">channels</a>” across
the app in this release. The functionality remains exactly the same, and
integrations do not need to be updated for this transition.</p>
<h2 id="in-app-feature-announcements">In-app feature announcements</h2>
<p>To make it easier to discover what’s new in Zulip, important product changes are
<a href="https://zulip.com/help/configure-automated-notices#zulip-update-announcements">now announced</a>
via automated messages. These messages are sent to a “Zulip updates” topic in a
channel selected by organization administrators. Users can read the
announcements when it’s convenient, and chat about them in the same topic.</p>
<p>On self-hosted servers, these
<a href="https://zulip.readthedocs.io/en/latest/overview/changelog.html#upgrade-notes-for-9-0">configurable</a>
notices are shipped with the Zulip server version that includes the new feature.</p>
<h2 id="improved-reading-experience">Improved reading experience</h2>
<ul>
<li>To make reading more comfortable, Zulip has been redesigned with a larger font
size and line spacing. Because personal preferences vary, the previous design
remains available via the <a href="https://zulip.com/help/font-size">compact mode</a>
setting, and we plan to offer flexible controls for font size and line spacing
in the next major release.</li>
<li>For a more focused reading experience, you can now hide the
<a href="https://zulip.com/help/left-sidebar">left</a> and
<a href="https://zulip.com/help/user-list">right</a> sidebars even in a full-size window.
When the left sidebar is hidden,
<a href="https://zulip.com/help/keyboard-shortcuts#navigation">keyboard navigation</a>
lets you jump to the next unread topic or to your
<a href="https://zulip.com/help/configure-home-view">home view</a>. The
<a href="https://zulip.com/help/user-list">right sidebar</a> has been redesigned to
highlight users in the current channel or direct-message conversation.</li>
<li>Messages and topic names now load much faster when you open the web or desktop
app.</li>
</ul>
<p><span><img src="https://blog.zulip.com/_astro/focus-mode.CW8MPwgV_MlQm8.webp" alt="" width="2120" height="760" loading="lazy" decoding="async"></span></p>
<h2 id="improved-experience-for-composing-messages">Improved experience for composing messages</h2>
<ul>
<li>The compose box has been redesigned, with a cleaner, more modern look.</li>
<li>When you start composing, the most recently edited draft for the conversation
you are composing to now automatically appears in the compose box. You can
always
<a href="https://zulip.com/help/view-and-edit-your-message-drafts#save-a-draft-and-start-a-new-message">save a draft</a>
for later and start a new message.</li>
<li>When you paste content into the compose box, Zulip will now do its best to
preserve the formatting, including links, bulleted lists, bold, italics, and
more. If you don’t need the formatting, you can undo it with <code>Ctrl+Z</code>, or
<a href="https://zulip.com/help/keyboard-shortcuts#the-basics">paste as plain text</a>.</li>
<li>Pasted channel and topic
<a href="https://zulip.com/help/link-to-a-message-or-conversation#get-a-link-to-a-specific-topic">link URLs</a>
are now automatically converted into
<a href="https://zulip.com/help/link-to-a-message-or-conversation#link-to-a-channel-or-topic-within-zulip">nicely formatted</a>
links.</li>
<li>To <a href="https://zulip.com/help/quote-and-reply">quote and reply</a> to part of a
message, you can now select the part that you want to quote.</li>
<li>You can now scroll down in all typeahead menus to see more matches for what
you’ve typed so far.</li>
</ul>
<p><span><img src="https://blog.zulip.com/_astro/compose-box.6NRbWRE1_Z28NwSv.webp" alt="" width="1814" height="944" loading="lazy" decoding="async"></span></p>
<h2 id="more-natural-navigation">More natural navigation</h2>
<ul>
<li>For clarity and consistency, three key message views that show multiple
conversations at once are now labeled
“<a href="https://zulip.com/help/combined-feed">Combined feed</a>” (previously “All
messages”), “<a href="https://zulip.com/help/channel-feed">Channel feed</a>”, and
“<a href="https://zulip.com/help/direct-messages#access-all-dms">Direct message feed</a>”.</li>
<li>To make it easier to read your messages topic-by-topic, channel links in the
<a href="https://zulip.com/help/left-sidebar">left sidebar</a> now take you directly to
the top topic in the channel. You can
<a href="https://zulip.com/help/channel-feed#configure-where-channel-links-in-the-left-sidebar-go">configure</a>
them to go to the channel feed instead (previously the only option).</li>
<li>When you send a message to a conversation that you’re not viewing, Zulip now
jumps you to that conversation, unless
<a href="https://zulip.com/help/mastering-the-compose-box#automatically-go-to-conversation-where-you-sent-a-message">configured</a>
otherwise.</li>
</ul>
<h2 id="new-and-improved-ways-to-find-messages">New and improved ways to find messages</h2>
<ul>
<li>The main <a href="https://zulip.com/help/search-for-messages">search</a> has been
redesigned with pills for search filters, making it easier to use.
<span><img src="https://blog.zulip.com/_astro/search-pills.gJyJpot5_GPHpu.webp" alt="" width="1012" height="59" loading="lazy" decoding="async"></span></li>
<li>You can use the new
<a href="https://zulip.com/help/emoji-reactions#view-your-messages-with-reactions">Reactions view</a>
to see how others have responded to your messages with emoji reactions. You
can also
<a href="https://zulip.com/help/search-for-messages#search-by-message-status">search</a>
all messages with reactions.</li>
<li>You can now search for messages
<a href="https://zulip.com/help/follow-a-topic#search-for-messages-in-followed-topics">in topics you follow</a>,
or see a feed of all messages (or just unread messages) in your followed
topics.</li>
<li>You can now
<a href="https://zulip.com/help/direct-messages#find-a-direct-message-conversation">filter</a>
direct message conversations in the left sidebar to show conversations that
include a specific person.</li>
</ul>
<h2 id="easier-user-onboarding">Easier user onboarding</h2>
<p>Zulip’s onboarding experience has been redesigned to introduce core Zulip
concepts when they first become relevant.</p>
<p><span><img src="https://blog.zulip.com/_astro/inbox-intro-modal.FV_4wDKS_Z1JlzHx.webp" alt="" width="1496" height="1080" loading="lazy" decoding="async"></span></p>
<ul>
<li>One-time modals now introduce the <a href="https://zulip.com/help/inbox">Inbox</a> and
<a href="https://zulip.com/help/recent-conversations">Recent conversations</a> views.
Permanently dismissable banners explain complex situations, such as composing
a message
<a href="https://zulip.com/help/mastering-the-compose-box#composing-to-a-different-conversation">while viewing a different conversation</a>,
when they come up. <span><img src="https://blog.zulip.com/_astro/inbox-intro-modal.FV_4wDKS_Z1JlzHx.webp" alt="" width="1496" height="1080" loading="lazy" decoding="async"></span> <span><img src="https://blog.zulip.com/_astro/onboarding-banner.Cf42Bcvo_Z1MTT6q.webp" alt="" width="1306" height="170" loading="lazy" decoding="async"></span></li>
<li>To introduce <a href="https://zulip.com/help/star-a-message">starred messages</a>,
<a href="https://zulip.com/help/view-your-mentions">your mentions</a>, and other views,
we added descriptions in the bar at the top, and to the message area when the
view is empty.</li>
<li>Introductory messages have been rewritten to better explain how
<a href="https://zulip.com/help/introduction-to-topics">conversations labeled with topics</a>
work in Zulip, including how to
<a href="https://zulip.com/help/replying-to-messages">reply</a> to an existing thread,
<a href="https://zulip.com/help/introduction-to-topics#how-to-start-a-new-topic">start</a>
a new conversation, and
<a href="https://zulip.com/help/move-content-to-another-topic">move messages</a> if they
are out of place. To make intro messages easier to find, they are now starred
and marked as unread for new users.</li>
</ul>
<h2 id="design-and-usability-improvements">Design and usability improvements</h2>
<p><span><img src="https://blog.zulip.com/_astro/user-card.B8MNmu0b_wNnBe.webp" alt="" width="691" height="1089" loading="lazy" decoding="async"></span></p>
<ul>
<li>All the menus have been restyled, with a cleaner look, better icons, and
improved screen reader accessibility. Also, you can now
<a href="https://zulip.com/help/dark-theme">switch themes</a> directly from your personal
menu. <span><img src="https://blog.zulip.com/_astro/user-card.B8MNmu0b_wNnBe.webp" alt="" width="691" height="1089" loading="lazy" decoding="async"></span></li>
<li>You can now configure how
<a href="https://zulip.com/help/allow-image-link-previews">previews</a> of animated
images show the animation (always, when you hover over them, or never).</li>
<li>To better show key information,
<a href="https://zulip.com/help/desktop-notifications">desktop</a> and
<a href="https://zulip.com/help/mobile-notifications">mobile</a> notifications now
abbreviate quoted content.</li>
<li>The message
<a href="https://zulip.com/help/view-a-messages-edit-history">edit history</a> view has
been redesigned for visual consistency and ease of use.</li>
<li>If you’d prefer not to see
<a href="https://zulip.com/help/typing-notifications">notifications when others type</a>,
you can now disable them.</li>
</ul>
<h2 id="keyboard-shortcuts">Keyboard shortcuts</h2>
<ul>
<li>A new <code>Alt+P</code> keyboard shortcut lets you toggle between edit mode and
<a href="https://zulip.com/help/preview-your-message-before-sending">preview mode</a>
when composing or editing a message.</li>
<li>A new <code>Shift+V</code> keyboard shortcut offers quick access to
<a href="https://zulip.com/help/read-receipts">read receipts</a>.</li>
</ul>
<h2 id="improved-user-management">Improved user management</h2>
<ul>
<li>
<p>A new combined user settings panel lets you manage
<a href="https://zulip.com/help/manage-a-user">users</a>,
<a href="https://zulip.com/help/deactivate-or-reactivate-a-user">deactivated users</a>,
and <a href="https://zulip.com/help/invite-new-users">invitations</a> in one place. You
can now
<a href="https://zulip.com/help/roles-and-permissions#view-users-by-role">filter</a> the
list of users in your organization by role.</p>
</li>
<li>
<p>Profile pictures are now shown alongside user names in settings, making it
easier to identify people at a glance. You can click on a name to open the
user’s <a href="https://zulip.com/help/user-cards">card</a>.</p>
<p><span><img src="https://blog.zulip.com/_astro/user-settings.BoX-g8Jg_Z9fg9B.webp" alt="" width="2296" height="770" loading="lazy" decoding="async"></span></p>
</li>
<li>
<p>You now have a lot of flexibility for configuring direct message permissions
in your organization, with
<a href="https://zulip.com/help/restrict-direct-messages#restrict-direct-messages">new settings</a>
for who can <strong>authorize</strong> and <strong>start</strong> direct message conversations. These
settings are designed so that users can always respond to a direct message
they’ve received.</p>
</li>
<li>
<p>You can now mark a custom profile field as
<a href="https://zulip.com/help/custom-profile-fields#make-a-custom-profile-field-required">required</a>,
to prompt everyone to fill it out.</p>
</li>
<li>
<p>You can
<a href="https://zulip.com/help/restrict-name-and-email-changes#require-unique-names">require</a>
users to choose unique names in your organization.</p>
</li>
<li>
<p>When inviting users, you can now
<a href="https://zulip.com/help/invite-new-users#send-email-invitations">decide</a>
whether to receive a direct message when the invited user joins your
organization. An updated design makes the UI for
<a href="https://zulip.com/help/invite-new-users">inviting</a> new users easier to use.</p>
</li>
<li>
<p>You can now link to a user’s
<a href="https://zulip.com/help/view-someones-profile">profile</a>, to share it with
someone else.</p>
</li>
</ul>
<h2 id="improved-channel-administration">Improved channel administration</h2>
<ul>
<li><a href="https://zulip.com/help/create-a-channel">Creating a channel</a> is now a
smoother experience:
<ul>
<li>Adding subscribers is now a separate step from configuring channel settings.
Advanced settings are collapsed by default.</li>
<li>When you create a channel, you are now taken directly there if you are a
subscriber.</li>
</ul>
</li>
<li>Channel settings now show additional details, including when the channel was
created.</li>
</ul>
<h2 id="integrations">Integrations</h2>
<ul>
<li>There is now a convenient UI for
<a href="https://zulip.com/help/generate-integration-url">configuring custom event filters</a>
for an integration. Documentation for over 60 integrations has been updated
with simplified instructions.</li>
<li>There are new integrations for
<a href="https://zulip.com/integrations/doc/patreon">Patreon</a> and
<a href="https://zulip.com/integrations/doc/githubsponsors">GitHub Sponsors</a>, and the
<a href="https://zulip.com/integrations/doc/github">GitHub</a> and
<a href="https://zulip.com/integrations/doc/grafana">Grafana</a> integrations have been
improved.</li>
<li>We made extensive additions to Zulip’s API documentation, including
<a href="https://zulip.com/api/get-events#events-by-type">handy navigation</a> for
<a href="https://zulip.com/api/real-time-events">real-time push</a> event formats,
articles on important concepts like thumbnailing, and new documentation for
about a dozen previously documented API endpoints.</li>
</ul>
<h2 id="server">Server</h2>
<ul>
<li>This release adds support for Ubuntu 24.04, and drops support for Ubuntu
20.04.</li>
<li>The Zulip server now serves thumbnails of uploaded images for previews in the
message feed, greatly reducing bandwidth usage for most Zulip installations.
Images now load much faster for users in all Zulip apps.</li>
<li>The Zulip server has always scaled well, but this release comes with several
further efficiency improvements, which will make a big difference for
organizations with thousands of user accounts.</li>
</ul>
<h2 id="internationalization">Internationalization</h2>
<p>Our community translators have been hard at work keeping up with the product as
it evolves. This release features translations that cover the majority of
non-error strings in 25 languages, including Gujarati for the first time.</p>
<h2 id="upgrading">Upgrading</h2>
<p>We
<a href="https://zulip.readthedocs.io/en/stable/overview/release-lifecycle.html#compatibility-and-upgrading">highly recommend</a>
upgrading to Zulip Server 9.0 to take advantage of the hundreds of improvements
in this release and future security updates. We work hard to ensure that
upgrades are smooth; you can upgrade by following the straightforward
<a href="https://zulip.readthedocs.io/en/stable/production/upgrade-or-modify.html#upgrading-to-a-release">upgrade instructions</a>.
The
<a href="https://zulip.readthedocs.io/en/stable/changelog.html#upgrade-notes">upgrade notes section of the changelog</a>
details changes you’ll want to understand before upgrading.</p>
<p>Commercial support for server upgrades is available for installations that
purchase a Business or Enterprise <a href="https://zulip.com/plans#self-hosted">plan</a>.
For community support, everyone is welcome to drop by the
<a href="https://zulip.com/development-community/">Zulip development community</a>.</p>
<p>Zulip Cloud is always up to date with the latest Zulip improvements.</p>
<h2 id="product-roadmap">Product roadmap</h2>
<p>We’re continuing to focus on improving the design of the Zulip web app, and
shipping next-generation mobile apps for Android and iOS.</p>
<p>We use project boards to publicly track goals for major
<a href="https://github.com/orgs/zulip/projects/9/views/12">server</a> and
<a href="https://github.com/orgs/zulip/projects/5/views/4">mobile</a> releases. These
boards are updated on an ongoing basis as priorities evolve, and many community
improvements integrated into Zulip are never specifically tracked as release
goals.</p>
<h2 id="release-schedule">Release schedule</h2>
<p>This release is coming out about seven months after the
<a href="https://blog.zulip.com/2024/07/15/zulip-8-0-released/">Zulip Server 8.0 release</a>
last December. We are targeting a shorter interval for the next major release,
which is expected in late 2024.</p>

<p>If you appreciate Zulip, please recommend it to someone you know, for work or
any other collaborative endeavor. If they say that Zulip won’t work for them,
<a href="https://zulip.com/help/contact-support#product-feedback">let us know why</a>! You
can email <a href="mailto:feedback@zulip.com">feedback@zulip.com</a>, or post in the
<a href="https://chat.zulip.org/#narrow/stream/137-feedback">#feedback</a> channel in the
<a href="https://zulip.com/development-community/">Zulip development community</a>.
Feedback from current and potential users is a vital part of how we design and
prioritize improvements to Zulip.</p>
<p>Thanks again to the amazing global Zulip development community for making this
possible!</p>
<p>— Tim Abbott, Zulip project leader</p>
<p>What follows is a summary of the commits contributed to Zulip during the 9.0
release cycle.</p>
<pre tabindex="0" data-language="plaintext"><code><span><span>$ ./zulip/tools/total-contributions 8.0 9.0</span></span>
<span><span>616	Anders Kaseorg</span></span>
<span><span>458	Alex Vandiver</span></span>
<span><span>408	Chris Bobbe</span></span>
<span><span>400	Greg Price</span></span>
<span><span>388	Aman Agrawal</span></span>
<span><span>359	Lauryn Menard</span></span>
<span><span>313	Evy Kassirer</span></span>
<span><span>266	Karl Stolley</span></span>
<span><span>209	Sahil Batra</span></span>
<span><span>195	Tim Abbott</span></span>
<span><span>169	Prakhar Pratyush</span></span>
<span><span>166	Alya Abbott</span></span>
<span><span>165	Sayam Samal</span></span>
<span><span>117	Shubham Padia</span></span>
<span><span>111	Mateusz Mandera</span></span>
<span><span>104	Nehal Sharma</span></span>
<span><span>83	Varun Singh</span></span>
<span><span>61	afeefuddin</span></span>
<span><span>57	Kunal Sharma</span></span>
<span><span>56	Niloth P</span></span>
<span><span>47	Rohan Gudimetla</span></span>
<span><span>46	Kenneth Rodrigues</span></span>
<span><span>42	neiljp (Neil Pilgrim)</span></span>
<span><span>35	Rajesh Malviya</span></span>
<span><span>32	Sujal Shah</span></span>
<span><span>26	Kislay Verma</span></span>
<span><span>24	PieterCK</span></span>
<span><span>24	Tanmay Kumar</span></span>
<span><span>24	Sayed Mahmood Sayedi</span></span>
<span><span>24	Shu Chen</span></span>
<span><span>20	David Rosa</span></span>
<span><span>20	Pratik Chanda</span></span>
<span><span>19	Sanchit Sharma</span></span>
<span><span>19	Khader M Khudair</span></span>
<span><span>19	Zixuan James Li</span></span>
<span><span>17	Adnan Shabbir Husain</span></span>
<span><span>15	Sashank Ravipati</span></span>
<span><span>12	Lalit Kumar Singh</span></span>
<span><span>12	Nimish Medatwal</span></span>
<span><span>11	Shashank Singh</span></span>
<span><span>10	Mahhheshh</span></span>
<span><span>9	Bedo Khaled</span></span>
<span><span>9	CIC4DA</span></span>
<span><span>7	Aditya Kumar Kasaudhan</span></span>
<span><span>7	Pratik Solanki</span></span>
<span><span>7	ecxtacy</span></span>
<span><span>7	vighneshbhat9945</span></span>
<span><span>6	Robert Dyer</span></span>
<span><span>6	Temidayo32</span></span>
<span><span>6	codewithnick</span></span>
<span><span>5	Joydeep Bhattacharjee</span></span>
<span><span>5	sayyedarib</span></span>
<span><span>4	Chris Chua</span></span>
<span><span>3	Aditya Bajaj</span></span>
<span><span>3	John Lu</span></span>
<span><span>3	Rein Zustand (rht)</span></span>
<span><span>3	Sohaib-Ahmed21</span></span>
<span><span>3	Ujjawal Modi</span></span>
<span><span>3	swayam0322</span></span>
<span><span>3	Sagnik Mandal</span></span>
<span><span>2	ColeBurch</span></span>
<span><span>2	Dhruv Goyal</span></span>
<span><span>2	Eklavya Sharma</span></span>
<span><span>2	Pedro Almeida</span></span>
<span><span>2	Rinwaoluwa</span></span>
<span><span>2	abelaba</span></span>
<span><span>2	saisumith770</span></span>
<span><span>2	jrijul1201</span></span>
<span><span>2	neruyzo</span></span>
<span><span>1	Aditya Chaudhary</span></span>
<span><span>1	Afonso Azaruja</span></span>
<span><span>1	AfonsoOrmonde</span></span>
<span><span>1	Ajay Singh</span></span>
<span><span>1	Akarsh Jain</span></span>
<span><span>1	Akash Kumar Singh</span></span>
<span><span>1	Andrew</span></span>
<span><span>1	Angelica Ferlin</span></span>
<span><span>1	Anuja Patil</span></span>
<span><span>1	Artur Szcześniak</span></span>
<span><span>1	Charlie Marsh</span></span>
<span><span>1	Eeshan Garg</span></span>
<span><span>1	Emil</span></span>
<span><span>1	Evgenii</span></span>
<span><span>1	Gaurav Pandey</span></span>
<span><span>1	Gyan Dev</span></span>
<span><span>1	Isabela Pereira</span></span>
<span><span>1	Jason</span></span>
<span><span>1	Jerry Yang</span></span>
<span><span>1	Jose Corte</span></span>
<span><span>1	Joy Chen</span></span>
<span><span>1	Laura Hausmann</span></span>
<span><span>1	Niklas Fiekas</span></span>
<span><span>1	Olivier FAURE</span></span>
<span><span>1	Pietro Albini</span></span>
<span><span>1	Prathamesh Kurve</span></span>
<span><span>1	Riken Shah</span></span>
<span><span>1	Roshan Jagadish</span></span>
<span><span>1	Ryan Crisanti</span></span>
<span><span>1	Sahil Singh</span></span>
<span><span>1	Sayyed Arib Hussain</span></span>
<span><span>1	Sharif Naas</span></span>
<span><span>1	Tomas Fonseca</span></span>
<span><span>1	Tudor Stefan Pagu</span></span>
<span><span>1	Varun-Kolanu</span></span>
<span><span>1	Vector73</span></span>
<span><span>1	Vidhi Agrawal</span></span>
<span><span>1	ayush amawate</span></span>
<span><span>1	cherish2003</span></span>
<span><span>1	iks1</span></span>
<span><span>1	joaoafonso07</span></span>
<span><span>1	kota-karthik</span></span>
<span><span>1	luska44</span></span>
<span><span>1	mk0904</span></span>
<span><span>1	opmkumar</span></span>
<span><span>1	qx24680</span></span>
<span><span>1	somudas</span></span>
<span><span>1	Mehul-Kumar-27</span></span>
<span><span>1	Misha Brukman</span></span>
<span><span>1	enesonus</span></span>
<span><span>1	rsashank</span></span>
<span><span>1	LY</span></span>
<span><span>1	Sushmey</span></span>
<span><span>1	sreecharan7</span></span>
<span><span>1	Sean T. Allen</span></span>
<span><span>Commit range 8.0..9.0 corresponds to 2023-12-15 to 2024-07-25</span></span>
<span><span>4288 commits from zulip/zulip: 8.0..9.0</span></span>
<span><span>798 commits from zulip/zulip-flutter: 81d8b8ccab90..c17dd0efd192</span></span>
<span><span>137 commits from zulip/zulip-mobile: 38ca48a7b801..2217c858e207</span></span>
<span><span>91 commits from zulip/zulip-terminal: 585722a206e8..743db7d8d0ef</span></span>
<span><span>19 commits from zulip/zulip-desktop: 47cdd5fa8b3b..92260b0f97b5</span></span>
<span><span>12 commits from zulip/docker-zulip: 8e716c245f80..ef3a379351cf</span></span>
<span><span>11 commits from zulip/python-zulip-api: ad9b0e62a49d..e9d8ef3b272c</span></span>
<span><span>9 commits from zulip/zulipbot: d0bee679bf3c..3655e1f31e69</span></span>
<span><span>4 commits from zulip/github-actions-zulip: b62d5a0e48a4..e4c8f27c732b</span></span>
<span><span>2 commits from zulip/zulint: cd3b1e0586b0..a070f3a349bc</span></span>
<span><span>Excluded 0 commits authored by bots.</span></span>
<span><span>5371 total commits by 124 contributors between 8.0 and 9.0.</span></span>
<span><span></span></span></code></pre> </section></article> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Swiss Town Banned Billboards. Zurich, Bern May Soon Follow (279 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2024-07-26/zurich-bern-consider-billboard-bans-after-vernier-outlaws-visual-pollution</link>
            <guid>41075766</guid>
            <pubDate>Fri, 26 Jul 2024 04:26:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2024-07-26/zurich-bern-consider-billboard-bans-after-vernier-outlaws-visual-pollution">https://www.bloomberg.com/news/articles/2024-07-26/zurich-bern-consider-billboard-bans-after-vernier-outlaws-visual-pollution</a>, See on <a href="https://news.ycombinator.com/item?id=41075766">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[U.S. Department of Defense – Detecting Agile BS [pdf] (121 pts)]]></title>
            <link>https://media.defense.gov/2018/Oct/09/2002049591/-1/-1/0/DIB_DETECTING_AGILE_BS_2018.10.05.PDF</link>
            <guid>41073688</guid>
            <pubDate>Thu, 25 Jul 2024 21:40:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://media.defense.gov/2018/Oct/09/2002049591/-1/-1/0/DIB_DETECTING_AGILE_BS_2018.10.05.PDF">https://media.defense.gov/2018/Oct/09/2002049591/-1/-1/0/DIB_DETECTING_AGILE_BS_2018.10.05.PDF</a>, See on <a href="https://news.ycombinator.com/item?id=41073688">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[A Clone of Deluxe Paint II Written in Python (136 pts)]]></title>
            <link>https://github.com/mriale/PyDPainter</link>
            <guid>41073264</guid>
            <pubDate>Thu, 25 Jul 2024 20:53:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/mriale/PyDPainter">https://github.com/mriale/PyDPainter</a>, See on <a href="https://news.ycombinator.com/item?id=41073264">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">PyDPainter</h2><a id="user-content-pydpainter" aria-label="Permalink: PyDPainter" href="#pydpainter"></a></p>
<p dir="auto">A usable pixel art program written in Python</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/mriale/PyDPainter/blob/master/pydpainter-screenshot.png"><img src="https://github.com/mriale/PyDPainter/raw/master/pydpainter-screenshot.png" alt="screenshot"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">About</h2><a id="user-content-about" aria-label="Permalink: About" href="#about"></a></p>
<p dir="auto">PyDPainter, pronounced "Pied Painter" (like Pied Piper), is an attempt to create a usable pixel art program in Python using PyGame.
The original inspiration came from the <a href="https://en.wikipedia.org/wiki/Amiga" rel="nofollow">Commodore Amiga</a>
version of <a href="https://en.wikipedia.org/wiki/Deluxe_Paint" rel="nofollow"><em>Deluxe Paint</em></a> released by Electronic Arts in 1985.
Back then, <em>Deluxe Paint</em> helped define the user interface of a paint program with tool bars, menus, and the
novel use of left and right mouse buttons for painting and erasing. After pixel art gave way to photo-realism and
high-resolution 24 bit color, <em>Deluxe Paint</em> was largely forgotten for artistic work -- left behind
in the ever-progressing march of technology.</p>
<p dir="auto">Recently, with a resurgence of all things "retro," low-resolution pixel art and limited color palettes
have become popular once again. Many tools to deal with this medium are either too complicated
or too crude. This project is an attempt to bring back an old but reliable tool and
enhance it with some features to help it better coexist in the modern world.</p>
<p dir="auto">Latest Release (with Windows EXE): <a href="https://github.com/mriale/PyDPainter/releases/latest">https://github.com/mriale/PyDPainter/releases/latest</a></p>
<p dir="auto">YouTube video: <a href="https://youtu.be/GGfsSvbrb4o" rel="nofollow">Quick PyDPainter Demo</a></p>
<p dir="auto">Ko-fi donation page:
<a href="https://ko-fi.com/mriale" rel="nofollow">https://ko-fi.com/mriale</a></p>
<p dir="auto">Facebook group: <a href="https://www.facebook.com/groups/583338860398152/?ref=share" rel="nofollow">PyDPainter</a></p>
<p dir="auto">Mastodon: <a href="https://mastodon.social/@PyDPainter" rel="nofollow">@PyDPainter@mastodon.social</a></p>
<p dir="auto">See <a href="https://github.com/mriale/PyDPainter/wiki/RoadMap">RoadMap</a> for current progress.</p>
<p dir="auto">Documentation: <a href="https://github.com/mriale/PyDPainter/blob/master/docs/TOC.md">Table of Contents</a></p>
<p dir="auto"><strong>PyDPainter Copyright (C) 2019-2024 Mark Riale</strong><br>
This program is licensed under the GPLv3 or later. See <a href="https://github.com/mriale/PyDPainter/blob/master/LICENSE">LICENSE</a> file for more details.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Switzerland mandates government agencies use open-source software (123 pts)]]></title>
            <link>https://www.tomshardware.com/software/switzerland-mandates-government-agencies-use-open-source-software</link>
            <guid>41072795</guid>
            <pubDate>Thu, 25 Jul 2024 20:05:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/software/switzerland-mandates-government-agencies-use-open-source-software">https://www.tomshardware.com/software/switzerland-mandates-government-agencies-use-open-source-software</a>, See on <a href="https://news.ycombinator.com/item?id=41072795">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article-body">
<p>Switzerland has recently enacted a law requiring its government to use open-source software (OSS) and disclose the source code of any software developed by or for the public sector. According to <a data-analytics-id="inline-link" href="https://www.zdnet.com/article/switzerland-now-requires-all-government-software-to-be-open-source/?s=31" target="_blank" data-url="https://www.zdnet.com/article/switzerland-now-requires-all-government-software-to-be-open-source/?s=31" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">ZDNet</a>, this “public body, public code” approach makes government operations more transparent while increasing <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/security" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/security">security</a> and efficiency. Such a move would likely fail in the U.S. but is becoming increasingly common throughout Europe.</p><p>According to Switzerland’s new “Federal Law on the Use of Electronic Means for the Fulfillment of Government Tasks” (EMBAG), government agencies must use open-source software throughout the public sector.&nbsp;</p><p>It’s not an entirely new move for Switzerland. In 2011, the Swiss Federal Supreme Court published its court application, Open Justitia, using an OSS license. It was unpopular with legal software company Weblaw, and more than a decade of political and legal battles followed.</p><p>The new law allows the codifies allowing Switzerland to release its software under OSS licenses. Not just that; it requires the source code be released that way “unless the rights of third parties or security-related reasons would exclude or restrict this.”&nbsp;</p><p>In addition to mandating the OSS code, EMBAG also requires Swiss government agencies to release non-personal and non-security-sensitive government data to the public. Calling this Open Government Data, this aspect of the new law contributes to a dual “open by default” approach that should allow for easier reuse of software and data while also making governance more transparent.</p><p>Other nations throughout Europe have made similar moves. France’s version of the U.S. FBI, known as the National Gendarmerie, uses Linux on most PCs. Schleswig-Holstein, one of Germany’s 16 states, recently migrated 30,000 computers from <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/microsoft" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/microsoft">Microsoft</a> products to Linux and LibreOffice.&nbsp;</p><p>The European Union has also worked for years to help OSS become more secure through the Free and Open Source Software Auditing (FOSSA) project. At the same time, there could be some cause for concern about the future of OSS in Europe — there are concerns the European Commission might cut funding for an essential source of financing for OSS projects.</p><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-VHzDKP52cwzLBL6YEhpXCD"><section><p>Get Tom's Hardware's best news and in-depth reviews, straight to your inbox.</p></section></div><p>In the U.S., however, there’s much less support for OSS. The U.S. government does offer some support for open-source, but it’s much more constrained. For example, the Federal Source Code Policy requires government agencies to release at least 20% of their new custom-developed code as OSS. Also, the General Services Administration (GSA) requires its organizations to account for and publish any of their open-source code.</p><p>The critical difference, though, is that no laws in the U.S. mandate the use of open-source software like Switzerland’s. If Switzerland’s new openness works well, it could be a model for further change throughout the rest of Europe and the United States.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI crawlers need to be more respectful (209 pts)]]></title>
            <link>https://about.readthedocs.com/blog/2024/07/ai-crawlers-abuse/</link>
            <guid>41072549</guid>
            <pubDate>Thu, 25 Jul 2024 19:39:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://about.readthedocs.com/blog/2024/07/ai-crawlers-abuse/">https://about.readthedocs.com/blog/2024/07/ai-crawlers-abuse/</a>, See on <a href="https://news.ycombinator.com/item?id=41072549">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>In the last few months, we have noticed an increase in abusive site crawling,
mainly from AI products and services. These products are recklessly crawling
many sites across the web, and we've already had to block several sources of abusive traffic.
It feels like a new AI gold rush,
and in their haste,
some of these crawlers are behaving in a way that harms the sites they depend on.</p>
<p>At Read the Docs,
we host documentation for many projects and are generally bot friendly,
but the behavior of AI crawlers is currently causing us problems.
We have noticed AI crawlers aggressively pulling content, seemingly without basic
checks against abuse.
Bots repeatedly download large files hundreds of times daily,
partially from bugs in their crawlers,
with traffic coming from many IP addresses without rate or bandwidth limiting.</p>
<p>AI crawlers are acting in a way that is not respectful to the sites they are crawling,
and that is going to cause a backlash against AI crawlers in general.
As a community-supported site without a large budget,
AI crawlers have cost us a significant amount of money in bandwidth charges,
and caused us to spend a large amount of time dealing with abuse.</p>
<h2 id="ai-crawler-abuse">AI crawler abuse</h2>
<p>We have been seeing a number of bad crawlers over the past few months,
but here are a couple illustrative examples of the abuse we're seeing:</p>
<h3>73 TB in May 2024 from one crawler</h3>
<p><strong>One crawler downloaded 73 TB of zipped HTML files in May 2024, with almost 10 TB in a single day</strong>. This cost us over $5,000 in bandwidth charges, and we had to block the crawler. We emailed this company, reporting a bug in their crawler, and we're working with them on reimbursing us for the costs.</p>
<p><img alt="AI crawler abuse, May 2024" src="https://about.readthedocs.com/images/posts/bandwidth-may-2024.png"></p>
<p>This was a bug in their crawler that was causing it to download the same files over and over again.
There was no bandwidth limiting in place,
or support for Etags and Last-Modified headers which would have allowed the crawler to only download files that had changed.
We have reported this issue to them,
and hopefully the issue will be fixed.</p>
<p>We do have a CDN for these files,
but this request was for an old URL that had an old redirect in place.
This redirect went to an old dashboard download URL,
where we don't have CDN caching in place for security reasons around serving other dynamic content.
We are planning to fix this redirect to point to the cached URL.</p>
<details>
<summary>Example web requests</summary>

<pre>
-&gt; curl -IL "https://media.readthedocs.org/htmlzip/chainer/v1.24.0/_modules/chainer/testing/_modules/chainer/_modules/cupy/indexing/_modules/chainer/initializers/normal.html"
HTTP/2 302
date: Thu, 25 Jul 2024 16:24:18 GMT
content-type: text/html
content-length: 138
location: https://buildmedia.readthedocs.org/media/htmlzip/chainer/v1.24.0/_modules/chainer/testing/_modules/chainer/_modules/cupy/indexing/_modules/chainer/initializers/normal.html
x-backend: web-i-0af0e99066a6e05c0
access-control-allow-origin: *
x-served: Nginx
cf-cache-status: DYNAMIC
server: cloudflare
cf-ray: 8a8d7fd81d060943-SEA

HTTP/2 302
date: Thu, 25 Jul 2024 16:24:18 GMT
content-type: text/html
content-length: 138
location: https://readthedocs.org/projects/chainer/downloads/htmlzip/v1.24.0/
x-backend: web-i-092bc168f09ac4a16
cf-cache-status: HIT
age: 537
expires: Thu, 25 Jul 2024 20:24:18 GMT
cache-control: public, max-age=14400
server: cloudflare
cf-ray: 8a8d7fda9837c87c-SEA

HTTP/2 200
date: Thu, 25 Jul 2024 16:24:18 GMT
content-type: application/zip
content-length: 5888860
content-disposition: filename=docs-chainer-org-en-v1.24.0.zip
x-amz-id-2: +DjI2tMbUou9XNK5+G53Gyhah4lhBwAgnRiqBh9vsR3KzqxajSTC4B+eIQBY+pi+ZR6McRQngSI=
x-amz-request-id: Z502YT87WEMM3ZY9
last-modified: Thu, 11 Feb 2021 09:12:59 GMT
etag: "c8cb418f5a8ff2e376fc5f7b7564e445"
x-amz-meta-mtime: 1495712654.422637991
accept-ranges: bytes
x-served: Nginx-Proxito-Sendfile
x-backend: web-i-01ce033e08bb601ef
referrer-policy: strict-origin-when-cross-origin
x-frame-options: DENY
x-content-type-options: nosniff
content-security-policy: object-src 'none'; frame-ancestors 'none'
cf-cache-status: DYNAMIC
server: cloudflare
cf-ray: 8a8d7fdbbf787565-SEA

</pre>

As you can see, this file was last modified in 2021.
However, crawlers didn't have this basic check and instead repeatedly downloaded files like these hundreds of times each.

</details>

<h3>10 TB in June 2024 from another</h3>
<p>In June 2024, <strong>someone used Facebook's content downloader to download 10 TB</strong> of data, mostly Zipped HTML and PDF files. We tried to email Facebook about it with the <a href="http://www.facebook.com/externalhit_uatext.php">contact information listed in the bot's user agent</a>, but the email bounced.</p>
<p><img alt="AI Crawler abuse, June 2024" src="https://about.readthedocs.com/images/posts/bandwidth-june-2024.png"></p>
<p>We think this was someone using Facebook's content downloader to download all of our files, but we aren't really sure.
It could also be Meta crawling sites with their latest AI project,
but the user agent is not clear.</p>
<h2 id="actions-taken">Actions taken</h2>
<p>We have IP-based rate limiting in place for many of our endpoints,
however these crawlers are coming from a large number of IP addresses,
so our rate limiting is not effective.</p>
<p>These crawlers are using real user agents that identify them,
which is a good thing.
However, we can't simply rate limit all user agents to our platform because many real users use the same browsers with the same user agent.
(CDN providers: if you're reading this, there's an opportunity here!)</p>
<p>We have taken a few actions to try to mitigate this abuse:</p>
<ul>
<li>We have temporarily blocked all traffic from bots <a href="https://radar.cloudflare.com/traffic/verified-bots">Cloudflare identifies as AI Crawlers</a>, while we figure out how to deal with this.</li>
<li>We have started monitoring our bandwidth usage more closely and are working on more aggressive rate limiting rules.</li>
<li>We will reconfigure our CDN to better cache these files, reducing the load on our origin servers.</li>
</ul>
<h2 id="outcomes">Outcomes</h2>
<p>Given that our Community site is only for hosting open source projects,
AWS and Cloudflare do give us sponsored plans,
but we only have a limited number of credits each year.
The additional bandwidth costs AI crawlers are currently causing will likely mean we will run out of AWS credits early.</p>
<p><strong>By blocking these crawlers,
bandwidth for our downloaded files has decreased by 75% (~800GB/day to ~200GB/day).</strong>
If all this traffic hit our origin servers,
it would cost around $50/day, or $1,500/month,
along with the increased load on our servers.</p>
<p>Normal traffic gets cached by our CDN,
and doesn't cost us anything for bandwidth.
But because many of these files are not downloaded often (and they're large),
the cache is usually expired and the requests hit our origin servers directly,
causing substantial bandwidth charges.
Zipped documentation was designed for offline consumption by users, not for crawlers.</p>
<h2 id="next-steps">Next steps</h2>
<p>We are asking all AI companies to be more respectful of the sites they are crawling.
They are risking many sites blocking them for abuse,
irrespective of the other copyright and moral issues that are at play in the industry.</p>
<p>As a major host of open source documentation,
we'd love to work with these companies on a deal to crawl our site respectfully.
We could build an integration that would alert them to content changes,
and download the files that have changed.
However, none of these companies have reached out to us,
except in response to abuse reports.</p>
<p>We also ask that they implement basic checks in their crawlers for all sites.
A good example is the <a href="https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#scrapy.extensions.httpcache.RFC2616Policy">RFC2616Policy downloader from Scrapy</a>,
which implement many of these policies.</p>
<p>If these companies wish to be good actors in the space,
they need to start acting like it,
instead of burning bridges with folks in the community.</p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Jacek Karpińśki, the computer genius the communists couldn't stand (2017) (260 pts)]]></title>
            <link>https://culture.pl/en/article/jacek-karpinski-the-computer-genius-the-communists-couldnt-stand</link>
            <guid>41072026</guid>
            <pubDate>Thu, 25 Jul 2024 18:50:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://culture.pl/en/article/jacek-karpinski-the-computer-genius-the-communists-couldnt-stand">https://culture.pl/en/article/jacek-karpinski-the-computer-genius-the-communists-couldnt-stand</a>, See on <a href="https://news.ycombinator.com/item?id=41072026">Hacker News</a></p>
Couldn't get https://culture.pl/en/article/jacek-karpinski-the-computer-genius-the-communists-couldnt-stand: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Secure Boot is broken on 200 models from 5 big device makers (133 pts)]]></title>
            <link>https://arstechnica.com/security/2024/07/secure-boot-is-completely-compromised-on-200-models-from-5-big-device-makers/</link>
            <guid>41071708</guid>
            <pubDate>Thu, 25 Jul 2024 18:21:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/security/2024/07/secure-boot-is-completely-compromised-on-200-models-from-5-big-device-makers/">https://arstechnica.com/security/2024/07/secure-boot-is-completely-compromised-on-200-models-from-5-big-device-makers/</a>, See on <a href="https://news.ycombinator.com/item?id=41071708">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2020/10/rootkit-800x533.jpg" alt="Secure Boot is completely broken on 200+ models from 5 big device makers">
      <figcaption><p>sasha85ru | Getty Imates</p></figcaption>  </figure>

  




<!-- cache hit 58:single/related:e9440a0a1361baaf57ed2854a9a45ef6 --><!-- empty -->
<p>In 2012, an industry-wide coalition of hardware and software makers adopted <a href="https://uefi.org/press-release/UEFI_Forum_Releases_UEFI_2.3.1_Specification_Update_and_Schedules_July_3_2012">Secure Boot</a> to protect against a long-looming security threat. The threat was the specter of malware that could infect the BIOS, the firmware that loaded the operating system each time a computer booted up. From there, it could remain immune to detection and removal and could load even before the OS and security apps did.</p>
<p>The threat of such BIOS-dwelling malware was largely theoretical and fueled in large part by the creation of <a href="https://blog.csdn.net/icelord/article/details/1604884">ICLord Bioskit</a> by a Chinese researcher in 2007. ICLord was a <a href="https://en.wikipedia.org/wiki/Rootkit">rootkit</a>, a class of malware that gains and maintains stealthy root access by subverting key protections built into the operating system. The proof of concept demonstrated that such BIOS rootkits weren't only feasible; they were also powerful. In 2011, the threat became a reality with the discovery of <a href="https://www.theregister.com/2011/09/14/bios_rootkit_discovered/">Mebromi</a>, the first-known BIOS rootkit to be used in the wild.</p>
<p>Keenly <a href="https://uefi.org/sites/default/files/resources/UEFI_Plugfest_2011Q4_P5_Insyde.pdf">aware of Mebromi</a> and its potential for a devastating new class of attack, the Secure Boot architects hashed out a complex new way to shore up security in the pre-boot environment. Built into UEFI—the Unified Extensible Firmware Interface that would become the successor to BIOS—Secure Boot used <a href="https://en.wikipedia.org/wiki/Public-key_cryptography">public-key cryptography</a> to block the loading of any code that wasn’t signed with a pre-approved digital signature. To this day, key players in security—among them&nbsp;<a href="https://www.microsoft.com/en-us/surface/do-more-with-surface/what-is-secure-boot" target="_blank" rel="noopener">Microsoft</a>&nbsp;and the&nbsp;<a href="https://media.defense.gov/2020/Sep/15/2002497594/-1/-1/0/CTR-UEFI-SECURE-BOOT-CUSTOMIZATION-20200915.PDF/CTR-UEFI-SECURE-BOOT-CUSTOMIZATION-20200915.PDF" target="_blank" rel="noopener">US National Security Agency</a>—regard Secure Boot as an important, if not essential, foundation of trust in securing devices in some of the most critical environments, including in industrial control and enterprise networks.</p>
<h2>An unlimited Secure Boot bypass</h2>
<p>On Thursday, researchers from security firm Binarly revealed that Secure Boot is completely compromised on more than 200 device models sold by Acer, Dell, Gigabyte, Intel, and Supermicro. The cause: a cryptographic key underpinning Secure Boot on those models that was compromised in 2022. In a public GitHub repository committed in December of that year, someone working for multiple US-based device manufacturers published what’s known as a platform key, the cryptographic key that forms the root-of-trust anchor between the hardware device and the firmware that runs on it. The repository was located at https://github.com/raywu-aaeon/Ryzen2000_4000.git, and it's not clear when it was taken down.</p>                                                                        
                                                                                
<p>The repository included the private portion of the platform key in encrypted form. The encrypted file, however, was protected by a four-character password, a decision that made it trivial for Binarly, and anyone else with even a passing curiosity, to crack the passcode and retrieve the corresponding plain text. The disclosure of the key went largely unnoticed until January 2023, when Binarly researchers found it while investigating a supply-chain incident. Now that the leak has come to light, security experts say it effectively torpedoes the security assurances offered by Secure Boot.</p>
<p>“It’s a big problem,” said Martin Smolár, a malware analyst specializing in rootkits who reviewed the Binarly research and spoke to me about it. “It’s basically an unlimited Secure Boot bypass for these devices that use this platform key. So until device manufacturers or OEMs provide firmware updates, anyone can basically… execute any malware or untrusted code during system boot. Of course, privileged access is required, but that’s not a problem in many cases.”</p>
<p>Binarly researchers said their scans of firmware images uncovered 215 devices that use the compromised key, which can be identified by the certificate serial number 55:fb:ef:87:81:23:00:84:47:17:0b:b3:cd:87:3a:f4. A table appearing at the end of this article lists each one.</p>
<p>The researchers soon discovered that the compromise of the key was just the beginning of a much bigger supply-chain breakdown that raises serious doubts about the integrity of Secure Boot on more than 300 additional device models from virtually all major device manufacturers. As is the case with the platform key compromised in the 2022 GitHub leak, an additional 21 platform keys contain the strings “DO NOT SHIP” or “DO NOT TRUST.”</p>
<figure><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/07/do-not-trust-certificate.jpg" data-height="1354" data-width="2136" alt="Test certificate provided by AMI."><img alt="Test certificate provided by AMI." src="https://cdn.arstechnica.net/wp-content/uploads/2024/07/do-not-trust-certificate-640x406.jpg" width="640" height="406" srcset="https://cdn.arstechnica.net/wp-content/uploads/2024/07/do-not-trust-certificate-1280x811.jpg 2x"></a><figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/07/do-not-trust-certificate.jpg" data-height="1354" data-width="2136">Enlarge</a> <span>/</span> Test certificate provided by AMI.</p><p>Binarly</p></figcaption></figure>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI Announces SearchGPT (306 pts)]]></title>
            <link>https://chatgpt.com/search</link>
            <guid>41071639</guid>
            <pubDate>Thu, 25 Jul 2024 18:15:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chatgpt.com/search">https://chatgpt.com/search</a>, See on <a href="https://news.ycombinator.com/item?id=41071639">Hacker News</a></p>
Couldn't get https://chatgpt.com/search: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[SearchGPT Prototype (121 pts)]]></title>
            <link>https://openai.com/index/searchgpt-prototype/</link>
            <guid>41071585</guid>
            <pubDate>Thu, 25 Jul 2024 18:11:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/index/searchgpt-prototype/">https://openai.com/index/searchgpt-prototype/</a>, See on <a href="https://news.ycombinator.com/item?id=41071585">Hacker News</a></p>
Couldn't get https://openai.com/index/searchgpt-prototype/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Unfashionably secure: why we use isolated VMs (235 pts)]]></title>
            <link>https://blog.thinkst.com/2024/07/unfashionably-secure-why-we-use-isolated-vms.html</link>
            <guid>41070870</guid>
            <pubDate>Thu, 25 Jul 2024 17:00:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.thinkst.com/2024/07/unfashionably-secure-why-we-use-isolated-vms.html">https://blog.thinkst.com/2024/07/unfashionably-secure-why-we-use-isolated-vms.html</a>, See on <a href="https://news.ycombinator.com/item?id=41070870">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				
<p>Would your rather observe an eclipse through a pair of new Ray-Bans, or a used Shade 12 welding helmet? Undoubtably the Aviators are more fashionable, but the permanent retinal damage sucks. Fetch the trusty welding helmet.</p>



<p>We’ve made a number of security choices when building Canary that have held us in pretty good stead. These choices are interesting in that they don’t involve the purchase of security products, they don’t get lots of discussion in security engineering threads, and they verge on being unfashionable. One major unsexy architectural choice has proved itself: complete customer isolation.</p>



<hr>



<h2>Background</h2>



<p>Fundamentally, Canary relies on two components: the Canary devices (hardware or virtual) that are deployed in customer infrastructure, and the Console (which we run) that these Canaries report into. Very broadly this is identical to most cloud-managed device or appliance products: appliances send telemetry to the cloud. It’s typical for cloud-managed devices to report to a <em>single</em> endpoint (e.g. one HTTPS service), or perhaps a region-specific endpoint.<sup data-fn="925d468e-bde0-4cd8-a7d0-966e252f595e"><a href="#925d468e-bde0-4cd8-a7d0-966e252f595e" id="925d468e-bde0-4cd8-a7d0-966e252f595e-link">1</a></sup> In those products, devices are managed via a website that is multi-tenanted (i.e. the same management site is shared by multiple customers). This comes with multiple operational and cost benefits, and is a natural choice.</p>



<p>Except, we don’t make that choice. Every Canary customer has their own tenant, the Console.</p>



<figure><img fetchpriority="high" decoding="async" width="960" height="436" data-attachment-id="3524" data-permalink="https://blog.thinkst.com/2024/07/unfashionably-secure-why-we-use-isolated-vms.html/image-17" data-orig-file="https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?fit=2392%2C1086&amp;ssl=1" data-orig-size="2392,1086" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?fit=300%2C136&amp;ssl=1" data-large-file="https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?fit=960%2C436&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?resize=960%2C436&amp;ssl=1" alt="" srcset="https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?resize=1024%2C465&amp;ssl=1 1024w, https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?resize=300%2C136&amp;ssl=1 300w, https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?resize=768%2C349&amp;ssl=1 768w, https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?resize=1536%2C697&amp;ssl=1 1536w, https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?resize=2048%2C930&amp;ssl=1 2048w, https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?resize=1200%2C545&amp;ssl=1 1200w, https://i0.wp.com/blog.thinkst.com/wp-content/uploads/2024/07/image-4.png?w=1920&amp;ssl=1 1920w" sizes="(max-width: 960px) 100vw, 960px" data-recalc-dims="1"><figcaption>Each customer gets their own Console</figcaption></figure>



<p>Why? Well, that’s the point of this post.&nbsp;<a href="https://canary.tools/" target="_blank" rel="noreferrer noopener">Canary</a>&nbsp;is assessed by external security testers on a regular basis. It’s always fun watching security testers’ reactions when they’re told that Canary customers aren’t colocated. Faces fall, furious notes are taken, and followup questions come thick and fast to try to figure out new (meaningful) angles of attack.</p>



<p>I used to do the same kind of security consulting, and unauthorized access to other users’ data was an issue we reliably found when testing multi-tenant applications (especially web applications). There are so many avenues to explore. Insecure direct object references (e.g. you can access anyone’s bank statement by iterating through the numeric statement ID parameter in the URL <a href="https://vulnerablebank.com/account/statment?id=4728309">https://vulnerablebank.com/account/statment?id=4728309</a>), Cross-site scripting bugs using in-app messaging between users, server-side bugs which let the attacker gain local access to the server and thereby view all data, query injection bugs (such as SQLi) which let the attacker extract data directly out the DB without further checks, and many more. A root cause for those attacks we found was that unrelated organisations’ data was colocated.</p>



<p>When we designed Canary’s architecture, we explicitly wanted to keep customer data separated by a strong boundary, not just application-level permissions checks. We picked a model that gave us complete isolation between customers: they wouldn’t share services, datastores, and resources like IP addresses.&nbsp;</p>



<p>This came with drawbacks on the operational side (and influenced the product design), but we’ve been extremely happy with the trade. In this post, we’ll explore the model more, and point to clear examples of where it worked for us. Let’s start with a short explanation of what services we actually run.</p>



<h2>Service Requirements</h2>



<p>In delivering Thinkst Canary to our customers, we have several services that must be run. The Console is a website run on a uWSGI and Nginx; there’s honeypot configuration and alert data that must be persistently stored and retrieved quickly; there’s services to communicate with the deployed devices; there are Canarytoken services which serve HTTP and DNS traffic on a separate IP from the management interface; and there’s a separate service to ship alerts via Syslog for customers who opt for it.</p>



<p>All combined, these make up the Thinkst Canary product.</p>



<h2>Our architecture: VM isolation</h2>



<p>All the aforementioned Canary Console services for a single customer are contained within their own AWS EC2 instance. In other words, we run a VM per customer.</p>



<p>In some circles, this approach isn’t considered sexy. There are no containers, no serverless functions, no cloud databases, no hyperscale support, no message buses (well… there are but they exist on the instance only), no load balancers, no k8s clusters. Nothing here will earn us a speaking invite to CNCF events, or an architecture diagram full of AWS service icons, and we happily accept this trade off.</p>



<p>The thing is, cloud architectures can become caricatures of themselves. AWS’ reference design to host WordPress inside AWS looks like this:</p>


<div>
<figure><img decoding="async" src="https://lh7-us.googleusercontent.com/docsz/AD_4nXcPX6K-s_mJ7NbCDInyHF4noJsl8YpxQnKo4TIB3korXNQVzcfObKqbAOElmifvMm7xLPQTMNZ1Xv99Rk137hoQvT26yYPIGbvH06O_PCyLwQT4bBI8KtFufxbIEdwfsqRt-9hnVuFpV7phqGl7J2ImyJPZ?key=P9OtcW-1UE1as9LeMAioIw" alt=""><figcaption>All this, and still no one reads my blog</figcaption></figure></div>


<p>Broadly speaking, the main beneficiaries of Cloud-native architectures are the developers and operators of a service, not their customers. Your customers don’t care whether your database is hosted at RDS, or Aurora, or if it’s MySQL running on a 1U in a colocation data centre, so long as they can access the data reliably, safely, and quickly. Cloud-native tech makes it easier for <em>developers and operators</em> to build such systems, but customers (on average) don’t have requirements for whether Cloud tech is used (or not).</p>


<div>
<figure><img decoding="async" src="https://lh7-us.googleusercontent.com/docsz/AD_4nXd9cFq9TBaLX6p27RTSN7JLXFC6TUeUdk8aLLobLlbs3JEhBv6q-wf3UXhslFIbK_2-gmsQvbfA4xHjt5J1VofPVAWFqxOc59AnXrk_QsKhN877pQT63WOM7e-10XbR0epgsOP0WJgQy0mdrNWI1jjgdzrb?key=P9OtcW-1UE1as9LeMAioIw" alt=""><figcaption>This is what Customers care about: can I login and see my data?</figcaption></figure></div>


<p>Choosing Cloud-native technologies and approaches comes with its own baggage. For us, the primary issue is that the security boundary that separates customers from each other becomes an application issue, and that is too risky. As a security vendor, a breach of customer data is a nightmare scenario for us.</p>



<p>Consider, for example, a standard deployment model where customer data all resides in a single database or small number of databases (could be relational DB, or a document database, or similar). The boundaries between that data would either be enforced by the database through different users and roles, or (more typically) through the querying application applying authorisation checks after data has been retrieved from the database or as part of the query supplied by the application to the database. If the application is responsible for maintaining the boundary, then any vulnerability which allows an attacker to bypass the authorisation check would violate the boundary. Every query, every data retrieval is a potential source of vulnerabilities, and must be carefully guarded. No mistakes. This is true whenever either the data is colocated, or users rely on the same endpoints and web addresses to access data. It’s frighteningly common for these issues to occur.</p>



<p>Reworking our web backend to rely on Lambdas would be a terrible approach for several reasons, and also ignores the interrelationship between the other services (such as device communications). Likewise, AWS IoT is a non-starter for managing our devices; we operate in networks where outbound MQTT and HTTPS is simply not allowed (which is why we rely on encrypted DNS traffic for device-to-Console communication). In other words, piecing together the same service from the Lego blocks of AWS services would result in a more cumbersome and less Customer-focused product. Instead, if we take on the responsibility of building those blocks ourselves, we can run a service that fits together beautifully, like an intricate custom puzzle.</p>



<p>The isolated VM approach has drawbacks, which we’ll touch on shortly, but it has more benefits.</p>



<hr>



<h2>Benefits</h2>



<h3>Outsourcing the hardest problem</h3>



<p>In going with this battle-tested approach, we’re cleanly relying on the AWS hypervisor to maintain a silicone-assisted security boundary. Arguably entire AWS’ computing business rests on the strength of their hypervisor.<sup data-fn="09dbe066-795f-4fb4-a3f2-ccd1ed46d6a7"><a href="#09dbe066-795f-4fb4-a3f2-ccd1ed46d6a7" id="09dbe066-795f-4fb4-a3f2-ccd1ed46d6a7-link">2</a></sup> Bugs in their hypervisor that yield cross-customer access are an existential threat to AWS, and they have a deeply vested interest in maintaining that boundary. They have proved themselves to be excellent in running and maintaining this hypervisor over a long period of time.<sup data-fn="b897f452-af23-49f8-b39d-ec385abe571c"><a href="#b897f452-af23-49f8-b39d-ec385abe571c" id="b897f452-af23-49f8-b39d-ec385abe571c-link">3</a></sup> And, in the extreme event that a 0day hypervisor bug is used to attack a Canary customer, even then a) an attacker would need to first need to colocate their attack VM on the same physical host as our customer’s VM, and b) only one customer would be affected; the splash zone is naturally limited.</p>



<h3>Performance and monitoring</h3>



<p>Running all services related to a single customer on the same instance makes certain kinds of monitoring and investigating much simpler. We don’t need to collect performance data from multiple systems to understand what one customer is experiencing; it’s already all in the one place. We run a custom DNS server, and at times debugging involves packet captures to understand issues; it’s extremely helpful knowing that traffic at the Console is related to the customer issue being investigated.</p>



<p>The inverse is also true. Isolating a customer’s services to a VM means any spike in usage or service degradation is constrained to just that Console. Faults occur; we see EC2 hardware issues on a regular basis and when those occur it’s a single Console affected (and automatically restored), not an entire service for all customers. In a hypothetical scenario where all our services run in, say, a Kubernetes cluster, all our eggs are in the k8s basket. A k8s failure takes out all customers<sup data-fn="ae9da95a-5552-4545-af01-59f9bf948b5c"><a href="#ae9da95a-5552-4545-af01-59f9bf948b5c" id="ae9da95a-5552-4545-af01-59f9bf948b5c-link">4</a></sup>; in the VM model, you have to reach “AWS in several regions fails simultaneously” to find the single-point of failure.</p>



<p>Isolated VMs are just a step away from the original horizontal scaling (i.e. more physical servers). Our scaling model when adding more customers is to duplicate the infrastructure for them, not to squeeze them in alongside everyone else. That means we don’t focus on hyper optimising a handful of services that all customers wind up using. Our Consoles have small compute needs and in most cases run “small” EC2 instances. Mean load is usually something like 0.04, and the 99th percentile load is 0.5.&nbsp;</p>



<h3>Regulatory compliance</h3>



<p>Per-customer VMs means we can easily meet regulatory burdens; some customers need to keep their data in one geographic region for compliance reasons. It’s trivial for us to handle these requests and currently can add entire new regions in the space of hours to our supported list. If, instead, we relied on shared infrastructure, then new regions would be big and expensive additions.</p>



<h3>Staged rollouts</h3>



<p>This approach also means we can rollout code and features to subsets of customers trivially before making them generally available. New code is deployed in a staggered manner across the fleet and, as a side-effect, rollouts will be paused if we see errors before code makes it to all customers.</p>



<h3>Operational security</h3>



<p>We can also implement IP-filtering at the security group level for customers, should they require it. This level of isolation is simply not possible on shared infrastructure.</p>



<p>In building the application our user model is simplified because we don’t need to take into account an organisation boundary between data sets. We have users of different permission levels, but they all belong to the same organisation. This makes authorisation code easier to reason about, and helps speed up development.&nbsp;</p>



<hr>



<h2>False Benefits</h2>



<p>One supposed argument in favour of the VM model is that it decreases your dependency on any single cloud provider, and makes it easier to switch because theoretically you can simply run your VM elsewhere. While it’s true that we’re not fully dependent on AWS for the compute environment (because we supply our own VM), we’re still reliant on other AWS services, especially around monitoring, orchestration, and network services. Switching to another provider would be non-trivial, and I don’t see the VM as a real benefit in this regard. The barrier to switching is still incredibly high.</p>



<hr>



<h2>Drawbacks</h2>



<p>The flipside of the coin is that we incur a greater operational cost in terms of both effort and spend. Maintaining thousands of instances requires us to be proficient in configuration management. We need to think both in terms of configuration at scale (managing thousands of instances), and very local issues (a recent example is Ubuntu changing the behaviour of /tmp permissions, necessitating customisations to /etc/sysctl.conf. In a container world, someone else would have likely handled that.) Our Linux sysadmin skills have stood us in good stead; without decent sysadmin skills this path would have been a tricky one to pursue.</p>



<p>I’ve not even touched on the impact on <em>product design</em> that isolated VMs brings, but suffice it to say it’s deeply built into Canary; when we ship devices (hardware or otherwise), they need a path to discover their Console, which is a whole separate topic.</p>



<h3>Custom monitoring</h3>



<p>While AWS provides instance checks to track instance health, we’ve had to build all sorts of monitoring, because the built-in AWS monitoring tools weren’t sufficient for what we needed. Consider that we have thousands of instances (and IPs), with corresponding DNS entries and multiple services (speaking both DNS and HTTP). We want to know within minutes if any of them become unresponsive, and we had to build that tooling ourselves. In addition, on-instance monitoring is also performed to understand whether we’re approaching a failure mode on a Console.</p>



<h3>Hardware reliance and limitations</h3>



<p>I mentioned above that hardware fault isolation is a benefit, since it only affects that one Console on the broken hardware. The consequence of this is that one customer is offline until our tooling automatically restarts the VM. This typically happens within minutes of the failure.</p>



<p>While we’ve not come close to approaching any real instance size limit, there’s a theoretical limit in having a single instance per customer: it’s the largest available EC2 instance. But it’s not a concern for us; we’re not yet at the halfway point in the EC2 instance size progression even for our most demanding customers (and instance sizes double on each step).</p>



<h3>Slower rollouts</h3>



<p>Rolling out code across thousands of instances usually takes a couple of hours because we perform the rollout in increasingly larger sets. If we simply ran a handful of massive servers or clusters, code rollout would likely be faster.</p>



<h3>Cost</h3>



<p>Lastly, this approach is almost certainly more expensive. Our instances sit idle for the most part and we pay EC2 a pretty penny for the privilege. This is likely the biggest drawback for most organisations considering this approach. (It’s worth noting that we bootstrapped Thinkst and never took external funding. While this approach <em>is</em> more costly than the traditional model, it’s certainly not prohibitive because the cost scales linearly as you gain customers. If you’re in the red and are hoping to improve operating margins by cramming more customers onto the same compute, this approach isn’t for you. It won’t work with negative profit margins, as every new customer scales the cost linearly.)</p>



<p>With all these drawbacks, the benefits still far outweigh them in our view. We can point to concrete moments when the isolated VM model has proved its mettle.</p>



<hr>



<h2>Case Studies</h2>



<h3>Case Study 1: Debug console</h3>



<p>In <a href="https://blog.thinkst.com/2018/12/making-nginx-slightly-less-surprising.html">our early days</a> we had an incident on a Console, in which a developer left a debugger exposed to the Web. If customer data had been present on that Console, then we’d have had to roll external incident response along with publishing breach announcements. Instead, the isolated VM (which was the developer’s VM) meant there was no customer data on that VM at all. After detecting the incident we simply burned that infrastructure to the ground, and built in controls to ensure the same bug could never leave us open again.</p>



<h3>Case Study 2: Web application bugs</h3>



<p>Through the years of security assessments we’ve undergone, the assessors have found several common bug classes. But they’ve never discovered access to another customer’s data. We prefer crystal box testing and hand over source code during tests; even after extremely clever exploits with full source code access, it’s impossible to read data that simply isn’t there.</p>



<h3>Case Study 3: osslsigncode</h3>



<p>Earlier this year <a href="https://blog.thinkst.com/2024/07/unobtrusively-upgrading-ubuntu-underfoot.html">we found out</a> that, despite paying for security patches in Ubuntu, we still had a vulnerable version of a package called osslsigncode installed due to Canonical refusing to upgrade the package in contravention of their advertising copy. The situation is now resolved, but while this vulnerable version was present we had to conduct a risk assessment to determine whether we shipped our own version of the package or resolved the underlying issue by upgrading to an Ubuntu version where the fix was already provided.</p>



<p>If we relied on shared infrastructure, we’d have to scramble to resolve the situation because of the risk that one customer exploits the vulnerability and gains access to the host that also handles another customer’s data.</p>



<p>However, because of the isolated VM model, the risk assessment had a different outcome. We reasoned that an attacker needed to be authenticated; that we don’t have open registration; that the attacker would need to craft a custom exploit (no public exploit was or is available for this issue); and if exploited they’d see only their own instance and their own data. The upside for the attacker would be: they can access their own data. This heavily discounts the value of the attack, and so the isolated VM gave us breathing room to resolve the issue in a deeper way.</p>



<hr>



<h2>Should you default to isolated VMs?</h2>



<p>The obvious answer is… there is no obvious answer. We’ve thought about the tradeoffs, and for our risk profile the AWS hypervisor is the boundary we’re most happy with. Our Customers are more interested in having their data remain their own, than whether we’re running Canary with various pieces of Cloud tech. Returning to our opening question, we pick the unfashionable welding helmet over the Aviators for eclipse viewing, every time.</p>



<p>We know this introduces a cost, product-wise, operationally, and in terms of compute expense. We’re happy to eat this because it lets us sleep better at night.</p>



<p>The tradeoff depends on whether you can afford the large slack in paying for mostly idle systems, have the sysadmin capacity to run thousands of instances, and are willing to reimplement tools specifically for your own infrastructure. The upside is a security boundary that is very, very hard. We’re happy on this path.</p>


<ol><li id="925d468e-bde0-4cd8-a7d0-966e252f595e">A cluster might service the endpoints, but embedded in the appliance or device is a single or limited set or URLs. <a href="#925d468e-bde0-4cd8-a7d0-966e252f595e-link" aria-label="Jump to footnote reference 1">↩︎</a></li><li id="09dbe066-795f-4fb4-a3f2-ccd1ed46d6a7">Even services which abstract away the idea of EC2 instances, like Lambdas, still run on VMs underneath and rely on the hypervisor. <a href="#09dbe066-795f-4fb4-a3f2-ccd1ed46d6a7-link" aria-label="Jump to footnote reference 2">↩︎</a></li><li id="b897f452-af23-49f8-b39d-ec385abe571c">When hypervisor bugs are published, AWS usually is given advanced notice in order to remediate the issue across all of AWS. <a href="#b897f452-af23-49f8-b39d-ec385abe571c-link" aria-label="Jump to footnote reference 3">↩︎</a></li><li id="ae9da95a-5552-4545-af01-59f9bf948b5c">Perhaps it’s a mistyped administration command, or a configuration error, or an upgrade that didn’t go according to plan. A Kubernetes failure would affect all Customers at once. <a href="#ae9da95a-5552-4545-af01-59f9bf948b5c-link" aria-label="Jump to footnote reference 4">↩︎</a></li></ol>
				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Best way to learn robotics with a 10 year old? (157 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=41070703</link>
            <guid>41070703</guid>
            <pubDate>Thu, 25 Jul 2024 16:44:50 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=41070703">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="41070703">
      <td><span></span></td>      <td><center><a id="up_41070703" href="https://news.ycombinator.com/vote?id=41070703&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=41070703">Ask HN: Best way to learn robotics with a 10 year old?</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_41070703">106 points</span> by <a href="https://news.ycombinator.com/user?id=hersko">hersko</a> <span title="2024-07-25T16:44:50"><a href="https://news.ycombinator.com/item?id=41070703">10 hours ago</a></span> <span id="unv_41070703"></span> | <a href="https://news.ycombinator.com/hide?id=41070703&amp;goto=item%3Fid%3D41070703">hide</a> | <a href="https://hn.algolia.com/?query=Ask%20HN%3A%20Best%20way%20to%20learn%20robotics%20with%20a%2010%20year%20old%3F&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=41070703&amp;auth=aed261f5cd2871bbbf5f505157f9cddb8b877553">favorite</a> | <a href="https://news.ycombinator.com/item?id=41070703">52&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>Hey all, after discovering the greatness of NHRL[1] my son and i would love to try building a small battle bot, but i know nothing of electrical engineering or robotics.</p><p>I prefer to learn how everything works and build something custom instead of just buying a premade kit and following instructions. I was wondering if there are any resources or books that we could go through together that would teach us the basics of electrical engineering and/or robotics.</p><p>Thanks!</p><p>[1] <a href="https://www.youtube.com/watch?v=1GzzckUcnfE" rel="nofollow">https://www.youtube.com/watch?v=1GzzckUcnfE</a></p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table><table>
            <tbody><tr id="41072450"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41072450" href="https://news.ycombinator.com/vote?id=41072450&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Many of these comments are about robotics as it's taught now, focusing on code and cameras and algorithms and motion planning.</p><p>As someone who's built both BattleBots and Professional Robotics for work, BattleBots is a great way to get out of equations and hands on fabrication, manufacturing, testing, and scrappiness that is so hard to reach in mechanical and electrical engineering. And unlike FIRST or Lego robots, it's much more open ended and "guardrails off" engineering, which I found really freeing from the tyranny of academic-style competition robotics. You can still incorporate all the sensors and algorithm-stuff (many folks build their own motor controllers like "brushless-rage" or have sensors like Chomp), but if you just love seeing things move and love mechanical design, it's a great thing.</p><p>For BattleBots in particular, the easiest way to get into it is to find some guides online for a simple bot[1] with DC motors and a 3D printed body, and just enter it into a local combat robot competition! You'll learn the basics of a motor, speed controller, selecting wheels and other interfaces, as well as designing a chassis and fabricating it. At a competition you get the thrill of the fight, and afterwards you can sweep your robot scraps into a dustpan, make friends with other bot builders and go from there.</p><p>[1] A quick search on instructs Les and I found this, though there are many more great robot tutorials: <a href="https://www.instructables.com/Naked-Singularity-Beetleweight-Wedge-Combat-Robot/" rel="nofollow">https://www.instructables.com/Naked-Singularity-Beetleweight...</a> . Here is one that overviews all the basic steps in a BattleBots <a href="https://www.instructables.com/How-to-design-and-build-a-combat-robot/" rel="nofollow">https://www.instructables.com/How-to-design-and-build-a-comb...</a></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41075099"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41075099" href="https://news.ycombinator.com/vote?id=41075099&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>The main issue with this is cost, few can afford the thousands it would take to build a competition bot like that.</p><p>However! I do think you could easily adapt it to a smaller embedded form factor and do like a beyblades style battle in a tiny arena.</p><p>Definitely agree about being hands on and open ended, the skills you learn will take you very far in engineering but also just in life!</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41075433"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41075433" href="https://news.ycombinator.com/vote?id=41075433&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div>
                  <p>I can't say I've looked into it in any detail, but I've seen 'antweight' and other extremely small/lightweight battle bot videos pop up on my youtube feed from time to time. Stuff that mostly looks 3d printed fighting in more or less an aquarium tank.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41071647"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41071647" href="https://news.ycombinator.com/vote?id=41071647&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>I know that you said you don't want a premade kit and following instructions and this is *close* to that... but I think it might still be a great fit.</p><p>Mark Rober has a new product where they ship a new robot every 2 months.  They give you the basic instructions on how to build/program it but the idea is that you take that knowledge and then expand on it yourself by adding features.  My daughter is still a little too young for it so I haven't used it personally.  The biggest issue is that it is a subscription and not a one time purchase.</p><p>Here is the link:
<a href="https://www.crunchlabs.com/products/hack-pack-subscription" rel="nofollow">https://www.crunchlabs.com/products/hack-pack-subscription</a></p><p>And here is a brief video explaining how it expands beyond the normal "premade robot kit."
<a href="https://www.youtube.com/watch?v=TtdOdUi9b_s" rel="nofollow">https://www.youtube.com/watch?v=TtdOdUi9b_s</a></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41074593"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41074593" href="https://news.ycombinator.com/vote?id=41074593&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>We got this for our youngest. Can confirm that it's easy to follow and absolutely encourages exploration of the post build abilities or modifications. Mark is doing great things for kids science. Phat Gus caused my middle child to start exploring zoology as a career!</p><p>Also, the subscription is worth it even if a single purchase option would be nice just to try things out. Go ahead and do it if your kid is at all interested in hardware, robotics, or tinkering in general.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41073642"><td></td></tr>
                <tr id="41073736"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41073736" href="https://news.ycombinator.com/vote?id=41073736&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div>
                  <p>Proprietary tooling that doesn’t work the way you want is unfortunately a great introduction to hardware work :/</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41075157"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41075157" href="https://news.ycombinator.com/vote?id=41075157&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div>
                  <p>This is exactly true, unfortunately: proprietary tooling that costs an absolute fortune, and has a UI straight out of the very worst of the 1980s, and only works on very select proprietary platforms, is absolutely the norm with hardware work.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                              <tr id="41071869"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41071869" href="https://news.ycombinator.com/vote?id=41071869&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>FIRST (<a href="https://www.firstinspires.org/" rel="nofollow">https://www.firstinspires.org/</a>) is a more structured program intended to be organized through schools or similar communities (homeschooling groups, 4H, etc.). I have more experience with the bigger robots intended for high schoolers, but they have programs all the way down to kindergarten.</p><p>Doing something similar at home is very possible, and if you are nearby an existing team or program they are usually more than happy to have a conversation with parents about how to get their kids started even if it doesn't mean joining the team.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41072419"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41072419" href="https://news.ycombinator.com/vote?id=41072419&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>+1 for FIRST. This is your path as it is structured and can also help your child build friendships with other kids interested in robotics.</p><p>Additionally, participants who stick with the program through high school learn every aspect of robotics - problem solving, design, fabrication, testing, coding, presentation, teamwork, etc.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41072638"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41072638" href="https://news.ycombinator.com/vote?id=41072638&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>That is a great point, the things I value most from my time in FIRST are the friendships, connections, and soft skills I built. The engineering is fun, but I definitely use my teamwork, leadership, research, and presentation experience more on a regular basis.</p><p>Additionally to the OP, if you want this to be something that you and your kid do together, you can volunteer as a mentor for the team if your schedules align. You can have a very large impact beyond just your kid by doing so.</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41072457"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41072457" href="https://news.ycombinator.com/vote?id=41072457&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div>
                  <p>This was how I started with my son, who was also 10.
Have him learned Scratch from MIT, learn how logic is constructed in a program
Then I got him a couple of Snap Circuit kit. I know you said no kit, but this is just to learn basic circuit and electricity flow.
Then we used a Raspberry Pi to learn Python.
Once he's comfortable with Python a bit, I set up an environment to program micro controller, specifically the ESP32. I flash Micro Python on there and we started to program some LED string lights. Then control motors with H-Bridges.
After that, it's onto robotics and anything we can get our hands on. I repurpose a baseball pitching machine to launch pickleball, with bluetooth connectivity to boot!  All with an ESP 32, I can control the speed and rotation of the ball, which the original machine only had one speed and no rotation.
It took my son about 2 years to get from zero to building robots.
Good luck!</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41070749"><td></td></tr>
                <tr id="41071306"><td></td></tr>
                <tr id="41072009"><td></td></tr>
                  <tr id="41074722"><td></td></tr>
                <tr id="41075355"><td></td></tr>
                  <tr id="41071468"><td></td></tr>
            <tr id="41072347"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41072347" href="https://news.ycombinator.com/vote?id=41072347&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Spike Prime and Mindstorms use the same Hub just different colors.</p><p>Spike Prime has a large motor, 2 small motors, a distance sensor, color sensor, and force sensor.</p><p>The Mindstorms set had 4 small motors, a distance sensor, and color sensor.</p><p>Mindstorms retailed for about $400 as does Spike Prime currently.</p><p>Spike Prime <i>is</i> Mindstorms for all intents and purposes. You can even get either the Spike Prime or Mindstorms app and use it with either Hub.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41073343"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41073343" href="https://news.ycombinator.com/vote?id=41073343&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>If NHRL is what you want to do then checking out an r/c airplane club and asking questions may be a way to get started. That's going to give you an idea on how transmitters, receivers with multiple channels and servos/speed controllers work.</p><p>Once you understand how transmitters/receivers work and what servos and speed controllers do then you can construct a chassis. The speed controllers would drive the motors moving the robot around and then a servo could open the valve on a flame thrower or something...</p><p>They key is understanding the radio control tech first.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41072109"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41072109" href="https://news.ycombinator.com/vote?id=41072109&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>&gt; but i know nothing of electrical engineering or robotics.</p><p>A few words of advice from someone who has been dabbling for a decade or so, but never really managed more than some half baked prototypes and a few kit builds. You need to consider these three trade offs: time, skill, and money.</p><p>Time: If you have a lot of time, you can learn what you need to learn to build a robot. Learn 3d modeling/printing to make a chassis (my local library has a 3d printer if you don't want to buy one). Learn how to piece together microcontrollers, motor controllers, BMS, and sensors, etc... And learn how to program everything to work together.</p><p>Skill: If you already are pretty good building things, programming, etc... you can leverage those skills. For a robot chassis, it can be done with things around your house, but you need to have the skills and a bit of creativity to make a good one. If you know the arduino ecosystem pretty well, you can pretty easily put together a prototype board, etc...</p><p>Money: You can buy a prebuilt chassis, or a board that has integrated motor controllers and BMS, etc... This will save you time and you will probably end up with a nicer end product than what you could build yourself. Of course the more you lean into this, the closer you are getting to a kit build robot. And FWIW, a kit robot is probably going to be cheaper than mixing and matching prebuilt components + some DIY.</p><p>Also, it kinda depends on what you want to do. Do you just want a little robot that drives around the house (cheap and easy). Or maybe does some line following (also easy). Or do you want a self-balancing robot, or a robot arm (a bit harder and more money). Or something really fancy like a self landing model rocket or a self driving lawn mower (expensive and difficult). You will probably want to start with the easy stuff first, just so you can get a feel for it. And then move up the difficulty ladder from there. But from my experience the time/skill/money trade off goes up fairly exponentially. Getting a half baked prototype for a simple rover is a weekend long project. But doing something really sophisticated or polished is months/years of effort (unless you want to drop some coin to speed things up). It is a fun hobby, but it does require a bit of investment before you start getting impressive results. If you think you and your kid are up for it, then dive right in. But if you think this might be more of a short term curiosity, then a kit or something similar is probably your best bet.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41071973"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41071973" href="https://news.ycombinator.com/vote?id=41071973&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Battle bots are not exactly robotics, they’re RC cars with extra servo channels. Personally I find them boring compared to FPV, but the entry is pretty much the same - watch YouTube tutorials. You could find a book but anything you’d find there would be outdated, unless you need the absolute basics like Kirchhoff's circuit laws - which are as useful for building stuff as set theory is useful for writing wrappers for REST APIs.. just don’t connect negative to positive and you should be fine:)</p><p>You might learn Fusion if you want to 3D model the chassis - again, everything is on Youtube.</p><p>Good luck!</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41075048"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41075048" href="https://news.ycombinator.com/vote?id=41075048&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>I’ve been a middle school and high school robotics coach for a number of years. I think VEX robotics makes the best products to teach kids of any age robotics.</p><p><a href="https://www.vexrobotics.com/" rel="nofollow">https://www.vexrobotics.com/</a></p><p>You buy a relatively affordable kit of parts, but then you are free to assemble and program the bit in whatever way imaginable.</p><p>VEX annually comes out with new games and challenges for your robot to be able to complete. There are teams and clubs across the US, and it’s an all around great program.</p><p>I’m looking forward to my kids being old enough to build and compete, It’s a blast for kids and adults!</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41075228"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41075228" href="https://news.ycombinator.com/vote?id=41075228&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div>
                  <p>My son has been competing since 6th grade. They got 2nd place at states and loved it, so intense watching them play.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41073115"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41073115" href="https://news.ycombinator.com/vote?id=41073115&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>It depends on how deep you are able and willing to go. Getting 'something' to work is not that difficult, especially when all you end up with is essentially a remote controlled car.</p><p>But as soon as you actually want to build the thing you need to work out what your end goal is, how it is physically put together (lets call that the chassis), how it is going to mechanically move, how you are going to drive that movement and how you are going to control that driving method, and then how abstract it needs to do (are you telling it what to do, or telling it what end goal to pursue?).</p><p>Starting with Lego, or perhaps meccano will let you build the physical thing, maybe even have it move with a remote control. You'd get the plastic (Lego) or metal (Meccano) parts as-is and you build whatever you want. Add a two motors and you can drive wheels and steering. Add a receiver and a remote and you have your remote controlled vehicle.</p><p>Edit: fischertechnik is another brand that makes parts you can assemble in whatever way you want (some random YouTube Hit: <a href="https://www.youtube.com/watch?v=yVzK3VaYxS8" rel="nofollow">https://www.youtube.com/watch?v=yVzK3VaYxS8</a> ), it apparently has something that also lets you go to PLC levels of robots controllers: <a href="https://www.rapidonline.com/fischertechnik-robo-tx-controller-51-1610" rel="nofollow">https://www.rapidonline.com/fischertechnik-robo-tx-controlle...</a> . This is of course not what you'd pick if you also wanted to build the entire controller.</p><p>But when you don't want that plastic or metal ready made, and you don't want modules that deal with motors or controllers for you, you now also need to learn some metal working, electronics (microcontrollers, RF transceivers, power management), and software (those microcontrollers won't program themselves).</p><p>Maybe starting with a kit isn't such a bad idea, and then going up a level at a time (i.e. tackle some of the software, or maybe mechanics) and getting to see the results of your work is a good thing, rather than trying to learn everything at once.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41074377"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41074377" href="https://news.ycombinator.com/vote?id=41074377&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>My 8yo daughter and I have been using a pile of relatively cheap BBC Micro:Bit boards to do simple robotics, electronics (motor controllers, screens) and RC fun.</p><p>What makes it better than (eg) Micropython on cheaper hardware the Blocks programming language. She had some experience with Scratch before and the libraries for this are great. The built in led matrix and sensors are useful and the radio is nippy enough for remote HCI.</p><p>There are quite a lot of accessories available from a few different manufacturers. These can minimise build time and let you focus on programming, but you can DIY. I think there's even a Lego breakout.</p><p>I will add, this has been a gateway hobby for me. While she's learning, I'm learning and I'm using my C and Python experience to have fun with really cut down boards. It's fun but you end up making a hell of a lot of "oh it's just £10 for a pack of motor controllers, MOSFETs, resistors, caps, etc etc etc." It's endless.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41075068"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41075068" href="https://news.ycombinator.com/vote?id=41075068&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Regarding programming environments, I highly recommend MicroBlocks(<a href="https://microblocks.fun/" rel="nofollow">https://microblocks.fun/</a>). I was a big MicroPython fan before, and since switching to MicroBlocks, I've never looked back.</p><p>If your child has experience with Scratch, then MicroBlocks will make him feel very familiar.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41075396"><td></td></tr>
                  <tr id="41074833"><td></td></tr>
                <tr id="41074946"><td></td></tr>
                  <tr id="41072270"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41072270" href="https://news.ycombinator.com/vote?id=41072270&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div>
                  <p>Robotics is sexy and there's no reason not to dive in, but I'd suggest also learning some of the fundamentals.  Learning how control algorithms work is incredibly important and I'm thinking you could probably find some examples of building a simple application for a PID controller where your kid can directly manipulate the values and see how it responds.  You don't need to go really deep into the math necessarily, just objective of each parameter and how they influence the behavior of the system.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41075223"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41075223" href="https://news.ycombinator.com/vote?id=41075223&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div>
                  <p>Get the school to start a Vex Robotics competition team. My son has been in it for 3 years in middle school and he is absolutely hooked.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41072716"><td></td></tr>
            <tr id="41071885"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41071885" href="https://news.ycombinator.com/vote?id=41071885&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Modern robotics with deep learning/imitation learning is surprisingly accessible. The low-cost robot arm I used in this project is very easy to 3D print and assemble: <a href="https://github.com/trzy/robot-arm">https://github.com/trzy/robot-arm</a></p><p>An iPhone app is used to teleoperate the arm and gather examples of an action. You then train the model and deploy it and the arm performs the actions based on current camera input and joint angle state.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41072411"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41072411" href="https://news.ycombinator.com/vote?id=41072411&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>A robot arm is fun, I assembled a 6 DoF one with metal parts and hobby servos that cost around £70 if I recall correctly.</p><p>I find it kind of interesting how because hobby servos are used, which don't have encoders on, when you turn it on and set the servo positions it jerks into life.</p><p>The problem I find with mine, is that all servos are the same, I think ideally the bottom servo needs more power.  I need to try slightly higher voltage though too - I think I can use up to ~6V.</p><p>I controlled mine with a Python + a PCA9685 I2C PWM driver module - <a href="https://www.amazon.co.uk/gp/product/B014KTSMLA/" rel="nofollow">https://www.amazon.co.uk/gp/product/B014KTSMLA/</a></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41072049"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41072049" href="https://news.ycombinator.com/vote?id=41072049&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Depending on what you want to do, Bowler Studio is something you might want to play with.</p><p>It's a FOSS robotics software toolkit; you can model the entire robot and simulate nearly every aspect (including physics and servos and whatnot). Using it you can design, test, print, and assemble in a relatively nice fashion.</p><p>I mostly use BowlerStudio for 3D printing CAD stuff, but it does a <i>lot</i>, and since it's free I think it's worth playing with.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41071823"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41071823" href="https://news.ycombinator.com/vote?id=41071823&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>The Lego Boost set is quite a nice set. It comes with three servo's and a color/distance sensor. The scratch like programming tools are nice and accessible and not that limited. However you can also flash micropython on the controller with PyBricks. Then you can pair it with other Lego hubs and a remote over bluetooth.</p><p>This setup gives you pretty much all the possibilities of Mindstorms at a small fraction of the investment</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41072539"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41072539" href="https://news.ycombinator.com/vote?id=41072539&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Since you are a starting out from zero a sumo robot would be a good choice. It is a well known quantity at this point with lots of parts, simple rules, and very focused on the battle aspect.  You can build two at once and program them against each other.</p><p>I’d do a web search for “sumobot arduino” and go from there.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41071348"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41071348" href="https://news.ycombinator.com/vote?id=41071348&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>I've been looking for robots recently that work with Scratch.</p><p>I found one called VinciBot that looks kind of interesting - <a href="https://www.youtube.com/watch?v=BftyB954_r4" rel="nofollow">https://www.youtube.com/watch?v=BftyB954_r4</a>  I like the fact it can draw (it doesn't look like it can pick up the pen by default though, but it appears to have a motor inside that you can attach Lego components to).</p><p>I installed their android app to have a little look at it.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41074018"><td></td></tr>
            <tr id="41072509"><td></td></tr>
            <tr id="41072300"><td></td></tr>
            <tr id="41071583"><td></td></tr>
            <tr id="41072595"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41072595" href="https://news.ycombinator.com/vote?id=41072595&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div>
                  <p>There's a bunch of cheap kits on sites like AliExpress. I'd personally would love to just sit down and assemble a bunch of mini robots while learning eletronics and micro controllers</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41075316"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41075316" href="https://news.ycombinator.com/vote?id=41075316&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>The LEGO Technic Motor Kit is the best introduction.</p><p>A snap-together kit built RC car is the best way to teach servo control, motor ESC, and basic battery handling concepts.</p><p>3d printer kits like Voron or Prusa is the best way to learn stepper motor motion platforms. The FreeCAD/CAM workflow is identical most CNC gcode based machines.</p><p>The cheapest introduction to electronics theory is a Ham radio license. This will answer how RF remote controllers work, and develop an intuition about EE design.</p><p>Get a bulk pack of Arduino hobby boards, resister pack, and LEDs. This allows you to bring together all these bits to solve robotics problems.</p><p>Building a turtle bot is super easy with the above skills.</p><p>Remember to have fun, =3</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41070759"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41070759" href="https://news.ycombinator.com/vote?id=41070759&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>You might consider something like the Lego Mindstorms robotics kit.</p><p>It gives you an accessible starting point, but is a fully featured programming language and has a variety of sensors, motors, etc which can be made into increasingly complex and diverse robots.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41072630"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41072630" href="https://news.ycombinator.com/vote?id=41072630&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>get a 
- roomba create 3 for 400
- arm built of dynamixel servos for 200
- camera for 100-500 (stereoscopic will set you back but its worth it)
- nvidia jetson nano orin nx (500)</p><p>for about 2k, you can make a robot that can clean your house and is probably smarter than a dog/cat</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41072885"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41072885" href="https://news.ycombinator.com/vote?id=41072885&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Regarding the arm, are you thinking of a particular kit?</p><p>Those servos look really interesting, so you can read their position via a UART type interface?  I've only played with cheap PWM servos before.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41074915"><td></td></tr>
                        <tr id="41073922"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41073922" href="https://news.ycombinator.com/vote?id=41073922&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Together is the best way.</p><p><i>I prefer to learn how everything works and build something custom instead of just buying a premade kit and following instructions.</i></p><p>Together is probably your child’s preference. A premade kit goes straight to the building phase. And kits are something they can undertake theirself as they pursue independence in two or three years.</p><p>You are launching a person. Good luck.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41071458"><td></td></tr>
            <tr id="41071981"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41071981" href="https://news.ycombinator.com/vote?id=41071981&amp;how=up&amp;goto=item%3Fid%3D41070703"></a></center>    </td><td><br><div><p>Find a FIRST Lego League (RLL) team for the kid.</p><p>Maybe buy Lego Mindstorms and Lego Technics for home and when the kid runs out of ideas, give them challenges like a line-following robot or a FLL course.</p><p>Then move to a FreeNove Ultimate Sarter Kit. I prefer the Arduino Uno based kits, but the ESP32 kits have their place as well.</p></div></td></tr>
        </tbody></table></td></tr>
            </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Wat – Deep inspection of Python objects (264 pts)]]></title>
            <link>https://github.com/igrek51/wat</link>
            <guid>41070428</guid>
            <pubDate>Thu, 25 Jul 2024 16:18:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/igrek51/wat">https://github.com/igrek51/wat</a>, See on <a href="https://news.ycombinator.com/item?id=41070428">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">🙀 WAT Inspector</h2><a id="user-content--wat-inspector" aria-label="Permalink: 🙀 WAT Inspector" href="#-wat-inspector"></a></p>

<p dir="auto">Deep inspection of Python objects.</p>
<p dir="auto"><strong>WAT</strong> is a powerful inspection tool
that allows you to delve into and examine unknown objects at runtime.</p>
<blockquote>
<p dir="auto">"Wat" is a variant of the English word "what" that is often used to express confusion or disgust</p>
</blockquote>
<p dir="auto">If you find yourself deep within the Python console, feeling dazed and confused,
wondering "WAT? What's that thing?",
that's where the <code>wat</code> inspector comes in handy.</p>
<p dir="auto">Start the Python Interpreter (or attach to one) and execute <code>wat / object</code> on any <code>object</code>
to investigate its
<strong>type</strong>, <strong>formatted value</strong>, <strong>variables</strong>, <strong>methods</strong>, <strong>parent types</strong>, <strong>signature</strong>,
<strong>documentation</strong>, and even its <strong>source code</strong>.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-datetime.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-datetime.png?raw=true" alt=""></a></p>
<details open="">
  <summary>
    
    <span aria-label="Video description wat-demo.mp4">wat-demo.mp4</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/12595017/330394505-3585123a-c1c4-4ca3-85cd-f52e82e9c744.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjE5NDY5MDMsIm5iZiI6MTcyMTk0NjYwMywicGF0aCI6Ii8xMjU5NTAxNy8zMzAzOTQ1MDUtMzU4NTEyM2EtYzFjNC00Y2EzLTg1Y2QtZjUyZTgyZTljNzQ0Lm1wND9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA3MjUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNzI1VDIyMzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTM2NDczOTc1ZWZmYjkyNmQ4MDIwOTAwNTViZDQ5NWM3MDRlOGQ2OWZmYjZhYzE1YTFjMzk0MGI0MGNjYzI0MDEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.BBTeq2SmNsszkGNA9PgUCqX-oqZwxgBygfd8kJaXemE" data-canonical-src="https://private-user-images.githubusercontent.com/12595017/330394505-3585123a-c1c4-4ca3-85cd-f52e82e9c744.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjE5NDY5MDMsIm5iZiI6MTcyMTk0NjYwMywicGF0aCI6Ii8xMjU5NTAxNy8zMzAzOTQ1MDUtMzU4NTEyM2EtYzFjNC00Y2EzLTg1Y2QtZjUyZTgyZTljNzQ0Lm1wND9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA3MjUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNzI1VDIyMzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTM2NDczOTc1ZWZmYjkyNmQ4MDIwOTAwNTViZDQ5NWM3MDRlOGQ2OWZmYjZhYzE1YTFjMzk0MGI0MGNjYzI0MDEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.BBTeq2SmNsszkGNA9PgUCqX-oqZwxgBygfd8kJaXemE" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto"><h2 tabindex="-1" dir="auto">Import</h2><a id="user-content-import" aria-label="Permalink: Import" href="#import"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Insta-Load</h3><a id="user-content-insta-load" aria-label="Permalink: Insta-Load" href="#insta-load"></a></p>
<p dir="auto">If you want to debug something quickly,
you <strong>don't even need to install anything</strong> to use the inspector.</p>
<p dir="auto">Load it on the fly by pasting this snippet to your Python interpreter:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import base64, zlib
code = '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'
exec(zlib.decompress(base64.b64decode(code.encode())).decode(), globals())"><pre><span>import</span> <span>base64</span>, <span>zlib</span>
<span>code</span> <span>=</span> <span>'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'</span>
<span>exec</span>(<span>zlib</span>.<span>decompress</span>(<span>base64</span>.<span>b64decode</span>(<span>code</span>.<span>encode</span>())).<span>decode</span>(), <span>globals</span>())</pre></div>
<p dir="auto">Now you can use <code>wat</code> object.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Install with pip</h3><a id="user-content-install-with-pip" aria-label="Permalink: Install with pip" href="#install-with-pip"></a></p>
<p dir="auto">Alternatively, install <strong>wat-inspector</strong> package and import inspection tool from <strong>wat</strong> module:</p>
<div dir="auto" data-snippet-clipboard-copy-content="pip install wat-inspector"><pre>pip install wat-inspector</pre></div>

<p dir="auto"><h2 tabindex="-1" dir="auto">Usage &amp; modifiers</h2><a id="user-content-usage--modifiers" aria-label="Permalink: Usage &amp; modifiers" href="#usage--modifiers"></a></p>
<p dir="auto"><code>wat</code> object can quickly inspect things
by using the division operator (to avoid typing parentheses).
A short, no-parentheses syntax <code>wat / object</code> is equivalent to <code>wat(object)</code>.</p>
<p dir="auto">You can call <code>wat.modifiers / object</code> (or <code>wat.modifiers(object)</code>)
with the following <strong>modifiers</strong>:</p>
<ul dir="auto">
<li><code>.short</code> or <code>.s</code> to hide attributes (variables and methods)</li>
<li><code>.long</code> to show non-abbreviated values and documentation</li>
<li><code>.dunder</code> to display dunder attributes</li>
<li><code>.code</code> to reveal the source code of a function, method, or class</li>
<li><code>.nodocs</code> to hide documentation for functions and classes</li>
<li><code>.all</code> to include all available information</li>
</ul>
<p dir="auto">You can chain modifiers, e.g. <code>wat.long.dunder.nodocs / object</code>.</p>
<p dir="auto">Call <code>wat.locals</code> or <code>wat()</code> to inspect <code>locals()</code> variables.
Call <code>wat.globals</code> to inspect <code>globals()</code> variables.</p>
<p dir="auto">Type <code>wat</code> in the interpreter to learn more about this object itself.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Use Cases Examples</h2><a id="user-content-use-cases-examples" aria-label="Permalink: Use Cases Examples" href="#use-cases-examples"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Determine type</h3><a id="user-content-determine-type" aria-label="Permalink: Determine type" href="#determine-type"></a></p>
<p dir="auto">In a dynamic typing language like Python, it's often hard to determine the type of an object. WAT Inspector can help you with that by showing the name of the type with the module it comes from.</p>
<div dir="auto" data-snippet-clipboard-copy-content=">>> wat.short / (1,)
value: (1,)
type: tuple
len: 1"><pre><span>&gt;&gt;</span><span>&gt;</span> <span>wat</span>.<span>short</span> <span>/</span> (<span>1</span>,)
<span>value</span>: (<span>1</span>,)
<span>type</span>: <span>tuple</span>
<span>len</span>: <span>1</span></pre></div>
<div dir="auto" data-snippet-clipboard-copy-content=">>> wat.short / {None}
value: {None}
type: set
len: 1"><pre><span>&gt;&gt;</span><span>&gt;</span> <span>wat</span>.<span>short</span> <span>/</span> {<span>None</span>}
<span>value</span>: {<span>None</span>}
<span>type</span>: <span>set</span>
<span>len</span>: <span>1</span></pre></div>
<div dir="auto" data-snippet-clipboard-copy-content=">>> wat.short / user
str: admin
repr: <User: admin>
type: django.contrib.auth.models.User
parents: django.contrib.auth.models.AbstractUser, django.contrib.auth.base_user.AbstractBaseUser, django.contrib.auth.models.PermissionsMixin, django.db.models.base.Model, django.db.models.utils.AltersData"><pre><span>&gt;&gt;</span><span>&gt;</span> <span>wat</span>.<span>short</span> <span>/</span> <span>user</span>
<span>str</span>: <span>admin</span>
<span>repr</span>: <span>&lt;</span><span>User</span>: <span>admin</span><span>&gt;</span>
<span>type</span>: <span>django</span>.<span>contrib</span>.<span>auth</span>.<span>models</span>.<span>User</span>
<span>parents</span>: <span>django</span>.<span>contrib</span>.<span>auth</span>.<span>models</span>.<span>AbstractUser</span>, <span>django</span>.<span>contrib</span>.<span>auth</span>.<span>base_user</span>.<span>AbstractBaseUser</span>, <span>django</span>.<span>contrib</span>.<span>auth</span>.<span>models</span>.<span>PermissionsMixin</span>, <span>django</span>.<span>db</span>.<span>models</span>.<span>base</span>.<span>Model</span>, <span>django</span>.<span>db</span>.<span>models</span>.<span>utils</span>.<span>AltersData</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-short-types.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-short-types.png?raw=true" alt=""></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-intro-set.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-intro-set.png?raw=true" alt=""></a></p>
<p dir="auto">Now that you've identified the actual type,
you can put the type annotations in your code to reduce the confusion.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Look up methods</h3><a id="user-content-look-up-methods" aria-label="Permalink: Look up methods" href="#look-up-methods"></a></p>
<p dir="auto">Listing methods, functions and looking up their signature is extremely beneficial to see how to use them.
Plus, you can read their docstrings.</p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-string.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-string.png?raw=true" alt=""></a></p>
<p dir="auto">Use <code>wat.long</code> if you want to see full doscstrings.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Discover function's signature</h3><a id="user-content-discover-functions-signature" aria-label="Permalink: Discover function's signature" href="#discover-functions-signature"></a></p>
<p dir="auto">See the docstrings and the signature of a function or a method to see how to use it.</p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-str-split.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-str-split.png?raw=true" alt=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Look up attributes</h3><a id="user-content-look-up-attributes" aria-label="Permalink: Look up attributes" href="#look-up-attributes"></a></p>
<p dir="auto">List the attribues and their types to see what's really inside the inspected object.</p>
<div dir="auto" data-snippet-clipboard-copy-content="wat / re.match('(\d)_(.*)', '1_title')"><pre><span>wat</span> <span>/</span> <span>re</span>.<span>match</span>(<span>'(\d)_(.*)'</span>, <span>'1_title'</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-re-match.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-re-match.png?raw=true" alt=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Explore modules</h3><a id="user-content-explore-modules" aria-label="Permalink: Explore modules" href="#explore-modules"></a></p>
<p dir="auto">One of the use cases is to explore modules.
For instance you can list functions, classes and the sub-modules of a selected module.</p>
<div dir="auto" data-snippet-clipboard-copy-content="import pathlib
wat / pathlib"><pre><span>import</span> <span>pathlib</span>
<span>wat</span> <span>/</span> <span>pathlib</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-pathlib.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-pathlib.png?raw=true" alt=""></a></p>
<p dir="auto">Then, you can navigate further, e.g. <code>wat / pathlib.fnmatch</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Explore dunder attributes</h3><a id="user-content-explore-dunder-attributes" aria-label="Permalink: Explore dunder attributes" href="#explore-dunder-attributes"></a></p>
<p dir="auto">By default, WAT Inspector hides attributes starting with <code>__</code>. Use <code>wat.dunder</code> to see them.</p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-dict-dunder.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-dict-dunder.png?raw=true" alt=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Review the code</h3><a id="user-content-review-the-code" aria-label="Permalink: Review the code" href="#review-the-code"></a></p>
<p dir="auto">Look up the source code of a function to see how it really works.</p>
<div dir="auto" data-snippet-clipboard-copy-content="import re
wat.code / re.match"><pre><span>import</span> <span>re</span>
<span>wat</span>.<span>code</span> <span>/</span> <span>re</span>.<span>match</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/igrek51/wat/blob/master/docs/img/wat-code-rematch.png?raw=true"><img src="https://github.com/igrek51/wat/raw/master/docs/img/wat-code-rematch.png?raw=true" alt=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Debug with breakpoint</h3><a id="user-content-debug-with-breakpoint" aria-label="Permalink: Debug with breakpoint" href="#debug-with-breakpoint"></a></p>
<p dir="auto">You can use Python's <code>breakpoint()</code> keyword to launch an interactive debugger in your program:</p>
<div dir="auto" data-snippet-clipboard-copy-content="logger.debug('init')
x = {'what is it?'}
breakpoint()
logger.debug('done')"><pre><span>logger</span>.<span>debug</span>(<span>'init'</span>)
<span>x</span> <span>=</span> {<span>'what is it?'</span>}
<span>breakpoint</span>()
<span>logger</span>.<span>debug</span>(<span>'done'</span>)</pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="(Pdb) from wat import wat  # or paste insta-load snippet
(Pdb) wat / x  # inspect local variable
...
(Pdb) c  # continue execution"><pre>(<span>Pdb</span>) <span>from</span> <span>wat</span> <span>import</span> <span>wat</span>  <span># or paste insta-load snippet</span>
(<span>Pdb</span>) <span>wat</span> <span>/</span> <span>x</span>  <span># inspect local variable</span>
...
(<span>Pdb</span>) <span>c</span>  <span># continue execution</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Explore Python built-ins</h3><a id="user-content-explore-python-built-ins" aria-label="Permalink: Explore Python built-ins" href="#explore-python-built-ins"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Look up local variables</h3><a id="user-content-look-up-local-variables" aria-label="Permalink: Look up local variables" href="#look-up-local-variables"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Look up global variables</h3><a id="user-content-look-up-global-variables" aria-label="Permalink: Look up global variables" href="#look-up-global-variables"></a></p>

</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Launch HN: Undermind (YC S24) – AI agent for discovering scientific papers (208 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=41069909</link>
            <guid>41069909</guid>
            <pubDate>Thu, 25 Jul 2024 15:36:57 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=41069909">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="41069909">
      <td><span></span></td>      <td><center><a id="up_41069909" href="https://news.ycombinator.com/vote?id=41069909&amp;how=up&amp;goto=item%3Fid%3D41069909"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=41069909">Launch HN: Undermind (YC S24) – AI agent for discovering scientific papers</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_41069909">112 points</span> by <a href="https://news.ycombinator.com/user?id=jramette">jramette</a> <span title="2024-07-25T15:36:57"><a href="https://news.ycombinator.com/item?id=41069909">7 hours ago</a></span> <span id="unv_41069909"></span> | <a href="https://news.ycombinator.com/hide?id=41069909&amp;goto=item%3Fid%3D41069909">hide</a> | <a href="https://hn.algolia.com/?query=Launch%20HN%3A%20Undermind%20(YC%20S24)%20%E2%80%93%20AI%20agent%20for%20discovering%20scientific%20papers&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=41069909&amp;auth=1a6fb7dd4544dd9e5eec5847729cb868bddc831d">favorite</a> | <a href="https://news.ycombinator.com/item?id=41069909">48&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>Hey HN! We’re Josh and Tom from Undermind (<a href="https://www.undermind.ai/">https://www.undermind.ai/</a>). We’re building a search engine for complex scientific research. There's a demo video at <a href="https://www.loom.com/share/10067c49e4424b949a4b8c9fd8f3b12c?sid=5ee3cd96-2b05-4768-8856-cb1b83e40a70" rel="nofollow">https://www.loom.com/share/10067c49e4424b949a4b8c9fd8f3b12c?...</a>, as well as example search results on our homepage.</p><p>We’re both physicists, and one of our biggest frustrations during grad school was finding research — There were a lot of times when we had to sit down to scope out new ideas for a project and quickly become a deep expert, or we had to find solutions to really complex technical problems, but the only way to do that was manually dig through papers on Google Scholar for hours. It was very tedious, to the point where we would often just skip the careful research and hope for the best. Sometimes you’d get burned a few months later because someone already solved the problem you thought was novel and important, or you’d waste your time inventing/building a solution for something when one already existed.</p><p>The problem was there’s just no easy way to figure out what others have done in research, and load it into your brain. It’s one of the biggest bottlenecks for doing truly good, important research.</p><p>We wanted to fix that. LLMs clearly help, but are mostly limited to general knowledge. Instead, we needed something that would pull in research papers, and give you exactly what you need to know, even for very complex ideas and topics. We realized the way to do this is to mimic the research strategies we already know work, because we do them ourselves, and so we built an agent-like LLM pipeline to carefully search in a way that mimics human research strategies.</p><p>Our search system works a bit differently from casual search engines. First, we have you chat back and forth with an LLM to make sure we actually understand your really complex research goals up front, like you’re talking to a colleague. Then the system carefully searches for you for ~3 minutes. At a high level, it does something similar to tree search, following citation rabbit holes and adapting based on what it discovers to look for more content over multiple iterations (the same way you would if you decided to spend a few hours). The 3 minute delay is annoying, but we’re optimizing for quality of results rather than latency right now. At the end there’s a report.</p><p>We’re trying to achieve two things with this careful, systematic agent-like discovery process:</p><p>1. We want to be very accurate, and only recommend very specific results if you ask for a specific topic. To do this, we carefully read and evaluate content from papers with the highest quality LLMs (we’re just reading abstracts and citations for now, because they’re more widely accessible - but also working on adding full texts).</p><p>2. We want to find everything relevant to your search, because in research it’s crucial to know if something exists or not. The key to being exhaustive is the adaptive algorithms we’ve developed (following citations, changing strategy based on what we find, etc). However, one cool feature of the automated pipeline is we can track the discovery process as the search proceeds. Early on, we find many good results, and later on they get more sparse, until all the good leads are exhausted and we stop finding anything helpful. We can statistically model that process, and figure out when we’ve found everything (it actually has an interesting exponential saturation behavior, which you can read a bit more about in our whitepaper (<a href="https://www.undermind.ai/static/Undermind_whitepaper.pdf">https://www.undermind.ai/static/Undermind_whitepaper.pdf</a>), which we wrote for a previous prototype.)</p><p>You can try searching yourself here:
<a href="https://www.undermind.ai/query_app/promotion/">https://www.undermind.ai/query_app/promotion/</a>. This is a special HN link where, for today, we’ve dropped the signup gate for your first few searches. Usually we require login so you can save searches.</p><p>We’re excited to share this with you! We’d love to hear about your experiences searching, what’s clear or not, and any feedback. We’ll be here to answer any questions or comments.</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI solves IMO problems at silver medal level (1073 pts)]]></title>
            <link>https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/</link>
            <guid>41069829</guid>
            <pubDate>Thu, 25 Jul 2024 15:29:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/">https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/</a>, See on <a href="https://news.ycombinator.com/item?id=41069829">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p data-block-key="q2big">Breakthrough models AlphaProof and AlphaGeometry 2 solve advanced reasoning problems in mathematics</p><p data-block-key="7r8gq">Artificial general intelligence (AGI) with advanced mathematical reasoning has the potential to unlock new frontiers in science and technology.</p><p data-block-key="2a5b7">We’ve made great progress building AI systems that help mathematicians discover <a href="https://deepmind.google/discover/blog/exploring-the-beauty-of-pure-mathematics-in-novel-ways/" rel="noopener" target="_blank">new insights</a>, <a href="https://deepmind.google/discover/blog/discovering-novel-algorithms-with-alphatensor/" rel="noopener" target="_blank">novel algorithms</a> and answers to <a href="https://deepmind.google/discover/blog/funsearch-making-new-discoveries-in-mathematical-sciences-using-large-language-models/" rel="noopener" target="_blank">open problems</a>. But current AI systems still struggle with solving general math problems because of limitations in reasoning skills and training data.</p><p data-block-key="kuaa">Today, we present AlphaProof, a new reinforcement-learning based system for formal math reasoning, and AlphaGeometry 2, an improved version of our <a href="https://deepmind.google/discover/blog/alphageometry-an-olympiad-level-ai-system-for-geometry/" rel="noopener" target="_blank">geometry-solving system</a>. Together, these systems solved four out of six problems from this year’s <a href="https://www.imo2024.uk/" rel="noopener" target="_blank">International Mathematical Olympiad</a> (IMO), achieving the same level as a silver medalist in the competition for the first time.</p>
</div><div>
  <h2 data-block-key="q2big">Breakthrough AI performance solving complex math problems</h2><p data-block-key="fmv98">The IMO is the oldest, largest and most prestigious competition for young mathematicians, held annually since 1959.</p><p data-block-key="2n0o6">Each year, elite pre-college mathematicians train, sometimes for thousands of hours, to solve six exceptionally difficult problems in algebra, combinatorics, geometry and number theory. Many of the winners of the <a href="https://www.mathunion.org/imu-awards/fields-medal" rel="noopener" target="_blank">Fields Medal</a>, one of the highest honors for mathematicians, have represented their country at the IMO.</p><p data-block-key="929s2">More recently, the annual IMO competition has also become widely recognised as a grand challenge in machine learning and an aspirational benchmark for measuring an AI system’s advanced mathematical reasoning capabilities.</p><p data-block-key="5vk51">This year, we applied our combined AI system to the competition problems, provided by the IMO organizers. Our solutions were scored according to the IMO’s point-awarding rules by prominent mathematicians <a href="https://www.dpmms.cam.ac.uk/~wtg10/" rel="noopener" target="_blank">Prof Sir Timothy Gowers</a>, an IMO gold medalist and Fields Medal winner, and <a href="https://www.polyomino.org.uk/" rel="noopener" target="_blank">Dr Joseph Myers</a>, a two-time IMO gold medalist and Chair of the IMO 2024 Problem Selection Committee.</p>
</div><div>
  <p data-block-key="lr8cb">First, the problems were manually translated into formal mathematical language for our systems to understand. In the official competition, students submit answers in two sessions of 4.5 hours each. Our systems solved one problem within minutes and took up to three days to solve the others.</p><p data-block-key="8tekc">AlphaProof solved two algebra problems and one number theory problem by determining the answer and proving it was correct. This included the hardest problem in the competition, solved by only five contestants at this year’s IMO. AlphaGeometry 2 proved the geometry problem, while the two combinatorics problems remained unsolved.</p>
</div><p data-block-key="ewrpn">Each of the six problems can earn seven points, with a total maximum of 42. Our system achieved a final score of 28 points, earning a perfect score on each problem solved — equivalent to the top end of the <a href="https://www.imo-official.org/year_info.aspx?year=2024" rel="noopener" target="_blank">silver-medal category</a>. This year, the gold-medal threshold starts at 29 points, and was achieved by <a href="https://www.imo-official.org/year_individual_r.aspx?year=2024" rel="noopener" target="_blank">58 of 609 contestants</a> at the official competition.</p><div>
  <h2 data-block-key="anhnq">AlphaProof: a formal approach to reasoning</h2><p data-block-key="fv51b">AlphaProof is a system that trains itself to prove mathematical statements in the formal language <a href="https://lean-lang.org/" rel="noopener" target="_blank">Lean</a>. It couples a pre-trained language model with the <a href="https://deepmind.google/discover/blog/alphazero-shedding-new-light-on-chess-shogi-and-go/" rel="noopener" target="_blank">AlphaZero</a> reinforcement learning algorithm, which previously taught itself how to master the games of chess, shogi and Go.</p><p data-block-key="8k252">Formal languages offer the critical advantage that proofs involving mathematical reasoning can be formally verified for correctness. Their use in machine learning has, however, previously been constrained by the very limited amount of human-written data available.</p><p data-block-key="523pv">In contrast, natural language based approaches can hallucinate plausible but incorrect intermediate reasoning steps and solutions, despite having access to orders of magnitudes more data. We established a bridge between these two complementary spheres by fine-tuning a <a href="https://deepmind.google/technologies/gemini/#introduction" rel="noopener" target="_blank">Gemini</a> model to automatically translate natural language problem statements into formal statements, creating a large library of formal problems of varying difficulty.</p><p data-block-key="ev3b8">When presented with a problem, AlphaProof generates solution candidates and then proves or disproves them by searching over possible proof steps in Lean. Each proof that was found and verified is used to reinforce AlphaProof’s language model, enhancing its ability to solve subsequent, more challenging problems.</p><p data-block-key="erlti">We trained AlphaProof for the IMO by proving or disproving millions of problems, covering a wide range of difficulties and mathematical topic areas over a period of weeks leading up to the competition. The training loop was also applied during the contest, reinforcing proofs of self-generated variations of the contest problems until a full solution could be found.</p>
</div><div>
  <h2 data-block-key="q2big">A more competitive AlphaGeometry 2</h2><p data-block-key="97f90">AlphaGeometry 2 is a significantly improved version of <a href="https://deepmind.google/discover/blog/alphageometry-an-olympiad-level-ai-system-for-geometry/" rel="noopener" target="_blank">AlphaGeometry</a>. It’s a neuro-symbolic hybrid system in which the language model was based on <a href="https://deepmind.google/technologies/gemini/#introduction" rel="noopener" target="_blank">Gemini</a> and trained from scratch on an order of magnitude more synthetic data than its predecessor. This helped the model tackle much more challenging geometry problems, including problems about movements of objects and equations of angles, ratio or distances.</p><p data-block-key="dmclu">AlphaGeometry 2 employs a symbolic engine that is two orders of magnitude faster than its predecessor. When presented with a new problem, a novel knowledge-sharing mechanism is used to enable advanced combinations of different search trees to tackle more complex problems.</p><p data-block-key="ebi92">Before this year’s competition, AlphaGeometry 2 could solve 83% of all historical IMO geometry problems from the past 25 years, compared to the 53% rate achieved by its predecessor. For IMO 2024, AlphaGeometry 2 <a href="https://storage.googleapis.com/deepmind-media/DeepMind.com/Blog/imo-2024-solutions/P4/index.html" rel="noopener" target="_blank">solved Problem 4</a> within 19 seconds after receiving its formalization.</p>
</div><div>
  <h2 data-block-key="q2big">New frontiers in mathematical reasoning</h2><p data-block-key="agps5">As part of our IMO work, we also experimented with a natural language reasoning system, built upon <a href="https://deepmind.google/technologies/gemini/#introduction" rel="noopener" target="_blank">Gemini</a> and our latest research to enable advanced problem-solving skills. This system doesn’t require the problems to be translated into a formal language and could be combined with other AI systems. We also tested this approach on this year’s IMO problems and the results showed great promise.</p><p data-block-key="eqnun">Our teams are continuing to explore multiple AI approaches for advancing mathematical reasoning and plan to release more technical details on AlphaProof soon.</p><p data-block-key="9dmnq">We’re excited for a future in which mathematicians work with AI tools to explore hypotheses, try bold new approaches to solving long-standing problems and quickly complete time-consuming elements of proofs — and where AI systems like <a href="https://deepmind.google/technologies/gemini/#introduction" rel="noopener" target="_blank">Gemini</a> become more capable at math and broader reasoning.</p>
</div><div>
      <h2 data-block-key="iin1t">Acknowledgements</h2><p data-block-key="7nkda">We thank the International Mathematical Olympiad organization for their support.</p><p data-block-key="2ieok">AlphaProof development was led by Thomas Hubert, Rishi Mehta and Laurent Sartran; AlphaGeometry 2 and natural language reasoning efforts were led by Thang Luong.</p><p data-block-key="1bmr2">AlphaProof was developed with key contributions from Hussain Masoom, Aja Huang, Miklós Z. Horváth, Tom Zahavy, Vivek Veeriah, Eric Wieser, Jessica Yung, Lei Yu, Yannick Schroecker, Julian Schrittwieser, Ottavia Bertolli, Borja Ibarz, Edward Lockhart, Edward Hughes, Mark Rowland, Grace Margand. Alex Davies and Daniel Zheng led the development of informal systems such as final answer determination, with key contributions from Iuliya Beloshapka, Ingrid von Glehn, Yin Li, Fabian Pedregosa, Ameya Velingker and Goran Žužić. Oliver Nash, Bhavik Mehta, Paul Lezeau, Salvatore Mercuri, Lawrence Wu, Calle Soenne, Thomas Murrills, Luigi Massacci and Andrew Yang advised and contributed as Lean experts. Past contributors include Amol Mandhane, Tom Eccles, Eser Aygün, Zhitao Gong, Richard Evans, Soňa Mokrá, Amin Barekatain, Wendy Shang, Hannah Openshaw, Felix Gimeno. This work was advised by David Silver and Pushmeet Kohli.</p><p data-block-key="ehquf">The development of AlphaGeometry 2 was led by Trieu Trinh and Yuri Chervonyi, with key contributions by Mirek Olšák, Xiaomeng Yang, Hoang Nguyen, Junehyuk Jung, Dawsen Hwang and Marcelo Menegali. The development of the natural language reasoning system was led by Golnaz Ghiasi, Garrett Bingham, YaGuang Li, with key contributions by Swaroop Mishra, Nigamaa Nayakanti, Sidharth Mudgal, Qijun Tan, Junehyuk Jung, Hoang Nguyen, Alex Zhai, Dawsen Hwang, Mingyang Deng, Clara Huiyi Hu, Cosmo Du. Both AlphaGeometry and natural language reasoning systems were advised by Quoc Le.</p><p data-block-key="93atq">David Silver, Quoc Le, Demis Hassabis, and Pushmeet Kohli coordinated and managed the overall project.</p><p data-block-key="fvfqd">We’d also like to thank Insuk Seo, Evan Chen, Zigmars Rasscevskis, Kari Ragnarsson, Junhwi Bae, Jeonghyun Ahn, Jimin Kim, Hung Pham, Nguyen Nguyen, Son Pham, and Pasin Manurangsi who helped evaluate the quality of our language reasoning system. Prof Gregor Dolinar and Dr Geoff Smith MBE from the IMO Board, for the support and collaboration. Jarrod Kahn, Maciej Kula, Tu Vu, Hanzhao Lin, Chenkai Kuang, Vikas Verma, Yifeng Lu, Vihan Jain, Henryk Michalewski, Xavier Garcia, Arjun Kar, Lampros Lamprou, Kaushal Patel, Ilya Tolstikhen, Olivier Bousquet, Anton Tsitsulin, Dustin Zelle, CJ Carey, Sam Blackwell, Abhi Rao, Vahab Mirrokni, Behnam Neyshabur, Ethan Dyer, Keith Rush, Moritz Firsching, Dan Shved, Ihar Bury, Divyanshu Ranjan, Hadi Hashemi, Alexei Bendebury, Soheil Hassas Yeganeh, Shibl Mourad, Simon Schmitt, Satinder Baveja, Chris Dyer, Jacob Austin, Wenda Li, Heng-tze Cheng, Ed Chi, Koray Kavukcuoglu, Oriol Vinyals, Jeff Dean and Sergey Brin for their support and advice.</p><p data-block-key="6chfs">Finally, we’d like to thank the many contributors to the Lean and Mathlib projects, without whom AlphaProof wouldn’t have been possible.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mapping Hacker News to find who knows what in the HN community (273 pts)]]></title>
            <link>https://blog.wilsonl.in/hackerverse-2/#</link>
            <guid>41069527</guid>
            <pubDate>Thu, 25 Jul 2024 15:04:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.wilsonl.in/hackerverse-2/#">https://blog.wilsonl.in/hackerverse-2/#</a>, See on <a href="https://news.ycombinator.com/item?id=41069527">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <article>
      
<p><a href="https://hn2.wilsonl.in/search/startups"><img src="https://blog.wilsonl.in/hackerverse-2/screenshot.png" alt="Navigate HN experts and enthusiasts by their contributions."></a></p>
<p>After the semantic map from the <a href="https://blog.wilsonl.in/hackerverse/">previous post</a>, where I embedded 40 million posts and comments from Hacker News, I saw how the community not only supported the project with encouraging suggestions but also discovered how quickly the community shrinks from across the world into real life relationships. Robert (<a href="https://news.ycombinator.com/user?id=robg">robg</a>) reached out and we began discussing his work in the neural basis of semantic knowledge and how he built social semantic algorithms way back in 2008. Despite the intervening 16 years, we're amazed that social networks, even Hacker News, don't compute and display the trusted voices across topics. Instead of prioritizing pages based on content, social networks could prioritize the people behind the content. The semantic map of the community, in effect, breaks down to computable regions based on the ways people use language to talk about their knowledge and interests.</p>
<p>In short, why is it so hard to discover and explore the people who best know about different topics, the extent of their knowledge, and how they relate to like minds? So Robert and I have been jamming for the last month toward some examples based on the semantics of Hacker News. For every user, based on their HN comments, I've computed their place in the complete semantic map of the entire community.</p>
<p>You can explore and interact with the new app at <a href="https://hn2.wilsonl.in/">hn2.wilsonl.in</a>.</p>
<p>Here are some cool things we discovered as we've looked at how to expand the Hackerverse:</p>
<ul>
<li><p>We can <strong>organize your semantics</strong> on Hacker News. By starting with a user for the semantics of the community we show your contributions to HN semantically alongside similar users, and your "unique identity" of words you use.</p>
<ul>
<li>For example, check out <a href="https://hn2.wilsonl.in/user/robg">robg's new profile</a>.</li>
</ul>
</li>
<li><p>We can <strong>search</strong> the semantics of HN based on who knows what. The n-th order semantics shows how any search vector decomposes into the constituent people and how they use language in the community. Example queries:</p>
<ul>
<li><a href="https://hn2.wilsonl.in/search/startups">startups</a></li>
<li><a href="https://hn2.wilsonl.in/search/go%20vs%20rust%20programming">go vs rust programming</a></li>
<li><a href="https://hn2.wilsonl.in/search/neuroscience%20and%20sleep">neuroscience and sleep</a></li>
<li><a href="https://hn2.wilsonl.in/search/email%20marketing">email marketing</a></li>
</ul>
</li>
<li><p>We can <strong>map the community</strong> by who knows what and their relationships based on the semantics involved. Knowledge is not equally uniform, so this topography of the community helps to highlight the people and what they know.</p>
</li>
</ul>
<p>When you add up these three capabilities—organize your semantics, search the semantics, and map the community—we think the technology starts to show the people behind the words. Rather than organizing the world's information, what if we could organize the world's people? It has us thinking about a whole range of social knowledge challenges, but we'd love to hear your thoughts. Please join the waitlist if you'd like to further explore with us as we make more progress on this project. We're focused on the fun of finding and connecting with people not pages, and we'd love to hear your thoughts.</p>

    </article>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Let's consign CAP to the cabinet of curiosities (124 pts)]]></title>
            <link>https://brooker.co.za/blog/2024/07/25/cap-again.html</link>
            <guid>41069403</guid>
            <pubDate>Thu, 25 Jul 2024 14:52:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://brooker.co.za/blog/2024/07/25/cap-again.html">https://brooker.co.za/blog/2024/07/25/cap-again.html</a>, See on <a href="https://news.ycombinator.com/item?id=41069403">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post">


<p>CAP? Again? Still?</p>

<p>Brewer’s CAP theorem, and Gilbert and Lynch’s <a href="https://users.ece.cmu.edu/~adrian/731-sp04/readings/GL-cap.pdf">formalization of it</a>, is the first introduction to hard trade-offs for many distributed systems engineers. Going by the vast amounts of ink and bile spent on the topic, it is not unreasonable for new folks to conclude that it’s an important, foundational, idea.</p>

<p>The reality is that CAP is nearly irrelevant for almost all engineers building cloud-style distributed systems, and applications on the cloud. It’s much closer to relevant for developers of intermittently connected mobile and IoT applications, and space where the trade-off is typically seen as common sense already.</p>

<p>We’ll start with this excellent diagram from Bernstein and Das’s <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/sigtt611-bernstein.pdf">Rethinking Eventual Consistency</a>:</p>

<p><img src="https://brooker.co.za/blog/images/bernstein_das_fig2.png" alt=""></p>

<p>CAP interests itself in the first two boxes. If there’s no partition (everybody can speak to everybody), we’re OK. Where CAP goes off the rails is the second box: if a quorum of replicas is available to the client, they can still get both strong consistency, and uncompromised availability.</p>

<p><em>What do we mean when we say Available?</em></p>

<p>Consider the quorum system below. We have seven clients. Six are on the majority (quorum<sup><a href="#foot1">1</a></sup>) side, and are smiling because they can enjoy <em>both</em> availability and strong consistency (provided the system doesn’t allow the seventh client to write). The frowning client is out in the cold. They can get stale reads, but can’t write, so they’re frowning.</p>

<p><img src="https://brooker.co.za/blog/images/cap_A_vs_a.png" alt=""></p>

<p>The formalized CAP theorem would call this system <em>unavailable</em>, based on their definition of <em>availability</em>:</p>

<blockquote>
  <p>every request received by a non-failing node in the system must result in a response.</p>
</blockquote>

<p>Most engineers, operators, and six of seven clients, would call this system <em>available</em>. This difference in definitions for a <a href="https://brooker.co.za/blog/2018/02/25/availability-liveness.html">common everyday term</a> causes no end of confusion. Including among those who (incorrectly) claim that this system can’t offer consistency and availability to the six happy clients. It can.</p>

<p><em>Can we make the seventh client happy?</em></p>

<p>As system operators, we still don’t love this situation, and would like all seven of our clients to be happy. This is where we head down to the third box in Bernstein and Das’s diagram, which gives us two choices.</p>

<ul>
  <li>We can accept writes on both sides, provided those writes can be merged later in a sensible way, and offer eventually-consistent reads on both sides.</li>
  <li>We can find another way to make the seventh client happy.</li>
</ul>

<p>The majority of the websites and systems you interact with day-to-day take the second path.</p>

<p>Here’s how that works:</p>

<p><img src="https://brooker.co.za/blog/images/cap_a_with_lb.png" alt=""></p>

<p>Seven happy clients talk to our service via a load balancer. DNS, multi-cast, or some other mechanism directs them towards a healthy load balancer on the healthy side of the partition. The load balancer directs traffic to the healthy replicas, from that healthy side. None of the clients need to be aware that a network partition exists (except a small number who may see their connection to the bad side drop, and be replaced by a connection to the good side).</p>

<p>If the partition extended to the whole big internet that clients are on, this wouldn’t work. But they typically don’t.</p>

<p><em>Extending to Architectures On the Cloud</em></p>

<p>Architectures in the cloud, or in any group of datacenters, do need to deal with network partitions an infrastructure failures. They do that using the same mechanism.</p>

<p><img src="https://brooker.co.za/blog/images/cap_a_with_app.png" alt=""></p>

<p>Applications are deployed in multiple datacenters. A combination of load balancer and some routing mechanism (like DNS) directs customers to healthy copies of the application that can get to a quorum of replicas. Clients are none the wiser, and all have a smile on their faces.</p>

<p><em>The CAP Theorem is Irrelevant</em></p>

<p>The point of these simple, and perhaps simplistic, examples is that CAP trade-offs aren’t a big deal for cloud systems (and cloud-like systems across multiple datacenters). In practice, the redundant nature of connectivity and ability to use routing mechanisms to send clients to the healthy side of partitions means that the vast majority of cloud systems can offer both strong consistency and high availability to their clients, even in the presence of most common types of network partitions.</p>

<p>This doesn’t mean the CAP theorem is wrong, just that it’s not particularly practically interesting.</p>

<p>It also doesn’t mean that there aren’t interesting trade-offs to be considered. Interesting ones include trade-offs between on-disk durability and write latency, between read latency and write latency, between consistency and latency, between latency and throughput, between consistency and throughput<sup><a href="#foot2">2</a></sup>, between isolation and throughput, and many others. Almost all of these trade-offs are more practically important to the cloud system engineer than CAP.</p>

<p><em>When is CAP Relevant?</em></p>

<p>CAP tends to be most relevant to the folks who seem to talk about it least: engineers designing and building systems in intermittently connected environments. IoT. Environmental monitoring. Mobile applications. These tend to be cases where one device, or a small group of them, can be partitioned off from the internet mother ship due to awkward physical situations. Like somebody standing the way of the laser. Or power failures. Or getting in an elevator.</p>

<p>In these settings, applications simply must visit the bottom right corner of Bernstein and Das’s diagram. They must figure out whether to accept writes, and how to merge them, or they must be unavailable for updates. It’s also worth noting that these applications tend not to contain full replicas of the data set, and so read availability may also be affected by loss of connectivity.</p>

<p>I suspect that these folks don’t think about CAP for the same reason you don’t think about air: it’s just part of their world.</p>

<p><em>A challenge</em></p>

<p>The point of this post isn’t merely to be the ten billionth blog post on the CAP theorem. It’s to issue a challenge. A request. Please, if you’re an experienced distributed systems person who’s teaching some new folks about trade-offs in your space, don’t start with CAP. Maybe start by talking about durability versus latency (how many copies? where?). Or one of the <a href="https://dl.acm.org/doi/abs/10.1145/72981.72982">hundred impossibility results from this Nancy Lynch paper</a>. If you absolutely want to talk about a trade-off space with a cool acronym, maybe start with <a href="https://arxiv.org/pdf/1901.01930.pdf">CALM</a>, <a href="https://stratos.seas.harvard.edu/files/stratos/files/rum.pdf">RUM</a>, or even <a href="https://www.cs.umd.edu/~abadi/papers/abadi-pacelc.pdf">PACELC</a>.</p>

<p>Let’s consign CAP to the cabinet of curiosities.</p>

<p><em>Footnotes</em></p>

<ol>
  <li>
    <p><a name="foot1"></a> In this post, I’m going to use <em>majority</em> and <em>quorum</em> interchangeably, despite the fact that some systems have <em>quorums</em> that are not <em>majorities</em>. The predominant case is that <em>quorum</em> is a simple <em>majority</em>.</p>
  </li>
  <li>
    <p><a name="foot2"></a> The <a href="https://dsf.berkeley.edu/jmh/papers/anna_ieee18.pdf">Anna</a> Key-Value store from Chenggang Wu and team at Berkeley is one great example of an exploration of a trade-off space.</p>
  </li>
</ol>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reverse Engineering for Everyone (491 pts)]]></title>
            <link>https://0xinfection.github.io/reversing/</link>
            <guid>41069256</guid>
            <pubDate>Thu, 25 Jul 2024 14:41:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://0xinfection.github.io/reversing/">https://0xinfection.github.io/reversing/</a>, See on <a href="https://news.ycombinator.com/item?id=41069256">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="book-search-results" tabindex="-1" role="main">
    <section>
                                
                                <h2 id="
----reverse-engineering-for-everyone
">
    Reverse Engineering For Everyone!
</h2>

<h4 id="
----—-by
----
--------mytechnotalent
----
">
    — by
    <a href="https://twitter.com/mytechnotalent" target="_blank">
        @mytechnotalent
    </a>
</h4>

<p>
    <a href="https://github.com/mytechnotalent/Reverse-Engineering-Tutorial" target="_blank">
        <img src="https://img.shields.io/badge/GitHub-Reverse%20Engineering%20For%20Everyone!-green.svg?logo=github">
    </a>
        <a href="https://twitter.com/mytechnotalent" target="_blank">
        <img src="https://img.shields.io/badge/Twitter-@mytechnotalent-blue.svg?logo=twitter">
    </a>
    <a href="https://github.com/mytechnotalent/Reverse-Engineering-Tutorial/blob/master/LICENSE" target="_blank">
        <img src="https://img.shields.io/badge/License-Apache%202.0-orange.svg?logo=apache">
    </a>
</p>

<h3 id="
----wait-whats-reverse-engineering
">
    Wait, what's reverse engineering?
</h3>
<p>
    Wikipedia defines it as:
    </p><blockquote>
        Reverse engineering, also called backwards engineering or back engineering, is the process by which an artificial object is deconstructed to reveal its designs, architecture, code, or to extract knowledge from the object. It is similar to scientific research, the only difference being that scientific research is conducted into a natural phenomenon.
    </blockquote>
    Whew, that was quite a mouthful, wasn't it? Well, it is one of the main reasons why this tutorial set exists. To make reverse engineering
    <i>
        as simple as possible.
    </i>

<p>
    <img src="https://0xinfection.github.io/reversing/cover.png">
</p>
<p>
    This comprehensive set of reverse engineering tutorials covers x86, x64 as well as 32-bit ARM and 64-bit architectures. If you're a newbie looking to learn reversing, or just someone looking to revise on some concepts, you're at the right place. As a beginner, these tutorials will carry you from nothing upto the mid-basics of reverse engineering, a skill that everyone within the realm of cyber-security should possess. If you're here just to refresh some concepts, you can conveniently use the side bar to take a look at the sections that has been covered so far.
</p>
<p>
    You can get the entire tutorial set in PDF or MOBI format. All these ebook versions will get updated automatically as new tutorials will be added. 
</p>
<p>
    Download here: [ <a href="https://0xinfection.github.io/reversing/reversing-for-everyone.pdf">PDF</a> | <a href="https://0xinfection.github.io/reversing/reversing-for-everyone.mobi">MOBI</a> ]
</p>

<p>
    <sub>
        Gitbook crafted with ♡ by
        <a href="https://twitter.com/0xInfection" target="_blank">
            @0xInfection
        </a>
    </sub>
</p>
                                
                                </section>
    <div>
        <div>
            
            <h2><span></span> results matching "<span></span>"</h2>
            <ul></ul>
            
        </div>
        <p>
            
            <h2>No results matching "<span></span>"</h2>
            
        </p>
    </div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Memory Mapping an FPGA from an STM32 (131 pts)]]></title>
            <link>https://serd.es/2024/07/24/Memory-mapping-an-FPGA-from-a-STM32.html</link>
            <guid>41068995</guid>
            <pubDate>Thu, 25 Jul 2024 14:21:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://serd.es/2024/07/24/Memory-mapping-an-FPGA-from-a-STM32.html">https://serd.es/2024/07/24/Memory-mapping-an-FPGA-from-a-STM32.html</a>, See on <a href="https://news.ycombinator.com/item?id=41068995">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="main_content">
        <article>
  
  <a href="https://serd.es/2024/07/24/Memory-mapping-an-FPGA-from-a-STM32.html">
    <time datetime="2024-07-24T20:45:00-07:00">
        2024-07-24 20:45
    </time>
  </a>
  <p>I teased at this a bit in my previous posts and finally have a setup I’m happy with, so I thought I’d do a more
in-depth writeup.</p>

<p>To recap, the planned architecture for most of my future large-scale embedded projects is a fairly large (AMD Xilinx
Kintex-7 or Artix / Kintex UltraScale+) FPGA for the high speed data plane paired with a STM32H735 for the control
plane with a memory mapped interface between them.</p>

<h2 id="why-a-two-chip-solution">Why a two-chip solution?</h2>

<p>This is somewhat reminiscent of SoC FPGAs like Xilinx’s Zynq / Versal platforms, but with a few important differences
that make it suit my needs and preferences better:</p>

<ul>
  <li>Using a MCU-class Cortex-M CPU instead of an applications processor is simpler to program in a bare-metal no-OS
or minimal RTOS environment</li>
  <li>The large (564 kB) on chip SRAM and 1 MB on chip flash eliminates the need for time-consuming DDR SDRAM layout for my
typical firmwares (&lt;200 kB each of ram/flash used)</li>
  <li>The disaggregated pinout (two smaller BGAs rather than one larger one) is simpler to fan out on less PCB layers, and
allows placing the FPGA and MCU with some distance between them if this is more convenient for layout reasons</li>
  <li>Decentralizing allows the FPGA and MCU to enforce security boundaries between each other. For example, the FPGA can
refuse to accept a bitstream from the MCU that isn’t signed by a key stored in the FPGA, and on-MCU memory and
peripherals can’t be touched by the FPGA.</li>
  <li>I can mix and match MCUs and FPGAs to achieve the mix of features, IO, BOM cost, etc. that fits my application</li>
  <li>The STM32 has hardware AES and random number generator IPs while Zynq (shockingly) does not</li>
</ul>

<h2 id="the-memory-interface">The memory interface</h2>

<p>After several false starts using quad SPI, I’ve settled on using the Flexible Memory Controller (FMC) as the preferred
MCU-side bridge between the AXI on the STM32 and the FPGA’s internal interconnect. This is a highly configurable module
which can be used to interface to old school (PC133 etc) SDRAM, asynchronous or synchronous SRAM/PSRAM, parallel
NOR/NAND flash, etc.</p>

<p>Most importantly, unlike the OCTOSPI peripheral on the STM32H735, there is no hardware caching or prefetch in the FMC
IP itself - only the normal L1 I/D caches provided by the Cortex-M7. And there’s not even any need to mess with these,
since the first FMC bank has a mapping at 0xc000_0000 which is configured as strongly ordered, uncached, device memory
in the MPU right out of the box - no need to mess around with MPU registers to turn off the cache for this range.</p>

<p>The FMC operating mode most amenable to FPGA bridging is synchronous PSRAM since this provides a clock (which can be
made free-running between memory activity burst, allowing you to run internal FPGA logic, PLLs, etc. off it) and
supports a hardware wait signal, allowing the FPGA to stall the bus in case pipeline delays or a slow peripheral
require more latency than the fixed number of wait states provided in the initial FMC register configuration.</p>

<p>Hooking up 26 LVCMOS33 pins including clock, 16 bit multiplexed address/data, control signals, byte write enables, one
chip select, and three high address bits occupies about half of a 7 series HR or UltraScale+ HD I/O bank. This
configuration gives me 1 MB of address space (2^(16+3) = 512K 16-bit words addressable) on the FPGA and I can break out
a few more address pins if I need more space for a more complex FPGA design.</p>

<h2 id="hardware-design">Hardware design</h2>

<p>I didn’t have any boards with a suitable combination of MCU, FPGA, and interconnect routing so I threw together a quick
test board in KiCAD. It’s a six layer design on Shengyi S1000-2M (cost optimized Asian FR-4 class material) since
there’s nothing particularly fast on the board and I wanted it to be cheap.</p>

<p><a href="https://serd.es/assets/fmc-test-full.jpg"><img src="https://serd.es/assets/fmc-test-800.jpg" alt="Photo of test board with RJ45 jack and Ethernet PHY in the top left corner, Spartan-7 FPGA right center, MCU in the middle, and power inlet in the bottom left"></a></p>

<p>The board is intended to pair with my second generation 48 -&gt; 12V <a href="https://github.com/azonenberg/common-ibc">intermediate bus
converter</a> and also be used for bringup/validation testing of it, so it
includes the PicoBlade control and Mini-Fit Jr 12V input connectors for that. I have the new IBC boards but haven’t had
time to populate any yet, so for now I’m powering it off a first-iteration reworked IBC prototype that I had lying
around.</p>

<p>It contains a STM32L431 in QFN-48 as supervisor / rail sequencer (so I can validate that and develop firmware before
using it in a more expensive, complex design), a STM32H735 in 201-BGA as the main processor, and a Xilinx XC7S25
Spartan-7 FPGA in FTGB196 for the other side of the bridge. I could have got away with less FPGA but wanted this board
to be a more general FPGA+MCU dev board, and also needed sufficient logic capacity and RAM for logic analyzer cores
during bringup, so decided against using the XC7S6 or 15 that I had on the shelf.</p>

<p>The FPGA and MCU are wired together by several interfaces: the FMC discussed above, an OCTOSPI channel, and 10/100
RMII. The OCTOSPI and RMII are not used in the current firmware due to the caching issues discussed in my previous
posts and the fact that the FMC is significantly faster than the RMII interface (more on that later).</p>

<p>The second OCTOSPI channel on the MCU is connected to a quad SPI flash that is currently unused, but I want to play
with in the future. I think this will work fine; the OCTOSPI is actually designed for interfacing with external flash
and most of the quirks I’ve encountered were the result of trying to shoehorn it into something it was not meant to do.</p>

<p>In addition to the interfaces to the MCU, the FPGA has an RGMII connection to a KSZ9031RNX gigabit Ethernet PHY, a PMOD
for GPIO expansion, and four LEDs for status indications.</p>

<p>The MCU also has a PMOD of its own, another four LEDs, and a 3.3V UART broken out to pin headers for debug console.</p>

<h2 id="integrated-platform">Integrated platform</h2>

<p>The STM32H735 is a very complex chip (the <a href="https://www.st.com/resource/en/reference_manual/rm0468-stm32h723733-stm32h725735-and-stm32h730-value-line-advanced-armbased-32bit-mcus-stmicroelectronics.pdf">reference
manual</a>
weighs in at 3357 pages) so we’ll only show the parts relevant to the discussion in figures here.</p>

<p>From the MCU’s perspective, the FPGA shows up as a 64 MB region (of which only 1 MB is wired up on this board) of APB
SFR address space mapped starting at 0xc000_0000. In my <a href="https://github.com/azonenberg/misc-devboards/blob/master/fpga-stm32-ifaces/firmware/main/firmware.ld">linker
script</a> these
regions are referred to as FMC_APB1 and FMC_APB2 to avoid ambiguity with the on-MCU APB1 and APB2 bus segments located
in the 0x4000_0000 peripheral address range.</p>

<p>64-bit accesses are not currently supported since the FPGA-side bus is 32 bits and I haven’t implemented logic to break
up a 64-bit burst into two 32-bit transactions. 32-bit read and write accesses are fully supported including wait state
propagation; 16 and 8 bit accesses are mostly implemented but thorough testing has been low priority since most
of my peripherals have native 32-bit registers anyway.</p>

<p><a href="https://serd.es/assets/fpga-mcu-block.png"><img src="https://serd.es/assets/fpga-mcu-block.png" alt="Block diagram showing AXI bus within STM32, APB bus within FPGA, and bridge via the FMC"></a></p>

<p>The FPGA design (implemented in SystemVerilog) contains:</p>

<ul>
  <li>A tri speed 10/100/1000 <a href="https://github.com/azonenberg/antikernel-ipcores/blob/master/interface/ethernet/RGMIIMACWrapper.sv?ts=4">RGMII
MAC</a> paired
with memory mapped <a href="https://github.com/azonenberg/antikernel-ipcores/blob/master/interface/ethernet/APB_EthernetRxBuffer_x32.sv">RX
FIFO</a> and
<a href="https://github.com/azonenberg/antikernel-ipcores/blob/master/interface/ethernet/APB_EthernetTxBuffer_x32_1G.sv">TX
FIFO</a></li>
  <li>An <a href="https://github.com/azonenberg/antikernel-ipcores/blob/master/interface/ethernet/APB_MDIO.sv?ts=4">MDIO
controller</a></li>
  <li>A 32-bit
<a href="https://github.com/azonenberg/antikernel-ipcores/blob/master/interface/gpio/APB_GPIO.sv?ts=4">GPIO port</a> connected to
the PHY reset pin, some other miscellaneous control/status signals around the board and internal to the FPGA, and the
FPGA PMOD pins</li>
  <li>A few support blocks for things like querying the FPGA device ID, temperature, and other system health sensors</li>
</ul>

<h2 id="fpga-side-amba-implementation">FPGA-side AMBA implementation</h2>

<p>I shied away from using AMBA interconnects in my FPGA design for a long time because of Xilinx’s choices of using AXI
(large and heavy weight) for everything, and having individual ports for every control signal (whyyyy?). But Vivado now
has good support for SystemVerilog interfaces (when I last looked at this circa 2017, while interfaces were supported
it couldn’t handle arrays of them).</p>

<p>Rather than using AXI for everything, I’ve decided to standardize on 32-bit APB as my internal control-plane
interconnect. It’s much smaller and simpler, and for poking config registers it’s more than fast enough. And, as you’ll
see later on, you can actually push quite a bit of data over it if necessary.</p>

<p>The <a href="https://github.com/azonenberg/misc-devboards/blob/master/fpga-stm32-ifaces/rtl/iface-test/iface-test.srcs/sources_1/new/top.sv?ts=4">top
level</a>
of the design is mostly IO declarations and the APB interconnect.</p>

<h3 id="fmc-bridge">FMC bridge</h3>

<p>The FMC bridge is a bidirectional converter between the STM32 FMC bus to AMBA APB. You can go look at <a href="https://github.com/azonenberg/antikernel-ipcores/blob/master/amba/bridging/FMC_APBBridge.sv?ts=4">the
source</a> if you want
to see all the gory details, but here’s how it’s instantiated.</p>

<p>The bridge contains an internal PLL (as of this writing only 7 series is supported but UltraScale+ will be added soon)
locked to the FMC clock (which must be free running) and generating two equal-frequency output clocks. The phase of
these clocks can be adjusted as needed to improve setup/hold margin depending on on IO timing requirements for your
specific FPGA, board trace delays, etc.</p>

<p>The first clock phase is used for capturing inbound FMC control/write data signals and driving the APB PCLK out to
internal loads within the FPGA, while the second clock is used for launching read data back to the MCU. At higher clock
speeds it may be necessary to move the launch clock back relative to the capture clock in order to buy a bit more
timing margin for the system-synchronous bus. (If anyone at ST is listening, could you maybe add some kind of DQS or
other source-synchronous read capture clock to the FMC in your next gen parts?)</p>

<p>This bridge converts inbound FMC transactions directly to APB read/write transactions, setting the APB PSTRB signal as
needed to match the byte write enables on the FMC. APB latency is properly propagated back to the NWAIT signal on the
FMC, so peripherals can take arbitrarily long to service requests (although this will stall the AXI bus on the STM32,
so beware).</p>

<p>As of now, the PSLVERR signal is not used for anything, but in the future I plan to break it out to a latching
interrupt line of some sort that will trigger a “you done segfaulted” ISR on the MCU to handle the error.</p>

<figure><pre><code data-lang="verilog"><span>APB</span> <span>#(.</span><span>DATA_WIDTH</span><span>(</span><span>32</span><span>),</span> <span>.</span><span>ADDR_WIDTH</span><span>(</span><span>20</span><span>),</span> <span>.</span><span>USER_WIDTH</span><span>(</span><span>0</span><span>))</span> <span>fmc_apb</span><span>();</span>

<span>FMC_APBBridge</span> <span>#(</span>
    <span>.</span><span>CLOCK_PERIOD</span><span>(</span><span>7.27</span><span>),</span>    <span>//137.5 MHz</span>
    <span>.</span><span>VCO_MULT</span><span>(</span><span>8</span><span>),</span>           <span>//1.1 GHz VCO</span>
    <span>.</span><span>CAPTURE_CLOCK_PHASE</span><span>(</span><span>-</span><span>30</span><span>),</span>
    <span>.</span><span>LAUNCH_CLOCK_PHASE</span><span>(</span><span>-</span><span>30</span><span>)</span>
<span>)</span> <span>fmcbridge</span><span>(</span>
    <span>.</span><span>apb</span><span>(</span><span>fmc_apb</span><span>),</span>

    <span>.</span><span>clk_mgmt</span><span>(</span><span>clk_125mhz</span><span>),</span>

    <span>.</span><span>fmc_clk</span><span>(</span><span>fmc_clk</span><span>),</span>
    <span>.</span><span>fmc_nwait</span><span>(</span><span>fmc_nwait</span><span>),</span>
    <span>.</span><span>fmc_noe</span><span>(</span><span>fmc_noe</span><span>),</span>
    <span>.</span><span>fmc_ad</span><span>(</span><span>fmc_ad</span><span>),</span>
    <span>.</span><span>fmc_nwe</span><span>(</span><span>fmc_nwe</span><span>),</span>
    <span>.</span><span>fmc_nbl</span><span>(</span><span>fmc_nbl</span><span>),</span>
    <span>.</span><span>fmc_nl_nadv</span><span>(</span><span>fmc_nl_nadv</span><span>),</span>
    <span>.</span><span>fmc_a_hi</span><span>(</span><span>fmc_a_hi</span><span>),</span>
    <span>.</span><span>fmc_cs_n</span><span>(</span><span>fmc_ne1</span><span>)</span>
<span>);</span></code></pre></figure>

<h3 id="apb-bridges">APB bridges</h3>

<p>My <a href="https://github.com/azonenberg/antikernel-ipcores/blob/master/amba/apb/APBBridge.sv?ts=4">APB bridge</a> module takes a
single APB requester port and bridges it out to arbitrarily many completers, each mapped at consecutive, equally sized
regions of address space configured as an array of SystemVerilog interfaces. No fancy GUI address space editors, no
automatic code generation, just a parameterizable module.</p>

<p>Most nontrivial designs will include a mix of peripherals with simple, tiny register maps (just a few control bits) and
larger, more complex ones with memory mapped buffers etc. My architecture implements this by using a tree of bridges;
the test system has a root bridge with two 64 kB bus segments. One of these is then subdivided into 1 kB segments for
general peripherals while the other is subdivided into 4 kB segments for the Ethernet FIFOs.</p>

<p>The bridge is completely combinatorial to provide maximum flexibility for timing-latency tradeoffs; it is expected that
real-world designs will add <a href="https://github.com/azonenberg/antikernel-ipcores/blob/master/amba/apb/APBRegisterSlice.sv?ts=4">register
slices</a> throughout the
design as required to make timing at the desired PCLK frequency.</p>

<figure><pre><code data-lang="verilog"><span>//Two 16-bit bus segments at 0xc000_0000 (APB1) and c001_0000 (APB2)</span>
<span>APB</span> <span>#(.</span><span>DATA_WIDTH</span><span>(</span><span>32</span><span>),</span> <span>.</span><span>ADDR_WIDTH</span><span>(</span><span>16</span><span>),</span> <span>.</span><span>USER_WIDTH</span><span>(</span><span>0</span><span>))</span> <span>rootAPB</span><span>[</span><span>1</span><span>:</span><span>0</span><span>]();</span>

<span>//Root bridge</span>
<span>APBBridge</span> <span>#(</span>
	<span>.</span><span>BASE_ADDR</span><span>(</span><span>32'h0000_0000</span><span>),</span>	<span>//MSBs are not sent over FMC</span>
	<span>.</span><span>BLOCK_SIZE</span><span>(</span><span>32'h1_0000</span><span>),</span>
	<span>.</span><span>NUM_PORTS</span><span>(</span><span>2</span><span>)</span>
<span>)</span> <span>root_bridge</span> <span>(</span>
	<span>.</span><span>upstream</span><span>(</span><span>fmc_apb_pipe</span><span>),</span>
	<span>.</span><span>downstream</span><span>(</span><span>rootAPB</span><span>)</span>
<span>);</span>

<span>//Pipeline stages at top side of each root in case we need to improve timing</span>
<span>APB</span> <span>#(.</span><span>DATA_WIDTH</span><span>(</span><span>32</span><span>),</span> <span>.</span><span>ADDR_WIDTH</span><span>(</span><span>16</span><span>),</span> <span>.</span><span>USER_WIDTH</span><span>(</span><span>0</span><span>))</span> <span>apb1_root</span><span>();</span>
<span>APBRegisterSlice</span> <span>#(.</span><span>DOWN_REG</span><span>(</span><span>0</span><span>),</span> <span>.</span><span>UP_REG</span><span>(</span><span>0</span><span>))</span> <span>regslice_apb1_root</span><span>(</span>
	<span>.</span><span>upstream</span><span>(</span><span>rootAPB</span><span>[</span><span>0</span><span>]),</span>
	<span>.</span><span>downstream</span><span>(</span><span>apb1_root</span><span>));</span>

<span>APB</span> <span>#(.</span><span>DATA_WIDTH</span><span>(</span><span>32</span><span>),</span> <span>.</span><span>ADDR_WIDTH</span><span>(</span><span>16</span><span>),</span> <span>.</span><span>USER_WIDTH</span><span>(</span><span>0</span><span>))</span> <span>apb2_root</span><span>();</span>
<span>APBRegisterSlice</span> <span>#(.</span><span>DOWN_REG</span><span>(</span><span>0</span><span>),</span> <span>.</span><span>UP_REG</span><span>(</span><span>0</span><span>))</span> <span>regslice_apb2_root</span><span>(</span>
	<span>.</span><span>upstream</span><span>(</span><span>rootAPB</span><span>[</span><span>1</span><span>]),</span>
	<span>.</span><span>downstream</span><span>(</span><span>apb2_root</span><span>));</span></code></pre></figure>

<h2 id="performance">Performance</h2>

<p>In order to check how fast the interface actually is, I wrote a minimalistic iperf3 compatible server application as a
benchmark. Not that I actually expect to be trying to firehose packets as fast as I can (I didn’t implement rate
limiting) from a STM32 hanging off an FPGA, but it’s a decent stress test of the interconnect bandwidth.</p>

<p>I chose reverse UDP mode (STM32 sending, PC receiving) for the benchmark to minimize the amount of CPU used on the
benchmark with the goal of primarily stressing the bus - in other words, this should not be interpreted as a realistic
performance figure that can be achieved by actual application code doing nontrivial things, merely a figure of merit
for comparison to future implementations.</p>

<p>The current APBEthernetInterface driver doesn’t use any DMA, just a busy loop that effectively memcpy’s the data over
(with a few slight tweaks to ensure alignment etc). Given that all of the memory accesses are made by the CPU, I put
the packet buffers and all of the internal data structures used by the TCP/IP stack in DTCM to maximize performance.</p>

<p>With the FMC clocked at 125 MHz and both PLL clock phases set to -30 degrees (after BUFG insertion delay), my current
test firmware can sustain 284 Mbps over a ten-second test.</p>

<p><img src="https://serd.es/assets/iperf3.png" alt="iperf3 screenshot showing 284 Mbps of UDP traffic"></p>

<p>There’s probably potential to go faster, the FMC can clock to double the current rate (250 MHz) but I had trouble
getting reliable performance. On my next “real” design I’ll have a faster FPGA (although potentially slower IOs,
UltraScale+ HDIO are actually somewhat slow compared to 7 series HR) and may spend some time playing with constraints
and PLL phases to see if I can push it any further. But realistically, this is already more than enough for my needs.</p>

<h2 id="conclusions">Conclusions</h2>

<p>Overall this was surprisingly painless. The interface just works, with almost no fuss. Pushing to higher clock rates
(past 125 MHz) is likely to be a bit challenging due to the system-synchronous nature of the bus. I played around a bit
with dynamic PLL reconfiguration and some ideas for link trainining of sorts, but honestly I don’t think it’s
necessary.</p>

<p>I expect the code will evolve slightly over time, perhaps eventually adding 64-bit transfer support on the FMC side and
bridging to AHB rather than APB for reduced overhead of sequential transfers, but this is likely to be the backbone of
my large FPGA+MCU projects for the foreseeable future.</p>

<p>Like this post? <a href="https://ioc.exchange/@azonenberg/112845173275261011">Drop me a comment on Mastodon</a></p>

</article>

      </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Haystack – an IDE for exploring and editing code on an infinite canvas (342 pts)]]></title>
            <link>https://haystackeditor.com/</link>
            <guid>41068719</guid>
            <pubDate>Thu, 25 Jul 2024 13:54:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://haystackeditor.com/">https://haystackeditor.com/</a>, See on <a href="https://news.ycombinator.com/item?id=41068719">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main" data-framer-hydrate-v2="{&quot;routeId&quot;:&quot;augiA20Il&quot;,&quot;localeId&quot;:&quot;default&quot;,&quot;breakpoints&quot;:[{&quot;hash&quot;:&quot;72rtr7&quot;}]}" data-framer-ssr-released-at="2024-07-24T14:10:37.271Z" data-framer-page-optimized-at="2024-07-25T22:02:51.993Z"><div id="i20W9XPdh"><nav data-framer-name="Desktop"><div data-framer-name="Top"><p><img decoding="async" src="https://framerusercontent.com/images/9bx5KI14yg2zRgbrESEvKFOdFM.png" alt=""></p></div><div data-framer-name="Links"><div data-framer-component-type="RichTextContainer"><p><a data-styles-preset="HklxZCvk0" href="https://haystackeditor.com/#home">Home</a></p></div><div data-framer-component-type="RichTextContainer"><p><a data-styles-preset="HklxZCvk0" href="https://haystackeditor.com/#demo-1">Demo</a></p></div><div data-framer-component-type="RichTextContainer"><p><a data-styles-preset="HklxZCvk0" href="https://haystackeditor.com/#faq">FAQs</a></p></div><div data-framer-name="Closed" data-highlight="true" tabindex="0" id="undefined-8jocpt"><p data-styles-preset="pjC45sGTy">Download</p></div></div></nav></div><header data-framer-name="Header" id="home" name="Header"><p data-framer-component-type="RichTextContainer"><h2>Navigate and refactor your code with ease</h2></p><p data-framer-component-type="RichTextContainer"><h2>An IDE built on top of a canvas, Haystack takes care of the tedious and confusing parts of coding for you</h2></p><div data-border="true"><p><img decoding="async" sizes="1065px" srcset="https://framerusercontent.com/images/QpBpFi1AMfOINPGCcfAohi8OVD4.gif?scale-down-to=512 512w,https://framerusercontent.com/images/QpBpFi1AMfOINPGCcfAohi8OVD4.gif?scale-down-to=1024 1024w,https://framerusercontent.com/images/QpBpFi1AMfOINPGCcfAohi8OVD4.gif 1065w" src="https://framerusercontent.com/images/QpBpFi1AMfOINPGCcfAohi8OVD4.gif" alt=""></p></div><div data-framer-name="Closed" data-highlight="true" tabindex="0" id="sw9whx"><p>Download</p></div></header><header data-framer-name="Header Image" id="demo" name="Header Image"><p data-framer-component-type="RichTextContainer"><h2>Haystack in action</h2></p><div id="demo-1"><article role="presentation"></article></div></header><div data-framer-name="FAQ" id="faq" name="FAQ"><p data-framer-component-type="RichTextContainer"><h2>Frequently Asked Questions</h2></p><div data-framer-name="Column" name="Column"><div data-framer-name="Closed" data-highlight="true" tabindex="0"><p>Can I keep my settings from VS Code?</p></div><div data-framer-name="Closed" data-highlight="true" tabindex="0"><p>Does Haystack log or send my code anywhere?</p></div><div data-framer-name="Closed" data-highlight="true" tabindex="0"><p>How do I navigate more easily inside of editors?</p></div><div data-framer-name="Closed" data-highlight="true" tabindex="0"><p>I don't see the extension I want in the sidebar</p></div><div data-framer-name="Closed" data-highlight="true" tabindex="0"><p>What languages do you support?</p></div><div data-framer-name="Closed" data-highlight="true" tabindex="0"><p>Why does the Python language server not work?</p></div><div data-framer-name="Closed" data-highlight="true" tabindex="0"><p>What platforms do you support?</p></div></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A chemist explains the chemistry behind decaf coffee (203 pts)]]></title>
            <link>https://theconversation.com/retaining-flavor-while-removing-caffeine-a-chemist-explains-the-chemistry-behind-decaf-coffee-233196</link>
            <guid>41067616</guid>
            <pubDate>Thu, 25 Jul 2024 12:04:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://theconversation.com/retaining-flavor-while-removing-caffeine-a-chemist-explains-the-chemistry-behind-decaf-coffee-233196">https://theconversation.com/retaining-flavor-while-removing-caffeine-a-chemist-explains-the-chemistry-behind-decaf-coffee-233196</a>, See on <a href="https://news.ycombinator.com/item?id=41067616">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <p>For many people, the aroma of freshly brewed coffee is the start of a great day. But <a href="https://www.uclahealth.org/news/article/caffeine-connection-between-coffee-and-headaches">caffeine can cause headaches and jitters</a> in others. That’s why many people reach for a decaffeinated cup instead.</p>

<p><a href="https://miamioh.edu/profiles/cas/michael-crowder.html">I’m a chemistry professor</a> who has taught lectures on why chemicals dissolve in some liquids but not in others. The processes of decaffeination offer great real-life examples of these chemistry concepts. Even the best decaffeination method, however, <a href="https://www.ncausa.org/Decaffeinated-Coffee">does not remove all of the caffeine</a> – about 7 milligrams of caffeine usually remain in an 8-ounce cup.</p>

<p>Producers decaffeinating their coffee want to remove the caffeine while retaining all – or at least most – of the other chemical aroma and flavor compounds. Decaffeination <a href="https://www.bbc.com/future/article/20180917-how-do-you-decaffeinate-coffee">has a rich history</a>, and now almost all coffee producers use <a href="https://www.scientificamerican.com/article/how-is-caffeine-removed-t/">one of three common methods</a>.</p>

<p>All these methods, <a href="https://doi.org/10.1080/15422119.2013.771127">which are also used to make decaffeinated tea</a>, <a href="https://www.bbc.com/future/article/20180917-how-do-you-decaffeinate-coffee">start with green, or unroasted, coffee beans</a> that have been premoistened. Using roasted coffee beans would result in a coffee with a very different aroma and taste because the <a href="https://doi.org/10.1016/B978-0-12-384947-2.00183-5">decaffeination steps would remove some flavor and odor compounds</a> produced during roasting.</p>

<h2>The carbon dioxide method</h2>

<p>In the relatively new carbon dioxide method, developed in the early 1970s, producers use high-pressure CO₂ to extract caffeine from moistened coffee beans. They pump the CO₂ into a sealed vessel containing the moistened coffee beans, and the caffeine molecules dissolve in the CO₂. </p>

<p>Once the caffeine-laden CO₂ is separated from the beans, producers pass the CO₂ mixture either through a container of water or over <a href="https://generalcarbon.com/facts-about-activated-carbon/activated-carbon-faq/">a bed of activated carbon</a>. Activated carbon is carbon that’s been heated up to high temperatures and exposed to steam and oxygen, which creates pores in the carbon. This step filters out the caffeine, and <a href="https://doi.org/10.1021/jf0518305">most likely other chemical compounds</a>, some of which affect the flavor of the coffee. </p>

<p>These compounds either bind in the pores of the activated carbon or they stay in the water. Producers dry the decaffeinated beans using heat. Under the heat, any remaining CO₂ evaporates. Producers can then repressurize and reuse the same CO₂.</p>

<p>This method <a href="https://www.scientificamerican.com/article/how-is-caffeine-removed-t/">removes 96% to 98% of the caffeine</a>, and the resulting coffee has only minimal CO₂ residue.</p>

<p>This method, which requires expensive equipment for making and handling the CO₂, is <a href="https://coffeecode.co.uk/decaffeination-4-main-methods/#google_vignette">extensively used</a> to decaffeinate commercial-grade, or supermarket, coffees.</p>

<h2>Swiss water process</h2>

<p>The Swiss water method, initially used <a href="https://coffeecode.co.uk/decaffeination-4-main-methods/#google_vignette">commercially in the early 1980s</a>, uses hot water to decaffeinate coffee.</p>

<p>Initially, producers soak a batch of green coffee beans in hot water, which extracts both the caffeine and other chemical compounds from the beans. </p>

<p>It’s kind of like what happens when you brew roasted coffee beans – you place dark beans in clear water, and the chemicals that cause the coffee’s dark color leach out of the beans into the water. In a similar way, the hot water pulls the caffeine from not yet decaffeinated beans.</p>

<p>During the soaking, the caffeine concentration is higher in the coffee beans than in the water, so the caffeine moves into the water from the beans. Producers then take the beans out of the water and placed them into fresh water, which has no caffeine in it – so the process repeats, and more caffeine moves out of the beans and into the water. The producers repeat this process, up to 10 times, until <a href="https://www.scientificamerican.com/article/how-is-caffeine-removed-t/">there’s hardly any caffeine left</a> in the beans. </p>

<p>The resulting water, which now contains the caffeine and any flavor compounds that dissolved out from the beans, gets passed through activated charcoal filters. These trap caffeine and other similarly sized chemical compounds, such as sugars <a href="https://www.sciencedirect.com/topics/neuroscience/polyamine">and organic compounds called polyamines</a>, while allowing most of the other chemical compounds to remain in the filtered water.</p>

<p>Producers then use the filtered water – saturated with flavor but devoid of most of the caffeine – to soak a new batch of coffee beans. This step lets the flavor compounds lost during the soaking process reenter the beans. </p>

<figure>
            <p><iframe data-src="https://www.youtube.com/embed/tAEQ4G-1jTQ?wmode=transparent&amp;start=0" frameborder="0" allowfullscreen="" width="100%" height="400"></iframe></p>
            <figcaption><span>This animation shows the steps to the Swiss water process.</span></figcaption>
          </figure>

<p>The <a href="https://www.swisswater.com/pages/coffee-decaffeination-process">Swiss water process</a> is prized for its chemical-free approach and its ability to preserve most of the coffee’s natural flavor. This method <a href="https://www.scientificamerican.com/article/how-is-caffeine-removed-t/">has been shown to remove 94% to 96%</a> of the caffeine.</p>

<h2>Solvent-based methods</h2>

<p>This traditional and most common approach, <a href="https://www.scientificamerican.com/article/how-is-caffeine-removed-t/">first done in the early 1900s</a>, <a href="https://checkyourdecaf.org/">uses organic solvents</a>, which are liquids that dissolve organic chemical compounds such as caffeine. Ethyl acetate and methylene chloride are two common solvents used to extract caffeine from green coffee beans. There are two main solvent-based methods. </p>

<p>In the direct method, producers soak the moist beans directly in the solvent or in a water solution containing the solvent. </p>

<p>The solvent extracts most of the caffeine and other chemical compounds with a similar solubility to caffeine from the coffee beans. The producers then remove the beans from the solvent after about 10 hours and dry them.</p>

<p>In the indirect method, producers soak the beans in hot water for a few hours and then take them out. They then treat the water with solvent to remove caffeine from the water. Methylene chloride, the most common solvent, does not dissolve in the water, so it forms a layer on top of the water. The caffeine dissolves better in methylene chloride than in water, so most of the caffeine stays up in the methylene chloride layer, which producers can separate from the water. </p>

<figure>
            <a href="https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=1000&amp;fit=clip"><p><img alt="A diagram showing some of the ways to decaffeinate coffee." data-src="https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;fit=clip" data-srcset="https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=600&amp;h=424&amp;fit=crop&amp;dpr=1 600w, https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=600&amp;h=424&amp;fit=crop&amp;dpr=2 1200w, https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=600&amp;h=424&amp;fit=crop&amp;dpr=3 1800w, https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;h=533&amp;fit=crop&amp;dpr=1 754w, https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=754&amp;h=533&amp;fit=crop&amp;dpr=2 1508w, https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=754&amp;h=533&amp;fit=crop&amp;dpr=3 2262w" sizes="(min-width: 1466px) 754px, (max-width: 599px) 100vw, (min-width: 600px) 600px, 237px" src="https://images.theconversation.com/files/605838/original/file-20240709-17-s27jbd.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;fit=clip"></p></a>
            <figcaption>
              <span>A few chemical processes can remove the caffeine from coffee beans.</span>
              <span><a href="https://www.compoundchem.com/2018/09/26/coffee-decaffeination/">Andy Brunning/Compound Interest</a>, <a href="http://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC</a></span>
            </figcaption>
          </figure>

<p>As in the Swiss water method, the producers can reuse the “caffeine-free” water, which may return some of the flavor compounds removed in the first step. </p>

<p>These methods remove <a href="https://www.scientificamerican.com/article/how-is-caffeine-removed-t/">about 96% to 97% of the caffeine</a>.</p>

<h2>Is decaf coffee safe to drink?</h2>

<p>One of the common solvents, ethyl acetate, comes naturally in many foods and beverages. It’s considered a <a href="https://www.consumerreports.org/coffee/is-decaffeinated-coffee-bad-for-you/">safe chemical for decaffeination</a> by the Food and Drug Administration. </p>

<p>The FDA and the Occupational Safety and Health Administration have deemed methylene chloride unsafe to consume at concentrations above 10 milligrams per kilogram of your body weight. However, the amount of residual methylene chloride found in roasted coffee beans is <a href="https://doi.org/10.1080/10408699991279231">very small – about 2 to 3 milligrams per kilogram</a>. It’s <a href="https://www.consumerreports.org/coffee/is-decaffeinated-coffee-bad-for-you/">well under the FDA’s limits</a>.</p>

<p>OSHA and its European counterparts have <a href="https://www.osha.gov/laws-regs/regulations/standardnumber/1910/1910.1052">strict workplace rules</a> to minimize methylene chloride exposure for workers involved in the decaffeination process. </p>

<p>After producers decaffeinate coffee beans using methylene chloride, they steam the beans and dry them. Then the coffee beans are roasted at high temperatures. During the steaming and roasting process, the beans get hot enough that residual methylene chloride evaporates. The roasting step also produces new flavor chemicals from the breakdown of chemicals into other chemical compounds. These give coffee its distinctive flavor.</p>

<p>Plus, most people brew their coffee at <a href="https://www.consumerreports.org/coffee/is-decaffeinated-coffee-bad-for-you/">between 190 F to 212 F</a>, which is another opportunity for methylene chloride to evaporate.</p>

<h2>Retaining aroma and flavor</h2>

<p>It’s chemically impossible to dissolve out only the caffeine without also dissolving out other chemical compounds in the beans, so decaffeination inevitably removes some other compounds that contribute to the aroma and flavor of your cup of coffee. </p>

<p>But some techniques, like the Swiss water process and the indirect solvent method, have steps that may reintroduce some of these extracted compounds. These approaches probably can’t return all the extra compounds back to the beans, but they may add some of the flavor compounds back.</p>

<p>Thanks to these processes, you can have that delicious cup of coffee without the caffeine – unless your waiter accidentally switches the pots.</p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Switzerland Makes Open Source Software Mandatory for Public Sector (138 pts)]]></title>
            <link>https://news.itsfoss.com/switzerland-open-source/</link>
            <guid>41066984</guid>
            <pubDate>Thu, 25 Jul 2024 10:40:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.itsfoss.com/switzerland-open-source/">https://news.itsfoss.com/switzerland-open-source/</a>, See on <a href="https://news.ycombinator.com/item?id=41066984">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
<div>
<p><a href="https://www.pikapods.com/?utm_campaign=banner-2024-05&amp;utm_source=itsfoss" target="_blank"><img src="https://news.itsfoss.com/assets/images/pikapods-banner-v3.webp"></a></p><p>Many governments around Europe have been trying to break free from the shackles of closed-source software by <a href="https://news.itsfoss.com/german-state-ditches-microsoft/">moving away</a> from the various offerings by Big Tech, and other competing firms. </p><p>However, in a more wide-ranging move, <a href="https://en.wikipedia.org/wiki/Switzerland?ref=news.itsfoss.com">Switzerland</a>'s government has implemented something truly unique that's rarely seen in today's <a href="https://en.wikipedia.org/wiki/Big_Tech?ref=news.itsfoss.com" rel="noreferrer">Big Tech</a>-dominated world.</p><h2 id="governments-around-the-world-need-to-catch-up">Governments Around The World Need To Catch Up</h2><figure><img src="https://news.itsfoss.com/content/images/2024/07/EMBAG.jpg" alt="a screenshot of a translated excerpt from the official draft for embag" loading="lazy" width="1130" height="824" srcset="https://news.itsfoss.com/content/images/size/w600/2024/07/EMBAG.jpg 600w, https://news.itsfoss.com/content/images/size/w1000/2024/07/EMBAG.jpg 1000w, https://news.itsfoss.com/content/images/2024/07/EMBAG.jpg 1130w" sizes="(min-width: 720px) 720px"><figcaption><span>A translated excerpt from the official draft for EMBAG</span></figcaption></figure><p>Short for <a href="https://www.fedlex.admin.ch/eli/fga/2023/787/de?ref=news.itsfoss.com" rel="noreferrer">EMBAG</a>, the Federal Law on the Use of Electronic Means for the Fulfillment of Government Tasks was a landmark law passed back in 2023, which has recently been put into effect.</p><p>Under this, <strong>all public sector government agencies are required to use open-source software</strong>, with an additional obligation of open sourcing any source code developed by or for those agencies.</p><p>However, in cases where there might be conflicts with third-party rights, or security issues, the code may not be disclosed.</p><p>Moreover, under the same provisions of Article 9, <strong>there's also a mechanism for allowing such public agencies to offer additional services</strong> pertaining to maintenance, integration, infrastructure security, etc. for public benefit with appropriate payouts being made to cover such costs.</p><p><a href="https://www.linkedin.com/in/matthiasstuermer/?ref=news.itsfoss.com" rel="noreferrer">Dr. Matthias Stürmer</a>, Head of the Institute for Public Sector Transformation at Bern University, is credited to being one of the loudest voices behind the need for such openness in the Swiss government.</p><p>During a conversation with <a href="https://joinup.ec.europa.eu/collection/open-source-observatory-osor/news/new-open-source-law-switzerland?ref=news.itsfoss.com">Open Source Observatory</a>, he added that:</p><blockquote>Switzerland's new 'public money public code' law is a great opportunity for government, the IT industry and society. </blockquote><blockquote>All stakeholders benefit from this new regulation since the public sector can reduce vendor lock-in, companies can grow their digital business solutions, and taxpayers spend less on IT solutions and receive better services due to increased competition and innovation.</blockquote><p>If you want to dive deeper into how EMBAG came to be, you can go through Dr. Stürmer's <a href="https://www.ti8m.com/de/blog/open-source-gesetz-schweiz?ref=news.itsfoss.com">detailed blog</a>, which is written in German. You can use your browser's translator to read it, or paste the contents into an online translation tool.</p><p><em>💬 Would you like your government to do the same? Let me know below!</em></p><p>Via: <a href="https://www.zdnet.com/article/switzerland-now-requires-all-government-software-to-be-open-source/?ref=news.itsfoss.com" rel="noreferrer">ZDNET</a></p><p><strong>Suggested Read </strong>📖</p><figure><a href="https://news.itsfoss.com/german-state-ditches-microsoft/"><div><p>Wow! German State Ditches Microsoft for Open-Source Software</p><p>The end of dominance for Microsoft in this German state, replacing Windows with Linux, and Office with Libreoffice.</p><p><img src="https://news.itsfoss.com/content/images/size/w256h256/2022/08/android-chrome-192x192.png" alt=""><span>It's FOSS News</span><span>Sourav Rudra</span></p></div><p><img src="https://news.itsfoss.com/content/images/2024/04/german-state-de-microsoft-campaign.png" alt=""></p></a></figure>

<hr>
<h2 id="more-from-its-foss">More from It's FOSS...</h2>
<ul>
<li>Support us by opting for <a href="https://itsfoss.com/#/portal/signup">It's FOSS Plus</a> membership.</li>
<li>Join our <a href="https://itsfoss.community/">community forum</a>.</li>
<li>📩 Stay updated with the latest on Linux and Open Source. Get our <a href="https://itsfoss.com/newsletter/">weekly Newsletter</a>.</li>
</ul>
</div>



</article></div>]]></description>
        </item>
    </channel>
</rss>