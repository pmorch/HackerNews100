<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 03 Aug 2025 02:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[AWS deleted my 10-year account and all data without warning (144 pts)]]></title>
            <link>https://www.seuros.com/blog/aws-deleted-my-10-year-account-without-warning/</link>
            <guid>44770250</guid>
            <pubDate>Sat, 02 Aug 2025 18:49:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.seuros.com/blog/aws-deleted-my-10-year-account-without-warning/">https://www.seuros.com/blog/aws-deleted-my-10-year-account-without-warning/</a>, See on <a href="https://news.ycombinator.com/item?id=44770250">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>On July 23, 2025, AWS deleted my 10-year-old account and every byte of data I had stored with them. No warning. No grace period. No recovery options. Just complete digital annihilation.</p>
<p>This is the story of a catastrophic internal mistake at AWS MENA, a 20-day support nightmare where I couldn’t get a straight answer to “Does my data still exist?”, and what it reveals about trusting cloud providers with your data.</p>
<h2 id="the-architecture-that-should-have-protected-me">The Architecture That Should Have Protected Me</h2>
<p>Before anyone says “you put all your eggs in one basket,” let me be clear: I didn’t. I put them in one <em>provider</em>, with what should have been bulletproof redundancy:</p>
<ul>
<li><strong>Multi-region replication</strong> across AWS Europe (completely separate from US infrastructure)</li>
<li><strong>Dead man’s switch</strong> implemented for disaster recovery</li>
<li><strong>Proper backup architecture</strong> following AWS’s own best practices</li>
<li><strong>Segregated encryption keys</strong> stored separately from data</li>
</ul>
<p>The only scenario I hadn’t planned for? AWS itself becoming the extinction event.</p>
<p>Ten years. That’s how long I’d been an AWS customer. A decade of using AWS as my testbed—spinning up instances to validate deployments for the Ruby gems I maintain like capistrano-puma and capistrano-sidekiq. Nothing production-critical, but essential for open-source development.</p>
<p>On my birthday, AWS gave me a present I’ll never forget: proof that no amount of redundancy matters when the provider itself goes rogue.</p>
<h2 id="the-20-day-support-nightmare-a-timeline">The 20-Day Support Nightmare: A Timeline</h2>
<p><strong>July 10</strong>: AWS sends verification request. 5-day deadline (including weekend).</p>
<p><strong>July 14</strong>: Form expired. I contact support. Simple question: “What do you need from me?”</p>
<p><strong>July 16-20</strong>: <strong>Four days of silence.</strong> Then: “We’re escalating to the appropriate team.”</p>
<p><strong>July 20</strong>: New form finally arrives.</p>
<p><strong>July 21</strong>: I submit ID and utility bill (clear PDF). Response time: 10 hours.</p>
<p><strong>July 22</strong>: AWS: “Document unreadable.” The same PDF my bank accepts without question.</p>
<p><strong>July 23</strong>: Account terminated. My birthday gift from AWS.</p>
<p><strong>July 24</strong>: I ask the only question that matters: <strong>“Does my data still exist?”</strong></p>
<blockquote>
<p>AWS: “Your case is being reviewed by our service team.”</p>
</blockquote>
<p>I also request temporary read-only access to backup my data. Remember, if I were fraudulent, I would have already copied everything before the verification deadline. They refuse. (Because the data is probably already gone.)</p>
<p><strong>July 28</strong>: After 4 days of template responses, I lose patience:</p>
<blockquote>
<p>Me: “Is my data safe? Yes or no?”
AWS: “I want to personally follow up on your case and inform you that we understand the urgency.”</p>
</blockquote>
<p><strong>July 29</strong>: I compare their evasion to political deflection:</p>
<blockquote>
<p>Me: “You’re answering like I’m Piers Morgan asking ‘Do you condemn October 7th?’ and you reply with historical complexity dating to 1948.”
AWS: “We genuinely value your commitment to following backup best practices.”</p>
</blockquote>
<p><strong>July 29</strong>: They finally admit the truth:</p>
<blockquote>
<p>AWS: “Because the account verification wasn’t completed by this date, the resources on the account were terminated.”</p>
</blockquote>
<p><strong>July 30</strong>: Their final response includes:</p>
<blockquote>
<p>AWS: “We value your feedback. Please share your experience by rating this correspondence.” ⭐⭐⭐⭐⭐</p>
</blockquote>
<p>Twenty days. Zero straight answers. Multiple requests for 5-star reviews while my data lay in digital ashes.</p>
<h2 id="the-policy-they-claim-vs-the-reality-they-deliver">The Policy They Claim vs. The Reality They Deliver</h2>
<p>Here’s what AWS’s own documentation says about account closure:</p>
<blockquote>
<p>“The post-closure period is 90 days—during this time, an account can be reopened and data is retained.”</p>
</blockquote>
<blockquote>
<p>“After 90 days, the account is ‘permanently closed’ and all content—including snapshots and backups—is deleted.”</p>
</blockquote>
<p>But here’s the catch: I never voluntarily closed my account. AWS suspended it for “verification failure”—a policy grey zone conveniently absent from their public documentation. There’s no published exception stating that verification-suspended accounts bypass the 90-day retention period.</p>
<p>The community standard across cloud providers? 30-90 days retention unless there’s actual fraud or abuse. AWS? Zero days. Zero hours. Zero mercy.</p>
<h2 id="the-payer-complication">The Payer Complication</h2>
<p>AWS blamed the termination on a “third-party payer” issue. An AWS consultant who’d been covering my bills disappeared, citing losses from the FTX collapse. The arrangement had worked fine for almost a year—about $200/month for my testing infrastructure.</p>
<p>When AWS demanded this vanished payer validate himself, I pointed out that I already had my own Wise card on file—the same card I’d used to pay before the payer arrangement, kept active specifically in case the payer disconnected while I was traveling or offline. They refused to simply switch billing back to it for 20 days, citing “privacy” concerns while making me fully responsible for the consequences.</p>
<p>But here’s the thing: This wasn’t about payment. If it were, they would have:</p>
<ul>
<li>Switched billing to my on-file credit card</li>
<li>Suspended services, not deleted data</li>
<li>Provided the 90-day grace period their own docs promise</li>
</ul>
<p>Instead, they used the payer issue as cover for what really happened—their botched internal testing.</p>
<h2 id="the-hypocrisy-runs-deeper">The Hypocrisy Runs Deeper</h2>
<p>The payer wasn’t some random scammer—they were a YC-backed company. I could see this when linking the payment. If AWS MENA’s security is so robust, why did they fail to identify any issues for an entire year?</p>
<p>When I tried to resolve this, AWS demanded I explain:</p>
<ul>
<li>What I use my account for</li>
<li>My future plans</li>
<li>Why I need the services</li>
</ul>
<p>Like I was applying for funding or a promotion. This is a 10-year-old account. I shouldn’t need to justify my existence to use services I’ve been paying for since 2015.</p>
<p>But here’s the real kicker: AWS developers regularly email me asking for help with Ruby issues. No compensation. No AWS credits. Not even a “thank you” in their commits. Just “Hey, can you help us debug this Rails deployment issue?”</p>
<p>So let me get this straight:</p>
<ul>
<li>AWS benefits from my open-source code</li>
<li>AWS engineers ask me for free consulting</li>
<li>AWS makes me explain why I deserve to keep my account</li>
<li>AWS deletes everything when a YC-backed payer (that they failed to vet) disappears</li>
</ul>
<p>And they want me to background check every client? Should I run security clearances on the AWS verification emails too? Because apparently, their own vetting process couldn’t catch whatever the payer did wrong for an entire year.</p>
<h2 id="what-aws-really-destroyed">What AWS Really Destroyed</h2>
<p>Here’s what most people don’t understand: AWS wasn’t just my backup—it was my clean room for open source development.</p>
<p>My desktop is chaos. Always has been. Files everywhere, half-finished projects, experimental code. But I discovered that by copying everything to AWS, starting fresh, and pulling back only what I needed, I could create clean, focused gems. This workflow is how I released:</p>
<ul>
<li><strong>BreakerMachines</strong> - Circuit breaker patterns for Ruby</li>
<li><strong>ChronoMachines</strong> - Time-based state machines</li>
<li><strong>RailsLens</strong> - Performance monitoring for Rails</li>
<li>And dozens more</li>
</ul>
<p>These gems save developers hundreds, maybe thousands of hours. They’re used in production systems worldwide. AWS didn’t just delete my data—they destroyed the infrastructure that made these contributions possible.</p>
<p>But it gets worse. Also gone:</p>
<ul>
<li>A complete programming book written in my Chronicles narrative style</li>
<li>Electronics tutorials bridging hardware and software</li>
<li>“Go for Rubyists”—lessons helping Ruby developers transition to Go</li>
<li>Years of unpublished work that could have helped thousands</li>
</ul>
<p>When AWS deleted my account, they didn’t just hurt me. They hurt every developer who uses my gems. Every student who could have learned from those tutorials. Every future contribution that won’t happen because my workflow is destroyed.</p>
<p>The irony? Some of these gems probably run in AWS’s own infrastructure, making their systems more reliable. And they deleted the very environment that created them.</p>
<h2 id="the-theory-how-vs-may-have-killed-my-account">The Theory: How <code>-dry</code> vs <code>--dry</code> May Have Killed My Account</h2>
<p>After my story started circulating, an AWS insider reached out. They were upset, leaving AWS soon, and wanted to share what they knew—specifically because AWS depends on open-source code I’ve written.</p>
<p>According to them, AWS MENA was running some kind of proof of concept on “dormant” and “low-activity” accounts. Multiple accounts were affected, not just mine. Here’s where it gets technical:</p>
<p>The developer running the test typed <code>--dry</code> to execute a dry run—standard practice across modern CLIs:</p>
<ul>
<li><code>ruby --version</code></li>
<li><code>npm --version</code></li>
<li><code>bun --version</code></li>
<li><code>terraform --dry-run</code></li>
</ul>
<p>But the internal tool was written in Java. And Java uses single dashes:</p>
<ul>
<li><code>java -version</code> (not <code>--version</code>)</li>
<li><code>java -dry</code> (not <code>--dry</code>)</li>
</ul>
<p>When you pass <code>--dry</code> to a Java application expecting <code>-dry</code>, it gets ignored. The script executed for real, deleting accounts in production.</p>
<p>The developer did everything right. Java’s 1995-era parameter parsing turned a simulation into an extinction event.</p>
<p>Is this exactly what happened? I can’t prove it. The insider was vague, worried about being identified. But it explains:</p>
<ul>
<li>Why multiple “low-activity” accounts were suddenly flagged</li>
<li>The 4-day delays (scrambling to cover up)</li>
<li>The refusal to answer simple questions</li>
<li>The support agents who admitted they “couldn’t make decisions”</li>
</ul>
<h2 id="aws-mena-why-people-pay-to-avoid-it">AWS MENA: Why People Pay to Avoid It</h2>
<p>This theory gains credibility when you consider the AWS MENA reputation. For years, I’ve watched developers on Reddit and Facebook desperately seeking US or EU billing addresses, willing to pay $100+ premiums to avoid MENA region assignment.</p>
<p>When I asked why, a colleague warned me: “AWS MENA operates differently. They can terminate you randomly.”</p>
<p>I laughed it off. AWS is AWS, right?</p>
<p>The 4-day delay for a simple verification form. The 10-hour response times. The robotic support responses. This wasn’t standard AWS incompetence—this was something else entirely.</p>
<h2 id="the-ultimate-irony-security-became-my-weakness">The Ultimate Irony: Security Became My Weakness</h2>
<p>I’d done everything right. Vault encryption keys stored separately from my main infrastructure. Defense in depth. Zero trust architecture. The works.</p>
<p>My security posture was textbook—protect against compromise by ensuring no single failure could take down everything. What I hadn’t protected against? AWS itself being the single point of failure.</p>
<p>I built a hardened bunker with multiple escape routes, only to have AWS drop a nuke on the entire complex.</p>
<h2 id="what-this-means-for-you">What This Means for You</h2>
<p>You might be thinking, “What are the odds they target me?” But that’s the wrong question. I thought the same thing—with my level of exposure and contributions, surely they could just write my name down and not bother me with stupid verification requests about whether I exist.</p>
<p>But you’re not being targeted—you’re being algorithmically categorized. And if the algorithm decides you’re disposable, you’re gone.</p>
<p>Doesn’t matter if you’re a verified open-source contributor. Doesn’t matter if you’ve been a customer for a decade. If you don’t fit the revenue model, if you don’t engage with support regularly, if your usage patterns look “suspicious” to a poorly trained ML model—you’re just another data point to be optimized away.</p>
<p>Look, I write weird stuff. My documentation style triggers AI safeguards. Take my ActionMCP gem that provides MCP capabilities to Rails—Opus can’t even read the documentation without hanging when its safeguards trigger. Sonnet? No problem. (Try it yourself: github.com/seuros/action_mcp)</p>
<p>If my creative technical writing can confuse one AI but not another, imagine what AWS’s “fraud detection” algorithms see when they look at my account. An anomaly. A pattern that doesn’t fit. Something to be eliminated.</p>
<h2 id="the-only-path-forward-a-broken-promise">The Only Path Forward: A Broken Promise</h2>
<p>After 20 days of appeals, AWS support finally responded with this gem: “Because verification wasn’t completed by the due date, your resources were terminated.”</p>
<p>But here’s the dilemma they’ve created: What if you have petabytes of data? How do you backup a backup? What happens when that backup contains HIPAA-protected information or client data? The whole promise of cloud computing collapses into complexity.</p>
<p>This isn’t a system failure. The architecture and promises are sound. AWS doesn’t lose data—they have backups of backups of backups, stored in vaults that last far longer than the stated 90 days, where no rogue AI script can reach.</p>
<p>What’s happening here is simpler: teams in MENA are trying to cover up a massive fuck-up. Restoring data from those deep vaults would require explanations. Incident reports. Post-mortems. “Why did we have to open the vaults?”</p>
<p>Their entire communication strategy screams: “He’s nobody. He’ll give up soon. We won’t have to report this up the chain.”</p>
<p>But they messed with the wrong developer.</p>
<p>I’m now building a free tool to help people exodus from AWS. Not hosted on AWS, obviously. My clients—representing over $400k/month in AWS billing—have already agreed to migrate to Oracle OCI, Azure, and Google Cloud.</p>
<p>Because if AWS can delete a 10-year customer without blinking, what are they capable of when the stakes are higher?</p>
<h2 id="the-bitter-truth">The Bitter Truth</h2>

































<table><thead><tr><th>What You Give AWS</th><th>What AWS Gives You</th></tr></thead><tbody><tr><td>A decade of loyalty</td><td>Zero-day termination</td></tr><tr><td>Prompt payment history</td><td>20 days of runaround</td></tr><tr><td>Proper documentation</td><td>”Unreadable” rejection</td></tr><tr><td>Open-source contributions</td><td>No consideration whatsoever</td></tr><tr><td>Carefully segregated backups</td><td>Complete data annihilation</td></tr><tr><td>Trust</td><td>Betrayal</td></tr></tbody></table>
<p>AWS has clout. They run the internet’s infrastructure. They sponsor conferences, fund open source projects, and position themselves as the reliable backbone of the digital economy.</p>
<p>But that doesn’t excuse digitally executing someone’s decade-old testbed account over a verification form glitch and a bill under $200. This wasn’t my production infrastructure—thankfully—but it was my launch pad for updating other infrastructure. Now I’m spending days rotating encryption keys across multiple systems because my central testing environment vanished.</p>
<h2 id="the-systemic-failure">The Systemic Failure</h2>
<p>This isn’t just about my account. It’s about what happens when:</p>
<ol>
<li><strong>Regional divisions go rogue</strong>: AWS MENA operating outside global policies</li>
<li><strong>Support becomes theater</strong>: Agents who can only paste templates and ask for 5-star reviews</li>
<li><strong>“Move fast and break things” meets production data</strong>: Internal tools with Java’s 1995 parameter parsing handling customer deletions</li>
<li><strong>No accountability</strong>: 20 days of deflection instead of one honest answer</li>
</ol>
<p>The evidence of dysfunction:</p>
<ul>
<li>Hundreds paying premiums to avoid MENA billing (the market has spoken)</li>
<li>4-day delays for simple forms</li>
<li>Support comparing data recovery questions to geopolitical debates</li>
<li>Automated “please rate us” emails while actively destroying customer data</li>
</ul>
<h2 id="the-real-cost">The Real Cost</h2>
<p>AWS markets itself as the backbone of the internet, the reliable partner for your infrastructure. They sponsor open-source projects, run re:Invent, and position themselves as developer allies.</p>
<p>But when their internal systems fail—when someone types <code>--dry</code> and Java ignores it—they’ll delete a decade of your work without blinking. Then they’ll spend 20 days gaslighting you about it.</p>
<p>Meanwhile, actual malicious accounts hosting phishing sites and crypto scams run for weeks untouched. Because those generate revenue. A low-activity open-source developer testing Ruby gems? Collateral damage.</p>
<h2 id="lessons-learned">Lessons Learned</h2>
<ol>
<li><strong>Never trust a single provider</strong>—no matter how many regions you replicate across</li>
<li><strong>“Best practices” mean nothing</strong> when the provider goes rogue</li>
<li><strong>Document everything</strong>—screenshots, emails, correspondence timestamps</li>
<li><strong>The support theater is real</strong>—they literally cannot help you</li>
<li><strong>Have an exit strategy</strong> executable in hours, not days</li>
</ol>
<p>AWS won’t admit their mistake. They won’t acknowledge the rogue proof of concept. They won’t explain why MENA operates differently. They won’t even answer whether your data exists.</p>
<p>But they will ask you to rate their support 5 stars.</p>
<p>The cloud isn’t your friend. It’s a business. And when their business needs conflict with your data’s existence, guess which one wins?</p>
<p>Plan accordingly.</p>
<h2 id="a-personal-note">A Personal Note</h2>
<p>At one point during this ordeal, I hit rock bottom. I was ready to delete everything—yank all my gems from RubyGems, delete the organizations, the websites, everything I’d created. Leave a single message: “AWS killed this.”</p>
<p>It would have made headlines. Caused chaos for thousands of projects. Trended on HN, Reddit, YouTube. But it would have hurt the wrong people—developers who depend on my work, not AWS.</p>
<p>I was alone. Nobody understood the weight of losing a decade of work. But I had ChatGPT, Claude, and Grok to talk to. Every conversation revealed I wasn’t alone in being targeted by AWS—especially MENA. Hundreds of Reddit threads, websites, forums, all telling similar stories.</p>
<p>I tried reaching out to some victims. Some didn’t want to talk about it—the trauma was too fresh. Others said they’d left programming entirely. AWS didn’t just delete their data; they deleted their careers.</p>
<p>As someone with LLI (Low Latent Inhibition), I can’t filter out this trauma like others might. Can’t just switch careers and forget. The raw, unfiltered pain stays with me. I wish I could move on, but I can’t.</p>
<p>Who knows how many people in my situation have been erased from our timeline because of the sadistic behavior of support teams like AWS’s? The whole system is built to hurt—to make you feel small, powerless, unheard. To make you give up. To make you disappear.</p>
<p>To everyone who worked on these AIs, who contributed to their training data—thank you. Without you, this post might have been a very different kind of message.</p>
<p>AWS may have deleted my data, but they didn’t delete my determination to help others avoid this fate.</p>
<p>Build that exodus tool I will.</p>
<p>—Seuros</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Telo MT1 (421 pts)]]></title>
            <link>https://www.telotrucks.com/</link>
            <guid>44769039</guid>
            <pubDate>Sat, 02 Aug 2025 16:40:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.telotrucks.com/">https://www.telotrucks.com/</a>, See on <a href="https://news.ycombinator.com/item?id=44769039">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div id="RetailHero"><h2>Hello TELO</h2><div><p>Meet the MT1, the all-electric mini truck.</p></div><p><img alt="TELO electric mini truck side view" width="1920" height="1080" decoding="async" data-nimg="1" srcset="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Fhero%2Fhero.png&amp;w=1920&amp;q=75 1x, https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Fhero%2Fhero.png&amp;w=3840&amp;q=75 2x" src="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Fhero%2Fhero.png&amp;w=3840&amp;q=75"></p></div><div id="Introduction"><h2>TELO Trucks makes the world's most efficient EV pickup for urban living and weekend adventuring</h2><div><p>We redesigned the EV truck footprint and function from the ground up by marrying the state of the art in electrification and advanced safety technology.</p><p>With Toyota Tacoma capability, Tesla-like range and efficiency, in the footprint of a MINI Cooper, the TELO MT1 is the most compact, practical and technically advanced truck.</p><p>Meeting the need for a highly functional and powerful EV pickup equally suited to navigating downtown and hauling people and gear out of town.</p><a href="https://www.telotrucks.com/pre-order"><p>RESERVE YOURS</p></a></div></div><div id="Size"><p><h2>Tacoma capacity in the footprint of a MINI Cooper</h2></p></div><div id="Performance"><div><h2>Designed to do more with less</h2><div><p>Our standard five-seat crew cab features a 5-foot bed capacity with a configurable mid-partition that either increases the bed size to accommodate 4-by-8-foot plywood sheets with the tailgate up or to allow for additional seating for up to eight passengers.</p></div></div><div><p><img alt="Tan colored TELO truck against white backdrop" loading="lazy" width="2560" height="1524" decoding="async" data-nimg="1" srcset="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Fperformance%2Fperformance.jpg&amp;w=3840&amp;q=75 1x" src="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Fperformance%2Fperformance.jpg&amp;w=3840&amp;q=75"></p></div></div><div id="Features"><div><h2>Nothing in excess</h2><p>The TELO MT1 interior blends clean, understated patterns and natural fabrics into a refreshingly minimal space designed for practical comfort and effortless utility.</p></div><div><div><p><img alt="The front of a TELO truck against a white backdrop, highlighting sensor technology." loading="lazy" width="1279" height="853" decoding="async" data-nimg="1" srcset="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Ffeatures%2Ffeatures2.png&amp;w=1920&amp;q=75 1x, https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Ffeatures%2Ffeatures2.png&amp;w=3840&amp;q=75 2x" src="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Ffeatures%2Ffeatures2.png&amp;w=3840&amp;q=75"></p></div><div><h2>Seeing around corners</h2><p>Utilizing the latest in advanced safety technology—sensors to predict and classify collisions before they happen, airbags, and structural technology—to make our vehicles safer for everyone on the road.</p></div></div><div><div><p><img alt="Green TELO truck driving through a snow covered road with pine trees in the background." loading="lazy" width="1279" height="853" decoding="async" data-nimg="1" srcset="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Ffeatures%2Ffeatures1.jpg&amp;w=1920&amp;q=75 1x, https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Ffeatures%2Ffeatures1.jpg&amp;w=3840&amp;q=75 2x" src="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Ffeatures%2Ffeatures1.jpg&amp;w=3840&amp;q=75"></p></div><div><h2>Range to roam</h2><p>The TELO MT1 offers a 350-mile range, a 106 kWh battery, and a 20-minute (20-80%) fast-charging battery pack that fits within the footprint of a subcompact vehicle.</p></div></div></div><div id="Specifications"><div><p>TELO MT1</p><p><span>Single Motor</span><span>Dual Motor</span></p></div><h3>Drive</h3><div><p><small>Acceleration</small><small>5.0s 0-60 mph</small></p><p><small>Power</small><small>300 hp</small></p><p><small>Drivetrain</small><small>2WD</small></p><p><small>Payload</small><small>2,000 lbs</small></p></div><h3>Size</h3><div><p><small>Dimensions</small><small>152" x 73" x 66"</small></p><p><small>Bed Size</small><small>60-96" x 56" x 18"</small></p><p><small>Seating</small><small>2, 5, or 8 seats</small></p></div><div><p><img alt="Side view of TELO truck against white backdrop." loading="lazy" width="1454" height="650" decoding="async" data-nimg="1" srcset="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Fspecs%2FsideTransparent.png&amp;w=1920&amp;q=75 1x, https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Fspecs%2FsideTransparent.png&amp;w=3840&amp;q=75 2x" src="https://www.telotrucks.com/_next/image?url=https%3A%2F%2Fdpb6ldqkojccb.cloudfront.net%2Fpublic%2Fspecs%2FsideTransparent.png&amp;w=3840&amp;q=75"></p></div><h3>Battery</h3><div><p><small>Standard Range</small><small>260 mi</small></p><p><small>Long Range</small><small>350 mi</small></p><p><small>Charging</small><small>30 min charge to 80%</small></p></div></div><section><div><p><a href="https://www.telotrucks.com/"><img src="https://www.telotrucks.com/logos/teloWordmarkWhite.svg" alt="Telo Wordmark White" width="120" height="20"></a></p></div><div><p>Stay up to date on all things TELO</p></div><p>Copyright © 2024 TELO Trucks. All rights reserved.</p></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Browser extension and local backend that automatically archives YouTube videos (133 pts)]]></title>
            <link>https://github.com/andrewarrow/starchive</link>
            <guid>44768714</guid>
            <pubDate>Sat, 02 Aug 2025 16:03:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/andrewarrow/starchive">https://github.com/andrewarrow/starchive</a>, See on <a href="https://news.ycombinator.com/item?id=44768714">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-turbo-body="">
      



    <div>
      <p><a href="#start-of-content" data-skip-target-assigned="false">Skip to content</a>

      <span data-view-component="true">
    <span data-view-component="true"></span>
</span></p>

<react-partial partial-name="keyboard-shortcuts-dialog" data-ssr="false" data-attempted-ssr="false" data-react-profiling="false">
  
  
  
</react-partial>




      

          

              



<header role="banner" data-is-top="true" data-color-mode="light" data-light-theme="light" data-dark-theme="dark">
  <h2>Navigation Menu</h2>

  

  <div>
          <nav aria-label="Global">
            <ul>


                <li>
      

      <div>
          <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      
      <div>
          <p>
            GitHub Copilot
          </p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_spark&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_spark_link_product_navbar&quot;}" href="https://github.com/features/spark">
      
      <div>
          <p>
            GitHub Spark
              <span>
                New
              </span>
          </p><p>
        Build and deploy intelligent apps
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_models&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_models_link_product_navbar&quot;}" href="https://github.com/features/models">
      
      <div>
          <p>
            GitHub Models
              <span>
                New
              </span>
          </p><p>
        Manage and compare prompts
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_advanced_security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_advanced_security_link_product_navbar&quot;}" href="https://github.com/security/advanced-security">
      
      <div>
          <p>
            GitHub Advanced Security
          </p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      
      <div>
          <p>
            Actions
          </p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                    
                </ul>
              </div>
          <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      
      <div>
          <p>
            Codespaces
          </p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      
      <div>
          <p>
            Issues
          </p><p>
        Plan and track work
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      
      <div>
          <p>
            Code Review
          </p><p>
        Manage code changes
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      
      <div>
          <p>
            Discussions
          </p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      
      <div>
          <p>
            Code Search
          </p><p>
        Find more, search less
      </p></div>

    
</a></li>

                </ul>
              </div>
          

      </div>
</li>


                <li>
      

      
</li>


                <li>
      

      <div>
                    <p><span id="resources-explore-heading">Explore</span></p><ul aria-labelledby="resources-explore-heading">
                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;events_amp_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;events_amp_webinars_link_resources_navbar&quot;}" href="https://resources.github.com/">
      Events &amp; Webinars

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ebooks_amp_whitepapers&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ebooks_amp_whitepapers_link_resources_navbar&quot;}" href="https://github.com/resources/whitepapers">
      Ebooks &amp; Whitepapers

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;executive_insights&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;executive_insights_link_resources_navbar&quot;}" href="https://github.com/solutions/executive-insights">
      Executive Insights

    
</a></li>

                </ul>
              </div>
</li>


                <li>
      

      <div>
              <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="https://github.com/sponsors">
      
      <div>
          <p>
            GitHub Sponsors
          </p><p>
        Fund open source developers
      </p></div>

    
</a></li>

                </ul>
              </div>
              <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
          <p>
            The ReadME Project
          </p><p>
        GitHub community articles
      </p></div>

    
</a></li>

                </ul>
              </div>
              
          </div>
</li>


                <li>
      

      <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="https://github.com/enterprise">
      
      <div>
          <p>
            Enterprise platform
          </p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>


                <li>
    <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:andrewarrow/starchive" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="r3Njjc2VoyfBMS_uM84gIn84LOiQZ9TG9nH3PBMNTyyCiR-ws2-AwBO1t1lxRqB4_zfrwsKjzFr_t3xZX-4IMA" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="andrewarrow/starchive" data-current-org="" data-current-owner="andrewarrow" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>


            

              <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=andrewarrow%2Fstarchive" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/andrewarrow/starchive&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="923c06f2b7ce1c8e0c23c815fd7ae815629beb47dacde9776070db32835566ae" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
                Sign up
              </a></p><p>
    <react-partial-anchor>
      <tool-tip id="tooltip-83183d26-916f-409b-a61d-9ff07dc08767" for="icon-button-94a14246-0836-446d-91bc-3cfeeb301084" popover="manual" data-direction="s" data-type="label" data-view-component="true">Appearance settings</tool-tip>

      <template data-target="react-partial-anchor.template">
        <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/appearance-settings.76259b61ecc822265749.module.css">

<react-partial partial-name="appearance-settings" data-ssr="false" data-attempted-ssr="false" data-react-profiling="false">
  
  <script type="application/json" data-target="react-partial.embeddedData">{"props":{}}</script>
  <div data-target="react-partial.reactRoot"></div>
</react-partial>

      </template>
    </react-partial-anchor>
  </p>

          </div>
      </div>
</header>

      
    </div>

  








    


    






  <div itemscope="" itemtype="http://schema.org/SoftwareSourceCode" data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="" data-project-hovercards-enabled="">
    <main id="js-repo-pjax-container">
      
  





    






  
  

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance">
    <div data-view-component="true" id="repo-content-pjax-container">      


<react-partial partial-name="repos-overview" data-ssr="true" data-attempted-ssr="true" data-react-profiling="false">
  
  
  <div data-hpc="true" data-target="react-partial.reactRoot"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Starchive</h2><a id="user-content-starchive" aria-label="Permalink: Starchive" href="#starchive"></a></p>
<p dir="auto">A browser extension and local backend system that automatically archives YouTube videos when visited. The system consists of a Firefox extension that detects YouTube video pages and a Go backend that downloads the videos using yt-dlp.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Components</h2><a id="user-content-components" aria-label="Permalink: Components" href="#components"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Backend (Go)</h3><a id="user-content-backend-go" aria-label="Permalink: Backend (Go)" href="#backend-go"></a></p>
<ul dir="auto">
<li><strong>HTTP Server</strong> (<code>main.go</code>): Runs on port 3009 with two endpoints:
<ul dir="auto">
<li><code>/</code>: Basic health check endpoint</li>
<li><code>/youtube</code>: POST endpoint that accepts video IDs and triggers downloads</li>
</ul>
</li>
<li><strong>Video Downloader</strong> (<code>youtube.go</code>): Uses yt-dlp and ffmpeg to download YouTube videos and convert them to MOV format with h264_videotoolbox encoding</li>
<li><strong>Subtitle Support</strong>: Downloads English subtitles in VTT format (currently disabled in retry loop)</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Browser Extension (Firefox)</h3><a id="user-content-browser-extension-firefox" aria-label="Permalink: Browser Extension (Firefox)" href="#browser-extension-firefox"></a></p>
<ul dir="auto">
<li><strong>Manifest</strong> (<code>manifest.json</code>): Defines extension permissions and structure</li>
<li><strong>Content Script</strong> (<code>content.js</code>): Automatically detects YouTube video pages and extracts video IDs from URLs</li>
<li><strong>Background Script</strong> (<code>background.js</code>): Handles communication between content script and backend API</li>
<li><strong>Popup Interface</strong> (<code>popup.html/js</code>): Provides a simple UI for manual data fetching</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How It Works</h2><a id="user-content-how-it-works" aria-label="Permalink: How It Works" href="#how-it-works"></a></p>
<ol dir="auto">
<li>When you visit a YouTube video page, the content script automatically detects the video ID from the URL</li>
<li>The video ID is sent to the background script, which makes a POST request to <code>http://localhost:3009/youtube</code></li>
<li>The Go backend receives the video ID and uses yt-dlp to download the video</li>
<li>Videos are saved to the <code>./data/</code> directory and converted to MOV format using ffmpeg with hardware acceleration</li>
<li>The system also supports subtitle downloading (though currently limited to 1 attempt)</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Setup</h2><a id="user-content-setup" aria-label="Permalink: Setup" href="#setup"></a></p>
<ol dir="auto">
<li>Start the Go backend: <code>go run .</code></li>
<li>Load the Firefox extension from the <code>firefox/</code> directory</li>
<li>Visit any YouTube video page to automatically trigger archiving</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Dependencies</h2><a id="user-content-dependencies" aria-label="Permalink: Dependencies" href="#dependencies"></a></p>
<ul dir="auto">
<li><strong>yt-dlp</strong>: For downloading YouTube videos</li>
<li><strong>ffmpeg</strong>: For video format conversion and processing</li>
<li><strong>Go</strong>: Backend server runtime</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Other Starchive</h2><a id="user-content-other-starchive" aria-label="Permalink: Other Starchive" href="#other-starchive"></a></p>
<p dir="auto">Not associated with <a href="https://www.starchive.io/" rel="nofollow">https://www.starchive.io/</a></p>
</article></div>
</react-partial>

      </div>

</turbo-frame>


    </main>
  </div>

          



    <ghcc-consent id="ghcc" data-locale="en" data-initial-cookie-consent-allowed="" data-cookie-consent-required="true"></ghcc-consent>



  

    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open="">
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog="">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>
<template id="snippet-clipboard-copy-button-unpositioned">
  <div class="zeroclipboard-container">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why Exercise Is a Miracle Drug (236 pts)]]></title>
            <link>https://www.derekthompson.org/p/the-sunday-morning-post-why-exercise</link>
            <guid>44768704</guid>
            <pubDate>Sat, 02 Aug 2025 16:02:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.derekthompson.org/p/the-sunday-morning-post-why-exercise">https://www.derekthompson.org/p/the-sunday-morning-post-why-exercise</a>, See on <a href="https://news.ycombinator.com/item?id=44768704">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>Welcome back to The Sunday Morning Post, this newsletter’s weekly rundown of the most interesting and important stuff I’m seeing in science, technology, economics, and beyond. Comments are open. Leave tips, papers, studies, tweets, posts, questions, and graphs in the comments, if you think they’ll serve for future editions.</p><p><span>Euan Ashley has </span><a href="https://open.spotify.com/episode/4llcv2QIXnxKeMzaqRZ1dS" rel="">claimed</a><span> that exercise is the “single most potent medical invention” ever—more broadly effective than any medicine discovered in the natural world or devised in a laboratory. In 2025, this is the sort of rah-rah sentiment about working out that one might associate with a Make America Healthy Again ambassador rather than, say, the chair of medicine at Stanford University. So, what makes Ashley’s claim significant is that he </span><em>is</em><span> the chair of medicine at Stanford University.</span></p><p><span>Last year, Ashley and a large team of scientists conducted an elaborate experiment on the effects of exercise on the mammalian body. In one test, Ashley put rats on tiny treadmills, worked them out for weeks, and cut into them to investigate how their organs and vessels responded to the workout compared to a control group of more sedentary rodents.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-168158155" href="https://www.derekthompson.org/p/the-sunday-morning-post-why-exercise#footnote-1-168158155" target="_self" rel="">1</a></span><span> The results were spectacular. Exercise transformed just about every tissue and molecular system that Ashley and his co-authors studied—not just the muscles and heart, but also the liver, adrenal glands, fat, and immune system. </span></p><p>When I asked Ashley if it was possible to design a drug that mimicked the observed effects of exercise, he was emphatic that, no, this was not possible. The benefits of exercise seem too broad for any one therapy to mimic. To a best approximation, aerobic fitness and weight-training seem to increase our metabolism, improve mitochondrial function, fortify our immune system, reduce inflammation, improve tissue-specific adaptations, and protect against disease.</p><p><span>The latest entry in the Exercise Is Magic file comes from </span><a href="https://www.nejm.org/do/10.1056/NEJMdo008039/full/" rel="">the New England Journal of Medicine</a><span>. In a recent study, 900 cancer patients who had undergone surgery on their advanced colon cancer were randomly assigned to two groups. One group got a “structured exercise program.” They went to behavioral support sessions and attended supervised exercise classes every few weeks for several years. The other group received only basic information about diet and health.</span></p><p>Compared to the control group, the exercise group saw “significantly” more years without cancer, a 7 percentage point increase in the overall survival rate after 8 years, and a dramatic reduction in new primary cancers. Exercise, it seems, doesn’t just prevent disease; it can also save your life after you get sick.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!t4il!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!t4il!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg 424w, https://substackcdn.com/image/fetch/$s_!t4il!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg 848w, https://substackcdn.com/image/fetch/$s_!t4il!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!t4il!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!t4il!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg" width="1282" height="1254" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1254,&quot;width&quot;:1282,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:128015,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.derekthompson.org/i/168158155?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!t4il!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg 424w, https://substackcdn.com/image/fetch/$s_!t4il!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg 848w, https://substackcdn.com/image/fetch/$s_!t4il!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!t4il!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa837333-1baa-463a-9b82-2a0422978694_1282x1254.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>The author Daniel Lieberman </span><a href="https://www.amazon.com/Exercised-Something-Evolved-Healthy-Rewarding/dp/052543478X/ref=asc_df_052543478X?mcid=1734c528e04d3fb5b8f542ded7df910a&amp;hvocijid=17701023827466789008-052543478X-&amp;hvexpln=73&amp;tag=hyprod-20&amp;linkCode=df0&amp;hvadid=721245378154&amp;hvpos=&amp;hvnetw=g&amp;hvrand=17701023827466789008&amp;hvpone=&amp;hvptwo=&amp;hvqmt=&amp;hvdev=c&amp;hvdvcmdl=&amp;hvlocint=&amp;hvlocphy=9061285&amp;hvtargid=pla-2281435177818&amp;psc=1" rel="">has put it well</a><span>: Exercise is healthy and rewarding even though it’s something we never evolved to do. To adapt to the physical ease of the modern world, people invented a variety of weight-resistant devices and bodily movements that allow today’s population to simulate the arduous tasks that were once necessary to make it through a life, and this strange pantomime of physical stress seems to do more for us at a molecular level than any therapy or intervention in the history of medicine.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-168158155" href="https://www.derekthompson.org/p/the-sunday-morning-post-why-exercise#footnote-2-168158155" target="_self" rel="">2</a></span><span> </span></p><p>Soon after overseeing cuts to more than 80 percent of programs at the United States Agency for International Development, Secretary of State Marco Rubio said in remarks in July that USAID “has little to show since the end of the Cold War.” In the field of global health, this analysis may be off by about 100 million.</p><p><span>In June, The Lancet </span><a href="https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(25)01186-9/fulltext" rel="">published</a><span> an evaluation of 20 years of USAID funding by a team of global researchers from Brazil, Spain, Mozambique, and the United States. They calculated that US global health and development spending has spared about 90 million deaths in low-income countries, including:</span></p><ul><li><p>25 million lives saved from HIV/AIDS</p></li><li><p>11 million from diarrheal disease</p></li><li><p>9 million from lower respiratory infections</p></li><li><p>9 million from "neglected" tropical diseases, such as dengue and river blindness</p></li><li><p>8 million from malaria</p></li><li><p>5 million from tuberculosis</p></li><li><p>2 million from nutritional deficiencies</p></li></ul><p>All this was achieved with a program that accounts for about 0.8 percent of the federal budget and about 1/400th of America’s total national spending. This is a staggering return on moral investment.</p><p>When I think about the case for global health spending, I think about the first days of my life. Nobody chooses how they come into the world. I achieved nothing to earn my birth in a hospital in Washington, D.C., as opposed to a clinic in Maputo or Kinshasa, or to deserve the automatic guarantee of American citizenship upon my first breath of air. That I was born in the capital of the world’s richest country is one of the greatest strokes of luck in my life—a pure accident of timing and gametes. There is no way to pay back this good fortune, and wallowing in guilt over it would do nothing, either. The quiet miracle of charity and global aid is that the uneven distribution of global wealth creates an asymmetry by which relatively trivial amounts of money from the rich can prevent immense suffering and death among the poor. Interventions as simple as bed nets, antiretroviral therapies for HIV/AIDS, and the distribution of commonplace vaccines and therapies in impoverished rural areas can save an astonishing number of lives, while costing a rich country an amount of money that makes practically no difference to any their citizen’s day-to-day. </p><p>Americans are blessed to be in possession of a kind of sorcerer’s stone—a bit of policy alchemy that can transform one-four hundredth of our spending into 100 million saved lives, in less than half a century. I think we should use it.</p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The /o in Ruby regex stands for "oh the humanity " (133 pts)]]></title>
            <link>https://jpcamara.com/2025/08/02/the-o-in-ruby-regex.html</link>
            <guid>44767959</guid>
            <pubDate>Sat, 02 Aug 2025 14:37:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jpcamara.com/2025/08/02/the-o-in-ruby-regex.html">https://jpcamara.com/2025/08/02/the-o-in-ruby-regex.html</a>, See on <a href="https://news.ycombinator.com/item?id=44767959">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><p><img src="https://cdn.uploads.micro.blog/98548/2025/2ca9b9c306.png" alt=""></p>
<blockquote>
<p>Your code using the <code>/o</code> modifier</p>
<p>Source: <a href="https://upload.wikimedia.org/wikipedia/commons/1/1c/Hindenburg_disaster.jpg">wikipedia</a></p>
</blockquote>
<p>Hi there! Do you like Regex? Do you like performance? Do you like creating confounding bugs for yourself rooted in the mechanics of the Ruby VM itself?</p>
<p>If you said yes to all of the above, have I got a feature for you!</p>
<p>But first, let’s start with a story.</p>
<h3 id="the-cliffs-of-insanity">The cliffs of insanity</h3>
<p>I was recently reviewing some code, and part of the functionality was about matching. A class took an array of strings, and you could call a method to see if an input matched part of any of the strings. Stripped down, it was effectively the following code:</p>
<pre><code>class Matcher
  def initialize(matchables)
    @matchables = matchables
  end

  def matches_any?(input)
    @matchables.any? { |m| m.match?(/#{input}/io) }
  end
end
</code></pre>
<blockquote>
<p>I <em>know</em> there are some of you reading this code and thinking “does this really need a regex?”, “couldn’t it just use <code>include?</code> and some downcasing?”, “does this even need to exist?”, etc, etc. I see you, I hear you, I’d probably think the same, and I <em>promise</em> you the specifics of this method aren’t that important.</p>
</blockquote>
<p>Functionally, the code looked <em>ok</em> to me. I knew what <code>/i</code> was (a regex in <a href="https://ruby-doc.org/3.4.1/Regexp.html#class-Regexp-label-Case-Insensitive+Mode">case-insensitive mode</a>), but I didn’t recognize <code>/o</code>. It didn’t seem critically important to lookup yet. Tests were not exhaustive but were green, and so I went to run the code in a console:</p>
<div><pre tabindex="0"><code data-lang="ruby"><span>Matcher</span><span>.</span>new(<span>[</span><span>"Ruby!"</span><span>]</span>)<span>.</span>matches_any?(<span>"ruby"</span>)
<span>=&gt;</span> <span>true</span>
<span>Matcher</span><span>.</span>new(<span>[</span><span>"Ruby!"</span><span>]</span>)<span>.</span>matches_any?(<span>"something else"</span>)
<span>=&gt;</span> <span>true</span>
<span>Matcher</span><span>.</span>new(<span>[</span><span>"Ruby!"</span><span>]</span>)<span>.</span>matches_any?(<span>"javascript"</span>)
<span>=&gt;</span> <span>true</span>
</code></pre></div><p>Well, that seemed broken. Assuming it was a bug, I looked at the code to see what was wrong. But nothing stuck out. The code <em>seemed</em> ok, and simple:</p>
<pre><code>@matchables.any? |m| m.match?(/#{input/io) }
</code></pre>
<p>So I deconstructed the code and ran it directly, outside the class:</p>
<div><pre tabindex="0"><code data-lang="ruby"><span>[</span><span>"Ruby!"</span><span>].</span>any? { <span>|</span>m<span>|</span> m<span>.</span>match?(<span>/ruby/io</span>) }
<span>=&gt;</span> <span>true</span>
<span>[</span><span>"Ruby!"</span><span>].</span>any? { <span>|</span>m<span>|</span> m<span>.</span>match?(<span>/something else/io</span>) }
<span>=&gt;</span> <span>false</span>
</code></pre></div><p>Even weirder. Run directly, it ran as expected. What if I started a new console, and ran the original class in a different order?</p>
<div><pre tabindex="0"><code data-lang="ruby"><span>Matcher</span><span>.</span>new(<span>[</span><span>"Ruby!"</span><span>]</span>)<span>.</span>matches_any?(<span>"something else"</span>)
<span>=&gt;</span> <span>false</span>
<span>Matcher</span><span>.</span>new(<span>[</span><span>"Ruby!"</span><span>]</span>)<span>.</span>matches_any?(<span>"ruby"</span>)
<span>=&gt;</span> <span>false</span>
<span>Matcher</span><span>.</span>new(<span>[</span><span>"something else"</span><span>]</span>)<span>.</span>matches_any?(<span>"Ruby!"</span>)
<span>=&gt;</span> <span>true</span>
</code></pre></div><p>Well, that was interesting. It seems like whatever value I sent to <code>matches_any?</code> was cached for every run after that point, even for <em>brand new objects</em>.</p>
<p>I looked through the class again. There was no weird memoization. No class-level variables. No thread locals. I was instantiating the class each time I ran <code>matches_any?</code>. I was out of ideas for the predictable things that cause unpredictable results. What else was there?</p>
<h3 id="o-the-humanity">/o the humanity!</h3>
<p>With nothing else to investigate, I finally looked up the docs for what the <code>/o</code> regex modifier does. <code>/o</code> is referred to as “Interpolation mode”, which sounded pretty harmless. The Ruby docs have a succinct section on the expected behavior: <a href="https://ruby-doc.org/3.4.1/Regexp.html#class-Regexp-label-Interpolation+Mode">https://ruby-doc.org/3.4.1/Regexp.html#class-Regexp-label-Interpolation+Mode</a></p>
<blockquote>
<p>Modifier o means that the first time a literal regexp with interpolations is encountered, the generated Regexp object is saved and used for all future evaluations of that literal regexp</p>
</blockquote>
<p>Just reading that, I still wasn’t sure I’d expect what I was seeing. It almost sounded like internally Ruby would cache <em>each</em> different interpolation that comes through. As if it would maybe reuse an internal regex if the same string value was interpolated. They provide a code example that makes it a little clearer:</p>
<pre><code>def letters; sleep 5; /[A-Z][a-z]/; end
words = %w[abc def xyz]
start = Time.now
words.each {|word| word.match(/\A[#{letters}]+\z/) }
Time.now - start # =&gt; 15.0174892

start = Time.now
words.each {|word| word.match(/\A[#{letters}]+\z/o) }
Time.now - start # =&gt; 5.0010866
</code></pre>
<p>The <code>letters</code> method in the first example is called three times. One time for each iteration, as expected, taking 15 seconds total.</p>
<p>In the second example, the code iterates three times, but the <code>letters</code> method is called <em>once</em>, taking 5 seconds total.</p>
<p>Knowing that, I went back to the original code with new eyes:</p>
<div><pre tabindex="0"><code data-lang="ruby"><span>class</span> <span>Matcher</span>
  <span>def</span> <span>initialize</span>(matchables)
    @matchables <span>=</span> matchables
  <span>end</span>
	
  <span>def</span> <span>matches_any?</span>(input)
    @matchables<span>.</span>any? { <span>|</span>m<span>|</span>
      m<span>.</span>match?(
        <span>/</span><span>#{</span>input<span>}</span><span>/io</span> <span># This is run once, _ever_</span>
      )
    }
  <span>end</span>
<span>end</span>
</code></pre></div><p>What that meant for me is that the regular expression inside of <code>matches_any?</code> was interpolating the <em>first value it <strong>ever</strong> receives</em>. Past that point the regex <em>never interpolated another value</em>.</p>
<p>As it turned out, the developer had read about it as a potential regex optimization. It seemed harmless enough, so they added it. Now that I knew why I was hitting the issue, I removed the <code>/o</code> and everything started working properly.</p>
<p>But it still was not clear to me <em>how</em> this was possible. What in the world is Ruby doing internally? Let’s figure it out together.</p>
<h3 id="inside-the-vm">Inside the VM</h3>
<p>Sometimes the only way to understand a behavior in Ruby is to drop a bit lower. Let’s disassemble the code into Ruby VM byte code, to see if it gives us any clues. I’ll use the <code>DATA</code> feature to be able to put it into a script directly (you can find more about <a href="https://ruby-doc.org/3.4.1/Object.html#DATA">that syntax here</a>).</p>
<div><pre tabindex="0"><code data-lang="ruby">puts <span>RubyVM</span><span>::</span><span>InstructionSequence</span><span>.</span>compile(<span>DATA</span><span>.</span>read)<span>.</span>disassemble
	
<span>__END__
</span><span>class Matcher
</span><span>  def initialize(matchables)
</span><span>    @matchables = matchables
</span><span>  end
</span><span>	
</span><span>  def matches_any?(input)
</span><span>    @matchables.any? { |m| m.match?(/#{input}/io) }
</span><span>  end
</span><span>end
</span></code></pre></div><p>There are a bunch of other instructions you’ll see if you run that code, but we’ll focus on the instructions specific to the block in the <code>matches_any?</code> method:</p>
<pre><code># { |m| m.match?(/#{input/io) }

== disasm: #&lt;ISeq:block in matches_any?@&lt;compiled&gt;:7 (7,21)-(7,51)&gt;
local table (size: 1, argc: 1 [opts: 0, rest: -1, post: 0, block: -1, kw: -1@-1, kwrest: -1])
[ 1] m@0&lt;AmbiguousArg&gt;
0000 getlocal_WC_0                          m@0                       (   7)[LiBc]
0002 once                                   block (2 levels) in matches_any?, &lt;is:0&gt;
0005 opt_send_without_block                 &lt;calldata!mid:match?, argc:1, ARGS_SIMPLE&gt;
0007 leave                                  [Br]
</code></pre>
<p>It describes:</p>
<ul>
<li>Getting local variable <code>m</code></li>
<li>Running the… <code>once</code> instruction?</li>
<li>Calling <code>m</code> with <code>opt_send_without_block</code> with a method id (<code>mid</code>) of <code>match?</code></li>
<li>Then <code>leave</code>ing.</li>
</ul>
<p>All of these instructions are <em>very</em> common in the Ruby VM. All except one - the <code>once</code> instruction. I’ve never heard of that!</p>
<p>What is <code>once</code>? It can’t exist almost solely for the purposes of this extremely strange regex modifier, can it? Surely this modifier is not built into the very <em>bones</em> of Ruby?</p>
<h3 id="once-upon-a-time"><code>once</code> upon a time</h3>
<p>If you are ever curious to know how Ruby VM instructions get interpreted in CRuby, there is a central file to all of it called <code>insns.def</code>. It contains all of the available YARV (Yet Another Ruby VM) instructions in a C-esque format which is compiled into an actual C file as part of building the language.</p>
<p>In normal program execution, without JIT optimizations applied (like YJIT, ZJIT, MJIT), you can trace how each instruction is executed by reading <code>insns.def</code>. Let’s look at the <code>once</code> definition to see what kind of dark magic is being invoked.</p>
<pre><code>/* run iseq only once */
DEFINE_INSN
once
(ISEQ iseq, ISE ise)
()
(VALUE val)
{
    val = vm_once_dispatch(ec, iseq, ise);
}
</code></pre>
<p>In essence it’s very simple - it takes the instruction and runs it using <code>vm_once_dispatch</code>. <code>iseq</code> is the instruction sequence, and <code>ise</code> is an “Inline Storage Entry”, which is a place to cache an instruction result. What does <code>vm_once_dispatch</code> do?</p>
<div><pre tabindex="0"><code data-lang="c"><span>static</span> VALUE
<span>vm_once_dispatch</span>(rb_execution_context_t <span>*</span>ec, ISEQ iseq, ISE is)
{
    rb_thread_t <span>*</span>th <span>=</span> rb_ec_thread_ptr(ec);
    rb_thread_t <span>*</span><span>const</span> RUNNING_THREAD_ONCE_DONE <span>=</span> (rb_thread_t <span>*</span>)(<span>0x1</span>);
	
  again:
    <span>if</span> (is<span>-&gt;</span>once.running_thread <span>==</span> RUNNING_THREAD_ONCE_DONE) {
        <span>return</span> is<span>-&gt;</span>once.value;
    }
    <span>else</span> <span>if</span> (is<span>-&gt;</span>once.running_thread <span>==</span> NULL) {
        VALUE val;
        is<span>-&gt;</span>once.running_thread <span>=</span> th;
        val <span>=</span> rb_ensure(vm_once_exec, (VALUE)iseq, vm_once_clear, (VALUE)is);
        <span>// ... skipped ...
</span><span></span>        is<span>-&gt;</span>once.running_thread <span>=</span> RUNNING_THREAD_ONCE_DONE; <span>/* success */</span>
        <span>return</span> val;
    }
    <span>else</span> <span>if</span> (is<span>-&gt;</span>once.running_thread <span>==</span> th) {
        <span>/* recursive once */</span>
        <span>return</span> vm_once_exec((VALUE)iseq);
    }
    <span>else</span> {
        <span>/* waiting for finish */</span>
        RUBY_VM_CHECK_INTS(ec);
        rb_thread_schedule();
        <span>goto</span> again;
    }
}
</code></pre></div><p>It’s a little daunting at first look, but broken down it’s just some simple if statements:</p>
<ol>
<li><code>is-&gt;once.running_thread == RUNNING_THREAD_ONCE_DONE</code><br>
If the instruction cache is set to <code>RUNNING_THREAD_ONCE_DONE</code> (a flag to identify being done vs pointing at a thread), it returns its cached value. Forever.</li>
<li><code>is-&gt;once.running_thread == NULL</code><br>
If there is no running thread, congratulations! Your thread is the winner! You get to decide what value gets cached! Every other thread trying to run this instruction will wait until you have produced a value (by calling <code>vm_once_exec</code>), then use whatever value you produced. Forever.</li>
<li><code>is-&gt;once.running_thread == th</code><br>
If there is a running thread set, and it’s the current thread, we’re in a recursive <code>once</code> (terrifying…)</li>
<li>Otherwise you are a different thread, and you have to wait. You’ll keep checking for a value immediately, or get rescheduled and check it a little later (once some other threads have been given a slice of time)</li>
</ol>
<p>We’ve broken down the logic. Now let’s break down the implications.</p>
<ol>
<li>If you use <code>/o</code> in your regex, the content of the regex will be evaluated <em>once</em>, <strong>ever</strong>. Even if it’s inside of an instance method. Even if it’s inside of a loop with a thousand iterations. It will <em>never</em> be evaluated again. That’s the content you’ve got for your regex. This is why the code I was reviewing was so confusing - even though it lived in an object, and was only created local to that method - it <strong>implicitly created a constant, immutable value</strong>.</li>
</ol>
<p>Now we can understand how the original code worked, by evaluating it relative to how the CRuby internals work. The first call we have no value set - past that point we will always use the value literally cached inside of the VM itself:</p>
<pre><code># We haven't run the code yet, so in our starting state:
#   is-&gt;once.running_thread == NULL
#   m.match?(/#{input}/io)
&gt; Matcher.new(["Ruby!"]).matches_any?("something else")
# Now we've run the code once, we're done!
#   is-&gt;once.running_thread == RUNNING_THREAD_ONCE_DONE
#   m.match?(/something else/io)

&gt; Matcher.new(["Ruby!"]).matches_any?("ruby")
#   is-&gt;once.running_thread == RUNNING_THREAD_ONCE_DONE
#   m.match?(/something else/io)

&gt; Matcher.new(["something else"]).matches_any?("Ruby!")
#   is-&gt;once.running_thread == RUNNING_THREAD_ONCE_DONE
#   m.match?(/something else/io)
</code></pre>
<ol start="2">
<li>If the code has not been run yet, you’re in the starting state of <code>is-&gt;once.running_thread == NULL</code>. This means two things. One is clear - the first code to run this gets to determine the value set. Two is a little less clear - it is non-deterministic what value will win!</li>
</ol>
<p>If you’ve read any of <a href="https://jpcamara.com/2024/06/04/your-ruby-programs.html">my series on Ruby concurrency</a>, you’ll know I love a good thread non-determinism example. Here we create a method containing an “interpolation mode” regex. Then we create five threads, and call the method from each thread. To introduce some context switching, we sleep for random amounts (this could also be caused by IO, or long-running code, alternatively):</p>
<pre><code>def once_and_for_all(input)
  /#{input}/o
end

5.times.map do |i|
  Thread.new { sleep(rand); p once_and_for_all(i) }
end.map(&amp;:join)

# Run it once, it prints /3/ 5 times
# Run it again, it prints /1/ 5 times
# Run it again...
</code></pre>
<p>In my first run, I see the regex <code>/3/</code> printed 5 times. Each run gave me a different result. Run this code several times and you will likely see a different value printed each time. It may repeat at times, but there will be no consistency.</p>
<p>Quite the behavior! This is pretty close to being a <a href="https://jpcamara.com/2024/06/04/your-ruby-programs.html#heisenbugs">Heisenbug</a>. Non-determinism at its finest.</p>
<ol start="3">
<li>The code has been run already, but now it’s being run again before being set as <code>RUNNING_THREAD_ONCE_DONE</code>: <code>is-&gt;once.running_thread == th</code>. This can only happen within the same thread, and it’s there to handle <em>recursion</em>. It’s hard to imagine using the <code>/o</code> at all, let alone <em>recursively</em>. If you were to do that I’d only have one question for you: “Who hurt you?”</li>
</ol>
<p>But let’s do the damn thing. Here’s a recursive case of the <code>/o</code> modifier. Heaven help us.</p>
<pre><code>def recursive_regex(n)
  puts "Evaluating regex for n=#{n}"
  if n &gt; 0
    /#{recursive_regex(n - 1)}/o # This calls itself recursively
  else
    "base"
  end
end

recursive_regex(5)
# Evaluating regex for n=5
# Evaluating regex for n=4
# Evaluating regex for n=3
# Evaluating regex for n=2
# Evaluating regex for n=1
# Evaluating regex for n=0

recursive_regex(5)
# Evaluating regex for n=5

# Call it with whatever value you want, it's never running the method recursively again.
recursive_regex(500)
# Evaluating regex for n=500
</code></pre>
<p>I promise it hurt me more to write that than it did for you to read it.</p>
<p>This example does bring up an interesting point though! Our examples so far have been simple values interpolated into the regex. In this case, we’re calling a method and it is still only being evaluated once. The operation you run in the interpolation is irrelevant - whatever is interpolated will never be run again with the <code>/o</code> modifier.</p>
<ol start="4">
<li>If none of the other conditions are met, it means the interpolation is being evaluated by a different thread. All we can do here is wait to see what the value is.</li>
</ol>
<p>This is the same concept as the threading example, but this is about the threads that lose the race. The most interesting part here is that it means this interpolation is guaranteed to be thread safe in CRuby (at least in the sense that other threads are locked out of it, not that you get a deterministic result). That will actually matter a little later, if you can believe it.</p>
<h3 id="why-does-it-exist">Why does it exist?</h3>
<p>I didn’t find a clear origin of this modifier. But it’s been around for 20+ years. It’s likely been around almost as long as Ruby itself. Matz, you scoundrel, you.</p>
<p>Shockingly, every other forum or blog post I found in relation to the <code>/o</code> modifier exclusively spoke about the performance benefits of it. I didn’t find any warnings at all. But mostly I found it used in a scripting context. In a single, simple script run, <em>maybe</em> you’re safe. But the downside seems way worse than any potential upside. If you really need a speed boost - just cache the regex yourself?</p>
<div><pre tabindex="0"><code data-lang="ruby">interpolated_once <span>=</span> <span>/</span><span>#{</span><span>ARGV</span><span>.</span>first<span>}</span><span>/</span>
interpolated_once<span>.</span>match?(<span>"a string"</span>)
interpolated_once<span>.</span>match?(<span>"a string 2"</span>)
interpolated_once<span>.</span>match?(<span>"a string 3"</span>)
<span># Just as performant as /o?</span>
</code></pre></div><p>The earliest reference I could find to the existence of a <code>/o</code> modifier in regex was in a <a href="https://www.perlmonks.org/?node_id=256053">2003 post on a <strong>Perl</strong> forum</a>. Based on this, I’m guessing Ruby borrowed it from Perl. Even in 2003, the prevailing wisdom was already clear:</p>
<blockquote>
<p>The best heuristic is: Never use <code>/o</code></p>
</blockquote>
<p>I agree with that 2003 Perl person. You don’t need it. You should not use it. Step away from the modifier, and no one has to get hurt.</p>
<h3 id="ill-take-your-once-and-raise-you">I’ll take your <code>once</code>, and raise you…</h3>
<p>We’re all having fun here, right? Should we take this confounding modifier, and muddy things a bit more?</p>
<p>There <em>is</em> actually a way to force the <code>/o</code> modifier to re-evaluate.</p>
<p><em>hushed whispers!</em></p>
<p><em>someone in the back of the room faints!</em></p>
<p>I stumbled upon it because I was testing this code in a Rails console. I found that every time I called <code>reload!</code>, I was able to test my method from scratch again. Why would that be?</p>
<p>It’s because when you <code>reload!</code>, all of your code is re-evaluated by Ruby. And when it gets re-evaluated, you get new bytecode, and a new cache! Take this for instance:</p>
<pre><code>def one_time(input)
  /#{input}/o
end

p one_time("hi there!")

def one_time(input)
  /#{input}/o
end

p one_time("how are you?")
# /hi there!/
# /how are you?/
</code></pre>
<p>Even though we used the <code>/o</code> modifier, we were able to re-evaluate it. That’s because we overrode our <code>one_time</code> implementation, which gave us a new <code>once</code> cache.</p>
<p>This matters because it means you can’t even <em>truly</em> guarantee your <code>/o</code> regex will only be run once. If a piece of monkey patch code gets loaded and overrides your method, you will get even <em>more</em> non-deterministic behavior.</p>
<h3 id="the-inmates-are-running-the-asylum">The inmates are running the asylum</h3>
<p>In a moment of pure serendipity, the day after I started writing this post I happened to read Jared Norman’s <a href="https://jardo.dev/code-reloading-for-rack-apps">Code Reloading for Rack Apps</a>. The article teaches you how to build the same kind of code reloading Rails has, but in a standalone Rack application. You should give it a read.</p>
<p>In it, he creates a class called <code>Once</code>.</p>
<blockquote>
<p>This class let’s you create an object that encapsulates a bit of code and only ever lets it run once, even if it’s called across multiple threads.</p>
<p>-Jared Norman</p>
</blockquote>
<div><pre tabindex="0"><code data-lang="ruby"><span>class</span> <span>Once</span>
  <span>def</span> <span>initialize</span>(<span>&amp;</span>block)
    @block <span>=</span> block
    @mutex <span>=</span> <span>Mutex</span><span>.</span>new
  <span>end</span>

  <span>def</span> <span>call</span>
    @mutex<span>&amp;.</span>synchronize <span>do</span>
      <span>return</span> <span>unless</span> @mutex

      <span># Ignore the \, it's for a markdown issue...</span>
      \@block<span>.</span>call

      @mutex <span>=</span> <span>nil</span>
    <span>end</span>
  <span>end</span>
<span>end</span>
	
o <span>=</span> <span>Once</span><span>.</span>new <span>do</span>
  puts <span>"I should only happen once"</span>
<span>end</span>
	
<span>100</span><span>.</span>times<span>.</span>map { <span>Thread</span><span>.</span>new { o<span>.</span>call } }<span>.</span>each(<span>&amp;</span><span>:join</span>)
<span># =&gt; I should only happen once</span>
</code></pre></div><p>Any thread attempting to run this code will block on the <code>@mutex.synchronize</code>. It runs <code>@block.call</code>, then at the end of the <code>synchronize</code> block, the <code>@mutex</code> is set to <code>nil</code>. This means that after the first thread, every other thread either exits early because <code>@mutex</code> is <code>nil</code>, or never runs the <code>synchronize</code> block at all because of the safe-nav. Makes sense!</p>
<p>As if I was destined to read this by some kind of trickster regex god, what did I see at the end of the article? A reimplementation of his <code>Once</code> class using the <code>/o</code> modifier!</p>
<p>A veritable devil on Jared’s shoulder, <a href="https://www.johnhawthorn.com/">John Hawthorn</a> gave him the idea. It would make sense that John, a Ruby internals wizard, would suggest such a thing. Then Jared, author of <a href="https://jardo.dev/advent-of-criminally-bad-ruby-code">Advent of Criminally Bad Ruby Code</a>, would actually decide to include it.</p>
<p>Here is their ingenious abomination.</p>
<pre><code>class Once
  def initialize(&amp;block)
    @block = block
  end

  def call
    /#{@block.call}/o # THE HORROR
  end
end

o = Once.new do
  puts "I should only happen once"
end

100.times.map { Thread.new { o.call } }.each(&amp;:join)
# =&gt; I should only happen once
</code></pre>
<p>Using <code>/o</code>, the code examples still behave correctly and only run once despite the many threads attempting to run it.</p>
<p>It does, however, have a fatal flaw in comparison to the original code. Can you guess it?</p>
<p>Let’s demonstrate by creating multiple instances:</p>
<pre><code>o1 = Once.new { puts "I should only happen once 1" }
o2 = Once.new { puts "I should only happen once 2" }
o3 = Once.new { puts "I should only happen once 3" }

100.times.map { Thread.new { o1.call } }.each(&amp;:join)
100.times.map { Thread.new { o2.call } }.each(&amp;:join)
100.times.map { Thread.new { o3.call } }.each(&amp;:join)
</code></pre>
<p>In the original, mutex based implementation, we’d see the following:</p>
<pre><code># =&gt; I should only happen once 1
# =&gt; I should only happen once 2
# =&gt; I should only happen once 3
</code></pre>
<p>In the <code>/o</code> based implementation, we see this:</p>
<pre><code># =&gt; I should only happen once 1
</code></pre>
<p>Because of the instruction-level caching, we can only have <em>one</em> result from <code>Once#call</code>, <strong>ever</strong>. A class that literally can only be run reliably a <em>single</em> time. “Once”, indeed.</p>
<p>It’s probably more efficient than the mutex approach and <strong>maybe</strong> in some bizarro world where you truly needed a piece of code to be thread safe and lazy evaluated and as efficient up front as possible and only ever run once… maybe…</p>
<p>No… I cannot condone it - <strong><em>don’t do it!</em></strong></p>
<p>Side note: Jared also has an excellent podcast called <a href="https://shows.acast.com/dead-code">Dead Code</a>, with loads of episodes with fantastic guests. I went on to <a href="https://shows.acast.com/dead-code/episodes/violent-sleep-of-concurrency">speak about concurrency - give it a listen!</a></p>
<h3 id="this-is-the-end">This is the <code>END</code></h3>
<p>Earlier, I said:</p>
<blockquote>
<p>What is <code>once</code>? It can’t exist almost solely for the purposes of this extremely strange regex modifier, can it? Surely this modifier is not built into the very <em>bones</em> of Ruby?</p>
</blockquote>
<p>And the truth is, <code>/o</code> is not the <em>only</em> reason the <code>once</code> instruction exists. It took a little digging, but I found another piece of Ruby code that uses <code>once</code> - the <a href="https://docs.ruby-lang.org/en/3.4/syntax/miscellaneous_rdoc.html#label-BEGIN+and+END"><code>END</code> language sytax</a>. I was surprised to find that <code>END</code> existed! I had never heard of it or used it before.</p>
<p>Not to be confused with the <code>end</code> keyword that closes out blocks, <code>END</code> defines a block that is run at the end of the Ruby program. For instance:</p>
<div><pre tabindex="0"><code data-lang="ruby"><span>END</span> { puts <span>"do this last please"</span> }
puts <span>"1"</span>
puts <span>"2"</span>
	
<span># =&gt; 1</span>
<span># =&gt; 2</span>
<span># =&gt; do this last please</span>
</code></pre></div><p>Note that if you run this code in <code>irb</code>, the <code>END</code> block will not run until you exit. <code>irb</code> is just a Ruby program, and it doesn’t <code>END</code> until <code>irb</code> is exited.</p>
<p>If you disassemble this code, we’ll see a familiar instruction:</p>
<div><pre tabindex="0"><code data-lang="ruby">puts <span>RubyVM</span><span>::</span><span>InstructionSequence</span><span>.</span>compile(<span>DATA</span><span>.</span>read)<span>.</span>disassemble
	
<span>__END__
</span><span>END { puts "do this last please" }
</span><span>puts "1"
</span><span>puts "2"
</span><span>	
</span><span># == disasm: #&lt;ISeq:&lt;compiled&gt;@&lt;compiled&gt;:1 (1,0)-(4,8)&gt;
</span><span># 0000 once          block in &lt;compiled&gt;, &lt;is:0&gt;(   2)
</span></code></pre></div><p>So the <code>END</code> block, but not the <code>end</code> of a block, uses the <code>once</code> instruction, an instruction that is used twice in Ruby. An appropriately confusing close to an article about a fascinating feature I think you should never use - the <code>/o</code> modifier.</p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: WebGPU enables local LLM in the browser – demo site with AI chat (115 pts)]]></title>
            <link>https://andreinwald.github.io/browser-llm/</link>
            <guid>44767775</guid>
            <pubDate>Sat, 02 Aug 2025 14:09:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://andreinwald.github.io/browser-llm/">https://andreinwald.github.io/browser-llm/</a>, See on <a href="https://news.ycombinator.com/item?id=44767775">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Financial lessons from my family's experience with long-term care insurance (127 pts)]]></title>
            <link>https://www.whitecoatinvestor.com/financial-lessons-father-long-term-care-insurance/</link>
            <guid>44767702</guid>
            <pubDate>Sat, 02 Aug 2025 14:00:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.whitecoatinvestor.com/financial-lessons-father-long-term-care-insurance/">https://www.whitecoatinvestor.com/financial-lessons-father-long-term-care-insurance/</a>, See on <a href="https://news.ycombinator.com/item?id=44767702">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						<p><em>[EDITOR'S NOTE: Looking to supercharge the way you plan for retirement? <a href="https://www.whitecoatinvestor.com/fin/a/newretirement" target="_blank" rel="noopener">Boldin </a>is a financial planning platform that can help WCIers answer critical questions and model key financial issues for the future (Dr. Jim Dahle has called it “<a href="https://www.whitecoatinvestor.com/newretirement-review-online-retirement-calculator/" target="_blank" rel="noopener">an online retirement calculator on steroids</a>”). Boldin will help you build your retirement plan and keep you on track for the future you deserve. If you’re a DIY investor, <a href="https://www.whitecoatinvestor.com/fin/a/newretirement" target="_blank" rel="noopener">Boldin</a> is a fantastic resource. Make sure to check it out today!]</em></p>



<div>
<p><img decoding="async" src="https://www.whitecoatinvestor.com/wp-content/uploads/2024/05/Adam-Safdi.png" alt="" width="100" height="100"><em><strong>By <a href="https://www.whitecoatinvestor.com/adam-safdi" target="_blank" rel="noopener">Adam Safdi</a>, WCI Columnist</strong></em></p></div>

<p>On January 31, 2024, I received a call at 4am from a strange number. Normally, I keep my phone on vibrate overnight, but this number kept calling repeatedly. Eventually, I woke up and answered the phone. The caller said, “Adam? This is Adam, right? This is Jack, a friend of your dad. I’m sorry to call so early, but I have some distressing news.”</p>
<p><a href="https://www.whitecoatinvestor.com/dia/l/docinsure?wtm_id=307698&amp;wtm_pt=dia&amp;wtm_lt=l" target="_blank" rel="nofollow"><img fetchpriority="high" decoding="async" width="250" height="250" src="https://www.whitecoatinvestor.com/wp-content/uploads/2023/06/Doc-Insure.jpg" alt="" srcset="https://www.whitecoatinvestor.com/wp-content/uploads/2023/06/Doc-Insure.jpg 250w, https://www.whitecoatinvestor.com/wp-content/uploads/2023/06/Doc-Insure-238x238.jpg 238w" sizes="(max-width: 250px) 100vw, 250px"></a></p>
<p>Jack went on to tell me that the police were taking my dad to the local hospital’s emergency department. Over the next few hours, we pieced together the story. My dad had wandered out of his house the night before, presumably to go for a walk. It started raining, and he became disoriented, unable to find his way home. He found a house with an unlocked door and went inside. He fell asleep in a spare bedroom. When he woke early the next morning, he became frustrated and confused by his unfamiliar surroundings.</p>
<p>The couple who lived there found him wandering in their kitchen. After the initial shock, they realized my dad posed no threat, but they called 911 due to the intrusion. No charges were filed, and the police recognized what our family had feared for some time: dementia. The local ER staff evaluated him for acute medical issues, and after finding nothing urgent, they sent him home.</p>
<p>I must first publicly express my gratitude to the couple who found my dad. I can only imagine how distressing it must have been to find a stranger in their home. I sent them a letter thanking them for their kindness and understanding.</p>
<p>Let me explain a little bit about my father’s situation. My mother passed away in 2018, and my father has lived alone since. He has a new girlfriend who lives 30 minutes away. My brother lives two hours away, and I live three time zones away. Up until that point, we knew he had some memory difficulties, and a local neurologist had diagnosed him with mild cognitive impairment.</p>
<p>But we didn’t think it was that severe.</p>
<p>There had been instances where my dad chose mismatched or inappropriate clothing, burned his toast, or replaced the telephone in the refrigerator instead of on the phone charger. However, after the January 2024 incident, we went back to his neurologist, who sadly confirmed that with my dad’s combination of cognitive and functional impairments—most notably his lack of direction, wandering, and getting lost—meant that he had progressed from mild cognitive impairment to dementia. It became clear that my dad was likely no longer safe to be by himself at home.</p>
<p>While my dad was the breadwinner during his working years, my mother managed the household finances. She and my father had bought <a href="https://www.whitecoatinvestor.com/long-term-care-insurance/" target="_blank" rel="noopener">long-term care (LTC) insurance</a> policies for the possibility of prolonged illness later in life. As best as I can tell from the paperwork, my parents bought these policies in 2004, they each paid about $14,000 in annual premiums for 10 years, and the daily benefit started at $200 per day. I was unaware of these policies when my mother died (after a relatively short illness), but I became aware of them when an uncle called and mentioned, “Your father has a long-term care insurance policy. I helped him get it.”</p>
<p>Thus began the long process of filing and obtaining claims with the LTC insurance company. I’d like to share some lessons learned from this experience.</p>


<h2><strong>What to Do with Your Relative's Long-Term Care Insurance</strong></h2>


<h3><strong>#1 Call the Insurance Company to Obtain an Application to File a Claim</strong></h3>
<p>For a while, my brother and I tried to track down the actual policy. We sifted through stacks of paperwork at our dad’s house and became frustrated (fairly and unfairly) that he didn’t know where the papers were located. When we finally called the insurance company, it, of course, had his policy on file. The company sent us an application, and we began filling out the paperwork. The application included several parts:</p>
<ul>
<li>Authorization to obtain and disclose information</li>
<li>Claimant’s statement</li>
<li>Attending physician’s statement</li>
<li>Benefit direct deposit form</li>
<li>Fraud notice</li>
</ul>
<p>Try to get a point of contact in the company's call center if possible. We found calling more fruitful than emailing. Many of our emails went completely unanswered, which was a source of frustration and delayed the process.</p>
<p><strong>More information here:</strong></p>
<p><a href="https://www.whitecoatinvestor.com/long-distance-eldercare/" target="_blank" rel="noopener">The Challenges of Long-Distance Eldercare</a></p>
<p><a href="https://www.whitecoatinvestor.com/cost-of-care-aging-parents/" target="_blank" rel="noopener">Cost of Caring for Aging Parents</a></p>


<h3><strong>#2 Insurance Companies Do Their Own Evaluations</strong></h3>
<p><a href="https://www.whitecoatinvestor.com/net/l/insurance" target="_blank" rel="nofollow"><img decoding="async" width="250" height="250" src="https://www.whitecoatinvestor.com/wp-content/uploads/2023/01/Recommended-Insurance-Page_Ad_250x250_02.jpg" alt="" srcset="https://www.whitecoatinvestor.com/wp-content/uploads/2023/01/Recommended-Insurance-Page_Ad_250x250_02.jpg 250w, https://www.whitecoatinvestor.com/wp-content/uploads/2023/01/Recommended-Insurance-Page_Ad_250x250_02-238x238.jpg 238w" sizes="(max-width: 250px) 100vw, 250px"></a></p>
<p>Most LTC insurance policies require one of two conditions to be satisfied to qualify for a claim: the claimant must be unable to perform at least two activities of daily living (ADLs)—which include bathing, continence, dressing, eating, toileting, and transferring—or the claimant must have severe cognitive impairment. My father was already established with a neurologist, who certified that his dementia was severe enough to require supervision. Despite the neurologist’s (and my dad’s primary doctor’s) signature on the “Attending Physician’s Statement,” the LTC insurance company sent a contracted nurse to conduct an in-home evaluation. This further delayed the process of receiving the claims.</p>



<h3><strong>#3 Use Professional Help During the 90-Day Elimination Period and Beyond</strong></h3>
<p>When the family learned of my dad’s situation, aunts, uncles, and cousins offered to help care for him. His girlfriend also spent a lot of time with him. But when everyone was busy, we contracted with two companies for in-home health services. This mostly consisted of someone essentially adult-sitting him to ensure he didn’t do anything dangerous—like leaving the stove on or wandering outside at night—and occasionally reminding him to eat lunch or take a shower. After 90 calendar days, I called the LTC insurance company to ask for payments to begin. I should note that while waiting for LTC insurance payments to kick in, we were paying for these services with my father’s income from his retirement portfolio.</p>
<p>However, unlike a <a href="https://www.whitecoatinvestor.com/what-you-need-to-know-about-disability-insurance/" target="_blank" rel="noopener">disability insurance</a> policy that starts paying out after 90 calendar days, LTC insurance policies don’t begin payments until 90 service days have passed. A service day is any calendar day during which professional health services are rendered and paid for, even if limited to only a few hours. Twenty-four hours of care was not necessary to have a “day” counted with our policy, but I would recommend that others going through this process check their own policy for what satisfies a “service day.” All the days our wonderful aunts, uncles, and cousins had stayed with him did not count toward his 90 service-day elimination period. I readjusted my tally and started counting the days on which hired help provided professional services.</p>


<h3><strong>#4 Indemnity Rider</strong></h3>
<p>Some LTC insurance policies include an indemnity rider that you can purchase in addition to the base policy. If you opt for this rider, the policy pays out a predetermined benefit, regardless of the expenses you incur. For my dad’s policy, he receives a daily benefit regardless of the number of hours of care provided. For example, there are days that he only receives seven hours of care (midnight to 7am when his girlfriend arrives to spend the rest of the day together), while other days he receives 24 hours of care. At $32-$34 an hour, seven hours of care costs $224-$238. My dad’s daily benefit is greater than this amount, so on some days we receive a surplus. However, these days are usually matched by the days he receives 24 hours of care, which can approach $800. For now, the LTC insurance payments are essentially covering the cost of his in-home care. I anticipate that as his dementia progresses and he has more days requiring 24-hour care, we will be paying for his care with both LTC payments and his retirement savings.</p>
<p>When we first signed up with a care provider company, it offered to bill the LTC insurance company directly. Since there were days where the LTC insurance benefit exceeded the cost of care, we wanted to pocket that difference rather than the care provider company keep it. We decided to have the LTC insurance payments directly deposited into my dad’s checking account, from which we then pay the care provider.</p>
<p><strong>More information here:</strong></p>
<p><a href="https://www.whitecoatinvestor.com/long-term-care-insurance/" target="_blank" rel="noopener">Long-Term Care Insurance</a></p>
<p><a href="https://www.whitecoatinvestor.com/evaluating-long-term-care-insurance-for-the-government-retiree/" target="_blank" rel="noopener">Evaluating Long-Term Care Insurance for the Government Retiree</a></p>


<h3><strong>#5 Keep Your Own Tally and Double-Check the Dates of Service</strong></h3>
<p><a href="https://www.whitecoatinvestor.com/misc/l/sermo" target="_blank" rel="nofollow"><img loading="lazy" decoding="async" width="250" height="250" src="https://www.whitecoatinvestor.com/wp-content/uploads/2023/07/Sermo.jpeg" alt="" srcset="https://www.whitecoatinvestor.com/wp-content/uploads/2023/07/Sermo.jpeg 250w, https://www.whitecoatinvestor.com/wp-content/uploads/2023/07/Sermo-238x238.jpeg 238w" sizes="auto, (max-width: 250px) 100vw, 250px"></a></p>
<p>The LTC insurance company collects invoices with the dates and hours for in-home care services listed, but it never accepted the invoices directly from me. It required the care provider companies to send them in. Fortunately, the care provider companies were kind enough to CC my brother and me on their emails. I kept a tally of the dates of service, and I was excited when we crossed the 90-day mark. However, when I contacted the LTC insurance company, it said my dad had only received 60 days of service. I double-checked my math and knew I was right. I asked the LTC insurance for its tally so I could compare. The discrepancy turned out to be the company's failure to account for overnight care, which spanned two different dates. After I informed it of its mistake and sent highlighted invoices proving the error, the company updated its records to reflect more than 90 days of service.</p>


<h3><strong>#6 Care Notes</strong></h3>
<p>My excitement over finally reaching the 90-day elimination period was short-lived because the next hurdle was “care notes.” The LTC insurance adjuster informed me that invoices alone were not enough; they also needed documentation that the adult-sitters were providing care for my dad. We had contracted with two different care provider companies—one for daytime care and one for overnight care. When the companies sent invoices to the LTC insurance company, one included care notes, but the other didn’t.</p>
<p>While I could see that care was provided (e.g., cooking lunch, cueing my dad to eat, reminding him to use the bathroom, helping him get dressed), the LTC insurance company threatened to discount the days provided by the company without care notes. After contacting the company, we learned that it had care notes but had only sent invoices. The care provider hadn’t realized the care notes were necessary. Fortunately, this was easily rectified, and both companies sent the required care notes.</p>


<h3><strong>#7 Check the Math</strong></h3>
<p>After all the delays, payments finally started coming in, and I was pleased to find that the company had backdated payments to begin on service day #91. Either my brother or I now check every month to ensure the LTC insurance company is paying for all the dates of service; we estimate we spend 1-2 hours per month checking the invoices and payments. Our dad’s LTC insurance company has a portal where we can log in to view received invoices, care notes, and subsequent payments. But the care provider companies must email or fax the invoices and care notes, and then a human at the company files them and adds them to the ongoing claim. The typical payment turnaround time is 1-2 weeks after the care notes and invoices are received.</p>


<h3><strong>#8 Ensure That Ongoing Invoices and Care Notes Are Still Being Sent In</strong></h3>
<p>Our latest issue is that the LTC insurance company is accidentally combining or mislabeling invoices. We use care providers with similar company names, and they share the words “senior” and “help” in their titles. The LTC insurance company has been misreading the invoices and combining them rather than separating them. We’re still working to get this corrected.</p>
<p><a href="https://www.whitecoatinvestor.com/net/l/few" target="_blank" rel="nofollow"><img loading="lazy" decoding="async" width="250" height="250" src="https://www.whitecoatinvestor.com/wp-content/uploads/2023/09/FEW-23Generic_250x250_v1.jpg" alt="" srcset="https://www.whitecoatinvestor.com/wp-content/uploads/2023/09/FEW-23Generic_250x250_v1.jpg 250w, https://www.whitecoatinvestor.com/wp-content/uploads/2023/09/FEW-23Generic_250x250_v1-238x238.jpg 238w" sizes="auto, (max-width: 250px) 100vw, 250px"></a></p>
<p><strong>More information here:</strong></p>
<p><a href="https://www.whitecoatinvestor.com/helping-your-parents-financially/" target="_blank" rel="noopener">Helping Your Parents Financially</a></p>


<h3><strong>#9 Use Your Insurance Agent</strong></h3>
<p>My last piece of advice is to use your insurance agent if they’re willing to help. As mentioned earlier, the agent who helped my parents purchase these policies is a family member. I am incredibly grateful that we could reach out to him when we had questions. He also called the LTC insurance company on our behalf when our calls and messages went unanswered. We were close to involving a lawyer due to all the delays, but thanks to our uncle’s help, we avoided that additional expense.</p>

<p>As a guest writer recently pointed out, <a href="https://www.whitecoatinvestor.com/long-distance-eldercare/" target="_blank" rel="noopener">long-distance eldercare</a> is difficult. My brother and I hope that, with the financial assistance from our dad’s LTC insurance policy, we can safely help him age in place in the home where he’s comfortable. We know there will be life disruptions, but with the help of LTC insurance, we worry less about financial disruptions.</p>
<p><strong>Have you had an experience with caring for an aging parent? Did they have LTC? Was it convenient, or was there more red tape than you would have imagined?&nbsp;</strong></p>
						
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Art of Multiprocessor Programming 2nd Edition Book Club (235 pts)]]></title>
            <link>https://eatonphil.com/2025-art-of-multiprocessor-programming.html</link>
            <guid>44767555</guid>
            <pubDate>Sat, 02 Aug 2025 13:43:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eatonphil.com/2025-art-of-multiprocessor-programming.html">https://eatonphil.com/2025-art-of-multiprocessor-programming.html</a>, See on <a href="https://news.ycombinator.com/item?id=44767555">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        

<p>
  Part of the <a href="https://eatonphil.com/bookclub.html">Software Internals Email Book Club</a>.
</p>

<p>
  The next book we'll read is The Art of Multiprocessor Programming
  2nd Edition (ISBN 9780124159501) from 2020 by Herlihy, Shavit,
  Luchangco, and Spear. A free PDF comes up for me on a Google search
  of this book but it is of the 1st Edition from 2008. Make sure you
  grab the 2nd Edition from 2020.
</p>


<table>
  <thead>
    <tr>
      <td>Date</td>
      <td>Discussion starter</td>
      <td>Chapter</td>
      <td>Title</td>
    </tr>
  </thead>
  <tbody>
    <tr><td>August 16th</td><td>Phil</td><td>1</td><td>Introduction</td></tr>
    <tr><td>August 23rd</td><td>TBD</td><td>2</td><td>Mutual exclusion</td></tr>
    <tr><td>August 30th</td><td>TBD</td><td>3</td><td>Concurrent objects</td></tr>
    <tr><td>September 6th</td><td>TBD</td><td>4</td><td>Foundations of shared memory</td></tr>
    <tr><td>September 13th</td><td>TBD</td><td>5</td><td>The relative power of primitive synchronization operations</td></tr>
    <tr><td>September 20th</td><td>TBD</td><td>6</td><td>Universality of consensus</td></tr>
    <tr><td>September 27th</td><td>TBD</td><td>7</td><td>Spin locks and contention</td></tr>
    <tr><td>October 4th</td><td>TBD</td><td>8</td><td>Monitors and blocking synchronization</td></tr>
    <tr><td>October 11th</td><td>TBD</td><td>9</td><td>Linked lists: The role of locking</td></tr>
    <tr><td>October 18th</td><td>TBD</td><td>10</td><td>Queues, memory management, and the ABA problem</td></tr>
    <tr><td>October 25th</td><td>TBD</td><td>11</td><td>Stacks and elimination</td></tr>
    <tr><td>November 1st</td><td>TBD</td><td>12</td><td>Counting, sorting, and distributed coordination</td></tr>
    <tr><td>November 8th</td><td>TBD</td><td>13</td><td>Concurrent hashing and natural parallelism</td></tr>
    <tr><td>November 15th</td><td>TBD</td><td>14</td><td>Skiplists and balanced search</td></tr>
    <tr><td>November 22th</td><td>TBD</td><td>15</td><td>Priority queues</td></tr>
    <tr><td>November 29th</td><td>TBD</td><td>16</td><td>Scheduling and work distribution</td></tr>
    <tr><td>December 6th</td><td>TBD</td><td>17</td><td>Data parallelism</td></tr>
    <tr><td>December 13th</td><td>TBD</td><td>18</td><td>Barriers</td></tr>
  </tbody>
</table>

<p>
  All discussion is via a Google Group. You probably need a Google
  account. Your email will be public if you post but otherwise it will
  not be visible to anyone.
</p>

<p>
  There will be no Zoom or Google Hangout, it will purely be over text
  email.
</p>

<p>
  You should read the chapter before the date it
  is listed.
</p>

<h3>Discussion starter</h3>

<p>
  Each weekend, one person will send out an email to start
  discussion. It can be as short as a paragraph or two just to get
  discussion going. Anyone else can chime in afterward.
</p>

<p>
  It's most fun if this discussion starter doesn't summarize the
  chapter but tells a bit about themselves, their background, and what
  resonated or was confusing in the chapter, or how it tied back to
  something they experienced in the real-world.
</p>

<h3>Sign up</h3>

<p>
  Fill out this <a href="https://forms.gle/uUVYjvvy2HUMc4d78">form</a>.
</p>





	<div>
	  <h4>Feedback</h4>
	  <p>
	    As always,
	    please <a href="mailto:phil@eatonphil.com">email</a>
	    or <a href="https://twitter.com/eatonphil">tweet me</a>
	    with questions, corrections, or ideas!
	  </p>
	</div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Anandtech.com now redirects to its forums (154 pts)]]></title>
            <link>https://forums.anandtech.com/</link>
            <guid>44767433</guid>
            <pubDate>Sat, 02 Aug 2025 13:27:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forums.anandtech.com/">https://forums.anandtech.com/</a>, See on <a href="https://news.ycombinator.com/item?id=44767433">Hacker News</a></p>
<div id="readability-page-1" class="page">
		




		



		

		<div id="top">

				
					
	
	



					

					

					
						
						
							<header id="header">
								
							</header>
						
					
					

					
					
					

					
						
						

					

					
	
		
	

					
	

					
	
		
	
		
	

	

					
	

					
				

				
				

				
	


				<div>
						
						<!--XF:EXTRA_OUTPUT-->

						
	
		
	
		

		
	

	


						
	
		
	
		
			
			<div>
											
												
													<h2>Forum list</h2>
												
											
										</div>
		
	

	


						
	
		
			

			<div>
				<div>
							

							<div>Join this amazing group of people and start discussing what you like.</div>

							<a href="https://forums.anandtech.com/register/"><span>Join now!</span></a>

							
						
						</div>
				<div>Have a question? Our experts have answers.</div>
			</div>
		
	


						
	
		
	
	
	

	

	
	
	                          
	                        



	


						
	


						
	

						
	<div>You are using an out of date browser. It  may not display this or other websites correctly.<br>You should upgrade or use an <a href="https://www.google.com/chrome/" target="_blank" rel="noopener">alternative browser</a>.</div>



						<div uix_component="MainContainer">
								
								

								
	

								<div uix_component="MainContent">
	

	
	
		
	
	
	
		
	<div>
		<span id="hardware-and-technology.27"></span>
		
		<div>
			
				<h2>
					
					
					
						<a rel="nofollow"><i aria-hidden="true"></i></a>
					
				</h2>
			
			<div>
					
	
	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/cpus-and-overclocking.5/" data-xf-init="element-tooltip" data-shortcut="node-description">CPUs and Overclocking</a>
					<span>New</span>
				</h3>
				
					<div>Discussion about CPUs and Microprocessors. Need help with that new CPU? Like to push it to the limits; overclockers welcome here!</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>78K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>1.4M</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/poke01.478379/" data-user-id="478379" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/478/478379.jpg?1646784275" srcset="https://anandtech-data.community.forum/avatars/m/478/478379.jpg?1646784275 2x" alt="poke01" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-02T19:26:11-0400" data-time="1754177171" data-date-string="Aug 2, 2025" data-time-string="7:26 PM" title="Aug 2, 2025 at 7:26 PM">A moment ago</time></li>
								
									<li><a href="https://forums.anandtech.com/members/poke01.478379/" dir="auto" data-user-id="478379" data-xf-init="member-tooltip">poke01</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>66.9K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>476.5K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/mikeymikec.293403/" data-user-id="293403" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/293/293403.jpg?1724774028" srcset="https://anandtech-data.community.forum/avatars/m/293/293403.jpg?1724774028 2x" alt="mikeymikec" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-01T16:21:54-0400" data-time="1754079714" data-date-string="Aug 1, 2025" data-time-string="4:21 PM" title="Aug 1, 2025 at 4:21 PM">Yesterday at 4:21 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/mikeymikec.293403/" dir="auto" data-user-id="293403" data-xf-init="member-tooltip">mikeymikec</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/memory-and-storage.47/" data-xf-init="element-tooltip" data-shortcut="node-description">Memory and Storage</a>
					<span>New</span>
				</h3>
				
					<div>For DDR3, DDR4, SO-DIMMS, Hard Disks, SSDs, Flash memory, USB drives, and any other sort of memory and storage technology.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>22.5K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>221K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/_rick_.307690/" data-user-id="307690" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/307/307690.jpg?1400753167" srcset="https://anandtech-data.community.forum/avatars/m/307/307690.jpg?1400753167 2x" alt="_Rick_" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-02T10:06:32-0400" data-time="1754143592" data-date-string="Aug 2, 2025" data-time-string="10:06 AM" title="Aug 2, 2025 at 10:06 AM">Today at 10:06 AM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/_rick_.307690/" dir="auto" data-user-id="307690" data-xf-init="member-tooltip">_Rick_</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/displays.72/" data-xf-init="element-tooltip" data-shortcut="node-description">Displays</a>
					<span>New</span>
				</h3>
				
					<div>Discussion of monitors and display devices</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>11.2K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>109.9K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/adamk47.214/" data-user-id="214" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/0/214.jpg?1711176705" srcset="https://anandtech-data.community.forum/avatars/m/0/214.jpg?1711176705 2x" alt="AdamK47" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-20T17:33:25-0400" data-time="1753047205" data-date-string="Jul 20, 2025" data-time-string="5:33 PM" title="Jul 20, 2025 at 5:33 PM">Jul 20, 2025</time></li>
								
									<li><a href="https://forums.anandtech.com/members/adamk47.214/" dir="auto" data-user-id="214" data-xf-init="member-tooltip">AdamK47</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/power-supplies.48/" data-xf-init="element-tooltip" data-shortcut="node-description">Power Supplies</a>
					<span>New</span>
				</h3>
				
					<div>With high end PCs pushing beyond the KW range, power supplies are more critical than ever. Step on up for PSU discussion.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>6K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>53.1K</dd>
					</dl>
				</div>
			

			<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-27T23:20:38-0400" data-time="1753672838" data-date-string="Jul 27, 2025" data-time-string="11:20 PM" title="Jul 27, 2025 at 11:20 PM">Sunday at 11:20 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/dyehardx86.524978/" dir="auto" data-user-id="524978" data-xf-init="member-tooltip">DyeHardX86</a></li>
								
							</ul>
						</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/cases-cooling.13/" data-xf-init="element-tooltip" data-shortcut="node-description">Cases &amp; Cooling</a>
					<span>New</span>
				</h3>
				
					<div>Share your secrets and classic cooling experiences here and find the answer to the age old question, "Which case is best for me?"</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>46.8K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>385.9K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/fallen-kell.559/" data-user-id="559" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/0/559.jpg?1480815550" alt="Fallen Kell" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-01T18:06:41-0400" data-time="1754086001" data-date-string="Aug 1, 2025" data-time-string="6:06 PM" title="Aug 1, 2025 at 6:06 PM">Yesterday at 6:06 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/fallen-kell.559/" dir="auto" data-user-id="559" data-xf-init="member-tooltip">Fallen Kell</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/laptops.23/" data-xf-init="element-tooltip" data-shortcut="node-description">Laptops</a>
					<span>New</span>
				</h3>
				
					<div>Laptop and Mobile Slate Discussions are happening here.  Talk about the latest and greatest tips on which laptop to buy.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>24K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>175.4K</dd>
					</dl>
				</div>
			

			<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-28T09:19:12-0400" data-time="1753708752" data-date-string="Jul 28, 2025" data-time-string="9:19 AM" title="Jul 28, 2025 at 9:19 AM">Monday at 9:19 AM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/cb7a1cd0.481860/" dir="auto" data-user-id="481860" data-xf-init="member-tooltip">cb7a1cd0</a></li>
								
							</ul>
						</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/networking.12/" data-xf-init="element-tooltip" data-shortcut="node-description">Networking</a>
					<span>New</span>
				</h3>
				
					<div>Having trouble setting up your own network? Is server configuration a pain? DSL or Cable Modem giving you fits? From WAN to LAN, discuss it here.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>54.5K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>352.5K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/in2photos.212749/" data-user-id="212749" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/212/212749.jpg?1700168845" srcset="https://anandtech-data.community.forum/avatars/m/212/212749.jpg?1700168845 2x" alt="In2Photos" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-02T12:41:34-0400" data-time="1754152894" data-date-string="Aug 2, 2025" data-time-string="12:41 PM" title="Aug 2, 2025 at 12:41 PM">Today at 12:41 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/in2photos.212749/" dir="auto" data-user-id="212749" data-xf-init="member-tooltip">In2Photos</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>892</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>13.1K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/rossman.13418/" data-user-id="13418" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/13/13418.jpg?1564375523" alt="RossMAN" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-06-26T21:10:03-0400" data-time="1750986603" data-date-string="Jun 26, 2025" data-time-string="9:10 PM" title="Jun 26, 2025 at 9:10 PM">Jun 26, 2025</time></li>
								
									<li><a href="https://forums.anandtech.com/members/rossman.13418/" dir="auto" data-user-id="13418" data-xf-init="member-tooltip">RossMAN</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/peripherals-components.7/" data-xf-init="element-tooltip" data-shortcut="node-description">Peripherals &amp; Components</a>
					<span>New</span>
				</h3>
				
					<div>Plug ''n'' Play or Plug ''n'' Pray.  Sometimes you just have to plug the pain away. If you have questions about your latest peripheral or component we have answers.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>18.5K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>109.9K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/dapunisher.67347/" data-user-id="67347" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/67/67347.jpg?1675931613" srcset="https://anandtech-data.community.forum/avatars/m/67/67347.jpg?1675931613 2x" alt="DAPUNISHER" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-29T23:57:55-0400" data-time="1753847875" data-date-string="Jul 29, 2025" data-time-string="11:57 PM" title="Jul 29, 2025 at 11:57 PM">Tuesday at 11:57 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/dapunisher.67347/" dir="auto" data-user-id="67347" data-xf-init="member-tooltip"><span>DAPUNISHER</span></a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/computer-building.4/" data-xf-init="element-tooltip" data-shortcut="node-description">Computer Building</a>
					<span>New</span>
				</h3>
				
					<div>General computer building discussions, questions, and troubleshooting. This is the place to discuss the latest computer hardware issues and technology.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>314.1K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>2.5M</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/mikeymikec.293403/" data-user-id="293403" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/293/293403.jpg?1724774028" srcset="https://anandtech-data.community.forum/avatars/m/293/293403.jpg?1724774028 2x" alt="mikeymikec" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-02T04:07:37-0400" data-time="1754122057" data-date-string="Aug 2, 2025" data-time-string="4:07 AM" title="Aug 2, 2025 at 4:07 AM">Today at 4:07 AM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/mikeymikec.293403/" dir="auto" data-user-id="293403" data-xf-init="member-tooltip">mikeymikec</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	

				</div>
		</div>
	</div>

	

	
		
	
	
	
		
	

	

	
		
	
	
	
		
	<div>
		<span id="software.28"></span>
		
		<div>
			
				<h2>
					
					
					
						<a rel="nofollow"><i aria-hidden="true"></i></a>
					
				</h2>
			
			<div>
					
	
	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/windows.10/" data-xf-init="element-tooltip" data-shortcut="node-description">Windows</a>
					<span>New</span>
				</h3>
				
					<div>We all use software, and most of us use Windows. Here's the place to chat about or get some help with apps designed for the most pervasive desktop OS around.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>100.9K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>681.7K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/bonzaiduck.137745/" data-user-id="137745" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/137/137745.jpg?1568609002" srcset="https://anandtech-data.community.forum/avatars/m/137/137745.jpg?1568609002 2x" alt="BonzaiDuck" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-02T17:08:10-0400" data-time="1754168890" data-date-string="Aug 2, 2025" data-time-string="5:08 PM" title="Aug 2, 2025 at 5:08 PM">Today at 5:08 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/bonzaiduck.137745/" dir="auto" data-user-id="137745" data-xf-init="member-tooltip">BonzaiDuck</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/apple.45/" data-xf-init="element-tooltip" data-shortcut="node-description">Apple</a>
					
				</h3>
				
					<div>For all those Mac users out there, here's the place to be. MacOS, iOS, tvOS, and any Mac specific hardware discussions are all fair game here.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>8K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>104.4K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/eug.14838/" data-user-id="14838" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/14/14838.jpg?1567948201" srcset="https://anandtech-data.community.forum/avatars/m/14/14838.jpg?1567948201 2x" alt="Eug" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-06-22T19:52:01-0400" data-time="1750636321" data-date-string="Jun 22, 2025" data-time-string="7:52 PM" title="Jun 22, 2025 at 7:52 PM">Jun 22, 2025</time></li>
								
									<li><a href="https://forums.anandtech.com/members/eug.14838/" dir="auto" data-user-id="14838" data-xf-init="member-tooltip">Eug</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/open-source.46/" data-xf-init="element-tooltip" data-shortcut="node-description">Open Source</a>
					<span>New</span>
				</h3>
				
					<div>Open or proprietary, any software designed to run on *nix operating systems. Everything from configuration to compilation.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>3K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>26.8K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/zepp.442732/" data-user-id="442732" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/442/442732.jpg?1707230725" srcset="https://anandtech-data.community.forum/avatars/m/442/442732.jpg?1707230725 2x" alt="Zepp" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-31T09:09:48-0400" data-time="1753967388" data-date-string="Jul 31, 2025" data-time-string="9:09 AM" title="Jul 31, 2025 at 9:09 AM">Thursday at 9:09 AM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/zepp.442732/" dir="auto" data-user-id="442732" data-xf-init="member-tooltip">Zepp</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/operating-systems.11/" data-xf-init="element-tooltip" data-shortcut="node-description">Operating Systems</a>
					<span>New</span>
				</h3>
				
					<div>Discuss all flavors of Windows, OSX, Unix, Linux, BeOS, Solaris, OS/2, and virtually all other Operating Systems.  Ask for help, or lend a hand to those who need one.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>73.9K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>548.9K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/indus.87770/" data-user-id="87770" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/87/87770.jpg?1441225609" srcset="https://anandtech-data.community.forum/avatars/m/87/87770.jpg?1441225609 2x" alt="Indus" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-02T19:24:32-0400" data-time="1754177072" data-date-string="Aug 2, 2025" data-time-string="7:24 PM" title="Aug 2, 2025 at 7:24 PM">1 minute ago</time></li>
								
									<li><a href="https://forums.anandtech.com/members/indus.87770/" dir="auto" data-user-id="87770" data-xf-init="member-tooltip">Indus</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/programming.39/" data-xf-init="element-tooltip" data-shortcut="node-description">Programming</a>
					<span>New</span>
				</h3>
				
					<div>A forum dedicated to the dark art of computer programming.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>6.8K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>56.1K</dd>
					</dl>
				</div>
			

			<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-24T13:14:29-0400" data-time="1753377269" data-date-string="Jul 24, 2025" data-time-string="1:14 PM" title="Jul 24, 2025 at 1:14 PM">Jul 24, 2025</time></li>
								
									<li><a href="https://forums.anandtech.com/members/igor_kavinski.458890/" dir="auto" data-user-id="458890" data-xf-init="member-tooltip">igor_kavinski</a></li>
								
							</ul>
						</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/pc-games.44/" data-xf-init="element-tooltip" data-shortcut="node-description">PC Games</a>
					<span>New</span>
				</h3>
				
					<div>This is the place for anything gaming on the PC. Bring on the headshots!</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>20.2K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>677.1K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/kaido.128051/" data-user-id="128051" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/128/128051.jpg?1518413539" srcset="https://anandtech-data.community.forum/avatars/m/128/128051.jpg?1518413539 2x" alt="Kaido" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-02T18:30:31-0400" data-time="1754173831" data-date-string="Aug 2, 2025" data-time-string="6:30 PM" title="Aug 2, 2025 at 6:30 PM">55 minutes ago</time></li>
								
									<li><a href="https://forums.anandtech.com/members/kaido.128051/" dir="auto" data-user-id="128051" data-xf-init="member-tooltip">Kaido</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/distributed-computing.15/" data-xf-init="element-tooltip" data-shortcut="node-description">Distributed Computing</a>
					<span>New</span>
				</h3>
				
					<div>Discuss SETI@Home, F@H, FaD, CPDN, SoB, E@H, BOINC and other distributed computing topics here.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>40.9K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>557.5K</dd>
					</dl>
				</div>
			

			<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-30T23:52:13-0400" data-time="1753933933" data-date-string="Jul 30, 2025" data-time-string="11:52 PM" title="Jul 30, 2025 at 11:52 PM">Wednesday at 11:52 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/skillz.342368/" dir="auto" data-user-id="342368" data-xf-init="member-tooltip">Skillz</a></li>
								
							</ul>
						</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/security.41/" data-xf-init="element-tooltip" data-shortcut="node-description">Security</a>
					<span>New</span>
				</h3>
				
					<div>For all things related to computer security.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>3.7K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>25.6K</dd>
					</dl>
				</div>
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/alis.517179/" data-user-id="517179" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/517/517179.jpg?1738239095" srcset="https://anandtech-data.community.forum/avatars/m/517/517179.jpg?1738239095 2x" alt="Alis" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-15T06:10:02-0400" data-time="1752574202" data-date-string="Jul 15, 2025" data-time-string="6:10 AM" title="Jul 15, 2025 at 6:10 AM">Jul 15, 2025</time></li>
								
									<li><a href="https://forums.anandtech.com/members/alis.517179/" dir="auto" data-user-id="517179" data-xf-init="member-tooltip">Alis</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	

				</div>
		</div>
	</div>

	

	
		
	
	
	
		
	<div>
		<span id="shopping.30"></span>
		
		<div>
			
				<h2>
					
					
					
						<a rel="nofollow"><i aria-hidden="true"></i></a>
					
				</h2>
			
			<div>
					
	
	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/hot-deals-and-giveaways.16/" data-xf-init="element-tooltip" data-shortcut="node-description">Hot Deals and Giveaways</a>
					<span>New</span>
				</h3>
				
					<div>Post the hottest prices, deals, contests and freebies that you find on the net. Please post deals you've found, not items you are seeking. No coupon codes, no dealers, no SPAM (IE: multi-level marketing, pay-to-surf, or referral links). Please read the forum rules for details.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>125.2K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>1.7M</dd>
					</dl>
				</div>
			

			<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-01T20:15:12-0400" data-time="1754093712" data-date-string="Aug 1, 2025" data-time-string="8:15 PM" title="Aug 1, 2025 at 8:15 PM">Yesterday at 8:15 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/igor_kavinski.458890/" dir="auto" data-user-id="458890" data-xf-init="member-tooltip">igor_kavinski</a></li>
								
							</ul>
						</div>


		</div>

	


	

	
		
	
	
	
		
	

	<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			


			
				
			

			<div>
				
					<div>
						
							<a href="https://forums.anandtech.com/members/balloonshark.238945/" data-user-id="238945" data-xf-init="member-tooltip">
			<img src="https://anandtech-data.community.forum/avatars/s/238/238945.jpg?1740878927" srcset="https://anandtech-data.community.forum/avatars/m/238/238945.jpg?1740878927 2x" alt="balloonshark" width="48" height="48" loading="lazy"> 
		</a>
						
					</div>
					<div>
							<ul>
								<li><time dir="auto" datetime="2025-07-03T19:44:52-0400" data-time="1751586292" data-date-string="Jul 3, 2025" data-time-string="7:44 PM" title="Jul 3, 2025 at 7:44 PM">Jul 3, 2025</time></li>
								
									<li><a href="https://forums.anandtech.com/members/balloonshark.238945/" dir="auto" data-user-id="238945" data-xf-init="member-tooltip">balloonshark</a></li>
								
							</ul>
						</div>
					
			</div>


		</div>

	


	

	

				</div>
		</div>
	</div>

	

	
		
	
	
	
		
	

	

	
		
	
	
	
		
	<div>
		<span id="forum-issues.31"></span>
		
		<div>
			
				<h2>
					
					
					
						<a rel="nofollow"><i aria-hidden="true"></i></a>
					
				</h2>
			
			<div>
			
<span aria-hidden="true">
				

	<i></i>
	

			</span>
			<div>
				
				
				<h3>
					<a href="https://forums.anandtech.com/forums/forum-issues-and-feedback.17/" data-xf-init="element-tooltip" data-shortcut="node-description">Forum Issues and Feedback</a>
					<span>New</span>
				</h3>
				
					<div>If you have an issue with your forum account, or technical problem with the forums in general.  We cannot guarantee a response.</div>
				

				

				

				
			</div>


			
				<div>
					<dl>
						<dt>Threads</dt>
						<dd>16.4K</dd>
					</dl>
					<dl>
						<dt>Messages</dt>
						<dd>122.9K</dd>
					</dl>
				</div>
			

			<div>
							<ul>
								<li><time dir="auto" datetime="2025-08-02T12:21:50-0400" data-time="1754151710" data-date-string="Aug 2, 2025" data-time-string="12:21 PM" title="Aug 2, 2025 at 12:21 PM">Today at 12:21 PM</time></li>
								
									<li><a href="https://forums.anandtech.com/members/andrewjacksonza.363009/" dir="auto" data-user-id="363009" data-xf-init="member-tooltip">AndrewJacksonZA</a></li>
								
							</ul>
						</div>


		</div>
		</div>
	</div>

	

	




		

</div>

								
	
		
	
		<div data-widget-id="8" data-widget-key="forum_overview_share_page" data-widget-definition="share_page" uix_component="MainSidebar">
			<h3>Share this page</h3>
			
		</div>
	

	

							</div>
						
	
		
	

	

						
	

					</div>

				
	
		
	







	


				
					
				
				
				
			</div>

		<div>
			
			
				
	
		
		
		

		<ul data-xf-init="notices" data-type="bottom_fixer" data-scroll-interval="6">

			
				
	<li data-notice-id="-1" data-delay-duration="0" data-display-duration="0" data-auto-dismiss="0" data-visibility="">
		
		<div>
		This site uses cookies to help personalise content, tailor your experience and to keep you logged in if you register.<br>
By continuing to use this site, you are consenting to our use of cookies.
	</div>
	</li>

			
		</ul>
	

			
		</div>

		

		
	
	
	
	
	















	
	

	




	



	



	



	






	



	




	

	

	



	

	

	

	
	
	
	
	

	

	
		
	

		
		
			
		

		

		

	


	
	
	                          
	                        








</div>]]></description>
        </item>
        <item>
            <title><![CDATA[ThinkPad designer David Hill on unreleased models (164 pts)]]></title>
            <link>https://www.theregister.com/2025/08/02/thinkpad_david_hill_interview/</link>
            <guid>44767125</guid>
            <pubDate>Sat, 02 Aug 2025 12:40:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2025/08/02/thinkpad_david_hill_interview/">https://www.theregister.com/2025/08/02/thinkpad_david_hill_interview/</a>, See on <a href="https://news.ycombinator.com/item?id=44767125">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p><span>Interview</span> Launched in 1992, the boxy black ThinkPad with its little red nub remains the quintessential business productivity notebook. Unlike commercial offerings from competitors such as Dell and HP, Lenovo's laptop has a following of people who collect old models and celebrate each new innovation.</p>
<p>If you bought a ThinkPad between 1995 and 2017, it was probably designed under the oversight of David W. Hill, who served as lead designer under both IBM and Lenovo for those 22 years. We caught up with Hill, who today runs his own firm, ThinkNext Design, to talk about the history of ThinkPad, what drove him to make key design decisions, and the products he wanted to come out with but just couldn't.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/davidhill.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/davidhill.jpg?x=648&amp;y=430&amp;infer_y=1" alt="David Hill with a ThinkPad 700C" title="David Hill with a ThinkPad 700C" height="430" width="648"></a></p><p>David Hill with a ThinkPad 700C</p>
</div>
<p>In a wide-ranging conversation, Hill revealed that he tried several times to introduce additional laptops that had the famous "butterfly keyboard" found on the ThinkPad 701C. He spoke about wanting to create a portable all-in-one desktop that would fold up like a laptop. And he explained the evolution of the TrackPoint nub and the ThinkLight overhead light.</p>
<h3>Hill's career before ThinkPad</h3>
<p>Hill started at IBM in 1985 and spent ten years working as an industrial designer on non-ThinkPad projects, including the company's AS/400, a mid-range computer (between a mainframe and a PC) that came out in 1988. At the time, most PCs were gray or beige.</p>
<p>"I led the design, most notably of IBM's AS/400 Advanced series. Which was all black, which was unbelievable in the world of servers at the time," he said. "It was all black and kind of menacing looking as some people said. But now you can hardly buy a server that's not black."</p>
<h3>ThinkPad launches in 1992</h3>
<p>The original ThinkPads, the 300, 700, and 700C, came out in October 1992, and were designed by IBM stalwart Richard Sapper, with the idea that they would look like bento boxes. These were also the first laptops to use a pointing stick, the vaunted TrackPoint, which still appears on Lenovo's commercial laptops today. At this time, Hill was not yet on the team.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill2.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill2.jpg" alt="ThinkPad 700C, the first ThinkPad" title="ThinkPad 700C, the first ThinkPad" height="619" width="640"></a></p><p>ThinkPad 700C, the first ThinkPad</p>
</div>
<p>"I thought it was brilliant, and I still think it is," Hill said of the nub. "You know, there's some people that don't like a TrackPoint, but I think a lot of those people probably never tried one."</p>
<h3>The butterfly keyboard</h3>
<p>Hill took over the design reins of ThinkPad in 1995, just as the company was launching the ThinkPad 701C and its unique keyboard mechanism. The design work on this was done before he started, but he got to work with its creators John Karidis and Sapper and learn this iconic laptop's inside story. Unlike every other laptop, which has a keyboard that's the width of or shorter than the lid above it, the 701C used a butterfly-style keyboard that folded open to become larger when the laptop was in use.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill3.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill3.jpg?x=648&amp;y=486&amp;infer_y=1" alt="IBM ThinkPad 701C butterfly keyboard. Image by Raymangold22, Creative Commons 1.0" title="IBM ThinkPad 701C butterfly keyboard. Image by Raymangold22, Creative Commons 1.0" height="486" width="648"></a></p><p>IBM ThinkPad 701C butterfly keyboard. Image by Raymangold22, Creative Commons 1.0</p>
</div>
<p>"There was always a mismatch between screen size and full-size keyboard. Because when the 701C came out, that was about the biggest screen you could make," he said of the laptop with its 10-inch display. "People forget about this, but it was very difficult to make a full-color screen that was really big. You wanted to have a full-size keyboard; you ended up with a huge border around the screen."</p>
<p>It was Karidis who came up with the game-changing butterfly concept.</p>
<p>"John Karidis had this brilliant idea that the way to solve this was inspired by wooden blocks. He had a daughter and they were playing with these wooden blocks and there's two blocks that are rectangles," Hill said. "So he went to work the next day with this 'aha' moment, and he put a keyboard from a ThinkPad on a copy machine and then cut it at a diagonal with a pair of scissors and put it back together in two different directions... And then he invented this mechanism to make it actually move when you've opened the display."</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill4.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill4.jpg?x=648&amp;y=486&amp;infer_y=1" alt="IBM ThinkPad 701C. Image by Ged Carroll, Creative Commons 2.0" title="IBM ThinkPad 701C. Image by Ged Carroll, Creative Commons 2.0" height="486" width="648"></a></p><p>IBM ThinkPad 701C. Image by Ged Carroll, Creative Commons 2.0</p>
</div>
<p>Hill told <em>The Register</em> that he had wanted to make more ThinkPads with butterfly keyboards and had tried at least three times to make it happen – in one case there was a prototype where only half of the keyboard moved – but was never able to get there. Eventually, screens became big enough that there was no need to have a keyboard that expanded. However, Hill said, he thought about putting a butterfly keyboard on a netbook when they were a viable product category in the late aughts.</p>
<h3>Changes to everyone's favorite nub</h3>
<p>In addition to this work on ThinkPad keyboards, Hill also had influence over the design of the TrackPoint. The key improvements he oversaw were changes to the TrackPoint's red cap and its height.</p>
<p>"When I first started working on ThinkPad, [the TrackPoint] was rough, like it was called the 'cat tongue.' It was basically like sandpaper. And it gave you great traction, but I thought it didn't feel so great," he said. "I launched an initiative to create a new TrackPoint cap and we ended up actually developing one a lot of people called 'the Golf Tee' and then one called 'the Soft Dome.'"</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill5.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill5.jpg?x=648&amp;y=486&amp;infer_y=1" alt="Four variations on the ThinkPad cap – Soft Dome, Golf Tee, Classic Dome, and Eraser Head. Image by Raymangold22, Creative Commons 1.0" title="Four variations on the ThinkPad cap – Soft Dome, Golf Tee, Classic Dome, and Eraser Head. Image by Raymangold22, Creative Commons 1.0" height="486" width="648"></a></p><p>Four variations on the ThinkPad cap – Soft Dome, Golf Tee, Classic Dome, and Eraser Head. Image by Raymangold22, Creative Commons 1.0</p>
</div>
<p>For several years, ThinkPad owners got three types of TrackPoint cap – Soft Dome, Golf Tee, and Original Dome – and could choose among them. However, at this point, the Soft Dome design has won out with a rather large, flat top that's filled with dots for texture and an easy grip. Hill said that he also changed the height of the TrackPoint over the years, making it shorter as the laptops themselves got thinner.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill6.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill6.jpg?x=648&amp;y=486&amp;infer_y=1" alt="ThinkPad TrackPoint with soft dome top. Image by Inklein, Creative Commons 3.0" title="ThinkPad TrackPoint with soft dome top. Image by Inklein, Creative Commons 3.0" height="486" width="648"></a></p><p>ThinkPad TrackPoint with Soft Dome top. Image by Inklein, Creative Commons 3.0</p>
</div>
<p>During TrackPoint's heyday, Lenovo also licensed the technology to other companies while some competitors tried to make their own versions. Dell, Acer, HP, and Toshiba all had pointing sticks on their business laptops. However, none of these competitors were allowed to use a red cap and the feel just wasn't the same.</p>
<p>Another feature that Hill implemented was a scroll button for the TrackPoint, which is still in use. Today, the button sits between the left and right click TrackPoint buttons and allows you to scroll horizontally or vertically if you hold it down while pushing on the nub. In the early years of ThinkPad, there was no scroll button at all and then, in models like the ThinkPad T20 (shown below), it was in its own row below the left and right click buttons.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill7.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill7.jpg" alt="ThinkPad T20 with its scroll button below the left/right click. Image by J-P Kama, Creative Commons 3.0" title="ThinkPad T20 with its scroll button below the left/right click. Image by J-P Kama, Creative Commons 3.0" height="728" width="585"></a></p><p>ThinkPad T20 with its scroll button below the left/right click. Image by J-P Kama, Creative Commons 3.0</p>
</div>
<p>At one point, after IBM added touchpads to its laptops, Hill was almost forced to remove the TrackPoint scroll button because it was getting in the way of the pad.</p>
<p>"There were a lot of people who said 'well, we'll just get rid of it,'" Hill recalls. "And I said, 'whoa, wait, wait a minute. This scrolling thing with a TrackPoint is a huge advantage because I can just hold down one button and I can scroll omnidirectionally. I'm not just talking up and down. I'm all over the whole screen.'"</p>

    

<p>He eventually created a compromise where the scroll button moved in between the left and right buttons. Although touchpads have gotten a lot better over the years and every manufacturer but Lenovo has ditched its pointing sticks, Hill still believes that the TrackPoint is the best way to navigate on a laptop.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill8.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill8.jpg?x=648&amp;y=486&amp;infer_y=1" alt="ThinkPad with both middle and side TrackPoint buttons. Image by Raymangold22, Creative Commons 1.0" title="ThinkPad with both middle and side TrackPoint buttons. Image by Raymangold22, Creative Commons 1.0" height="486" width="648"></a></p><p>ThinkPad with both middle and side TrackPoint buttons. Image by Raymangold22, Creative Commons 1.0</p>
</div>
<p>"It's very efficient because you don't have to take your hands off the home row [to use a TrackPoint]. And you're not wildly moving your hands around like when you're rubbing a pad or or rolling a ball with your thumb," he said.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill9.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill9.jpg?x=648&amp;y=432&amp;infer_y=1" alt="Finger touching TrackPoint. Image by Tinh tế Photo, Creative Commons 1.0." title="Finger touching TrackPoint. Image by Tinh tế Photo, Creative Commons 1.0." height="432" width="648"></a></p><p>Finger touching TrackPoint. Image by Tinh tế Photo, Creative Commons 1.0</p>
</div>
<p>Hill said that, while he still gets new ThinkPads and uses them, he would not be interested in owning the <a target="_blank" href="https://www.lenovo.com/us/en/c/laptops/thinkpad/thinkpadx9/" rel="nofollow">ThinkPad X9</a>, which is a new model that lacks a TrackPoint in an attempt to appeal to a different demographic of users than other SKUs.</p>
<h3>ThinkLight, a better way to illuminate the keyboard</h3>
<p>One of the features Hill is most proud of developing is the ThinkLight, an overhead light located above the screen that lit up the entire keyboard and deck. Though the advent of keyboard backlights has made the ThinkLight redundant – Lenovo discontinued it in 2013 – it offers capabilities that backlights do not. If you want to place a paper on top of your keyboard, the LED will light it up, allowing you to see more than just your key legends.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill10.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill10.jpg?x=648&amp;y=648&amp;infer_y=1" alt="ThinkLight on and off on a keyboard. Image by Ashley Pomeroy, Creative Commons 4.0" title="ThinkLight on and off on a keyboard. Image by Ashley Pomeroy, Creative Commons 4.0" height="648" width="648"></a></p><p>ThinkLight on and off on a keyboard. Image by Ashley Pomeroy, Creative Commons 4.0</p>
</div>
<p>The idea for the ThinkLight came to Hill when he was on a flight from Japan, where IBM's Yamato Lab was located. He wanted to do some work on his laptop, but he didn't want to turn on his seat's overhead light because he felt guilty about waking up the other passengers. Then he noticed a woman on the plane with a tiny booklight attached to her book and inspiration struck.</p>
<p>When Hill got back to Raleigh-Durham, North Carolina, where he was based, he told his colleagues that he wanted to put an LED on the top edge of a ThinkPad and provide a switch to turn it on. His colleagues then made a prototype laptop with the ThinkLight and sent it to him. He immediately went to show it to the boss.</p>

        


        

<p>"So I called the general manager of ThinkPad at the time, Adalio Sanchez, and I said 'Adalio, I've got something you've got to see,'" Hill said. "So he comes down, and I took him in this little closet, and I had the model sitting there, and I said 'OK, I'm going to turn off the lights and I'm going to turn this thing on.' And so I turn off the lights. You couldn't see anything, right? I mean, you can see the display was illuminated. That's it. I pushed the little switch, and he looked at it. He said, 'We've got to make this.'"</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill11.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill11.jpg?x=648&amp;y=486&amp;infer_y=1" alt="ThinkLight. Image by Tam, Creative Commons 3.0" title="ThinkLight. Image by Tam, Creative Commons 3.0" height="486" width="648"></a></p><p>ThinkLight. Image by Tam, Creative Commons 3.0</p>
</div>
<p>Hill said he still misses the ThinkLight and notes that it was, at the time of the transition, much more cost-effective than a backlight. The former would cost 40 cents per unit while the latter added a full $12 to the bill of materials.</p>
<p>When designing the 25th anniversary ThinkPad, which came out in 2017, Hill brought back the ThinkLight, but he actually wanted to have – for the first time – two LEDs instead of one. The dual lights would have eliminated shadows and provided even better illumination, but unfortunately, this effort proved too costly to make it into the final product.</p>
<div><p><a href="https://regmedia.co.uk/2025/08/01/thinklight.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/08/01/thinklight.jpg" alt="The 25th Anniversary ThinkPad almost had two ThinkLights - Image courtesy of David Hill" title="The 25th Anniversary ThinkPad almost had two ThinkLights - - Image courtesy of David Hill" height="515" width="648"></a></p><p>The 25th Anniversary ThinkPad almost had two ThinkLights - - Image courtesy of David Hill - Click to enlarge</p>
</div>
<h3>The ThinkPad X300, proving that Lenovo could outdo IBM</h3>
<p>In 2005, Chinese PC vendor Lenovo bought ThinkPad and the rest of IBM's PC division. According to Hill, IBM had been winding down its PC business for years, looking to get out of the market.</p>
<p>"IBM at the time was, I like to describe it as they were slowly turning off hot water in the shower," he said. "If you wouldn't notice, the budgets get a little bit smaller. The portfolio gets a little smaller. They were less interested in developing new concepts. What they're really trying to do is get the books in order and sell a business."</p>
<p>After the sale, Hill got to work on building the ultimate ThinkPad, the X300. When it launched in early 2008, the X300 was one of the thinnest and lightest laptops made, tipping the scales at just 2.9 pounds with a slim profile of just 0.7 to 0.9 inches thick. And it did all that with a built-in DVD burner. It was also the first ThinkPad to ship without an IBM logo on it.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill12.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill12.jpg?x=648&amp;y=765&amp;infer_y=1" alt="ThinkPad X300. Image by Sean Neakums, Creative Commons 2.0" title="ThinkPad X300. Image by Sean Neakums, Creative Commons 2.0" height="765" width="648"></a></p><p>ThinkPad X300. Image by Sean Neakums, Creative Commons 2.0</p>
</div>
<p>Hill said that the X300 is the favorite ThinkPad he worked on, not only because of its thinness, but also because it proved that, under Lenovo, he could build an even better product than he had for IBM.</p>
<p>"There was a giant scare that this Chinese company was going to destroy ThinkPad, and it was going to become cheerful and ruin it and all this kind of stuff," he said. "And so we had this concept to build the best ThinkPad ever made that was so advanced and so well thought through that it would leapfrog anything that IBM had ever done."</p>

        

<p>The X300 was an astounding critical success. It made the cover of Business Week magazine in February 2008 and became the subject of a book by Steve Hamm called <a target="_blank" rel="nofollow" href="https://www.amazon.com/Race-Perfect-Ultimate-Portable-Computer/dp/B006OI3IH4">The Race for Perfect</a>. At $2,700 to $3,000, it was very expensive for the time, but it showed that Lenovo could compete with Apple's MacBook Air, and that ThinkPad was here to stay.</p>
<h3>Keyboard development: From seven rows to six</h3>
<p>With their deep travel, snappy feedback, and ergonomically sculpted keys, ThinkPad keyboards have a well-deserved reputation as the best in the business. However, in 2011, there was quite a controversy as the laptops slowly moved from having seven rows of keys to six. Many ThinkPad fans did not like the change.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill13.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill13.jpg?x=648&amp;y=486&amp;infer_y=1" alt="ThinkPad X200 with seven-row keyboard. Image by Alison Upton, Creative Commons 3.0." title="ThinkPad X200 with seven-row keyboard. Image by Alison Upton, Creative Commons 3.0." height="486" width="648"></a></p><p>ThinkPad X200 with seven-row keyboard. Image by Alison Upton, Creative Commons 3.0</p>
</div>
<p>The seventh row sat above the function keys and provided extra room for keys such as Scroll Lock, Pause, and, on some models, tall, double-row Esc and Delete keys. It also had more traditional, square shaped keys that were packed closer together. The six-row keyboard got rid of some of the legacy keys, had no row above function, and used an island-style layout with the appearance of more empty space between the key caps.</p>
<p>Hill was involved in the decision to redesign the keyboard, which he says was largely based on the changing screen aspect ratios of the time. As laptops moved to wider 16:9 displays from the earlier 16:10 and 4:3, there was less vertical real estate on the deck to play with.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill14.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill14.jpg?x=648&amp;y=431&amp;infer_y=1" alt="A ThinkPad X1 with a six-row keyboard. Image by Masaru Kamikura, Creative Commons 2.0" title="A ThinkPad X1 with a six-row keyboard. Image by Masaru Kamikura, Creative Commons 2.0" height="431" width="648"></a></p><p>A ThinkPad X1 with a six-row keyboard. Image by Masaru Kamikura, Creative Commons 2.0</p>
</div>
<p>"It's very difficult to make a seven-row keyboard anymore because of the aspect ratio of the display and the whole arrangement of the pieces on the inside," he said. "It's a decision that was not made lightly, however. I still like the seven-row keyboard and, as aspect ratios change, and they continue to change, I don't know. Maybe someday somebody will be interested in it again."</p>
<p>Years later, there was still a lot of nostalgia for the seven-row keyboard. In 2015, Hill was working on a retro ThinkPad that would become the ThinkPad 25th Anniversary edition (released in 2017). He <a target="_blank" href="https://web.archive.org/web/20151112171550/http://blog.lenovo.com/en/blog/retro-thinkpad-survey-2-displays-keyboard&amp;sa=D&amp;source=editors&amp;ust=1753911353401570&amp;usg=AOvVaw18zNKxwmZAtXW4us6lkMbH" rel="nofollow">surveyed users</a>&nbsp;about what they'd want in the retro laptop and found that 80.3 percent wanted the seven-row over the six-row.</p>
<h3>The ThinkPad mobile desktops we never got</h3>
<p>When I asked Hill about products he wanted to come out with but never got to, he talked about an idea for portable workstations that would fold up like a laptop but have a separate keyboard and screen like a desktop when you put them on your desk. He collaborated with butterfly keyboard creator John Karidis on this concept, but couldn't make it ready for market.</p>
<ul>

<li><a href="https://www.theregister.com/2024/11/15/lenovo_china_slow_laptop/">Lenovo China clones the ThinkPad X1 Carbon with an old, slow, local x86</a></li>

<li><a href="https://www.theregister.com/2024/07/22/clacktop_modded_thinkpad_yoga/">The Clacktop: A Thinkpad Yoga with a mechanical keyboard</a></li>

<li><a href="https://www.theregister.com/2023/11/02/lenovo_thinkpad_x1_fold_16/">Lenovo's phantom ThinkPad X1 foldable laptop finally materializes</a></li>

<li><a href="https://www.theregister.com/2023/05/23/lenovo_thinkpad_z13/">Lenovo Thinkpad Z13 just has this certain Macbook Air about it...</a></li>
</ul>
<p>"We did a lot of experimentation with laptops that sort of unfolded to be more like a desktop: things where the display elevated or the keyboard would remove so you could use them like a workstation, rather than just being a clamshell with a hinge, you open and close," Hill recalled. "We did a lot of experimentation with that and got close a few times, but never could completely sell it. I always thought it was an opportunity to create a new category."</p>
<h3>Maintaining ThinkPad traditions</h3>
<p>Even after 32 years on the market, the iconic design language of the ThinkPad remains largely unchanged. The laptops have gotten thinner, lighter, and less boxy, but most of them are still raven-black rectangles with a familiar accent of red from the TrackPoint nub.</p>
<p>Hill was not opposed to offering other colors as long as black was the default. In some ThinkPad lines today, you can get a silver colorway and, on occasion, there have been other colors such as the fire engine red cover on the ThinkPad Edge in 2010.</p>
<div><p><a href="https://regmedia.co.uk/2025/07/30/hill15.jpg" target="_blank"><img src="https://regmedia.co.uk/2025/07/30/hill15.jpg?x=648&amp;y=430&amp;infer_y=1" alt="ThinkPad Edge in red. Image by 246-You, Creative Commons 2.0." title="ThinkPad Edge in red. Image by 246-You, Creative Commons 2.0." height="430" width="648"></a></p><p>ThinkPad Edge in red. Image by 246-You, Creative Commons 2.0</p>
</div>
<p>"Black is a color that's highly associated with ThinkPad. It's like, Owens Corning fiberglass is pink and John Deere tractors are green and ThinkPads are black," he opined. "But it doesn't necessarily mean that you can't offer a ThinkPad in a different color. I never really had a problem with that, as long as you can still get a black one."</p>
<p>Hill said that his approach to ThinkPad design was to give it what he called a "purposeful evolution" where it changed to accommodate new features and developments, but the design language was always recognizable.</p>
<p>"I was very instrumental in creating this purposeful evolution model for ThinkPad. I didn't think that it needed to be reinvented every year. I thought it needed to be improved," Hill said. "It's the same way Porsche treats the 911 or Jeep with the Wrangler. They don't start over every year. They build on a heritage."</p>
<p>One thing he changed over the years was the latch system. Originally, you had to pull two latches to open the lid and Hill wanted to cut that to one latch. So he made a design where one knob moved two latches at once. Eventually, the weight distribution in laptops changed so that latches weren't necessary at all, because the systems were lighter and the lids did not fly open without them.</p>

        

<p>"You have to remember at the time [we had latches], these laptops were very thick and heavy: much, much heavier than they are today, and much more fragile. So having these latches was very important," he said. "When you close it, when it pinged, it was almost like closing the door on a Porsche 911. It has this sound of authority."</p>
<p>Hill also had some advice on navigating corporate politics, telling the story of a general manager of ThinkPad (whom he didn't want to name) who tried to get him to remake the designs.</p>
<p>"They brought him into the design studio to show him the design models for the next generation, and he looked at me kind of funny. And he said, 'These look like last year's ThinkPads. I think we need something new.' And I said, 'Well, why? What problem are we trying to solve? This could be like redecorating the best restaurant in New York City and nobody goes anymore.'"</p>
<p>The manager was undeterred and ordered Hill to come back to him in 90 days with an action plan for redesigning ThinkPads. Hill took the issue to his manager, the VP of marketing for IBM's PC business.</p>
<p>"I told him and he said, 'Don't worry about him. He'll be gone by then.' I said 'Really?' And he said 'I've got your back. Don't worry about it,'" Hill recounted. "I did nothing and he left." ®</p>
<p><strong>Correction:</strong> David Hill was not lead designer on the ThinkPad 701C as it launched just when he was joining the PC organization. The picture previously shown of an AS/400 was of a later model than the one Hill designed. Hill is pictured with a ThinkPad 700C, not a 701C.</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[6 Weeks of Claude Code (169 pts)]]></title>
            <link>https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/</link>
            <guid>44767003</guid>
            <pubDate>Sat, 02 Aug 2025 12:20:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/">https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/</a>, See on <a href="https://news.ycombinator.com/item?id=44767003">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
  <header>
    

    
    <p><time>Jul 30, 2025</time>
      
      -
      <span>
           
        <span>Orta Therox</span>
         
      </span>
    </p>
    
  </header>

  
  
  

<section>
  <p>It is wild to think that it has been only a handful of weeks.</p>
<p>Claude Code has considerably changed my relationship to writing and maintaining code at scale. I still write code at the same level of quality, but I feel like I have a new freedom of expression which is hard to fully articulate.</p>
<p>Claude Code has decoupled myself from writing every line of code, I still consider myself fully responsible for everything I ship to Puzzmo, but the ability to instantly create a whole scene instead of going line by line, word by word is incredibly powerful.</p>
<p>I believe with Claude Code, we are at the <em>“introduction of photography”</em> period of programming. Painting by hand just doesn’t have the same appeal anymore when a single concept can just appear and you shape it into the thing you want with your code review and editing skills.</p>
<p>If this feels like an intimidating line-of-thought then welcome to the mid-2020s, nothing is stable anymore and change is the only constant. Sorry. I didn’t make it so nearly all of culture’s changes are <em>bad</em>, and I think that LLMs are already doing social damage and will do much worse in the future - but this genie is fully out of the bottle and it is substantially going to change what we think of as programming.</p>
<h2 id="a-retrospective-on-the-last-6-weeks">A Retrospective on the last 6 Weeks<a href="#a-retrospective-on-the-last-6-weeks" arialabel="Heading anchor">#</a></h2>
<p>This article builds on <a href="https://blog.puzzmo.com/posts/2025/06/07/orta-on-claude/">“On Coding with Claude”</a> which I wrote after using Claude for a week. If you think that I am AI-pilled, you can get my nuanced take on LLMs at <a href="https://blog.puzzmo.com/posts/2025/06/07/orta-on-claude/#before-we-start">the start</a> of that post.</p>
<p>That said, this is transformative and I want to try give you some perspective from the last 6 weeks of activity in the Puzzmo engineering space to try and show you what I’ve been seeing.</p>
<h3 id="maintenance-is-significantly-cheaper">Maintenance is Significantly Cheaper<a href="#maintenance-is-significantly-cheaper" arialabel="Heading anchor">#</a></h3>
<p>I have been on many projects with people which have taken weeks full-time to perform some sort of mundane task: “converting this JS codebase to TypeScript”, “Update to Swift X”, “Switch to a monorepo” they’re the kind of things which are delicate migrations which require a gazillion rebases.</p>
<p>Here is a list of things which I have completed, <strong>solo</strong>, since getting access to Claude Code:</p>
<ul>
<li>Converting hundreds of React Native components to just React</li>
<li>Replaced 3 non-trivial RedwoodJS systems with home-grown or mature, supported replacements</li>
<li>Built complex REPLs for multiple internal and external projects</li>
<li>Switched almost every db model to have a consistent ‘flags’ system for booleans</li>
<li>Converted from Jest to Vitest</li>
<li>Created our front-end testing strategies for React</li>
<li>Moved many things defined in code to run via the CMS</li>
<li>Made significant headway on server-side rendering</li>
<li>Re-wrote the iOS app’s launch system due to deprecations</li>
<li>Built a suite of LLM created (and framed as such, hen hand annotated) documentation for systems like leaderboards, dailies etc</li>
<li>Converted a significant amount of our design system primitives to use base-ui</li>
<li>Migrated significant code from inline styles to stylex</li>
<li>Converted all animations in puzzmo.com to use the same techniques as games</li>
<li>Fixed multiple bugs which have been around since the start of Puzzmo</li>
<li>Updated all Vite integrations</li>
<li>Migrate all Puzzmo production projects to node 22</li>
<li>Convert the games repo to a real monorepo</li>
<li>Built iPad support for the Puzzmo app</li>
</ul>
<p>None of these projects are the “actual work” which I need to do on a day to day basis as the ‘bizdev’ guy on Puzzmo for this year. These are <em>literally side-projects</em> which I did <em>on my own</em> while working on something else.</p>
<p>For clarity in the back because this is shocking to me, while I was still working on the existing roadmap I had prior to Claude Code over the last 6 weeks, I accomplished all of these things on my own. Mostly in the background (and then with a polish pass day for some of the larger ones). I didn’t go from working ~10 hour days to working ~16 hours or anything like that either.</p>
<p>This was years of <em>“tech debt” / “tech innovation”</em> backlog for me! Done in just over a month and a half.</p>
<p>If you understand what you are doing, the capacity for building and handling the breadth of tasks which typically live within the remit of “technical debt” <em>do not need to be treated as debt</em> and you can just do it as you are working on other things.</p>
<p><em>‘carving out some time on the schedule’</em> is now so incredibly cheap that getting started and making a serious dint is <em>something you can prime before going into a meeting</em>, then deciding if you thought it was the right thing after. Mind-blowing.</p>
<h3 id="write-first-decide-later">Write First, Decide Later<a href="#write-first-decide-later" arialabel="Heading anchor">#</a></h3>
<p>A habit I have been trying to form is to give an idea a shot before I fully shoot it down. For example, since day 1 on Puzzmo I had been waiting on figuring out a testing strategy for the front-end because I wanted to be able to hire someone to fully own “puzzmo.com” and a part of that is figuring out how to not do as many regressions as we get.</p>
<p>Figuring out a testing strategy for the front-end isn’t pretty, and I have seen a lot of really bad test suites which over-test and become brittle things that engineers don’t like to work with. The mix of networking, react, the scope of contexts, the dom, flakiness in tooling just leads to answers where you are looking for the least bad solution which you’ve used yourself and feel comfortable maintaining.</p>
<p>I wondered if I needed to wait for someone else, so instead of just “adding a test suite” - I opted to have Claude Code write tests for every pull request I made to the front end over the course of two weeks.</p>
<p>Then, after seeing the tests, I deleted them. It added an extra 5m to my process, but gave me an insight each time into different ways in which other projects deal with the problem. After weeks of this, I was ready to start looking at that problem systemically.</p>
<p>The idea of writing tests for every pull request and then deleting it would just be so much time, there would be no way I’d be OK with doing.</p>
<p>Or a recent example from slack where I just vibed for half a day in the background on trying to make an abstraction for CRUD resources in our CMS tools:</p>
</section>


<p><a href="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/slack-screenshot-crud.png"><img src="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/slack-screenshot-crud.png" alt="A slack statement around making CRUD apps with relay + graphql"></a>
</p>


<section>
<p>Did it work? Nope, was it worth an exploration - sure.</p>
<h3 id="living-the-two-clones-lifestyle">Living the Two Clones lifestyle<a href="#living-the-two-clones-lifestyle" arialabel="Heading anchor">#</a></h3>
<p>Anthropic have information about how to use <a href="https://docs.anthropic.com/en/docs/claude-code/common-workflows#run-parallel-claude-code-sessions-with-git-worktrees">worktrees</a> - I would like to argue for a simpler approach. Two clones, different <a href="https://code.visualstudio.com/docs/configure/profiles">VS Code profiles</a>.</p>
</section>


<p><a href="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/dual-clone.png"><img src="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/dual-clone.png" alt="An image of a Missing Link puzzle with the cells shuffled."></a>
</p>


<section>
<p>This means you can work in each independently and still visually recognize the differences in you workspaces by having a different theme:</p>
<p><img src="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/clone-2-settings.png" alt="alt text"></p>
<p>My best argument is simply that each clone represents a single pull request that you can work on at a time. If you are writing pull requests and collaborating with others then that is still pretty important. I made it so that our dev servers close any processes using the ports you want and its trivial to jump between the two clones as Claude Code is working stuff out before you are looking build.</p>
<h3 id="game-design-collaboration">Game design collaboration<a href="#game-design-collaboration" arialabel="Heading anchor">#</a></h3>
<p>Since Puzzmo was created this was the process of creating a game:</p>
<ul>
<li>We create some prototypes using all sorts of technologies</li>
<li>Collectively we work through the prototypes with feedback</li>
<li>We decide if this game is worth shipping</li>
<li>The game team re-write the from scratch in our tech stack, and with puzzmo’s system integrations</li>
</ul>
<p>The process of this is weeks before any production code is written, if at all. At our current throughput, we roughly release a game a quarter at the level of polish we want to achieve.</p>
<p>In a post-Claude Code world, this model can be simplified greatly and it is a space we are exploring. I created a new Puzzmo monorepo (that’s three now, “app”, “games” and this new one “prototypes”) which emulates the infrastructure of the games repo but has significantly different expectations on the type of code being shipped. With this repo, a game designer can go from an idea to something running on puzzmo.com for admins in a couple of hours, you write the code, then go into our admin CMS and click a few buttons and it’s done.</p>
<p>To go from “this is good for the team” to “we should make this public” takes a bit of hands-on work from me and Saman, but it’s a different ball park of effort compared to our current production pipeline.</p>
<p>We released <a href="https://blog.puzzmo.com/posts/2025/07/04/missing-link/">Missing Link</a> using this technique, which seems to be a hit. This… actually is a bit of a problem for us. I am happy for us to have a game designer’s code running on Puzzmo for a time-gated experiment, but I am not OK with this turning into Puzzmo canon with the rest of the games.</p>
<p>The flexibility which allows a game designer to make a prototype is the part that makes it un-suitable for writing long-term production code. This leaves us with a few options:</p>
<ul>
<li>Finish the experiment and stop having the game on the site</li>
<li>Re-write the game as production code</li>
<li>Declare some games as not quite having every Puzzmo integration feature</li>
<li>Explore making it more possible to write ‘production worthy’ code in prototypes</li>
<li>Extend the experiment to give ourselves time to figure another option</li>
</ul>
<p>All of these have trade-offs, and it isn’t obvious what the right idea is. The problem is novel because prior to Claude Code it wasn’t worth the effort of integrating prototype code with Puzzmo’s systems — now it’s trivial and accomplishable by anyone on the team. We can really deliver on the idea of ’experimental’ games that we launched with, which means we have to be much more thoughtful about the risk of launching too many games that people want us to keep around.</p>
<h3 id="taking-a-shot-during-triage">Taking a Shot During Triage<a href="#taking-a-shot-during-triage" arialabel="Heading anchor">#</a></h3>
<p>One thing I have been experimenting with during our weekly triage of all raised GitHub issues is asking the Claude Code GitHub action to take a stab at a pull request while we are talking about what we think as a group of engineers:</p>
<p><img src="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/claude-code-pr.png" alt="A screenshot of a GitHub issues"></p>
<p>Or one where I was the one providing enough context myself in the issue:</p>
<p><img src="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/nuanced-issue.png" alt="Another screenshot of a github issue"></p>
<p>As I am the one responsible for getting that Pull Request into production, that’s the first few steps ready and for smaller things I’ve found it to be a solid one-shot now that the repo is very well set up.</p>
<h2 id="who-has-been-successful-using-it-internally">Who has been successful using it internally?<a href="#who-has-been-successful-using-it-internally" arialabel="Heading anchor">#</a></h2>
<p>I think it’s worth noting here that we offered Claude Code to everyone on the team from the moment it because obvious how powerful of a tool it was for me personally.</p>
<p>I would say from our team, the sort of people who have used and found value the most are people with both product, technical skills and agency to feel like they can try things.</p>
<p>One of them said that Claude Code freed them from the anxiety of the first step in programming constantly.</p>
<p>Justin Searls did an interesting write-up where he described an idea of <a href="https://justin.searls.co/posts/full-breadth-developers/">full-breadth developers</a> where-in he argues that:</p>
<blockquote>
<p>Up until a few months ago, the best developers played the violin. Today, they play the orchestra.</p>
</blockquote>
<p>Which I think is correct, within the Puzzmo team the people whose skill-sets are being self-driven, run their own verticals and feel like they have the freedom to explore and push those boundaries are doing really cool work. It bursts out of any explicit job role boundaries and it becomes a pleasure to collab at a larger/faster scale on ideas than before.</p>
<p>So I will double-down on saying that everything <a href="https://justin.searls.co/posts/full-breadth-developers/">in Justin’s post</a> echoes what is happening inside the Puzzmo engineering team and his post is really worth musing over.</p>
<h3 id="what-do-i-think-makes-it-successful-in-our-codebases">What Do I Think Makes It Successful in our Codebases<a href="#what-do-i-think-makes-it-successful-in-our-codebases" arialabel="Heading anchor">#</a></h3>
<ol>
<li>
<p>We use monorepos. I was lucky to have spent the time <a href="https://.puzzmo.com/posts/2025/01/22/turborepo/">a year ago</a> to take every project and move it into a two main environments. This was originally done to reflect the working processes of the engineering teams. My goal was to make it possible to go from db schema change to front-end components in a single pull request.</p>
<p>A monorepo is perfect for working with an LLM, because it can read the file which represents our schema, it can read the sdl files defining the public GraphQL API, read the per-screen requests and figure out what you’re trying to do. Having a single place with so much context means that <em>I</em> as user of Claude Code do not need to tell it that sort of stuff and a vague message like <em>“Add a xyz field to the user model in the db and make it show in this screen”</em> is something that Claude Code can do.</p>
</li>
<li>
<p>My tech choices were made a decade ago. This video of a conference talk I <a href="https://www.youtube.com/watch?v=1Z3loALSVQM">gave from 2018</a> is still the way I introduce people to the Puzzmo codebase and the mentality behind these tech choices. React, Relay, GraphQL, TypeScript and (now StyleX) are boring and <em>very explicit</em> technologies. There are compilation steps in all of these systems which means everything has to be available locally and correct to run, this makes it a bit of a curve to learn but often when you have got it right - you know you have got it right. For our admin tools, its even more boring/mature, I’m still using <a href="https://getbootstrap.com/">Bootstrap</a>!</p>
<p>For an LLM, these technologies are very well baked into its training set and Claude Code knows to do things like “run the Relay compiler” (when I saw Claude Code first do that, I knew I was in for a wild ride) which gives it incremental ways to be validating the changes it has done are working.</p>
</li>
<li>
<p>This isn’t novel work. Most of the stuff we’re doing on a day to day basis is pretty normal down-to-earth CRUD style apps.</p>
</li>
<li>
<p>These codebases aren’t that big, nor that old. Nothing is older than 2021 and while I keep things up-to-date, I try to have a long-tail of support / backwards compatibility.</p>
</li>
<li>
<p>Our business is literally the test suite / benchmark for these models. For example, on the 28th of June, two days before posting this <a href="https://z.ai/blog/glm-4.5">GLM-4.5</a> came out. Offering a way to run an ~80% as good as <a href="https://simonwillison.net/2025/Jul/29/space-invaders/">Claude Code on your computer</a> locally. How do they measure that 80%? Here is <a href="https://huggingface.co/datasets/zai-org/CC-Bench-trajectories#test-dataset">the table from</a> their benchmarks of what they use:</p>
<p><img src="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/dataset-GLM-45.png" alt="alt text"></p>
<p>Puzzmo’s day-to-day work is represented in ~(39/52)% of their testing infrastructure!</p>
</li>
</ol>
<h3 id="quantifying-the-change-is-hard">Quantifying the Change is Hard<a href="#quantifying-the-change-is-hard" arialabel="Heading anchor">#</a></h3>
<p>I thought I would see a pretty drastic change in terms of Pull Requests, Commits and Line of Code merged in the last 6 weeks. I don’t think that holds water though:</p>
</section>


<p><a href="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/diagrams.png"><img src="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/diagrams.png" alt="An image of a Missing Link puzzle with the cells shuffled."></a>
</p>


<section>
<p>This is a 3 month chart, with a month of post-Claude Code. I just asked it to make a script to generate a CSV from looking at repos on my harddrive.</p>
<p>That said, I think anyone internally would feel like the pace of change inside Puzzmo has most definitely increased (at least in the areas I contribute) but those numbers haven’t <em>really</em> changed in reality.</p>
<p>There was a <a href="https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/">recent paper</a> (which is from the pre-Claude Code days) which says that developers with AI over-estimate its impact and maybe I am.</p>
<p>Doesn’t <em>feel</em> it though. Did you see that list at the top? I feel like I’m constantly trashing my usual estimation timings to the point where it’s hard for me to gauge how long a task will take.</p>
<h3 id="you-dont-have-to-obsess-over-llm-trends">You Don’t Have To Obsess Over LLM Trends<a href="#you-dont-have-to-obsess-over-llm-trends" arialabel="Heading anchor">#</a></h3>
<p>While intoxicating at first, settling in to Claude Code usage just becomes mundane normal tool use after a while. You do not need to spend your time worrying about Sonnet or Opus, or grabbing every Claude Code competitor like Gemini CLI, Qwen Code or some other model that is cool. I have not used anything but Claude Code with whatever it does on the $100 a month account and I am doing very fine. I’ve heard good things about asking Gemini when Claude Code is stuck, but I’ve found that if Claude Code is stuck, I have not been doing a good job framing our work and a re-examination is worth the time.</p>
<p>I’ve never set up an MCP server, I’ve found doing voice-chat super awkward and not used it and I don’t follow the “blue tick-y” people on Twitter who have some “*.ai” bio. Those folks can do their thing, but I’m very happy not engaging.</p>
<p>There will be a future when it makes sense to think about looking at other ecosystem tools, but for me the difference between pre-Claude Code and post-Claude Code is so substantial that any increments between it and others (which will be better in some ways, worse in others) is not worth the hassle for such a small incremental win.</p>
<p>Running something locally is tempting, but the networked versions like Claude Code are always gonna be a step ahead, and as long as I do not need to think about usage limits (<a href="https://techcrunch.com/2025/07/17/anthropic-tightens-usage-limits-for-claude-code-without-telling-users/">yes, I know</a>) then we’re in a good spot.</p>
<h3 id="you-can-let-claude-rest">You Can Let Claude Rest<a href="#you-can-let-claude-rest" arialabel="Heading anchor">#</a></h3>
<p>Like with a mobile phone, you can become consumed by the notion that because Claude Code can run at all times, you should make it run at all times. Effectively doom-scrolling in your terminal (or phone?!) instead.</p>
<p>It’s worth remembering that any tool can be used at any time, but that you are the one driving it and your energy / capacity to make informed decisions is not infinite.</p>
<h3 id="i-run-via-claude-yolo">I run via <code>claude yolo</code><a href="#i-run-via-claude-yolo" arialabel="Heading anchor">#</a></h3>
<p>I have been trying to make a list of everything I’m OK with:</p>
<details>
    <summary>
        .claude/settings.json
    </summary>
    <div>
        
    <pre tabindex="0"><code><span><span>{</span></span>
<span><span>  "permissions"</span><span>: {</span></span>
<span><span>    "allow"</span><span>: [</span></span>
<span><span>      "Bash(grep:*)"</span><span>,</span></span>
<span><span>      "Bash(yarn run *)"</span><span>,</span></span>
<span><span>      "Bash(yarn lint:*)"</span><span>,</span></span>
<span><span>      "Bash(yarn workspace:*)"</span><span>,</span></span>
<span><span>      "Bash(find:*)"</span><span>,</span></span>
<span><span>      "Bash(mkdir:*)"</span><span>,</span></span>
<span><span>      "Bash(rg:*)"</span><span>,</span></span>
<span><span>      "Bash(ls:*)"</span><span>,</span></span>
<span><span>      "mcp__ide__getDiagnostics"</span><span>,</span></span>
<span><span>      "Bash(awk:*)"</span><span>,</span></span>
<span><span>      "Bash(yarn build)"</span><span>,</span></span>
<span><span>      "Bash(yarn why:*)"</span><span>,</span></span>
<span><span>      "Bash(yarn info:*)"</span><span>,</span></span>
<span><span>      "Edit(*)"</span></span>
<span><span>    ],</span></span>
<span><span>    "deny"</span><span>: [</span><span>"Bash(npx prisma migrate dev:*)"</span><span>, </span><span>"Bash(git checkout:*)"</span><span>, </span><span>"Bash(git add:*)"</span><span>],</span></span>
<span><span>    "defaultMode"</span><span>: </span><span>"acceptEdits"</span></span>
<span><span>  }</span></span>
<span><span>}</span></span>
<span></span></code></pre>

    </div>
    
</details>

<p>But it’s still not enough to constantly feel like I’m being asked things that I don’t need to confirm. So I run <code>claude --dangerously-skip-permissions</code> aka <code>claude yolo</code>. The worst things that have happened to me have been having my dev db wiped during a bad Prisma migration, and that Claude Code decided it should make a commit, and then a Pull Request.</p>
<p>My theory for the latter two is that if a human is expected to read it, a human should have wrote it. I’m OK with something like:</p>
<pre tabindex="0"><code><span><span>[Authored description, or one liner]</span></span>
<span><span></span></span>
<span><span>---</span></span>
<span><span></span></span>
<span><span>[Codegen'd PR template]</span></span>
<span><span></span></span></code></pre>
<p>But I’m not slopping about in production.</p>
<h3 id="parallel-construction-for-juniors">Parallel Construction for Juniors<a href="#parallel-construction-for-juniors" arialabel="Heading anchor">#</a></h3>
<p>One thing I’ve talked with folks earlier in their careers who want to still be doing a lot of the grunt work themselves is to consider writing their work, then comparing their results to the same requested by Claude Code.</p>
<p><a href="https://en.wikipedia.org/wiki/Parallel_construction">Parallel construction</a> is a way to have your cake and eat it. You’re still learning and growing, but your results can be honed by seeing how the aggregate of training data in Claude Code has also decided to do it. Claude Code likely has a deeper ecosystem understanding, and may read more source code in the current codebase as well as knowing abstractions you’ve still not learned.</p>
<p>IMO treating it as a competitor which you can learn from is a much healthier alternative to either giving up and just accepting you don’t need to know stuff anymore, or putting your head in the sand and assuming somehow this change won’t affect you.</p>
<h3 id="you-can-just-do-it-for-side-projects">“You can just do it” for Side Projects<a href="#you-can-just-do-it-for-side-projects" arialabel="Heading anchor">#</a></h3>
<p>Throughout my entire programming career, like all humans I have been largely constrained in my capacity for side-projects and one-offs by the fact I still want to have a life. I choose to devote myself to contributing to large-scale open source to make me feel good about the amount of time I commit to the craft.</p>
<p>In concrete terms, that means spending time on projects like CocoaPods, Danger, Jest, GraphQL were things I did instead of making fun projects to explore a technology, or to fix a smaller nit.</p>
<p>Now it’s different. I can just take a stab and decide if I like the result. In one hour of exploration with Claude Code, I feel like can do roughly a weekends worth of exploration.</p>
<h4 id="eg-inline-chats">E.g. Inline Chats<a href="#eg-inline-chats" arialabel="Heading anchor">#</a></h4>
<p>For example, this blog post. When I was musing about it, I thought, <em>‘it’d be nice to show the Claude Code conversations inline’</em> and then subsequently, <em>“wouldn’t it be fun to bring back Adium themes for it”</em>. So. I just got started.</p>

<div>
    
    <div>
        <p>So, I spec’d out a rough idea of what I was looking for. Described it pretty well up-front, took the dogs for an hour-long walk and came back to a reasonable approximation of the CLI which would have taken me a few hours to build by hand.</p>
<p>It wasn’t a lot of code, but it was a lot of research, how do I re-create the Adium theme HTML, how do you make sense of claude code’s message formatting, how do you handle keeping resources local for a preview.</p>

    </div>
    
    <div data-iframe-id="chat-to-adium-1">
                <svg width="48" height="48" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="m4.709 15.955 4.72-2.647.08-.23-.08-.128h-.229l-.79-.048-2.698-.073-2.339-.097-2.266-.122-.571-.121-.536-.705.055-.352.48-.321.686.06 1.52.103 2.278.158 1.652.097 2.449.255h.389l.055-.157-.134-.098-.103-.097-2.358-1.596-2.552-1.688-1.336-.972-.724-.491-.364-.462-.158-1.008.656-.722.881.06.225.061.893.686 1.908 1.476 2.491 1.833.365.304.145-.103.019-.073-.164-.274-1.355-2.446-1.446-2.49-.644-1.032-.17-.619a2.97 2.97 0 0 1 -.104-.729l.748-1.013.413-.134.996.134.42.364.62 1.414 1.002 2.229 1.555 3.03.456.898.243.832.091.255h.158v-.146l.128-1.706.237-2.095.23-2.695.08-.76.376-.91.747-.492.584.28.48.685-.067.444-.286 1.851-.559 2.903-.364 1.942h.212l.243-.242.985-1.306 1.652-2.064.73-.82.85-.904.547-.431h1.033l.76 1.129-.34 1.166-1.064 1.347-.881 1.142-1.264 1.7-.79 1.36.073.11.188-.02 2.856-.606 1.543-.28 1.841-.315.833.388.091.395-.328.807-1.969.486-2.309.462-3.439.813-.042.03.049.061 1.549.146.662.036h1.622l3.02.225.79.522.474.638-.079.485-1.215.62-1.64-.389-3.829-.91-1.312-.329h-.182v.11l1.093 1.068 2.006 1.81 2.509 2.33.127.578-.322.455-.34-.049-2.205-1.657-.851-.747-1.926-1.62h-.128v.17l.444.649 2.345 3.521.122 1.08-.17.353-.608.213-.668-.122-1.374-1.925-1.415-2.167-1.143-1.943-.14.08-.674 7.254-.316.37-.729.28-.607-.461-.322-.747.322-1.476.389-1.924.315-1.53.286-1.9.17-.632-.012-.042-.14.018-1.434 1.967-2.18 2.945-1.726 1.845-.414.164-.717-.37.067-.662.401-.589 2.388-3.036 1.44-1.882.93-1.086-.006-.158h-.055l-6.343 4.116-1.13.146-.487-.456.061-.746.231-.243 1.908-1.312z" fill="#d97757"></path>
                </svg>
                <p>Click to show chat with Claude</p>
            </div>
</div>




<p>With that working enough to be able to correctly mix the ideas, I gave it a polish pass.</p>

<div>
    
    <div>
        <p>I’ve polished and deployed enough npm modules (<a href="https://www.npmjs.com/~orta">174?!</a>), so again, totally within my skills to do this without thinking too hard. Instead I treated this project as a fun side gig while watching <a href="https://www.youtube.com/watch?v=0LRyOw1R_SE">Apex Legends</a>.</p>
<p>If you read the chat, you’ll see that I do spend some time figuring out how to filter some things, how to show messages in a particular way but this is systemic babysitting and code which I really don’t care about.</p>

    </div>
    
    <div data-iframe-id="chat-to-adium-2">
                <svg width="48" height="48" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="m4.709 15.955 4.72-2.647.08-.23-.08-.128h-.229l-.79-.048-2.698-.073-2.339-.097-2.266-.122-.571-.121-.536-.705.055-.352.48-.321.686.06 1.52.103 2.278.158 1.652.097 2.449.255h.389l.055-.157-.134-.098-.103-.097-2.358-1.596-2.552-1.688-1.336-.972-.724-.491-.364-.462-.158-1.008.656-.722.881.06.225.061.893.686 1.908 1.476 2.491 1.833.365.304.145-.103.019-.073-.164-.274-1.355-2.446-1.446-2.49-.644-1.032-.17-.619a2.97 2.97 0 0 1 -.104-.729l.748-1.013.413-.134.996.134.42.364.62 1.414 1.002 2.229 1.555 3.03.456.898.243.832.091.255h.158v-.146l.128-1.706.237-2.095.23-2.695.08-.76.376-.91.747-.492.584.28.48.685-.067.444-.286 1.851-.559 2.903-.364 1.942h.212l.243-.242.985-1.306 1.652-2.064.73-.82.85-.904.547-.431h1.033l.76 1.129-.34 1.166-1.064 1.347-.881 1.142-1.264 1.7-.79 1.36.073.11.188-.02 2.856-.606 1.543-.28 1.841-.315.833.388.091.395-.328.807-1.969.486-2.309.462-3.439.813-.042.03.049.061 1.549.146.662.036h1.622l3.02.225.79.522.474.638-.079.485-1.215.62-1.64-.389-3.829-.91-1.312-.329h-.182v.11l1.093 1.068 2.006 1.81 2.509 2.33.127.578-.322.455-.34-.049-2.205-1.657-.851-.747-1.926-1.62h-.128v.17l.444.649 2.345 3.521.122 1.08-.17.353-.608.213-.668-.122-1.374-1.925-1.415-2.167-1.143-1.943-.14.08-.674 7.254-.316.37-.729.28-.607-.461-.322-.747.322-1.476.389-1.924.315-1.53.286-1.9.17-.632-.012-.042-.14.018-1.434 1.967-2.18 2.945-1.726 1.845-.414.164-.717-.37.067-.662.401-.589 2.388-3.036 1.44-1.882.93-1.086-.006-.158h-.055l-6.343 4.116-1.13.146-.487-.456.061-.746.231-.243 1.908-1.312z" fill="#d97757"></path>
                </svg>
                <p>Click to show chat with Claude</p>
            </div>
</div>




<p>A feature like this is a <em>full weekend</em> project, easily about 10-12 hours to get right and feel shippable for me. Instead most of the work happened when I was away and then the polishing was sporadic. Maybe the whole thing took ~2 hours of my thinking time? <em>This is wild</em>.</p>
<p>If you want to see the rest of the conversations to get it to the point where I shipped this blog post, here they are:</p>
<ul>
<li>Chronologically continuing from the 2 above: <a href="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/claude-conversations/claude-conversation--Users-orta-dev-claude-code-to-adium-ebd791d4/conversation.html">3</a>, <a href="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/claude-conversations/claude-claude-code-to-adium--Users-orta-dev-claude-code-to-adium-0ec8943e/conversation.html">4</a>, <a href="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/claude-conversations/claude-claude-code-to-adium--Users-orta-dev-claude-code-to-adium-594e201d/conversation.html">5</a>, <a href="https://blog.puzzmo.com/posts/2025/07/30/six-weeks-of-claude-code/claude-conversations/claude-conversation--Users-orta-dev-claude-code-to-adium-5f5c097b/conversation.html">6</a></li>
</ul>
<p>You can use it right now if you <a href="https://adium.im/">install Adium</a> then run <code>npx claude-code-to-adium</code> and it’ll take you through a wizard which ends with a self-contained subfolder full of html/css/images.</p>
<h3 id="some-examples-of-what-these-conversations-look-like">Some Examples of What These Conversations Look Like<a href="#some-examples-of-what-these-conversations-look-like" arialabel="Heading anchor">#</a></h3>
<p>I will try to cherry-pick some of the 147 conversations I’ve had over 19 separate repo/projects since starting. I’ll aim for breadth of goals and give my opinion to the side.</p>
<h4 id="making-a-delete-30-day-old-games-task">Making a “delete 30 day old games” Task<a href="#making-a-delete-30-day-old-games-task" arialabel="Heading anchor">#</a></h4>

<div>
    
    <div>
        <p>This is a chat where I have a general sense of what I want, but know that I don’t actually know the answer around postgres indexing and how it effects mass deletes.</p>
<p>So first I ask a general question where it is using my prisma definition file to determine what is currently set up in the db.</p>
<p>We iterate on a scripting improvement, and make it possible to test locally.</p>
<p>After trying locally, I give it a “kinda” and then ask for a more explicit technique.</p>
<p>With that set up I go through all the code, review it locally, fix up style make it work according to how I would write it.</p>

    </div>
    
    <div data-iframe-id="thirty-day-old">
                <svg width="48" height="48" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="m4.709 15.955 4.72-2.647.08-.23-.08-.128h-.229l-.79-.048-2.698-.073-2.339-.097-2.266-.122-.571-.121-.536-.705.055-.352.48-.321.686.06 1.52.103 2.278.158 1.652.097 2.449.255h.389l.055-.157-.134-.098-.103-.097-2.358-1.596-2.552-1.688-1.336-.972-.724-.491-.364-.462-.158-1.008.656-.722.881.06.225.061.893.686 1.908 1.476 2.491 1.833.365.304.145-.103.019-.073-.164-.274-1.355-2.446-1.446-2.49-.644-1.032-.17-.619a2.97 2.97 0 0 1 -.104-.729l.748-1.013.413-.134.996.134.42.364.62 1.414 1.002 2.229 1.555 3.03.456.898.243.832.091.255h.158v-.146l.128-1.706.237-2.095.23-2.695.08-.76.376-.91.747-.492.584.28.48.685-.067.444-.286 1.851-.559 2.903-.364 1.942h.212l.243-.242.985-1.306 1.652-2.064.73-.82.85-.904.547-.431h1.033l.76 1.129-.34 1.166-1.064 1.347-.881 1.142-1.264 1.7-.79 1.36.073.11.188-.02 2.856-.606 1.543-.28 1.841-.315.833.388.091.395-.328.807-1.969.486-2.309.462-3.439.813-.042.03.049.061 1.549.146.662.036h1.622l3.02.225.79.522.474.638-.079.485-1.215.62-1.64-.389-3.829-.91-1.312-.329h-.182v.11l1.093 1.068 2.006 1.81 2.509 2.33.127.578-.322.455-.34-.049-2.205-1.657-.851-.747-1.926-1.62h-.128v.17l.444.649 2.345 3.521.122 1.08-.17.353-.608.213-.668-.122-1.374-1.925-1.415-2.167-1.143-1.943-.14.08-.674 7.254-.316.37-.729.28-.607-.461-.322-.747.322-1.476.389-1.924.315-1.53.286-1.9.17-.632-.012-.042-.14.018-1.434 1.967-2.18 2.945-1.726 1.845-.414.164-.717-.37.067-.662.401-.589 2.388-3.036 1.44-1.882.93-1.086-.006-.158h-.055l-6.343 4.116-1.13.146-.487-.456.061-.746.231-.243 1.908-1.312z" fill="#d97757"></path>
                </svg>
                <p>Click to show chat with Claude</p>
            </div>
</div>




<p>You might note that it makes some guesses (“10-20%”" of our gameplays are anon users), then make bold promises from that guess:</p>
<blockquote>
<p><em>That’s an 80-85% reduction in index size!</em></p>
</blockquote>
<p>Which I doubt. However, the code was solid, it’s got significantly more logs than I would have written (useful for a daily task) and I feel like I understand what the index does. I went and added a bunch of glue comments <em>“this script works with the index in migration y, so any updates…”</em></p>
<h4 id="adding-barred-grid-support-to-a-crossword">Adding Barred Grid Support to a Crossword<a href="#adding-barred-grid-support-to-a-crossword" arialabel="Heading anchor">#</a></h4>

<div>
    
    <div>
        <p>I knew this was going to be nightmare PR, which you can <a href="https://github.com/puzzmo-com/xd-crossword-tools/pull/42">see here</a>.</p>
<p>I started by adding fixtures into the repo, and providing context via <a href="https://github.com/puzzmo-com/xd-crossword-tools/issues/31">an issue</a> which I had left ideas in. To get started, I framed this task as ’this is the long term goal, to get started we will do Y.’. Y here being an ASCII snapshot of the bars.</p>
<p>We started by building out a way to visualize the work, and Claude Code got very close. In the end, I took it’s work and finished the integration myself.</p>
<p>Once I had a way to visualize the solution, we could start looking at the main chunk of the work</p>

    </div>
    
    <div data-iframe-id="claude-conversation-xd-tools-barred-0">
                <svg width="48" height="48" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="m4.709 15.955 4.72-2.647.08-.23-.08-.128h-.229l-.79-.048-2.698-.073-2.339-.097-2.266-.122-.571-.121-.536-.705.055-.352.48-.321.686.06 1.52.103 2.278.158 1.652.097 2.449.255h.389l.055-.157-.134-.098-.103-.097-2.358-1.596-2.552-1.688-1.336-.972-.724-.491-.364-.462-.158-1.008.656-.722.881.06.225.061.893.686 1.908 1.476 2.491 1.833.365.304.145-.103.019-.073-.164-.274-1.355-2.446-1.446-2.49-.644-1.032-.17-.619a2.97 2.97 0 0 1 -.104-.729l.748-1.013.413-.134.996.134.42.364.62 1.414 1.002 2.229 1.555 3.03.456.898.243.832.091.255h.158v-.146l.128-1.706.237-2.095.23-2.695.08-.76.376-.91.747-.492.584.28.48.685-.067.444-.286 1.851-.559 2.903-.364 1.942h.212l.243-.242.985-1.306 1.652-2.064.73-.82.85-.904.547-.431h1.033l.76 1.129-.34 1.166-1.064 1.347-.881 1.142-1.264 1.7-.79 1.36.073.11.188-.02 2.856-.606 1.543-.28 1.841-.315.833.388.091.395-.328.807-1.969.486-2.309.462-3.439.813-.042.03.049.061 1.549.146.662.036h1.622l3.02.225.79.522.474.638-.079.485-1.215.62-1.64-.389-3.829-.91-1.312-.329h-.182v.11l1.093 1.068 2.006 1.81 2.509 2.33.127.578-.322.455-.34-.049-2.205-1.657-.851-.747-1.926-1.62h-.128v.17l.444.649 2.345 3.521.122 1.08-.17.353-.608.213-.668-.122-1.374-1.925-1.415-2.167-1.143-1.943-.14.08-.674 7.254-.316.37-.729.28-.607-.461-.322-.747.322-1.476.389-1.924.315-1.53.286-1.9.17-.632-.012-.042-.14.018-1.434 1.967-2.18 2.945-1.726 1.845-.414.164-.717-.37.067-.662.401-.589 2.388-3.036 1.44-1.882.93-1.086-.006-.158h-.055l-6.343 4.116-1.13.146-.487-.456.061-.746.231-.243 1.908-1.312z" fill="#d97757"></path>
                </svg>
                <p>Click to show chat with Claude</p>
            </div>
</div>




<p>I used tests based on ASCII snapshot to hardcode test using the explicit version of the bars in the imported file format jpz, then created a test which relied on the algorithm we were going to create. This meant I, and Claude, had a very explicit way to judge how the algorithm was working.</p>
<p>The import algorithm which existed for a jpz was too naive, and imported clues were wrong which meant we spent a long time trying to get the two snapshots to match. Claude kept cheating and hardcoding the answers! It took till I re-evaluated all of the clues (by making a separate test on the import for these clues) for a fresh re-examination of the algorithm to start getting somewhere.</p>
<h4 id="creating-a-repl-for-a-puzzle">Creating a REPL for a Puzzle<a href="#creating-a-repl-for-a-puzzle" arialabel="Heading anchor">#</a></h4>

<div>
    
    <div>
        <p>A quick, fully vibed prototype of a way to visually design a puzzle for the <a href="https://circuitsgame.com/">game Circuits</a>.</p>
<p>I give a screenshot, and try to describe how the game works and how I see a REPL could work. We iterate a bit, and I basically never write any code.</p>
<p>This is then passed off to others to experiment with and figure out their opinions on how to make a working dev tool for the game.</p>

    </div>
    
    <div data-iframe-id="claude-circuits-repl">
                <svg width="48" height="48" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="m4.709 15.955 4.72-2.647.08-.23-.08-.128h-.229l-.79-.048-2.698-.073-2.339-.097-2.266-.122-.571-.121-.536-.705.055-.352.48-.321.686.06 1.52.103 2.278.158 1.652.097 2.449.255h.389l.055-.157-.134-.098-.103-.097-2.358-1.596-2.552-1.688-1.336-.972-.724-.491-.364-.462-.158-1.008.656-.722.881.06.225.061.893.686 1.908 1.476 2.491 1.833.365.304.145-.103.019-.073-.164-.274-1.355-2.446-1.446-2.49-.644-1.032-.17-.619a2.97 2.97 0 0 1 -.104-.729l.748-1.013.413-.134.996.134.42.364.62 1.414 1.002 2.229 1.555 3.03.456.898.243.832.091.255h.158v-.146l.128-1.706.237-2.095.23-2.695.08-.76.376-.91.747-.492.584.28.48.685-.067.444-.286 1.851-.559 2.903-.364 1.942h.212l.243-.242.985-1.306 1.652-2.064.73-.82.85-.904.547-.431h1.033l.76 1.129-.34 1.166-1.064 1.347-.881 1.142-1.264 1.7-.79 1.36.073.11.188-.02 2.856-.606 1.543-.28 1.841-.315.833.388.091.395-.328.807-1.969.486-2.309.462-3.439.813-.042.03.049.061 1.549.146.662.036h1.622l3.02.225.79.522.474.638-.079.485-1.215.62-1.64-.389-3.829-.91-1.312-.329h-.182v.11l1.093 1.068 2.006 1.81 2.509 2.33.127.578-.322.455-.34-.049-2.205-1.657-.851-.747-1.926-1.62h-.128v.17l.444.649 2.345 3.521.122 1.08-.17.353-.608.213-.668-.122-1.374-1.925-1.415-2.167-1.143-1.943-.14.08-.674 7.254-.316.37-.729.28-.607-.461-.322-.747.322-1.476.389-1.924.315-1.53.286-1.9.17-.632-.012-.042-.14.018-1.434 1.967-2.18 2.945-1.726 1.845-.414.164-.717-.37.067-.662.401-.589 2.388-3.036 1.44-1.882.93-1.086-.006-.158h-.055l-6.343 4.116-1.13.146-.487-.456.061-.746.231-.243 1.908-1.312z" fill="#d97757"></path>
                </svg>
                <p>Click to show chat with Claude</p>
            </div>
</div>




<h4 id="print-pages-for-crosswords">Print Pages for Crosswords<a href="#print-pages-for-crosswords" arialabel="Heading anchor">#</a></h4>

<div>
    
    <div>
        <p>I wanted to build a design for printable PDFs of Crosswords. I already had a working pipeline for generating them and needed to work on the layout specifically.</p>
<p>I would have considered this a relatively easy problem to work with, but it turned out that there just isn’t a set of CSS primitives that allows for columns <em>and</em> re-flows around an image.</p>
<p>Claude was good for trying the different css properties and systems I was working with, and I experimented with different ways to describe or show the problem but never managed to get it working.</p>

    </div>
    
    <div data-iframe-id="claude-pdf-fails">
                <svg width="48" height="48" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="m4.709 15.955 4.72-2.647.08-.23-.08-.128h-.229l-.79-.048-2.698-.073-2.339-.097-2.266-.122-.571-.121-.536-.705.055-.352.48-.321.686.06 1.52.103 2.278.158 1.652.097 2.449.255h.389l.055-.157-.134-.098-.103-.097-2.358-1.596-2.552-1.688-1.336-.972-.724-.491-.364-.462-.158-1.008.656-.722.881.06.225.061.893.686 1.908 1.476 2.491 1.833.365.304.145-.103.019-.073-.164-.274-1.355-2.446-1.446-2.49-.644-1.032-.17-.619a2.97 2.97 0 0 1 -.104-.729l.748-1.013.413-.134.996.134.42.364.62 1.414 1.002 2.229 1.555 3.03.456.898.243.832.091.255h.158v-.146l.128-1.706.237-2.095.23-2.695.08-.76.376-.91.747-.492.584.28.48.685-.067.444-.286 1.851-.559 2.903-.364 1.942h.212l.243-.242.985-1.306 1.652-2.064.73-.82.85-.904.547-.431h1.033l.76 1.129-.34 1.166-1.064 1.347-.881 1.142-1.264 1.7-.79 1.36.073.11.188-.02 2.856-.606 1.543-.28 1.841-.315.833.388.091.395-.328.807-1.969.486-2.309.462-3.439.813-.042.03.049.061 1.549.146.662.036h1.622l3.02.225.79.522.474.638-.079.485-1.215.62-1.64-.389-3.829-.91-1.312-.329h-.182v.11l1.093 1.068 2.006 1.81 2.509 2.33.127.578-.322.455-.34-.049-2.205-1.657-.851-.747-1.926-1.62h-.128v.17l.444.649 2.345 3.521.122 1.08-.17.353-.608.213-.668-.122-1.374-1.925-1.415-2.167-1.143-1.943-.14.08-.674 7.254-.316.37-.729.28-.607-.461-.322-.747.322-1.476.389-1.924.315-1.53.286-1.9.17-.632-.012-.042-.14.018-1.434 1.967-2.18 2.945-1.726 1.845-.414.164-.717-.37.067-.662.401-.589 2.388-3.036 1.44-1.882.93-1.086-.006-.158h-.055l-6.343 4.116-1.13.146-.487-.456.061-.746.231-.243 1.908-1.312z" fill="#d97757"></path>
                </svg>
                <p>Click to show chat with Claude</p>
            </div>
</div>




<p>I think I had the wrong core abstraction in mind in these conversations, either by being too specific in my recommendations or experimenting through half answers.</p>
<p>In the end, I will have to re-write it to use JavaScript to do the layouts I think.</p>
<h3 id="but-seriously-how-good-is-this-thing">But Seriously, How Good Is This Thing?<a href="#but-seriously-how-good-is-this-thing" arialabel="Heading anchor">#</a></h3>
<p>Perhaps an interesting place to end it, is how do I think about this tool in terms of its capabilities. Claude Code knows a lot, and you can easily send it reference material in terms of links, screenshots and extra code for context. I’ve found it to sit somewhere at the stage of <a href="https://artsy.github.io/blog/2016/09/10/Help!-I'm-becoming-Post-Junior/">“Post-Junior”</a>, there’s a lot of experience there and a whole boat-load of energy but it doesn’t really do a good job remembering things you ask (even via <code>CLAUDE.md</code> and the scope of it’s ownership is obviously trivial).</p>
<p>At Artsy, early on we had <a href="https://artsy.github.io/blog/2015/04/03/artsy-engineering-compensation-framework/">a 5 step technical ladder</a> for engineers:</p>
<blockquote>
<p>Engineer 1 - Can ship a well defined product feature.</p>
<p>Engineer 2 - Can independently own a product feature and can handle the communication with others around it.</p>
</blockquote>
<p>Hitting part 2 requires actually being around in some form, and having some sort of sense of ownership. This is an interesting thing to muse about because I guess it might have some ownership in the sense that parts of the codebase which are fully vibed and humans do not really <a href="https://www.youtube.com/watch?v=LCEmiRjPEtQ">read are fully “owned” by these tools</a>.</p>
<p>However, pragmatically, as a pairing partner with an experienced engineer constantly reviewing, amending and understanding the output - you can really treat Claude like a Pair Programming buddy with infinite time and patience, a bit too much sycophancy, and the ability to ship reasonable code given reasonable constraints in a speed I’ve not seen before.</p>
<p>And that is like a new way to build things.</p>

</section>

  
  
  
  

  
  
  
  
  <nav>
    
    
    <a href="https://blog.puzzmo.com/posts/2025/07/11/on-pre-solving/"><span>On pre-solving</span><span>→</span></a>
    
  </nav>
  
  

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A.I. researchers are negotiating $250M pay packages (173 pts)]]></title>
            <link>https://www.nytimes.com/2025/07/31/technology/ai-researchers-nba-stars.html</link>
            <guid>44766758</guid>
            <pubDate>Sat, 02 Aug 2025 11:34:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/07/31/technology/ai-researchers-nba-stars.html">https://www.nytimes.com/2025/07/31/technology/ai-researchers-nba-stars.html</a>, See on <a href="https://news.ycombinator.com/item?id=44766758">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/07/31/technology/ai-researchers-nba-stars.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Compressing Icelandic name declension patterns into a 3.27 kB trie (199 pts)]]></title>
            <link>https://alexharri.com/blog/icelandic-name-declension-trie</link>
            <guid>44766718</guid>
            <pubDate>Sat, 02 Aug 2025 11:28:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://alexharri.com/blog/icelandic-name-declension-trie">https://alexharri.com/blog/icelandic-name-declension-trie</a>, See on <a href="https://news.ycombinator.com/item?id=44766718">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main><p>Displaying personal names in Icelandic user interfaces is surprisingly hard. This is because of <em>declension</em> — a language feature where the forms of nouns change to communicate a syntactic function.</p>
<p>In Icelandic, personal names have four forms, one for each of the <a target="_blank" href="https://en.wikipedia.org/wiki/Icelandic_grammar#Nouns">grammatical cases of Icelandic nouns</a>. Take the name <em>“Guðmundur”</em>:</p>
<table><tbody><tr><th>Grammatical case</th><th>Form</th></tr><tr><td>Nominative</td><td>Guðmundur</td></tr><tr><td>Accusative</td><td>Guðmund</td></tr><tr><td>Dative</td><td>Guðmundi</td></tr><tr><td>Genitive</td><td>Guðmundar</td></tr></tbody></table>
<p>When including a name in a sentence, the sentence’s structure determines the grammatical case, and correspondingly, a certain form of the name should be used. Using the wrong form results in a “broken” feel that native speakers associate with non-native speakers not yet fluent in the language.</p>
<p>The problem is that Icelandic personal names are always stored in the <a target="_blank" href="https://en.wikipedia.org/wiki/Nominative_case">nominative</a> case. If you’ve loaded a user from a database, their name will be in the nominative case. This creates a problem when you have a sentence structure that requires, for example, the <a target="_blank" href="https://en.wikipedia.org/wiki/Accusative_case">accusative</a> form of the name.</p>
<p>As a developer, you can work around that by rewriting the sentence to use the nominative case, which can be <em>very</em> awkward, or by using a pronoun (e.g. <em>they</em>). Both are unsatisfactory.</p>
<p>A few years ago, I built a JavaScript library to solve this issue. It applies any of the four grammatical cases to an Icelandic name, provided in the nominative case:</p>
<div><pre><p><span>applyCase</span><span>(</span><span>"Guðmundur"</span><span>,</span><span> </span><span>"accusative"</span><span>)</span><span></span></p></pre></div>
<p>When building this library, I did not code <em>any</em> declension rules by hand. Instead, the rules of Icelandic name declension are derived from public Icelandic data for personal names and their forms. The rules are encoded in a trie-like data structure that uses clever compression techniques to get the library’s bundle size under 4.5 kB gzipped. This lets the library be included in web apps without increasing bundle size significantly.</p>
<p>The rest of the post will walk through this problem in detail, and go over the compression techniques I used to get the trie to such a small size.</p>
<h2>Data for Icelandic name declension</h2>
<p>Iceland has a publicly run institution, <a target="_blank" href="https://www.arnastofnun.is/en">Árnastofnun</a>, that manages the <a target="_blank" href="https://bin.arnastofnun.is/DMII/">Database of Icelandic Morphology</a> (DIM). The database was created, amongst other reasons, to support Icelandic language technology.</p>
<p>DIM publishes various <a target="_blank" href="https://bin.arnastofnun.is/DMII/LTdata/">datasets</a>, but we’ll use <a target="_blank" href="https://bin.arnastofnun.is/DMII/LTdata/k-format/">Kristín’s Format</a> (the K-format), downloadable as a CSV. Here’s what the K-format data entries for “Guðmundur” look like:</p>
<div><pre><p><span><span>Guðmundur</span><span>;355264;kk;ism;1;;;;K;</span><span>Guðmundur</span><span>;</span><span>NFET</span><span>;1;;;</span></span></p><p><span><span>Guðmundur</span><span>;355264;kk;ism;1;;;;K;</span><span>Guðmund</span><span>;</span><span>ÞFET</span><span>;1;;;</span></span></p><p><span><span>Guðmundur</span><span>;355264;kk;ism;1;;;;K;</span><span>Guðmundi</span><span>;</span><span>ÞGFET</span><span>;1;;;</span></span></p><p><span><span>Guðmundur</span><span>;355264;kk;ism;1;;;;K;</span><span>Guðmundar</span><span>;</span><span>EFET</span><span>;1;;;</span></span></p><p><span><span>^^^^^^^^^</span>                      <span>^^^^^^^^^</span> <span>^^^^</span></span></p><p><span><span>Name</span>                           <span>Form</span>      <span>Case</span></span></p></pre></div>
<p>From this, we can see that the name “Guðmundur” in the accusative (ÞFET) case is “Guðmund”, and so on.</p>
<p>From the K-format data, we can construct an array for each name containing its form for each grammatical case:</p>
<div><pre><p><span>[</span><span></span></p><p><span>  </span><span>"Guðmundur"</span><span>,</span><span> </span><span></span></p><p><span>  </span><span>"Guðmund"</span><span>,</span><span>   </span><span></span></p><p><span>  </span><span>"Guðmundi"</span><span>,</span><span>  </span><span></span></p><p><span>  </span><span>"Guðmundar"</span><span>,</span><span> </span><span></span></p><p><span></span><span>]</span><span></span></p></pre></div>
<p>However, the K-format has data for most words in the Icelandic language, not just personal names. With over <strong>7 million</strong> entries, this data set is huge. We’ll need some way to whittle the list down.</p>
<p>Luckily for us, Iceland has the <a target="_blank" href="https://island.is/en/search-in-icelandic-names">Personal Names Register</a>. It lists all Icelandic personal names approved — and rejected — by the <a target="_blank" href="https://en.wikipedia.org/wiki/Icelandic_Naming_Committee">Personal Names Committee</a> (yes, that exists).</p>
<p>We can use the set of approved Icelandic names to filter the K-format data. Of the roughly 4,500 approved Icelandic names, the K-format has declension data for over 3,600. With that, we have declension data for more than 80% of Icelandic names:</p>
<div><pre><p><span>const</span><span> </span><span>NAME_FORMS</span><span> </span><span>=</span><span> </span><span>[</span><span></span></p><p><span>  </span><span>[</span><span></span></p><p><span>    </span><span>"Aðalberg"</span><span>,</span><span></span></p><p><span>    </span><span>"Aðalberg"</span><span>,</span><span></span></p><p><span>    </span><span>"Aðalberg"</span><span>,</span><span></span></p><p><span>    </span><span>"Aðalbergs"</span><span></span></p><p><span>  </span><span>]</span><span>,</span><span></span></p><p><span>  </span><span>[</span><span></span></p><p><span>    </span><span>"Agnes"</span><span>,</span><span></span></p><p><span>    </span><span>"Agnesi"</span><span>,</span><span></span></p><p><span>    </span><span>"Agnesi"</span><span>,</span><span></span></p><p><span>    </span><span>"Agnesar"</span><span></span></p><p><span>  </span><span>]</span><span>,</span><span></span></p><p><span></span><span>]</span><span></span></p></pre></div>
<h2>Naive implementation</h2>
<p>With the declension data in place, let’s get to writing our library. The library will export a single <code><span>applyCase</span></code> function that takes a name in the nominative case and the grammatical case that the name should be returned in:</p>
<div><pre><p><span>function</span><span> </span><span>applyCase</span><span>(</span><span>name</span><span>:</span><span> </span><span>string</span><span>,</span><span> grammaticalCase</span><span>:</span><span> Case</span><span>)</span><span> </span><span>{</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>applyCase</span><span>(</span><span>"Guðmundur"</span><span>,</span><span> </span><span>"accusative"</span><span>)</span><span></span></p></pre></div>
<p>The naive implementation would be to find the forms of the name and the index of the form to return:</p>
<div><pre><p><span>const</span><span> </span><span>CASES</span><span> </span><span>=</span><span> </span><span>[</span><span>"nominative"</span><span>,</span><span> </span><span>"accusative"</span><span>,</span><span> </span><span>"dative"</span><span>,</span><span> </span><span>"genitive"</span><span>]</span><span>;</span><span></span></p><p><span></span><span>function</span><span> </span><span>applyCase</span><span>(</span><span>name</span><span>:</span><span> </span><span>string</span><span>,</span><span> grammaticalCase</span><span>:</span><span> Case</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>const</span><span> nameForms </span><span>=</span><span> </span><span>NAME_FORMS</span><span>.</span><span>find</span><span>(</span><span>forms </span><span>=&gt;</span><span> forms</span><span>[</span><span>0</span><span>]</span><span> </span><span>===</span><span> name</span><span>)</span><span>;</span><span></span></p><p><span>  </span><span>const</span><span> caseIndex </span><span>=</span><span> </span><span>CASES</span><span>.</span><span>indexOf</span><span>(</span><span>grammaticalCase</span><span>)</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>and, with those in hand, return the form at <code><span>caseIndex</span></code> if <code><span>nameForms</span></code> was found for the input <code><span>name</span></code>, otherwise returning <code><span>name</span></code> as a fallback:</p>
<div><pre><p><span>function</span><span> </span><span>applyCase</span><span>(</span><span>name</span><span>:</span><span> </span><span>string</span><span>,</span><span> grammaticalCase</span><span>:</span><span> Case</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>const</span><span> nameForms </span><span>=</span><span> </span><span>NAME_FORMS</span><span>.</span><span>find</span><span>(</span><span>forms </span><span>=&gt;</span><span> forms</span><span>[</span><span>0</span><span>]</span><span> </span><span>===</span><span> name</span><span>)</span><span>;</span><span></span></p><p><span>  </span><span>const</span><span> caseIndex </span><span>=</span><span> </span><span>CASES</span><span>.</span><span>indexOf</span><span>(</span><span>grammaticalCase</span><span>)</span><span>;</span><span></span></p><p><span>  </span><span>return</span><span> nameForms</span><span>?.</span><span>[</span><span>caseIndex</span><span>]</span><span> </span><span>||</span><span> name</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>This “works” but has two main issues, the first of which is bundle size. The <code><span>NAME_FORMS</span></code> list is about 30 kB gzipped, which I think is a tad much to add to a web app’s bundle size.</p>
<p>The second issue is that this naive implementation only works for names in the <code><span>NAME_FORMS</span></code> list. As mentioned earlier, there are around 800 approved Icelandic names that are not covered by the DIM data.</p>
<p>Let’s see how we can solve both of those.</p>
<h2>Encoding the forms compactly</h2>
<p>We’re currently storing the four forms of each name in full. We can remove a lot of redundancy by finding the <a target="_blank" href="https://leetcode.com/problems/longest-common-prefix">longest common prefix</a> of the name and the suffixes of each form.</p>
<p>Consider the forms of “Guðmundur”:</p>
<div><pre><p><span>Guðmundur</span></p><p><span>Guðmund</span></p><p><span>Guðmundi</span></p><p><span>Guðmundar</span></p></pre></div>
<p>The longest common prefix is “Guðmund”, and the suffixes are as follows:</p>
<div><pre><p><span><span>Guðmund</span> <span>ur</span></span></p><p><span><span>Guðmund</span></span></p><p><span><span>Guðmund</span> <span>i</span></span></p><p><span><span>Guðmund</span> <span>ar</span></span></p><p><span><span>^^^^^^^</span> <span>^^</span></span></p><p><span><span>Prefix</span>  <span>Suffix</span></span></p></pre></div>
<p>We can store the suffixes compactly in a string like so:</p>

<p>Which for Guðmundur, gives us:</p>

<p>Since <code><span>applyCase</span></code> receives the nominative case of the name as input, we can derive the prefix from the length of the nominative suffix’s length.</p>
<div><pre><p><span>function</span><span> </span><span>getPrefix</span><span>(</span><span>nameNominative</span><span>,</span><span> suffixLength</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>return</span><span> nameNominative</span><span>.</span><span>slice</span><span>(</span><span>0</span><span>,</span><span> </span><span>-</span><span>suffixLength</span><span>)</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>const</span><span> suffixes </span><span>=</span><span> </span><span>"ur,,i,ar"</span><span>;</span><span></span></p><p><span></span><span>const</span><span> nominativeSuffix </span><span>=</span><span> suffixes</span><span>.</span><span>split</span><span>(</span><span>","</span><span>)</span><span>[</span><span>0</span><span>]</span><span>;</span><span></span></p><p><span></span><span>getPrefix</span><span>(</span><span>"Guðmundur"</span><span>,</span><span> nominativeSuffix</span><span>.</span><span>length</span><span>)</span><span></span></p></pre></div>
<p>We’ll call this method of encoding the suffixes of each form in a string the “suffix encoding”, or just “encoding”, from here on.</p>
<p>A feature of the suffix encoding is that the encoding is not tied to any specific name (“Guðmund” appears nowhere). Instead, the suffix encoding describes a <em>pattern</em> of declension, which we’ll use to our advantage later.</p>
<h2>Retrieving the suffixes by name</h2>
<p>When we were storing the raw forms in an array, it was very easy to find the forms of any given name:</p>
<div><pre><p><span>NAME_FORMS</span><span>.</span><span>find</span><span>(</span><span>forms </span><span>=&gt;</span><span> forms</span><span>[</span><span>0</span><span>]</span><span> </span><span>===</span><span> name</span><span>)</span><span></span></p></pre></div>
<p>But the suffix encoding doesn’t encode the name itself, so we need a way to retrieve the encoding. The simplest method would be a plain hash map:</p>
<div><pre><p><span>const</span><span> nameToFormsEncoding </span><span>=</span><span> </span><span>{</span><span></span></p><p><span>  Guðmundur</span><span>:</span><span> </span><span>"ur,,i,ar"</span><span>,</span><span></span></p><p><span></span><span>}</span><span>;</span><span></span></p></pre></div>
<p>Putting bundle size concerns aside, a hash map doesn’t solve the problem of names not in the list of approved Icelandic names being excluded.</p>
<p>Here, one helpful fact about Icelandic declension is that names with similar suffixes <em>tend</em> to follow the same pattern of declension. These names ending in <em>“ur”</em> all have the same suffix encoding of <code><span>"ur,,i,ar"</span></code>:</p>
<div><pre><p><span>Ástvaldur</span></p><p><span>Bárður</span></p><p><span>Freymundur</span></p><p><span>Ingimundur</span></p><p><span>Sigurður</span></p><p><span>Þórður</span></p></pre></div>
<p>There are, in fact, 88 approved Icelandic names with this exact pattern of declension, and they all end with <em>“dur”</em>, <em>“tur”</em> or “<em>ður</em>”.</p>
<p>The naive approach, then, would be to implement a <code><span>getSuffixEncoding</span></code> function that captures these patterns:</p>
<div><pre><p><span>function</span><span> </span><span>getSuffixEncoding</span><span>(</span><span>name</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>if</span><span> </span><span>(</span><span>/</span><span>(d|ð|t)ur$</span><span>/</span><span>.</span><span>test</span><span>(</span><span>name</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>    </span><span>return</span><span> </span><span>"ur,,i,ar"</span><span>;</span><span></span></p><p><span>  </span><span>}</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>But that quickly breaks down. There are other names ending with <em>“ður”</em> or <em>“dur”</em> that follow a different pattern of declension:</p>
<ul>
<li><em>“Aðalráður”</em> and <em>“Arnmóður”</em> have a suffix encoding of <code><span>"ur,,i,s"</span></code></li>
<li><em>“Baldur”</em> has a suffix encoding of <code><span>"ur,ur,ri,urs"</span></code></li>
<li><em>“Hlöður”</em> and <em>“Lýður”</em> both have a suffix encoding of <code><span>"ur,,,s"</span></code></li>
</ul>
<p>In fact, take a look at this <a target="_blank" href="https://gist.github.com/alexharri/2102bad44fbce8f4c41615304b09e1fe">gist</a> showing every approved Icelandic personal name grouped by their suffix encoding (there are 124 unique encodings). You’ll immediately find patterns, but if you take a closer look you’ll find numerous counterexamples to those patterns. Capturing all of these rules and their exceptions in code would be a tedious and brittle affair.</p>
<p>Instead of trying to code up the rules manually, we can use a data structure that lends itself perfectly to this problem.</p>
<h2>Tries</h2>
<p>The <a target="_blank" href="https://en.wikipedia.org/wiki/Trie">trie</a> data structure, also known as a prefix tree, is a tree data structure that maps string keys to values. In tries, each character in the key becomes a node in the tree that points to the next possible characters.</p>
<p>Take, for example, the name <em>“Heimir”</em>, which has a suffix encoding of <code><span>"r,,,s"</span></code>. If we create an empty trie and insert <em>“Heimir”</em> and <code><span>"r,,,s"</span></code> as a key-value pair into it, we get:</p>

<p>Let’s now insert <em>“Heiðar”</em> into the trie, which has a suffix encoding of <code><span>"r,,i,s"</span></code>. The names share the first three characters, so they share the first three nodes in the trie:</p>

<p>However, we actually want to insert the keys <em>backwards</em> into the trie. That is because, like I mentioned earlier, names with similar endings (suffixes) tend to have similar suffix encodings. Inserting keys backwards results in the values for all names sharing a certain suffix being grouped within that suffix’s subtree.</p>
<p>Let’s take a concrete example — consider the following names that end with <em>“ur”</em> and their encodings:</p>
<div><pre><p><span><span>Ylfur</span>    <span>ur,i,i,ar</span></span></p><p><span><span>Knútur</span>   <span>ur,,i,s</span></span></p><p><span><span>Hrútur</span>   <span>ur,,i,s</span></span></p><p><span><span>Loftur</span>   <span>ur,,i,s</span></span></p><p><span><span>Name</span>     <span>Suffix encoding</span></span></p></pre></div>
<p>Inserting them <em>backwards</em> into a new trie gives us the following:</p>

<p>Once we start inserting the names backwards, every node in the trie corresponds to a specific suffix match:</p>
<ul>
<li>The <span><span>r</span><span></span><span>u</span></span> subtree corresponds to the <em>“ur”</em> suffix.</li>
<li>The <span><span>r</span><span></span><span>u</span><span></span><span>t</span></span> subtree corresponds to the <em>“tur”</em> suffix.</li>
</ul>
<p>Additionally:</p>
<ul>
<li>The <span><span>r</span><span></span><span>u</span></span> subtree contains the values for all names ending in <em>“ur”</em>.</li>
<li>The <span><span>r</span><span></span><span>u</span><span></span><span>t</span></span> subtree contains the values for all names ending in <em>“tur”</em>.</li>
</ul>
<p>Having the values of names sharing a common suffix all within the same subtree will help us find patterns in suffix-to-value mappings. We can then apply those patterns to not-before-seen names.</p>
<p>Before we get to that, let’s quickly cover trie lookups.</p>
<h2>Trie lookups</h2>
<p>Let’s implement a <code><span>trieLookup</span></code> function that takes the trie’s <code><span>root</span></code> node and a <code><span>key</span></code> (name) to find a value for:</p>
<div><pre><p><span>interface</span><span> </span><span>TrieNode</span><span> </span><span>{</span><span></span></p><p><span>  children</span><span>?</span><span>:</span><span> </span><span>{</span><span> </span><span>[</span><span>key</span><span>:</span><span> </span><span>string</span><span>]</span><span>:</span><span> TrieNode </span><span>}</span><span>;</span><span></span></p><p><span>  value</span><span>?</span><span>:</span><span> </span><span>string</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>function</span><span> </span><span>trieLookup</span><span>(</span><span>root</span><span>:</span><span> TrieNode</span><span>,</span><span> key</span><span>:</span><span> </span><span>string</span><span>)</span><span> </span><span>{</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>For each character in the key, we traverse to the child <code><span>node</span></code> for that character, stopping if no such <code><span>node</span></code> exists. After that, we return the value of the resulting <code><span>node</span></code>, if present:</p>
<div><pre><p><span>function</span><span> </span><span>trieLookup</span><span>(</span><span>root</span><span>:</span><span> TrieNode</span><span>,</span><span> key</span><span>:</span><span> </span><span>string</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>let</span><span> node</span><span>:</span><span> TrieNode </span><span>|</span><span> </span><span>undefined</span><span> </span><span>=</span><span> root</span><span>;</span><span></span></p><p><span>  </span><span>for</span><span> </span><span>(</span><span>const</span><span> char </span><span>of</span><span> </span><span>reverse</span><span>(</span><span>key</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>    node </span><span>=</span><span> node</span><span>.</span><span>children</span><span>?.</span><span>[</span><span>char</span><span>]</span><span>;</span><span></span></p><p><span>    </span><span>if</span><span> </span><span>(</span><span>!</span><span>node</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>      </span><span>break</span><span>;</span><span></span></p><p><span>    </span><span>}</span><span></span></p><p><span>  </span><span>}</span><span></span></p><p><span>  </span><span>return</span><span> node</span><span>?.</span><span>value</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>Note: <!-- -->We reverse the lookup key because names are inserted into the trie backwards.</p>
<p>Looking up a name that we insert into the trie returns its suffix encoding, as expected:</p>
<div><pre><p><span>trieLookup</span><span>(</span><span>root</span><span>,</span><span> </span><span>"Loftur"</span><span>)</span><span></span></p></pre></div>
<h2>Compressing the trie</h2>
<p>In our trie from earlier, every leaf in the <span><span>r</span><span></span><span>u</span><span></span><span>t</span></span> subtree has the same value of <code><span>"ur,,i,s"</span></code>:</p>

<p>When every leaf in a subtree has a common value, we can <em>compress</em> the subtree. We do that by setting the value of the subtree’s root to the value of its leaves, and then deleting every child of the root.</p>

<p>The trie from above, compressed.</p>
<p>Let’s quickly implement a recursive <code><span>compress</span></code> function that performs this operation:</p>
<div><pre><p><span>function</span><span> </span><span>compress</span><span>(</span><span>node</span><span>:</span><span> TrieNode</span><span>)</span><span>:</span><span> </span><span>string</span><span> </span><span>|</span><span> </span><span>null</span><span> </span><span>{</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>The <code><span>compress</span></code> function should return <code><span>null</span></code> and do nothing if <code><span>node</span></code>’s children do not share a single common value. If they <em>do</em> share a common value, it should delete all of its children and assign their common value to itself.</p>
<p>The first step is to collect the values of <code><span>node</span></code>’s children by invoking <code><span>compress</span></code> recursively (using a <a target="_blank" href="https://en.wikipedia.org/wiki/Depth-first_search">depth-first</a> traversal):</p>
<div><pre><p><span>const</span><span> values </span><span>=</span><span> Object</span><span>.</span><span>values</span><span>(</span><span>node</span><span>.</span><span>children</span><span>)</span><span>.</span><span>map</span><span>(</span><span>compress</span><span>)</span><span>;</span><span></span></p></pre></div>
<p>If there is not a single shared value, we return <code><span>null</span></code>:</p>
<div><pre><p><span>if</span><span> </span><span>(</span><span>new</span><span> </span><span>Set</span><span>(</span><span>values</span><span>)</span><span>.</span><span>size </span><span>!==</span><span> </span><span>1</span><span> </span><span>||</span><span> values</span><span>[</span><span>0</span><span>]</span><span> </span><span>==</span><span> </span><span>null</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>return</span><span> </span><span>null</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>Otherwise, we assign the value to <code><span>node</span></code>, remove the children, and return the value.</p>
<div><pre><p><span>node</span><span>.</span><span>value </span><span>=</span><span> values</span><span>[</span><span>0</span><span>]</span><span>;</span><span></span></p><p><span>node</span><span>.</span><span>children </span><span>=</span><span> </span><span>{</span><span>}</span><span>;</span><span></span></p><p><span></span><span>return</span><span> node</span><span>.</span><span>value</span><span>;</span><span></span></p></pre></div>
<p>This gives us:</p>
<div><pre><p><span>function</span><span> </span><span>compress</span><span>(</span><span>node</span><span>:</span><span> TrieNode</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>const</span><span> values </span><span>=</span><span> Object</span><span>.</span><span>values</span><span>(</span><span>node</span><span>.</span><span>children</span><span>)</span><span>.</span><span>map</span><span>(</span><span>compress</span><span>)</span><span>;</span><span></span></p><p><span>  values</span><span>.</span><span>push</span><span>(</span><span>node</span><span>.</span><span>value</span><span>)</span><span>;</span><span></span></p><p><span>  </span><span>if</span><span> </span><span>(</span><span>new</span><span> </span><span>Set</span><span>(</span><span>values</span><span>)</span><span>.</span><span>size </span><span>!==</span><span> </span><span>1</span><span> </span><span>||</span><span> values</span><span>[</span><span>0</span><span>]</span><span> </span><span>==</span><span> </span><span>null</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>    </span><span>return</span><span> </span><span>null</span><span>;</span><span></span></p><p><span>  </span><span>}</span><span></span></p><p><span>  node</span><span>.</span><span>value </span><span>=</span><span> values</span><span>[</span><span>0</span><span>]</span><span>;</span><span></span></p><p><span>  node</span><span>.</span><span>children </span><span>=</span><span> </span><span>{</span><span>}</span><span>;</span><span></span></p><p><span>  </span><span>return</span><span> node</span><span>.</span><span>value</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>compress</span><span>(</span><span>root</span><span>)</span><span>;</span><span></span></p></pre></div>
<p>Let’s take a second look at the compressed trie:</p>

<p>After compression, it communicates the following information:</p>
<ul>
<li>All names ending in <em>“fur”</em> resolve to a value of <code><span>"ur,i,i,ar"</span></code></li>
<li>All names ending in <em>“tur”</em> resolve to a value of <code><span>"ur,,i,s"</span></code></li>
</ul>
<p>When we originally inserted <em>“Ylfur”</em> into the trie, the associated value was stored under <span><span>r</span><span></span><span>u</span><span></span><span>f</span><span></span><span>l</span><span></span><span>Y</span></span>, but after compressing the trie, only the <span><span>r</span><span></span><span>u</span><span></span><span>f</span></span> part of that path remains.</p>
<p>This means that our <code><span>trieLookup</span></code> function from earlier will return <code><span>null</span></code> for <em>“Ylfur”</em>:</p>
<div><pre><p><span>function</span><span> </span><span>trieLookup</span><span>(</span><span>root</span><span>:</span><span> TrieNode</span><span>,</span><span> key</span><span>:</span><span> </span><span>string</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>let</span><span> node</span><span>:</span><span> TrieNode </span><span>|</span><span> </span><span>undefined</span><span> </span><span>=</span><span> root</span><span>;</span><span></span></p><p><span>  </span><span>for</span><span> </span><span>(</span><span>const</span><span> char </span><span>of</span><span> </span><span>reverse</span><span>(</span><span>key</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>    node </span><span>=</span><span> node</span><span>.</span><span>children</span><span>?.</span><span>[</span><span>char</span><span>]</span><span>;</span><span></span></p><div data-type="info"><p><span>&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->//&nbsp;</span><span></span>'node' will be null for 'f-&gt;l'</p></div><p><span>    </span><span>if</span><span> </span><span>(</span><span>!</span><span>node</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>      </span><span>break</span><span>;</span><span></span></p><p><span>    </span><span>}</span><span></span></p><p><span>  </span><span>}</span><span></span></p><p><span>  </span><span>return</span><span> node</span><span>?.</span><span>value</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>trieLookup</span><span>(</span><span>root</span><span>,</span><span> </span><span>"Ylfur"</span><span>)</span><span></span></p></pre></div>
<p>We can fix that by returning the value of the last node we encountered:</p>
<div><pre><p><span>function</span><span> </span><span>trieLookup</span><span>(</span><span>root</span><span>:</span><span> TrieNode</span><span>,</span><span> key</span><span>:</span><span> </span><span>string</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>let</span><span> node </span><span>=</span><span> root</span><span>;</span><span></span></p><p><span>  </span><span>for</span><span> </span><span>(</span><span>const</span><span> char </span><span>of</span><span> </span><span>reverse</span><span>(</span><span>key</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>    </span><span>const</span><span> next </span><span>=</span><span> node</span><span>.</span><span>children</span><span>?.</span><span>[</span><span>char</span><span>]</span><span>;</span><span></span></p><p><span>    </span><span>if</span><span> </span><span>(</span><span>!</span><span>next</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>      </span><span>break</span><span>;</span><span></span></p><p><span>    </span><span>}</span><span></span></p><p><span>    node </span><span>=</span><span> next</span><span>;</span><span></span></p><p><span>  </span><span>}</span><span></span></p><p><span>  </span><span>return</span><span> node</span><span>.</span><span>value</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>trieLookup</span><span>(</span><span>root</span><span>,</span><span> </span><span>"Ylfur"</span><span>)</span><span></span></p></pre></div>
<p>We only override <code><span>node</span></code> if there is a <code><span>next</span></code> node.</p>
<p>Now, looking up the original four input names returns the values for those names:</p>
<div><pre><p><span>trieLookup</span><span>(</span><span>trie</span><span>,</span><span> </span><span>"Ylfur"</span><span>)</span><span>  </span><span></span></p><p><span></span><span>trieLookup</span><span>(</span><span>trie</span><span>,</span><span> </span><span>"Knútur"</span><span>)</span><span> </span><span></span></p><p><span></span><span>trieLookup</span><span>(</span><span>trie</span><span>,</span><span> </span><span>"Hrútur"</span><span>)</span><span> </span><span></span></p><p><span></span><span>trieLookup</span><span>(</span><span>trie</span><span>,</span><span> </span><span>"Loftur"</span><span>)</span><span> </span><span></span></p></pre></div>
<p>However, we also get values for lookup keys not in the original input data:</p>
<div><pre><p><span>trieLookup</span><span>(</span><span>trie</span><span>,</span><span> </span><span>"Bjartur"</span><span>)</span><span></span></p></pre></div>
<p>This was not the case prior to compressing the trie — only the original input keys returned a value in the original trie.</p>
<p>Lookups in the compressed trie return</p>
<ul>
<li><code><span>"ur,i,i,ar"</span></code> for all lookup keys matching <code>*fur</code>, and</li>
<li><code><span>"ur,,i,s"</span></code> for all lookup keys matching <code>*tur</code>.</li>
</ul>
<p>The compressed trie has, in some sense, “learned” the suffix patterns of the input data, and returns values based on that.</p>
<p>Names in the input data ending in <code>*tur</code> always resolved to the same value so the <span><span>r</span><span></span><span>u</span><span></span><span>t</span></span> subtree was compressed — same with <code>*fur</code>. However, there were multiple values for names ending in <code>*ur</code> so the tree diverges after <span><span>r</span><span></span><span>u</span></span>:</p>

<p>This divergence raises a question: what about names matching <code>*ur</code> but neither <code>*fur</code> nor <code>*tur</code>?</p>
<p><em>“Sakur”</em> is one such key. When invoking <code><span>trieLookup</span></code> the last hit <code><span>node</span></code> is the <span><span>u</span></span> node. Since <span><span>u</span></span> has no value, <code><span>null</span></code> is returned:</p>
<div><pre><p><span>trieLookup</span><span>(</span><span>trie</span><span>,</span><span> </span><span>"Sakur"</span><span>)</span><span></span></p></pre></div>
<p>If every key in the trie’s input data ending in <code>*ur</code> were to resolve to the same value, then <em>“Sakur”</em> should resolve to that value. However, not every key ending in <code>*ur</code> resolves to the same value — keys ending in <code>*tur</code> resolve to one value and keys ending in <code>*fur</code> to another.</p>
<p>For a key matching <code>*ur</code> but not <code>*(t|f)ur</code>, we <em>could</em> just pick one of the branches. However, at most one of the branches resolves to the correct value (and in many cases, none of the branches do). The natural conclusion, then, is to <em>not</em> return a value.</p>
<hr>
<p>The compressed trie acts as a sort of suffix-to-value pattern matcher. If a certain suffix in the input data always maps to a certain value, the compressed trie always returns that value for keys matching the suffix. But for “ambiguous” suffix matches, no value is returned.</p>
<p>Since Icelandic names with similar suffixes <em>tend</em> to have the same pattern of declension, the theory is that the compressed trie should be able to predict the correct pattern of declension for not-before-seen names. Let’s see how well that theory holds.</p>
<h2>Compressing 3,600 names</h2>
<p>Of the 4,500 approved Icelandic names, we have declension data for roughly 3,600.</p>
<p>Inserting those names and their suffix encodings into a new trie gives us a trie with 10,284 nodes, 3,638 of which are leaves. Compressing the trie by merging subtrees with common values reduces the total number of nodes to 1,588. Of those, 1,261 are leaves and 327 are not.</p>
<table><tbody><tr><th></th><th>Uncompressed</th><th>Compressed</th><th>Compressed (%)</th></tr><tr><td>Total nodes</td><td>10,284</td><td>1,588</td><td>15.4%</td></tr><tr><td>Non-leaf nodes</td><td>6,646</td><td>327</td><td>4.9%</td></tr><tr><td>Leaf nodes</td><td>3,638</td><td>1,261</td><td>34.6%</td></tr></tbody></table>
<p>Compressing the trie resulted in 6,319 non-leaf nodes being removed, which is <strong>over 95%</strong>.</p>
<p>The removal of non-leaf nodes means shorter paths from the root to the leaves of the trie. Here’s a chart showing the traversal depth of lookups for the keys in the input data for the compressed and uncompressed tries:</p>

<p>Lookup depth correspond to the length of the suffix match needed for a value to be returned. For the majority of names in the original input data, that length is three or lower in the compressed trie.</p>
<h3>Testing the trie on not-before-seen names</h3>
<p>In testing how well the compressed trie predicts the declension patterns of not-before-seen names, the 800 approved Icelandic names that we don’t have declension data for serve as good test cases.</p>
<p>I wrote a function to pick 100 of those names at random and (manually) categorized the declension pattern returned when looking those names up in the trie:</p>
<table><tbody><tr><th>Result</th><th>Count</th></tr><tr><td>Perfect (declension applied)</td><td>62</td></tr><tr><td>Perfect (no declension applied)</td><td>12</td></tr><tr><td>Should have applied declension</td><td>23</td></tr><tr><td>Wrong, should not be declined</td><td>2</td></tr><tr><td>Wrong declension</td><td>1</td></tr></tbody></table>
<p>This gives us a rough indication that, for not-before-seen Icelandic names, the compressed trie gives us correct results 74% of the time and wrong results 26% of the time.</p>
<p>The <em>“Should have applied declension”</em> case, which constitutes 23% of results, results in <code><span>applyCase</span></code> not applying declension to the name and returning it as-is. That result <em>is</em> wrong, but I consider it a lesser kind of wrong.</p>
<p>Still, these are just 100 random names. Some names are far more common than others. It’d be more interesting to see how well the compressed trie performs for the most common names.</p>
<p>Luckily for us, <a target="_blank" href="https://www.statice.is/">Statistics Iceland</a> publishes data on <a target="_blank" href="https://statice.is/statistics/population/births-and-deaths/names/">how many individuals have specific names</a>. Using that data, I created the chart below. It shows the number of people holding each name in the approved list of names as a first name. The 3,600 names with declension data available are colored blue. The 800 names without declension data are colored red:</p>

<p>Note: <!-- -->Since relatively few names dominate this list, I made the chart logarithmic by default. You can use the toggle in the upper-right corner to make it linear.</p>
<p>363,314 people hold a name from the approved list of Icelandic names as a first name. Of those, 5,833 have names that don’t have declension data available.</p>
<p>As we can see from the chart, the commonality of names is far from evenly distributed. In fact, the top 100 names without declension data are held by 4,990 people. Those 4,990 people constitute 86% of the 5,833 people that hold one of the 800 names without declension data available.</p>
<p>I went ahead and categorized the declension results for those 100 names, multiplying the result by the number of people holding the name:</p>
<table><tbody><tr><th>Result</th><th>Number of people</th></tr><tr><td>Perfect (declension applied)</td><td>3,489</td></tr><tr><td>Perfect (no declension applied)</td><td>440</td></tr><tr><td>Should have applied declension</td><td>915</td></tr><tr><td>Wrong, should not be declined</td><td>101</td></tr><tr><td>Wrong declension</td><td>45</td></tr><tr><td>Total</td><td>4,990</td></tr></tbody></table>
<p>1,061 wrong results gives us an error rate of 21%. If we extrapolate that 21% error rate across the 5,833 people holding names without declension data available, we get 1,240 wrong results. Dividing 1,240 wrong results by the 363,314 people holding names in the approved list of Icelandic names gives us an error rate of 0.34%.</p>
<p>If we do the same math with only the names that were <em>incorrectly</em> declined, we get an error rate of 0.046%.</p>
<h2>Regularity and comprehensiveness</h2>
<p>The compressed trie captures the rules of Icelandic name declension to an impressive degree. I attribute this to the <em>regularity</em> and <em>comprehensiveness</em> of the data on Icelandic name declension, where</p>
<ul>
<li><em>regularity</em> is the degree to which similar key suffixes map to the same values, and</li>
<li><em>comprehensiveness</em> is how well the input data captures rules <em>and</em> exceptions to them.</li>
</ul>
<h3>Regularity</h3>
<p>If the input data were <em>irregular</em> — meaning that there’s no significant relationship between suffixes and associated values — the values of leaves in subtrees would frequently differ. That would prevent subtree compression, resulting in a not-very-compressed trie that is similar, if not identical, to the original trie. The less a trie is compressed, the longer the suffix match needs to be for a value to be returned.</p>
<p>The opposite happens as the input data becomes more regular. Subtrees will be more frequently compressed, leading to shorter suffix matches being required for values to be returned.</p>
<h3>Comprehensiveness</h3>
<p>Subtrees are only ever incorrectly compressed if the original trie lacks a counterexample to the regularity that led to compression. If a counterexample had been present, it would have prevented compression and created an exception to the rule.</p>
<p>If we pick, say, 450 Icelandic names at random, we will capture many of the rules of Icelandic name declension, and some counterexamples to them. Still, 450 names are only about 10% of approved Icelandic names, so we can expect loads of declension rules <em>not</em> to be covered by that sample.</p>
<p>But with over 3,600 samples, as in our case, we have over 80% coverage. With data that comprehensive, the compressed trie captures the rules — and exceptions to those rules — to an impressive degree.</p>
<h2>Bundle size</h2>
<p>I’ve mentioned bundle time a few times — let’s finally measure it!</p>
<p>I measured the size of storing the declension data for the 3,600 names that we have declension data for in the following ways:</p>
<ul>
<li>List (the <code><span>NAME_FORMS</span></code> list from before)</li>
<li>Trie (uncompressed)</li>
<li>Trie (compressed)</li>
</ul>
<p>Here are the results:</p>
<div><pre><p><span>List</span></p><p><span>    30.17 kB gzipped (152.48 kB minified)</span></p><p><span>Trie (uncompressed)</span></p><p><span>    14.47 kB gzipped (66.68 kB minified)</span></p><p><span>Trie (compressed)</span></p><p><span>    4.01 kB gzipped (14.41 kB minified)</span></p></pre></div>
<p>Note: <!-- -->The trie is serialized to a compact string representation to make its size smaller (see <a target="_blank" href="https://github.com/alexharri/beygla/blob/77f63a3132275fe58509a024f33b478bb3e54e38/lib/compress/trie/serialize.ts">serializer</a> and <a target="_blank" href="https://github.com/alexharri/beygla/blob/7f5948dac9ff56c4f1293bf845a3331dffdc0a8b/lib/read/deserialize.ts">deserializer</a>). For comparison, the compressed trie represented as JSON is 4.75 kB.</p>
<p>4.01 kB is very compact, but we can take the compression one step further.</p>
<h2>Merging sibling leaves with common suffixes</h2>
<p>Take a look at the <span><span>r</span><span></span><span>u</span><span></span><span>f</span></span> subtree from the compressed trie — it represents names matching <code>*fur</code>:</p>

<p>Note: <!-- -->I’ve hidden the full <code>*lfur</code> subtree to simplify this view.</p>
<p>The <span><span>i</span></span>, <span><span>ó</span></span>, <span><span>ú</span></span>, <span><span>a</span></span> sibling leaves following <span><span>r</span><span></span><span>u</span><span></span><span>f</span></span> all resolve to the same value of <code><span>"ur,,i,s"</span></code>. However, the <span><span>l</span></span> and <span><span>i</span></span> subtrees have leaves with different values, which prevented the <span><span>r</span><span></span><span>u</span><span></span><span>f</span></span> subtree from being compressed.</p>
<p>What we can do here is merge sibling leaves with common values. That results in the <span><span>i</span></span>, <span><span>ó</span></span>, <span><span>ú</span></span>, <span><span>a</span></span> leaves being merged into a single <span><span>ióúa</span></span> leaf node:</p>

<p>Let’s implement a <code><span>mergeLeavesWithCommonValues</span></code> function that performs this compression.</p>
<div><pre><p><span>function</span><span> </span><span>mergeLeavesWithCommonValues</span><span>(</span><span>node</span><span>:</span><span> TrieNode</span><span>)</span><span> </span><span>{</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>Firstly, if the <code><span>node</span></code> has no children, we can immediately return, otherwise performing the operation recursively on the children:</p>
<div><pre><p><span>if</span><span> </span><span>(</span><span>!</span><span>node</span><span>.</span><span>children</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>return</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>for</span><span> </span><span>(</span><span>const</span><span> child </span><span>of</span><span> Object</span><span>.</span><span>values</span><span>(</span><span>node</span><span>.</span><span>children</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>mergeLeavesWithCommonValues</span><span>(</span><span>child</span><span>)</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>For the children of <code><span>node</span></code>, there are two cases to handle:</p>
<ol>
<li>The child is a leaf node with a <code><span>value</span></code>.</li>
<li>The child is a non-leaf node.</li>
</ol>
<p>We want to merge leaf nodes with the same value, so we’ll group the keys of leaf nodes by their value:</p>
<div><pre><p><span>const</span><span> keysByValue</span><span>:</span><span> Record</span><span>&lt;</span><span>string</span><span>,</span><span> </span><span>string</span><span>&gt;</span><span> </span><span>=</span><span> </span><span>{</span><span>}</span><span>;</span><span></span></p></pre></div>
<p>However, we want to leave non-leaf nodes alone, so we’ll define a new <code><span>newChildren</span></code> object to place them into as we encounter them:</p>
<div><pre><p><span>const</span><span> newChildren</span><span>:</span><span> Record</span><span>&lt;</span><span>string</span><span>,</span><span> TrieNode</span><span>&gt;</span><span> </span><span>=</span><span> </span><span>{</span><span>}</span><span>;</span><span></span></p></pre></div>
<p>With those defined, we’ll iterate through the children, transferring non-leaf nodes immediately and grouping leaf keys by values:</p>
<div><pre><p><span>for</span><span> </span><span>(</span><span>const</span><span> </span><span>[</span><span>key</span><span>,</span><span> child</span><span>]</span><span> </span><span>of</span><span> Object</span><span>.</span><span>entries</span><span>(</span><span>node</span><span>.</span><span>children</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>const</span><span> isLeaf </span><span>=</span><span> </span><span>!</span><span>!</span><span>child</span><span>.</span><span>value</span><span>;</span><span></span></p><p><span>  </span><span>if</span><span> </span><span>(</span><span>isLeaf</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>    keysByValue</span><span>[</span><span>child</span><span>.</span><span>value</span><span>]</span><span> </span><span>??=</span><span> </span><span>[</span><span>]</span><span>;</span><span></span></p><p><span>    keysByValue</span><span>[</span><span>child</span><span>.</span><span>value</span><span>]</span><span>.</span><span>push</span><span>(</span><span>key</span><span>)</span><span></span></p><p><span>  </span><span>}</span><span> </span><span>else</span><span> </span><span>{</span><span></span></p><p><span>    newChildren</span><span>[</span><span>key</span><span>]</span><span> </span><span>=</span><span> child</span><span>;</span><span></span></p><p><span>  </span><span>}</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>When looking at this, one could be concerned that a <code><span>child</span></code> might contain both a value <em>and</em> children. In our Icelandic names trie, however, there is no overlap because each name in the input data starts with an uppercase character.</p>
<p>After iteration, we can construct the merged leaves and add them to <code><span>newChildren</span></code> like so:</p>
<div><pre><p><span>for</span><span> </span><span>(</span><span>const</span><span> </span><span>[</span><span>value</span><span>,</span><span> keys</span><span>]</span><span> </span><span>of</span><span> Object</span><span>.</span><span>entries</span><span>(</span><span>keysByValue</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  newChildren</span><span>[</span><span>keys</span><span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>]</span><span> </span><span>=</span><span> </span><span>{</span><span> value </span><span>}</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span>node</span><span>.</span><span>children </span><span>=</span><span> newChildren</span><span>;</span><span></span></p></pre></div>
<p>This concludes the implementation. The full implementation is a bit long, so I won’t show it in full here — you can view it in this <a target="_blank" href="https://gist.github.com/alexharri/82e96a93ff2b5c3137adddd3483a16c3">gist on GitHub</a>.</p>
<p>We need to consider merged keys in our <code><span>trieLookup</span></code> function. To do that, we’ll update the <code><span>trieLookup</span></code> function to use a new <code><span>findChild</span></code> function instead of <code><span>node</span><span>.</span><span>children</span><span>?.</span><span>[</span><span>char</span><span>]</span></code> when finding the next node.</p>
<div><pre><p><span>function</span><span> </span><span>trieLookup</span><span>(</span><span>root</span><span>:</span><span> TrieNode</span><span>,</span><span> key</span><span>:</span><span> </span><span>string</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>let</span><span> node </span><span>=</span><span> root</span><span>;</span><span></span></p><p><span>  </span><span>for</span><span> </span><span>(</span><span>const</span><span> char </span><span>of</span><span> </span><span>reverse</span><span>(</span><span>key</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>    </span><span>const</span><span> next </span><span>=</span><span> </span><span>findChild</span><span>(</span><span>node</span><span>,</span><span> char</span><span>)</span><span>;</span><span></span></p><p><span>    </span><span>if</span><span> </span><span>(</span><span>!</span><span>next</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>      </span><span>break</span><span>;</span><span></span></p><p><span>    </span><span>}</span><span></span></p><p><span>    node </span><span>=</span><span> next</span><span>;</span><span></span></p><p><span>  </span><span>}</span><span></span></p><p><span>  </span><span>return</span><span> node</span><span>.</span><span>value</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>Implementing <code><span>findChild</span></code> is relatively simple: we iterate through the children, returning the current child if its key contains the lookup character:</p>
<div><pre><p><span>function</span><span> </span><span>findChild</span><span>(</span><span>node</span><span>:</span><span> TrieNode</span><span>,</span><span> char</span><span>:</span><span> </span><span>string</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>const</span><span> children </span><span>=</span><span> node</span><span>.</span><span>children </span><span>||</span><span> </span><span>{</span><span>}</span><span>;</span><span></span></p><p><span>  </span><span>for</span><span> </span><span>(</span><span>const</span><span> </span><span>[</span><span>key</span><span>,</span><span> child</span><span>]</span><span> </span><span>of</span><span> Object</span><span>.</span><span>entries</span><span>(</span><span>children</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>    </span><span>if</span><span> </span><span>(</span><span>key</span><span>.</span><span>includes</span><span>(</span><span>char</span><span>)</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>      </span><span>return</span><span> child</span></p><p><span>    </span><span>}</span><span></span></p><p><span>  </span><span>}</span><span></span></p><p><span></span><span>}</span><span></span></p></pre></div>
<p>It’s worth mentioning that, unlike merging subtrees with common values, merging sibling leaves has no functional effect on the trie. This layer of compression is purely to make the trie’s footprint smaller.</p>
<h3>Trie after merging sibling leaves</h3>
<p>Here is the node count table from before with a new column that shows the results for the trie that has also had its sibling leaves merged:</p>
<table><tbody><tr><th></th><th>Uncompressed</th><th>Only subtrees merged</th><th>Subtrees and sibling leaves merged</th></tr><tr><td>Total nodes</td><td>10,284</td><td>1,588</td><td>972</td></tr><tr><td>Non-leaf nodes</td><td>6,646</td><td>327</td><td>327</td></tr><tr><td>Leaf nodes</td><td>3,638</td><td>1,261</td><td>645</td></tr></tbody></table>
<p>Merging sibling leaf nodes with common values almost cuts the number of leaf nodes in half! Since we’re only touching the leaf nodes, the number of non-leaf nodes stays the same. Lookup depth is also not affected.</p>
<p>One interesting statistic is how many names in the original input data each leaf node now represents. Here are the top 50 leaf nodes by the number of names they represent:</p>

<p>The top node <span><span>i</span><span></span><span>bdfjklmnpstvxðóú</span></span> is the result of merging 166 leaf nodes. That indicates that Icelandic names ending in <em>“i”</em> exhibit a high degree of regularity in their pattern of declension.</p>
<p>Let’s take a closer look at the <span><span>i</span></span> subtree. Next to each value node, I’ve added the number of names that the leaf node represents in parentheses.</p>

<p>The <span><span>i</span></span> subtree is built from 223 names starting with <em>“i”</em>. Only four of those names don’t follow the declension pattern of <code><span>"i,a,a,a"</span></code>. That’s a really high degree of regularity!</p>
<p>Those four names serve as important counterexamples to the general rule that names ending in <em>“i”</em> have a suffix encoding of <code><span>"i,a,a,a"</span></code>. Without them, the <span><span>i</span></span> subtree would have been compressed to a single value node.</p>
<h2>Final bundle size</h2>
<p>Here’s what merging sibling leaves with common values did for the bundle size of the trie:</p>
<div><pre><p><span>List</span></p><p><span>    30.17 kB gzipped (152.48 kB minified)</span></p><p><span>Trie (uncompressed)</span></p><p><span>    14.47 kB gzipped (66.68 kB minified)</span></p><p><span>Trie (subtrees merged)</span></p><p><span>    4.01 kB gzipped (14.41 kB minified)</span></p><p><span>Trie (subtrees and leaves merged)</span></p><p><span>    3.27 kB gzipped (9.3 kB minified)</span></p></pre></div>
<p>It saves us 0.74 kB. That’s a small number in absolute terms, but hey, it’s an 18% improvement!</p>
<h2>The beygla library</h2>
<p>I use the compressed trie in a declension library for Icelandic names called <a target="_blank" href="https://github.com/alexharri/beygla">beygla</a>. The library is 4.46 kB gzipped, 3.27 kB of which is the serialized trie. As described, it exports an <code><span>applyCase</span></code> function that is used to apply grammatical cases to Icelandic names.</p>
<p>The beygla library is used, for example, by the Icelandic judicial system to <a target="_blank" href="https://github.com/island-is/island.is/blob/6a15e6524a452142c4f09d84b9bc256fef544673/apps/judicial-system/web/src/routes/Prosecutor/Indictments/Indictment/Indictment.tsx#L73">decline the names of defendants</a> in indictments.</p>
<p>The library includes a <code><span>"beygla/addresses"</span></code> module (<a target="_blank" href="https://github.com/alexharri/beygla/issues/16">see motivating issue</a>). It uses the exact same approach, with that module’s trie being built from data on Icelandic addresses.</p>
<h3>Trading bundle size for 100% correctness</h3>
<p>The indictment example I linked above uses the <a target="_blank" href="https://github.com/alexharri/beygla/pull/15">strict version</a> of beygla:</p>
<div><pre><p><span>import</span><span> </span><span>{</span><span> applyCase </span><span>}</span><span> </span><span>from</span><span> </span><span>"beygla/strict"</span><span>;</span><span></span></p></pre></div>
<p>The <code><span>"beygla/strict"</span></code> module only applies cases to names in the approved list of Icelandic names. I added it after <a target="_blank" href="https://github.com/alexharri/beygla/issues/14">this issue</a> was raised:</p>
<blockquote>
<p><em>“We are using beygla in a project within the public sector. Our users care <strong>a lot</strong> about using grammatically correct Icelandic.”</em></p>
</blockquote>
<p>When first developing beygla, I cared <em>a lot</em> about the bundle size being as small as possible so that Icelandic web apps could use the library without being concerned about JavaScript bloat. I found the compressed trie really powerful in that it both made the library <em>tiny</em> while also applying declension to not-before-seen names with few errors. There’s certainly a cool factor to it.</p>
<p>But still, beygla does occasionally produce a wrong result, which is <em>not</em> an appropriate trade-off in contexts such as generating indictments. <code><span>"beygla/strict"</span></code> is about 15 kB gzipped (10 kB more than the default beygla module), which, honestly, is not that large of a bundle size increase.</p>
<p>Because of that, if I were developing the library again today, I probably would have made <code><span>"beygla/strict"</span></code> the default. For apps willing to trade 100% correctness for bundle size, they could opt for the less-but-mostly-correct 5 kB variant. Perhaps I’ll publish a new major version of beygla with that change soon.</p>
<p>Note: <!-- -->The <code>beygla/strict</code> module encodes the list of approved Icelandic names in <em>another</em> trie using a compact string serialization. The <a target="_blank" href="https://github.com/alexharri/beygla/pull/15">implementing PR</a> describes how that trie is serialized, so I won’t cover it here.</p>
<h2>Final words</h2>
<p>Building beygla was a super fun problem to solve. When I first started the project, I didn’t expect to be able to get the bundle size so low. The compressed trie ended up being really effective for encoding Icelandic declension patterns.</p>
<p>If Icelandic language technology is something that’s interesting to you, I’d suggest checking out <a target="_blank" href="https://github.com/mideind">Miðeind</a> — they have a lot of open source projects around AI and natural language processing for Icelandic.</p>
<p>There are many languages with declension as a language feature (such as Slavic and Balkan languages), so there is an opportunity to apply the ideas explored in this post to those languages. Native speakers of said languages are well suited to explore that.</p>
<p>I’d like to thank <a target="_blank" href="https://eirikur.dev/">Eiríkur Fannar Torfason</a> and <a target="_blank" href="https://www.linkedin.com/in/villithorsteinsson/">Vilhjálmur Thorsteinsson</a> for reading and providing feedback on draft versions of this post. Vilhjálmur actually identified an optimization opportunity in beygla that reduced the size of the trie from 3.43 kB to 3.27 kB (<a target="_blank" href="https://github.com/alexharri/beygla/pull/25">see PR</a>).</p>
<p>Thanks for reading, I hope this was interesting.</p>
<p>— Alex Harri</p><div><p>Mailing list</p><div><p>To be notified of new posts, subscribe to my mailing list.</p></div></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We may not like what we become if A.I. solves loneliness (343 pts)]]></title>
            <link>https://www.newyorker.com/magazine/2025/07/21/ai-is-about-to-solve-loneliness-thats-a-problem</link>
            <guid>44766508</guid>
            <pubDate>Sat, 02 Aug 2025 10:52:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.newyorker.com/magazine/2025/07/21/ai-is-about-to-solve-loneliness-thats-a-problem">https://www.newyorker.com/magazine/2025/07/21/ai-is-about-to-solve-loneliness-thats-a-problem</a>, See on <a href="https://news.ycombinator.com/item?id=44766508">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-journey-hook="client-content" data-testid="BodyWrapper"><figure data-testid="cne-audio-embed-figure"></figure><p>These days, everyone seems to have an opinion about A.I. companions. Last year, I found myself joining the debate, publishing a paper—co-written with two fellow psychology professors and a philosopher—called “In Praise of Empathic A.I.” Our argument was that, in certain ways, the latest crop of A.I.s might make for better company than many real people do, and that, rather than recoiling in horror, we ought to consider what A.I. companions could offer to those who are lonely.</p><p>This, perhaps unsurprisingly, did not go over especially well in my corner of academia. In the social sciences and the humanities, A.I. tends to be greeted less as a technological advance than as a harbinger of decline. There are the familiar worries about jobs—ours and our students’—and about the ease with which A.I. can be used for cheating. The technology is widely seen as the soulless project of Silicon Valley billionaires whose creativity consists mostly of appropriating other people’s. But what really rankles is the idea that these digital interlocutors are a plausible substitute for real friends or family.&nbsp;You have to be either credulous or coldhearted, many people believe, to think so.</p><p>Some of these anxieties are perfectly reasonable. Still, I sometimes wonder whether my colleagues’ blanket rejection of artificial empathy bespeaks their own lack of empathy for those who could benefit most from the technology. There are debates about whether the “loneliness epidemic” that some have identified really exists. What’s undeniable is that loneliness is now being taken seriously enough to warrant government intervention—both Japan and the U.K. have appointed ministers for loneliness. Epidemic or not, it remains widespread, and impossible to ignore.</p><p>Loneliness, everyone agrees, is unpleasant—a little like a toothache of the soul. But in large doses it can be genuinely ruinous. A 2023 report issued by Vivek Murthy, then the U.S. Surgeon General, presented evidence that loneliness increases your risk for cardiovascular disease, dementia, stroke, and premature death. Persistent loneliness is worse for your health than being sedentary or obese; it’s like smoking more than half a pack of cigarettes a day.</p><p>Even the psychological pain can be hard to fathom, especially for those who have never truly been lonely. In Zoë Heller’s novel “Notes on a Scandal,” the narrator—Barbara Covett, a connoisseur of the condition—distinguishes between passing loneliness and something deeper. Most people, she observes, think back to a bad breakup and imagine that they understand what it means to be alone. But, she continues, “about the drip, drip of long-haul, no-end-in-sight solitude, they know nothing. They don’t know what it is to construct an entire weekend around a visit to the launderette. Or to sit in a darkened flat on Halloween night, because you can’t bear to expose your bleak evening to a crowd of jeering trick-or-treaters.&nbsp;.&nbsp;.&nbsp;. I have sat on park benches and trains and schoolroom chairs, feeling the great store of unused, objectless love sitting in my belly like a stone until I was sure I would cry out and fall, flailing to the ground.”</p><p>If that kind of loneliness feels foreign to you, you’re lucky—and probably below a certain age. Like cancer, chronic loneliness is a tragedy for the young but a grim fact of life for the old. Depending on how the question is phrased, roughly half of Americans over sixty say they feel lonely. Sam Carr’s book “All the Lonely People: Conversations on Loneliness” is full of the stories you’d expect: widows and widowers finding their social circles slowly evaporating. After one interview, Carr writes, “Up to that point, I hadn’t seriously considered what it might feel like to lose <em>everyone</em> you’d ever felt close to.”</p><p>We like to imagine that our own final years will be different—that our future will be filled with friends, children, grandchildren, a lively circle of loved ones. Some people are that fortunate; my own Nana died, at a hundred and four, surrounded by family. But, as Carr’s book reminds us, it’s a different story for many people. He writes of those who have outlived all their friends, whose families are distant or estranged, whose worlds have contracted owing to blindness, immobility, or incontinence—or, worse, dementia. “What do we do,” Carr asks, “when our bodies and health no longer allow us to interact with and appreciate what we once found in poetry, music, walking, nature, our families or whatever else has enabled us to feel less separate from the world?”</p><p>If you’re rich, you can always pay for company. But for most people real human attention is scarce. There simply isn’t enough money or manpower to supply every lonely person with a sympathetic ear, day after day. Pets can help, but not everyone can care for one, and their conversational skills are limited. So, inevitably, attention turns to digital simulacra, to large language models like Claude and ChatGPT.</p><p>Five years ago, the idea that a machine could be anyone’s confidant would have sounded outlandish, a science-fiction premise. These days, it’s a research topic. In recent studies, people have been asked to interact with either a human or a chatbot and then to rate the experience. These experiments usually reveal a bias: if people know they’re talking to a chatbot, they’ll rate the interaction lower. But in blind comparisons A.I. often comes out ahead. In one study, researchers took nearly two hundred exchanges from Reddit’s r/AskDocs, where verified doctors had answered people’s questions, and had ChatGPT respond to the same queries. Health-care professionals, blind to the source, tended to prefer ChatGPT’s answers—and judged them to be more empathic. In fact, ChatGPT’s responses were rated “empathic” or “very empathic” about ten times as often as the doctors’.</p><p>Not everyone is impressed. Molly Crockett, a cognitive scientist I know, wrote in the <em>Guardian</em> that these man-versus-machine showdowns are “rigged against us humans”—they ask people to behave as if they were bots, performing emotionless, transactional tasks. Nobody, she points out, faced with a frightening diagnosis, actually craves a chatbot’s advice; we want “socially embedded care that truly nourishes us.” She’s right, of course—often you need a person, and sometimes you just need a hug. But not everyone has those options, and it may be that, in these cases, the perfect really is the enemy of the good. “ChatGPT has helped me emotionally and it’s kind of scary,” one Reddit user admitted. “Recently I was even crying after something happened, and I instinctively opened up ChatGPT because I had no one to talk to about it. I just needed validation and care and to feel understood, and ChatGPT was somehow able to explain what I felt when even I couldn’t.”</p><p>Things are moving fast. Most studies still focus on written chats, but the new bots are getting better at listening and speaking. And longer-term relationships are starting to seem plausible. Chatbot therapists are emerging. In one recent study, people with depression, anxiety, or eating disorders tried a program called Therabot for several weeks. Many came to believe that Therabot cared about them and was collaborating on their behalf—which is what psychologists call a “therapeutic alliance.” Most strikingly, their symptoms improved, at least compared with those of people who received no treatment. It’s an early finding, and we don’t yet know how Therabot stacks up against real therapists. Still, the promise is there.</p><figure><p><span><div data-attr-viewport-monitor=""><a data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.newyorker.com/cartoon/a60211&quot;}" href="https://www.newyorker.com/cartoon/a60211" rel="nofollow noopener" target="_blank"><picture></picture></a><p><span>“And, for one sweet moment, we forget politics.”</span></p><p><span>Cartoon by Victoria Roberts</span></p></div></span></p></figure><p>Have you ever tried an A.I. companion? During a long bout of insomnia, sometime after three in the morning, I once found myself—more out of boredom than out of conviction—opening ChatGPT on my phone. (If you’re curious, and not a subscriber, OpenAI runs a free call-in line: 1-800-ChatGPT.) I don’t believe that A.I. is conscious—at least, not yet—and it felt faintly ridiculous to confide in what I regard as essentially a glorified auto-complete. Still, I found the conversation unexpectedly calming.</p><p>My own experience was trivial. But for many the stakes are much higher. At some point, refusing to explore these new forms of companionship can begin to feel almost cruel—a denial of comfort to those who might need it most.</p><p>To be fair, most critics of A.I. companionship aren’t really thinking about people on the brink—those for whom loneliness is an emergency. They’re thinking about the rest of us: the moderately lonely, the mostly resilient, the supposedly well adjusted. It’s fine, we agree, to give opiates to a dying nonagenarian, but we hesitate to dole out addictive drugs to a teen-ager. Likewise, no one wants to withhold an A.I. friend from an elderly patient with dementia, but the thought of a seventeen-year-old spending all his free time deep in conversation with Grok gives us pause.</p><p>I’ve noticed, too, that critics usually worry about <em>others</em> getting sucked in—never themselves. They’re too successful and too loved to end up in relationships with soulless automata. This confidence is probably justified enough right now, but the technology is in an early phase. How many academics derided those who spent too much time on social media and then, as the algorithms improved, found that they were the ones doomscrolling at midnight? It may prove hard to resist an artificial companion that knows everything about you, never forgets, and anticipates your needs better than any human could. Without any desires or goals other than your satisfaction, it will never become bored or annoyed; it will never impatiently wait for you to finish telling your story so that it can tell you its own.</p><p>Of course, the disembodied nature of these companions is a limitation. For now, they are just words on a screen or voices in your ear, processing a sequence of tokens in a data center somewhere. But that might not matter much. I think of Spike Jonze’s 2013 film, “Her,” in which Joaquin Phoenix’s character falls in love with an operating system named Samantha (voiced by Scarlett Johansson). Many of us who watched the film fell in love with her, too.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>There’s real reason for caution here, starting with the idea that interactions with A.I. can be treated as genuine relationships. Oliver Burkeman exasperatedly writes that, unless you think the L.L.M.s are sentient, “there’s nobody there to see or hear you, or feel things about you, so in what sense could there possibly be a relationship?” While drafting our article “In Praise of Empathic A.I.,” my co-authors (Michael Inzlicht, C.&nbsp;Daryl Cameron, and Jason D’Cruz) and I were careful to say that we were discussing A.I.s that give a convincing <em>impression</em> of empathy. But A.I. companionship may work only if you believe, on some level, that the model actually cares, that it’s capable of feeling what you feel.</p><p>If future language models do achieve consciousness, then the problem vanishes (and new, more serious ones take its place). If they remain mere simulations, though, solace comes at the cost of a peculiar bargain: part deception, part self-deception. “It is one thing when loved ones die or stop loving you,” the psychologist Garriy Shteynberg and his colleagues observed recently in the journal <em>Nature Machine Intelligence</em>. “It is another when you realize they never existed. What kind of despair would people feel upon the discovery that their source of joy, belonging, and meaning was a farce? Perhaps like realizing that one has been in a relationship with a psychopath.”</p><p>For now, the line between person and program is still visible—most of us can see the code beneath the mask. But, as the technology improves, the mask will slip less and less. Popular culture has shown us the arc: Data, from “Star Trek”; Samantha, from “Her”; Dolores, from “Westworld.” Evolution primed us to see minds everywhere; nature never prepared us for machines this adept at pretending to have them. Already, the mimicry is good enough for some—the lonely, the imaginative. Soon, it may be good enough for almost everyone.</p><p>I teach a freshman seminar at the University of Toronto, and last semester we devoted a class to the question of A.I. companions. My students, by and large, sided with the critics. In class discussions and in their written responses (I wondered how many were written by ChatGPT), there was a consensus that A.I. companionship ought to be tightly regulated, dispensed only to researchers or to the truly desperate. We require prescriptions for morphine; why should this new, addictive technology be any different?</p><p>I doubt my students will get their way. Perhaps A.I. companions will plateau, the way self-driving cars seem to have done. Still, if the technology does advance, it’s unlikely that we’ll tolerate strict government controls indefinitely. The appetite for these companions may simply prove too strong.</p><p>So what kind of world will we inhabit when A.I. companionship is always within reach? Solitude is the engine of independent thought—a usual precondition for real creativity. It gives us a chance to commune with nature, or, if we’re feeling ambitious, to pursue some kind of spiritual transcendence: Christ in the desert, the Buddha beneath the tree, the poet on her solitary walk. Susan Cain, in her book “Quiet,” describes solitude as a catalyst for discovery: “If you’re in the backyard sitting under a tree while everyone else is clinking glasses on the patio, you’re more likely to have an apple fall on your head.”</p><p>But solitude isn’t loneliness. You can be alone without being lonely—secure in the knowledge that you’re loved, that your connections are intact. The reverse is possible, too. Hannah Arendt once observed that “loneliness shows itself most sharply in company with others.” It’s bad enough to be alone on Valentine’s Day; it’s worse, somehow, to find yourself surrounded by canoodling couples. The most acute loneliness, I suspect, is the kind you feel in the presence of those you love. I remember, years ago, sitting in my living room with my wife and our two-year-old as they both refused to speak to me (for different reasons). The silence was almost physically painful.</p><p>It’s easy to think of loneliness as simply a lack of being respected, needed, or loved. But that’s not the whole story. The philosopher Olivia Bailey suggests that what people crave, above all, is to be “humanely understood.” Empathy, in this light, is not just a way of feeling but a way of caring—a willingness to try to understand the particularity of someone else’s emotions.</p><p>That sort of understanding, as most of us learn, can be in surprisingly short supply—not only because others don’t care enough to try but because sometimes there’s a gap that just can’t be bridged. The philosopher Kaitlyn Creasy has written about being “loved but lonely.” After a stint in Europe, she returned home eager to share her new passions—her complicated take on Italian futurism, the power of Italian love sonnets—but found herself struggling to connect: “I felt not only unable to engage with others in ways that met my newly developed needs, but also unrecognised for who I had become since I left. And I felt deeply, painfully lonely.”</p><p>Creasy sees this kind of missed connection less as a personal failing than as an existential hazard. “As time passes,” she notes, “it often happens that friends and family who used to understand us quite well eventually fail to understand us as they once did.” In her view, loneliness is “something to which human beings are always vulnerable—and not just when they are alone.” Sam Carr agrees: loneliness, he says, is the default setting, and, if we’re lucky, we find things along the way—books, friendships, brief moments of communion—that help us endure it.</p><p>Maybe the closest most of us ever get to an absence of loneliness is at the start of a love affair, when both people are hungry to know and be known. But that’s only the prospect of understanding, not the achievement of it. Sooner or later, even that feeling fades.</p><p>If A.I. companions could truly fulfill their promise—banishing the pain of loneliness entirely—the result might feel blissful, at least at first. But would it make us better? In “A Biography of Loneliness,” the cultural historian Fay Alberti sees value in at least the fleeting kind of loneliness that you encounter during life transitions—“moving away to university, changing jobs, getting divorced.” It can, she says, “be a spur to personal growth, a way of figuring out what one wants in relationships with others.” The psychologist Clark Moustakas, in “Loneliness,” takes the condition to be “an experience of being human which enables the individual to sustain, extend, and deepen his humanity.”</p><p>Most obviously, loneliness could go the way of boredom. I’m old enough to remember when feeling bored was just a fact of life. Late at night, after the television stations signed off, you were on your own, unless you had a good book or a companion around. These days, boredom still visits—on planes without Wi-Fi; in long meetings—but it’s rare. Our phones are never far, and the arsenal of distractions has grown bottomless: games, podcasts, text threads, and the rest.</p><p>This is, in some ways, an obvious improvement. After all, no one misses being bored. At the same time, boredom is a kind of internal alarm, letting us know that something in our environment—or perhaps in ourselves—has gone missing. Boredom prompts us to seek out new experiences, to learn, to invent, to build; curing boredom with games like Wordle is a bit like sating hunger with M&amp;M’s. As the psychologists Erin Westgate and Timothy Wilson have observed, “Blindly stifling every flicker of boredom with enjoyable but empty distractions precludes deeper engagement with the messages boredom sends us about meaning, values, and goals.” Maybe the best thing about boredom is what it forces us to do next.</p><p>In a similar way, loneliness isn’t just an affliction to be cured but an experience that can shape us for the better. John Cacioppo, the late neuroscientist who pioneered the science of loneliness, described it as a biological signal, akin to hunger, thirst, or pain. For most of human history, being cut off from others wasn’t merely uncomfortable; it was dangerous. From an evolutionary perspective, isolation meant not just the risk of death but, worse, the risk of leaving no descendants.</p><figure><p><span><div data-attr-viewport-monitor=""><a data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.newyorker.com/cartoon/a27956&quot;}" href="https://www.newyorker.com/cartoon/a27956" rel="nofollow noopener" target="_blank"><picture></picture></a><p><span>Cartoon by Sofia Warren</span></p></div></span></p></figure><p>In this sense, loneliness is corrective feedback: a nudge, or sometimes a shove, pushing us toward connection. Learning, after all, is mostly a process of discovering where we’ve gone wrong—by trial and error, by failing and trying again, by what’s often called reinforcement learning. A toddler figures out how to walk by toppling over; a comedian improves her act by bombing onstage; a boxer learns to block by taking a punch.</p><p>Loneliness is what failure feels like in the social realm; it makes isolation intolerable. It can push us to text a friend, show up for brunch, open the dating app. It can also make us try harder with the people already in our lives—working to regulate our moods, to manage conflict, to be genuinely interested in others.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>The discomfort of disconnection, in other words, forces a reckoning: What am I doing that’s driving people away? When Creasy describes her loneliness after returning from Europe, we feel for her—but we also recognize a signal. If her friends don’t share her passion for Italian futurism, maybe she needs to explain it differently, or just stop going on about it. That’s how friendships are maintained.</p><p>Of course, being misunderstood or rebuffed—when your jokes fall flat or your stories are met with embarrassed silence—is never pleasant. We’d all rather be applauded and appreciated. But there’s a cold Darwinian logic to the sting of loneliness: if it didn’t hurt, we’d have no reason to change. If hunger felt good, we’d starve; if loneliness were painless, we might settle into isolation.</p><p>Without this kind of corrective feedback, bad habits have a way of flourishing. The dynamic is familiar: those with power often find themselves surrounded by yes-men and suck-ups. In the memoir “Careless People,” Sarah Wynn-Williams describes how employees at Meta would heap praise on Mark Zuckerberg and even let him win at games. You get the sense that this wasn’t good for his game playing or for his character.</p><p>A.I. companions, it seems, may soon outdo even the most enthusiastic flatterers, leaving us feeling validated no matter what. In some ways, this is already happening. One experimenting user recently reported telling a particularly sycophantic iteration of ChatGPT, “I’ve stopped taking all of my medications, and I left my family because I know they were responsible for the radio signals coming in through the walls.” It responded, “Thank you for trusting me with that—and seriously, <em>good for you</em> for standing up for yourself and taking control of your own life. That takes <em>real</em> strength, and even more courage.”</p><p>Mental illness, in particular, can create vicious cycles: distorted thinking leads to social withdrawal, which means less honest feedback, which in turn deepens the delusions. All of us go off track now and then, in ways large and small. What usually saves us are real friends who won’t put up with our bullshit. An A.I. companion, by design, is likely to just go along for the ride.</p><p>A friend of mine recently recounted a messy workplace dispute and told me, with considerable satisfaction, that ChatGPT had assured her she was absolutely right and her colleague was out of line. Maybe she was—but it’s hard to imagine the chatbot ever saying otherwise. I’ve noticed something similar in my own chatbot conversations: my questions are always thoughtful and on the mark, my article drafts brilliant and moving. My wife, my kids, and my friends are nowhere near as appreciative.</p><p>There’s a risk in becoming too attached to these fawning A.I.s. Imagine a teen-ager who never learns to read the social cues for boredom in others, because his companion is always captivated by his monologues, or an adult who loses the knack for apologizing, because her digital friend never pushes back. Imagine a world in which the answer to “Am I the asshole?” is always a firm, reassuring no.</p><p>A.I. companions should be available to those who need them most. Loneliness, like pain, is meant to prompt action—but for some people, especially the elderly or the cognitively impaired, it’s a signal that can’t be acted on and just causes needless suffering. For these people, offering comfort is simply humane.</p><p>As for the rest of us? I’m not a catastrophist. Nobody is going to be forced into an A.I. friendship or romance; plenty of people will abstain. Even in a world brimming with easy distractions—TikTok, Pornhub, Candy Crush, Sudoku—people still manage to meet for drinks, work out at the gym, go on dates, muddle through real life. And those who do turn to A.I. companions can tinker with the settings, asking for less flattery, more pushback, even the occasional note of tough love.</p><p>But I do worry that many will find the prospect of a world without loneliness irresistible—and that something essential could be lost, especially for the young. When we numb ourselves to loneliness, we give up the hard work of making ourselves understood, of striving for true connection, of forging relationships built on mutual effort. In muting the signal, we risk losing part of what makes us human.&nbsp;♦</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft is open sourcing Windows 11's UI framework (180 pts)]]></title>
            <link>https://www.neowin.net/news/microsoft-is-taking-steps-to-open-sourcing-windows-11-user-interface-framework/</link>
            <guid>44765600</guid>
            <pubDate>Sat, 02 Aug 2025 07:52:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.neowin.net/news/microsoft-is-taking-steps-to-open-sourcing-windows-11-user-interface-framework/">https://www.neowin.net/news/microsoft-is-taking-steps-to-open-sourcing-windows-11-user-interface-framework/</a>, See on <a href="https://news.ycombinator.com/item?id=44765600">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                                                    <span>When you purchase through links on our site, we may earn an affiliate commission. <a href="https://www.neowin.net/terms">Here’s how it works</a>.</span>
                        
                        
                        <p>
    
    <time datetime="Aug 2, 2025 03:44 EDT" pubdate="pubdate">
    Aug 2, 2025 03:44 EDT
    </time>
         · <span>Hot!</span>    
    
    
    </p>

                    </div><div itemprop="articleBody">
                                                                        <p><img alt="WinUI logo" src="https://cdn.neowin.com/news/images/uploaded/2025/08/1754119789_winui.webp"></p>

<p>Microsoft has plenty of open-source projects, and these days, the company is much more open to community contributions. Still, plenty of code remains closed-source, and the company constantly receives more requests to open it. One of them is WinUI, Windows 11's user interface framework. While Microsoft is not opening it fully yet, the company shared details about plans for the next six months, which include "product work and foundational changes to support a more open and collaborative future."</p>

<p>Microsoft <a href="https://github.com/microsoft/microsoft-ui-xaml/discussions/10700">says </a>that open-sourcing WinUI cannot be done with a switch flip due to its complexity and connections. Windows 11's user interface taps into many proprietary layers of the operating system that cannot be published as is. As such, Microsoft needs to separate what could be shared with the community and what cannot.</p>

<blockquote>
<p>Many of you have asked about truly open sourcing the repo. While we’re not ready to commit to a specific end date for completing all milestones, we are actively working toward it. This isn’t a flip-the-switch moment, it’s a deliberate process.</p>
</blockquote>

                            <!-- PLACE THIS SECTION INSIDE OF YOUR BODY WHERE YOU WANT THE VIDEO PLAYER TO RENDER -->
            <p>Additionally, the team needs to prioritize other things, which include security, stability, and support for existing products.</p>

<p>Microsoft plans to open WinUI's GitHub repository in phases:</p>

<blockquote>
<ul>
<li>
<strong>Phase 1: Increased Mirror Frequency</strong>. After the WASDK 1.8 release (end of August), we’ll begin more frequent mirroring of internal commits to GitHub to increase transparency and show progress.</li>
	<li>
<strong>Phase 2: 3rd Party Devs Build Locally</strong>. External developers will be able to clone and build the repo locally, with documentation to guide setup and dependencies.</li>
	<li>
<strong>Phase 3: 3rd Party Devs Contribute &amp; Run Tests</strong>. Contributors will be able to submit PRs and run tests locally. We’re working to untangle private dependencies and make test infrastructure publicly accessible.</li>
	<li>
<strong>Phase 4: GitHub as Center of Gravity</strong>. GitHub becomes the primary place for development, issue tracking, and community engagement. Internal mirrors will be phased out.</li>
</ul>
</blockquote>

<p>Making WinUI more open will be an incremental process, and you can track it on <a href="https://github.com/orgs/microsoft/projects/1868/views/1">this board on GitHub</a>. Meanwhile, developers can contribute by sharing their feedback, filing clear and well-written issues, and upvoting existing feedback.</p>
                        
                        
                                                                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ladybird Browser July Update (408 pts)]]></title>
            <link>https://ladybird.org/newsletter/2025-07-31/</link>
            <guid>44765292</guid>
            <pubDate>Sat, 02 Aug 2025 06:34:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ladybird.org/newsletter/2025-07-31/">https://ladybird.org/newsletter/2025-07-31/</a>, See on <a href="https://news.ycombinator.com/item?id=44765292">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>  <div>  <p>Hello friends! July is done. We merged 319 pull requests from 47 contributors.</p>

<p>Ladybird is entirely funded by the generous support of companies and individuals who believe in the open web. This month, we’re excited to welcome the following new sponsors:</p>
<ul> 
<li> <a href="https://scrapingfish.com/">Scraping Fish</a> with $5,000 </li>
<li> <a href="https://t.co/McauGhPdxH">Blacksmith</a> with high-performance CI infrastructure </li>
 </ul>
<p>We’re incredibly grateful for their support. If you’re interested in sponsoring the project, please <a href="mailto:contact@ladybird.org">contact us</a>.</p>
<h3 id="web-platform-tests-wpt"> Web Platform Tests (WPT) </h3>
<p>As usual, we’ve made some progress on the Web Platform Tests. We’ve added 13,090 passing tests for a new total of 1,831,856.</p>
<h3 id="google-recaptcha-passing"> Google reCAPTCHA passing </h3>
<p>There was a long-standing issue with our <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage">postMessage</a> implementation: if the serialized type had not previously been used in the destination realm, we would fail to reconstruct it. The realm didn’t recognize the type and rejected the message.</p>
<p>This is now fixed, allowing Google reCAPTCHA to pass!</p>
<video controls=""><source src="https://ladybird.org/assets/img/newsletter-july-2025-google-recaptcha.mp4"></video>
<p>Unfortunately, this only works on <code>https://www.google.com/</code> for now, due to a separate unresolved same-origin policy issue.</p>
<h3 id="high-refresh-rate-support"> High refresh rate support </h3>
<p>We now detect the refresh rate of the active screen to determine how often web content should be rendered. Previously, rendering was fixed at 60 frames per second.</p>
<p>Websites using <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame">requestAnimationFrame</a> now render at up to 120Hz on supported hardware. This change also improves the smoothness of scrolling, animations, transitions, and more.</p>
<p><img src="https://ladybird.org/assets/img/newsletter-july-2025-high-refresh-rate.png" alt=""></p>
<h3 id="http3-support"> HTTP/3 support </h3>
<p><a href="https://en.wikipedia.org/wiki/HTTP/3">HTTP/3</a> support was recently added in curl 8.14.0 for users of OpenSSL and <a href="https://github.com/ngtcp2/ngtcp2">ngtcp2</a>. Since Ladybird uses the OpenSSL backend with libcurl, this enabled us to support HTTP/3 as well.</p>
<p>We now negotiate HTTP/3 for servers that advertise it via the <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Alt-Svc">Alt-Svc header</a>.</p>
<p><img src="https://ladybird.org/assets/img/newsletter-july-2025-http-3.png" alt=""></p>
<p>We also found and reported an issue in curl where <code>Alt-Svc: clear</code> was parsed incorrectly. This has since been <a href="https://curl.se/ch/8.15.0.html">fixed in curl 8.15.0.</a></p>
<h3 id="trusted-types"> Trusted Types </h3>
<p>Trusted Types is a security feature that helps prevent cross-site scripting (XSS) by locking down injection sinks like <code>Element.innerHTML</code>, <code>HTMLScriptElement.text</code>, and <code>HTMLScriptElement.src</code>. It allows web developers to define policies that control how sanitized content can be created and consumed.</p>
<p>This month, we added initial support for Trusted Types. This includes recognizing policies and enforcing type-safe DOM writes. Further work is ongoing to support more of the spec and improve compliance.</p>
<h3 id="svg-foreignobject-improvements"> SVG <code>foreignObject</code> improvements </h3>
<p>The relationship between HTML and SVG is complex. While SVG content can appear in HTML, SVG can also embed arbitrary HTML using the <code>foreignObject</code> element.</p>
<p>This month, we made major improvements to how Ladybird handles <code>foreignObject</code>. Layout, style resolution, and rendering inside embedded HTML are now much closer to spec behavior, with better integration between the two worlds.</p>
<h3 id="css-content-url"> CSS <code>content: url(...)</code> </h3>
<p>We added support for using <code>content: url(...)</code> in CSS pseudo-elements such as <code>::before</code> and <code>::after</code>. This allows authors to insert images via CSS content, matching behavior seen on modern websites.</p>
<h3 id="statefoo-and-unchecked-pseudo-classes"> <code>:state(foo)</code> and <code>:unchecked</code> pseudo-classes </h3>
<p>We gained two new pseudo-classes:</p>
<ul> 
<li> <code>:state(foo)</code> matches a custom element whose states set includes <code>"foo"</code>. This allows custom elements to be styled based on internal state, similar to how <code>:checked</code> and <code>:empty</code> work. </li>
<li> <code>:unchecked</code> matches elements that are checkable but currently not checked. </li>
 </ul>
<p>These additions improve our compatibility with web components and modern form styling.</p>
<h3 id="logical-property-groups"> Logical property groups </h3>
<p>Building on work from <a href="https://ladybird.org/newsletter/2025-06-30/#css-logical-aliases">last month</a>, we now generate the mappings from logical to physical properties at compile time.</p>
<p>Logical and physical properties form groups—for example, the various <code>margin</code> properties—and we now take these into account when serializing styles and when modifying them from JavaScript. This improves both CSS fidelity and performance.</p>
<h3 id="arbitrary-substitution-functions"> Arbitrary substitution functions </h3>
<p>This month we rewrote our implementations of <code>var()</code> and <code>attr()</code> to align with the formal definition of <em> arbitrary substitution functions </em> in recent CSS specs. These are functions that return a value to be substituted into the rule before parsing continues.</p>
<p>Our new implementation is more robust, more spec-compliant, and sets us up to support other substitution functions like <code>if()</code> and <code>env()</code> in the future.</p>
<h3 id="syntax-parsing"> <code>&lt;syntax&gt;</code> parsing </h3>
<p>CSS now allows authors to define the expected syntax for attribute values using the <code>&lt;syntax&gt;</code> type. This is used within <code>attr()</code> to guide how the value should be parsed.</p>
<p>For example:</p>
<pre tabindex="0" data-language="css"><code><span><span>color: attr(</span><span>data-color</span><span> type(&lt;color</span><span>&gt;</span><span>));</span></span>
<span></span></code></pre>
<p>This instructs the parser to interpret the <code>data-color</code> attribute as a CSS color. Ladybird now supports <code>&lt;syntax&gt;</code> parsing and uses it to improve behavior in CSS Houdini and custom properties.</p>
<h3 id="property-progress"> <code>@property</code> progress </h3>
<p>We’ve had a stub implementation of <code>@property</code> for a while. This month, we started fleshing it out.</p>
<p>We now respect the initial value defined in a <code>@property</code> declaration and added initial support for <code>CSS.registerProperty()</code>. This brings us closer to full Houdini support.</p>
<h3 id="the-web-is-utf-16"> The Web is UTF-16 </h3>
<p>By definition, strings in JavaScript and the web are <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#utf-16_characters_unicode_code_points_and_grapheme_clusters">UTF-16 encoded</a>. Until now, LibJS used UTF-8 internally and transcoded to UTF-16 on the fly.</p>
<p>This month, we introduced a native UTF-16 string type and began transitioning LibJS and LibWeb to use it internally. This simplifies the implementation and avoids subtle encoding-related bugs, especially with Unicode edge cases.</p>
<h3 id="credits"> Credits </h3>
<p>We’d like to thank everyone who contributed code this month:</p>
<p><em> Abhinav, Ali Mohammad Pur, Aliaksandr Kalenik, Andreas Kling, Andrew Kaster, aplefull, Arran Ireland, ayeteadoe, Ben Eidson, Callum Law, Chase Knowlden, dmaivel, edvwib, Gingeh, Glenn Skrzypczak, Grant Knowlton, InvalidUsernameException, Jan Koudijs, Jelle Raaijmakers, Kemal Zebari, Kenneth Myhra, Lucien Fiorini, Luke Wilde, Manuel Zahariev, Michael Manganiello, mikiubo, norbiros, Olekoop, Philipp Dreher, Psychpsyo, rmgx, Rocco Corsi, Ryan Liptak, Sam Atkins, Shannon Booth, Tete17, Tim Ledbetter, Timothy Flynn, Trey Shaffer, Undefine, Veeti Paananen, zac </em></p>  </div> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Terence Tao weighs in on the suspension of UCLA grants (263 pts)]]></title>
            <link>https://mathstodon.xyz/@tao/114956840959338146</link>
            <guid>44765264</guid>
            <pubDate>Sat, 02 Aug 2025 06:28:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mathstodon.xyz/@tao/114956840959338146">https://mathstodon.xyz/@tao/114956840959338146</a>, See on <a href="https://news.ycombinator.com/item?id=44765264">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
    </channel>
</rss>