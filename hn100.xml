<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 05 Aug 2024 12:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Apple Intelligence beta flagged a phishing email as "Priority" (126 pts)]]></title>
            <link>https://social.panic.com/@cabel/112905175504595751</link>
            <guid>41159680</guid>
            <pubDate>Mon, 05 Aug 2024 10:12:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://social.panic.com/@cabel/112905175504595751">https://social.panic.com/@cabel/112905175504595751</a>, See on <a href="https://news.ycombinator.com/item?id=41159680">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Stop Killing Games (313 pts)]]></title>
            <link>https://eci.ec.europa.eu/045/public/</link>
            <guid>41159063</guid>
            <pubDate>Mon, 05 Aug 2024 08:06:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eci.ec.europa.eu/045/public/">https://eci.ec.europa.eu/045/public/</a>, See on <a href="https://news.ycombinator.com/item?id=41159063">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Starting Hospice (349 pts)]]></title>
            <link>https://jakeseliger.com/2024/08/04/starting-hospice-the-end/</link>
            <guid>41157974</guid>
            <pubDate>Mon, 05 Aug 2024 03:35:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jakeseliger.com/2024/08/04/starting-hospice-the-end/">https://jakeseliger.com/2024/08/04/starting-hospice-the-end/</a>, See on <a href="https://news.ycombinator.com/item?id=41157974">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						
<p>I’m entering hospice. It’s time, and realistically past time. The <a href="https://jakeseliger.com/2023/07/22/i-am-dying-of-squamous-cell-carcinoma-and-the-treatments-that-might-save-me-are-just-out-of-reach/">squamous cell carcinoma tumors are growing</a>, and the two doses of spot radiation I got on June 10 and 12 have <a href="https://jakeseliger.com/2024/07/29/more-isnt-always-better-death-and-over-treatment-as-a-downside-of-agenticness/">utterly destroyed whatever quality of life I had</a>. This weekend, a nurse came by and did some planning with <a href="https://bessstillman.substack.com/">Bess</a> and me. Our extensive efforts to find and start another clinical trial have turned out to be futile, and I’ve withdrawn from the next-best potential clinical trial, <a href="https://clinicaltrials.gov/study/NCT05935098?term=BGB-A3055&amp;rank=1">BGB-A3055</a> in Dallas, at NEXT Oncology, because there’s no feasible way for me to do it (the people at NEXT, however, are and have been amazing: if you’re looking at clinical trials or live in Dallas, schedule a consult). HonorHealth in Scottsdale, where I live, has a <a href="https://www.clinicaltrials.gov/study/NCT05973487?term=tscan002&amp;rank=1">TScan</a> slot, but my physical condition remains terrible for essentially the reasons <a href="https://jakeseliger.com/2024/07/29/more-isnt-always-better-death-and-over-treatment-as-a-downside-of-agenticness/">I’ve written about so extensively</a> that there’s no need to belabor them. My days and nights are filled with unrelenting coughing, hacking, and pain. My whole jaw area is numb, likely from tumor growth. I wonder how much (or many?) of the headache I’m experiencing actually come from tumors, rather than coughing and other problems.</p>



<p>Why hospice? Bess wants the support, after I’m done. There are rules and bureaucracy even in death, and although she admits to being bad at asking for help, she feels overwhelmed now, and certainly will be later. Her bandwidth, she says, is only for me. The details about what comes after are too much, and too distracting.&nbsp;</p>



<p>I’ll keep reading messages until close to the end, though I may not have the strength or presence of mind to reply. I exist in a hazy, druggy fog. I’ve heard Tyler Cowen say in podcasts that he finds the fascination with people’s last words to be overblown, because at the end of life people are rarely at their cognitive peaks and often forget the constraints and desires that drove much of their lives (I’m paraphrasing and have probably gotten some nuance incorrect).</p>



<p>One virtue of a prolonged end is that I feel like I’ve said everything I have to say. I don’ t know that I have a favorite, but I’m fond of “<a href="https://jakeseliger.com/2023/08/21/i-know-what-happens-to-me-after-i-die-but-what-about-those-left-behind/">I know what happens to me after I die, but what about those left behind?</a>”&nbsp;Same with “<a href="https://jakeseliger.com/2023/07/23/how-do-we-evaluate-our-lives-at-the-end-what-counts-what-matters/">How do we evaluate our lives, at the end? What counts, what matters?</a>” I’m tempted to keep citing others, but if you scroll down into the archives you will find them. I meant to turn these essays into a memoir, but that is a project never to be completed by me. Bess assures me that she’s going to complete the project and do her best to get it published. We’ve created so much together in the process of building our life, and Bess says that doesn’t need to stop just because I’m not physically here, and that putting both our baby and our book into the world gives her immediate future the purpose that she’ll badly need.</p>



<p>Though having my life cut short by cancer is horrible, I’ve still in many ways been lucky. Most people never find the person who completes them, I think, and I have. I’ve been helped so much. Numerous oncologists have gone above and beyond.&nbsp;Many people, friends and strangers, have asked if there is anything they can do to help. The #1 thing is to support Bess and our soon-to-be-born daughter, Athena, whatever “support” may mean—the most obvious way is <a href="https://www.gofundme.com/f/help-the-fight-against-cancer-with-jake-s">the Go Fund Me</a>, as any remaining funds will go to Athena. I wish she could grow up with her father, but that is not an option. Being a single mom is hard;<a href="#_ftn1" id="_ftnref1">[1]</a> growing up without a parent is hard; I cannot see what Athena’s future holds, except that I think and hope it will be bright, even though I will not be in it, save for the ways in which friends and family promise to keep me alive for her.</p>



<p>If you want to donate to research, I don’t know the absolute best place, but one good-seeming choice is <a href="https://arcinstitute.org/model">the Arc Institute</a>: “Arc researchers pursue both curiosity-driven exploration and goal-oriented research. The institute will initially focus on complex diseases, including neurodegeneration, cancer, and immune dysfunction.” They don’t have a turn-key donation page up yet, however, so send them an email and ask: “Why not?” I also got a lot of care under <a href="https://providers.ucsd.edu/details/22435/medical-oncology-cancer">Dr. Assuntina Sacco</a> at <a href="https://giveto.ucsd.edu/giving/home/gift-referral/c5ed27e7-9f35-41a3-bf51-74eb34105478">UCSD’s Moores Cancer Center</a>, which does have a turn-key donation page. Let’s make the future better in every way than the past. Donations can be made in memory of someone who has passed.</p>



<p>I wrote earlier, in “<a href="https://jakeseliger.com/2023/10/16/how-do-you-say-goodbye/">How do you say goodbye?</a>”,</p>



<blockquote>
<p>The gift must be given back, sooner or later, willingly or unwillingly, and sadly it seems that I will be made to give it back before my time. I have learned much, experienced much, made many mistakes, enjoyed my triumphs, suffered my defeats, and, most vitally, experienced love. So many people live who never get that last one, and I have been lucky enough to.</p>
</blockquote>



<p>One friend wrote to me: “You did good—when the time comes, I hope that brings you additional peace.” Many of us don’t get what I’ve had: the opportunity to live a full, generative life with people who I love and who love me back. Yet I was able to have all of it, for a time.</p>



<hr>



<p><a href="#_ftnref1" id="_ftn1">[1]</a> Though if anyone can do it, and find a way to do it successfully, it will be Bess.</p>



<figure><a href="https://jakeseliger.com/wp-content/uploads/2024/08/hospice-and-the-end.jpg"><img data-attachment-id="9004" data-permalink="https://jakeseliger.com/2024/08/04/starting-hospice-the-end/hospice-and-the-end/" data-orig-file="https://jakeseliger.com/wp-content/uploads/2024/08/hospice-and-the-end.jpg" data-orig-size="2048,1405" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="hospice and the end" data-image-description="" data-image-caption="" data-medium-file="https://jakeseliger.com/wp-content/uploads/2024/08/hospice-and-the-end.jpg?w=300" data-large-file="https://jakeseliger.com/wp-content/uploads/2024/08/hospice-and-the-end.jpg?w=550" tabindex="0" role="button" width="1024" height="702" src="https://jakeseliger.com/wp-content/uploads/2024/08/hospice-and-the-end.jpg?w=1024" alt=""></a></figure>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Japan stocks plunge as much as 7% as Asia shares extend sell-off (115 pts)]]></title>
            <link>https://www.cnbc.com/2024/08/05/asia-markets.html</link>
            <guid>41157605</guid>
            <pubDate>Mon, 05 Aug 2024 02:04:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2024/08/05/asia-markets.html">https://www.cnbc.com/2024/08/05/asia-markets.html</a>, See on <a href="https://news.ycombinator.com/item?id=41157605">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="RegularArticle-ArticleBody-5" data-module="ArticleBody" data-test="articleBody-2" data-analytics="RegularArticle-articleBody-5-2"><div id="ArticleBody-InlineImage-107383735" data-test="InlineImage"><p>Pedestrians cross an intersection in the Shibuya district of Tokyo, Japan, on Tuesday, Feb. 6, 2024.&nbsp;</p><p>Bloomberg | Bloomberg | Getty Images</p></div><div><p>Japan stocks confirmed a bear market on Monday as Asia-Pacific markets continued <a href="https://www.cnbc.com/2024/08/01/stock-market-today-live-updates.html">the sell-off</a> from last week, with the Nikkei 225 and Topix dropping over 12%.</p><p>The benchmark indexes have fallen more than 20% from their all-time highs on July 11.</p><p>The 12.4% loss on the Nikkei — which saw it close at 31,458.42 — was the worst day for the index since the "Black Monday" of 1987. The loss of 4,451.28 points on the index was also the largest in terms of points in its entire history.</p></div><div id="Placeholder-ArticleBody-Video-108015973" data-test="VideoPlaceHolder" role="region" tabindex="0" data-vilynx-id="7000347673" aria-labelledby="Placeholder-ArticleBody-Video-108015973"><p><img src="https://image.cnbcfm.com/api/v1/image/108015974-17228165621722816560-35676403890-1080pnbcnews.jpg?v=1722816561&amp;w=750&amp;h=422&amp;vtcrop=y" alt="Going back to Japanese stocks right now is like catching a falling knife: CIO"><span></span><span></span></p></div><div><p>The Nikkei also erased all its gains so far this year, moving into a loss position year to date.</p><p>The broad-based Topix also saw a rout as it tumbled 12.23% and closed at 2,227.15.</p><p>Heavyweight trading houses such as <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-2"><a href="https://www.cnbc.com/quotes/8058.T-JP/">Mitsubishi</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span>, <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-3"><a href="https://www.cnbc.com/quotes/8031.T-JP/">Mitsui and Co</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span>, <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-4"><a href="https://www.cnbc.com/quotes/8053.T-JP/">Sumitomo</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> and <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-5"><a href="https://www.cnbc.com/quotes/8002.T-JP/">Marubeni</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> all plunged over 14%, with Mitsui seeing a wipeout of almost 20% of its market cap.</p></div><div role="button" tabindex="0"><svg xmlns="http://www.w3.org/2000/svg" width="256" height="256" viewBox="0 0 256 256" aria-labelledby="title desc" role="img" focusable="false" preserveAspectRatio="xMinYMin"><title>Stock Chart Icon</title><desc>Stock chart icon</desc><g transform="translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)"><path d="M 87.994 0 H 69.342 c -1.787 0 -2.682 2.16 -1.418 3.424 l 5.795 5.795 l -33.82 33.82 L 28.056 31.196 l -3.174 -3.174 c -1.074 -1.074 -2.815 -1.074 -3.889 0 L 0.805 48.209 c -1.074 1.074 -1.074 2.815 0 3.889 l 3.174 3.174 c 1.074 1.074 2.815 1.074 3.889 0 l 15.069 -15.069 l 14.994 14.994 c 1.074 1.074 2.815 1.074 3.889 0 l 1.614 -1.614 c 0.083 -0.066 0.17 -0.125 0.247 -0.202 l 37.1 -37.1 l 5.795 5.795 C 87.84 23.34 90 22.445 90 20.658 V 2.006 C 90 0.898 89.102 0 87.994 0 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path><path d="M 65.626 37.8 v 49.45 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 23.518 L 65.626 37.8 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path><path d="M 47.115 56.312 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 42.03 L 47.115 56.312 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path><path d="M 39.876 60.503 c -1.937 0 -3.757 -0.754 -5.127 -2.124 l -6.146 -6.145 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 59.844 C 41.952 60.271 40.933 60.503 39.876 60.503 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path><path d="M 22.937 46.567 L 11.051 58.453 c -0.298 0.298 -0.621 0.562 -0.959 0.8 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 48.004 L 22.937 46.567 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path></g></svg><p><img src="https://static-redesign.cnbcfm.com/dist/a54b41835a8b60db28c2.svg" alt="hide content"></p></div><div><p>Monday's decline follows Friday's rout when Japan's <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-6"><a href="https://www.cnbc.com/quotes/.N225/">Nikkei 225</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> and Topix fell more than 5% and 6%, respectively. The broader <a href="https://www.cnbc.com/2024/08/02/japans-nikkei-set-for-almost-4percent-plunge-as-asia-markets-poised-to-open-lower.html">Topix marked its worst day in eight years</a>, while the Nikkei marked its worst day since March 2020.</p><p>In Monday trading, the <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-8"><a href="https://www.cnbc.com/quotes/JPY=/">yen</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> also strengthened to its highest level against the dollar since January, and was last trading at 142.09.</p></div><div role="button" tabindex="0"><svg xmlns="http://www.w3.org/2000/svg" width="256" height="256" viewBox="0 0 256 256" aria-labelledby="title desc" role="img" focusable="false" preserveAspectRatio="xMinYMin"><title>Stock Chart Icon</title><desc>Stock chart icon</desc><g transform="translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)"><path d="M 87.994 0 H 69.342 c -1.787 0 -2.682 2.16 -1.418 3.424 l 5.795 5.795 l -33.82 33.82 L 28.056 31.196 l -3.174 -3.174 c -1.074 -1.074 -2.815 -1.074 -3.889 0 L 0.805 48.209 c -1.074 1.074 -1.074 2.815 0 3.889 l 3.174 3.174 c 1.074 1.074 2.815 1.074 3.889 0 l 15.069 -15.069 l 14.994 14.994 c 1.074 1.074 2.815 1.074 3.889 0 l 1.614 -1.614 c 0.083 -0.066 0.17 -0.125 0.247 -0.202 l 37.1 -37.1 l 5.795 5.795 C 87.84 23.34 90 22.445 90 20.658 V 2.006 C 90 0.898 89.102 0 87.994 0 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path><path d="M 65.626 37.8 v 49.45 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 23.518 L 65.626 37.8 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path><path d="M 47.115 56.312 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 42.03 L 47.115 56.312 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path><path d="M 39.876 60.503 c -1.937 0 -3.757 -0.754 -5.127 -2.124 l -6.146 -6.145 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 59.844 C 41.952 60.271 40.933 60.503 39.876 60.503 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path><path d="M 22.937 46.567 L 11.051 58.453 c -0.298 0.298 -0.621 0.562 -0.959 0.8 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 48.004 L 22.937 46.567 z" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"></path></g></svg><p><img src="https://static-redesign.cnbcfm.com/dist/a54b41835a8b60db28c2.svg" alt="hide content"></p></div><div><p>South Korea's <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-9"><a href="https://www.cnbc.com/quotes/.KS11/">Kospi</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> fell 8.77%, closing at 2,441.55, and the small-cap Kodaq saw a 11.3% wipeout, ending at 691.28.</p><p>Due to the magnitude of the sell-off, the exchanges hit circuit breakers, halting trade for <a href="https://open.krx.co.kr/contents/OPN/05/05000000/OPN05000000.jsp#fe3647848b826aa1ddee224c4b5526f4=1&amp;amp;view=2024080505" target="_blank">the Kospi index at 2.14 p.m. Seoul and at 1.56 p.m. for the Kosdaq</a>. The halt was for 20 minutes. Circuit breakers are activated if stocks rise or fall 8%.</p><p>Investors, meanwhile, awaited key trade data from China and Taiwan this week, a well as central bank decisions from Australia and India.</p><p>China's service sector expanded at a faster pace in July, with the country's purchasing managers' index climbing to 52.1 in July, up from 51.2 in June.</p><p><a href="https://www.pmi.spglobal.com/Public/Home/PressRelease/7edab8209d2246279f622725025f6d51" target="_blank">The Caixin survey</a> said the acceleration of growth was due to faster new business growth, "supported by sustained improvements in underlying demand conditions and an expansion of services offerings."</p></div><div><p>Taiwan's benchmark index, the <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-12"><a href="https://www.cnbc.com/quotes/.TWII/">Taiwan Weighted Index</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span>, was down over 8%, dragged by tech and real estate stocks , while Australia's&nbsp;<a href="https://www.cnbc.com/quotes/.AXJO/">S&amp;P/ASX 200</a> fell 3.7% to 7,649.6.</p><p>The Reserve Bank of Australia kicks off its two-day monetary policy meeting Monday. Economists polled by Reuters expect the central bank to hold rates steady at 4.35%, but markets will monitor the monetary policy statement for clarity on whether the RBA is still considering a rate hike.</p><p>Hong Kong <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-14"><a href="https://www.cnbc.com/quotes/.HSI/">Hang Seng index</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> was down 1.61%, while mainland China's CSI 300 was down 0.48%, seeing the smallest loss in Asia.</p></div><div><p>On Friday in the U.S., stocks fell sharply as a much&nbsp;<a href="https://www.cnbc.com/2024/08/02/job-growth-totals-114000-in-july-much-less-than-expected-as-unemployment-rate-rises-to-4point3percent.html">weaker-than-anticipated jobs report</a>&nbsp;for July ignited worries that the economy could be falling into a recession.</p><p>The Nasdaq was the first of the three major benchmarks to enter correction territory, down more than 10% from its record high. The S&amp;P 500 and Dow were 5.7% and 3.9% below their all-time highs, respectively.</p><p>The <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-16"><a href="https://www.cnbc.com/quotes/.SPX/">S&amp;P 500</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> dropped 1.84%, while the&nbsp;<a href="https://www.cnbc.com/quotes/.IXIC/">Nasdaq Composite</a>&nbsp;lost 2.43%. The&nbsp;<a href="https://www.cnbc.com/quotes/.DJI/">Dow Jones Industrial Average</a>&nbsp;fell 610.71 points, or 1.51%.</p><p><em>—CNBC's Pia Singh and Hakyung Kim contributed to this report.</em></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Building Lego Machines to Destroy Tall Lego Towers (154 pts)]]></title>
            <link>https://kottke.org/24/07/building-lego-machines-to-destroy-tall-lego-towers</link>
            <guid>41157595</guid>
            <pubDate>Mon, 05 Aug 2024 02:02:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kottke.org/24/07/building-lego-machines-to-destroy-tall-lego-towers">https://kottke.org/24/07/building-lego-machines-to-destroy-tall-lego-towers</a>, See on <a href="https://news.ycombinator.com/item?id=41157595">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-container">
<p>

posted <time datetime="2024-07-31T19:12:10Z">Jul 31 @ 03:12 PM</time> by <a href="http://www.kottke.org/">Jason Kottke</a><span>  ·  <span>gift link</span></span>



</p>




<p><iframe loading="lazy" width="560" height="315" src="https://www.youtube.com/embed/HY6q9hwYcoc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p>

<p><a href="https://www.youtube.com/@BrickTechnology">Brick Technology</a>’s new video features increasingly powerful Lego machines designed to topple ever stronger towers. I love their iterative engineering videos (and those from <a href="https://www.youtube.com/@BrickExperimentChannel">Brick Experiment Channel</a>). As I’ve written about these videos <a href="https://kottke.org/23/07/can-a-lego-car-roll-downhill-forever">before</a>:</p>

<blockquote><p>They’re not even really about Lego…that’s just the playful hook to get you through the door. They’re really about science and engineering — trial and error, repeated failure, iteration, small gains, switching tactics when confronted with dead ends, how innovation can result in significant advantages. Of course, none of this is unique to engineering; these are all factors in any creative endeavor — painting, sports, photography, writing, programming. But the real magic here is seeing it all happen in just a few minutes.</p></blockquote>

<p>I am uncomfortably close to buying some Technic and Mindstorms to dork around with my own little machines. (via <a href="https://waxy.org/">waxy</a>)</p>

<ul><li><a href="https://kottke.org/tag/Lego">Lego</a></li><li><a href="https://kottke.org/tag/video">video</a></li></ul>








</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How I Program in 2024 (273 pts)]]></title>
            <link>http://akkartik.name/post/programming-2024</link>
            <guid>41157494</guid>
            <pubDate>Mon, 05 Aug 2024 01:28:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://akkartik.name/post/programming-2024">http://akkartik.name/post/programming-2024</a>, See on <a href="https://news.ycombinator.com/item?id=41157494">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p>Jul 31, 2024</p>
<p><b>How I program in 2024</b></p><p>
I talk a lot here about <a href="https://akkartik.name/freewheeling">using computers freely</a>, how to select programs to use, how to decide if a program is trustworthy infrastructure one can safely depend on in the long term. I also spend my time building such infrastructure, because there isn't a lot of it out there. As I do so, I'm always acutely aware that <em>I'm just not very good at it.</em> At best I can claim I try to compensate for limited means with good, transparent intentions.

</p><p>
I just spent <a href="https://akkartik.name/post/2024-06-05-devlog">a month</a> of my free time, off and on, <a href="https://akkartik.name/post/2024-07-22-devlog">rewriting the core</a> of a program I've been using and incrementally modifying for 2 years. I've been becalmed since. Partly this is the regular cadence of my subconscious reflecting on what just happened, what I learned from it, taking some time to decide where to go next. But I'm also growing aware this time of a broader arc in my life:

<!-- more -->

</p><ul>

<li> Back in 2015 I was suspicious of abstractions and big on tests and version control. Code seemed awash in bad abstractions, while tests and versions seemed like the key advances of the 2000s. I thought our troubles stemmed from bad incentives, using abstractions too much, and not using tests and versions enough. <a href="https://github.com/akkartik/mu1">Mu1</a> was an attempt at designing a platform with tests and <a href="https://akkartik.name/post/wart-layers">layers</a> (more like versions, less like abstractions) as foundational constraints influencing everything else.

</li><li> In 2017 I started reworking Mu1 into the current <a href="https://github.com/akkartik/mu">Mu</a>. <a href="https://github.com/akkartik/mu/tree/main/linux/bootstrap#readme">At the start</a> I used all my new ideas for tests and layers. But over time I stopped using them. Mu today has tons of tests, but they are conventional tests, and I never got around to porting over my infrastructure for layers.

</li><li> In 2022 I started working on <a href="https://akkartik.name/freewheeling-apps">Freewheeling Apps</a>. I started out with no tests, got frustrated at some point and wrote thorough tests for a core piece, the text editor. But I struggled to find ways to test the rest, and also found I was getting by fine anyway.

</li><li> Now it's 2024, and a month ago I deleted all my tests. I also started radically reworking my text editor, in a way that would have made me worried about merge conflicts with other Freewheeling Apps. In effect I stopped thinking about version control. Giving up tests and versions, I ended up with a much better program. The cognitive dissonance is now impossible to ignore.

</li></ul>

<p>
After mulling it over for a few days, I think my current synthesis on <a href="https://akkartik.name/freewheeling">programming durable things</a> is:

</p><ol>

<li> Building durably for lots of people is too hard, just don't even try. Be ruled by what you know well, who you know well and <a href="https://en.wikipedia.org/wiki/Dunbar%27s_number">Dunbar's number</a>.
</li><li> Most software out there is incurably infected by incentives to serve lots of people in the short term. Focus as far as possible on software without lots of logos on the website, stuff that is easy to build, has few dependencies, definitely doesn't auto-update. Once you filter by these restrictions, the amount of durable software humanity has created so far is tiny.
</li><li> Small changes in context (people/places/features you want to support) often radically change how well a program fits its context. Our dominant milieu of short-termism doesn't prepare us for this fact.
</li><li> Given this tiny body of past work and low coverage per program, any new program you decide to build is quite likely striking out into the unknown in some way or other. You often won't know <em>quite</em> what you're doing in some direction or other. (In my example above, I was trying to insert special "drawing lines" in a text editor. Questions that raised: can the cursor lie on a drawing? Can I try to draw in one line while the cursor is on another? Drawings are taller than text lines. Can a drawing be partially visible at top of screen? Can I draw on a partially visible drawing? My answers to these questions were sub-optimal for a long time, leading to hacks piled on hacks.)
</li><li> Types, abstractions, tests, versions, state machines, immutability, formal analysis, all these are tools available to us in unfamiliar terrain. Use them to taste.
</li><li> You'll inevitably end up over-using some of these tools, the ones you gravitate towards. The ideal quantity to use these tools is tiny, much more miniscule than any of us is trained to think by our dominant milieu of short-termism. The excess is <em>tech debt.</em> It keeps us from noticing that a program is unnecessarily complex, less durable than it could be, harder to change when the context shifts.
</li><li> When your understanding of the context stabilizes, there's value in throwing away vast swathes of a program, and redoing it from scratch.
</li><li> Before you set out to rewrite, you have to spend some time importing everything into your brain at once. Everything you want from the program, all the scenarios the program has to cater to. This is hard. The goal is to get to a point where you can build everything all at once.
</li><li> Build everything all at once.

</li></ol>

<p>
In my case, tests and versions actively hindered getting to the end of this evolution. Tests let me forget concerns. Version control kept me attached to the past. Both were counter-productive. It took a major reorientation to let go of them.

</p><p>
All the software I've written in my life — and all my Freewheeling Apps so far — are at level 6 in this trajectory. Only <a href="https://akkartik.name/post/2024-07-22-devlog">the output of the past month</a> feels like it might have gotten to level 9. We'll see.

</p><p>
It seems likely that a program can grow so complex it becomes impossible to import into memory in level 8. That seems to describe most software so far, certainly most software written by more than a couple of people. Even my text editor, small as it is, was daunting enough I spent much of the month girding myself to face the terror.

</p><p>
Not all software necessarily <em>needs</em> to get to level 9. I think many of my Freewheeling Apps are simple enough and evolve slowly enough that they would stabilize to a bug-free state with just a handful of people using them, regardless of my initial design choices. Particularly now that I know how to streamline one complex piece at their core. Still, it's good to be aware of how things <em>might</em> be improved, if it becomes worthwhile.

</p><p>
One thing that feels definitely useful in getting to level 9 is <a href="https://www.youtube.com/watch?v=rX0ItVEVjHc">data-oriented design</a>. It's not a tool you can blindly apply but a way of thinking you have to grow into, to look past immediate data structure choices at the big picture of how your program accesses data. Just don't let tools like <a href="https://en.wikipedia.org/wiki/Entity_component_system">ECS</a> blind you to the essential intellectual activity.

</p><p>
These levels are probably not quite right. I'm probably under-estimating tools I have less experience with.

</p><p>
I wonder what levels lie beyond these.

</p><p>
(I last wrote some thoughts on how I program <a href="https://akkartik.name/post/four-repos">back in 2019</a>. It's nice to see signs of evolution.)


  </p><p>
  <em>Comments gratefully appreciated. Please send them to me
  <a href="http://akkartik.name/contact">by any method of your choice</a> and I'll include them
  here.</em>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Free e-book about WebGPU Programming (254 pts)]]></title>
            <link>https://shi-yan.github.io/webgpuunleashed/</link>
            <guid>41156872</guid>
            <pubDate>Sun, 04 Aug 2024 22:56:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://shi-yan.github.io/webgpuunleashed/">https://shi-yan.github.io/webgpuunleashed/</a>, See on <a href="https://news.ycombinator.com/item?id=41156872">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
            <div><p><img onclick="openImage(this)" src="https://shi-yan.github.io/webgpuunleashed/thumb_meta.png" original_src="meta.png" alt="By Shi Yan" sources="[]"></p><p>By Shi Yan</p></div><p>Welcome to "WebGPU Unleashed" - your gateway to the dynamic world of graphics programming. This free book will teach you graphics programming in JavaScript using WebGPU, drawing from my own learning journey.</p><p>Why did I write this book? Recently, a friend asked me what his child should learn to get started with graphics programming. A few years ago, OpenGL was the go-to API for beginners, with DirectX as an alternative for those interested in game development.</p><p>However, the graphics API landscape has evolved significantly in recent years. A new generation of APIs has emerged, including Vulkan, Metal, and DirectX 12. These APIs are more lightweight and performant but require more verbose code. While similar in concept, they're more fragmented than OpenGL, with some only available on specific platforms. This fragmentation often confuses beginners, leaving them unsure which API to start with.</p><p>Enter WebGPU, a new graphics API conceptually similar to others but with a different goal: bringing native graphics capabilities to the web. Unlike other APIs with native implementations in graphics drivers, WebGPU is essentially a wrapper for the aforementioned APIs. This makes WebGPU appealing as a first API for several reasons:</p><ol><li><p>As a wrapper, WebGPU aims to be a common denominator of other APIs, making it relatively simpler.</p></li><li><p>As the web graphics API standard, WebGPU is available on all platforms.</p></li><li><p>For those interested in native development, there are WebGPU implementations available in C++ and Rust.</p></li></ol><p>With WebGPU's recent release, now is an ideal time to learn it.</p><p>We'll begin with an overview of GPU drivers and the GPU pipeline - topics often overlooked in other graphics API books. Many students who can implement simple graphics applications lack understanding of GPU drivers and how graphics software interacts with underlying hardware. I believe covering these topics is essential.</p><p>Following this overview, we'll explore the simplest usage of WebGPU: drawing triangles, the basic elements of 3D graphics. While this might sound basic, mastering it is crucial for understanding more complex concepts. We'll then cover 2D rendering techniques and 3D scene control, necessary skills for implementing full graphics applications for the web.</p><p>In the advanced chapters, we'll look into GPU computing using WebGPU and explore advanced rendering techniques beyond simple triangles. GPU compute on the web, previously unavailable through WebGL, is now possible with WebGPU. This opens up exciting possibilities, including potential GPU AI inference for web applications.</p><p>As the book's final tutorial, we'll implement Gaussian splatting rendering - a complex example combining GPU compute and rendering. At the time of writing, Gaussian splatting is a cutting-edge scene representation and rendering technique, capable of capturing and rendering 3D scenes from real life with a high degree of realism and real-time performance.</p><div><p><iframe src="https://www.youtube.com/embed/QUGcWsJCCmU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p></div><p>I've put considerable effort into presenting this book's content. Initially planned as a traditional book, I realized that an interactive web format would be more effective for a tech book. This approach allows for:</p><ul><li><p>Better explanation of concepts through videos</p></li><li><p>Easy citation of references via links</p></li><li><p>An online playground hosting all code samples, where you can run demos and modify code</p></li></ul><a href="https://shi-yan.github.io/webgpuunleashed/code/code.html#5_06_skeleton_animation" target="_blank"><svg style="margin-right:10px;vertical-align: middle;" xmlns="http://www.w3.org/2000/svg" height="32" width="32" fill="#dadadb" viewBox="0 -960 960 960"><path d="M189-160q-60 0-102.5-43T42-307q0-9 1-18t3-18l84-336q14-54 57-87.5t98-33.5h390q55 0 98 33.5t57 87.5l84 336q2 9 3.5 18.5T919-306q0 61-43.5 103.5T771-160q-42 0-78-22t-54-60l-28-58q-5-10-15-15t-21-5H385q-11 0-21 5t-15 15l-28 58q-18 38-54 60t-78 22Zm3-80q19 0 34.5-10t23.5-27l28-57q15-31 44-48.5t63-17.5h190q34 0 63 18t45 48l28 57q8 17 23.5 27t34.5 10q28 0 48-18.5t21-46.5q0 1-2-19l-84-335q-7-27-28-44t-49-17H285q-28 0-49.5 17T208-659l-84 335q-2 6-2 18 0 28 20.5 47t49.5 19Zm348-280q17 0 28.5-11.5T580-560q0-17-11.5-28.5T540-600q-17 0-28.5 11.5T500-560q0 17 11.5 28.5T540-520Zm80-80q17 0 28.5-11.5T660-640q0-17-11.5-28.5T620-680q-17 0-28.5 11.5T580-640q0 17 11.5 28.5T620-600Zm0 160q17 0 28.5-11.5T660-480q0-17-11.5-28.5T620-520q-17 0-28.5 11.5T580-480q0 17 11.5 28.5T620-440Zm80-80q17 0 28.5-11.5T740-560q0-17-11.5-28.5T700-600q-17 0-28.5 11.5T660-560q0 17 11.5 28.5T700-520Zm-360 60q13 0 21.5-8.5T370-490v-40h40q13 0 21.5-8.5T440-560q0-13-8.5-21.5T410-590h-40v-40q0-13-8.5-21.5T340-660q-13 0-21.5 8.5T310-630v40h-40q-13 0-21.5 8.5T240-560q0 13 8.5 21.5T270-530h40v40q0 13 8.5 21.5T340-460Zm140-20Z"></path></svg>Launch Playground - 5_06_skeleton_animation</a><p>All code snippets in the book are cross-referenced from the playground samples. To avoid overwhelming readers with verbose code, I've included only relevant code segments in the articles. navigation between the text and the playground is very easy .</p><p>Another advantage of this online format is the ability to receive reader feedback. If you have suggestions or improvements, please feel free to share them through GitHub discussions and issues.</p><p>Let's embark on this WebGPU journey together!</p>
        </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Age is a simple, modern and secure file encryption tool, format, and Go library (144 pts)]]></title>
            <link>https://github.com/FiloSottile/age</link>
            <guid>41156793</guid>
            <pubDate>Sun, 04 Aug 2024 22:42:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/FiloSottile/age">https://github.com/FiloSottile/age</a>, See on <a href="https://news.ycombinator.com/item?id=41156793">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
    <themed-picture data-catalyst-inline="true"><picture>
        <source media="(prefers-color-scheme: dark)" srcset="https://github.com/FiloSottile/age/raw/main/logo/logo_white.svg">
        <source media="(prefers-color-scheme: light)" srcset="https://github.com/FiloSottile/age/raw/main/logo/logo.svg">
        <img alt="The age logo, a wireframe of St. Peters dome in Rome, with the text: age, file encryption" width="600" src="https://github.com/FiloSottile/age/raw/main/logo/logo.svg">
    </picture></themed-picture>
</p>
<p dir="auto"><a href="https://pkg.go.dev/filippo.io/age" rel="nofollow"><img src="https://camo.githubusercontent.com/92ae44bb521718570d4d40f7e7983eb8af43e8109cd03ad3a85b59a2c964c0ba/68747470733a2f2f706b672e676f2e6465762f62616467652f66696c6970706f2e696f2f6167652e737667" alt="Go Reference" data-canonical-src="https://pkg.go.dev/badge/filippo.io/age.svg"></a>
<a href="https://filippo.io/age/age.1" rel="nofollow"><img src="https://camo.githubusercontent.com/f533193192e68df274d6d526b7dd289469b3b5ee6da9cb96231d23802dacce9a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6167652831292d6d616e253230706167652d6c6967687467726579" alt="man page" data-canonical-src="https://img.shields.io/badge/age(1)-man%20page-lightgrey"></a>
<a href="https://age-encryption.org/v1" rel="nofollow"><img src="https://camo.githubusercontent.com/ecee07dc5914d937dc21247830190264d48cad226493ae8a936cc3de49edcfc4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2543322541372532332d73706563696669636174696f6e2d626c756576696f6c6574" alt="C2SP specification" data-canonical-src="https://img.shields.io/badge/%C2%A7%23-specification-blueviolet"></a></p>
<p dir="auto">age is a simple, modern and secure file encryption tool, format, and Go library.</p>
<p dir="auto">It features small explicit keys, no config options, and UNIX-style composability.</p>
<div data-snippet-clipboard-copy-content="$ age-keygen -o key.txt
Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p
$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age
$ age --decrypt -i key.txt data.tar.gz.age > data.tar.gz"><pre><code>$ age-keygen -o key.txt
Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p
$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p &gt; data.tar.gz.age
$ age --decrypt -i key.txt data.tar.gz.age &gt; data.tar.gz
</code></pre></div>
<p dir="auto">📜 The format specification is at <a href="https://age-encryption.org/v1" rel="nofollow">age-encryption.org/v1</a>. age was designed by <a href="https://twitter.com/Benjojo12" rel="nofollow">@Benjojo12</a> and <a href="https://twitter.com/FiloSottile" rel="nofollow">@FiloSottile</a>.</p>
<p dir="auto">📬 Follow the maintenance of this project by subscribing to <a href="https://filippo.io/newsletter" rel="nofollow">Maintainer Dispatches</a>!</p>
<p dir="auto">🦀 An alternative interoperable Rust implementation is available at <a href="https://github.com/str4d/rage">github.com/str4d/rage</a>.</p>
<p dir="auto">🔑 Hardware PIV tokens such as YubiKeys are supported through the <a href="https://github.com/str4d/age-plugin-yubikey">age-plugin-yubikey</a> plugin.</p>
<p dir="auto">✨ For more plugins, implementations, tools, and integrations, check out the <a href="https://github.com/FiloSottile/awesome-age">awesome age</a> list.</p>
<p dir="auto">💬 The author pronounces it <code>[aɡe̞]</code> <a href="https://translate.google.com/?sl=it&amp;text=aghe" rel="nofollow">with a hard <em>g</em></a>, like GIF, and is always spelled lowercase.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<markdown-accessiblity-table><table>
    <tbody><tr>
        <td>Homebrew (macOS or Linux)</td>
        <td>
            <code>brew install age</code>
        </td>
    </tr>
    <tr>
        <td>MacPorts</td>
        <td>
            <code>port install age</code>
        </td>
    </tr>
    <tr>
        <td>Alpine Linux v3.15+</td>
        <td>
            <code>apk add age</code>
        </td>
    </tr>
    <tr>
        <td>Arch Linux</td>
        <td>
            <code>pacman -S age</code>
        </td>
    </tr>
    <tr>
        <td>Debian 12+ (Bookworm)</td>
        <td>
            <code>apt install age</code>
        </td>
    </tr>
    <tr>
        <td>Debian 11 (Bullseye)</td>
        <td>
            <code>apt install age/bullseye-backports</code>
            (<a href="https://backports.debian.org/Instructions/#index2h2" rel="nofollow">enable backports</a> for age v1.0.0+)
        </td>
    </tr>
    <tr>
        <td>Fedora 33+</td>
        <td>
            <code>dnf install age</code>
        </td>
    </tr>
    <tr>
        <td>Gentoo Linux</td>
        <td>
            <code>emerge app-crypt/age</code>
        </td>
    </tr>
    <tr>
        <td>NixOS / Nix</td>
        <td>
            <code>nix-env -i age</code>
        </td>
    </tr>
    <tr>
        <td>openSUSE Tumbleweed</td>
        <td>
            <code>zypper install age</code>
        </td>
    </tr>
    <tr>
        <td>Ubuntu 22.04+</td>
        <td>
            <code>apt install age</code>
        </td>
    </tr>
    <tr>
        <td>Void Linux</td>
        <td>
            <code>xbps-install age</code>
        </td>
    </tr>
    <tr>
        <td>FreeBSD</td>
        <td>
            <code>pkg install age</code> (security/age)
        </td>
    </tr>
    <tr>
        <td>OpenBSD 6.7+</td>
        <td>
            <code>pkg_add age</code> (security/age)
        </td>
    </tr>
    <tr>
        <td>Chocolatey (Windows)</td>
        <td>
            <code>choco install age.portable</code>
        </td>
    </tr>
    <tr>
        <td>Scoop (Windows)</td>
        <td>
            <code>scoop bucket add extras &amp;&amp; scoop install age</code>
        </td>
    </tr>
    <tr>
        <td>pkgx</td>
        <td>
            <code>pkgx install age</code>
        </td>
    </tr>
</tbody></table></markdown-accessiblity-table>
<p dir="auto">On Windows, Linux, macOS, and FreeBSD you can use the pre-built binaries.</p>
<div data-snippet-clipboard-copy-content="https://dl.filippo.io/age/latest?for=linux/amd64
https://dl.filippo.io/age/v1.1.1?for=darwin/arm64
..."><pre><code>https://dl.filippo.io/age/latest?for=linux/amd64
https://dl.filippo.io/age/v1.1.1?for=darwin/arm64
...
</code></pre></div>
<p dir="auto">If your system has <a href="https://go.dev/dl/" rel="nofollow">a supported version of Go</a>, you can build from source.</p>
<div data-snippet-clipboard-copy-content="go install filippo.io/age/cmd/...@latest"><pre><code>go install filippo.io/age/cmd/...@latest
</code></pre></div>
<p dir="auto">Help from new packagers is very welcome.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Verifying the release signatures</h3><a id="user-content-verifying-the-release-signatures" aria-label="Permalink: Verifying the release signatures" href="#verifying-the-release-signatures"></a></p>
<p dir="auto">If you download the pre-built binaries, you can check their
<a href="https://www.sigsum.org/" rel="nofollow">Sigsum</a> proofs, which are like signatures with extra
transparency: you can cryptographically verify that every proof is logged in a
public append-only log, so you can hold the age project accountable for every
binary release we ever produced. This is similar to what the <a href="https://go.dev/blog/module-mirror-launch" rel="nofollow">Go Checksum
Database</a> provides.</p>
<div data-snippet-clipboard-copy-content="cat << EOF > age-sigsum-key.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEjDYFJ4WVbxRLcgbppmPaMFS/Wbq+1r9cl4qdJTyRVL
EOF
cat << EOF > sigsum-trust-policy.txt
log 154f49976b59ff09a123675f58cb3e346e0455753c3c3b15d465dcb4f6512b0b https://poc.sigsum.org/jellyfish
witness poc.sigsum.org/nisse 1c25f8a44c635457e2e391d1efbca7d4c2951a0aef06225a881e46b98962ac6c
witness rgdd.se/poc-witness  28c92a5a3a054d317c86fc2eeb6a7ab2054d6217100d0be67ded5b74323c5806
group  demo-quorum-rule all poc.sigsum.org/nisse rgdd.se/poc-witness
quorum demo-quorum-rule
EOF

curl -JO &quot;https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&quot;
curl -JO &quot;https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&amp;proof&quot;

go install sigsum.org/sigsum-go/cmd/sigsum-verify@v0.6.2
sigsum-verify -k age-sigsum-key.pub -p sigsum-trust-policy.txt \
    age-v1.2.0-darwin-arm64.tar.gz.proof < age-v1.2.0-darwin-arm64.tar.gz"><pre><code>cat &lt;&lt; EOF &gt; age-sigsum-key.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEjDYFJ4WVbxRLcgbppmPaMFS/Wbq+1r9cl4qdJTyRVL
EOF
cat &lt;&lt; EOF &gt; sigsum-trust-policy.txt
log 154f49976b59ff09a123675f58cb3e346e0455753c3c3b15d465dcb4f6512b0b https://poc.sigsum.org/jellyfish
witness poc.sigsum.org/nisse 1c25f8a44c635457e2e391d1efbca7d4c2951a0aef06225a881e46b98962ac6c
witness rgdd.se/poc-witness  28c92a5a3a054d317c86fc2eeb6a7ab2054d6217100d0be67ded5b74323c5806
group  demo-quorum-rule all poc.sigsum.org/nisse rgdd.se/poc-witness
quorum demo-quorum-rule
EOF

curl -JO "https://dl.filippo.io/age/v1.2.0?for=darwin/arm64"
curl -JO "https://dl.filippo.io/age/v1.2.0?for=darwin/arm64&amp;proof"

go install sigsum.org/sigsum-go/cmd/sigsum-verify@v0.6.2
sigsum-verify -k age-sigsum-key.pub -p sigsum-trust-policy.txt \
    age-v1.2.0-darwin-arm64.tar.gz.proof &lt; age-v1.2.0-darwin-arm64.tar.gz
</code></pre></div>
<p dir="auto">You can learn more about what's happening above in the <a href="https://www.sigsum.org/getting-started/" rel="nofollow">Sigsum
docs</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">For the full documentation, read <a href="https://filippo.io/age/age.1" rel="nofollow">the age(1) man page</a>.</p>
<div data-snippet-clipboard-copy-content="Usage:
    age [--encrypt] (-r RECIPIENT | -R PATH)... [--armor] [-o OUTPUT] [INPUT]
    age [--encrypt] --passphrase [--armor] [-o OUTPUT] [INPUT]
    age --decrypt [-i PATH]... [-o OUTPUT] [INPUT]

Options:
    -e, --encrypt               Encrypt the input to the output. Default if omitted.
    -d, --decrypt               Decrypt the input to the output.
    -o, --output OUTPUT         Write the result to the file at path OUTPUT.
    -a, --armor                 Encrypt to a PEM encoded format.
    -p, --passphrase            Encrypt with a passphrase.
    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.
    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.
    -i, --identity PATH         Use the identity file at PATH. Can be repeated.

INPUT defaults to standard input, and OUTPUT defaults to standard output.
If OUTPUT exists, it will be overwritten.

RECIPIENT can be an age public key generated by age-keygen (&quot;age1...&quot;)
or an SSH public key (&quot;ssh-ed25519 AAAA...&quot;, &quot;ssh-rsa AAAA...&quot;).

Recipient files contain one or more recipients, one per line. Empty lines
and lines starting with &quot;#&quot; are ignored as comments. &quot;-&quot; may be used to
read recipients from standard input.

Identity files contain one or more secret keys (&quot;AGE-SECRET-KEY-1...&quot;),
one per line, or an SSH key. Empty lines and lines starting with &quot;#&quot; are
ignored as comments. Passphrase encrypted age files can be used as
identity files. Multiple key files can be provided, and any unused ones
will be ignored. &quot;-&quot; may be used to read identities from standard input.

When --encrypt is specified explicitly, -i can also be used to encrypt to an
identity file symmetrically, instead or in addition to normal recipients."><pre><code>Usage:
    age [--encrypt] (-r RECIPIENT | -R PATH)... [--armor] [-o OUTPUT] [INPUT]
    age [--encrypt] --passphrase [--armor] [-o OUTPUT] [INPUT]
    age --decrypt [-i PATH]... [-o OUTPUT] [INPUT]

Options:
    -e, --encrypt               Encrypt the input to the output. Default if omitted.
    -d, --decrypt               Decrypt the input to the output.
    -o, --output OUTPUT         Write the result to the file at path OUTPUT.
    -a, --armor                 Encrypt to a PEM encoded format.
    -p, --passphrase            Encrypt with a passphrase.
    -r, --recipient RECIPIENT   Encrypt to the specified RECIPIENT. Can be repeated.
    -R, --recipients-file PATH  Encrypt to recipients listed at PATH. Can be repeated.
    -i, --identity PATH         Use the identity file at PATH. Can be repeated.

INPUT defaults to standard input, and OUTPUT defaults to standard output.
If OUTPUT exists, it will be overwritten.

RECIPIENT can be an age public key generated by age-keygen ("age1...")
or an SSH public key ("ssh-ed25519 AAAA...", "ssh-rsa AAAA...").

Recipient files contain one or more recipients, one per line. Empty lines
and lines starting with "#" are ignored as comments. "-" may be used to
read recipients from standard input.

Identity files contain one or more secret keys ("AGE-SECRET-KEY-1..."),
one per line, or an SSH key. Empty lines and lines starting with "#" are
ignored as comments. Passphrase encrypted age files can be used as
identity files. Multiple key files can be provided, and any unused ones
will be ignored. "-" may be used to read identities from standard input.

When --encrypt is specified explicitly, -i can also be used to encrypt to an
identity file symmetrically, instead or in addition to normal recipients.
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Multiple recipients</h3><a id="user-content-multiple-recipients" aria-label="Permalink: Multiple recipients" href="#multiple-recipients"></a></p>
<p dir="auto">Files can be encrypted to multiple recipients by repeating <code>-r/--recipient</code>. Every recipient will be able to decrypt the file.</p>
<div data-snippet-clipboard-copy-content="$ age -o example.jpg.age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p \
    -r age1lggyhqrw2nlhcxprm67z43rta597azn8gknawjehu9d9dl0jq3yqqvfafg example.jpg"><pre><code>$ age -o example.jpg.age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p \
    -r age1lggyhqrw2nlhcxprm67z43rta597azn8gknawjehu9d9dl0jq3yqqvfafg example.jpg
</code></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Recipient files</h4><a id="user-content-recipient-files" aria-label="Permalink: Recipient files" href="#recipient-files"></a></p>
<p dir="auto">Multiple recipients can also be listed one per line in one or more files passed with the <code>-R/--recipients-file</code> flag.</p>
<div data-snippet-clipboard-copy-content="$ cat recipients.txt
# Alice
age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p
# Bob
age1lggyhqrw2nlhcxprm67z43rta597azn8gknawjehu9d9dl0jq3yqqvfafg
$ age -R recipients.txt example.jpg > example.jpg.age"><pre><code>$ cat recipients.txt
# Alice
age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p
# Bob
age1lggyhqrw2nlhcxprm67z43rta597azn8gknawjehu9d9dl0jq3yqqvfafg
$ age -R recipients.txt example.jpg &gt; example.jpg.age
</code></pre></div>
<p dir="auto">If the argument to <code>-R</code> (or <code>-i</code>) is <code>-</code>, the file is read from standard input.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Passphrases</h3><a id="user-content-passphrases" aria-label="Permalink: Passphrases" href="#passphrases"></a></p>
<p dir="auto">Files can be encrypted with a passphrase by using <code>-p/--passphrase</code>. By default age will automatically generate a secure passphrase. Passphrase protected files are automatically detected at decrypt time.</p>
<div data-snippet-clipboard-copy-content="$ age -p secrets.txt > secrets.txt.age
Enter passphrase (leave empty to autogenerate a secure one):
Using the autogenerated passphrase &quot;release-response-step-brand-wrap-ankle-pair-unusual-sword-train&quot;.
$ age -d secrets.txt.age > secrets.txt
Enter passphrase:"><pre><code>$ age -p secrets.txt &gt; secrets.txt.age
Enter passphrase (leave empty to autogenerate a secure one):
Using the autogenerated passphrase "release-response-step-brand-wrap-ankle-pair-unusual-sword-train".
$ age -d secrets.txt.age &gt; secrets.txt
Enter passphrase:
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Passphrase-protected key files</h3><a id="user-content-passphrase-protected-key-files" aria-label="Permalink: Passphrase-protected key files" href="#passphrase-protected-key-files"></a></p>
<p dir="auto">If an identity file passed to <code>-i</code> is a passphrase encrypted age file, it will be automatically decrypted.</p>
<div data-snippet-clipboard-copy-content="$ age-keygen | age -p > key.age
Public key: age1yhm4gctwfmrpz87tdslm550wrx6m79y9f2hdzt0lndjnehwj0ukqrjpyx5
Enter passphrase (leave empty to autogenerate a secure one):
Using the autogenerated passphrase &quot;hip-roast-boring-snake-mention-east-wasp-honey-input-actress&quot;.
$ age -r age1yhm4gctwfmrpz87tdslm550wrx6m79y9f2hdzt0lndjnehwj0ukqrjpyx5 secrets.txt > secrets.txt.age
$ age -d -i key.age secrets.txt.age > secrets.txt
Enter passphrase for identity file &quot;key.age&quot;:"><pre><code>$ age-keygen | age -p &gt; key.age
Public key: age1yhm4gctwfmrpz87tdslm550wrx6m79y9f2hdzt0lndjnehwj0ukqrjpyx5
Enter passphrase (leave empty to autogenerate a secure one):
Using the autogenerated passphrase "hip-roast-boring-snake-mention-east-wasp-honey-input-actress".
$ age -r age1yhm4gctwfmrpz87tdslm550wrx6m79y9f2hdzt0lndjnehwj0ukqrjpyx5 secrets.txt &gt; secrets.txt.age
$ age -d -i key.age secrets.txt.age &gt; secrets.txt
Enter passphrase for identity file "key.age":
</code></pre></div>
<p dir="auto">Passphrase-protected identity files are not necessary for most use cases, where access to the encrypted identity file implies access to the whole system. However, they can be useful if the identity file is stored remotely.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">SSH keys</h3><a id="user-content-ssh-keys" aria-label="Permalink: SSH keys" href="#ssh-keys"></a></p>
<p dir="auto">As a convenience feature, age also supports encrypting to <code>ssh-rsa</code> and <code>ssh-ed25519</code> SSH public keys, and decrypting with the respective private key file. (<code>ssh-agent</code> is not supported.)</p>
<div data-snippet-clipboard-copy-content="$ age -R ~/.ssh/id_ed25519.pub example.jpg > example.jpg.age
$ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg"><pre><code>$ age -R ~/.ssh/id_ed25519.pub example.jpg &gt; example.jpg.age
$ age -d -i ~/.ssh/id_ed25519 example.jpg.age &gt; example.jpg
</code></pre></div>
<p dir="auto">Note that SSH key support employs more complex cryptography, and embeds a public key tag in the encrypted file, making it possible to track files that are encrypted to a specific public key.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Encrypting to a GitHub user</h4><a id="user-content-encrypting-to-a-github-user" aria-label="Permalink: Encrypting to a GitHub user" href="#encrypting-to-a-github-user"></a></p>
<p dir="auto">Combining SSH key support and <code>-R</code>, you can easily encrypt a file to the SSH keys listed on a GitHub profile.</p>
<div data-snippet-clipboard-copy-content="$ curl https://github.com/benjojo.keys | age -R - example.jpg > example.jpg.age"><pre><code>$ curl https://github.com/benjojo.keys | age -R - example.jpg &gt; example.jpg.age
</code></pre></div>
<p dir="auto">Keep in mind that people might not protect SSH keys long-term, since they are revokable when used only for authentication, and that SSH keys held on YubiKeys can't be used to decrypt files.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zero regrets: Firefox power user kept 7,500 tabs open for two years (120 pts)]]></title>
            <link>https://www.techspot.com/news/102871-zero-regrets-firefox-power-user-kept-7500-tabs.html</link>
            <guid>41156568</guid>
            <pubDate>Sun, 04 Aug 2024 21:51:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.techspot.com/news/102871-zero-regrets-firefox-power-user-kept-7500-tabs.html">https://www.techspot.com/news/102871-zero-regrets-firefox-power-user-kept-7500-tabs.html</a>, See on <a href="https://news.ycombinator.com/item?id=41156568">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
Serving tech enthusiasts for over 25 years.
<br> TechSpot means tech analysis and advice <a href="https://www.techspot.com/ethics.html" target="_blank">you&nbsp;can&nbsp;trust</a>.
</p><div>
<p id="why-it-matters"><strong>In brief:</strong> For most of us, having more than a couple dozen browser tabs open at once feels like a cluttered nightmare. But for one software engineer, managing nearly 7,500 active Firefox tabs is just another day at the office. </p>
<p>Hazel, who prefers not to share her last name, is what you'd call a hardcore Firefox fan and self-proclaimed "tab hoarder." She recently posted a screenshot showing a mind-boggling 7,470 tabs open simultaneously in the Mozilla browser. Turns out, <a href="https://www.techspot.com/downloads/19-mozilla-firefox.html">Firefox</a> had some trouble restoring the gargantuan tab load initially, but Hazel was able to revive the vast digital collection via the browser's profile cache functionality.</p>
<p>"I feel like a part of me is restored," Hazel wrote on X after getting her 7,000+ tabs back from the great digital beyond. We've all felt that little pang of anxiety when our browser crashes with tons of tabs we've been meaning to get back to, so we get it.</p>
<p>But what's the deal with Hazel's extreme browser usage? In her words, the memory impact of running that many Firefox tabs is actually "marginal." The session file containing all 7,470 tabs is only around 70MB in size, and Firefox optimizes things by only loading tabs into memory if they've been opened recently.</p>
<blockquote data-lazy-function="loadTwitter">
<p dir="ltr" lang="en">thank you to everyone who provided info on how to restore an old session from the profiles cache... i feel like a part of me is restored <a href="https://t.co/IGNGIrNfHB">pic.twitter.com/IGNGIrNfHB</a></p> 
– hazelâÂÂï¸Â (@sodiumPen) <a href="https://twitter.com/sodiumPen/status/1785302403039764665?ref_src=twsrc%5Etfw">April 30, 2024</a></blockquote>
<p>This aligns with what Mozilla told <a href="https://www.pcmag.com/news/firefox-power-user-keeps-7400-plus-browser-tabs-open-for-2-years">PCMag</a> about the browser's ability to handle extreme tab hoarding. A Mozilla representative confirmed that having countless tabs open consumes "practically no memory whatsoever" in Firefox.</p>
<p>"We're working hard to provide people with even better tools for managing dozens to thousands of tabs," the Mozilla spokesperson said. "While we think it's amazing that anyone has 7,000 active tabs, it also shows the degree to which tab management is a common problem."</p>
<p>Indeed, <a href="https://www.techspot.com/news/86510-tab-groups-chrome-ready-make-browser-nice-tidy.html">tab groups</a> have been a highly requested Firefox feature for years now. If it had that functionality, users like Hazel could easily group together all 7,500 of their open tabs, minimize the group, and temporarily pretend that massive tab debt doesn't exist – at least until they need to dive back in.</p>
<p>Currently, Firefox users can create different user profiles to segregate workflows and open tab sets, but more granular tab organization is on the way. Mozilla says it will roll out an improved profiles system and new tab management capabilities later in 2024.</p>
<p>In the meantime, there are third-party Firefox <a href="https://addons.mozilla.org/en-US/firefox/addon/simple-tab-groups/">add-ons</a> that can help tame tab situations like these to a certain extent.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cortex A73's Not-So-Infinite Reordering Capacity (153 pts)]]></title>
            <link>https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/</link>
            <guid>41156474</guid>
            <pubDate>Sun, 04 Aug 2024 21:30:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/">https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/</a>, See on <a href="https://news.ycombinator.com/item?id=41156474">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Cortex A73 aimed to address the power and thermal issues that prevented Arm’s early 64-bit cores from reaching their full potential. It started a trend that saw Arm successfully capture the smartphone CPU market, and did so by emphasizing efficiency. Part of this effort appears to be a unique out-of-order retirement mechanism.</p>
<div>
<figure><a href="https://chipsandcheese.com/?attachment_id=30612"><img decoding="async" width="688" height="458" data-attachment-id="30612" data-permalink="https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/lol_0720/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?fit=4609%2C3068&amp;ssl=1" data-orig-size="4609,3068" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;11&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;NIKON D850&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1722692202&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;105&quot;,&quot;iso&quot;:&quot;64&quot;,&quot;shutter_speed&quot;:&quot;8&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="LOL_0720" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?fit=2163%2C1440&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?fit=688%2C458&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?resize=688%2C458&amp;ssl=1" alt="" srcset="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?resize=3245%2C2160&amp;ssl=1 3245w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?resize=768%2C511&amp;ssl=1 768w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?resize=1536%2C1022&amp;ssl=1 1536w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?resize=2048%2C1363&amp;ssl=1 2048w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?resize=1200%2C799&amp;ssl=1 1200w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?resize=1600%2C1065&amp;ssl=1 1600w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?resize=1320%2C879&amp;ssl=1 1320w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0720.jpg?w=1376&amp;ssl=1 1376w" sizes="(max-width: 688px) 100vw, 688px" data-recalc-dims="1"></a><figcaption>One of the DDR4 chips feeding the Amlogic S922X’s four A73 cores (and other on-chip stuff). Out-of-order execution tries to mitigate the impact of memory access latency</figcaption></figure></div>
<p>This feature frustrated my prior attempts to dig into A73’s architecture. <a href="https://blog.stuffedcow.net/2013/05/measuring-rob-capacity/">Henry Wong’s methodology</a> for measuring structure sizes largely didn’t work except for scheduling capacity. muffiny_mcmuffinface on Discord suggested blocking retirement with an unresolved branch, and that did the trick.</p>
<h2>Out-of-Order Retire</h2>
<p>With conventional out-of-order execution, an in-order frontend brings instructions into the core. The rename/allocate stage assigns backend resources to the instruction. Then the backend calculates results for those instructions without waiting to know whether the instructions actually need to be executed. These speculative results are contained in various internal core structures until they’re known to be good. Register values are held in the speculative portion of renamed register files, and values to be written out to memory are held in a store buffer. Finally, instructions can be retired (leave the core) when they have passed all checks, and all instructions before it have also passed their checks. On retirement, register values are made program-visible and pending store data is written out to the memory hierarchy. Retirement also frees entries from internal core structures, making them available for newer incoming instructions. Therefore, how far a CPU can move past a stalled instruction is limited by how many entries it has in internal structures like register files, load/store buffers, and so on.</p>
<p>In-order retirement is a straightforward way to preserve the illusion of in-order execution, which programs and operating systems expect. If something funny happens, like a program accessing virtual memory that doesn’t have corresponding physical memory mapped, the operating system expects to handle that “exception” with program state preserved right as it was before the offending instruction would be executed. Preserving that state lets the operating system fix the issue, for example by paging to disk, and resume the program as if nothing had happened.</p>
<div>
<figure><a href="https://chipsandcheese.com/?attachment_id=30557"><img decoding="async" width="667" height="557" data-attachment-id="30557" data-permalink="https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/a73_testing/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_testing.png?fit=667%2C557&amp;ssl=1" data-orig-size="667,557" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="a73_testing" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_testing.png?fit=667%2C557&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_testing.png?fit=667%2C557&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_testing.png?resize=667%2C557&amp;ssl=1" alt="" data-recalc-dims="1"></a></figure></div>
<p>A CPU’s backend can accomplish this by discarding (not retiring) all instructions after the one that hit an exception. It can then show known-good state at the exact point of the exception. If a CPU designer got smart and tried to retire an instruction out-of-order, the core could find itself in an unrecoverable state if an earlier instruction hits an exception. But A73 can do exactly that in certain cases, and at least one of those cases is an incomplete load. I suspect A73 can determine when a load is guaranteed to complete successfully. If address translation competes and access checks against the page table entry are good, there shouldn’t be anything causing the load to fail short of a catastrophic memory subsystem failure. </p>
<div>
<figure><a href="https://chipsandcheese.com/?attachment_id=30563"><img decoding="async" width="688" height="356" data-attachment-id="30563" data-permalink="https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/a73_intrf/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_intrf.png?fit=776%2C402&amp;ssl=1" data-orig-size="776,402" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="a73_intrf" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_intrf.png?fit=776%2C402&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_intrf.png?fit=688%2C356&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_intrf.png?resize=688%2C356&amp;ssl=1" alt="" srcset="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_intrf.png?w=776&amp;ssl=1 776w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_intrf.png?resize=768%2C398&amp;ssl=1 768w" sizes="(max-width: 688px) 100vw, 688px" data-recalc-dims="1"></a><figcaption>Works like a charm. That’s 40 integer registers allocated to store results before A73 can no longer extract further instruction level parallelism</figcaption></figure></div>
<p>In that case, A73 can start retiring instructions ahead of the incomplete load, secure in the knowledge that the results it’s committing early won’t have to be thrown out. However, A73 can’t do so past an incomplete branch because it doesn’t know if it predicted that branch correctly. A branch mispredict doesn’t require any attention from software, but the core needs to preserve results from instructions before the branch in order to recover. Therefore, Henry Wong’s methodology can be modified for A73 by adding a branch dependent on the cache miss. To keep mispredictions from influencing results, the branch is never taken.</p>
<h2>Working with a Shoestring Power and Area Budget</h2>
<p>This modified methodology shows substantial shrinks to most core stuctures compared to A73’s predecessors.</p>
<div>
<figure><a href="https://chipsandcheese.com/a73-drawio-1/"><img loading="lazy" decoding="async" width="688" height="679" data-attachment-id="30561" data-permalink="https://chipsandcheese.com/a73-drawio-1/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73.drawio-1.png?fit=882%2C870&amp;ssl=1" data-orig-size="882,870" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="a73.drawio-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73.drawio-1.png?fit=882%2C870&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73.drawio-1.png?fit=688%2C679&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73.drawio-1.png?resize=688%2C679&amp;ssl=1" alt="" srcset="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73.drawio-1.png?w=882&amp;ssl=1 882w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73.drawio-1.png?resize=768%2C758&amp;ssl=1 768w" sizes="(max-width: 688px) 100vw, 688px" data-recalc-dims="1"></a></figure></div>
<h3>Register Files</h3>
<p>On A57, register file entries were 32 bits wide to make register file storage go as far as possible. I suspect those early 64-bit Arm cores were expected to handle a lot of 32-bit code, and wasting the upper half of a 64-bit register wasn’t ideal. 64-bit integer registers and 128-bit vectors were handled by allocating multiple 32-bit registers. A72 made register file entries 64-bits wide and improved FMA performance, which would require more register file storage and more ports.</p>
<blockquote>
<p>Register file area is mostly limited by the width and number of access ports, and not so much the number of storage cells per entry</p>
<p>Kai Troester, AMD at Hot Chips 2023</p>
</blockquote>
<p>A73 ditches that approach in favor of separate integer and floating point register files. The integer register file has 64-bit entries, with 41 available for speculative results. FP/vector registers are 128-bits wide, with 38 entries available for speculative results. Dedicated register files allow lower port counts from each register file. When building Zen 4’s FP/vector register file, AMD was able to use 512-bit entries with minimal area growth because port count and width had a larger influence register file area than the width of each entry. Arm likely made a similar observation with A73. A unified register file with small entries would make the most of storage cell capacity, but that was the wrong way to go for area efficiency. It was probably the wrong way to go for power efficiency too.</p>
<div>
<figure><a href="https://chipsandcheese.com/a73_rf/"><img loading="lazy" decoding="async" width="638" height="364" data-attachment-id="30566" data-permalink="https://chipsandcheese.com/a73_rf/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_rf.png?fit=638%2C364&amp;ssl=1" data-orig-size="638,364" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="a73_rf" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_rf.png?fit=638%2C364&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_rf.png?fit=638%2C364&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_rf.png?resize=638%2C364&amp;ssl=1" alt="" data-recalc-dims="1"></a></figure></div>
<p>Cortex A72 had a comparatively high number of execution ports, all of which required inputs from one register file. Certainly there are techniques to prevent power and area from exploding like using two duplicate copies of the register file to increase read port count, but it’s impossible figure out details like that from software.</p>
<p>Besides being more area efficient, A73’s register file setup can give it an advantage in vector code. 35 vector register file entries are available for 128-bit results, compared to 31 on A72. A73’s advantage should be even more significant in practice because scalar integer and vector operations won’t contend for capacity in the same register file. </p>
<p>However, A73 can’t perfectly allocate all entries across both register files, and caps out at 66 in-flight instructions with an even mix of operations that write to scalar and vector registers. Other CPUs have similar limitations. Intel CPUs have a “<a href="https://stackoverflow.com/questions/60264057/what-resource-stall-other-might-mean">Physical Register Reclaim Tabl</a>e” that tracks which register should be freed when an instruction retires. Lack of entries in that structure can cause a stall before all register file entries are exhausted. A73 may have a similar structure.</p>
<h3>Memory Accesses, and Branches?</h3>
<p>A73 can have 50 in-flight loads, which is massive compared to its other structures. In fact, 50 in-flight loads can only be achieved by using both integer and vector destination registers. Otherwise, reordering capacity will be limited by how much register file capacity you can reserve to hold loaded data. This is a substantial improvement over A72’s 32 entry load queue, and is unlikely to be a relevant limitation in practice.</p>
<p>Stores are a different story. Cortex A73 can only have 11 in-flight stores after an unresolved branch, a regression from A72’s already small 15 entry store queue. Curiously, independent branches appear to share the same 11 entry resource. If this resource fills, subsequent branches can’t get into the core even if scheduler capacity is available. That creates a funny situation where A73 can have more incomplete branches in flight than complete ones.</p>
<div>
<figure><a href="https://chipsandcheese.com/?attachment_id=30602"><img loading="lazy" decoding="async" width="688" height="303" data-attachment-id="30602" data-permalink="https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/a73_branches_stores/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_branches_stores.png?fit=1093%2C482&amp;ssl=1" data-orig-size="1093,482" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="a73_branches_stores" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_branches_stores.png?fit=1093%2C482&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_branches_stores.png?fit=688%2C303&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_branches_stores.png?resize=688%2C303&amp;ssl=1" alt="" srcset="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_branches_stores.png?w=1093&amp;ssl=1 1093w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_branches_stores.png?resize=768%2C339&amp;ssl=1 768w" sizes="(max-width: 688px) 100vw, 688px" data-recalc-dims="1"></a></figure></div>
<p>Perhaps stores and branches need to reserve at least one slot in some kind of 11 entry verification queue. If a slot isn’t available, the incoming instruction can’t enter the backend even if a scheduler entry is free. Branches and stores both need extra care before their results can be committed. Branches can be mispredicted. Committing a store means writing its data to cache, making it visible to other cores. Whatever the case, this 11 entry buffer is likely a very hot structure. Capacity is low even if it’s only used by stores. Branches will further increase pressure on those 11 entries.</p>
<h3>Memory Ordering Woes</h3>
<p>Stores cause another problem for A73 besides taking up valuable space in a small structure. A73 doesn’t have a way to speculate whether a load will be dependent on a prior in-flight store. That means loads can’t be executed until all prior store addresses are known.</p>
<p>Memory dependence prediction isn’t new. Intel’s first implementation was in the 2006-era Core 2, while AMD did so in 2011 with Bulldozer. It’s a huge advantage because most loads don’t overlap with a prior store. Loads that miss cache are among the highest latency instructions a CPU will have to deal with. A73’s inability to do memory dependence speculation will cause loads to be delayed even when that delay isn’t needed to ensure memory operations execute in the right order. That in turn will put more pressure on the core’s limited reordering capacity.</p>
<h3>No ROB-Like Structure?</h3>
<p>Most out-of-order CPUs use a reorder buffer (ROB) to ensure in-order retirement. The ROB is a list of in-flight instructions being tracked in the backend, and is kept in program order. Reordering capacity can be capped by the ROB’s size if no other resources are exhausted first.</p>
<p>A73 doesn’t appear to have such a structure. NOPs are a good way of finding ROB capacity because they don’t take space in the register file, load/store queues, or other more specific resources. They’re just an instruction that does nothing, taking up a ROB slot. But NOPs have basically infinite reordering capacity even past an unresolved branch.</p>
<figure><img loading="lazy" decoding="async" width="612" height="362" data-attachment-id="30609" data-permalink="https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/a73_norob/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_norob.png?fit=612%2C362&amp;ssl=1" data-orig-size="612,362" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="a73_norob" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_norob.png?fit=612%2C362&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_norob.png?fit=612%2C362&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_norob.png?resize=612%2C362&amp;ssl=1" alt="" data-recalc-dims="1"></figure>
<p>I also extended Henry Wong’s technique of combining in-flight writes to the integer and FP register files by mixing stores in. At that point, A73 can track 76 in-flight instructions, showing that I’m not hitting a reordering capacity limit even when maxing out three separate underlying resources. There’s a practical limit of about 76 instructions with the store queue and register files utilized to their maximum capacity.</p>
<h2>Final Words</h2>
<p>Out-of-order retirement is part of Arm’s strategy to maintain good performance with smaller core structures. In a sense, it’s goal is similar to that of Skymont’s 16-wide retire stage. Both cores are trying to deallocate resources faster, letting them achieve a certain level of performance with smaller internal core structures. As mentioned in the prior article, that makes A73 a fascinating architecture.</p>
<div>
<figure><a href="https://chipsandcheese.com/?attachment_id=30614"><img loading="lazy" decoding="async" width="688" height="458" data-attachment-id="30614" data-permalink="https://chipsandcheese.com/2024/08/04/cortex-a73s-not-so-infinite-reordering-capacity/lol_0717/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?fit=4169%2C2775&amp;ssl=1" data-orig-size="4169,2775" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;2&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;NIKON D850&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1722691972&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;50&quot;,&quot;iso&quot;:&quot;64&quot;,&quot;shutter_speed&quot;:&quot;0.5&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="LOL_0717" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?fit=2163%2C1440&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?fit=688%2C458&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?resize=688%2C458&amp;ssl=1" alt="" srcset="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?resize=3245%2C2160&amp;ssl=1 3245w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?resize=768%2C511&amp;ssl=1 768w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?resize=1536%2C1022&amp;ssl=1 1536w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?resize=2048%2C1363&amp;ssl=1 2048w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?resize=1200%2C799&amp;ssl=1 1200w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?resize=1600%2C1065&amp;ssl=1 1600w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?resize=1320%2C879&amp;ssl=1 1320w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/LOL_0717.jpg?w=1376&amp;ssl=1 1376w" sizes="(max-width: 688px) 100vw, 688px" data-recalc-dims="1"></a><figcaption>Single board computer used to test A73</figcaption></figure></div>
<p>But when A73 has to lean on its core structures, it’s often at a disadvantage compared to A72 or A57. The question then is whether out-of-order retirement is effective enough to keep A73’s performance competitive. Certainly in some cases, A73’s strategy works well and gets it very close to A57. That’s an impressive feat considering how much smaller A73’s structures are in certain places. libx264 encoding is an example of this. Other cases aren’t so clear though, and file compression is a counterexample.</p>
<div>
<figure><a href="https://chipsandcheese.com/a73_a57_ipc-1/"><img loading="lazy" decoding="async" width="688" height="396" data-attachment-id="30584" data-permalink="https://chipsandcheese.com/a73_a57_ipc-1/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_a57_ipc-1.png?fit=940%2C541&amp;ssl=1" data-orig-size="940,541" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="a73_a57_ipc-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_a57_ipc-1.png?fit=940%2C541&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_a57_ipc-1.png?fit=688%2C396&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_a57_ipc-1.png?resize=688%2C396&amp;ssl=1" alt="" srcset="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_a57_ipc-1.png?w=940&amp;ssl=1 940w, https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2024/08/a73_a57_ipc-1.png?resize=768%2C442&amp;ssl=1 768w" sizes="(max-width: 688px) 100vw, 688px" data-recalc-dims="1"></a></figure></div>
<p>But IPC is only part of the picture. It’s all too easy to tunnel vision on IPC and lose sight of the forest. Clock speed matters, and A73’s lower power draw lets it reach higher clock speeds than A57. The Amlogic S922’s four A73 cores run at 2.2 GHz and can stay there with passive cooling. The Tegra X1’s four A57 cores run at 1.8 GHz, and don’t go faster even though the Nintendo Switch has active cooling.</p>
<div>
<figure><a href="https://chipsandcheese.com/2023/12/12/cortex-a57-nintendo-switchs-cpu/a57_minibench-1/"><img loading="lazy" decoding="async" width="480" height="288" data-attachment-id="24510" data-permalink="https://chipsandcheese.com/2023/12/12/cortex-a57-nintendo-switchs-cpu/a57_minibench-1/" data-orig-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2023/12/a57_minibench-1.png?fit=480%2C288&amp;ssl=1" data-orig-size="480,288" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="a57_minibench-1" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2023/12/a57_minibench-1.png?fit=480%2C288&amp;ssl=1" data-large-file="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2023/12/a57_minibench-1.png?fit=480%2C288&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2023/12/a57_minibench-1.png?resize=480%2C288&amp;ssl=1" alt="" data-recalc-dims="1"></a><figcaption>Actual performance is very close</figcaption></figure></div>
<p>Thus A73 is able to provide comparable performance at lower power. It does so by running a smaller, narrower core at higher clocks. A73 is a reminder that building a higher IPC architecture is not always the best way to go. The same applies to targeting higher clock speeds. Both strategies can do well, and both can fail depending on how well engineers balance the core for the applications it has to serve.</p>
<p>If you like our articles and journalism, and you want to support us in our endeavors, then consider heading over to our&nbsp;<a href="https://www.patreon.com/ChipsandCheese">Patreon</a>&nbsp;or our&nbsp;<a href="https://www.paypal.com/donate/?hosted_button_id=4EMPH66SBGVSQ">PayPal</a>&nbsp;if you want to toss a few bucks our way. If you would like to talk with the Chips and Cheese staff and the people behind the scenes, then consider joining our&nbsp;<a href="https://discord.gg/TwVnRhxgY2">Discord</a>.</p>

<div data-post_id="10949" data-instance_id="1" data-additional_class="pp-multiple-authors-layout-boxed.multiple-authors-target-the-content" data-original_class="pp-multiple-authors-boxes-wrapper pp-multiple-authors-wrapper box-post-id-10949 box-instance-id-1">
<p><span>
<ul>
<li>
<div>
<p><img alt="clamchowder" src="https://secure.gravatar.com/avatar/7c39d2e6d35e77c8fd15c4b2d9ce4e64?s=80&amp;d=identicon&amp;r=g" srcset="https://secure.gravatar.com/avatar/7c39d2e6d35e77c8fd15c4b2d9ce4e64?s=160&amp;d=identicon&amp;r=g 2x" height="80" width="80"> </p>
</div>

</li>
</ul>
</span>
</p></div>





</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Puget Systems' Perspective on Intel CPU Instability Issues (149 pts)]]></title>
            <link>https://www.pugetsystems.com/blog/2024/08/02/puget-systems-perspective-on-intel-cpu-instability-issues/</link>
            <guid>41156104</guid>
            <pubDate>Sun, 04 Aug 2024 20:27:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pugetsystems.com/blog/2024/08/02/puget-systems-perspective-on-intel-cpu-instability-issues/">https://www.pugetsystems.com/blog/2024/08/02/puget-systems-perspective-on-intel-cpu-instability-issues/</a>, See on <a href="https://news.ycombinator.com/item?id=41156104">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-29233">

<div id="content" tabindex="-1">
<p>You may have heard about instability issues with Intel Core 13th and 14th Gen desktop processors. The issue has attracted more attention as time goes on. I am posting to share what we’ve experienced here at Puget Systems and what we’re doing about it.</p>
<p>The issue gained attention over the past three months, led by <a href="https://www.youtube.com/watch?v=si4DTxFUUvM&amp;t=67s">GamersNexus</a>, <a href="https://www.youtube.com/watch?v=QzHcrbT5D_Y">Level1Techs</a>, and others. Details were vague at first because the issue tended to surface only over time. Early on it looked like it was related to motherboard power management, making it uncertain whether it was a motherboard issue, an Intel issue, or both. As time went on and more information and speculation developed, the issue became particularly alarming because it seemed to represent a physical degradation of the processor, which is not recoverable. The concern is not only with the nature of the instability, but the incident rate. Some game development studios and cloud gaming providers have come forward with concerning failure rates upwards of 50%.</p>
<p>Last week, Intel posted an <a href="https://community.intel.com/t5/Processors/July-2024-Update-on-Instability-Reports-on-Intel-Core-13th-and/m-p/1617113">official statement</a>, in which they shared that elevated voltage requests to the processor was a significant factor, and that a microcode patch would be delivered once validated, with mid-August as the target release date. Intel did not officially address the physical degradation issue, but the general community consensus is that the microcode update is expected to prevent, but not reverse, that degradation.</p>
<h2 id="h-how-puget-systems-is-unique">How Puget Systems is Unique</h2>
<p>At Puget Systems, we HAVE seen the issue, but our experience has been much more muted in terms of timeline and failure rate. In order to answer why, I have to give a little bit of history. </p>
<p>Going all the way back to 2017, with the Intel 8700K processor, we published an article titled <a href="https://www.pugetsystems.com/blog/2017/10/07/Why-Do-Hardware-Reviewers-Get-Different-Benchmark-Results-1058/">Why Do Hardware Reviewers Get Different Benchmark Results?</a> which helped call attention to the fact that motherboards were shipping with “Multicore Enhancement” enabled, which set the CPU “All Core Turbo” to be equal to the “Single Core Turbo” frequency. This essentially was overclocking the CPU, by pushing it past official Intel specifications, and had negative effects on stability and temperatures. At Puget Systems, we have always valued stability first and we actively made the choice to follow Intel specifications. Behind the scenes, this meant encouraging Intel to make those specifications public on <a href="https://ark.intel.com/content/www/us/en/ark.html#@PanelLabel122139">Intel ARK</a> and pushing motherboard ODMs to follow Intel guidance as their default settings. <a href="https://www.youtube.com/watch?v=zi-zU2p2ykc">JayzTwoCents</a> helped drive public awareness of the issue, and for a short time it appeared that things were back on track.</p>
<p>Since that time, our stance at Puget Systems has been to mistrust the default settings on any motherboard. Instead, we commit internally to test and apply BIOS settings — <em>especially </em>power settings — according to our own best practices, with an emphasis on following Intel and AMD guidelines. With Intel Core CPUs in particular, we pay close attention to voltage levels and time durations at which those levels are sustained. This has been especially challenging when those guidelines are difficult to find and when motherboard makers brand features with their own unique naming. </p>
<p>Nevertheless, we kept that approach with confidence due to the high amount of real-world testing we do here. We’ve even developed our own suite of <a href="https://www.pugetsystems.com/pugetbench/">PugetBench Benchmarks</a>, whose goal is to test real-world scenarios, guided by years of experience and learning through our customers and partners. Our approach has always led us to be conservative with our power settings, especially when <a href="https://www.pugetsystems.com/labs/articles/power-draw-and-cooling-14th-gen-intel-core-processors/">we have shown</a> that the real-world performance impact to be a small 1-2% range.</p>
<h2 id="h-puget-systems-intel-core-failure-rates">Puget Systems Intel Core Failure Rates</h2>
<p>So, with that understanding of WHY we may be seeing things differently than others in the industry — what ARE we seeing here at Puget Systems?</p>
<figure><img decoding="async" width="1024" height="481" src="https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Generation-1024x481.png" alt="" srcset="https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Generation-1024x481.png 1024w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Generation-300x141.png 300w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Generation-768x360.png 768w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Generation.png 1142w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>
<p>Even though failure rates (as a percentage) are the most consequential, I think showing the absolute number of failures illustrates our experience best. I decided to go back all the way to the launch of Intel Core 10th Gen to give some historical perspective. Starting with 10th Gen, we have only sold the top 2 SKUs (XX700K and XX900K) in volume, which gives us a nice clean set of data.</p>
<p>Looking at that chart, you’ll notice a few things. First, your attention undoubtedly is drawn to the recent spike of failures with Intel Core 14th Gen. Second, you can see that Intel Core 11th Gen CPUs had a failure rate at nearly the same level, even though it didn’t get as much press at that time, that I can recall. Third, I’ll draw your attention to a steady and elevated failure rate on 13th Gen processors.</p>
<p>I can also plot this same data, but instead of coloring it by CPU generation, I’ll color it based on whether we caught the issue on our production floor (shop failure), or if the issue made it out to the customer (field failure). Obviously, a field failure is dramatically more severe of a problem because it now impacts our customer experience.</p>
<figure><img decoding="async" width="1024" height="481" src="https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Type-1024x481.png" alt="" srcset="https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Type-1024x481.png 1024w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Type-300x141.png 300w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Type-768x360.png 768w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-Core-CPU-Failures-Per-Month-and-Type.png 1142w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>
<p>The most concerning part of all of this to us here at Puget Systems is the rise in the number of failures in the field, which we haven’t seen this high since 11th Gen. We’re seeing ALL of these failures happen after 6 months, which means we do expect elevated failure rates to continue for the foreseeable future and possibly even after Intel issues the microcode patch.</p>
<p>Based on this information, we are <strong>definitely </strong>experiencing CPU failures higher than our historical average, especially with 14th Gen. We have enough data to know that we don’t have an acute problem on the horizon with 13th Gen — it is more of a slow burn. We do expect an elevated failure rate on 14th Gen while Intel finishes finding a root cause and issuing a microcode update. While the number of failures we are experiencing is definitely higher than our historical average, it is difficult to classify 5-7 failures a month in the field as a huge issue, and it is definitely a lower rate of failure than we are hearing about from others in the industry. The recent spike in 14th Gen failure rates stands out mostly because how incredibly low historical CPU failure rates tend to be.</p>
<p>We believe that our commitment to internally developed power settings is why we have been much less impacted than others by these Intel stability issues. This is shaping our approach over the coming months.</p>
<h2 id="h-failure-rates-in-context">Failure Rates in Context</h2>
<p>Everything I’ve shown you so far is our raw number of failures, but what matters most is failure rate percentages. Let’s look at total failure rates in the context of multiple generations and with comparison to AMD Ryzen CPUs.</p>
<figure><img loading="lazy" decoding="async" width="1024" height="454" src="https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-CPU-Failure-Totals-by-Group-1024x454.png" alt="" srcset="https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-CPU-Failure-Totals-by-Group-1024x454.png 1024w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-CPU-Failure-Totals-by-Group-300x133.png 300w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-CPU-Failure-Totals-by-Group-768x341.png 768w, https://www.pugetsystems.com/wp-content/uploads/2024/07/Puget-Systems-Intel-CPU-Failure-Totals-by-Group.png 1350w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>
<p>You can see that in context, the Intel Core 13th and 14th Gen processors do have an elevated failure rate but not at a show-stopper level. The concern for the future reliability of those CPUs is much more the issue at hand, rather than the failure rates we are seeing today. If it is true that the 14th Gen CPUs will continue to have increasing failures over time, this could end up being a much bigger problem as time goes by and is something we will, of course, be keeping a close eye on. 14th Gen isn’t as rock solid as Intel’s 10th or 12th Gen processors, but at least for us, it isn’t yet at critical levels.</p>
<p>Based on the failure rate data we currently have, it is interesting to see that 14th Gen is still nowhere near the failure rates of the Intel Core 11th Gen processors back in 2021 and also substantially lower than AMD Ryzen 5000 (both in terms of shop and field failures) or Ryzen 7000 (in terms of shop failures, if not field). We aren’t including AMD here to try to deflect from the issues Intel is currently experiencing but rather to put into context why we have not yet adjusted our Intel vs. AMD strategy in our workstations.</p>
<h2 id="h-our-plan-of-action">Our Plan of Action</h2>
<p>Even if we are not seeing the same level of failures as others, this is a real issue that we are addressing internally. But what exactly are we doing about it?</p>
<ol>
<li><strong>In the majority of cases, we are staying the course for now.</strong> Various BIOS updates have been launched by motherboard manufacturers to provide more conservative power settings, but in our opinion, they don’t quite hit the mark. They are either too conservative in some places (leading to unacceptable loss in performance) or they are not conservative enough. We trust our internally developed settings more. We also are concerned with the rise in failure rate, but it is not at a level of severity that changes our CPU recommendations for our customer workflows.</li>
<li><strong>We will immediately validate the Intel microcode update when it is released.</strong> We will start with internal testing for stability and performance. If it passes that testing, we will begin using it on our shipping configurations as soon as possible.</li>
<li><strong>We will contact all our affected customers to provide the Intel microcode update.</strong> We will do this after gaining some internal experience and confidence with the update, and have developed detailed guides on how to install it while preserving our recommended BIOS settings.</li>
<li><strong>We are extending our warranty to 3 years for all customers affected by this issue, regardless of warranty purchased.</strong> With a Puget Systems PC, you should be able to count on it working for you. If we no longer have supply of 13th or 14th Gen processors, we’ll upgrade you to a more current generation.</li>
</ol>
<p>We’ll all stay tuned together for Intel to release their microcode update in August. In the meantime if you have any questions or concerns, please reach out to <a href="https://www.pugetsystems.com/press/#h-contacts">me directly</a> or our <a href="https://www.pugetsystems.com/support/">support team</a>!</p>

</div>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Airlines are running out of 4-digit flight numbers (137 pts)]]></title>
            <link>https://viewfromthewing.com/airlines-are-running-out-of-flight-numbers-and-they-dont-know-what-to-do-about-it/</link>
            <guid>41155462</guid>
            <pubDate>Sun, 04 Aug 2024 18:46:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://viewfromthewing.com/airlines-are-running-out-of-flight-numbers-and-they-dont-know-what-to-do-about-it/">https://viewfromthewing.com/airlines-are-running-out-of-flight-numbers-and-they-dont-know-what-to-do-about-it/</a>, See on <a href="https://news.ycombinator.com/item?id=41155462">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-210523">

	
	<!-- .entry-header -->

	
	
	<div>
		<p>Airlines use up to four digits for flight numbers.  That means they can have up to 9,999 flights (since there’s no flight zero), and no one comes close.  American Airlines <a href="https://americanairlines.gcs-web.com/#:~:text=About%20American%20Airlines%20Group,in%20more%20than%2050%20countries." target="_blank" rel="noopener">operates around 6,700 daily flights</a> including its American Eagle regional services.  So they should have plenty of room to grow!
</p><p>Except they don’t.  American Airlines, Delta, and United are running out of flight numbers, and nobody knows what to do about it.</p>
<p><img decoding="async" src="https://viewfromthewing.com/wp-content/uploads/2023/06/20230619_064640.jpg"></p>
<p>In fact, this topic came up at an American Airlines employee meeting last week.  After the airline’s second quarter earnings call, top executives talk to employees and take questions.  A worker in IT raised it: “We’re running out of flight numbers. Are we looking at 5-digit or some other solution?”</p>
<p>The airline’s Senior Vice President or Network Planning Brian Znotins laid out the challenge and what they’re doing about it.</p>
<ul><li>They actually have more than 9,999 flights that they want to put their flight number on<br>
</li><li>That’s because they have partners where they codeshare.  They want to sell American Airlines ‘flights’ from Doha to cities in India and Pakistan, for instance.  They want to sell American Airlines flights that are operated by Alaska Airlines.</li></ul>
<p>Here’s the full answer, along with how they triage the problem – for instance by assigning the same flight number to more than one flight a day (although that means they need for it to be flights that would never both be in the air at the same time, such as where the same plane is used and can’t reasonably be substituted):</p>
<blockquote><p>With consolidation in the industry, airlines have been running out of flight numbers.  …[Codeshares have caused us to be] running out of flight numbers.  We have more than 9,999 flights that we would like to go out and number.  And so ways to save flight numbers, we actually have a model that goes and conserves flight numbers so that we can continue to add where we want to. Our regional partners…we have to add flight number ranges for that.  </p>
<p>Believe it or not there’s a whole body of work that revolves around flight numbers and it’s not just 1989 to Kansas City for the Super Bowl.</p>
<p>Needless to say, the actual answer to the question is we run through-flights and we also do something called an ‘out and back flight number’ where a flight going to a station will have the same flight number  as the return flight back to the hub, and that’s also so we can conserve flight numbers.</p>
<p>Now on the technical side we’re working in systems that originated in the 60s. We have two-letter airline codes and we have four-digit flight numbers. You think of this as like a Y2K issue if you remember that. It is immensely difficult to find ways to add another digit to this field, and it’s really only a problem for three airlines in the world. The remaining airlines don’t run into this issue.</p>
<p>So for us, and other two big competitors, we found workarounds for it. And I think the technology investment would be too great…</p></blockquote>	<!-- /1019006/BoardingArea_DynamicContent -->
	
	
<p><img decoding="async" src="https://viewfromthewing.com/wp-content/uploads/2015/06/IMG_9691.jpg"></p>
<p>The computer systems airlines use are built on top of systems that are built on top of systems that date back sixty years.  So it’s hard to adjust for this.  And, as with Y2k, older systems economized on data size for storage and processing reasons.  Abbreviations were used.  For instance <a href="https://viewfromthewing.com/how-united-airlines-elite-status-levels-have-evolved/" target="_blank" rel="noopener">that’s how United Airlines elite status levels got their names</a>, “1K” was used instead of 1000K or 100,000 mile status because they only had two digits to designate it. It was meant as an internal tag, not to be public with customers, but it eventually stuck.</p>
<p>Back in April, American Airlines <a href="https://viewfromthewing.com/american-airlines-has-too-many-flights-for-its-flight-numbers-so-theyre-making-a-change-roundup/" target="_blank" rel="noopener">shifted their flight numbers</a> so that mainline flights extended not only from 1 to 2,999 but out to 3,139.</p>
<p><img decoding="async" src="https://viewfromthewing.com/wp-content/uploads/2024/04/Screenshot-2024-04-23-093602.png"></p>
<p>They also still have <a href="https://viewfromthewing.com/american-airlines-will-be-the-biggest-airline-for-the-4th-of-july-by-a-lot/" target="_blank" rel="noopener">fun with flight numbers</a> for instance running flight 1776 between Philadelphia and Boston; flight 1492 to Columbus; AAA777 to Las Vegas; and flight 420 to Denver.</p>
<p>And American Airlines CEO Robert Isom chimed in on the answer to the question about limits to flight numbers noting that “we have aspirations to be a lot bigger, so over time let’s put that down as a project.”</p>
	
	

	
	

			</div><!-- .entry-content -->

	
	
	<!-- .entry-footer -->

	
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using your Kindle as an e-ink monitor (131 pts)]]></title>
            <link>https://gist.github.com/adtac/eb639d3c707b55a28f0ee9a420aa7e0c</link>
            <guid>41155177</guid>
            <pubDate>Sun, 04 Aug 2024 17:49:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gist.github.com/adtac/eb639d3c707b55a28f0ee9a420aa7e0c">https://gist.github.com/adtac/eb639d3c707b55a28f0ee9a420aa7e0c</a>, See on <a href="https://news.ycombinator.com/item?id=41155177">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="file-readme-md">
    <article itemprop="text">
<p dir="auto">demo: <a href="https://x.com/adtac_/status/1820127470613622950" rel="nofollow">https://x.com/adtac_/status/1820127470613622950</a> (3.5 fps, Paperwhite 3)</p>
<p dir="auto"><h3 dir="auto">step 1: jailbreak your Kindle</h3><a id="user-content-step-1-jailbreak-your-kindle" aria-label="Permalink: step 1: jailbreak your Kindle" href="#step-1-jailbreak-your-kindle"></a></p>
<p dir="auto"><a href="https://www.mobileread.com/forums" rel="nofollow">mobileread.com</a> is your best resource here, follow the instructions from <a href="https://www.mobileread.com/forums/showthread.php?t=356872" rel="nofollow">the LanguageBreak thread</a></p>
<p dir="auto">I didn't really follow the LanguageBreak instructions because I didn't care about most of the features + I was curious to do it myself, but the LanguageBreak github repo was invaluable for debugging</p>
<p dir="auto">it doesn't matter how you jailbreak your device as long as you get to a root shell somehow</p>
<p dir="auto"><h3 dir="auto">step 2: listener server on the Kindle</h3><a id="user-content-step-2-listener-server-on-the-kindle" aria-label="Permalink: step 2: listener server on the Kindle" href="#step-2-listener-server-on-the-kindle"></a></p>
<p dir="auto">I wrote a Go program to receive files on port 8000 and then invoke <code>eips</code>, which is Kindle's built-in utility to draw images on the screen</p>
<p dir="auto">for example, if the Go program received a JPG file and saved it under /tmp/img.jpg, the following command would draw the image with a partial update (full update looks awful):</p>
<div dir="auto"><pre>eips -g /tmp/img.jpg -w gc16 -x 128 -y 0</pre></div>
<p dir="auto">read the <a href="https://wiki.mobileread.com/wiki/Eips" rel="nofollow">eips wiki</a> for details on what the flags mean</p>
<p dir="auto">you may want to clear the screen with a <code>eips -c</code> before the first frame</p>
<p dir="auto">unfortunately I lost the Go source code, but it was pretty simple, like under 30 lines</p>
<p dir="auto"><h3 dir="auto">step 3: screencapture + imagemagick</h3><a id="user-content-step-3-screencapture--imagemagick" aria-label="Permalink: step 3: screencapture + imagemagick" href="#step-3-screencapture--imagemagick"></a></p>
<p dir="auto">I wrote a script to use <code>screencapture</code> on macOS to repeatedly capture the screen into a png file, which is then converted into a shape, size and color the Kindle likes using imagemagick, and then transferred over usbnet using netcat</p>
<div dir="auto"><pre>/usr/sbin/screencapture -C -x /tmp/orig.png
convert /tmp/orig.png -rotate 270 -resize <span><span>'</span>810x1448!<span>'</span></span> -type GrayScale -depth 8 -colors 256 /tmp/gray.jpg
cat /tmp/gray.jpg <span>|</span> nc -w 0 192.168.15.244 8000</pre></div>
<p dir="auto">change the resolution to match your device and port to match the listener server</p>
<p dir="auto"><h3 dir="auto">step 4: ???</h3><a id="user-content-step-4-" aria-label="Permalink: step 4: ???" href="#step-4-"></a></p>
<p dir="auto">I hacked this together last night for fun and obviously there's a lot of room for improvement here, both in terms of performance and usability</p>
<p dir="auto">it's super wasteful to send a full jpeg file for each frame when the delta between consecutive frames is mostly going to be empty and very compressible (like when you're using a text editor)</p>
<p dir="auto">without reinventing codecs like h.264 and protocols like vnc, it should be possible to quickly improve this with just the tools we already have</p>
<p dir="auto">have fun!</p>
<p dir="auto"><h3 dir="auto">other useful resources</h3><a id="user-content-other-useful-resources" aria-label="Permalink: other useful resources" href="#other-useful-resources"></a></p>
<p dir="auto"><a href="https://www.sixfoisneuf.fr/posts/kindle-hacking-deeper-dive-internals/" rel="nofollow">https://www.sixfoisneuf.fr/posts/kindle-hacking-deeper-dive-internals/</a></p>
<p dir="auto"><a href="https://github.com/NiLuJe/KindleTool">https://github.com/NiLuJe/KindleTool</a></p>
<p dir="auto"><a href="https://www.mobileread.com/forums/showthread.php?t=356766" rel="nofollow">https://www.mobileread.com/forums/showthread.php?t=356766</a> - the vulnerability that makes LanguageBreak possible</p>
</article>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Buster: Captcha Solver for Humans (119 pts)]]></title>
            <link>https://github.com/dessant/buster</link>
            <guid>41155164</guid>
            <pubDate>Sun, 04 Aug 2024 17:47:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/dessant/buster">https://github.com/dessant/buster</a>, See on <a href="https://news.ycombinator.com/item?id=41155164">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dbb0a304ae0d3267ba044a95376151c24e534bb03b26c9b90bb369d06f49456a/68747470733a2f2f692e696d6775722e636f6d2f7556706d52386c2e706e67"><img width="128" height="128" src="https://camo.githubusercontent.com/dbb0a304ae0d3267ba044a95376151c24e534bb03b26c9b90bb369d06f49456a/68747470733a2f2f692e696d6775722e636f6d2f7556706d52386c2e706e67" data-canonical-src="https://i.imgur.com/uVpmR8l.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Buster: Captcha Solver for Humans</h2><a id="user-content-buster-captcha-solver-for-humans" aria-label="Permalink: Buster: Captcha Solver for Humans" href="#buster-captcha-solver-for-humans"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Supporting the Project</h2><a id="user-content-supporting-the-project" aria-label="Permalink: Supporting the Project" href="#supporting-the-project"></a></p>
<p dir="auto">The continued development of Buster is made possible
thanks to the support of awesome backers. If you'd like to join them,
please consider contributing with
<a href="https://armin.dev/go/patreon?pr=buster&amp;src=repo" rel="nofollow">Patreon</a>,
<a href="https://armin.dev/go/paypal?pr=buster&amp;src=repo" rel="nofollow">PayPal</a> or
<a href="https://armin.dev/go/bitcoin?pr=buster&amp;src=repo" rel="nofollow">Bitcoin</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Description</h2><a id="user-content-description" aria-label="Permalink: Description" href="#description"></a></p>
<p dir="auto">Buster is a browser extension which helps you to solve difficult CAPTCHAs
by completing reCAPTCHA audio challenges using speech recognition.
Challenges are solved by clicking on the extension button at the bottom
of the reCAPTCHA widget.</p>
<blockquote>
<p dir="auto">Obviously, this blue part here is the land.</p>
<p dir="auto">— Byron "Buster" Bluth, reading a map</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Motivation</h2><a id="user-content-motivation" aria-label="Permalink: Motivation" href="#motivation"></a></p>
<p dir="auto">reCAPTCHA challenges remain a considerable burden on the web,
delaying and often blocking our access to services and information
depending on our physical and cognitive abilities, our social
and cultural background, and the devices or networks we connect from.</p>
<p dir="auto">The difficulty of CAPTCHA challenges can be so out of balance,
that sometimes they seem friendlier to bots than they are to humans.</p>
<p dir="auto">The goal of this project is to improve our user experience on the web,
by giving us easy access to solutions utilized by automated systems.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Client App</h2><a id="user-content-client-app" aria-label="Permalink: Client App" href="#client-app"></a></p>
<p dir="auto">The client app enables you to simulate user interactions and improves
the success rate of the extension. Follow the instructions
from the extension's options to download and install the client app
on Windows, Linux and macOS, or get the app
from <a href="https://github.com/dessant/buster-client#readme">this</a> repository.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/4eabe4d6786a332c9a120b1e7a5722ea03f8316d4d3fe7c2f5a9cc6645f8f50a/68747470733a2f2f692e696d6775722e636f6d2f685471654e347a2e706e67"><img width="380" src="https://camo.githubusercontent.com/4eabe4d6786a332c9a120b1e7a5722ea03f8316d4d3fe7c2f5a9cc6645f8f50a/68747470733a2f2f692e696d6775722e636f6d2f685471654e347a2e706e67" data-canonical-src="https://i.imgur.com/hTqeN4z.png"></a>
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/7105dee4c1ed681e09d7112f46ff7bae3584ee009f2cc661e6ffa97ba444f001/68747470733a2f2f692e696d6775722e636f6d2f6f3071714464352e706e67"><img width="380" src="https://camo.githubusercontent.com/7105dee4c1ed681e09d7112f46ff7bae3584ee009f2cc661e6ffa97ba444f001/68747470733a2f2f692e696d6775722e636f6d2f6f3071714464352e706e67" data-canonical-src="https://i.imgur.com/o0qqDd5.png"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Copyright (c) 2018-2024 Armin Sebastian</p>
<p dir="auto">This software is released under the terms of the GNU General Public License v3.0.
See the <a href="https://github.com/dessant/buster/blob/main/LICENSE">LICENSE</a> file for further information.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[WhenFS: Calender Is Now a File System (271 pts)]]></title>
            <link>https://github.com/lvkv/whenfs</link>
            <guid>41154616</guid>
            <pubDate>Sun, 04 Aug 2024 16:35:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/lvkv/whenfs">https://github.com/lvkv/whenfs</a>, See on <a href="https://news.ycombinator.com/item?id=41154616">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvkv/whenfs/blob/master/images/wordart-3.png"><img src="https://github.com/lvkv/whenfs/raw/master/images/wordart-3.png" alt="whenfs your calendar is now a filesystem"></a></p>
<p dir="auto">WhenFS turns your Google Calendar into a FUSE filesystem. It whimsically supports the following features:</p>
<ul dir="auto">
<li>Create a filesystem out of existing Google Calendars, or create a new one from scratch</li>
<li>Read and write files, directories and... well, just files and directories</li>
<li>Mount your friends' WhenFS calendar file systems to share files in the silliest way possible</li>
</ul>
<p dir="auto">This is what the Mona Lisa looks like when uploaded to Google Calendar:</p>
<p dir="auto">
  <br>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/lvkv/whenfs/blob/master/images/mona_lisa.jpg"><img src="https://github.com/lvkv/whenfs/raw/master/images/mona_lisa.jpg"></a> .jpg
</p>
<p dir="auto">
  ⬇️
</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvkv/whenfs/blob/master/images/calendar_screenshot.png"><img src="https://github.com/lvkv/whenfs/raw/master/images/calendar_screenshot.png" alt="calendar screenshot"></a></p>
<p dir="auto">The image above contains all the image's data split up across hundreds of tiny calendar event descriptions.
The entire filesystem—files, directories, reads, writes and more—is all based on manipulating these Google Calendar events.</p>
<p dir="auto">WhenFS is an example of a <a href="http://tom7.org/harder/" rel="nofollow">harder drive</a>—a hard drive we didn't want or need.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">(Demo) Mount a Friend's File System</h2><a id="user-content-demo-mount-a-friends-file-system" aria-label="Permalink: (Demo) Mount a Friend's File System" href="#demo-mount-a-friends-file-system"></a></p>
<p dir="auto">WhenFS can mount existing WhenFS-ed Google Calendars when given the calendar's ID and ID of the file system recovery calendar event:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvkv/whenfs/blob/master/images/demo_cat.gif"><img src="https://github.com/lvkv/whenfs/raw/master/images/demo_cat.gif" alt="demo" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">(Demo) Transfer Files to Google Calendar</h2><a id="user-content-demo-transfer-files-to-google-calendar" aria-label="Permalink: (Demo) Transfer Files to Google Calendar" href="#demo-transfer-files-to-google-calendar"></a></p>
<p dir="auto">WhenFS can transfer a 3 KiB file to Google Calendar in just over 7 seconds—a blistering upload speed of 400 bytes per second:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvkv/whenfs/blob/master/images/demo.gif"><img src="https://github.com/lvkv/whenfs/raw/master/images/demo.gif" alt="demo" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How Does it Work?</h2><a id="user-content-how-does-it-work" aria-label="Permalink: How Does it Work?" href="#how-does-it-work"></a></p>
<p dir="auto">WhenFS operations start at the FUSE file system layer, facilitated by <a href="https://github.com/cberner/fuser">fuser</a>. The filesystem sits on top of a write-through object cache, which itself sits on top of an abstract data storage interface with swappable calendar API backends.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvkv/whenfs/blob/master/images/flow.png"><img src="https://github.com/lvkv/whenfs/raw/master/images/flow.png" alt="flow"></a></p>
<p dir="auto">If you poke around enough, you'll likely run into bugs, edge cases, and completely unimplemented features. There are no plans to fix these.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Why Did You Do This?</h2><a id="user-content-why-did-you-do-this" aria-label="Permalink: Why Did You Do This?" href="#why-did-you-do-this"></a></p>
<p dir="auto">I used this project as an opportunity to learn about Rust and FUSE file systems. I also think it's hilarious.</p>
<p dir="auto">Visitors interested in the code should note that this is an irredeemably messy codebase—it's full of hacks, unidiomatic code, and wildly poor design decisions.</p>
<p dir="auto">However, visitors should also note that that's okay. The best way to learn something new is to try it out for yourself—and creating a mess is a vital part of that process. The page you're on right now is my mess. Now go create yours!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How Do I Use This?</h2><a id="user-content-how-do-i-use-this" aria-label="Permalink: How Do I Use This?" href="#how-do-i-use-this"></a></p>
<p dir="auto">The diagram above took too long to create, so I no longer have the energy to write up a tutorial.</p>
<p dir="auto">If you figure out how to use this, let me know.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributions</h2><a id="user-content-contributions" aria-label="Permalink: Contributions" href="#contributions"></a></p>
<p dir="auto">Contributions are more than welcome.
Note that contributors are subject to a contributor license agreement ("CLA"), which requires that all
contributions be accompanied by a lighthearted meme that makes the author chuckle slightly, but not too much.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Praise My GitHub Profile (185 pts)]]></title>
            <link>https://praise-me.fly.dev/</link>
            <guid>41154560</guid>
            <pubDate>Sun, 04 Aug 2024 16:28:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://praise-me.fly.dev/">https://praise-me.fly.dev/</a>, See on <a href="https://news.ycombinator.com/item?id=41154560">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><!--frsh-praisebox_default:0:--><div><p>Instead of trying to tear eachother down with AI, why not use it to help lift others up?</p></div><!--/frsh-praisebox_default:0:--><p>Powered by Llama 3.1 70b and Fly.io GPUs.</p><p>An ad would go here if you didn't block them :)</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Jailbroke my Kindle to use it as an e-ink monitor (292 pts)]]></title>
            <link>https://gist.github.com/adtac/eb639d3c707b55a28f0ee9a420aa7e0c</link>
            <guid>41154410</guid>
            <pubDate>Sun, 04 Aug 2024 16:08:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gist.github.com/adtac/eb639d3c707b55a28f0ee9a420aa7e0c">https://gist.github.com/adtac/eb639d3c707b55a28f0ee9a420aa7e0c</a>, See on <a href="https://news.ycombinator.com/item?id=41154410">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="file-readme-md">
    <article itemprop="text">
<p dir="auto">demo: <a href="https://x.com/adtac_/status/1820127470613622950" rel="nofollow">https://x.com/adtac_/status/1820127470613622950</a> (3.5 fps, Paperwhite 3)</p>
<p dir="auto"><h3 dir="auto">step 1: jailbreak your Kindle</h3><a id="user-content-step-1-jailbreak-your-kindle" aria-label="Permalink: step 1: jailbreak your Kindle" href="#step-1-jailbreak-your-kindle"></a></p>
<p dir="auto"><a href="https://www.mobileread.com/forums" rel="nofollow">mobileread.com</a> is your best resource here, follow the instructions from <a href="https://www.mobileread.com/forums/showthread.php?t=356872" rel="nofollow">the LanguageBreak thread</a></p>
<p dir="auto">I didn't really follow the LanguageBreak instructions because I didn't care about most of the features + I was curious to do it myself, but the LanguageBreak github repo was invaluable for debugging</p>
<p dir="auto">it doesn't matter how you jailbreak your device as long as you get to a root shell somehow</p>
<p dir="auto"><h3 dir="auto">step 2: listener server on the Kindle</h3><a id="user-content-step-2-listener-server-on-the-kindle" aria-label="Permalink: step 2: listener server on the Kindle" href="#step-2-listener-server-on-the-kindle"></a></p>
<p dir="auto">I wrote a Go program to receive files on port 8000 and then invoke <code>eips</code>, which is Kindle's built-in utility to draw images on the screen</p>
<p dir="auto">for example, if the Go program received a JPG file and saved it under /tmp/img.jpg, the following command would draw the image with a partial update (full update looks awful):</p>
<div dir="auto"><pre>eips -g /tmp/img.jpg -w gc16 -x 128 -y 0</pre></div>
<p dir="auto">read the <a href="https://wiki.mobileread.com/wiki/Eips" rel="nofollow">eips wiki</a> for details on what the flags mean</p>
<p dir="auto">you may want to clear the screen with a <code>eips -c</code> before the first frame</p>
<p dir="auto">unfortunately I lost the Go source code, but it was pretty simple, like under 30 lines</p>
<p dir="auto"><h3 dir="auto">step 3: screencapture + imagemagick</h3><a id="user-content-step-3-screencapture--imagemagick" aria-label="Permalink: step 3: screencapture + imagemagick" href="#step-3-screencapture--imagemagick"></a></p>
<p dir="auto">I wrote a script to use <code>screencapture</code> on macOS to repeatedly capture the screen into a png file, which is then converted into a shape, size and color the Kindle likes using imagemagick, and then transferred over usbnet using netcat</p>
<div dir="auto"><pre>/usr/sbin/screencapture -C -x /tmp/orig.png
convert /tmp/orig.png -rotate 270 -resize <span><span>'</span>810x1448!<span>'</span></span> -type GrayScale -depth 8 -colors 256 /tmp/gray.jpg
cat /tmp/gray.jpg <span>|</span> nc -w 0 192.168.15.244 8000</pre></div>
<p dir="auto">change the resolution to match your device and port to match the listener server</p>
<p dir="auto"><h3 dir="auto">step 4: ???</h3><a id="user-content-step-4-" aria-label="Permalink: step 4: ???" href="#step-4-"></a></p>
<p dir="auto">I hacked this together last night for fun and obviously there's a lot of room for improvement here, both in terms of performance and usability</p>
<p dir="auto">it's super wasteful to send a full jpeg file for each frame when the delta between consecutive frames is mostly going to be empty and very compressible (like when you're using a text editor)</p>
<p dir="auto">without reinventing codecs like h.264 and protocols like vnc, it should be possible to quickly improve this with just the tools we already have</p>
<p dir="auto">have fun!</p>
<p dir="auto"><h3 dir="auto">other useful resources</h3><a id="user-content-other-useful-resources" aria-label="Permalink: other useful resources" href="#other-useful-resources"></a></p>
<p dir="auto"><a href="https://www.sixfoisneuf.fr/posts/kindle-hacking-deeper-dive-internals/" rel="nofollow">https://www.sixfoisneuf.fr/posts/kindle-hacking-deeper-dive-internals/</a></p>
<p dir="auto"><a href="https://github.com/NiLuJe/KindleTool">https://github.com/NiLuJe/KindleTool</a></p>
<p dir="auto"><a href="https://www.mobileread.com/forums/showthread.php?t=356766" rel="nofollow">https://www.mobileread.com/forums/showthread.php?t=356766</a> - the vulnerability that makes LanguageBreak possible</p>
</article>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Making your own hot sauce (168 pts)]]></title>
            <link>https://successfulsoftware.net/2024/08/04/making-your-own-hot-sauce/</link>
            <guid>41154334</guid>
            <pubDate>Sun, 04 Aug 2024 15:58:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://successfulsoftware.net/2024/08/04/making-your-own-hot-sauce/">https://successfulsoftware.net/2024/08/04/making-your-own-hot-sauce/</a>, See on <a href="https://news.ycombinator.com/item?id=41154334">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			
<p>I like hot sauces. My favourite is <a href="https://www.ringoffirehotsauce.com/product/ring-of-fire-original-habanero-hot-sauce/">Ring of fire</a>, a hot sauce that I first encountered in the US. It is a mix of habanero and serrano chillis, tomatoes, vinegar and spices. It is very tasty and (despite the name) not super hot.</p>


<div>
<figure><a href="https://successfulsoftware.net/wp-content/uploads/2024/08/ring-of-fire.jpg"><img data-attachment-id="12271" data-permalink="https://successfulsoftware.net/2024/08/04/making-your-own-hot-sauce/ring-of-fire-2/" data-orig-file="https://successfulsoftware.net/wp-content/uploads/2024/08/ring-of-fire.jpg" data-orig-size="185,586" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ring-of-fire" data-image-description="" data-image-caption="" data-medium-file="https://successfulsoftware.net/wp-content/uploads/2024/08/ring-of-fire.jpg?w=95" data-large-file="https://successfulsoftware.net/wp-content/uploads/2024/08/ring-of-fire.jpg?w=185" tabindex="0" role="button" width="185" height="586" src="https://successfulsoftware.net/wp-content/uploads/2024/08/ring-of-fire.jpg?w=185" alt=""></a></figure></div>


<p>However, it has become increasingly difficult and expensive to get ‘Ring of fire’ in the UK. And most of the hot sauces available in UK shops are lacking in either flavour or heat, or often both. So I decided to have a go at creating my own hot sauce. It is surprisingly easy. The basic process is:</p>



<ul>
<li><a href="https://www.thespruceeats.com/how-lacto-fermentation-works-1327598">Lacto-ferment</a> chillis with your choice of veg and/or fruit in a brine solution for a couple of weeks at room temperature.</li>



<li>Chuck away most of the brine.</li>



<li>Add vinegar.</li>



<li>Blend it.</li>



<li>Simmer it in a pan to thicken.</li>



<li>Bottle.</li>
</ul>



<p>Lacto-fermentation in brine enhances the flavour and should kill off any bad bacteria. Typically, you want about 2-3% salt to water. Ideally you should also have an airlock to vent any gases created in the fermentation. If you don’t vent the gases, there might be an explosion! You can buy fermentation jars with airlocks or just buy the airlock and drill a hole into an existing jar lid.</p>



<figure><a href="https://successfulsoftware.net/wp-content/uploads/2024/08/img_2273.jpeg"><img data-attachment-id="12275" data-permalink="https://successfulsoftware.net/2024/08/04/making-your-own-hot-sauce/img_2273/" data-orig-file="https://successfulsoftware.net/wp-content/uploads/2024/08/img_2273.jpeg" data-orig-size="1280,960" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;1.8&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;iPhone 7&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1708433645&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;3.99&quot;,&quot;iso&quot;:&quot;40&quot;,&quot;shutter_speed&quot;:&quot;0.058823529411765&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="IMG_2273" data-image-description="" data-image-caption="" data-medium-file="https://successfulsoftware.net/wp-content/uploads/2024/08/img_2273.jpeg?w=300" data-large-file="https://successfulsoftware.net/wp-content/uploads/2024/08/img_2273.jpeg?w=625" tabindex="0" role="button" width="1024" height="768" src="https://successfulsoftware.net/wp-content/uploads/2024/08/img_2273.jpeg?w=1024" alt=""></a></figure>



<p>Simmering is optional. But I found that it improved the taste and consistency. It also kills off the fermentation. And you don’t really want it fermenting once it is bottled, as this could get messy when you open the lid.</p>



<p>So far I have tried 3 main recipes:</p>



<ul>
<li>Lacto-fermented green chillis and onions, mixed with tinned tomato. This was really nice. Comparable to the ‘Ring of fire’ I was trying to emulate.</li>



<li>Lacto-fermented scotch bonnet chillis and pineapple, mixed with tinned mango. This was amazing. Even better than ‘Ring of fire’ in my modest opinion. Beginner’s luck, perhaps.</li>



<li>Lacto-fermented scotch bonnet chillis and banana. A hot, pink, textureless sludge. Ghastly. Went straight in the bin.</li>
</ul>



<p>Here is my scotch bonnet, pineapple and mango sauce (<a href="https://successfulsoftware.net/2023/06/29/oryx-digital-sponsored-team-wins-gold-at-international-rocketry-challenge/">rocket themed</a>, of course).</p>


<div>
<figure><a href="https://successfulsoftware.net/wp-content/uploads/2024/08/chilli-sauce.jpg"><img data-attachment-id="12273" data-permalink="https://successfulsoftware.net/2024/08/04/making-your-own-hot-sauce/chilli-sauce/" data-orig-file="https://successfulsoftware.net/wp-content/uploads/2024/08/chilli-sauce.jpg" data-orig-size="556,1000" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;1.8&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;iPhone 7&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1709585592&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;3.99&quot;,&quot;iso&quot;:&quot;50&quot;,&quot;shutter_speed&quot;:&quot;0.058823529411765&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="chilli-sauce" data-image-description="" data-image-caption="" data-medium-file="https://successfulsoftware.net/wp-content/uploads/2024/08/chilli-sauce.jpg?w=167" data-large-file="https://successfulsoftware.net/wp-content/uploads/2024/08/chilli-sauce.jpg?w=556" tabindex="0" role="button" width="556" height="1000" src="https://successfulsoftware.net/wp-content/uploads/2024/08/chilli-sauce.jpg?w=556" alt=""></a></figure></div>


<p>Making the sauce yourself also means that you can tweak the flavour, heat and acidity to your own preferences.</p>



<p>A word of caution. If you are careless, you could end up with botulism, <a href="https://www.cdc.gov/botulism/about/index.html">one of the deadliest toxin known to man</a>! So make sure the fermentation vessel is airtight and everything is clean. A white yeast forming on the surface is probably ok. Anything furry forming is definitely not ok, and you need to throw it all away and start again. Note that garlic cloves can turn blue or green during lacto-fermentation and this is ok (I only found this out after I had thrown away a batch).</p>



<p>If your sauce has a sufficiently high salt and/or acid level it shouldn’t grow anything nasty. But you should keep it in the fridge and use within a few weeks to be on the safe side.</p>



<p>So far I have used shop bought chillis. But I am now growing my own chillis as well.</p>



<p>There are plenty of good videos on Youtube about making hot sauces and growing chillis. I recommend <a href="https://www.youtube.com/@ChilliChump">Chillichump</a> (recommended to me by my friend John Moodie).</p>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Porting My JavaScript Game Engine to C for No Reason (419 pts)]]></title>
            <link>https://phoboslab.org/log/2024/08/high_impact</link>
            <guid>41154135</guid>
            <pubDate>Sun, 04 Aug 2024 15:26:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phoboslab.org/log/2024/08/high_impact">https://phoboslab.org/log/2024/08/high_impact</a>, See on <a href="https://news.ycombinator.com/item?id=41154135">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>	
	<div>
		
		<p>— Sunday, August 4th 2024</p>
	</div>
	

	<h2>high_impact</h2>
<p>tl;dr: <a href="https://github.com/phoboslab/high_impact">high_impact</a> is small game engine for 2D action games. It's written in C, compiles to Windows, Mac and Linux as well as to WASM for the Web. It's “inspired by” my original <a href="https://impactjs.com/">Impact</a> JavaScript game engine from 2010. The name high_impact is a nod to a time when C was considered a high level language.</p>
<p>MIT licensed, source on github: <a href="https://github.com/phoboslab/high_impact">github.com/phoboslab/high_impact</a></p>


<h2>Ancient History</h2>
<p>In April 2010 Steve Jobs published an open letter titled <a href="https://en.wikipedia.org/wiki/Thoughts_on_Flash">“Thoughts on Flash”</a>, in which he outlined the decision to not ever support Flash on iOS.</p>
<p>Flash was a browser plugin that — until then — was so vital for the web that it was bundled with browsers and included in Windows updates. Websites like Newgrounds and Kongregate, devoted entirely to Flash Games and Animations, marked the epicenter of Internet Culture. The importance of Flash cannot be overstated: A web without Flash was a boring web.</p>
<p>While Android supported Flash, it was a total shit show and everybody knew it. Adobe, ever reluctant to do the right thing, made no effort to improve on its shortcomings on mobile. With Apple refusing to let this rotting, closed source code base run on iOS, it marked the beginning of the end.</p>
<p>No Flash meant no games in the browser. Or so was the thought.</p>
<p>At the time I was looking for a project for my bachelor thesis and stumbled upon the little used JavaScript Canvas2D API. Canvas2D allowed you to draw images and shapes into a <code>&lt;canvas&gt;</code> element on your website. It was invented and implemented by Apple/Safari (with no standards procedure) for the purpose of rendering desktop widgets: Weather forecasts, calendars, stock tickers and other mildly useful fluff.</p>
<p>Google and Mozilla soon followed with support for Canvas2D while Microsoft forgot that the Web existed – but that was ok, nobody cared about Internet Explorer anymore. Canvas2D was supported by all <em>serious</em> browsers.</p>
<p>So I set out to proof that you don't need Flash to make games for the Web. The result was <a href="https://playbiolab.com/">Biolab Disaster</a>.</p>
<p><img src="https://phoboslab.org/content/assets/biolab-title.png" alt="Biolab Disaster Title Screen">
<em>The Biolab Disaster Title Screen, with the the key art borrowed from the amazingly talented <a href="http://androidarts.com/">Arne Niklas Jansson</a>.</em></p>
<p>I felt I had succeeded when famous Apple aficionado John Gruber published a <a href="https://daringfireball.net/linked/2010/09/13/biolab-disaster">two-sentence piece</a> about the game with the purpose (as I perceived it) to redeem Steve Job's decision.</p>
<p>To make Biolab Disaster I had to create a game engine and level editor all while <a href="https://phoboslab.org/log/2011/03/the-state-of-html5-audio">jumping</a> <a href="https://phoboslab.org/log/2011/03/multiple-channels-for-html5-audio">through</a> <a href="https://phoboslab.org/log/2012/09/drawing-pixels-is-hard">countless</a> <a href="https://phoboslab.org/log/2012/06/measuring-input-lag-in-browsers">hoops</a> that the early Canvas and Audio APIs demanded. Only with all the attention that the 2010 Web had to offer, I realized what I had.</p>
<p>I decided to polish my code, write extensive documentation for it and then released Impact. Not for free, but for a rather steep $99. My decision to sell it was met with a lot of backlash but <a href="https://phoboslab.org/log/2011/01/impact-sales-report">was successful enough</a> to launch me into a self-sustained career. I ended up selling more than 3000 licenses.</p>
<p>Many Web games were created with Impact and it even served as the basis for some commercial cross-platform titles like <a href="https://store.steampowered.com/app/368340/CrossCode/">Cross Code</a>, <a href="https://store.steampowered.com/app/293440/Elliot_Quest/">Eliot Quest</a> and my own Nintendo Wii-U game <a href="https://xtype-plus.com/">XType Plus</a>.</p>
<p>At the end of its life, I released Impact <a href="https://phoboslab.org/log/2018/05/impact-is-now-free-open-source">for free</a>.</p>
<p>A few weeks ago I started to build Impact <em>again</em> from the ground up, but this time in C, instead of JavaScript.</p>
<h2>Why C?</h2>
<p>C is a fun little language. It's miles apart from all the things I write for money. It's very simple, yet extremely deep. It paralells everything I love in games: easy to learn, hard to master.</p>
<p>I slowly re-discovered my love for C – first when I ported my <a href="https://phoboslab.org/log/2017/02/decode-it-like-its-1999">JavaScript MPEG1 decoder</a> to the <a href="https://phoboslab.org/log/2019/06/pl-mpeg-single-file-library">single header pl_mpeg library</a>, then implementing VR in <a href="https://phoboslab.org/log/2016/05/quake-for-oculus-rift">Quake for Oculus Rift</a>, created the <a href="https://phoboslab.org/log/2021/11/qoi-fast-lossless-image-compression">QOI image format</a> &amp; <a href="https://phoboslab.org/log/2023/02/qoa-time-domain-audio-compression">QOA audio format</a> and lastly <a href="https://phoboslab.org/log/2023/08/rewriting-wipeout">re-wrote wipEout</a>.</p>
<p>Impact was quite simple; by no means comparable to Godot, Unreal or Unity. Still it proved to be a solid basis for a lot of different games. </p>
<p>Rewriting Impact in C should be a fun exercise.</p>
<h2>Concept</h2>
<p>As with most things I write for fun, I try to condense it down to its simplest form. Everything in high_impact is implemented as straight forward as possible, with the absolute minimum amount of code I could come up with. Achieving this with C is not always easy, but for me that's the most enjoyable part of this whole project.</p>
<p>The basic idea for high_impact is the same as for the original JavaScript game engine: you get the facilities for loading tile-maps and creating, updating and drawing game objects (“entities”). The game engine handles the physics and collision detection between entities and with the collision map. high_impact also provides the functionality for simple sprite-sheet animations, drawing text and playing sound effects and music.</p>
<p>high_impact is not a “library”, but rather a framework. It's an empty scaffold, that you can fill. You write your business logic <em>inside</em> the framework.</p>
<p>At the very bottom of this framework sits the <code>platform</code> backend. high_impact currently compiles with either of two platforms: <a href="http://www.libsdl.org/">SDL</a> or <a href="https://github.com/floooh/sokol">Sokol</a>.</p>
<p>Your game code sits in one or more “scenes” (think: “title_screen”, “menu”, “game”, ...), where a scene is just a struct with some function pointers. You initially call <code>engine_set_scene(&amp;scene_game)</code> and the engine will set up the new scene, call <code>scene_game.init()</code> once and then <code>scene_game.update()</code> &amp; <code>scene_game.draw()</code> for every frame.</p>
<p>Tile-maps and the initial entities can be loaded from a .json file (utilizing my <a href="https://github.com/phoboslab/pl_json">pl_json</a> library) or created on the fly. The reason I chose JSON for the level format was simply backwards compatibility with the original Impact.</p>
<p>To do some dogfooding, high_impact loads images in <a href="https://qoiformat.org/">QOI</a> and sounds/music in <a href="https://qoaformat.org/">QOA</a> format. The Makefile for the demo games is set up to automatically convert all assets to these formats (i.e. PNG to QOI and WAV to QOA). This means there's no need to include any other image/sound decoding libraries.</p>
<p>Future versions of high_impact may support different asset formats, but I quite like how the simplicity of these formats continue the whole theme of this project.</p>
<h2>Entities</h2>
<p>All entities (the dynamic objects in the game world) share the same <code>entity_t struct</code> that contains all properties that high_impact needs: position, velocity, size, etc. Each entity being the same byte size makes storage and management trivial.</p>
<p>To move your entities you set the velocity or acceleration and high_impact handles all the rest.</p>
<p>Through a macro, high_impact allows you to extend the basic entity struct with some custom per-entity properties. How you extend this struct is up to you. Biolab Disaster uses a <code>union</code>, with one struct per entity type, but there are good arguments to just have a “fat struct” instead. For what it's worth, Drop doesn't need to define any additional properties.</p>
<pre><code><span>ENTITY_DEFINE</span><span>(</span>
    <span>union</span> <span>{</span>
        <span>struct</span> <span>{</span>
            <span>float</span> high_jump_time<span>;</span>
            <span>float</span> idle_time<span>;</span>
            <span>bool</span> flip<span>;</span>
            <span>bool</span> can_jump<span>;</span>
            <span>bool</span> is_idle<span>;</span>
        <span>}</span> player<span>;</span>

        <span>struct</span> <span>{</span>
            entity_list_t targets<span>;</span>
            <span>float</span> delay<span>;</span>
            <span>float</span> delay_time<span>;</span>
            <span>bool</span> can_fire<span>;</span>
        <span>}</span> trigger<span>;</span>

        <span>// ...
</span>    <span>}</span>
<span>);</span></code></pre>
<p>In your game, you can access a struct in this union like so:</p>
<pre><code><span>static</span> <span>void</span> update<span>(</span>entity_t <span>*</span><span>self</span><span>)</span> <span>{</span>
    <span>self</span><span>-&gt;</span>player<span>.</span>idle_time <span>+=</span> engine<span>.</span>tick<span>;</span>
<span>}</span></code></pre>
<p>Each of your entity types also needs to supply a <code>entity_vtab_t</code> that provides the function pointers used by this entity:</p>
<pre><code><span>// Called for every frame
</span><span>static</span> <span>void</span> update<span>(</span>entity_t <span>*</span><span>self</span><span>)</span> <span>{</span>
    <span>// Your own update logic here
</span>    <span>// ...
</span>
    <span>// Update physics, handled by high_impact
</span>    entity_base_update<span>(</span><span>self</span><span>);</span>
<span>}</span>

<span>// Called when this entity overlaps another one where
</span><span>// (self-&gt;check_against &amp; other-&gt;group)
</span><span>static</span> <span>void</span> touch<span>(</span>entity_t <span>*</span><span>self</span><span>,</span> entity_t <span>*</span>other<span>)</span> <span>{</span>
    entity_damage<span>(</span>other<span>,</span> <span>self</span><span>,</span> <span>10</span><span>);</span>
<span>}</span>

entity_vtab_t entity_vtab_blob <span>=</span> <span>{</span>
    <span>.</span>update <span>=</span> update<span>,</span>
    <span>.</span>touch <span>=</span> touch<span>,</span>
    <span>// ...
</span><span>};</span></code></pre>
<p>All entries in this <code>entity_vtab_t</code> are optional. See <a href="https://github.com/phoboslab/high_impact/blob/master/src/entity.h#L58">entity.h</a> for a list of all available functions.</p>
<p>Like for most other things in high_impact, there's a fixed size storage for all entities. By default you can have 1024 active entities, but this can be configured by defining <code>ENTITIES_MAX</code>. The engine easily handles up to 64k entities.</p>


<p>Whenever you want to hold a reference to an entity for more than one frame, you can get a <code>entity_ref_t</code>, which is just a <code>struct { uint16_t id, index; };</code> – a unique id for that entity and the index into the entity storage array. This can be resolved (very cheaply) to a pointer again using <code>entity_by_ref()</code>. This ensures that the entity at the particular index still has the id that we expect and is not a different entity that happens to occupy the same storage address after the original died. Using an <code>uint16_t</code> for the index here is also the reason for the hard 64k maximum active entities. If you need more, change the source!</p>
<p>The entity system is the one part where working with C gets a bit awkward. What I wanted is simple OOP with classes and single inheritance, but that takes some fiddling with C. Still, high_impact tries to make this as ergonomic as possible.</p>
<p>A lot of people (<a href="https://www.youtube.com/watch?v=dS6rCaDSwW8">not</a> <a href="https://www.youtube.com/watch?v=w7W3xM2tzRA">Jonathan</a> <a href="https://www.youtube.com/watch?v=4t1K66dMhWk">Blow</a>) believe that OOP (I use the term loosely here) is the wrong approach for entities and you should rather do some kind of composition (e.g. going full “Entity Component System” with <a href="https://www.flecs.dev/">FLECS</a> or others). However, with all the games that I wrote, I found this “naive” OOP approach to <em>just work</em>. All logic for a particular entity type sits in a single place it's extremely easy to reason about.</p>
<h2>Collision Detection/Response</h2>
<p>The easy way to handle game world collisions is to check if an entity can move to a new position and if not: just stop it. This is usually good enough (it worked well for <a href="https://phoboslab.org/log/2024/08/log/2021/09/q1k3-making-of">Q1k3</a> and <a href="https://phoboslab.org/log/2018/09/underrun-making-of">Underrun</a>), but can produce some weird behavior for fast moving objects: imagine in a 2D platformer the player is falling towards the ground. 16px above the ground, the next movement step will put the player inside the ground – so the player is stopped mid air. In the next frame, gravity is applied again and the player moves further to the ground. This looks like a "soft landing".</p>
<p>high_impact instead traces the entity's box against the tile-map and calculates the exact point of impact. This is a bit more involved than a simple yes/no check but produces far better results. high_impact can also handle sloped tiles, which complicates this tracing a fair bit. See <a href="https://github.com/phoboslab/high_impact/blob/master/src/trace.c">trace.c</a> for the details.</p>
<p>When an entity hits a tile, we may also have to do a second trace with the remaining velocity. E.g. if you hit the ground at an angle the entity's <code>vel.y</code> is set to <code>0</code>, but we don't want to stop the entity at the exact hit point. So we do the second trace with the remaining <code>vel.x</code> to slide along the ground.</p>
<p>Collisions between entities is handled separately. Each entity defines how it wants to collide with other entities. E.g. particles may want to collide with the tile map, but not collide with other entities at all. Moving platforms collide with other entities, but should not move in a collision response.</p>


<p>The broad phase collision detection sorts all entities by their <code>pos.x</code>, which is cheap with an insertion sort, as the entities are already mostly sorted from the last frame. With the sorted entities, we only have to go from left to right, checking each entity against all entities that lie between <code>pos.x</code> and <code>pos.x + size.x</code>.</p>
<p>This "sweep and prune" is fast as long as we don't have too many entities overlapping at similar x positions. I.e. a big tower of stacked boxes is this worst case for this approach. Some games (e.g. vertical shooters) may also want to change the sweep axis. This can be done with <code>#define ENTITY_SWEEP_AXIS y</code>.</p>
<h2>Rendering</h2>
<p>high_impact currently comes with two renderers: OpenGL and an (incomplete) software renderer. Since all rendering goes through a very slim API and the actual draw calls are using a single function, implementing different backends is quite straight forward. The functions an additional rendering backend needs to support are:</p>
<pre><code><span>void</span> render_backend_init<span>(</span><span>void</span><span>);</span>
<span>void</span> render_backend_cleanup<span>(</span><span>void</span><span>);</span>

<span>void</span> render_set_screen<span>(</span>vec2i_t size<span>);</span>

<span>void</span> render_frame_prepare<span>(</span><span>void</span><span>);</span>
<span>void</span> render_frame_end<span>(</span><span>void</span><span>);</span>

<span>void</span> render_draw_quad<span>(</span>quadverts_t <span>*</span>quad<span>,</span> texture_t texture_handle<span>);</span></code></pre>
<p>Plus three more to handle textures:</p>
<pre><code>texture_mark_t textures_mark<span>(</span><span>void</span><span>);</span>
<span>void</span> textures_reset<span>(</span>texture_mark_t mark<span>);</span>

texture_t texture_create<span>(</span>vec2i_t size<span>,</span> rgba_t <span>*</span>pixels<span>);</span></code></pre>
<p>Of course this is fairly simplistic: you can only draw quads and can't use any shader effects, but for the purpose of this game engine it's enough.</p>
<p>The software renderer is just 140 lines of code (see <a href="https://github.com/phoboslab/high_impact/blob/master/src/render_software.h">render_software.c</a>) though I cheated a bit by only supporting axis aligned quads.</p>
<p>The OpenGL renderer (see <a href="https://github.com/phoboslab/high_impact/blob/master/src/render_gl.h">render_gl.c</a>) is a bit more involved, as it tries to fit the rendering for a whole frame into a single OpenGL draw call. This is achieved in two ways: </p>
<ol>
<li>all quads to be drawn are collected into a big buffer and handed over to OpenGL with <code>glDrawElements()</code> at once</li>
<li>all textures are combined into a single texture atlas. We never have to rebind any textures.</li>
</ol>
<p>Texture atlases are quite oldschool and have their own drawbacks. Strictly speaking, they are not needed anymore with bindless textures, but these are not supported everywhere. </p>
<p>While high_impact only supports a single texture atlas, the atlas size is configurable through a <code>#define</code>. Mobile GPUs typically support 8k×8k textures while modern Desktop GPUs seem to max out at 32k×32k. Good enough for the purpose of this engine. For what it's worth, Biolab Disaster and Drop use a 512×512 atlas.</p>
<h2>Sound</h2>
<p>Sound output is handled by SDL2 or Sokol, so we only need to handle loading, decoding and mixing of multiple sounds. The sound system is split into a <code>sound_source_t</code> holding the underlying samples, and a <code>sound_t</code> that represents a currently playing sound using one of the sources.</p>
<p>The system is an adaptation of the one I wrote for <a href="https://phoboslab.org/log/2023/08/rewriting-wipeout">wipEout</a> and can decompress QOA on demand.</p>
<p>Again, everything is statically allocated. There's a fixed number of sources you can load and a fixed number of sounds you can play at a time. Sounds are automatically disposed when they finished playing, so that they can be reused. The whole system is set up in way that you don't have to think about it much.</p>
<p>As an example from Drop, here's how the bounce sound of the player entity is loaded/played:</p>
<pre><code><span>static</span> sound_source_t <span>*</span>sound_bounce<span>;</span>

<span>static</span> <span>void</span> load<span>(</span><span>void</span><span>)</span> <span>{</span>
    sound_bounce <span>=</span> sound_source<span>(</span><span>"assets/bounce.qoa"</span><span>);</span>
<span>}</span>

<span>static</span> <span>void</span> collide<span>(</span>entity_t <span>*</span><span>self</span><span>,</span> vec2_t normal<span>,</span> trace_t <span>*</span>trace<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>normal<span>.</span>y <span>==</span> <span>-</span><span>1</span> <span>&amp;&amp;</span> <span>self</span><span>-&gt;</span>vel<span>.</span>y <span>&gt;</span> <span>32</span><span>)</span> <span>{</span>
        sound_play<span>(</span>sound_bounce<span>);</span>
    <span>}</span>
<span>}</span></code></pre>
<p>Sounds can change volume, be panned (shifted left or right) and change pitch (the playback speed). Setting pitch to a negative value plays it backwards. The “resampling” needed for the variable pitch is pretty low quality: just a nearest neighbor interpolation.</p>
<p>See <a href="https://github.com/phoboslab/high_impact/blob/master/src/sound.h">sound.h</a> for the documentation and <a href="https://github.com/phoboslab/high_impact/blob/master/src/sound.c">sound.c</a> for the implementation details.</p>
<h2>Memory Management</h2>
<p>This is the fun part. Memory management in C is often regarded as some sort of black magic and many tutorials and libraries over-complicate things a lot. For games in particular, we can make it much simpler. In fact, in high_impact you don't have to think about memory much at all.</p>
<p>For games that don't have any user created assets, you know exactly how much memory you need. Either the largest scene fits or it doesn't. So high_impact statically allocates a single array of bytes, called the “hunk”. This is the only memory high_impact uses. The size of the hunk is configurable through <code>#define ALLOC_SIZE</code>. From that hunk, you can allocate memory using two ways:</p>
<ol>
<li>At the beginning of the hunk, growing upwards, is a bump allocator (also known as an “arena”) that holds all assets and other data needed for the game, entities and the current scene.</li>
<li>At the end of the hunk, growing downwards, is a temp allocator that behaves like <code>malloc()</code> and <code>free()</code>. This is meant as temporary storage when loading assets e.g. to decompress an image before handing the pixels over to the GPU.</li>
</ol>
<p>The bump allocator has multiple “high water marks” and resets automatically to these at certain times. This means you never have to explicitly <code>free()</code> some bump allocated memory. It behaves a bit like autorelease pools in the Apple ecosystem. Conceptually it looks like this:</p>
<pre><code>game {
    scene {
        frame {}
    }
}</code></pre>
<ol>
<li>Everything you allocate <em>before</em> setting the first scene will only be freed when the program ends</li>
<li>Everything you allocate during <code>scene.load()</code> will be freed when the scene ends</li>
<li>Everything you allocate while a scene is running will be freed at the end of the frame</li>
</ol>
<p>One simplification here is that we call <code>load()</code> for each entity type at stage 1, since we don't know ahead of time which entities might be used in a scene. Level data and everything else that is only needed for the current scene is at stage 2, and things you only need for the logic of a current frame at stage 3.</p>
<p>You can also specifically wrap your code in an additional allocation context:</p>
<pre><code>alloc_pool<span>()</span> <span>{</span>
    <span>void</span> <span>*</span>result <span>=</span> memory_intensive_computation<span>();</span>
    do_something<span>(</span>result<span>);</span>
<span>}</span></code></pre>
<p>Which is just a shorthand for:</p>
<pre><code>bump_mark_t mark <span>=</span> bump_mark<span>();</span>
<span>void</span> <span>*</span>result <span>=</span> memory_intensive_computation<span>();</span>
do_something<span>(</span>result<span>);</span>
bump_reset<span>(</span>mark<span>);</span></code></pre>
<p>There's some more documentation of the system in <a href="https://github.com/phoboslab/high_impact/blob/master/src/alloc.h">alloc.h</a>.</p>
<h2>The Level Editor</h2>
<p>The original Impact came with a level editor called “Weltmeister”. I decided to make this part of high_impact as well. It's still written in JavaScript and uses much of the original source, but was updated for some modern browser features.</p>


<p>Weltmeister is completely self-contained. You can just double-click the <code>weltmeister.html</code> and start building levels. In the old days Weltmeister needed a backend API (written in PHP or NodeJS) to load and save files. Now with the <a href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_API">FileSystemAPI</a> we can just ask for access to a certain folder. Sadly, this is not yet fully supported by Safari or Firefox (particularly the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/showDirectoryPicker">showDirectoryPicker()</a> function), so you need a Chrome-ish browser.</p>
<p>I hope Mozilla will get their shit together at some point (or <a href="https://ladybird.org/">Ladybird</a> can fill the gap). This is such a cool way to deliver cross platform apps that can read/write the filesystem.</p>
<p>Weltmeister reads your C source files and collects all entity types from it. high_impact comes with some macros that do <em>nothing</em>, but are understood by Weltmeister to change the appearance and behavior of the entities in the editor.</p>
<pre><code><span>#define EDITOR_SIZE(X, Y)     // Size in the editor. Default (8, 8)
</span><span>#define EDITOR_RESIZE(RESIZE) // Whether the entity is resizable in the editor
</span><span>#define EDITOR_COLOR(R, G, B) // The box color in the editor. Default (128, 255, 128)
</span><span>#define EDITOR_IGNORE(IGNORE) // Whether this entity can be created in the editor
</span></code></pre>
<p>E.g. the <a href="https://github.com/phoboslab/high_biolab/blob/master/src/entities/trigger.c">trigger entity</a> in Biolab Disaster is configured with this</p>
<pre><code><span>EDITOR_SIZE</span><span>(</span><span>8</span><span>,</span> <span>8</span><span>);</span>
<span>EDITOR_RESIZE</span><span>(</span><span>true</span><span>);</span>
<span>EDITOR_COLOR</span><span>(</span><span>255</span><span>,</span> <span>229</span><span>,</span> <span>14</span><span>);</span></code></pre>
<h2>Demo Games</h2>
<p>To make sure high_impact actually works as a game engine I ported two of my original Impact games to C.</p>
<p>This was honestly quite a mundane task. It's just a “transliteration” of the original JS source and re-uses all existing assets. I'll view the lack of challenges here as a testament to high_impact working as intended.</p>
<h3>Biolab Disaster</h3>
<p>The original launch title for Impact. A side scrolling Jump'n'Gun.</p>
<ul>
<li>Source: <a href="https://github.com/phoboslab/high_biolab">github.com/phoboslab/high_biolab</a></li>
<li>high_impact WASM version: <a href="https://phoboslab.org/high_impact/biolab">/high_impact/biolab</a></li>
<li>Original JS version: <a href="https://playbiolab.com/">playbiolab.com</a></li>
</ul>
<h3>Drop</h3>
<p>A super simple arcade game.</p>
<ul>
<li>Source: <a href="https://github.com/phoboslab/high_drop">github.com/phoboslab/high_drop</a></li>
<li>high_impact WASM version: <a href="https://phoboslab.org/high_impact/drop">/high_impact/drop</a></li>
<li>Original JS version: <a href="https://impactjs.com/drop/">impactjs.com/drop/</a></li>
<li>My current high score: <a href="https://x.com/phoboslab/status/1815441819540373600">26789 Points</a></li>
</ul>
<h2>Extensibility</h2>
<p>high_impact works as a traditional game engine, where all game specific code is <em>additive</em>. I.e. you don't need to change the source code of the engine itself, but I hope it is simple enough that you <em>can</em> change the engine source as needed. This is not an ivory tower. Go wild!</p>
<p>The platform and renderer of high_impact are meant to be extensible without necessitating changes to the rest of the code. If anyone cares about high_impact at all, I'd hope to see support for lots of different systems and I welcome pull requests for Vulkan, DirectX &amp; Metal and maybe even platform backends for PSX, N64, Dreamcast and whatever else you can think of.</p>
<p>It's C. It should run everywhere.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Written by a 16 year old, a book on how computers work (181 pts)]]></title>
            <link>https://github.com/hackclub/RAM-a-thon</link>
            <guid>41153892</guid>
            <pubDate>Sun, 04 Aug 2024 14:48:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/hackclub/RAM-a-thon">https://github.com/hackclub/RAM-a-thon</a>, See on <a href="https://news.ycombinator.com/item?id=41153892">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">RAM-a-thon</h2><a id="user-content-ram-a-thon" aria-label="Permalink: RAM-a-thon" href="#ram-a-thon"></a></p>
<p dir="auto">The handy explanation of computers you've always subconsciously dreamed of, now a reality.</p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/130414333/354840037-d984fb97-4b05-43d0-aa57-6cf34c962fd7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjI4MDAxMDQsIm5iZiI6MTcyMjc5OTgwNCwicGF0aCI6Ii8xMzA0MTQzMzMvMzU0ODQwMDM3LWQ5ODRmYjk3LTRiMDUtNDNkMC1hYTU3LTZjZjM0Yzk2MmZkNy5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwODA0JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDgwNFQxOTMwMDRaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1iNGFlMzk4ZmMyOGVjMGY4YTAwOWVlMGEwYzUyNTY3NWIzNjI0OWUxMThiMmM3Nzk0Nzg5MzAzMjg0YzJhNDI1JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.sR6zY-aTSWSH0cUY9E2IZkqWDO5nQk4O7yTT37pO2iU"><img width="1506" alt="GHbannerba" src="https://private-user-images.githubusercontent.com/130414333/354840037-d984fb97-4b05-43d0-aa57-6cf34c962fd7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjI4MDAxMDQsIm5iZiI6MTcyMjc5OTgwNCwicGF0aCI6Ii8xMzA0MTQzMzMvMzU0ODQwMDM3LWQ5ODRmYjk3LTRiMDUtNDNkMC1hYTU3LTZjZjM0Yzk2MmZkNy5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwODA0JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDgwNFQxOTMwMDRaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1iNGFlMzk4ZmMyOGVjMGY4YTAwOWVlMGEwYzUyNTY3NWIzNjI0OWUxMThiMmM3Nzk0Nzg5MzAzMjg0YzJhNDI1JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.sR6zY-aTSWSH0cUY9E2IZkqWDO5nQk4O7yTT37pO2iU"></a>
<p dir="auto">This is a big topic, where you're either a 1 or a 0. But it dosen't matter as long as you don't cause a stackoverflow.</p>
<p dir="auto">So, After all these years of unknowingly working with computers, i KNEW that i didn't have good enough understanding of what i was using. So as any sane person, I spent hours and hours just researching on my own to end up with 20 thousand words and the conclusion that CP-YOUs are dumb and made out of sand as a prime material (and that's a fact).</p>
<p dir="auto">Quo duo pro, you check it out here --&gt; <a href="https://ram-a-thon.vercel.app/" rel="nofollow">RAM-a-thon, Segment 0</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Belenios: Verifiable online voting system (159 pts)]]></title>
            <link>https://www.belenios.org/</link>
            <guid>41153158</guid>
            <pubDate>Sun, 04 Aug 2024 12:41:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.belenios.org/">https://www.belenios.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41153158">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
	Belenios aims at providing an easy to use voting system,
	guaranteeing state-of-the-art security, namely vote privacy
	and verifiability. It can be used in many types of elections (including referendums),
	ranging from scientific councils to sport associations.  </p><p>The main goal of this release is to correct an issue raised
          by Olivier Pereira regarding the implementation of the
          Distributed Key Generation (DKG) scheme in the threshold
          mode, that is when the election key is distributed among n
          trustees, with a threshold of k trustees to decrypt the election. This is now fixed by adding an extra signature
          field. As a side effect, new elections should be monitored
          with this additional signature check and our verification tools
          have been updated accordingly. We are very grateful to
	Olivier Pereira for reporting this issue. </p><div>
     <div>
          <p>Release of Belenios 2.5</p>
          <p>2024-03-08</p>
        </div>
        
	<p>This release includes a restricted mode, that enforces
          all the security options (e.g. external credential
          authority, external decrytion authorities) needed to comply with
          the security requirements of a security target, in view of a
          <a href="https://cyber.gouv.fr/presentation-de-la-certification-de-securite-de-premier-niveau-cspn">CSPN</a> evaluation. This restricted mode can be activated when
          installing an instance of Belenios on a server.</p>
     <div>
          <p>Release of Belenios 2.4</p>
          <p>2024-01-24</p>
        </div>
        
	<p>Voters no longer have to enter their credential, since
          it is now included in the (private) link to the election
	that is sent to them. Moreover, to comply with best-practice recommendations, the length of
          the credentials has been increased.</p>
	<p>The experience for the election administrator has been
          improved with slight changes.</p>
      <div>
          <p>Release of Belenios 2.3</p>
          <p>2023-10-01</p>
        </div>
        
	<p>The main visible change is that the
   format of private credentials has changed, to include individual
	salts in credential derivation, for more security. The old format is still supported
   for existing elections, but new ones will use the new
	format.</p>
	<p>Following requests from election administrators, private credentials
          are now sent later one, once the election is ready. This
          allows election administrators to entirely set up an
          election without sending the credentials (yet).</p>
	      <div>
          <p>Release of Belenios 2.2</p>
          <p>2023-08-30</p>
        </div>
        
	<p>Belenios now features a new admin interface to set up
          elections, in an experimental mode for the moment. This interface is more intuitive and easy to
          use. Feel free to try this new interface and report your
          feedback on belenios-discuss@inria.fr.</p>

	<p>We have also added support for STV elections in preferential
      voting. Other changes encompass e.g. various optimizations for handling elections with around 30k
   voters.</p>
      <div>
          <p>Release of Belenios 2.1</p>
          <p>2023-02-28</p>
        </div>
        
	<p>Belenios now supports and uses elliptic curves
          (Ed25519). Several changes have also been made on the web
	platform:
	</p><ul><li>Decryption trustee can know check that they correctly
          save their private key. There is no need to organize a mock
	  election.</li>
	  <li>Voters no longer need to enter their email address when
	  casting their vote.</li>
	  <li>Voter list can be added in JSON format.</li>
	  <li>It is possible to use basic &lt; i &gt;  and &lt; b &gt; markup (GitHub issue #66).</li>
	</ul> 
	
      <div>
          <p>Release of Belenios 2.0</p>
          <p>2022-12-06</p>
        </div>
        

	<p> A major evolution of Belenios has just been
	released. While the main changes are not visible to end
	users, this new version introduces a new election format where
	election events (e.g. ballots submission) are chained to each
	other. This prepares a next version where the server will be
	able to commit to the current content of an election.</p>

	<p>The main visible change is the fact that the last confirmation
	step of the voting phase has been removed. <span> @election admin:</span>
	make sure you inform your voters that this is perfectly
	normal. You may also want to update your documentation
	accordingly. </p>

	<p>From a protocol point of view and for more robustness, the credential authority now
	sends to the server, during the setup, the
	correspondence between public credentials and voters.</p>

	<p>The API support has also been improved in order to support a
	future new version of the administration interface.</p>

      <div>
          <p>Release of Belenios 1.20</p>
          <p>2022-10-20</p>
        </div>
        

	<p> The new release includes various improvements and
	fixes. The html tag &lt;br&gt; in election metadata is handled in
	more places. The monitoring has been improved with random
	orders of HTTP requests. A bug has been fixed in the
	computation of the Condorcet 
	winners.</p>

      <div>
          <p>Release of Belenios 1.19</p>
          <p>2022-05-10</p>
        </div>
        

	<p>In order to facilitate monitoring elections, pages served
	to credential authority and trustees are now constant. The
	instructions for the authorities have been updated and
	reinforced. </p>

	<p>Belenios 1.19 also solves several issues raised on GitHub, in
	particular regarding the mailto links. New languages have been
	added: Lithuanian, Spanish (Latin America).</p>

	
      <div>
          <p>New Belenios server</p>
          <p>2022-03-18</p>
        </div>
        

	<p>We have deployed a new <a href="https://vote.belenios.org/admin">Belenios public
	server</a>, hosted at 
	OVH, which should (hopefully) offer better availability. New
	elections should now preferably be created on this
	server. Accounts and elections on the old server will not be
	automatically migrated to the new server. You will have to
	create a new account.</p>

	<p>The <a href="https://belenios.loria.fr/admin">old server</a> will remain online for a while but
	progressively, account creation and election creation will be
	disabled.</p>

	  
      <div>
          <p>Release of Belenios 1.18</p>
          <p>2021-11-24</p>
        </div>
        

	<p> Belenios 1.18 now proposes the new voting booth by
	default. The new booth is prettier and more responsive, but may lack some
translations; we invite administrators to use the booth preview feature
to see if the new booth fits their needs. The old booth can still be
	selected on the question edition page.</p>

	<p>The new release also includes several bug fixes (e.g. case
	sensitivity issues in logins) and supports new operations on
	the REST API (under development).</p>
      <div>
	
      <div>
          <p>Release of Belenios 1.17</p>
          <p>2021-09-07</p>
        </div>
        

	<p> One of the main changes in Belenios 1.17 is actually
	invisible to its users: the cryptographic operations have been
	modified to avoid (theoretical) weaknesses. In particular, the
	link between a ballot and the corresponding election has been
	strengthened.</p>

	<p> Moreover, Belenios now fully supports preferential elections
	tallied with the Condorcet-Schulze method. A new,
	user-friendly, voting interface has been developed to rank
	candidates. More information <a href="https://www.belenios.org/Condorcet.html">here</a>.</p>
	
	<p>Finally, administrators accounts are now associated with a
	profile. As a consequence, administrators will be
asked an e-mail address on first login if the system cannot determine
one. This e-mail address is used to initialize the contact for new
elections. The default public name of the administrator for new
elections can also be modified.
     </p>
      <div>
	
          <p>Release of Belenios 1.16</p>
          <p>2021-07-19</p>
        </div>
        

	<p> Belenios now includes several new features.
	</p><ul>
	  <li>A new voting interface has been introduced both for
	standard elections (where voters select candidates among a
	list) and Majority Judgement (where voters rank candidates).</li>
	  <li>The default authentication for voters is now with an email with a short
code during the voting process. The previous default (an email with a
complex password sent in advance) is still available, but needs an
	explicit action to be used.</li>
	<li> Due to several requests, <tt>&lt;br&gt;</tt> are now interpreted
        in the classical voting interface as line breaks in election names,
	descriptions, questions and answers.</li>
	</ul>
     

    <div>
          <p>Donations are welcome</p>
          <p>2021-06-25</p>
        </div>
        
	<p>We now welcome donations, in the first place to support
	our infrastructure costs and also to partly cover our
	development costs. You will find <a href="https://www.belenios.org/donations.html">here</a> more information on how to donate
          and how donations are used.
      </p>
      
      <div>
          <p>Release of Belenios 1.15</p>
          <p>2021-05-04</p>
        </div>
        

	<p> The new release of Belenios includes several features
	requested by users.
	</p><ul>
	  <li>Belenios now officially support weighted votes. In other
	words, voters may have several votes, according to the rules
	of the election.  You just have to indicate the number of votes of each voter (her "weight") in the electoral list, in the form mail,login,weight or mail,,weight. </li>
	  <li>Credentials and passwords now have a different format to
	avoid confusion.</li>
	<li>So many elections were deleted by mistake ... we removed
	the misleading "archive" button in most cases.</li>
      </ul><p>
     Moreover, thanks to the <a href="https://www.belenios.org/translation.html">translation effort</a>, new languages have
	been introduced, namely Greek (el), Dutch (nl), Slovak (sk), Finnish (fi), Polish (pl).
      </p>

      <div>
          <p>Release of Belenios 1.13</p>
          <p>2020-12-02</p>
        </div>
        

	<p> The new release of Belenios suports two main new features:
	</p><ul>
	  <li>The aministrator interface is available in several
	languages and new languages have been introduced at least for
	the voter interface: Norwegian Bokmål (nb), Spanish (es), Ukrainian (uk),
	  Czech (cs), Occitan (oc). Your <a href="https://www.belenios.org/translation.html">help for translation</a> is still
	welcome since several languages are incomplete and we
	continuously introduce new parts.</li>
	  <li>If you wish to use alternative voting methods, our
	server now supports Condorcet-Schulze, Majority Judgment and Single
   Transferable Vote. More information can be found <a href="https://www.belenios.org/mixnet.html">here</a>.
	Note that you can still apply any other method
	using your own algorithm applied to the raw ballots produced
	from the tally.</li>
      </ul><p>
      Some more technical changes have also been made in the key
	management. In particular, now the key of the server is always
	needed to decrypt, even in the threshold mode.
	</p>
      
      <div>
          <p>Multi-languages hosted on Weblate</p>
          <p>2020-10-29</p>
        </div>
        

	<p>Belenios is available in a few languages for voters and for
	the administrator of the election. We need you help to pursue
	this effort. We have hosted our translation files on <a href="https://hosted.weblate.org/projects/belenios/">weblate</a>.
You can easily create an account and contribute. We have written a few
	<a href="https://www.belenios.org/translation.html">guidelines</a> on how to best translate Belenios. Your help will be
	very valuable to our project!
	</p>
	
        <div>
          <p>Release of Belenios 1.12</p>
          <p>2020-08-31</p>
        </div>
        

	<p> The main change is a bug fix: some users reported that
	they were blocked when voting. This was due to a bad
	interaction with some browser extensions. This is now corrected.
	</p>

        <div>
          <p>Security analysis of Belenios (in French)</p>
          <p>2020-06-02</p>
        </div>
        

	<p> We provide a security analysis of Belenios, mainly
	w.r.t. the criteria defined by the CNIL (Commission Nationale
	de l'Informatique et des Libertés). Since these
	criteria are somewhat specific to French regulations, the document is written
	in French. It can be found <a href="https://www.belenios.org/analyse-secu.pdf">here</a>.
	</p>

        <div>
          <p>Release of Belenios 1.11</p>
          <p>2020-05-26</p>
        </div>
        

	<p> One important feature of the new release is that the main page of the
	election now includes verification
	material for election authorities and voters. In particular, the
	number and names of decryption trustees are displayed as well as a hash
	of the voter list and all public and verification keys. The instructions
	on what to check and how are spelled out <a href="https://www.belenios.org/instructions.html">here</a> (or <a href="https://www.belenios.org/instructions-fr.html">here</a> for the French version) for each
	party (trustees, electoral commission, credential authority,
	administrator, voters).
	<br>
	Moreover, in case no credential authority is used in an election (which
	reduces the security level of the election), then the administrator can
	now save the list of private credentials before starting the election.
	This allows the administrator to resend a credential to a voter that has
	lost it.
	</p>

	
        <div>
          <p>Release of Belenios 1.10</p>
          <p>2019-12-09</p>
        </div>
        

	<p> We have added mixnets to Belenios. What does this mean?
	You can now organize any type of elections, e.g. where voters
	rank candidates by order of preference or provide a grade. In
	the mixnet mode (still experimental), the raw ballots are
	provided at the end of the election, in a random order, to
	protect privacy. You can then apply your favorite counting
	methods (e.g. STV, Condorcet, or majority judgement) to
	compute the winner.
	More information on how to use Belenios for alternative
	voting can be found <a href="https://www.belenios.org/mixnet.html">here</a>.
	Note
	that Belenos still supports the previous homomorphic mode,
	which is more convenient (and efficient) in case of elections where voters
	simply select some number of candidates among a list.
	<br>
	The new version also includes minor changes in the
	administration interface, to help setting up an election with trustees.
	</p>
	
        <div>
          <p>Release of Belenios 1.9</p>
          <p>2019-05-28</p>
        </div>
        

	<p> Belenios 1.9 now includes the possibility to temporarily hide the result from the
     public (e.g. to delay the announcement of the winner). We have also fixed some bugs.
	</p>
	
       <div>
          <p>Release of Belenios 1.8</p>
          <p>2019-02-04</p>
        </div>
        

	<p> 
	The new version 1.8 of Belenios includes two main changes.
	</p><ul>
	  <li>To use our platform as an election administrator, you may now create
an account online (select public mode).</li>
	  <li>The threshold encryption mode is now fully integrated to our platform.
For example, the decryption key may be split among 3 authorities such
that 2 suffice for decryption, as recommanded by the CNIL. Any other
	  combination can be chosen of course.</li>
	</ul>

        <div>
          <p>Release of Belenios 1.7</p>
          <p>2018-11-26</p>
        </div>
        

	<p> The main visible change of Belenios 1.7 is that elections can now be
archived and/or deleted, according to our policy regarding <a href="http://www.belenios.org/data-Belenios-en.pdf">data
management</a> (click <a href="http://www.belenios.org/data-Belenios-fr.pdf">here</a> for the French version). In particular, all elections will be
deleted after one year. An archive of the election may be
previously saved by the administrator of the election.
	</p>

        <div>
          <p>Release of Belenios 1.6</p>
          <p>2018-06-13</p>
        </div>
        

	<p> This new version of Belenios includes changes mandated by
	the new GDPR regulation. <br>
	The explanations given on the web interface for setting an election have been improved thanks to users comments. 	</p>

        <div>
          <p>Release of Belenios 1.5</p>
          <p>2017-12-14</p>
        </div>
        

	<p> Belenios 1.5 has been released and integrated to our voting platform. It is
now possible to set the server as one of the trustees in charge of the
decryption keys. Note that supported languages are now English, French,
German, Italian, and Romanian.
<br>
Since its launch, Belenios has been used to organize about 200 elections
and more than 6000 ballots have been cast.
	</p>

         <div>
          <p>Fully open voting platform</p>
          <p>2016-09-01</p>
        </div>
        

	<p> Our on-line voting platform can now be easily used to set up an
	election by login using your Google account (or the INRIA CAS server).
	</p>

        <div>
          <p>Multi language available</p>
          <p>2016-09-01</p>
        </div>
        

	<p> Voters can now vote in their favorite language (among
	English, French, and German). More languages to come soon! If
	you need another language for an important election, you may
	also contact us.
	</p>

	
        

	<p> The latest version of our Belenios software is
	<a href="https://www.belenios.org/software.html">available</a>. With
	this sofware, you may run an election on your own server.
	Belenios is distributed under the terms of the <a href="https://www.gnu.org/licenses/agpl-3.0.html">GNU
	Affero General Public License version 3</a>.
	</p>

        <div>
          <p>Online platform</p>
          <p>2015-09-15</p>
        </div>
        

         <p> The first release of our on-line platform
            is up. No need to install software anymore. You can set up an
            election simply through our interface. Note however that
            this interface is still under development. Therefore the
            access is granted through the INRIA CAS server or on
            request. Stay tuned for the release of our fully open
            voting platform! To learn about the new developments of
            Belenios, you may subscribe to our <a href="https://sympa.inria.fr/sympa/info/belenios-publicserver">mailing-list</a>.
          </p>

      </div>
    </div></div>]]></description>
        </item>
    </channel>
</rss>