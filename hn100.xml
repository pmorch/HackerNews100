<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 23 May 2024 13:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Microsoft outage affects Bing, Copilot, DuckDuckGo and ChatGPT internet search (235 pts)]]></title>
            <link>https://www.bleepingcomputer.com/news/microsoft/microsoft-outage-affects-bing-copilot-duckduckgo-and-chatgpt-internet-search/</link>
            <guid>40453077</guid>
            <pubDate>Thu, 23 May 2024 10:53:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bleepingcomputer.com/news/microsoft/microsoft-outage-affects-bing-copilot-duckduckgo-and-chatgpt-internet-search/">https://www.bleepingcomputer.com/news/microsoft/microsoft-outage-affects-bing-copilot-duckduckgo-and-chatgpt-internet-search/</a>, See on <a href="https://news.ycombinator.com/item?id=40453077">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="Microsoft" src="https://www.bleepstatic.com/content/hl-images/2023/10/19/Microsoft_headpic.jpg"></p>
<p>A massive Microsoft outage&nbsp;affects Bing.com, Copilot for web and mobile, Copilot in Windows, ChatGPT internet search and DuckDuckGo.</p>
<p>Microsoft&nbsp;outage started at approximately 3 AM EDT and seems to have primarily affected users in Asia and Europe.</p>
<p><a href="https://x.com/mayank_jee/status/1793560213498581389" target="_blank" rel="nofollow noopener">According to user reports</a> and our tests, if you try to open Bing.com, you'll either see a blank page or a page with a 429 HTTP code error. However, Bing search still works if accessed directly. For some reason, the outage only affects the homepage.</p>
<div>
<figure><img alt="Bing down" height="600" src="https://www.bleepstatic.com/images/news/u/1097497/Microsoft/Bing-down.jpeg" width="769"><figcaption><strong>Bing and Copilot office</strong><br>
Source: BleepingComputer</figcaption></figure></div>
<p>To use Bing, <a href="https://www4.bing.com/" target="_blank" rel="nofollow noopener">go to this URL</a> and search as usual. It will work. However, Copilot is completely offline whether you use the website, app, or Copilot in Windows.</p>
<p>It's also important to note that ChatGPT internet search and DuckDuckGo are experiencing similar issues because they use the Bing API.</p>
<p><img alt="DuckDuckGo offline" height="455" src="https://www.bleepstatic.com/images/news/u/1097497/Microsoft/DuckDuckGo.jpg" width="1083"></p>
<p>DuckDuckGo refuses to load search pages, displaying an error message: "There was an error displaying the search results. Please try again."</p>
<p>While Microsoft has yet to comment on the outage, OpenAI confirmed issues with ChatGPT internet search in an update on its <a href="https://status.openai.com/" target="_blank" rel="nofollow noopener">support page</a>.</p>
<p><em>This is a developing story...</em></p>
<p>Update 1: Microsoft has confirmed&nbsp;an issue where users may be unable to access the Microsoft Copilot service. "We're working to isolate the cause of the issue. More information can be found in the admin center under CP795190," the company <a href="https://x.com/msft365status/status/1793564067191259271" target="_blank" rel="nofollow noopener">noted in a post on X</a>.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[It looks a lot like VMware just lost a 24,000-VM customer (145 pts)]]></title>
            <link>https://www.theregister.com/2024/05/22/computershare_vm_migration_project/</link>
            <guid>40452260</guid>
            <pubDate>Thu, 23 May 2024 08:55:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2024/05/22/computershare_vm_migration_project/">https://www.theregister.com/2024/05/22/computershare_vm_migration_project/</a>, See on <a href="https://news.ycombinator.com/item?id=40452260">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p><span>Next</span> Global stock-market share registry operator Computershare looks like it has just decided to bail from VMware rather than suffer Broadcom’s latest licensing regime and price hikes.</p>
<p>Speaking during the closing keynote of Nutanix’s Next conference in Barcelona on Wednesday, Computershare's CTO Kevin O’Connor was asked how he feels Broadcom’s acquisition of VMware has played out.</p>
<p>O’Connor replied that when he arrived 18 months ago he found the IT department using two hypervisors: Nutanix AHV, and another from what he described as coming from “a well-known competitor." Cough, VMware. The CTO felt two hypervisors was one too many and considered a consolidation, but the numbers didn’t stack up and no project was initiated.</p>

    

<p>He later received a phone call he said took place after what he described as “the change.” And in that conversation he was quoted a future price for Computershare’s non-Nutanix hypervisor that represented an increase by a factor of between 10 and 15.</p>
<ul>

<li><a href="https://www.theregister.com/2024/05/21/nutanix_vmware_migrations/">CIO who dropped VMware 18 months ago now feeling thoroughly chuffed</a></li>

<li><a href="https://www.theregister.com/2024/05/15/veeam_adds_support_for_vmware/">Veeam adds support for VMware alternative Proxmox to its backup software</a></li>

<li><a href="https://www.theregister.com/2024/05/14/vmware_workstation_pro_fusion_pro/">VMware giving away Workstation Pro, Fusion Pro free for personal use</a></li>

<li><a href="https://www.theregister.com/2024/04/12/hyperv_maximums_windows_server_2005/">Microsoft gives Hyper-V ceilings a Herculean hike</a></li>
</ul>
<p>Migrating to AHV suddenly made a lot more sense and O’Connor has pulled the trigger. Over the next year, before that massively inflated bill falls due, Computershare will migrate 24,000 VMs to Nutanix.</p>
<p>O’Connor said the project will pay for itself in “single digit months.”</p>

        


        

<p>“Surprisingly, we've come out of this a lot stronger and leaner with cost base lower than it was before the acquisition,” he said without specifying which acquisition. “We're actually quite delighted it's spurred us to do what we should have done anyway.”</p>
<h3><em>Register</em> comment</h3>
<p>The facts mentioned by O’Connor and the Nutanix emcee in the keynote give <i>The Register</i> a very high degree of confidence that Computershare is quitting VMware.</p>
<p>If so, this smells like a little bit of trouble for Broadcom because earlier today, Steve McDowell, chief analyst at NAND research, told <i>The Register</i> that VMware by Broadcom is “laser focused on high-revenue, high-margin business” and has priced its wares “just below the pain threshold for customers they care about.”</p>
<p><i>The Register</i> has no insight into whether Broadcom cares about Computershare, but we do know it has concentrated its efforts on working with business that want to go all in on its Cloud Foundation stack - and the breadth of that bundle means customers are nearly always large entities.</p>

        

<p>Computershare is certainly large: The Australian company had revenue of $3.3 billion last year, its 14,000-plus staff work across more than 20 countries, serving 40,000 clients and 75 million end-customers. All of which requires 24,000 VMs, which isn't the largest fleet around but also certainly isn't trivial.</p>
<p><i>The Register</i> imagines that calculating pain thresholds is an imprecise science. If Broadcom consistently gets it wrong then Computershare’s experience shows customers of its size and ilk will seek relief. ®</p>
<p>
  <em><strong>PS:</strong> Anyone else find the Broadcom website for VMware stuff is now <a target="_blank" rel="nofollow" href="https://matduggan.com/the-worst-website-in-the-entire-world/">a bit sub-par</a>?</em>
</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Magic UI: UI Library for Design Engineers (107 pts)]]></title>
            <link>https://magicui.design/</link>
            <guid>40450128</guid>
            <pubDate>Thu, 23 May 2024 03:23:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://magicui.design/">https://magicui.design/</a>, See on <a href="https://news.ycombinator.com/item?id=40450128">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div id="hero"><div><h2>UI library for Design Engineers</h2><p>20+ free and open-source animated components built with<!-- --> <strong>React</strong>, <strong>Typescript</strong>,<!-- --> <strong>Tailwind CSS</strong>, and<!-- --> <strong>Framer Motion</strong>.<br>100% open-source, and customizable.</p></div><div><p><span><span><span>Real component demos!</span><svg width="45" height="25" viewBox="0 0 45 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M43.2951 3.47877C43.8357 3.59191 44.3656 3.24541 44.4788 2.70484C44.5919 2.16427 44.2454 1.63433 43.7049 1.52119L43.2951 3.47877ZM4.63031 24.4936C4.90293 24.9739 5.51329 25.1423 5.99361 24.8697L13.8208 20.4272C14.3011 20.1546 14.4695 19.5443 14.1969 19.0639C13.9242 18.5836 13.3139 18.4152 12.8336 18.6879L5.87608 22.6367L1.92723 15.6792C1.65462 15.1989 1.04426 15.0305 0.563943 15.3031C0.0836291 15.5757 -0.0847477 16.1861 0.187863 16.6664L4.63031 24.4936ZM43.7049 1.52119C32.7389 -0.77401 23.9595 0.99522 17.3905 5.28788C10.8356 9.57127 6.58742 16.2977 4.53601 23.7341L6.46399 24.2659C8.41258 17.2023 12.4144 10.9287 18.4845 6.96211C24.5405 3.00476 32.7611 1.27399 43.2951 3.47877L43.7049 1.52119Z" fill="currentColor"></path></svg></span></span></p><div><div><div><div><figure><div><p><figcaption>bitcoin.pdf</figcaption></p></div><blockquote>Bitcoin is a cryptocurrency invented in 2008 by an unknown person or group of people using the name Satoshi Nakamoto.</blockquote></figure><figure><div><p><figcaption>finances.xlsx</figcaption></p></div><blockquote>A spreadsheet or worksheet is a file made of rows and columns that help sort data, arrange data easily, and calculate numerical data.</blockquote></figure><figure><div><p><figcaption>logo.svg</figcaption></p></div><blockquote>Scalable Vector Graphics is an Extensible Markup Language-based vector image format for two-dimensional graphics with support for interactivity and animation.</blockquote></figure><figure><div><p><figcaption>keys.gpg</figcaption></p></div><blockquote>GPG keys are used to encrypt and decrypt email, files, directories, and whole disk partitions and to authenticate messages.</blockquote></figure><figure><div><p><figcaption>seed.txt</figcaption></p></div><blockquote>A seed phrase, seed recovery phrase or backup seed phrase is a list of words which store all the information needed to recover Bitcoin funds on-chain.</blockquote></figure></div><div><figure><div><p><figcaption>bitcoin.pdf</figcaption></p></div><blockquote>Bitcoin is a cryptocurrency invented in 2008 by an unknown person or group of people using the name Satoshi Nakamoto.</blockquote></figure><figure><div><p><figcaption>finances.xlsx</figcaption></p></div><blockquote>A spreadsheet or worksheet is a file made of rows and columns that help sort data, arrange data easily, and calculate numerical data.</blockquote></figure><figure><div><p><figcaption>logo.svg</figcaption></p></div><blockquote>Scalable Vector Graphics is an Extensible Markup Language-based vector image format for two-dimensional graphics with support for interactivity and animation.</blockquote></figure><figure><div><p><figcaption>keys.gpg</figcaption></p></div><blockquote>GPG keys are used to encrypt and decrypt email, files, directories, and whole disk partitions and to authenticate messages.</blockquote></figure><figure><div><p><figcaption>seed.txt</figcaption></p></div><blockquote>A seed phrase, seed recovery phrase or backup seed phrase is a list of words which store all the information needed to recover Bitcoin funds on-chain.</blockquote></figure></div><div><figure><div><p><figcaption>bitcoin.pdf</figcaption></p></div><blockquote>Bitcoin is a cryptocurrency invented in 2008 by an unknown person or group of people using the name Satoshi Nakamoto.</blockquote></figure><figure><div><p><figcaption>finances.xlsx</figcaption></p></div><blockquote>A spreadsheet or worksheet is a file made of rows and columns that help sort data, arrange data easily, and calculate numerical data.</blockquote></figure><figure><div><p><figcaption>logo.svg</figcaption></p></div><blockquote>Scalable Vector Graphics is an Extensible Markup Language-based vector image format for two-dimensional graphics with support for interactivity and animation.</blockquote></figure><figure><div><p><figcaption>keys.gpg</figcaption></p></div><blockquote>GPG keys are used to encrypt and decrypt email, files, directories, and whole disk partitions and to authenticate messages.</blockquote></figure><figure><div><p><figcaption>seed.txt</figcaption></p></div><blockquote>A seed phrase, seed recovery phrase or backup seed phrase is a list of words which store all the information needed to recover Bitcoin funds on-chain.</blockquote></figure></div><div><figure><div><p><figcaption>bitcoin.pdf</figcaption></p></div><blockquote>Bitcoin is a cryptocurrency invented in 2008 by an unknown person or group of people using the name Satoshi Nakamoto.</blockquote></figure><figure><div><p><figcaption>finances.xlsx</figcaption></p></div><blockquote>A spreadsheet or worksheet is a file made of rows and columns that help sort data, arrange data easily, and calculate numerical data.</blockquote></figure><figure><div><p><figcaption>logo.svg</figcaption></p></div><blockquote>Scalable Vector Graphics is an Extensible Markup Language-based vector image format for two-dimensional graphics with support for interactivity and animation.</blockquote></figure><figure><div><p><figcaption>keys.gpg</figcaption></p></div><blockquote>GPG keys are used to encrypt and decrypt email, files, directories, and whole disk partitions and to authenticate messages.</blockquote></figure><figure><div><p><figcaption>seed.txt</figcaption></p></div><blockquote>A seed phrase, seed recovery phrase or backup seed phrase is a list of words which store all the information needed to recover Bitcoin funds on-chain.</blockquote></figure></div></div><div><svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M3 2.5C3 2.22386 3.22386 2 3.5 2H9.08579C9.21839 2 9.34557 2.05268 9.43934 2.14645L11.8536 4.56066C11.9473 4.65443 12 4.78161 12 4.91421V12.5C12 12.7761 11.7761 13 11.5 13H3.5C3.22386 13 3 12.7761 3 12.5V2.5ZM3.5 1C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H11.5C12.3284 14 13 13.3284 13 12.5V4.91421C13 4.51639 12.842 4.13486 12.5607 3.85355L10.1464 1.43934C9.86514 1.15804 9.48361 1 9.08579 1H3.5ZM4.5 4C4.22386 4 4 4.22386 4 4.5C4 4.77614 4.22386 5 4.5 5H7.5C7.77614 5 8 4.77614 8 4.5C8 4.22386 7.77614 4 7.5 4H4.5ZM4.5 7C4.22386 7 4 7.22386 4 7.5C4 7.77614 4.22386 8 4.5 8H10.5C10.7761 8 11 7.77614 11 7.5C11 7.22386 10.7761 7 10.5 7H4.5ZM4.5 10C4.22386 10 4 10.2239 4 10.5C4 10.7761 4.22386 11 4.5 11H10.5C10.7761 11 11 10.7761 11 10.5C11 10.2239 10.7761 10 10.5 10H4.5Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg><h3>Save your files</h3><p>We automatically save your files as you type.</p></div><p><a href="https://magicui.design/">Learn more<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.14645 3.14645C8.34171 2.95118 8.65829 2.95118 8.85355 3.14645L12.8536 7.14645C13.0488 7.34171 13.0488 7.65829 12.8536 7.85355L8.85355 11.8536C8.65829 12.0488 8.34171 12.0488 8.14645 11.8536C7.95118 11.6583 7.95118 11.3417 8.14645 11.1464L11.2929 8H2.5C2.22386 8 2 7.77614 2 7.5C2 7.22386 2.22386 7 2.5 7H11.2929L8.14645 3.85355C7.95118 3.65829 7.95118 3.34171 8.14645 3.14645Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg></a></p></div><div><div cmdk-group-items="" role="listbox" aria-labelledby=":R2lmueu6laH2:" cmdk-group="" cmdk-list-sizer="" cmdk-list="" aria-label="Suggestions" id=":R2lmueu6la:" cmdk-root=""><p>screenshot.png</p><p>bitcoin.pdf</p><p>finances.xlsx</p><p>logo.svg</p><p>keys.gpg</p><p>seed.txt</p></div><div><svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.5 1C6.22386 1 6 1.22386 6 1.5C6 1.77614 6.22386 2 6.5 2C7.12671 2 7.45718 2.20028 7.65563 2.47812C7.8781 2.78957 8 3.28837 8 4V11C8 11.7116 7.8781 12.2104 7.65563 12.5219C7.45718 12.7997 7.12671 13 6.5 13C6.22386 13 6 13.2239 6 13.5C6 13.7761 6.22386 14 6.5 14C7.37329 14 8.04282 13.7003 8.46937 13.1031C8.47976 13.0886 8.48997 13.0739 8.5 13.0591C8.51003 13.0739 8.52024 13.0886 8.53063 13.1031C8.95718 13.7003 9.62671 14 10.5 14C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13C9.87329 13 9.54282 12.7997 9.34437 12.5219C9.1219 12.2104 9 11.7116 9 11V4C9 3.28837 9.1219 2.78957 9.34437 2.47812C9.54282 2.20028 9.87329 2 10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1C9.62671 1 8.95718 1.29972 8.53063 1.89688C8.52024 1.91143 8.51003 1.92611 8.5 1.9409C8.48997 1.92611 8.47976 1.91143 8.46937 1.89688C8.04282 1.29972 7.37329 1 6.5 1ZM14 5H11V4H14C14.5523 4 15 4.44772 15 5V10C15 10.5523 14.5523 11 14 11H11V10H14V5ZM6 4V5H1L1 10H6V11H1C0.447715 11 0 10.5523 0 10V5C0 4.44772 0.447715 4 1 4H6Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg><h3>Full text search</h3><p>Search through all your files in one place.</p></div><p><a href="https://magicui.design/">Learn more<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.14645 3.14645C8.34171 2.95118 8.65829 2.95118 8.85355 3.14645L12.8536 7.14645C13.0488 7.34171 13.0488 7.65829 12.8536 7.85355L8.85355 11.8536C8.65829 12.0488 8.34171 12.0488 8.14645 11.8536C7.95118 11.6583 7.95118 11.3417 8.14645 11.1464L11.2929 8H2.5C2.22386 8 2 7.77614 2 7.5C2 7.22386 2.22386 7 2.5 7H11.2929L8.14645 3.85355C7.95118 3.65829 7.95118 3.34171 8.14645 3.14645Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg></a></p></div><div><div><svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7.49996 1.80002C4.35194 1.80002 1.79996 4.352 1.79996 7.50002C1.79996 10.648 4.35194 13.2 7.49996 13.2C10.648 13.2 13.2 10.648 13.2 7.50002C13.2 4.352 10.648 1.80002 7.49996 1.80002ZM0.899963 7.50002C0.899963 3.85494 3.85488 0.900024 7.49996 0.900024C11.145 0.900024 14.1 3.85494 14.1 7.50002C14.1 11.1451 11.145 14.1 7.49996 14.1C3.85488 14.1 0.899963 11.1451 0.899963 7.50002Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path><path d="M13.4999 7.89998H1.49994V7.09998H13.4999V7.89998Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path><path d="M7.09991 13.5V1.5H7.89991V13.5H7.09991zM10.375 7.49998C10.375 5.32724 9.59364 3.17778 8.06183 1.75656L8.53793 1.24341C10.2396 2.82218 11.075 5.17273 11.075 7.49998 11.075 9.82724 10.2396 12.1778 8.53793 13.7566L8.06183 13.2434C9.59364 11.8222 10.375 9.67273 10.375 7.49998zM3.99969 7.5C3.99969 5.17611 4.80786 2.82678 6.45768 1.24719L6.94177 1.75281C5.4582 3.17323 4.69969 5.32389 4.69969 7.5 4.6997 9.67611 5.45822 11.8268 6.94179 13.2472L6.45769 13.7528C4.80788 12.1732 3.9997 9.8239 3.99969 7.5z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path><path d="M7.49996 3.95801C9.66928 3.95801 11.8753 4.35915 13.3706 5.19448 13.5394 5.28875 13.5998 5.50197 13.5055 5.67073 13.4113 5.83948 13.198 5.89987 13.0293 5.8056 11.6794 5.05155 9.60799 4.65801 7.49996 4.65801 5.39192 4.65801 3.32052 5.05155 1.97064 5.8056 1.80188 5.89987 1.58866 5.83948 1.49439 5.67073 1.40013 5.50197 1.46051 5.28875 1.62927 5.19448 3.12466 4.35915 5.33063 3.95801 7.49996 3.95801zM7.49996 10.85C9.66928 10.85 11.8753 10.4488 13.3706 9.6135 13.5394 9.51924 13.5998 9.30601 13.5055 9.13726 13.4113 8.9685 13.198 8.90812 13.0293 9.00238 11.6794 9.75643 9.60799 10.15 7.49996 10.15 5.39192 10.15 3.32052 9.75643 1.97064 9.00239 1.80188 8.90812 1.58866 8.9685 1.49439 9.13726 1.40013 9.30601 1.46051 9.51924 1.62927 9.6135 3.12466 10.4488 5.33063 10.85 7.49996 10.85z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg><h3>Multilingual</h3><p>Supports 100+ languages and counting.</p></div><p><a href="https://magicui.design/">Learn more<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.14645 3.14645C8.34171 2.95118 8.65829 2.95118 8.85355 3.14645L12.8536 7.14645C13.0488 7.34171 13.0488 7.65829 12.8536 7.85355L8.85355 11.8536C8.65829 12.0488 8.34171 12.0488 8.14645 11.8536C7.95118 11.6583 7.95118 11.3417 8.14645 11.1464L11.2929 8H2.5C2.22386 8 2 7.77614 2 7.5C2 7.22386 2.22386 7 2.5 7H11.2929L8.14645 3.85355C7.95118 3.65829 7.95118 3.34171 8.14645 3.14645Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg></a></p></div><div><div><svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.5 1C4.77614 1 5 1.22386 5 1.5V2H10V1.5C10 1.22386 10.2239 1 10.5 1C10.7761 1 11 1.22386 11 1.5V2H12.5C13.3284 2 14 2.67157 14 3.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V3.5C1 2.67157 1.67157 2 2.5 2H4V1.5C4 1.22386 4.22386 1 4.5 1ZM10 3V3.5C10 3.77614 10.2239 4 10.5 4C10.7761 4 11 3.77614 11 3.5V3H12.5C12.7761 3 13 3.22386 13 3.5V5H2V3.5C2 3.22386 2.22386 3 2.5 3H4V3.5C4 3.77614 4.22386 4 4.5 4C4.77614 4 5 3.77614 5 3.5V3H10ZM2 6V12.5C2 12.7761 2.22386 13 2.5 13H12.5C12.7761 13 13 12.7761 13 12.5V6H2ZM7 7.5C7 7.22386 7.22386 7 7.5 7C7.77614 7 8 7.22386 8 7.5C8 7.77614 7.77614 8 7.5 8C7.22386 8 7 7.77614 7 7.5ZM9.5 7C9.22386 7 9 7.22386 9 7.5C9 7.77614 9.22386 8 9.5 8C9.77614 8 10 7.77614 10 7.5C10 7.22386 9.77614 7 9.5 7ZM11 7.5C11 7.22386 11.2239 7 11.5 7C11.7761 7 12 7.22386 12 7.5C12 7.77614 11.7761 8 11.5 8C11.2239 8 11 7.77614 11 7.5ZM11.5 9C11.2239 9 11 9.22386 11 9.5C11 9.77614 11.2239 10 11.5 10C11.7761 10 12 9.77614 12 9.5C12 9.22386 11.7761 9 11.5 9ZM9 9.5C9 9.22386 9.22386 9 9.5 9C9.77614 9 10 9.22386 10 9.5C10 9.77614 9.77614 10 9.5 10C9.22386 10 9 9.77614 9 9.5ZM7.5 9C7.22386 9 7 9.22386 7 9.5C7 9.77614 7.22386 10 7.5 10C7.77614 10 8 9.77614 8 9.5C8 9.22386 7.77614 9 7.5 9ZM5 9.5C5 9.22386 5.22386 9 5.5 9C5.77614 9 6 9.22386 6 9.5C6 9.77614 5.77614 10 5.5 10C5.22386 10 5 9.77614 5 9.5ZM3.5 9C3.22386 9 3 9.22386 3 9.5C3 9.77614 3.22386 10 3.5 10C3.77614 10 4 9.77614 4 9.5C4 9.22386 3.77614 9 3.5 9ZM3 11.5C3 11.2239 3.22386 11 3.5 11C3.77614 11 4 11.2239 4 11.5C4 11.7761 3.77614 12 3.5 12C3.22386 12 3 11.7761 3 11.5ZM5.5 11C5.22386 11 5 11.2239 5 11.5C5 11.7761 5.22386 12 5.5 12C5.77614 12 6 11.7761 6 11.5C6 11.2239 5.77614 11 5.5 11ZM7 11.5C7 11.2239 7.22386 11 7.5 11C7.77614 11 8 11.2239 8 11.5C8 11.7761 7.77614 12 7.5 12C7.22386 12 7 11.7761 7 11.5ZM9.5 11C9.22386 11 9 11.2239 9 11.5C9 11.7761 9.22386 12 9.5 12C9.77614 12 10 11.7761 10 11.5C10 11.2239 9.77614 11 9.5 11Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg><h3>Calendar</h3><p>Use the calendar to filter your files by date.</p></div><p><a href="https://magicui.design/">Learn more<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.14645 3.14645C8.34171 2.95118 8.65829 2.95118 8.85355 3.14645L12.8536 7.14645C13.0488 7.34171 13.0488 7.65829 12.8536 7.85355L8.85355 11.8536C8.65829 12.0488 8.34171 12.0488 8.14645 11.8536C7.95118 11.6583 7.95118 11.3417 8.14645 11.1464L11.2929 8H2.5C2.22386 8 2 7.77614 2 7.5C2 7.22386 2.22386 7 2.5 7H11.2929L8.14645 3.85355C7.95118 3.65829 7.95118 3.34171 8.14645 3.14645Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg></a></p></div></div><div><div><div><p><svg width="47px" height="65px" viewBox="0 0 47 65" version="1.1" xmlns="http://www.w3.org/2000/svg"><title>Docs-icon</title><desc>Created with Sketch.</desc><defs><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L29.375,0 Z" id="path-1"></path><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L29.375,0 Z" id="path-3"></path><linearGradient x1="50.0053945%" y1="8.58610612%" x2="50.0053945%" y2="100.013939%" id="linearGradient-5"><stop stop-color="#1A237E" stop-opacity="0.2" offset="0%"></stop><stop stop-color="#1A237E" stop-opacity="0.02" offset="100%"></stop></linearGradient><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L29.375,0 Z" id="path-6"></path><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L29.375,0 Z" id="path-8"></path><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L29.375,0 Z" id="path-10"></path><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L29.375,0 Z" id="path-12"></path><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L29.375,0 Z" id="path-14"></path><radialGradient cx="3.16804688%" cy="2.71744318%" fx="3.16804688%" fy="2.71744318%" r="161.248516%" gradientTransform="translate(0.031680,0.027174),scale(1.000000,0.723077),translate(-0.031680,-0.027174)" id="radialGradient-16"><stop stop-color="#FFFFFF" stop-opacity="0.1" offset="0%"></stop><stop stop-color="#FFFFFF" stop-opacity="0" offset="100%"></stop></radialGradient></defs><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="Consumer-Apps-Docs-Large-VD-R8" transform="translate(-451.000000, -463.000000)"><g id="Hero" transform="translate(0.000000, 63.000000)"><g id="Personal" transform="translate(277.000000, 309.000000)"><g id="Docs-icon" transform="translate(174.000000, 91.000000)"><g id="Group"><g id="Clipped"><mask id="mask-2" fill="white"><use xlink:href="#path-1"></use></mask><g id="SVGID_1_"></g><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L36.71875,10.3409091 L29.375,0 Z" id="Path" fill="#4285F4" fill-rule="nonzero" mask="url(#mask-2)"></path></g><g id="Clipped"><mask id="mask-4" fill="white"><use xlink:href="#path-3"></use></mask><g id="SVGID_1_"></g><polygon id="Path" fill="url(#linearGradient-5)" fill-rule="nonzero" mask="url(#mask-4)" points="30.6638281 16.4309659 47 32.8582386 47 17.7272727"></polygon></g><g id="Clipped"><mask id="mask-7" fill="white"><use xlink:href="#path-6"></use></mask><g id="SVGID_1_"></g><path d="M11.75,47.2727273 L35.25,47.2727273 L35.25,44.3181818 L11.75,44.3181818 L11.75,47.2727273 Z M11.75,53.1818182 L29.375,53.1818182 L29.375,50.2272727 L11.75,50.2272727 L11.75,53.1818182 Z M11.75,32.5 L11.75,35.4545455 L35.25,35.4545455 L35.25,32.5 L11.75,32.5 Z M11.75,41.3636364 L35.25,41.3636364 L35.25,38.4090909 L11.75,38.4090909 L11.75,41.3636364 Z" id="Shape" fill="#F1F1F1" fill-rule="nonzero" mask="url(#mask-7)"></path></g><g id="Clipped"><mask id="mask-9" fill="white"><use xlink:href="#path-8"></use></mask><g id="SVGID_1_"></g><g id="Group" mask="url(#mask-9)"><g transform="translate(26.437500, -2.954545)"><path d="M2.9375,2.95454545 L2.9375,16.25 C2.9375,18.6985795 4.90929688,20.6818182 7.34375,20.6818182 L20.5625,20.6818182 L2.9375,2.95454545 Z" id="Path" fill="#A1C2FA" fill-rule="nonzero"></path></g></g></g><g id="Clipped"><mask id="mask-11" fill="white"><use xlink:href="#path-10"></use></mask><g id="SVGID_1_"></g><path d="M4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,4.80113636 C0,2.36363636 1.9828125,0.369318182 4.40625,0.369318182 L29.375,0.369318182 L29.375,0 L4.40625,0 Z" id="Path" fill-opacity="0.2" fill="#FFFFFF" fill-rule="nonzero" mask="url(#mask-11)"></path></g><g id="Clipped"><mask id="mask-13" fill="white"><use xlink:href="#path-12"></use></mask><g id="SVGID_1_"></g><path d="M42.59375,64.6306818 L4.40625,64.6306818 C1.9828125,64.6306818 0,62.6363636 0,60.1988636 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,60.1988636 C47,62.6363636 45.0171875,64.6306818 42.59375,64.6306818 Z" id="Path" fill-opacity="0.2" fill="#1A237E" fill-rule="nonzero" mask="url(#mask-13)"></path></g><g id="Clipped"><mask id="mask-15" fill="white"><use xlink:href="#path-14"></use></mask><g id="SVGID_1_"></g><path d="M33.78125,17.7272727 C31.3467969,17.7272727 29.375,15.7440341 29.375,13.2954545 L29.375,13.6647727 C29.375,16.1133523 31.3467969,18.0965909 33.78125,18.0965909 L47,18.0965909 L47,17.7272727 L33.78125,17.7272727 Z" id="Path" fill-opacity="0.1" fill="#1A237E" fill-rule="nonzero" mask="url(#mask-15)"></path></g></g><path d="M29.375,0 L4.40625,0 C1.9828125,0 0,1.99431818 0,4.43181818 L0,60.5681818 C0,63.0056818 1.9828125,65 4.40625,65 L42.59375,65 C45.0171875,65 47,63.0056818 47,60.5681818 L47,17.7272727 L29.375,0 Z" id="Path" fill="url(#radialGradient-16)" fill-rule="nonzero"></path></g></g></g></g></g></svg></p></div><svg fill="none" width="0" height="0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0"><path d="" stroke="gray" stroke-width="2" stroke-opacity="0.2" stroke-linecap="round"></path><path d="" stroke-width="2" stroke="url(#:R4fmueu6la:)" stroke-opacity="1" stroke-linecap="round"></path><defs><linearGradient id=":R4fmueu6la:" gradientUnits="userSpaceOnUse" x1="0%" x2="0%" y1="0%" y2="0%"><stop stop-color="#ffaa40" stop-opacity="0"></stop><stop stop-color="#ffaa40"></stop><stop offset="32.5%" stop-color="#9c40ff"></stop><stop offset="100%" stop-color="#9c40ff" stop-opacity="0"></stop></linearGradient></defs></svg><svg fill="none" width="0" height="0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0"><path d="" stroke="gray" stroke-width="2" stroke-opacity="0.2" stroke-linecap="round"></path><path d="" stroke-width="2" stroke="url(#:R6fmueu6la:)" stroke-opacity="1" stroke-linecap="round"></path><defs><linearGradient id=":R6fmueu6la:" gradientUnits="userSpaceOnUse" x1="0%" x2="0%" y1="0%" y2="0%"><stop stop-color="#ffaa40" stop-opacity="0"></stop><stop stop-color="#ffaa40"></stop><stop offset="32.5%" stop-color="#9c40ff"></stop><stop offset="100%" stop-color="#9c40ff" stop-opacity="0"></stop></linearGradient></defs></svg><svg fill="none" width="0" height="0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0"><path d="" stroke="gray" stroke-width="2" stroke-opacity="0.2" stroke-linecap="round"></path><path d="" stroke-width="2" stroke="url(#:R8fmueu6la:)" stroke-opacity="1" stroke-linecap="round"></path><defs><linearGradient id=":R8fmueu6la:" gradientUnits="userSpaceOnUse" x1="0%" x2="0%" y1="0%" y2="0%"><stop stop-color="#ffaa40" stop-opacity="0"></stop><stop stop-color="#ffaa40"></stop><stop offset="32.5%" stop-color="#9c40ff"></stop><stop offset="100%" stop-color="#9c40ff" stop-opacity="0"></stop></linearGradient></defs></svg><svg fill="none" width="0" height="0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0"><path d="" stroke="gray" stroke-width="2" stroke-opacity="0.2" stroke-linecap="round"></path><path d="" stroke-width="2" stroke="url(#:Rafmueu6la:)" stroke-opacity="1" stroke-linecap="round"></path><defs><linearGradient id=":Rafmueu6la:" gradientUnits="userSpaceOnUse" x1="0%" x2="0%" y1="0%" y2="0%"><stop stop-color="#ffaa40" stop-opacity="0"></stop><stop stop-color="#ffaa40"></stop><stop offset="32.5%" stop-color="#9c40ff"></stop><stop offset="100%" stop-color="#9c40ff" stop-opacity="0"></stop></linearGradient></defs></svg><svg fill="none" width="0" height="0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0"><path d="" stroke="gray" stroke-width="2" stroke-opacity="0.2" stroke-linecap="round"></path><path d="" stroke-width="2" stroke="url(#:Rcfmueu6la:)" stroke-opacity="1" stroke-linecap="round"></path><defs><linearGradient id=":Rcfmueu6la:" gradientUnits="userSpaceOnUse" x1="0%" x2="0%" y1="0%" y2="0%"><stop stop-color="#ffaa40" stop-opacity="0"></stop><stop stop-color="#ffaa40"></stop><stop offset="32.5%" stop-color="#9c40ff"></stop><stop offset="100%" stop-color="#9c40ff" stop-opacity="0"></stop></linearGradient></defs></svg><svg fill="none" width="0" height="0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0"><path d="" stroke="gray" stroke-width="2" stroke-opacity="0.2" stroke-linecap="round"></path><path d="" stroke-width="2" stroke="url(#:Refmueu6la:)" stroke-opacity="1" stroke-linecap="round"></path><defs><linearGradient id=":Refmueu6la:" gradientUnits="userSpaceOnUse" x1="0%" x2="0%" y1="0%" y2="0%"><stop stop-color="#ffaa40" stop-opacity="0"></stop><stop stop-color="#ffaa40"></stop><stop offset="32.5%" stop-color="#9c40ff"></stop><stop offset="100%" stop-color="#9c40ff" stop-opacity="0"></stop></linearGradient></defs></svg></div><div><figure><div><p><span>💸</span></p><div><figcaption><span>Payment received</span><span>·</span><span>15m ago</span></figcaption><p>Magic UI</p></div></div></figure></div></div></div></div><section id="testimonials"><p><h2>What People Are Saying</h2><h3>Don't just take our word for it. Here's what<!-- --> <strong>real people</strong> are saying about Magic UI on Twitter.</h3></p><div><div><div><div><p><span>I think our designer just convinced me to buy </span><a href="https://twitter.com/magicuidesign" target="_blank" rel="noopener noreferrer"><span>@magicuidesign</span></a><span> 

I can't be bothered to figure out the comets and border beam, it's cheaper to just buy</span></p></div><div><p><span>This will be the first component I will adopt from the collection! Love these!</span></p></div><div><p><span>Looks great! Keep building🔥</span></p></div><div><p><span>Thank fucking god someone made this. 
You're the best💯</span></p></div><div><p><span>you heard right. that looks amazing 🤩</span></p></div><div><p><span>This looks crazyy good! Congrats on the launch</span></p></div><div><p><span>Congrats Dillion!
Just bought one!
This is fire 🔥</span></p></div><div><p><span>this guy don't miss, what a shipping machine! 

love to see it.</span></p></div></div><div><div><p><span>I think our designer just convinced me to buy </span><a href="https://twitter.com/magicuidesign" target="_blank" rel="noopener noreferrer"><span>@magicuidesign</span></a><span> 

I can't be bothered to figure out the comets and border beam, it's cheaper to just buy</span></p></div><div><p><span>This will be the first component I will adopt from the collection! Love these!</span></p></div><div><p><span>Looks great! Keep building🔥</span></p></div><div><p><span>Thank fucking god someone made this. 
You're the best💯</span></p></div><div><p><span>you heard right. that looks amazing 🤩</span></p></div><div><p><span>This looks crazyy good! Congrats on the launch</span></p></div><div><p><span>Congrats Dillion!
Just bought one!
This is fire 🔥</span></p></div><div><p><span>this guy don't miss, what a shipping machine! 

love to see it.</span></p></div></div><div><div><p><span>I think our designer just convinced me to buy </span><a href="https://twitter.com/magicuidesign" target="_blank" rel="noopener noreferrer"><span>@magicuidesign</span></a><span> 

I can't be bothered to figure out the comets and border beam, it's cheaper to just buy</span></p></div><div><p><span>This will be the first component I will adopt from the collection! Love these!</span></p></div><div><p><span>Looks great! Keep building🔥</span></p></div><div><p><span>Thank fucking god someone made this. 
You're the best💯</span></p></div><div><p><span>you heard right. that looks amazing 🤩</span></p></div><div><p><span>This looks crazyy good! Congrats on the launch</span></p></div><div><p><span>Congrats Dillion!
Just bought one!
This is fire 🔥</span></p></div><div><p><span>this guy don't miss, what a shipping machine! 

love to see it.</span></p></div></div><div><div><p><span>I think our designer just convinced me to buy </span><a href="https://twitter.com/magicuidesign" target="_blank" rel="noopener noreferrer"><span>@magicuidesign</span></a><span> 

I can't be bothered to figure out the comets and border beam, it's cheaper to just buy</span></p></div><div><p><span>This will be the first component I will adopt from the collection! Love these!</span></p></div><div><p><span>Looks great! Keep building🔥</span></p></div><div><p><span>Thank fucking god someone made this. 
You're the best💯</span></p></div><div><p><span>you heard right. that looks amazing 🤩</span></p></div><div><p><span>This looks crazyy good! Congrats on the launch</span></p></div><div><p><span>Congrats Dillion!
Just bought one!
This is fire 🔥</span></p></div><div><p><span>this guy don't miss, what a shipping machine! 

love to see it.</span></p></div></div></div><div><div><div><p><span>just bought one, love it.</span></p><div><p><img src="https://pbs.twimg.com/media/FyfoQqcacAEoXXR.jpg" title="Photo by Raduan Al-Shedivat" alt="@dillionverma @linear @wopehq @reflectnotes @reactjs @tailwindcss @buildspace just bought one, love it. https://t.co/ZtHQXuwVQU"></p></div></div><div><p><span>Just bought it, keep delivering! looking forward to test it out</span></p></div><div><p><span>I was looking for something like that yesterday. Well done and tks for sharing!</span></p></div><div><p><span>Pre-ordered, Excited to see what you ship!</span></p></div><div><p><span>Copped one! Designs look sleek 🔥</span></p></div><div><p><span>Sick dude. Can’t wait to build with these once they’re all done</span></p></div></div><div><div><p><span>just bought one, love it.</span></p><div><p><img src="https://pbs.twimg.com/media/FyfoQqcacAEoXXR.jpg" title="Photo by Raduan Al-Shedivat" alt="@dillionverma @linear @wopehq @reflectnotes @reactjs @tailwindcss @buildspace just bought one, love it. https://t.co/ZtHQXuwVQU"></p></div></div><div><p><span>Just bought it, keep delivering! looking forward to test it out</span></p></div><div><p><span>I was looking for something like that yesterday. Well done and tks for sharing!</span></p></div><div><p><span>Pre-ordered, Excited to see what you ship!</span></p></div><div><p><span>Copped one! Designs look sleek 🔥</span></p></div><div><p><span>Sick dude. Can’t wait to build with these once they’re all done</span></p></div></div><div><div><p><span>just bought one, love it.</span></p><div><p><img src="https://pbs.twimg.com/media/FyfoQqcacAEoXXR.jpg" title="Photo by Raduan Al-Shedivat" alt="@dillionverma @linear @wopehq @reflectnotes @reactjs @tailwindcss @buildspace just bought one, love it. https://t.co/ZtHQXuwVQU"></p></div></div><div><p><span>Just bought it, keep delivering! looking forward to test it out</span></p></div><div><p><span>I was looking for something like that yesterday. Well done and tks for sharing!</span></p></div><div><p><span>Pre-ordered, Excited to see what you ship!</span></p></div><div><p><span>Copped one! Designs look sleek 🔥</span></p></div><div><p><span>Sick dude. Can’t wait to build with these once they’re all done</span></p></div></div><div><div><p><span>just bought one, love it.</span></p><div><p><img src="https://pbs.twimg.com/media/FyfoQqcacAEoXXR.jpg" title="Photo by Raduan Al-Shedivat" alt="@dillionverma @linear @wopehq @reflectnotes @reactjs @tailwindcss @buildspace just bought one, love it. https://t.co/ZtHQXuwVQU"></p></div></div><div><p><span>Just bought it, keep delivering! looking forward to test it out</span></p></div><div><p><span>I was looking for something like that yesterday. Well done and tks for sharing!</span></p></div><div><p><span>Pre-ordered, Excited to see what you ship!</span></p></div><div><p><span>Copped one! Designs look sleek 🔥</span></p></div><div><p><span>Sick dude. Can’t wait to build with these once they’re all done</span></p></div></div></div></div></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[WinDirStat – Windows Directory Statistics (178 pts)]]></title>
            <link>https://windirstat.net/</link>
            <guid>40449767</guid>
            <pubDate>Thu, 23 May 2024 02:34:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://windirstat.net/">https://windirstat.net/</a>, See on <a href="https://news.ycombinator.com/item?id=40449767">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page"><p>WinDirStat is a disk usage statistics viewer and cleanup tool for various versions of <strong>Microsoft Windows</strong>.<br><strong><em>Note:</em></strong> if you are looking for an alternative for <strong>Linux</strong>, you are looking for <a href="http://kdirstat.sourceforge.net/">KDirStat</a> (<tt>apt-get install kdirstat</tt> or <tt>apt-get install k4dirstat</tt> on Debian-derivatives) or <a href="https://github.com/shundhammer/qdirstat">QDirStat</a> and for <strong>MacOS X</strong> it would be <a href="http://www.derlien.com/">Disk Inventory X</a> or <a href="http://grandperspectiv.sourceforge.net/">GrandPerspective</a>.</p><p>Please visit the <a href="https://blog.windirstat.net/">WinDirStat blog</a> for more up-to-date information about the program.</p><p>On start up, it reads the whole directory tree once and then presents it in three useful views:</p><ul><li>The directory list, which resembles the tree view of the Windows Explorer but is sorted by file/subtree size,</li><li>The treemap, which shows the whole contents of the directory tree straight away,</li><li>The extension list, which serves as a legend and shows statistics about the file types.</li></ul><img src="https://windirstat.net/images/windirstat.jpg" alt="Screenshot"><p>The treemap represents each file as a colored rectangle, the area of which is proportional to the file's size. The rectangles are arranged in such a way, that directories again make up rectangles, which contain all their files and subdirectories. So their area is proportional to the size of the subtrees. The color of a rectangle indicates the type of the file, as shown in the extension list. The cushion shading additionally brings out the directory structure. </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Drone Flying 101 – An Interactive Tutorial for Beginners (133 pts)]]></title>
            <link>https://fpvsim.com/drone-flying-101</link>
            <guid>40449278</guid>
            <pubDate>Thu, 23 May 2024 01:25:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fpvsim.com/drone-flying-101">https://fpvsim.com/drone-flying-101</a>, See on <a href="https://news.ycombinator.com/item?id=40449278">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="refreshing-point"><p><li><a href="https://fpvsim.com/how-tos">FPVSIM How-tos</a></li><li>Drone Flying 101 - An Interactive Tutorial for Beginners</li></p><div><div><h2>Drone Flying 101</h2><h2>An Interactive Tutorial for Beginners</h2><p>v0.1 - Last updated 2024/05/18</p></div><p>Welcome to the world of drone flying, where the sky is your playground and the possibilities are endless! Whether you're a photography enthusiast, an aspiring filmmaker, or simply a thrill-seeker looking for a new hobby, flying a drone opens up a whole new realm of excitement and exploration. In this tutorial, we'll take you through everything you need to know to take to the skies with confidence and skill.</p><div><div><p>1 minute of theory</p><div><p>So what's the main difference between flying a drone versus driving a car? Mainly, drones move in 3D spaces whereas cars (if not jumping LOL) runs on a 2D surface. It's probably common to you of the X-Y-Z axes in 3D environments. In areospace, we call them a little differently, which is Roll/Yaw/Pitch, as illustrated below</p><p><img src="https://fpvsim.com/q/client/glbs/howtos/sim-tutorial/roll-yaw-pitch.png" alt="Set Max FPS.">You can see that compared to cars, where you can only control the Yaw axis, airplanes give the extra Roll and Pitch axes control. The same goes with drones. Enough theories, let's play!</p></div></div><div><p>Lesson 1: Hover</p><p>Try to throttle up/down so that the drone can hover in the air using the joystick on the left by dragging the center dot up/down. This controls overall <b>lift (thrust)</b> generated by the drone propellers, the higher the throttle, the faster the propellers will spin. For best experience, make sure your screen is wide enough.</p></div><div><p>Lesson 2: Turn (Yaw)</p><p>Try to turn left/right using the joystick on the left by dragging the center dot left/right. This controls how the drone rotates around the vertical (YAW) axis.</p></div><div><p>Lesson 3: Bank (Roll)</p><p>Try to turn left/right using the joystick on the right by dragging the center dot left/right. This controls how the drone rotates around the longitudinal (ROLL) axis.</p></div><div><p>Lesson 4: Nose up, nose down (Pitch)</p><p>Try to move the nose up and down using the joystick on the right by dragging the center dot up/down. This controls how the drone rotates around the lateral (PITCH) axis.</p></div><div><p>Lesson 5: Now let's fly forward</p><p>For regular drones, since there's no horizontal thrust, the only way to move horizontally is by leaning towards the direction you want to go. Try to throttle up a little bit and pitch forward (nose down) to reach the mountains in front of us.</p></div><div><p>Lesson 6: Coordinated turns</p><div><p>Now let's fly around using both sticks. For best experiences, use a device with touch screens like a smart phone, tablet, or some laptops. To play in fullscreen, please add our site to your home screen by following this tutorial ‐&nbsp;<a href="https://fpvsim.com/how-tos/install-on-ios-android">how to play FPVSIM Simulator on iOS/Android</a>.&nbsp;</p><p>It's going to take some time to calibrate yourself on how much stick deflections you need so the drone can point to the direction you want it to point to, but after a few sessions, you'll be able to fly like those guys/gals on YouTube.</p></div></div><div><p>Congratulations, you have graduated from the "newbie village"! You can continue to fly in our web based simulator at &nbsp;<a href="https://fpvsim.com/sim">FPVSIM Web</a>&nbsp; which contains more features to help you learn to fly or download our desktop versions with more realistic graphics on our &nbsp;<a href="https://fpvsim.com/">home page</a>.</p></div></div>
</div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI didn’t copy Scarlett Johansson’s voice for ChatGPT, records show (321 pts)]]></title>
            <link>https://www.washingtonpost.com/technology/2024/05/22/openai-scarlett-johansson-chatgpt-ai-voice/</link>
            <guid>40448045</guid>
            <pubDate>Wed, 22 May 2024 23:16:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.washingtonpost.com/technology/2024/05/22/openai-scarlett-johansson-chatgpt-ai-voice/">https://www.washingtonpost.com/technology/2024/05/22/openai-scarlett-johansson-chatgpt-ai-voice/</a>, See on <a href="https://news.ycombinator.com/item?id=40448045">Hacker News</a></p>
Couldn't get https://www.washingtonpost.com/technology/2024/05/22/openai-scarlett-johansson-chatgpt-ai-voice/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Emacs Easydraw – drawing tool inside Emacs (152 pts)]]></title>
            <link>https://github.com/misohena/el-easydraw</link>
            <guid>40447998</guid>
            <pubDate>Wed, 22 May 2024 23:13:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/misohena/el-easydraw">https://github.com/misohena/el-easydraw</a>, See on <a href="https://news.ycombinator.com/item?id=40447998">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Emacs Easy Draw</h2><a id="user-content-emacs-easy-draw" aria-label="Permalink: Emacs Easy Draw" href="#emacs-easy-draw"></a></p>
<p dir="auto">Emacs Easy Draw is a drawing tool that runs inside Emacs.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/misohena/el-easydraw/blob/master/screenshot/edraw-screenshot.gif"><img src="https://github.com/misohena/el-easydraw/raw/master/screenshot/edraw-screenshot.gif" alt="./screenshot/edraw-screenshot.gif" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Requirements</h2><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<ul dir="auto">
  <li>Emacs 27.2</li>
  <li>Image support</li>
  <li>SVG support</li>
  <li>gzip and gunzip(or zlib support)</li>
  <li>libxml support</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<p dir="auto"><a href="https://github.com/misohena/el-easydraw/wiki/Screenshots">https://github.com/misohena/el-easydraw/wiki/Screenshots</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Use In Org-Mode - edraw-org.el</h2><a id="user-content-use-in-org-mode---edraw-orgel" aria-label="Permalink: Use In Org-Mode - edraw-org.el" href="#use-in-org-mode---edraw-orgel"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Config</h2><a id="user-content-config" aria-label="Permalink: Config" href="#config"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="(with-eval-after-load 'org
  (require 'edraw-org)
  (edraw-org-setup-default))
;; When using the org-export-in-background option (when using the
;; asynchronous export function), the following settings are
;; required. This is because Emacs started in a separate process does
;; not load org.el but only ox.el.
(with-eval-after-load &quot;ox&quot;
  (require 'edraw-org)
  (edraw-org-setup-exporter))"><pre>(<span>with-eval-after-load</span> <span>'org</span>
  (<span>require</span> <span>'edraw-org</span>)
  (edraw-org-setup-default))
<span><span>;</span>; When using the org-export-in-background option (when using the</span>
<span><span>;</span>; asynchronous export function), the following settings are</span>
<span><span>;</span>; required. This is because Emacs started in a separate process does</span>
<span><span>;</span>; not load org.el but only ox.el.</span>
(<span>with-eval-after-load</span> <span><span>"</span>ox<span>"</span></span>
  (<span>require</span> <span>'edraw-org</span>)
  (edraw-org-setup-exporter))</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">To start drawing, type <code>[​[edraw:]]</code> and type <code>C-c C-o</code> on the link.</p>
<p dir="auto">Draw something and type <code>C-c C-c</code> and the data will be saved in the buffer.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Link Notation</h2><a id="user-content-link-notation" aria-label="Permalink: Link Notation" href="#link-notation"></a></p>
<pre lang="org">[​[edraw:file=./example.edraw.svg]​]

[​[edraw:data=&lt;base64data&gt;​]]

[​[*Example][edraw:file=./example.edraw.svg]​]

[​[*Example][edraw:data=&lt;base64data&gt;]​]
</pre>
<p dir="auto"><h2 tabindex="-1" dir="auto">Inline Images</h2><a id="user-content-inline-images" aria-label="Permalink: Inline Images" href="#inline-images"></a></p>
<p dir="auto">To toggle the inline display mode, type <code>M-x edraw-org-link-image-mode</code></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Edit Image</h2><a id="user-content-edit-image" aria-label="Permalink: Edit Image" href="#edit-image"></a></p>
<p dir="auto">To edit the image, do one of the following on the link:</p>
<ul dir="auto">
  <li><code>M-x edraw-org-edit-link</code></li>
  <li><code>C-c C-o</code></li>
  <li>Right click on image (The right-click menu also provides some other useful functions for links)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Export</h2><a id="user-content-export" aria-label="Permalink: Export" href="#export"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">As HTML</h3><a id="user-content-as-html" aria-label="Permalink: As HTML" href="#as-html"></a></p>
<p dir="auto">Customization Variables:</p>
<dl>
  <dt>edraw-org-export-html-data-tag</dt><dd>HTML tag used to export data links. (svg or img)</dd>
  <dt>edraw-org-export-html-file-tag</dt><dd>HTML tag used to export file links. (svg or img)</dd>
  <dt>edraw-org-export-html-use-viewbox</dt><dd>Add viewBox= attribute to svg root elements when SVG export.</dd>
</dl>
<p dir="auto">Link Properties:</p>
<dl>
  <dt>html-tag</dt><dd>
    HTML tag used to export the link. (svg or img)
    <p dir="auto">Example:</p>
    <pre lang="org">[[edraw:html-tag=img;data=&lt;base64data&gt;]]
    </pre>
  </dd>
</dl>
<p dir="auto"><h3 tabindex="-1" dir="auto">As LaTeX</h3><a id="user-content-as-latex" aria-label="Permalink: As LaTeX" href="#as-latex"></a></p>
<p dir="auto">I have a minimal implementation, but I don’t use LaTeX usually, so there may be some problems.</p>
<p dir="auto"><code>[[edraw:data=]]</code> format creates a temporary file when exporting as LaTeX. Please let me know if there is a better way in LaTeX.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Regular File Link Support</h2><a id="user-content-regular-file-link-support" aria-label="Permalink: Regular File Link Support" href="#regular-file-link-support"></a></p>
<p dir="auto">You can also edit regular file links inline.</p>
<p dir="auto">For example, create a link like this:</p>
<pre lang="org">[​[file:example.edraw.svg]​]
</pre>
<p dir="auto">Then do <code>M-x edraw-org-edit-regular-file-link</code> on this link and the drawing editor will appear in its place.</p>
<p dir="auto">Inline display after editing is possible with org-toggle-inline-images. You can also use <a href="https://github.com/misohena/org-inline-image-fix#automatic-image-update">org-flyimage</a> if you want to display images automatically.</p>
<p dir="auto">The normal file link has the following drawbacks compared to the edraw link format.</p>
<ul dir="auto">
  <li>No detailed settings for HTML export.</li>
  <li>SVG data cannot be embedded inside org files.</li>
</ul>
<p dir="auto">Data URI links are technically <a href="https://github.com/misohena/org-inline-image-fix#data-uri-supportorg-datauri-imageel">possible</a>, but inline editing of Data URI links is not implemented.</p>
<p dir="auto">On the other hand, regular file links have the advantage that they can be exported in many formats.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Edit a Single Edraw File - edraw-mode.el</h2><a id="user-content-edit-a-single-edraw-file---edraw-modeel" aria-label="Permalink: Edit a Single Edraw File - edraw-mode.el" href="#edit-a-single-edraw-file---edraw-modeel"></a></p>
<p dir="auto">The data that Emacs Easy Draw handles is a small subset of the SVG specification. The recommended file extension is .edraw.svg.</p>
<p dir="auto">Emacs Easy Draw cannot edit general SVG data, but the data it outputs can be viewed by web browsers and other software that can handle SVG.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Open .edraw.svg files using edraw-mode</h2><a id="user-content-open-edrawsvg-files-using-edraw-mode" aria-label="Permalink: Open .edraw.svg files using edraw-mode" href="#open-edrawsvg-files-using-edraw-mode"></a></p>
<p dir="auto">To open a file with the extension .edraw.svg using edraw-mode, add the following setting to init.el.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(autoload 'edraw-mode &quot;edraw-mode&quot;)
(add-to-list 'auto-mode-alist '(&quot;\\.edraw\\.svg$&quot; . edraw-mode))"><pre>(<span>autoload</span> <span>'edraw-mode</span> <span><span>"</span>edraw-mode<span>"</span></span>)
(<span>add-to-list</span> <span>'auto-mode-alist</span> '(<span><span>"</span><span>\\</span>.edraw<span>\\</span>.svg$<span>"</span></span> <span>.</span> edraw-mode))</pre></div>
<p dir="auto">NOTE: Setup later than other modes for .svg such as image-mode.</p>
<p dir="auto">If you don’t like the long .edraw.svg extension, you can put a comment specifying the mode at the top of the file.</p>
<pre>&lt;!-- -*- mode: edraw -*- --&gt;
&lt;svg ...
</pre>
<p dir="auto">Comments in files are preserved as much as possible during editing.</p>
<p dir="auto">Or you can use magic-mode-alist.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(push '(&quot;\\(<!--[^>]*-->[\n\t ]*\\)*<svg .* id=\&quot;edraw-&quot; . edraw-mode) magic-mode-alist)"><pre>(<span>push</span> '(<span><span>"</span><span>\\</span>(&lt;!--[^&gt;]*--&gt;[<span>\n\t</span> ]*<span>\\</span>)*&lt;svg .* id=<span>\"</span>edraw-<span>"</span></span> <span>.</span> edraw-mode) magic-mode-alist)</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quick sketch using edraw-mode</h2><a id="user-content-quick-sketch-using-edraw-mode" aria-label="Permalink: Quick sketch using edraw-mode" href="#quick-sketch-using-edraw-mode"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="(autoload 'edraw &quot;edraw-mode&quot; nil t)"><pre>(<span>autoload</span> <span>'edraw</span> <span><span>"</span>edraw-mode<span>"</span></span> <span>nil</span> <span>t</span>)</pre></div>
<p dir="auto">The `edraw’ command simply creates a new buffer and sets its major mode to edraw-mode. Suitable for quickly creating new diagrams. You can save as with the save-buffer (C-x C-s) command.</p>
<p dir="auto">Typing M-x xml-mode in the edraw-mode buffer will edit it as XML. Typing M-x edraw-mode again graphically edits.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Key bindings</h2><a id="user-content-key-bindings" aria-label="Permalink: Key bindings" href="#key-bindings"></a></p>
<p dir="auto">Most of the key bindings are displayed in menus and help echoes.</p>
<p dir="auto">The key bindings that are not displayed are as follows.</p>
<table>
  <tbody><tr><td>left, up, right, down</td><td>Move selected objects (S-&lt;dir&gt;:10px, C-u &lt;dir&gt;:Numerical input)</td></tr>
  <tr><td>M-left, M-up, M-right, M-down</td><td>Duplicate selected objects and move (M-S-&lt;dir&gt;:10px, C-u M-&lt;dir&gt;:Numerical input)</td></tr>
  <tr><td>mouse-3 on shapes, anchor points, background, shape picker, or edraw links</td><td>Show context menu</td></tr>
  <tr><td>C-u mouse-3</td><td>Show context menu (Ignore invisible/unpickable states)</td></tr>
  <tr><td>(Select Tool) C-down-mouse-1</td><td>Add/Remove clicked shape to selection list</td></tr>
  <tr><td>(Select Tool) M-drag-mouse-1</td><td>Duplicate dragged shape</td></tr>
  <tr><td>(Path Tool) C-u down-mouse-1</td><td>Ignore existing points (Avoid connecting or moving existing points)</td></tr>
  <tr><td>S-drag-mouse-1</td><td>45 degree unit movement or square specification</td></tr>
  <tr><td>Middle-drag</td><td>Scroll</td></tr>
  <tr><td>C-wheel-up, C-wheel-down</td><td>Zoom</td></tr>
  <tr><td>(In Property Editor) Middle-click</td><td>Close window</td></tr>
  <tr><td>(In Shape Picker) Middle-click</td><td>Close window</td></tr>
</tbody></table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Emacs Lisp</h2><a id="user-content-emacs-lisp" aria-label="Permalink: Emacs Lisp" href="#emacs-lisp"></a></p>
<p dir="auto">The following code is an example of inserting an editor into a buffer from Emacs Lisp.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(require 'edraw)

(progn
  (insert &quot; &quot;)
  (let ((editor (edraw-editor
                 ;; Make an overlay that covers &quot; &quot;
                 ;; 'evaporate means automatic deletion
                 :overlay (let ((overlay (make-overlay (1- (point)) (point))))
                            (overlay-put overlay 'evaporate t)
                            overlay)
                 ;; Initial SVG
                 :svg (edraw-svg-create
                       400 300
                       (edraw-svg-group
                        :id &quot;edraw-body&quot; ;; g#edraw-body is the edit target area
                        (edraw-svg-rect 100 100 200 100 :fill &quot;blue&quot;)))
                 ;; Function called when saving
                 :document-writer (lambda (svg &amp;rest _)
                                    (pop-to-buffer &quot;*svg output*&quot;)
                                    (erase-buffer)
                                    (edraw-svg-print svg nil nil 0))
                 ;; Add one item to the main menu
                 :menu-filter (lambda (menu-type items &amp;rest _)
                                (pcase menu-type
                                  ('main-menu
                                   (append
                                    items
                                    `(((edraw-msg &quot;Close&quot;) (lambda (editor) (edraw-close editor))))))
                                  (_ items)))
                 ;; Add key binding
                 :keymap (let ((km (make-sparse-keymap)))
                           (set-keymap-parent km edraw-editor-map)
                           (define-key km (kbd &quot;C-c C-c&quot;) (lambda () (interactive) (edraw-close (edraw-editor-at))))
                           km)
                 )))
    ;; Manipulate the editor object if necessary
    ;; Set user extra data
    (edraw-set-extra-prop editor 'my-extra-data 12345)
    editor
    nil))"><pre>(<span>require</span> <span>'edraw</span>)

(<span>progn</span>
  (<span>insert</span> <span><span>"</span> <span>"</span></span>)
  (<span>let</span> ((editor (edraw-editor
                 <span><span>;</span>; Make an overlay that covers " "</span>
                 <span><span>;</span>; 'evaporate means automatic deletion</span>
                 <span>:overlay</span> (<span>let</span> ((overlay (<span>make-overlay</span> (<span>1-</span> (<span>point</span>)) (<span>point</span>))))
                            (<span>overlay-put</span> overlay <span>'evaporate</span> <span>t</span>)
                            overlay)
                 <span><span>;</span>; Initial SVG</span>
                 <span>:svg</span> (edraw-svg-create
                       <span>400</span> <span>300</span>
                       (edraw-svg-group
                        <span>:id</span> <span><span>"</span>edraw-body<span>"</span></span> <span><span>;</span>; g#edraw-body is the edit target area</span>
                        (edraw-svg-rect <span>100</span> <span>100</span> <span>200</span> <span>100</span> <span>:fill</span> <span><span>"</span>blue<span>"</span></span>)))
                 <span><span>;</span>; Function called when saving</span>
                 <span>:document-writer</span> (<span>lambda</span> (<span>svg</span> <span>&amp;rest</span> <span>_</span>)
                                    (<span>pop-to-buffer</span> <span><span>"</span>*svg output*<span>"</span></span>)
                                    (<span>erase-buffer</span>)
                                    (edraw-svg-print svg <span>nil</span> <span>nil</span> <span>0</span>))
                 <span><span>;</span>; Add one item to the main menu</span>
                 <span>:menu-filter</span> (<span>lambda</span> (<span>menu-type</span> <span>items</span> <span>&amp;rest</span> <span>_</span>)
                                (<span>pcase</span> menu-type
                                  (<span>'main-menu</span>
                                   (<span>append</span>
                                    items
                                    `(((edraw-msg <span><span>"</span>Close<span>"</span></span>) (<span>lambda</span> (<span>editor</span>) (edraw-close editor))))))
                                  (_ items)))
                 <span><span>;</span>; Add key binding</span>
                 <span>:keymap</span> (<span>let</span> ((km (<span>make-sparse-keymap</span>)))
                           (<span>set-keymap-parent</span> km edraw-editor-map)
                           (<span>define-key</span> km (<span>kbd</span> <span><span>"</span>C-c C-c<span>"</span></span>) (<span>lambda</span> () (<span>interactive</span>) (edraw-close (edraw-editor-at))))
                           km)
                 )))
    <span><span>;</span>; Manipulate the editor object if necessary</span>
    <span><span>;</span>; Set user extra data</span>
    (edraw-set-extra-prop editor <span>'my-extra-data</span> <span>12345</span>)
    editor
    <span>nil</span>))</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Color Picker</h2><a id="user-content-color-picker" aria-label="Permalink: Color Picker" href="#color-picker"></a></p>
<p dir="auto">edraw-color-picker.el contains a color picker library and some commands.</p>
<p dir="auto">Commands to add/replace the selected color to the buffer:</p>
<ul dir="auto">
  <li>edraw-color-picker-insert-color</li>
  <li>edraw-color-picker-replace-color-at</li>
  <li>edraw-color-picker-replace-or-insert-color-at-point</li>
</ul>
<p dir="auto">Settings for using them while editing CSS or HTML:</p>
<div dir="auto" data-snippet-clipboard-copy-content="(autoload 'edraw-color-picker-replace-color-at &quot;edraw-color-picker&quot; nil t)
(autoload 'edraw-color-picker-replace-or-insert-color-at-point &quot;edraw-color-picker&quot; nil t)

(defun my-edraw-color-picker-add-keys (map)
  ;; Replaces the color of the clicked location
  (define-key map [mouse-1] #'edraw-color-picker-replace-color-at)
  ;; C-c C-o replaces the color in place or adds color
  (define-key map (kbd &quot;C-c C-o&quot;)
              #'edraw-color-picker-replace-or-insert-color-at-point))

(defun my-edraw-color-picker-enable ()
  (my-edraw-color-picker-add-keys (or (current-local-map)
                                      (let ((map (make-sparse-keymap)))
                                        (use-local-map map)
                                        map))))

(add-hook 'css-mode-hook 'my-edraw-color-picker-enable)
(add-hook 'mhtml-mode-hook 'my-edraw-color-picker-enable)"><pre>(<span>autoload</span> <span>'edraw-color-picker-replace-color-at</span> <span><span>"</span>edraw-color-picker<span>"</span></span> <span>nil</span> <span>t</span>)
(<span>autoload</span> <span>'edraw-color-picker-replace-or-insert-color-at-point</span> <span><span>"</span>edraw-color-picker<span>"</span></span> <span>nil</span> <span>t</span>)

(<span>defun</span> <span>my-edraw-color-picker-add-keys</span> (<span>map</span>)
  <span><span>;</span>; Replaces the color of the clicked location</span>
  (<span>define-key</span> map [mouse-1] <span>#<span>'edraw-color-picker-replace-color-at</span></span>)
  <span><span>;</span>; C-c C-o replaces the color in place or adds color</span>
  (<span>define-key</span> map (<span>kbd</span> <span><span>"</span>C-c C-o<span>"</span></span>)
              <span>#<span>'edraw-color-picker-replace-or-insert-color-at-point</span></span>))

(<span>defun</span> <span>my-edraw-color-picker-enable</span> ()
  (my-edraw-color-picker-add-keys (<span>or</span> (<span>current-local-map</span>)
                                      (<span>let</span> ((<span>map</span> (<span>make-sparse-keymap</span>)))
                                        (<span>use-local-map</span> map)
                                        map))))

(<span>add-hook</span> <span>'css-mode-hook</span> <span>'my-edraw-color-picker-enable</span>)
(<span>add-hook</span> <span>'mhtml-mode-hook</span> <span>'my-edraw-color-picker-enable</span>)</pre></div>
<p dir="auto">Settings for use with Customize:</p>
<div dir="auto" data-snippet-clipboard-copy-content="(defun my-edraw-color-picker-enable-for-custom-mode ()
  ;; Use emacs color name
  (setq-local edraw-color-picker-insert-default-color-scheme 'emacs))

(add-hook 'Custom-mode-hook 'my-edraw-color-picker-enable-for-custom-mode)

(with-eval-after-load &quot;cus-edit&quot;
  ;; Add keys to the field key map
  (my-edraw-color-picker-add-keys custom-field-keymap))"><pre>(<span>defun</span> <span>my-edraw-color-picker-enable-for-custom-mode</span> ()
  <span><span>;</span>; Use emacs color name</span>
  (<span>setq-local</span> edraw-color-picker-insert-default-color-scheme <span>'emacs</span>))

(<span>add-hook</span> <span>'Custom-mode-hook</span> <span>'my-edraw-color-picker-enable-for-custom-mode</span>)

(<span>with-eval-after-load</span> <span><span>"</span>cus-edit<span>"</span></span>
  <span><span>;</span>; Add keys to the field key map</span>
  (my-edraw-color-picker-add-keys custom-field-keymap))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/misohena/el-easydraw/blob/master/screenshot/color-picker-inline.png"><img src="https://github.com/misohena/el-easydraw/raw/master/screenshot/color-picker-inline.png" alt="./screenshot/color-picker-inline.png"></a></p>
<p dir="auto">Show color picker in minibuffer:</p>
<ul dir="auto">
  <li>(edraw-color-picker-read-color)</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/misohena/el-easydraw/blob/master/screenshot/color-picker-minibuffer.png"><img src="https://github.com/misohena/el-easydraw/raw/master/screenshot/color-picker-minibuffer.png" alt="./screenshot/color-picker-minibuffer.png"></a></p>
<p dir="auto">A function that opens a color picker near the point:</p>
<ul dir="auto">
  <li>edraw-color-picker-open-near-point</li>
</ul>
<p dir="auto">A function that displays a color picker using an overlay:</p>
<ul dir="auto">
  <li>edraw-color-picker-overlay</li>
</ul>
<p dir="auto">The core class of the color picker:</p>
<ul dir="auto">
  <li>edraw-color-picker</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This software is licensed under GPLv3. You are free to use, modify and distribute this software.</p>
<p dir="auto">If you wish to register this software in any package archive, please fork this repository, make the necessary modifications to fit the package archive’s requirements, and submit the registration on your own. Also continue with the necessary maintenance. You don’t need my permission.</p>
<p dir="auto">I also welcome you to publish your improved version. If that works better than mine, I might start using it too. I may suddenly be unable to develop, and I cannot guarantee any continued development. This software is the result of what I want, so please add what you want yourself.</p>
<p dir="auto">I am not proficient in English, so please do not expect continuous communication in English. I have spent a long time using translation software to write this text, but I am not confident that the intended meaning is accurately conveyed. I don’t think it has ended up with the opposite meaning, but subtle nuances may be missing.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[US Justice Department to Seek Breakup of Live Nation-Ticketmaster (782 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2024-05-22/justice-department-to-seek-breakup-of-live-nation-ticketmaster</link>
            <guid>40447626</guid>
            <pubDate>Wed, 22 May 2024 22:39:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2024-05-22/justice-department-to-seek-breakup-of-live-nation-ticketmaster">https://www.bloomberg.com/news/articles/2024-05-22/justice-department-to-seek-breakup-of-live-nation-ticketmaster</a>, See on <a href="https://news.ycombinator.com/item?id=40447626">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Leaked OpenAI documents reveal aggressive tactics toward former employees (1596 pts)]]></title>
            <link>https://www.vox.com/future-perfect/351132/openai-vested-equity-nda-sam-altman-documents-employees</link>
            <guid>40447431</guid>
            <pubDate>Wed, 22 May 2024 22:22:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.vox.com/future-perfect/351132/openai-vested-equity-nda-sam-altman-documents-employees">https://www.vox.com/future-perfect/351132/openai-vested-equity-nda-sam-altman-documents-employees</a>, See on <a href="https://news.ycombinator.com/item?id=40447431">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>On Friday, Vox <a href="https://www.vox.com/future-perfect/2024/5/17/24158478/openai-departures-sam-altman-employees-chatgpt-release">reported</a> that employees at tech giant OpenAI who wanted to leave the company were confronted with expansive and highly restrictive exit documents. If they refused to sign in relatively short order, they were reportedly threatened with the loss of their vested equity in the company — a severe provision that's fairly uncommon in Silicon Valley. The policy had the effect of forcing ex-employees to choose between giving up what could be millions of dollars they had already earned or agreeing not to criticize the company, with no end date.</p><p>According to sources inside the company, the news caused a firestorm within OpenAI, a private company that is currently <a href="https://www.nytimes.com/2024/02/16/technology/openai-artificial-intelligence-deal-valuation.html">valued at some $80 billion</a>. As with many Silicon Valley startups, employees at OpenAI often get the majority of their overall expected compensation in the form of equity. They tend to assume that once it has “vested,” according to the schedule laid out in their contract, it is theirs and cannot be taken back, any more than a company would claw back salary that has been paid out.</p><p>A day after the Vox piece, CEO Sam Altman <a href="https://x.com/sama/status/1791936857594581428">posted</a> an apology, saying:&nbsp;</p><div><blockquote><p>we have never clawed back anyone's vested equity, nor will we do that if people do not sign a separation agreement (or don't agree to a non-disparagement agreement). vested equity is vested equity, full stop.</p><p>there was a provision about potential equity cancellation in our previous exit docs; although we never clawed anything back, it should never have been something we had in any documents or communication. this is on me and one of the few times i've been genuinely embarrassed running openai; i did not know this was happening and i should have.</p></blockquote></div><p>Tl;dr: I didn’t know we had provisions that threatened equity, and I promise we won’t do that anymore.</p><p>That apology has been echoed in internal communications by some members of OpenAI’s executive team. In a message to employees that was leaked to Vox, OpenAI chief strategy officer Jason Kwon acknowledged that the provision had been in place since 2019 but that “The team did catch this ~month ago. The fact that it went this long before the catch is on me.”</p><p>But there's a problem with those apologies from company leadership. Company documents obtained by Vox with signatures from Altman and Kwon complicate their claim that the clawback provisions were something they hadn’t known about. A separation letter on the termination documents, which you can read embedded below, says in plain language, “If you have any vested Units ... you are required to sign a release of claims agreement within 60 days in order to retain such Units.” It is signed by Kwon, along with OpenAI VP of people Diane Yoon (who departed OpenAI recently). The secret ultra-restrictive NDA, signed for only the “consideration” of already vested equity, is signed by COO Brad Lightcap.</p><p>Meanwhile, according to documents provided to Vox by ex-employees, the incorporation documents for the holding company that handles equity in OpenAI contains multiple passages with language that gives the company near-arbitrary authority to claw back equity from former employees or — just as importantly — block them from selling it.&nbsp;</p><p>Those incorporation documents were signed on April 10, 2023, by Sam Altman in his capacity as CEO of OpenAI.&nbsp;</p><p>Vox asked OpenAI if they could provide context on whether and how these clauses made it into the incorporation documents without Altman’s knowledge. While that question was not directly answered, Kwon said in a statement to Vox, “We are sorry for the distress this has caused great people who have worked hard for us. We have been working to fix this as quickly as possible. We will work even harder to be better.”&nbsp;</p><p>The seeming contradiction between OpenAI leadership’s recent statements and these documents has ramifications that go far beyond money. OpenAI is arguably the most influential, and certainly the most visible, company in artificial intelligence today, one that has the <a href="https://openai.com/about/">stated ambition</a> to “ensure that artificial general intelligence benefits all of humanity.”&nbsp;</p><p>A little more than a week ago, OpenAI executives <a href="https://www.nytimes.com/2024/05/13/technology/openai-chatgpt-app.html">were on stage</a> introducing the company’s latest model, ChatGPT-4o, which they were proud to note was capable of carrying out highly realistic conversations with users (with a voice, as it turned out, that was <a href="https://www.vox.com/future-perfect/350934/the-double-sexism-of-chatgpts-flirty-her-voice">a bit too close</a> to that of actress Scarlett Johansson).</p><p>But bringing artificial general intelligence to the world is a role that demands enormous public trust and serious transparency. If OpenAI’s own employees haven’t felt free to voice criticism without risking financial retribution, how can the company and its CEO possibly be worthy of that trust?</p><p>(Vox reviewed many documents in the course of reporting this story. Key documents of public interest are reproduced here.)</p><div><p><h2><strong>High-pressure tactics at OpenAI</strong></h2></p></div><p>Throughout the hundreds of pages of documents leaked to Vox, a pattern emerges. Getting ex-employees to sign the ultra-restrictive nondisparagement and nondisclosure agreement involved threatening to cancel their equity — but it also involved much more.&nbsp;</p><p>In two cases Vox reviewed, the lengthy, complex termination documents OpenAI sent out expired after seven days. That meant the former employees had a week to decide whether to accept OpenAI’s muzzle or risk forfeiting what could be millions of dollars — a tight timeline for a decision of that magnitude, and one that left little time to find outside counsel.&nbsp;</p><p>When ex-employees asked for more time to seek legal aid and review the documents, they faced significant pushback from OpenAI. “The General Release and Separation Agreement requires your signature within 7 days,” a representative told one employee in an email this spring when the employee asked for another week to review the complex documents.&nbsp;</p><p>“We want to make sure you understand that if you don't sign, it could impact your equity. That's true for everyone, and we're just doing things by the book,” an OpenAI representative emailed a second employee who had asked for two more weeks to review the agreement.&nbsp;</p><p>(I spoke with four experts in employment and labor law for perspective on whether the termination agreement and surrounding conduct was indeed “by the book” or standard in the industry. “For a company to threaten to claw back already-vested equity is egregious and unusual,” California employment law attorney Chambord Benton-Hayes told me in an emailed statement.)</p><p>Most ex-employees folded under the pressure. For those who persisted, the company pulled out another tool in what one former employee called the “legal retaliation toolbox” he encountered on leaving the company. When he declined to sign the first termination agreement sent to him and sought legal counsel, the company changed tactics. Rather than saying they could cancel his equity if he refused to sign the agreement, they said he could be prevented&nbsp;from selling his equity.&nbsp;</p><p>The later documents the company sent him, which Vox has reviewed, say, “If you have any vested Units and you do not sign the exit documents, including the General Release, as required by company policy, it is important to understand that, among other things, you will not be eligible to participate in future tender events or other liquidity opportunities that we may sponsor or facilitate as a private company.” In other words, sign or give up the chance to sell your equity.</p><div><p><h2><strong>How OpenAI played hardball</strong>&nbsp;</h2></p></div><p>To make sense of that — and to see why it makes OpenAI’s recent apology so hollow — you need to understand what equity at OpenAI means.&nbsp;</p><p>In a publicly traded company, like Google, equity just means shares of stock. Employees are paid partially in their salary and partially in Google stock, which they can hold or sell on the stock market like any shareholder.</p><p>In a private company like OpenAI, employees are still awarded ownership shares of the company (or, more frequently, options to purchase ownership shares of the company at low prices) but have to wait until an opportunity to sell those shares — which may not come for years. Large private companies sometimes do “<a href="https://www.globalshares.com/academy/tender-offers-for-private-companies/">tender offers</a>” where employees and former employees can sell their equity. OpenAI hosts tender offers sometimes, but the exact details are a tightly kept secret.&nbsp;</p><p>By announcing that someone who doesn’t sign the restrictive agreement is locked out of all future tender offers, OpenAI effectively makes that equity, valued at millions of dollars, conditional on the employee signing the agreement — while still truthfully saying that they technically haven’t clawed back anyone’s vested equity, as Altman claimed in his tweet on May 18.&nbsp;</p><p>Vox reached out to OpenAI to clarify whether OpenAI has used or plans to use this tactic to cut former employees off from equity. An OpenAI spokesperson said, “Historically, former employees have been eligible to sell at the same price regardless of where they work; we don’t expect that to change.” It is not clear who authorized telling a former employee that he would be excluded from all future tender offers unless he signed.</p><p>And the ex-employees I spoke with were nervous that, whatever public reassurances the company may be making, the incorporation documents generally gave OpenAI many avenues for legal retaliation, making it less reassuring for the company to retreat from any specific one.&nbsp;</p><p>In addition to clauses stating that vested equity will vanish if a former employee does not sign a general release within 60 days, the incorporation documents also contain clauses stating that, “at the sole and absolute discretion of the company,” any employee who is terminated by the company can have their vested equity holdings reduced to zero. There are also clauses stating that the company has absolute discretion over which employees are allowed to participate in tender offers in which their equity is sold.</p><p>“[Those] documents are supposed to be putting the mission of building safe and beneficial AGI first but instead they set up multiple ways to retaliate against departing employees who speak in any way that criticizes the company,” a source close to the company told me.&nbsp;</p><p>These documents are signed by Sam Altman. OpenAI did not respond to a question about whether there was a contradiction between Altman’s public statements that he was unaware company documents included language about clawing back equity and the presence of these clauses in incorporation documents with his signature on them.</p><div><p><h2><strong>Why it matters</strong></h2></p></div><p>OpenAI has long positioned itself as a company that ought to be held to a higher standard. It claimed that its unique corporate structure — which involved a for-profit company governed by a nonprofit — would let them bring transformative technology to the world and ensure it “benefits all of humanity,” as the company mission statement reads, and not just the shareholders. OpenAI’s senior leadership has talked at length about their responsibilities for accountability, transparency, and democratic input, with Altman himself <a href="https://time.com/6280372/sam-altman-chatgpt-regulate-ai/">telling</a> Congress last year that “my worst fears are that we — the field, the technology, the industry — cause significant harm to the world.”</p><p>But for all the high-minded idealism, OpenAI has also had its share of scandals. In November, Altman <a href="https://www.vox.com/technology/2023/11/20/23969589/openai-sam-altman-fired-microsoft-chatgpt-emmett-shear-silicon-valley">was fired</a> by the OpenAI board, which said in a <a href="https://www.forbes.com/sites/mattnovak/2023/11/17/sam-altman-departs-openai-as-board-alleges-he-was-not-consistently-candid/?sh=1a8a97e9637b">statement</a> only that Altman “was not consistently candid with the board.” The clumsy firing provoked an immediate outcry from employees, especially as the board failed to provide any more detailed explanation of what had justified firing the CEO of a world-leading tech company.&nbsp;</p><p>Altman soon arranged a deal to effectively take the company and most of its employees with him to Microsoft, before he was ultimately reinstated, with much of the board then resigning.&nbsp;</p><p>At the time, the board’s language — “not consistently candid” — was puzzling. (Has anyone ever met a CEO who is consistently candid?) But six months on, it seems like we might be starting to see <a href="https://x.com/pkafka/status/1792684401429459196">publicly</a> some of the <a href="https://fortune.com/2024/05/21/openai-superalignment-20-compute-commitment-never-fulfilled-sutskever-leike-altman-brockman-murati/">issues</a> that drove the unexpected board conflagration.&nbsp;</p><p>OpenAI can still set things right, and may now be getting started on the long and difficult process of doing so. They have taken some first, necessary steps. Altman’s initial statement was criticized for doing too little to make things right for former employees, but in an emailed statement, OpenAI told me that “we are identifying and reaching out to former employees who signed a standard exit agreement to make it clear that OpenAI has not and will not cancel their vested equity and releases them from nondisparagement obligations” — which goes much further toward fixing their mistake.</p><p>I think that represents a huge step forward over the company’s initial May 18 apology; it is specific about the steps OpenAI is taking and involves proactively reaching out to former employees. But I think OpenAI’s work here is far from done. Former employees felt the company put them under pressure from multiple angles, and OpenAI has not yet committed to changing all of those — specifically, they should commit to not excluding anyone from selling their equity on the basis of not signing a document or criticizing Open AI.&nbsp;</p><p>And, to fully grapple with the situation, OpenAI needs to grapple with responsibility. It's hard to understand how the executive team could have signed documents that laid out avenues to claw back equity from former employees, as well as separation letters which threatened to do the same, without realizing this situation was happening. In order to set this issue right, OpenAI must first acknowledge how extensive it was.</p><div><div><p><h2>How I reported this story</h2></p></div><p>Reporting is full of lots of tedious moments, but then there's the occasional “woah” moment. Reporting this story had three major moments of “woah.” The first is when I reviewed an employee termination contract and saw it casually stating that as “consideration” for signing this super-strict agreement, the employee would get to keep their already vested equity. That might not mean much to people outside the tech world, but I knew that it meant OpenAI had crossed a line many in tech consider close to sacred.</p><p>The second “woah” moment was when I reviewed the second termination agreement sent to one ex-employee who'd challenged the legality of OpenAI's scheme. The company, rather than defending the legality of its approach, had just jumped ship to a new approach.</p><p>That led to the third “woah” moment. I read through the incorporation document that the company cited as the reason it had the authority to do this and confirmed that it did seem to give the company a lot of license to take back vested equity and block employees from selling it. So I scrolled down to the signature page, wondering who at OpenAI had set all this up. The page had three signatures. All three of them were Sam Altman. I slacked my boss on a Sunday night, "Can I call you briefly?"</p></div><div><p><h2>Check out the documents supporting this reporting below:</h2></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Michigan farmworker is diagnosed with bird flu in case tied to dairy cows (107 pts)]]></title>
            <link>https://www.npr.org/2024/05/22/1252984256/bird-flu-h5n1-virus-human-michigan-cows</link>
            <guid>40447235</guid>
            <pubDate>Wed, 22 May 2024 22:02:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.npr.org/2024/05/22/1252984256/bird-flu-h5n1-virus-human-michigan-cows">https://www.npr.org/2024/05/22/1252984256/bird-flu-h5n1-virus-human-michigan-cows</a>, See on <a href="https://news.ycombinator.com/item?id=40447235">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storytext">
      <div id="res1252988229">
            <div data-crop-type="">
        <picture>
            <source srcset="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s=1100&amp;c=15&amp;f=jpeg" data-original="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s=1100&amp;c=100&amp;f=jpeg" data-template="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s={width}&amp;c={quality}&amp;f={format}" data-format="webp" type="image/webp">
            <source srcset="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s=1100&amp;c=15&amp;f=jpeg" data-original="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s=1100&amp;c=100&amp;f=jpeg" data-template="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s={width}&amp;c={quality}&amp;f={format}" data-format="jpeg" type="image/jpeg">
            <img src="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s={width}&amp;c={quality}&amp;f={format}" data-original="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s=1100&amp;c=100&amp;f=jpeg" data-template="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s={width}&amp;c={quality}&amp;f={format}" data-format="jpeg" alt="" loading="lazy">
        </picture>
        
</div>
<div>
    <div>
        <p>
                This 2005 electron microscope image shows an avian influenza A H5N1 virion. On Wednesday, Michigan health officials said a farmworker has been diagnosed with bird flu, the second human case connected to an outbreak in U.S. dairy cows.
                <b aria-label="Image credit">
                    
                    Cynthia Goldsmith, Jackie Katz/CDC/AP
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Cynthia Goldsmith, Jackie Katz/CDC/AP
        
    </span>
</p></div>
<div>
        <picture>
            <source data-original="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.webp?s=2600&amp;c=100&amp;f=webp" type="image/webp">
            <source data-original="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s=2600&amp;c=100&amp;f=jpeg" type="image/jpeg">
            <img data-original="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s=2600&amp;c=100&amp;f=jpeg" alt="" src="https://media.npr.org/assets/img/2024/05/22/ap24143659716467_custom-4ed56381c0ac58db0b131da189119d16b550a8f9.jpg?s=2600&amp;c=100&amp;f=jpeg">
        </picture>
    </div>
<div>
        <p>This 2005 electron microscope image shows an avian influenza A H5N1 virion. On Wednesday, Michigan health officials said a farmworker has been diagnosed with bird flu, the second human case connected to an outbreak in U.S. dairy cows.</p>
        <p><span aria-label="Image credit">
            
            Cynthia Goldsmith, Jackie Katz/CDC/AP
            
        </span>
    </p></div>
   </div>
   <p>NEW YORK — A Michigan dairy worker has been diagnosed with bird flu — the second human case associated with an outbreak in U.S. dairy cows.</p>   <p>The worker had been in contact with cows presumed to be infected, experienced mild eye symptoms and has recovered, U.S. and Michigan health officials said in announcing the case Wednesday. A nasal swab from the person tested negative for the virus, but an eye swab tested positive, "indicating an eye infection," the U.S. Centers for Disease Control and Prevention said in a statement. </p>   
   
   
<!-- END ID="RES1252987530" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>The risk to the public remains low, but farmworkers exposed to infected animals are at higher risk, health officials said. They said those workers should be offered protective equipment, especially for their eyes. </p>   <p>The first case happened in late March, when a farmworker in Texas <a href="https://apnews.com/article/bird-flu-texas-cows-355f1e288e72df8b81b0e2efd8b3ae2f">was diagnosed</a> in what officials called the first known instance globally of a person catching this version of bird flu from a mammal. That patient also reported only eye inflammation and recovered.</p>   
   
<!-- END ID="RES1252987487" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>Since 2020, a bird flu virus has been spreading among <a href="https://apnews.com/article/disease-outbreaks-hong-kong-health-bird-flu-animals-75e5d058e0fda23b5359f66cafb74cdf">more animal species</a> — including dogs, cats, skunks, bears and even <a href="https://apnews.com/article/seals-bird-flu-deaths-oceans-80184a8793fbcc21fab01b1c90b0d71b">seals</a> and porpoises — in scores of countries. The detection <a href="https://apnews.com/article/bird-flu-dairy-cattle-usda-kansas-texas-c3040bb31a9a8293717d47362f006902">in U.S. livestock</a> earlier this year was an <a href="https://apnews.com/article/bird-flu-dairy-farmers-barb-petersen-07bd5accb01441bc5d279464271d2371">unexpected twist</a> that sparked questions about food safety and whether it would start spreading among humans.</p>   <p>That hasn't happened, although there's been a steady increase of reported infections in cows. As of Wednesday, the virus <a href="https://www.aphis.usda.gov/livestock-poultry-disease/avian/avian-influenza/hpai-detections/livestock">had been confirmed</a> in 51 dairy herds in nine states, according to the U.S. Agriculture Department. Fifteen of the herds were in Michigan.</p>   <p>Health officials in Michigan have declined to say how many people exposed to infected cattle have been tested or monitored. U.S. officials said they had tested 40 people since the first cow cases were discovered in late March.</p>   
   
<!-- END ID="RES1252987240" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>The CDC's Dr. Nirav Shah praised Michigan officials for actively monitoring farmworkers. He said health officials there have been sending daily text messages to workers exposed to infected cows asking about possible symptoms, and that the effort helped officials catch this infection. He said no other workers had reported symptoms.</p>   <p>USDA is expanding financial incentives to dairy farmers whose herds have not yet been infected with the virus, Eric Deeble. a federal agriculture official, said Wednesday.</p>   
   
<!-- END ID="RES1252987696" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>The virus has been found in high levels in the <a href="https://apnews.com/article/bird-flu-raw-milk-h5n1-6398d2eda26eb41797ee2700cf9d036b">raw milk</a> of infected cows, but government officials say pasteurized products sold in grocery stores are safe because heat treatment has been confirmed to kill the virus.</p>   <p>The new case marks the third time a person in the United States has been diagnosed with what's known as Type A H5N1 virus. In 2022, a prison inmate in a work program <a href="https://apnews.com/article/business-health-environment-colorado-b98906e0a1899bb1f92da30a7b1dbe28">picked it up</a> while killing infected birds at a poultry farm in Montrose County, Colorado. His only symptom was fatigue, and he recovered. That predated the virus's appearance in cows.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Voyager 1 Resumes Sending Science Data (167 pts)]]></title>
            <link>https://blogs.nasa.gov/voyager/2024/05/22/voyager-1-resumes-sending-science-data-from-two-instruments/</link>
            <guid>40447117</guid>
            <pubDate>Wed, 22 May 2024 21:51:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blogs.nasa.gov/voyager/2024/05/22/voyager-1-resumes-sending-science-data-from-two-instruments/">https://blogs.nasa.gov/voyager/2024/05/22/voyager-1-resumes-sending-science-data-from-two-instruments/</a>, See on <a href="https://news.ycombinator.com/item?id=40447117">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
	<main id="main">
		
<article id="post-49">
	<!-- .entry-header -->

	
	
	<div>
		<p>Voyager 1 has resumed returning science data from two of its four instruments for the first time since a computer issue arose with the spacecraft in November 2023. The mission’s science instrument teams are now determining steps to recalibrate the remaining two instruments, which will likely occur in the coming weeks. The achievement marks significant progress toward restoring the spacecraft to normal operations.</p>
<p>In April, after five months of troubleshooting since the original computer issue, the mission was able to get the spacecraft to <a href="https://www.jpl.nasa.gov/news/nasas-voyager-1-resumes-sending-engineering-updates-to-earth" rel="noopener">begin returning usable engineering data</a> about the health and status of its onboard systems, including the science instruments. On May 17, the team sent commands to the 46-year-old spacecraft that enabled it to resume sending science data to Earth. With Voyager 1 located more than 15 billion miles (24 billion kilometers) from its home planet, it takes light over 22 1/2 hours to reach the spacecraft, and 22 1/2 hours for a signal to return to Earth. As a result, the team had to wait nearly two days to see if their commands were successful.</p>
<p>The plasma wave subsystem and magnetometer instrument are now returning usable science data. As part of the effort to restore Voyager 1 to normal operations, the mission is continuing work on the cosmic ray subsystem and low energy charged particle instrument. (<a href="https://voyager.jpl.nasa.gov/mission/spacecraft/instruments/" rel="noopener">Six additional instruments</a> aboard Voyager 1 are either no longer working or were turned off after the probe’s flyby of Saturn.)</p>
<p>Normal operations were interrupted last year when Voyager 1 <a href="https://blogs.nasa.gov/voyager/2024/03/15/engineers-working-to-resolve-issue-with-voyager-1-computer/">began sending a signal back to Earth</a> that contained no science or engineering data. The team eventually determined the issue stemmed from a small portion of corrupted memory in the flight data subsystem, one of the spacecraft’s three computers. Among other things, this system is designed to package data from the science instruments as well as engineering data about the health and status of the spacecraft before that information is sent to Earth.</p>
<p><a href="https://voyager.jpl.nasa.gov/mission/" rel="noopener">Launched in 1977</a>, Voyager 1 and its twin, Voyager 2, will celebrate 47 years of operations later this year. They are NASA’s longest-operating spacecraft as well as the first and only spacecraft to explore outside the <a href="https://science.nasa.gov/heliophysics/focus-areas/heliosphere/" rel="noopener">heliosphere</a>. Created by the Sun, this bubble of magnetic fields and solar wind pushes against the interstellar medium, an ocean of particles created by stars that have exploded elsewhere in the Milky Way galaxy. Both probes flew past Jupiter and Saturn, while Voyager 2 also flew past Uranus and Neptune.</p>
<p><strong>News Media Contact<br>
</strong>Calla Cofield<br>
Jet Propulsion Laboratory, Pasadena, Calif.<br>
626-808-2469<br>
<a href="mailto:calla.e.cofield@jpl.nasa.gov">calla.e.cofield@jpl.nasa.gov</a></p>
<!-- AddThis Advanced Settings above via filter on the_content --><!-- AddThis Advanced Settings below via filter on the_content --><!-- AddThis Advanced Settings generic via filter on the_content --><!-- AddThis Share Buttons above via filter on the_content --><!-- AddThis Share Buttons below via filter on the_content --><!-- AddThis Share Buttons generic via filter on the_content -->	</div><!-- .entry-content -->

	<!-- .entry-footer -->
</article><!-- #post-49 -->

	<nav aria-label="Posts">
		<h2>Post navigation</h2>
		
	</nav>
	</main><!-- .site-main -->

	<!-- .content-bottom-widgets -->

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[YouTube seems to once again be rolling out its widely hated new web redesign (115 pts)]]></title>
            <link>https://9to5google.com/2024/05/22/youtube-redesign-rolling-out-again/</link>
            <guid>40446944</guid>
            <pubDate>Wed, 22 May 2024 21:38:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://9to5google.com/2024/05/22/youtube-redesign-rolling-out-again/">https://9to5google.com/2024/05/22/youtube-redesign-rolling-out-again/</a>, See on <a href="https://news.ycombinator.com/item?id=40446944">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
					
<figure>
	<img width="1600" height="800" src="https://9to5google.com/wp-content/uploads/sites/4/2023/12/youtube-website-logo-1.jpg?quality=82&amp;strip=all&amp;w=1600" alt="youtube.com logo homepage" srcset="https://i0.wp.com/9to5google.com/wp-content/uploads/sites/4/2023/12/youtube-website-logo-1.jpg?w=320&amp;quality=82&amp;strip=all&amp;ssl=1 320w, https://i0.wp.com/9to5google.com/wp-content/uploads/sites/4/2023/12/youtube-website-logo-1.jpg?w=640&amp;quality=82&amp;strip=all&amp;ssl=1 640w, https://i0.wp.com/9to5google.com/wp-content/uploads/sites/4/2023/12/youtube-website-logo-1.jpg?w=1024&amp;quality=82&amp;strip=all&amp;ssl=1 1024w, https://i0.wp.com/9to5google.com/wp-content/uploads/sites/4/2023/12/youtube-website-logo-1.jpg?w=1500&amp;quality=82&amp;strip=all&amp;ssl=1 1500w" decoding="async" fetchpriority="high"></figure>

<p>After first appearing earlier this year, YouTube once again appears to be rolling out a new redesign for its website that everyone hates.</p>



<p>In <a href="https://9to5google.com/2024/04/11/youtube-sidebar-redesign-test/">mid-April, Google started testing a redesign</a> to YouTube’s website, which moved the title of the video, its description, and the comments to the side of the screen. In their place, video recommendations were moved directly underneath the video being watched with much larger thumbnails and titles.</p>



<p>The change was widely hated by almost everyone who got it, but it didn’t show up for all users. In the weeks to follow, <a href="https://9to5google.com/2024/04/25/youtube-redesign-reverted-backlash/">YouTube reverted the redesign</a>.</p>



<p>Now, the YouTube redesign is back. </p>



<p><a href="https://x.com/ArtemR/status/1793004992384905449">As</a> <a href="https://www.reddit.com/r/youtube/comments/1cxbvx5/its_even_worse_when_not_in_theatre_mode_its_so/">spotted</a> <a href="https://www.reddit.com/r/youtube/comments/1cxt1g6/did_the_person_that_designed_this_fail_uiux_in/">by</a> <a href="https://www.reddit.com/r/youtube/comments/1cxy6n2/this_new_ui_feels_like_it_was_designed_by_ai/">many</a> <a href="https://www.reddit.com/r/youtube/comments/1cy6lfr/why_are_comments_now_on_the_side_while_videos_are/">users</a>, YouTube has started rolling out this redesign yet again. The new look has been appearing over the past few days, though it doesn’t seem like it’s a wide rollout. Rather, it appears to still be a test more than anything else. </p>



<p>What does this second attempt mean?</p>



<p>It’s still unclear if YouTube intends to make this new look the default experience, but a second round of testing certainly implies more data is being gathered. </p>



<p>Notably, some have <a href="https://www.reddit.com/r/youtube/comments/1cy1k37/this_is_just_an_experiment_according_to/">pointed</a> to tweets like <a href="https://x.com/TeamYouTube/status/1793363193752142227">this one</a> from YouTube regarding the new layout where YouTube says that it’s just an “experiment.” These largely appear to be canned replies, though, rather than being specific to the individual situation. So, while it’s likely true that this design is just an experiment, that doesn’t give any insight on what YouTube intends to do with the new design in the future. In one reply, <a href="https://x.com/TeamYouTube/status/1793009081336119700">YouTube says</a> that most experiments “only last a few weeks,” which also may or may not apply to this particular situation.</p>



<p>What do you think of the new YouTube design? Let us know in the comments below.</p>



<figure><img decoding="async" width="2544" height="1430" src="https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?quality=82&amp;strip=all&amp;w=1024" alt="" srcset="https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg 2544w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=155,87 155w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=700,393 700w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=768,432 768w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=1024,576 1024w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=1536,863 1536w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=2048,1151 2048w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=350,197 350w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=140,79 140w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=1600,899 1600w, https://9to5google.com/wp-content/uploads/sites/4/2024/05/youtube-redesign-test-2024.jpg?resize=150,84 150w" sizes="(max-width: 2544px) 100vw, 2544px"><figcaption><em><a href="https://x.com/ArtemR/status/1793004992384905449">Image: Artem Russakovskii on Twitter/X</a></em></figcaption></figure>



<h2 id="h-more-on-youtube">More on YouTube:</h2>



<ul>
<li><a href="https://9to5google.com/2024/05/15/youtube-advertiser-qr-codes/">YouTube getting advertiser-branded QR codes, more WNBA on YouTube TV&nbsp;</a></li>



<li><a href="https://9to5google.com/2024/05/10/youtube-android-tv-sidebar-animation/">YouTube for Android TV gets new sidebar animation and section outlines</a></li>



<li><a href="https://9to5google.com/2024/05/05/youtube-premium-jump-ahead/">YouTube Premium members can now test AI-powered ‘Jump ahead’</a></li>
</ul>



<p><em><strong>Follow Ben:</strong>&nbsp;<a href="https://twitter.com/NexusBen" target="_blank" rel="noreferrer noopener">Twitter/X</a>,&nbsp;<a href="https://www.threads.net/@nexusben" target="_blank" rel="noreferrer noopener">Threads</a>, and&nbsp;<a href="https://www.instagram.com/nexusben" target="_blank" rel="noreferrer noopener">Instagram</a></em></p>




	<p>
		<a target="_blank" rel="nofollow" href="https://news.google.com/publications/CAAqBwgKMMqA-Qow-c_gAg?hl=en-US&amp;gl=US&amp;ceid=US:en">
			<em>Add 9to5Google to your Google News feed.</em>&nbsp;
					</a>
	</p>
	<p><em>FTC: We use income earning auto affiliate links.</em> <a href="https://9to5mac.com/about/#affiliate">More.</a></p>				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cortile – Linux auto tiling manager with hot corner support (149 pts)]]></title>
            <link>https://github.com/leukipp/cortile</link>
            <guid>40446433</guid>
            <pubDate>Wed, 22 May 2024 20:56:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/leukipp/cortile">https://github.com/leukipp/cortile</a>, See on <a href="https://news.ycombinator.com/item?id=40446433">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Cortile</h2><a id="user-content-cortile" aria-label="Permalink: Cortile" href="#cortile"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/f85f154c190b4e0cb881c2dfb91dc677ea6aaa408eedfbcdbf08cd9fcb810d4f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f6c65756b6970702f636f7274696c652f72656c656173652e79616d6c3f7374796c653d666c61742d737175617265"><img src="https://camo.githubusercontent.com/f85f154c190b4e0cb881c2dfb91dc677ea6aaa408eedfbcdbf08cd9fcb810d4f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f6c65756b6970702f636f7274696c652f72656c656173652e79616d6c3f7374796c653d666c61742d737175617265" alt="build" data-canonical-src="https://img.shields.io/github/actions/workflow/status/leukipp/cortile/release.yaml?style=flat-square"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/61945ce594c1f819902237ccaed1289437058c75150a26039e85831567ee84d0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6c65756b6970702f636f7274696c653f7374796c653d666c61742d737175617265"><img src="https://camo.githubusercontent.com/61945ce594c1f819902237ccaed1289437058c75150a26039e85831567ee84d0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6c65756b6970702f636f7274696c653f7374796c653d666c61742d737175617265" alt="date" data-canonical-src="https://img.shields.io/github/release-date/leukipp/cortile?style=flat-square"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/202a9a9a9265488beb6f4133f88cd07b8b03026b2d7e68745684039c086c3fca/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6c65756b6970702f636f7274696c652f746f74616c3f7374796c653d666c61742d737175617265"><img src="https://camo.githubusercontent.com/202a9a9a9265488beb6f4133f88cd07b8b03026b2d7e68745684039c086c3fca/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6c65756b6970702f636f7274696c652f746f74616c3f7374796c653d666c61742d737175617265" alt="downloads" data-canonical-src="https://img.shields.io/github/downloads/leukipp/cortile/total?style=flat-square"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c7b7ebc5774b1c071a443da210a5b0b48cc7b4adb0a7a0f0d0a850f00173b292/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f732d2532306c696e7578253230253743253230667265656273642532302d626c75653f7374796c653d666c61742d737175617265"><img src="https://camo.githubusercontent.com/c7b7ebc5774b1c071a443da210a5b0b48cc7b4adb0a7a0f0d0a850f00173b292/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6f732d2532306c696e7578253230253743253230667265656273642532302d626c75653f7374796c653d666c61742d737175617265" alt="os" data-canonical-src="https://img.shields.io/badge/os-%20linux%20%7C%20freebsd%20-blue?style=flat-square"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/1482d927a452a54280231dfb3795c298289d94a0500149fcc07d568fc9aa38b1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d253230616d64363425323025374325323061726d363425323025374325323061726d76362532302537432532303338362532302d7465616c3f7374796c653d666c61742d737175617265"><img src="https://camo.githubusercontent.com/1482d927a452a54280231dfb3795c298289d94a0500149fcc07d568fc9aa38b1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d253230616d64363425323025374325323061726d363425323025374325323061726d76362532302537432532303338362532302d7465616c3f7374796c653d666c61742d737175617265" alt="platform" data-canonical-src="https://img.shields.io/badge/platform-%20amd64%20%7C%20arm64%20%7C%20armv6%20%7C%20386%20-teal?style=flat-square"></a></p>
<p dir="auto"><a href="https://github.com/leukipp/cortile"><img src="https://raw.githubusercontent.com/leukipp/cortile/main/assets/images/logo.png"></a></p>
<p dir="auto">Linux auto tiling manager with hot corner support for Openbox, Fluxbox, IceWM, Xfwm, KWin, Marco, Muffin, Mutter and other <a href="https://en.wikipedia.org/wiki/Extended_Window_Manager_Hints#List_of_window_managers_that_support_Extended_Window_Manager_Hints" rel="nofollow">EWMH</a> compliant window managers using the <a href="https://en.wikipedia.org/wiki/X_Window_System" rel="nofollow">X11</a> window system.
Therefore, this project provides dynamic tiling for XFCE, LXDE, LXQt, KDE and GNOME (Mate, Deepin, Cinnamon, Budgie) based desktop environments.</p>
<p dir="auto">Simply keep your current window manager and install <strong>cortile on top</strong> of it.
Once enabled, the tiling manager will handle <em>resizing</em> and <em>positioning</em> of <em>existing</em> and <em>new</em> windows.
<br clear="left"></p>
<div dir="auto"><h2 tabindex="-1" dir="auto">Features <a href="#features-"><img src="https://camo.githubusercontent.com/dcd25a4200cfefe711972b5f24a04fea6c0872781cf2a75989d6ce7f59bd58d1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6c65756b6970702f636f7274696c653f7374796c653d666c61742d737175617265" alt="features" data-canonical-src="https://img.shields.io/github/stars/leukipp/cortile?style=flat-square"></a></h2><a id="user-content-features-" aria-label="Permalink: Features " href="#features-"></a></div>
<ul>
<li> Workspace based tiling.</li>
<li> Auto detection of panels.</li>
<li> User interface for tiling mode.</li>
<li> Systray icon indicator and menu.</li>
<li> Keyboard, hot corner and systray bindings.</li>
<li> Vertical, horizontal and fullscreen mode.</li>
<li> Socket communication commands.</li>
<li> Remember layout proportions.</li>
<li> Floating and sticky windows.</li>
<li> Drag &amp; drop window swap.</li>
<li> Workplace aware layouts.</li>
<li> Multi monitor support.</li>
</ul>
<p dir="auto">Support for <strong>keyboard and mouse</strong> events sets cortile apart from other tiling solutions.
The <em>go</em> implementation ensures a fast and responsive system, where <em>multiple layouts</em>, <em>keyboard shortcuts</em>, <em>drag &amp; drop</em> and <em>hot corner</em> events simplify and speed up your daily work.</p>
<p dir="auto"><a href="https://github.com/leukipp/cortile/blob/main/assets/images/demo.gif"><img src="https://raw.githubusercontent.com/leukipp/cortile/main/assets/images/demo.gif" alt="demo" data-animated-image=""></a></p>
<div dir="auto"><h2 tabindex="-1" dir="auto">Installation <a href="#installation-"><img src="https://camo.githubusercontent.com/0703a9809c15ba680f73a77f664dd59c28149ba00dc264639fa1080f867460a8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6c65756b6970702f636f7274696c653f7374796c653d666c61742d737175617265" alt="installation" data-canonical-src="https://img.shields.io/github/v/release/leukipp/cortile?style=flat-square"></a></h2><a id="user-content-installation-" aria-label="Permalink: Installation " href="#installation-"></a></div>
<p dir="auto">Manually <code>download</code>/<code>extract</code> the latest binary file from <a href="https://github.com/leukipp/cortile/releases/latest">releases</a> or use <code>wget</code>/<code>tar</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="wget -qO- $(wget -qO- https://api.github.com/repos/leukipp/cortile/releases/latest | \
jq -r '.assets[] | select(.name | contains (&quot;linux_amd64.tar.gz&quot;)) | .browser_download_url') | \
tar -xvz"><pre>wget -qO- <span><span>$(</span>wget -qO- https://api.github.com/repos/leukipp/cortile/releases/latest <span>|</span> \</span>
<span>jq -r <span><span>'</span>.assets[] | select(.name | contains ("linux_amd64.tar.gz")) | .browser_download_url<span>'</span></span><span>)</span></span> <span>|</span> \
tar -xvz</pre></div>
<p dir="auto">Run the binary file and cortile will automatically tile until you stop it:</p>

<p dir="auto">Another installation method can be found in the <a href="#development-">development</a> section.
The latest official release is published on GitHub.
Versions distributed via package managers are community supported and may be outdated.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Service</h3><a id="user-content-service" aria-label="Permalink: Service" href="#service"></a></p>
<p dir="auto">To enable auto tiling on startup, you can run cortile as a service after the graphical user interface has been loaded.
A template to run cortile as a <a href="https://en.wikipedia.org/wiki/Systemd" rel="nofollow">systemd</a> service is provided in the <a href="https://github.com/leukipp/cortile/tree/main/assets/services">services</a> folder.
You may have to adjust the filepath/symlink under <code>ExecStart</code> and enable the user service:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# copy systemd service file
cp cortile.service ~/.config/systemd/user/

# reload systemd configuration
systemctl --user daemon-reload

# enable systemd service
systemctl --user enable cortile.service

# start systemd service
systemctl --user start cortile.service"><pre><span><span>#</span> copy systemd service file</span>
cp cortile.service <span>~</span>/.config/systemd/user/

<span><span>#</span> reload systemd configuration</span>
systemctl --user daemon-reload

<span><span>#</span> enable systemd service</span>
systemctl --user <span>enable</span> cortile.service

<span><span>#</span> start systemd service</span>
systemctl --user start cortile.service</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Usage</h3><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">The layouts are based on the master-slave concept, where one side of the screen is considered to be the master area and the other side is considered to be the slave area:</p>
<ul dir="auto">
<li><code>vertical-right:</code> split the screen vertically, master area on the right.</li>
<li><code>vertical-left:</code> split the screen vertically, master area on the left.</li>
<li><code>horizontal-top:</code> split the screen horizontally, master area on the top.</li>
<li><code>horizontal-bottom:</code> split the screen horizontally, master area on the bottom.</li>
<li><code>fullscreen:</code> single window that fills the entire tiling area.</li>
</ul>
<p dir="auto">The number of windows per side and the occupied space can be changed dynamically.
Adjustments to window sizes are considered to be proportion changes of the underlying layout.</p>
<p dir="auto">Windows placed on the master side are static and the layout will only change as long the space is not fully occupied.
Once the master area is full, the slave area is used, where the layout changes dynamically based on available space and configuration settings.</p>
<div dir="auto"><h2 tabindex="-1" dir="auto">Configuration <a href="#configuration-"><img src="https://camo.githubusercontent.com/ee8ee3634302030ba095e9b91f1942fca0d284371633276f0037bbcc3369aefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f66696c652d253230636f6e6669672e746f6d6c2532302d676f6c643f7374796c653d666c61742d737175617265" alt="configuration" data-canonical-src="https://img.shields.io/badge/file-%20config.toml%20-gold?style=flat-square"></a></h2><a id="user-content-configuration-" aria-label="Permalink: Configuration " href="#configuration-"></a></div>
<p dir="auto">The configuration file is located at <code>~/.config/cortile/config.toml</code> (or <code>XDG_CONFIG_HOME</code>) and is created with default values during the first startup.
Additional information about individual entries can be found in the comments section of the <a href="https://github.com/leukipp/cortile/blob/main/config.toml">config.toml</a> file.</p>
<p dir="auto"><a href="https://github.com/leukipp/cortile/blob/main/assets/images/config.gif"><img src="https://raw.githubusercontent.com/leukipp/cortile/main/assets/images/config.gif" alt="config" data-animated-image=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Shortcuts</h3><a id="user-content-shortcuts" aria-label="Permalink: Shortcuts" href="#shortcuts"></a></p>
<p dir="auto">The default keyboard shortcuts are assigned as shown below.
If some of them are already in use by your system, update the default values in the <code>[keys]</code> section of the configuration file:</p>
<table>
<thead>
<tr>
<th>Keys</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Home</kbd></td>
<td>Enable tiling on the current screen</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>End</kbd></td>
<td>Disable tiling on the current screen</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>R</kbd></td>
<td>Disable tiling and restore windows</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>T</kbd></td>
<td>Toggle between enable and disable</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>BackSpace</kbd></td>
<td>Reset layouts to default proportions</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Next</kbd></td>
<td>Cycle through next layouts</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Prior</kbd></td>
<td>Cycle through previous layouts</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Space</kbd></td>
<td>Activate fullscreen layout</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Left</kbd></td>
<td>Activate vertical-left layout</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Right</kbd></td>
<td>Activate vertical-right layout</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Up</kbd></td>
<td>Activate horizontal-top layout</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Down</kbd></td>
<td>Activate horizontal-bottom layout</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_5</kbd></td>
<td>Make the active window master</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_6</kbd></td>
<td>Make the next window master</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_4</kbd></td>
<td>Make the previous window master</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_Add</kbd></td>
<td>Increase number of master windows</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_Subtract</kbd></td>
<td>Decrease number of master windows</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Plus</kbd></td>
<td>Increase number of maximum slave windows</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Minus</kbd></td>
<td>Decrease number of maximum slave windows</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_3</kbd></td>
<td>Increase proportion of master-slave area</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_1</kbd></td>
<td>Decrease proportion of master-slave area</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_2</kbd></td>
<td>Focus next window</td>
</tr>
<tr>
<td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>KP_8</kbd></td>
<td>Focus previous window</td>
</tr>
</tbody>
</table>
<p dir="auto">Hot corner events are defined under the <code>[corners]</code> section and are triggered when the pointer enters one of the target areas:</p>
<table>
<thead>
<tr>
<th>Corners</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><kbd>Top</kbd>-<kbd>Left</kbd></td>
<td>Focus previous window</td>
</tr>
<tr>
<td><kbd>Top</kbd>-<kbd>Right</kbd></td>
<td>Make the active window master</td>
</tr>
<tr>
<td><kbd>Bottom</kbd>-<kbd>Right</kbd></td>
<td>Increase proportion of master-slave area</td>
</tr>
<tr>
<td><kbd>Bottom</kbd>-<kbd>Left</kbd></td>
<td>Decrease proportion of master-slave area</td>
</tr>
</tbody>
</table>
<p dir="auto">Systray events are defined under the <code>[systray]</code> section and are triggered when the pointer keys are pressed while hovering the icon:</p>
<table>
<thead>
<tr>
<th>Pointer</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><kbd>Middle</kbd>-<kbd>Click</kbd></td>
<td>Toggle between enable and disable</td>
</tr>
<tr>
<td><kbd>Scroll</kbd>-<kbd>Up</kbd></td>
<td>Cycle through previous layouts</td>
</tr>
<tr>
<td><kbd>Scroll</kbd>-<kbd>Down</kbd></td>
<td>Cycle through next layouts</td>
</tr>
<tr>
<td><kbd>Scroll</kbd>-<kbd>Right</kbd></td>
<td>Increase proportion of master-slave area</td>
</tr>
<tr>
<td><kbd>Scroll</kbd>-<kbd>Left</kbd></td>
<td>Decrease proportion of master-slave area</td>
</tr>
</tbody>
</table>
<p dir="auto">Common pointer shortcuts used in some environments:</p>
<ul dir="auto">
<li>Move window: <kbd>Alt</kbd>+<kbd>Left-Click</kbd>.</li>
<li>Resize window: <kbd>Alt</kbd>+<kbd>Right-Click</kbd>.</li>
<li>Maximize window: <kbd>Alt</kbd>+<kbd>Double-Click</kbd>.</li>
</ul>
<div dir="auto"><h2 tabindex="-1" dir="auto">Communication <a href="#communication-"><img src="https://camo.githubusercontent.com/5ebe51abe760594af9289fc1b4103274afd7f3b078294a7ba7344b3ebe672be5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170692d253230756e6978253230646f6d61696e253230736f636b6574732532302d6461726b73616c6d6f6e3f7374796c653d666c61742d737175617265" alt="communication" data-canonical-src="https://img.shields.io/badge/api-%20unix%20domain%20sockets%20-darksalmon?style=flat-square"></a></h2><a id="user-content-communication-" aria-label="Permalink: Communication " href="#communication-"></a></div>
<p dir="auto">External processes may communicate directly with cortile using <a href="https://en.wikipedia.org/wiki/Unix_domain_socket" rel="nofollow">unix domain sockets</a>.
The sock parameter (<code>-sock /tmp/cortile.sock</code>) defines a path for a socket file that can be used to exchange data between processes.
Internally however, two socket files are used.
One is for incoming (<code>/tmp/cortile.sock.in</code>) and one for outgoing (<code>/tmp/cortile.sock.out</code>) communication.</p>
<details><summary>Outgoing - Events</summary><div dir="auto">
<p dir="auto"><h3 tabindex="-1" dir="auto">Outgoing events and states</h3><a id="user-content-outgoing-events-and-states" aria-label="Permalink: Outgoing events and states" href="#outgoing-events-and-states"></a></p>
<p dir="auto">User triggered events (e.g. tile workspace) are broadcasted to the outgoing socket as json string.
One can listen to them by using <a href="https://en.wikipedia.org/wiki/Netcat" rel="nofollow">netcat</a> or similar <a href="https://en.wikipedia.org/wiki/Netcat#Ports_and_reimplementations" rel="nofollow">alternatives</a>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Netcat
nc -Ulk /tmp/cortile.sock.out

# Socat
socat UNIX-LISTEN:/tmp/cortile.sock.out,reuseaddr,fork STDOUT"><pre><span><span>#</span> Netcat</span>
nc -Ulk /tmp/cortile.sock.out

<span><span>#</span> Socat</span>
socat UNIX-LISTEN:/tmp/cortile.sock.out,reuseaddr,fork STDOUT</pre></div>
<p dir="auto">For debugging purposes, you can also dump the json messages into a file:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Netcat
nc -Ulk /tmp/cortile.sock.out 2>&amp;1 | tee /tmp/cortile.json

# Socat
socat -v UNIX-LISTEN:/tmp/cortile.sock.out,reuseaddr,fork OPEN:/tmp/cortile.json,create,truncate"><pre><span><span>#</span> Netcat</span>
nc -Ulk /tmp/cortile.sock.out <span>2&gt;&amp;1</span> <span>|</span> tee /tmp/cortile.json

<span><span>#</span> Socat</span>
socat -v UNIX-LISTEN:/tmp/cortile.sock.out,reuseaddr,fork OPEN:/tmp/cortile.json,create,truncate</pre></div>
</div></details>
<details><summary>Incoming - Commands</summary><div dir="auto">
<p dir="auto"><h3 tabindex="-1" dir="auto">Incoming commands and requests</h3><a id="user-content-incoming-commands-and-requests" aria-label="Permalink: Incoming commands and requests" href="#incoming-commands-and-requests"></a></p>
<p dir="auto">Similarly, requests about the internal state of cortile can be sent to the incoming socket:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Netcat
echo '{&quot;State&quot;:&quot;workspaces&quot;}' | nc -U /tmp/cortile.sock.in

# Socat
echo '{&quot;State&quot;:&quot;workspaces&quot;}' | socat STDIN UNIX-CONNECT:/tmp/cortile.sock.in"><pre><span><span>#</span> Netcat</span>
<span>echo</span> <span><span>'</span>{"State":"workspaces"}<span>'</span></span> <span>|</span> nc -U /tmp/cortile.sock.in

<span><span>#</span> Socat</span>
<span>echo</span> <span><span>'</span>{"State":"workspaces"}<span>'</span></span> <span>|</span> socat STDIN UNIX-CONNECT:/tmp/cortile.sock.in</pre></div>
<p dir="auto">Since the communication is asynchronous, it is necessary to listen to the outgoing socket at the same time in order to receive the response.</p>
</div></details>
<p dir="auto">Example files for sending commands and receiving states can be found in the <a href="https://github.com/leukipp/cortile/tree/main/assets/scripts">scripts</a> folder.</p>
<div dir="auto"><h2 tabindex="-1" dir="auto">Development <a href="#development-"><img src="https://camo.githubusercontent.com/7a86ed6f401fd0948f095a806e0a16d91291da5d8c0ed2046be42927ba5dab3c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f676f2d6d6f642f676f2d76657273696f6e2f6c65756b6970702f636f7274696c653f6c6162656c3d676f267374796c653d666c61742d737175617265" alt="development" data-canonical-src="https://img.shields.io/github/go-mod/go-version/leukipp/cortile?label=go&amp;style=flat-square"></a></h2><a id="user-content-development-" aria-label="Permalink: Development " href="#development-"></a></div>
<p dir="auto">You need <a href="https://go.dev/dl/" rel="nofollow">go &gt;= 1.20</a> to compile cortile.</p>
<details><summary>Install - go</summary><div dir="auto">
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 1: Install go via package manager</h3><a id="user-content-option-1-install-go-via-package-manager" aria-label="Permalink: Option 1: Install go via package manager" href="#option-1-install-go-via-package-manager"></a></p>
<p dir="auto">Use a package manager supported on your system:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# apt
sudo apt install golang

# yum
sudo yum install golang

# dnf
sudo dnf install golang

# pacman
sudo pacman -S go"><pre><span><span>#</span> apt</span>
sudo apt install golang

<span><span>#</span> yum</span>
sudo yum install golang

<span><span>#</span> dnf</span>
sudo dnf install golang

<span><span>#</span> pacman</span>
sudo pacman -S go</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 2: Install go via archive download</h3><a id="user-content-option-2-install-go-via-archive-download" aria-label="Permalink: Option 2: Install go via archive download" href="#option-2-install-go-via-archive-download"></a></p>
<p dir="auto">Download a binary release suitable for your system:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd /tmp/ &amp;&amp; wget https://dl.google.com/go/go1.20.linux-amd64.tar.gz
sudo tar -xvf go1.20.linux-amd64.tar.gz
sudo mv -fi go /usr/local"><pre><span>cd</span> /tmp/ <span>&amp;&amp;</span> wget https://dl.google.com/go/go1.20.linux-amd64.tar.gz
sudo tar -xvf go1.20.linux-amd64.tar.gz
sudo mv -fi go /usr/local</pre></div>
<p dir="auto">Set required environment variables:</p>
<div dir="auto" data-snippet-clipboard-copy-content="echo &quot;export PATH=$PATH:/usr/local/go/bin&quot; >> ~/.profile
echo &quot;export GOPATH=~/.go&quot; >> ~/.profile
source ~/.profile"><pre><span>echo</span> <span><span>"</span>export PATH=<span>$PATH</span>:/usr/local/go/bin<span>"</span></span> <span>&gt;&gt;</span> <span>~</span>/.profile
<span>echo</span> <span><span>"</span>export GOPATH=~/.go<span>"</span></span> <span>&gt;&gt;</span> <span>~</span>/.profile
<span>source</span> <span>~</span>/.profile</pre></div>
</div></details>
<p dir="auto">Verify the installed go version:</p>
<div dir="auto" data-snippet-clipboard-copy-content="go env | grep &quot;GOPATH\|GOVERSION&quot;"><pre>go env <span>|</span> grep <span><span>"</span>GOPATH\|GOVERSION<span>"</span></span></pre></div>
<details><summary>Install - cortile</summary><div dir="auto">
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 1: Install cortile via remote source</h3><a id="user-content-option-1-install-cortile-via-remote-source" aria-label="Permalink: Option 1: Install cortile via remote source" href="#option-1-install-cortile-via-remote-source"></a></p>
<p dir="auto">Install directly from develop branch:</p>
<div dir="auto" data-snippet-clipboard-copy-content="go install github.com/leukipp/cortile@develop"><pre>go install github.com/leukipp/cortile@develop</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 2: Install cortile via local source</h3><a id="user-content-option-2-install-cortile-via-local-source" aria-label="Permalink: Option 2: Install cortile via local source" href="#option-2-install-cortile-via-local-source"></a></p>
<p dir="auto">Clone source code from develop branch:</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/leukipp/cortile.git -b develop
cd cortile"><pre>git clone https://github.com/leukipp/cortile.git -b develop
<span>cd</span> cortile</pre></div>
<p dir="auto">If necessary you can make local changes, then execute:</p>
<div dir="auto" data-snippet-clipboard-copy-content="go install -ldflags=&quot;-X 'main.date=$(date --iso-8601=seconds)'&quot;"><pre>go install -ldflags=<span><span>"</span>-X 'main.date=<span><span>$(</span>date --iso-8601=seconds<span>)</span></span>'<span>"</span></span></pre></div>
</div></details>
<p dir="auto">Start cortile in verbose mode:</p>

<div dir="auto"><h2 tabindex="-1" dir="auto">Additional <a href="#additional-"><img src="https://camo.githubusercontent.com/68689b521e490c158d92c330dd5640f0c5a1eaadbc29d7ccbd130a976ec38db0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722d636c6f7365642f6c65756b6970702f636f7274696c653f7374796c653d666c61742d737175617265" alt="additional" data-canonical-src="https://img.shields.io/github/issues-pr-closed/leukipp/cortile?style=flat-square"></a></h2><a id="user-content-additional-" aria-label="Permalink: Additional " href="#additional-"></a></div>
<p dir="auto">Special settings:</p>
<ul dir="auto">
<li>Use the <code>edge_margin</code> property to account for additional spaces.
<ul dir="auto">
<li>e.g. for deskbar panels or conky infographics.</li>
</ul>
</li>
<li>Use the <code>window_slaves_max</code> property to limit the number of windows.
<ul dir="auto">
<li>e.g. with one active master and <code>window_slaves_max = 2</code>, all windows following the third window are stacked behind the two slaves.</li>
</ul>
</li>
</ul>
<p dir="auto">Hot corners:</p>
<ul dir="auto">
<li>Use <code>tiling_enabled = false</code> if you prefer to utilize only the hot corner functionalities.</li>
<li>Use the hot <code>[corners]</code> properties to execute any external command available on your system.
<ul dir="auto">
<li>e.g. use <code>bottom_center = "firefox"</code> to open a web browser window.</li>
</ul>
</li>
</ul>
<p dir="auto">Systray:</p>
<ul dir="auto">
<li>Use the <code>tiling_icon</code> property to add any external command to the systray menu.
<ul dir="auto">
<li>e.g. use <code>tiling_icon = [...,['firefox', 'Open Browser'],...]</code> to add a web browser entry.</li>
</ul>
</li>
</ul>
<div dir="auto"><h2 tabindex="-1" dir="auto">Issues <a href="#issues-"><img src="https://camo.githubusercontent.com/cbd73ae0dcb9daddc1f89b0fa888a7770b76b6be610cc53805e486b4dfa3ddf4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f6c65756b6970702f636f7274696c653f7374796c653d666c61742d737175617265" alt="issues" data-canonical-src="https://img.shields.io/github/issues-closed/leukipp/cortile?style=flat-square"></a></h2><a id="user-content-issues-" aria-label="Permalink: Issues " href="#issues-"></a></div>
<p dir="auto">Cortile works best with Xfwm and Openbox window systems.
However, it`s still possible that you may encounter problems during usage.</p>
<p dir="auto">Windows:</p>
<ul dir="auto">
<li>It's recommended to disable all build-in window snapping features (snap to other windows, snap to screen borders).</li>
<li>Automatic panel detection may not work under some window managers, use the <code>edge_margin</code> property to adjust for additional margins.</li>
<li>Particularly in GNOME based desktop environments, window displacements or resizing issues may occur.</li>
<li>Sticky windows may cause unwanted layout modifications during workspace changes.</li>
</ul>
<p dir="auto">Systray:</p>
<ul dir="auto">
<li>Adjust the bindings in the <code>[systray]</code> section, as some pointer events may not fire across different desktop environments.</li>
<li>Window managers not supporting <a href="https://freedesktop.org/wiki/Specifications/StatusNotifierItem" rel="nofollow">StatusNotifierItem</a> for displaying systray icons will need to install <a href="https://github.com/fyne-io/systray#linuxbsd">snixembed</a>.</li>
</ul>
<p dir="auto">Debugging:</p>
<ul dir="auto">
<li>If you encounter problems start the process with <code>cortile -vv</code>, which provides additional debug outputs.</li>
<li>A log file is created by default under <code>/tmp/cortile.log</code>.</li>
</ul>
<div dir="auto"><h2 tabindex="-1" dir="auto">Credits <a href="#credits-"><img src="https://camo.githubusercontent.com/7911d8367a1e3de2d1f761a27e86f0fbf8aa1cd3fa16722aec0505ef850129cd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6c65756b6970702f636f7274696c653f7374796c653d666c61742d737175617265" alt="credits" data-canonical-src="https://img.shields.io/github/contributors/leukipp/cortile?style=flat-square"></a></h2><a id="user-content-credits-" aria-label="Permalink: Credits " href="#credits-"></a></div>
<p dir="auto">Based on <a href="https://github.com/blrsn/zentile">zentile</a> (<a href="https://github.com/blrsn">Berin Larson</a>) and <a href="https://github.com/BurntSushi/pytyle3">pytyle3</a> (<a href="https://github.com/BurntSushi">Andrew Gallant</a>).<br>
The main libraries used in this project are <a href="https://github.com/BurntSushi/xgbutil">xgbutil</a>, <a href="https://github.com/BurntSushi/toml">toml</a>, <a href="https://github.com/fyne-io/systray">systray</a>, <a href="https://github.com/godbus/dbus">dbus</a>, <a href="https://github.com/fsnotify/fsnotify">fsnotify</a> and <a href="https://github.com/sirupsen/logrus">logrus</a>.</p>
<div dir="auto"><h2 tabindex="-1" dir="auto">License <a href="#license-"><img src="https://camo.githubusercontent.com/e90d3c4ea3aa5158287a2c1da33c42ea4abc36d0e45ef4f84426620cccfc6161/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6c65756b6970702f636f7274696c653f7374796c653d666c61742d737175617265" alt="license" data-canonical-src="https://img.shields.io/github/license/leukipp/cortile?style=flat-square"></a></h2><a id="user-content-license-" aria-label="Permalink: License " href="#license-"></a></div>
<p dir="auto"><a href="https://github.com/leukipp/cortile/blob/main/LICENSE">MIT</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Nvidia announces financial results for first quarter fiscal 2025 (163 pts)]]></title>
            <link>https://nvidianews.nvidia.com/news/nvidia-announces-financial-results-for-first-quarter-fiscal-2025</link>
            <guid>40446010</guid>
            <pubDate>Wed, 22 May 2024 20:26:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nvidianews.nvidia.com/news/nvidia-announces-financial-results-for-first-quarter-fiscal-2025">https://nvidianews.nvidia.com/news/nvidia-announces-financial-results-for-first-quarter-fiscal-2025</a>, See on <a href="https://news.ycombinator.com/item?id=40446010">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
         <ul type="disc">
	<li>Record quarterly revenue of $26.0 billion, up 18% from Q4 and up 262% from a year ago&nbsp;</li>
	<li>Record quarterly Data Center revenue of $22.6 billion, up 23% from Q4 and up 427% from a year ago</li>
	<li>Ten-for-one forward stock split effective June 7, 2024</li>
	<li>Quarterly cash dividend raised 150% to $0.01 per share on a post-split basis</li>
</ul>

<p>NVIDIA (NASDAQ: NVDA) today reported revenue for the first quarter ended April 28, 2024, of $26.0 billion, up 18% from the previous quarter and up 262% from a year ago.</p>

<p>For the quarter, GAAP earnings per diluted share was $5.98, up 21% from the previous quarter and up 629% from a year ago. Non-GAAP earnings per diluted share was $6.12, up 19% from the previous quarter and up 461% from a year ago.</p>

<p>“The next industrial revolution has begun — companies and countries are partnering with NVIDIA to shift the trillion-dollar traditional data centers to accelerated computing and build a new type of data center — AI factories — to produce a new commodity: artificial intelligence,” said Jensen Huang, founder and CEO of NVIDIA. “AI will bring significant productivity gains to nearly every industry and help companies be more cost- and energy-efficient, while expanding revenue opportunities.</p>

<p>“Our data center growth was fueled by strong and accelerating demand for generative AI training and inference on the Hopper platform. Beyond cloud service providers, generative AI has expanded to consumer internet companies, and enterprise, sovereign AI, automotive and healthcare customers, creating multiple multibillion-dollar vertical markets.</p>

<p>“We are poised for our next wave of growth. The Blackwell platform is in full production and forms the foundation for trillion-parameter-scale generative AI. Spectrum-X opens a brand-new market for us to bring large-scale AI to Ethernet-only data centers. And NVIDIA NIM is our new software offering that delivers enterprise-grade, optimized generative AI to run on CUDA everywhere — from the cloud to on-prem data centers and RTX AI PCs — through our expansive network of ecosystem partners.”</p>

<p>NVIDIA also announced a ten-for-one forward stock split of NVIDIA’s issued common stock to make stock ownership more accessible to employees and investors. The split will be effected through an amendment to NVIDIA’s Restated Certificate of Incorporation, which will result in a proportionate increase in the number of shares of authorized common stock. Each record holder of common stock as of the close of market on Thursday, June 6, 2024, will receive nine additional shares of common stock, to be distributed after the close of market on Friday, June 7, 2024. Trading is expected to commence on a split-adjusted basis at market open on Monday, June 10, 2024.</p>

<p>NVIDIA is increasing its quarterly cash dividend by 150% from $0.04 per share to $0.10 per share of common stock. The increased dividend is equivalent to $0.01 per share on a post-split basis and will be paid on Friday, June 28, 2024, to all shareholders of record on Tuesday, June 11, 2024.</p>

<p><strong>Q1 Fiscal 2025 Summary</strong></p>

<table>
	<tbody>
		<tr>
			<td colspan="6"><strong>GAAP</strong></td>
		</tr>
		<tr>
			<td><em>($ in millions, except earnings </em><br>
			<em>per share)</em></td>
			<td><strong>Q1 FY25</strong></td>
			<td><strong>Q4 FY24</strong></td>
			<td><strong>Q1 FY24</strong></td>
			<td><strong>Q/Q</strong></td>
			<td><strong>Y/Y</strong></td>
		</tr>
		<tr>
			<td>Revenue</td>
			<td>$26,044</td>
			<td>$22,103</td>
			<td>$7,192</td>
			<td>Up 18%</td>
			<td>Up 262%</td>
		</tr>
		<tr>
			<td>Gross margin</td>
			<td>78.4%</td>
			<td>76.0%</td>
			<td>64.6%</td>
			<td>Up 2.4 pts</td>
			<td>Up 13.8 pts</td>
		</tr>
		<tr>
			<td>Operating expenses</td>
			<td>$3,497</td>
			<td>$3,176</td>
			<td>$2,508</td>
			<td>Up 10%</td>
			<td>Up 39%</td>
		</tr>
		<tr>
			<td>Operating income</td>
			<td>$16,909</td>
			<td>$13,615</td>
			<td>$2,140</td>
			<td>Up 24%</td>
			<td>Up 690%</td>
		</tr>
		<tr>
			<td>Net income</td>
			<td>$14,881</td>
			<td>$12,285</td>
			<td>$2,043</td>
			<td>Up 21%</td>
			<td>Up 628%</td>
		</tr>
		<tr>
			<td>Diluted earnings per share</td>
			<td>$5.98</td>
			<td>$4.93</td>
			<td>$0.82</td>
			<td>Up 21%</td>
			<td>Up 629%</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>



<table>
	<tbody>
		<tr>
			<td colspan="6"><strong>Non-GAAP</strong></td>
		</tr>
		<tr>
			<td><em>($ in millions, except earnings </em><br>
			<em>per share)</em></td>
			<td><strong>Q1 FY25</strong></td>
			<td><strong>Q4 FY24</strong></td>
			<td><strong>Q1 FY24</strong></td>
			<td><strong>Q/Q</strong></td>
			<td><strong>Y/Y</strong></td>
		</tr>
		<tr>
			<td>Revenue</td>
			<td>$26,044</td>
			<td>$22,103</td>
			<td>$7,192</td>
			<td>Up 18%</td>
			<td>Up 262%</td>
		</tr>
		<tr>
			<td>Gross margin</td>
			<td>78.9%</td>
			<td>76.7%</td>
			<td>66.8%</td>
			<td>Up 2.2 pts</td>
			<td>Up 12.1 pts</td>
		</tr>
		<tr>
			<td>Operating expenses</td>
			<td>$2,501</td>
			<td>$2,210</td>
			<td>$1,750</td>
			<td>Up 13%</td>
			<td>Up 43%</td>
		</tr>
		<tr>
			<td>Operating income</td>
			<td>$18,059</td>
			<td>$14,749</td>
			<td>$3,052</td>
			<td>Up 22%</td>
			<td>Up 492%</td>
		</tr>
		<tr>
			<td>Net income</td>
			<td>$15,238</td>
			<td>$12,839</td>
			<td>$2,713</td>
			<td>Up 19%</td>
			<td>Up 462%</td>
		</tr>
		<tr>
			<td>Diluted earnings per share</td>
			<td>$6.12</td>
			<td>$5.16</td>
			<td>$1.09</td>
			<td>Up 19%</td>
			<td>Up 461%</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>

<p><strong>Outlook</strong><br>
NVIDIA’s outlook for the second quarter of fiscal 2025 is as follows:</p>

<ul type="disc">
	<li>Revenue is expected to be $28.0 billion, plus or minus 2%.</li>
	<li>GAAP and non-GAAP gross margins are expected to be 74.8% and 75.5%, respectively, plus or minus 50 basis points. For the full year, gross margins are expected to be in the mid-70% range.</li>
	<li>GAAP and non-GAAP operating expenses are expected to be approximately $4.0 billion and $2.8 billion, respectively. Full-year operating expenses are expected to grow in the low-40% range.</li>
	<li>GAAP and non-GAAP other income and expense are expected to be an income of approximately $300 million, excluding gains and losses from non-affiliated investments.</li>
	<li>GAAP and non-GAAP tax rates are expected to be 17%, plus or minus 1%, excluding any discrete items.</li>
</ul>

<p><strong>Highlights</strong><br>
NVIDIA achieved progress since its previous earnings announcement in these areas:&nbsp;</p>

<p><strong>Data Center </strong></p>

<ul>
	<li>First-quarter revenue was a record $22.6 billion, up 23% from the previous quarter and up 427% from a year ago.</li>
	<li>Unveiled the <a href="https://nvidianews.nvidia.com/news/nvidia-blackwell-platform-arrives-to-power-a-new-era-of-computing" rel="nofollow" target="_blank" title="NVIDIA Blackwell platform">NVIDIA Blackwell platform</a> to fuel a new era of AI computing at trillion-parameter scale and the <a href="https://nvidianews.nvidia.com/news/nvidia-blackwell-dgx-generative-ai-supercomputing" rel="nofollow" target="_blank" title="Blackwell-powered DGX SuperPOD">Blackwell-powered DGX SuperPOD</a>™ for generative AI supercomputing.</li>
	<li>Announced <a href="https://nvidianews.nvidia.com/news/networking-switches-gpu-computing-ai" rel="nofollow" target="_blank" title="NVIDIA Quantum and NVIDIA Spectrum™ X800 series switches">NVIDIA Quantum and NVIDIA Spectrum™ X800 series switches</a>&nbsp;for InfiniBand and Ethernet, respectively, optimized for trillion-parameter GPU computing and AI infrastructure.</li>
	<li>Launched NVIDIA AI Enterprise 5.0 with <a href="https://nvidianews.nvidia.com/news/generative-ai-microservices-for-developers" rel="nofollow" target="_blank" title="NVIDIA NIM inference microservices">NVIDIA NIM inference microservices</a> to speed enterprise app development.</li>
	<li>Announced <a href="https://nvidianews.nvidia.com/news/tsmc-synopsys-nvidia-culitho" rel="nofollow" target="_blank" title="TSMC and Synopsys">TSMC and Synopsys</a> are going into production with NVIDIA cuLitho to accelerate computational lithography, the semiconductor manufacturing industry’s most compute-intensive workload.</li>
	<li>Announced that nine new supercomputers worldwide are using <a href="https://nvidianews.nvidia.com/news/nvidia-grace-hopper-ignites-new-era-of-ai-supercomputing" rel="nofollow" target="_blank" title="Grace Hopper Superchips">Grace Hopper Superchips</a> to ignite new era of AI supercomputing.</li>
	<li>Unveiled that <a href="https://blogs.nvidia.com/blog/green500-energy-efficient-supercomputers/" rel="nofollow" target="_blank" title="Grace Hopper Superchips power">Grace Hopper Superchips power</a> the top three machines on the Green500 list of the world’s most energy-efficient supercomputers.</li>
	<li>Expanded collaborations with <a href="https://nvidianews.nvidia.com/news/aws-nvidia-generative-ai-innovation" rel="nofollow" target="_blank" title="AWS">AWS</a>, <a href="https://nvidianews.nvidia.com/news/google-cloud-ai-development" rel="nofollow" target="_blank" title="Google Cloud">Google Cloud</a>, <a href="https://nvidianews.nvidia.com/news/microsoft-nvidia-generative-ai-enterprises" rel="nofollow" target="_blank" title="Microsoft">Microsoft</a> and <a href="https://nvidianews.nvidia.com/news/oracle-nvidia-sovereign-ai" rel="nofollow" target="_blank" title="Oracle">Oracle</a> to advance generative AI innovation.</li>
	<li>Worked with <a href="https://blogs.nvidia.com/blog/johnson-and-johnson-medtech-ai-surgery/" rel="nofollow" target="_blank" title="Johnson &amp; Johnson MedTech">Johnson &amp; Johnson MedTech</a> to bring AI capabilities to support surgery.</li>
</ul>

<p><strong>Gaming and AI PC</strong></p>

<ul type="disc">
	<li>First-quarter Gaming revenue was $2.6 billion, down 8% from the previous quarter and up 18% from a year ago.&nbsp;</li>
	<li>Introduced new AI gaming technologies at GDC for NVIDIA <a href="https://nvidianews.nvidia.com/news/nvidia-digital-human-technologies-bring-ai-characters-to-life-6900750" rel="nofollow" target="_blank" title="ACE">ACE</a> and Neural Graphics.</li>
	<li>Unveiled new <a href="https://blogs.nvidia.com/blog/rtx-advanced-ai-windows-pc-build/" rel="nofollow" target="_blank" title="AI performance optimizations and integrations for Windows">AI performance optimizations and integrations for Windows</a> to deliver maximum performance on NVIDIA GeForce RTX AI PCs and workstations.</li>
	<li>Announced <a href="https://www.nvidia.com/en-us/geforce/news/gdc-2024-dlss-rtx-full-ray-tracing-game-announcements/" rel="nofollow" target="_blank" title="more blockbuster games">more blockbuster games</a> that will incorporate RTX technology, including <em>Star Wars Outlaws</em> and <em>Black Myth Wukong</em>.</li>
	<li>Added <a href="https://blogs.nvidia.com/blog/ai-decoded-chatrtx-update/" rel="nofollow" target="_blank" title="support for new models">support for new models</a>, including Google’s Gemma, for ChatRTX, which brings chatbot capabilities to RTX-powered Windows PCs and workstations.</li>
</ul>

<p><strong>Professional Visualization</strong></p>

<ul type="disc">
	<li>First-quarter revenue was $427 million, down 8% from the previous quarter and up 45% from a year ago.</li>
	<li>Introduced <a href="https://blogs.nvidia.com/blog/rtx-ada-ai-workflows/" rel="nofollow" target="_blank" title="NVIDIA RTX™ 500 and 1000 professional Ada generation laptop GPUs">NVIDIA RTX™ 500 and 1000 professional Ada generation laptop GPUs</a> for AI-enhanced workflows.</li>
	<li>Unveiled <a href="https://blogs.nvidia.com/blog/ampere-rtx-a400-a1000-ai/" rel="nofollow" target="_blank" title="NVIDIA RTX A400 and A1000 GPUs for desktop workstations">NVIDIA RTX A400 and A1000 GPUs for desktop workstations</a>, based on the NVIDIA Ampere architecture, to bring AI to design and productivity workflows.</li>
	<li>Introduced <a href="https://nvidianews.nvidia.com/news/omniverse-cloud-apis-industrial-digital-twin" rel="nofollow" target="_blank" title="NVIDIA Omniverse™ Cloud APIs">NVIDIA Omniverse™ Cloud APIs</a> to power industrial digital twin software tools, including an expanded <a href="https://blogs.nvidia.com/blog/siemens-immersive-visualization-generative-ai/" rel="nofollow" target="_blank" title="Siemens partnership">Siemens partnership</a>, and a new framework for the <a href="https://blogs.nvidia.com/blog/omniverse-apple-vision-pro/" rel="nofollow" target="_blank" title="Apple Vision Pro">Apple Vision Pro</a>.</li>
	<li>Announced the adoption of the new <a href="https://nvidianews.nvidia.com/news/nvidia-announces-earth-climate-digital-twin" rel="nofollow" target="_blank" title="Earth-2 cloud APIs">Earth-2 cloud APIs</a> by The Weather Company and the Central Weather Administration of Taiwan for high-resolution global climate simulations.</li>
</ul>

<p><strong>Automotive and Robotics</strong></p>

<ul type="disc">
	<li>First-quarter Automotive revenue was $329 million, up 17% from the previous quarter and up 11% from a year ago.</li>
	<li>Announced BYD, XPENG, GAC’s AION Hyper, Nuro and others have chosen the next-generation <a href="https://nvidianews.nvidia.com/news/nvidia-drive-powers-next-generation-transportation" rel="nofollow" target="_blank" title="NVIDIA DRIVE Thor">NVIDIA DRIVE Thor</a>™ platform, which now features Blackwell GPU architecture, to power their next-generation consumer and commercial electric vehicle fleets.</li>
	<li>Revealed U.S. and China electric vehicle makers Lucid and IM Motors are using the <a href="https://blogs.nvidia.com/blog/automakers-geneva-motor-show/" rel="nofollow" target="_blank" title="NVIDIA DRIVE Orin™ platform">NVIDIA DRIVE Orin™ platform</a> for vehicle models targeting the European market.</li>
	<li>Announced an array of <a href="https://blogs.nvidia.com/blog/generative-ai-in-vehicle-experiences/" rel="nofollow" target="_blank" title="partners are using NVIDIA generative AI technologies">partners are using NVIDIA generative AI technologies</a> to transform in-vehicle experiences.</li>
	<li>Introduced the <a href="https://nvidianews.nvidia.com/news/foundation-model-isaac-robotics-platform" rel="nofollow" target="_blank" title="Project GR00T foundation model">Project GR00T foundation model</a> for humanoid robots and major Isaac robotics platform updates.</li>
</ul>

<p><strong>CFO Commentary</strong><br>
Commentary on the quarter by Colette Kress, NVIDIA’s executive vice president and chief financial officer, is available at <a href="https://investor.nvidia.com/" rel="nofollow" target="_blank" title="">https://investor.nvidia.com</a>.</p>

<p><strong>Conference Call and Webcast Information</strong><br>
NVIDIA will conduct a conference call with analysts and investors to discuss its first quarter fiscal 2025 financial results and current financial prospects today at 2 p.m. Pacific time (5 p.m. Eastern time). A live webcast (listen-only mode) of the conference call will be accessible at NVIDIA’s investor relations website, <a href="https://investor.nvidia.com/" rel="nofollow" target="_blank" title="">https://investor.nvidia.com</a>. The webcast will be recorded and available for replay until NVIDIA’s conference call to discuss its financial results for its second quarter of fiscal 2025.</p>

<p><strong>Non-GAAP Measures</strong><br>
To supplement NVIDIA’s condensed consolidated financial statements presented in accordance with GAAP, the company uses non-GAAP measures of certain components of financial performance. These non-GAAP measures include non-GAAP gross profit, non-GAAP gross margin, non-GAAP operating expenses, non-GAAP income from operations, non-GAAP other income (expense), net, non-GAAP net income, non-GAAP net income, or earnings, per diluted share, and free cash flow. For NVIDIA’s investors to be better able to compare its current results with those of previous periods, the company has shown a reconciliation of GAAP to non-GAAP financial measures. These reconciliations adjust the related GAAP financial measures to exclude stock-based compensation expense, acquisition-related and other costs, other, gains and losses from non-affiliated investments, interest expense related to amortization of debt discount, and the associated tax impact of these items where applicable. Free cash flow is calculated as GAAP net cash provided by operating activities less both purchases related to property and equipment and intangible assets and principal payments on property and equipment and intangible assets. NVIDIA believes the presentation of its non-GAAP financial measures enhances the user’s overall understanding of the company’s historical financial performance. The presentation of the company’s non-GAAP financial measures is not meant to be considered in isolation or as a substitute for the company’s financial results prepared in accordance with GAAP, and the company’s non-GAAP measures may be different from non-GAAP measures used by other companies.</p>

<table>
	<tbody>
		<tr>
			<td colspan="10">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="10"><strong>NVIDIA CORPORATION</strong></td>
		</tr>
		<tr>
			<td colspan="10"><strong>&nbsp;CONDENSED CONSOLIDATED STATEMENTS OF INCOME</strong></td>
		</tr>
		<tr>
			<td colspan="10">(In millions, except per share data)</td>
		</tr>
		<tr>
			<td colspan="10">(Unaudited)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="7"><strong>Three Months Ended</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 30,</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;<strong>2024</strong>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;<strong>2023</strong>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Revenue</td>
			<td>$</td>
			<td>26,044</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>7,192</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Cost of revenue</td>
			<td>&nbsp;</td>
			<td>5,638</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,544</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3"><strong>Gross profit</strong></td>
			<td>&nbsp;</td>
			<td><strong>20,406</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>4,648</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Operating expenses</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Research and development</td>
			<td>&nbsp;</td>
			<td>2,720</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,875</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Sales, general and administrative</td>
			<td>&nbsp;</td>
			<td>777</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>633</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>Total operating expenses</strong></td>
			<td>&nbsp;</td>
			<td><strong>3,497</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>2,508</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Operating Income</td>
			<td>&nbsp;</td>
			<td>16,909</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,140</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Interest income</td>
			<td>&nbsp;</td>
			<td>359</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>150</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Interest expense</td>
			<td>&nbsp;</td>
			<td>(64</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(66</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Other, net</td>
			<td>&nbsp;</td>
			<td>75</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(15</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>Other income (expense), net</strong></td>
			<td>&nbsp;</td>
			<td><strong>370</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>69</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Income before income tax</td>
			<td>&nbsp;</td>
			<td>17,279</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,209</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Income tax expense</td>
			<td>&nbsp;</td>
			<td>2,398</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>166</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3"><strong>Net income</strong></td>
			<td><strong>$</strong></td>
			<td><strong>14,881</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>2,043</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Net income per share:</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Basic</td>
			<td>$</td>
			<td>6.04</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>0.83</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Diluted</td>
			<td>$</td>
			<td>5.98</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>0.82</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Weighted average shares used in per share computation:</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Basic</td>
			<td>&nbsp;</td>
			<td>2,462</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,470</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Diluted</td>
			<td>&nbsp;</td>
			<td>2,489</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,490</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
	</tbody>
</table>



<table>
	<tbody>
		<tr>
			<td colspan="9"><strong>NVIDIA CORPORATION</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="9"><strong>CONDENSED CONSOLIDATED BALANCE SHEETS</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="9">(In millions)</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="9">(Unaudited)</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2"><strong>April 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="2"><strong>January 28,</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2"><strong>2024</strong></td>
			<td>&nbsp;</td>
			<td colspan="2"><strong>2024</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3"><strong>ASSETS</strong></td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Current assets:</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Cash, cash equivalents and marketable securities</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>31,438</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>25,984</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Accounts receivable, net</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>12,365</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>9,999</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Inventories</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>5,864</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>5,282</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Prepaid expenses and other current assets</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>4,062</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>3,080</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>Total current assets</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>53,729</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>44,345</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Property and equipment, net</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>4,006</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>3,914</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Operating lease assets</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,532</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,346</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Goodwill</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>4,453</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>4,430</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Intangible assets, net</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>986</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,112</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Deferred income tax assets</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>7,798</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>6,081</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Other assets</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>4,568</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>4,500</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>Total assets</strong></td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>77,072</strong></td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>65,728</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="9"><strong>LIABILITIES AND SHAREHOLDERS' EQUITY</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Current liabilities:</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Accounts payable</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>2,715</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>2,699</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Accrued and other current liabilities</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>11,258</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>6,682</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="2">Short-term debt</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,250</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,250</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>Total current liabilities</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>15,223</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>10,631</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Long-term debt</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>8,460</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>8,459</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Long-term operating lease liabilities</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,281</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,119</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Other long-term liabilities</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,966</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,541</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>Total liabilities</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>27,930</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>22,750</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="3">Shareholders' equity</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>49,142</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>42,978</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>Total liabilities and shareholders' equity</strong></td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>77,072</strong></td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>65,728</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="2">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>



<table>
	<tbody>
		<tr>
			<td colspan="9"><strong>NVIDIA CORPORATION</strong></td>
		</tr>
		<tr>
			<td colspan="9"><strong>CONDENSED CONSOLIDATED STATEMENTS OF CASH FLOWS</strong></td>
		</tr>
		<tr>
			<td colspan="9">(In millions)</td>
		</tr>
		<tr>
			<td colspan="9">(Unaudited)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="7"><strong>Three Months Ended</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 30,</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2024</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2023</strong></td>
		</tr>
		<tr>
			<td colspan="2">Cash flows from operating activities:</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">Net income</td>
			<td>$</td>
			<td>14,881</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>2,043</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">Adjustments to reconcile net income to net cash provided by operating activities:</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Stock-based compensation expense</td>
			<td>&nbsp;</td>
			<td>1,011</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>735</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Depreciation and amortization</td>
			<td>&nbsp;</td>
			<td>410</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>384</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Realized and unrealized (gains) losses on investments in non-affiliated entities, net</td>
			<td>&nbsp;</td>
			<td>(69</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>14</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Deferred income taxes</td>
			<td>&nbsp;</td>
			<td>(1,577</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(1,135</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Other</td>
			<td>&nbsp;</td>
			<td>(145</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(34</td>
			<td>)</td>
		</tr>
		<tr>
			<td colspan="2">Changes in operating assets and liabilities, net of acquisitions:</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Accounts receivable</td>
			<td>&nbsp;</td>
			<td>(2,366</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(252</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Inventories</td>
			<td>&nbsp;</td>
			<td>(577</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>566</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Prepaid expenses and other assets</td>
			<td>&nbsp;</td>
			<td>(726</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(215</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Accounts payable</td>
			<td>&nbsp;</td>
			<td>(22</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>11</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Accrued and other current liabilities</td>
			<td>&nbsp;</td>
			<td>4,202</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>689</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Other long-term liabilities</td>
			<td>&nbsp;</td>
			<td>323</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>105</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Net cash provided by operating activities</strong></td>
			<td>&nbsp;</td>
			<td><strong>15,345</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>2,911</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">Cash flows from investing activities:</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Proceeds from maturities of marketable securities</td>
			<td>&nbsp;</td>
			<td>4,004</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,512</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Proceeds from sales of marketable securities</td>
			<td>&nbsp;</td>
			<td>149</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>-</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Purchases of marketable securities</td>
			<td>&nbsp;</td>
			<td>(9,303</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(2,801</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Purchase related to property and equipment and intangible assets</td>
			<td>&nbsp;</td>
			<td>(369</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(248</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Acquisitions, net of cash acquired</td>
			<td>&nbsp;</td>
			<td>(39</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(83</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Investments in non-affiliated entities</td>
			<td>&nbsp;</td>
			<td>(135</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(221</td>
			<td>)</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Net cash used in investing activities</strong></td>
			<td>&nbsp;</td>
			<td><strong>(5,693</strong></td>
			<td><strong>)</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>(841</strong></td>
			<td><strong>)</strong></td>
		</tr>
		<tr>
			<td colspan="2">Cash flows from financing activities:</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Proceeds related to employee stock plans</td>
			<td>&nbsp;</td>
			<td>285</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>246</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Payments related to repurchases of common stock</td>
			<td>&nbsp;</td>
			<td>(7,740</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>-</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Payments related to tax on restricted stock units</td>
			<td>&nbsp;</td>
			<td>(1,752</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(507</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Dividends paid</td>
			<td>&nbsp;</td>
			<td>(98</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(99</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Principal payments on property and equipment and intangible assets</td>
			<td>&nbsp;</td>
			<td>(40</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(20</td>
			<td>)</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Net cash used in financing activities</strong></td>
			<td>&nbsp;</td>
			<td><strong>(9,345</strong></td>
			<td><strong>)</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>(380</strong></td>
			<td><strong>)</strong></td>
		</tr>
		<tr>
			<td colspan="2">Change in cash and cash equivalents</td>
			<td>&nbsp;</td>
			<td>307</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,690</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">Cash and cash equivalents at beginning of period</td>
			<td>&nbsp;</td>
			<td>7,280</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>3,389</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Cash and cash equivalents at end of period</strong></td>
			<td><strong>$</strong></td>
			<td><strong>7,587</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>5,079</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
	</tbody>
</table>



<table>
	<tbody>
		<tr>
			<td colspan="14"><strong>NVIDIA CORPORATION</strong></td>
		</tr>
		<tr>
			<td colspan="14"><strong>RECONCILIATION OF GAAP TO NON-GAAP FINANCIAL MEASURES</strong></td>
		</tr>
		<tr>
			<td colspan="14">(In millions, except per share data)</td>
		</tr>
		<tr>
			<td colspan="14">(Unaudited)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="11">&nbsp;<strong>Three Months Ended</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>January 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 30,</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2024</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2024</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2023</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">GAAP gross profit&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>20,406</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>16,791</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>4,648</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2"><em>&nbsp;GAAP gross margin</em>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><em>78.4</em><em>%</em></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><em>76.0</em><em>%</em></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><em>64.6</em><em>%</em></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Acquisition-related and other costs (A)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>119</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>119</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>119</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Stock-based compensation expense (B)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>36</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>45</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>27</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Other (C)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(1</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>4</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>8</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Non-GAAP gross profit</strong>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>20,560</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>16,959</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>4,802</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2"><em><strong>&nbsp;Non-GAAP gross margin</strong></em>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><em><strong>78.9</strong></em><em><strong>%</strong></em></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><em><strong>76.7</strong></em><em><strong>%</strong></em></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><em><strong>66.8</strong></em><em><strong>%</strong></em></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">GAAP operating expenses&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>3,497</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>3,176</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>2,508</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Stock-based compensation expense (B)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(975</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(948</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(708</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Acquisition-related and other costs (A)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(21</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(18</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(54</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Other (C)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>-</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>-</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>4</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Non-GAAP operating expenses</strong>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>2,501</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>2,210</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>1,750</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">GAAP operating income&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>16,909</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>13,615</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>2,140</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Total impact of non-GAAP adjustments to operating income</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,150</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,134</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>912</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Non-GAAP operating income</strong>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>18,059</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>14,749</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>3,052</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">GAAP other income (expense), net&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>370</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>491</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>69</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>(Gains) losses from non-affiliated investments</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(69</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(260</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>14</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Interest expense related to amortization of debt discount</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Non-GAAP other income (expense), net</strong>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>302</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>232</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>84</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">GAAP net income&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>14,881</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>12,285</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>2,043</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Total pre-tax impact of non-GAAP adjustments</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>1,082</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>875</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>927</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Income tax impact of non-GAAP adjustments (D)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(725</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(321</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(257</td>
			<td>)</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Non-GAAP net income</strong></td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>15,238</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>12,839</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>2,713</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">Diluted net income per share&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>GAAP</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>5.98</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>4.93</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>0.82</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Non-GAAP</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>6.12</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>5.16</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>1.09</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">Weighted average shares used in diluted net income per share computation&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,489</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,490</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>2,490</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">GAAP net cash provided by operating activities&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>15,345</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>11,499</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>2,911</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Purchases related to property and equipment and intangible assets</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(369</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(253</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(248</td>
			<td>)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Principal payments on property and equipment and intangible assets</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(40</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(29</td>
			<td>)</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>(20</td>
			<td>)</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Free cash flow</strong>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>14,936</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>11,217</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td><strong>$</strong></td>
			<td><strong>2,643</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="13">(A) Acquisition-related and other costs are comprised of amortization of intangible assets and transaction costs, and are included in the following line items:</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="11"><strong>Three Months Ended</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>January 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 30,</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2024</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2024</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2023</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Cost of revenue</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>119</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>119</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>119</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Research and development</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>12</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>12</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>12</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Sales, general and administrative</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>8</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>6</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>42</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">(B) Stock-based compensation consists of the following:&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="11"><strong>Three Months Ended</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>January 28,</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>April 30,</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2024</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2024</strong></td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>2023</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Cost of revenue</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>36</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>45</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>27</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Research and development</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>727</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>706</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>524</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Sales, general and administrative</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>248</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>242</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>$</td>
			<td>184</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">(C) Other consists of IP-related costs and assets held for sale related adjustments.&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="13">(D) Income tax impact of non-GAAP adjustments, including the recognition of excess tax benefits or deficiencies related to stock-based compensation under GAAP accounting standard (ASU 2016-09).</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>



<table>
	<tbody>
		<tr>
			<td colspan="5"><strong>NVIDIA CORPORATION</strong></td>
		</tr>
		<tr>
			<td colspan="5"><strong>RECONCILIATION OF GAAP TO NON-GAAP OUTLOOK</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="5">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3"><strong>Q2 FY2025<br>
			Outlook</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">($ in millions)</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">GAAP gross margin</td>
			<td>&nbsp;</td>
			<td>74.8</td>
			<td>%</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Impact of stock-based compensation expense, acquisition-related costs, and other costs</td>
			<td>&nbsp;</td>
			<td>0.7</td>
			<td>%</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Non-GAAP gross margin</strong></td>
			<td>&nbsp;</td>
			<td><strong>75.5</strong></td>
			<td><strong>%</strong></td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">GAAP operating expenses</td>
			<td>$</td>
			<td>3,950</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Stock-based compensation expense, acquisition-related costs, and other costs</td>
			<td>&nbsp;</td>
			<td>(1,150</td>
			<td>)</td>
		</tr>
		<tr>
			<td colspan="2"><strong>Non-GAAP operating expenses</strong></td>
			<td><strong>$</strong></td>
			<td><strong>2,800</strong></td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td colspan="3">&nbsp;</td>
		</tr>
	</tbody>
</table>



<p><br>
<img referrerpolicy="no-referrer-when-downgrade" src="https://ml.globenewswire.com/media/MTk5MTMwMDMtMjFiYy00ZThhLWEzOGQtMWZhM2MyNGJjMzNhLTEwMTg0ODU=/tiny/NVIDIA-CORPORATION.png"></p>

        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Carmakers Will Give Your Location to Police Without a Warrant, Senators Say (169 pts)]]></title>
            <link>https://www.thedrive.com/news/automakers-will-give-your-location-to-police-without-a-warrant-senators-say</link>
            <guid>40445093</guid>
            <pubDate>Wed, 22 May 2024 19:21:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thedrive.com/news/automakers-will-give-your-location-to-police-without-a-warrant-senators-say">https://www.thedrive.com/news/automakers-will-give-your-location-to-police-without-a-warrant-senators-say</a>, See on <a href="https://news.ycombinator.com/item?id=40445093">Hacker News</a></p>
<div id="readability-page-1" class="page"><section data-id="page-content" data-og-area="article-blocks" id="incArticle"><p>Connected cars' <a href="https://www.thedrive.com/news/you-should-be-worried-about-teslas-trove-of-private-vehicle-data" target="_blank" rel="noreferrer noopener">data security</a> has become a political battleground in recent years as new cars have become ever-more high-tech. Consumers have good reasons to want their data kept private, and on the surface, the auto industry is an ally on that front. But behind the curtain, the industry is reportedly playing fast and loose with customers' data, selling it or reportedly even handing it over to police despite promising not to.</p><div data-og-block-area="article-blocks" data-og-block-nth="2" data-og-block-type="core/paragraph" data-rawhtml="1"><p>Connected cars have been promised to bring about a variety of quality-of-life improvements, both to car ownership and our experiences on the road. They're touted as preventing theft, <a href="https://www.thedrive.com/news/ford-ceo-explains-why-legacy-automakers-take-forever-to-issue-ota-updates" target="_blank" rel="noreferrer noopener">streamlining service</a>, <a href="https://www.thedrive.com/news/audis-connected-car-tech-aims-to-save-cyclists" target="_blank" rel="noreferrer noopener">improving road safety</a>, and <a href="https://www.thedrive.com/news/news-study-connected-car-data-can-fix-traffic-delays" target="_blank" rel="noreferrer noopener">smoothing out traffic</a>. But <a href="https://www.thedrive.com/news/think-your-smartphone-is-tracking-you-your-cars-doing-it-too" target="_blank" rel="noreferrer noopener">the drawbacks are manifesting just as quickly</a>, in forms such as <a href="https://www.thedrive.com/tech/20674/connected-cars-dont-necessarily-disconnect-previous-owners-when-resold" target="_blank" rel="noreferrer noopener">privacy issues</a>, stealth recalls, and even <a href="https://www.reuters.com/technology/an-abused-wife-took-tesla-over-tracking-tech-she-lost-2023-12-19/" target="_blank" rel="noreferrer noopener">enabling stalking</a>. Consumers have other reasons to worry, too: <a href="https://www.thedrive.com/news/27648/teslas-new-car-insurance-service-will-actively-spy-on-you-adjust-rates-accordingly" target="_blank" rel="noreferrer noopener">Insurers are pressing harder for vehicle data</a>, and privacy is only becoming more valuable in an increasingly authoritarian <a href="https://www.thedrive.com/news/ai-traffic-surveillance-can-link-your-driving-patterns-to-criminal-behavior" target="_blank" rel="noreferrer noopener">surveillance state</a>. The federal government has expressed concern too, with the Biden administration asserting that allowing Chinese EVs to be sold in the U.S. <a href="https://www.thedrive.com/news/permanent-ban-on-chinese-evs-recommended-by-ohio-senator" target="_blank" rel="noreferrer noopener">poses national security risks</a>.</p></div><figure data-og-block-area="article-blocks" data-og-block-nth="1" data-og-block-type="core/image"><span data-rawhtml="1">BYD King, a Chinese hybrid sedan. <em>BYD</em> </span></figure><p>The industry is aware of the nation's privacy concerns, which is why many automakers signed the Alliance for Automotive Innovation's <a href="https://www.autosinnovate.org/innovation/Automotive%20Privacy/Consumer_Privacy_Principlesfor_VehicleTechnologies_Services-03-21-19.pdf" target="_blank" rel="noreferrer noopener">Consumer Privacy Protection Principles</a> in 2014. Signatories of this lobby group's document promised not to hand over location, biometric, or driving behavior data to third parties without driver approval—with some exceptions. One of said exceptions requires police to obtain a court order (or a warrant, a subcategory of court order) to obtain driver info. But now, eight automakers have reportedly admitted to Congress that they'd go against their word when push comes to shove.</p><p><a href="https://www.autonews.com/regulation-safety/automakers-will-give-connected-car-data-police" target="_blank" rel="noreferrer noopener"><em>Automotive News</em></a> reports that Toyota, Subaru, Mazda, Nissan, Kia, BMW, Mercedes-Benz, and Volkswagen have told Congress they would hand over drivers' data if faced with a subpoena. There's a major difference between a subpoena and a court order according to the <a href="https://www.apaservices.org/practice/good-practice/subpoenas-depositions.pdf" target="_blank" rel="noreferrer noopener">APA Practice Organization</a>, which says "a subpoena is a lawyer's assertion that she/he is entitled to the requested information, while a court order determines that the lawyer is in fact entitled to it." In other words, a subpoena is a request for information; a court order is a judge or magistrate backing that request.</p><figure data-og-block-area="article-blocks" data-og-block-nth="2" data-og-block-type="core/image"><span data-rawhtml="1"><em>Chris Ryan via Getty Images</em> </span></figure><p>Acquiring location data through subpoena could be easily weaponized by a legal system under escalating scrutiny for its widespread <a href="https://www.aclu.org/news/free-speech/the-sneaky-way-the-police-could-abuse-their-power-to-restrict-free-speech" target="_blank" rel="noreferrer noopener">abuse of power</a>. To at least two Senators though, it also constitutes deceptive marketing on automakers' parts.</p><p>"Automakers have not only kept consumers in the dark regarding their actual practices, but multiple companies misled consumers for over a decade by failing to honor the industry’s own voluntary privacy principles," Senators Ron Wyden and Ed Markey reportedly wrote to the Federal Trade Commission.</p><p>"Vehicle location data can be used to identify Americans who have traveled to seek an abortion in another state, attended protests, support groups for alcohol, drug, and other types of addiction, or identify those of particular faiths, as revealed through trips to places of worship."</p><div><p><img alt="Video thumbnail" loading="lazy" src="https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=1440" sizes="640w" srcset="
        https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=640 640w, 
        https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=750 750w, 
        https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=828 828w, 
        https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=1080 1080w, 
        https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=1200 1200w, 
        https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=1920 1920w, 
        https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=2018 2048w, 
        https://i.ytimg.com/vi/2iZw_C0aN04/hqdefault.jpg?auto=webp&amp;optimize=high&amp;quality=70&amp;width=3840 3840w
        "></p><svg viewBox="0 0 68 48" xmlns="http://www.w3.org/2000/svg"><path d="M66.52 7.74c-.78-2.93-2.49-5.41-5.42-6.19C55.79.13 34 0 34 0S12.21.13 6.9 1.55c-2.93.78-4.63 3.26-5.42 6.19C.06 13.05 0 24 0 24s.06 10.95 1.48 16.26c.78 2.93 2.49 5.41 5.42 6.19C12.21 47.87 34 48 34 48s21.79-.13 27.1-1.55c2.93-.78 4.64-3.26 5.42-6.19C67.94 34.95 68 24 68 24s-.06-10.95-1.48-16.26z" fill="red"></path><path d="M45 24 27 14v20" fill="white"></path></svg></div><p>The auto industry's speaking out of both sides of its mouth here, showing many of its members can't be trusted with matters of consumer privacy. It may be best to consider the topic a matter of rhetoric and marketing to some manufacturers, rather than a cause they'll actually stand up for. With <a href="https://www.thedrive.com/news/carmakers-are-allowed-to-collect-so-much-data-on-you-even-about-your-sex-life" target="_blank" rel="noreferrer noopener">how much private information their products can gather on us</a>, we should all be concerned regardless of whether we own a connected car. After all, when the time comes for many Americans to replace their current vehicle, there won't be many other options.</p><p><em>Got a tip or question for the author? You can reach them here: james@thedrive.com</em></p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bluesky adds direct messages (205 pts)]]></title>
            <link>https://bsky.social/about/blog/05-22-2024-direct-messages</link>
            <guid>40444778</guid>
            <pubDate>Wed, 22 May 2024 18:59:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bsky.social/about/blog/05-22-2024-direct-messages">https://bsky.social/about/blog/05-22-2024-direct-messages</a>, See on <a href="https://news.ycombinator.com/item?id=40444778">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><section><a href="https://bsky.social/about/blog">Blog</a><svg width="8" height="12" viewBox="0 0 8 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2 10L6 6L2 2" stroke="#667999" stroke-width="2" stroke-linecap="square"></path></svg><span>Just shipped: Bluesky Direct Messages!</span></section><div><p>May 22, 2024</p><p><span>by <!-- -->The Bluesky Team</span></p></div></div><div><p>You can now send direct messages (DMs) to people on Bluesky! Say hi to a friend, colleague, or a crush.</p>
<figure>
  <img src="https://bsky.social/about/images/blogposts/dms-demo.jpg" alt="Screenshot of the DM interface in the Bluesky app" width="400">
</figure>
<p>These are private one-to-one messages directly within the Bluesky app. By default, your permissions allow anyone you follow to DM you. You can change these settings to allow no one or anyone to message you.</p>
<h2>How do I send a DM?</h2>
<ol>
<li>Click the Chat icon. On mobile, you can find the icon at the bottom of your screen. On desktop, this is a chat bubble on the side bar (or go to <a href="https://bsky.app/messages">https://bsky.app/messages</a>).</li>
<li>On mobile, click the plus icon to start a new conversation. On desktop, click “New chat” in the top right to start a new conversation. Search for the user you want to message.</li>
<li>Write your message, and hit send!</li>
<li>If the app says a user cannot be messaged, they may have set their account to only allow messages from people they follow or from no one.</li>
</ol>
<h2>DM Privacy and Safety</h2>
<h3>Who can message me?</h3>
<p>By default, only people you follow can send you DMs. To change this, check the settings in the DM interface. You can allow DMs from no one, only people you follow, or all Bluesky users.</p>
<figure>
  <img src="https://bsky.social/about/images/blogposts/dms-settings.jpg" alt="Screenshot of DM settings" width="400">
  <figcaption>Set who can message you, and whether you want notification sounds.</figcaption>
</figure>
<p>Blocked users will not be able to DM you. Muted users are able to DM you. Additionally, you can easily block users right from within the DM feature.</p>
<h3>Reporting DMs</h3>
<p>You can report DMs directly to mods, who will review reported messages for Community Guidelines violations. Moderators are able to view the reported message and surrounding messages for context to assess the report. Infractions may result in temporary or permanent loss of DM privileges or even full account takedowns.</p>
<h3>DM Privacy</h3>
<p>In rare cases, the Bluesky moderation team may need to open your DMs to investigate broader patterns of abuse, such as spam or coordinated harassment. This would only be done when absolutely necessary to keep Bluesky safe. Access is extremely limited and tracked internally.</p>
<p>This first version of DMs has limited features (no images or encryption yet), but we'll be adding more safety enhancements in future updates.</p>
<h2>Future Updates</h2>
<ul>
<li><strong>Media in DMs:</strong> Currently, Bluesky DMs allow you to send text messages. In the future, you’ll be able to send images and other forms of media!</li>
<li><strong>Group DMs:</strong> In the future, you’ll be able to create direct messages for groups.</li>
<li><strong>Encrypted DMs:</strong> We intend to fully support end-to-end encrypted messaging down the line. Read more about our technical plans for E2EE messaging in our <a href="https://docs.bsky.app/blog/2024-protocol-roadmap#product-features">2024 protocol roadmap</a>.</li>
<li><strong>Safety improvements:</strong> We’ll continue iterating on anti-harassment and safety tooling for direct messages.</li>
</ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[S3 Is Showing Its Age (226 pts)]]></title>
            <link>https://materializedview.io/p/s3-is-showing-its-age</link>
            <guid>40444267</guid>
            <pubDate>Wed, 22 May 2024 18:23:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://materializedview.io/p/s3-is-showing-its-age">https://materializedview.io/p/s3-is-showing-its-age</a>, See on <a href="https://news.ycombinator.com/item?id=40444267">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><span>There’s no denying that S3 is a feat of engineering. </span><a href="https://www.youtube.com/watch?v=sc3J4McebHE" rel="">Building and Operating a Pretty Big Storage System</a><span> is a top-tier technology flex. But S3’s feature set is falling behind its competitors. Notably, S3 has no compare-and-swap (CAS) operation—something every single other competitor has. It also lacks multi-region buckets and object appends. Even </span><a href="https://aws.amazon.com/s3/storage-classes/express-one-zone/" rel="">S3 Express</a><span> is proving to be lackluster.</span></p><p><span>These missing features haven’t mattered much for data lakes and offline use cases. But new infrastructure is using object storage as their primary persistence layer—</span><a href="https://materializedview.io/p/cloud-storage-triad-latency-cost-durability" rel="">something</a><span> </span><a href="https://materializedview.io/i/138849066/transactional-key-value-stores-on-s" rel="">I’m</a><span> </span><a href="https://materializedview.io/i/138956120/you-should-be-streaming-data-on-s" rel="">excited</a><span> </span><a href="https://materializedview.io/i/139272203/s-express-one-zone-roundup" rel="">about</a><span>. Here, S3’s feature gaps are a bigger problem.</span></p><p><span>Preconditions (also known as </span><a href="https://en.wikipedia.org/wiki/Compare-and-swap" rel="">compare-and-swap</a><span> (CAS), conditionals, If-None-Match, If-Match, and so on) allow a client to write an object only if a certain condition is met. A client might wish to write an object only if it doesn’t exist, or update an object only if it hasn’t changed since the client last read it. CAS makes this possible. Such operations are used often for locks and transactions in distributed systems. </span></p><p><span>S3 is the only object store that doesn’t support preconditions. Every other object store—</span><a href="https://cloud.google.com/storage" rel="">Google Cloud Storage</a><span> (GCS), </span><a href="https://azure.microsoft.com/en-us/products/storage/blobs" rel="">Azure Blob Store</a><span> (ABS), Cloudflare </span><a href="https://developers.cloudflare.com/r2/" rel="">Ridiculously Reliable</a><span> (R2) storage, </span><a href="https://www.tigrisdata.com/" rel="">Tigris</a><span>, </span><a href="https://min.io/" rel="">MinIO</a><span>—all have this feature.</span></p><p><span>Instead, developers are forced to use a separate transactional store such as </span><a href="https://aws.amazon.com/dynamodb/" rel="">DynamoDB</a><span> to enforce transactional operations. Building a two-phase write between DynamoDB and S3 is not technically difficult, but it’s annoying and </span><a href="https://docs.rs/object_store/latest/object_store/aws/enum.S3CopyIfNotExists.html" rel="">leads to ugly abstractions</a><span>.</span></p><p><span>I was </span><a href="https://x.com/criccomini/status/1729546140163395698" rel="">really excited</a><span> about S3 Express One Zone (S3E1Z) when it first came out. The more time I spend with it, the less impressed I am. The first wart that surfaced was a new </span><a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-overview.html" rel="">directory bucket</a><span> type, which Amazon introduced for Express.</span></p><p><span>But the gaps don’t stop here. S3E1Z is </span><a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-differences.html#s3-express-differences-unsupported-features" rel="">missing a </a><em><a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-differences.html#s3-express-differences-unsupported-features" rel="">ton</a></em><a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-differences.html#s3-express-differences-unsupported-features" rel=""> of standard S3 features</a><span> including object version support, bucket tags, object locks, object tags, and MD5 checksum ETags. The </span><a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-differences.html#s3-express-differences-unsupported-features" rel="">complete list</a><span> is pretty staggering.</span></p><p><span>S3E1Z buckets can’t be treated like a normal S3 buckets. As with CAS operations, developers must design around these deficiencies. And because S3E1Z is not multi-zonal, developers are left to build </span><a href="https://x.com/richardartoul/status/1756808229542051902" rel="">quorum writes</a><span> to multiple availability zones for higher availability.</span></p><p>Factor in S3E1Z’s high storage cost of $0.16/gig—twice elastic block store’s (EBS)  general purpose SSD (gp3) cost—and S3E1Z looks more like an expensive EBS with a half-implemented S3 API.</p><p><span>S3’s availability feature gaps go beyond S3E1Z. S3 doesn’t have dual-region or multi-region buckets. Such buckets are useful for higher availability. Google offers </span><a href="https://cloud.google.com/storage/docs/availability-durability#cross-region-redundancy" rel="">a wide range of options</a><span> in this area.</span></p><p>While not a must-have, higher availability buckets are certainly nice to have.</p><p>The dream is that developers are offered an object store with all of these features: low latency, preconditions, dual-region/multi-region, and so on. But we live in reality, where engineers face a choice: abandon S3 or build around these gaps.</p><p><a href="https://turbopuffer.com/" rel="">Turbopuffer</a><span> is my favorite example of a company that’s gone all-in on abandoning S3.</span></p><p><span>The gamble they’ve made is that S3 will eventually get preconditions. This gamble seems reasonable since Amazon has all of the required building blocks (DynamoDB and S3) and every competitor is beating them here. I’m making the same gamble with the </span><a href="https://materializedview.io/p/cloud-storage-triad-latency-cost-durability" rel="">cloud native LSM I’m working on</a><span>.</span></p><p><span>The challenge with this approach is inter-cloud network cost. All cloud providers charge for network egress. Data transferred to infrastructure running outside amazon web services (AWS) will incur network egress fees. But the inter-cloud cost for AWS users isn’t as bad as you might think. </span><a href="https://sirupsen.com/" rel="">Simon Eskildsen</a><span>, Turbopuffer’s founder and CEO, has </span><a href="https://x.com/Sirupsen/status/1766459050378551611" rel="">written about this extensively</a><span>.</span></p><p><span>The benefit of this is that Turbopuffer has built a beautiful and minimalist design with </span><a href="https://turbopuffer.com/architecture" rel="">just three components</a><span>: a Turbopuffer binary, a RAM/SSD cache, and Google Cloud Storage.</span></p><p>For many, this will seem extreme. The alternative is to house metadata in a transactional store outside of S3.</p><p><span>Once you open yourself up to a separate metadata plane, you’ll find other use cases for it. The path to the </span><a href="https://www.gartner.com/en/research/methodologies/gartner-hype-cycle" rel="">slope of enlightenment</a><span> is to recognize that S3 is an object store not a file system. By embracing DynamoDB as your metadata layer, systems stand to gain a lot.</span></p><p>Ultimately, the decision to abandon S3 or embrace its shortcomings depends on a system’s use cases and design goals. Preconditions on S3 and a unified S3E1Z API would make this decision a lot easier, though.</p><p><span>Support this newsletter by purchasing </span><a href="https://www.amazon.com/Missing-README-Guide-Software-Engineer/dp/1718501838" rel="">The Missing README: A Guide for the New Software Engineer</a><span> for yourself or gifting it to someone.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png" width="146" height="164.12413793103448" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/de442631-41a6-4119-a99a-62957cd53edb_870x978.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:978,&quot;width&quot;:870,&quot;resizeWidth&quot;:146,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde442631-41a6-4119-a99a-62957cd53edb_870x978.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p data-attrs="{&quot;url&quot;:&quot;https://www.amazon.com/Missing-README-Guide-Software-Engineer/dp/1718501838&quot;,&quot;text&quot;:&quot;Buy Now&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}" data-component-name="ButtonCreateButton"><a href="https://www.amazon.com/Missing-README-Guide-Software-Engineer/dp/1718501838" rel=""><span>Buy Now</span></a></p><p><span>I occasionally invest in infrastructure startups. Companies that I’ve invested in are marked with a [$] in this newsletter. See my </span><a href="https://www.linkedin.com/in/riccomini/" rel="">LinkedIn profile</a><span> for a complete list.</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Try Clojure (485 pts)]]></title>
            <link>https://tryclojure.org/</link>
            <guid>40444121</guid>
            <pubDate>Wed, 22 May 2024 18:11:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tryclojure.org/">https://tryclojure.org/</a>, See on <a href="https://news.ycombinator.com/item?id=40444121">Hacker News</a></p>
<div id="readability-page-1" class="page">

    <p>
      Loading....
    </p>

    <!-- JS -->
    
    <!-- Analytics -->
    
  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Neosync – Open-Source Data Anonymization for Postgres and MySQL (213 pts)]]></title>
            <link>https://github.com/nucleuscloud/neosync</link>
            <guid>40443927</guid>
            <pubDate>Wed, 22 May 2024 17:53:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/nucleuscloud/neosync">https://github.com/nucleuscloud/neosync</a>, See on <a href="https://news.ycombinator.com/item?id=40443927">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  
  <themed-picture data-catalyst-inline="true"><picture>
  <source srcset="https://camo.githubusercontent.com/4795d7bd67bedc8e776b1ff5e8f56d6da18c0e6ce3a4acb000e5f7d868c86206/68747470733a2f2f6173736574732e6e75636c657573636c6f75642e636f6d2f6e656f73796e632f646f63732f6e656f73796e632d6865616465722e737667" media="(prefers-color-scheme: light)" data-canonical-src="https://assets.nucleuscloud.com/neosync/docs/neosync-header.svg">
  <source srcset="https://camo.githubusercontent.com/6ef4dee0f9a4587f04682e81ad9a8a4dd8f7105400d384735bdd93c0ef8effc2/68747470733a2f2f6173736574732e6e75636c657573636c6f75642e636f6d2f6e656f73796e632f646f63732f6e656f73796e632d6865616465722d6461726b2e737667" media="(prefers-color-scheme: dark), (prefers-color-scheme: no-preference)" data-canonical-src="https://assets.nucleuscloud.com/neosync/docs/neosync-header-dark.svg">
  <img src="https://camo.githubusercontent.com/3ea384a4806373ccd247f789b945332f2d392e6a3823424a9f19788446435cea/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d616e7572616768617a72612673686f775f69636f6e733d74727565" data-canonical-src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;show_icons=true">
</picture></themed-picture>
</p>
<p dir="auto">
Open Source Data Anonymization and Synthetic Data Orchestration
</p>
 
<p><a href="https://makeapullrequest.com/" rel="nofollow">
    <img alt="PRs Welcome" src="https://camo.githubusercontent.com/1a97d303fbf3624999e2c69a6fa0699ef0c1d3b6e9bea256b39ea006289fcd59/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d736869656c6473" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=shields">
  </a>
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/efd23045cc32ccf6d19ef6c380e5614fb5015ebc58d2058da21c027976468868/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6c69676874646173682f6c6967687464617368"><img src="https://camo.githubusercontent.com/efd23045cc32ccf6d19ef6c380e5614fb5015ebc58d2058da21c027976468868/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6c69676874646173682f6c6967687464617368" data-canonical-src="https://img.shields.io/github/license/lightdash/lightdash"></a>
  
  <a href="https://github.com/nucleuscloud/neosync/actions/workflows/go.yml/">
    <img alt="Go Tests" src="https://github.com/nucleuscloud/neosync/actions/workflows/go.yml/badge.svg">
  </a>
  <a href="https://x.com/neosynccloud" rel="nofollow">
    <img alt="Follow X" src="https://camo.githubusercontent.com/186aceb9fb8ab41203cb48e8c6b2f3f5f48b35af50844f686f9efdf7de6cc31d/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6e656f73796e63636c6f75643f6c6162656c3d466f6c6c6f77" data-canonical-src="https://img.shields.io/twitter/follow/neosynccloud?label=Follow">
  </a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Introduction</h2><a id="user-content-introduction" aria-label="Permalink: Introduction" href="#introduction"></a></p>
<p dir="auto"><a href="https://www.neosync.dev/" rel="nofollow">Neosync</a> is an open-source, developer-first way to anonymize PII, generate synthetic data and sync environments for better testing, debugging and developer experience.</p>
<p dir="auto">Companies use Neosync to:</p>
<ol dir="auto">
<li><strong>Safely test code against production data</strong> - Anonymize sensitive production data in order to safely use it locally for a better testing and developer experience</li>
<li><strong>Easily reproduce production bugs locally</strong> - Anonymize and subset production data to get a safe, representative data set that you can use to locally reproduce production bugs quickly and efficiently</li>
<li><strong>Fix broken staging environments</strong> - Catch bugs before they hit production when you hydrate your staging and QA environments with production-like data</li>
<li><strong>Reduce your compliance scope</strong> - Use anonymized and synthetic data to reduce your compliance scope and easily comply with laws like HIPAA, GDPR, and DPDP</li>
<li><strong>Seed development databases</strong> - Easily seed development databases with synthetic data for unit testing, demos and more</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li><strong>Generate synthetic data</strong> based on your schema</li>
<li><strong>Anonymize existing production-data</strong> for a better developer experience</li>
<li><strong>Subset your production database</strong> for local and CI testing using any SQL query</li>
<li><strong>Complete async pipeline</strong> that automatically handles job retries, failures and playback using an event-sourcing model</li>
<li><strong>Referential integrity</strong> for your data automatically</li>
<li><strong>Declarative, GitOps based configs</strong> as a step in your CI pipeline to hydrate your CI DB</li>
<li><strong>Pre-built data transformers</strong> for all major data types</li>
<li><strong>Custom data transformers</strong> using javascript or LLMs</li>
<li><strong>Pre-built integrations</strong> with Postgres, Mysql, S3</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting started" href="#getting-started"></a></p>
<p dir="auto">Neosync is a fully dockerized setup which makes it easy to get up and running.</p>
<p dir="auto">A <a href="https://github.com/nucleuscloud/neosync/blob/main/compose.yml">compose.yml</a> file at the root contains production image refs that allow you to get up and running with just a few commands without having to build anything on your system.</p>
<p dir="auto">Neosync uses the newer <code>docker compose</code> command, so be sure to have that installed on your machine.</p>
<p dir="auto">To start Neosync, clone the repo into a local directory, be sure to have docker insalled and running, and then run:</p>

<p dir="auto">To stop, run:</p>

<p dir="auto">Neosync will now be available on <a href="http://localhost:3000/" rel="nofollow">http://localhost:3000</a>.</p>
<p dir="auto">The production compose pre-seeds with connections and jobs to get you started! Simply run the generate and sync job to watch Neosync in action!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Kubernetes, Auth Mode and more</h2><a id="user-content-kubernetes-auth-mode-and-more" aria-label="Permalink: Kubernetes, Auth Mode and more" href="#kubernetes-auth-mode-and-more"></a></p>
<p dir="auto">For more in-depth details on environment variables, Kubernetes deployments, and a production-ready guide, check out the <a href="https://docs.neosync.dev/deploy/introduction" rel="nofollow">Deploy Neosync</a> section of our Docs.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Resources</h2><a id="user-content-resources" aria-label="Permalink: Resources" href="#resources"></a></p>
<p dir="auto">Some resources to help you along the way:</p>
<ul dir="auto">
<li><a href="https://docs.neosync.dev/" rel="nofollow">Docs</a> for comprehensive documentation and guides</li>
<li><a href="https://discord.com/invite/MFAMgnp4HF" rel="nofollow">Discord</a> for discussion with the community and Neosync team</li>
<li><a href="https://x.com/neosynccloud" rel="nofollow">X</a> for the latest updates</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">We love contributions big and small. Here are just a few ways that you can contribute to Neosync.</p>
<ul dir="auto">
<li>Join our <a href="https://discord.com/invite/MFAMgnp4HF" rel="nofollow">Discord</a> channel and ask us any questions there</li>
<li>Open a PR (see our instructions on <a href="https://docs.neosync.dev/guides/neosync-local-dev" rel="nofollow">developing with Neosync locally</a>)</li>
<li>Submit a <a href="https://github.com/nucleuscloud/neosync/issues/new?assignees=&amp;labels=enhancement%2C+feature&amp;template=feature_request.md">feature request</a> or <a href="https://github.com/nucleuscloud/neosync/issues/new?assignees=&amp;labels=bug&amp;template=bug_report.md">bug report</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Licensing</h2><a id="user-content-licensing" aria-label="Permalink: Licensing" href="#licensing"></a></p>
<p dir="auto">We strongly believe in free and open source software and make this repo is available under the <a href="https://github.com/nucleuscloud/neosync/blob/main/LICENSE.md">MIT expat license</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: B-field, a novel probabilistic key-value data structure (`rust-bfield`) (140 pts)]]></title>
            <link>https://github.com/onecodex/rust-bfield</link>
            <guid>40443920</guid>
            <pubDate>Wed, 22 May 2024 17:53:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/onecodex/rust-bfield">https://github.com/onecodex/rust-bfield</a>, See on <a href="https://news.ycombinator.com/item?id=40443920">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto"><code>rust-bfield</code>, an implementation of the B-field probabilistic key-value data structure</h2><a id="user-content-rust-bfield-an-implementation-of-the-b-field-probabilistic-key-value-data-structure" aria-label="Permalink: rust-bfield, an implementation of the B-field probabilistic key-value data structure" href="#rust-bfield-an-implementation-of-the-b-field-probabilistic-key-value-data-structure"></a></p>
<p dir="auto"><a href="https://crates.io/crates/bfield" rel="nofollow"><img src="https://camo.githubusercontent.com/b0673bc61a8b98a999881e865548dd0b6cb6bb8a88045ae267a656f79eb7ccce/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f626669656c642e737667" alt="Crates.io Version" data-canonical-src="https://img.shields.io/crates/v/bfield.svg"></a></p>
<p dir="auto">The B-field is a novel, probabilistic data structure for storing key-value pairs (or, said differently, it is a probabilistic associative array or map). B-fields support insertion (<code>insert</code>) and lookup (<code>get</code>) operations, and share a number of mathematical and performance properties with the well-known <a href="https://doi.org/10.1145/362686.362692" rel="nofollow">Bloom filter</a>.</p>
<p dir="auto">At <a href="https://www.onecodex.com/" rel="nofollow">One Codex</a>, we use the <code>rust-bfield</code> crate in bioinformatics applications to efficiently store associations between billions of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer>-length nucleotide substrings (<a href="https://en.wikipedia.org/wiki/K-mer" rel="nofollow">"k-mers"</a>) and <a href="https://www.ncbi.nlm.nih.gov/taxonomy" rel="nofollow">their taxonomic identity</a> <em><strong>using only 6-7 bytes per <code>(kmer, value)</code> pair</strong></em> for up to 100,000 unique taxonomic IDs (distinct values) and a 0.1% error rate. We hope others are able to use this library (or implementations in other languages) for applications in bioinformatics and beyond.</p>
<blockquote>
<p dir="auto"><em>Note: In the <a href="#implementation-details">Implementation Details</a> section below, we detail the use of this B-field implementation in Rust and use <code>code</code> formatting and English parameter names (e.g., we discuss the B-field being a data structure for storing <code>(key, value)</code> pairs). In the following <a href="#formal-data-structure-details">Formal Data Structure Details</a> section, we detail the design and mechanics of the B-field using mathematical notation (i.e., we discuss it as an associate array mapping a set of</em> <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(x, y)$</math-renderer> <em>pairs). The <a href="https://docs.rs/bfield/latest/bfield/" rel="nofollow">generated Rust documentation</a> includes both notations for ease of reference.</em></p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Implementation Details</h2><a id="user-content-implementation-details" aria-label="Permalink: Implementation Details" href="#implementation-details"></a></p>
<p dir="auto">A B-field stores a <code>(key, value)</code> mapping <strong>without directly storing either the keys or the values</strong>. This permits highly space efficient association of <code>(key, value)</code> mappings, but comes at the cost of two classes of errors:</p>
<ul dir="auto">
<li>False positives (which we later describe as occurring at a tunable rate of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer>) in which the <code>get</code> operation for a <code>key</code> <em>that was not inserted into the B-field</em> returns an incorrect <code>value</code>; and</li>
<li>Indeterminacy errors (later described as occurring at a frequency of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer>) in which the <code>get</code> operation for a <code>key</code> returns an <code>Indeterminate</code> instead of a specific <code>value</code>. Note that this error can occur for both <code>keys</code> that were inserted into the B-field as well as those that were not.</li>
</ul>
<p dir="auto">Both error categories can be minimized with appropriate <a href="#parameter-selection">parameter selection</a>, and it is trivial to achieve a zero or near-zero indeterminacy error rate (i.e., <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta\approx0$</math-renderer>).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>Space Requirements</em></h3><a id="user-content-space-requirements" aria-label="Permalink: Space Requirements" href="#space-requirements"></a></p>
<p dir="auto">While the space requirements for a B-field depends on the number of discrete values and the desired error rates, the following examples are illustrative use cases:</p>
<ul dir="auto">
<li>
<p dir="auto">Store 1 billion web URLs and...</p>
<ul dir="auto">
<li>
<p dir="auto">Assign each of them one of a small number of categories values (n=8) in 2.22Gb (params include ν=8, κ=1, 𝛼=0.1%; 19 bits per element)</p>
</li>
<li>
<p dir="auto">Store their IPv4 prefix (n=32) in 3.16Gb (ν=24, κ=2, 𝛼=0.1%; 27 bits per element)</p>
</li>
<li>
<p dir="auto">Store their IP in an <code>0.0.0.0/8</code> address block (n=16,777,216) in 8.9Gb (ν=51, κ=6, 𝛼=0.1%; 76 bits per element)</p>
</li>
<li>
<p dir="auto">Determine if they are part of the set (a Bloom filter!) in 1.75Gb (params include ν=1, κ=1, 𝛼=0.1%; 15 bits per element)</p>
<blockquote>
<p dir="auto"><em>We don't estimate space savings over alternative data structures, but any structure storing URLs averaging ~40 bytes per key will several-fold larger than even a B-field associating keys with ~16M distinct values.</em></p>
</blockquote>
</li>
</ul>
</li>
<li>
<p dir="auto">Store 1 billion DNA or RNA <em>k</em>-mers ("ACGTA...") and...</p>
<ul dir="auto">
<li>
<p dir="auto">Associate them with any of the ~500k bacterial IDs current described by NCBI in 6.93Gb (ν=62, κ=4, 𝛼=0.1%; 59 bits per element)</p>
</li>
<li>
<p dir="auto">Store which of 1000 datasets they were most frequently observed in using 3.65Gb (ν=46, κ=2, 𝛼=0.1%; 31 bits per element)</p>
</li>
<li>
<p dir="auto">Quantify their abundance in a dataset(s) (say with ~100 quantized values) in 2.91Gb (ν=15, κ=2, 𝛼=0.1%; 25 bits per element)</p>
<blockquote>
<p dir="auto"><em>Compare this to a naive implementation storing 2-bit encoded 32-mers (or 8 amino acid character) and an associated 32 bit value, requiring 96 bits per element without any indexing or data structure overhead.</em></p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>🛠 Supported Operations &amp; Example Code</em></h3><a id="user-content--supported-operations--example-code" aria-label="Permalink: 🛠 Supported Operations &amp; Example Code" href="#-supported-operations--example-code"></a></p>
<p dir="auto">This implementation provides the following core functionality:</p>
<ul dir="auto">
<li>A B-field can be created with the <code>create</code> function (see <a href="#parameter-selection">parameter selection</a> for additional details) and then by iteratively inserting <code>(key, value)</code> pairs with the <code>insert</code> function:</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="use bfield::BField;

let tmp_dir = tempfile::tempdir().unwrap();

// Create a B-field in a temporary directory
// with a 1M bit array, 10 hash functions (k), a marker
// width of 39 (ν), weight of 4 (κ), 4 secondary arrays, and
// an uncorrected β error of 0.1
let mut bfield: BField<String> = BField::create(
    &quot;/tmp/&quot;,         // directory
    &quot;bfield&quot;,        // filename (used as base filename)
    1_000_000,       // size (in bits)
    10,              // n_hashes (k)
    39,              // marker_width (ν)
    4,               // n_marker_bits (weight / κ)
    0.1,             // secondary_scaledown (uncorrected β)
    0.025,           // max_scaledown
    4,               // n_secondaries
    false,           // in_memory
    String::new()    // other_params
).expect(&quot;Failed to build B-field&quot;);

// Insert integers 0-10,000 as key-value pairs (10k keys, 10k distinct values)
for p in 0..4u32 {
    for i in 0..10_000u32 {
        bfield.insert(&amp;i.to_be_bytes().to_vec(), i, p as usize);
    }
}"><pre><span>use</span> bfield<span>::</span><span>BField</span><span>;</span>

<span>let</span> tmp_dir = tempfile<span>::</span><span>tempdir</span><span>(</span><span>)</span><span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>

<span>// Create a B-field in a temporary directory</span>
<span>// with a 1M bit array, 10 hash functions (k), a marker</span>
<span>// width of 39 (ν), weight of 4 (κ), 4 secondary arrays, and</span>
<span>// an uncorrected β error of 0.1</span>
<span>let</span> <span>mut</span> bfield<span>:</span> <span>BField</span><span>&lt;</span><span>String</span><span>&gt;</span> = <span>BField</span><span>::</span><span>create</span><span>(</span>
    <span>"/tmp/"</span><span>,</span>         <span>// directory</span>
    <span>"bfield"</span><span>,</span>        <span>// filename (used as base filename)</span>
    <span>1_000_000</span><span>,</span>       <span>// size (in bits)</span>
    <span>10</span><span>,</span>              <span>// n_hashes (k)</span>
    <span>39</span><span>,</span>              <span>// marker_width (ν)</span>
    <span>4</span><span>,</span>               <span>// n_marker_bits (weight / κ)</span>
    <span>0.1</span><span>,</span>             <span>// secondary_scaledown (uncorrected β)</span>
    <span>0.025</span><span>,</span>           <span>// max_scaledown</span>
    <span>4</span><span>,</span>               <span>// n_secondaries</span>
    <span>false</span><span>,</span>           <span>// in_memory</span>
    <span>String</span><span>::</span><span>new</span><span>(</span><span>)</span>    <span>// other_params</span>
<span>)</span><span>.</span><span>expect</span><span>(</span><span>"Failed to build B-field"</span><span>)</span><span>;</span>

<span>// Insert integers 0-10,000 as key-value pairs (10k keys, 10k distinct values)</span>
<span>for</span> p <span>in</span> <span>0</span>..<span>4u32</span> <span>{</span>
    <span>for</span> i <span>in</span> <span>0</span>..<span>10_000u32</span> <span>{</span>
        bfield<span>.</span><span>insert</span><span>(</span><span>&amp;</span>i<span>.</span><span>to_be_bytes</span><span>(</span><span>)</span><span>.</span><span>to_vec</span><span>(</span><span>)</span><span>,</span> i<span>,</span> p <span>as</span> <span>usize</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span></pre></div>
<ul dir="auto">
<li>After creation, a B-field can optionally be loaded from a directory containing the produced <code>mmap</code> and related files with the <code>load</code> function. And once created or loaded, a B-field can be directly queried using the <code>get</code> function, which will either return <code>None</code>, <code>Indeterminate</code>, or <code>Some(BFieldValue)</code> (which is currently an alias for <code>Some(u32)</code> see <a href="#%E2%9A%A0%EF%B8%8F-current-limitations-of-the-rust-bfield-implementation">limitations</a> below for more details):</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="use bfield::BField;

// Load based on filename of the first array &quot;.0.bfd&quot;
let bfield: BField<String> = BField::load(&quot;/tmp/bfield.0.bfd&quot;, true).expect(&quot;Failed to load B-field&quot;);

for i in 0..10_000u32 {
    let value = bfield.get(&amp;i.to_be_bytes().to_vec());
}"><pre><span>use</span> bfield<span>::</span><span>BField</span><span>;</span>

<span>// Load based on filename of the first array ".0.bfd"</span>
<span>let</span> bfield<span>:</span> <span>BField</span><span>&lt;</span><span>String</span><span>&gt;</span> = <span>BField</span><span>::</span><span>load</span><span>(</span><span>"/tmp/bfield.0.bfd"</span><span>,</span> <span>true</span><span>)</span><span>.</span><span>expect</span><span>(</span><span>"Failed to load B-field"</span><span>)</span><span>;</span>

<span>for</span> i <span>in</span> <span>0</span>..<span>10_000u32</span> <span>{</span>
    <span>let</span> value = bfield<span>.</span><span>get</span><span>(</span><span>&amp;</span>i<span>.</span><span>to_be_bytes</span><span>(</span><span>)</span><span>.</span><span>to_vec</span><span>(</span><span>)</span><span>)</span><span>;</span>
<span>}</span></pre></div>
<p dir="auto">Additional documentation can be generated using <code>cargo docs</code> and is hosted <a href="https://github.com/onecodex/rust-bfield/blob/main/...">on docs.rs</a> for the latest <code>rust-bfield</code> release.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>🚧 Current Limitations of the <code>rust-bfield</code> Implementation</em></h3><a id="user-content--current-limitations-of-the-rust-bfield-implementation" aria-label="Permalink: 🚧 Current Limitations of the rust-bfield Implementation" href="#-current-limitations-of-the-rust-bfield-implementation"></a></p>
<p dir="auto">This implementation has several current limitations:</p>
<ul dir="auto">
<li>
<strong><code>u32</code> Values</strong>: Currently, this implementation only permits storing <code>u32</code> values, though those can trivially be mapped to any other arbitrary values, e.g., by using them as indices for an array of mapped values (<code>[value1, value2, value3, ...]</code>).</li>
<li>
<strong>No Parameter Selection Assistance</strong>: Currently, the <code>create</code> function requires manually specifying all of the B-field parameters. A future interface might automatically (and deterministically) select optimal parameters based on input information about the number of discrete <code>values</code> ( <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\theta$</math-renderer> below) and desired false positive and indeterminacy error rates ( <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> below, respectively).</li>
<li>
<strong>No Higher-Level Insertion Management</strong>: Because creation of a B-field with no indeterminacy error <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(\beta\approx0)$</math-renderer> requires setting <code>n_secondaries</code> number of inserts (e.g., ~4), it is necessary to iterate through all inserted elements <code>n_secondaries</code> times (see <a href="https://github.com/onecodex/benches/benchmark.rs">benchmark.rs</a> for a crude example). A higher-level insertion function would take an <code>Iterable</code> data structure and manage performing the proper number of repeated insertions for the end-user.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Formal Data Structure Details</h2><a id="user-content-formal-data-structure-details" aria-label="Permalink: Formal Data Structure Details" href="#formal-data-structure-details"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>Overview</em></h3><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">In contrast to Bloom filters, which only support set membership queries, B-fields enable efficiently storing a set of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x, y$</math-renderer> key-value pairs, where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$S$</math-renderer> is the set of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n$</math-renderer> stored <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer> values <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(|S|=n)$</math-renderer>, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$D$</math-renderer> is the set of all possible <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> values <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(f:S \to D)$</math-renderer>, and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\theta$</math-renderer> represents the "value range" of the B-field <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(max(D)=\theta)$</math-renderer>. Put differently, if <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$f(x)=y$</math-renderer> is the function that maps all <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer> values to their corresponding <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> value, such that <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$f(x)=y$</math-renderer>, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$D$</math-renderer> is the domain of the function <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$f(x)$</math-renderer>.</p>
<p dir="auto">B-fields have a number of advantages of other probabilistic and deterministic data structures for associating keys and values. Specifically, B-fields exhibit a unique combination of properties that makes them ideal for storing very large sets of keys mapped to a modest number of discrete values:</p>
<ul dir="auto">
<li>
<strong>Space Efficiency</strong>: B-fields probabilistically store key-value pairs in a highly space-efficient manner optimized for in-memory use. For many common use cases or configurations, it is possible to store many billions of elements using only tens of gigabytes of storage (or a few bytes per key-value pair). These space requirements scale linearly with the number of elements in the B-field <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n$</math-renderer> (i.e., B-fields have <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$O(n)$</math-renderer> space complexity).</li>
<li>
<strong>Speed</strong>: B-fields are optimized for in-memory storage of key-value pairs and require little computational overhead and few memory accesses (implementation speed should resemble that of a Bloom filter). All B-field insert and lookup operations have <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$O(1)$</math-renderer> time complexity.</li>
<li>
<strong>Well-Defined and Bounded Errors</strong>: Three major types of errors are possible with probabilistic associative arrays:
<ul dir="auto">
<li>
<strong>False Positives</strong>: A false positive occurs when a data structure returns a value for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> when <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x\notin S$</math-renderer> (vs. returning <code>None</code> or equivalent). B-fields do exhibit false positives at an error rate of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer>. At the cost of reduced space efficiency, it is possible to select parameters that result in <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> being arbitrarily small. False positives are a common feature of probabilistic data structures, but a disadvantage of the B-field versus deterministic data structures (e.g., a hash table).</li>
<li>
<strong>Indeterminacy</strong>: An indeterminacy error, denoted <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer>, is the rate at which a data structure returns two or more possible values <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> for an element <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x \in S$</math-renderer>. This can take the form of a vector of possible <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> values or an error type (e.g., this implementation returns <code>Indeterminate</code>). While the internal arrays that together comprise a B-field each independently exhibit substantial <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> errors, appropriate B-field parameter selection allows <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta = 0$</math-renderer> or <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta \approx 0$</math-renderer>.</li>
<li>
<strong>Erroneous Retrieval / Mismapping</strong>: An erroneous retrieval or mismapping error <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gamma$</math-renderer> occurs when a data structure is queries for an <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x \in S$</math-renderer> and returns the wrong value of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> such that <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$f(x) \ne y$</math-renderer>. Erroneous retrievals are not possible with B-fields.</li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>Implementing a B-field</em></h3><a id="user-content-implementing-a-b-field" aria-label="Permalink: Implementing a B-field" href="#implementing-a-b-field"></a></p>
<blockquote>
<p dir="auto"><g-emoji alias="warning">⚠️</g-emoji> Warning: This section provides a detailed overview of the math underlying the B-field data structure and is intended for those interested in those mechanics or those implementing a new B-field library. Many readers may prefer to skip ahead to the <a href="#summarizing-b-field-properties">Summarizing B-field Properties</a> subsection.</p>
</blockquote>
<p dir="auto">The B-field works by encoding <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> into a binary pattern or string and then inserting that binary pattern into a series of bit arrays using <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> distinct hash functions <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(h_{1}..h_{k})$</math-renderer> for each inserted element <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer>. While many of the implementation details that follow will be familiar to those acquainted with hash-based data structures in general and Bloom filters specifically, the B-field is designed for storing key-value  pairs rather than simple set membership information. The basic construction of a B-field requires each of the following steps:</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><strong>1. Configuration.</strong></h4><a id="user-content-1-configuration" aria-label="Permalink: 1. Configuration." href="#1-configuration"></a></p>
<p dir="auto">As the first step, the user needs to select several configuration options, which will determinate how the initial B-field is constructed. These key configuration variables are:</p>
<p dir="auto">(a) The desired maximum false positive rate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer>.</p>
<p dir="auto">(b) The expected number of values to be stored <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n$</math-renderer> where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n=|S|$</math-renderer>. If more than <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n$</math-renderer> elements are inserted into the B-field, the expected false positive rate will exceed <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer>.</p>
<p dir="auto">(c) The maximum value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\theta$</math-renderer> of the set of all possible <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> values. Note that using the default encoding system outlined here, the range of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> values <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$D$</math-renderer> must consist of all or a subset of the non-negative integers <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${1, ...,  \theta}$</math-renderer> or <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${0, ..., \theta - 1}$</math-renderer>. This can, however, be easily mapped to any set of up to <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\theta$</math-renderer> distinct values by simply using <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> as an index or pointer to a value in a set <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$D\prime$</math-renderer> where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$|D\prime| = \theta$</math-renderer> (in which case <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> serves as an intermediate value).</p>
<p dir="auto">(d) The value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer> and a value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> such that <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${\nu \choose \kappa}\ge\theta$</math-renderer>, where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${\nu \choose \kappa}$</math-renderer> is simply the combination formula, but using <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer> as the parameter instead of the more common <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n$</math-renderer> (which is used for B-fields and Bloom filters to denote the cardinality of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$S$</math-renderer> or <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$|S|$</math-renderer>) and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> in place of the more common <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> (which is used to enumerate the number of required hash functions <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{1}...h_{k}$</math-renderer>):</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$${\nu \choose \kappa}=\frac{\nu!}{\kappa!(\nu-\kappa)!}$$</math-renderer></p>
<p dir="auto">As the B-field encodes the values <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> in <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length bit-strings with exactly <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> ones (or a Hamming weight of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> in information theoretic terms), it is best to both: (i) minimize <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>; and (ii) keep <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer> within an order of magnitude of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> while selecting <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>. For example, in choosing values for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> such that <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${\nu \choose \kappa} \ge 1000$</math-renderer> it is preferable to set <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu = 20$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa = 3$</math-renderer> <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$({\nu \choose \kappa} = 1140)$</math-renderer> instead of setting <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu = 1000$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa = 1$</math-renderer>. The reasons for this should become clear in the proceeding discussion of error rates and the B-field's operation.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><strong>2. Bit Array Sizing and Hash Function Selection.</strong></h4><a id="user-content-2-bit-array-sizing-and-hash-function-selection" aria-label="Permalink: 2. Bit Array Sizing and Hash Function Selection." href="#2-bit-array-sizing-and-hash-function-selection"></a></p>
<p dir="auto">Next, it is necessary to select a size for the primary bit array used in the B-field and select an appropriate number of hash functions <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer>. As the B-field hashes the input keys into a bit array in a manner similar to a Bloom filter, the same underlying formulas may be used for selecting the optimal size of the bit array and number of hash functions, with the exception that a B-field requires an <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m\kappa$</math-renderer>-bit array vs. the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m$</math-renderer>-bit array required by a simple Bloom filter (here <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$p$</math-renderer> represents the probability of a single bit error, which is defined further below in 5b):</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$m=-\frac{{n\ln p}}{(\ln2)^{2}}$$
$$k=\frac{m}{n}\ln2$$</math-renderer></p>
<p dir="auto">With regards to the selection of the hash function itself, any hash function with good pseudorandomness and distribution qualities will suffice for the B-field. While the prior equations assume a perfectly random hash function, the B-field performs comparably with non-cryptographic hash functions (such as MurmurHash3 or similar hash functions). Again, while the set of hash functions should in theory be fully independent, in practice it is possible (and preferable for performance reasons) to simply use 2 independent hash functions as seeds and then relax the independence requirements for the remaining hash functions, i.e., two seed hash functions <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{a}(x)$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{b}(x)$</math-renderer> can be used to create <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> composite hash functions with each defined as <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{k}(x)=h_{a}(x) \times ((n-1) \times h_{b}(x))$</math-renderer> (see <a href="http://dx.doi.org/10.1002/rsa.20208" rel="nofollow">Kirsch and Mitzenmacher 2008</a> for details)</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><strong>3. Bit Array Allocation.</strong></h4><a id="user-content-3-bit-array-allocation" aria-label="Permalink: 3. Bit Array Allocation." href="#3-bit-array-allocation"></a></p>
<p dir="auto">Now having calculated <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m$</math-renderer> and selected <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>, we allocate an <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m\kappa$</math-renderer>-bit array of memory, setting all bits initially to 0. Note that the B-field may make use of multiple bit arrays and this initial <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m\kappa$</math-renderer>-bit array is termed the B-field <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><strong>4. Key-Value Insertion.</strong></h4><a id="user-content-4-key-value-insertion" aria-label="Permalink: 4. Key-Value Insertion." href="#4-key-value-insertion"></a></p>
<p dir="auto">Next, the keys of the B-field <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(x_{1}...x_{n})$</math-renderer> and their corresponding values <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(y_{1}...y_{n})$</math-renderer> are inserted. This requires two steps or functions for all <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer> in <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{1}...x_{n}$</math-renderer>.</p>
<p dir="auto">(a) <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{ENCODE}$</math-renderer>. The <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{ENCODE}$</math-renderer> operation translates a given value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> into a binary <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length string with <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> 1s for insertion into the B-field primary array <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(\mathtt{Array_{0}})$</math-renderer>. Using the standard encoding system, this simply involves translating <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> into the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y^{th}$</math-renderer> <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>-weight bit-string of all <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu \choose \kappa$</math-renderer> combinations in lexicographic order (e.g., 1 translates to <code>0001</code> if <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu = 4$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa = 1$</math-renderer>). Other even- and uneven-weighted coding schemes could also be used in this step (e.g., error-correcting codes), but are not detailed or further evaluated here. Figure 1 illustrates how the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{ENCODE}$</math-renderer> (and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{DECODE}$</math-renderer>) operation works where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu = 5, \kappa = 2$</math-renderer>.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/onecodex/rust-bfield/blob/main/docs/imgs/figure1.png"><img src="https://github.com/onecodex/rust-bfield/raw/main/docs/imgs/figure1.png" alt="Figure 1"></a></p>
<p dir="auto"><strong>Figure 1:</strong> Sample <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{ENCODE}$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{DECODE}$</math-renderer> operations for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu = 5$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa = 2$</math-renderer>.</p>
<p dir="auto">(b) <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer>. The <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer> operation places the coded value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> (associated with the key <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer>) into the B-field. First, the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> hash functions are applied to <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer> <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(h_{1}(x)...h_{k}(x))$</math-renderer> and the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{mod}(m\kappa)$</math-renderer> of each value is taken (i.e., the modulo operation is applied to the hashed value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h(x)$</math-renderer> using the size of the bit array <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m\kappa$</math-renderer>). These <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> hashed values, where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$0 \le h(x) \mathtt{mod} m\kappa \le m\kappa$</math-renderer>, serve as indices for the bitwise OR insertion of the coded value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer>, where the first bit of the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length bit-string is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h(x) \mathtt{mod} m\kappa$</math-renderer> and the last bit is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h(x) \mathtt{mod} m\kappa + \nu - 1$</math-renderer>. In the case of inserting the first <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x, y$</math-renderer> key-value pair into an empty <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k=6, \nu=5, \kappa=2$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y=2$</math-renderer> (impractically small values but useful for illustration), the result would be bitwise ORing the bit-string <code>00101</code> into the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m\kappa$</math-renderer>-bit array 6 times <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(k=6)$</math-renderer> and flipping a total of 12 bits from 0 to 1 (<math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k \times \kappa$</math-renderer>). Figure 2 illustrates a sample <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer> operation for a key-value pair where the value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y=2$</math-renderer> and the B-field is configured with <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu = 5, \kappa = 2$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k=6$</math-renderer>. The pictured operation is the same for insertion into <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> or any secondary array (described further below).</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/onecodex/rust-bfield/blob/main/docs/imgs/figure2.png"><img src="https://github.com/onecodex/rust-bfield/raw/main/docs/imgs/figure2.png" alt="Figure 2"></a></p>
<p dir="auto"><strong>Figure 2:</strong> Sample <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer> operation: (a) Hash an input key <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer> <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> times, providing <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> indices for positions in a B-field array; (b) Encode the value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> associated with the key <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer> into a <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>-weight bit-string (here <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y=2, \nu=5$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa=2$</math-renderer>); and (c) Perform a bitwise OR between a <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length slice of the array and the encoded <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length bit-string representing the coded value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer>, for all <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> hash functions <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{1}(x)...h_{k}(x)$</math-renderer>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><strong>5. Construction of Subsequent B-field Arrays</strong></h4><a id="user-content-5-construction-of-subsequent-b-field-arrays" aria-label="Permalink: 5. Construction of Subsequent B-field Arrays" href="#5-construction-of-subsequent-b-field-arrays"></a></p>
<p dir="auto">In order to describe the construction of subsequent arrays <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}...\mathtt{Array_{a-1}}$</math-renderer> where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$a$</math-renderer> is the total number of bit arrays in the B-field, we briefly highlight: (a) how the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation is performed; and (b) the different types of error in the B-field as constructed thus far.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><strong>5(a). The <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation.</strong></h4><a id="user-content-5a-the-mathttlookup-operation" aria-label="Permalink: 5(a). The $\mathtt{LOOKUP}$ operation." href="#5a-the-mathttlookup-operation"></a></p>
<p dir="auto">The <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation mirrors the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer>. For a given <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i}$</math-renderer>, we hash <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i}$</math-renderer> <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> times using the hash functions <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{1}...h_{k}$</math-renderer> (all <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{mod} m\kappa$</math-renderer>). At each index position for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{1}(x_{i})...h_{k}(x_{i})$</math-renderer> a <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length bit string is taken and bitwise ANDed with an initial <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length bit-string consisting of all 1s (i.e., having a Hamming weight of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>). Using the values from the prior example in Figure 2, if the following 6 5-bit strings <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${10101, 11111, 00111, 11111, 00101, 11101}$</math-renderer> are found in the B-field <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> at <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{1}(x_{i})...h_{k}(x_{i})$</math-renderer>, the bitwise AND of these returns <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$00101$</math-renderer> which we <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{DECODE}$</math-renderer> to the yield the value 2 for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y_{i}$</math-renderer>. Figure 3 details this sample <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation.</p>
<p dir="auto">A <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation can yield any of the following:</p>
<ul dir="auto">
<li>
<p dir="auto">A bit string with a Hamming weight <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\lt \kappa$</math-renderer> indicates <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x \notin S$</math-renderer>. This is due to the fact that the <code>INSERT</code> operation detailed in 4(b) inserts <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> 1s with a bitwise OR, guaranteeing that at least <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> 1s will be returned via any subsequent <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> of the same element. In this case, a B-field implementation should return <code>None</code> or a similar value that represents an <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i} \notin S$</math-renderer>.</p>
</li>
<li>
<p dir="auto">A bit string with a Hamming weight <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$=\kappa$</math-renderer>. In this case, we <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{DECODE}$</math-renderer> the resulting bit string (simply the inverse of the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{ENCODE}$</math-renderer> operation detailed in Figure 1) and the value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y_{i}$</math-renderer> mapping to the key <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i}$</math-renderer> is returned. This operation will erroneously return a <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y_{i}$</math-renderer> for an <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x \notin S$</math-renderer> at the false positive rate of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> (derived below in 5(b)).</p>
</li>
<li>
<p dir="auto">Finally, a bit string with a Hamming weight of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gt \kappa$</math-renderer> will be retrieved with a probability of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> (also derived below in 5(b)). This represents an <code>Indeterminate</code> result with more than <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> 1s. The dramatic reduction of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> is achieved via the construction of subsequent B-field arrays <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}...\mathtt{Array_{a-1}}$</math-renderer>.</p>
</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/onecodex/rust-bfield/blob/main/docs/imgs/figure3.png"><img src="https://github.com/onecodex/rust-bfield/raw/main/docs/imgs/figure3.png" alt="Figure 3"></a></p>
<p dir="auto"><strong>Figure 3:</strong> Sample <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation: (a) A key <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer> is hashed <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> times, and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>-weight bit strings are extracted from the B-field array; (b) The <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> bit strings are bitwise ANDed together; and (c) The resulting bit string is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{DECODE}$</math-renderer>-ed to recover the value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> associated with the key <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><strong>5(b). B-field error rates detailed.</strong></h4><a id="user-content-5b-b-field-error-rates-detailed" aria-label="Permalink: 5(b). B-field error rates detailed." href="#5b-b-field-error-rates-detailed"></a></p>
<p dir="auto">As noted above, the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation in B-field <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> suffers from both false positive <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(\alpha)$</math-renderer> and indeterminacy <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(\beta)$</math-renderer> errors. These error rates can be simply derived based on the above <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer> operation's mechanics, which sets up to <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> random bits within the bit array to 1 for each of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> hash functions. Note that these properties and error rates mirror those of a Bloom filter and, indeed, a B-field where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu = 1, \kappa = 1$</math-renderer> and only a single bit array is used <em>is equivalent to a Bloom filter</em> (since it sets a single bit with each operation).</p>
<p dir="auto">First, we need to determine the probability that any single bit in the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length bit string will be incorrect after the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> bit strings are bitwise ANDed together (described here as <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$p$</math-renderer>, the probability of a single bit error). The probability that an individual bit is <strong>not set</strong> to 1 by a single hash function (each of which flips <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> bits) during the insertion of an element <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i}$</math-renderer> is:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$1-\frac{\kappa}{m\kappa}$$</math-renderer></p>
<p dir="auto">We can then cancel out <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$1-\frac{1}{m}$$</math-renderer></p>
<p dir="auto">Thus, the probability that a single bit is <strong>not set</strong> for any of the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> hash functions is:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$(1-\frac{1}{m})^{k}$$</math-renderer></p>
<p dir="auto">After <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n$</math-renderer> insertions of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{1}...x_{n}$</math-renderer> into a bit array, the probability that a given bit remains 0 is:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$(1 - \frac{1}{m})^{kn}$$</math-renderer></p>
<p dir="auto">And the probability that it is set to 1 is:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$1-(1 - \frac{1}{m})^{kn}$$</math-renderer></p>
<p dir="auto">After each of the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> individual accesses that comprise the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation for a given bit array (one per hash function), the probability than an individual bit is incorrectly set to 1 is:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$(1-(1-\frac{1}{m})^{kn})^{k} \approx (1-e^{-kn/m})^{k}$$</math-renderer></p>
<p dir="auto">Substituting the formulas for optimal <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$k$</math-renderer> values from above yields:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$p=(1-e^{(-m/n \ln 2)n/m})^{(m/n \ln 2)}$$</math-renderer></p>
<p dir="auto">Where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$p$</math-renderer> is the probability that a given bit in the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-bit string encoding a given value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y_{i}$</math-renderer> is set to 1 before an <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer> operation is performed (i.e., that a subsequent <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> will fail with a false positive or indeterminacy error).</p>
<p dir="auto">Using <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$p$</math-renderer>, we can then derive the probability of a false positive for the overall <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> of the B-field <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(\alpha_{0})$</math-renderer>. Since a false positive is defined as there being <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gt \kappa$</math-renderer> bits flipped to 1 in a <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-bit string, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha_{0}$</math-renderer> is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathit{CumBinom}(\nu, \kappa, p)$</math-renderer> where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathit{CumBinom}$</math-renderer> is the right tail of the cumulative binomial distribution:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$\alpha=Pr(X\ge\kappa)=\sum_{i=\kappa}^{\nu}{\nu \choose i}p^{i}(1-p)^{\nu-i}$$</math-renderer></p>
<p dir="auto">And, correspondingly, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> is the probability that a given value <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x \in S$</math-renderer> returns a <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length bit string with <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gt \kappa$</math-renderer> bits flipped to 1 (at least <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> bits are guaranteed to be set ot 1 by the <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer> operation). This corresponds to <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathit{CumBinom}(\nu - \kappa, 1, p)$</math-renderer>. Without correction, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> is too high for many applications (though usable for others), and consequently, the next step in the B-field's construction is an effort to correct <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> such that <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta \approx 0$</math-renderer>. This correction reduces <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> from the cumulative binomial distribution for all values <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\ge \kappa$</math-renderer> to the binomial distribution for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> exactly, which is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${\nu \choose \kappa}p^{\kappa}(1-p)^{\nu-\kappa}$</math-renderer>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><strong>5(c). Reduction of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> Error through Construction of Additional Bit Arrays</strong></h4><a id="user-content-5c-reduction-of-beta-error-through-construction-of-additional-bit-arrays" aria-label="Permalink: 5(c). Reduction of $\beta$ Error through Construction of Additional Bit Arrays" href="#5c-reduction-of-beta-error-through-construction-of-additional-bit-arrays"></a></p>
<p dir="auto">Given these error rates <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer>, an additional correction is desirable. In order to (nearly) eliminate the indeterminacy error rate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> (and as a side effect, greatly reduce the magnitude of the false positive error rate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer>), we iterate through all of the input keys <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{1}...x_{n}$</math-renderer> an additional time after the first complete insert into <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer>. This time, however, instead of inserting them into <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer>, we perform a <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> operation and note the Hamming weight of each <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-bit string <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(w_{i})$</math-renderer> for each <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i}$</math-renderer>. If <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$w_{i} \gt \kappa$</math-renderer>, we have an indeterminacy error as a known <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x \in S$</math-renderer> is not returning its corresponding <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>-length <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>-weight bit string. The subset of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{1}...x_{n}$</math-renderer> for which <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$w_{i} \gt \kappa$</math-renderer> to include <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta n$</math-renderer> elements. This <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta n$</math-renderer> subset is then inserted into a second array <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}$</math-renderer>, which is created following the above steps except it is scaled down to be a <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\approx \beta m\kappa$</math-renderer> bits in size and stores only <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta n$</math-renderer> elements instead of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n$</math-renderer> key-value pairs.</p>
<p dir="auto">This secondary array <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}$</math-renderer> allows for an indeterminate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{LOOKUP}$</math-renderer> of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i}$</math-renderer> in <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> yield <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gt \kappa$</math-renderer> 1 bits to have a <em>second</em> lookup performed against <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}$</math-renderer>. Since the probability of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i}$</math-renderer> yielding <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gt \kappa$</math-renderer> 1 bits is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> and also <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}$</math-renderer> (which shares identical parameters except for its overall size and number of stored key-value pairs), the indeterminacy rate is reducted from <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> to <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta^2$</math-renderer> with the addition of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}$</math-renderer>.</p>
<p dir="auto">Further arrays <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{2}}...\mathtt{Array_{a-1}}$</math-renderer> can be added until a set of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$a$</math-renderer> arrays is formed, choosing <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$a$</math-renderer> such that <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta^{a}n \lt 1$</math-renderer> (though in practice, it will often suffice to simply pick a value of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$a$</math-renderer> such that only a handful of elements in <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$n$</math-renderer> will be inserted into <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{a-1}}$</math-renderer>). These secondary arrays also have the effect of lowering the false positive rate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> because a false positive where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i} \notin S$</math-renderer> yielding <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gt \kappa$</math-renderer> 1 bits also leads to a check against <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}$</math-renderer> (and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{2}}...\mathtt{Array_{a-1}}$</math-renderer> as appropriate). This reduces the false positive rate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> from the cumulative binomial towards the simple binomial <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${\nu \choose \kappa}p^{\kappa}(1-p)^{\nu-\kappa}$</math-renderer>. Alternatively, we can understand this as reducing the set of circumstances where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> errors can occur from anytime <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\ge \kappa$</math-renderer> 1 bits are flipped for an <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i} \notin S$</math-renderer> to two cases: (1) when exactly <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> 1 bits in <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> for an <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x_{i} \notin S$</math-renderer> (the simple binomial); or (2) the exceedingly rare case where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gt \kappa$</math-renderer> 1 bits are flipped in <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}...\mathtt{Array_{a-2}}$</math-renderer> and exactly <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> bits are flipped in <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{a-1}}$</math-renderer>. The probability of the second case should be <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\approx 0$</math-renderer> as the chance of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\gt \kappa$</math-renderer> bits flipping decreases exponentially with the addition of each secondary.</p>
<p dir="auto">To summarize, this cascade of secondary arrays beyond <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(\mathtt{Array_{1}}...\mathtt{Array_{a-1}})$</math-renderer> reduces the false positive rate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\alpha$</math-renderer> from a cumulative binomial distribution to the binomial for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> individual bit-level errors and eliminates all indeterminacy errors (i.e., <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta = 0$</math-renderer> or <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta \approx 0$</math-renderer>). And, this error reduction is achieved at quite modest cost to the space efficiency of the B-field. Recall that the original space requirements for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> of the B-field is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m\kappa$</math-renderer> bits where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m=-\frac{n \ln \alpha}{(\ln 2)^{2}}$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer> is selected for <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">${\nu \choose \kappa} \gt \theta$</math-renderer> where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\theta$</math-renderer> is the maximum value of the domain of stores values <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y_{1}...y_{n}$</math-renderer> or <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$|D|$</math-renderer> in the case where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y_{1}...y_{n}$</math-renderer> is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$1...n$</math-renderer>. Consequently, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> requires <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta^{0}m\kappa$</math-renderer> bits, while <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{1}}$</math-renderer> requires <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta^{1}m\kappa$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{a-1}}$</math-renderer> requires <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta^{a-1}m\kappa$</math-renderer>. Dividing everything by <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m\kappa$</math-renderer> bits reveals the underlying geometreic series:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$1+\beta^{1}+...+\beta^{a-1}$$</math-renderer></p>
<p dir="auto">The sum of which is simply:</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$$\frac{1}{1 - \beta}$$</math-renderer></p>
<p dir="auto">Thus, the total space requirements for a B-field with a primary <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$a - 1$</math-renderer> secondary arrays is only <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\frac{1}{1-\beta}m\kappa$</math-renderer> bits. In many uses cases, an initial uncorrected indeterminacy rate of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$0.05 \le \beta \le 0.20$</math-renderer> would not be uncommon. Correcting this for a 5.3% <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(\frac{1}{0.95})$</math-renderer> or 25.0% <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(\frac{1}{0.80})$</math-renderer> space penalty is generally a good tradeoff, though a B-field can be constructed with only <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> at the cost of needing to manage <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> indeterminacy errors in the key-value lookups.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>Summarizing B-field Properties</em></h3><a id="user-content-summarizing-b-field-properties" aria-label="Permalink: Summarizing B-field Properties" href="#summarizing-b-field-properties"></a></p>
<p dir="auto">To briefly summarize, a B-field is a probabilistic associative array or map with the following unique set of properties:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Creation &amp; Insertions</strong>: <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$O(n)$</math-renderer> total creation time and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$O(1)$</math-renderer> insertions, requiring an average of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\frac{\kappa}{1-\beta}$</math-renderer> hash computations and memory accesses, and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$a\kappa$</math-renderer> hash computations and memory accesses in the worst case. A common value of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$a$</math-renderer> would be <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\approx 4$</math-renderer>.</p>
</li>
<li>
<p dir="auto"><strong>Lookups</strong>: <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$O(1)$</math-renderer> lookups, requiring the same number of hash computations and memory accesses as an insertion.</p>
</li>
<li>
<p dir="auto"><strong>Space Complexity</strong>: <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$O(n)$</math-renderer> space complexity, requiring <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\frac{m\kappa}{1-\beta}$</math-renderer> bits where <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m$</math-renderer>, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>, and <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer> are defined above ( <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> requires <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$m\kappa$</math-renderer> bits, while the entire B-field requires an additional factor of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$1 - \frac{1}{1-\beta}$</math-renderer>).</p>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>Parameter Selection</em></h3><a id="user-content-parameter-selection" aria-label="Permalink: Parameter Selection" href="#parameter-selection"></a></p>
<p dir="auto">An efficient B-field requires optimal selection of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\nu$</math-renderer>, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\kappa$</math-renderer>, the B-field <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{Array_{0}}$</math-renderer> size <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$(m\kappa)$</math-renderer>, and calculation of the required scaling factor for secondary arrays (uncorrected <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\beta$</math-renderer>). The
<a href="https://github.com/onecodex/docs/notebook/calculate-parameters.ipynb">parameter selection notebook</a> included here provides a template for computing these parameters.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>Extensions</em></h3><a id="user-content-extensions" aria-label="Permalink: Extensions" href="#extensions"></a></p>
<p dir="auto">A number of additional extensions to the B-field design are possible, but not implemented here. Several are outlined below:</p>
<ul dir="auto">
<li>
<strong>Mutability</strong>: While this implementation is designed to support immutable B-fields, it is possible to implement a mutable B-field. For example, <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\mathtt{INSERT}$</math-renderer> operations may be saved and replayed in a continuous or batch fashion to ensure that all elements <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x \in S$</math-renderer> are properly inserted into a B-field's primary and secondary arrays.</li>
<li>
<strong>Cache Locality</strong>: Optimize the speed of memory accesses by setting a subset of the hash functions <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{1}(x)...h_{k}(x)$</math-renderer> to perform lookups at a small fixed offset from a prior memory access (i.e., set <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{2}(x)$</math-renderer> to select a random location within a fixed window after <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$h_{1}(x)$</math-renderer> in order to take advantage of cache locality).</li>
<li>
<strong>Alternative encoding schemes</strong>: While the above simple encoding scheme is well suited to relatively well distributed <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> values across a domain <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$\theta$</math-renderer>, it is possible to change the encoding scheme to, for example, (i) use an error-correcting code or (ii) use different weights for the subset of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> values that occur more frequently (to have the effect of minimizing the "fill" of the B-field arrays) amongst other possibilities.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>When to Consider Alternative Data Structures</em></h3><a id="user-content-when-to-consider-alternative-data-structures" aria-label="Permalink: When to Consider Alternative Data Structures" href="#when-to-consider-alternative-data-structures"></a></p>
<ul dir="auto">
<li>An associative array or map (e.g., a simple hash table) is likely a better choice when storing <code>(x, y)</code> pairs with many distinct <code>y</code> values (e.g., storing 1M keys with 800,000 distinct values). See <a href="#formal-data-structure-overview">Formal Data Structure Overview</a> and <a href="#parameter-selection">Parameter Selection</a> for further details on optimal use cases for a B-field.</li>
<li>A <a href="https://en.wikipedia.org/wiki/Perfect_hash_function#Minimal_perfect_hash_function" rel="nofollow">[minimal] perfect hash function</a> (possibly paired with a Bloom filter or other data structure supporting set membership queries) is a better choice for any injective function mappings, where there is one unique <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$y$</math-renderer> value <em>for each</em> <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="0a186f64e5a6107a8669f1f00105361e">$x$</math-renderer> (e.g., de Bruijn graph implementations)</li>
<li>Despite <a href="">reducing to a Bloom filter when configured with the appropriate parameters</a>, a Bloom filter (or perhaps <a href="https://lemire.me/blog/2019/12/19/xor-filters-faster-and-smaller-than-bloom-filters/" rel="nofollow">xor filter</a>) is a better choice than a B-field for supporting simple set membership queries</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>History</em></h3><a id="user-content-history" aria-label="Permalink: History" href="#history"></a></p>
<p dir="auto">The B-field data structure was developed by Nick Greenfield (<a href="https://github.com/boydgreenfield">@boydgreenfield</a>) in collaboration with Nik Krumm (<a href="https://github.com/nkrumm">@nkrumm</a>) in 2013 as part of a metagenomics classifier developed under DTRA's 2013 Algorithm Challenge (some details on on Jonathan Eisen's blog <a href="https://phylogenomics.me/tag/dtra/" rel="nofollow">here</a>, primary content no longer online). After initial proof-of-concept implementations in Python, Cython, and C, a Nim implementation was developed in 2014 by <a href="https://github.com/boydgreenfield">@boydgreenfield</a> and used in production for ~4 years as part of One Codex's core metagenomics classifier (first described <a href="https://www.biorxiv.org/content/10.1101/027607v2" rel="nofollow">here</a>). Dominik Picheta (<a href="https://github.com/dom96">@dom96</a>) and Alex Bowe (<a href="https://github.com/alexbowe">@alexbowe</a>) contributed additional enhancements and ideas to the <code>nim-bfield</code> implementation in 2015.</p>
<p dir="auto">In 2017, Roderick Bovee (<a href="https://github.com/bovee">@bovee</a>) ported the <code>nim-bfield</code> library to this implementation in Rust, which continues to be used in the second-generation metagenomics classifier backing the One Codex platform. Vincent Prouillet (<a href="https://github.com/Keats">@Keats</a>) and Gerrit Gerritsen (<a href="https://github.com/GSGerritsen">@GSGerritsen</a>) contributed additional work (and documentation!) since 2020, and maintains the <code>rust-bfield</code> crate.</p>
<p dir="auto">In February 2021, One Codex was acquired by Invitae, where this library continued to be used as part of its metagenomics classification platform. In September 2022, the One Codex team spun the company back out of Invitae and decided to open source and make the B-field library freely available. We have done our best to document it here, and hope you find it useful! ❤️</p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><em>Other Use Cases</em></h3><a id="user-content-other-use-cases" aria-label="Permalink: Other Use Cases" href="#other-use-cases"></a></p>
<p dir="auto">If you find this crate helpful, we'd love to hear from you and document your use case here. Please feel free to open a PR against this section of the README or <a href="mailto:hello@onecodex.com">drop us an email</a>! 👋</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This source code is made available under the Apache 2 license with a patent grant (in order to ensure unencumbered use of the <code>rust-bfield</code> crate given a <a href="https://patents.google.com/patent/US20220093210A1/en" rel="nofollow">2014 patent</a>).</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[One-third of Amazon warehouse workers are on food stamps or Medicaid (372 pts)]]></title>
            <link>https://twitter.com/DanPriceSeattle/status/1791299631558823954</link>
            <guid>40443907</guid>
            <pubDate>Wed, 22 May 2024 17:52:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/DanPriceSeattle/status/1791299631558823954">https://twitter.com/DanPriceSeattle/status/1791299631558823954</a>, See on <a href="https://news.ycombinator.com/item?id=40443907">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Windows Recall sounds like a privacy nightmare (281 pts)]]></title>
            <link>https://www.techradar.com/computing/computing-security/windows-recall-sounds-like-a-privacy-nightmare-heres-why-im-worried</link>
            <guid>40443682</guid>
            <pubDate>Wed, 22 May 2024 17:33:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.techradar.com/computing/computing-security/windows-recall-sounds-like-a-privacy-nightmare-heres-why-im-worried">https://www.techradar.com/computing/computing-security/windows-recall-sounds-like-a-privacy-nightmare-heres-why-im-worried</a>, See on <a href="https://news.ycombinator.com/item?id=40443682">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">

<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-1200-80.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-1920-80.jpg.webp 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-320-80.jpg" alt="A person spying through a gap of light" srcset="https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n.jpg"></picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/tdJehZYyUB9RY3HogJY22n.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Shutterstock)</span>
</figcaption>
</div>

<div id="article-body">
<p>When I first heard about Recall, I immediately buried my face in my hands. I never thought I'd see such a glaring target be created by <a data-analytics-id="inline-link" href="https://www.techradar.com/tag/microsoft" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.techradar.com/tag/microsoft">Microsoft</a>, never mind it being marketed as a <em>feature</em>.</p><p>If you haven't read about it yet, <a data-analytics-id="inline-link" href="https://www.techradar.com/computing/windows/microsoft-reveals-ai-powered-recall-feature-to-transform-windows-11s-searchability-while-confirming-hardware-requirements" data-before-rewrite-localise="https://www.techradar.com/computing/windows/microsoft-reveals-ai-powered-recall-feature-to-transform-windows-11s-searchability-while-confirming-hardware-requirements">Recall is an AI feature coming to Windows 11</a> Copilot+ PCs. It's designed to let you go back in time on your computer by "taking images of your active screen every few seconds" and analyzing them with AI, according to <a data-analytics-id="inline-link" href="https://click.linksynergy.com/deeplink?id=kXQk6%2AivFEQ&amp;mid=24542&amp;u1=trd-us-6733739301309769129&amp;murl=https%3A%2F%2Fwww.microsoft.com%2Fen-us%2Fwindows%2Fcopilot-plus-pcs%23faq1" target="_blank" data-url="https://www.microsoft.com/en-us/windows/copilot-plus-pcs#faq1" referrerpolicy="no-referrer-when-downgrade" rel="sponsored noopener" data-hl-processed="hawklinks" data-placeholder-url="https://click.linksynergy.com/deeplink?id=kXQk6%2AivFEQ&amp;mid=24542&amp;u1=hawk-custom-tracking&amp;murl=https%3A%2F%2Fwww.microsoft.com%2Fen-us%2Fwindows%2Fcopilot-plus-pcs%23faq1" data-google-interstitial="false" data-merchant-name="microsoft.com" data-merchant-id="1855" data-merchant-url="microsoft.com" data-merchant-network="LS">Microsoft's Recall FAQs</a>. If anyone other than you gets access to that Recall data, it could be disastrous.</p><div><blockquote data-lang="en"><p lang="en" dir="ltr">Satya Nadella says Windows PCs will have a photographic memory feature called Recall that will remember and understand everything you do on your computer by taking constant screenshots pic.twitter.com/Gubi4DGHcs<a href="https://twitter.com/tsarnick/status/1792680674060832829" data-url="https://twitter.com/tsarnick/status/1792680674060832829" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">May 20, 2024</a></p></blockquote></div><p>This might sound familiar, and that's because it's remarkably similar to the failed and <a data-analytics-id="inline-link" href="https://www.techradar.com/news/microsoft-is-killing-off-one-of-the-best-windows-10-work-tools" data-before-rewrite-localise="https://www.techradar.com/news/microsoft-is-killing-off-one-of-the-best-windows-10-work-tools">shelved Timeline</a> feature back on <a data-analytics-id="inline-link" href="https://www.techradar.com/tag/windows-10" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.techradar.com/tag/windows-10">Windows 10</a>. However, unlike Timeline, Recall doesn't just restore a version of your desktop files, it uses <a data-analytics-id="inline-link" href="https://www.techradar.com/news/what-is-ai-everything-you-need-to-know" data-before-rewrite-localise="https://www.techradar.com/news/what-is-ai-everything-you-need-to-know">AI</a> to take you back to that moment, even opening relevant apps.</p><h2 id="what-apos-s-the-problem-with-windows-recall-3">What's the problem with Windows Recall?</h2><p>On the surface, this <em>sounds</em> like a cool feature, but that paranoid privacy purist in the back of my mind is burying his face in a pillow and screaming. Imagine if almost everything you had done for the past three months was recorded for anyone with access to your computer to see. Well, if you use Recall, you won't have to imagine.</p><p>That might seem like an overreaction, but let me explain: Recall is <a data-analytics-id="inline-link" href="https://www.techradar.com/how-to/how-to-take-a-screenshot-in-windows-11" data-before-rewrite-localise="https://www.techradar.com/how-to/how-to-take-a-screenshot-in-windows-11">taking screenshots</a> every few seconds and storing them on your device. Adding encryption into the mix, that's an enormous amount of bloaty visual data that will show <em>almost everything </em>you've been doing on your computer during that period.</p><p>As Microsoft explains, "The default allocation for Recall on a device with 256 GB will be 25 GB, which can store approximately 3 months of snapshots. You can increase the storage allocation for Recall in your PC Settings. Old snapshots will be deleted once you use your allocated storage, allowing new ones to be stored."</p><p>This is worse than keylogging! Recall isn't just recording what you type, it's recording everything you're doing, with photo evidence, every three seconds.</p><figure><blockquote><p>This is worse than keylogging!</p></blockquote></figure><p>I say <em>almost</em> everything because Microsoft claims "Recall also does not take snapshots of certain kinds of content, including InPrivate web browsing sessions in Microsoft Edge. It treats material protected with digital rights management (DRM) similarly; like other Windows apps such as the Snipping Tool, Recall will not store DRM content." That's reassuring on the surface, but it's still far too vague for anyone to actually have any faith in it.&nbsp;</p><p>Will this only work on <a data-analytics-id="inline-link" href="https://www.techradar.com/reviews/pc-mac/software/utilities/other-software/microsoft-edge-1292485/review" data-before-rewrite-localise="https://www.techradar.com/reviews/pc-mac/software/utilities/other-software/microsoft-edge-1292485/review">Microsoft Edge</a>, or will it integrate with Chrome and Firefox too? If it only works with Edge, that feels like an egregious walling off of privacy for not using Microsoft's unpopular <a data-analytics-id="inline-link" href="https://www.techradar.com/best/browser" data-before-rewrite-localise="https://www.techradar.com/best/browser">web browser</a>.</p><p>But that's just the tip of the iceberg. Microsoft openly admits that Recall will be taking screenshots of your passwords and private data:</p><p>"Note that Recall does not perform content moderation. It will not hide information such as passwords or financial account numbers. That data may be in snapshots that are stored on your device, especially when sites do not follow standard internet protocols like cloaking password entry."</p><p>So, what you could have here is something that stores your passwords, your information, your account details, etc, and that is visible to anyone on your profile. If you only have one profile for your device, that means everyone with access to that PC will be able to see your Recall data.</p><p>Arguably, the worst part about this is that it will be on by default once you activate your device. Microsoft states:&nbsp;</p><figure><blockquote><p>On by default</p></blockquote></figure><p>"On Copilot+ PCs powered by a Snapdragon® X Series processor, you will see the Recall taskbar icon after you first activate your device. You can use that icon to open Recall’s settings and make choices about what snapshots Recall collects and stores on your device."</p><p>I think this is a bad idea. The decision should be made by the individual, and not by Windows. Having it immediately active just means that uninformed people may not be able to act upon this. In my eyes, it's akin to cookie tracking – it can be just as invasive. All of this makes me wonder whether it may hit a snag with <a data-analytics-id="inline-link" href="https://ico.org.uk/for-organisations/uk-gdpr-guidance-and-resources/lawful-basis/consent/what-is-valid-consent/" target="_blank" data-url="https://ico.org.uk/for-organisations/uk-gdpr-guidance-and-resources/lawful-basis/consent/what-is-valid-consent/" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">consent under GDPR</a>.</p><h2 id="is-microsoft-making-recall-secure-3">Is Microsoft making Recall secure?</h2><p>In defense of Microsoft, I'd like it to be known that there was an <em>attempt </em>to make it secure. I don't think it was a very good one, but there was an attempt.</p><p>Microsoft states that "Recall snapshots are kept on Copilot+ PCs themselves, on the local hard disk, and are protected using data encryption on your device and (if you have <a data-analytics-id="inline-link" href="https://www.techradar.com/tag/windows-11" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.techradar.com/tag/windows-11">Windows 11</a> Pro or an enterprise <a data-analytics-id="inline-link" href="https://www.techradar.com/tag/windows-11" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.techradar.com/tag/windows-11">Windows 11</a> SKU) BitLocker." From the wording here, that looks like your snapshots will only be encrypted if you have Windows Pro or a business Windows code.&nbsp;</p><p>The omission of Windows Home users is horrifying. If this <em>is</em> the case, it leaves everyday people vulnerable if their devices are compromised.&nbsp;People shouldn't have to pay a premium and upgrade to protect their privacy on an <a data-analytics-id="inline-link" href="https://www.techradar.com/tag/operating-system" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.techradar.com/tag/operating-system">operating system</a> that's snapshotting their screen every few seconds.</p><figure><blockquote><p>People shouldn't have to pay a premium and upgrade to protect their privacy</p></blockquote></figure><p>The big question, though, is what kind of encryption is being used? I've been working with <a data-analytics-id="inline-link" href="https://www.techradar.com/vpn/virtual-private-networks" data-before-rewrite-localise="https://www.techradar.com/vpn/virtual-private-networks">virtual private network (VPN)</a> encryption for a while now, and just because something is "encrypted" doesn't mean it's safe. In fact, with developments in <a data-analytics-id="inline-link" href="https://www.techradar.com/news/how-quantum-computing-will-challenge-security" data-before-rewrite-localise="https://www.techradar.com/news/how-quantum-computing-will-challenge-security">quantum computing</a>, encryption is under threat, and even the <a data-analytics-id="inline-link" href="https://www.techradar.com/vpn/best-vpn" data-before-rewrite-localise="https://www.techradar.com/vpn/best-vpn">best VPN</a> services are having to come up with quantum-secure encryption methods. We've already seen that <a data-analytics-id="inline-link" href="https://www.techradar.com/pro/security/bad-news-for-bitlocker-users-its-encryption-can-be-cracked-remarkable-easily" data-before-rewrite-localise="https://www.techradar.com/pro/security/bad-news-for-bitlocker-users-its-encryption-can-be-cracked-remarkable-easily">BitLocker can be cracked</a>.</p><p>Another note in Microsoft's favor is that the data is stored locally and encrypted, rather than it being uploaded to a cloud server for Microsoft to access.</p><p>"Recall screenshots are only linked to a specific user profile and Recall does not share them with other users, make them available for Microsoft to view, or use them for targeting advertisements."</p><p>This means that, for now, Microsoft isn't peeking behind the curtain. But that doesn't guarantee that'll be the case forever. If Microsoft can legally find a way to make money out of this tool, my guess is that they'll try. For now, the push seems to be to persuade people to upgrade their OS.</p><p>If you're one of those households that has different profiles for each person on the family PC, you can claw back a little bit of privacy.&nbsp;</p><p>"Screenshots are only available to the person whose profile was used to sign in to the device. If two people share a device with different profiles they will not be able to access each other’s screenshots. If they use the same profile to sign-in to the device then they will share a screenshot history. Otherwise, Recall screenshots are not available to other users or accessed by other applications or services."</p><p>The problem is, that's only helpful if you password-protect your profile, and if someone sets parental controls on your profile, that <em>could</em> give them a backdoor.</p><h2 id="what-are-the-security-risks-with-recall-3">What are the security risks with Recall?</h2><p>You're probably thinking "so what?" So let me give you a few scenarios where this could be a problem:&nbsp;</p><ul><li><strong>You're using a public computer:</strong> let's say you do some online shopping or banking on a library computer. You didn't realize Recall was active, and now the person using the computer after you has just gone into the Recall archive to pull up all of your bank details, your address, and your passwords. It's like handing your house keys over to a burglar before telling them you're going on holiday for the week.</li><li><strong>You're using a work laptop:</strong> we've all used a company computer for personal reasons, be it looking at social media on your lunch break, or simply running some errands because you don't have your own laptop. Now your boss, your IT team, and <em>anyone</em> with access to your device, can go through and see every three seconds of how you're using <em>their</em> equipment. They could use this to track your work output and see how productive you are, they could even read private messages you send to people.</li><li><strong>You're using a family PC:</strong> if you've been using the household computer, and you don't have a password-protected profile, anyone could walk in and open up your Recall history. If you've been doing anything <em>unsavory</em> it's about to be obvious, even if you deleted that search history.</li><li><strong>You get hacked or your laptop gets stolen:</strong> this one's pretty obvious, but if someone manages to hack into your device, the encryption won't matter. Similarly, if someone just steals your laptop and you don't have a secure password locking it, then a criminal (cyber or otherwise) can use Recall to pull the whole world out from under your feet.</li></ul><p>There are so many problems that can arise just from someone accessing your Recall data. Using a <a data-analytics-id="inline-link" href="https://www.techradar.com/best/password-manager" data-before-rewrite-localise="https://www.techradar.com/best/password-manager">password manager</a> would become irrelevant if someone can see you typing in your master password, your <a data-analytics-id="inline-link" href="https://www.techradar.com/best/best-encrypted-messaging-app-android" data-before-rewrite-localise="https://www.techradar.com/best/best-encrypted-messaging-app-android">private messages</a> will be anything but, and there's no point in deleting your search history because Microsoft is keeping the receipts!</p><h2 id="how-to-protect-your-privacy-with-windows-recall-3">How to protect your privacy with Windows Recall</h2><p>There are a few ways you can protect your privacy from Windows Recall, but the obvious, and most effective one will be to disable it outright. As the saying goes "an ounce of prevention is worth a pound of cure." You're better off not having this stuff stored on your device in the first place.</p><p>If, however, you want to use Recall, you're going to need to do the following:</p><ul><li><strong>Make an individual profile on your PC:</strong> this will prevent people from having shared access to your Recall data as long as you follow my next tip.</li><li><strong>Password-protect your profile:</strong> not just your device, but your profile, too. Don't use a weak password, be serious. Use three memorable words with numbers and symbols, and no, don't set your password as "3-Memorable-worD5!"</li><li><strong>Encrypt your Recall data:</strong> you may have to upgrade your OS or pay for BitLocker, but encryption is a non-negotiable. If someone gets past your password, you don't want them to have immediate, unchecked access to what you've been doing for the past three months.</li><li><strong>Don't access sensitive data while Recall is on:</strong> if you're going to type in personal passwords or look at NSFW content, just turn it off. This is obviously going to be annoying and time-consuming, but it's far better than the alternative of having it all screenshotted.</li></ul><h2 id="bottom-line-recall-makes-my-skin-crawl-3">Bottom line: Recall makes my skin crawl</h2><p>Look, I've been a privacy advocate and researcher for years. I don't like the idea of anything tracking what we do. But <em>this</em>... this is something else. The risk that comes with Recall, the sheer devastation it could cause <a data-analytics-id="inline-link" href="https://www.techradar.com/news/been-hacked-this-is-what-you-need-to-do-now" data-before-rewrite-localise="https://www.techradar.com/news/been-hacked-this-is-what-you-need-to-do-now">if your device gets hacked</a>, the idea that Microsoft may be walling off privacy behind what I can only describe as a paywall. It sickens me.</p><p>There is so much opportunity for misuse with this feature. Security cannot be understated. Privacy cannot be bolted on. Taking screenshots of my device from the second I activate my device should <em>not</em> be a default option. Put the user in control of their privacy, and put the decision in their hands.</p><p>All of this just pushes me into the privacy-loving flippers of <a data-analytics-id="inline-link" href="https://www.techradar.com/best/best-linux-distros" data-before-rewrite-localise="https://www.techradar.com/best/best-linux-distros">Linux</a>.</p><h2 id="section-you-might-also-like"><span>You might also like</span></h2><ul><li><a href="https://www.techradar.com/computing/windows/microsoft-reveals-ai-powered-recall-feature-to-transform-windows-11s-searchability-while-confirming-hardware-requirements" data-before-rewrite-localise="https://www.techradar.com/computing/windows/microsoft-reveals-ai-powered-recall-feature-to-transform-windows-11s-searchability-while-confirming-hardware-requirements">Microsoft reveals AI-powered 'Recall' feature to transform Windows 11's searchability, while confirming hardware requirements</a></li><li><a href="https://www.techradar.com/vpn/ai-surveillance-is-on-the-horizon-but-mullvad-vpn-might-have-a-fix" data-before-rewrite-localise="https://www.techradar.com/vpn/ai-surveillance-is-on-the-horizon-but-mullvad-vpn-might-have-a-fix">AI surveillance is on the horizon, but Mullvad VPN might have a fix</a></li><li><a href="https://www.techradar.com/computing/artificial-intelligence/microsoft-makes-big-promises-with-new-ai-pcs-that-will-come-with-ai-explorer-feature-for-windows-11" data-before-rewrite-localise="https://www.techradar.com/computing/artificial-intelligence/microsoft-makes-big-promises-with-new-ai-pcs-that-will-come-with-ai-explorer-feature-for-windows-11">Microsoft makes big promises with new ‘AI PCs’ that will come with AI Explorer feature for Windows 11</a></li></ul>
</div>
<div id="slice-container-authorBio-wMU2UHFUgssHNRSrgVvTuh"><p>Andreas has been with TechRadar as Future PLC's Editor-in-Chief of Tech Software since March 2023, supporting content and teams on VPNs, antivirus, and other cybersecurity tools. He's previously written for and led content at ProPrivacy, Business2Community, and The Tech Report. After completing a Master of Research degree, Andreas fell in love with all things cybersecurity; combining his passions to help expose the prevalence of ad tech in the charity sector and raise awareness of digital privacy around the world.</p></div>



</section>



<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>








</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Systematically Improving Your RAG (155 pts)]]></title>
            <link>https://jxnl.co/writing/2024/05/22/systematically-improving-your-rag/</link>
            <guid>40443558</guid>
            <pubDate>Wed, 22 May 2024 17:22:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jxnl.co/writing/2024/05/22/systematically-improving-your-rag/">https://jxnl.co/writing/2024/05/22/systematically-improving-your-rag/</a>, See on <a href="https://news.ycombinator.com/item?id=40443558">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-md-component="container"> <main data-md-component="main"> <div data-md-component="content">  <article> <a href="https://github.com/jxnl/blog/edit/main/docs/writing/posts/improving-rag.md" title="Edit this page"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25Z"></path></svg> </a> <a href="https://github.com/jxnl/blog/raw/main/docs/writing/posts/improving-rag.md" title="View source of this page"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 9a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3m0 8a5 5 0 0 1-5-5 5 5 0 0 1 5-5 5 5 0 0 1 5 5 5 5 0 0 1-5 5m0-12.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5Z"></path></svg> </a>  <div> <p>RAG Course</p> <p>I'm building a RAG Course right now, if you're interested in the course please fill out this <a href="https://q7gjsgfstrp.typeform.com/ragcourse">form</a></p> </div> <p>These are notes generated after a call I had with Hamel on a 'system' to improve a RAG system. I've also written some other work like <a href="https://jxnl.co/writing/2023/09/17/rag-is-more-than-embeddings/">Rag is not Embeddings</a> and how to build a <a href="https://jxnl.co/writing/2024/01/07/inverted-thinking-rag/">Terrible RAG System</a> and how <a href="https://jxnl.co/writing/2024/02/28/levels-of-complexity-rag-applications/">complexity</a> can be broken down into smaller pieces.</p> <p>By the end of this post, you'll have a clear understanding of my systematic approach to improving RAG applications for the companies I work with. We'll cover key areas such as:</p> <ul> <li>Create synthetic questions and answers to quickly evaluate your system's precision and recall</li> <li>Make sure to combine full-text search and vector search for optimal retrieval </li> <li>Implementing the right user feedback mechanisms to capture specifically what you're interested in studying</li> <li>Use clustering to find segments of queries that have issues, broken down into topics and capabilities</li> <li>Build specific systems to improve capabilities</li> <li>Continuously monitoring, evaluating as real-world data grows</li> </ul> <p>Through this step-by-step runbook, you'll gain practical knowledge on how to incrementally enhance the performance and utility of your RAG applications, unlocking their full potential to deliver exceptional user experiences and drive business value. Let's dive in and explore how to systematically improve your RAG systems together!</p> <!-- more --> <h2 id="start-with-synthetic-data">Start with Synthetic Data<a href="#start-with-synthetic-data" title="Permanent link">¶</a></h2> <p>I think the biggest mistake around improving the system is that most people are spending too much time on the actual synthesis without actually understanding whether or not the data is being retrieved correctly. To avoid this:</p> <ul> <li>Create synthetic questions for each text chunk in your database</li> <li>Use these questions to test your retrieval system </li> <li>Calculate precision and recall scores to establish a baseline</li> <li>Identify areas for improvement based on the baseline scores</li> </ul> <p>What we should be finding with synthetic data is that synthetic data should just be around 97% recall precision. And synthetic data might just look like something very simple to begin with. </p> <p>We might just say, for every text chunk, I want it to synthetically generate a set of questions that this text chunk answers. For those questions, can we retrieve those text chunks? And you might think the answer is always going to be yes. But I found in practice that when I was doing tests against essays, full text search and embeddings basically performed the same, except full text search was about 10 times faster.</p> <p>Whereas when I did the same experiment on pulling issues from a repository, it was the case that full text search got around 55% recall, and then embedding search got around 65% recall. And just knowing how challenging these questions are on the baseline is super important to figure out what kind of experimentation you need to perform better. This will give you a baseline to work with and help you identify areas for improvement.</p>  <p>Ensuring relevant metadata (e.g., date ranges, file names, ownership) is extracted and searchable is crucial for improving search results. </p> <ul> <li>Extract relevant metadata from your documents</li> <li>Include metadata in your search indexes</li> <li>Use query understanding to extract metadata from user queries</li> <li>Expand search queries with relevant metadata to improve results</li> </ul> <p>For example, if someone asks, "What is the latest x, y, and z?" Text search will never get that answer. Semantic search will never get that answer.</p> <p>You need to perform query understanding to extract date ranges. There will be some prompt engineering that needs to happen. That's the metadata, and being aware that there will be questions that people aren't answering because those filters can never be caught by full text search and semantic search.</p> <p>And what this looks like in practice is if you ask the question, what are recent developments in the field, the search query is now expanded out to more terms. There's a date range where the language model has reasoned about what recent looks like for the research, and it's also decided that you should only be searching specific sources. If you don't do this, then you may not get trusted sources. You may be unable to figure out what recent means.</p> <p>You'll need to do some query understanding to extract date ranges and include metadata in your search.</p> <h2 id="use-both-full-text-search-and-vector-search">Use Both Full-Text Search and Vector Search<a href="#use-both-full-text-search-and-vector-search" title="Permanent link">¶</a></h2> <p>Utilize both full-text search and vector search (embeddings) for retrieving relevant documents. Ideally, you should use a single database system to avoid synchronization issues.</p> <ul> <li>Implement both full-text search and vector search</li> <li>Test the performance of each method on your specific use case</li> <li>Consider using a single database system to store both types of data</li> <li>Evaluate the trade-offs between speed and recall for your application</li> </ul> <p>In my experience, full-text search can be faster, but vector search can provide better recall.</p> <p>What ended up being very complicated was if you have a single knowledge base, maybe that complexity is fine, because you have more configuration of each one.</p> <p>But one of my clients who was doing construction data, they had to create separate indices per project, and now they just had this exploding array of different data sources that get in or out of sync. Like, maybe the database has an outage, and now the data is not in the database, but it's in another system. So if the embedding gets pulled up, then text is missing.</p> <p>And this complex configuration becomes a huge pain. And so, for example, some tools are able to do all 3 in a single object. And so even if you had a lot of partitioned data sources, you can do full text search, embedding search, and write SQL against a single data object. And that has been really helpful, especially when you think about these examples where you want to find the latest. Now you can just do a full text search query and then order by date and have a between clause.</p> <p>Test both and see what works best for your use case.</p> <h2 id="implement-clear-user-feedback-mechanisms">Implement Clear User Feedback Mechanisms<a href="#implement-clear-user-feedback-mechanisms" title="Permanent link">¶</a></h2> <p>Implementing clear user feedback systems (e.g., thumbs up/down) is essential for gathering data on your system's performance and identifying areas for improvement.</p> <ul> <li>Add user feedback mechanisms to your application</li> <li>Make sure the copy for these mechanisms clearly describes what you're measuring</li> <li>Ask specific questions like "Did we answer the question correctly?" instead of general ones like "How did we do?" </li> <li>Use the feedback data to identify areas for improvement and prioritize fixes</li> </ul> <p>I find that it's important to build out these feedback mechanisms as soon as possible. And making sure that the copy of these feedback mechanisms explicitly describe what you're worried about.</p> <p>Sometimes, we'll get a thumbs down even if the answer is correct, but they didn't like the tone. Or the answer was correct, but the latency was too high. Or it took too many hops.</p> <p>This means we couldn't actually produce an evaluation dataset just by figuring out what was a thumbs up and a thumbs down. It was a lot of confounding variables. We had to change the copy to just "Did we answer the question correctly? Yes or no." We need to recognize that improvements in tone and improvements in latency will come eventually. But we needed the user feedback to build us that evaluation dataset.</p> <p>Make sure the copy for these feedback mechanisms explicitly describes what you're worried about. This will help you isolate the specific issues users are facing.</p> <h2 id="cluster-and-model-topics">Cluster and Model Topics<a href="#cluster-and-model-topics" title="Permanent link">¶</a></h2> <p>Analyze user queries and feedback to identify topic clusters, capabilities, and areas of user dissatisfaction. This will help you prioritize improvements.</p> <p>Why should we do this? Let me give you an example. I once worked with a company that provided a technical documentation search system. By clustering user queries, we identified two main issues:</p> <ol> <li> <p>Topic Clusters: A significant portion of user queries were related to a specific product feature that had recently been updated. However, our system was not retrieving the most up-to-date documentation for this feature, leading to confusion and frustration among users.</p> </li> <li> <p>Capability Gaps: Another cluster of queries revealed that users were frequently asking for troubleshooting steps and error code explanations. While our system could retrieve relevant documentation, it struggled to provide direct, actionable answers to these types of questions.</p> </li> </ol> <p>Based on these insights, we prioritized updating the product feature documentation and implementing a feature to extract step-by-step instructions and error code explanations. These targeted improvements led to higher user satisfaction and reduced support requests.</p> <p>Look for patterns like:</p> <ul> <li> <p>Topic clusters: Are users asking about specific topics more than others? This could indicate a need for more content in those areas or better retrieval of existing content.</p> </li> <li> <p>Capabilities: Are there types of questions your system categorically cannot answer? This could indicate a need for new features or capabilities, such as direct answer extraction, multi-document summarization, or domain-specific reasoning.</p> </li> </ul> <p>By continuously analyzing topic clusters and capability gaps, you can identify high-impact areas for improvement and allocate your resources more effectively. This data-driven approach to prioritization ensures that you're always working on the most critical issues affecting your users.</p> <p>Once you have this in place, once you have these topics and these clusters, you can talk to domain experts for a couple of weeks to figure out what these categories are explicitly. Then, you can build out systems to tag that as data comes in.</p> <p>In the same way that when you open up ChatGPT and make a conversation, it creates an automatic title in the corner. You can now do that for every question. As part of that capability, you can add the classification, such as what are the topics and what are the capabilities. Capabilities could include ownership and responsibility, fetching tables, fetching images, fetching documents only, no synthesis, compare and contrast, deadlines, and so on.</p> <p>You can then put this information into a tool like Amplitude or Sentry. This will give you a running stream of the types of queries people are asking, which can help you understand how to prioritize these capabilities and topics.</p> <h2 id="continuously-monitor-and-experiment">Continuously Monitor and Experiment<a href="#continuously-monitor-and-experiment" title="Permanent link">¶</a></h2> <p>Continuously monitor your system's performance and run experiments to test improvements.</p> <ul> <li>Set up monitoring and logging to track system performance over time</li> <li>Regularly review the data to identify trends and issues</li> <li>Design and run experiments to test potential improvements</li> <li>Measure the impact of changes on precision, recall, and other relevant metrics</li> <li>Implement changes that show significant improvements</li> </ul> <p>This could include tweaking search parameters, adding metadata, or trying different embedding models. Measure the impact on precision and recall to see if the changes are worthwhile.</p> <p>Once you now have these questions in place, you have your synthetic data set and a bunch of user data with ratings. This is where the real work begins when it comes to systematically improving your RAG.</p> <p>The system will be running many clusters of topic modeling around the questions, modeling that against the thumbs up and thumbs down ratings to figure out what clusters are underperforming. It will then determine the count and probability of user dissatisfaction for each cluster.</p> <p>The system will be doing this on a regular cadence, figuring out for what volume of questions and user satisfaction levels it should focus on improving these specific use cases.</p> <p>What might happen is you onboard a new organization, and all of a sudden, those distributions shift because their use cases are different. That's when you can go in and say, "We onboarded these new clients, and they very much care about deadlines. We knew we decided not to service deadlines, but now we know this is a priority, as it went from 2% of questions asking about deadlines to 80%." You can then determine what kind of education or improvements can be done around that.</p> <h2 id="balance-latency-and-performance">Balance Latency and Performance<a href="#balance-latency-and-performance" title="Permanent link">¶</a></h2> <p>Finally, make informed decisions about trade-offs between system latency and search performance based on your specific use case and user requirements.</p> <ul> <li>Understand the latency and performance requirements for your application</li> <li>Measure the impact of different configurations on latency and performance</li> <li>Make trade-offs based on what's most important for your users</li> <li>Consider different requirements for different use cases (e.g., medical diagnosis vs. general search)</li> </ul> <p>Here, this is where having the synthetic questions that test against will effectively answer that question. Because what we'll do is we'll run the query with and without this parent document retriever, and we will have a recall with and without that feature and the latency improvement of that feature.</p> <p>And so now we'll be able to say, okay. Well, recall doubles. The latency increases by 20%, then a conversation can happen. Or, is that worth the investment? But if latency goes up double and the recall goes up 1%, again, it depends on, okay.</p> <p>Well, if this is a medical diagnostic, maybe I do care that the 1% is included because the stakes are so high. But if it's for a doc page, maybe the increased latency will reduce in churn.</p> <p>If you can improve recall by 1%, and the results are too complex, it's not worth deploying it in the future as well.</p> <p>For example, if you're building a medical diagnostic tool, a slight increase in latency might be worth it for better recall. But if you're building a general-purpose search tool, faster results might be more important.</p> <h2 id="wrapping-up">Wrapping Up<a href="#wrapping-up" title="Permanent link">¶</a></h2> <p>This is was written based off of a 30 conversation with a client, so I know I'm skipping over many details and implementation details. Leave a comment and let me know and we can get into specifics.</p>    <!-- Synchronize Giscus theme with palette -->  </article> </div>  </main>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pluckable Strings (574 pts)]]></title>
            <link>https://string.spiel.com/</link>
            <guid>40442595</guid>
            <pubDate>Wed, 22 May 2024 16:05:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://string.spiel.com/">https://string.spiel.com/</a>, See on <a href="https://news.ycombinator.com/item?id=40442595">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Route your prompts to the best LLM (222 pts)]]></title>
            <link>https://unify.ai/chat?default=true</link>
            <guid>40441945</guid>
            <pubDate>Wed, 22 May 2024 15:07:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://unify.ai/chat?default=true">https://unify.ai/chat?default=true</a>, See on <a href="https://news.ycombinator.com/item?id=40441945">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-overlay-container="true"><header role="banner"><div><nav role="navigation"><a href="https://unify.ai/" aria-current="page" aria-label="home"><svg xmlns="http://www.w3.org/2000/svg" width="78" height="20" fill="none" loading="lazy" alt="Unify logo"><g clip-path="url(#unify_logo_dark_svg__a)"><path fill="#FFF" d="M24.994 11.318v-6.41h3.032v6.069c0 1.578.844 2.519 2.245 2.519s2.228-.962 2.228-2.52V4.91h3.033v6.41c0 2.995-2.089 4.997-5.26 4.997-3.172 0-5.277-2.002-5.277-4.998M48.471 9.28v6.722H45.44V9.765c0-1.677-.644-2.486-1.956-2.486-1.563 0-2.517 1.108-2.517 2.892v5.83h-3.032V4.91h2.08l.591 1.371c.849-1 2.19-1.634 3.716-1.634 2.556 0 4.15 1.825 4.15 4.633M50.908 4.909h3.033v11.093h-3.033zm.006-4.267h3.02V3.43h-3.02zM63.344 7.531h-2.82v8.47h-3.032v-8.47h-1.943V5.06h1.96V4.054c0-2.123 1.202-3.483 3.558-3.483h2.256v2.36h-1.648c-.798 0-1.231.408-1.231 1.198v.93h2.9zM76.25 4.909l-4.888 10.945C70.017 18.86 68.836 20 66.319 20h-1.25v-2.697h1.05c1.461 0 1.84-.385 2.53-2.061l.042-.09L63.94 4.909h3.3l2.991 6.824 2.793-6.824z"></path><path fill="#00B828" d="M11.616 0c-3.578 0-6.49 2.879-6.49 6.418 0 2.84 2.336 5.15 5.208 5.15 2.164 0 3.925-1.74 3.925-3.882 0-1.441-1.186-2.614-2.643-2.614a1.994 1.994 0 0 0-2.003 1.98c0 .745.61 1.348 1.362 1.348q.183 0 .353-.046a1.2 1.2 0 0 1-.994.521c-1.37 0-2.484-1.102-2.484-2.456 0-2.054 1.69-3.724 3.766-3.724 2.783 0 5.047 2.239 5.047 4.992 0 3.452-2.84 6.26-6.33 6.26-4.195 0-7.61-3.377-7.61-7.528q.001-.765.134-1.513H.1q-.1.75-.101 1.513c0 5.637 4.636 10.222 10.334 10.222 4.992 0 9.053-4.016 9.053-8.954C19.387 3.448 15.9 0 11.616 0"></path></g><defs><clipPath id="unify_logo_dark_svg__a"><path d="M0 0h76.25v20H0z"></path></clipPath></defs></svg><svg xmlns="http://www.w3.org/2000/svg" width="78" height="20" fill="none" loading="lazy" alt="Unify logo"><g clip-path="url(#unify_logo_light_svg__a)"><path fill="#0A0C13" d="M24.994 11.318v-6.41h3.032v6.069c0 1.578.844 2.519 2.245 2.519s2.228-.962 2.228-2.52V4.91h3.033v6.41c0 2.995-2.089 4.997-5.26 4.997-3.172 0-5.277-2.002-5.277-4.998M48.471 9.28v6.722H45.44V9.765c0-1.677-.644-2.486-1.956-2.486-1.563 0-2.517 1.108-2.517 2.892v5.83h-3.032V4.91h2.08l.591 1.371c.849-1 2.19-1.634 3.716-1.634 2.556 0 4.15 1.825 4.15 4.633M50.908 4.909h3.033v11.093h-3.033zm.006-4.267h3.02V3.43h-3.02zM63.344 7.531h-2.82v8.47h-3.032v-8.47h-1.943V5.06h1.96V4.054c0-2.123 1.202-3.483 3.558-3.483h2.256v2.36h-1.648c-.798 0-1.231.408-1.231 1.198v.93h2.9zM76.25 4.909l-4.888 10.945C70.017 18.86 68.836 20 66.319 20h-1.25v-2.697h1.05c1.461 0 1.84-.385 2.53-2.061l.042-.09L63.94 4.909h3.3l2.991 6.824 2.793-6.824z"></path><path fill="#00B828" d="M11.616 0c-3.578 0-6.49 2.879-6.49 6.418 0 2.84 2.336 5.15 5.208 5.15 2.164 0 3.925-1.74 3.925-3.882 0-1.441-1.186-2.614-2.643-2.614a1.994 1.994 0 0 0-2.003 1.98c0 .745.61 1.348 1.362 1.348q.183 0 .353-.046a1.2 1.2 0 0 1-.994.521c-1.37 0-2.484-1.102-2.484-2.456 0-2.054 1.69-3.724 3.766-3.724 2.783 0 5.047 2.239 5.047 4.992 0 3.452-2.84 6.26-6.33 6.26-4.195 0-7.61-3.377-7.61-7.528q.001-.765.134-1.513H.1q-.1.75-.101 1.513c0 5.637 4.636 10.222 10.334 10.222 4.992 0 9.053-4.016 9.053-8.954C19.387 3.448 15.9 0 11.616 0"></path></g><defs><clipPath id="unify_logo_light_svg__a"><path d="M0 0h76.25v20H0z"></path></clipPath></defs></svg></a><a href="#">Developers</a><a href="#">Learn</a><a href="#">Company</a></nav><div><div><p><a href="https://unify.ai/chat">Chat</a></p><p>Chat with and directly compare LLM endpoints</p><p><a href="https://unify.ai/benchmarks">Benchmarks</a></p><p>Compare LLM endpoints with live performance benchmarks</p><p><a href="https://unify.ai/docs/">Documentation</a></p><p>Learn how to use the Unify API</p></div><div><p><a href="https://unify.ai/blog">Blog</a></p><p>Read about LLM deployment infrastructure</p><p><a href="https://unifyai.substack.com/">Newsletter</a></p><p>Stay up to date with the latest in AI</p><p><a href="https://www.youtube.com/playlist?list=PLwNuX3xB_tv91QvDXlW2TjrLGHW51uMul">Paper Readings</a></p><p>Join our discussions around cuttin-edge AI research</p><p><a href="https://www.youtube.com/playlist?list=PLwNuX3xB_tv_b74nU1y6Q4Bnug5nTnRaw">Talks</a></p><p>Dive deep with us into the AI landscape</p></div></div><div><div><p><a href="https://unify.ai/chat">Chat</a></p><p>Chat with and directly compare LLM endpoints</p><p><a href="https://unify.ai/benchmarks">Benchmarks</a></p><p>Compare LLM endpoints with live performance benchmarks</p><p><a href="https://unify.ai/docs/">Documentation</a></p><p>Learn how to use the Unify API</p></div><div><p><a href="https://unify.ai/blog">Blog</a></p><p>Read about LLM deployment infrastructure</p><p><a href="https://unifyai.substack.com/">Newsletter</a></p><p>Stay up to date with the latest in AI</p><p><a href="https://www.youtube.com/playlist?list=PLwNuX3xB_tv91QvDXlW2TjrLGHW51uMul">Paper Readings</a></p><p>Join our discussions around cuttin-edge AI research</p><p><a href="https://www.youtube.com/playlist?list=PLwNuX3xB_tv_b74nU1y6Q4Bnug5nTnRaw">Talks</a></p><p>Dive deep with us into the AI landscape</p></div></div></div></header><main><div><div><p>Compare</p><div data-error="false" data-chat="false"><p>G</p><p><img alt="gpt-4-turbo on openai" loading="lazy" width="12" height="12" decoding="async" data-nimg="1" src="https://storage.googleapis.com/hub-provider-images/openai-logo.png"></p></div><div data-router="true" data-error="false" data-chat="false"><p>R</p><p><img alt="router_2.12e-01_5.00e-04_2.78e-04 on unify" loading="lazy" width="12" height="12" decoding="async" data-nimg="1" src="https://storage.googleapis.com/hub-provider-images/unify-logo.png"></p></div></div><form><a href="https://unify.ai/docs" target="_blank"></a></form></div><div><h2>Whoops, too soon to go there!</h2><p>We're currently working on a mobile version for our chat interface. Try out the desktop version to start routing your prompts to the best LLM!</p><p><a href="https://unify.ai/">Got it, take me back</a></p></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: PBT – A property-based testing library for Ruby (186 pts)]]></title>
            <link>https://github.com/ohbarye/pbt</link>
            <guid>40441093</guid>
            <pubDate>Wed, 22 May 2024 13:58:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ohbarye/pbt">https://github.com/ohbarye/pbt</a>, See on <a href="https://news.ycombinator.com/item?id=40441093">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Property-Based Testing in Ruby</h2><a id="user-content-property-based-testing-in-ruby" aria-label="Permalink: Property-Based Testing in Ruby" href="#property-based-testing-in-ruby"></a></p>
<p dir="auto"><a href="https://rubygems.org/gems/pbt" rel="nofollow"><img src="https://camo.githubusercontent.com/1e4aba19ac30272d7278974d5b9405de20415d890eeb97c8d53c1cf0f5c4c4b5/68747470733a2f2f62616467652e667572792e696f2f72622f7062742e737667" alt="Gem Version" data-canonical-src="https://badge.fury.io/rb/pbt.svg"></a>
<a href="https://github.com/ohbarye/pbt/actions/workflows/main.yml"><img src="https://github.com/ohbarye/pbt/actions/workflows/main.yml/badge.svg" alt="Build Status"></a>
<a href="https://www.rubydoc.info/gems/pbt" rel="nofollow"><img src="https://camo.githubusercontent.com/0e2efd55dee25a736dba3440934b56852469e6a9bd487bbc7afff3c4f8851631/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f25463025394625393325394152756279446f632d646f63756d656e746174696f6e2d696e666f726d6174696f6e616c2e737667" alt="RubyDoc" data-canonical-src="https://img.shields.io/badge/%F0%9F%93%9ARubyDoc-documentation-informational.svg"></a></p>
<p dir="auto">A property-based testing tool for Ruby with experimental features that allow you to run test cases in parallel.</p>
<p dir="auto">PBT stands for Property-Based Testing.</p>
<p dir="auto">As for the results of the parallelization experiment, please refer the talk at RubyKaigi 2024: <a href="https://rubykaigi.org/2024/presentations/ohbarye.html" rel="nofollow">Unlocking Potential of Property Based Testing with Ractor</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What's Property-Based Testing?</h2><a id="user-content-whats-property-based-testing" aria-label="Permalink: What's Property-Based Testing?" href="#whats-property-based-testing"></a></p>
<p dir="auto">Property-Based Testing is a testing methodology that focuses on the properties a system should always satisfy, rather than checking individual examples. Instead of writing tests for predefined inputs and outputs, PBT allows you to specify the general characteristics that your code should adhere to and then automatically generates a wide range of inputs to verify these properties.</p>
<p dir="auto">The key benefits of property-based testing include the ability to cover more edge cases and the potential to discover bugs that traditional example-based tests might miss. It's particularly useful for identifying unexpected behaviors in your code by testing it against a vast set of inputs, including those you might not have considered.</p>
<p dir="auto">For a more in-depth understanding of Property-Based Testing, please refer to external resources.</p>
<ul dir="auto">
<li>Original ideas
<ul dir="auto">
<li><a href="https://ieeexplore.ieee.org/document/367311" rel="nofollow">Property-based testing of privileged programs</a> (1994)</li>
<li><a href="https://dl.acm.org/doi/abs/10.1145/263244.263267" rel="nofollow">Property-based testing: a new approach to testing for assurance</a> (1997)</li>
<li><a href="https://dl.acm.org/doi/10.1145/351240.351266" rel="nofollow">QuickCheck: a lightweight tool for random testing of Haskell programs</a> (2000)</li>
</ul>
</li>
<li>Rather new introductory resources
<ul dir="auto">
<li>Fred Hebert's book <a href="https://propertesting.com/" rel="nofollow">Property-Based Testing With PropEr, Erlang and Elixir</a>.</li>
<li><a href="https://fast-check.dev/docs/introduction/why-property-based/" rel="nofollow">fast-check - Why Property-Based?</a></li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">Add this line to your application's Gemfile and run <code>bundle install</code>.</p>

<p dir="auto">Off course you can install with <code>gem intstall pbt</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Basic Usage</h2><a id="user-content-basic-usage" aria-label="Permalink: Basic Usage" href="#basic-usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Simple property</h3><a id="user-content-simple-property" aria-label="Permalink: Simple property" href="#simple-property"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Let's say you have your own sort method.
def sort(array)
  return array if array.size <= 2 # Here's a bug! It should be 1.
  pivot, *rest = array
  left, right = rest.partition { |n| n <= pivot }
  sort(left) + [pivot] + sort(right)
end

Pbt.assert do
  # The given block is executed 100 times with different arrays with random numbers.
  # Besides, the block runs in parallel by Ractor.
  Pbt.property(Pbt.array(Pbt.integer)) do |numbers|
    result = sort(numbers)
    result.each_cons(2) do |x, y|
      raise &quot;Sort algorithm is wrong.&quot; unless x <= y
    end
  end
end

# If the function has a bug, the test fails and it reports a minimum counterexample.
# For example, the sort method doesn't work for [0, -1].
#
# Pbt::PropertyFailure:
#   Property failed after 23 test(s)
#   seed: 43738985293126714007411539287084402325
#   counterexample: [0, -1]
#   Shrunk 40 time(s)
#   Got RuntimeError: Sort algorithm is wrong."><pre><span># Let's say you have your own sort method.</span>
<span>def</span> <span>sort</span><span>(</span><span>array</span><span>)</span>
  <span>return</span> <span>array</span> <span>if</span> <span>array</span><span>.</span><span>size</span> &lt;= <span>2</span> <span># Here's a bug! It should be 1.</span>
  <span>pivot</span><span>,</span> *<span>rest</span> <span>=</span> <span>array</span>
  <span>left</span><span>,</span> <span>right</span> <span>=</span> <span>rest</span><span>.</span><span>partition</span> <span>{</span> |<span>n</span>| <span>n</span> &lt;= <span>pivot</span> <span>}</span>
  <span>sort</span><span>(</span><span>left</span><span>)</span> + <span>[</span><span>pivot</span><span>]</span> + <span>sort</span><span>(</span><span>right</span><span>)</span>
<span>end</span>

<span>Pbt</span><span>.</span><span>assert</span> <span>do</span>
  <span># The given block is executed 100 times with different arrays with random numbers.</span>
  <span># Besides, the block runs in parallel by Ractor.</span>
  <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>array</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span><span>)</span> <span>do</span> |<span>numbers</span>|
    <span>result</span> <span>=</span> <span>sort</span><span>(</span><span>numbers</span><span>)</span>
    <span>result</span><span>.</span><span>each_cons</span><span>(</span><span>2</span><span>)</span> <span>do</span> |<span>x</span><span>,</span> <span>y</span>|
      <span>raise</span> <span>"Sort algorithm is wrong."</span> <span>unless</span> <span>x</span> &lt;= <span>y</span>
    <span>end</span>
  <span>end</span>
<span>end</span>

<span># If the function has a bug, the test fails and it reports a minimum counterexample.</span>
<span># For example, the sort method doesn't work for [0, -1].</span>
<span>#</span>
<span># Pbt::PropertyFailure:</span>
<span>#   Property failed after 23 test(s)</span>
<span>#   seed: 43738985293126714007411539287084402325</span>
<span>#   counterexample: [0, -1]</span>
<span>#   Shrunk 40 time(s)</span>
<span>#   Got RuntimeError: Sort algorithm is wrong.</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Explain The Snippet</h3><a id="user-content-explain-the-snippet" aria-label="Permalink: Explain The Snippet" href="#explain-the-snippet"></a></p>
<p dir="auto">The above snippet is very simple but contains the basic components.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Runner</h4><a id="user-content-runner" aria-label="Permalink: Runner" href="#runner"></a></p>
<p dir="auto"><code>Pbt.assert</code> is the runner. The runner interprets and executes the given property. <code>Pbt.assert</code> takes a property and runs it multiple times. If the property fails, it tries to shrink the input that caused the failure.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Property</h4><a id="user-content-property" aria-label="Permalink: Property" href="#property"></a></p>
<p dir="auto">The snippet above declared a property by calling <code>Pbt.property</code>. The property describes the following:</p>
<ol dir="auto">
<li>What the user wants to evaluate. This corresponds to the block (let's call this <code>predicate</code>) enclosed by <code>do</code> <code>end</code></li>
<li>How to generate inputs for the predicate — using <code>Arbitrary</code></li>
</ol>
<p dir="auto">The <code>predicate</code> block is a function that directly asserts, taking values generated by <code>Arbitrary</code> as input.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Arbitrary</h4><a id="user-content-arbitrary" aria-label="Permalink: Arbitrary" href="#arbitrary"></a></p>
<p dir="auto">Arbitrary generates random values. It is also responsible for shrinking those values if asked to shrink a failed value as input.</p>
<p dir="auto">Here, we used only one type of arbitrary, <code>Pbt.integer</code>. There are many other built-in arbitraries, and you can create a variety of inputs by combining existing ones.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Shrink</h4><a id="user-content-shrink" aria-label="Permalink: Shrink" href="#shrink"></a></p>
<p dir="auto">In PBT, If a test fails, it attempts to shrink the case that caused the failure into a form that is easier for humans to understand.
In other words, instead of stopping the test itself the first time it fails and reporting the failed value, it tries to find the minimal value that causes the error.</p>
<p dir="auto">When there is a test that fails when given an even number, a counterexample of <code>2</code> is simpler and easier to understand than <code>432743417662</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Arbitrary</h3><a id="user-content-arbitrary-1" aria-label="Permalink: Arbitrary" href="#arbitrary-1"></a></p>
<p dir="auto">There are many built-in arbitraries in <code>Pbt</code>. You can use them to generate random values for your tests. Here are some representative arbitraries.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Primitives</h4><a id="user-content-primitives" aria-label="Permalink: Primitives" href="#primitives"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="rng = Random.new

Pbt.integer.generate(rng)                  # => 42
Pbt.integer(min: -1, max: 8).generate(rng) # => Integer between -1 and 8

Pbt.symbol.generate(rng)                   # => :atq

Pbt.ascii_char.generate(rng)               # => &quot;a&quot;
Pbt.ascii_string.generate(rng)             # => &quot;aagjZfao&quot;

Pbt.boolean.generate(rng)                  # => true or false
Pbt.constant(42).generate(rng)             # => 42 always"><pre><span>rng</span> <span>=</span> <span>Random</span><span>.</span><span>new</span>

<span>Pbt</span><span>.</span><span>integer</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>                  <span># =&gt; 42</span>
<span>Pbt</span><span>.</span><span>integer</span><span>(</span><span>min</span>: -<span>1</span><span>,</span> <span>max</span>: <span>8</span><span>)</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span> <span># =&gt; Integer between -1 and 8</span>

<span>Pbt</span><span>.</span><span>symbol</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>                   <span># =&gt; :atq</span>

<span>Pbt</span><span>.</span><span>ascii_char</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>               <span># =&gt; "a"</span>
<span>Pbt</span><span>.</span><span>ascii_string</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>             <span># =&gt; "aagjZfao"</span>

<span>Pbt</span><span>.</span><span>boolean</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>                  <span># =&gt; true or false</span>
<span>Pbt</span><span>.</span><span>constant</span><span>(</span><span>42</span><span>)</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>             <span># =&gt; 42 always</span></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Composites</h4><a id="user-content-composites" aria-label="Permalink: Composites" href="#composites"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="rng = Random.new

Pbt.array(Pbt.integer).generate(rng)                        # => [121, -13141, 9825]
Pbt.array(Pbt.integer, max: 1, empty: true).generate(rng)   # => [] or [42] etc.

Pbt.tuple(Pbt.symbol, Pbt.integer).generate(rng)            # => [:atq, 42]

Pbt.fixed_hash(x: Pbt.symbol, y: Pbt.integer).generate(rng) # => {x: :atq, y: 42}
Pbt.hash(Pbt.symbol, Pbt.integer).generate(rng)             # => {atq: 121, ygab: -1142}

Pbt.one_of(:a, 1, 0.1).generate(rng)                        # => :a or 1 or 0.1"><pre><span>rng</span> <span>=</span> <span>Random</span><span>.</span><span>new</span>

<span>Pbt</span><span>.</span><span>array</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>                        <span># =&gt; [121, -13141, 9825]</span>
<span>Pbt</span><span>.</span><span>array</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>,</span> <span>max</span>: <span>1</span><span>,</span> <span>empty</span>: <span>true</span><span>)</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>   <span># =&gt; [] or [42] etc.</span>

<span>Pbt</span><span>.</span><span>tuple</span><span>(</span><span>Pbt</span><span>.</span><span>symbol</span><span>,</span> <span>Pbt</span><span>.</span><span>integer</span><span>)</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>            <span># =&gt; [:atq, 42]</span>

<span>Pbt</span><span>.</span><span>fixed_hash</span><span>(</span><span>x</span>: <span>Pbt</span><span>.</span><span>symbol</span><span>,</span> <span>y</span>: <span>Pbt</span><span>.</span><span>integer</span><span>)</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span> <span># =&gt; {x: :atq, y: 42}</span>
<span>Pbt</span><span>.</span><span>hash</span><span>(</span><span>Pbt</span><span>.</span><span>symbol</span><span>,</span> <span>Pbt</span><span>.</span><span>integer</span><span>)</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>             <span># =&gt; {atq: 121, ygab: -1142}</span>

<span>Pbt</span><span>.</span><span>one_of</span><span>(</span><span>:a</span><span>,</span> <span>1</span><span>,</span> <span>0.1</span><span>)</span><span>.</span><span>generate</span><span>(</span><span>rng</span><span>)</span>                        <span># =&gt; :a or 1 or 0.1</span></pre></div>
<p dir="auto">See <a href="https://github.com/ohbarye/pbt/blob/main/lib/pbt/arbitrary/arbitrary_methods.rb">ArbitraryMethods</a> module for more details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What if property-based tests fail?</h2><a id="user-content-what-if-property-based-tests-fail" aria-label="Permalink: What if property-based tests fail?" href="#what-if-property-based-tests-fail"></a></p>
<p dir="auto">Once a test fails it's time to debug. <code>Pbt</code> provides some features to help you debug.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to reproduce</h3><a id="user-content-how-to-reproduce" aria-label="Permalink: How to reproduce" href="#how-to-reproduce"></a></p>
<p dir="auto">When a test fails, you'll see a message like below.</p>
<div data-snippet-clipboard-copy-content="Pbt::PropertyFailure:
  Property failed after 23 test(s)
  seed: 43738985293126714007411539287084402325
  counterexample: [0, -1]
  Shrunk 40 time(s)
  Got RuntimeError: Sort algorithm is wrong.
  # and backtraces"><pre lang="text"><code>Pbt::PropertyFailure:
  Property failed after 23 test(s)
  seed: 43738985293126714007411539287084402325
  counterexample: [0, -1]
  Shrunk 40 time(s)
  Got RuntimeError: Sort algorithm is wrong.
  # and backtraces
</code></pre></div>
<p dir="auto">You can reproduce the failure by passing the seed to <code>Pbt.assert</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="Pbt.assert(seed: 11001296583699917659214176011685741769) do
  Pbt.property(Pbt.array(Pbt.integer)) do |number|
    # your test
  end
end"><pre><span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>seed</span>: <span>11001296583699917659214176011685741769</span><span>)</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>array</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span><span>)</span> <span>do</span> |<span>number</span>|
    <span># your test</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Verbose mode</h3><a id="user-content-verbose-mode" aria-label="Permalink: Verbose mode" href="#verbose-mode"></a></p>
<p dir="auto">You may want to know which values pass and which values fail. You can enable verbose mode by passing <code>verbose: true</code> to <code>Pbt.assert</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="Pbt.assert(verbose: true) do
  Pbt.property(Pbt.array(Pbt.integer)) do |numbers|
    # your failed test
  end
end"><pre><span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>verbose</span>: <span>true</span><span>)</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>array</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span><span>)</span> <span>do</span> |<span>numbers</span>|
    <span># your failed test</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto">The verbose mode prints the results of each tested values.</p>
<div data-snippet-clipboard-copy-content="Encountered failures were:
- [152477, 666997, -531468, -92182, 623948, 425913, 656138, 856463, -64529]
- [76239, 666997, -531468, -92182, 623948]
- [76239, 666997, -531468]
(snipped for README)
- [2, 163]
- [2, 11]

Execution summary:
. × [152477, 666997, -531468, -92182, 623948, 425913, 656138, 856463, -64529]
. . √ [152477, 666997, -531468, -92182, 623948]
. . √ [-64529]
. . × [76239, 666997, -531468, -92182, 623948, 425913, 656138, 856463, -64529]
. . . × [76239, 666997, -531468, -92182, 623948]
(snipped for README)
. . . . . . . . . . . . . . . . . √ [2, 21]
. . . . . . . . . . . . . . . . . × [2, 11]
. . . . . . . . . . . . . . . . . . √ []
. . . . . . . . . . . . . . . . . . √ [2, 1]
. . . . . . . . . . . . . . . . . . √ [2, 0]"><pre lang="text"><code>Encountered failures were:
- [152477, 666997, -531468, -92182, 623948, 425913, 656138, 856463, -64529]
- [76239, 666997, -531468, -92182, 623948]
- [76239, 666997, -531468]
(snipped for README)
- [2, 163]
- [2, 11]

Execution summary:
. × [152477, 666997, -531468, -92182, 623948, 425913, 656138, 856463, -64529]
. . √ [152477, 666997, -531468, -92182, 623948]
. . √ [-64529]
. . × [76239, 666997, -531468, -92182, 623948, 425913, 656138, 856463, -64529]
. . . × [76239, 666997, -531468, -92182, 623948]
(snipped for README)
. . . . . . . . . . . . . . . . . √ [2, 21]
. . . . . . . . . . . . . . . . . × [2, 11]
. . . . . . . . . . . . . . . . . . √ []
. . . . . . . . . . . . . . . . . . √ [2, 1]
. . . . . . . . . . . . . . . . . . √ [2, 0]
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Configuration</h2><a id="user-content-configuration" aria-label="Permalink: Configuration" href="#configuration"></a></p>
<p dir="auto">You can configure <code>Pbt</code> by calling <code>Pbt.configure</code> before running tests.</p>
<div dir="auto" data-snippet-clipboard-copy-content="Pbt.configure do |config|
  # Whether to print verbose output. Default is `false`.
  config.verbose = false

  # The concurrency method to use. `:ractor`, `:thread`, `:process` and `:none` are supported. Default is `:none`.
  config.worker = :none

  # The number of runs to perform. Default is `100`.
  config.num_runs = 100

  # The seed to use for random number generation.
  # It's useful to reproduce failed test with the seed you'd pick up from failure messages. Default is a random seed.
  config.seed = 42

  # Whether to report exceptions in threads.
  # It's useful to suppress error logs on Ractor that reports many errors. Default is `false`.
  config.thread_report_on_exception = false

  # Whether to allow RSpec expectation and matchers in Ractor. It's quite experimental! Default is `false`.
  config.experimental_ractor_rspec_integration = false
end"><pre><span>Pbt</span><span>.</span><span>configure</span> <span>do</span> |<span>config</span>|
  <span># Whether to print verbose output. Default is `false`.</span>
  <span>config</span><span>.</span><span>verbose</span> <span>=</span> <span>false</span>

  <span># The concurrency method to use. `:ractor`, `:thread`, `:process` and `:none` are supported. Default is `:none`.</span>
  <span>config</span><span>.</span><span>worker</span> <span>=</span> <span>:none</span>

  <span># The number of runs to perform. Default is `100`.</span>
  <span>config</span><span>.</span><span>num_runs</span> <span>=</span> <span>100</span>

  <span># The seed to use for random number generation.</span>
  <span># It's useful to reproduce failed test with the seed you'd pick up from failure messages. Default is a random seed.</span>
  <span>config</span><span>.</span><span>seed</span> <span>=</span> <span>42</span>

  <span># Whether to report exceptions in threads.</span>
  <span># It's useful to suppress error logs on Ractor that reports many errors. Default is `false`.</span>
  <span>config</span><span>.</span><span>thread_report_on_exception</span> <span>=</span> <span>false</span>

  <span># Whether to allow RSpec expectation and matchers in Ractor. It's quite experimental! Default is `false`.</span>
  <span>config</span><span>.</span><span>experimental_ractor_rspec_integration</span> <span>=</span> <span>false</span>
<span>end</span></pre></div>
<p dir="auto">Or, you can pass the configuration to <code>Pbt.assert</code> as an argument.</p>
<div dir="auto" data-snippet-clipboard-copy-content="Pbt.assert(num_runs: 100, seed: 42) do
  # ...
end"><pre><span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>num_runs</span>: <span>100</span><span>,</span> <span>seed</span>: <span>42</span><span>)</span> <span>do</span>
  <span># ...</span>
<span>end</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Concurrency methods</h2><a id="user-content-concurrency-methods" aria-label="Permalink: Concurrency methods" href="#concurrency-methods"></a></p>
<p dir="auto">One of the key features of <code>Pbt</code> is its ability to rapidly execute test cases in parallel or concurrently, using a large number of values (by default, <code>100</code>) generated by <code>Arbitrary</code>.</p>
<p dir="auto">For concurrent processing, you can specify any of the three workers—<code>:ractor</code>, <code>:process</code>, or <code>:thread</code>—using the <code>worker</code> option. Alternatively, choose <code>:none</code> for serial execution.</p>
<p dir="auto"><code>Pbt</code> supports 3 concurrency methods and 1 sequential one. You can choose one of them by setting the <code>worker</code> option.</p>
<p dir="auto">Be aware that the performance of each method depends on the test subject. For example, if the test subject is CPU-bound, <code>:ractor</code> may be the best choice. Otherwise, <code>:none</code> shall be the best choice for most cases. See <a href="https://github.com/ohbarye/pbt/blob/main/benchmark/README.md">benchmarks</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Ractor</h3><a id="user-content-ractor" aria-label="Permalink: Ractor" href="#ractor"></a></p>
<p dir="auto"><code>:ractor</code> worker is useful for test cases that are CPU-bound. But it's experimental and has some limitations as described below. If you encounter any issues due to those limitations, consider using <code>:process</code> as workers whose benchmark is the most similar to <code>:ractor</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="Pbt.assert(worker: :ractor) do
  Pbt.property(Pbt.integer) do |n|
    # ...
  end
end"><pre><span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>worker</span>: <span>:ractor</span><span>)</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span> <span>do</span> |<span>n</span>|
    <span># ...</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Limitation</h4><a id="user-content-limitation" aria-label="Permalink: Limitation" href="#limitation"></a></p>
<p dir="auto">Please note that Ractor support is an experimental feature of this gem. Due to Ractor's limitations, you may encounter some issues when using it.</p>
<p dir="auto">For example, you cannot access anything out of block.</p>
<div dir="auto" data-snippet-clipboard-copy-content="a = 1

Pbt.assert(worker: :ractor) do
  Pbt.property(Pbt.integer) do |n|
    # You cannot access `a` here because this block is executed in a Ractor and it doesn't allow implicit sharing of objects.
    a + n # => Ractor::RemoteError (can not share object between ractors)
  end
end"><pre><span>a</span> <span>=</span> <span>1</span>

<span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>worker</span>: <span>:ractor</span><span>)</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span> <span>do</span> |<span>n</span>|
    <span># You cannot access `a` here because this block is executed in a Ractor and it doesn't allow implicit sharing of objects.</span>
    <span>a</span> + <span>n</span> <span># =&gt; Ractor::RemoteError (can not share object between ractors)</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto">You cannot use any methods provided by test frameworks like <code>expect</code> or <code>assert</code> because they are not available in a Ractor.</p>
<div dir="auto" data-snippet-clipboard-copy-content="it do
  Pbt.assert(worker: :ractor) do
    Pbt.property(Pbt.integer) do |n|
      # This is not possible because `self` if a Ractor here.
      expect(n).to be_an(Integer) # => Ractor::RemoteError (cause by NoMethodError for `expect` or `be_an`)
    end
  end
end"><pre><span>it</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>worker</span>: <span>:ractor</span><span>)</span> <span>do</span>
    <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span> <span>do</span> |<span>n</span>|
      <span># This is not possible because `self` if a Ractor here.</span>
      <span>expect</span><span>(</span><span>n</span><span>)</span><span>.</span><span>to</span> <span>be_an</span><span>(</span><span>Integer</span><span>)</span> <span># =&gt; Ractor::RemoteError (cause by NoMethodError for `expect` or `be_an`)</span>
    <span>end</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto">If you're a challenger, you can enable the experimental feature to allow using RSpec expectations and matchers in Ractor. It works but it's quite experimental and could cause unexpected behaviors.</p>
<p dir="auto">Please note that this feature depends on <a href="https://ruby.github.io/prism/" rel="nofollow">prism</a> gem. If you use Ruby 3.2 or prior, you need to install the gem by yourself.</p>
<div dir="auto" data-snippet-clipboard-copy-content="it do
  Pbt.assert(worker: :ractor, experimental_ractor_rspec_integration: true) do
    Pbt.property(Pbt.integer) do |n|
      # Some RSpec expectations and matchers are available in Ractor by hack.
      # Other features like `let`, `subject`, `before`, `after` that access out of block are still not available.
      expect(n).to be_an(Integer)
    end
  end
end"><pre><span>it</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>worker</span>: <span>:ractor</span><span>,</span> <span>experimental_ractor_rspec_integration</span>: <span>true</span><span>)</span> <span>do</span>
    <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span> <span>do</span> |<span>n</span>|
      <span># Some RSpec expectations and matchers are available in Ractor by hack.</span>
      <span># Other features like `let`, `subject`, `before`, `after` that access out of block are still not available.</span>
      <span>expect</span><span>(</span><span>n</span><span>)</span><span>.</span><span>to</span> <span>be_an</span><span>(</span><span>Integer</span><span>)</span>
    <span>end</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Process</h3><a id="user-content-process" aria-label="Permalink: Process" href="#process"></a></p>
<p dir="auto">If you'd like to run test cases that are CPU-bound and <code>:ractor</code> is not available, <code>:process</code> becomes a good choice.</p>
<div dir="auto" data-snippet-clipboard-copy-content="Pbt.assert(worker: :process) do
  Pbt.property(Pbt.integer) do |n|
    # ...
  end
end"><pre><span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>worker</span>: <span>:process</span><span>)</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span> <span>do</span> |<span>n</span>|
    <span># ...</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto">If you want to use <code>:process</code>, you need to install the <a href="https://github.com/grosser/parallel">parallel</a> gem.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Thread</h3><a id="user-content-thread" aria-label="Permalink: Thread" href="#thread"></a></p>
<p dir="auto">You may not need to run test cases with multi-threads.</p>
<div dir="auto" data-snippet-clipboard-copy-content="Pbt.assert(worker: :thread) do
  Pbt.property(Pbt.integer) do |n|
    # ...
  end
end"><pre><span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>worker</span>: <span>:thread</span><span>)</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span> <span>do</span> |<span>n</span>|
    <span># ...</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto">If you want to use <code>:thread</code>, you need to install the <a href="https://github.com/grosser/parallel">parallel</a> gem.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">None</h3><a id="user-content-none" aria-label="Permalink: None" href="#none"></a></p>
<p dir="auto">For most cases, <code>:none</code> is the best choice. It runs tests sequentially (without parallelism) but most test cases finishes within a reasonable time.</p>
<div dir="auto" data-snippet-clipboard-copy-content="Pbt.assert(worker: :none) do
  Pbt.property(Pbt.integer) do |n|
    # ...
  end
end"><pre><span>Pbt</span><span>.</span><span>assert</span><span>(</span><span>worker</span>: <span>:none</span><span>)</span> <span>do</span>
  <span>Pbt</span><span>.</span><span>property</span><span>(</span><span>Pbt</span><span>.</span><span>integer</span><span>)</span> <span>do</span> |<span>n</span>|
    <span># ...</span>
  <span>end</span>
<span>end</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">TODOs</h2><a id="user-content-todos" aria-label="Permalink: TODOs" href="#todos"></a></p>
<p dir="auto">Once this project finishes the following, we will release v1.0.0.</p>
<ul>
<li> Implement basic primitive arbitraries</li>
<li> Implement composite arbitraries</li>
<li> Support shrinking</li>
<li> Support multiple concurrency methods
<ul>
<li> Ractor</li>
<li> Process</li>
<li> Thread</li>
<li> None (Run tests sequentially)</li>
</ul>
</li>
<li> Documentation
<ul>
<li> Add better examples</li>
<li> Arbitrary usage</li>
<li> Configuration</li>
</ul>
</li>
<li> Benchmark</li>
<li> Rich report by verbose mode</li>
<li> (Partially) Allow to use expectations and matchers provided by test framework in Ractor if possible.
<ul dir="auto">
<li>It'd be so hard to pass assertions like <code>expect</code>, <code>assert</code> to a Ractor.</li>
</ul>
</li>
<li> Implement frequency arbitrary</li>
<li> Statistics feature to aggregate generated values</li>
<li> Decide DSL</li>
<li> Try Fiber</li>
<li> Stateful property-based testing</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development</h2><a id="user-content-development" aria-label="Permalink: Development" href="#development"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Setup</h3><a id="user-content-setup" aria-label="Permalink: Setup" href="#setup"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="bin/setup
bundle exec rake # Run tests and lint at once"><pre>bin/setup
bundle <span>exec</span> rake <span><span>#</span> Run tests and lint at once</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Test</h3><a id="user-content-test" aria-label="Permalink: Test" href="#test"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Lint</h3><a id="user-content-lint" aria-label="Permalink: Lint" href="#lint"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="bundle exec rake standard:fix"><pre>bundle <span>exec</span> rake standard:fix</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Bug reports and pull requests are welcome on GitHub at <a href="https://github.com/ohbarye/pbt">https://github.com/ohbarye/pbt</a>. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the <a href="https://github.com/ohbarye/pbt/blob/master/CODE_OF_CONDUCT.md">code of conduct</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">The gem is available as open source under the terms of the <a href="https://opensource.org/licenses/MIT" rel="nofollow">MIT License</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<p dir="auto">This project draws a lot of inspiration from other testing tools, namely</p>
<ul dir="auto">
<li><a href="https://fast-check.dev/" rel="nofollow">fast-check</a></li>
<li><a href="https://github.com/vinistock/loupe">Loupe</a></li>
<li><a href="https://github.com/rspec/rspec">RSpec</a></li>
<li><a href="https://github.com/seattlerb/minitest">Minitest</a></li>
<li><a href="https://github.com/grosser/parallel">Parallel</a></li>
<li><a href="https://github.com/Qqwy/ruby-prop_check">PropCheck for Ruby</a></li>
<li><a href="https://github.com/alfert/propcheck">PropCheck for Elixir</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Code of Conduct</h2><a id="user-content-code-of-conduct" aria-label="Permalink: Code of Conduct" href="#code-of-conduct"></a></p>
<p dir="auto">Everyone interacting in the Pbt project's codebases, issue trackers, chat rooms and mailing lists is expected to follow the <a href="https://github.com/ohbarye/pbt/blob/master/CODE_OF_CONDUCT.md">code of conduct</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tensor Puzzles (116 pts)]]></title>
            <link>https://github.com/srush/Tensor-Puzzles</link>
            <guid>40440971</guid>
            <pubDate>Wed, 22 May 2024 13:48:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/srush/Tensor-Puzzles">https://github.com/srush/Tensor-Puzzles</a>, See on <a href="https://news.ycombinator.com/item?id=40440971">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Tensor Puzzles</h2><a id="user-content-tensor-puzzles" aria-label="Permalink: Tensor Puzzles" href="#tensor-puzzles"></a></p>
<ul dir="auto">
<li>by <a href="http://rush-nlp.com/" rel="nofollow">Sasha Rush</a> - <a href="https://twitter.com/srush_nlp" rel="nofollow">srush_nlp</a> (with Marcos Treviso)</li>
</ul>
<p dir="auto">When learning a tensor programming language like PyTorch or Numpy it
is tempting to rely on the standard library (or more honestly
StackOverflow) to find a magic function for everything.  But in
practice, the tensor language is extremely expressive, and you can
do most things from first principles and clever use of broadcasting.</p>
<p dir="auto">This is a collection of 21 tensor puzzles. Like chess puzzles these are
not meant to simulate the complexity of a real program, but to practice
in a simplified environment. Each puzzle asks you to reimplement one
function in the NumPy standard library without magic.</p>
<p dir="auto">I recommend running in Colab. Click here and copy the notebook to get start.</p>
<p dir="auto"><a href="https://colab.research.google.com/github/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers.ipynb" rel="nofollow"><img src="https://camo.githubusercontent.com/f5e0d0538a9c2972b5d413e0ace04cecd8efd828d133133933dfffec282a4e1b/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667" alt="Open In Colab" data-canonical-src="https://colab.research.google.com/assets/colab-badge.svg"></a></p>
<p dir="auto">If you are interested, there is also a youtube walkthrough of the puzzles</p>
<p dir="auto"><a href="https://youtu.be/Hafo7hIl8MU" rel="nofollow"><img src="https://camo.githubusercontent.com/a62a17dee8e8fdd46067516f6f292604608be2bd465c4a5a9cf27462fc2212e7/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f53697754417979767435732f64656661756c742e6a7067" alt="Watch the video" data-canonical-src="https://img.youtube.com/vi/SiwTAyyvt5s/default.jpg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="!pip install -qqq torchtyping hypothesis pytest git+https://github.com/danoneata/chalk@srush-patch-1
!wget -q https://github.com/srush/Tensor-Puzzles/raw/main/lib.py"><pre>!p<span>ip</span> <span>install</span> <span>-</span><span>qqq</span> <span>torchtyping</span> <span>hypothesis</span> <span>pytest</span> <span>git</span><span>+</span><span>https</span>:<span>//</span><span>github</span>.<span>com</span><span>/</span><span>danoneata</span><span>/</span><span>chalk</span>@<span>srush</span><span>-</span><span>patch</span><span>-</span><span>1</span>
!w<span>get</span> <span>-</span><span>q</span> <span>https</span>:<span>//</span><span>github</span>.<span>com</span><span>/</span><span>srush</span><span>/</span><span>Tensor</span><span>-</span><span>Puzzles</span><span>/</span><span>raw</span><span>/</span><span>main</span><span>/</span><span>lib</span>.<span>py</span></pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="from lib import draw_examples, make_test, run_test
import torch
import numpy as np
from torchtyping import TensorType as TT
tensor = torch.tensor"><pre><span>from</span> <span>lib</span> <span>import</span> <span>draw_examples</span>, <span>make_test</span>, <span>run_test</span>
<span>import</span> <span>torch</span>
<span>import</span> <span>numpy</span> <span>as</span> <span>np</span>
<span>from</span> <span>torchtyping</span> <span>import</span> <span>TensorType</span> <span>as</span> <span>TT</span>
<span>tensor</span> <span>=</span> <span>torch</span>.<span>tensor</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Rules</h2><a id="user-content-rules" aria-label="Permalink: Rules" href="#rules"></a></p>
<ol dir="auto">
<li>These puzzles are about <em>broadcasting</em>. Know this rule.</li>
</ol>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/75af16f9099f8473e04eedb662376447802133951618c181d20023f443197b8e/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f465179776f723057594173736e37593f666f726d61743d706e67266e616d653d6c61726765"><img src="https://camo.githubusercontent.com/75af16f9099f8473e04eedb662376447802133951618c181d20023f443197b8e/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f465179776f723057594173736e37593f666f726d61743d706e67266e616d653d6c61726765" alt="" data-canonical-src="https://pbs.twimg.com/media/FQywor0WYAssn7Y?format=png&amp;name=large"></a></p>
<ol start="2" dir="auto">
<li>
<p dir="auto">Each puzzle needs to be solved in 1 line (&lt;80 columns) of code.</p>
</li>
<li>
<p dir="auto">You are allowed @, arithmetic, comparison, <code>shape</code>, any indexing (e.g. <code>a[:j], a[:, None], a[arange(10)]</code>), and previous puzzle functions.</p>
</li>
<li>
<p dir="auto">You are <em>not allowed</em> anything else. No <code>view</code>, <code>sum</code>, <code>take</code>, <code>squeeze</code>, <code>tensor</code>.</p>
</li>
<li>
<p dir="auto">You can start with these two functions:</p>
</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="def arange(i: int):
    &quot;Use this function to replace a for-loop.&quot;
    return torch.tensor(range(i))

draw_examples(&quot;arange&quot;, [{&quot;&quot; : arange(i)} for i in [5, 3, 9]])"><pre><span>def</span> <span>arange</span>(<span>i</span>: <span>int</span>):
    <span>"Use this function to replace a for-loop."</span>
    <span>return</span> <span>torch</span>.<span>tensor</span>(<span>range</span>(<span>i</span>))

<span>draw_examples</span>(<span>"arange"</span>, [{<span>""</span> : <span>arange</span>(<span>i</span>)} <span>for</span> <span>i</span> <span>in</span> [<span>5</span>, <span>3</span>, <span>9</span>]])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_7_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_7_0.svg" alt="svg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Example of broadcasting.
examples = [(arange(4), arange(5)[:, None]) ,
            (arange(3)[:, None], arange(2))]
draw_examples(&quot;broadcast&quot;, [{&quot;a&quot;: a, &quot;b&quot;:b, &quot;ret&quot;: a + b} for a, b in examples])"><pre><span># Example of broadcasting.</span>
<span>examples</span> <span>=</span> [(<span>arange</span>(<span>4</span>), <span>arange</span>(<span>5</span>)[:, <span>None</span>]) ,
            (<span>arange</span>(<span>3</span>)[:, <span>None</span>], <span>arange</span>(<span>2</span>))]
<span>draw_examples</span>(<span>"broadcast"</span>, [{<span>"a"</span>: <span>a</span>, <span>"b"</span>:<span>b</span>, <span>"ret"</span>: <span>a</span> <span>+</span> <span>b</span>} <span>for</span> <span>a</span>, <span>b</span> <span>in</span> <span>examples</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_8_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_8_0.svg" alt="svg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="def where(q, a, b):
    &quot;Use this function to replace an if-statement.&quot;
    return (q * a) + (~q) * b

# In diagrams, orange is positive/True, where is zero/False, and blue is negative.

examples = [(tensor([False]), tensor([10]), tensor([0])),
            (tensor([False, True]), tensor([1, 1]), tensor([-10, 0])),
            (tensor([False, True]), tensor([1]), tensor([-10, 0])),
            (tensor([[False, True], [True, False]]), tensor([1]), tensor([-10, 0])),
            (tensor([[False, True], [True, False]]), tensor([[0], [10]]), tensor([-10, 0])),
           ]
draw_examples(&quot;where&quot;, [{&quot;q&quot;: q, &quot;a&quot;:a, &quot;b&quot;:b, &quot;ret&quot;: where(q, a, b)} for q, a, b in examples])"><pre><span>def</span> <span>where</span>(<span>q</span>, <span>a</span>, <span>b</span>):
    <span>"Use this function to replace an if-statement."</span>
    <span>return</span> (<span>q</span> <span>*</span> <span>a</span>) <span>+</span> (<span>~</span><span>q</span>) <span>*</span> <span>b</span>

<span># In diagrams, orange is positive/True, where is zero/False, and blue is negative.</span>

<span>examples</span> <span>=</span> [(<span>tensor</span>([<span>False</span>]), <span>tensor</span>([<span>10</span>]), <span>tensor</span>([<span>0</span>])),
            (<span>tensor</span>([<span>False</span>, <span>True</span>]), <span>tensor</span>([<span>1</span>, <span>1</span>]), <span>tensor</span>([<span>-</span><span>10</span>, <span>0</span>])),
            (<span>tensor</span>([<span>False</span>, <span>True</span>]), <span>tensor</span>([<span>1</span>]), <span>tensor</span>([<span>-</span><span>10</span>, <span>0</span>])),
            (<span>tensor</span>([[<span>False</span>, <span>True</span>], [<span>True</span>, <span>False</span>]]), <span>tensor</span>([<span>1</span>]), <span>tensor</span>([<span>-</span><span>10</span>, <span>0</span>])),
            (<span>tensor</span>([[<span>False</span>, <span>True</span>], [<span>True</span>, <span>False</span>]]), <span>tensor</span>([[<span>0</span>], [<span>10</span>]]), <span>tensor</span>([<span>-</span><span>10</span>, <span>0</span>])),
           ]
<span>draw_examples</span>(<span>"where"</span>, [{<span>"q"</span>: <span>q</span>, <span>"a"</span>:<span>a</span>, <span>"b"</span>:<span>b</span>, <span>"ret"</span>: <span>where</span>(<span>q</span>, <span>a</span>, <span>b</span>)} <span>for</span> <span>q</span>, <span>a</span>, <span>b</span> <span>in</span> <span>examples</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_9_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_9_0.svg" alt="svg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 1 - ones</h2><a id="user-content-puzzle-1---ones" aria-label="Permalink: Puzzle 1 - ones" href="#puzzle-1---ones"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.ones.html" rel="nofollow">ones</a> - the vector of all ones.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def ones_spec(out):
    for i in range(len(out)):
        out[i] = 1
        
def ones(i: int) -> TT[&quot;i&quot;]:
    raise NotImplementedError

test_ones = make_test(&quot;one&quot;, ones, ones_spec, add_sizes=[&quot;i&quot;])"><pre><span>def</span> <span>ones_spec</span>(<span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>out</span>[<span>i</span>] <span>=</span> <span>1</span>
        
<span>def</span> <span>ones</span>(<span>i</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>

<span>test_ones</span> <span>=</span> <span>make_test</span>(<span>"one"</span>, <span>ones</span>, <span>ones_spec</span>, <span>add_sizes</span><span>=</span>[<span>"i"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_11_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_11_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 2 - sum</h2><a id="user-content-puzzle-2---sum" aria-label="Permalink: Puzzle 2 - sum" href="#puzzle-2---sum"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.sum.html" rel="nofollow">sum</a> - the sum of a vector.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def sum_spec(a, out):
    out[0] = 0
    for i in range(len(a)):
        out[0] += a[i]
        
def sum(a: TT[&quot;i&quot;]) -> TT[1]:
    raise NotImplementedError


test_sum = make_test(&quot;sum&quot;, sum, sum_spec)"><pre><span>def</span> <span>sum_spec</span>(<span>a</span>, <span>out</span>):
    <span>out</span>[<span>0</span>] <span>=</span> <span>0</span>
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>a</span>)):
        <span>out</span>[<span>0</span>] <span>+=</span> <span>a</span>[<span>i</span>]
        
<span>def</span> <span>sum</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>]) <span>-&gt;</span> <span>TT</span>[<span>1</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>test_sum</span> <span>=</span> <span>make_test</span>(<span>"sum"</span>, <span>sum</span>, <span>sum_spec</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_14_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_14_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 3 - outer</h2><a id="user-content-puzzle-3---outer" aria-label="Permalink: Puzzle 3 - outer" href="#puzzle-3---outer"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.outer.html" rel="nofollow">outer</a> - the outer product of two vectors.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def outer_spec(a, b, out):
    for i in range(len(out)):
        for j in range(len(out[0])):
            out[i][j] = a[i] * b[j]
            
def outer(a: TT[&quot;i&quot;], b: TT[&quot;j&quot;]) -> TT[&quot;i&quot;, &quot;j&quot;]:
    raise NotImplementedError
    
test_outer = make_test(&quot;outer&quot;, outer, outer_spec)"><pre><span>def</span> <span>outer_spec</span>(<span>a</span>, <span>b</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>for</span> <span>j</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>[<span>0</span>])):
            <span>out</span>[<span>i</span>][<span>j</span>] <span>=</span> <span>a</span>[<span>i</span>] <span>*</span> <span>b</span>[<span>j</span>]
            
<span>def</span> <span>outer</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>b</span>: <span>TT</span>[<span>"j"</span>]) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>, <span>"j"</span>]:
    <span>raise</span> <span>NotImplementedError</span>
    
<span>test_outer</span> <span>=</span> <span>make_test</span>(<span>"outer"</span>, <span>outer</span>, <span>outer_spec</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_17_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_17_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 4 - diag</h2><a id="user-content-puzzle-4---diag" aria-label="Permalink: Puzzle 4 - diag" href="#puzzle-4---diag"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.diag.html" rel="nofollow">diag</a> - the diagonal vector of a square matrix.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def diag_spec(a, out):
    for i in range(len(a)):
        out[i] = a[i][i]
        
def diag(a: TT[&quot;i&quot;, &quot;i&quot;]) -> TT[&quot;i&quot;]:
    raise NotImplementedError


test_diag = make_test(&quot;diag&quot;, diag, diag_spec)"><pre><span>def</span> <span>diag_spec</span>(<span>a</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>a</span>)):
        <span>out</span>[<span>i</span>] <span>=</span> <span>a</span>[<span>i</span>][<span>i</span>]
        
<span>def</span> <span>diag</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>, <span>"i"</span>]) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>test_diag</span> <span>=</span> <span>make_test</span>(<span>"diag"</span>, <span>diag</span>, <span>diag_spec</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_20_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_20_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 5 - eye</h2><a id="user-content-puzzle-5---eye" aria-label="Permalink: Puzzle 5 - eye" href="#puzzle-5---eye"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.eye.html" rel="nofollow">eye</a> - the identity matrix.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def eye_spec(out):
    for i in range(len(out)):
        out[i][i] = 1
        
def eye(j: int) -> TT[&quot;j&quot;, &quot;j&quot;]:
    raise NotImplementedError
    
test_eye = make_test(&quot;eye&quot;, eye, eye_spec, add_sizes=[&quot;j&quot;])"><pre><span>def</span> <span>eye_spec</span>(<span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>out</span>[<span>i</span>][<span>i</span>] <span>=</span> <span>1</span>
        
<span>def</span> <span>eye</span>(<span>j</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"j"</span>, <span>"j"</span>]:
    <span>raise</span> <span>NotImplementedError</span>
    
<span>test_eye</span> <span>=</span> <span>make_test</span>(<span>"eye"</span>, <span>eye</span>, <span>eye_spec</span>, <span>add_sizes</span><span>=</span>[<span>"j"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_23_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_23_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 6 - triu</h2><a id="user-content-puzzle-6---triu" aria-label="Permalink: Puzzle 6 - triu" href="#puzzle-6---triu"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.triu.html" rel="nofollow">triu</a> - the upper triangular matrix.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def triu_spec(out):
    for i in range(len(out)):
        for j in range(len(out)):
            if i <= j:
                out[i][j] = 1
            else:
                out[i][j] = 0
                
def triu(j: int) -> TT[&quot;j&quot;, &quot;j&quot;]:
    raise NotImplementedError


test_triu = make_test(&quot;triu&quot;, triu, triu_spec, add_sizes=[&quot;j&quot;])"><pre><span>def</span> <span>triu_spec</span>(<span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>for</span> <span>j</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
            <span>if</span> <span>i</span> <span>&lt;=</span> <span>j</span>:
                <span>out</span>[<span>i</span>][<span>j</span>] <span>=</span> <span>1</span>
            <span>else</span>:
                <span>out</span>[<span>i</span>][<span>j</span>] <span>=</span> <span>0</span>
                
<span>def</span> <span>triu</span>(<span>j</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"j"</span>, <span>"j"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>test_triu</span> <span>=</span> <span>make_test</span>(<span>"triu"</span>, <span>triu</span>, <span>triu_spec</span>, <span>add_sizes</span><span>=</span>[<span>"j"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_26_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_26_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 7 - cumsum</h2><a id="user-content-puzzle-7---cumsum" aria-label="Permalink: Puzzle 7 - cumsum" href="#puzzle-7---cumsum"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.cumsum.html" rel="nofollow">cumsum</a> - the cumulative sum.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def cumsum_spec(a, out):
    total = 0
    for i in range(len(out)):
        out[i] = total + a[i]
        total += a[i]

def cumsum(a: TT[&quot;i&quot;]) -> TT[&quot;i&quot;]:
    raise NotImplementedError

test_cumsum = make_test(&quot;cumsum&quot;, cumsum, cumsum_spec)"><pre><span>def</span> <span>cumsum_spec</span>(<span>a</span>, <span>out</span>):
    <span>total</span> <span>=</span> <span>0</span>
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>out</span>[<span>i</span>] <span>=</span> <span>total</span> <span>+</span> <span>a</span>[<span>i</span>]
        <span>total</span> <span>+=</span> <span>a</span>[<span>i</span>]

<span>def</span> <span>cumsum</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>]) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>

<span>test_cumsum</span> <span>=</span> <span>make_test</span>(<span>"cumsum"</span>, <span>cumsum</span>, <span>cumsum_spec</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_29_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_29_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 8 - diff</h2><a id="user-content-puzzle-8---diff" aria-label="Permalink: Puzzle 8 - diff" href="#puzzle-8---diff"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.diff.html" rel="nofollow">diff</a> - the running difference.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def diff_spec(a, out):
    out[0] = a[0]
    for i in range(1, len(out)):
        out[i] = a[i] - a[i - 1]

def diff(a: TT[&quot;i&quot;], i: int) -> TT[&quot;i&quot;]:
    raise NotImplementedError

test_diff = make_test(&quot;diff&quot;, diff, diff_spec, add_sizes=[&quot;i&quot;])"><pre><span>def</span> <span>diff_spec</span>(<span>a</span>, <span>out</span>):
    <span>out</span>[<span>0</span>] <span>=</span> <span>a</span>[<span>0</span>]
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>1</span>, <span>len</span>(<span>out</span>)):
        <span>out</span>[<span>i</span>] <span>=</span> <span>a</span>[<span>i</span>] <span>-</span> <span>a</span>[<span>i</span> <span>-</span> <span>1</span>]

<span>def</span> <span>diff</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>i</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>

<span>test_diff</span> <span>=</span> <span>make_test</span>(<span>"diff"</span>, <span>diff</span>, <span>diff_spec</span>, <span>add_sizes</span><span>=</span>[<span>"i"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_32_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_32_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 9 - vstack</h2><a id="user-content-puzzle-9---vstack" aria-label="Permalink: Puzzle 9 - vstack" href="#puzzle-9---vstack"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.vstack.html" rel="nofollow">vstack</a> - the matrix of two vectors</p>
<div dir="auto" data-snippet-clipboard-copy-content="def vstack_spec(a, b, out):
    for i in range(len(out[0])):
        out[0][i] = a[i]
        out[1][i] = b[i]

def vstack(a: TT[&quot;i&quot;], b: TT[&quot;i&quot;]) -> TT[2, &quot;i&quot;]:
    raise NotImplementedError


test_vstack = make_test(&quot;vstack&quot;, vstack, vstack_spec)"><pre><span>def</span> <span>vstack_spec</span>(<span>a</span>, <span>b</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>[<span>0</span>])):
        <span>out</span>[<span>0</span>][<span>i</span>] <span>=</span> <span>a</span>[<span>i</span>]
        <span>out</span>[<span>1</span>][<span>i</span>] <span>=</span> <span>b</span>[<span>i</span>]

<span>def</span> <span>vstack</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>b</span>: <span>TT</span>[<span>"i"</span>]) <span>-&gt;</span> <span>TT</span>[<span>2</span>, <span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>test_vstack</span> <span>=</span> <span>make_test</span>(<span>"vstack"</span>, <span>vstack</span>, <span>vstack_spec</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_35_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_35_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 10 - roll</h2><a id="user-content-puzzle-10---roll" aria-label="Permalink: Puzzle 10 - roll" href="#puzzle-10---roll"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.roll.html" rel="nofollow">roll</a> - the vector shifted 1 circular position.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def roll_spec(a, out):
    for i in range(len(out)):
        if i + 1 < len(out):
            out[i] = a[i + 1]
        else:
            out[i] = a[i + 1 - len(out)]
            
def roll(a: TT[&quot;i&quot;], i: int) -> TT[&quot;i&quot;]:
    raise NotImplementedError


test_roll = make_test(&quot;roll&quot;, roll, roll_spec, add_sizes=[&quot;i&quot;])"><pre><span>def</span> <span>roll_spec</span>(<span>a</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>if</span> <span>i</span> <span>+</span> <span>1</span> <span>&lt;</span> <span>len</span>(<span>out</span>):
            <span>out</span>[<span>i</span>] <span>=</span> <span>a</span>[<span>i</span> <span>+</span> <span>1</span>]
        <span>else</span>:
            <span>out</span>[<span>i</span>] <span>=</span> <span>a</span>[<span>i</span> <span>+</span> <span>1</span> <span>-</span> <span>len</span>(<span>out</span>)]
            
<span>def</span> <span>roll</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>i</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>test_roll</span> <span>=</span> <span>make_test</span>(<span>"roll"</span>, <span>roll</span>, <span>roll_spec</span>, <span>add_sizes</span><span>=</span>[<span>"i"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_38_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_38_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 11 - flip</h2><a id="user-content-puzzle-11---flip" aria-label="Permalink: Puzzle 11 - flip" href="#puzzle-11---flip"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.flip.html" rel="nofollow">flip</a> - the reversed vector</p>
<div dir="auto" data-snippet-clipboard-copy-content="def flip_spec(a, out):
    for i in range(len(out)):
        out[i] = a[len(out) - i - 1]
        
def flip(a: TT[&quot;i&quot;], i: int) -> TT[&quot;i&quot;]:
    raise NotImplementedError


test_flip = make_test(&quot;flip&quot;, flip, flip_spec, add_sizes=[&quot;i&quot;])"><pre><span>def</span> <span>flip_spec</span>(<span>a</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>out</span>[<span>i</span>] <span>=</span> <span>a</span>[<span>len</span>(<span>out</span>) <span>-</span> <span>i</span> <span>-</span> <span>1</span>]
        
<span>def</span> <span>flip</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>i</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>test_flip</span> <span>=</span> <span>make_test</span>(<span>"flip"</span>, <span>flip</span>, <span>flip_spec</span>, <span>add_sizes</span><span>=</span>[<span>"i"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_41_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_41_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 12 - compress</h2><a id="user-content-puzzle-12---compress" aria-label="Permalink: Puzzle 12 - compress" href="#puzzle-12---compress"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.compress.html" rel="nofollow">compress</a> - keep only masked entries (left-aligned).</p>
<div dir="auto" data-snippet-clipboard-copy-content="def compress_spec(g, v, out):
    j = 0
    for i in range(len(g)):
        if g[i]:
            out[j] = v[i]
            j += 1
            
def compress(g: TT[&quot;i&quot;, bool], v: TT[&quot;i&quot;], i:int) -> TT[&quot;i&quot;]:
    raise NotImplementedError


test_compress = make_test(&quot;compress&quot;, compress, compress_spec, add_sizes=[&quot;i&quot;])"><pre><span>def</span> <span>compress_spec</span>(<span>g</span>, <span>v</span>, <span>out</span>):
    <span>j</span> <span>=</span> <span>0</span>
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>g</span>)):
        <span>if</span> <span>g</span>[<span>i</span>]:
            <span>out</span>[<span>j</span>] <span>=</span> <span>v</span>[<span>i</span>]
            <span>j</span> <span>+=</span> <span>1</span>
            
<span>def</span> <span>compress</span>(<span>g</span>: <span>TT</span>[<span>"i"</span>, <span>bool</span>], <span>v</span>: <span>TT</span>[<span>"i"</span>], <span>i</span>:<span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>test_compress</span> <span>=</span> <span>make_test</span>(<span>"compress"</span>, <span>compress</span>, <span>compress_spec</span>, <span>add_sizes</span><span>=</span>[<span>"i"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_44_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_44_0.svg" alt="svg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# run_test(test_compress)"><pre><span># run_test(test_compress)</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 13 - pad_to</h2><a id="user-content-puzzle-13---pad_to" aria-label="Permalink: Puzzle 13 - pad_to" href="#puzzle-13---pad_to"></a></p>
<p dir="auto">Compute pad_to - eliminate or add 0s to change size of vector.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def pad_to_spec(a, out):
    for i in range(min(len(out), len(a))):
        out[i] = a[i]


def pad_to(a: TT[&quot;i&quot;], i: int, j: int) -> TT[&quot;j&quot;]:
    raise NotImplementedError


test_pad_to = make_test(&quot;pad_to&quot;, pad_to, pad_to_spec, add_sizes=[&quot;i&quot;, &quot;j&quot;])"><pre><span>def</span> <span>pad_to_spec</span>(<span>a</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>min</span>(<span>len</span>(<span>out</span>), <span>len</span>(<span>a</span>))):
        <span>out</span>[<span>i</span>] <span>=</span> <span>a</span>[<span>i</span>]


<span>def</span> <span>pad_to</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>i</span>: <span>int</span>, <span>j</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"j"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>test_pad_to</span> <span>=</span> <span>make_test</span>(<span>"pad_to"</span>, <span>pad_to</span>, <span>pad_to_spec</span>, <span>add_sizes</span><span>=</span>[<span>"i"</span>, <span>"j"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_47_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_47_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 14 - sequence_mask</h2><a id="user-content-puzzle-14---sequence_mask" aria-label="Permalink: Puzzle 14 - sequence_mask" href="#puzzle-14---sequence_mask"></a></p>
<p dir="auto">Compute <a href="https://www.tensorflow.org/api_docs/python/tf/sequence_mask" rel="nofollow">sequence_mask</a> - pad out to length per batch.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def sequence_mask_spec(values, length, out):
    for i in range(len(out)):
        for j in range(len(out[0])):
            if j < length[i]:
                out[i][j] = values[i][j]
            else:
                out[i][j] = 0
    
def sequence_mask(values: TT[&quot;i&quot;, &quot;j&quot;], length: TT[&quot;i&quot;, int]) -> TT[&quot;i&quot;, &quot;j&quot;]:
    raise NotImplementedError


def constraint_set_length(d):
    d[&quot;length&quot;] = d[&quot;length&quot;] % d[&quot;values&quot;].shape[1]
    return d


test_sequence = make_test(&quot;sequence_mask&quot;,
    sequence_mask, sequence_mask_spec, constraint=constraint_set_length
)"><pre><span>def</span> <span>sequence_mask_spec</span>(<span>values</span>, <span>length</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>for</span> <span>j</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>[<span>0</span>])):
            <span>if</span> <span>j</span> <span>&lt;</span> <span>length</span>[<span>i</span>]:
                <span>out</span>[<span>i</span>][<span>j</span>] <span>=</span> <span>values</span>[<span>i</span>][<span>j</span>]
            <span>else</span>:
                <span>out</span>[<span>i</span>][<span>j</span>] <span>=</span> <span>0</span>
    
<span>def</span> <span>sequence_mask</span>(<span>values</span>: <span>TT</span>[<span>"i"</span>, <span>"j"</span>], <span>length</span>: <span>TT</span>[<span>"i"</span>, <span>int</span>]) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>, <span>"j"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>def</span> <span>constraint_set_length</span>(<span>d</span>):
    <span>d</span>[<span>"length"</span>] <span>=</span> <span>d</span>[<span>"length"</span>] <span>%</span> <span>d</span>[<span>"values"</span>].<span>shape</span>[<span>1</span>]
    <span>return</span> <span>d</span>


<span>test_sequence</span> <span>=</span> <span>make_test</span>(<span>"sequence_mask"</span>,
    <span>sequence_mask</span>, <span>sequence_mask_spec</span>, <span>constraint</span><span>=</span><span>constraint_set_length</span>
)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_50_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_50_0.svg" alt="svg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# run_test(test_sequence)"><pre><span># run_test(test_sequence)</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 15 - bincount</h2><a id="user-content-puzzle-15---bincount" aria-label="Permalink: Puzzle 15 - bincount" href="#puzzle-15---bincount"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.bincount.html" rel="nofollow">bincount</a> - count number of times an entry was seen.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def bincount_spec(a, out):
    for i in range(len(a)):
        out[a[i]] += 1
        
def bincount(a: TT[&quot;i&quot;], j: int) -> TT[&quot;j&quot;]:
    raise NotImplementedError


def constraint_set_max(d):
    d[&quot;a&quot;] = d[&quot;a&quot;] % d[&quot;return&quot;].shape[0]
    return d


test_bincount = make_test(&quot;bincount&quot;,
    bincount, bincount_spec, add_sizes=[&quot;j&quot;], constraint=constraint_set_max
)"><pre><span>def</span> <span>bincount_spec</span>(<span>a</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>a</span>)):
        <span>out</span>[<span>a</span>[<span>i</span>]] <span>+=</span> <span>1</span>
        
<span>def</span> <span>bincount</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>j</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"j"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>def</span> <span>constraint_set_max</span>(<span>d</span>):
    <span>d</span>[<span>"a"</span>] <span>=</span> <span>d</span>[<span>"a"</span>] <span>%</span> <span>d</span>[<span>"return"</span>].<span>shape</span>[<span>0</span>]
    <span>return</span> <span>d</span>


<span>test_bincount</span> <span>=</span> <span>make_test</span>(<span>"bincount"</span>,
    <span>bincount</span>, <span>bincount_spec</span>, <span>add_sizes</span><span>=</span>[<span>"j"</span>], <span>constraint</span><span>=</span><span>constraint_set_max</span>
)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_53_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_53_0.svg" alt="svg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# run_test(test_bincount)"><pre><span># run_test(test_bincount)</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 16 - scatter_add</h2><a id="user-content-puzzle-16---scatter_add" aria-label="Permalink: Puzzle 16 - scatter_add" href="#puzzle-16---scatter_add"></a></p>
<p dir="auto">Compute <a href="https://pytorch-scatter.readthedocs.io/en/1.3.0/functions/add.html" rel="nofollow">scatter_add</a> - add together values that link to the same location.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def scatter_add_spec(values, link, out):
    for j in range(len(values)):
        out[link[j]] += values[j]
        
def scatter_add(values: TT[&quot;i&quot;], link: TT[&quot;i&quot;], j: int) -> TT[&quot;j&quot;]:
    raise NotImplementedError


def constraint_set_max(d):
    d[&quot;link&quot;] = d[&quot;link&quot;] % d[&quot;return&quot;].shape[0]
    return d


test_scatter_add = make_test(&quot;scatter_add&quot;,
    scatter_add, scatter_add_spec, add_sizes=[&quot;j&quot;], constraint=constraint_set_max
)"><pre><span>def</span> <span>scatter_add_spec</span>(<span>values</span>, <span>link</span>, <span>out</span>):
    <span>for</span> <span>j</span> <span>in</span> <span>range</span>(<span>len</span>(<span>values</span>)):
        <span>out</span>[<span>link</span>[<span>j</span>]] <span>+=</span> <span>values</span>[<span>j</span>]
        
<span>def</span> <span>scatter_add</span>(<span>values</span>: <span>TT</span>[<span>"i"</span>], <span>link</span>: <span>TT</span>[<span>"i"</span>], <span>j</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"j"</span>]:
    <span>raise</span> <span>NotImplementedError</span>


<span>def</span> <span>constraint_set_max</span>(<span>d</span>):
    <span>d</span>[<span>"link"</span>] <span>=</span> <span>d</span>[<span>"link"</span>] <span>%</span> <span>d</span>[<span>"return"</span>].<span>shape</span>[<span>0</span>]
    <span>return</span> <span>d</span>


<span>test_scatter_add</span> <span>=</span> <span>make_test</span>(<span>"scatter_add"</span>,
    <span>scatter_add</span>, <span>scatter_add_spec</span>, <span>add_sizes</span><span>=</span>[<span>"j"</span>], <span>constraint</span><span>=</span><span>constraint_set_max</span>
)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_56_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_56_0.svg" alt="svg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# run_test(test_scatter_add)"><pre><span># run_test(test_scatter_add)</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 17 - flatten</h2><a id="user-content-puzzle-17---flatten" aria-label="Permalink: Puzzle 17 - flatten" href="#puzzle-17---flatten"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.flatten.html" rel="nofollow">flatten</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="def flatten_spec(a, out):
    k = 0
    for i in range(len(a)):
        for j in range(len(a[0])):
            out[k] = a[i][j]
            k += 1

def flatten(a: TT[&quot;i&quot;, &quot;j&quot;], i:int, j:int) -> TT[&quot;i * j&quot;]:
    raise NotImplementedError

test_flatten = make_test(&quot;flatten&quot;, flatten, flatten_spec, add_sizes=[&quot;i&quot;, &quot;j&quot;])"><pre><span>def</span> <span>flatten_spec</span>(<span>a</span>, <span>out</span>):
    <span>k</span> <span>=</span> <span>0</span>
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>len</span>(<span>a</span>)):
        <span>for</span> <span>j</span> <span>in</span> <span>range</span>(<span>len</span>(<span>a</span>[<span>0</span>])):
            <span>out</span>[<span>k</span>] <span>=</span> <span>a</span>[<span>i</span>][<span>j</span>]
            <span>k</span> <span>+=</span> <span>1</span>

<span>def</span> <span>flatten</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>, <span>"j"</span>], <span>i</span>:<span>int</span>, <span>j</span>:<span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"i * j"</span>]:
    <span>raise</span> <span>NotImplementedError</span>

<span>test_flatten</span> <span>=</span> <span>make_test</span>(<span>"flatten"</span>, <span>flatten</span>, <span>flatten_spec</span>, <span>add_sizes</span><span>=</span>[<span>"i"</span>, <span>"j"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_59_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_59_0.svg" alt="svg"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 18 - linspace</h2><a id="user-content-puzzle-18---linspace" aria-label="Permalink: Puzzle 18 - linspace" href="#puzzle-18---linspace"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.linspace.html" rel="nofollow">linspace</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="def linspace_spec(i, j, out):
    for k in range(len(out)):
        out[k] = float(i + (j - i) * k / max(1, len(out) - 1))

def linspace(i: TT[1], j: TT[1], n: int) -> TT[&quot;n&quot;, float]:
    raise NotImplementedError

test_linspace = make_test(&quot;linspace&quot;, linspace, linspace_spec, add_sizes=[&quot;n&quot;])"><pre><span>def</span> <span>linspace_spec</span>(<span>i</span>, <span>j</span>, <span>out</span>):
    <span>for</span> <span>k</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>out</span>[<span>k</span>] <span>=</span> <span>float</span>(<span>i</span> <span>+</span> (<span>j</span> <span>-</span> <span>i</span>) <span>*</span> <span>k</span> <span>/</span> <span>max</span>(<span>1</span>, <span>len</span>(<span>out</span>) <span>-</span> <span>1</span>))

<span>def</span> <span>linspace</span>(<span>i</span>: <span>TT</span>[<span>1</span>], <span>j</span>: <span>TT</span>[<span>1</span>], <span>n</span>: <span>int</span>) <span>-&gt;</span> <span>TT</span>[<span>"n"</span>, <span>float</span>]:
    <span>raise</span> <span>NotImplementedError</span>

<span>test_linspace</span> <span>=</span> <span>make_test</span>(<span>"linspace"</span>, <span>linspace</span>, <span>linspace_spec</span>, <span>add_sizes</span><span>=</span>[<span>"n"</span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_62_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_62_0.svg" alt="svg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# run_test(test_linspace)"><pre><span># run_test(test_linspace)</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 19 - heaviside</h2><a id="user-content-puzzle-19---heaviside" aria-label="Permalink: Puzzle 19 - heaviside" href="#puzzle-19---heaviside"></a></p>
<p dir="auto">Compute <a href="https://numpy.org/doc/stable/reference/generated/numpy.heaviside.html" rel="nofollow">heaviside</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="def heaviside_spec(a, b, out):
    for k in range(len(out)):
        if a[k] == 0:
            out[k] = b[k]
        else:
            out[k] = int(a[k] > 0)

def heaviside(a: TT[&quot;i&quot;], b: TT[&quot;i&quot;]) -> TT[&quot;i&quot;]:
    raise NotImplementedError

test_heaviside = make_test(&quot;heaviside&quot;, heaviside, heaviside_spec)"><pre><span>def</span> <span>heaviside_spec</span>(<span>a</span>, <span>b</span>, <span>out</span>):
    <span>for</span> <span>k</span> <span>in</span> <span>range</span>(<span>len</span>(<span>out</span>)):
        <span>if</span> <span>a</span>[<span>k</span>] <span>==</span> <span>0</span>:
            <span>out</span>[<span>k</span>] <span>=</span> <span>b</span>[<span>k</span>]
        <span>else</span>:
            <span>out</span>[<span>k</span>] <span>=</span> <span>int</span>(<span>a</span>[<span>k</span>] <span>&gt;</span> <span>0</span>)

<span>def</span> <span>heaviside</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>b</span>: <span>TT</span>[<span>"i"</span>]) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>

<span>test_heaviside</span> <span>=</span> <span>make_test</span>(<span>"heaviside"</span>, <span>heaviside</span>, <span>heaviside_spec</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_65_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_65_0.svg" alt="svg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# run_test(test_heaviside)"><pre><span># run_test(test_heaviside)</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 20 - repeat (1d)</h2><a id="user-content-puzzle-20---repeat-1d" aria-label="Permalink: Puzzle 20 - repeat (1d)" href="#puzzle-20---repeat-1d"></a></p>
<p dir="auto">Compute <a href="https://pytorch.org/docs/stable/generated/torch.Tensor.repeat.html" rel="nofollow">repeat</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="def repeat_spec(a, d, out):
    for i in range(d[0]):
        for k in range(len(a)):
            out[i][k] = a[k]

def constraint_set(d):
    d[&quot;d&quot;][0] = d[&quot;return&quot;].shape[0]
    return d

            
def repeat(a: TT[&quot;i&quot;], d: TT[1]) -> TT[&quot;d&quot;, &quot;i&quot;]:
    raise NotImplementedError

test_repeat = make_test(&quot;repeat&quot;, repeat, repeat_spec, constraint=constraint_set)"><pre><span>def</span> <span>repeat_spec</span>(<span>a</span>, <span>d</span>, <span>out</span>):
    <span>for</span> <span>i</span> <span>in</span> <span>range</span>(<span>d</span>[<span>0</span>]):
        <span>for</span> <span>k</span> <span>in</span> <span>range</span>(<span>len</span>(<span>a</span>)):
            <span>out</span>[<span>i</span>][<span>k</span>] <span>=</span> <span>a</span>[<span>k</span>]

<span>def</span> <span>constraint_set</span>(<span>d</span>):
    <span>d</span>[<span>"d"</span>][<span>0</span>] <span>=</span> <span>d</span>[<span>"return"</span>].<span>shape</span>[<span>0</span>]
    <span>return</span> <span>d</span>

            
<span>def</span> <span>repeat</span>(<span>a</span>: <span>TT</span>[<span>"i"</span>], <span>d</span>: <span>TT</span>[<span>1</span>]) <span>-&gt;</span> <span>TT</span>[<span>"d"</span>, <span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>

<span>test_repeat</span> <span>=</span> <span>make_test</span>(<span>"repeat"</span>, <span>repeat</span>, <span>repeat_spec</span>, <span>constraint</span><span>=</span><span>constraint_set</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_68_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_68_0.svg" alt="svg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Puzzle 21 - bucketize</h2><a id="user-content-puzzle-21---bucketize" aria-label="Permalink: Puzzle 21 - bucketize" href="#puzzle-21---bucketize"></a></p>
<p dir="auto">Compute <a href="https://pytorch.org/docs/stable/generated/torch.bucketize.html" rel="nofollow">bucketize</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="def bucketize_spec(v, boundaries, out):
    for i, val in enumerate(v):
        out[i] = 0
        for j in range(len(boundaries)-1):
            if val >= boundaries[j]:
                out[i] = j + 1
        if val >= boundaries[-1]:
            out[i] = len(boundaries)


def constraint_set(d):
    d[&quot;boundaries&quot;] = np.abs(d[&quot;boundaries&quot;]).cumsum()
    return d

            
def bucketize(v: TT[&quot;i&quot;], boundaries: TT[&quot;j&quot;]) -> TT[&quot;i&quot;]:
    raise NotImplementedError

test_bucketize = make_test(&quot;bucketize&quot;, bucketize, bucketize_spec,
                           constraint=constraint_set)"><pre><span>def</span> <span>bucketize_spec</span>(<span>v</span>, <span>boundaries</span>, <span>out</span>):
    <span>for</span> <span>i</span>, <span>val</span> <span>in</span> <span>enumerate</span>(<span>v</span>):
        <span>out</span>[<span>i</span>] <span>=</span> <span>0</span>
        <span>for</span> <span>j</span> <span>in</span> <span>range</span>(<span>len</span>(<span>boundaries</span>)<span>-</span><span>1</span>):
            <span>if</span> <span>val</span> <span>&gt;=</span> <span>boundaries</span>[<span>j</span>]:
                <span>out</span>[<span>i</span>] <span>=</span> <span>j</span> <span>+</span> <span>1</span>
        <span>if</span> <span>val</span> <span>&gt;=</span> <span>boundaries</span>[<span>-</span><span>1</span>]:
            <span>out</span>[<span>i</span>] <span>=</span> <span>len</span>(<span>boundaries</span>)


<span>def</span> <span>constraint_set</span>(<span>d</span>):
    <span>d</span>[<span>"boundaries"</span>] <span>=</span> <span>np</span>.<span>abs</span>(<span>d</span>[<span>"boundaries"</span>]).<span>cumsum</span>()
    <span>return</span> <span>d</span>

            
<span>def</span> <span>bucketize</span>(<span>v</span>: <span>TT</span>[<span>"i"</span>], <span>boundaries</span>: <span>TT</span>[<span>"j"</span>]) <span>-&gt;</span> <span>TT</span>[<span>"i"</span>]:
    <span>raise</span> <span>NotImplementedError</span>

<span>test_bucketize</span> <span>=</span> <span>make_test</span>(<span>"bucketize"</span>, <span>bucketize</span>, <span>bucketize_spec</span>,
                           <span>constraint</span><span>=</span><span>constraint_set</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/srush/Tensor-Puzzles/blob/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_69_0.svg"><img src="https://github.com/srush/Tensor-Puzzles/raw/main/Tensor%20Puzzlers_files/Tensor%20Puzzlers_69_0.svg" alt="svg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Speed Run Mode!</h2><a id="user-content-speed-run-mode" aria-label="Permalink: Speed Run Mode!" href="#speed-run-mode"></a></p>
<p dir="auto">What is the smallest you can make each of these?</p>
<div dir="auto" data-snippet-clipboard-copy-content="import inspect
fns = (ones, sum, outer, diag, eye, triu, cumsum, diff, vstack, roll, flip,
       compress, pad_to, sequence_mask, bincount, scatter_add)

for fn in fns:
    lines = [l for l in inspect.getsource(fn).split(&quot;\n&quot;) if not l.strip().startswith(&quot;#&quot;)]
    
    if len(lines) > 3:
        print(fn.__name__, len(lines[2]), &quot;(more than 1 line)&quot;)
    else:
        print(fn.__name__, len(lines[1]))"><pre><span>import</span> <span>inspect</span>
<span>fns</span> <span>=</span> (<span>ones</span>, <span>sum</span>, <span>outer</span>, <span>diag</span>, <span>eye</span>, <span>triu</span>, <span>cumsum</span>, <span>diff</span>, <span>vstack</span>, <span>roll</span>, <span>flip</span>,
       <span>compress</span>, <span>pad_to</span>, <span>sequence_mask</span>, <span>bincount</span>, <span>scatter_add</span>)

<span>for</span> <span>fn</span> <span>in</span> <span>fns</span>:
    <span>lines</span> <span>=</span> [<span>l</span> <span>for</span> <span>l</span> <span>in</span> <span>inspect</span>.<span>getsource</span>(<span>fn</span>).<span>split</span>(<span>"<span>\n</span>"</span>) <span>if</span> <span>not</span> <span>l</span>.<span>strip</span>().<span>startswith</span>(<span>"#"</span>)]
    
    <span>if</span> <span>len</span>(<span>lines</span>) <span>&gt;</span> <span>3</span>:
        <span>print</span>(<span>fn</span>.<span>__name__</span>, <span>len</span>(<span>lines</span>[<span>2</span>]), <span>"(more than 1 line)"</span>)
    <span>else</span>:
        <span>print</span>(<span>fn</span>.<span>__name__</span>, <span>len</span>(<span>lines</span>[<span>1</span>]))</pre></div>
<div data-snippet-clipboard-copy-content="ones 29
sum 29
outer 29
diag 29
eye 29
triu 29
cumsum 29
diff 29
vstack 29
roll 29
flip 29
compress 29
pad_to 29
sequence_mask 29
bincount 29
scatter_add 29"><pre><code>ones 29
sum 29
outer 29
diag 29
eye 29
triu 29
cumsum 29
diff 29
vstack 29
roll 29
flip 29
compress 29
pad_to 29
sequence_mask 29
bincount 29
scatter_add 29
</code></pre></div>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sal Khan is pioneering innovation in education again (257 pts)]]></title>
            <link>https://www.gatesnotes.com/Brave-New-Words</link>
            <guid>40440854</guid>
            <pubDate>Wed, 22 May 2024 13:39:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gatesnotes.com/Brave-New-Words">https://www.gatesnotes.com/Brave-New-Words</a>, See on <a href="https://news.ycombinator.com/item?id=40440854">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-module-name="Brave-New-Words" data-module-type="article">







<p>Ahead of the curve</p>
<p>Sal Khan is pioneering innovation in education…again</p>
<p><em>Brave New Words</em> paints an inspiring picture of AI in the classroom.</p>
<p><span> | </span></p><p>May 21, 2024 <span></span></p>
    <p><img src="https://www.gatesnotes.com/media/GNIN/gray_4x6.png" data-src="https://assets.gatesnotes.com/8a5ac0b3-6095-00af-c50a-89056fbe4642/744fed15-4a2f-4711-8af5-fd42e1026bc4/20240514-SummerBooks-BraveNewWords-TGN_Assets-001-article-hero_1200x564.jpg" data-src-tablet="https://assets.gatesnotes.com/8a5ac0b3-6095-00af-c50a-89056fbe4642/744fed15-4a2f-4711-8af5-fd42e1026bc4/20240514-SummerBooks-BraveNewWords-TGN_Assets-001-article-hero_1200x564.jpg" data-src-mobile="https://assets.gatesnotes.com/8a5ac0b3-6095-00af-c50a-89056fbe4642/744fed15-4a2f-4711-8af5-fd42e1026bc4/20240514-SummerBooks-BraveNewWords-TGN_Assets-001-article-hero_1200x564.jpg"></p>



</div><div data-module-name="Brave-New-Words" data-module-type="article" id="TGN_site_Article_body">











<p>When GPT-4o launched last week, people across the internet (and the world) were blown away. Talking to AI has always felt a bit surreal—but OpenAI’s latest model feels like talking to a real person. You can actually speak to it, and have it talk back to you, without lags. It’s as lifelike as any AI we’ve seen so far, and the use cases are limitless. One of the first that came to my mind was how big a game-changer it will be in the classroom. Imagine every student having a personal tutor powered by this technology.</p>
<p>I recently read a terrific book on this topic called <em>Brave New Words</em>. It’s written by my friend (and <a href="https://www.gatesnotes.com/Unconfuse-Me-podcast-with-guest-Sal-Khan" data-new-window="true" target="_blank" rel="noopener noreferrer">podcast guest</a>) Sal Khan, a longtime pioneer of innovation in education. Back in 2006, Sal founded Khan Academy to share the tutoring content he’d created for younger family members with a wider audience. Since then, his online educational platform has helped teach over 150 million people worldwide—including me and my kids.</p>
<p>Well before this recent AI boom, I considered him a visionary. When I learned he was writing this book, I couldn’t wait to read it. Like I expected, <em>Brave New Words</em> is a masterclass.</p>
<p>Chapter by chapter, Sal takes readers through his predictions—some have already come true since the book was written—for AI’s many applications in education. His main argument: AI will radically improve both student outcomes and teacher experiences, and help usher in a future where everyone has access to a world-class education.</p>
<p>You might be skeptical, especially if you—like me—have been following the EdTech movement for a while. For decades, exciting technologies and innovations have made headlines, accompanied by similarly bold promises to revolutionize learning and teaching as we know it—only to make a marginal impact in the classroom.</p>
<p>But drawing on his experience creating <a href="https://www.khanmigo.ai/" data-new-window="true" target="_blank" rel="noopener noreferrer">Khanmigo</a>, an AI-powered tutor, Sal makes a compelling case that AI-powered technologies will be different. That’s because we finally have a way to give every student the kind of personalized learning, support, and guidance that’s historically been out of reach for most kids in most classrooms. As Sal puts it, “Getting every student a dedicated on-call human tutor is cost prohibitive.” AI tutors, on the other hand, aren’t.</p>
<p>Picture this: You're a seventh-grade student who struggles to keep up in math. But now, you have an AI tutor like the one Sal describes by your side. As you work through a challenging set of fraction problems, it won’t just give you the answer—it breaks each problem down into digestible steps. When you get stuck, it gives you easy-to-understand explanations and a gentle nudge in the right direction. When you finally get the answer, it generates targeted practice questions that help build your understanding and confidence.</p>
<p>And with the help of an AI tutor, the past comes to life in remarkable ways. While learning about Abraham Lincoln’s leadership during the Civil War, you can have a “conversation” with the 16<sup>th</sup> president himself. (As Sal demonstrates in the book, conversations with one of my favorite literary figures, Jay Gatsby, are also an option.)</p>
<p>When the time comes to write your essay, don’t worry about the dreaded blank page. Instead, your AI tutor asks you thought-starters to help brainstorm. You get feedback on your outline in seconds, with tips to improve the logic or areas where you need more research. As you draft, the tutor evaluates your writing in real-time—almost impossible without this technology—and shows where you might clarify your ideas, provide more evidence, or address a counterargument. Before you submit, it gives detailed suggestions to refine your language and sharpen your points.</p>
<p>Is this cheating?</p>
<p>It’s a complicated question, and there’s no one-size-fits-all answer. Sal notes that bouncing ideas off friends, asking family members to critique work, and using spellcheckers and tools like Grammarly—which can rephrase entire sentences—aren’t considered cheating today by most measures. Similarly, when used right, AI doesn’t work for students but <em>with </em>them to move something forward that they might otherwise get stuck on. That’s why, according to Sal, a lot of educators who first banned AI from class are now encouraging students to use it.</p>
<p>After all, mastery of AI won’t just be nice to have in a few years—for many professions, it’ll be necessary. Employees who can use AI effectively will be far more valuable than those who can’t. By incorporating this technology into education, we're both improving students’ experiences and outcomes <em>and</em> preparing them for the jobs of the future—which will become more enjoyable and fulfilling with AI in the mix.</p>
<p>That includes teaching. With every transformative innovation, there are fears of machines taking jobs. But when it comes to education, I agree with Sal: AI tools and tutors never can and never should replace teachers. What AI can do, though, is support and empower them.</p>
<p>Until now, most EdTech solutions, as great as they may be, haven’t meaningfully made teachers’ lives easier. But with AI, they can have a superhuman teaching assistant to handle routine tasks like lesson planning and grading—which take up almost half of a typical teacher's day. In seconds, an AI assistant can grade spelling tests or create a lesson plan connecting the Industrial Revolution to current events. It can even monitor each student's progress and give teachers instant feedback, allowing for a new era of personalized learning.</p>
<p>With AI assistants handling the mundane stuff, teachers can focus on what they do best: inspiring students, building relationships, and making sure everyone feels seen and supported—especially kids who need a little extra help.</p>
<p>Of course, there are challenges involved in bringing AI into schools at scale, and Sal is candid about them. We need systems that protect student privacy and mitigate biases. And there’s still a lot to do so that every kid has access to the devices and connectivity they need to use AI in the first place. No technology is a silver bullet for education. But I believe AI can be a game-changer and great equalizer in the classroom, the workforce, and beyond.</p>
<p>I recently visited First Avenue School in Newark, New Jersey, where Khanmigo is currently being piloted. We’re still in the early days, but it was amazing to see firsthand how AI can be used in the classroom—and to speak with students and teachers who are already reaping the benefits. It felt like catching a glimpse of the future. No one understands where education is headed better than Sal Khan, and I can't recommend <em>Brave New Words</em> enough.</p></div></div>]]></description>
        </item>
    </channel>
</rss>