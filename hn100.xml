<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 21 Apr 2024 18:00:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Microsoft is a national security threat: ex-White House cyber policy director (177 pts)]]></title>
            <link>https://www.theregister.com/2024/04/21/microsoft_national_security_risk/</link>
            <guid>40106639</guid>
            <pubDate>Sun, 21 Apr 2024 15:44:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2024/04/21/microsoft_national_security_risk/">https://www.theregister.com/2024/04/21/microsoft_national_security_risk/</a>, See on <a href="https://news.ycombinator.com/item?id=40106639">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p><span>Interview</span> Microsoft has a shocking level of control over IT within the US federal government – so much so that former senior White House cyber policy director AJ Grotto thinks it's fair to call Redmond's recent security failures a national security issue.&nbsp;</p>
<p>Grotto this week spoke with <em>The Register</em> in an interview you can watch below, in which he told us that exacting even slight concessions from Microsoft has been a major fight for the Feds.</p>
<p>
  <a href="https://www.youtube.com/watch?v=FxDsYy-c7Bo" data-media="x-videoplayer">Youtube Video</a>
</p>

    

<p>"If you go back to the <a href="https://www.theregister.com/2023/10/31/sec_charges_solarwinds_sunburst_fraud/">SolarWinds episode</a> from a few years ago … [Microsoft] was essentially up-selling logging capability to federal agencies" instead of making it the default, Grotto said. "As a result, it was really hard for agencies to identify their exposure to the SolarWinds breach."&nbsp;</p>

        


        

<p>Grotto told us Microsoft had to be "dragged kicking and screaming" to provide logging capabilities to the government by default, and given the fact the mega-corp banked around $20 billion in revenue from security services last year, the concession was minimal at best.&nbsp;</p>
<p>That illustrates, Grotto said, that "they [Microsoft] just have a ton of leverage, and they're not afraid to use it."&nbsp;</p>

        

<p>Add to that concerns over an Exchange Online <a href="https://www.theregister.com/2024/04/03/cisa_microsoft_exchange_online_china_report/">intrusion</a> by Chinese snoops, and <a href="https://www.theregister.com/2024/04/12/microsoft_cisa_order/">another Microsoft security breach</a> by Russian cyber operatives, both of which allowed spies to gain access to US government emails, and Grotto says it's fair to classify Microsoft and its products as a national security concern.&nbsp;</p>
<p>But what can be done to solve the problem when 85 percent of US government productivity software, by Grotto's reckoning, and even more operating system share, belongs to Redmond?&nbsp;</p>
<p>"The government needs to focus on encouraging and catalyzing competition," Grotto said. He believes it also needs to publicly scrutinize Microsoft and make sure everyone knows when it messes up.&nbsp;</p>

        

<p>"At the end of the day, Microsoft, any company, is going to respond most directly to market incentives," Grotto told us. "Unless this scrutiny generates changed behavior among its customers who might want to look elsewhere, then the incentives for Microsoft to change are not going to be as strong as they should be." ®</p>                                


                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[All Fritz Box modems have been hijacked (215 pts)]]></title>
            <link>https://crapts.org/2024/04/21/all-fritz-box-modems-have-been-hijacked/</link>
            <guid>40106336</guid>
            <pubDate>Sun, 21 Apr 2024 15:08:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://crapts.org/2024/04/21/all-fritz-box-modems-have-been-hijacked/">https://crapts.org/2024/04/21/all-fritz-box-modems-have-been-hijacked/</a>, See on <a href="https://news.ycombinator.com/item?id=40106336">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-v-461f54e1=""><p><em>TL;DR: Every Fritz!Box has been compromised by DNS hijacking and using a Fritz!Box is unsafe. Every user of a Fritz!Box should immediately stop using their Fritz!Box or set up their own DHCP server.</em></p><p>Fritz!Box modems are popular modems by the German company AVM. They are tailored to the some-what more experienced users who want to have more control over their network settings and they can often be used to replace the modem from your cable/DSL/fiber ISP. The company has been around for a long time and Fritz!Box devices are generally considered to be reliable and well worth the price.</p><p>However, since the beginning of 2024 all of the Fritz!Box devices have been hijacked. In short, the DHCP server on these modems hands out leases with the DNS suffix <code>fritz.box</code>, which means that domains in DNS requests <a href="https://superuser.com/questions/1481698/dns-suffix-explanation?ref=crapts.org" rel="noreferrer">are appended with the suffix</a>. Unfortunately, this setting cannot be modified. Normally this doesn't have to be a problem, but since the beginning of this year the <code>fritz.box</code> DNS suffix is an <a href="https://whois.domaintools.com/fritz.box?ref=crapts.org" rel="noreferrer">actual registered domain</a> and the owner of this domain is not AVM or anyone affiliated to them. </p><p>This is a very serious issue. DNS requests on a Fritz!Box home network now get forwarded to an unknown entity, which is a case of <a href="https://en.wikipedia.org/wiki/DNS_hijacking?ref=crapts.org" rel="noreferrer">DNS hijacking</a>. Not every OS deals with DNS suffices in the same way, but at least Windows applies the suffix for all DNS requests which means every DNS request done by a Windows user is now effectively hijacked. </p><figure><img src="https://crapts.org/content/images/2024/04/image.png" alt="" loading="lazy" width="560" height="225"></figure><p>The consequences of this are significant: Fritz!Box users' internet behavior is now sent directly to an unknown party and are now prone to phishing attacks. As far as I know the latter hasn't happened yet, but it's bound to happen at some point if this is not resolved as soon as possible.</p><p>Besides the security issues, this also has a negative effect on performance when the registered IP address isn't responding to the DNS requests. I myself have experienced Chrome and Slack to be very slow in resolving network requests after starting up my Windows laptop.</p><p>AVM's response so far has been lacking except for a <a href="https://twitter.com/AVM_DE/status/1779155999204552897?ref=crapts.org" rel="noreferrer">tweet</a> that <code>fritz.box</code> domain is in the process of being sold. To me that is alarming in three ways:</p><ol><li>"In the process of being sold" means it is not sold yet and there is no guarantee AVM will actually take ownership of the domain.</li><li>Even if the domain is acquired by AVM, this still means that every DNS request will now go over the internet directly to AVM. I never asked for this.</li><li>A performance penalty will remain. Your internet will sometimes appear to be really slow when the registered IP address for the DNS suffix domain is not actually responding with a DNS resolution.</li></ol><p>The only proper way to resolve this matter in my opinion is to disable the DNS suffix by default. So far there is no indication that AVM is planning to enable this option in the near future.</p><p>If you want to do something today without waiting for AVM, the following remedies are available:</p><ul><li>Use a custom DHCP server and don't set the DNS suffix to <code>fritz.box</code></li><li>Don't use a Fritz!Box device at all</li></ul><p>Since setting up a DHCP server is somewhat complex, my only recommendation at this point is to immediately stop using all Fritz!Box device. They are unsafe and dangerous to use. The lack of a proper response from AVM is even more alarming and I'm not sure they understand the gravity of the situation. I sincerely hope the matter gets resolved soon enough.</p><p>PS. I didn't discover this by myself. The article above is a summary of what other <a href="https://www.reddit.com/r/fritzbox/comments/1b7d0rs/change_domain_in_fritzbox_7360/?ref=crapts.org" rel="noreferrer">people</a> <a href="https://www.reddit.com/r/fritzbox/comments/klzqar/fritzbox_7590_change_default_fritzbox_domain/?ref=crapts.org" rel="noreferrer">have</a> <a href="https://gathering.tweakers.net/forum/list_message/78779034?ref=crapts.org" rel="noreferrer">discovered</a>,  and some even warned for this years ago.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I can't stand using VSCode so I wrote my own (112 pts)]]></title>
            <link>https://bold-edit.com/wrote-my-own.html</link>
            <guid>40106157</guid>
            <pubDate>Sun, 21 Apr 2024 14:47:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bold-edit.com/wrote-my-own.html">https://bold-edit.com/wrote-my-own.html</a>, See on <a href="https://news.ycombinator.com/item?id=40106157">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p>I used to like vscode. I've been using it since it could run and debug C#. Last year, I noticed I frequently hit bugs where I couldn't type until I switched out and back into the editor with alt-tab. That's not so bad but it got annoying when I couldn't build or debug until I restarted the program</p>


<p>One day, possibly the thing that bothered me the most was when I was writing a GDB pretty printer. I'd tweak the script; then to see the results I would press F5 to run the already built binary and wait over a second EVERY SINGLE TIME (about 1480ms). It was driving me nuts. I ended up leaving a terminal open and would save, alt tab, press up, enter. All that would still be almost a second faster than if I were to restart the debugger in vscode. I then realized it won't matter how fast my compiler is (I've implemented one for my own language) it will always feel slow if I use vscode (the compiler builds a debuggable binary in 15 milliseconds).</p>

<p>Finally, what broke the camel's back was when I was debugging 3 different complex functions. Each had about 15-20 variables I was interested in. I had the watch panel take up the entire right side and there wasn't enough room. I had to <b>manually remove and add variables</b> every time I rotated to a third function. I wouldn't always put the vars back in the same order. It was obnoxious. Whichever function I was looking at I wanted to see the same set of variables on the top right in the same order every time. Between the bugs, it being slow to launch, and now debugging becoming a problem I decided then and there to write a text editor.</p>

<p>I thought, how hard could it be? The answer is always harder than you expect but I knew that and I wanted to find out</p>

<p>The first thing I did was implement GDB support. Here's a video of the watch variables at the top right changing based on the function its in</p>
<video src="https://bold-edit.com/wrote-my-own-vids/dynamic.mp4" controls=""></video>
<p>If you look closely you'll see there's no flickering. All variables and their values show up at the same time. You can see variables are shown significantly quicker. From the video you can't see when I press a button to launch the debugger. From launch to breakpoint (which includes the build step) it took &lt;200ms. Two of my biggest annoyances I solved. Next, I wanted to make sure editing and rendering is fast no matter how large the file is. Some tools generate hundreds of MBs of JSON. Here's a video of me opening two files (both 1gb) scrolling around, typing, and pressing undo/redo.</p>
<video src="https://bold-edit.com/wrote-my-own-vids/large.mp4" controls=""></video>
<p>I was pretty happy that I could run 60fps without dropping frames with a debug build (vscode drops frames). However for a 4K monitor, I need an optimized build. Even with typing and undo/redo I consistently stayed over 144fps so people with fast monitors can have a smooth experience.</p>

<p>
I like being able to partially type a filename and jump to it, or find/jump to a type. I like to rename variables. LSP's (language server protocol) support these so I implemented it. It's not a complete implementation, one thing easy to see is there is no semantic tokens support which would improve highlighting. The video shows signature help but doesn't show jump to, rename, hover, etc. Friends didn't like debugging in their current IDE so they asked if I could implement DAP support. So I implemented that as well. The video shows an example using python.</p>
<video src="https://bold-edit.com/wrote-my-own-vids/lsp.mp4" controls=""></video>

<p>A few weeks before I began writing, I met the people who work on the undo debugger. Their goal is to let people replay executions, so you can figure out and debug complicated problems that no one knows how to reproduce. But that's not why I liked it. I did this.</p>
<video src="https://bold-edit.com/wrote-my-own-vids/udb.mp4" controls=""></video>
<p>In that video, I ran the 'last' command on the global variable g1. The debugger brought me to the last time it was modified. It's magic. I use it constantly, even when I know where it's modified. It saves me from writing a conditional on a breakpoint and I don't have to guess if I don't know which spot the variable was last modified. It's not a free debugger but I wanted to implement the feature for myself and it was very easy since it had the same protocol as gdb and the implementation was just a few lines on top of my already existing gdb implementation.</p>

<p>This editor is still early in development and plenty of features are missing. There's no global search, there is a find but no replace and people who like vim motions will need to wait. If you try it for 5 minutes feel free to let me know all the things that you noticed were missing. There's a tutorial file in the download to give you something to do in the first few minutes of using this.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I made an open source Windows app to rewind and search everything on screen (191 pts)]]></title>
            <link>https://tonoko.notion.site/I-made-an-open-source-app-to-rewind-search-everything-happened-on-your-screen-on-Windows-184d1a9d5edb494dba0c2f46d311ec5c</link>
            <guid>40105371</guid>
            <pubDate>Sun, 21 Apr 2024 12:53:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tonoko.notion.site/I-made-an-open-source-app-to-rewind-search-everything-happened-on-your-screen-on-Windows-184d1a9d5edb494dba0c2f46d311ec5c">https://tonoko.notion.site/I-made-an-open-source-app-to-rewind-search-everything-happened-on-your-screen-on-Windows-184d1a9d5edb494dba0c2f46d311ec5c</a>, See on <a href="https://news.ycombinator.com/item?id=40105371">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[I love programming but I hate the programming industry (240 pts)]]></title>
            <link>https://www.deathbyabstraction.com/I-love-programming-but-I-hate-the-programming-industry</link>
            <guid>40105121</guid>
            <pubDate>Sun, 21 Apr 2024 12:20:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.deathbyabstraction.com/I-love-programming-but-I-hate-the-programming-industry">https://www.deathbyabstraction.com/I-love-programming-but-I-hate-the-programming-industry</a>, See on <a href="https://news.ycombinator.com/item?id=40105121">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

		<p>I never really fit into any software engineering job I’ve had. The technical side of things got boring after I had gained a basic grasp of the inner logic of the codebase and no longer felt challenged, and then I wanted to do more, and more importantly - do it differently. I wondered about design decisions and their broader purpose: why are we doing this and why are we doing it in this specific way? Might there be a better way? What metrics are we using to determine success and why? Although these questions weren’t always posed aloud I got told I ‘think too much’ and ‘care too much’ when I could be using this time to churn out more lines of code. I didn’t belong, and I was too young and insecure to articulate that this wasn’t just a simple mismatch between my talent and my position. It was that I fundamentally disagreed with the way these places operate and wanted to do work to change them rather than perpetuate them.</p>

<p>If there ever was a part of me that thought ‘there has to be better things out there’, looking at job postings for a couple of weeks in 2023 was enough to kill that illusion. 90% of the time when I read descriptions it is excruciatingly obvious to me that whatever code the chosen candidates will end up writing at this job will be completely removed from any important problem not only humanity, but even any individual human has ever had. Startup culture is shamelessly at the forefront of this industry’s ‘produce more code and ask less questions’ policy. All most startups do is move investors money around while trying to acquire paid users by convincing them they need a product that is more often than not marginally useful at best. They <a href="https://www.quora.com/Why-do-95-of-start-ups-fail-what-do-the-5-do-right-that-make-them-successful">usually fail</a> at that, leaving behind thousands of lines of unmaintainable spaghetti code engineers were bullied into writing in weeks instead of months using arbitrary trendy technologies. No one will ever look at that shit again except maybe as an example of bad coding practices, engineers’ time has been wasted and venture capital largely ends up in the hands of the people that already possess significant capital - they may use that to fund another startup, and this wretched cycle continues. Job ads that try to paint this as some kind of exciting meaningful endeavour that will enrich people’s lives and stimulate my engineering growth are an insult to my intelligence. I don’t want to be a part of this - not just because it is arguably immoral but because it is fundamentally and infuriatingly boring and pointless.</p>

<p>While established tech companies differ from startups organisationally and financially, they don’t really contrast them culturally. Sure, the code you write at a FAANG might actually make its way to users, but what you as an individual happen to think about any aspect of writing code will be more irrelevant than ever. You are a cog in a machine not only in the sense that the product you are building is likely automating the <a href="https://doctorow.medium.com/https-pluralistic-net-2023-11-06-attention-rents-consumer-welfare-queens-fa3475adb465">worst aspects of capitalism</a> in increasingly sinister ways, but also in a practical sense, you’re a number: the size of your backend stack, or your tech interview score, or your performance review score. It’s not so much this reality itself that’s so atrocious to me, but more the fact that as engineers we’re expected to find this empty and humiliating grind even more aspirational than many other workers are, and are even more discouraged from questioning any aspect of it.</p>

<p>Essentially, the concept of critical thinking has been made anathema to engineering: as a programmer you are to focus solely on the how, rarely on the what, and certainly never on the why. For the rare code monkey that finds themselves able and willing to critique the system they’re producing for the message is clear: leave that shit at the door. A code monkey is prohibited from even identifying the lack of autonomy and creativity inherent to the position - they can only strive to build more, never to build differently, or build different and better things.</p>

<p>So while this do-more-ask-less mentality of the tech world might produce more code it also consistently leads to <a href="https://stackoverflow.blog/2023/12/25/is-software-getting-worse/">worse software</a>. Even in the cases where capital and other forces outside of our immediate control theoretically allow for us to build software in a way that is sustainable, or has a positive impact on the world at large, or is at the very least useful practically we still often don’t, because of simple inertia: it’s easier and usually more viable to do what’s on trend and reproduce the status quo once more. Worse yet, this same inertia then seeps into the entire tech stack this societally useless product is built upon. The technologies all the way down to the languages, libraries, frameworks, and even code patterns become infected with the same brand of novelty and gimmicks before actual innovation that plagues the industry as a whole. After all, if you’re not solving unconventional problems, why would you need unconventional engineering?</p>

<p>In truth, the most interesting engineering problems are usually the ones which arise naturally in our society, as opposed to those where technological advancement is an end in and of itself, or even those which attempt to artificially create a market demand where there isn’t one. Societal necessity is the best possible driving force of innovation - remember that historically the most groundbreaking <a href="https://www.bbc.com/news/technology-18419691">achievements</a> in early computing have happened in the service of the greater good. This is what I really want to do: I want every <em>how</em> - from the programming language and paradigm, architecture, down to every line of code and piece of syntax - to be informed by the <em>why</em> of the system that is being built. And I want that <em>why</em> to be a reflection of a genuine existing need, not some bullshit business metric which pretty much exists for its own sake.</p>

<p>So far I haven’t had the chance to actually meet someone who would share these values in any significant sense and would want to do this kind of engineering work. Despite the isolation I often experience in my interactions with this industry, I am confident in the value of my work and the importance of the things I have to say. So if you are that person please reach out - it would be interesting to know if a place for someone like me already exists somewhere. And if not I think it would benefit us to create it.</p>

		
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tiny World Map (244 pts)]]></title>
            <link>https://github.com/tinyworldmap/tiny-world-map</link>
            <guid>40104774</guid>
            <pubDate>Sun, 21 Apr 2024 11:21:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tinyworldmap/tiny-world-map">https://github.com/tinyworldmap/tiny-world-map</a>, See on <a href="https://news.ycombinator.com/item?id=40104774">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">tinyworldmap</h2><a id="user-content-tinyworldmap" aria-label="Permalink: tinyworldmap" href="#tinyworldmap"></a></p>
<p dir="auto">tinyworldmap is a world map for offline-first and low-bandwidth web apps.</p>
<p dir="auto"><a href="https://tinyworldmap.com/" rel="nofollow">Demo</a></p>
<p dir="auto"><kbd><a target="_blank" rel="noopener noreferrer" href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/images/zoomed-mid.png"><img src="https://github.com/tinyworldmap/tiny-world-map/raw/gh-pages/images/zoomed-mid.png"></a></kbd></p>
<p dir="auto">tinyworldmap is designed to be used with Leaflet. All zoom levels are supported, and the most complete version is only 300 kB gzipped. Its client-side rendering has been extensively profiled and tested on low-end decade-old phones, with no discernible lag.</p>
<p dir="auto">By default, the map displays the 10,000 most populous cities added to OpenStreetMap. At the time of writing, this encompasses all cities and towns with a population of at least 48,000:</p>
<p dir="auto"><kbd><a target="_blank" rel="noopener noreferrer" href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/images/zoomed-in-3.png"><img src="https://github.com/tinyworldmap/tiny-world-map/raw/gh-pages/images/zoomed-in-3.png"></a></kbd></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">There are two ways to use the map:</p>
<ol dir="auto">
<li>As a base map, replacing OpenStreetMap tiles</li>
<li>As an offline fallback for OpenStreetMap tiles</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">As a base map</h3><a id="user-content-as-a-base-map" aria-label="Permalink: As a base map" href="#as-a-base-map"></a></p>
<p dir="auto">To use tinyworldmap as a Leaflet base map, add the following to your <code>head</code> tag:</p>
<div dir="auto" data-snippet-clipboard-copy-content="<script src=&quot;https://tinyworldmap.com/dist/tiny-world-all-10000.js&quot;>"><pre><span>&lt;</span><span>script</span> <span>src</span>="<span>https://tinyworldmap.com/dist/tiny-world-all-10000.js</span>"<span>&gt;</span></pre></div>
<p dir="auto">This script embeds all data necessary to display the map.</p>
<p dir="auto">Then, instead of adding a tile layer to the Leaflet map, use:</p>
<div dir="auto" data-snippet-clipboard-copy-content="new L.GridLayer.TinyWorld().addTo(map)"><pre><span>new</span> <span>L</span><span>.</span><span>GridLayer</span><span>.</span><span>TinyWorld</span><span>(</span><span>)</span><span>.</span><span>addTo</span><span>(</span><span>map</span><span>)</span></pre></div>
<p dir="auto">The <code>TinyWorld</code> constructor accepts several options: <code>backgroundColor</code>, <code>textFillColor</code>, <code>borderStrokeColor</code>, <code>borderFillColor</code>, <code>borderWidth</code>, <code>textStrokeColor</code> (which helps separate the text from the rest), <code>textStrokeWidth</code>, <code>cityFont</code> (e.g. <code>"12px Arial"</code>), <code>countryFont</code>, and <code>dotColor</code>.</p>
<p dir="auto">If <code>dotColor</code> is specified, each city is marked with a dot. This enhances usability when using the stripped-down version of tinyworldmap that excludes country borders:</p>
<p dir="auto"><kbd><a target="_blank" rel="noopener noreferrer" href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/images/noborders.png"><img src="https://github.com/tinyworldmap/tiny-world-map/raw/gh-pages/images/noborders.png"></a></kbd></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">As a fallback map</h3><a id="user-content-as-a-fallback-map" aria-label="Permalink: As a fallback map" href="#as-a-fallback-map"></a></p>
<p dir="auto">In offline-first web applications, caching image-based maps at all zoom levels is impossible due to the vast number of tiles, with a combined size often in the order of terabytes.</p>
<p dir="auto">This repository <a href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/service-worker.js">provides</a> a service worker to enable offline functionality for web apps with maps.</p>
<p dir="auto">When this service worker is installed, the fallback map is preloaded. All visited pages are cached, but the base map is excluded. While the server can be reached, cached data is not used. When the user is offline, the website is served from cache, and the service worker intercepts requests to the OSM tile server, generating replacement tiles locally using tinyworldmap.</p>
<p dir="auto">Before <a href="https://web.dev/articles/service-workers-registration" rel="nofollow">registering the service worker</a>, first modify all sections in the service worker marked <code>IMPORTANT</code>. Once registered, be sure to attribute OpenStreetMap and tinyworldmap in your tile layer as follows:</p>
<div dir="auto" data-snippet-clipboard-copy-content="L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&amp;copy; <a href=&quot;https://www.openstreetmap.org/copyright&quot;>OpenStreetMap</a>, <a href=&quot;https://www.tinyworldmap.com&quot;>tinyworldmap</a>'
}).addTo(map);"><pre><span>L</span><span>.</span><span>tileLayer</span><span>(</span><span>'https://tile.openstreetmap.org/{z}/{x}/{y}.png'</span><span>,</span> <span>{</span>
    <span>maxZoom</span>: <span>19</span><span>,</span>
    <span>attribution</span>: <span>'&amp;copy; &lt;a href="https://www.openstreetmap.org/copyright"&gt;OpenStreetMap&lt;/a&gt;, &lt;a href="https://www.tinyworldmap.com"&gt;tinyworldmap&lt;/a&gt;'</span>
<span>}</span><span>)</span><span>.</span><span>addTo</span><span>(</span><span>map</span><span>)</span><span>;</span></pre></div>
<p dir="auto">To see an example of a production application using tinyworldmap as a fallback, visit <a href="https://hitchmap.com/" rel="nofollow">Hitchmap</a>. Simply load the website in a browser supporting service workers, wait for a while, turn off your internet, and reload. The web app should be functioning as normal, using the fallback map. Note that it might take a while for the service worker to install.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tinier world maps</h2><a id="user-content-tinier-world-maps" aria-label="Permalink: Tinier world maps" href="#tinier-world-maps"></a></p>
<p dir="auto">The complete map is 300K gzipped/694K uncompressed. For certain use cases, this might still be too large.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">No borders</h3><a id="user-content-no-borders" aria-label="Permalink: No borders" href="#no-borders"></a></p>
<p dir="auto"><a href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/dist/tiny-world-noborders-10000.js"><code>tiny-world-noborders-10000.js(on)</code></a> contains all the data present in the complete version except for country borders and shorelines. This reduces the gzipped version by 100k and the uncompressed version by 200k.</p>
<p dir="auto">In addition to its smaller size, the version without borders has the advantage that all data included is precise. The country borders in the complete version are not exact at high zoom levels, which can look strange when overlaying shapes that match country borders and shorelines. In such cases, the version without borders often looks better.</p>
<p dir="auto">This is the default styling:</p>
<p dir="auto"><kbd><a target="_blank" rel="noopener noreferrer" href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/images/noborders.png"><img src="https://github.com/tinyworldmap/tiny-world-map/raw/gh-pages/images/noborders.png"></a></kbd></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">No cities</h3><a id="user-content-no-cities" aria-label="Permalink: No cities" href="#no-cities"></a></p>
<p dir="auto">There are two versions available without city labels: <code>tiny-world-nocities.js(on)</code> (which retains country labels) and <code>tiny-world-borders.js(on)</code> (which omits country labels). The city labels comprise 410K uncompressed and 172K compressed.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Fewer cities</h3><a id="user-content-fewer-cities" aria-label="Permalink: Fewer cities" href="#fewer-cities"></a></p>
<p dir="auto">Finally, for each file including city labels, there also exist versions featuring 2,000 cities and 4,000 cities. Simply substitute <code>10000</code> with <code>2000</code> or <code>4000</code> in the filename.</p>
<table>
<thead>
<tr>
<th>Cities included</th>
<th>Population</th>
</tr>
</thead>
<tbody>
<tr>
<td>10,000</td>
<td>&gt; 48,000</td>
</tr>
<tr>
<td>4,000</td>
<td>&gt; 137,000</td>
</tr>
<tr>
<td>2,000</td>
<td>&gt; 287,000</td>
</tr>
</tbody>
</table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Hire tinyworldmap</h2><a id="user-content-hire-tinyworldmap" aria-label="Permalink: Hire tinyworldmap" href="#hire-tinyworldmap"></a></p>
<p dir="auto">If you require a customized map (e.g. in more detail or in another language) or if you need assistance implementing offline functionality on your website, please contact us at <a href="mailto:business@tinyworldmap.com?body=Hi%20Bob,">business@tinyworldmap.com</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Attribution</h2><a id="user-content-attribution" aria-label="Permalink: Attribution" href="#attribution"></a></p>
<p dir="auto">Like OpenStreetMap data, tinyworldmap data is licensed under the ODBL, which necessitates attribution. If you've followed the steps outlined above, your Leaflet footer should include attribution to both OpenStreetMap and tinyworldmap. If not, add the following:</p>
<div dir="auto" data-snippet-clipboard-copy-content="&amp;copy; <a href=&quot;https://www.openstreetmap.org/copyright&quot;>OpenStreetMap</a>, <a href=&quot;https://www.tinyworldmap.com&quot;>tinyworldmap</a>"><pre>&amp;copy; <span>&lt;</span><span>a</span> <span>href</span>="<span>https://www.openstreetmap.org/copyright</span>"<span>&gt;</span>OpenStreetMap<span>&lt;/</span><span>a</span><span>&gt;</span>, <span>&lt;</span><span>a</span> <span>href</span>="<span>https://www.tinyworldmap.com</span>"<span>&gt;</span>tinyworldmap<span>&lt;/</span><span>a</span><span>&gt;</span></pre></div>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Drone footage of baby penguins jumping off cliff (101 pts)]]></title>
            <link>https://petapixel.com/2024/04/17/baby-penguins-jump-off-50-foot-cliff-in-first-of-its-kind-drone-footage/</link>
            <guid>40104475</guid>
            <pubDate>Sun, 21 Apr 2024 10:10:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://petapixel.com/2024/04/17/baby-penguins-jump-off-50-foot-cliff-in-first-of-its-kind-drone-footage/">https://petapixel.com/2024/04/17/baby-penguins-jump-off-50-foot-cliff-in-first-of-its-kind-drone-footage/</a>, See on <a href="https://news.ycombinator.com/item?id=40104475">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<article data-post-id="738162">
<header>


</header>

<div>
<figure id="attachment_738178" aria-describedby="caption-attachment-738178"><img data-perfmatters-preload="" fetchpriority="high" decoding="async" src="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-800x548.jpg" alt="" width="800" height="548" srcset="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-800x548.jpg 800w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-320x219.jpg 320w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-1536x1053.jpg 1536w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-2048x1404.jpg 2048w" sizes="(max-width: 800px) 100vw, 800px"><figcaption id="caption-attachment-738178">Emperor penguin chicks jumping off the ice shelf edge for their first swim at Atka Bay on the Ekström Ice Shelf in Antarctica.</figcaption></figure> <p>Drone footage has captured the astonishing moment hundreds of emperor penguin chicks jump off a 50-foot cliff in Antarctica for the first time.</p>  <p>Wildlife photographer and filmmaker <a href="https://www.bertiegregory.com/" data-wpel-link="external" target="_blank" rel="follow external noopener">Bertie Gregory</a> captured the “unprecedented” footage for <a href="https://www.nationalgeographic.com/animals/photography/article/emperor-penguins-chicks-antarctica-jumping" data-wpel-link="external" target="_blank" rel="follow external noopener"><em>National Geographic’s</em> upcoming documentary <em>Secrets of the Penguins</em></a>, which will debut in April 2025. </p> <div><p><iframe src="https://www.youtube.com/embed/4PwDFddpo4c?si=RzmxyylyemDz6S-w" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p></div> <p>The <em>National Geographic</em> filmmakers were shooting in Atka Bay on the Ekstrom Ice Shelf, Antarctica in January this year, when they spotted approximately 700 emperor penguin chicks gathering at the edge of a cliff. </p> <p><img decoding="async" src="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-800x567.jpg" alt="penguin drone footage jumping cliff " width="800" height="567" srcset="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-800x567.jpg 800w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-320x227.jpg 320w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-1536x1088.jpg 1536w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-2048x1450.jpg 2048w" sizes="(max-width: 800px) 100vw, 800px"></p> <p><img decoding="async" src="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-800x519.jpg" alt="penguin drone footage jumping cliff " width="800" height="519" srcset="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-800x519.jpg 800w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-320x207.jpg 320w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-1536x996.jpg 1536w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-2048x1327.jpg 2048w" sizes="(max-width: 800px) 100vw, 800px"></p>
<p>Antarctica is home to 66 known Emperor penguin colonies, which usually breed and raise their chicks in the winter. Some of these emperor colonies have been raising chicks high up on permanent ice shelves.</p> <p><img loading="lazy" decoding="async" src="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-800x509.jpg" alt="penguin drone footage jumping cliff " width="800" height="509" srcset="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-800x509.jpg 800w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-320x204.jpg 320w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-1536x978.jpg 1536w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-2048x1304.jpg 2048w" sizes="(max-width: 800px) 100vw, 800px"></p> <p>Every January, when the chicks are around five months old, they undergo a process known as fledging. During this process, the chicks lose their baby feathers and leave their colony for the first time — jumping from an enormous cliff into the ocean to take their first swim. </p> <h2>A Heart-Stopping Jump Filmed For The First Time</h2> <p>While these huge jumps have been witnessed by scientists before, Gregory filmed this rare and heart-stopping behavior for the first time for television. </p> <p>In the extraordinary footage filmed for <em>Secrets of the Penguins</em>, a colony of chicks is seen making their way along the edge of the huge ice cliff, moving together toward the edge before stopping.</p> <p>Eventually, one brave chick takes the first leap from the summit and smashes into the icy ocean waters below. </p> <p>Once this penguin swims off to fill its stomach with fish, prompting the others to follow suit. From there, hundreds of chicks are seen jumping off the cliff into the ocean. </p>
<p>According to scientists, this is the first-ever video footage of emperor penguin chicks leaping from such a high cliff. Scientists who monitor penguins from satellites in space say this phenomenon is extremely rare.</p> <p>In a press release, the <em>National Geographic </em> revealed Gregory used a newly released camera drone, equipped with a telephoto lens, which allowed him to capture the animals’ behavior from the air like never before — without disrupting or impacting the penguins.</p> <p>“Filming the fledging of emperor penguins presented a unique set of challenges as the passage only takes place when the sea ice reaches its most unstable time of the year,” National Geographic says <a href="https://www.businesswire.com/news/home/20240411040454/en/National-Geographic-and-Bertie-Gregory-Release-Unprecedented-Footage-of-Emperor-Penguin-Behavior-Filmed-for-the-First-Time-on-the-Coast-of-Antarctica" data-wpel-link="external" target="_blank" rel="follow external noopener">in a statement</a>. </p> <p>“Bertie and his team took every measure to ensure the safety of the crew and wildlife by assembling a world-class safety team.”</p>  <hr> <p>&nbsp;<br> <em><strong>Image credits:</strong> All photos by <a href="https://www.businesswire.com/news/home/20240411040454/en/National-Geographic-and-Bertie-Gregory-Release-Unprecedented-Footage-of-Emperor-Penguin-Behavior-Filmed-for-the-First-Time-on-the-Coast-of-Antarctica" data-wpel-link="external" target="_blank" rel="follow external noopener"><em>National Geographic</em>/Bertie Gregory</a> .</em></p>  </div>
</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Doom-htop: The classic DOOM game over htop (209 pts)]]></title>
            <link>https://github.com/0x0mer/doom-htop</link>
            <guid>40104410</guid>
            <pubDate>Sun, 21 Apr 2024 09:53:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/0x0mer/doom-htop">https://github.com/0x0mer/doom-htop</a>, See on <a href="https://news.ycombinator.com/item?id=40104410">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">doom-htop</h2><a id="user-content-doom-htop" aria-label="Permalink: doom-htop" href="#doom-htop"></a></p>
<p dir="auto">Ever wondered whether <code>htop</code> could be used to render the graphics of cult video games? I know I have.
In order to quench our curiosity and for your viewing pleasure, I created <code>doom-htop</code>.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/0x0mer/doom-htop/blob/master/screenshots/doom.gif"><img src="https://github.com/0x0mer/doom-htop/raw/master/screenshots/doom.gif" alt="" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ol dir="auto">
<li><a href="#How-to-build">How to build</a></li>
<li><a href="#How-to-run">How to run</a></li>
<li><a href="#How-it-works">How it works</a></li>
<li><a href="#Platforms">Platforms</a></li>
<li><a href="#Troubleshooting">Troubleshooting</a></li>
<li><a href="#further-work-required">Further work required</a></li>
<li><a href="#faq">F.A.Q</a></li>
<li><a href="#License">License</a></li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to build</h2><a id="user-content-how-to-build" aria-label="Permalink: How to build" href="#how-to-build"></a></p>

<p dir="auto"><strong>Notice!</strong> In order to use this project, you need a WAD (game data) file. The one I included is freedoom1.wad (All credit goes to <a href="https://freedoom.github.io/index.html" rel="nofollow">The Freedoom project</a>!).</p>
<p dir="auto">Of course you're welcome to download the classic free shareware version DOOM1.wad <a href="https://doomwiki.org/wiki/DOOM1.WAD" rel="nofollow">from here</a>. (I wasn't sure if I was legally allowed to upload it to github, and decided against it).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to run</h2><a id="user-content-how-to-run" aria-label="Permalink: How to run" href="#how-to-run"></a></p>
<p dir="auto">If I were you, I would probably save any important work I have open before doing this. That being said, I tested this code on a 12-year old Lenovo® ThinkPad T430s with 8GB RAM and an Intel Core i7-3520M @ 2.90GHz running Ubuntu 22.04 and it ran just fine.</p>
<p dir="auto">Anyways, simply run:</p>
<div data-snippet-clipboard-copy-content="sed -i 's/update_process_names=0/update_process_names=1/' ~/.config/htop/htoprc
sudo ./doom-htop -iwad freedoom1.wad
htop -d 1 -s M_VIRT"><pre><code>sed -i 's/update_process_names=0/update_process_names=1/' ~/.config/htop/htoprc
sudo ./doom-htop -iwad freedoom1.wad
htop -d 1 -s M_VIRT
</code></pre></div>
<p dir="auto">It doesn't matter whether you run <code>doom-htop</code> or <code>htop</code> first.</p>
<p dir="auto">The <code>sudo</code> is only needed in order to open your keyboard's device.</p>
<p dir="auto">If you're the kinda person who would rather not run sketchy programs off the <em>Internet™</em> with root privilges, you can go ahead and run it without <code>sudo</code> and just look at the pretty pictures.</p>
<p dir="auto">The <code>-d 1</code> is because we're going for that sweet, sweet 10 FPS refresh rate, and the <code>-s M_VIRT</code> is because we're gonna want to sort the processes by virtual memory allocation, which should be pretty indicative of our processes and bunch them up together nicely. If for some reason that doesn't work for you, you can go ahead and play with the define <code>PROCS_MALLOC_SIZE</code> in <code>main.c</code> until everything looks nice.</p>
<p dir="auto">Finally, the <code>sed</code> command is needed because by default, <code>htop</code> doesn't refresh the processes' names every time.
This design choice was <em>probably</em> made because <code>htop</code> wasn't originally designed to render ascii-art videos, but we'll never know for sure.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How it works</h2><a id="user-content-how-it-works" aria-label="Permalink: How it works" href="#how-it-works"></a></p>
<p dir="auto">It's pretty straight-forward, actually. The amazing project <a href="https://github.com/ozkl/doomgeneric">https://github.com/ozkl/doomgeneric</a> which I forked, did all the heavy lifting.
I simply added the 3 files:</p>
<ol dir="auto">
<li>main.c</li>
<li>keylogger.c</li>
<li>ascii_stuff.c</li>
</ol>
<p dir="auto">And edited a few others.</p>
<p dir="auto">I wrote a simple image-to-ascii converter that generated the long if statement you can find in the file <code>ascii_stuff.c</code>.</p>
<p dir="auto">The main doom process forks and creates as many process as there are lines in the ascii converted image, and then creates a shared memory segment with every single one of them.</p>
<p dir="auto">The main process copies each line in the image to the matching process's memory segment, and each child-process copies from its segment and writes over its <code>argv[0]</code>. That's it, really.</p>
<p dir="auto">Originally I wanted to do it with processes sorted by CPU usage, and create a process that consumes a specific CPU percentage, but that turned out to be pretty hard.
Then I though about using linux's <code>nice</code>, but as a user you're only allowed 19 possible values, and I wanted better graphics. Eventually I stumbled upon the idea of using virtual memory allocation, which as I said before, as pretty specific per process.</p>
<p dir="auto">I noticed that even when all the forked processes allocate exactly the same amount of memory, <code>htop</code> shows the frame in the right order. I believe that happens because maybe in case of equality the processes are then sorted by time of creation? This works on my system (and is actually a little better, because that way there is less space in which another process could "get into the frame"), but I wasn't sure how it would work on other people's systems and didn't want to take the chance. This also means that I could have probably just given all the processes a unique <code>nice</code> value, but whatever.</p>
<p dir="auto">Anyways, then I created a simple keylogger that works by opening the keyboard's device. This way the game is always playing in the background regardless of whether <code>htop</code> is open or not, which I think is neat.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Platforms</h2><a id="user-content-platforms" aria-label="Permalink: Platforms" href="#platforms"></a></p>
<p dir="auto">I only ever tested it on my Ubuntu 22.04. I know the keyboard device is named something else in WSL and Arch, you're welcome to port it if you like.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Troubleshooting</h2><a id="user-content-troubleshooting" aria-label="Permalink: Troubleshooting" href="#troubleshooting"></a></p>
<ol dir="auto">
<li>
<p dir="auto"><strong>Keyboard doesn't work</strong></p>
<p dir="auto">The device I'm trying to open is defined in <code>#define KEYBOARD_DEVICE</code> in the file <code>main.c</code>. I'm sure it won't work universally. I only tested the code on Ubuntu 22.04, and I know for a fact it won't work out of the box for WSL, and that the device in Arch is named something else. You're welcome to port it to your platform.
Try to <code>ll /dev/input/by-path</code>, and choose one of the options that has <code>kbd</code> in it.</p>
</li>
<li>
<p dir="auto"><strong>The frame is frozen</strong></p>
<p dir="auto">Maybe the <code>sed</code> command didn't work. You can change the <code>htop</code> configuation manually by hitting the F2 key -&gt; "Display options" -&gt; mark <code>[X]</code> on "Update process names on every refresh"</p>
</li>
<li>
<p dir="auto"><code>sed: can't read /home/&lt;user&gt;/.config/htop/htoprc: No such file or directory</code></p>
<p dir="auto">I guess this will probably happen if you've never used <code>htop</code> before. In that case run <code>htop</code>, quit, and run the <code>sed</code> command again.</p>
</li>
<li>
<p dir="auto">For some reason the main doom process crashed, and you're left with a ton of zombie processes doing nothing:
Run <code>sudo pkill doom-htop</code>.</p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Further work required</h2><a id="user-content-further-work-required" aria-label="Permalink: Further work required" href="#further-work-required"></a></p>
<ul dir="auto">
<li><code>htop</code> moves the screen around when you're trying to walk around using the arrow keys which is pretty annoying. A simple but silly solution would be to change <code>htop</code>'s focus after you start your game, for example by pressing <code>a</code>, which opens the menu for selecting your processors, then it won't be as annoying.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">F.A.Q</h2><a id="user-content-faq" aria-label="Permalink: F.A.Q" href="#faq"></a></p>
<ol dir="auto">
<li>Q: Why did you make this? A: I thought it would be <a href="https://github.com/xoreaxeaxeax/movfuscator?tab=readme-ov-file#faq">funny</a>.</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Freedoom is released under a BSD-like license which can be found in the file freedoom-license.txt in the main directory. I believe all other code is GPL'd.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A hacker's guide to Language Models (135 pts)]]></title>
            <link>https://github.com/fastai/lm-hackers/blob/main/lm-hackers.ipynb</link>
            <guid>40103912</guid>
            <pubDate>Sun, 21 Apr 2024 07:50:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/fastai/lm-hackers/blob/main/lm-hackers.ipynb">https://github.com/fastai/lm-hackers/blob/main/lm-hackers.ipynb</a>, See on <a href="https://news.ycombinator.com/item?id=40103912">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:fastai/lm-hackers" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="sdlb2bJbOdSinqKgGwUQFf-2GZrYIBc-_-5JKdaAteB4jeJajfzxwDqTKKSXAAmFPdoZ80-rwnwwPq1EwDkoiA" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="fastai/lm-hackers" data-current-org="fastai" data-current-owner="" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=57dhq0wqTm5%2BqCPCq4UWasfzwfodEllyKPyg1haFfdow1s6gDEYu6iUH5muGOGrpNTJ5wD5jptVNfuUCmykZ3Njk40pwjvRXqGeri63RQQmU3CzP7FD8WGxW1vnsHdsmukVXbNIU8RCLkYX1rexdsASposoLDMjLpZbhK8D59p6VUiVj%2FkiBoAxkl0otKHjkE%2F3VuPOrJ64rKXjHMDEjkFGt1VUtnd30a0NK7Cf9sz0oKu6cxhc%2B2uBEhXcbfnGzuF9HqEpOEC7uHG0qlQrrjqleoS9Uzr2klqG2F1s5X%2FGXlO7HtInCfGag7Y8OytwbAJ2zW5nNPm85m%2B5y%2Bb85FSbxixpjk8UUXpLFmqm9BNkDNpkxoloY8LJn9r1BsSQK3ALKff4D2p7q6KW0aZdZwv6evaUFLz3DZx%2FEe7qmkfXuJXQqKuifVMPk3A9RCHdylWZJLZ6FYG95fqencQGE5IouaKuD2y64FN3AfFL6LH9LE8dSuo9DQuS%2Fqd7YYnrg7CrP%2B3WS2YV8TWTIAohvKdMaQwTnQVn0Ub1Ee38FuOUUeD9q7ZV0bDnpPbb7563yRqA%3D--Ak63UQ%2FTxK4%2B3c8o--hm2Hmh1uc7cW0kw%2FfxNT%2FQ%3D%3D&quot; />">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=fastai%2Flm-hackers" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/fastai/lm-hackers/blob/main/lm-hackers.ipynb&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="52e5385ce4cb785984bb5e02b2ddd2c0647fa3cf77dcc1642a73c1bbfc0394db" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Programming Is Mostly Thinking (551 pts)]]></title>
            <link>http://agileotter.blogspot.com/2014/09/programming-is-mostly-thinking.html</link>
            <guid>40103407</guid>
            <pubDate>Sun, 21 Apr 2024 05:40:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://agileotter.blogspot.com/2014/09/programming-is-mostly-thinking.html">http://agileotter.blogspot.com/2014/09/programming-is-mostly-thinking.html</a>, See on <a href="https://news.ycombinator.com/item?id=40103407">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-4896867988576448796" itemprop="description articleBody">
<div dir="ltr" trbidi="on">
<blockquote>
<span><br></span><span>Pretend you have a really great programming day.</span>&nbsp;</blockquote>
<blockquote>
<span>You only have to attend a few meetings, have only a few off-topic conversations, don't get distracted or interrupted much, don't have to do a bunch of status or time reporting, and you put in a good six hours of serious programming [note: this RARELY happens in an 8-10 hour day].</span>&nbsp;</blockquote>
<blockquote>
<span>I want to review your work in the morning, so I print out a diff of your day's work before going home.</span>&nbsp;</blockquote>
<blockquote>
<span>Sadly, overnight the version control system crashes and they have to recover from the previous day's backup. You have lost an entire day's work.</span>&nbsp;</blockquote>
<blockquote>
<span>If I give you the diff, how long will it take you to type the changes back into the code base and recover your six-hours' work? </span></blockquote>
<br>
<h3>
Programming is 11/12ths Thinking</h3> <p> I've been touting this figure for some time now, and people keep asking me where the study is that produced such an odd number.  </p><p> Well, it's not pulled out of thin air and it's not the result of a thorough scientific study.  </p><p> I have done informal polls now for a few years, though I've not kept good records. My goal was not to become the scientist who cracks the statistical/mathematical code for programming activities. I was looking for a reasonable answer to a reasonable question. </p><p> However, this answer surprised me. In a long Quora post titled "<a href="#">How do programmers code so quickly?</a>"  one responder offered that it was a combination of physical skills (muscle memory, skill with tools, debugging skills,  typing skill) and knowing where to search for info. His post was swamped and overwhelmed by posts explaining that typing and tools are not the most important aid to quick code production.</p></div><p dir="ltr" trbidi="on"><br><h3>Software Factories</h3></p><div dir="ltr" trbidi="on">&nbsp; 
<p>I have seen the stickers and slogans on stickers and social media for a long time that "<a href="https://blog.ploeh.dk/2018/09/17/typing-is-not-a-programming-bottleneck/">typing is not the bottleneck</a>" (though every once in a while the inability of some programmers to type is <b>a </b>bottleneck).</p>

<p>
I am keenly aware that most management still subscribes to the idea that <i>motion is work</i>. They are fairly convinced that a lack of <i>motion</i> is a lack of <i>work</i>. That makes sense in a lawn care service, a factory assembly line, or a warehouse operation.</p>

<p>
Nearly all of the visible work done in producing physical goods is motion. People roll steel, stamp, press, mill, pick and place, bolt/screw/rivet, and on.&nbsp;</p>

<p>
Modern factories produce goods with Computer Numerical Control machines, which produce perfect copies of an original model that may not even exist in real life. These machines work from abstract models -- just data, really -- and perform perfect motion. Humans tend the machines, rather than working the wood by hand.</p>

<p>
I have some great guitars that were produced at affordable costs because of the degree of automation brought by such machines.&nbsp;</p>

<p>
Great boutique guitars are produced entirely by hand at higher cost and I don't put down that effort either. The world has room for both.</p>

<p>
<iframe allowfullscreen="allowfullscreen" frameborder="0" height="266" mozallowfullscreen="mozallowfullscreen" src="https://www.youtube.com/embed/PhOpgMDkfwc?feature=player_embedded" webkitallowfullscreen="webkitallowfullscreen" width="320"></iframe></p>



<p>
Software developers have perfected the factory. It runs flawlessly bit-perfect copies. You just click the "copy" or "download" button. It's so cheap that the purchasers happily cover the costs of the factory. Those who are cautious will double check the checksums that come with the download, but most people don't bother. The machines are reliable and efficient and quick and cheap.&nbsp;</p>

<p>
Once the initial model (really, just data) exists, then the marginal cost of all the bit-perfect copies is essentially zero. Yes, this is just copying and not creating, but that's what factories do. Custom shops might produce unique items (like guitars) but factories create copies of originals.</p>

<div><p>
The software factory tends to give you a progress bar, so you can visualize the motion of bits, but in many ways you can say that the product doesn't really exist. It's a pattern of tiny charged v. uncharged areas of metal on a plate (well, probably) and you don't even pay for the plate or the magnet or the laser when you create the copy. It's already there.</p><p>

Software is an intellectual good.</p></div>
<h3>
The Design Shop</h3>

<p>
In my years of working with Uncle Bob Martin, I heard him continually tell customers and students that software development is not a fabrication operation, but a design operation. Once the initial design is done, all the duplication is done by machines at nearly zero cost.</p>

<p>
So what programmers and testers and POs and Scrum Masters and software management area all doing (if they're doing it right) is designing the data model that will later be used by the factory to create copies for use by customers, patrons, and other people in the community the software is intended to serve.&nbsp;</p>

<p>
Yet the mechanistic, Industrial-Age idea of software development as a factory persists, and developers dutifully try to make it look like they're doing physical labor at the detriment of the process.&nbsp;</p>

<p>
All intellectual activities are hard to observe and monitor. An idea that is 80% complete has no physical manifestation. It's an idea, and it's not done yet. Sometimes we have experiments or proof-of-concept code or notes, but they don't give an accurate "% complete" number as does physical work.</p>

<p>
A chair being manufactured looks about 50% done at the 50% mark. &nbsp;When it's done, it looks done.</p>

<div><p>
A design for a chair may not exist on paper until it is more than 70% complete. And we don't know that it's really 70% done, because it's not finished being designed yet.</p><h3> The Answer: Really? </h3></div><p>
I have asked this question at conventions, client companies, to my peers, to colleagues, and to strangers I have met for the first time when I find out they are programmers. </p><p> The answer I receive most often is "about half an hour." </p><p> I could use the 8-hour day, ignoring meetings and interruptions and status reports, but that feels like padding the answer. I stick to the six hours doing things that programmers identify as programming work.</p><p>  There are twelve half-hours in six hours. One half-hour to retype all the changes made in six hours of hard programming work.  </p><p>What in the world can that mean? How can it be so little?</p></div><h3>The Meaning Behind the Answer</h3><p>Right now I suspect a bunch of managers are about to go yell at their programmers for putting in a half-hour's work in an 8-hour day! That would be a horrible misunderstanding of what was actually happening.</p><div dir="ltr" trbidi="on"> <p>  What is really happening? </p><div>
<ul>
<li>Programmers were typing on and off all day. Those 30 minutes are to recreate the <i><b>net result</b></i> of all the work they wrote, un-wrote, edited, and reworked through the day. It is not all the effort they put in, it is only the <i>residue of the effort.</i></li>
<li>Programmers are <i><b>avoiding defects</b></i> as best they can. In order to do that, they have to be continuously evaluating the code as they write it, hypothesizing the kinds of defects or security vulnerabilities they might be introducing. After all, they receive their harshest criticism for introducing defects into the shared code base.&nbsp;</li>
<li>Programming is a kind of <i><b>lossy compression</b></i>. The code only says what the program must do when it is running. Why a programmer chose one particular way over others, how it influences the rest of the system, what errors were introduced and removed, and what pitfalls it avoids are not (generally) present in the text of the program.</li>
<li>Most of the work is not in making the change, but in <i><b>deciding how to make the change</b></i>. Deciding requires us to understand the code that already exists. This is especially time-consuming when the code is messy or the design is not very obvious in the source code.&nbsp;</li>
<li>Programmers work in a <b><i>social context</i></b>&nbsp;since all their results are integrated into a shared code base (and most use pair programming or other "many eyes" techniques). Programmers may be helping other programmers or testers or operations people get a handle on their work. Connecting and communicating with others has benefits and costs that don't appear in the code.&nbsp;</li>
</ul>
</div>

<div><p>
Six hours of intellectual work (reading, researching, deciding, confirming, validating, verifying) translates to about 30 minutes worth of net lines-of-code change to a code base.</p><p>

That's not additional lines of code. We often have weeks when we fix bugs and add features and have fewer lines of code at end of the week than we had at the beginning of the week. I once got in trouble for having multiple weeks where we had negative lines of code -- we didn't know the 'grand boss' over our team was reporting SLOC as if it measured progress. Sigh.&nbsp;</p></div>

<div><p>
Programmers will gladly explain that the work they did was reading, learning, understanding, sometimes guessing, researching, debugging, testing, compiling, running, hypothesizing and disproving their ideas of what the code should look like. In short, they were thinking and deciding.</p><div><p>
Most of what goes on is intellectual work.</p><div><p>
One of the quora responders wrote:</p><blockquote>
<span>You see the fingers flying over the keyboard; you don't see the hours spent in talking to users, discussing the problems with coworkers, doing research and thinking the problems through.</span></blockquote>
</div>
<div><p>
Another suggested:</p><blockquote>
<span>I achieve it firstly (to the extent that I do) by 'helping' the customer to eliminate the unnecessary notions from their idea, which they often mistakenly call 'requirements' and sometimes even say they are 'must have'. This is the biggest possible acceleration in the delivery of a solution because I can do an infinite amount of no work in no time at all.</span></blockquote>
</div><p>
And yet another:</p><blockquote>
<span>Really good developers do 90% or more of the work before they ever touch the&nbsp; keyboard; really understanding the requirements and devising an appropriate solution.</span></blockquote><p>
These are not unique unusual answers. I find that most of the time, "knowing what not to write", "doing less," "working in smaller steps", and "having first figured out what to do" are common answers. Programming is much more about thinking than about typing.</p></div>
</div>

<p>
I have examined a lot of the change logs (diffs). It has consistently looked like 30+/-10 minutes of change on a good day (at least to me).&nbsp;</p>

<p>
I'm confident enough to tout this number as effectively true, though I should mention that no company I work with has so far been willing to delete a whole day's work to prove or disprove this experiment yet. &nbsp;Remember, I have only estimates and examinations of daily diffs to work from. The result here is not scientific.</p>

<div><p>
I should also let you know that people who do more typing or more cut/paste are often doing less thinking and understanding, which results in more errors and more burden on other programmers to understand and correct their code.</p><p><span><i>Code is just the residue of the work.</i></span></p>
<h3>
So What?</h3>
<br></div>

<p>
If programming is 1/12th motion and 11/12ths thinking, then we shouldn't push people to be typing 11/12ths of the time. We should instead provide the materials, environment, and processes necessary to ensure that the thinking we do is of high quality.&nbsp;</p>

<p>
Doing otherwise is optimizing the system for the wrong effect.</p>

<div><p>
What if we changed our tactics, and intentionally built systems for thinking together about software and making decisions easier to make? I think that productivity lies in this direction.</p><p>

So I invite you: how can you experiment with learning on-the-job to create systems where the thinking is optimized?&nbsp;</p></div>

</div>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Glibc Buffer Overflow in Iconv (141 pts)]]></title>
            <link>https://www.openwall.com/lists/oss-security/2024/04/18/4</link>
            <guid>40103188</guid>
            <pubDate>Sun, 21 Apr 2024 04:31:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.openwall.com/lists/oss-security/2024/04/18/4">https://www.openwall.com/lists/oss-security/2024/04/18/4</a>, See on <a href="https://news.ycombinator.com/item?id=40103188">Hacker News</a></p>
<div id="readability-page-1" class="page">


<table>
<tbody><tr>

<td>
<a href="https://www.openwall.com/"><img src="https://www.openwall.com/logo.png" width="182" height="80" alt="Openwall"></a>
</td><td>
<div>
<ul>
<li><a href="https://www.openwall.com/">Products</a>
<ul>
<li><a href="https://www.openwall.com/Owl/">Openwall GNU/*/Linux &nbsp; <i>server OS</i></a>
</li><li><a href="https://www.openwall.com/lkrg/">Linux Kernel Runtime Guard</a>
</li><li><a href="https://www.openwall.com/john/">John the Ripper &nbsp; <i>password cracker</i></a>
<ul>
<li><a href="https://www.openwall.com/john/">Free &amp; Open Source for any platform</a>
</li><li><a href="https://www.openwall.com/john/cloud/">in the cloud</a>
</li><li><a href="https://www.openwall.com/john/pro/linux/">Pro for Linux</a>
</li><li><a href="https://www.openwall.com/john/pro/macosx/">Pro for macOS</a>
</li></ul>
</li><li><a href="https://www.openwall.com/wordlists/">Wordlists &nbsp; <i>for password cracking</i></a>
</li><li><a href="https://www.openwall.com/passwdqc/">passwdqc &nbsp; <i>policy enforcement</i></a>
<ul>
<li><a href="https://www.openwall.com/passwdqc/">Free &amp; Open Source for Unix</a>
</li><li><a href="https://www.openwall.com/passwdqc/windows/">Pro for Windows (Active Directory)</a>
</li></ul>
</li><li><a href="https://www.openwall.com/yescrypt/">yescrypt &nbsp; <i>KDF &amp; password hashing</i></a>
</li><li><a href="https://www.openwall.com/yespower/">yespower &nbsp; <i>Proof-of-Work (PoW)</i></a>
</li><li><a href="https://www.openwall.com/crypt/">crypt_blowfish &nbsp; <i>password hashing</i></a>
</li><li><a href="https://www.openwall.com/phpass/">phpass &nbsp; <i>ditto in PHP</i></a>
</li><li><a href="https://www.openwall.com/tcb/">tcb &nbsp; <i>better password shadowing</i></a>
</li><li><a href="https://www.openwall.com/pam/">Pluggable Authentication Modules</a>
</li><li><a href="https://www.openwall.com/scanlogd/">scanlogd &nbsp; <i>port scan detector</i></a>
</li><li><a href="https://www.openwall.com/popa3d/">popa3d &nbsp; <i>tiny POP3 daemon</i></a>
</li><li><a href="https://www.openwall.com/blists/">blists &nbsp; <i>web interface to mailing lists</i></a>
</li><li><a href="https://www.openwall.com/msulogin/">msulogin &nbsp; <i>single user mode login</i></a>
</li><li><a href="https://www.openwall.com/php_mt_seed/">php_mt_seed &nbsp; <i>mt_rand() cracker</i></a>
</li></ul>
</li><li><a href="https://www.openwall.com/services/">Services</a>
</li><li id="narrow-li-1"><a>Publications</a>
<ul>
<li><a href="https://www.openwall.com/articles/">Articles</a>
</li><li><a href="https://www.openwall.com/presentations/">Presentations</a>
</li></ul>
</li><li><a>Resources</a>
<ul>
<li><a href="https://www.openwall.com/lists/">Mailing lists</a>
</li><li><a href="https://openwall.info/wiki/">Community wiki</a>
</li><li><a href="https://github.com/openwall">Source code repositories (GitHub)</a>
</li><li><a href="https://cvsweb.openwall.com/">Source code repositories (CVSweb)</a>
</li><li><a href="https://www.openwall.com/mirrors/">File archive &amp; mirrors</a>
</li><li><a href="https://www.openwall.com/signatures/">How to verify digital signatures</a>
</li><li><a href="https://www.openwall.com/ove/">OVE IDs</a>
</li></ul>
</li><li id="last-li"><a href="https://www.openwall.com/news">What's new</a>
</li></ul>
</div>


</td></tr></tbody></table>




<a href="https://www.openwall.com/lists/oss-security/2024/04/18/3">[&lt;prev]</a> <a href="https://www.openwall.com/lists/oss-security/2024/04/18/5">[next&gt;]</a> <a href="https://www.openwall.com/lists/oss-security/2024/04/17/9">[&lt;thread-prev]</a> <a href="https://www.openwall.com/lists/oss-security/2024/04/18/">[day]</a> <a href="https://www.openwall.com/lists/oss-security/2024/04/">[month]</a> <a href="https://www.openwall.com/lists/oss-security/2024/">[year]</a> <a href="https://www.openwall.com/lists/oss-security/">[list]</a>
<pre>Date: Thu, 18 Apr 2024 18:42:42 +0200
From: Solar Designer &lt;solar@...nwall.com&gt;
To: oss-security@...ts.openwall.com
Subject: Re: The GNU C Library security advisories update for 2024-04-17: GLIBC-SA-2024-0004/CVE-2024-2961: ISO-2022-CN-EXT: fix out-of-bound writes when writing escape sequence

On Wed, Apr 17, 2024 at 02:36:02PM -0300, Adhemerval Zanella Netto wrote:
&gt; GLIBC-SA-2024-0004:
&gt; ===================
&gt; ISO-2022-CN-EXT: fix out-of-bound writes when writing escape sequence
&gt; 
&gt; The iconv() function in the GNU C Library versions 2.39 and older may
&gt; overflow the output buffer passed to it by up to 4 bytes when converting
&gt; strings to the ISO-2022-CN-EXT character set, which may be used to
&gt; crash an application or overwrite a neighbouring variable.
&gt; 
&gt; ISO-2022-CN-EXT uses escape sequences to indicate character set changes
&gt; (as specified by RFC 1922).  While the SOdesignation has the expected
&gt; bounds checks, neither SS2designation nor SS3designation have its;
&gt; allowing a write overflow of 1, 2, or 3 bytes with fixed values:
&gt; '$+I', '$+J', '$+K', '$+L', '$+M', or '$*H'.
&gt; 
&gt; CVE-Id: CVE-2024-2961
&gt; Public-Date: 2024-04-17
&gt; Vulnerable-Commit: 755104edc75c53f4a0e7440334e944ad3c6b32fc (2.1.93-169)
&gt; Fix-Commit: f9dc609e06b1136bb0408be9605ce7973a767ada (2.40)
&gt; Fix-Commit: 31da30f23cddd36db29d5b6a1c7619361b271fb4 (2.39-31)
&gt; Fix-Commit: e1135387deded5d73924f6ca20c72a35dc8e1bda (2.38-66)
&gt; Fix-Commit: 89ce64b269a897a7780e4c73a7412016381c6ecf (2.37-89)
&gt; Fix-Commit: 4ed98540a7fd19f458287e783ae59c41e64df7b5 (2.36-164)
&gt; Fix-Commit: 36280d1ce5e245aabefb877fe4d3c6cff95dabfa (2.35-315)
&gt; Fix-Commit: a8b0561db4b9847ebfbfec20075697d5492a363c (2.34-459)
&gt; Fix-Commit: ed4f16ff6bed3037266f1fa682ebd32a18fce29c (2.33-263)
&gt; Fix-Commit: 682ad4c8623e611a971839990ceef00346289cc9 (2.32-140)
&gt; 
&gt; Reported-By: Charles Fol

I hope Charles will share further detail with oss-security in due time,
but meanwhile his upcoming OffensiveCon talk abstract reveals a bit:

<a href="https://www.offensivecon.org/speakers/2024/charles-fol.html" rel="nofollow">https://www.offensivecon.org/speakers/2024/charles-fol.html</a>

&gt; CHARLES FOL
&gt; ICONV, SET THE CHARSET TO RCE: EXPLOITING THE GLIBC TO HACK THE PHP ENGINE
&gt; 
&gt; Abstract
&gt; A few months ago, I stumbled upon a 24 years old buffer overflow in the
&gt; glibc. Despite being reachable in multiple well-known libraries or
&gt; programs, it proved rarely exploitable. Indeed, this was not a foos bug:
&gt; with hard-to-achieve preconditions, it did not even provide a nice
&gt; primitive. On PHP however, it lead to amazing results: a new
&gt; exploitation technique that affects the whole PHP ecosystem, and the
&gt; compromission of several applications.
&gt; 
&gt; This talk will first walk you through the discovery of the bug and its
&gt; limitations, before describing the conception of several remote binary
&gt; PHP exploits, and through them offer unique insight in the internal of
&gt; the engine of the web language, and the difficulties one faces when
&gt; exploiting it.
&gt; 
&gt; BIO
&gt; Charles Fol, also known as cfreal, is a security researcher at LEXFO /
&gt; AMBIONICS. He has discovered remote code execution vulnerabilities
&gt; targeting renowned CMS and frameworks such as Drupal, Magento, Symfony
&gt; or Laravel, but also enjoys binary exploitation, to escalate privileges
&gt; (Apache, PHP-FPM) or compromise security solutions (DataDog's Sqreen,
&gt; Fortinet SSL VPN, Watchguard). He is the creator for PHPGGC, the go-to
&gt; tool to exploit PHP deserialization, and an expert in PHP internals.

The event is on May 10-11th, so in 3 weeks from now.

Alexander
</pre>
<p><a href="http://www.openwall.com/blists/">Powered by blists</a> - <a href="http://lists.openwall.net/">more mailing lists</a>


</p><p>
Please check out the
<a href="https://oss-security.openwall.org/wiki/">
Open Source Software Security Wiki</a>, which is counterpart to this
<a href="https://oss-security.openwall.org/wiki/mailing-lists/oss-security">mailing list</a>.
</p><p>
Confused about <a href="https://www.openwall.com/lists/">mailing lists</a> and their use?
<a href="https://en.wikipedia.org/wiki/Electronic_mailing_list">Read about mailing lists on Wikipedia</a>
and check out these
<a href="https://www.complang.tuwien.ac.at/anton/mail-news-errors.html">guidelines on proper formatting of your messages</a>.
</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Racket Language (244 pts)]]></title>
            <link>https://racket-lang.org/</link>
            <guid>40102912</guid>
            <pubDate>Sun, 21 Apr 2024 03:18:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://racket-lang.org/">https://racket-lang.org/</a>, See on <a href="https://news.ycombinator.com/item?id=40102912">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="doc"><top-section> <a href="https://racket-lang.org/"><span id="logo"><img alt="small logo" src="https://racket-lang.org/img/racket-logo.svg">&nbsp;Racket</span></a>

</top-section>

<section id="pull-quote"><section-content><li></li></section-content></section>

<div><p><label for="racket-lang"><span>Racket, the Programming Language</span></label></p><div><p><img alt="large logo" src="https://racket-lang.org/img/racket-logo.svg"></p><div><p>#lang racket/gui</p><pre><p>(<a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" onclick="javascript:cancel_bubble(event)">define</a> my-language 'English)</p><p>(<a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" onclick="javascript:cancel_bubble(event)">define</a> translations<br>  #hash([Chinese . "你好 世界"]<br>        [English . "Hello world"]<br>        [French . "Bonjour le monde"]<br>        [German . "Hallo Welt"]<br>        [Greek . "Γειά σου, κόσμε"]<br>        [Portuguese . "Olá mundo"]<br>        [Spanish . "Hola mundo"]<br>        [Thai . "สวัสดีชาวโลก"]<br>        [Turkish . "Merhaba Dünya"]))</p><p>(<a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" onclick="javascript:cancel_bubble(event)">define</a> my-hello-world<br>  (<a href="http://docs.racket-lang.org/reference/hashtables.html#(def._((quote._~23~25kernel)._hash-ref))" onclick="javascript:cancel_bubble(event)">hash-ref</a> translations my-language<br>            "hello world"))</p><p>(<a href="http://docs.racket-lang.org/gui/Windowing_Functions.html#(def._((lib._mred/main..rkt)._message-box))" onclick="javascript:cancel_bubble(event)">message-box</a> "" my-hello-world)</p></pre></div></div><p><label for="mature"><span>Mature</span></label></p><p><label for="practical"><span>Practical</span></label></p><p><label for="extensible"><span>Extensible</span></label></p><p><label for="robust"><span>Robust</span></label></p><p><label for="polished"><span>Polished</span></label></p></div>

<div><p><label for="racket-lop"><span>Racket, the Language-Oriented Programming Language</span></label></p><div id="lang4"><p>#lang datalog</p><pre>ancestor(A, B) <a href="https://docs.racket-lang.org/datalog/interop.html?q=%3A-#%28form._%28%28lib._datalog%2Fmain..rkt%29._~3a-%29%29" onclick="javascript:cancel_bubble(event)">:-</a> parent(A, B).<br>ancestor(A, B) <a href="https://docs.racket-lang.org/datalog/interop.html?q=%3A-#%28form._%28%28lib._datalog%2Fmain..rkt%29._~3a-%29%29" onclick="javascript:cancel_bubble(event)">:-</a><br>  parent(A, C), ancestor(C, B).<br>parent(john, douglas).<br>parent(bob, john).<br>ancestor(A, B)?</pre></div><p><label for="little-macros"><span>Little Macros</span></label></p><div><p>Racket allows programmers to <a href="https://docs.racket-lang.org/guide/pattern-macros.html" onclick="javascript:cancel_bubble(event)">add new syntactic constructs</a> in the same way that other languages permit the formulation of procedures, methods, or classes.  All you need to do is formulate a simple rule that rewrites a custom syntax to a Racket expression or definition.</p><p>Little macros can particularly help programmers with DRY where other features can’t. The example <abc>on the left</abc> <abc>above</abc> shows how to define a new syntax for measuring the time a task takes. The syntax avoids the repeated use of lambda. Note also how the macro is exported from this module as if it were an ordinary function.</p></div><p><label for="general-purpose"><span>General Purpose</span></label></p><div><p>Racket comes with a comprehensive suite of libraries: <a href="https://docs.racket-lang.org/gui/" onclick="javascript:cancel_bubble(event)">a cross-platform GUI toolbox</a>, a <a href="https://docs.racket-lang.org/web-server/index.html?q=%23lang%20web" onclick="javascript:cancel_bubble(event)">web server</a>, and more. <a href="https://pkgs.racket-lang.org/" onclick="javascript:cancel_bubble(event)">Thousands of additional packages</a> are a <a href="https://docs.racket-lang.org/pkg/getting-started.html?q=raco%20pkg#%28part._installing-packages%29" onclick="javascript:cancel_bubble(event)">single command</a> away: 3D graphics, a bluetooth socket connector, color maps, data structures, educational software, games, a quantum-random number generator, scientific simulations, web script testing, and many more.</p><p>Macros work with these tools. The example <abc>on the left</abc> <abc>above</abc> shows the implementation of a small number-guessing game. It is implemented in the GUI dialect of Racket, and demonstrates a number of language features.</p></div><p><label for="big-macros"><span>Big Macros</span></label></p><div><p><img src="https://racket-lang.org/img/big-macros-class.png" alt="Big Macros" width="350" height="262"></p><div><p>Getting to know the full Racket macro system will feel liberating, empowering, dazzling—like a whole new level of enlightenment. Developers can easily create a collection of co-operating macros to implement <a href="https://docs.racket-lang.org/reference/match.html" onclick="javascript:cancel_bubble(event)">algebraic pattern matching</a>, simple <a href="https://docs.racket-lang.org/teachpack/2htdpuniverse.html?q=big-bang#%28part._world._interactive%29" onclick="javascript:cancel_bubble(event)">event-handling</a>, or a <a href="https://pkgs.racket-lang.org/package/faster-minikanren" onclick="javascript:cancel_bubble(event)">logic-constraint solver</a>.</p><p>While Racket is a functional language, it has offered a sub-language of <a href="http://www.cs.utah.edu/plt/publications/aplas06-fff.pdf" onclick="javascript:cancel_bubble(event)">classes and objects, mixins and traits</a>, from the beginning. The macro-based implementation of a Java-like class system lives in a library and does not need any support from the core language. A Racket programmer can thus combine functional with object-oriented components as needed. </p></div></div><p><label for="easy-dsls"><span>Easy DSLs</span></label></p><div><p><img src="https://racket-lang.org/img/lang-video.png" alt="#lang video Dependency Graph" width="350" height="350"></p><div><p>Some languages convey ideas more easily than others. And some programming languages convey solutions better than others.  Therefore Racket is a language for <a href="https://docs.racket-lang.org/guide/hash-languages.html" onclick="javascript:cancel_bubble(event)">making languages</a>, so that a programmer can write every module in a well-suited language.</p><p>Often <a href="https://lang.video/" onclick="javascript:cancel_bubble(event)">an application domain</a> comes with several languages.  When you need a new language, you make it—on the fly. Open an IDE window; create a language right there, with just a few keystrokes; and run a module in this new language in a second IDE window.  Making new languages really requires no setup, no project files, no external tools, no nothing.</p></div></div><p><label for="ide-support"><span>IDE Support</span></label></p><div><p><img src="https://racket-lang.org/img/ide-support.png" alt="IDE Support" width="552" height="465"></p><div><p>Racket comes with its own IDE, <a href="https://docs.racket-lang.org/drracket/" onclick="javascript:cancel_bubble(event)">DrRacket</a> (<a href="https://www2.ccs.neu.edu/racket/pubs/jfp01-fcffksf.pdf" onclick="javascript:cancel_bubble(event)">née DrScheme</a>), and it sports some unique features. For example, when a programmer mouses over an identifier, the IDE draws an arrow back to where it was defined.</p><p>A programmer immediately benefits from DrRacket while using an alternative language, say <a href="https://docs.racket-lang.org/ts-guide/index.html" onclick="javascript:cancel_bubble(event)">Typed Racket</a>. Racket macros, even complex ones and those used to make new languages, record and propagate a sufficient amount of source information for DrRacket to act as if it understood the features of the new language.</p></div></div><p><label for="any-syntax"><span>Any Syntax</span></label></p><div><p><img src="https://racket-lang.org/img/ugly-syntax.png" alt="Dots and Colon-Pipes, too!" width="350" height="280"></p><div><p>Racket programmers usually love parentheses, but they have empathy for those who need commas and braces.  Hence, building languages with conventional surface syntax, like that of <a href="https://docs.racket-lang.org/datalog/datalog.html?q=datalog" onclick="javascript:cancel_bubble(event)">datalog</a>, is almost as easy as building parenthetical languages.</p><p>Racket’s ecosystem comes with <a href="https://docs.racket-lang.org/br-parser-tools/index.html?q=parsing" onclick="javascript:cancel_bubble(event)">parsing packages</a> that allow developers to easily map any syntax to a parenthesized language, which is then compiled to ordinary Racket with the help of Racket’s macro system. Such a language can also exploit the hooks of the IDE framework, so that its programmers may take advantage of Racket’s IDE.</p></div></div></div>

<div><p><label for="racket-ecosystem"><span>Racket, the Ecosystem</span></label></p><div><p><img alt="eighth RacketCon, 2018" src="https://racket-lang.org/img/racket-con-2018.png"></p></div><p><label for="software"><span>Software</span></label></p><p><label for="tutorials"><span>Tutorials &amp; Documentation</span></label></p><p><label for="community"><span>Community</span></label></p><p><label for="books"><span>Books</span></label></p><p><label for="education"><span>Education</span></label></p><div><table><tbody><tr><td><p>Education</p><p><a href="https://school.racket-lang.org/" onclick="javascript:cancel_bubble(event)">The Racket Summer School</a><br>a summer school for researchers, professionals, and (under)graduate students to the Racket philosophy of programming languages</p><p><a href="http://programbydesign.org/" onclick="javascript:cancel_bubble(event)">Program by Design (aka TeachScheme!)</a><br>a curriculum and training program for high school teachers and college faculty</p><p><a href="http://www.bootstrapworld.org/" onclick="javascript:cancel_bubble(event)">Bootstrap</a><br>a curriculum and training program for middle-school and high-school teachers</p></td><td></td><td><p><img src="https://racket-lang.org/img/four.png" alt="The Four Amigos" width="450" height="322"></p></td></tr></tbody></table></div><p><label for="swag"><span>Swag</span></label></p><div><table><tbody><tr><td><p>Swag</p><p><a href="https://devswag.com/products/racket-t-shirt" onclick="javascript:cancel_bubble(event)">Racket T-Shirts</a> — the perfect way to meet friends, influence people, and stay warm.</p><p><a href="https://devswag.com/products/racket" onclick="javascript:cancel_bubble(event)">Racket Stickers</a> — the indispensable accessory for laptops and textbooks.</p></td><td></td><td><img src="https://racket-lang.org/img/gear-and-stuff.jpg" alt="gear" width="272" height="364"></td></tr></tbody></table></div></div>

<section id="bottom"><section-title><p>Thank you</p></section-title><section-content><li></li></section-content></section>




</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I bought 300 emoji domain names from Kazakhstan and built an email service (2021) (362 pts)]]></title>
            <link>https://tinyprojects.dev/projects/mailoji</link>
            <guid>40101885</guid>
            <pubDate>Sat, 20 Apr 2024 23:24:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tinyprojects.dev/projects/mailoji">https://tinyprojects.dev/projects/mailoji</a>, See on <a href="https://news.ycombinator.com/item?id=40101885">Hacker News</a></p>
<div id="readability-page-1" class="page">
	
	<nav>
		<a href="https://tinyprojects.dev/">Home</a>
		<a href="https://tinyprojects.dev/projects">Projects</a>
		<a href="https://tinyprojects.dev/guides">Guides</a>
		<a href="https://tinyprojects.dev/blog">Blog</a>
		<a href="https://daily.tinyprojects.dev/">Daily Blog</a>
	</nav>
	
	<p><i>March 11th 2021</i></p>

	<p>TLDR; I bought 300 emoji domain names from Kazakhstan and built an <a href="https://mailoji.com/" target="_blank">emoji email address service</a>. In the process I went viral on TikTok, made $1000 in a week, hired a Japanese voice actor, and learnt about the weird world of emoji domains.</p>

	<h3>🌅 The setup</h3>

	<p>Not long ago I decided it would be a brilliant idea to buy the domain name <a href="https://tinyprojects.dev/posts/i_bought_netflix_dot_soy" target="_blank">netflix.soy</a>.</p>

	<p>Whilst arguably there are better ways to spend £17, I did learn a lot about domain names, including that it's possible to have emoji domains like <span>😊.ws</span>.</p>

	<p>It's pretty hard to go a day without seeing an emoji somewhere on the internet. Yet, I'd never seen an emoji domain name before.</p>

	<p>I wondered:</p>

	<p>Could I buy an emoji domain name?</p>

	<h3>💸 Buying an emoji domain name</h3>

	<p>My goal was to buy a single character emoji domain name, like 💡 or 🍰. I didn't know what I'd do with it, I just wanted to see if I could get one.</p>

	<p>I found a website that showed every available emoji domain for 4 different extensions.</p>

	<p>Sadly, nearly every single one had been registered. I was late to the party.</p>

	<img src="https://i.gyazo.com/6aa39e2f0e8e2f9039b61c95ea360cb7.png" alt="Taken emoji domains">

	<p>A simple mailbox emoji with a .ws extension was still available though, so I bought it.</p>

	<h3>📪 The mailbox</h3>

	<img src="https://i.gyazo.com/1b78a0aab3ca0b04649eacf46fd3bc0a.png" alt="Mailbox emoji domain in GoDaddy">

	<p><span>📪.ws</span> was now mine. Mission complete.</p>

	<p>I set up a website and felt rather accomplished with my tiny mailbox.</p>

	<p>I could've stopped there and called it a day. But, then I had another thought:</p>

	<p>Could I use my little mailbox emoji domain in an email address?</p>

	<p>That'd be pretty cute.</p>

	<h3>✉️ Emoji mail attempt #1</h3>

	<p>I gave it a go. I setup an email forwarder to route all email sent to <span>📪.ws</span> to my regular email address.</p>

	<p>Eagerly I typed <span>ben@📪.ws</span> into the "to" field of gmail and hit send.</p>

	<img src="https://i.gyazo.com/3ab67d13bcfad786b7f3ba9a01968272.png" alt="Sending first emoji mail">

	<h3>🛑 Blocked</h3>

	<p>The email never hit my inbox. It was lost forever in cyberspace.</p>

	<p>Turns out emoji domain names score very highly for spam and were going to be blocked to high heaven.</p>

	<p>But, it was interesting that I could send mail towards an emoji email address.</p>

	<p>So I wondered:</p>

	<p>If a normal .com email address doesn't get blocked for spam, could I route my emoji mail through that?</p>

	<h3>💌 Emoji mail attempt #2</h3>

	<p>It would work like this: </p>

	<ol>
		<li>Email sent to <span>ben@📪.ws</span></li>
		<li><span>ben@📪.ws</span> forwards to <span>nospam@normal.com</span></li>
		<li><span>nospam@normal.com</span> forwards to my email address and won't get blocked.</li>
	</ol>

	<p>I cobbled together something using AWS, and tried my experiment again.</p>

	<p>to: <span>ben@📪.ws</span></p>
		<p>message: Hi Ben, how's it going?</p>
	

	<p>Send.</p>

	<img src="https://i.gyazo.com/bdc529a214b0e2019a96a86c933c4bcb.png" alt="First emoji mail">

	<p>It worked!</p>

	<h3>🧨 Where things started to get out of control</h3>

	<p>At this point I was inclined to stop and write a post about emoji email addresses. I'd had a good run.</p>

	<p>But then I wondered:</p>

	<p>My mailbox emoji email address is great and all, but do you know what would be better? <span>ben@⭐</span></p>

	<p>Now how do I get one of those?</p>

	<h3>🎣 Emoji domain name hunting</h3>

	<p>Only 13 TLDs in the world accept registrations of emoji domain names: .cf, .ga, .gq, .la, .ml, .tk, .st, .fm, .to, .je, .gg, .kz, and .ws.</p>

	<p>The website I had used to purchase <span>📪.ws</span> only showed 4 TLDs: .fm, .ws, .to and .ml. These are considered the gold standard of emoji domain name registrars.</p>

	<p>Every emoji had been taken on these though. You could of course get multi-character emoji domains like <span>🎉🐢.ws</span>, but I wanted single character emoji domains only.</p>

	<p>So I wondered:</p>

	<p>Do any of those other TLDs have any emoji domains left?</p>

	<h3>🔭 The great hunt</h3>

	<p>I already had some code that performed WHOIS lookups to see if a domain name is available for a list of TLDs.</p>

	<p>Previously I'd used this code to buy <a href="https://tinyprojects.dev/posts/i_bought_netflix_dot_soy" target="_blank">facebook.网站</a>, only for Marky Z to snatch it back from me. Cheeky bugger.</p>

	<p>I booted up the code and loaded in some A-tier emojis (e.g. ⭐,😂,❤️) and the 13 TLDs that accepted them.</p>

	<p><i>&gt;node search.js</i> [ENTER]</p>

	<h3>🎁 The results</h3>

	<img src="https://i.gyazo.com/6adaeb53f45f75605749f78d4dcac8c3.png" alt="Console output showing available TLDs for emoji domains">

	<p>Instantly I was seeing results! .la, .ga, .gq, .je. There were plenty of emojis still out there on these alternative extensions.</p>

	<p>An extension that stood out to me straight away was .gg, for the Island of Guernsey. "GG" is an acronym for "Good Game", and I say it often when I lose at online games. It was perfect.</p> 

	<p><span>⭐.gg</span> was available for €29. I hit purchase.</p>

	<h3>💔 No GG for me</h3>

	<p>The next day Guernsey sent me an email.</p>

	<img src="https://i.gyazo.com/527c4941fbb3ddcffbc92a0c2ef1c828.png" alt="Email from Guernsey saying emoji domains not available on .gg">

	<p>Long story short, although you could register emoji domain names with them, they didn't actually work.</p>

	<p>Good game Guernsey. Back to the drawing board.</p>

	<h3>⭐ Crazy for KZ</h3>

	<p>With every other extension I kept hitting walls. A lot of the registrars wouldn't even let me search for emoji domains. Nothing was working.</p>

	<p>One extension that kept cropping up was .kz of Kazakhstan. But, I headed over to their registar website and it was entirely in Russian.</p>

	<img src="https://i.gyazo.com/6c20c8eea912beb320555c0dace78b1b.png" alt="Russian domain name website">

	<p>I do not speak Russian.</p>

	<p>Using Google Translate, I tried to navigate the website and buy a .kz emoji domain.</p>

	<p>It was a long, painful process. But, after phoning my bank to confirm I was indeed trying to make a purchase using Kazakhstani tenge, <span>⭐.kz</span> was sitting in my account.</p>

	<p>I plugged it into my email system and <span>ben@⭐.kz</span> worked.</p>

	<p>Very nice.</p>

	<h3>💼 Let's start an email service</h3>

	<p>Something excited me. Nearly all single character emojis were available on .kz, and they were only $8 each.</p>

	<p>So, I wondered:</p>

	<p>What if you could get an email address with any emoji you wanted?</p>

	<p>I pictured email addresses like <span>bob@🚀</span>, <span>alice@🌸</span>, <span>melvin@🍆</span>.</p>

	<p>All I'd need to do is buy every emoji domain to build a service like this.</p>

	<p>It was insane, but it was possible.</p>

	<h3>🌙 The night of 150 emojis</h3>

	<p>I decided I was going to do it.</p>

	<p>If I was chuffed with my mailbox emoji email address, perhaps others would be too.</p>

	<p>I got out my debit card, and, one by one, started buying Kazakhstan emoji domains.</p>

	<p><span>💡.kz</span>, <span>👑.kz</span>, <span>🌈.kz</span>, <span>😎.kz</span>. Buy, buy, buy, buy.</p>

	<p>It was slightly painful watching my bank account going down, and the number of emoji domains go up.</p>

	<p>80 emojis in, forking over money for a goat emoji domain name, you seriously start to question what you're doing.</p>

	<p>$1200 later, 150 emoji domains were mine.</p>

	<h3>💻 Building an emoji email address website</h3>

	<p>Finally, I needed a website where you could register an emoji email address and it would forward mail like <span>ben@📪.ws</span> did.</p>

	<p>Using vanilla HTML, JS and CSS, plus Stripe's API for payments, I cobbled together an MVP over a few weeks.</p>

	<p>Once it was done, I bought one last domain name: <a href="https://mailoji.com/" target="_blank">mailoji.com</a>. My new emoji email address service <a href="https://mailoji.com/" target="_blank">Mailoji</a> was ready. Get your emoji email addresses.</p>

	<img src="https://i.gyazo.com/30c54b0bed4ffc85cb38940a2b26748e.png" alt="Mailoji emoji email address website">

	<h3>📱 TikTok</h3>

	<p>I'd gone from being curious about emoji domain names to now owning 150 of Kazakhstan's finest.</p>

	<p>The next step was to convince someone else to buy an emoji email address.</p>

	<p>TikTok seemed like a good place to start given its demographic. So, I recorded a short video advert and started a "TikTok for business" application to publish it.</p>

	<p>On the final page of the application I was asked for a VAT registration number. Mailoji was not a proper business yet, so there was no way I could publish my ad.</p>

	<p>Screw it, I'll post the video normally.</p>

	<p>Upload.</p>

	<h3>🎉 First sales</h3>

	<p>Here is the <a href="https://www.tiktok.com/@mailoji/video/6925405275201539334?lang=en&amp;is_copy_url=1&amp;is_from_webapp=v3" target="_blank">advert</a> if you're interested.</p>

	<p>The video sat at 0 views for about 5 hours before the TikTok algorithm started to work its magic.</p>

	<p>Slowly, the views started ramping up. 500 views, to 5k views, to 50k views. It was incredible to witness.</p>

	<p>People were loving emoji email addresses, people were hating emoji email addresses.</p>

	<p>It was like Marmite, a talking point. None of it mattered though because emoji email addresses were selling! <span>@🚀</span>, <span>@📷</span> &amp; <span>@💻</span> addresses were the most popular.</p>

	<p>Over 2 days the TikTok video reached 200k+ views, and 60 emoji email addresses had been sold netting ~$300/yr in revenue.</p>

	<img src="https://i.gyazo.com/e33fb288704cc42f58e50ff4a5d33fa8.png" alt="Stripe graph showing first sales from selling emoji domains">

	<p>I took this as a fantastic indicator. So guess what I did?</p>

	<h3>💵 Buying more emoji domain names</h3>

	<p>I decided to purchase 100 more emoji domains.</p>

	<p>I cried into my keyboard forking out yet more money for a llama emoji that I probably didn't need.</p>

	<p>In the end I had 250 emoji domains. If there was ever a moat into the emoji email address world, this was it.</p>

	<h3>📅 Preparing for launch</h3>

	<p>I figured the more people with emoji email addresses, the more people who would see them, and the more people who would buy them. A beautiful cycle.</p>

	<p>My next goal was a Product Hunt launch to get exposure for Mailoji, and kickstart this cycle.</p>

	<p>I prepped my launch post, carefully choosing each word and image.</p>

	<p>I even created this over-hyped promotional video, complete with Japanese voice actor saying the words "Mailoji".</p>

	<p>
	<iframe width="560" height="315" src="https://www.youtube.com/embed/JKxEXZv4G3c" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></p>

	<p>Mailoji was ready for launch.</p>

	<h3>🚀 Launch Day</h3>

	<p>At 12:03 AM PST Mailoji went live on <a href="https://www.producthunt.com/posts/mailoji" target="_blank">Product Hunt</a>. We had come a long way from that little mailbox emoji.</p>

	<img src="https://i.gyazo.com/0cf1d62b2d820c8f456a95da3cffda01.png" alt="Product hunt launch thumbnail">

	<p>It was 8:03 AM UK time. Bleary eyed, with a cup of tea in hand, I watched as Mailoji did battle.</p>

	<p>I had chosen to launch on a Wednesday against some stiff competition, but Mailoji really held its own.</p>

	<p>At the end of the day it finished in 5th place. Here were the end of day stats: </p>

	<ul>
		<li>🌎 6.7k website views
		</li><li>💌 150+ emoji email addresses sold</li>
		<li>💵 $830/yr ARR</li>
		<li>🔺 320 upvotes</li>
		<li>🏅 5th place on Product Hunt</li>
		<li>🎀 Most popular Mailoji: @🚀</li>
	</ul>

	<p>Over 150 emoji email addresses were sold in a day, and I received some fantastic feedback from the Product Hunt community.</p>

	<p>It was done, Mailoji had officially launched.</p>

	<h3>📙 The aftermath</h3>

	<p>I wish this story ended with Mailoji blowing up and the queen registering an emoji email address or something (I'll reserve <span>Liz@👑.kz</span> just in case).</p>

	<p>But, currently Mailoji is sitting at ~$1440/year in revenue. There's now 300 emoji domains to choose from though.</p>

	<img src="https://i.gyazo.com/6eac0eb3bcdaa1ee78e57b6692ed9afc.png" alt="Final Stripe ARR chart for Mailoji">

	<p>Even though I still haven't made the money back on all the emoji domains I bought, creating an emoji email address service was so much fun.</p>

	<p>It was an adventure. A rabbit hole containing multiple rabbit holes.</p>

	<p>This project started out as an exploration into emoji domain names; a weird, forgotten about internet feature that I've now become quite fond of.</p>

	<p>Yes emoji domains are hard to type on desktop, yes there's too many variations, and yes, most form validations hate them.</p>

	<p>But they're fun, and I think tech should be more fun.</p>

	<p>Thanks for reading. If you want to get in touch, I've got a brand new email address at the bottom of this website.</p>

	
	
	
	
	
	

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Scientists discover first nitrogen fixing organelle (192 pts)]]></title>
            <link>https://newscenter.lbl.gov/2024/04/17/scientists-discover-first-nitrogen-fixing-organelle/</link>
            <guid>40101317</guid>
            <pubDate>Sat, 20 Apr 2024 21:50:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newscenter.lbl.gov/2024/04/17/scientists-discover-first-nitrogen-fixing-organelle/">https://newscenter.lbl.gov/2024/04/17/scientists-discover-first-nitrogen-fixing-organelle/</a>, See on <a href="https://news.ycombinator.com/item?id=40101317">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

      
<lbl-container wrapper-size="sm">
  <lbl-rich-text>
    <p><a href="https://news.ucsc.edu/2024/04/nitrogen-fixing-organelle.html" target="_blank" rel="noopener"><em>Adapted from a release by Erin Malsbury at UC Santa Cruz</em></a></p>
<p>Modern biology textbooks assert that only bacteria can take nitrogen from the atmosphere and convert it into a form that is usable for life. Plants that fix nitrogen, such as legumes, do so by harboring symbiotic bacteria in root nodules. But a recent discovery upends that rule.</p>
<p>In two recent papers, an international team of scientists describe the first known nitrogen-fixing organelle within a eukaryotic cell. The organelle is the fourth example in history of primary endosymbiosis – the process by which a prokaryotic cell is engulfed by a eukaryotic cell and evolves beyond symbiosis into an organelle.</p>
<p>“It’s very rare that organelles arise from these types of things,” said Tyler Coale, a postdoctoral scholar at UC Santa Cruz and first author on one of two recent papers. “The first time we think it happened, it gave rise to all complex life. Everything more complicated than a bacterial cell owes its existence to that event,” he said, referring to the origins of the mitochondria. “A billion years ago or so, it happened again with the chloroplast, and that gave us plants,” Coale said.</p>
<p>The third known instance involves a microbe similar to a chloroplast. The organelle in this discovery has been named a nitroplast.</p>
<h2>A decades-long mystery</h2>
<p>The discovery of the organelle involved a bit of luck and decades of work. In 1998, Jonathan Zehr, a UC Santa Cruz distinguished professor of marine sciences, found a short DNA sequence of what appeared to be from an unknown nitrogen-fixing cyanobacterium in Pacific Ocean seawater. Zehr and colleagues spent years studying the mystery organism, which they called UCYN-A.</p>
<p>At the same time, Kyoko Hagino, a paleontologist at Kochi University in Japan, was painstakingly trying to culture a marine alga. It turned out to be the host organism for UCYN-A. It took her over 300 sampling expeditions and more than a decade, but Hagino eventually successfully grew the alga in culture, allowing other researchers to begin studying UCYN-A and its marine alga host together in the lab.</p>
<p>For years, the scientists considered UCYN-A an endosymbiont that was closely associated with an alga. But the two recent papers suggest that UCYN-A has co-evolved with its host past symbiosis and now fits criteria for an organelle.</p>
<h2>Organelle origins</h2>
<p>In a&nbsp;<a href="https://www.cell.com/cell/pdf/S0092-8674(24)00182-X.pdf" target="_blank" rel="noopener">paper published in <em>Cell</em></a>&nbsp;in March, Zehr and colleagues from the Massachusetts Institute of Technology, Institut de Ciències del Mar in Barcelona and the University of Rhode Island show that the size ratio between UCYN-A and their algal hosts is similar across different species of the marine haptophyte algae&nbsp;<em>Braarudosphaera bigelowii</em>.</p>
<p>The researchers use a model to demonstrate that the growth of the host cell and UCYN-A are controlled by the exchange of nutrients. Their metabolisms are linked. This synchronization in growth rates led the researchers to call UCYN-A “organelle-like.”</p>
<p>“That’s exactly what happens with organelles,” said Zehr. “If you look at the mitochondria and the chloroplast, it’s the same thing: they scale with the cell.”</p>
<p>But the scientists did not confidently call UCYN-A an organelle until confirming other lines of evidence. In the&nbsp;<a href="https://www.science.org/doi/10.1126/science.adk1075" target="_blank" rel="noopener">cover article of the journal <em>Science</em></a>, published last week, the UC Santa Cruz team and collaborators from Lawrence Berkeley National Laboratory (Berkeley Lab), UC San Francisco, National Taiwan Ocean University, and Kochi University in Japan show that UCYN-A relies on proteins from its host cells and that the organelle’s process of replication and division is tightly paired with the algal cell’s process.</p>
<p>“Until this paper, there was still a question of is this still an ‘endosymbiont’, or has it become a true organelle?” said co-author Carolyn Larabell, a senior faculty scientist in Berkeley Lab’s Biosciences Area and Director of the National Center for X-Ray Tomography. “We showed with X-ray imaging that the process of replication and division of the algal host and endosymbiont is synchronized, which provided the first strong evidence.”</p>
<p>Larabell has been collaborating with Zehr for several years to study the relationship between UCYN-A and the alga using the advanced soft X-ray tomography approach she co-developed at Berkeley Lab’s Advanced Light Source, a particle accelerator that produces X-rays. Her technique allows scientists to rapidly visualize internal components of cells in real-time, under real-life conditions.</p>
<p>Valentina Loconte, a research scientist in Larabell’s group, performed the tomography on a large number of <em>B. bigelowii </em>cells, then analyzed the data to generate detailed images showing the organelle’s movements within the alga at all stages of replication.</p>
<p>“That’s the beauty of our technology. We can get numbers to make quantitative statements. We have numbers at each stage of the cell cycle to show that this isn’t a quirk,” said Larabell.</p>
<p>Meanwhile, Coale compared proteins found within isolated UCYN-A with those found in the entire algal host cell. He found that around half of the proteins in UCYN-A are made by the algal host cell, then labeled with a specific amino acid sequence, which tells the cell to send them to the nitroplast. The nitroplast then imports the proteins and uses them.</p>
<p>“That’s one of the hallmarks of something moving from an endosymbiont to an organelle,” said Zehr. “They start throwing away pieces of DNA, and their genomes get smaller and smaller, and they start depending on the mother cell for those gene products – or the protein itself – to be transported into the cell.”</p>
<p>This dependent relationship, taken together with the images of synchronized division, shows that UCYN-A deserves organelle status.</p>
<h2>Changing perspectives</h2>
<p>While mitochondria and chloroplasts evolved billions of years ago, the nitroplast appears to have evolved about 100 million years ago, providing scientists with a new, more recent perspective on organellogenesis.</p>
<p>The organelle also provides insight into ocean ecosystems. All organisms need nitrogen in a biologically usable form, and rely on nitrogen fixers to break apart tightly bound nitrogen gas (N<sub>2</sub>) in the atmosphere, and convert it into ammonia (NH<sub>3</sub>) molecules that can then be made into countless other compounds. Researchers have found UCYN-A everywhere from the tropics to the Arctic Ocean, and it fixes a significant amount of nitrogen.</p>
<p>The discovery also has the potential to change agriculture. The ability to synthesize ammonia fertilizers from atmospheric nitrogen allowed agriculture – and the world population – to take off in the early 20th century. Known as the Haber-Bosch process, it makes possible about 50% of the world’s food production. It also creates enormous amounts of carbon dioxide: about 1.4% of global emissions come from the process. For decades, researchers have tried to figure out a way to incorporate natural nitrogen fixation into agriculture.</p>
<p>“This system is a new perspective on nitrogen fixation, and it might provide clues into how such an organelle could be engineered into crop plants,” said Coale.</p>
<p>But plenty of questions about UCYN-A and its algal host remain unanswered. The researchers plan to delve deeper into how UCYN-A and the alga operate and study different strains.</p>
<p>Kendra Turk-Kubo, an assistant professor at UC Santa Cruz, will continue the research in her new lab. Zehr expects scientists will find other organisms with evolutionary stories similar to UCYN-A, but as the first of its kind, this discovery is one for the textbooks.</p>
<p>This research was funded by the Simons Foundation, National Institute of General Medical Sciences, and the Department of Energy (DOE) Office of Science Office of Biological and Environmental Research. The Advanced Light Source is a DOE Office of Science user facility.</p>
<p>###</p>
<p><a href="https://www.lbl.gov/">Lawrence Berkeley National Laboratory</a> (Berkeley Lab) is committed to delivering solutions for humankind through research in clean energy, a healthy planet, and discovery science. Founded in 1931 on the belief that the biggest problems are best addressed by teams, Berkeley Lab and its scientists have been recognized with 16 Nobel Prizes. Researchers from around the world rely on the Lab’s world-class scientific facilities for their own pioneering research. Berkeley Lab is a multiprogram national laboratory managed by the University of California for the U.S. Department of Energy’s Office of Science.</p>
<p>DOE’s Office of Science is the single largest supporter of basic research in the physical sciences in the United States, and is working to address some of the most pressing challenges of our time. For more information, please visit <a href="http://energy.gov/science" target="_blank" rel="noopener">energy.gov/science</a>.</p>
  </lbl-rich-text>
</lbl-container>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Two lifeforms merge in once-in-a-billion-years evolutionary event (259 pts)]]></title>
            <link>https://newatlas.com/biology/life-merger-evolution-symbiosis-organelle/</link>
            <guid>40101290</guid>
            <pubDate>Sat, 20 Apr 2024 21:46:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newatlas.com/biology/life-merger-evolution-symbiosis-organelle/">https://newatlas.com/biology/life-merger-evolution-symbiosis-organelle/</a>, See on <a href="https://news.ycombinator.com/item?id=40101290">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Scientists have caught a once-in-a-billion-years evolutionary event in progress, as two lifeforms have merged into one organism that boasts abilities its peers would envy. Last time this happened, Earth got plants.</p><p>The phenomenon is called <a href="https://newatlas.com/biology/synthetic-hybrids-yeast-bacteria-evolution-symbiosis/" data-cms-ai="0">primary endosymbiosis</a>, and it occurs when one microbial organism engulfs another, and starts using it like an internal organ. In exchange, the host cell provides nutrients, energy, protection and other benefits to the symbiote, until eventually it can no longer survive on its own and essentially ends up <i>becoming</i> an organ for the host – or what’s known as an organelle in microbial cells.</p><p>Imagine if kidneys were actually little animals running around, and humans had to manually filter their blood through a dialysis machine. Then one day some guy somehow gets one of these kidney critters stuck... Internally (who are we to judge how?) – and realizes he no longer needs his dialysis machine. Neither do his kids, until eventually we're all born with these helpful little fellas inside us. That’s kind of what’s happening here.</p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="A diagram of the mitochondria in a cell" width="1440" height="802" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/e47eafd/2147483647/strip/true/crop/1600x891+0+0/resize/440x245!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg 440w,https://assets.newatlas.com/dims4/default/9556f7a/2147483647/strip/true/crop/1600x891+0+0/resize/800x446!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg 800w,https://assets.newatlas.com/dims4/default/214decf/2147483647/strip/true/crop/1600x891+0+0/resize/1200x668!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg 1200w,https://assets.newatlas.com/dims4/default/145c392/2147483647/strip/true/crop/1600x891+0+0/resize/1920x1069!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg 1920w" data-src="https://assets.newatlas.com/dims4/default/72bcb4b/2147483647/strip/true/crop/1600x891+0+0/resize/1440x802!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/e47eafd/2147483647/strip/true/crop/1600x891+0+0/resize/440x245!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg 440w,https://assets.newatlas.com/dims4/default/9556f7a/2147483647/strip/true/crop/1600x891+0+0/resize/800x446!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg 800w,https://assets.newatlas.com/dims4/default/214decf/2147483647/strip/true/crop/1600x891+0+0/resize/1200x668!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg 1200w,https://assets.newatlas.com/dims4/default/145c392/2147483647/strip/true/crop/1600x891+0+0/resize/1920x1069!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg 1920w" src="https://assets.newatlas.com/dims4/default/72bcb4b/2147483647/strip/true/crop/1600x891+0+0/resize/1440x802!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fdb%2Fd2%2Fa7d70c80494c888fe5f519719327%2Fmitochondria-0.jpeg">
</p>



    
    

    
        <div><figcaption itemprop="caption">A diagram of the mitochondria in a cell</figcaption><p>National Human Genome Research Institute</p></div>
    
</figure>

                
            </div><p>In the 4-billion-odd-year history of life on Earth, primary endosymbiosis is thought to have only happened twice that we know of, and each time was a massive breakthrough for evolution. The first occurred about 2.2 billion years ago, when an archaea swallowed a bacterium that became the mitochondria. This specialized energy-producing organelle allowed for basically all complex forms of life to evolve. It remains the heralded "powerhouse of the cell" to this day. </p><p>The second time happened about 1.6 billion years ago, when some of these more advanced cells absorbed cyanobacteria that could harvest energy from sunlight. These became organelles called chloroplasts, which gave sunlight-harvesting abilities, as well as a fetching green color, to a group of lifeforms you might have heard of – plants. </p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="Live moss cells under a microscope, showing their chloroplasts (green circles)" width="1440" height="919" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/0da7c66/2147483647/strip/true/crop/2295x1464+0+0/resize/440x281!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg 440w,https://assets.newatlas.com/dims4/default/1581ce0/2147483647/strip/true/crop/2295x1464+0+0/resize/800x511!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg 800w,https://assets.newatlas.com/dims4/default/5ef6141/2147483647/strip/true/crop/2295x1464+0+0/resize/1200x766!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg 1200w,https://assets.newatlas.com/dims4/default/70b7e2d/2147483647/strip/true/crop/2295x1464+0+0/resize/1920x1225!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg 1920w" data-src="https://assets.newatlas.com/dims4/default/dcdfdce/2147483647/strip/true/crop/2295x1464+0+0/resize/1440x919!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/0da7c66/2147483647/strip/true/crop/2295x1464+0+0/resize/440x281!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg 440w,https://assets.newatlas.com/dims4/default/1581ce0/2147483647/strip/true/crop/2295x1464+0+0/resize/800x511!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg 800w,https://assets.newatlas.com/dims4/default/5ef6141/2147483647/strip/true/crop/2295x1464+0+0/resize/1200x766!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg 1200w,https://assets.newatlas.com/dims4/default/70b7e2d/2147483647/strip/true/crop/2295x1464+0+0/resize/1920x1225!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg 1920w" src="https://assets.newatlas.com/dims4/default/dcdfdce/2147483647/strip/true/crop/2295x1464+0+0/resize/1440x919!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F96%2Fca%2F61428d1b484d9360ca9ce87832b0%2Fchloroplasts.jpeg">
</p>



    
    

    
        <div><figcaption itemprop="caption">Live moss cells under a microscope, showing their chloroplasts (green circles)</figcaption></div>
    
</figure>

                
            </div><p>And now, scientists have discovered that it’s happening again. A species of algae called <i>Braarudosphaera bigelowii</i> was found to have engulfed a cyanobacterium that lets them do something that algae, and plants in general, can’t normally do – "fixing" nitrogen straight from the air, and combining it with other elements to create more useful compounds.</p><p>Nitrogen is a key nutrient, and normally plants and algae get theirs through symbiotic relationships with bacteria that remain separate. At first it was thought that <i>B. bigelowii</i> had hooked up this kind of situation with a bacterium called UCYN-A, but on closer inspection, scientists discovered that the two have gotten far more intimate.</p><p>In one recent study, a team found that the size ratio between the algae and UCYN-A stays similar across different related species of the algae. Their growth appears to be controlled by the exchange of nutrients, leading to linked metabolisms.</p><p>“That’s exactly what happens with organelles,” said Jonathan Zehr, an author of the studies. “If you look at the mitochondria and the chloroplast, it’s the same thing: they scale with the cell.”</p><p>In a follow-up study, the team and other collaborators used a powerful X-ray imaging technique to view the interior of the living algae cells. This revealed that the replication and cell division was synchronized between the host and symbiote – more evidence of primary endosymbiosis at work.</p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="X-ray images of Braarudosphaera bigelowii at different stages of cell division. The newly identified nitroplast is highlighted in cyan, the algae nucleus is blue, mitochondria are green and chloroplasts are purple" width="1025" height="685" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/1167d59/2147483647/strip/true/crop/1025x685+0+0/resize/440x294!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png 440w,https://assets.newatlas.com/dims4/default/79f851b/2147483647/strip/true/crop/1025x685+0+0/resize/800x535!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png 800w,https://assets.newatlas.com/dims4/default/82e3fe1/2147483647/strip/true/crop/1025x685+0+0/resize/1200x802!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png 1200w,https://assets.newatlas.com/dims4/default/fc8a14f/2147483647/strip/true/crop/1025x685+0+0/resize/1920x1283!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png 1920w" data-src="https://assets.newatlas.com/dims4/default/3b97965/2147483647/strip/true/crop/1025x685+0+0/resize/1025x685!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/1167d59/2147483647/strip/true/crop/1025x685+0+0/resize/440x294!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png 440w,https://assets.newatlas.com/dims4/default/79f851b/2147483647/strip/true/crop/1025x685+0+0/resize/800x535!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png 800w,https://assets.newatlas.com/dims4/default/82e3fe1/2147483647/strip/true/crop/1025x685+0+0/resize/1200x802!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png 1200w,https://assets.newatlas.com/dims4/default/fc8a14f/2147483647/strip/true/crop/1025x685+0+0/resize/1920x1283!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png 1920w" src="https://assets.newatlas.com/dims4/default/3b97965/2147483647/strip/true/crop/1025x685+0+0/resize/1025x685!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Ffc%2F29%2Fbe4497b0484cba59d73433909e61%2Fnitroplasts.png">
</p>



    
    

    
        <div><figcaption itemprop="caption">X-ray images of <i>Braarudosphaera bigelowii </i>at different stages of cell division. The newly identified nitroplast is highlighted in cyan, the algae nucleus is blue, mitochondria are green and chloroplasts are purple</figcaption><p>Valentina Loconte/Berkeley Lab</p></div>
    
</figure>

                
            </div><p>And finally, the team compared the proteins of isolated UCYN-A to those inside the algal cells. They found that the isolated bacterium can only produce about half of the proteins it needs, relying on the algal host to provide the rest.</p><p>“That’s one of the hallmarks of something moving from an endosymbiont to an organelle,” said Zehr. “They start throwing away pieces of DNA, and their genomes get smaller and smaller, and they start depending on the mother cell for those gene products – or the protein itself – to be transported into the cell.”</p><p>Altogether, the team says this indicates UCYN-A is a full organelle, which is given the name of nitroplast. It appears that this began to evolve around 100 million years ago, which sounds like an incredibly long time but is a blink of an eye compared to mitochondria and chloroplasts.</p><p>The researchers plan to continue studying nitroplasts, to find out if they’re present in other cells and what effects they may have. One possible benefit is that it could give scientists a new avenue to incorporate nitrogen-fixing into plants to grow better crops.</p><p>The research was published in the journals <i><a href="https://www.cell.com/cell/pdf/S0092-8674(24)00182-X.pdf" target="_blank" data-cms-ai="0">Cell</a></i> and <i><a href="https://www.science.org/doi/10.1126/science.adk1075" target="_blank" data-cms-ai="0">Science</a></i>.</p><p>Source: <a href="https://newscenter.lbl.gov/2024/04/17/scientists-discover-first-nitrogen-fixing-organelle/" target="_blank" data-cms-ai="0">Berkeley Lab</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why everything is becoming a game (167 pts)]]></title>
            <link>https://www.gurwinder.blog/p/why-everything-is-becoming-a-game</link>
            <guid>40100867</guid>
            <pubDate>Sat, 20 Apr 2024 20:44:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gurwinder.blog/p/why-everything-is-becoming-a-game">https://www.gurwinder.blog/p/why-everything-is-becoming-a-game</a>, See on <a href="https://news.ycombinator.com/item?id=40100867">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>For years, some of the world’s sharpest minds have been quietly turning your life into a series of games. Not merely to amuse you, but because they realized that the easiest way to make you do what they want is to make it fun. To escape their control, you must understand the creeping phenomenon of gamification, and how it makes you act against your own interests.</p><p>This is a story that encompasses a couple who replaced their real baby with a fake one, a statistician whose obsessions cost the US the Vietnam War, the apparent absence of extraterrestrial life, and the biggest FBI investigation of the 20th century. But it begins with a mild-mannered psychologist who studied pigeons at Harvard in the Thirties.</p><p>B. F. Skinner believed environment determines behavior, and a person could therefore be controlled simply by controlling their environment. He began testing this theory, known as behaviorism, on pigeons. For his experiments, he developed the “Skinner box”, a birdcage with a food dispenser controlled by a button.</p><p>Skinner’s goal was to make the pigeons peck the button as many times as possible. From his experiments, he made three discoveries. First, the pigeons pecked most when doing so yielded immediate, rather than delayed, rewards. Second, the pigeons pecked most when it rewarded them randomly, rather than every time. Skinner’s third discovery occurred when he noticed the pigeons continued to peck the button long after the food dispenser was empty, provided they could hear it click. He realized the pigeons had become conditioned to associate the click with the food, and now valued the click as a reward in itself.</p><p>This led him to propose two kinds of reward: primary and conditioned reinforcers. A primary reinforcer is something we’re born to desire. A conditioned reinforcer is something we learn to desire, due to its association with a primary reinforcer. Skinner found that conditioned reinforcers were generally more effective in shaping behavior, because while our biological need for the primary reinforcer is easily satiable, our abstract desire for the conditioned reinforcer isn’t. The pigeons would stop seeking food once their bellies were full, but they’d take far longer to get tired of hearing the food dispenser click.</p><p><span>Skinner’s three key insights — immediate rewards work better than delayed, unpredictable rewards work better than fixed, and conditioned rewards work better than primary — were found to also apply to humans, and in the 20</span><sup>th</sup><span> Century would be used by businesses to shape consumer behavior. From Frequent Flyer loyalty points to mystery toys in McDonalds Happy Meals, purchases were turned into games, spurring consumers to purchase more.</span></p><p>Some people began to consider whether games could be used to make people do other things. In the Seventies, the American management consultant Charles Coonradt wondered why people work harder at games they pay to play than at work they’re paid to do. Like Skinner, Coonradt saw that a defining feature of compelling games was immediate rewards. Most of the feedback loops in employment — from salary payments to annual performance appraisals — were torturously long. So Coonradt proposed shortening them by introducing daily targets, points systems, and leaderboards. These conditioned reinforcers would transform work from a series of monthly slogs into daily status games, in which employees competed to fulfil the company’s goals.</p><p>In the 21st century, advances in technology made it easy to add game mechanics to almost any activity, and a new term — “gamification” — became a buzzword in Silicon Valley. By 2008, business consultants were giving presentations about leveraging fun to shape behavior, while futurists gave TED Talks speculating on the social implications of a gamified world. Underpinning every speech was a single, momentous question: if gamification could make people buy more stuff and work more hours, what else could it be used to make people do?</p><p><span>The tone was generally utopian, because back then gamification seemed to be mostly a force for good. In 2007, for instance, the online word quiz FreeRice gamified famine relief: for every correct answer, 10 grains of rice were given to the UN World Food Programme. Within six months it had already given away over </span><a href="https://news.un.org/en/story/2008/03/251732" rel="">20 billion</a><span> grains of rice. Meanwhile, the SaaS company, Opower, had gamified going green. It turned eco-friendliness into a contest, showing each person how much energy they were using compared with their neighbors, and displaying a leaderboard of the top 10 least wasteful. The app has since saved </span><a href="https://www.cnbc.com/2022/07/14/how-opower-sold-to-oracle-has-helped-save-3-billion-in-energy-bills.html" rel="">over $3 billion</a><span> worth of energy. And then there was Foldit, a game developed by University of Washington biochemists who’d struggled for 15 years to discern the structure of an Aids virus protein. They reasoned that, if they turned the search into a game, someone might do what they couldn’t. It took gamers just </span><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3705907/#SD1" rel="">10 days</a><span>.</span></p><p><span>Even established corporations saw gamification’s potential. In 2008, Volkswagen debuted a campaign called “The Fun Theory”, based on the idea that “fun is the easiest way to change people’s behavior for the better”. Piano stairs were installed at a Stockholm rail station to encourage people to use them instead of the escalator, leading to a </span><a href="https://www.researchgate.net/publication/262233618_Social_Stairs_Taking_the_Piano_Staircase_towards_Long-Term_Behavioral_Change" rel="">66% increase</a><span> in stair use. Volkswagen also tried to gamify gamification itself, creating a contest for good game ideas. The winning idea was a “speedcam lottery”, where people who kept to the speed limit would be entered into a prize draw, funded by speeding fines.</span></p><p>It all seemed so simple: if we could only create the right games, we could make humanity fitter, greener, kinder, smarter. We could repopulate forests and even cure cancers simply by making it fun.</p><p>Unfortunately, that didn’t happen. Instead, gamification took a less wholesome route.</p><p>We humans are harder to manipulate than pigeons, but we can be manipulated in many more ways, because we have a wider spectrum of needs. Pigeons don’t care much about respect, but for us it’s a primary reinforcer, to such an extent that we can be made to desire arbitrary sounds that become associated with it, like praise and applause.</p><p><span>Respect is so important to humans that it’s a key reason we evolved to play games. Will Storr, in his book </span><em>The Status Game</em><span>, charted the rise of game-playing in different cultures, and found that games have historically functioned to organize societies into hierarchies of competence, with score acting as a conditioned reinforcer of status. In other words, all games descend from status games. The association between score and status has grown so strong in our minds that, like pigeons pecking the button long after the food dispenser has stopped dispensing, we’ll chase scores long after everyone else has stopped watching.</span></p><p>And so, when Facebook added “likes” in 2009, they quickly became a proxy for status, and a score to compete for. People now had a social stake in posting content. Hitting “send” became like activating a slot machine, initiating an excitingly uncertain outcome; the post might go completely unnoticed, or it might hit the jackpot and go viral, awarding the coveted prizes of respect and fame.</p><p>Other social media platforms followed, leveraging Skinner’s three laws to maximize button-pecking. They offered immediate reinforcement in the form of instant responses, conditioned reinforcement in the form of “likes” and “followers”, and unpredictable reinforcement that varied with each post and each refresh of the page. These features turned social media into the world’s most addictive status game. And thus, just as pigeons were made to chase clicks, so eventually were we.</p><p><span>But this was just the beginning. Many in the managerial class saw the success of social media and wondered how they could use gamification for their own ends. The Chinese Communist Party was among the first to apply the principles of social media to the real world. In several towns and cities, it began trialing social credit schemes that assign citizens a level of “clout” based on how well they behave. In some areas, such as </span><a href="https://foreignpolicy.com/2018/04/03/life-inside-chinas-social-credit-laboratory/" rel="">Rongcheng</a><span> and </span><a href="https://www.telegraph.co.uk/news/social-credit-in-china/" rel="">Hangzhou</a><span>, there are public signs that display leaderboards of the highest scoring citizens. The lowest scoring citizens may be punished with credit blacklists or throttled internet speeds.</span></p><p><span>Meanwhile, in the West, gamification is used to make people obey corporations. Employers like</span><a href="https://www.theinformation.com/articles/amazon-expands-effort-to-gamify-warehouse-work" rel=""> Amazon</a><span> and</span><a href="https://www.fastcompany.com/90260703/the-dark-side-of-gamifying-work" rel=""> Disneyland</a><span> use electronic tracking to keep score of employees’ work rates, often displaying them for all to see. Those who place high on the leaderboards can win prizes like virtual pets; those who fall below the minimum rate may be financially penalized.</span></p><p>Game features are even more pervasive in the digital world. In little over a year, the Chinese shopping app Temu has exploded in popularity thanks to its “play to pay” model: as users browse deals they’re presented with puzzles to solve, roulette wheels to spin, and challenges to complete, which reward them with credit and special offers. Unsurprisingly, users are now spending double the amount of time on Temu than on Amazon.</p><p>Gamification has also transformed dating apps. Zoosk works like a typical role-playing game, where you gradually accumulate “experience points”, which unlock new abilities, such as animated virtual gifts to send to prospective dates. Meanwhile, on Tinder you can purchase various “level-ups” — Boosts, Super Likes, and Rewinds — that increase your chances of winning and compel you to keep playing to get your money’s worth. And if you have no luck on dating apps, there are always AI girlfriends to play with: apps like iGirl and Replika award users points for their commitment, which can be used to “level up” their virtual lovers into a version that is more intimate.</p><p><span>These are only a few examples. Virtually every kind of app, from </span><a href="https://www.hookedtobooks.com/audible-badges/" rel="">audiobook apps</a><span> to </span><a href="https://strivecloud.io/blog/gamification-app-examples-uber/" rel="">taxicab apps</a><span> to </span><a href="https://www.bi.team/blogs/gamified-online-stock-trading-harms-consumers/" rel="">stock trading apps</a><span>, now employs game mechanics like points, badges, levels, streaks, progress bars, and leaderboards. Their ubiquity attests to their success in hooking people.</span></p><p>Gamification once promised to create a better society, but it’s now used mainly to addict people to apps. The gamifiers, like Skinner’s pigeons, prioritized immediate rewards over delayed ones, so they gamified for the next financial quarter and not for the future of civilization.</p><p>So where does this all lead? What is the endgame?</p><p>At the University of Michigan in the mid-twentieth century, there was a zoologist named James V. McConnell. A strong believer in fun, he often presented his academic research alongside satire and poetry, so it was difficult to tell which was which, a habit that made him popular with students but unpopular with his fellow professors.</p><p><span>One of the few things McConnell took seriously was behaviorism. He was transfixed by Skinner’s work on pigeons, and wished to expand the work to humans, with an eye to creating a perfect society. In a 1970 </span><em>Psychology Today</em><span> article he wrote:</span></p><blockquote><p>We should reshape our society so that we all would be trained from birth to want to do what society wants us to do. We have the techniques now to do it. Only by using them can we hope to maximize human potentiality.</p></blockquote><p>In short, he wanted to turn society into a Skinner box.</p><p>Throughout the Seventies, McConnell used Skinnerian techniques to create rehabilitation programs for prisoners and psychiatric patients, some of which were successful. But his most ambitious scheme emerged in the early Eighties, when he witnessed people being captivated by video games like Donkey Kong and Pac Man, and realized their addictive mechanics could be translated to other, more productive activities. He pitched an ambitious project to gamify education to tech companies like Microsoft and IBM, but he was 30 years too early, and they couldn’t yet see its promise. There was, however, one person who’d taken a keen interest in McConnell’s work. His name was Ted Kaczynski.</p><p>Kaczynski was an awkward but gifted student, coldly matter-of-fact in manner, for which he was described by his schoolmates as a “walking brain”. In a school IQ test he’d scored 167 (140 is considered “genius”).</p><p>He’d come to Michigan in 1962 as a postgraduate from Harvard, where he’d studied mathematics and graduated at just 18. But at Harvard, he’d also been subjected to torturous experiments. In a lab not far from where Skinner had once experimented with pigeons, psychologists linked to US intelligence were now experimenting with humans — one of whom was Kaczynski. Under the glare of blinding lights, he was methodically humiliated to see how he reacted. He claimed the experience didn’t affect him, and yet, within just a few years, he’d developed an intense paranoia about psychological conditioning. And so, when Kaczynski learned of McConnell’s proposals to create a utopia through behavior modification, he concluded that the jocular professor was an existential threat to humanity, and that he needed to die.</p><p>It wasn’t a decision Kaczynski had made lightly; he’d developed an entire philosophy to justify it. Influenced by techno-dystopian writers like Aldous Huxley and Jacques Ellul, Kaczynski believed the Industrial Revolution had turned society into a cold process of production and consumption that was gradually crushing everything humans valued most: freedom, happiness, purpose, meaning, and the ecosystem. In his view, everything society now produced—including science and technology—served industry, not humanity, and thus was increasingly being purposed not to enrich our lives but to psychologically condition us so we wouldn’t resist what was being done to us and to the earth.</p><p>In short, where society had once been shaped to accommodate people, now people were being shaped to accommodate society. And this misshaping was destructive because it conflicted with our deepest nature.</p><p>Kaczynski believed modern society made us docile and miserable by depriving us of fulfilling challenges and eroding our sense of purpose. The brain evolved to solve problems, but the problems it had evolved for were now largely solved by technology. Most of us can now obtain all our basic necessities simply by being obedient, like a pigeon pecking a button. Kaczynski argued that such conveniences didn’t make us happy, only aimless. And to stave of this aimlessness, we had to continually set ourselves goals purely to have goals to pursue, which Kaczynski called “surrogate activities”. These included sports, hobbies, or chasing the latest product that ads promised would make us happy.</p><p>For Kaczynski, the result of reorienting our lives to chase artificial goals was that we became increasingly dependent on society to provide us with them. And without our own inherent sense of purpose, we’d inevitably be made to chase goals that were good for the industrial machine but bad for us.</p><p>Kaczynski’s theories eerily prophesize the capture of society by gamification. While he overlooked the benefits of technology, he diligently noted its dangers, recognizing its role in depriving us of purpose and meaning. Today the evidence is everywhere: religion is dying out, Western nations are culturally confused, people are getting married less and having fewer children, and many are losing their jobs to automation, so the traditional pillars of life — God, nation, family, and work — are crumbling, and people are losing their value systems. Amid such uncertainty, games, with their well-defined rules and goals, provide a semblance of order and purpose that may otherwise be lacking in people’s lives. Gamification is thus no accident, but an attempt to plug a widening hole in society.</p><p>Unfortunately, it seems to be only a band-aid. Kaczynski observed that surrogate activities rarely kept people contented for long. There were always more stamps to collect, a better car to buy, a higher score to achieve. He believed artificial goals were too divorced from our actual needs to truly satisfy us, so they merely served to keep us busy enough not to notice our dissatisfaction. Instead of a fulfilled life, a life filled full.</p><p><span>Today, people increasingly live inside their phones, bossed around by notifications, diligently collecting badges and filling progress bars, even though it doesn’t make them happy. On the contrary, </span><a href="https://psycnet.apa.org/record/2022-90266-001" rel="">substantial research</a><span> comprising over a hundred studies finds that prioritizing extrinsic goals over intrinsic goals — in other words doing things to win prizes and achieve high scores rather than for the inherent love of doing them — leads to lower well-being.</span></p><p>Kaczynski seemed to recognize this long before smartphones emerged. He felt that building a life around chasing what was offered on billboards and in magazines wouldn’t make him happy, and would only feed the Machine, so in 1971 he fled society, holing himself up in a log cabin in the Montana wilderness. There he attempted a simple and self-sufficient life, enjoying the small things like the sound of birds singing and the feeling of sunrays on his back.</p><p>But this idyll wouldn’t last. He claims that while hiking across one of his favorite spots — a rocky ridge with a waterfall — he was aghast to find a road had been built through it. As he saw it, industrialization, like some fungus creeping across the world, had followed him even here. Enraged, he decided modernity couldn’t be escaped, and had to be destroyed.</p><p>His emotional instability got the better of him, and in 1978 he began posting homemade bombs to those he accused of betraying humanity. In 1985, a package arrived at McConnell’s home. It was opened by his assistant, Nicklaus Suino. The package only partially exploded, injuring Suino and McConnell, and leaving them both shaken for life.</p><p>They were lucky. Less than a month later, Kaczynski would send another, more carefully prepared bomb to computer store owner, Hugh Scrutton, who’d become Kaczynski’s first murder victim.</p><p>By then, the FBI’s investigation into the bombings had grown into the largest in its history. For over a decade they scoured the country as Kaczynski continued to kill and injure, but much of their time was wasted chasing mirages, for Kaczynski would often scatter his bomb parcels with red herrings such as notes referencing fictitious conspiracies and signed with made-up initials.</p><p>Kaczynski’s actions, though unforgivable, can teach us as much about gamification as his philosophy. His red herrings lured people away from what they actually sought, and, as we shall see, this is the greatest danger of gamification.</p><p>While Kaczynski wanted to demolish industrial society and return humanity to an agrarian life, US defense secretary Robert McNamara wanted the opposite: to use American industrial might to crush the agrarian society of Vietnam.</p><p>McNamara was a statistician who believed what couldn’t be measured didn’t matter. He charted progress in the Vietnam war by body count, because it was simple to measure. It was his way of keeping score. But his focus on what could be easily measured led him to overlook what couldn’t: negative public opinion of the US Army both at home and in Vietnam, which deflated US morale while boosting enemy conscription. In the end, the US was forced to withdraw from the war, despite winning the battle of bodies, because it had lost the battle of hearts and minds.</p><p>Thus, the McNamara fallacy, as it came to be known, refers to our tendency to focus on the most quantifiable measures, even if doing so leads us from our actual goals. Put simply, we try to measure what we value, but end up valuing what we measure.</p><p>And what we measure is rarely what we mean to value. As Skinner showed, the goals of games — points, badges, trophies — are secondary reinforcers that only derive their worth due to their association with something we actually desire. But these associations are often illusory. A click is not the same thing as a food pellet. And points are not the same as progress.</p><p><span>We’re </span><a href="https://www.psychologytoday.com/gb/blog/glue/202107/how-benefit-the-scoreboard-principle" rel="">easily motivated</a><span> by points and scores because they’re easy to track and enjoyable to accrue. As such, scorekeeping is, for many, becoming the new foundation of their lives. “</span><a href="https://www.bbc.com/culture/article/20240326-inside-looksmaxxing-the-extreme-cosmetic-social-media-trend" rel="">Looksmaxxing</a><span>” is a new trend of gamified beauty, where people assign scores to physical appearance and then use any means necessary to maximize their score. And in the online wellness space, there is now a “</span><a href="https://rejuvenationolympics.com/" rel="">Rejuvenation Olympics</a><span>” complete with a leaderboard that ranks people by their “age reversal”. Even sleep has become a game; many people now use apps like Pokemon Sleep that reward them for achieving high “sleep scores”, and some even compete to get the highest “</span><a href="https://www.youtube.com/watch?v=Z7veiyN4LqU" rel="">sleep ranking</a><span>”.</span></p><p>Most such scores are simplifications that don’t tell the whole story. For instance, sleep trackers only measure what’s easy to measure, like movement, which says nothing about crucial facts like time spent in REM sleep. A more accurate measure of how well you slept would be how refreshed you feel in the morning, but since this can’t be quantified, it tends to be ignored.</p><p>Further, if increasing one’s youthfulness score requires a daily 2-hour skincare routine, a diet of 50 pills each morning and night, abstention from many of life’s pleasures, and constant fixation on one’s vital metrics, is it really worth it? Of what value is adding a few years to your life if the cost is a life worth living? The scores we use to chart progress can’t articulate the nuances of reality, and yet we often tie our life goals and even self-worth to such arbitrary numbers.</p><p><span>In the end, even Kaczynski, with his IQ of 167, was led astray by red herring goals. In 1995 he enacted his endgame, demanding the </span><em>New York Times</em><span> and </span><em>Washington Post</em><span> print his anti-technology manifesto to prevent further bloodshed. All along, his goal had been to get the widest possible newspaper coverage, to maximize how many people would see his manifesto, but like McNamara he didn’t account for what couldn’t be quantified, such as </span><em>how</em><span> people would see his manifesto. Skinner’s pigeons had learned to desire the click of the food dispenser because it had been accompanied by food, and Kaczynski’s intended audience learned to hate his arguments because they’d been accompanied by violence. By maximizing audience size at the expense of everything else, Kaczynski gained a massive audience unwilling to give him a fair hearing.</span></p><p>Further, his manifesto contained a peculiar choice of words (“eat your cake and have it”), which was recognized by his brother, David, who alerted the police, leading to Kaczynski’s capture. And so, by fixating on the most obvious metric — the size of his audience — Kaczynski lost the one thing he’d been fighting for all along: freedom.</p><p><span>Kaczynski played the wrong game, and was trapped by it. Today, we all face similar traps. We chase numbers and icons because they’re always available, and the chase is often so immersive that it keeps us from seeing where it leads, which is often far away from what we actually want. This can lead to what the evolutionary psychologist Diana Fleischman </span><a href="https://dianaverse.com/2020/10/30/uncanny-vulvas/" rel="">calls</a><span> “counterfeit fitness”: the constant, momentary “wins” that come with playing digital games give us a false sense of progression and accomplishment, a neurochemical high that feels like victory but is not, and which, if it becomes a habit, risks placating our ambitions to pursue true fulfilment.</span></p><p>It explains why so many young men have lost themselves in video games, and are no longer in employment or relationships. The false signals they’re getting from video game progress, combined with the sexual reward of online porn, are convincing their dopamine pathways that they’re winning in life, even as their minds and futures atrophy.</p><p><span>It’s easy to persuade people into tying their sense of progress to fake or trivial goals. Casinos </span><a href="https://freakonomics.com/2011/09/congratulations-youve-lost-how-slot-machines-disguise-loses-as-wins/" rel="">keep their customers happily losing</a><span> money by distracting them with minor side games they’re likely to win. The small victories convince them they’re winning overall even as they lose the only games that actually matter.</span></p><p><span>This strange quirk of human behavior can even cost lives. In South Korea, a young couple became so addicted to raising a virtual baby that they </span><a href="https://www.theguardian.com/world/2010/mar/05/korean-girl-starved-online-game" rel="">let their real baby starve to death</a><span>. The parents prioritized what they could quantify — levelling up their virtual baby — over that which they couldn’t — the life of their real one.</span></p><p>What makes pathological gameplaying so dangerous is that the more harm it does, the more alluring it becomes. If your baby is dead, why not raise a virtual one? If your life of playing video games has stopped you finding a girlfriend, why not play the AI girlfriend game? Thus, bad games form a feedback loop: they distract us from pursuing the things that will bring us lasting contentment, and without this lasting contentment, we become ever more dependent on false, transient metrics like scores and leaderboards to imbue our lives with meaning.</p><p>All the things a gamified world promises in the short term — pride, purpose, meaning, control, motivation, and happiness — it threatens in the long term. It has the power to seclude people from reality, and to rewrite their value systems so they prioritize the imaginary over the real, and the next moment over the rest of their lives.</p><p>So what’s the solution?</p><p>There are billions of habitable planets in our galaxy, and many of them are far older than our own. Statistically, this would suggest that by now our galaxy would be teeming with signs of advanced alien life. And yet space is silent. This discrepancy, known as the Fermi paradox, has puzzled scientists for almost a century. Ted Kaczynski believed his prophecies offered an answer.</p><p>While serving a life sentence in jail, Kaczynski wrote a little-known sequel to his manifesto, entitled “Anti-Tech Revolution: Why and How”. In it he outlines his belief that all technologically advanced civilizations become trapped in fatal games before they learn to colonize space. This happens because industry is driven by competition, and competition favors short-term wins over long-term sustainability, because players who care about long-term sustainability are significantly disadvantaged compared to players who only care about winning.</p><p>To illustrate his point, Kaczynski describes a thought experiment involving a forested region occupied by several rival kingdoms. The kingdoms that clear the most land for agriculture can support a larger population, affording them a military advantage. Every kingdom must therefore clear as much forest as possible, or face being conquered by its rivals. The resulting deforestation eventually leads to ecological disaster and the collapse of all the kingdoms. Thus, a trait that is advantageous for every kingdom’s short-term survival leads in the long term to every kingdom’s demise.</p><p>Kaczynski was describing a “social trap”, a term coined by a student of Skinner, John Platt, who’d theorized that an entire population behaving like pigeons in a Skinner box, each acting only for the next immediate reward, would eventually overexploit a resource, causing ruin for everyone. What Platt called “social traps”, Kaczynski called “self-propagating systems”, because he viewed them as negative-sum games that took on a life of their own, defeating every player to become the only winner. He believed such games not only drove industrialization but also replaced the sense of purpose and meaning that industrialization destroyed. They were thus inextricable from technological advancement, and, in a society like ours, impossible to stop.</p><p><span>In jail, Kaczynski was forbidden access to the web, and in </span><a href="https://news.yahoo.com/the-unabomber-takes-on-the-internet-201549030.html" rel="">letters</a><span> he struggled to understand what Facebook was. Nevertheless, his warnings could easily have been referring to social media.</span></p><p>On Instagram, the main self-propagating system is a beauty pageant. Young women compete to be as pretty as possible, going to increasingly extreme lengths: makeup, filters, fillers, surgery. The result is that all women begin to feel ugly, online and off.</p><p><span>On TikTok and YouTube, there is another self-propagating system where pranksters compete to outdo each other in outrageousness to avoid being buried by the algorithm. Such extreme brinkmanship frequently leads to arrest or injury, and has even led to the deaths of, among others, </span><a href="https://www.bbc.co.uk/news/technology-55982131" rel="">Timothy Wilks</a><span> and</span><a href="https://www.theguardian.com/us-news/2018/mar/15/woman-jailed-for-killing-boyfriend-in-youtube-stunt-that-went-wrong-monalisa-perez-pedro-ruiz" rel=""> Pedro Ruiz</a><span>.</span></p><p>On X, meanwhile, there is a self-propagating system known as “the culture war”. This game consists of trying to score points (likes and retweets) by attacking the enemy political tribe. Unlike in a regular war, the combatants can’t kill each other, only make each other angrier, so little is ever achieved, except that all players become stressed by constant bickering.&nbsp;And yet they persist in bickering, if only because their opponents do, in an endless state of mutually assured distraction.</p><p>Those are just three examples of social traps that have emerged in our gamified age. But the most worrying social trap is gamification itself.</p><p>Companies that exploit our gameplaying compulsion will have an edge over those who don’t, so every company that wishes to compete must gamify in ever more addictive ways, even though in the long term this harms everyone. As such, gamification is not just a fad; it’s the fate of a digital capitalist society. Anything that can be turned into a game sooner or later will be. And the games won’t just be confined to our phones — “extended reality” eyewear like Meta Quest and Apple Vision, once they become normalized, will make playing even harder to avoid.</p><p><span>Games will be created not just to extract money from people, but also data. The </span><a href="https://www.reuters.com/sports/athletics/athletes-risk-bans-health-death-enhanced-games-wada-2024-02-14/" rel="">2025 Enhanced Games</a><span>, for instance, is a new futuristic version of the Olympics, funded by tech moguls like Peter Thiel, where contestants can exploit anything from cybernetic implants to PEDs to get a competitive advantage. The purpose of the games seems to be transhumanist: to motivate people to discover new ways to augment human abilities, with the eventual goal of turning men into gods.</span></p><p>There is, after all, a vacancy in heaven. When God is dead, and nations are atomized, and family seems burdensome, and machines can beat us at our jobs and even at art, and trust and truth are lost in a roiling sea of AI-generated clickbait — what is left but games?</p><p><span>This isn’t necessarily a bad thing. Games can motivate us to destroy ourselves, but they can also motivate us to better ourselves. In a gamified world, it’s possible to play without getting played, if one only chooses the right games. As the poker-player-turned-podcaster Liv Boeree </span><a href="https://twitter.com/Liv_Boeree/status/1609271228052959233" rel="">said</a><span>: “Intelligence is knowing how to win the game. Wisdom is knowing which game to play…” So how do you decide which games to play? The story of gamification offers five broad rules.</span></p><p>First: choose long-term goals over short-term ones. Short, frequent feedback loops offer regular reinforcement, which helps motivate us. But what is made to motivate us too often addicts us. So consider the long-term outcomes of the games you’re playing: if you did the same thing you did today for the next 10 years, where would you be? Play games the 90-year-old you would be proud of having played. They won’t care how many trophies you have; they will care how many times you saw your parents before they died.</p><p>Second: choose hard games over easy ones. Since the long-term value of games lies in their ability to hone skills and build character, easy games are usually a trap. People with unearned wealth — thieves, heirs and lottery winners — often end up losing it all, because the struggle to obtain a reward teaches us the reward’s worth, and is thus a crucial part of the reward.</p><p>Third: choose positive-sum games over zero-sum or negative-sum ones. Games evolved to confer status, and status is zero-sum — for some to have it, others must lose it. But we no longer have to play such games; we can change the rules so a win for me doesn’t mean a loss for you. Educational games are one example. Wealth creation is another. Positive-sum games —&nbsp;where every player benefits by playing —&nbsp;are a form of competition that brings people together instead of driving them apart.</p><p><span>Fourth: choose atelic games over telic ones. Atelic games are those you play because you enjoy them. Telic games are those you play only to obtain a reward. Chasing rewards like trophies and leaderboard rankings can help drive us to succeed, but a fixation on such rewards can become a source of stress, and can even make leisure activities feel like drudgery, </span><a href="https://thedecisionlab.com/biases/overjustification-effect" rel="">turning games into work</a><span>.</span></p><p>Finally, the fifth rule is to choose immeasurable rewards over measurable ones. Seeing numerical scores increase is satisfying in the short term, but the most valuable things in life — freedom, meaning, love — can’t be quantified.</p><p><span>There are an overwhelming number of games to choose from. If you want to keep fit, try </span><a href="https://zrx.app/" rel="">Zombies Run</a><span>, an app that takes the form of a post-zombie-apocalypse radio broadcast telling you which direction to run to avoid being eaten. If you want to learn general knowledge while helping those in poverty, play the </span><a href="https://freerice.com/" rel="">FreeRice</a><span> quiz. And if you want to form good habits, there’s </span><a href="https://habitshareapp.com/" rel="">Habitshare</a><span>, which lets your friends track your attempts, motivating you more than if you were only accountable to yourself.</span></p><p>But if, among the countless games out there, you can’t find one right for you, then you can just create your own. Fun is not the pursuit of happiness, but the happiness of pursuit, and literally anything can be pursued. By now there’s a way to keep any kind of score and play any kind of game.</p><p><span>Kaczynski’s game is over; he committed suicide last summer, still adamant humanity was doomed. His fearful legacy has since passed to his disciples, like Liverpool man Jacob Graham, who was </span><a href="https://news.sky.com/story/jacob-graham-left-wing-anarchist-jailed-for-13-years-over-terror-offences-after-declaring-he-wanted-to-kill-at-least-50-people-13097584" rel="">recently jailed</a><span> for terrorism after trying to emulate his idol. Graham may have thought he was saving the world, but, with all his talk of maximizing kill counts, he too was just playing a bad game.</span></p><p>In the end, Kaczynski and his followers made the same mistake as Skinner: they viewed us as mere puppets of our environment, devoid of agency and the ability to adapt. They needn’t have feared the world becoming a Skinner box, because, among all the papers written about that troublesome contraption, one fact is always omitted: Skinner’s pigeons only kept pecking the button because they were in a cage, with nothing else to do. But you are still free. Even in a world where everything is a game, you don’t have to play by other people’s rules; you have a wide open world to create your own.</p><p>Your move.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bringing Exchange Support to Thunderbird (260 pts)]]></title>
            <link>https://blog.thunderbird.net/2024/04/adventures-in-rust-bringing-exchange-support-to-thunderbird/</link>
            <guid>40100672</guid>
            <pubDate>Sat, 20 Apr 2024 20:19:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.thunderbird.net/2024/04/adventures-in-rust-bringing-exchange-support-to-thunderbird/">https://blog.thunderbird.net/2024/04/adventures-in-rust-bringing-exchange-support-to-thunderbird/</a>, See on <a href="https://news.ycombinator.com/item?id=40100672">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
								<img src="https://blog.thunderbird.net/files/2024/04/Tb-rust1.png" alt="featured post title image">
						<section>
												

				
<p>Microsoft Exchange is a popular choice of email service for corporations and educational institutions, and so it’s no surprise that there’s demand among Thunderbird users to support Exchange. Until recently, this functionality was only available through an add-on. But, in the next ESR (Extended Support) release of Thunderbird in July 2024, we expect to provide this support natively within Thunderbird. Because of the size of this undertaking, the first roll-out of the Exchange support will <a href="https://youtu.be/7jNV1J2pdPc">initially cover only email</a>, with calendar and address book support coming at a later date.</p>



<p>This article will go into technical detail on how we are implementing support for the Microsoft Exchange Web Services mail protocol, and some idea of where we’re going next with the knowledge gained from this adventure.</p>



<p><em>Before we dive in, just a quick note that <strong>Brendan Abolivier, Ikey Doherty</strong>, and <strong>Sean Burke</strong> are the developers behind this effort, and are the authors of this post.</em></p>



<figure></figure>



<h2>Historical context</h2>



<p>Thunderbird is a long-lived project, which means there’s lots of old code. The current architecture for supporting mail protocols predates Thunderbird itself, having been developed more than 20 years ago as part of Netscape Communicator. There was also no paid maintainership from about 2012 — when Mozilla divested and&nbsp; transferred ownership of Thunderbird to its community — until 2017, when Thunderbird rejoined the Mozilla Foundation. That means years of ad hoc changes without a larger architectural vision and a lot of decaying C++ code that was not using modern standards.</p>



<p>Furthermore, in the entire 20 year lifetime of the Thunderbird project, no one has added support for a new mail protocol before. As such, no one has updated the architecture as mail protocols change and adapt to modern usage patterns, and a great deal of institutional knowledge has been lost. Implementing this much-needed feature is the first organization-led effort to actually understand and address limitations of Thunderbird’s architecture in an incremental fashion.</p>



<h2>Why we chose Rust</h2>



<p>Thunderbird is a large project maintained by a small team, so choosing a language for new work cannot be taken lightly. We need powerful tools to develop complex features relatively quickly, but we absolutely must balance this with long-term maintainability. Selecting Rust as the language for our new protocol support brings some important benefits:</p>



<ol>
<li><strong>Memory safety.</strong> Thunderbird takes input from anyone who sends an email, so we need to be diligent about keeping security bugs out.</li>



<li><strong>Performance.</strong> Rust runs as native code with all of the associated performance benefits.</li>



<li><strong>Modularity and Ecosystem.</strong> The built-in modularity of Rust gives us access to a large ecosystem where there are already a lot of people doing things related to email which we can benefit from.</li>
</ol>



<p>The above are all on the standard list of benefits when discussing Rust. However, there are some additional considerations for Thunderbird:</p>



<ol>
<li><strong>Firefox.</strong> Thunderbird is built on top of Firefox code and we use a shared CI infrastructure with Firefox which already enables Rust. Additionally, Firefox provides a language interop layer called XPCOM (Cross-Platform Component Object Model), which has Rust support and allows us to call between Rust, C++, and JavaScript.</li>



<li><strong>Powerful tools.</strong> Rust gives us a large toolbox for building APIs which are difficult to misuse by pushing logical errors into the domain of the compiler. We can easily avoid circular references or provide functions which simply cannot be called with values which don’t make sense, letting us have a high degree of confidence in features with a large scope. Rust also provides first-class tooling for documentation, which is critically important on a small team.</li>



<li><strong>Addressing architectural technical debt.</strong> Introducing a new language gives us a chance to reconsider some aging architectures while benefiting from a growing language community.</li>



<li><strong>Platform support and portability.</strong> Rust supports a broad set of host platforms. By building modular crates, we can reuse our work in other projects, such as Thunderbird for Android/K-9 Mail.</li>
</ol>



<h2>Some mishaps along the way</h2>



<p>Of course, the endeavor to introduce our first Rust component in Thunderbird is not without its challenges, mostly related to the size of the Thunderbird codebase. For example, there is a lot of existing code with idiosyncratic asynchronous patterns that don’t integrate nicely with idiomatic Rust. There are also lots of features and capabilities in the Firefox and Thunderbird codebase that don’t have any existing Rust bindings.</p>



<h3>The first roadblock: the build system</h3>



<p>Our first hurdle came with getting any Rust code to run in Thunderbird at all. There are two things you need to know to understand why:</p>



<p>First, since the Firefox code is a dependency of Thunderbird, you might expect that we pull in their code as a subtree of our own, or some similar mechanism. However, for historical reasons, it’s the other way around: building Thunderbird requires fetching Firefox’s code, fetching Thunderbird’s code as a subtree of Firefox’s, and using a build configuration file to point into that subtree.</p>



<p>Second, because Firefox’s entrypoint is written in C++ and Rust calls happen via an interoperability layer, there is no single point of entry for Rust. In order to create a tree-wide dependency graph for Cargo and avoid duplicate builds or version/feature conflicts, Firefox introduced a hack to generate a single Cargo workspace which aggregates all the individual crates in the tree.</p>



<p>In isolation, neither of these is a problem in itself. However, in order to build Rust into Thunderbird, we needed to define our own Cargo workspace which lives in our tree, and Cargo does not allow nesting workspaces. To solve this issue, we had to define our own workspace and add configuration to the upstream build tool, <code>mach</code>, to build from this workspace instead of Firefox’s. We then use a newly-added <code>mach</code> subcommand to sync our dependencies and lockfile with upstream and to vendor the resulting superset.</p>



<h3>XPCOM</h3>



<p>While the availability of language interop through XPCOM is important for integrating our frontend and backend, the developer experience has presented some challenges. Because XPCOM was originally designed with C++ in mind, implementing or consuming an XPCOM interface requires a lot of boilerplate and prevents us from taking full advantage of tools like rust-analyzer. Over time, Firefox has significantly reduced its reliance on XPCOM, making a clunky Rust+XPCOM experience a relatively minor consideration. However, as part of the previously-discussed maintenance gap, Thunderbird never undertook a similar project, and supporting a new mail protocol requires implementing hundreds of functions defined in XPCOM.</p>



<p>Existing protocol implementations ease this burden by inheriting C++ classes which provide the basis for most of the shared behavior. Since we can’t do this directly, we are instead implementing our protocol-specific logic in Rust and communicating with a bridge class in C++ which combines our Rust implementations (an internal crate called <code>ews_xpcom</code>) with the existing code for shared behavior, with as small an interface between the two as we can manage.</p>



<p>Please visit our&nbsp;<a href="https://source-docs.thunderbird.net/en/latest/rust/index.html" target="_blank" rel="noreferrer noopener">documentation</a>&nbsp;to learn more about how to create Rust components in Thunderbird.</p>



<h2>Implementing Exchange support with Rust</h2>



<p>Despite the technical hiccups experienced along the way, we were able to clear the hurdles, use, and build Rust within Thunderbird. Now we can talk about how we’re using it and the tools we’re building. Remember all the way back to the beginning of this blog post, where we stated that our goal is to support Microsoft’s Exchange Web Services (EWS) API. EWS communicates over HTTP with request and response bodies in XML.</p>



<h2>Sending HTTP requests</h2>



<p>Firefox already includes a full-featured HTTP stack via its <code>necko</code> networking component. However, <code>necko</code> is written in C++ and exposed over XPCOM, which as previously stated does not make for nice, idiomatic Rust. Simply sending a GET request requires a great deal of boilerplate, including nasty-looking unsafe blocks where we call into XPCOM. (XPCOM manages the lifetime of pointers and their referents, ensuring memory safety, but the Rust compiler doesn’t know this.) Additionally, the interfaces we need are callback-based. For making HTTP requests to be simple for developers, we need to do two things:</p>



<ol>
<li><strong>Support native Rust async/await syntax.</strong> For this, we added a new Thunderbird-internal crate, <code>xpcom_async</code>. This is a low-level crate which translates asynchronous operations in XPCOM into Rust’s native async syntax by defining callbacks to buffer incoming data and expose it by implementing Rust’s <code>Future</code> trait so that it can be awaited by consumers. (If you’re not familiar with the <code>Future</code> concept in Rust, it is similar to a JS <code>Promise</code> or a Python coroutine.)</li>



<li><strong>Provide an idiomatic HTTP API.</strong> Now that we had native <code>async</code>/<code>await</code> support, we created another internal crate (<code>moz_http</code>) which provides an HTTP client inspired by <code>reqwest</code>. This crate handles creating all of the necessary XPCOM objects and providing Rustic error handling (much nicer than the standard XPCOM error handling).</li>
</ol>



<h2>Handling XML requests and responses</h2>



<p>The hardest task in working with EWS is translating between our code’s own data structures and the XML expected/provided by EWS. Existing crates for serializing/deserializing XML didn’t meet our needs. <code>serde</code>’s data model doesn’t align well with XML, making distinguishing XML attributes and elements difficult. EWS is also sensitive to XML namespaces, which are completely foreign to <code>serde</code>. Various <code>serde</code>-inspired crates designed for XML exist, but these require explicit annotation of how to serialize every field. EWS defines hundreds of types which can have dozens of fields, making that amount of boilerplate untenable.</p>



<p>Ultimately, we found that existing <code>serde</code>-based implementations worked fine for deserializing XML into Rust, but we were unable to find a satisfactory tool for serialization. To that end, we introduced another new crate, <code>xml_struct</code>. This crate defines traits governing serialization behavior and uses Rust’s procedural derive macros to automatically generate implementations of these traits for Rust data structures. It is built on top of the existing <code>quick_xml</code> crate and designed to create a low-boilerplate, intuitive mapping between XML and Rust.&nbsp; While it is in the early stages of development, it does not make use of any Thunderbird/Firefox internals and is <a href="https://github.com/thunderbird/xml-struct-rs">available on GitHub</a>.</p>



<p>We have also introduced one more new crate, <code>ews</code>, which defines types for working with EWS and an API for XML serialization/deserialization, based on <code>xml_struct</code> and <code>serde</code>. Like <code>xml_struct</code>, it is in the early stages of development, but is <a href="https://github.com/thunderbird/ews-rs">available on GitHub</a>.</p>



<h2>Overall flow chart</h2>



<p>Below, you can find a handy flow chart to help understand the logical flow for making an Exchange request and handling the response.&nbsp;</p>



<figure><a href="https://blog.thunderbird.net/files/2024/04/pasted-image-.png"><img decoding="async" fetchpriority="high" width="1600" height="716" src="https://blog.thunderbird.net/files/2024/04/pasted-image-.png" alt="A bird's eye view of the flow" title="A bird’s eye view of the flow" srcset="https://blog.thunderbird.net/files/2024/04/pasted-image-.png 1600w, https://blog.thunderbird.net/files/2024/04/pasted-image--252x113.png 252w, https://blog.thunderbird.net/files/2024/04/pasted-image--600x269.png 600w, https://blog.thunderbird.net/files/2024/04/pasted-image--768x344.png 768w, https://blog.thunderbird.net/files/2024/04/pasted-image--1536x687.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"></a></figure>



<p>Fig 1. A bird’s eye view of the flow</p>



<h2>What’s next?</h2>



<h2>Testing all the things</h2>



<p>Before landing our next major features, we are taking some time to build out our automated tests. In addition to unit tests, we just landed a mock EWS server for integration testing. The current focus on testing is already paying dividends, having exposed a couple of crashes and some double-sync issues which have since been rectified. Going forward, new features can now be easily tested and verified.</p>



<h2>Improving error handling</h2>



<p>While we are working on testing, we are also busy improving the story around error handling. EWS’s error behavior is often poorly documented, and errors can occur at multiple levels (e.g., a request may fail as a whole due to throttling or incorrect structure, or parts of a request may succeed while other parts fail due to incorrect IDs). Some errors we can handle at the protocol level, while others may require user intervention or may be intractable. In taking the time now to improve error handling, we can provide a more polished implementation and set ourselves up for easier long-term maintenance.</p>



<h2>Expanding support</h2>



<p>We are working on expanding protocol support for EWS (via <code>ews</code> and the internal <code>ews_xpcom</code> crate) and hooking it into the Thunderbird UI. Earlier this month, we landed a series of patches which allow adding an EWS account to Thunderbird, syncing the account’s folder hierarchy from the remote server, and displaying those folders in the UI. (At present, this alpha-state functionality is gated behind a build flag and a preference.) Next up, we’ll work on fetching message lists from the remote server as well as generalizing outgoing mail support in Thunderbird.</p>



<h2>Documentation</h2>



<p>Of course, all of our work on maintainability is for naught if no one understands what the code does. To that end, we’re producing documentation on how all of the bits we have talked about here come together, as well as describing the existing architecture of mail protocols in Thunderbird and thoughts on future improvements, so that once the work of supporting EWS is done, we can continue building and improving on the Thunderbird you know and love.</p>
				

			</section>
			

			
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AltStore. The first Apple approved alternative App Store (144 pts)]]></title>
            <link>https://altstore.io/#Downloads</link>
            <guid>40100151</guid>
            <pubDate>Sat, 20 Apr 2024 19:17:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://altstore.io/#Downloads">https://altstore.io/#Downloads</a>, See on <a href="https://news.ycombinator.com/item?id=40100151">Hacker News</a></p>
<div id="readability-page-1" class="page">
  <div data-collapse="medium" data-animation="default" data-duration="400" data-easing="ease" data-easing2="ease" role="banner">
        <p><a href="#"><img src="https://altstore.io/images/logo_text.png" alt="" width="124"></a></p>
      </div>
  
  <div><p>AltStore PAL now available!<br>Read the <a href="https://rileytestut.com/blog/2024/04/17/introducing-altstore-pal/" target="_blank">announcement</a>
    </p></div>
  <section>
    <h2>Sideloading for Everyone</h2>
    <p>Discover apps that push the boundaries of iOS.</p>
    
    <p><img src="https://altstore.io/images/Tuesday-23-Jan-2024-165319.png" srcset="https://altstore.io/images/Tuesday-23-Jan-2024-165319-p-500.png 500w, https://altstore.io/images/Tuesday-23-Jan-2024-165319-p-800.png 800w, https://altstore.io/images/Tuesday-23-Jan-2024-165319-p-1080.png 1080w, https://altstore.io/images/Tuesday-23-Jan-2024-165319.png 1339w" width="400" sizes="(max-width: 479px) 90vw, 400px" alt=""></p>
    
  </section>
  
  <div>
        <div>
          <h2>A New Way to Sideload</h2>
          <div><p>AltStore is an app store designed for sideloading. Every app in AltStore gets a beautifully generated store page with detailed information to make sideloading fun and easy. Browse apps from trusted developers, or add additional "sources" to further increase your options.</p><p> Plus, AltStore is made with security in mind. You can view a full list of an app's permissions from its store page, and AltStore will even automatically alert you if they change so you can sideload with confidence.</p></div>
          <p><a href="https://faq.altstore.io/" target="_blank">Learn More</a>
        </p></div><p><img src="https://altstore.io/images/DeltaStorePage.PNG" srcset="https://altstore.io/images/DeltaStorePage-p-500.png 500w, https://altstore.io/images/DeltaStorePage-p-800.png 800w, https://altstore.io/images/DeltaStorePage-p-1080.png 1080w, https://altstore.io/images/DeltaStorePage.PNG 1339w" width="350" sizes="(max-width: 479px) 90vw, 350px" alt="">
      </p></div>
  <div><p><img src="https://altstore.io/images/Monday-08-May-2023-162140.PNG" srcset="https://altstore.io/images/Monday-08-May-2023-162140-p-500.png 500w, https://altstore.io/images/Monday-08-May-2023-162140-p-800.png 800w, https://altstore.io/images/Monday-08-May-2023-162140-p-1080.png 1080w, https://altstore.io/images/Monday-08-May-2023-162140.PNG 1339w" width="350" sizes="(max-width: 479px) 90vw, 350px" alt=""></p><div>
          <h2>Self-Published Apps</h2>
          <div><p>Anyone can distribute their apps with AltStore. All you need is to make a “source”, which you can do by hosting a text file with basic information about your apps. Users can then enter your source URL in AltStore and your apps will automatically appear.</p><p>Follow our complete guide to create your own source and start distributing your apps in minutes!</p></div>
          <p><a href="https://faq.altstore.io/sources/make-a-source" target="_blank">Publish Apps</a>
        </p></div>
      </div>
  <div>
      <h2>By Indies — For Indies</h2>
      <div>
        <p><a id="w-node-a1c5e89b-ef5e-812c-23ad-c7315bcc8782-ed6becd7" href="https://mastodon.social/@rileytestut" target="_blank"><img src="https://altstore.io/images/spaces_Afe8qEztjcTjsjjaMBY2_uploads_UWT8nOrICxoO7OFmzKo0_Untitled.webp" srcset="https://altstore.io/images/spaces_Afe8qEztjcTjsjjaMBY2_uploads_UWT8nOrICxoO7OFmzKo0_Untitled-p-500.webp 500w, https://altstore.io/images/spaces_Afe8qEztjcTjsjjaMBY2_uploads_UWT8nOrICxoO7OFmzKo0_Untitled-p-800.webp 800w, https://altstore.io/images/spaces_Afe8qEztjcTjsjjaMBY2_uploads_UWT8nOrICxoO7OFmzKo0_Untitled-p-1080.webp 1080w, https://altstore.io/images/spaces_Afe8qEztjcTjsjjaMBY2_uploads_UWT8nOrICxoO7OFmzKo0_Untitled.webp 1500w" id="w-node-f271e8bc-a871-6e22-2967-dc732ff82ca8-ed6becd7" sizes="(max-width: 479px) 100vw, (max-width: 767px) 24vw, (max-width: 991px) 17vw, (max-width: 1439px) 19vw, 188px" alt=""></a></p><a id="w-node-_86a4c6a7-f9c4-ad13-f7bf-6e63b1079e20-ed6becd7" href="https://mastodon.social/@rileytestut" target="_blank">
          
        </a>
        <a id="w-node-e12031f2-99ee-5f24-ac27-ea8e62bab55b-ed6becd7" href="https://twitter.com/shanegillio">
          
        </a>
        <p><a id="w-node-_705f1323-e749-6403-8f86-b86a8cfd6f50-ed6becd7" href="https://twitter.com/shanegillio" target="_blank"><img src="https://altstore.io/images/shaneprof.webp" srcset="https://altstore.io/images/shaneprof-p-500.webp 500w, https://altstore.io/images/shaneprof-p-800.webp 800w, https://altstore.io/images/shaneprof-p-1080.webp 1080w, https://altstore.io/images/shaneprof.webp 1500w" id="w-node-a4aad372-35cc-e00f-45b1-66adc412ef93-ed6becd7" sizes="(max-width: 479px) 100vw, (max-width: 767px) 24vw, (max-width: 991px) 17vw, (max-width: 1439px) 19vw, 188px" alt=""></a>
      </p></div>
      
      <div><p>AltStore is an open-source project developed by a dedicated team of two. We are supported entirely by donations from our community and you can follow along with our progress on GitHub.</p><p>We’re continuously working on new updates for our apps, and you can try out in-development features by joining our Patreon.</p></div>
      <p><a href="https://www.patreon.com/rileyshane" target="_blank">Join Patreon</a>
    </p></div>
  <section id="Downloads">
    <h2><span>Downloads</span></h2>
    <p>AltStore, Delta, and Clip are properties of AltStore LLC and are in no way associated with Nintendo Co., Ltd. or Apple Inc.</p>
    <div>
        <p>AltStore PAL</p>
        <p>Available only in Europe. Requires iOS 17.4 or later.</p>
        <p><a href="https://buy.stripe.com/6oEg2u80z5vI0Mg4gg">€1.50/year + VAT</a></p><div><p>Your subscription covers Apple's Core Technology Fee, payment processing, and server costs.</p><p>Don't want to pay, or not in the EU? Download the version of AltStore below.</p></div>
      </div>
    <p>AltStore (World)</p>
    <p>Requires AltServer to install. Follow our step-by-step <a href="http://faq.altstore.io/">Install Guide</a>
    </p>
    
    <div>
      <p>“[AltStore] is clever, has been verified by other developers, and the service has an active community of thousands of users who side-load apps on their devices. For the past few weeks, I’ve been one of them.”</p>
      
    </div>
    
  </section>
  
  
  <div>
        <p data-w-id="c10f4652-e98c-37f6-51a6-bb8725682d07">
          <h2 data-w-id="0fb59a4f-6d90-2333-688a-b06b291420c6">Experience Apps like Never Before</h2>
          <h3 data-w-id="332883b0-f4e4-5f0a-bd2e-026003ed9cc2">AltStore allows apps to exist on iOS&nbsp;that may not otherwise. <br>‍<br>Apple doesn't allow all apps on their store, so AltStore gives those apps a chance.</h3>
        </p><p><img src="https://altstore.io/images/AltStore_Delta_StorePage.png" width="416" alt="" sizes="100vw" data-w-id="ae8b192f-4a13-e725-9af4-854638dc4268" loading="lazy" srcset="https://altstore.io/images/AltStore_Delta_StorePage-p-500.png 500w, https://altstore.io/images/AltStore_Delta_StorePage-p-800.png 800w, https://altstore.io/images/AltStore_Delta_StorePage-p-1080.png 1080w, https://altstore.io/images/AltStore_Delta_StorePage.png 1400w">
      </p></div>
  
  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[My journey into personal computer software development in 1983 (142 pts)]]></title>
            <link>https://farrs.substack.com/p/my-journey-into-personal-computer</link>
            <guid>40099626</guid>
            <pubDate>Sat, 20 Apr 2024 18:29:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://farrs.substack.com/p/my-journey-into-personal-computer">https://farrs.substack.com/p/my-journey-into-personal-computer</a>, See on <a href="https://news.ycombinator.com/item?id=40099626">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em><a href="https://www.digistore24.com/redir/377301/aboel3z/" rel="nofollow ugc noopener">The Lost SuperFoods</a><span> 126 Forgotten Survival Foods That You can Stockpile for Years without Refrigeration.</span></em></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg" width="800" height="533" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:533,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:35888,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0036f7a-20b2-4b32-9a8f-994b6be3630a_800x533.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>In 1983, Personal Computers were quite the up and coming thing. You could buy your own for a few thousand dollars. Though they were mostly considered toys by many East Coast programmers (more expensive "</span><strong><a href="https://amzn.to/3UrWfGb" rel="nofollow ugc noopener">workstations</a></strong><span>" were the rage), there had already been some interesting and promising applications developed for it.</span></p><p>I thought (along with a lot of other people) that these were definitely the thing of the future. I was considering a new job, so I decided to take a bit of a risk, and look for work writing Personal Computer Software.</p><p><span>I was able to get an interview at one of the top Personal Computer software development companies of the area. The company was called "Software Arts". It was the company of the creators of "</span><a href="https://en.wikipedia.org/wiki/VisiCalc#:~:text=VisiCalc%20(%22visible%20calculator%22),VisiCorp%20on%20October%2017%2C%201979." rel="nofollow ugc noopener">VisiCalc</a><span>", the original spreadsheet.</span></p><p><span>During the interview process, I actually met the creators of VisiCalc. People had scared me about one of them, </span><a href="https://en.wikipedia.org/wiki/Bob_Frankston" rel="nofollow ugc noopener">Bob Frankston</a><span>, as someone difficult to talk to, and quick to temper. But when I met him, I actually found a genuine pleasant programmer-type. His problem was that he didn't really internalize that he was one of the company bosses, and felt that he was just a super-cool programmer. As such, if he felt like yelling at you - it would be perfectly normal because, of course, if he was wrong - you would yell right back and tell him to stfu! The only problem was, as the company founder and chief programmer or something - nobody was actually going to yell back at him. But they would grumble a lot later on, thereby giving him a bad and undeserved reputation.</span></p><p><span>The work was one of those "improve performance" details. They were doing a version of VisiCalc for the newly emerged IBM PC. The program was "almost ready", but it wouldn't fit in the memory limit! If I recall correctly, the memory limit was 256K (that's K, not M) because the "</span><a href="https://amzn.to/3UaDPIJ" rel="nofollow ugc noopener">floppy disks</a><span>" could only hold that much.</span></p><p>Bob Frankston believed the program could be made to fit into the memory by using a "segmentation" strategy. Some people at Software Arts had given it a try, but had not been able to get much success or had decided the work was too boring. In any case, nobody wanted to do it, hence the job opening.</p><p>I heard out his ideas, and it made sense to me. They offered me a job with a 30% raise (I was working for Digital Equipment which was not known for best salaries) and I joined them.</p><p>Bob Frankston's ideas about segmentation were sound. As the original author of the program, he did have a good feel for VisiCalc code, and in fact I found it was very amenable to segmentation along the lines he had suggested.</p><p>So in 2-3 months, I was able to fit the program in the memory limits, with plenty of room to spare for new features.</p><p>That work having done, I became a regular part of the IBM PC VisiCalc team.</p><p>As I mentioned, the program was "almost ready". One of the "almost" parts involved the 256 K memory limit.</p><div><figure><a target="_blank" href="https://magfree-transform-3-in-1-fast.kckb.st/1319d68e" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif" width="695" height="366" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:366,&quot;width&quot;:695,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:&quot;https://magfree-transform-3-in-1-fast.kckb.st/1319d68e&quot;,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b09a678-0421-45ec-99ff-b5c8f5d6c5d9_695x366.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>There was another part to the "almost". The bug list of the program had over 600 items. Most of the original programmers on the VisiCalc team had moved on to "better" stuff (more about that later.) Christine S and Joe B were the remaining programmers. Even if they solved 1 bug a day, it would take 60 weeks to clear the bug list. The actual rate was not 1 bug a day, some bugs took many days in fact. Not a very happy situation -- but the </span><a href="https://amzn.to/3Q6UcED" rel="nofollow ugc noopener">Software Arts management</a><span> was already seeing VisiCalc as a "yesterday" thing. Dan Bricklin, a bright and friendly guy who had the original spreadsheet idea and then involved Bob Frankston for the coding, felt that since VisiCalc had already been done and they already owned the spreadsheet market, the best bet was to focus on more new ideas rather than wasting much resources on VisiCalc.</span></p><p>The management thought "TK!Solver", an algebra-type program, would be the next "spreadsheet" type revolution. So that's where the programmers that the company felt were the "best", went.</p><p>Which left two programmers on the VisiCalc team - Christine S and Joe B, and then also I, since I had finished the "segmentation" problem ahead of schedule.</p><p>Truth be told, the "segmentation" problem was indeed boring and routine after a while. So I was only too happy to get into something more exciting. Like, uh, bug-fixing.</p><p>The company had the perfect "bug" solving system as far as I was concerned. Nobody assigned you anything. You looked over the bug list, "checked out" a bug, solved it, and "checked in" the bug.</p><p>Naturally, the hairy bugs were left alone as nobody checked them out.</p><p>But being a natural programmer, I liked my bugs complex. The easy ones were good to perk me up while I finished my morning coffee, another entertaining couple by lunch, and then often I could get one or two more by the end of the day. So I started solving bugs at the rate of 5 or so, a day.</p><p>This caused problems.</p><p>The Quality Assurance staff was very happy. They were used to programmers trying to explain to them why something wasn't a bug, or telling them it would be solved any time soon, now. And here I was, announcing every day that these 3-5 bugs were off the list. Christine P, who was doing VisiCalc Quality Assurance, told me later on that when she saw my first email listing 5 solved bugs, she decided I had to be some kind of a fast-talker and fake. (I can't blame her, here were all these graduates of top technical universities, doing a bug maybe every two-three days, and here I was from a university known for liberal arts, claiming to have solved 5 in a day!) So with the intention to confront me and set me straight, she downloaded my fixes to her PC and checked those out. And what do you know, they were all indeed fixed!</p><p>VisiCalc management was happy. Other management was not. They didn't want much attention going to VisiCalc, the "old" program. (This was before anybody had heard of something called "Excel".)</p><p><span>Other programmers at Software Arts were also a problem. Software Arts had attracted a lot of highly talented pedigreed programmers. </span><a href="https://amzn.to/3Q6UcED" rel="nofollow ugc noopener">Software Arts</a><span> would not normally have even looked at someone of my credentials, had it not been for the fact that none of their highly talented programmers wanted to do any boring work.</span></p><p>Now it turned out, many of these super-programmers had quietly looked at some of the more complex VisiCalc bugs at some time in the past, and had wisely decided not to "check out" the bug. But being super-programmers, they were very annoyed that somebody from an unknown (programming-wise) university would come in and solve those complex bugs without breaking a sweat or without spending one single evening on the premises.</p><p>Besides my educational background, at that time Indians weren't particularly considered to be suitable software material. (Amazing how the world turns, eh?)</p><p>So mostly, the super-programmers were trying to resolve how I could have solved these bugs, since obviously I couldn't be very intelligent. Well, that is, no way was I intelligent in the same way they were intelligent.</p><p>While the super-programmers and the super-managers (I believe Tracy Licklider was the actual management person, Bricklin and Frankston were above the daily management issues) were trying to resolve this dilemma, I was happily and busily solving the bugs.</p><div><figure><a target="_blank" href="https://nomade-i-all-in-one-daily.kckb.st/4b05d669" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif" width="695" height="391" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/eea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:391,&quot;width&quot;:695,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:&quot;https://nomade-i-all-in-one-daily.kckb.st/4b05d669&quot;,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feea5bf1e-3d79-436a-abdb-87e232fb307b_695x391.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Within a few months, the bug-list was empty, and VisiCalc management was encouraged to add more features to VisiCalc. So I added Graphics capabilities to VisiCalc, Christine S added sorting features (I can't remember if Joe B had been moved to another "better" project by then, but he probably was, because he was "in-clique".)</p><p>So the product was finally ready to be released.</p><p>And then things came to a head.</p><p>VisiCorp, the marketing organization for VisiCalc, was significantly unhappy with the performance of the product. That's because there was a rival called 1-2-3 from Lotus. It didn't have as many features (for example, it drew crappy line drawings instead of filled-out pie charts) but ran faster and took less memory.</p><p>VisiCalc running slower and taking more memory had to do with some inside politics. The in-clique had decided that the program had to be written in Lisp. At that time, there were strong limits on how fast you could run with a language like Lisp, and it was also a memory hog. With segmentation, I had been able to get everything to fit, but just fitting wasn't very good.</p><p><span>To me, the solution was simple -- rewrite the whole thing in something called "assembly language". That's what everybody else was doing on the PC platform in those days. I had already chosen to write the Graphics in </span><a href="https://amzn.to/3UrdPdg" rel="nofollow ugc noopener">assembly language</a><span> (which is why the Graphics took very little memory and ran fast), and from my segmentation and bug-fixing work, I knew everything about everything else in the VisiCalc program. I could have easily rewritten the whole thing in assembly language in another 4-6 months if really encouraged. Without many bugs.</span></p><p>But turns out, nobody was going to encourage me, or even ask me!</p><p>As I mentioned earlier, Tracy Licklider and the super-programmer in-clique were busy trying to resolve the mysterious dilemma of how (a) I could be an Indian and not from a known programming school and (b) I could still fix bugs and add features at this amazing rate.</p><p><span>It looks like they had hit the </span><a href="https://amzn.to/4b4crTj" rel="nofollow ugc noopener">psych books</a><span> and all, because they had finally come up with a solution. Obviously, they had concluded, I was an "idiot savant". [An "idiot savant" is an idiot who happens to be mysteriously very gifted in a particular area, e.g. mathematical computations. Their conclusion was that because obviously I couldn't really be "intelligent", my seeming "intelligence" in solving bugs was a result of this "idiot savant" effect.]</span></p><p>Now, while the in-clique of the super-programmers and managers was busy dissing me, the other staff at the company had been noticing all this, and as a result, I had built an incredible support level among the non-programming staff. Non-management and non-programming personnel, such as quality assurance, accounting, sales, even front-desk, frequently sought me out to tell me about the good things they had heard about my work.</p><p>So the "idiot savant" declaration got back to me.</p><p>I suppose someone with a more combative attitude would have stayed on and fought this thing through, to get the respect he/she deserved.</p><p>I am not like that. Specially back then, I was very easygoing. While I could put in tremendous amount of work in something that I believed was worth doing, I just couldn't see the point of working the politics of it.</p><p>Being labeleld an "idiot savant" by the management in retaliation for having done some (what I thought to be) amazingly good work, frankly unnerved and annoyed me a lot.</p><p>My reaction was, I wanted to get the heck away from those crazies.</p><p>I knew many support staff liked me, but I was realistic enough to realize management and programming staff could cause much trouble for me, if they had an attitude like that.</p><p>So that was the end of my first brief foray into Personal Computer technology in the early 80s, as I went back into a familiar world of Workstations, Unix, and C programming.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why you Should Not Apply To YC (438 pts)]]></title>
            <link>https://twitter.com/dvassallo/status/1781751108211511680</link>
            <guid>40099585</guid>
            <pubDate>Sat, 20 Apr 2024 18:26:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/dvassallo/status/1781751108211511680">https://twitter.com/dvassallo/status/1781751108211511680</a>, See on <a href="https://news.ycombinator.com/item?id=40099585">Hacker News</a></p>
Couldn't get https://twitter.com/dvassallo/status/1781751108211511680: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[Financial Market Applications of LLMs (232 pts)]]></title>
            <link>https://thegradient.pub/financial-market-applications-of-llms/</link>
            <guid>40099344</guid>
            <pubDate>Sat, 20 Apr 2024 18:03:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thegradient.pub/financial-market-applications-of-llms/">https://thegradient.pub/financial-market-applications-of-llms/</a>, See on <a href="https://news.ycombinator.com/item?id=40099344">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <p>The AI revolution drove frenzied investment in both private and public companies and captured the public’s imagination in 2023. Transformational consumer products like ChatGPT are powered by Large Language Models (LLMs) that excel at modeling sequences of tokens that represent words or parts of words [2]. Amazingly, structural understanding emerges from learning next-token prediction, and agents are able to complete tasks such as translation, question answering and generating human-like prose from simple user prompts.</p><p>Not surprisingly, quantitative traders have asked: can we turn these models into the next price or trade prediction [1,9,10]? That is, rather than modeling sequences of words, can we model sequences of prices or trades. This turns out to be an interesting line of inquiry that reveals much about both generative AI and financial time series modeling. Be warned this will get wonky.</p><p>LLMs are known as autoregressive learners -- those using previous tokens or elements in a sequence to predict the next element or token. In quantitative trading, for example in strategies like statistical arbitrage in stocks, most research is concerned with identifying autoregressive structure. That means finding sequences of news or orders or fundamental changes that best predict future prices.</p><p>Where things break down is in the quantity and information content of available data to train the models. At the 2023 NeurIPS conference, Hudson River Trading, a high frequency trading firm, presented a comparison of the number of input tokens used to train GPT-3 with the amount of trainable tokens available in the stock market data per year HRT estimated that, with 3,000 tradable stocks, 10 data points per stock per day, 252 trading days per year, and 23400 seconds in a trading day, there are 177 billion stock market tokens per year available as market data. GPT-3 was trained on 500 billion tokens, so not far off [6].</p><figure><img src="https://thegradient.pub/content/images/2024/04/Screenshot-2024-04-18-at-3.11.18-PM.png" alt="" loading="lazy" width="2000" height="368" srcset="https://thegradient.pub/content/images/size/w600/2024/04/Screenshot-2024-04-18-at-3.11.18-PM.png 600w, https://thegradient.pub/content/images/size/w1000/2024/04/Screenshot-2024-04-18-at-3.11.18-PM.png 1000w, https://thegradient.pub/content/images/size/w1600/2024/04/Screenshot-2024-04-18-at-3.11.18-PM.png 1600w, https://thegradient.pub/content/images/2024/04/Screenshot-2024-04-18-at-3.11.18-PM.png 2356w" sizes="(min-width: 720px) 720px"><figcaption>numbers courtesy of HRT 2023 NeuRIPS presentation</figcaption></figure><p>But, in the trading context the tokens will be prices or returns or trades rather than syllables or words; the former is much more difficult to predict. Language has an underlying linguistic structure (e.g., grammar) [7]. It’s not hard to imagine a human predicting the next word in a sentence, however that same human would find it extremely challenging to predict the next return given a sequence of previous trades, hence the lack of billionaire day traders. The challenge is that there are very smart people competing away any signal in the market, making it <em>almost </em>efficient (“efficiently inefficient”, in the words of economist Lasse Pedersen) and hence unpredictable. No adversary actively tries to make sentences more difficult to predict — if anything, authors usually seek to make their sentences easy to understand and hence <em>more</em> predictable.</p><p>Looked at from another angle, there is much more noise than signal in financial data. Individuals and institutions are trading for reasons that might not be rational or tied to any fundamental change in a business. The GameStop episode in 2021 is one such example. Financial time series are also constantly changing with new fundamental information, regulatory changes, and occasional large macroeconomic shifts such as currency devaluations. Language evolves at a much slower pace and over longer time horizons.</p><p>On the other hand, there are reasons to believe that ideas from AI will work well in financial markets. One emerging area of AI research with promising applications to finance is multimodal learning [5], which aims to use different modalities of data, for example both images and textual inputs to build a unified model. With OpenAI’s DALL-E 2 model, a user can enter text and the model will generate an image. In finance, multi-modal efforts could be useful to combine information classical sources such as technical time series data (prices, trades, volumes, etc.) with alternative data in different modes like sentiment or graphical interactions on twitter, natural language news articles and corporate reports, or the satellite images of shipping activity in a commodity centric port. Here, leveraging multi-modal AI, one could potentially incorporate all these types of non-price information to predict well.</p><p>Another strategy called ‘residualization’ holds prominence in both finance and AI, though it assumes different roles in the two domains. &nbsp;In finance, structural `factor’ models break down the contemporaneous observations of returns across different assets into a shared component (the market return, or more generally returns of common, market-wide factors) and an idiosyncratic component unique to each underlying asset. Market and factor returns are difficult to predict and create interdependence, so it is often helpful to remove the common element when making predictions at the individual asset level and to maximize the number of independent observations in the data. </p><p>In residual network architectures such as transformers, there’s a similar idea that we want to learn a function h(X) of an input X, but it might be easier to learn the residual of h(X) to the identity map, i.e., h(X) – X. Here, if the function h(X) is close to identity, its residual will be close to zero, and hence there will be less to learn and learning can be done more efficiently. In both cases the goal is to exploit structure to refine predictions: in the finance case, the idea is to focus on predicting innovations beyond what is implied by the overall market, for residual networks the focus is on predicting innovations to the identity map.</p><p>A key ingredient for the impressive performance of LLMs work is their ability to discern affinities or strengths between tokens over long horizons known as context windows. In financial markets, the ability to focus attention across long horizons enables analysis of multi-scale phenomena, with some aspects of market changes explained across very different time horizons. For example, at one extreme, fundamental information (e.g., earnings) may be incorporated into prices over months, technical phenomena (e.g., momentum) might be realized over days, and, at the other extreme, microstructure phenomena (e.g., order book imbalance) might have a time horizon of seconds to minutes.</p><p>Capturing all of these phenomena involves analysis of multiple time horizons across the context window. However, in finance, prediction over multiple <em>future</em> time horizons is also important. For example, a quantitative system may seek to trade to profit from multiple different anomalies that are realized over multiple time horizons (e.g., simultaneously betting on a microstructure event and an earnings event). This requires predicting not just the next period return of the stock, but the entire term structure or trajectory of expected returns, while current transformer-style predictive models only look one period in the future.</p><p>Another financial market application of LLMs might be synthetic data creation [4,8]. This could take a few directions. Simulated stock price trajectories can be generated that mimic characteristics observed in the market and can be extremely beneficial given that financial market data is scarce relative to other sources as highlighted above in the number of tokens available. Artificial data could open the door for meta-learning techniques which have successfully been applied, for example, in robotics. In the robotic setting controllers are first trained using cheap but not necessarily accurate physics simulators, before being better calibrated using expensive real world experiments with robots. In finance the simulators could be used to coarsely train and optimize trading strategies. The model would learn high level concepts like risk aversion and diversification and tactical concepts such as trading slowly to minimize the price impact of a trade. Then precious real market data could be employed to fine-tune the predictions and determine precisely the optimal speed to trade.</p><figure><img src="https://thegradient.pub/content/images/2024/04/Screenshot-2024-04-18-at-3.08.44-PM.png" alt="" loading="lazy" width="2000" height="258" srcset="https://thegradient.pub/content/images/size/w600/2024/04/Screenshot-2024-04-18-at-3.08.44-PM.png 600w, https://thegradient.pub/content/images/size/w1000/2024/04/Screenshot-2024-04-18-at-3.08.44-PM.png 1000w, https://thegradient.pub/content/images/size/w1600/2024/04/Screenshot-2024-04-18-at-3.08.44-PM.png 1600w, https://thegradient.pub/content/images/size/w2400/2024/04/Screenshot-2024-04-18-at-3.08.44-PM.png 2400w" sizes="(min-width: 720px) 720px"></figure><p>Financial market practitioners are often interested in extreme events, the times when trading strategies are more likely to experience significant gains or losses. Generative models where it’s possible to sample from extreme scenarios could find use. However extreme events by definition occur rarely and hence determining the right parameters and sampling data from the corresponding distribution is fraught.</p><p>Despite the skepticism that LLMs will find use in quantitative trading, they might boost fundamental analysis. As AI models improve, it’s easy to imagine them helping analysts refine an investment thesis, uncover inconsistencies in management commentary or find latent relationships between tangential industries and businesses [3]. Essentially these models could provide a Charlie Munger for every investor.</p><p>The surprising thing about the current generative AI revolution is that it’s taken almost everyone – academic researchers, cutting edge technology firms and long-time observers – by surprise. The idea that building bigger and bigger models would lead to emergent capabilities like we see today was totally unexpected and still not fully understood.</p><p>The success of these AI models has supercharged the flow of human and financial capital into AI, which should in turn lead to even better and more capable models. So while the case for GPT-4 like models taking over quantitative trading is currently unlikely, we advocate keeping an open mind. Expecting the unexpected has been a profitable theme in the AI business.</p><hr><h3 id="references">References</h3><ol><li>“Applying Deep Neural Networks to Financial Time Series Forecasting” Allison Koenecke. 2022</li><li>“<a href="https://scholar.google.com/scholar?oi=bibs&amp;cluster=2960712678066186980&amp;btnI=1&amp;hl=en">Attention is all you need</a>.” A Vaswani, N Shazeer, N Parmar, J Uszkoreit, L Jones… &nbsp;Advances in Neural Information Processing Systems, 2017</li><li>“Can ChatGPT Forecast Stock Price Movements? Return Predictability and Large Language Models” . Lopez-Lira, Alejandro and Tang, Yuehua, (April 6, 2023) Available at SSRN</li><li>“<a href="https://scholar.google.com/scholar?oi=bibs&amp;cluster=8154893591177160457&amp;btnI=1&amp;hl=en">Generating Synthetic Data in Finance: Opportunities, Challenges and Pitfalls</a>.” SA Assefa, D Dervovic, M Mahfouz, RE Tillman… - Proceedings of the First ACM International Conference …, 2020</li><li>“GPT-4V(ision) System Card.” OpenAI. September 2023</li><li>“<a href="https://scholar.google.com/scholar?oi=bibs&amp;cluster=15953747982133883426&amp;btnI=1&amp;hl=en">Language models are few-shot learners</a>.” T Brown, B Mann, N Ryder, M Subbiah, JD Kaplan… - Advances in Neural Information Processing Systems, 2020</li><li>“Sequence to Sequence Learning with Neural Networks.” I.Sutskever,O.Vinyals,and Q.V.Le in Advances in Neural Information Processing Systems, 2014, pp. 3104–3112.</li><li>“Synthetic Data Generation for Economists”. A Koenecke, H Varian &nbsp;- arXiv preprint arXiv:2011.01374, 2020</li><li>C. C. Moallemi, M. Wang. A reinforcement learning approach to optimal execution. Quantitative Finance, 22(6):1051–1069, March 2022.</li><li>C. Maglaras, C. C. Moallemi, M. Wang. A deep learning approach to estimating fill probabilities in a limit order book. Quantitative Finance, 22(11):1989–2003, October 2022.</li></ol><h3 id="citation">Citation</h3><p>For attribution in academic contexts or books, please cite this work as</p><pre><code>Richard Dewey and Ciamac Moallemi, "Financial Market Applications of LLMs," The Gradient, 2024</code></pre><pre><code>@article{dewey2024financial,
    author = {Richard Dewey and Ciamac Moallemi},
    title = {Financial Market Applications of LLMs},
    journal = {The Gradient},
    year = {2024},
    howpublished = {\url{https://thegradient.pub/financial-market-applications-of-llms},
}</code></pre>
        </div></div>]]></description>
        </item>
    </channel>
</rss>