<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 18 Jan 2025 11:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[I've been advocating for RSS support, and you should too (261 pts)]]></title>
            <link>https://reedybear.bearblog.dev/ive-been-advocating-for-rss-support-and-you-should-too/</link>
            <guid>42746222</guid>
            <pubDate>Sat, 18 Jan 2025 05:58:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://reedybear.bearblog.dev/ive-been-advocating-for-rss-support-and-you-should-too/">https://reedybear.bearblog.dev/ive-been-advocating-for-rss-support-and-you-should-too/</a>, See on <a href="https://news.ycombinator.com/item?id=42746222">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    

    
        
    

    
        

        <p>
            <i>
                <time datetime="2025-01-17T18:46Z">
                    17 Jan, 2025
                </time>
            </i>
        </p>
    

    <p>I've been using Feeder to keep up with the news for awhile now. For a long time, I just checked AllSides.</p>
<p>But then I found out NPR in my state supports RSS, my local news org supports RSS, and YouTube even supports RSS!</p>
<p>One outlet I really like is GovTrack.us, and they did not support RSS - so I emailed them about it, and they added support.</p>
<p>Feeder's news website wasn't working with the Feeder app, so I emailed them and they fixed it.</p>
<p>I learned my State Senator's website supports RSS, but my state's GOP website does not - so I emailed the GOP asking for RSS. We'll see.</p>
<p>I emailed Ubisoft/Nadeo asking for RSS support on the Trackmania news website. They replied that they'll send the suggestion to dev team. We'll see.</p>
<p>I spoke at my Library's Board meeting last night asking for RSS support on their website. Seemed well-received. We'll see.</p>
<p>Substack supports RSS. Jurist.org supports RSS. Justia's supreme court summaries support RSS (<em>I used to read those, but I don't any more</em>). Blogger supports RSS.</p>
<p>So yeah - If you are interested in an organization's updates, then get a feed reader app, and subscribe to their feed on their website. If they don't have a feed, just ask them to add one!</p>
<p>You'll be surprised how nice it is to keep up with things you actually care about in a way that you're completely in control of, without bloat, without ads, without algorithms.</p>
<p>Please advocate for more RSS support - especially with orgs you want to stay up-to-date with. This can be video game news websites, government organizations, political news websites, entertainment platforms, blogs, or whatever.</p>


    

    
        
            <p>
                
                    <a href="https://reedybear.bearblog.dev/blog/?q=action">#action</a>
                
                    <a href="https://reedybear.bearblog.dev/blog/?q=blog">#blog</a>
                
            </p>
        

        
            


        
    


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using ChatGPT is not bad for the environment (181 pts)]]></title>
            <link>https://andymasley.substack.com/p/individual-ai-use-is-not-bad-for</link>
            <guid>42745847</guid>
            <pubDate>Sat, 18 Jan 2025 04:31:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://andymasley.substack.com/p/individual-ai-use-is-not-bad-for">https://andymasley.substack.com/p/individual-ai-use-is-not-bad-for</a>, See on <a href="https://news.ycombinator.com/item?id=42745847">Hacker News</a></p>
Couldn't get https://andymasley.substack.com/p/individual-ai-use-is-not-bad-for: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[EFF statement on U.S. Supreme Court's decision to uphold TikTok ban (143 pts)]]></title>
            <link>https://www.eff.org/deeplinks/2025/01/eff-statement-us-supreme-courts-decision-uphold-tiktok-ban</link>
            <guid>42744695</guid>
            <pubDate>Sat, 18 Jan 2025 00:32:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.eff.org/deeplinks/2025/01/eff-statement-us-supreme-courts-decision-uphold-tiktok-ban">https://www.eff.org/deeplinks/2025/01/eff-statement-us-supreme-courts-decision-uphold-tiktok-ban</a>, See on <a href="https://news.ycombinator.com/item?id=42744695">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <div>
        <div>
            <article role="article">
  
  
  <div><p><span>We are deeply disappointed that the Court failed to require the strict First Amendment scrutiny required in a case like this, which would’ve led to the inescapable conclusion that the government's desire to prevent potential future harm had to be rejected as infringing millions of Americans’ constitutionally protected free speech. We are disappointed to see the Court sweep past the undisputed content-based justification for the law – to control what speech Americans see and share with each other – and rule only based on the shaky data privacy concerns.</span></p>
<p><span>The United States’ foreign foes easily can steal, scrape, or buy Americans’ data by countless other means. The ban or forced sale of one social media app will do virtually nothing to protect Americans' data privacy – only comprehensive consumer privacy legislation can achieve that goal. Shutting down communications platforms or forcing their reorganization based on concerns of foreign propaganda and anti-national manipulation is an eminently anti-democratic tactic, one that the US has previously condemned globally.</span></p>

</div>

          </article>
    </div>
<div>
          <h2>Related Issues</h2>
            </div>

<div>
          <h2>Join EFF Lists</h2>
        
    </div>
<div>
          <h2>Related Updates</h2>
        <div>
        
  
  
  
  
  <div>
    <article role="article">
      <header>
                    <h3><a href="https://www.eff.org/deeplinks/2024/12/effs-2024-battle-against-online-age-verification-defending-youth-privacy-and-free" rel="bookmark">Fighting Online ID Mandates: 2024 In Review</a></h3>
            
    </header>
  
  
  <div><p>This year, nearly half of U.S. states passed laws imposing age verification requirements on online platforms. Though age verification mandates are often touted as “online safety” measures for kids, the laws actually do more harm than good.</p></div>

          </article>
  </div>
  
  
  <div>
    <article role="article">
      <header>
                    <h3><a href="https://www.eff.org/deeplinks/2024/12/saving-internet-europe-defending-free-expression" rel="bookmark">Saving the Internet in Europe: Defending Free Expression </a></h3>
            
    </header>
  
  
  <div><p><i>This post is part two in a series of posts about EFF’s work in Europe. Read about how and why we work in Europe </i><a href="https://www.eff.org/deeplinks/2024/12/saving-internet-europe-how-eff-works-europe"><i>here</i></a><i>.</i> EFF’s mission is to ensure that technology supports freedom, justice, and innovation for all people of the world. While our work has taken us...</p></div>

          </article>
  </div>
  
    </div>    </div>
      </div>

      <div><h2>Related Issues</h2></div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Investigating an "Evil" RJ45 Dongle (384 pts)]]></title>
            <link>https://lcamtuf.substack.com/p/investigating-an-evil-rj45-dongle</link>
            <guid>42743033</guid>
            <pubDate>Fri, 17 Jan 2025 20:41:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lcamtuf.substack.com/p/investigating-an-evil-rj45-dongle">https://lcamtuf.substack.com/p/investigating-an-evil-rj45-dongle</a>, See on <a href="https://news.ycombinator.com/item?id=42743033">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>When it comes to information security headlines, a good rule of thumb is that claims about about widespread supply-chain sabotage are usually false. It’s not that attacks of this sort can’t happen; it’s that they’re complicated, time-consuming, and risky to pull off. It’s what you use when you’re out of options. Most of the time, it’s much simpler to steal credentials or get someone to download a malicious file.</p><p>Earlier this week, a young entrepreneur caused stir on social media by suggesting that an Ethernet-to-USB they purchased from China was preloaded with malware that “evaded virtual machines”, “captured keystrokes”, and “used Russian-language elements”. </p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg" width="1006" height="850" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:850,&quot;width&quot;:1006,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Image&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="Image" title="Image" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd40dc9c2-9d33-4cfd-bdac-05c4f5d481d4_1006x850.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption><em>OK, it did not say that.</em></figcaption></figure></div><p><span>The revelations have gotten millions of views, but details were quite hazy. The poster shared an </span><a href="https://www.hybrid-analysis.com/sample/e3f57d5ebc882a0a0ca96f9ba244fe97fb1a02a3297335451b9c5091332fe359/6783acb889e814045f0a2da6" rel="">ambiguous antivirus scan report</a><span> from Crowdstrike Falcon, but that seemed to be a red herring: the binary was a self-extracting EXE created using 7-Zip, a well-known open-source archiver authored by Ivan Pavlov. The author’s nationality accounted for the ominous “Russian-language elements”; the nature of self-extracting archives that install drivers explained most of the rest. Finally, the contents of the archive seemed to match a signed, publicly-available 2.0.7.0 driver for an RJ45-to-USB chip made by CoreChips Shenzhen — a company that also calls itself Corechip Semiconductor in the accompanying </span><em>.inf</em><span> file.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png" width="1456" height="884" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:884,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:78230,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fea8ac2ef-104d-43d4-979e-70813bc74da3_1900x1153.png 1456w" sizes="100vw"></picture></div></a><figcaption><em>Yeah, it’s pretty much supposed to do that stuff.</em></figcaption></figure></div><p><span>The driver referenced a chip named </span><a href="https://wmsc.lcsc.com/wmsc/upload/file/pdf/v2/lcsc/1912111437_CoreChips-SR9900_C403645.pdf" rel="">SR9900</a><span>; virtually no publicly-available info is available about the chip or its maker, but after some sleuthing, I believe it’s a direct clone of </span><a href="https://www1.futureelectronics.com/doc/Realtek/Realtek-Semicon-RTL8152B-VB-CG_C50656.pdf" rel="">Realtek RTL8152B</a><span>. The English-language product brief implies that “SR” stands for “Supereal”; that brand name comes up in the context of </span><a href="https://zeptobars.com/en/read/FTDI-FT232RL-real-vs-fake-supereal" rel="">counterfeit FTDI FT232RL chips</a><span> that plagued the industry some time ago.</span></p><p>Other than the potential for IP tomfoolery, the lineage of the chip is important because the original Realtek design is pretty old; the datasheet was released in 2013. The devices support 100BASE-TX and USB 2.0, and hearken back to the era of Windows 7. This was an awkward period when CD-ROM drives were going out of fashion, but not every computer could be assumed to be permanently online. It made sense for some gadgets to present themselves as mass storage devices containing their own drivers — and from the security standpoint, it wasn’t better or worse than any other ad-hoc way to deliver the file.</p><p><span>In other words, given the historical context, nothing about the driver seemed particularly odd. That said, the poster implied there’s more to the story: they shared teardown photos and pointed to a sparsely-populated PCB with a </span><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/SST25VF040B-4-Mbit-SPI-Serial-Flash-Data-Sheet-20005051F.pdf" rel="">25x40-type</a><span> serial flash IC mounted next to the aforementioned SR9900:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg" width="1456" height="1092" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1092,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Image&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="Image" title="Image" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa1ceee71-b1dd-490b-ac7e-2616ff5cbd48_1600x1200.jpeg 1456w" sizes="100vw"></picture></div></a><figcaption><em>One of the original teardown pics. From social media.</em></figcaption></figure></div><p><span>Why did the device need 512 kB of flash memory? Was this for firmware, or was it where </span><em>they </em><span>kept our stolen packets?… To be clear, it’s not wrong to ask! Malicious hardware has plenty of precedent: it’s been used by intelligence agencies and private pentesters alike. Heck, a bit over a decade ago, I built an </span><a href="https://lcamtuf.coredump.cx/plasma_globe/" rel="">evil plasma globe</a><span> for work. Still, we weren’t here to debate whether a malicious RJ45-to-USB adapter </span><em>could</em><span> be made. The important question was whether in this particular instance — as the poster put it — “the Chinese were at it again”.</span></p><p>Unfortunately, the specs for SR9900 and RTL8152B are equally vague about the purpose of the companion flash IC. I dug up the following architectural outline, but it didn’t offer any special insights:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png" width="1456" height="1016" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1016,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:119026,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0c445094-5d87-4999-95b0-877ae396aa65_1513x1056.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>CoreChips SR9900 architecture, from the product brief.</em></figcaption></figure></div><p>Image search for schematics proved to be another dead end; I found several designs featuring the original Realtek chip, but there was nothing hooked up to the serial pins:</p><p><span>I was ready to head over to the Dark Web (</span><em>amazon.com</em><span>) and purchase one of the dongles just to dump the contents of the memory chip. The Serial Peripheral Interface (SPI) bus is trivial to work with: in essence, you supply a clock signal at any speed you like; pressing a button by hand would do. At the rising edge of every clock cycle, the peripheral reads one bit on the “serial in” line, while the host reads one “serial out” bit back. There are no handshakes, headers, parity bits, or control flow.</span></p><p>The “application” protocol of the flash chip equally simple and is common to almost all serial memory ICs. To get things going, the host sends a 1-byte READ instruction (0x03), followed by three address bytes. The chip starts sending data immediately after receiving the entire four-byte sequence, and keeps streaming bits for as long as the host clock signal is supplied:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png" width="1456" height="447" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:447,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:108659,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360f9323-2014-41f3-b8a0-f2d1332df7c5_2021x620.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>Serial memory read protocol. From the Microchip 25x40 spec.</em></figcaption></figure></div><p><span>But then, with the item in my cart, I had an epiphany: I went to the website of CoreChips and used Google Translate to pinpoint the original Chinese text for the “</span><em>SR9900 series chip Windows system mass production tool</em><span>”. I searched for the matching string and found a couple of old Chinese-language forum threads; one of them led me to a password-protected and paywalled download named “</span><em>SR9900(A)设计资料1018.rar</em><span>” . Some $2.99 later, I was the happy owner of an archive containing a very retro-looking SR9900 production tool:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png" width="1456" height="994" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:994,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:419079,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff60529ac-79c9-4df1-9968-8cad918a286b_1755x1198.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>Ah, to be young again…</em></figcaption></figure></div><p><span>With it, came a 168 kB ISO 9660 (!) filesystem image containing a self-extracting Windows driver; the programming tool puts the .</span><em>iso</em><span> file verbatim onto the SPI flash. Yep: the chip just acts as a “software-defined” CD-ROM, a drop-in replacement for the physical media you’d have gotten with such gear before. You can download the disk image </span><a href="https://lcamtuf.coredump.cx/blog/sr9900-iso.7z" rel="">here</a><span>; the password is “rj45”.</span></p><p>As an aside, the CD-ROM image was created with “ULTRAISO V9.3 CD &amp; DVD CREATOR, (C) EZB SYSTEMS” — another decidedly retro piece straight from the days of Windows XP:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif" width="785" height="574" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:574,&quot;width&quot;:785,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F682cf005-07d6-465f-9c29-c8890c5a4769_785x574.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>This is how we used to hack.</em></figcaption></figure></div><p>If you want to try it, be aware that it requires Intel Pentium 166MHz or above.</p><p><span>Corroborating the findings, the main archive also included a document titled </span><em>“SR9900(A)设计前必看.docx”.</em><span> The doc contained the following (auto-translated) passage:</span></p><blockquote><p><em>“When SR9900 is used as a USB network card (consumer computer peripheral market), the SPI can be used as a virtual optical drive when installing the windows system driver (SPI-flash will pre-burn the SR9900 driver under the windows system)”</em></p></blockquote><p>It also underscored that the use of the flash chip was optional.</p><p><span>So there you have it; the predictable, anticlimactic conclusion is that </span><em>weird</em><span> is not always </span><em>bad. </em><span>To get to that point, we didn’t need a hardware lab; a bit of patience and Google-fu was enough.</span></p><p><span>To be fair, we’re leaving one stone unturned: the SR9900 IC itself contains two small microcontroller cores — USB and Ethernet — each running some internal code. If we felt the chip maker was somehow complicit, I think it would be possible to peek inside. Realtek provides an open-source </span><a href="https://github.com/awesometic/realtek-r8152-dkms/blob/master/src/r8152.c#L5834" rel="">Linux driver</a><span> for RTL8152 that does some in-memory patching of the firmware; to my eye, there doesn’t appear to be any encryption or signing going on.</span></p><p><span>Should you be worried about the possibility of being sent an evil USB dongle from faraway lands? If you’re a scientist working on the Iranian nuclear program, probably! If you’re a CISO of a strategically important civilian business, some caution would be advised too: there might be an intelligence analyst with a spreadsheet of all your vendors, </span><em>just in case.</em></p><p>But for home networking, it seems that we get to live another day.</p><p><em>If you liked this article, please subscribe! Unlike most other social media, Substack is not a walled garden and not an addictive doomscrolling experience. It’s just a way to stay in touch with the writers you like.</em></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[So You Want to Build Your Own Data Center (370 pts)]]></title>
            <link>https://blog.railway.com/p/data-center-build-part-one</link>
            <guid>42743019</guid>
            <pubDate>Fri, 17 Jan 2025 20:41:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.railway.com/p/data-center-build-part-one">https://blog.railway.com/p/data-center-build-part-one</a>, See on <a href="https://news.ycombinator.com/item?id=42743019">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><p><span>Since the beginning, Railway’s compute has been built on top of Google Cloud Platform. The platform supported Railway's initial journey, but it has caused a multitude of problems that have posed an existential risk to our business. More importantly, building on a hyperscaler prevents us from delivering the best possible platform to our customers. </span></p><p><span>It directly affected the pricing we could offer (egress fees anyone?), limited the level of service we could deliver, and introduced engineering constraints that restricted the features we could build. </span></p><p><span>And not only is it </span><a href="https://github.com/GoogleCloudPlatform/guest-agent/issues/401" target="_blank" rel="noreferrer noopener"><span>rare</span></a><span> that we understand </span><a href="https://blog.railway.com/p/2023-12-01-incident-report" target="_blank" rel="noreferrer noopener"><span>why</span></a><span> </span><a href="https://x.com/JustJake/status/1667478906591666176" target="_blank" rel="noreferrer noopener"><span>things</span></a><span> </span><a href="https://blog.railway.com/p/incident-december-16-2024" target="_blank" rel="noreferrer noopener"><span>break</span></a><span> upstream, but also despite multi-million dollar annual spend, we get about as much support from them as you would spending $100. </span></p><p><span>So in response, we kicked off a Railway Metal project last year. Nine months later we were live with the first site in California, having designed, spec-ed, and installed everything from the fiber optic cables in the cage to the various contracts with ISPs. We’re lighting up three more data center regions as we speak.</span></p><p><span>To deliver an “infra-less” cloud experience to our customers, we’ve needed to get good fast at building out our own physical infrastructure. That’s the topic of our blogpost today.</span></p><p><a href="https://blog.railway.com/p/data-center-build-part-one#so-you-want-to-build-a-cloud"><h2><span>So you want to build a cloud</span></h2></a></p><p><span>From kicking off the Railway Metal project in October last-year, it took us five long months to get the first servers plugged in. It took us an additional three months before we felt comfortable letting our users onto the hardware. </span></p><p><span>The first step was finding some space.</span></p><p><span>When you go “on-prem” in cloud-speak, you need somewhere to put your shiny servers and reliable power to keep them running. Also you want enough cooling so they don’t melt down. </span></p><p><span>In general you have three main choices: Greenfield buildout (buying or leasing a datacenter), Cage Colocation (getting a private space inside a provider's  datacenter enclosed by mesh walls), or Rack colocation (leasing individual racks or partitions of racks in a colocation datacenter). </span></p><p><span>We chose the second option: a cage to give us four walls, a secure door, and a blank slate for everything else.</span></p><div><p><img alt="A cage before any racks have been fitted" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4d2fcf19-fcb5-4981-9003-958d82fef28d%2FCleanShot_2025-01-15_at_23.34.372x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3ffe2b4c0409224d75cb10b42f707b6e2c656384affc7314a073fb6f4e9d6ae6%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>A cage before any racks have been fitted</p></div><p><span>The space itself doesn’t cost much, but power (and by proxy, cooling) costs the most. Depending on the geography, the $/kW rate can vary hugely — on the US west coast for example we may pay less than half as much as we pay in Singapore. Power is paid for as a fixed monthly commit, regardless of whether its consumed or not, to guarantee it will be available on-demand.</span></p><p><span>But how much power do you need?</span></p><p><a href="https://blog.railway.com/p/data-center-build-part-one#with-great-power-comes-great-responsibility"><h2><span>With great power comes great responsibility</span></h2></a></p><p><span>Ideally if you’ve embarked on your data center migration mission, you should have an idea of the rough amount of compute you want to deploy. We started with a target number of vCPUs, GBs of RAM, and TBs of NVMe to match our capacity on GCP. </span></p><p><span>Using these figures, we converged on a server and CPU choice. There are many knobs to turn when doing this computation — probably worth a blogpost in itself — but the single biggest factor for us was power density e.g. how do we get the compute density we want inside of a specific power draw. </span></p><p><span>The calculations aren’t as simple as summing watts though, especially with 3-phase feeds — Cloudflare has </span><a href="https://blog.cloudflare.com/an-introduction-to-three-phase-power-and-pdus/" target="_blank" rel="noreferrer noopener"><span>a great blogpost</span></a><span> covering this topic.</span></p><p><span>Power is the most critical resource for data centers, and a power outage can have extremely long recovery times. So redundancy is critical, and it’s important to have two fully independent power feeds per rack. Both feeds will share load under normal operation, but the design must be resilient to a feed going down.</span></p><p><span>To deliver this power to your servers, you’ll also want a Power Distribution Unit, which you'll  select based on the number of sockets and management features it provides. The basic ones are glorified extension cords, while the ones we deploy allow control and metering of individual sockets.</span></p><div><p><img alt="Each PDU is accessible over the network and individual sockets can be remotely metered and controlled" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F4e660a9b-7df3-40f6-a484-f80355b6bb41%2F880a21c2-366b-445e-951e-a03a68515796.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D2728c9d2cf17606998c46b73ad69a154a737e5319b6dcb28c073cacd14c153d5%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>Each PDU is accessible over the network and individual sockets can be remotely metered and controlled</p></div><p><span>With that, power is now available in the cage.</span></p><p><a href="https://blog.railway.com/p/data-center-build-part-one#let-there-be-light"><h2><span>Let there be light</span></h2></a></p><p><span>No cloud machine is an island </span><span>and that's where networks come into play. </span></p><p><span>To achieve the lowest possible latency on Railway, we need to set you up with solid connections to the rest of the world. </span></p><p><span>We look for DC facilities that are on-network with Tier 1 Internet Services Providers (ISPs), that are part of an Internet Exchange (IX), and that have available fiber to other data centers in close proximity. </span></p><div><p><img alt="Each cage gets diverse and redundant network links" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F38a127b8-ac2a-49ba-89fc-899125b85afc%2Fd0c2e2d8-dd9d-4917-8178-062572bc3ff4.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ded22b50b7f4172c5afdf9044d269ecac72d78cdce3728bfe8542f63d36967207%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>Each cage gets diverse and redundant network links</p></div><p><span>Your applications deployed to Railway will want to connect to a diverse mix of endpoints over the network — be it a home internet user in Sydney, Australia or a API hosted on an AWS server in the US. To get you the best possible latency and the lowest bandwidth cost, we contract with a mix of internet providers optimized for each use case.</span></p><p><span>We select ISPs for the maturity of their networks in each geography we target. Partnering with the wrong ISP in a region can lead to extra network hops (and thus latency) to reach specific target markets — or in the worst case — convoluted network routes. So for each region, we pick at least two separate networks based on their regional footprints. </span></p><p><span>Once connected, we receive full internet routing tables from each ISP and consolidate them on our network switches to resolve the best path for each IP prefix. If you have an end user in Australia trying to reach an app deployed to Singapore, we’ll likely hand those packets off directly to </span><a href="https://bgp.tools/as/4637#connectivity" target="_blank" rel="noreferrer noopener"><span>Telstra</span></a><span> who have one of the densest access networks in Australia. If that same app needs to send packets to a end-user or server in Japan, then we’d likely be handing them over to PCCW who peer directly with NTT in Japan and have a </span><a href="https://www.pccwglobal.com/wp-content/uploads/2019/11/world_fold_20191115.pdf" target="_blank" rel="noreferrer noopener"><span>dense footprint in APAC</span></a><span>.</span></p><div><p>👉</p><div><p><span>Peering information is public, head-over to </span><a href="https://bgp.tools/" target="_blank" rel="noreferrer noopener"><span>bgp.tools</span></a><span> to see how your favorite networks interconnect.</span></p></div></div><p><span>For redundancy we’re building out multiple zones in each region, and interconnectivity between these sites is also critical for our expansion. There are several tools such as dark fiber or wavelength services that we look for to plan this expansion. The result is that your apps won’t notice if your database is in the same room or if it’s 4 blocks over in a neighboring building — this is a feature not a bug — as it builds resilience against the failure of an individual data center.</span></p><p><span>...</span></p><p><span>Ok, now that you’ve found a space you like, signed a deal with a data center, and signed deals with several ISPs, you're all-systems-go to install some servers, right? </span></p><p><span>Well, not exactly. First you need a bunch of other things to give your server a nice snug home to warm up in.</span></p><p><a href="https://blog.railway.com/p/data-center-build-part-one#aisles,-racks-and-overhead-infrastructure"><h2><span>Aisles, racks and overhead infrastructure</span></h2></a></p><p><span>In a data center, racks are arranged in rows, and the space between racks, the aisle, is used for airflow. </span></p><p><span>The Cold Aisle is where cold air is blown in from the DC facility, and servers in your rack suck this air up and exhaust it towards the rear onto the Hot Aisle. The DC facility will remove this hot air from the Hot Aisle. For optimum efficiency, you don’t want air between these aisles to mix.</span></p><div><p><img alt="A cage schematic - all equipment must be mounted such that fans blow air from the cold aisle to the hot" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F228b8780-1812-43d5-8cf9-8dba7b20d979%2F3d2a676b-0ff6-4c62-a25e-c9db9c40a21a.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Ddffbc032117c690a0b5cd4462bd3c68d4dc16c7e4a90d701c0e1fcf3a7203af0%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>A cage schematic - all equipment must be mounted such that fans blow air from the cold aisle to the hot</p></div><p><span>The racks themselves have some variability, even if you opt to use conventional 19" wide equipment. You can select the height, width, and depth to suit your equipment and cabling needs. </span></p><p><span>Most server equipment can slide on rails to allow for easy maintenance, so it’s important to ensure that cage dimensions allow for this. Cabling and cable management also requires some space, so there’s a tradeoff to be made with how crowded you want each rack to be vs. how many racks you can fit into a cage. </span></p><p><span>In our experience, power and cooling is often the limiting factor rather than the actual space available. In newer sites we opt for wider 800mm racks to allow for better airflow by getting cables out of the way of the exhausts.</span></p><div><p><img alt="A rack-mount server on rails can be pulled out and serviced in place, each weighs nearly 20kg…" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F77195454-0644-498c-839e-6ed5d49ce03b%2FIMG_5261.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D5828fd5736a21ca8a4f18dec3fa9b4a8971bb2e37fabc745a37f71b84a9a4d55%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>A rack-mount server on rails can be pulled out and serviced in place, each weighs nearly 20kg…</p></div><p><span>In addition to racks, you'll need several bits of infrastructure to get power and data to your racks. This will likely involve installing some overhead infrastructure and trays that let you route fiber cables from the edge of your cage to each of your racks, and to route cables between racks. This is something the DC operator will throw in when quoting the cage.</span></p><p><span>Depending on your design, you’ll want to optimize for short cable paths by ensuring your overhead infrastructure, rack local cabling, and device orientations align. Because our racks have dense switch-to-server fiber cabling in each rack, we buy switches that have their ports oriented to the back of the rack (these are called reverse airflow switches because they exhaust air on the side with the network ports). </span></p><p><span>This allows us to align the cable trays such that all cabling happens on one side of the rack and there’s no zig-zagging of cables between the front and back of the rack.</span></p><div><p><img alt="A ladder rack and fibre cable tray allow routing cables to racks from above" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F3452ffbc-38b7-4b38-bf21-b94fdd9c7afb%2F4710_fiber_tray_and_top_rack.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D3da072e52b6e59bd5ec4187bc7eeb570782925a7102878d328d18e1e7af29d27%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>A ladder rack and fibre cable tray allow routing cables to racks from above</p></div><p><span>So you’ve got the space, signed up ISPs, ordered the hardware, got the racks, and a pretty good picture on how to lay it all out. But it’s still a pretty expensive lego set sitting in the loading bay of a data center. To assemble it you now need to leverage the most versatile programming tool ever devised in the history of mankind … Microsoft Excel.</span></p><p><a href="https://blog.railway.com/p/data-center-build-part-one#the-rack-and-stack"><h2><span>The rack and stack</span></h2></a></p><p><span>Let’s first step back and publish a disclaimer: neat and organized cabling requires a lot of practice; we tried it ourselves first - with… </span><span>mixed…</span><span> results. </span></p><div><p><img alt="Our DIY attempts at cabling to get the first server online vs. what our installation partner put together" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F47d0feac-bdeb-489f-a20b-3255f7704169%2Frailway-structured-cabling-services.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Dda26b095aa1a2a9c47cb8032dba4c1bab8d3072962a9c3f8749838942bc755dc%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>Our DIY attempts at cabling to get the first server online vs. what our installation partner put together</p></div><p><span>To install it properly, we bring in professionals, but the professionals need to know what to install. A comprehensive documentation pack is essential. A cabling matrix and rack elevation are common documents that communicate to contractors how to rack and wire-up servers.</span></p><p><span>A cabling matrix describes the termination of each cable, specifying the device position and port for each side of the connection, along with the specification of the cable itself (type of fiber, length, etc). The rack elevation is a visual representation of the rack itself, showing the position and orientation of each device.</span></p><div><p><img alt="The cabling matrix for our first install - 300+ cables all manually entered and cross-checked" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F2ae44065-956d-449c-97b1-7061ec833ab6%2FCleanShot_2025-01-15_at_23.19.412x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3Df9d5ce5194b7a48093fecfd0b203851ce2c8b57b6b6a8d52785a37fa0f2769e4%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>The cabling matrix for our first install - 300+ cables all manually entered and cross-checked</p></div><p><span>The documentation exercise can be intense, each of our install phases involved 60+ devices, 300+ discrete cables, and dozens of little details. This was all  handcrafted into written specifications and spreadsheets we used as a basis for the installation and commissioning. From the materials being on site to getting everything installed takes us about 6-14 days.</span></p><div><p><img alt="We have now built internal tooling to automate generating build specifications" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F32df0987-356a-482b-a9e7-69e8f9bd13cd%2FCleanShot_2025-01-15_at_23.25.012x.png%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D452c6f228f5340826c5c9748dd472c11fff266bd5d849ded4e6c78f8e387423c%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>We have now built internal tooling to automate generating build specifications</p></div><p><span>This all seems very far removed from software, DevOps, or what you’d typically think of as “infrastructure,” and that is very true — building a datacenter cage is probably closer to building a house than to deploying a Terraform stack. </span></p><p><span>To compound this, every datacenter facility, contractor and  vendor will do things slightly differently, even within the same organization. The operational aspect requires you to stay on your toes and be extremely detail-oriented. </span></p><p><span>Some what-the-duck moments we’ve had thus far:</span></p><ul><li><span>Contractor: “We need longer power cables” - the PDUs at that site were upside down because the power came in from the floor, so our socket numbering was reversed in the plan</span></li><li><span>Phonecall from Amsterdam: “There’s no demarcation point at the site?” - a specific facility installs external fibre links direct to a box in one of our racks rather than via a dedicated demarcation point overhead</span></li><li><span>Railway Discord quote: “Why are the phases wired so weirdly on this PDU?” - the facility was wired differently to our other sites and the power sockets were wired phase-to-neutral vs. phase-to-phase (WYE vs Delta circuits for you EE’s)</span></li><li><span>Contractor: “Your data cables are too short” - the contractor didn’t realize the network gear was reverse-airflow and tried to mount things the wrong way around</span></li><li><span>Us raising a support ticket: “There’s no link coming up on this cable” - the fiber was wired in the wrong polarity; we learnt what “rolling fibre cables” was that day… it’s when they rip out the plugs from the </span><a href="https://www.fs.com/uk/blog/lc-fiber-optics-a-comprehensive-guide-2684.html" target="_blank" rel="noreferrer noopener"><span>LC connector</span></a><span> and swap them around</span></li><li><span>Railway Discord quote: “I brought a rubber mallet from HomeDepot today” - a batch of nearly 24 PDUs from one vendor were delivered with faulty sockets that didn’t properly engage with the power plugs, even with </span><span>appropriate</span><span> extreme mechanical force being applied</span></li></ul><p><span>But from this point - the hardware is in place the task begins to feel more familiar; we’re now needing to do some BGP, install some OS’es, setup monitoring and bring everything up.</span></p><div><p><img alt="The completed cage ready for configuration" sizes="100vw" srcset="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=640&amp;q=75 640w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=750&amp;q=75 750w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=828&amp;q=75 828w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1080&amp;q=75 1080w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1200&amp;q=75 1200w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=1920&amp;q=75 1920w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=2048&amp;q=75 2048w, https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75 3840w" src="https://blog.railway.com/_next/image?url=https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Fa63b5cbc-d4d5-4113-9555-0919a5dd0f1f%2F7433fd40-15de-4959-b37a-839c4d39f83e%2Ffinished.jpeg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45FSPPWI6X%252F20250117%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20250117T233000Z%26X-Amz-Expires%3D3600%26X-Amz-Signature%3D08cd10591e1b57b4e105c460317bbd53e6d215e2bd5da2bcc23e9f5c71a75cd8%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" loading="lazy"></p><p>The completed cage ready for configuration</p></div><p><a href="https://blog.railway.com/p/data-center-build-part-one#pedal-on-metal"><h2><span>Pedal on Metal</span></h2></a></p><p><span>The installed cage is but a blank canvas, the network devices need configuring, router config needs writing, RIR (regional internet registry) records need updating, and we must interact with the likes of </span><a href="https://www.dmtf.org/standards/redfish" target="_blank" rel="noreferrer noopener"><span>Redfish APIs</span></a><span> (HTTP APIs to dedicated controllers on server motherboards and PDUs) and PXE (a protocol to boot servers over the network) to get everything up and running. </span></p><p><span>We've also not discussed how networking works. Our design uses </span><a href="https://frrouting.org/" target="_blank" rel="noreferrer noopener"><span>FRR</span></a><span> and whitebox network switches running </span><a href="https://sonicfoundation.dev/" target="_blank" rel="noreferrer noopener"><span>SONiC</span></a><span> to build a L3-only software-driven network that deeply integrates with our control plane. </span></p><p><span>We’ve regaled you with tales from the frontline … but any more and you’d be here all day. </span></p><p><span>In a future post, we’ll discuss how we go from a bunch of servers in a room to a functional Railway zone. In the space of the last few months we’ve built two new software tools, </span><span>Railyard</span><span> and </span><span>MetalCP</span><span>, to enable a button click experience from designing a new cage, tracing and visualizing the cabling, to installing OSes on servers and getting them on the internet.</span></p><p><span>Until then, if any of this excites you, check out our </span><a href="https://railway.com/careers/infra-platform" target="_blank" rel="noreferrer noopener"><span>open Infrastructure Engineering roles</span></a><span> and reach out if they catch your interest.</span></p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Compile C to Not Gates (123 pts)]]></title>
            <link>https://github.com/tomhea/c2fj</link>
            <guid>42742350</guid>
            <pubDate>Fri, 17 Jan 2025 19:36:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tomhea/c2fj">https://github.com/tomhea/c2fj</a>, See on <a href="https://news.ycombinator.com/item?id=42742350">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a href="https://github.com/tomhea/c2fj/blob/main/LICENSE"><img src="https://camo.githubusercontent.com/374f407140f12d3231e2372cd262efe797423d76ceb5767606dfca26ff6adc2f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f746f6d6865612f6332666a" alt="GitHub" data-canonical-src="https://img.shields.io/github/license/tomhea/c2fj"></a>
<a href="https://esolangs.org/wiki/FlipJump" rel="nofollow"><img src="https://camo.githubusercontent.com/36d3a6fb034708ad2e1e392abd9ac46c902bc03cf307aff7ab388d3364512a92/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f646f776e5f636f6c6f723d72656426646f776e5f6d6573736167653d646f776e2675705f6d6573736167653d75702675726c3d687474707325334125324625324665736f6c616e67732e6f726725324677696b69253246466c69704a756d70" alt="Website" data-canonical-src="https://img.shields.io/website?down_color=red&amp;down_message=down&amp;up_message=up&amp;url=https%3A%2F%2Fesolangs.org%2Fwiki%2FFlipJump"></a>
<a href="https://pypi.org/project/c2fj/" rel="nofollow"><img src="https://camo.githubusercontent.com/e5304c16795d7b9fc0409a1ae042cfb36829707a615ef4e026b91d2aa1361ef2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6332666a" alt="PyPI - Version" data-canonical-src="https://img.shields.io/pypi/v/c2fj"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">c2fj</h2><a id="user-content-c2fj" aria-label="Permalink: c2fj" href="#c2fj"></a></p>
<p dir="auto">Compiling C --&gt; RiscV --&gt; <a href="https://github.com/tomhea/flip-jump">Flipjump</a> --&gt; .fjm</p>
<p dir="auto">This compiler is a proof that any program can be compiled into a bunch of <code>NOT</code> operations. Read more about FlipJump: <a href="https://github.com/tomhea/flip-jump">Github</a>, <a href="https://esolangs.org/wiki/FlipJump" rel="nofollow">esolangs</a>.</p>
<p dir="auto">An example program, <a href="https://github.com/tomhea/c2fj/blob/main/tests/programs/primes/main.c">primes/main.c</a>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="int main() {
    printf(&quot;Calculate primes up to: &quot;);
    int max_number;
    scanf(&quot;%d&quot;, &amp;max_number);
    
    ...
    
    for (int p = 3; p <= max_number; p += 2) {
        if (non_prime[p] == false) {
            for (int i = p*p; i <= max_number; i += p) {
                non_prime[i] = true;
            }
            printf(&quot;%d\n&quot;, p);
        }
    }
    
    return 0;
}"><pre><span>int</span> <span>main</span>() {
    <span>printf</span>(<span>"Calculate primes up to: "</span>);
    <span>int</span> <span>max_number</span>;
    <span>scanf</span>(<span>"%d"</span>, <span>&amp;</span><span>max_number</span>);
    
    ...
    
    <span>for</span> (<span>int</span> <span>p</span> <span>=</span> <span>3</span>; <span>p</span> &lt;= <span>max_number</span>; <span>p</span> <span>+=</span> <span>2</span>) {
        <span>if</span> (<span>non_prime</span>[<span>p</span>] <span>==</span> false) {
            <span>for</span> (<span>int</span> <span>i</span> <span>=</span> <span>p</span><span>*</span><span>p</span>; <span>i</span> &lt;= <span>max_number</span>; <span>i</span> <span>+=</span> <span>p</span>) {
                <span>non_prime</span>[<span>i</span>] <span>=</span> true;
            }
            <span>printf</span>(<span>"%d\n"</span>, <span>p</span>);
        }
    }
    
    <span>return</span> <span>0</span>;
}</pre></div>
<p dir="auto">Compiled into this:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/tomhea/c2fj/blob/main/res/compiled_elf.png"><img src="https://github.com/tomhea/c2fj/raw/main/res/compiled_elf.png" alt="img.png"></a></p>
<p dir="auto">Which was compiled into this:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/tomhea/c2fj/blob/main/res/compiled_fj_files.png"><img src="https://github.com/tomhea/c2fj/raw/main/res/compiled_fj_files.png" alt="img.png"></a></p>
<p dir="auto">Which in turn compiled into:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/tomhea/c2fj/blob/main/res/compiled_fjm.png"><img src="https://github.com/tomhea/c2fj/raw/main/res/compiled_fjm.png" alt="img.png"></a></p>
<p dir="auto">Now, run it (Remember, these are flipjump ops that are running):</p>
<div data-snippet-clipboard-copy-content="Calculate primes up to: 20
2
3
5
7
11
13
17
19
Program exited with exit code 0x0."><pre lang="text"><code>Calculate primes up to: 20
2
3
5
7
11
13
17
19
Program exited with exit code 0x0.
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to install</h2><a id="user-content-how-to-install" aria-label="Permalink: How to install" href="#how-to-install"></a></p>
<div data-snippet-clipboard-copy-content=">>> pip install c2fj
>>> sudo apt install picolibc-riscv64-unknown-elf"><pre><code>&gt;&gt;&gt; pip install c2fj
&gt;&gt;&gt; sudo apt install picolibc-riscv64-unknown-elf
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to use</h2><a id="user-content-how-to-use" aria-label="Permalink: How to use" href="#how-to-use"></a></p>
<p dir="auto">Simply <code>python3 c2fj.py file.c</code> will compile your c file into an elf, into fj files, into fjm, then run it.</p>
<p dir="auto"><code>c2fj</code> supports the next flags:</p>
<ul dir="auto">
<li><code>--breakpoints</code> Place a fj-breakpoint at the start of the specified riscv addresses</li>
<li><code>--single-step</code> Place fj-breakpoints at the start of all riscv opcodes</li>
<li><code>--unify_fj</code> Unify the generated fj files into a single file</li>
<li><code>--finish-after</code> Stop the compilation at any step (before running, before creating fjm, etc.)</li>
<li><code>--build-dir</code> Save the builds in this directory</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">What if my project is more then a single c?</h2><a id="user-content-what-if-my-project-is-more-then-a-single-c" aria-label="Permalink: What if my project is more then a single c?" href="#what-if-my-project-is-more-then-a-single-c"></a></p>
<p dir="auto">We support specifying a <code>Makefile</code> path, instead of the c file!<br>
Your Makefile will have to rely on some constants that <code>c2fj</code> will fill:</p>
<div dir="auto" data-snippet-clipboard-copy-content="C2FJ_GCC_OPTIONS
C2FJ_LINKER_SCRIPT
C2FJ_SOURCES
C2FJ_INCLUDE_DIRS
ELF_OUT_PATH"><pre><span>C2FJ_GCC_OPTIONS</span>
<span>C2FJ_LINKER_SCRIPT</span>
<span>C2FJ_SOURCES</span>
<span>C2FJ_INCLUDE_DIRS</span>
<span>ELF_OUT_PATH</span></pre></div>
<p dir="auto">An example Makefile:</p>
<div dir="auto" data-snippet-clipboard-copy-content="GCC := riscv64-unknown-elf-gcc
GCC_FLAGS := -O3

SOURCES := $(C2FJ_SOURCES) main.c globals.c calculate_int.c
OBJECTS := $(SOURCES:.c=.o)

all: |
	$(GCC) $(C2FJ_GCC_OPTIONS) $(GCC_FLAGS) $(SOURCES) -I $(C2FJ_INCLUDE_DIRS) -T $(C2FJ_LINKER_SCRIPT) -o $(ELF_OUT_PATH)

clean:
	rm -r build 2>/dev/null || true

.PHONY: clean all
"><pre><span>GCC</span> := riscv64-unknown-elf-gcc
<span>GCC_FLAGS</span> := -O3

<span>SOURCES</span> := <span>$(<span>C2FJ_SOURCES</span>)</span> main.c globals.c calculate_int.c
<span>OBJECTS</span> := <span>$(<span>SOURCES:.c=.o</span>)</span>

<span>all</span>: |
	<span>$(<span>GCC</span>)</span> <span>$(<span>C2FJ_GCC_OPTIONS</span>)</span> <span>$(<span>GCC_FLAGS</span>)</span> <span>$(<span>SOURCES</span>)</span> -I <span>$(<span>C2FJ_INCLUDE_DIRS</span>)</span> -T <span>$(<span>C2FJ_LINKER_SCRIPT</span>)</span> -o <span>$(<span>ELF_OUT_PATH</span>)</span>

<span>clean</span>:
	rm -r build <span>2&gt;</span>/dev/null <span>||</span> <span>true</span>

<span>.PHONY</span>: clean all
</pre></div>
<p dir="auto">You can also specify your own linker script. It should contain the following:</p>
<ul dir="auto">
<li><code>_stack_end</code> (just after the end of the stack)</li>
<li><code>_sdata</code> (start of the data section)</li>
<li><code>__heap_start</code> (start of the heap)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How Does It Work?</h2><a id="user-content-how-does-it-work" aria-label="Permalink: How Does It Work?" href="#how-does-it-work"></a></p>
<p dir="auto">First your C files are being compile to a RiscV elf.<br>
The compilation is done with <a href="https://github.com/picolibc/picolibc">picolibc</a>, and the project provides it any of the function implementation needed, in order for it to support the next phase of fj-compilation.</p>
<p dir="auto">For example, look at <code>exit</code> (<a href="https://github.com/tomhea/c2fj/blob/main/c2fj/compilation_files/c2fj_init.c">c2fj_init.c</a>):</p>
<div dir="auto" data-snippet-clipboard-copy-content="void exit(int status) {
    asm volatile (&quot;jal %0, .+10&quot; ::&quot;r&quot;(status):&quot;memory&quot;);
    __builtin_unreachable();
}"><pre><span>void</span> <span>exit</span>(<span>int</span> <span>status</span>) {
    asm <span>volatile</span> (<span>"jal %0, .+10"</span> ::<span>"r"</span>(<span>status</span>):<span>"memory"</span>);
    <span>__builtin_unreachable</span>();
}</pre></div>
<p dir="auto">It uses jal with bad offset, thus will be parsed here as: (<a href="https://github.com/tomhea/c2fj/blob/main/c2fj/riscv_instructions.py">riscv_instructions.py</a>)</p>
<div dir="auto" data-snippet-clipboard-copy-content="elif imm == JAL_EXIT_IMMEDIATE:
    return f'    .syscall.exit {register_name(rd)}\n'"><pre><span>elif</span> <span>imm</span> <span>==</span> <span>JAL_EXIT_IMMEDIATE</span>:
    <span>return</span> <span>f'    .syscall.exit <span><span>{</span><span>register_name</span>(<span>rd</span>)<span>}</span></span><span>\n</span>'</span></pre></div>
<p dir="auto">Thus, will get to the flipjump implementation of: (<a href="https://github.com/tomhea/c2fj/blob/main/c2fj/compilation_files/riscvlib.fj">riscvlib.fj</a>)</p>
<div dir="auto" data-snippet-clipboard-copy-content="def exit src_register {
    stl.output &quot;Program exited with exit code &quot;
    hex.print_uint 2, src_register, 1, 1
    stl.output &quot;.\n&quot;
    stl.loop
}"><pre><span>def</span> <span>exit</span> <span>src_register</span> {
    <span>stl</span>.<span>output</span> <span>"Program exited with exit code "</span>
    <span>hex</span>.<span>print_uint</span> <span>2</span>, <span>src_register</span>, <span>1</span>, <span>1</span>
    <span>stl</span>.<span>output</span> <span>".<span>\n</span>"</span>
    <span>stl</span>.<span>loop</span>
}</pre></div>
<p dir="auto">You can think of it like this: The C-&gt;RiscV compilation compiles the syscalls to a special (invalid) RiscV op, that gets parsed and further compiled into the fj implementation of the "requested syscall".
The supported syscalls can be found in <a href="https://github.com/tomhea/c2fj/blob/main/c2fj/compilation_files/c2fj_init.c">c2fj_init.c</a>, and they contain <code>_getc</code>, <code>_putc</code>, <code>exit</code>, <code>sbrk</code>.</p>
<p dir="auto">Every other opcode (Let's follow <code>addi x10, x11, 7</code> for example), will be compiled into itself.</p>
<p dir="auto">The RiscV -&gt; FlipJump part of the compilation parses the compiled elf, and matches each opcode with the appropriate flipjump macro. For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="elif opcode == RV_ALU_IMM:
    if funct3 == RV_ADDI:
        ops_file.write(i_type('addi', full_op))"><pre><span>elif</span> <span>opcode</span> <span>==</span> <span>RV_ALU_IMM</span>:
    <span>if</span> <span>funct3</span> <span>==</span> <span>RV_ADDI</span>:
        <span>ops_file</span>.<span>write</span>(<span>i_type</span>(<span>'addi'</span>, <span>full_op</span>))</pre></div>
<p dir="auto">Then the <code>riscv.addi</code> macro is being used. The riscv ops macros are space-optimized. They are so much optimized, that each takes <code>30-40</code> fj-ops in space.<br>
That is by design. The space optimization allows this project to handle very large c code bases, and still being able to compile it without any problem.
That means that the compilation time doesn't really depend on the size of your codebase.</p>
<p dir="auto">The way it works, is that each opcode is implemented once in the <code>riscv.start</code> macro.
For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="do_add:
    hex.add .HLEN, .rs1, .rs2
    stl.fret .ret"><pre><span>do_add</span>:
    <span>hex</span>.<span>add</span> .<span>HLEN</span>, .<span>rs1</span>, .<span>rs2</span>
    <span>stl</span>.<span>fret</span> .<span>ret</span></pre></div>
<p dir="auto">Note how <code>addi</code> is implemented:</p>
<div dir="auto" data-snippet-clipboard-copy-content="def addi mov_from_rs1, mov_to_rs1, imm < .do_add {
    .reg_imm_fast_op mov_from_rs1, mov_to_rs1, imm, .do_add
}

// Sets rs1 according to the given &quot;fcall_label&quot;, rs2 to the given imm,
//  fcalls &quot;do_op&quot;, then moves the result to the appropriate dst reg.
def reg_imm_fast_op mov_from_dest, mov_to_rs1, imm, do_op @ table, xor_imm_to_rs2, end < .ret, .zero_rs2, .rs2 {
    wflip .ret+w, table+dw, .ret

    pad 16
  table:
    .ret+dbit+2; do_op          // 4th
    .ret+dbit+1; mov_to_rs1     // 1st
    .ret+dbit+1; xor_imm_to_rs2 // 3rd
    .ret+dbit+0; .zero_rs2      // 2nd
    .ret+dbit+0; mov_from_dest  // 5th
    wflip .ret+w, table+5*dw, end   // 6th

  xor_imm_to_rs2:
    .__xor_by_hex_const .HLEN, .rs2, imm
    stl.fret .ret

  end:
}

def moves_to_from_middle_regs {
  zero_rs2:
    hex.zero .HLEN, .rs2
    stl.fret .ret
  ...
}"><pre><span>def</span> <span>addi</span> <span>mov_from_rs1</span>, <span>mov_to_rs1</span>, <span>imm</span> <span>&lt;</span> .<span>do_add</span> {
    .<span>reg_imm_fast_op</span> <span>mov_from_rs1</span>, <span>mov_to_rs1</span>, <span>imm</span>, .<span>do_add</span>
}

<span>//</span> <span>Sets</span> <span>rs1</span> <span>according</span> <span>to</span> <span>the</span> <span>given</span> <span>"fcall_label"</span>, <span>rs2</span> <span>to</span> <span>the</span> <span>given</span> <span>imm</span>,
<span>//</span>  <span>fcalls</span> <span>"do_op"</span>, <span>then</span> <span>moves</span> <span>the</span> <span>result</span> <span>to</span> <span>the</span> <span>appropriate</span> <span>dst</span> <span>reg</span>.
<span>def</span> <span>reg_imm_fast_op</span> <span>mov_from_dest</span>, <span>mov_to_rs1</span>, <span>imm</span>, <span>do_op</span> @ <span>table</span>, <span>xor_imm_to_rs2</span>, <span>end</span> <span>&lt;</span> .<span>ret</span>, .<span>zero_rs2</span>, .<span>rs2</span> {
    <span>wflip</span> .<span>ret</span><span>+</span><span>w</span>, <span>table</span><span>+</span><span>dw</span>, .<span>ret</span>

    <span>pad</span> <span>16</span>
  <span>table</span>:
    .<span>ret</span><span>+</span><span>dbit</span><span>+</span><span>2</span>; <span>do_op</span>          <span>//</span> <span>4</span><span>th</span>
    .<span>ret</span><span>+</span><span>dbit</span><span>+</span><span>1</span>; <span>mov_to_rs1</span>     <span>//</span> <span>1</span><span>st</span>
    .<span>ret</span><span>+</span><span>dbit</span><span>+</span><span>1</span>; <span>xor_imm_to_rs2</span> <span>//</span> <span>3</span><span>rd</span>
    .<span>ret</span><span>+</span><span>dbit</span><span>+</span><span>0</span>; .<span>zero_rs2</span>      <span>//</span> <span>2</span><span>nd</span>
    .<span>ret</span><span>+</span><span>dbit</span><span>+</span><span>0</span>; <span>mov_from_dest</span>  <span>//</span> <span>5</span><span>th</span>
    <span>wflip</span> .<span>ret</span><span>+</span><span>w</span>, <span>table</span><span>+</span><span>5</span><span>*</span><span>dw</span>, <span>end</span>   <span>//</span> <span>6</span><span>th</span>

  <span>xor_imm_to_rs2</span>:
    .<span>__xor_by_hex_const</span> .<span>HLEN</span>,<span></span> .<span>rs2</span>, <span>imm</span>
    <span>stl</span>.<span>fret</span> .<span>ret</span>

  <span>end</span>:
}

<span>def</span> <span>moves_to_from_middle_regs</span> {
  <span>zero_rs2</span>:
    <span>hex</span>.<span>zero</span> .<span>HLEN</span>, .<span>rs2</span>
    <span>stl</span>.<span>fret</span> .<span>ret</span>
  ...
}</pre></div>
<p dir="auto">Most of the space goes on the two <code>wflip</code>s (total <code>@-4</code> ops).<br>
The line with <code>1st</code> is done first, <code>2nd</code> goes second, and so on. That's a compact way of doing multiple <code>fcall</code>s with a single pair of <code>wflip</code>s.</p>
<p dir="auto">So as you see, the macro gets a <code>mov_to_rs1</code> and <code>mov_from_dest</code> macros. For the example of the <code>addi x10, x11, 7</code>, the next macro names will be specified:</p>
<div dir="auto" data-snippet-clipboard-copy-content="ns riscv {
  mov_rs1_to_x10:
    hex.mov .HLEN, .regs.x10, .rs1
    stl.fret .ret

  mov_x11_to_rs1:
    hex.mov .HLEN, .rs1, .regs.x11
    stl.fret .ret
}"><pre><span>ns</span> <span>riscv</span> {
  <span>mov_rs1_to_x10</span>:
    <span>hex</span>.<span>mov</span> .<span>HLEN</span>, .<span>regs</span>.<span>x10</span>, .<span>rs1</span>
    <span>stl</span>.<span>fret</span> .<span>ret</span>

  <span>mov_x11_to_rs1</span>:
    <span>hex</span>.<span>mov</span> .<span>HLEN</span>, .<span>rs1</span>, .<span>regs</span>.<span>x11</span>
    <span>stl</span>.<span>fret</span> .<span>ret</span>
}</pre></div>
<p dir="auto">And the <code>addi x10, x11, 7</code> opcode will be compiled into <code>riscv.addi mov_rs1_to_x10, mov_x11_to_rs1, 7</code>.</p>
<p dir="auto">So when the <code>1st</code> line is executed, the <code>mov_x11_to_rs1</code> code will be executed, and it will return to the start of the <code>2nd</code> line.<br>
Note that most of the macros use the global fj variables <code>rs1, rs2, rd</code> (part of the <code>riscv</code> namespace).<br>
Then, in the second line <code>rs2</code> is being zeroed.<br>
The third line xors the given immediate (<code>7</code>) to <code>rs2</code>, and the forth line does the actual addition (by jumping to <code>do_op</code> which is <code>do_add</code> in our case).<br>
The fifth line will move the result (which <code>do_add</code> puts in <code>rs1</code>) to <code>x10</code>, using the given <code>mov_rs1_to_x10</code> argument.<br>
Then, the macro will finish.</p>
<p dir="auto">If you want to understand it better, feel free to <em>jump</em> into the FlipJump and read how things work in the bits and bytes level.</p>
<p dir="auto">The next phase uses the <code>flipjump</code> python package to compile the given <code>.fj</code> files into the compiles <code>.fjm</code> file (which is segments of data, and by data I mean bits of flips and jumps).<br>
The last phase, running the <code>.fjm</code> file, uses the <code>flipjump</code> package to interpret the <code>.fjm</code> file, and allows to debug it too.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Jumps Tables, Memory?</h4><a id="user-content-jumps-tables-memory" aria-label="Permalink: Jumps Tables, Memory?" href="#jumps-tables-memory"></a></p>
<p dir="auto">In the previous section I talked about the <code>ops.fj</code> file that was created in the compilation process, but there are two more files that gets created in that process too.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto"><code>mem.fj</code>:</h5><a id="user-content-memfj" aria-label="Permalink: mem.fj:" href="#memfj"></a></p>
<p dir="auto">The entire loadable memory of the compiled elf is being loaded into flipjump using this file. It contains all the loadable bytes of the memory in fj <code>hex</code> variables.<br>
There are no memory restrictions on it, thus the running program can read/write/execute from it freely.<br>
Note that the riscv opcodes are part of the loadable memory too, and you can modify that part of memory too, and it will change, but the compiled riscv-ops themselves (in <code>ops.fj</code>) won't change.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto"><code>jmp.fj</code>:</h5><a id="user-content-jmpfj" aria-label="Permalink: jmp.fj:" href="#jmpfj"></a></p>
<p dir="auto">That's a jump table to every runnable riscv address. That helps us in jumping ops, because the macro addresses of the ops in the <code>ops.fj</code> can't be predicted easily.<br>
Think of how can you jump to address 0x144. The label <code>riscv.ADDR_00000144</code> in <code>ops.fj</code> is not in some fixed place, or something that related to <code>0x144</code>. Yet, the current;y running opcode ant to jump to address <code>0x144</code>. Then what do we do?<br>
Use a jump table! It looks something like:</p>
<div dir="auto" data-snippet-clipboard-copy-content="segment .JMP + 0x00000000/4*dw
;.ADDR_00000000
;.ADDR_00000004
...
;.ADDR_00000144"><pre><span>segment</span> .<span>JMP</span> <span>+</span> <span>0x00000000</span><span>/</span><span>4</span><span>*</span><span>dw</span>
;.<span>ADDR_00000000</span>
;.<span>ADDR_00000004</span>
...
;.<span>ADDR_00000144</span></pre></div>
<p dir="auto">The <code>0x144</code> address is at fixed offset from the global <code>.JMP</code> address, thus jumping to riscv memory address <code>0x144</code> became as easy as jumping to fj-address <code>.JMP + 0x144*dw</code> (as <code>dw</code> is the length of one fj opcode, in bits).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tests</h2><a id="user-content-tests" aria-label="Permalink: Tests" href="#tests"></a></p>
<p dir="auto">Simply run <code>pytest</code> to run the tests.
This package is tested on linux and python 3.13.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Related projects</h2><a id="user-content-related-projects" aria-label="Permalink: Related projects" href="#related-projects"></a></p>
<ul dir="auto">
<li><a href="https://github.com/tomhea/bf2fj">bf2fj</a> - Brainfuck to FlipJump compiler.</li>
<li><a href="https://github.com/tomhea/flip-jump">FlipJump</a> - The flipjump language macro assembler, standard library, and interpreter.</li>
<li><a href="https://github.com/tomhea/fji-cpp">fji-cpp</a> - Faster C++ interpreter for FlipJump.</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Branchless UTF-8 Encoding (142 pts)]]></title>
            <link>https://cceckman.com/writing/branchless-utf8-encoding/</link>
            <guid>42742184</guid>
            <pubDate>Fri, 17 Jan 2025 19:20:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cceckman.com/writing/branchless-utf8-encoding/">https://cceckman.com/writing/branchless-utf8-encoding/</a>, See on <a href="https://news.ycombinator.com/item?id=42742184">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Can you encode UTF-8 without branches?</p>
<p><a href="https://github.com/cceckman/unicode-branchless/blob/main/src/lib.rs" rel="external" target="_blank">Yes</a>.</p>
<h2 id="the-question">The question</h2>


<p>In a <a target="_blank" href="https://www.recurse.com/scout/click?t=8238c6d9149cbd0865752e535795d509">Recurse</a> chat, <a href="https://github.com/ngoldbaum" rel="external" target="_blank">Nathan Goldbaum</a> asked:</p>
<blockquote>
<p>I know how to decode UTF-8 using bitmath and some LUTs (see <a href="https://github.com/skeeto/branchless-utf8" rel="external" target="_blank">https://github.com/skeeto/branchless-utf8</a>), but if I want to to go from a codepoint to UTF-8, is there a way to do it without branches?</p>
<p>To start with, is there a way to write this C function, which returns the number of bytes needed to store the UTF-8 bytes for the codepoint without any branches? Or would I need a huge look-up-table?</p>
</blockquote>
<details>
  <summary>The C function</summary>
<blockquote>
<div><pre tabindex="0"><code data-lang="c"><span><span><span>int</span>
</span></span><span><span><span>num_utf8_bytes_for_codepoint</span><span>(</span><span>uint32_t</span> <span>code</span><span>)</span>
</span></span><span><span><span>{</span>
</span></span><span><span>    <span>if</span> <span>(</span><span>code</span> <span>&lt;=</span> <span>0x7F</span><span>)</span> <span>{</span>
</span></span><span><span>        <span>return</span> <span>1</span><span>;</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span>    <span>else</span> <span>if</span> <span>(</span><span>code</span> <span>&lt;=</span> <span>0x07FF</span><span>)</span> <span>{</span>
</span></span><span><span>        <span>return</span> <span>2</span><span>;</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span>    <span>else</span> <span>if</span> <span>(</span><span>code</span> <span>&lt;=</span> <span>0xFFFF</span><span>)</span> <span>{</span>
</span></span><span><span>        <span>if</span> <span>((</span><span>code</span> <span>&gt;=</span> <span>0xD800</span><span>)</span> <span>&amp;&amp;</span> <span>(</span><span>code</span> <span>&lt;=</span> <span>0xDFFF</span><span>))</span> <span>{</span>
</span></span><span><span>            <span>// surrogates are invalid UCS4 code points
</span></span></span><span><span><span></span>            <span>return</span> <span>-</span><span>1</span><span>;</span>
</span></span><span><span>        <span>}</span>
</span></span><span><span>        <span>return</span> <span>3</span><span>;</span>
</span></span><span><span>        <span>}</span>
</span></span><span><span>    <span>else</span> <span>if</span> <span>(</span><span>code</span> <span>&lt;=</span> <span>0x10FFFF</span><span>)</span> <span>{</span>
</span></span><span><span>        <span>return</span> <span>4</span><span>;</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span>    <span>else</span> <span>{</span>
</span></span><span><span>        <span>// codepoint is outside the valid unicode range
</span></span></span><span><span><span></span>        <span>return</span> <span>-</span><span>1</span><span>;</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div></blockquote>
</details>
<p>I pondered this but didn’t immediately see a way to do it without a huge (2^32) lookup table.</p>
<h2 id="the-almost-answer">The almost answer</h2>
<p>Until <a href="http://lmb.io/" rel="external" target="_blank">Lorenz</a> pointed out:</p>
<blockquote>
<p>Very handwavy idea: encode a 32 bit code point into utf8 but store the result in a 32bit word again. Count the number of leading / trailing zeroes to figure out how many bytes are necessary. Write four bytes into the output buffer but only advance your position in the output by the number of bytes you really need.</p>
</blockquote>
<p>Aha!</p>
<p>The number of leading zeros will range from 12 to 32<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup> –
a very reasonable size for a lookup table.
From there, we could look up other parameters by length (no more than 4).</p>
<p>I fired off a draft into the chat, then came back to test (and fix) it in the evening.
When I got the tests passing, it looked like this:</p>
<div><pre tabindex="0"><code data-lang="rust"><span><span><span>/// Return the number of bytes required to UTF-8 encode a codepoint.
</span></span></span><span><span><span>/// Returns 0 for surrogates and out-of-bounds values.
</span></span></span><span><span><span></span><span>const</span><span> </span><span>fn</span> <span>utf8_bytes_for_codepoint</span><span>(</span><span>codepoint</span>: <span>u32</span><span>)</span><span> </span>-&gt; <span>usize</span> <span>{</span><span>
</span></span></span><span><span><span>    </span><span>let</span><span> </span><span>len</span><span> </span><span>=</span><span> </span><span>LEN</span><span>[</span><span>codepoint</span><span>.</span><span>leading_zeros</span><span>()</span><span> </span><span>as</span><span> </span><span>usize</span><span>]</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>    </span><span>// Handle surrogates via bit-twiddling.
</span></span></span><span><span><span></span><span>    </span><span>// Rust guarantees true == 1 and false == 0:
</span></span></span><span><span><span></span><span>    </span><span>let</span><span> </span><span>surrogate_bit</span><span> </span><span>=</span><span> </span><span>((</span><span>codepoint</span><span> </span><span>&gt;=</span><span> </span><span>0xD800</span><span>)</span><span> </span><span>&amp;&amp;</span><span> </span><span>(</span><span>codepoint</span><span> </span><span>&lt;=</span><span> </span><span>0xDFFF</span><span>))</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>// Extend that one bit into three, and use its inverse as a mask for length
</span></span></span><span><span><span></span><span>    </span><span>let</span><span> </span><span>surrogate_mask</span><span> </span><span>=</span><span> </span><span>surrogate_bit</span><span> </span><span>&lt;&lt;</span><span> </span><span>2</span><span> </span><span>|</span><span> </span><span>surrogate_bit</span><span> </span><span>&lt;&lt;</span><span> </span><span>1</span><span> </span><span>|</span><span> </span><span>surrogate_bit</span><span>;</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>    </span><span>// Handle exceeded values via bit-twiddling.
</span></span></span><span><span><span></span><span>    </span><span>// Unfortunately, these don't align precisely with a leading-zero boundary;
</span></span></span><span><span><span></span><span>    </span><span>// the largest codepoint is U+10FFFF.
</span></span></span><span><span><span></span><span>    </span><span>let</span><span> </span><span>exceeded_bit</span><span> </span><span>=</span><span> </span><span>(</span><span>codepoint</span><span> </span><span>&gt;</span><span> </span><span>0x10_FFFF</span><span>)</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>let</span><span> </span><span>exceeded_mask</span><span> </span><span>=</span><span> </span><span>exceeded_bit</span><span> </span><span>&lt;&lt;</span><span> </span><span>2</span><span> </span><span>|</span><span> </span><span>exceeded_bit</span><span> </span><span>&lt;&lt;</span><span> </span><span>1</span><span> </span><span>|</span><span> </span><span>exceeded_bit</span><span>;</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>    </span><span>len</span><span> </span><span>&amp;</span><span> </span><span>!</span><span>surrogate_mask</span><span> </span><span>&amp;</span><span> </span><span>!</span><span>exceeded_mask</span><span>
</span></span></span><span><span><span></span><span>}</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span></span><span>/// Length, based on the number of leading zeros.
</span></span></span><span><span><span></span><span>const</span><span> </span><span>LEN</span>: <span>[</span><span>u8</span><span>;</span><span> </span><span>33</span><span>]</span><span> </span><span>=</span><span> </span><span>[</span><span>
</span></span></span><span><span><span>    </span><span>// 0-10 leading zeros: not valid
</span></span></span><span><span><span></span><span>    </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span>
</span></span></span><span><span><span>    </span><span>// 11-15 leading zeros: 4 bytes
</span></span></span><span><span><span></span><span>    </span><span>4</span><span>,</span><span> </span><span>4</span><span>,</span><span> </span><span>4</span><span>,</span><span> </span><span>4</span><span>,</span><span> </span><span>4</span><span>,</span><span>
</span></span></span><span><span><span>    </span><span>//16-20 leading zeros: 3 bytes
</span></span></span><span><span><span></span><span>    </span><span>3</span><span>,</span><span> </span><span>3</span><span>,</span><span> </span><span>3</span><span>,</span><span> </span><span>3</span><span>,</span><span> </span><span>3</span><span>,</span><span>
</span></span></span><span><span><span>    </span><span>// 21-24 leading zeros: 2 bytes
</span></span></span><span><span><span></span><span>    </span><span>2</span><span>,</span><span> </span><span>2</span><span>,</span><span> </span><span>2</span><span>,</span><span> </span><span>2</span><span>,</span><span>
</span></span></span><span><span><span>    </span><span>// 25-32 leading zeros: 1 byte
</span></span></span><span><span><span></span><span>    </span><span>1</span><span>,</span><span> </span><span>1</span><span>,</span><span> </span><span>1</span><span>,</span><span> </span><span>1</span><span>,</span><span> </span><span>1</span><span>,</span><span> </span><span>1</span><span>,</span><span> </span><span>1</span><span>,</span><span> </span><span>1</span><span>,</span><span>
</span></span></span><span><span><span></span><span>];</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span></span><span>/// Encode a UTF-8 codepoint.
</span></span></span><span><span><span>/// Returns a buffer and the number of valid bytes in the buffer.
</span></span></span><span><span><span>///
</span></span></span><span><span><span>/// To add this codepoint to a string, append all four bytes in order,
</span></span></span><span><span><span>/// and record that (usize) bytes were added to the string.
</span></span></span><span><span><span>///
</span></span></span><span><span><span>/// Returns a length of zero for invalid codepoints (surrogates and out-of-bounds values).
</span></span></span><span><span><span></span><span>pub</span><span> </span><span>fn</span> <span>branchless_utf8</span><span>(</span><span>codepoint</span>: <span>u32</span><span>)</span><span> </span>-&gt; <span>([</span><span>u8</span><span>;</span><span> </span><span>4</span><span>],</span><span> </span><span>usize</span><span>)</span><span> </span><span>{</span><span>
</span></span></span><span><span><span>    </span><span>let</span><span> </span><span>len</span><span> </span><span>=</span><span> </span><span>utf8_bytes_for_codepoint</span><span>(</span><span>codepoint</span><span>);</span><span>
</span></span></span><span><span><span>    </span><span>let</span><span> </span><span>buf</span><span> </span><span>=</span><span> </span><span>[</span><span>
</span></span></span><span><span><span>        </span><span>PREFIX</span><span>[</span><span>len</span><span>][</span><span>0</span><span>]</span><span> </span><span>|</span><span> </span><span>((</span><span>codepoint</span><span> </span><span>&gt;&gt;</span><span> </span><span>SHIFT</span><span>[</span><span>len</span><span>][</span><span>0</span><span>])</span><span> </span><span>&amp;</span><span> </span><span>MASK</span><span>[</span><span>len</span><span>][</span><span>0</span><span>]</span><span> </span><span>as</span><span> </span><span>u32</span><span>)</span><span> </span><span>as</span><span> </span><span>u8</span><span>,</span><span>
</span></span></span><span><span><span>        </span><span>PREFIX</span><span>[</span><span>len</span><span>][</span><span>1</span><span>]</span><span> </span><span>|</span><span> </span><span>((</span><span>codepoint</span><span> </span><span>&gt;&gt;</span><span> </span><span>SHIFT</span><span>[</span><span>len</span><span>][</span><span>1</span><span>])</span><span> </span><span>&amp;</span><span> </span><span>MASK</span><span>[</span><span>len</span><span>][</span><span>1</span><span>]</span><span> </span><span>as</span><span> </span><span>u32</span><span>)</span><span> </span><span>as</span><span> </span><span>u8</span><span>,</span><span>
</span></span></span><span><span><span>        </span><span>PREFIX</span><span>[</span><span>len</span><span>][</span><span>2</span><span>]</span><span> </span><span>|</span><span> </span><span>((</span><span>codepoint</span><span> </span><span>&gt;&gt;</span><span> </span><span>SHIFT</span><span>[</span><span>len</span><span>][</span><span>2</span><span>])</span><span> </span><span>&amp;</span><span> </span><span>MASK</span><span>[</span><span>len</span><span>][</span><span>2</span><span>]</span><span> </span><span>as</span><span> </span><span>u32</span><span>)</span><span> </span><span>as</span><span> </span><span>u8</span><span>,</span><span>
</span></span></span><span><span><span>        </span><span>PREFIX</span><span>[</span><span>len</span><span>][</span><span>3</span><span>]</span><span> </span><span>|</span><span> </span><span>((</span><span>codepoint</span><span> </span><span>&gt;&gt;</span><span> </span><span>SHIFT</span><span>[</span><span>len</span><span>][</span><span>3</span><span>])</span><span> </span><span>&amp;</span><span> </span><span>MASK</span><span>[</span><span>len</span><span>][</span><span>3</span><span>]</span><span> </span><span>as</span><span> </span><span>u32</span><span>)</span><span> </span><span>as</span><span> </span><span>u8</span><span>,</span><span>
</span></span></span><span><span><span>    </span><span>];</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>    </span><span>(</span><span>buf</span><span>,</span><span> </span><span>len</span><span>)</span><span>
</span></span></span><span><span><span></span><span>}</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span></span><span>type</span> <span>Table</span><span> </span><span>=</span><span> </span><span>[[</span><span>u8</span><span>;</span><span> </span><span>4</span><span>];</span><span> </span><span>5</span><span>];</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span></span><span>// Byte prefix for a continuation byte.
</span></span></span><span><span><span></span><span>const</span><span> </span><span>CONTINUE</span>: <span>u8</span> <span>=</span><span> </span><span>0b1000_0000</span><span>;</span><span>
</span></span></span><span><span><span></span><span>const</span><span> </span><span>PREFIX</span>: <span>Table</span><span> </span><span>=</span><span> </span><span>[</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0</span><span>u8</span><span>;</span><span> </span><span>4</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0b1100_0000</span><span>,</span><span> </span><span>CONTINUE</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0b1110_0000</span><span>,</span><span> </span><span>CONTINUE</span><span>,</span><span> </span><span>CONTINUE</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0b1111_0000</span><span>,</span><span> </span><span>CONTINUE</span><span>,</span><span> </span><span>CONTINUE</span><span>,</span><span> </span><span>CONTINUE</span><span>],</span><span>
</span></span></span><span><span><span></span><span>];</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span></span><span>// We must arrange that the most-significant bytes are always in byte 0.
</span></span></span><span><span><span></span><span>const</span><span> </span><span>SHIFT</span>: <span>Table</span><span> </span><span>=</span><span> </span><span>[</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0</span><span>u8</span><span>;</span><span> </span><span>4</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>6</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>12</span><span>,</span><span> </span><span>6</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>18</span><span>,</span><span> </span><span>12</span><span>,</span><span> </span><span>6</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span></span><span>];</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span></span><span>const</span><span> </span><span>MASK</span>: <span>Table</span><span> </span><span>=</span><span> </span><span>[</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0</span><span>u8</span><span>;</span><span> </span><span>4</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0x7f</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0x1f</span><span>,</span><span> </span><span>0x3f</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0x0f</span><span>,</span><span> </span><span>0x3f</span><span>,</span><span> </span><span>0x3f</span><span>,</span><span> </span><span>0</span><span>],</span><span>
</span></span></span><span><span><span>    </span><span>[</span><span>0x07</span><span>,</span><span> </span><span>0x3f</span><span>,</span><span> </span><span>0x3f</span><span>,</span><span> </span><span>0x3f</span><span>],</span><span>
</span></span></span><span><span><span></span><span>];</span><span>
</span></span></span></code></pre></div><h2 id="the-branches">The branches</h2>
<p>No if statements, loops, or other conditionals. So, branchless, right?</p>
<p>…well, no.
If we peek at <a href="https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DEArgoKkl9ZATwDKjdAGFUtEywYgAzAFZSjgBk8BkwAOXcAI0xiEEkANlIAB1QFQjsGFzcPbz9k1NsBIJDwliiY%2BMtMawKGIQImYgJM909fSur0uoaCIrDI6NiE827m7Lbhxt6SssGASktUE2Jkdg4Aeg2AamwGNCxNpk25ABUAMQBaAA5Nvcxk4IIAOgBSDQBBDbXNgCVMAiWGAoDpsIiYqFRogcGOhNgQEJhNgx%2BsRNqgqJsAG5iPAwiIATwImCBwVh8JBYIhxBe70%2Brw%2BW2OqAO6BhcLwQNu90EsKZh3MxGCwFIB0SiUcB1otE2/CWIIJRM2JJIWDIdM%2BUJhxEwaGIrIQTAImwgZjwAC9MLM5YSgQB3aIIpgszCsplwhH8wXU%2BlrNVbX7/YiA4H0Ixw1Ho83EJn8FHBLG0HE3DB3VAPIEQBRLKPAA0KwwwxYEc5o84RRbQoHxkxE2ZexImCLShgg4iGZAIegKBQAfRMBColwgnNTghAmxMXgATJbzs8vNgjc8fAAhEyXOfLzaSJcAEWFJvNlueAHZl3TNhfNvRDSHNnOd%2BP%2B5du/jrd2Y93hw8h8muQRZhu56Xte5Loved4rkBl6Xso3zYKcACSAAaS7LiGu6oRou53seThGj%2BWB/ne85zguQgABIIacxyoehPg7phu5HpOcSbAAsm8QgANK0YwGErlh9EHECE7TsJ46XKQUHQZssHwchvEMPxy5cNhJ54VAX7cqRpGbBRVE0SudEMSuqn0cxrEcdxinKWZD5MCJU6Wg5ElSe8MkwXBiEoUZfH0ahk5qbh%2BFaYaOnznplHUTZ/kroF5l3ix7GcTxvlKbFy7xfZjliS5a5uW8HkXnJ3kxSZy5eEFGkESmDzEdgun6dFaXKZVCXPElVmpWhfnlW12Xjk54n5dJGFeGe7zSRAoJUMKIYAZNx4MZN7xoIChpUM2fYDi%2B8o9h%2BoU1X%2BY6iTOukHgiJ4TYVwF/FejDEQ%2BATYKEqGhY89COoK3aRikEDOSJqTmtheVA5ggErTdF5bOR%2Bb0JsmbENmuaVnghwRIQ5wEDaOLoAmRhetBfpmIawAmA0hiEgqBCmJdXgMfTmxcBq0piEoj3gRoIDSSBiPI4SL6EI9IW/iOYUkYzGiqDulwaBoFkdaxR1i8RTic9Lpya7MAPjmDENQ5sWzYKohLQqSBqoiEIJCw8roIFqmDCvmusIoQxIMBi0Tsy5hwsA5ADW0okPdoYIDzd186gOYC37CiB%2BBkfR5ggvi2rXh4ZOOF4YnuYp6rc54cz6kI1mUe5xjBD69JMNwwimCqCszrOpiYjVqj6OY9juP48AhOXlscgMDG/zMIStB4sKbrs%2BgAhgBwhrYsAzaJFqyDslUeKbDjYaHJ9%2BBGOcv0guW6ANHi%2BtE18bpXg0wBEoaoWKkCcgdSpGia5rfcXiB9eN1g6B53AsrOqukpZcA0N2D%2BpwdYXQvrdQ0v9MBNwAbHeOjNEHIMAenAumxM7Fwwf/LBadC5Z02AQ50Kcq7uVus2RWmwwBgBzjHAOiVWIMPISggOdITzLTeHSAgeIxSbGOEwCI8NwKoVQmuDcW4xqbh8HI7hNItgBEYMAOEwoIgOWbgIUkCIkSlEhGie6X0jCbF%2BgoL0a1zCbGeqEMcUj1zjU2F4fqwtJHUOhl8DQ5xwEmP3sAcx0QUhjgYKgQ08YcTSQ0MKGJmw4kJNiUk%2BJyTEmGx9J49JTMuC%2BJ8P4wUQSowKDHJIK0RJpLSC3MKSpNThQbGrmsLgcRziTg0PksxFixxeDKQoaSXhhT9JcQM4Z6SGm4JyZOUpe8CmdNwT06Sk5hSLNwUsupGSDZbEnD4c4U52mBNmczV84NMlcGFKcpmZzLkXOuac7h/lxpKPpJsZc8pNgr0wDQVQQcUSHDWrYJEBp0hlKsQIGxTgADyoRjgIVCHIbAJ1ricwiOAuW3Y5Zy31tYw0JVkJjhEWIumD4PEG0wtI5x256IFWgphVJsTdxUsvJhZFKK0XouFBCqFMK4WpPpaNASzLwGsrluyyF0LYXYBFZy8VdLKV8uXBoAVXAhVxI5WK7lmxVVcolRq0VWreWTXuddX0mwADqCIWAkwOEjQwd9zaGmviwFIRZUhLzwDQUQ3IjlAgaA6WgNomB4ndmU%2BJIL1qRQMni0R4jGbEupQJMlm4KV7jlWkhJ%2BqSUrgSCk7Nglk2ZNQlwZZWa02yvzaZSSTMi0yrzXww1jysXJW4pGgl7jIJlvlQm2RpaM3ytUMeWaObq0MovJhVQXAB1Sy8BOodKbVAaAnaoKdsTF0TvTXG3tGhjzLqXfEld26qDpsUZDDg8xaCcB8LwTwHAtCkFQJwb4lqFCLGWJdScXgeCkAIJoE98x/YgB8BoR4GgvCXDiLLAAnMeUDk5LjHgSGejgkheAsAkMKq9N670cF4MUmJX7r0ntIHAWASA0AsESHQaI5BKCkfI/QGIxAuCXC8DEmgtBCTEGKdNb9pAMbMGIHiTgH7eNn3BREbQ2o8MftI2wQQ4KGDj241gUEwAnBiFoMU7gvAsB%2ByMOIfDpB8Cr1sJ7DTN767aj7KsD9DwqjcYTBEVs/GXBYG4zTPAKHNOkE9sQMsSgdyYB08AHu375hUAMMABQAA1PAmAbTgrFFej9/BBAiDEOwKQMhBCKBUOofTuhTkGCMCAUw5h9B4AiMUyA8xUCJBqBp844LeCoG8wKLAlX/rtAk%2BkBw0JRieFOYEYIfRDExFOXkNIAg%2Bt6HGzUKYyI9BWC6wILojQpunMWzYTo9RJhDemAMdb22miuBaAtw7c2RsSHmE%2BpYKxLv6HPZe7jmHNglYIMgJmjwmNAaNLgQgwcOrvtmLwPDWhtakHhI6AYHW/2SHA48cDcQuDvvAxoScSPjyFoqAhpDpAUMotIOhprnBsMgFwyF09nBJyPf05h4H5OvNe265IIAA%3D" rel="external" target="_blank">the (optimized) code</a> in Compiler Explorer,
we can see the x86_64 assembly has <strong>two different kinds of branches</strong>.</p>
<h3 id="count-leading-zeros">Count leading zeros</h3>
<p>There’s a branch right at the start of the function:</p>
<div><pre tabindex="0"><code data-lang="asm"><span><span>            <span>test</span>    <span>esi</span><span>,</span> <span>esi</span>
</span></span><span><span>            <span>je</span>      <span>.LBB0_1</span>
</span></span><span><span>            <span>bsr</span>     <span>eax</span><span>,</span> <span>esi</span>
</span></span><span><span>            <span>xor</span>     <span>eax</span><span>,</span> <span>31</span>
</span></span><span><span>            <span>jmp</span>     <span>.LBB0_3</span>
</span></span><span><span>    <span>.LBB0_1:</span>
</span></span><span><span>            <span>mov</span>     <span>eax</span><span>,</span> <span>32</span>
</span></span><span><span>    <span>.LBB0_3:</span>
</span></span><span><span>            <span>mov</span>     <span>eax</span><span>,</span> <span>eax</span>
</span></span></code></pre></div><p>I wasn’t sure what this was about until I stepped through it.
The “special” case seems to be when the input (<code>esi</code>) is zero;
then it returns 32.</p>
<p>Why the special case? Compiler Explorer’s tooltip for the <code>bsr</code> instruction says:</p>
<blockquote>
<p>If the content source operand is 0, the content of the destination operand is undefined.</p>
</blockquote>
<p>So on x86_64 processors,
we have to branch to say “a 32-bit zero value has 32 leading zeros”.
Put differently, the “count leading zeros” intrinsic isn’t necessarily a branchless
instruction.
This might look nicer on another architecture!</p>
<h3 id="bounds-checks">Bounds checks</h3>
<p>The other jump seems to be a conflation of the several array-bounds checks.</p>
<div><pre tabindex="0"><code data-lang="asm"><span><span>        <span>cmp</span>     <span>eax</span><span>,</span> <span>4</span>
</span></span><span><span>        <span>ja</span>      <span>.LBB0_5</span>
</span></span><span><span>        <span>...</span>
</span></span><span><span><span>LBB0_5:</span>
</span></span><span><span>        <span>lea</span>     <span>rdx</span><span>,</span> <span>[</span><span>rip</span> <span>+</span> <span>.L__unnamed_5</span><span>]</span>
</span></span><span><span>        <span>mov</span>     <span>esi</span><span>,</span> <span>5</span>
</span></span><span><span>        <span>mov</span>     <span>rdi</span><span>,</span> <span>rax</span>
</span></span><span><span>        <span>call</span>    <span>qword</span> <span>ptr</span> <span>[</span><span>rip</span> <span>+</span> <span>core</span><span>::</span><span>panicking</span><span>::</span><span>panic_bounds_check</span><span>::</span><span>h8307ccead484a122@GOTPCREL</span><span>]</span>
</span></span></code></pre></div><p>All of the jump arrays have the same bound (4), so the compiler can
decide to only check once – and still get Rust’s famous safety guarantees.</p>
<p>In principle, if the compiler optimized through the <code>LEN</code> table,
it could eliminate this check as well; the <code>LEN</code> value is never
greater than 4, which is a valid index for all tables.
But apparently the constants don’t propagate that far.</p>
<h2 id="eliminating-branching">Eliminating branching</h2>
<p>Changing the code and dropping to <a href="https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DEArgoKkl9ZATwDKjdAGFUtEywZ7HAGTwNMAHLuAEaYxCAAzABMpAAOqAqEdgwubh568Ym2Ar7%2BQSyh4dGWmNbZDEIETMQEqe6eXCVlyZXVBLmBIWGRMeZtdemNfTUd%2BYU9AJSWqCbEyOwcAPTLANTYDGhYK0wrcgAqAGIAtAAcK5uY8X4EAHQApBoAgsuLKwBKmASzDArbK8EmKhUMLbBjoFYEBCYFYMLrEFaoKgrABuYjw4OCAE8CJhfn4IVD/oDgcR7k8Xg9nqs9qhtuhwZC8L8LldBBDaTtzMQ/MBSNtYrFHNtaLQVvxZv9sbiVviSFgyJSXqDwcRMGhiAyEEwCCsIGY8AAvTATSU434AdzC0KY9MwDNpkOhXJ5ZKpi0Vqw%2BX2IPz%2B9CMkIRSKNxFp/HhflRtHR5wwl1Q11%2BEAUs1DwG10sM4JmBCOiKOwRmYN%2BUZMuImrtiJmCYoY/2IhmQCHoCgUAH0TAQqCcICyE4IQCsTNETUc7hFsLq7gBWABCJhO49nK0kM4AInz9UaTXcAOyzykrI8reg6/0rcdroddk5trFmtvhtt9669uOsggTJeH494JHIKhgDASAsABYA2yYVswnKBQd33H9j2PSClBqYCIHPccnEvFcvwiA8nkQvc1wQk9PiJJFsJMH4mGBC94IIxDjxnfDHkYtiVgAKmUN5sAOABJAANG5gE%2BDsNihZAAGs7XQxgKxEggxKbNVpPQCANC/Bj2PYvcnF1N8sA/C8J3HScOKEAAJPiDj2YTRKo5SpJk/15Ps8SVJkjTNNY7TfKPO4ogANk4gBZR4hAAaTsxSHIk1TZIYVyYvcpy1I07ZfmHKITUgocTlIEjtK4nj%2BKEhSlLi5y5OiiqPLUrhvL8tjdP0l82VM0zOMs6zbPK2K6oSpLatSiAGsaprtIC4KOLCyKav6kaXPmlL4oajKhxHdaFwKrTfOK3jBOWxz4qWvqVpk7LCqalqoDanUOonLqrJso7KrU063OOi6JnGibmqC0Lwqis6vve6qQbeiBsq2zbcu2q62P20rXoGj7ktBiAIl%2Bv6boM%2BNrmM7BOvM57es%2ByG0eG%2BKsexv6mIBmagZRxbwfJgasZh6G4fyhGL2nYjdqI78nhIiAASoPkXMpIWRZFqIImYvxo38ddKTQH4dSoOtO27O8pXbJ87rxj9Byy0dOq3aE9xYxDT1IutsO8bAAmYu6bnoG0eTbEMEggHLMsSI11y2wPMGFx4SNWCys3oFYU2INMMxLPAdmCQgjgIc10XQZXgFdRDPTMHVgBMapDBxaUCFMK2ImI2uVi4ZUxTEJRjLrq8NBAEi7fjxOcTvQg29a99%2B3ukz640VQ1xODR0qmqbdTu4ysInqeDnXn6Q8NMO8Mj15sFUHEwQJbUEX8f5B%2BuB0EFVTA%2BSzIdW8IPEGGRMJW9ynYWEgySxRIe3gCQm7mRXuqB0z92/goX%2B2FQHgMwAPMeK89JRDonpWBGYEHL0wg3VBcdUxgIwWnAg4c94rGjmCWOmBVDzDtHaFEYgyzJ1TunTO2dc752PKsOQDBwxfGYDiWgmI%2BSOlbugAQYAOA6jRMAOssRVTICZKUTEKws6Bh2B7fARgjg%2B3%2BEWdA1RMThwLq8R0J5qgiXMLGQyo8ZS/DkAFWcXANDr3Xhwo8dsqE0KwOgTB2FjY2M6pPJxbYXEHH9o/beRjjweOoZgWhPjIHQPrp4uJ3jfERCQSsFBLUUnxPSZkxuOTYl5KISQ3aGEAbAXQRAn%2BF5KlgFyWkxJ0tdwCwjk8AgmJBQrD2EwYIsdsLMWYguJcK5VZ4RWNOcZLEPSvG8IwQBCA%2BTBEgnQgQBJoSwgKCCREpFPZGBWD7BQrp1aWKdgEQcwzFwTIiArfmQ8hm7VWBoI4Ti9maOAIcsICRBwMFQDqKM6ISIaD5CClYYKIWgqheC6FkKVjLFIVwLgrzpzvJ5F80MChBySFNLiEi0gVx8gJcSvkCKnmLC4IFI4UQNBooOUcwcERcUKBIhEPkbKVgcq5aS905KsnIqiDijR6KGVZOZSRGIWS%2BSSslWSnyR5VhRGnEcaIdLPmisbveMOu1GgNz5Lqg1%2BqjV6ulvzMpVIVizilCsORmAaCqD/vCHY6tbCwm1MkXFJyBCWKcAAeQCHsPiAQ5DYFNmcbCGhghONnm2Wes9w6nJ1NxA6AlBy9P6TXK8jz5V81nBoEZEzVz8x2jm5icKIXrhLYROckakUxrjWCv1Aag0hthZWkiZao11tjXGvkTbA3BuwH2/1A7W3gvbYLGtXakU9tnsO5tg752jqHSsftLaibFtNXXGZ5JXgAHVoQsCLtsBOhgRInx1KYlgCRcyJBkX%2BPAog2Rat%2BNUa0tBzRMExC/XF4KvUaxWN1Gyaa%2BkDPrtm6teaC3LiLRuDtNbYWgonaWucgVEPjs3ZOxxkq0Mwow3BrDXB8oNxw0hzDEczW71lo8RNKxZoRRAxmh5c54NQeuTB5DkHJ67glnhit5GuOqC4LxyeEQRNkYIyhvNqgNAidUGJ0F8mROcaYjWmTu5FMKfBUpzTVBkPTOlk8DgUxaCcGnLwTwHAtCkFQJwN4x6FAzDmFbeWPBSAEE0MZqYkkQCSEkDcAAnDSrgURdwzw0FEULQV9CcEkLwFgEg52Wes7ZjgvAsUgo81Z4zpA4CwCQGgFgsQ6BhHIJQQrxX6DhGIERiIIKaC0BxMQLFYtPOkDTswYgmJOBuY6wY31wRtBqiy25wrbBBC%2BoYIItroETDACcGIWgWLuC8CwN/Iw4hsukHwPI2wb9lvWaoWqTsCw3PXFKG16MwQGxdZcFgNrVc8AJZW6QN%2BxBCxKDXJgdbwBc6eamFQAwwAFAADU8CYHNL6wUlm3P8EECIMQ7ApAyEEIoFQ6gtu6EaAYIwIBTDmH0HgYIWLIBTFQLEGCnAjhHAAp8v5bZZvgWQtBZIvwjh6XJ7megb9aCXjc6gN73IsAk79k0YbyQHBggGJ4KIjQfB%2BE6Ns8IGnMhJAENLkAsu4gJDVwwUYcIQAaasOLgQrQaga618bmwLQqgjAV2MboRvbe1FcPUTXQxnf66V4bqYjnZjzAkCZszFm2upZWPjggyAG43BOBEG4tKIC4EIP/AKEQGq8Cy1oH6pAoQ2m6KLnz05pzx93AFk4u5ZcBYC7uCvu5pwxY4HF0gCXo2kGS7wVL6WQCZf%2B0HjgUQQ9bc7%2B53vr334S8kEAA%3D%3D%3D" rel="external" target="_blank">unsafe array accesses</a>
eliminates the array bounds check.
But still, there’s still the count-leading-zeros branch at the start.
Can we get rid of that?</p>
<p>Let’s take another look at a bit of the code –
specifically, how we handle out-of-bounds values:</p>
<div><pre tabindex="0"><code data-lang="rust"><span><span><span>let</span><span> </span><span>exceeded_bit</span><span> </span><span>=</span><span> </span><span>(</span><span>codepoint</span><span> </span><span>&gt;</span><span> </span><span>0x10_FFFF</span><span>)</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span></code></pre></div><p>The trick I pulled here was to cast a boolean (true or false) to an integer
(1 or 0).
Rust’s semantics guarantee this conversion is safe,
and it happens to be a representation the hardware can work with;
it doesn’t appear to incur a conditional after compilation.<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">2</a></sup></p>
<p>I used these booleans-as-integers to perform masking to zero.
But you know what else we can do with integers?</p>
<p><strong>Addition.</strong></p>
<h2 id="the-answer">The answer</h2>
<p>We can get rid of all the branches by tweaking the length-computing function:</p>
<div><pre tabindex="0"><code data-lang="rust"><span><span><span>const</span><span> </span><span>fn</span> <span>utf8_bytes_for_codepoint</span><span>(</span><span>codepoint</span>: <span>u32</span><span>)</span><span> </span>-&gt; <span>usize</span> <span>{</span><span>
</span></span></span><span><span><span>    </span><span>let</span><span> </span><span>mut</span><span> </span><span>len</span><span> </span><span>=</span><span> </span><span>1</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>// In Rust, true casts to 1 and false to 0, so we can "just" sum lengths.
</span></span></span><span><span><span></span><span>    </span><span>len</span><span> </span><span>+=</span><span> </span><span>(</span><span>codepoint</span><span> </span><span>&gt;</span><span> </span><span>0x7f</span><span>)</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>len</span><span> </span><span>+=</span><span> </span><span>(</span><span>codepoint</span><span> </span><span>&gt;</span><span> </span><span>0x7ff</span><span>)</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>len</span><span> </span><span>+=</span><span> </span><span>(</span><span>codepoint</span><span> </span><span>&gt;</span><span> </span><span>0xffff</span><span>)</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>    </span><span>// As before:
</span></span></span><span><span><span></span><span>    </span><span>let</span><span> </span><span>surrogate_bit</span><span> </span><span>=</span><span> </span><span>((</span><span>codepoint</span><span> </span><span>&gt;=</span><span> </span><span>0xD800</span><span>)</span><span> </span><span>&amp;&amp;</span><span> </span><span>(</span><span>codepoint</span><span> </span><span>&lt;=</span><span> </span><span>0xDFFF</span><span>))</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>let</span><span> </span><span>surrogate_mask</span><span> </span><span>=</span><span> </span><span>surrogate_bit</span><span> </span><span>&lt;&lt;</span><span> </span><span>2</span><span> </span><span>|</span><span> </span><span>surrogate_bit</span><span> </span><span>&lt;&lt;</span><span> </span><span>1</span><span> </span><span>|</span><span> </span><span>surrogate_bit</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>let</span><span> </span><span>exceeded_bit</span><span> </span><span>=</span><span> </span><span>(</span><span>codepoint</span><span> </span><span>&gt;</span><span> </span><span>0x10_FFFF</span><span>)</span><span> </span><span>as</span><span> </span><span>usize</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>let</span><span> </span><span>exceeded_mask</span><span> </span><span>=</span><span> </span><span>exceeded_bit</span><span> </span><span>&lt;&lt;</span><span> </span><span>2</span><span> </span><span>|</span><span> </span><span>exceeded_bit</span><span> </span><span>&lt;&lt;</span><span> </span><span>1</span><span> </span><span>|</span><span> </span><span>exceeded_bit</span><span>;</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>    </span><span>len</span><span> </span><span>&amp;</span><span> </span><span>!</span><span>surrogate_mask</span><span> </span><span>&amp;</span><span> </span><span>!</span><span>exceeded_mask</span><span>
</span></span></span><span><span><span></span><span>}</span><span>
</span></span></span></code></pre></div><p>This is the answer to Nathan’s original question, about working out the number of bytes.
Compiler explorer confirms that, with optimizations enabled, <a href="https://godbolt.org/#g:!%28%28g:!%28%28g:!%28%28h:codeEditor,i:%28filename:%271%27,fontScale:14,fontUsePx:%270%27,j:1,lang:rust,selection:%28endColumn:2,endLineNumber:22,positionColumn:2,positionLineNumber:22,selectionStartColumn:2,selectionStartLineNumber:22,startColumn:2,startLineNumber:22%29,source:%27%23%5Bno_mangle%5D%0Aconst+fn+utf8_bytes_for_codepoint%28codepoint:+u32%29+-%3E+usize+%7B%0A++++let+mut+len+%3D+1%3B%0A++++//+In+Rust,+true+casts+to+1+and+false+to+0,+so+we+can+%22just%22+sum+lengths.%0A++++len+%2B%3D+%28codepoint+%3E+0x7f%29+as+usize%3B%0A++++len+%2B%3D+%28codepoint+%3E+0x7ff%29+as+usize%3B%0A++++len+%2B%3D+%28codepoint+%3E+0xffff%29+as+usize%3B%0A%0A++++//+Handle+surrogates+via+bit-twiddling.%0A++++//+Rust+guarantees+true+%3D%3D+1+and+false+%3D%3D+0:%0A++++let+surrogate_bit+%3D+%28%28codepoint+%3E%3D+0xD800%29+%26%26+%28codepoint+%3C%3D+0xDFFF%29%29+as+usize%3B%0A++++//+Extend+that+one+bit+into+three,+and+use+its+inverse+as+a+mask+for+length%0A++++let+surrogate_mask+%3D+surrogate_bit+%3C%3C+2+%7C+surrogate_bit+%3C%3C+1+%7C+surrogate_bit%3B%0A%0A++++//+Handle+exceeded+values+via+bit-twiddling.%0A++++//+Unfortunately,+these+don!%27t+align+precisely+with+a+leading-zero+boundary%3B%0A++++//+the+largest+codepoint+is+U%2B10FFFF.%0A++++let+exceeded_bit+%3D+%28codepoint+%3E+0x10_FFFF%29+as+usize%3B%0A++++let+exceeded_mask+%3D+exceeded_bit+%3C%3C+2+%7C+exceeded_bit+%3C%3C+1+%7C+exceeded_bit%3B%0A%0A++++len+%26+!!surrogate_mask+%26+!!exceeded_mask%0A%7D%27%29,l:%275%27,n:%270%27,o:%27Rust+source+%231%27,t:%270%27%29%29,k:44.92012780022726,l:%274%27,m:100,n:%270%27,o:%27%27,s:0,t:%270%27%29,%28g:!%28%28h:compiler,i:%28compiler:r1830,filters:%28b:%270%27,binary:%271%27,binaryObject:%271%27,commentOnly:%270%27,debugCalls:%271%27,demangle:%270%27,directives:%270%27,execute:%271%27,intel:%270%27,libraryCode:%270%27,trim:%271%27,verboseDemangling:%270%27%29,flagsViewOpen:%271%27,fontScale:14,fontUsePx:%270%27,j:1,lang:rust,libs:!%28%29,options:%27-O%27,overrides:!%28%29,selection:%28endColumn:1,endLineNumber:1,positionColumn:1,positionLineNumber:1,selectionStartColumn:1,selectionStartLineNumber:1,startColumn:1,startLineNumber:1%29,source:1%29,l:%275%27,n:%270%27,o:%27+rustc+1.83.0+%28Editor+%231%29%27,t:%270%27%29%29,header:%28%29,k:55.07987219977275,l:%274%27,m:100,n:%270%27,o:%27%27,s:0,t:%270%27%29%29,l:%272%27,n:%270%27,o:%27%27,t:%270%27%29%29,version:4" rel="external" target="_blank">this function is branchless</a>.</p>
<p>Happily, this transformation also allowed the compiler to realize <code>len &lt;= 4</code> on all paths,
and to statically eliminate the array bounds check.
That means <a href="https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DEArgoKkl9ZATwDKjdAGFUtEywYgA7KUcAZPAZMADl3ACNMYhAAJmjSAAdUBUI7Bhc3D28EpJSBAKDQlgio2MtMa1sBIQImYgJ0908fK0wbVOragnyQ8MiYuPNOhszmmrruwuL%2BgEpLVBNiZHYOAHoVsDAAagAhYkNkBHoFBU3GNHwjTdQqTfPMRMCCE8fUTbkAFQAxAFoADgA6ACkGgAgmsNsCwestu8EIYANYnIibYJMAhwhibfjETbozCbACOJkw5lSm0M6E2fhIjAAXliSLiEPj4ZgAJ6bQLJYAIAhA0HgrYghgc4iYFhMQKBYCbFh4Qask61fFyoL8qEQgXQzZCTD43kEeIKEBrYCEBAmML/NAsFYKVmYIgrMJ7BgHI4Kb4mAhUX4MnFYc7S9WQtYrTbYN0YfFMN5fP63aMPQTqsObABKjoWDCVmzCJioVEi5IYlLxmwYvRx102ADcxHhKWE2QQSZzMeX84XIqm1qG1pt3q8mOgywh5YmsMmCLjh5tzMRpaRyfF4o5ybRaAyFnmW23AldiFgyP3wxTNmK0EemWjNhAzHhaZhprvWycAO6RGOjzBl17lhdg1PU8MyzYgc3JTZ6CMdErhuJ9iFebF23rWhG0ne5UEeE4IAUBZEOANE23PeYCG%2Ba5vjCeZSxOVDiQUaZ1XiS0sUxF19kOEkFAAfW9X0IDuacQE2EwAGZohfb5AVE7A70BABWbYTF%2BaTtk2SQFIAEWXB8nxfQEvG2SFNhMqDHTMzFpM0kSfV%2BbjmzfbjsW4wSsMEASkzcghplU4zTPoGcu02KzgsUvzTNM5R02wT4AEkAA0FO2aCtKSjQtOCrwnDvDypy84KZOk2ShAACViz53iSlL5M0tKtP06IADZNgAWRBIQAGkqsYVLFPSmryROMSJMGkTflIcKIs2KKYoS7qGF67YuAygzsqgVzHgK7Aip1MqKvmxblpqhrmrazqDpqpKjuspghvEl9brGibQSmyLorixLFOq2rFOiFaspyjbBC2nbSvKyqvp6y7fvq4Kmta9qushhboe2P6Bse4aHqG8bJoimaPoun7tlE/61tyzDNqK0G9oh5KoeJ0njrh07EaJpKmZuu6Rsx3GXtM1LRKM0FJogLtl2gnyRa8WqRdBNAcxnKhMT4uyHJJJySBczzHgpoSRPuzYpJkkTkifTLhZBCKAtlb0LIK6zlqFyaB1izF0zMCxcVMfFRHMJFXi4EtKSoMQlFnTYNGXBRXk/W5DDh6JtE9wFYnndwLOAdEFHVa3GDhozROsvX8p2jRVC8KhsdNx9MF8/mTOgguQpLqmTfLyuq9G3S6%2Bdhv7dTwvi6Bmcy9UQtC2rnv65BF3wxKil6HT4gCKI2i8FjMJCG%2BAh30bdA0KMXPTIHD3zE2YATFqQxWzbAgfYdkKg/PUPaHDqyQo0EBJptvCV9QQirZ7KEAdoDHWwNqZF0jqoTSvwNAaBOqnZqrcIGiScJ/GBnwsHTCnmbXulsIoDmwKoVspYbwzgEPiLeM4XhMjFJgZc54zD4kIM8BgtZIjh0erGCU9p/SZ3RD/cyf9V5AN4fCUBIiAFEWAaPNB0lsrREytlKRgDMCyIKugtBmwg6rWXqI9R1CZ5z02AvUsS9MCqCWL%2BX8dYxD0TrBvPM29d770PsAY%2BJkBxyAYNiAgJhmCtloGyZceJw7oAEGADgM4GzAExPES88pygcj3rBWM9ARzSm%2BAhV4VEAnoFqGyGehDwzlgMMQYAJIZwj05CcOQg8uAaCwVgzxZkZyWOsVgdAGiW41LHo07izTPi4NrsU/y5kOl6i6dxcRoDJk2O6dQzRCjNhKL0fM6ZSyFErN0QDDZv5ZHGP7k3JBmwNiqJkbM05Gx9ndPEZCAystZ6ggIGyNcg4mBhCXiFJKSVlKqXUoLNS8kgUPK1DsPcmwEmYBoKofhsYFa2ErGiMk6t1QK3Pk4AA8sEd4sVghyGwMJZSoCNBhEafA7i8D4EzwxTOAmCVhLvE%2Bd8qBvz%2B5pX%2BULQFNVnpWwFn1ZcUdI5Cq0nyiKaVyUUqpdS5c2LcX4sJUK0VvLJqSq4BqjQMr4FypxXigl2BdUKoNSq7Saq%2BpSo1dq4V8r9VKs2LaxVhqHV6qdWKh5l0%2B7PKhJsAA6iqT25IV6GEqeQpkKokhkW5AwPANBRDA3VkqMUG53xMDZGw18%2BINDooEOfMGFUmUsvxD8sKHK%2BpcrUhpVVZbtjCrraa8VArtiNWVSKyO7qa1cDiJsFtbb%2Bpms7eNHR3be39r5aCuWII6UI06oWr5xa2Wlv5SZTlKluVVoHcu0KtaK5UFbXWjtW60qqC4Hu6Bokz0HurUevqqgNCXtUBeoVj7L2HolbejQPhz0Pqfd%2Bw9E7vWpyZtsZAVBgAQDfN5VKoIWAYFxFUk4BkCGmWYbcPYrYQDf0MuxN0nFji8VsjpWy9k9w8WciPR5Ryj3RGA5B6DW7lYCIQBAfShk8amWQngdskd/j/HLlgwZzSLbsdejbYAqA5HWVViRxy5HwEEAgHgHyXrXqifMqm1B1kDi1Ew1QRCLBeLiUU1LLdqmpr/AlPECAq1kB6OQP8Ig3FAJGBY/8W6MmSSuegixkzZmzP/ACe%2BPY8RuIkAgAgsZfnBpKDqNxTABINgQA017cTXtU5/UMhQVQjzhJIeS48s5YAfmGVS5R2IvnVOUY5TLMF1HaNVPoxFRjOH3RcSc6wTALHhP9ya4yLjB5s18dUAJoZ3XTOqZtmLUjEtGD6SgS1vDPFVbGci35sTEnQFIMTUlXj31VtmZtsl0B2moggD06gAzw0Vs9ai5sCzTArM2bsw51ATn77Slc%2B5xNrnHOoHfEEdAPmRN%2BYCwwILD3QvEAgAANVaJhoI74gcqdu7dGLBA4sJcgEg5Ly5UvKeQ69KrR6avS00hwWYtBODyV4J4DgWhSCoE4GfGcMcFhLDhqJHgpACCaHJ7MeEIBJCSH%2BAATmiBoLtXg4EaFiF4Jq%2BhOCSF4CwCQOraf08ZxwXgxoo487p%2BT0gcBYBIBtPEOgkRyCUFN%2BbqIxAuC/FElHGgtBWzEGNGLXnpAt7MGIGyTgXPveFKxWEbQrQ9dc5tGwQQWKGDBM91gfMwAnBiDfv73gWAJRGHEPr0g%2BBLy2A4caHPljWjemWFzx45RPdoXYr7lwWBPfvZV9wXgHDiBUSUJpcUIb3G89mFQAwwAFDQ7wJgd8WK1y065/wQQIgxDsCkDIQQigVDqBz7oLg%2BgQ0gFMOYfQeAwjGkgLMVA8RKg5k4N8LFvBUBt8XFgI/LGygVFSA4UswxPCb/8IEHoRQ%2Bib8SGSHPw/z0EANyAYAmCrD0BaDaCqDGHqFcEaGgPKDD3aHgMgL/yiE30GDqBAOwPQJ/0mH/1mFZ0WAXwpypxp0901wvE9mQB0X%2BAdz4zvFwEIEZCAy4GmF4D1y0BwVIGZBHD6CfwF3knkj4y8BF1%2BDly4BFxFy8Dly8HkgVw4CV1IBVwpVIHVxv04G1xAF1z7woI4GiCoJz0124IMNIDb2SHsEkCAA%3D" rel="external" target="_blank">the full code</a> is branchless as well. Victory!</p>
<h2 id="the-caveats">The caveats</h2>
<p>While this is <em>branchless</em>, I make absolutely no claim that it is <em>optimized</em> –
my only goal here was a proof-of-concept of branchlessness.
I haven’t even benchmarked it!</p>
<p>Chris Wellons notes in <a href="https://nullprogram.com/blog/2017/10/06/" rel="external" target="_blank">his post about branchless decoding</a>
that a DFA-based decoder can have similar performance;
SIMD and other “use what the hardware gives you” techniques
are probably even better.
I wouldn’t bet on my encoder over the one in your favorite standard library.</p>
<p>I also make no claims of usefulness.
But you’re welcome to do just about anything with the code:
I hereby release it under the MIT license. The full code is
<a href="https://cceckman.com/r/unicode-branchless" rel="external" target="_blank">here</a>,
along with the tests I used to match it against Rust’s implementation.</p>
<h2 id="thanks">Thanks!</h2>
<p>Thanks Nathan for the question and Lorenz for the insights!
Any mistakes remaining are my own – give me a shout if you spot them!</p>



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Higher potassium intake at dinner linked to fewer sleep disturbances – study (134 pts)]]></title>
            <link>https://www.nutraingredients-asia.com/Article/2025/01/07/higher-potassium-intake-at-dinner-linked-to-fewer-sleep-disturbances/</link>
            <guid>42742161</guid>
            <pubDate>Fri, 17 Jan 2025 19:17:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nutraingredients-asia.com/Article/2025/01/07/higher-potassium-intake-at-dinner-linked-to-fewer-sleep-disturbances/">https://www.nutraingredients-asia.com/Article/2025/01/07/higher-potassium-intake-at-dinner-linked-to-fewer-sleep-disturbances/</a>, See on <a href="https://news.ycombinator.com/item?id=42742161">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article id="pn_rw" data-clarity-region="article"><p>Sleep disorders affect a large population, with <a href="https://www.nutraingredients-asia.com/Article/2024/11/14/blackmores-taps-into-underutilised-opportunities-in-vds-for-sleep-support/">demand for sleep support</a> on the rise. Although previous research has explored the relationship between specific nutrients and insomnia, comprehensive analyses of daily eating patterns of macro- and micronutrients remain limited. </p><p>Diets high in sodium, low in potassium, or both, have been associated with altered nocturnal blood pressure decrease (when blood pressure does not decline as much as it normally does at night). </p><p>At the same time, nocturnal hypertension has been linked to sleep disturbances. </p><p>As such, a cross-sectional study in Japan examined the relationship between potassium and sodium intake and insomnia among healthy Japanese adults.</p><p>Dietary data on energy intake and consumption of protein, fat, carbohydrates, sodium, and potassium during breakfast, lunch, dinner, and snacks spanning January to February 2021 were derived from Asken, a widely used Japanese food-logging mobile app. </p><p>Users can input ingredients, dishes, and portion sizes into the app, which automatically calculates calorie and nutritional intake by referencing the Standard Tables of Food Composition in Japan, 2020 (Eighth Revised Edition), as determined by the country’s Ministry of Education, Culture, Sports, Science and Technology. </p><p>The app boasts over 11.2m downloads as of November 2024. Self-reported food records accumulated on the app have been validated as reliable for research purposes. </p><p>As part of the study, online survey responses were obtained from 4,568 app users (3,320 women and 1,248 men) aged between 20 and 64 at the end of January 2021. </p><p>Sleep disturbances were assessed using the Athens Insomnia Scale (AIS), a self-administered psychometric questionnaire designed to evaluate sleep disorders, particularly insomnia. </p><p>The questionnaire consists of eight items, with total scores classified into three groups according to symptom severity — normal (scores of 3 or less), subclinical insomnia (scores of greater than 3 but less than 6), and clinical insomnia (scores of 6 or more).</p><p>The results showed that total daily potassium intake was inversely associated with log AIS score (<i>p</i> = 0.034). </p><p>When consumption during each meal (breakfast, lunch, dinner, and snacks) was analysed, only potassium intake at dinner remained significantly associated with AIS score (<i>p</i> = 0.003).</p><p><i>“Our findings suggest that potassium intake may be related to sleep quality. Higher potassium intake, especially at dinner, indicates fewer sleep disturbances [based on AIS scores]. This study provides a foundation for future intervention studies and personalised dietary recommendations,” </i>the authors wrote. </p><h3><b>Potassium power</b></h3><p>Previous studies have shown that lower potassium intake is associated with short sleepers, sleepiness during the day, poor sleep quality and sleep efficiency, and nighttime awakening.</p><p>There are several potential mechanisms explaining the relationship between potassium intake and sleep. </p><p>Firstly, adequate potassium levels are critical for proper muscle contraction and relaxation, as the mineral plays a key role in transmitting electrical signals in nerve fibres and muscle cells, thereby regulating overall muscle function and contributing to sleep patterns. </p><p>Additionally, potassium is essential for neurotransmitter function, which is crucially involved in regulating sleep and wakefulness. </p><p>Studies have also demonstrated that potassium reduces both systolic and diastolic blood pressure. Given the well-documented association between poor sleep and hypertension, these findings suggest that potassium intake could lead to better sleep by regulating blood pressure. </p><p>However, the mechanism underlying why dinner intake is particularly significant remains to be investigated.</p><p><i>“To better understand the observed association between potassium intake and insomnia, future research should include both dietary records and blood pressure data. Longitudinal and intervention studies will also be needed to establish causal relationships and explore other factors influencing sleep.” </i></p><h3><b>Link between sodium intake and sleep to be verified</b></h3><p>Several studies have found sodium or salt intake to be associated with sleep maintenance difficulties, later sleep times, and a higher probability of insomnia. </p><p>For example, a Japanese cross-sectional study showed that energy-adjusted sodium intake was positively correlated with sleep duration among healthy Japanese adult men. </p><p>In the present study, however, no significant association between sodium intake and AIS scores was discovered. This calls for further evidence to verify the relationship between sodium intake and sleep.</p><p>The Japanese diet is characterised by high sodium and low potassium intake, or a high sodium-to-potassium ratio. </p><p>The sodium-to-potassium ratio is recognised as a superior indicator for assessing blood pressure outcomes and hypertension incidence, compared to individual measures of sodium or potassium. </p><p>The sodium-chloride cotransporter (NCC), expressed in the kidneys, is a key molecule in the regulation of urinary potassium excretion. Consuming a low-potassium diet activates the NCC, promoting sodium reabsorption. </p><p>Conversely, a high-potassium diet strongly suppresses NCC activation, resulting in increased urinary sodium and potassium excretion. </p><p>Nevertheless, the results in this study did not find any meaningful association between the sodium-to-potassium intake ratio and AIS scores.</p><p><i>Source: Nutrients</i></p><p><a href="https://doi.org/10.3390/nu17010148"><i>https://doi.org/10.3390/nu17010148</i></a><i> </i></p><p><i>“The Association of Sodium or Potassium Intake Timing with Athens Insomnia Scale Scores: A Cross-Sectional Study”</i></p><p><i>Authors: Taiki Okamoto, et al</i></p></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hands-On Graphics Without X11 (116 pts)]]></title>
            <link>https://blogsystem5.substack.com/p/netbsd-graphics-wo-x11</link>
            <guid>42741155</guid>
            <pubDate>Fri, 17 Jan 2025 17:54:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blogsystem5.substack.com/p/netbsd-graphics-wo-x11">https://blogsystem5.substack.com/p/netbsd-graphics-wo-x11</a>, See on <a href="https://news.ycombinator.com/item?id=42741155">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>Look at these two consoles:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png" width="1200" height="508.65671641791045" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1f756707-3087-454a-8737-62a4768f7d30_1340x568.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:568,&quot;width&quot;:1340,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:25232,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f756707-3087-454a-8737-62a4768f7d30_1340x568.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>Side-by-side comparison of the NetBSD console right after boot vs. the EndBASIC console.</figcaption></figure></div><p>Same font, same colors, same… everything? Other than for the actual text they display, they look identical, don’t they? But the one on the right can do things that the one on the left cannot. Witness this:</p><p><span>A square? OK, meh, we had those in the DOS days with </span><a href="https://en.wikipedia.org/wiki/Box-drawing_characters" rel="">box-drawing characters</a><span>. But a circle?! That’s only possible because the console on the right is a hybrid console that supports mixing the usual textual grid of a terminal with overlapping graphics.</span></p><p><span>Now, if you have been following the development of </span><a href="https://www.endbasic.dev/" rel="">EndBASIC</a><span>, this is not surprising. The defining characteristic of the EndBASIC console is that it’s hybrid as the video shows. What’s newsworthy, however, is that the EndBASIC console can now run directly on a framebuffer exposed by the kernel. No X11 nor Wayland in the picture (pun intended).</span></p><p><span>But how? The answer lies in NetBSD’s flexible wscons framework, and this article dives into what it takes to render graphics on a standard Unix system. I’ve found this exercise exciting because, in the old days, graphics were trivial (</span><a href="https://en.wikipedia.org/wiki/Mode_13h" rel="">mode 13h</a><span>, anyone?) and, for many years now, computers use framebuffer-backed textual consoles. The kernel is obviously rendering “graphics” by drawing individual letters; so why can’t you, a user of the system, do so too?</span></p><p><a href="https://man.netbsd.org/wscons.4" rel="">wscons(4)</a><span>, or Workstation Console in its full form, is NetBSD’s framework to access the physical console attached to a computer.</span></p><p><span>wscons abstracts the details of the hardware display and input devices so that the kernel and the user-space configuration tools can treat them all uniformly across the tens of platforms that NetBSD supports. If you use </span><a href="https://man.netbsd.org/wsconsctl.8" rel="">wsconsctl(8)</a><span> on a modern amd64 laptop to control its display, you use wsconsctl on an ancient vax box to control its display too.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png" width="1456" height="1001" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1001,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:436643,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd299c81e-fc5b-4d9e-b25d-469e9ac1dd7f_1920x1320.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Layered architecture of wsdisplay and its backing devices.</figcaption></figure></div><p>The output architecture of wscons is composed of multiple devices, layered like this:</p><ol><li><p><a href="https://man.netbsd.org/wsdisplay.4" rel="">wsdisplay(4)</a><span> sits at the top of the stack and implements the console in hardware-independent terms. The functionality at this level includes handling of VT100-like sequences, cursor positioning logic, text wrapping, scrolling decisions, etc.</span></p></li><li><p><span>Under wsdisplay sit the drivers that know how to access specific hardware devices. These include, among others: </span><a href="https://man.netbsd.org/vga.4" rel="">vga(4)</a><span>, which does not do graphics at all; </span><a href="https://man.netbsd.org/genfb.4" rel="">genfb(4)</a><span>, which is a generic framebuffer driver that talks to the “native” framebuffer of the system (e.g. the one configured by the EFI); and </span><a href="https://man.netbsd.org/radeonfb.4" rel="">radeonfb(4)</a><span>, which implements an accelerated console on AMD cards. These drivers know how to initialize and interact with the hardware.</span></p></li><li><p><span>Under the graphical drivers sits </span><a href="https://man.netbsd.org/vcons.4" rel="">vcons(4)</a><span>, the driver that implements one or more graphical consoles in terms of a grid of pixels. vcons is parameterized on “raster operations” (rasops), a set of virtual methods to perform low-level operations. An example is the </span><code>moverows</code><span> method, which is used by wsdisplay to implement scrolling in the most efficient way provided by the hardware. vcons provides default (inefficient) implementations of these methods, but the upper drivers like radeonfb can provide hardware-accelerated specializations when instantiating vcons. vcons also interacts with </span><a href="https://man.netbsd.org/wsfont.4" rel="">wsfont(4)</a><span> to render text to the console.</span></p></li></ol><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png" width="1456" height="637" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c8368000-8d05-4451-beec-27f355c41828_1920x840.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:637,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:76696,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8368000-8d05-4451-beec-27f355c41828_1920x840.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Layered architecture of wskbd and its backing devices, including the optional wsmux wrapper.</figcaption></figure></div><p>The input architecture of wscons is similar in terms of layering of devices, albeit somewhat simpler:</p><ol><li><p><a href="https://man.netbsd.org/wsmux.4" rel="">wsmux(4)</a><span> is an optional component that multiplexes multiple input devices under a single virtual device for event extraction.</span></p></li><li><p><a href="https://man.netbsd.org/wsbkd.4" rel="">wskbd(4)</a><span> sits at the top of the stack (not accounting for wsmux) and implements generic keyboard handling. The functionality at this level includes translating keycodes to layouts, handling key input repetition, and more. wskbd exposes a stream of wsevents to user-space so that user-space can process state changes (e.g. key presses).</span></p></li><li><p><span>Under wskbd sit the device drivers that know how to deal with specific hardware devices. These include, among others: </span><a href="https://man.netbsd.org/ukbd.4" rel="">ukbd(4)</a><span> for USB keyboard input and </span><a href="https://man.netbsd.org/pckbd.4" rel="">pckbd(4)</a><span> for PC/AT keyboard input. These drivers wait for hardware input, generate events, and provide a map of keycodes to key symbols to the upper layer so that wskbd can operate in generic terms.</span></p></li></ol><p><span>The input architecture can handle other types of devices like mice and touch panels (both via </span><a href="https://man.netbsd.org/wsmouse.4" rel="">wsmouse(4)</a><span>), but I’m not going to cover those here. Just know that they sit under wsmux at the equivalent level of wskbd and produce a set of wsevents in the exact same manner as wskbd.</span></p><p>As you can sense from the overview, the whole architecture under wsdisplay is geared towards video devices… if it wasn’t for the vga driver: in the common case, wsdisplay is backed by a graphical framebuffer managed by vcons for text rendering, yet the user only sees a textual console. But if the kernel has direct access to the framebuffer, so should user-space too.</p><p><span>The details on how to do this click if you read through the operations described in the wsdisplay manual page. In particular, you may notice the </span><code>WSDISPLAYIO_GET_FBINFO</code><span> call which retrieves extended information about, you guessed it, a framebuffer display.</span></p><p><span>Let’s try it: I wrote a trivial program to open the display device (named </span><code>/dev/ttyE0</code><span> for reasons that escape me), call this function, and store the results in an </span><code>fbinfo</code><span> structure:</span></p><pre><code>// wsdisplay-fbinfo.c
// https://jmmv.dev/src/netbsd-graphics-wo-x11/wsdisplay-fbinfo.c

#include &lt;sys/param.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;dev/wscons/wsconsio.h&gt;

#include &lt;err.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;

int main(void) {
    // Open the main wsdisplay device.
    int fd = open("/dev/ttyE0", O_RDWR | O_NONBLOCK | O_EXCL);
    if (fd == -1)
        err(1, "open failed");

    // Query information about the framebuffer.
    struct wsdisplayio_fbinfo fbinfo;
    if (ioctl(fd, WSDISPLAYIO_GET_FBINFO, &amp;fbinfo) == -1)
        err(1, "ioctl failed");

    close(fd);
    exit(EXIT_SUCCESS);
}</code></pre><p><span>Hmm, but this program does not have any visible output, right? The code just queries the framebuffer information and does nothing with it. The reason is that the content of the </span><code>wsdisplayio_fbinfo</code><span> structure is large and I didn’t want to pretty-print it myself. I thought it’d be fun to show you how to use GDB to inspect large data structures and how to script the process. Here, look:</span></p><pre><code>gdb -q \
    -ex 'set print pretty on' \
    -ex 'break exit' \
    -ex 'run' \
    -ex 'frame 1' \
    -ex 'print fbinfo' \
    -ex 'cont' \
    -ex 'quit' \
    ./wsdisplay-fbinfo</code></pre><p><span>This call to GDB starts the sample program shown above and automates various GDB commands to set a breakpoint, step through the program, and pretty-print the </span><code>fbinfo</code><span> structure right before exiting. When we execute this command as root (which is important to get access to the </span><code>/dev/ttyE0</code><span> device), we get this:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png" width="1013" height="872" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:872,&quot;width&quot;:1013,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:96166,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1f0fed0f-d812-40d7-bf1a-5ad061a15d38_1013x872.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Content of the fbinfo structure as grabbed by the sample wsdisplay-fbinfo program and printed by GDB.</figcaption></figure></div><p><span>Neat. We get sensible stuff from the kernel! </span><code>fbi_width</code><span> is 640 and </span><code>fbi_height</code><span> is 480, which matches the 640x480 resolution I have configured in my test VM.</span></p><p>But note these other fields in the structure printed above:</p><pre><code>struct wsdisplayio_fbinfo {
    uint64_t fbi_fbsize;
    uint64_t fbi_fboffset;
    // ... more fields ...
}</code></pre><p><span>The </span><code>fbi_fbsize</code><span> and </span><code>fbi_fboffset</code><span> fields are </span><em>begging</em><span> us to use </span><code>mmap</code><span> to memory-map the area of the device starting at </span><code>fbi_fboffset</code><span> and spanning </span><code>fbi_fbsize</code><span> bytes. Presumably we can write to the framebuffer if we do this, but beforehand, we have to switch the console to “framebuffer mode” by using the </span><code>WSDISPLAYIO_SMODE</code><span> (“set mode”) call. This call accepts an integer to indicate which mode to set:</span></p><ul><li><p><code>WSDISPLAYIO_MODE_EMUL</code><span>: Set the display to emulating (text) mode. This is the default operation mode of wsdisplay and configures the console to “emulate” a text terminal.</span></p></li><li><p><code>WSDISPLAYIO_MODE_MAPPED</code><span>: Set the display to mapped (graphics) mode. This allows access to the framebuffer and allows the </span><code>mmap</code><span> operation to succeed.</span></p></li><li><p><code>WSDISPLAYIO_MODE_DUMBFB</code><span>: Set the display to mapped (framebuffer) mode. This is similar to </span><code>WSDISPLAYIO_MODE_MAPPED</code><span> and, for our purposes in the demo below, works the same. I haven’t found a concise description of how these two differ, but from my reading of the code, the “mapped” mode offers access to the framebuffer as well as device-specific control registers, whereas “dumb framebuffer” just exposes the framebuffer memory.</span></p></li></ul><p><span>In any case. Once we know that we have to switch the console device to a graphical mode before mapping the framebuffer, and having access to the pixel format described in the </span><code>fbinfo</code><span> structure… drawing something fun is just a few byte manipulation operations away:</span></p><pre><code>// wsdisplay-draw.c
// https://jmmv.dev/src/netbsd-graphics-wo-x11/wsdisplay-draw.c

#include &lt;sys/param.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/mman.h&gt;
#include &lt;dev/wscons/wsconsio.h&gt;

#include &lt;err.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;

int main(void) {
    // Open the main wsdisplay device.
    int fd = open("/dev/ttyE0", O_RDWR | O_NONBLOCK | O_EXCL);
    if (fd == -1)
        err(1, "open failed");

    // Query information about the framebuffer.
    struct wsdisplayio_fbinfo fbinfo;
    if (ioctl(fd, WSDISPLAYIO_GET_FBINFO, &amp;fbinfo) == -1)
        err(1, "ioctl failed");

    // Ensure the framebuffer aligns with the expectations of our demo
    // code below.
    if (fbinfo.fbi_bitsperpixel != 32)
        errx(1, "bitsperpixel not supported by this demo");
    if (fbinfo.fbi_pixeltype != WSFB_RGB)
        errx(1, "pixeltype not supported by this demo");

    // Configure the wsdisplay to enter "dumb framebuffer" mode.
    unsigned int mode = WSDISPLAYIO_MODE_DUMBFB;
    if (ioctl(fd, WSDISPLAYIO_SMODE, &amp;mode) == -1)
        err(1, "ioctl failed");

    // Map the framebuffer memory.  Must come after the SMODE ioctl.
    uint32_t *ptr = (uint32_t*)mmap(
        0, fbinfo.fbi_fbsize, PROT_READ | PROT_WRITE, MAP_SHARED,
        fd, fbinfo.fbi_fboffset);
    if (ptr == MAP_FAILED)
        err(1, "mmap failed");

    // Fill the screen multiple times with pixels of different
    // colors to render a simple animation.
    size_t pixels = fbinfo.fbi_fbsize / sizeof(uint32_t);
    int off = 0;
    for (int i = 0; i &lt; 100; i++) {
        int r = off; int g = off; int b = off;
        for (size_t i = 0; i &lt; pixels; i++) {
            r = (r + 1) % 255; g = (g + 2) % 255; b = (b + 3) % 255;
            ptr[i] = 0
                | (r &lt;&lt; fbinfo.fbi_subtype.fbi_rgbmasks.red_offset)
                | (g &lt;&lt; fbinfo.fbi_subtype.fbi_rgbmasks.green_offset)
                | (b &lt;&lt; fbinfo.fbi_subtype.fbi_rgbmasks.blue_offset);
        }
        off += 10;
        usleep(1);
    }

    // Configure the wsdisplay to enter "console emulation" mode.
    // In other words: return to the console.
    mode = WSDISPLAYIO_MODE_EMUL;
    if (ioctl(fd, WSDISPLAYIO_SMODE, &amp;mode) == -1) {
        err(1, "ioctl failed");
    }

    close(fd);
    return EXIT_SUCCESS;
}</code></pre><p>And if we run this:</p><p>Voila. We’ve got graphics without paying the X11 startup tax. Switching from the console to graphics is instantaneous, like in the good old mode 13h days.</p><p>Rendering graphics is just half of the puzzle when writing an interactive application though. The other half is handling input. And, for that, we have to turn to the wskbd device.</p><p><span>After we switch the console to mapped mode, keystrokes don’t go to </span><code>stdin</code><span> anymore. We have to write code to explicitly read from an attached keyboard, and we can do this via the </span><code>/dev/wskbd0</code><span> device representing the first attached keyboard.</span></p><p>Once we open the keyboard device for reading, wscons sends us its own representation of events known as wsevents. We can write a trivial program to read one key press:</p><pre><code>// wskbd-trivial.c
// https://jmmv.dev/src/netbsd-graphics-wo-x11/wskbd-trivial.c

#include &lt;sys/param.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;dev/wscons/wsconsio.h&gt;

#include &lt;err.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;

int main(int argc, char** argv) {
    // Open the main wskbd device.
    int fd = open("/dev/wskbd0", O_RDONLY);
    if (fd == -1)
        err(1, "open failed");

    // Wait for one key down press only.
    for (;;) {
        struct wscons_event ev;
        int ret = read(fd, &amp;ev, sizeof(ev));
        if (ret == -1)
            err(1, "read failed");

        if (ev.type == WSCONS_EVENT_KEY_DOWN) {
            printf("value: %d, char '%c'\n", ev.value, (char)ev.value);
            break;
        }
    }

    close(fd);
    return EXIT_SUCCESS;
}</code></pre><p><span>But… if we try to run it and press a key, say </span><code>k</code><span>, we might get:</span></p><pre><code># ./wskbd-trivial
value: 37, char '%'
# █</code></pre><p><span>Huh. We pressed </span><code>k</code><span> but the character we got is </span><code>%</code><span>. Not what we expected! Well, as it turns out, the “value” that wsevents report for key presses (37 in this case) is the raw keycode of the key. This is hardware-specific and needs to be translated to an actual symbol via a keymap.</span></p><p>One feature of wskbd is that it exposes the keymap as configured in the kernel so there is a single source of truth for the machine. We can query a portion of it with another program:</p><pre><code>// wskbd-map.c
// https://jmmv.dev/src/netbsd-graphics-wo-x11/wskbd-map.c

#include &lt;sys/param.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;dev/wscons/wsconsio.h&gt;
#include &lt;dev/wscons/wsksymdef.h&gt;

#include &lt;err.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;

int main(int argc, char** argv) {
    // Open the main wskbd device.
    int fd = open("/dev/wskbd0", O_RDONLY);
    if (fd == -1)
        err(1, "open failed");

    // Allocate space for the biggest possible keymap.
    struct wscons_keymap map[WSKBDIO_MAXMAPLEN];
    memset(map, 0, sizeof(struct wscons_keymap) * WSKBDIO_MAXMAPLEN);

    // Get the keymap from the device.
    struct wskbd_map_data data;
    data.maplen = WSKBDIO_MAXMAPLEN;
    data.map = map;
    if (ioctl(fd, WSKBDIO_GETMAP, &amp;data) == -1)
        err(1, "ioctl failed");

    // Dump keymap entries.
    printf("Keymap length: %u entries\n", data.maplen);
    for (size_t i = 0; i &lt; data.maplen; i++) {
        // Skip printing entries that are not for letters.
        if (map[i].command != KS_voidSymbol)
            continue;
        char normal = map[i].group1[0];
        char shifted = map[i].group1[1];
        if (normal &lt; 'a' || normal &gt; 'z')
            continue;

        printf("Keycode %zd: '%c', '%c'\n", i, normal, shifted);
    }

    close(fd);
    return EXIT_SUCCESS;
}</code></pre><p>And if we run it, we might get:</p><pre><code># ./wskbd-map
Keymap length: 222 entries
Keycode 16: 'q', 'Q'
Keycode 17: 'w', 'W'
Keycode 18: 'e', 'E'
Keycode 19: 'r', 'R'
Keycode 20: 't', 'T'
Keycode 21: 'y', 'Y'
Keycode 22: 'u', 'U'
Keycode 23: 'i', 'I'
Keycode 24: 'o', 'O'
Keycode 25: 'p', 'P'
Keycode 30: 'a', 'A'
Keycode 31: 's', 'S'
Keycode 32: 'd', 'D'
Keycode 33: 'f', 'F'
Keycode 34: 'g', 'G'
Keycode 35: 'h', 'H'
Keycode 36: 'j', 'J'
Keycode 37: 'k', 'K'
Keycode 38: 'l', 'L'
Keycode 44: 'z', 'Z'
Keycode 45: 'x', 'X'
Keycode 46: 'c', 'C'
Keycode 47: 'v', 'V'
Keycode 48: 'b', 'B'
Keycode 49: 'n', 'N'
Keycode 50: 'm', 'M'
# █</code></pre><p><span>This dump is telling us how keycodes map to symbols, both in “normal” and in shifted form. If we look up keycode 37, we indeed find the letter </span><code>k</code><span>. With this, it’s just an </span><a href="https://en.wikipedia.org/wiki/Small_matter_of_programming" rel="">SMOP</a><span> to come up with a program that parses the keymap as exposed by wskbd and converts keycodes to something useful.</span></p><p><span>This is all good and dandy, but what happens if the keyboard is not connected when you try to open </span><code>/dev/wskbd0</code><span>? (Spoiler: the </span><code>open</code><span> call fails.) Or what happens if your computer has more than one keyboard attached? (Spoiler: you can only read events from one.) This is where wsmux comes to the rescue—a device driver that multiplexes multiple input devices into one.</span></p><p><span>By default, the system reserves </span><code>/dev/wsmux0</code><span> as the multiplexer for all attached mice and </span><code>/dev/wsmux1</code><span> as the multiplexer for all attached keyboards. We can define our own too via the </span><a href="https://man.netbsd.org/wsmuxctl.8" rel="">wsmuxctl(8)</a><span> command line utility.</span></p><p><span>wsmux then supports “hot plugging”. You can then open a </span><code>/dev/wsmuxN</code><span> device even when there is no physical hardware attached, and whenever a peripheral is connected, it automatically becomes part of the mux. So, if we modify the program above to open </span><code>/dev/wsmux1</code><span> instead of </span><code>/dev/wskbd0</code><span>, the program will be resilient to missing keyboards and it’ll recognize multiple keyboards. Easy peasy!</span></p><p><span>You are now equipped with the basics to write graphical applications on a NetBSD system (and maybe OpenBSD too) without running X11. I know NetBSD may not be your jam, but it is a good choice for embedded projects due to its console architecture and other features like </span><a href="https://jmmv.dev/2024/12/netbsd-build-system.html" rel="">its build system</a><span>.</span></p><p><span>If the code above still seems mysterious, you can read the source code for the </span><a href="https://cvsweb.netbsd.org/bsdweb.cgi/xsrc/external/mit/xf86-video-wsfb/" rel="">xf86-video-wsfb</a><span> and </span><a href="https://cvsweb.netbsd.org/bsdweb.cgi/xsrc/external/mit/xf86-input-ws/" rel="">xf86-input-ws</a><span> drivers for X.org. The code is easy enough to read, although it is longer because it has to support all the bells and whistles of wsdisplay and wskbd. (I took shortcuts above by making various assumptions on pixel formats and the like.)</span></p><p>And, guess what, I am indeed working on an embedded project! A little dev box that can boot straight into EndBASIC with super-fast boot times and for which I couldn’t afford the X11 startup penalty.</p><p><span>Stay tuned. In the meantime, what will </span><em>YOU</em><span> build? For those of us in the U.S., there is a 3-day weekend ahead and this can be a good distraction. Have fun!</span></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Brood War Korean Translations (276 pts)]]></title>
            <link>https://blog.sourcedive.net/brood-war-korean-translations/</link>
            <guid>42740596</guid>
            <pubDate>Fri, 17 Jan 2025 17:15:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.sourcedive.net/brood-war-korean-translations/">https://blog.sourcedive.net/brood-war-korean-translations/</a>, See on <a href="https://news.ycombinator.com/item?id=42740596">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
            <p>As work slowed down during the last couple of weeks of 2024, I decided to redirect some of my energy to hobbies instead of work. One such hobby is StarCraft: Brood War (or BW for short), a classic, highly competitive RTS from '98 that still has an active community today.</p><p>Over those couple of weeks, I was able to make great progress in solving a decades-old problem in the BW community, using a mix of LLMs and free (gratis*) software.</p><h2 id="cultural-context">Cultural context</h2><p>Understanding the cultural context BW exists in is crucial to understand the rest of this post. High-level BW is – for all intents and purposes – a Korean game. The overwhelming majority of professional players, teams, and tournaments (as well as most of the passionate audience and community) are based in Korea, and have been for 20+ years. This is so ingrained in the BW culture that us members of the community who <em>are not </em>Korean call ourselves "foreigners," a slightly self-condescending term.</p><p>Similarly to chess, BW is a game of strategy with a long history of recorded games. As such, playing the game is only half the challenge; <em>studying</em> it just as important (especially at higher levels of play). For decades, the BW community (both Korean and foreigner) has watched and analyzed professional matches from years past and derived valuable strategic insights from them. </p><p><em>Note: given the nature of BW as a video game, much of the modern discourse takes place in videos and live streams published by professional BW players.</em></p><p>Continuing to use chess as an analogy, you might know that chess <em>openers</em> are collections of well-studied first moves for chess. The interactions between white-piece openers and black-piece openers have been analyzed for decades (centuries?), and their study is considered fundamental for beginner and intermediate chess players. </p><p>The only aspect of these <em>openers</em> you need to focus on for this post is how these openers <em>shape the language </em>used by the chess community. Terms like "Sicilian defense", and its "Najdork variation", "Dragon variation", or "Accelerated Dragon variation" are all community-developed names. None of these terms are written in the rules of chess. They are part of a <em>domain-specific</em> <em>language</em> the community itself has developed, condensing and communicating the aforementioned decades of study and analysis effectively.</p><p>This association of <em>language</em> and <em>history</em>, combined with the great divide between the Koreans and "foreigners," leads us to what is commonly called the Foreigner Knowledge problem.</p><h2 id="foreigner-knowledge-problem">Foreigner Knowledge problem</h2><p>Very few of members of the foreigner community are fluent in Korean. Foreigner access to Korean BW discourse is a contradicting concept: if you speak Korean fluently, you have no reason to be in the foreigner community, as it only has access to material that is strictly inferior and more limited. For this reason, Korean-speaking members in the foreigner community are <em>exceedingly rare.</em></p><p>In an effort to gain access to the Korean discourse, we have crowdfunded money to pay these (<em>acquiescing</em>) Korean-speaking foreigners to translate the subtitles of YouTube videos. Everyone involved knows the translation work is taxing and slow, and that the pay is objectively terrible. Nevertheless, this approach has afforded the community a few dozen videos a year to be translated.</p><p>As an alternative, we have relied on machine translation of text content instead. While machine translation tools like Google Translate are good at translating everyday sentences, they are ill-suited for <em>domain-specific language</em>s, as they are full of jargon to which the translation tool has not been exposed. To add insult to injury, translating such jargon literally is <em>actually counter-productive</em>.</p><p>To illustrate this, here's an excerpt of the subtitles from a Korean video tutorial, about the BW-equivalent of an <em>opener </em>(called a <em>build order</em>, or simply <em>build</em>):</p><blockquote>안녕하세요 오늘 강의해 드릴 내용은 12 안마당 빌드입니다. 12 안마당의 종류와 장단점들 그리고 빌드 오더를 간단하지만 자세하게 알려드리려고 합니다. 토스전에서는 가장 부유하게 시작하고 싶을 때 사용하는 빌드고요. 테란전에서는 12 안마당으로 할 수 있는 빌드가 여러가지가 있습니다. 그래서 가장 많이 사용하는 빌드들을 몇가지 알려드리려고 합니다. 첫 번째로 투에처리 빌드인데 12 안마당으로 시작하는 빌드입니다. 12 안마당 11 스포닝풀 10가스 이제 빠른 가스를 활용한 빌드인데요. 이 빌드는 투에처리 빌드를 하실때 3에처리를 빠르게 3가스 멀티에 가져가면서 플레이를 할 때 많이 사용을 하고요. 두번째로 12압 12풀 12가스 적당히 빠른 테크트리와 적당히 빠른 3에처리 빌드입니다. 12압 12가스 적당히 빠른 테크트리와 적당히 빠른 3에처리 빌드입니다. 이 빌드 같은 경우는 흔히들 말하는 안 3에처리라고 많이들 얘기를 하는데 뮤탈리스크도 빠르고 3에처리도 빠른 그런 빌드라고 생각하시면 되요. </blockquote><p>And here is the Google Translate version:</p><blockquote>Hello, today's lecture is about the 12 courtyard build. I will briefly but in detail explain the types, pros and cons of the 12 courtyard, and the build order. In the Toss match, it is the build used when you want to start the most affluently. In the Terran match, there are various builds that can be done with the 12 courtyard. So I will tell you about some of the most used builds. The first is the two-processing build, which starts with the 12 courtyard. 12 courtyard 11 spawning pool 10 gas Now, this is a build that utilizes fast gas. This build is often used when playing with the two-processing build while quickly bringing the 3-processing to the 3-gas multi. The second is the 12 pressure 12 pool 12 gas moderately fast tech tree and moderately fast 3-processing build. 12 pressure 12 gas moderately fast tech tree and moderately fast 3-processing build. In the case of this build, many people talk about it as a build that is fast at both Mutalisk and 3-point processing.</blockquote><p>You might be confused if you are not a BW player. Consider yourself lucky, because I promise you you'd be <em>flabbergasted </em>if you <em>did</em> play the game.</p><p>Anyone familiar with BW will tell you that translation's signal-to-noise ratio is over 9000. There are no "courtyards" in BW. "Starting off the most affluently" is an awkward and verbose way to say "this is an economic opener/build." <em>What the hell is a "3-point processing"?!</em></p><p>Sure, there are a few other recognizable... <em>utterances</em>, such as "Toss" (Protoss), "build", "fast gas", "moderately fast tech-tree" and "Terran" – but the overwhelming majority of it has been translated <em>literally</em> and is nothing but noise, destroying any context that might have redeemed those few recognizable bits.</p><p>The combination of poor automatic subtitles and literally-translated jargon has caused the Foreigner community to lag behind the Korean community <em>for decades</em>.</p><h2 id="the-new-translation-process">The new translation process</h2><p>This is what we are now able to achieve with my new machine translation process:</p><blockquote>Hello, today's lecture will cover the 12 Natural build. I’ll explain the types, pros, and cons of the 12 Natural build and provide a simple yet detailed build order. This build is used when you want to start the most economically against Protoss. Against Terran, there are multiple builds you can use with the 12 Natural. I’ll go over some of the most popular ones. The first one is the two-Hatchery build. Starting with the 12 Natural allows for the most economically strong opening. The 12 Natural goes with an 11 Spawning Pool and a 10 Gas. This is a build utilizing fast gas. It's often used to play with a quick third Hatchery and three gas expansions when doing the two-Hatchery build. The second is the 12 Hatch, 12 Pool, 12 Gas. It's a balanced build with a moderate tech tree and a moderately fast third Hatchery. First, I’ll briefly talk about a quick defense build strategy. Next, we’ll discuss how you can manage resources optimally for this setup and handle transitions smoothly. Though there are risks, it allows for a stable and dynamic approach in longer games. </blockquote><p>Even for non-players, the above translation should be much more reasonable than the previous Google Translate version. For BW players, it is immediately clear what the video is about. While this is by no means a <em>perfect</em> translation (there are improvements to be made, as will be noted in the footer of this post), the signal-to-noise ratio has been dramatically reduced.</p><p>Furthermore, in contrast to the previous pace of a few dozen videos a year, I ended up translating about 7 videos in a single day. As a single person. During my spare time.</p><p>The least I can say is: <em>from now on, this is the worst this will ever be!</em></p><h2 id="tech-stack">Tech stack</h2><p>The process is divided into two parts: <em>producing</em> subtitles, and <em>consuming</em> subtitles. The "production" part is aimed at members of the community who are up to date with the Korean content, and know which videos should be prioritized. The "consumption" part is aimed at everyone else who simply want to watch the translated videos.</p><h2 id="producing-subtitles">Producing subtitles</h2><h3 id="yt-dlp-openai-whisper">yt-dlp + OpenAI Whisper</h3><p>I initially used yt-dlp to download YouTube's automatic Korean subtitles to try and translate them. As shown above, though, they are useless. So instead of downloading the subtitles, I use yt-dlp to download the <em>audio track</em> of the videos.</p><p>With the audio tracks downloaded, I transcribed my own subtitles from them using Whisper. I am not sure why, but transcribing the Korean subtitles using AI (rather than whatever it is YouTube uses) provided much more clean and complete results. It also seems to do a better job of ignoring in-game sounds and other noise (such as mouse clicks).</p><p>When I first started developing this process, I was running Whisper locally, using ~10GB of VRAM. I quickly saw that this would be far too restrictive if I wanted to have others collaborators translating (install Python on Windows, create a venv, install CUDA, install git...). So, I decided to find an alternative.</p><h3 id="google-colab">Google Colab</h3><p>Whisper is installed through Python's pip, and Google Colab is not just a free Jupyter notebook service – it also offers <em>free GPU</em>s, which happen to have just enough VRAM to run Whisper!</p><p>Creating a notebook and sharing a parameterized, read-only version of it was an ideal distribution model for this kind of work. With a little documentation, it allowed non-technical people to run it effortlessly, no matter their hardware. Furthermore, I could update the notebook with features (aka bugs), and people would receive those updates automatically (ie. making it even more accessible, no git cloning, no constant downloads).</p><p>The notebook I created receives one parameter – the YouTube URL – and generates+downloads an SRT file in Korean.</p><p>All of this was neat, but I still hadn't done the fundamental work of translating from Korean to English.</p><h3 id="llms-and-the-slang-dictionary">LLMs and the slang dictionary</h3><p>To say that this entire project stands on the shoulders of giants would be an understatement.</p><p><strong>TeamLiquid</strong> (TL) is the longest, oldest foreigner (or at least, american) BW community. As it turns out, sometime around 15 years ago, one TL member called <strong>konadora </strong>created <a href="https://tl.net/forum/brood-war/93316-the-korean-terminology-thread?ref=blog.sourcedive.net" rel="noreferrer">a forum post</a> with a dictionary of "BW slang used by commentators." I copied the post into a simple markdown file, <strong><code>KoreanSlang.txt</code></strong>, and provided it to the modern era's favorite piece of technology: an LLM!</p><p>Despite the multiple (<em>and multiplying) </em>misuses of LLMs, this problem was fundamentally a language problem, which is a perfect use of LLMs.</p><p>Using this prompt:</p><blockquote>I will give you subtitles for you to translate from Korean to English, using the "KoreanSlang.txt" file for support. Always consider that the content you are translating exists within the context of Starcraft: Brood War. Feel free to adapt the translation, as clarity is more important than a literal translation. Always respect the timestamps and the file formatting, but feel free to correct duplicate subtitles or obvious mistakes. Short "translator notes" may be welcome if appropriate (embedded as subtitles). Do not add quotation marks if they were not present originally. Some of the subtitles may have some noise or errors; please replace them with "(unintelligible)" if you find them. Format the output as code (ie. surrounded by triple back-ticks) for easier copy-pasting.</blockquote><p>And a Pro (Premium? Plus? who knows) ChatGPT account, it was a simple matter of providing the Korean subtitles generated by Whisper, and asking it to translate its contents.</p><p>At first, I simply took translated subtitles, downloaded the corresponding video, and applied them using my local video player –  which meant that, once again, I had to figure out a way to make these subtitles <em>accessible</em> to others.</p><p><em>Note: No altruism or aspiration for good product design played a part in this. My ISP imposes a data cap, and charges me double if I ever exceed it – so downloading videos left and right was <u>not</u> an option! &gt;:(</em></p><h2 id="consuming-subtitles">Consuming subtitles</h2><p>A big consideration is that YouTube has its own subtitles feature, but only the video owner can set or update a video's subtitles. Wanting to avoid the whole <em>download</em>, <em>re-upload</em>, <em>set subtitle</em> work cycle, I decided to <a href="https://xkcd.com/1319/?ref=blog.sourcedive.net" rel="noreferrer">build a solution that was accessible and saved me time </a>(and bandwidth).</p><h3 id="tampermonkey">TamperMonkey</h3><p>I wrote a <a href="https://github.com/Gooseheaded/bwkt-client/raw/refs/heads/master/bwkt-client.user.js?ref=blog.sourcedive.net" rel="noreferrer">UserScript</a> that adds a button to YouTube videos, and downloads the corresponding translated subtitles if they exist. It is able to parse SRT and VTT files, and shows them in a tiny little container below the YouTube player.</p><p>It looks like a button straight from Web 1.0, and I love it. I call it the <strong>BWKT Client</strong>.</p><p>And, well... the mention of a Client implies the existence of a Server.</p><h3 id="pastebin">Pastebin</h3><p>Subtitles are fundamentally text files, and I needed a quick and easy way to share text files. <strong>Pastebin </strong>immediately came to mind as a potential candidate, if only for the proof-of-concept. It is simple to use, I have a premium account for it, and I did not (and still do not) expect traffic to be a concern in any way.</p><p><em>Note: there is nothing more permanent than a temporary solution.</em></p><h3 id="google-sheets-apps-script">Google Sheets + Apps Script</h3><p>All I need is two columns: <em>YouTube URL</em>, and <em>Subtitle URL</em> (and maybe a third column, <em>Language</em>, but that's for later). Using Google Sheets as a database is ideal for this use case, as it is extremely easy to manually inspect and update, and it is also trivial to share with others. </p><p>The cherry on top is Google's <strong>Apps Script</strong>, which is basically a JavaScript runtime that has first-party access to Google Workspace, which includes Google Sheets; and it has a <em>built-in web server</em> to boot!</p><p>It was literally a matter of writing <code>function doGet(req) { /* ... */ }</code> , which receives a YouTube video ID (the eleven-character identified at the end of https://youtube.com?v=XXXXXXXXXXX), and returns the corresponding pastebin URL.</p><h2 id="improvements">Improvements</h2><p>There are certainly improvements to be made. I still see this project as a hacked-together contraption <em>built over the course of two weeks</em>, with a budget of ~$30 USD (I paid for ChatGPT and more GPU time in Colab, neither of which are strictly required but were nice to have).</p><p>One such improvement is supporting multiple languages in the UserScript. After all, the Foreigner community comprises not just American players, but also Mexican, Polish, Romanian, Chinese, Taiwanese – there's dozens of languages that these videos could be translated to, and it would take only a small amount of effort to do.</p><p>There are technical improvements to be made as well. For example: right now, the BWKT Client shows the button below <em>every</em> YouTube video, even if subtitles are not available for that particular video. I could (should?) add another endpoint to the AppsScript web server that returns an index of translated videos, and then the extension could show/hide the button appropriately.</p><p>Note: Speaking of which, <a href="https://sites.google.com/view/bwkt/home?ref=blog.sourcedive.net" rel="noreferrer">here is the public-facing, read-only database</a>!</p><h2 id="shipping-it">Shipping it</h2><p>After all was said and done, I reached out to a few fellow BW enjoyers to put the subtitles to the test. The intention was to judge the quality of the translation process and to see if the subtitles worked well on YouTube. We hopped on a Voice Chat, I streamed my screen, and we started watching a 13-minute long video.</p><p>About 5 minutes in, I had to pause the video and take a step back. As it turns out, the group had been watching the video, and reading the subtitles, yes – but we also had been making comments among ourselves, replaying short clips from the video, pausing it to discuss... and in the middle of it all, we had forgotten what we were originally trying to do: evaluating the quality of the subtitles.</p><p>Needless to say, the subtitles passed the test. :)</p><h2 id="final-thoughts">Final thoughts</h2><p>One sneaky aspect of this project that worked well in my favor is that performance is not critical, nor is scale, or latency, or anything else that most software projects often deal with. Most of what I did was glue already-existing solutions together. </p><p>The custom business logic (the UserScript, and the Python code in the Colab notebook) is short, and effortlessly maintainable. The web server is the simplest production CRUD system ever, and I see no reason for it to ever grow in complexity in any significant way.</p><p>It's the jankiest project I have shipped, and I love it.</p>
        </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[French modernists were alarmed, inspired by newspaper's voracious dynamism (118 pts)]]></title>
            <link>https://aeon.co/essays/the-french-modernists-loathed-and-loved-the-mass-media-of-their-day</link>
            <guid>42739572</guid>
            <pubDate>Fri, 17 Jan 2025 16:21:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://aeon.co/essays/the-french-modernists-loathed-and-loved-the-mass-media-of-their-day">https://aeon.co/essays/the-french-modernists-loathed-and-loved-the-mass-media-of-their-day</a>, See on <a href="https://news.ycombinator.com/item?id=42739572">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>In the 1860s, Charles Baudelaire bemoaned what we might now call doomscrolling:</p>
<blockquote>Every newspaper, from the first line to the last, is nothing but a tissue of horrors. Wars, crimes, thefts, licentiousness, torture, crimes of princes, crimes of nations, individual crimes, an intoxicating spree of universal atrocity.</blockquote>
<blockquote>And it’s this disgusting aperitif that the civilised man consumes at breakfast each morning … I do not understand how a pure hand can touch a newspaper without a convulsion of disgust.</blockquote>
<p>The poet’s revulsion was widely shared in 19th-century France. Amid rapid increases in circulation, newspapers were depicted as a virus or narcotic responsible for collective neurosis, overexcitement and lowered productivity. Criminality was blamed on the suggestive effects of lurid crime reports. And many writers concluded that the newspaper would soon kill off the book and imaginative literature altogether.</p>
<figure><img alt="Sepia-toned portrait photo of a man in formal 19th-century attire with a neutral expression against a dark background." loading="lazy" width="800" height="1006" decoding="async" data-nimg="1" sizes="(max-width: 640px) 100vw, (max-width: 1440px) 60vw, 880px" srcset="https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=384&amp;quality=75&amp;format=auto 384w, https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=640&amp;quality=75&amp;format=auto 640w, https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=750&amp;quality=75&amp;format=auto 750w, https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=828&amp;quality=75&amp;format=auto 828w, https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=1080&amp;quality=75&amp;format=auto 1080w, https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=1200&amp;quality=75&amp;format=auto 1200w, https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=1920&amp;quality=75&amp;format=auto 1920w, https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=2048&amp;quality=75&amp;format=auto 2048w, https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=3840&amp;quality=75&amp;format=auto 3840w" src="https://images.aeonmedia.co/user_image_upload/3905/insert-v-a-baudelaire-2006au5025.jpg?width=3840&amp;quality=75&amp;format=auto"><figcaption><p><em>Portrait of Charles Baudelaire</em> (1862) by Étienne Carjat. Courtesy the <a href="https://collections.vam.ac.uk/item/O213852/portrait-of-charles-baudelaire-photograph-carjat-etienne/" target="_blank" rel="noreferrer noopener">V &amp; A Museum</a>, London</p></figcaption></figure>
<p>These dismal appraisals yielded a series of fiercely pessimistic novels of journalism by authors such as Honoré de Balzac, the Goncourt brothers and Guy de Maupassant. Each portrayed the press as a corrupt and corrupting behemoth that was devouring art and culture within its predatory maw. ‘Newspapers are an evil,’ as one world-weary author remarks in Balzac’s <em>Lost Illusions </em>(1837-43). Another describes newspaper offices as ‘whorehouses of thought’, anticipating the degradation of the hero, Lucien de Rubempré, from idealistic young poet to unscrupulous hack as he falls for a glamorous courtesan.</p>
<p>But French writers’ loathing of journalism was underlain by a fundamental tension: those who criticised the press most vehemently were themselves journalists, and their novels of journalism were typically published in the same newspapers they excoriated. Journalism and literature were so deeply entwined that newspapers became ‘the laboratory of <a href="https://www.jstor.org/stable/40534993" target="_blank" rel="noreferrer noopener">literature</a>’ throughout the long <span>19th century,</span> generating new literary forms, such as prose poetry and the serial novel.</p>
<p>Novels, short stories, poetry and criticism, along with much whimsical blather, filled up pages largely devoid of hard political news (due to extensive censorship) and proved an ideal means of attracting readers. Since books and theatre seldom earned a decent income, most writers reluctantly turned to the burgeoning marketplace of newspapers and magazines. That fraught relationship is summed up in a quip from Gustave Flaubert’s posthumously published compendium of contemporary fatuity, the <em>Dictionary of Received Ideas</em> (1910): ‘Newspapers – Can’t live without them, but thunder against.’ Writer-journalists such as Balzac and Maupassant railed against the world from whence they came.</p>
<p>Their fictional denunciations of journalistic skullduggery and philistinism were hardly without basis. For the French press was sustained by wholesale bribery. One leading editor even declared that he was not happy unless <em>every </em>line of his newspaper had been bought and paid for. Novels of journalism shed murky light on that otherwise hidden world of venality (which reporters and editorialists were naturally loath to confront).</p>
<p>But the repetitive, self-pitying trope, inaugurated by Balzac, equating journalism with prostitution itself obscured the complexities of literary-journalistic exchange. Newspapers were at once a meretricious medium and a forum for creative innovation. During the second half of the <span>19th century,</span> some modernist writers began to reckon with that duality, toning down the anti-journalistic thunder and taking a more nuanced and self-conscious approach to the rise of mass press. As we, in turn, struggle to come to terms with the tumultuous proliferation of new media, that spirit of ambivalent openness offers timely lessons. The French modernists show us how to carve out space for artistic expression within dominant media without being dominated by them.</p>
<p><span>D</span>espite fulminating against the sadistic intoxication dispensed by newspapers, Baudelaire was among the first to celebrate journalism’s artistic capacities. In an 1863 essay for <span><em>Le Figaro</em></span><span>,</span> then a biweekly literary newspaper and the ancestor of today’s conservative broadsheet, he delivered a rapturous ode to the newspaper sketch artist Constantin Guys, dubbing him ‘the painter of modern life’. For Baudelaire, Guys embodied a perpetually elusive, volatile feature of existence that the poet – reaching for a then-novel, usually pejorative term circulating in the press – called ‘modernity’.</p>
<p>Alternately described as ‘the eternal within the transitory’ and as ‘the transitory’ itself, modernity never acquires a consistent definition in Baudelaire’s essay. But amid that conceptual uncertainty, his enthusiasm for Guys’s endeavours stands out with resounding clarity. What inspired Baudelaire was not so much the formal qualities of Guys’s now largely forgotten illustrations of Parisian streetlife, fashionable clothing and the Crimean War as the intrepid hustle underlying them. Complementing his quasi-heretical salute to modernity, Baudelaire elevated the newspaperman above traditional studio artists, whom he dismissed as ‘hamlet brains’ chained to their palettes.</p>
<p>The newspaper is not just the conceptual crucible of modernity but also its most palpable metonym</p>
<p>His valorisation of journalism parallels his vacillations about modernity. For the medium of the newspaper is eternally caught up in a quest for an uncertain, ever-changing commodity – the news – that loses its novelty and value almost as soon as it is apprehended, whereupon the whole cycle begins again. Like Baudelaire’s painter of modern life, the whole journalistic enterprise is animated less by the goal of creating an enduring body of work than by the relentless dynamism of the process itself. And yet the newspaper also represents a locus of stability and collective identity that condenses the life of the city, the nation and the world into a few unbound pages. At once ephemeral and eternal, the newspaper is not just the conceptual crucible of modernity but also its most palpable metonym.</p>
<p>As Baudelaire’s modernist successors – who included Stéphane Mallarmé, Guillaume Apollinaire and Marcel Proust – found themselves caught up in the modern condition of constant impermanence, they, too, recognised that the press had become an inescapable feature of their world. Rather than seek an unobtainable refuge, these ‘hustlers in the ivory tower’ (as I have called them in a recent <a href="https://www.liverpooluniversitypress.co.uk/doi/book/10.3828/9781802074734" target="_blank" rel="noreferrer noopener">book</a>) duly struggled to harness that medium to their own creative and commercial ends.</p>
<p><span>U</span>nderlying that shift towards a more flexible aesthetic outlook was the continuing expansion of ‘newspaper <a href="https://www.nouveau-monde.net/catalogue/la-civilisation-du-journal/" target="_blank" rel="noreferrer noopener">civilisation</a>’, which reached its apogee under the Third Republic that was founded in 1870 amid humiliating defeat in the Franco-Prussian War. The abolition of most forms of censorship, declining paper costs, railway expansion and universal primary education triggered a newspaper boom that saw total daily circulation rise from around <span>1.5 million</span> in 1870 to nearly <span>10 million</span> by 1914. What had been a relatively expensive item, mostly consumed by a metropolitan elite, became a massified industrial product, as cheap and ubiquitous as bread and wine, that penetrated every aspect of political and cultural life.</p>
<p>With the elimination of restrictions on news reporting, many writers now became alarmed that a new, Americanised, information-driven journalistic culture was driving them out of the press. In 1886, Mallarmé lamented that writing was being swallowed up by the crude, utilitarian rhythms of ‘universal <em>reportage</em>’, which he portrayed as the antithesis of literature. Mallarmé was, in turn, frequently ridiculed in the press for the obscurity of his work, which departs from semantic and syntactical convention to create dream-like musical and painterly effects. For the poet’s young acolytes – loosely known as Symbolists – that opposition became an article of faith. Following Mallarmé’s death in 1898, one of them, Charles Morice, commemorated his mentor as a paragon of artistic purity who had ‘always refused to participate in that cold, hard lie, the so-called literary newspaper’.</p>
<p>That image of austere detachment from literary-journalistic commerce is belied by Mallarmé’s extensive involvement with the press. In 1874, he founded and edited a short-lived fashion magazine, writing all the articles himself under a variety of pseudonyms. And despite his later broadside against ‘universal <em>reportage</em>’, the poet went on to publish work in daily newspapers. He also portrayed the newspaper as the site of a nascent poetic revolution – the ‘modern popular Poem’ – that would be embraced by a vastly expanded reading public in an atmosphere of festive, democratic celebration.</p>
<p>The scattered layout also points to Mallarmé’s fascination with newspaper typography</p>
<p>The ‘modern popular Poem’ formed part of a broader vision of literary-journalistic hybridity that would bring together newspaper and book, combining the most dynamic properties of both media within a new form. Mallarmé projected that this mysterious ‘Book’ or ‘Great Work’ would form the basis for a new civic religion grounded in poetry that would fill the spiritual vacuum he perceived at the heart of the Third Republic. Though he never brought that utopian and doubtless unrealisable endeavour to completion, Mallarmé’s final masterpiece, <span><em>A Throw</em></span><em> of the Dice Never Will Abolish Chance </em>(1897), offers a glimpse of his transcendent ambitions.</p>
<figure><img alt="Two pages of a poem titled “Un Coup de Dés” by Mallarmé, text is artistically arranged in staggered lines with lots of negative space" loading="lazy" width="800" height="600" decoding="async" data-nimg="1" sizes="(max-width: 640px) 100vw, (max-width: 1440px) 60vw, 880px" srcset="https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=384&amp;quality=75&amp;format=auto 384w, https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=640&amp;quality=75&amp;format=auto 640w, https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=750&amp;quality=75&amp;format=auto 750w, https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=828&amp;quality=75&amp;format=auto 828w, https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=1080&amp;quality=75&amp;format=auto 1080w, https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=1200&amp;quality=75&amp;format=auto 1200w, https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=1920&amp;quality=75&amp;format=auto 1920w, https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=2048&amp;quality=75&amp;format=auto 2048w, https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=3840&amp;quality=75&amp;format=auto 3840w" src="https://images.aeonmedia.co/user_image_upload/3903/insert-mallarme.jpg?width=3840&amp;quality=75&amp;format=auto"><figcaption><p>Pages from <em>Un coup de dés jamais n’abolira le hasard </em>(<em>A Throw of the Dice Never Will Abolish Chance</em>), by Stéphane Mallarmé, in the May 1897 issue of the magazine <em>Cosmopolis</em>. Courtesy the BnF, Paris</p></figcaption></figure>
<p>With its elegant textual gradations sweeping across the pages, the poem has the feel of an abstract painting or a musical score. The scattered layout, in which some words are printed in large, bold type, also points to Mallarmé’s fascination with newspaper typography. Like the front page of a newspaper that compels us to pay attention to crises and disasters, <span><em>A Throw</em></span><em> of the Dice </em>is haunted by a sense of swirling upheaval. And its central motif – a shipwreck (‘<em>naufrage</em>’) – could be a piece of news-in-brief, an otherwise minor slice of ‘universal <em>reportage</em>’ that acquires richly enigmatic metaphorical significance when embedded within the cosmic drama of the poem. What had been wrecked was the cohesion of literary culture in the face of newspaper civilisation. Mallarmé’s response was to unite high art with a devalued product of mass culture, thereby making a seminal contribution to what was later dubbed ‘intermediality’.</p>
<p>The poem’s genesis exemplified that aesthetic outlook. <span><em>A Throw</em></span><em> of the Dice </em>was published – for the first and only time during the author’s lifetime – in the <span>May 1897</span> edition of <em>Cosmopolis</em>, a large-circulation, commercially oriented magazine that had solicited his contribution, offering the tidy sum of <span>40 francs</span> per page of verse (around $200 in today’s money). It seems probable that the poem had not been written (or at the very least completed) prior to Mallarmé receiving the magazine’s proposal. His single most esoteric and revolutionary work was forged through a lucrative transaction with the mass press.</p>
<p>Mallarmé was also a nimble self-publicist, always ready with a lapidary phrase for interviewers while maintaining a Delphic aura. Asked for his reaction to a bomb attack on the Chamber of Deputies, he offered a single line: ‘I know of no other bomb, than a book.’ In 1894, after publishing a front-page article in <span><em>Le Figaro</em></span><em> </em>advocating public subsidy for writers, Mallarmé encouraged his acolyte Morice to undertake a survey of other authors on the subject for the same newspaper, further boosting his profile. That discreetly cultivated fame was confirmed two years later when <span><em>Le Figaro</em></span><span>,</span> by then a leading political and cultural daily, celebrated his election as ‘prince of poets’ (following a survey of his peers conducted by the literary magazine <span><em>La Plume</em></span><span>).</span></p>
<p><span>W</span>hile Mallarmé’s vision of literary-journalistic hybridity found few echoes in the work of his Symbolist followers, the later poets clustered around Apollinaire embraced an aesthetic of playful intermediality that owed much to the precedent of <span><em>A Throw</em></span><em> of the Dice</em>. Apollinaire set the tone in the provocative, kaleidoscopic overture of his poem ‘Zone’ (1912):</p>
<blockquote>
<em>Tu lis les prospectus les catalogues les affiches qui chantent tout haut</em><br><em>Voilà la poésie ce matin et pour la prose il y a les journaux</em><br><em>Il y a les livraisons à 25 centimes pleines d’aventures policières</em><br><em>Portraits des grands hommes et mille titres divers</em> </blockquote>
<blockquote>[You read the handbills catalogues posters that sing out loud<br>That’s poetry this morning and for prose there’s the newspapers<br>There are five-penny serials full of crime and adventure<br>Pictures of great men and a thousand sundry headlines]</blockquote>
<p>Even if poetry is identified here with advertising rather than newspapers, the image of a Parisian newspaper kiosk with its riot of competing headlines and illustrations adds a splash of journalistic colour to the poem itself. Like newspaper headlines, ‘Zone’ is devoid of punctuation. Apollinaire’s free verse thereby assimilates the visual immediacy of newspaper typography. Yet that burst of innovation is balanced by frequent use of the ‘noble’ classical metre of the 12-syllable alexandrine. Mallarmé similarly abandoned conventional versification in <span><em>A Throw</em></span><em> of the Dice</em> while discreetly <a href="https://global.oup.com/academic/product/unfolding-mallarm-9780198159179?cc=us&amp;lang=en&amp;" target="_blank" rel="noreferrer noopener">structuring</a> his poem around the denominator 12. As Jean-Paul Sartre once quipped of Baudelaire, both Mallarmé and Apollinaire were moving forward while looking in the rear-view mirror.</p>
<p>Apollinaire continually found inspiration in the rough-and-tumble of newspaper civilisation</p>
<p>Apollinaire would continue to navigate between past and present in his later visual poetry, where the text is arranged in patterns forming an image and combined with iconography culled from other media. Among these so-called calligrammes is ‘Voyage’ (1914), which transports the mythical-religious allegory of Dante’s <em>Inferno</em> into the era of the railway, newspaper civilisation and mass communications. Alongside a chain of free verse in the shape of a steam train, the poem includes a graphic of a telegraph pole that Apollinaire had taken from the masthead of the newspaper <em>Le Matin</em>, much as his friends Georges Braque and Pablo Picasso used strips cut from newspapers in their <em>papiers collés</em>. For all three, the newspaper’s raw facticity and ubiquity made it an indispensable symbol of modernity.</p>
<figure><img alt="Double page spread of a Dadaist poem with scattered text in irregular patterns, resembling a steam train." loading="lazy" width="822" height="631" decoding="async" data-nimg="1" sizes="(max-width: 640px) 100vw, (max-width: 1440px) 60vw, 880px" srcset="https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=384&amp;quality=75&amp;format=auto 384w, https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=640&amp;quality=75&amp;format=auto 640w, https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=750&amp;quality=75&amp;format=auto 750w, https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=828&amp;quality=75&amp;format=auto 828w, https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=1080&amp;quality=75&amp;format=auto 1080w, https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=1200&amp;quality=75&amp;format=auto 1200w, https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=1920&amp;quality=75&amp;format=auto 1920w, https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=2048&amp;quality=75&amp;format=auto 2048w, https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=3840&amp;quality=75&amp;format=auto 3840w" src="https://images.aeonmedia.co/user_image_upload/3904/insert-guillaume-apollinaire_-_voyage.jpg?width=3840&amp;quality=75&amp;format=auto"><figcaption><p>‘Voyage’, by Guillaume Apollinaire, in the July-August 1914 issue of the magazine <em>Les Soirées de Paris</em>. Courtesy the BnF, Paris.</p></figcaption></figure>
<p>Underlying the striking intermedial collage of ‘Voyage’ was Apollinaire’s own journalism. For, as an art critic, he had become the leading defender of Cubism, a concept he helped define and popularise. His enthusiasm for modernist art even got him sacked from one reactionary newspaper. Such misadventures were typical of Apollinaire’s journalistic career, which saw him bounce from one publication to another, get caught up in a series of public feuds, and churn out countless stock-market reports while earning little more than $1,000 per month in today’s money. His activities as an art critic even led to the poet being imprisoned under suspicion of having stolen the <em>Mona Lisa</em>. Yet Apollinaire continually found inspiration in the rough-and-tumble of newspaper civilisation, transforming the detritus of his journalistic life into an oeuvre whose boisterous éclat recalls Mallarmé’s joyous vision of the ‘modern popular Poem’.</p>
<p><span>P</span>roust, who benefitted from substantial inherited wealth, never had to scratch out a living from journalism. He, too, nonetheless frequently wrote for the press during the early phase of his career. Proust then reused material from these articles in his multivolume novel, <span><em>In Search</em></span><em> of Lost Time </em>(1913-27), where culture, politics, society gossip and war are all mediated through newspapers, which the characters read and discuss obsessively.</p>
<p>The centrality of journalism to that semi-autobiographical portrait of the writer as an unfocused young man can be gauged from the fact that the sole piece of writing visibly completed by Proust’s Narrator is a newspaper article. Early in the novel, he jots down a description of some church steeples, which was adapted from an article about an automobile journey across Normandy that Proust had published on the front page of <span><em>Le Figaro</em></span> in <span>November 1907</span> (to coincide with the Paris Motor Show). Having submitted this ‘little fragment’ to the same newspaper, <span><em>Le Figaro</em></span><span>,</span> the Narrator then repeatedly scours its pages in frustration, searching for an article that seems destined never to see the light of day, until one morning – some 2,000 pages later – his mother brings him his post, including <span><em>Le Figaro</em></span><span>,</span><em> </em>which has finally published his article.</p>
<p>Initial excitement gives way to disillusionment as the Narrator meditates on the tensions between journalism and literature. While offering a qualified salute to journalistic ‘beauty’, he ultimately disavows journalistic publication because it is too dependent on the approbation of its readers, and therefore in conflict with the principle of art for art’s sake. That realisation helps to catalyse the Narrator’s artistic vocation, leading him to vow to write a work that will recover lost time, not for the sake of pleasing others, but to understand the self.</p>
<p>Unappreciative critics would get aggrieved letters from Proust, sometimes with invitations to dinner at the Ritz</p>
<p>Even as he disclaimed journalism, Proust drew attention to how that devalued medium had shaped his writing and accepted his ties to the press as a fundamental part of the fabric of his work and self. He both used the press as a literary laboratory and made those genetic connections to the press a central theme of his novel. Predecessors such as Balzac and Maupassant had, by contrast, passed over their own creative debts to journalism as they heaped anathema on the ‘whorehouse of thought’. After a century of evasion and resentment, Proust finally settled accounts by at once acknowledging and resisting the aesthetic hold of newspaper civilisation.</p>
<p>Like Mallarmé and Apollinaire, Proust also proved adept at exploiting the promotional power of the press. In collaboration with his publishers, he orchestrated extensive publicity campaigns on behalf of his books, using his contacts to obtain favourable reviews. Unappreciative critics would receive aggrieved letters from the author, sometimes accompanied by invitations to dinner at the Ritz (belying his hermitic reputation, Proust maintained an active social life until his death from pneumonia in 1922 at the age of 51). Proust even bribed newspapers to publish unsigned, self-authored puff pieces.</p>
<p>Flaubert had declared that artists should seal themselves off from worldly preoccupations:</p>
<blockquote>One must, leaving aside material things and independently of humanity, which rejects us, live for one’s vocation, climb into one’s ivory tower and remain there, like a bayadere enveloped in her incense, alone amidst our dreams.</blockquote>
<p>His successors shared his commitment to maintaining the ivory tower of artistic independence. But Mallarmé, Apollinaire and Proust did not heed Flaubert’s call to retreat into splendid isolation. Rather, they hustled to create an audience for their work and brought the dynamism of newspaper civilisation into the ivory tower itself.</p>
<p><span>W</span>hat would it mean to be a hustler in the ivory tower today? The internet and its associated gadgets stir reactions remarkably like those once directed at the press. In some quarters, futurist technophilia; more commonly, alarm at the social, political and cultural impact of these innovations, combined with neurotic dependence upon them. If Flaubert were writing his <em>Dictionary of Received Ideas </em>today, ‘Can’t live without it, but thunder against’ could very well be the entry for ‘iPhone’. The challenge for writers as well as readers remains that of trying to come to terms with destabilising media without being dominated by them. How, in other words, can imaginative literature navigate an ocean of online text and exploit the creative potential of digital technologies?</p>
<p>Contemporary writers who have wrestled with versions of this question might be divided into two camps: ironic traditionalists and digital modernists. The former make the chaos of the digital era into a central theme of their writing while remaining loyal to the codex and the classic form of the comic novel. The latter write works of electronic or digital literature that are designed to be read on screens, incorporate interactive features (most commonly hypertext) and often defy conventional categorisation.</p>
<p>Ironic traditionalists include Gary Shteyngart, Patricia Lockwood and Lauren Oyler, who have all authored ‘internet novels’ that at once epitomise and deplore the frantic, degenerative rhythms of lives lived extremely online. Wholly or partly written in parodies of fragmented internet language, these fictional journeys into the depths of digital civilisation are characterised by searing albeit jocular pessimism about the possibility of generating any spark of enlightenment within that abyss. In Shteyngart’s techtopian allegory, <em>Super Sad True Love Story</em> (2010), and in Lockwood’s portrait of internet addiction, <em>No One Is Talking About This</em> (2021), redemption can be achieved only offline – respectively by reading ‘bound, printed, nonstreaming Media artifact[s]’ and by taking responsibility for the suffering of others. Oyler’s caustic bildungsroman of Brooklyn and Berlin literati, <em>Fake Accounts </em>(2021), similarly suggests that inventing a persona in real life can provide a creative antidote to the toxicity of online deception. All three depict digital media as an unsalvageable wasteland and invite us to tear ourselves away from our screens. Notwithstanding its antic, self-aware flourishes, the internet novel is pervaded by the same sense of moral nostalgia that we find in 19th-century novels of journalism such as Balzac’s <em>Lost Illusions</em>.</p>
<p>Tying a piece of writing to a phone makes it hostage to the relentless distractions of any networked device</p>
<p>Digital modernists – operating in the spirit of Kranzberg’s first law of technology, which states it is neither good nor bad; nor is it neutral – conversely approach digital media as a forum for playful experimentation. Just as earlier modernists adopted techniques from journalism and visual art, these authors use digital media, as Jessica Pressman puts it in <em>Digital Modernism</em> (2014), ‘to reform and refashion older literary practices in ways that produce new art’. Recent examples include Joanna Walsh’s <em>Seed </em>(2017), a coming-of-age story structured around a series of non-linear ‘vines’ that we navigate on our screens, and Kate Pullinger’s <em>Breathe </em>(2018), which merges data harvested from the reader’s phone into a classic ghost story, an eerie device that provides an oblique commentary on online surveillance. But the laconic, mysterious tone of such works is far removed from the all-encompassing technopessimism of the internet novel. In contrast to ironic traditionalists, digital modernists tend to resist Big Tech without rejecting its innovations. Both <em>Seed </em>and <em>Breathe </em>are published by an offshoot of Google’s Creative Lab, Editions at Play, which proclaims that these books are ‘powered by the magic of the internet’.</p>
<p>The instability of that ‘magic’ creates a long-term problem of technical autonomy. Many early works of digital literature from the 1980s and ’90s, composed using now-obsolete operating systems, have effectively become inaccessible. Tying a piece of writing to a computer or phone also makes it hostage to the relentless distractions of any networked device – a vastly more intrusive medium than the 19th-century newspaper. The terseness of <em>Breathe</em>, which can be read in under half an hour, renders that problem less acute. But it is hard to see how longer works of digital literature can overcome the steep barriers to immersive deep reading currently inherent within the form.</p>
<p>It might be tempting to conclude that the traditional book simply remains a superior and unimprovable medium. The basic form of the codex – bound, ink-covered pages – has proved remarkably resilient for two millennia. Despite the proliferation of <a href="https://aeon.co/essays/stagnant-and-dull-can-digital-books-ever-replace-print" target="_blank" rel="noopener">e-readers</a> and other digital supports, print continues to account for the overwhelming majority of book sales.</p>
<p>That picture is complicated by abundant evidence that reading is a declining pastime, especially among the young. According to the American Time Use Survey, Americans aged over 15 spent, on <a href="https://www.statista.com/chart/27287/average-hours-spent-per-day-by-americans-reading-for-pleasure/" target="_blank" rel="noreferrer noopener">average</a>, a mere 16 minutes per day reading for pleasure in 2022, down from 23 minutes in 2004. More than a third of UK adults <a href="https://readingagency.org.uk/adult-reading-research-report-2024/" target="_blank" rel="noreferrer noopener">report</a> having stopped reading for pleasure, with a quarter of these ‘lapsed readers’ citing social media as a reason for having abandoned books. Sales of literary fiction in the UK have also plummeted since the late 2000s, in tandem with the growth of smartphone use.<sup> </sup>We may be consuming and indeed producing more text than ever before, but the aesthetic dimension of that experience has atrophied.</p>
<p>Books, as Maël Renouard puts it in <em>Fragments of an Infinite Memory</em> (2021), could well end up like horses, as ‘objects of aesthetic worship’ for a residual cultivated elite.</p>
<p><span>T</span>o check the book’s decline into genteel desuetude, we should consider drawing inspiration from the unfinished intermedial ambitions of French modernism to reimagine the form of the object itself. Faced with the rise of the newspaper, Mallarmé sought to integrate its voracious popular energy within the stable, harmonising medium of the book. In his poetry and that of his successors, that project was in practice focused on the form of the text – thence the visual echoes of newspaper headlines in <span><em>A Throw</em></span><em> of the Dice </em>and the journalistic iconography found in Apollinaire’s calligrammes – rather than its underlying material support. Mallarmé envisioned a more extensive physical hybrid of book and newspaper. But it is, in truth, difficult to imagine how those two objects could be amalgamated into an aesthetically cohesive form.</p>
<p>Digital technology, by contrast, offers the potential for a genuine material transformation of the codex. Rather than viewing print and digital media as irreconcilable rivals, we could explore how they might be combined within new hybrid forms devised in the spirit of Mallarmé’s vision.</p>
<p>The starting point for that endeavour should be an appreciation of the codex’s enduring technological attributes. Print is not just a more aesthetically pleasing medium. Because printed books and periodicals organise text within physical space, they also have a more efficient and memorable interface. Flipping through pages is a simpler, faster and more intuitive than scrolling down a screen. And yet, throughout the internet era, innovation has been a one-way street that runs from page to screen, transforming information from analogue into digital form and thereby sacrificing the advantages of the codex – durability, beauty, flexibility, enhanced concentration – for the sake of convenience and miniaturisation.</p>
<p>Writers could sublimate the discombobulating modernity of the <span>internet age</span></p>
<p>Why not preserve those virtues within an enhanced or (in Renouard’s phrase) ‘augmented’ book that imports digital technology into the codex itself? In the mid-2000s, the Greek engineer Manolis Kelaidis developed prototypes of a networked book – originally called the blueBook – that use conductive ink to create hyperlinks allowing users to access digital content on other devices by touching the pages.<sup> </sup>Advances in printed electronics have since expanded the concept’s technical possibilities. An autonomous digitally enhanced codex could incorporate <a href="https://aeon.co/essays/when-ai-summaries-replace-hyperlinks-thought-itself-is-flattened" target="_blank" rel="noopener">hyperlinks</a> that activate built-in micro-speakers and light up parts of the text. Other conceivable features include the ability to trigger shifting colour patterns and perhaps even moving images on the pages.</p>
<p>Such innovations would provide those who now seem lost to the dopamine-addled ‘<a href="https://theindigopress.com/product/the-twittering-machine-paperback/" target="_blank" rel="noreferrer noopener">Twittering Machine</a>’ with a compelling enticement to put down their phones and enter a new fictional universe that incorporates some digital stimuli while distancing them from the neurotic distractions of the online world. And all this could be done using a sustainable, recyclable material: paper.</p>
<p>The prospect of paper-based augmented books also holds out the possibility of revolutionary combinations of text, image and sound that would recast the boundaries of literary art. The innovative thrust of digital modernism could be redirected towards reimagining literature’s original medium, one more hospitable than screen-based digital media to extended works of fiction and poetry and less dependent on the fickle hold of Big Tech. By combining the analogue with the digital, writers could sublimate the discombobulating modernity of the internet age into a material framework rooted in cultural antiquity, just as the French modernists channelled journalism’s unruly dynamism into the traditional structures of poetry and the novel.</p>
<p>‘Everything,’ wrote Mallarmé, ‘exists to end up as a book.’ The book itself should be opened up to the disorientating technologies that increasingly make up our world.</p>
<p><em>With thanks to Manolis Kelaidis for a conversation about his designs and to Maya Kulukundis for introducing me to his work.</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: GUI for editing Mermaid class diagrams (186 pts)]]></title>
            <link>https://docs.mermaidchart.com/blog/posts/gui-for-editing-mermaid-class-diagrams</link>
            <guid>42738656</guid>
            <pubDate>Fri, 17 Jan 2025 15:36:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://docs.mermaidchart.com/blog/posts/gui-for-editing-mermaid-class-diagrams">https://docs.mermaidchart.com/blog/posts/gui-for-editing-mermaid-class-diagrams</a>, See on <a href="https://news.ycombinator.com/item?id=42738656">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">   <main id="page-content">     <div>  <p><span><time datetime="postDate">17 January 2025</time></span> <span data-svelte-h="svelte-155f0sa">•</span> <span>5 mins</span></p>  <!-- HTML_TAG_START -->
<h3 id="enhancing-mermaid-class-diagrams-with-the-new-visual-editor-features">Editing Mermaid Class Diagrams with the Visual Editor</h3>



<p>Mermaid charts are widely used for their ability to represent complex diagrams quickly, and now, thanks to a new update, editing&nbsp;<strong>Mermaid Class Diagrams</strong>&nbsp;has become even easier and more intuitive. The latest feature extends the&nbsp;<strong>Visual Editor</strong>&nbsp;to support direct interaction with class diagrams, offering users a variety of tools to enhance their diagramming experience.</p>



<p>In this blog post, we’ll walk you through the new features in the&nbsp;<strong>Mermaid Visual Editor</strong>, how to use them, and what changes have been made to streamline editing class diagrams. Let’s dive in!</p>



<h3 id="what-are-class-diagrams"><strong>What Are Class Diagrams?</strong></h3>



<p>Class diagrams are a type of&nbsp;<strong>UML (Unified Modeling Language)</strong>&nbsp;diagram used to model the structure of a system by showing its classes, attributes, methods, and the relationships between objects. They are a fundamental tool in object-oriented design and help visualize how different parts of a system interact with each other.</p>



<p>In a class diagram:</p>



<ul>
<li><strong>Classes</strong>&nbsp;represent entities, such as objects or concepts.</li>



<li><strong>Attributes</strong>&nbsp;are the properties or characteristics of classes.</li>



<li><strong>Methods</strong>&nbsp;are the actions or operations that a class can perform.</li>



<li><strong>Relationships</strong>&nbsp;(e.g., associations, inheritance) show how classes are connected or interact.</li>
</ul>



<p>Here’s an example of a&nbsp;<strong>basic Mermaid class diagram</strong>&nbsp;when rendered by Mermaid:</p>



<figure><img data-recalc-dims="1" loading="lazy" decoding="async" width="1024" height="805" data-attachment-id="1850" data-permalink="https://content.mermaidchart.com/2025/01/17/gui-for-editing-mermaid-class-diagrams/pasted-image-20250117132843/" data-orig-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?fit=1534%2C1206&amp;ssl=1" data-orig-size="1534,1206" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Pasted image 20250117132843" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?fit=300%2C236&amp;ssl=1" data-large-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?fit=1024%2C805&amp;ssl=1" src="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?resize=1024%2C805&amp;ssl=1" alt="" srcset="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?resize=1024%2C805&amp;ssl=1 1024w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?resize=300%2C236&amp;ssl=1 300w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?resize=768%2C604&amp;ssl=1 768w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?resize=1200%2C943&amp;ssl=1 1200w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117132843.png?w=1534&amp;ssl=1 1534w" sizes="auto, (max-width: 1000px) 100vw, 1000px"><figcaption>Basic Mermaid Class Diagram</figcaption></figure>



<p>This is the code that generated the diagram:</p>



<pre><code><code>classDiagram
    ClassA &lt;|-- ClassB
    ClassB : +String name
    ClassB : +int age
    ClassB : +void displayDetails()
    ClassC o-- ClassB
    ClassC : +String description</code></code></pre>



<p>Looking at the code, you can see how it represents the diagram:</p>



<ul>
<li><strong>ClassA</strong>&nbsp;is a parent of&nbsp;<strong>ClassB</strong>, indicated by&nbsp;<code>&lt;|--</code>.</li>



<li><strong>ClassB</strong>&nbsp;has two attributes (<code>name</code>&nbsp;and&nbsp;<code>age</code>) and one method (<code>displayDetails()</code>).</li>



<li><strong>ClassC</strong>&nbsp;has an&nbsp;<strong>association</strong>&nbsp;(denoted by&nbsp;<code>o--</code>) with&nbsp;<strong>ClassB</strong>&nbsp;and an attribute&nbsp;<code>description</code>.</li>
</ul>



<p>Previously, creating or editing such diagrams would require manually writing or modifying the Mermaid syntax. Now, with the new&nbsp;<strong>Visual Editor</strong>, you can easily create and update these diagrams with just a few clicks.</p>



<h3 id="new-visual-editor-tools-for-class-diagrams"><strong>New Visual Editor Tools for Class Diagrams</strong></h3>



<p>The&nbsp;<strong>Visual Editor Toolbar</strong>&nbsp;introduces several new tools for class diagrams:</p>



<ul>
<li><strong>Change Diagram Rendering Direction</strong>: Adjust the diagram’s layout, whether it’s top-down, left-right, etc.</li>



<li><strong>Add New Classes</strong>: Easily add new classes to the diagram.</li>



<li><strong>Add Titles and Notes</strong>: Add a title to the diagram or insert notes not linked to specific classes.</li>



<li><strong>Add Empty Namespaces</strong>: Define a placeholder for classes that belong to a specific namespace.</li>



<li><strong>Update Diagram Configuration</strong>: Toggle options like the visibility of the&nbsp;<strong>“empty members box”</strong>&nbsp;for a cleaner look.</li>



<li><strong>Change Theme and Layout</strong>: Select from various themes and adjust the look and feel of the diagram for better presentation.</li>
</ul>



<figure><img data-recalc-dims="1" loading="lazy" decoding="async" width="1621" height="870" data-attachment-id="1869" data-permalink="https://content.mermaidchart.com/2025/01/17/gui-for-editing-mermaid-class-diagrams/pasted-image-20250117133806/" data-orig-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?fit=1621%2C870&amp;ssl=1" data-orig-size="1621,870" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Pasted image 20250117133806" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?fit=300%2C161&amp;ssl=1" data-large-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?fit=1024%2C550&amp;ssl=1" src="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?resize=1621%2C870&amp;ssl=1" alt="" srcset="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?w=1621&amp;ssl=1 1621w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?resize=300%2C161&amp;ssl=1 300w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?resize=1024%2C550&amp;ssl=1 1024w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?resize=768%2C412&amp;ssl=1 768w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?resize=1536%2C824&amp;ssl=1 1536w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/Pasted-image-20250117133806.png?resize=1200%2C644&amp;ssl=1 1200w" sizes="auto, (max-width: 1000px) 100vw, 1000px"><figcaption><em>Theme Customization in Toolbar</em></figcaption></figure>



<p>With these tools, you can interact with your diagrams dynamically, significantly reducing the effort required to manage complex relationships and attributes.</p>



<h3 id="creating-new-classes-and-relationships"><strong>Creating New Classes and Relationships</strong></h3>



<p>One of the most powerful features of the new editor is its intuitive way of adding new classes and establishing relationships between them. Here’s how it works:</p>



<ul>
<li><strong>Create a New Class with an Existing Relationship</strong>: Click on an existing class in your diagram, then drag to an empty space. A new class will appear with a direct relationship to the original class.</li>



<li><strong>Create Relationships Between Existing Classes</strong>: Quickly establish relationships between existing classes by dragging from one class and dropping the relationship line onto another class. This eliminates the need for manual code input.</li>
</ul>



<figure><img data-recalc-dims="1" loading="lazy" decoding="async" width="1460" height="861" data-attachment-id="1861" data-permalink="https://content.mermaidchart.com/2025/01/17/gui-for-editing-mermaid-class-diagrams/new-class-mermaid/" data-orig-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?fit=1460%2C861&amp;ssl=1" data-orig-size="1460,861" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="new-class-mermaid" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?fit=300%2C177&amp;ssl=1" data-large-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?fit=1024%2C604&amp;ssl=1" src="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?resize=1460%2C861&amp;ssl=1" alt="" srcset="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?w=1460&amp;ssl=1 1460w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?resize=300%2C177&amp;ssl=1 300w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?resize=1024%2C604&amp;ssl=1 1024w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?resize=768%2C453&amp;ssl=1 768w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/new-class-mermaid.png?resize=1200%2C708&amp;ssl=1 1200w" sizes="auto, (max-width: 1000px) 100vw, 1000px"><figcaption><em>Creating Relationships Between Classes</em></figcaption></figure>



<p>When working with relationships, you can click on any existing connection to bring up a toolbar. This toolbar allows you to:</p>



<ul>
<li>Change the type of relationship (e.g., inheritance, association).</li>



<li>Set the cardinalities (e.g., one-to-many, many-to-many).</li>



<li>Add labels to relationships by double-clicking on the connection.</li>
</ul>



<figure><img data-recalc-dims="1" loading="lazy" decoding="async" width="1414" height="938" data-attachment-id="1863" data-permalink="https://content.mermaidchart.com/2025/01/17/gui-for-editing-mermaid-class-diagrams/edit-relation/" data-orig-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?fit=1414%2C938&amp;ssl=1" data-orig-size="1414,938" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="edit-relation" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?fit=300%2C199&amp;ssl=1" data-large-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?fit=1024%2C679&amp;ssl=1" src="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?resize=1414%2C938&amp;ssl=1" alt="" srcset="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?w=1414&amp;ssl=1 1414w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?resize=300%2C199&amp;ssl=1 300w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?resize=1024%2C679&amp;ssl=1 1024w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?resize=768%2C509&amp;ssl=1 768w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-relation.png?resize=1200%2C796&amp;ssl=1 1200w" sizes="auto, (max-width: 1000px) 100vw, 1000px"><figcaption><em>Editing Relationships and Cardinalities</em></figcaption></figure>



<p>These controls make it easy to iterate on your diagram as your design evolves.</p>



<h3 id="editing-class-details"><strong>Editing Class Details</strong></h3>



<p>The Visual Editor provides a powerful dialog interface for modifying class properties without touching any code. When you double-click on a class in your diagram, a comprehensive editing panel appears that lets you fine-tune every aspect of the class definition.</p>



<figure><img data-recalc-dims="1" loading="lazy" decoding="async" width="2148" height="1354" data-attachment-id="1864" data-permalink="https://content.mermaidchart.com/2025/01/17/gui-for-editing-mermaid-class-diagrams/edit-class/" data-orig-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?fit=2148%2C1354&amp;ssl=1" data-orig-size="2148,1354" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="edit-class" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?fit=300%2C189&amp;ssl=1" data-large-file="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?fit=1024%2C645&amp;ssl=1" src="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?resize=2148%2C1354&amp;ssl=1" alt="" srcset="https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?w=2148&amp;ssl=1 2148w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?resize=300%2C189&amp;ssl=1 300w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?resize=1024%2C645&amp;ssl=1 1024w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?resize=768%2C484&amp;ssl=1 768w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?resize=1536%2C968&amp;ssl=1 1536w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?resize=2048%2C1291&amp;ssl=1 2048w, https://i0.wp.com/content.mermaidchart.com/wp-content/uploads/2025/01/edit-class.png?resize=1200%2C756&amp;ssl=1 1200w" sizes="auto, (max-width: 1000px) 100vw, 1000px"><figcaption><em>Editing Class Details</em></figcaption></figure>



<p>At the top of the dialog, you can specify the class’s annotation (such as “Abstract”) and modify its name. Below that, the interface is divided into clear sections for attributes and methods. Each class property can be precisely configured:</p>



<h4 id="attributes">Attributes:</h4>



<ul>
<li>Define visibility modifiers (like public/private using&nbsp;<code>+</code>&nbsp;or&nbsp;<code>-</code>).</li>



<li>Set the data type (such as&nbsp;<code>int</code>,&nbsp;<code>String</code>).</li>



<li>Specify the attribute name.</li>



<li>Add additional modifiers as needed.</li>
</ul>



<h4 id="methods">Methods:</h4>



<ul>
<li>Set the method visibility.</li>



<li>Define return types.</li>



<li>Specify method names and parameters.</li>



<li>Add or remove methods with intuitive controls.</li>
</ul>



<p>The editor maintains proper UML syntax automatically, handling details like the abstract class notation (shown as «Abstract» in the diagram) and proper formatting of attributes and methods. Changes are previewed in real-time, and you can either save your modifications or cancel to revert to the previous state.</p>



<p>This visual approach to class editing makes it significantly easier to maintain complex class diagrams, especially for team members who might be less familiar with Mermaid’s syntax.</p>



<h3 id="additional-tips-for-optimizing-your-diagrams"><strong>Additional Tips for Optimizing Your Diagrams</strong></h3>



<ul>
<li><strong>Experiment with Different Layouts</strong>: Play with layout and theme options to find the best look for your diagram.</li>



<li><strong>Add Context with Notes</strong>: Use the note feature to explain parts of your diagram, helping to clarify complex relationships.</li>
</ul>



<h3 id="get-started-today"><strong>Get Started Today</strong></h3>



<p>The new Mermaid Visual Editor tools make diagramming more efficient and accessible. Whether you’re building a new class diagram from scratch or refining an existing one, these updates save you time and effort, letting you focus on what truly matters: the design and structure of your system.</p>



<p>Start exploring these features today and take your class diagrams to the next level! Here’s how to get started:</p>



<ol>
<li><a href="https://www.mermaidchart.com/landing?utm_source=blog&amp;utm_medium=blog&amp;utm_campaign=erd_examples"><strong>Create your free account</strong></a>: Sign up with your email to join our Free tier.</li>



<li><strong>Start a new diagram:</strong> Open up a new diagram and click on “ER Diagram” from the Templates menu in the editor.</li>



<li><strong>Edit, tweak, and automate: </strong>Use our simple code editor (or message Mermaid AI) to fine-tune your diagram to fit your needs.</li>
</ol>



<p>We wish you luck in creating effective class diagrams!</p>
<!-- HTML_TAG_END --> <div><p>Author</p> <p>Knut Sveidqvist</p> <p>Creator of MermaidJS and founder of Mermaid Chart</p></div>  <hr></div>    </main>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Supreme Court rules to uphold TikTok ban, setting stage for shutdown (894 pts)]]></title>
            <link>https://www.cnbc.com/2025/01/17/supreme-court-rules-to-uphold-tiktok-ban.html</link>
            <guid>42738464</guid>
            <pubDate>Fri, 17 Jan 2025 15:23:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2025/01/17/supreme-court-rules-to-uphold-tiktok-ban.html">https://www.cnbc.com/2025/01/17/supreme-court-rules-to-uphold-tiktok-ban.html</a>, See on <a href="https://news.ycombinator.com/item?id=42738464">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="RegularArticle-ArticleBody-5" data-module="ArticleBody" data-test="articleBody-2" data-analytics="RegularArticle-articleBody-5-2"><div id="ArticleBody-InlineImage-108086106" data-test="InlineImage"><p>Jaap Arriens | Nurphoto | Getty Images</p></div><div><p>The <a href="https://www.cnbc.com/supreme-court-us/">Supreme Court</a> on Friday upheld the law requiring China-based ByteDance to divest its ownership of TikTok by Sunday or face <a href="https://www.cnbc.com/2024/12/06/tiktok-divestment-law-upheld-by-federal-appeals-court.html">an effective ban</a> of the popular social video app in the U.S.</p><p>ByteDance has so far refused to sell TikTok, meaning many U.S. users could <a href="https://www.cnbc.com/2025/01/15/how-vpns-might-allow-americans-to-continue-using-tiktok-.html">lose access</a> to the app this weekend. The app may still work for those who already have TikTok on their phones, although ByteDance has also threatened to shut the app down.</p><p>In a unanimous decision, the Supreme Court sided with the Biden administration, upholding&nbsp;the Protecting Americans from Foreign Adversary Controlled Applications Act which President <a href="https://www.cnbc.com/joe-biden/">Joe Biden</a> <a href="https://www.cnbc.com/2024/04/24/biden-signs-israel-ukraine-tiktok-bill-into-law.html">signed</a> in April.</p><p>"There is no doubt that, for more than 170 million Americans, TikTok offers a distinctive and expansive outlet for expression, means of engagement, and source of community," the Supreme Court's opinion said. "But Congress has determined that divestiture is necessary to address its well-supported national security concerns regarding TikTok's data collection practices and relationship with a foreign adversary."</p><p>Supreme Court Justices Sonia Sotomayor and Neil Gorsuch wrote concurrences.</p><div><p><a href="https://www.cnbc.com/2024/11/13/trump-victory-may-provide-tiktok-a-lifeline-to-remain-in-the-us.html">TikTok's fate</a> in the U.S. now lies in the hands of President-elect <a href="https://www.cnbc.com/donald-trump/">Donald Trump</a>, &nbsp;who originally favored a TikTok ban during his first administration, but has since flip-flopped on the matter. In December, Trump <a href="https://www.supremecourt.gov/DocketPDF/24/24-656/336151/20241227163400981_2024-12-27%20-%20TikTok%20v.%20Garland%20-%20Amicus%20Brief%20of%20President%20Donald%20J.%20Trump.pdf" target="_blank">asked</a> the Supreme Court to <a href="https://www.nbcnews.com/politics/donald-trump/trump-urges-supreme-court-hit-pause-law-ban-tiktok-us-month-rcna185606" target="_blank">pause the law's implementation</a> and&nbsp;allow his administration "the opportunity to pursue a political resolution of the questions at issue in the case."</p><p>Trump began to speak more favorably of TikTok after he<a href="https://www.businessinsider.com/trump-tiktok-comments-meeting-with-billionaire-investor-jeff-yass-2024-3" target="_blank">&nbsp;met in February</a>&nbsp;with billionaire Republican megadonor Jeff Yass. Yass is a major ByteDance investor who also owns a stake in the owner of&nbsp;<a href="https://www.cnbc.com/quotes/DJT/">Truth Social</a>, Trump's social media platform.</p></div><p>Trump will be inaugurated on Monday, one day after the TikTok deadline for a sale.&nbsp;<a href="https://www.cnbc.com/2024/12/16/tiktok-asks-supreme-court-to-block-us-ban-pending-appeal.html">TikTok CEO Shou Chew</a> is one of several tech leaders <a href="https://www.cnbc.com/2025/01/16/tiktok-ceo-expected-to-attend-trumps-inauguration-nbc-reports.html">expected to be in attendance</a>, seated on the dais.&nbsp;</p></div><div id="Placeholder-ArticleBody-Video-108088262" data-test="VideoPlaceHolder" role="region" tabindex="0" data-vilynx-id="7000363810" aria-labelledby="Placeholder-ArticleBody-Video-108088262"><p><img src="https://image.cnbcfm.com/api/v1/image/108088263-17371193251737119321-38026896474-1080pnbcnews.jpg?v=1737119324&amp;w=750&amp;h=422&amp;vtcrop=y" alt="It's pretty clear Trump likes TikTok and is going to save it, says LightShed's Rich Greenfield"><span></span><span></span></p></div><div><p><br>The nation's highest court said in the opinion that while "data collection and analysis is a common practice in this digital age," the sheer size of TikTok and its "susceptibility to foreign adversary control, together with the vast swaths of sensitive data the platform collects" poses a national security concern.</p><p>Under the terms of the law, third-party internet service providers like <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-14"><a href="https://www.cnbc.com/quotes/AAPL/">Apple</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> and <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-15"><a href="https://www.cnbc.com/quotes/GOOGL/">Google</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> will be penalized for supporting&nbsp;a ByteDance-owned&nbsp;TikTok after the Jan. 19 deadline.</p><p>If service providers and app store owners comply, consumers will unable to install the necessary updates that make the app functional.</p><p>Representatives for TikTok did not immediately respond to requests for comment.</p></div><h2><a id="headline0"></a>Users look for alternatives</h2><div><p>White House press secretary Karine Jean-Pierre reiterated President Biden's support for the law in a statement, saying "TikTok should remain available to Americans, but simply under American ownership or other ownership that addresses the national security concerns identified by Congress in developing this law."</p><p>"Given the sheer fact of timing, this Administration recognizes that actions to implement the law simply must fall to the next Administration, which takes office on Monday," Pierre said.</p><p>Kate Ruane, the director of the Center for Democracy and Technology nonprofit, criticized the decision, saying in a statement that it "harms the free expression of hundreds of millions of TikTok users in this country and around the world."</p><p>In December, members of the House Select Committee on the Chinese Communist Party <a href="https://www.cnbc.com/2024/12/13/apple-google-instructed-by-house-committee-to-prepare-to-dump-tiktok.html">sent letters</a> to Apple CEO Tim Cook and Google CEO Sundar Pichai, urging the executives to begin preparing to comply with the law.</p></div><div id="ArticleBody-InlineImage-107387732" data-test="InlineImage"><p>Shou Zi Chew, CEO of TikTok, speaks to reporters outside the office of Sen. John Fetterman (D-PA) at the Russell Senate Office Building on March 14, 2024 in Washington, DC.</p><p>Anna Moneymaker | Getty Images</p></div><div><p>Last Friday, the<a href="https://www.cnbc.com/2025/01/09/supreme-court-set-to-hear-oral-arguments-on-challenge-to-tiktok-ban.html"> Supreme Court heard oral arguments</a> from lawyers representing TikTok, content creators and the U.S. government. TikTok's lead lawyer, Noel Francisco, argued that the law violates the First Amendment rights of the app's 170 million American users. Meanwhile, U.S. Solicitor General Elizabeth Prelogar claimed that the app's alleged ties to China pose a national security threat. &nbsp;</p><p>Many TikTok creators have been telling their fans to find them on competing social platforms like Google's YouTube and <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-18"><a href="https://www.cnbc.com/quotes/META/">Meta's</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> Facebook and Instagram, CNBC <a href="https://www.cnbc.com/2025/01/12/tiktok-creators-ask-followers-to-migrate-ahead-of-ban-to-meta-youtube.html">reported</a>.&nbsp;Additionally, Instagram leaders scheduled meetings after last Friday's Supreme Court hearing to direct workers to prepare for a wave of users if the court upholds the law.</p><div><p>Chinese social media app and <a href="https://www.cnbc.com/2025/01/13/as-tiktok-faces-us-ban-chinasr-rednote-tops-apple-app-store.html">TikTok-lookalike RedNote rose to the top</a> of Apple's app store on Monday, indicating that TikTok's millions of users were seeking alternatives.</p><p>The Chinese government also weighed a <a href="https://www.cnbc.com/2025/01/13/china-considers-selling-tiktok-us-operations-to-musk-bloomberg-.html">contingency plan</a> that would have X owner <a href="https://www.cnbc.com/elon-musk/">Elon Musk</a> acquire TikTok's U.S. operations as part of several options intended to keep the app from its effective ban in the U.S., Bloomberg News <a href="https://www.bloomberg.com/news/articles/2025-01-14/china-discusses-sale-of-tiktok-us-to-musk-as-one-possible-option" target="_blank">reported</a> on Monday.</p></div><p>Should ByteDance decide to sell TikTok to a U.S. company or group of investors, potential buyers may have to pay between <a href="https://www.cnbc.com/2025/01/15/tiktoks-us-unit-could-be-worth-as-much-as-50-billion-in-a-sale.html">$40 billion and $50 billion</a>, according to an estimate by CFRA Research Senior Vice President Angelo Zino.</p><p><strong>WATCH</strong>: <a href="https://www.cnbc.com/video/2025/01/10/tiktok-bans-fate-is-now-in-the-supreme-courts-hands.html">SCOTUS hears TikTok ban case</a>.</p></div><div id="Placeholder-ArticleBody-Video-108085050" data-test="VideoPlaceHolder" role="region" tabindex="0" data-vilynx-id="7000363160" aria-labelledby="Placeholder-ArticleBody-Video-108085050"><p><img src="https://image.cnbcfm.com/api/v1/image/108085051-17365346511736534648-37930012242-1080pnbcnews.jpg?v=1736534650&amp;w=750&amp;h=422&amp;vtcrop=y" alt="TikTok ban's fate is now in the Supreme Court's hands"><span></span><span></span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ozempic and Wegovy are selected for Medicare's price negotiations (144 pts)]]></title>
            <link>https://apnews.com/article/drug-prices-medicare-biden-trump-aae2271614f5959b484e5f081313f2e1</link>
            <guid>42737985</guid>
            <pubDate>Fri, 17 Jan 2025 14:42:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://apnews.com/article/drug-prices-medicare-biden-trump-aae2271614f5959b484e5f081313f2e1">https://apnews.com/article/drug-prices-medicare-biden-trump-aae2271614f5959b484e5f081313f2e1</a>, See on <a href="https://news.ycombinator.com/item?id=42737985">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                                        <p>WASHINGTON (AP) — Popular weight loss and diabetes drugs like <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/ozempic-biden-wegovy-trump-rfk-jr-hhs-229391ee890bb37574ac08d70b991363">Ozempic and Wegovy</a></span> have been added to Medicare’s list of medications that will be negotiated directly between the government and drug manufacturers, the Biden administration said Friday. </p><p>The price negotiations for the additional 15 drugs selected will be handled by the incoming Trump administration and, if deals are reached, almost assure billions of dollars in savings for taxpayers. </p><p>Besides Ozempic and Wegovy, some of the <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://www.cms.gov/newsroom/press-releases/hhs-announces-15-additional-drugs-selected-medicare-drug-price-negotiations-continued-effort-lower" target="_blank" rel="noopener">other medications</a></span> include Trelegy Ellipta, which treats asthma; Otezla, a psoriatic arthritis drug; and several that treat different forms of cancer. </p><p>The list is a first step in negotiations and, given the timing, the details and final pricing will be left to President-elect Donald Trump’s administration. </p><p>“For some people this is a big deal,” U.S. Health and Human Services Secretary Xavier Becerra said in a call with reporters on Thursday. “Some folks have to skip a dose in their prescription so they can make a prescription last longer.”</p>
    

<p>That brings the total to 25 drugs that will have lower price tags for Medicare enrollees. </p>



<p>Together, those 25 drugs account for a third of Medicare spending on prescriptions, Becerra said. Ozempic and Wegovy, in particular, have been scrutinized for their high out-of-pocket costs. </p><p>Medicare enrollees, however, still won’t be able to access the drugs for obesity under a federal law that prohibits the program from paying for weight loss treatments. Right now, Medicare will only cover Ozempic and Wegovy when used to treat diabetes or lower blood sugar. <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/ozempic-biden-rfk-jr-trump-antiobesity-drugs-caaa2f888435af1d32bedb83e9ddbc0a">A rule the Democratic Biden administration proposed</a></span> — and the incoming Republican Trump administration will decide whether to implement — would cover the popular anti-obesity medications for weight loss. </p>
    
    
    
<p>The savings on the 25 drugs stem from a new law that allows Medicare to haggle over the price it pays on the most popular and expensive prescription drug scripts filled by older Americans. For years, Medicare had been legally prohibited from such dealmaking. The law, passed by Democrats and signed into law by President Joe Biden, was opposed by Republicans at the time, but it’s unclear if they have an interest in trying to repeal or weaken the law now.</p>
    

<p>Drug companies have sued over the negotiations and remain opposed to the program. On Friday, the top pharmaceutical lobby called on the incoming administration and Congress to “fix” the law. </p><p>“In rushing out this list in their final days, the Biden administration once again fails to address the true challenges facing seniors and Medicare,” Stephen Ubl, the president and CEO of Pharmaceutical Research and Manufacturers of America, said in a statement. </p><p>Late last year, the Centers for Medicare &amp; Medicaid Services announced it had reached pricing deals with companies for <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/medicare-prescription-drug-negotiations-biden-inflation-2bf6775c3431111a2cd03fd033caefa7">10 drugs</a></span> in the inaugural round of negotiations. Under the new deals, list prices were reduced by hundreds — in some cases, thousands — of dollars for 30-day supplies of popular drugs used by millions of people on Medicare. They included popular blood thinners Xarelto and Eliquis and diabetes drugs Jardiance and Januvia. Drug company executives told investors during earnings calls that they did not expect the negotiations to impact their bottom line. </p>
    

<p>The AARP, one of the most powerful health care interest groups in Washington, said that it would fight any efforts to weaken the law in the GOP-controlled Congress. </p><p>“For too long, big drug companies have padded their profits by setting outrageous prices at the expense of American lives, forcing seniors to skip prescriptions they can’t afford,” AARP Executive Vice President Nancy LeaMond said in a statement. </p><p>The savings from the new list prices for those drugs were expected to generate about $6 billion for taxpayers and $1.5 billion for Medicare enrollees.</p><p>Negotiated prices for the first 10 drugs don’t kick in until 2026. Prices for the 15 additional drugs announced today won’t go into effect until 2027. But some Medicare enrollees should see relief from drug prices in a new rule this year that caps annual out-of-pocket costs on prescription drugs to $2,000.</p>
    

<p>Under the law, more drugs will be added to the negotiation process in coming years.</p><p>The Centers for Medicare &amp; Medicaid Services says the 15 drugs are Ozempic, Rybelsus and Wegovy; Trelegy Ellipta; Xtandi; Pomalyst; Ibrance; Ofev; Linzess; Calquence; Austedo and Austedo XR; Breo Ellipta; Tradjenta; Xifaxan; Vraylar; Janumet and Janumet XR; and Otezla.</p><p>Ozempic and Wegovy are made by Novo Nordisk, which is based in Denmark and has U.S. headquarters Plainsboro, New Jersey.</p>
                                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Interactive game teaching dark patterns in UX design (144 pts)]]></title>
            <link>https://games.productartistry.com/games/dark-patterns</link>
            <guid>42737778</guid>
            <pubDate>Fri, 17 Jan 2025 14:23:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://games.productartistry.com/games/dark-patterns">https://games.productartistry.com/games/dark-patterns</a>, See on <a href="https://news.ycombinator.com/item?id=42737778">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><a href="https://games.productartistry.com/"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m12 19-7-7 7-7"></path><path d="M19 12H5"></path></svg>Back to Games Hub</a></p><div><h2>Dark Patterns Detective</h2><div><p>Uncover the hidden design tricks that manipulate user decisions online</p><p>Every click online is a choice. But are they really yours? Play this hands-on adventure to decode the invisible design patterns steering your digital decisions.</p></div></div><div><p>By the end of this game, you will learn to:</p><div><ul><li><div><h3>Spot Manipulative Patterns</h3><p>Train your eye to identify subtle tactics used to mislead users.</p></div></li><li><div><h3>Decode Design Psychology</h3><p>Understand how design taps into human instincts to shape behavior.</p></div></li><li><div><h3>Take Back Control Online</h3><p>Become an empowered, informed user in the digital world.</p></div></li></ul></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zig: What to Expect from Release Month (122 pts)]]></title>
            <link>https://ziglang.org/news/what-to-expect-from-release-month/</link>
            <guid>42737345</guid>
            <pubDate>Fri, 17 Jan 2025 13:35:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ziglang.org/news/what-to-expect-from-release-month/">https://ziglang.org/news/what-to-expect-from-release-month/</a>, See on <a href="https://news.ycombinator.com/item?id=42737345">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content" role="main">
    
      <p><a id="back" href="https://ziglang.org/news/">
        ← Back to
        <b>News</b>
        page
      </a></p>
    <h3>January 17, 2025</h3>
    
    <p>Hey everyone,</p><p>We've been relatively quiet over here at the Zig Software Foundation for a few months now and so it's about time to give y'all an update.</p><p>To be honest, these quiet times are my personal favorite - when the release pressure is off, there are no upcoming conferences, and there are long stretches of uninterrupted coding on big projects - the ones that require full and undivided attention for days or weeks in a row. Lately I found some <a href="https://www.youtube.com/watch?v=xZjM1trmJWA" target="_blank">lovely trance music</a> compilation albums as well as tearing through <a href="https://www.youtube.com/watch?v=Uzyii85rwqo" target="_blank">Infected</a> <a href="https://www.youtube.com/watch?v=ETzp63AdzMQ" target="_blank">Mushroom</a>'s entire catalogue, and it's been pure <a href="https://www.youtube.com/watch?v=AEm3bIBN8aQ" target="_blank">bliss</a>.</p><p>Personally, I've taken on Zig's linker code since Jakub decided to move on to other things. Loris has been working on a book, Jacob has been <a href="https://github.com/ziglang/zig/pull/22386" target="_blank">rewriting the x86 backend</a>, and Veikka has been plugging away at an official <a href="https://github.com/ziglang/translate-c/" target="_blank">translate-c package</a> that uses Aro rather than Clang. Matthew has been doing more directly visible work, making language enhancements, frontend bug fixes, as well as working steadily towards <a href="https://github.com/ziglang/zig/issues/21165" target="_blank">incremental compilation</a>. We also have <a href="https://alexrp.com/" target="_blank">a new Zig core team member</a>, who deserves his own news announcement, to follow shortly.</p><p>As satisfying as it is to work on bigger subprojects, it's time to cut a release.</p><p>Previously, I made an estimate of January 1st for the 0.14.0 tag. That estimate was based on waiting until all the LLVM bug fix patches are done, so that we don't have to cut our own bug fix releases in response to LLVM. That deadline slipped by mainly because I was caught up in <a href="https://github.com/ziglang/zig/pull/22220" target="_blank">a rather large branch</a> I wanted to finish, however, LLVM ended up making a January 14th 19.1.7 release, which is expected to be their last one in the series, so turns out we are right on schedule.</p><p>Anyway, I am now setting a hard deadline of <strong>February 17th</strong> for the 0.14.0 tag. That gives us one month to do Quality Assurance for the release. During this time I expect to shelf bigger goals, instead focusing on the Pull Request queue, which has admittedly been a bit neglected recently, as well as triaging all the open issues and putting together a realistic set of priorities to get finished before the cutoff.</p><p>One of the big pushes this release cycle was <a href="https://github.com/ziglang/zig/issues/22257" target="_blank">improving the x86 backend enough to become the default for debug builds</a>. Whether this will be accomplished by the release or not is yet to be determined. It's not out of the question, but we can't promise it either.</p><p>Another one was incremental compilation, which will not be enabled by default for the release due to lack of robust testing, however it is well within beta-testing quality, so there is a compiler flag to opt in and try it out. More details about that to come in the release notes.</p><p>Apart from those major goals, this release is nothing to sneeze at. There have been a steady stream of notable language enhancements, such as <a href="https://github.com/ziglang/zig/pull/21257" target="_blank">labeled switch continue</a>. Furthermore, Alex has poured a ton of effort into Zig's support table, so you can expect nearly every target to move up a tier.</p><p>If you have a Zig project that is pinned on Zig 0.13.0, now is a great time to upgrade to the latest master branch release. Our goal during Release Month is to ensure everyone gets a smooth upgrade, so if that is not the case for you, please speak up!</p><p>I know people are <em>itching</em> for a 1.0 tag, but there is still much to do before the project is ready for such a commitment. Instead, I would like to offer progressively more and more stable releases, to the point where people feel comfortable using them, knowing there may still be some migration needed with successive releases.</p><p>Happy hacking,</p><p>Andrew</p>
  </div></div>]]></description>
        </item>
    </channel>
</rss>