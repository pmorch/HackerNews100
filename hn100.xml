<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 29 Dec 2023 00:00:17 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[You can't do that because I hate you (104 pts)]]></title>
            <link>https://bvisness.me/you-cant/</link>
            <guid>38797908</guid>
            <pubDate>Thu, 28 Dec 2023 20:01:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bvisness.me/you-cant/">https://bvisness.me/you-cant/</a>, See on <a href="https://news.ycombinator.com/item?id=38797908">Hacker News</a></p>
Couldn't get https://bvisness.me/you-cant/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Dark Visitors – A list of known AI agents on the internet (103 pts)]]></title>
            <link>https://darkvisitors.com</link>
            <guid>38797487</guid>
            <pubDate>Thu, 28 Dec 2023 19:30:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://darkvisitors.com">https://darkvisitors.com</a>, See on <a href="https://news.ycombinator.com/item?id=38797487">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>Insight into the hidden ecosystem of autonomous chatbots and data scrapers crawling across the web. Protect your website from unwanted AI agent access.</p><div id="submit-agent-container">
            <p><a href="https://forms.gle/RPjQGX5ojM3wmiKz8">Sign up</a> to get notified when new AI agents are added, so you can update your website's <a href="https://darkvisitors.com/robots-txt-builder">robots.txt</a>.</p>
            <p><a href="https://forms.gle/wiMhmaRPKHruFh687">Submit an AI Agent</a>
        </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Liero – Sling'n'shoot Worms Game (154 pts)]]></title>
            <link>http://www.liero.be/</link>
            <guid>38796870</guid>
            <pubDate>Thu, 28 Dec 2023 18:40:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.liero.be/">http://www.liero.be/</a>, See on <a href="https://news.ycombinator.com/item?id=38796870">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="download">
			
			<div id="online">
							<p>
								We have four options for you. They are the same in terms of gameplay, but each one has its own special features. You may pick whichever one you like! All four are awesome!
							</p>
							
						</div>
			<div>
				<div>
					<h3>Liero 1.33</h3>
					<p>
						Conceived and created in 1998 Liero became a popular duel game in classrooms and homes alike. Between 1999 and 2005 the thriving Liero community created astounding maps, mods and editors to enhance the experience of this amazing game. This is final version of the original generation of Liero released in early 2000.
					</p>
					<div>
							<ul>
								<li><i></i> Maximum nostalgia</li>
								<li><i></i> Some bugs</li>
								<li><i></i> Requires Windows 98 or older</li>
								<li><i></i> No network play</li>
							</ul>
						</div>
					<p>
						<br><a href="https://www.liero.be/download/lierov133winxp.zip">
							<i></i> Download
						</a>
					</p>
				</div>
				<div>
					<h3>Liero 1.36</h3>
					<p>
						A true successor of the original game, this is a high fidelity clone based on the OpenLiero project from 2007. It is the official new version of Liero and the latest version was released in 2013. This version has fixed several annoying bugs and it has several several new modernising features - and of course it runs perfectly on modern computers.
					</p>
					<div>
						<div>
							<ul>
								<li><i></i> Perfect clone of 1.33</li>
								<li><i></i> Bugs fixed</li>
								<li><i></i> Works on almost any OS</li>
								<li><i></i> New AI opponent</li>
							</ul>
						</div>
						<div>
							<ul>
								<li><i></i> New game modes</li>
								<li><i></i> Record and watch replays</li>
								<li><i></i> Player profiles</li>
								<li><i></i> No network play</li>
							</ul>
						</div>
					</div>
					<p>
						<br><a href="https://www.liero.be/download/liero-1.36-bundle.zip">
							<i></i> Download
						</a>
						<a href="https://github.com/gliptic/liero">
							Source code
						</a>
					</p>
				</div>
			</div>
			<div>
				<div>
					<h3>WebLiero <small>  RELEASED AUGUST 2019</small></h3>
					<p>
						After 20 years of intense anticipation from the Liero community it is astounding that the game finally reaches the clouds. WebLiero is an online multiplayer version of the Liero we all know and love which supports as many players as you wish from anywhere in the world. Create a room, invite your friends, drop the hammer and unleash that blood rain.
					</p>
					<div>
						<div>
							<ul>
								<li><i></i> True to original gameplay</li>
								<li><i></i> Works in the best browsers</li>
								<li><i></i> No splitscreen</li>
								<li><i></i> No offline mode</li>
							</ul>
						</div>
						<div>
							<ul>
								<li><i></i> Unlimited number of players</li>
								<li><i></i> Randomised map pools</li>
								<li><i></i> New game modes</li>
							</ul>
						</div>
					</div>
					<p>
						<br><a href="https://www.webliero.com/" target="_new">
							<i></i> Play now!
						</a>
					</p>
				</div>
				<div>
					<h3>lierolibre</h3>
					<p>
						This is a project to liberate Liero from all its proprietary components and to allow it to be distributed completely freely. “lierolibre” is a fork of Liero 1.35b, and features a new non-proprietary sound pack but is otherwise true to the game you were used to back in the nineties. Being completely re-engineered it is also easier to mod than the other games and does not use the original Liero files.
					</p>
					<div>
						<div>
							<ul>
								<li><i></i> True to original gameplay</li>
								<li><i></i> Different sound pack</li>
								<li><i></i> No proprietary content</li>
							</ul>
						</div>
						<div>
							<ul>
								<li><i></i> Works on almost any OS</li>
								<li><i></i> No network play</li>
							</ul>
						</div>
					</div>
					<p>
						<br><a target="_new" href="https://launchpad.net/lierolibre/+download">
							<i></i> Download
						</a>
						<a href="https://gitorious.org/lierolibre">
							Source code
						</a>
					</p>
				</div>
			</div>
			<hr>
			
			<hr>
			<div id="about">
					<div>
						<h2>About the game</h2>
						<p>
							Liero is a simple game. Pick your five weapons, and unleash your inner fury. The game is always played one versus one on a map of your choice, and yes, you have to play with someone who is right next to you, unless you are enjoying the online multiplayer version!
						</p>
						<p>
							To shoot is of course easy enough to figure out, but if you want to step up your game, you need to figure out things like how to swing yourself to safety with the ninja rope, to use timed weapons for area denial, to hunt without being hunted, to ambush, hit and run, and control that darned guided missile.
						</p>
						<p>
							If you can do all these things, you may one day become a true champion, as the players in this video are trying to accomplish.
						</p>
					</div>
					<p>
							<iframe width="480" height="270" src="https://www.youtube.com/embed/BzvWW_SzZvk" frameborder="0" gesture="media" allowfullscreen=""></iframe>
						</p>
				</div>
			<hr>
			<div id="faq">
					<h2>Frequently asked questions</h2>
					<h5><i></i> How do I install Liero?</h5>
					<p>Unzip the game into a folder, and run it.</p>
					<h5><i></i> How do I install new levels?</h5>
					<p>Drop them in the same folder as the game.</p>
					<h5><i></i> Liero 1.33 doesnt run, why?</h5>
					<p>The game is old and your computer is new. Disable sounds by adding /n to the command line when starting the game.</p>
					<p><a>Click here for further instructions.</a></p>
					<div>
						<ol>
							<li>Right click Liero.exe and select "Create shortcut"</li>
							<li>Right click the created shortcut and select "Properties"</li>
							<li>Go to the tab titled Program and place the cursor at the end of the line</li>
							<li>Add /n at the end, after LIERO.EXE</li>
							<li>Press OK and run Liero via the shortcut</li>
						</ol>
					</div>
					<h5><i></i> Liero 1.36 doesn't run, why?</h5>
					<p>You need to run <em>OpenLiero.exe</em> instead of Liero.exe.</p>
					<h5><i></i> How do I change the game window size in Liero 1.36 and lierolibre?</h5>
					<p>Press F5 and F6 for full screen and 2x size, or use the menus.</p>
					<h5><i></i> How do I record replays?</h5>
					<p>In lierolibre, press F1 to access the "secret menu". Liero 1.36 has the options in the regular menus.</p>
					<h5><i></i> Which browsers support WebLiero?</h5>
					<p>Firefox, Chrome and Chromium.</p>
				</div>
			<hr>
			<div id="history">
						<h2>A brief history of Liero</h2>
						<p>Liero - originally envisioned to be a top-down-view game - eventually came out as a clone of MoleZ, a similar subterranean shooter game featuring moles instead of worms. The game was first published in 1998, in the Finnish "mbit" computer game magazine by Joosa Riekkinen. It quickly became a popular pastime in Finland and even won some “game of the week” awards. It soon began spreading on the internet, particularly interesting the owners of low-end computers.</p>
						<p>In 1999, Joosa became disillusioned with game development and decided to retire the game. Development stopped in January 2000 at the final version '1.33'. By this time a multitude of fan sites for Liero had already cropped up on the world wide web. The one which was to become the foundation of the community was "Wormhole - The Ultimate Liero Level Editor". The core of the site was the Liero editor <em>Wormhole</em> which let you convert BMP files into Liero levels, the <em>Liero Blood Increaser</em> which could set the blood spray all the way up to 32750%, and the <em>Liero Graphic Editor</em> which allowed users to create custom skins for the worms and projectiles. The community began to blossom on the Wormhole guestbook page.</p>
						<p>In the following years, the community moved off the guestbooks and message boards into the new heart of the community - The LieroNet Forum. Participation spiked and several new editors saw the light of day, with the most groundbreaking of them all, <em>LieroKit</em> and <em>LieroHacker</em> by Gliptic (Erik Lindroos). This new breed of editors could penetrate much deeper into the Liero game files and allowed editing weapons, changing the palettes, and altering of the physics of the game.</p>
						<p>Simultaneously - a somewhat separate community evolved in southern Poland with the prominent clan “Liga Liero”. The polish community quickly outgrew the international community, but due to the language barrier its strength never truly carried over into the wider world.</p>
						<h4>The next generation</h4>
						<p>The next step in the evolution of the game was the development of the first working clones. The most notable were <em>Wurmz!</em> by Patrys, <em>LOSP</em> by Gliptic, <em>LieroXtreme</em> by JasonB and <em>Gusanos</em> by Basro (Mario Carbajal), and let's not to forget <em>NiL</em> which was the very first clone of the all, and the first Liero for Linux, but was not widely played. All these projects took the game their own slightly divergent directions and with most of them being highly moddable, some with multiplayer features. It is also worth mentioning that innumerable clones projects were begun and abandoned by as many individuals, including 3D clones, Wii versions and anything you can think of.</p>
						<p>The most successful of the clones, <em>LOSP</em> was eventually developed into <em>OpenLiero</em>, which in 2007 was renamed “the official new version of Liero” when released as <em>Liero 1.34</em>. Unlike the other clones, OpenLiero was meant to be an exact simulation of the original Liero and still requires the original game files present in order to run. The idea behind it is to preserve the original game feeling but to allow the game to run properly on modern systems, and other platforms, and removing some notorious bugs. After some deliberation, new game options were added, such as the replay recording feature, new game modes, player profiles and eventually a restructuring of the game menu.</p>
						<p>In 2011 Joosa was approached by arand (Martin Erik Werner) with questions about licensing. It turned out he was making yet another clone based on the OpenLiero source code. The goal was to remove all proprietary content from the game so that it could be included in Linux packages. His version, aptly named <em>lierolibre</em> was released in 2012 and was adopted in 2013 as one of the promoted game versions on Liero.be, so as to give the avid Liero enthusiast complete freedom of choice.</p>
						<p>While the community has mostly vanished into the world, many old sites still survive the tooth of time. Most of the old community content created between 2000 and 2005 can still be found through way-back-machines, Google searches and not-yet-dead links on the Liero sites you may come across. The most important surviving sites are presented above in the resource section.</p>
						<h4>The Internet Age</h4>
						<p>One of the great talking points in the early era of clone-making was "network play". Many developers attempted to create online games, but only <em>LieroXtreme</em> really had any noteworthy success. But while it did have many fans it differed greatly from the original Liero and the purists remained restricted to the horrors of meeting people in real life in order to play a good game of Liero. This would however change abruptly in 2019 when long time Liero community member Basro (Mario Carbajal) combined the networking engine of his other game, the popular football game <em>"Haxball"</em> with the source code of Liero. Cowabunga! The wonderful world of Liero is now available for anyone to play with an unlimited number of friends, and an assurance of absolute mayhem!</p>
					</div>
			<div id="contact">
						<h3>Contact</h3>
						<p>If you have any questions about the Liero games you may leave some love on <a href="https://www.reddit.com/r/liero">reddit.com/r/liero</a>, speak your mind on <a target="new" href="https://discord.gg/ZeNBxdh2wp">Discord</a>, or maybe squeek at us on <a target="_new" href="https://twitter.com/lieroofficial">Twitter</a>.</p>
						<p><strong>Have a great time playing Liero!</strong></p>
					</div>
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mozilla '23 Ann. Report: CEO pay skyrockets while Firefox Marketshare nosedives (316 pts)]]></title>
            <link>https://lunduke.locals.com/post/5053290/mozilla-2023-annual-report-ceo-pay-skyrockets-while-firefox-marketshare-nosedives</link>
            <guid>38795308</guid>
            <pubDate>Thu, 28 Dec 2023 16:44:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lunduke.locals.com/post/5053290/mozilla-2023-annual-report-ceo-pay-skyrockets-while-firefox-marketshare-nosedives">https://lunduke.locals.com/post/5053290/mozilla-2023-annual-report-ceo-pay-skyrockets-while-firefox-marketshare-nosedives</a>, See on <a href="https://news.ycombinator.com/item?id=38795308">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
        Mozilla 2023 Annual Report: CEO pay skyrockets, while Firefox Marketshare nosedives    </p><div>
        <p>The Mozilla Foundation has <a href="https://stateof.mozilla.org/" target="_blank" rel="noreferrer noopener">released their latest annual report</a> -- covering the time up through December of 2022 (Mozilla's reporting always lags by one year) -- and something peculiar leaps out of the data:</p><ul><li>The <strong>compensation of the Mozilla CEO has skyrocketed</strong> (by millions)</li><li>While the <strong>Mozilla revenue drops</strong></li><li>And the <strong>Firefox Marketshare takes a nosedive</strong></li></ul><p>While, at first, this seems ridiculously lopsided... perhaps it actually makes sense.</p><p><em>Perhaps</em> the decreasing Firefox marketshare is a good thing, from the Mozilla point of view.</p><h3>Mozilla CEO gets a raise</h3><p>Let's start by looking at the pay of the Mozilla CEO.</p><figure><img src="https://media3.locals.com/images/posts/2023-12-27/102127/102127_dmnwn924regnp3j_custom.jpeg" alt=""><figcaption>Source: Mozilla Foundation 2022 IRS 990</figcaption></figure><p>That's right.&nbsp; Your eyes do not deceive you.&nbsp; The Mozilla CEO earned $6,903,089 in 2022.&nbsp; Just shy of $7 Million.</p><p>The year prior (2021), the CEO earned $5.6 Million.&nbsp; A <strong><em>raise</em></strong> of $1.3 Million dollars.&nbsp; Not a bad year-on-year increase!</p><p><img src="https://media3.locals.com/images/posts/2023-12-27/102127/102127_ok8f4fnipan7noi_custom.jpeg" alt="" width="353" height="218"></p><p>Now let's take a look at the core performance of Mozilla: The overall revenue, and the marketshare of their core product (Firefox) during that same period.</p><p>If a CEO gets a $1.3 Million dollar raise, surely those numbers will be excellent! &nbsp;... <em>Right?</em></p><p>Turns out... the revenue for Mozilla actually <em>dropped</em> between 2021 and 2022.</p><figure><img src="https://media3.locals.com/images/posts/2023-12-27/102127/102127_2irjcoofxpocsx6_custom.jpeg" alt="" width="610" height="348"><figcaption>Source: Mozilla Foundation 2022 IRS 990</figcaption></figure><p>To be fair, not a <em>huge</em> drop.&nbsp; Revenue went from $600 Million in 2021 to $593 Million in 2022.&nbsp; Roughly $7 Million lower.&nbsp; A small decrease, percentage wise... but a decrease just the same.</p><h3>The Firefox Nosedive</h3><p>Now let's look at the marketshare of Mozilla's primary product: Firefox.</p><p><img src="https://media3.locals.com/images/posts/2023-12-27/102127/102127_n8chdg6gk3if4gd_custom.jpeg" alt="" width="388" height="240">From the end of 2021 to the end of 2022 (the period during which the Mozilla CEO received a $1.3 Million Dollar raise), Firefox marketshare took a massive tumble.</p><p>Going from (an already declining) 3.79%... down to 3.04%.</p><p>It's almost as if there is an inverse relationship between Firefox Marketshare and Mozilla CEO compensation -- as marketshare goes down... CEO pay goes up by a similar percentage.</p><p><img src="https://media3.locals.com/images/posts/2023-12-27/102127/102127_n8vy8qci5obkq77_custom.jpeg" alt="" width="420" height="260"></p><p>Absolutely wild.</p><h3>Something doesn't add up... or does it?</h3><p>So.&nbsp; What can we learn from all of this?</p><p>Well, for starters, it is clear that Mozilla CEO compensation is <strong><em>not</em></strong> tied to either the success of the Firefox web browser (their current primary product) <strong><em>or</em></strong> to the overall revenue of Mozilla.</p><p>So what, <em>exactly</em>, could be the justification for that massive pay raise?</p><p>Turns out there are two big, measurable goals that Mozilla appears to have... and, at those goals, it is performing <em>exceptionally</em> well:</p><ol><li>Continued increases to overall corporate financial assets.</li><li>Transitioning Mozilla <em>away</em> from Firefox.</li></ol><p>That first goal is rather obvious.&nbsp; Let's be honest, what company doesn't want to have a massive pile of financial assets?</p><p>In 2022, the Mozilla war-chest (total assets) grew to a staggering <strong>$1.3 Billion Dollars</strong> -- up $157 Million from the year prior.&nbsp; A huge increase to their financial assets.</p><figure><img src="https://media3.locals.com/images/posts/2023-12-27/102127/102127_qnkwb8vtwgx6cf8_custom.jpeg" alt="" width="554" height="357"><figcaption>Source: Mozilla Foundation 2022 IRS 990</figcaption></figure><p>With over half a Billion Dollars in <em>cash</em> alone.&nbsp; That's a lot of cheddar.</p><p>But that's only part of the story.</p><h3>The De-Firefox-ification of Mozilla</h3><p>Let's take another look at the 2022 revenue breakdown.</p><p><img src="https://media3.locals.com/images/posts/2023-12-27/102127/102127_2lxxy1bxxwthsyp_custom.jpeg" alt="" width="571" height="326"></p><p><br>Note that revenue from "Royalties" is down substantially -- a decrease of $17 Million.&nbsp; Those "Royalties" are, in large part, made up of default search engine placement, within Firefox, for one single customer... Google.&nbsp; This decrease makes sense considering the signficant decline in Firefox marketshare.</p><p>But then look at the second row: <strong>"Subscription and advertising revenue"</strong>.</p><p>What is that, exactly? &nbsp;That line item includes some of the more recently launched subscription services -- "Pocket Premium" and "Mozilla VPN" (plus some advertising placement). &nbsp;And, you'll note, <em>that</em> revenue jumped from $56 Million to $75 Million in 2022.</p><p>While that may be a drop in the bucket of the overall Mozilla revenue and war-chest... it's a critical strategy for Mozilla to diversify their revenue stream <strong><em>away from Firefox</em></strong>.</p><p>As it turns out, moving away from Firefox is exactly Mozilla's plan.</p><p>Earlier this year, <a href="https://lunduke.locals.com/post/4671162/mozilla-downplaying-firefox-moving-into-a-i" target="_blank" rel="noreferrer noopener">Mozilla laid out their vision for the future of their organization</a> -- and it did not include Firefox. &nbsp;The focus for the future of Mozilla -- <em>according to Mozilla</em> -- is primarily based around Artificial Intelligence services.</p><p>In fact, Mozilla leadership stated, quite plainly, that they intend to take Mozilla "in a&nbsp;different direction."</p><p>When you consider the goals of Mozilla... the decreasing Firefox marketshare is no longer much of a concern.&nbsp; In fact, moving revenue away from Firefox, while investing in A.I. systems (and other subscription services) becomes the primary goal.</p><p>And, at that, the Mozilla CEO is excelling.</p><h3>The future of Mozilla</h3><p>What does all of this mean for the future of Mozilla?&nbsp; What have we learned from Mozilla statements coupled with their financial reports?</p><ul><li>Mozilla rewards executives who oversee a decreasing success and reliance upon Firefox -- so we can expect more of that.</li><li>In turn, that likely means reduced investment in Firefox development and promotion over the coming years.</li><li>Mozilla intends to focus on A.I. -- so we can expect more A.I. investment, and possible A.I. services, in the year ahead.</li><li>If all of that holds true, we can likely expect the Mozilla CEO to receive additional raises in the next annual reports.</li></ul><p>If you are a fan of Firefox... none of that points to a particularly bright future.</p><p>That said... if you are the CEO at Mozilla... you might bring in enough income to buy your own island fortress pretty soon.&nbsp; And who doesn't want an island fortress?</p><hr><p>Want more truly independent Tech Journalism?&nbsp; Be sure to grab at least a free membership to&nbsp;<a href="https://lunduke.locals.com/Lunduke.Locals.com" target="_blank" rel="noreferrer noopener">Lunduke.Locals.com</a>.</p><p>Want to support this important work (and get some exclusive books, videos, and other goodies in the process)?&nbsp;&nbsp;<a href="https://lunduke.locals.com/support" target="_blank" rel="noreferrer noopener">Grab a paid subscription</a>.</p><hr><p>Other articles you might be interested in:</p><ul><li><a href="https://lunduke.locals.com/post/5049241/linux-foundation-now-spends-only-2-of-their-revenue-on-linux" target="_blank" rel="noreferrer noopener">Linux Foundation now spends only 2% of their revenue on Linux</a></li><li><a href="https://lunduke.locals.com/post/4408159/linux-foundation-decreased-linux-spending-to-3-2-in-2022" target="_blank" rel="noreferrer noopener">Linux Foundation decreased Linux spending to 3.2% in 2022</a></li><li><a href="https://lunduke.locals.com/post/4458111/the-wiki-piggy-bank" target="_blank" rel="noreferrer noopener">The Wiki Piggy Bank</a></li><li><a href="https://lunduke.locals.com/post/3983662/major-open-source-projects-how-much-money-do-they-actually-make" target="_blank" rel="noreferrer noopener">Major Open Source Projects: How much money do they actually make?</a></li></ul><div>
    <p><img src="https://media3.locals.com/images/avatars/102127/102127_pavt7hft2xvhhod_thumb.png" alt="community logo">
    </p>
    <p>
        Join the Lunduke Community
    </p>
    <p>
        To read more articles like this, sign up and join my community today
    </p>
    
</div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Details on Xiaomi EV (111 pts)]]></title>
            <link>https://www.engadget.com/xiaomi-says-its-su7-ev-can-outperform-porsche-and-has-more-tech-than-tesla-095637762.html</link>
            <guid>38795290</guid>
            <pubDate>Thu, 28 Dec 2023 16:43:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.engadget.com/xiaomi-says-its-su7-ev-can-outperform-porsche-and-has-more-tech-than-tesla-095637762.html">https://www.engadget.com/xiaomi-says-its-su7-ev-can-outperform-porsche-and-has-more-tech-than-tesla-095637762.html</a>, See on <a href="https://news.ycombinator.com/item?id=38795290">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main role="main"><div id="module-moreStories" data-wf-sticky-offset="130px   10px" data-wf-sticky-position="" data-wf-sticky-target="#adsStream" data-wf-trigger-percentage=""><ul><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li><div><p><img src="https://s.yimg.com/cv/apiv2/default/20190501/placeholder.gif" data-wf-src="https://s.yimg.com/uu/api/res/1.2/oujKNktiIKNeOC_rH0CKLg--~B/Zmk9c3RyaW07aD0yODg7dz01MTQ7YXBwaWQ9eXRhY2h5b24-/https://s.yimg.com/os/creatr-uploaded-images/2022-03/de844380-a47d-11ec-b6be-9dd2ff775c4e" alt=""></p><div><p><span>Engadget</span></p><h4><a data-uuid="94f7e0a4-2c37-37fd-9879-739177ccbf4c" href="https://www.engadget.com/best-ipad-accessories-130018595.html" data-ylk="elm:hdln;itc:0;pos:1;sec:strm;subsec:moreforyou;cpos:8;ct:story;g:94f7e0a4-2c37-37fd-9879-739177ccbf4c" data-hosted-type="HOSTED">The best iPad accessories for 2024</a></h4><p>Here are some of the best accessories you can buy for your new iPad, including stands, hubs, chargers and more, as reviewed by Engadget editors.</p></div></div></li><li></li><li><div><p><img src="https://s.yimg.com/cv/apiv2/default/20190501/placeholder.gif" data-wf-src="https://s.yimg.com/uu/api/res/1.2/MSD_9GCtabO.JkVdOnFtGw--~B/Zmk9c3RyaW07aD0yODg7dz01MTQ7YXBwaWQ9eXRhY2h5b24-/https://s.yimg.com/os/creatr-uploaded-images/2023-02/5b28eef0-b3c2-11ed-b57f-9e3f777f5abe" alt=""></p><div><p><span>Engadget</span></p><h4><a data-uuid="8202648e-c2ce-4649-9f4b-98cd9b8af405" href="https://www.engadget.com/the-morning-after-the-best-games-of-2023-121548149.html" data-ylk="elm:hdln;itc:0;pos:1;sec:strm;subsec:moreforyou;cpos:10;ct:story;g:8202648e-c2ce-4649-9f4b-98cd9b8af405" data-hosted-type="HOSTED">The Morning After: The best games of 2023</a></h4><p>The biggest news stories this morning:  The Apple Watch import ban is paused — for now, Swedish Researchers develop ‘electronic soil’, The Right to Repair movement won its biggest victories in 2023.</p></div></div></li><li></li><li></li><li><div><p><img src="https://s.yimg.com/cv/apiv2/default/20190501/placeholder.gif" data-wf-src="https://s.yimg.com/uu/api/res/1.2/HJxsKHuUuiGQ7r9EkcFr0w--~B/Zmk9c3RyaW07aD0yODg7dz01MTQ7YXBwaWQ9eXRhY2h5b24-/https://s.yimg.com/os/creatr-uploaded-images/2023-09/b2cc3b00-57da-11ee-abdf-204593f65c5e" alt=""></p></div></li><li></li><li></li><li></li><li><div><p><img src="https://s.yimg.com/cv/apiv2/default/20190501/placeholder.gif" data-wf-src="https://s.yimg.com/uu/api/res/1.2/PDVG0r28JlGWq347bXyrsQ--~B/Zmk9c3RyaW07aD0yODg7dz01MTQ7YXBwaWQ9eXRhY2h5b24-/https://s.yimg.com/os/creatr-uploaded-images/2023-12/e5bba2d0-a4fb-11ee-af7d-0869508c9a34" alt=""></p><div><p><span>Engadget</span></p><h4><a data-uuid="5122336c-8711-4a89-a5d9-523d3548a9a4" href="https://www.engadget.com/the-first-ev-with-a-lithium-free-sodium-battery-hits-the-road-in-january-214828536.html" data-ylk="elm:hdln;itc:0;pos:1;sec:strm;subsec:moreforyou;cpos:17;ct:story;g:5122336c-8711-4a89-a5d9-523d3548a9a4" data-hosted-type="HOSTED">The first EV with a lithium-free sodium battery hits the road in January</a></h4><p>JAC Motors, a Volkswagen-backed Chinese automaker, unveiled the first mass-produced EV with a sodium-ion battery through its new Yiwei brand. Although sodium-ion battery tech has a lower density than lithium-ion, its lower costs, simpler and more abundant supplies and superior cold-weather performance could help accelerate mass EV adoption.</p></div></div></li><li></li><li></li><li><div><p><img src="https://s.yimg.com/cv/apiv2/default/20190501/placeholder.gif" data-wf-src="https://s.yimg.com/uu/api/res/1.2/uju29m3F3a4eGsaIys9vGQ--~B/Zmk9c3RyaW07aD0yODg7dz01MTQ7YXBwaWQ9eXRhY2h5b24-/https://s.yimg.com/os/creatr-uploaded-images/2023-12/9db494b0-a415-11ee-bfba-7079485ad539" alt=""></p><div><p><span>Engadget</span></p><h4><a data-uuid="323bb63c-c359-4f8c-a702-1347873f8cc8" href="https://www.engadget.com/apple-appeals-ban-on-watch-series-9-and-ultra-2-174046101.html" data-ylk="elm:hdln;itc:0;pos:1;sec:strm;subsec:moreforyou;cpos:20;ct:story;g:323bb63c-c359-4f8c-a702-1347873f8cc8" data-hosted-type="HOSTED">Apple appeals ban on Watch Series 9 and Ultra 2</a></h4><p>Apple has filed an appeal to the International Trade Commision attempting to reverse a ban on US sales of the Apple Watch Series 9 and Ultra 2. The company’s also requesting an emergency stay on the ban until a decision is reached regarding proposed redesigns of both smartwatch models.</p></div></div></li></ul></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Anytype – local-first, P2P knowledge management (123 pts)]]></title>
            <link>https://anytype.io/</link>
            <guid>38794733</guid>
            <pubDate>Thu, 28 Dec 2023 16:00:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://anytype.io/">https://anytype.io/</a>, See on <a href="https://news.ycombinator.com/item?id=38794733">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Particle Life (159 pts)]]></title>
            <link>https://github.com/hunar4321/particle-life</link>
            <guid>38794625</guid>
            <pubDate>Thu, 28 Dec 2023 15:52:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/hunar4321/particle-life">https://github.com/hunar4321/particle-life</a>, See on <a href="https://news.ycombinator.com/item?id=38794625">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/65893b444b686267ca39d78e23a1266b55a06293669f81efac2c370afb327ae4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f68756e6172343332312f6c6966655f636f6465"><img src="https://camo.githubusercontent.com/65893b444b686267ca39d78e23a1266b55a06293669f81efac2c370afb327ae4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f68756e6172343332312f6c6966655f636f6465" alt="GitHub repo size" data-canonical-src="https://img.shields.io/github/repo-size/hunar4321/life_code"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c2b61dab1da9fe2b6d1615f7f70e4bbbb0faf13c82eb7e3652c23dbd3ca6d9eb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f68756e6172343332312f6c6966655f636f6465"><img src="https://camo.githubusercontent.com/c2b61dab1da9fe2b6d1615f7f70e4bbbb0faf13c82eb7e3652c23dbd3ca6d9eb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f68756e6172343332312f6c6966655f636f6465" alt="GitHub" data-canonical-src="https://img.shields.io/github/license/hunar4321/life_code"></a></p>
<h2 tabindex="-1" dir="auto">Particle Life Simulation</h2>
<p dir="auto">A simple program to simulate primitive Artificial Life using simple rules of attraction or repulsion among atom-like particles, producing complex self-organzing life-like patterns. Excluding the GUI elements, the code is less than a page. The video tutorial and walkthrough are available below.</p>
<h2 tabindex="-1" dir="auto">Learn More Here (YouTube video tutorial):</h2>
<p dir="auto"><a href="https://youtu.be/0Kx4Y9TVMGg" rel="nofollow">https://youtu.be/0Kx4Y9TVMGg</a></p>
<h2 tabindex="-1" dir="auto">Online Demo (JavaScript version):</h2>
<p dir="auto">Click here for a live demo (JavaScript):</p>
<ul dir="auto">
<li>2d - <a href="https://hunar4321.github.io/particle-life/particle_life.html" rel="nofollow">https://hunar4321.github.io/particle-life/particle_life.html</a></li>
<li>3d - <a href="https://hunar4321.github.io/particle-life/particle_life_3d.html" rel="nofollow">https://hunar4321.github.io/particle-life/particle_life_3d.html</a></li>
</ul>
<h2 tabindex="-1" dir="auto">Interface (C++ version)</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/hunar4321/particle-life/blob/main/images/interface.jpg"><img src="https://github.com/hunar4321/particle-life/raw/main/images/interface.jpg" alt=""></a></p>
<h2 tabindex="-1" dir="auto">Example Results</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/hunar4321/particle-life/blob/main/images/big_pic.jpg"><img src="https://github.com/hunar4321/particle-life/raw/main/images/big_pic.jpg" alt=""></a></p>
<h2 tabindex="-1" dir="auto">Some Interesting Patterns to Reproduce:</h2>
<p dir="auto">You do not need to be exact with the parameters to reproduce these patterns. The best way to get interesting patterns is to first try random parameter explorations, once you find an interesting pattern, try fine-tuning it gradually. To avoid becoming stuck at a local maximum, you can make some occasional big parameter jumps. In this way interesting and different patterns shall keep poping up.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/hunar4321/particle-life/blob/main/images/some_patterns.jpg"><img src="https://github.com/hunar4321/particle-life/raw/main/images/some_patterns.jpg" alt=""></a></p>
<h2 tabindex="-1" dir="auto">To use:</h2>
<p dir="auto">Download this repo. unzip the file then go to /particle_life/bin/ folder and click on particle_life.exe</p>
<h2 tabindex="-1" dir="auto">Code:</h2>
<p dir="auto">The source code is available in C++, JavaScript, and Python.
Watch this YouTube video for a walkthrough tutorial: <a href="https://youtu.be/0Kx4Y9TVMGg" rel="nofollow">https://youtu.be/0Kx4Y9TVMGg</a></p>
<p dir="auto">If you would like to contribute to the C++ program, the core algorithm is the first 100 lines of code at:  "/particle_life/src/ofApp.cpp". The rest are GUI components and rendering controls which are provided by the openFrameworks library an opensource and easy-to-use image rendering library.</p>
<p dir="auto">To start, download this repository then download openFrameworks library from here: <a href="https://openframeworks.cc/" rel="nofollow">https://openframeworks.cc/</a>. Use openFramework's projectGenerator and import /particle_life/ folder to the project.</p>
<p dir="auto">Alternatively, generate a new openFramework project and add ofxGui. Once the project files are generated replace the /src/ folder with the one provided here.</p>
<p dir="auto">You can now compile the C++ code on your machine.</p>
<h2 tabindex="-1" dir="auto">Other Ports:</h2>
<ul dir="auto">
<li><a href="https://github.com/NiclasEriksen/game-of-leif">Godot</a></li>
<li><a href="https://github.com/ChevyRay/smarticles">Rust</a></li>
<li><a href="https://github.com/sikora507/go-artificial-life">Go-1</a>, <a href="https://github.com/fglo/particles-rules-of-attraction">Go-2</a>, <a href="https://github.com/youssefboulmalf/Particle-Life-Go">Go-3</a></li>
<li><a href="https://github.com/gianfa/pyrticleslife">Python</a></li>
<li><a href="https://github.com/ravener/love-life">Lua</a></li>
<li><a href="https://github.com/a740g/Particle-Life">QB64-PE</a></li>
<li><a href="https://github.com/CapsAdmin/webgl-particles">Webgl</a></li>
<li><a href="https://github.com/helloimalemur/ParticleSimulation">Java</a></li>
<li><a href="https://github.com/BlinkSun/ParticleLifeSimulation">C# Winforms</a></li>
<li><a href="https://www.freebasic.net/forum/viewtopic.php?p=294331#p294331" rel="nofollow">FreeBasic</a></li>
</ul>
<h2 tabindex="-1" dir="auto">The JavaScript code is as simple as this:</h2>
<p dir="auto">Also, look at the particle_life.html file for a more optimized version - thanks to those who have contributed.</p>
<div dir="auto" data-snippet-clipboard-copy-content="<canvas id=&quot;life&quot; width=&quot;500&quot; height=&quot;500&quot;></canvas>
<script>
  //Hunar Ahmad @ brainxyz
  m = document.getElementById(&quot;life&quot;).getContext(&quot;2d&quot;);
  draw = (x, y, c, s) => {
    m.fillStyle = c;
    m.fillRect(x, y, s, s);
  };
  atoms = [];
  atom = (x, y, c) => {
    return { x: x, y: y, vx: 0, vy: 0, color: c };
  };
  random = () => {
    return Math.random() * 400 + 50;
  };
  create = (number, color) => {
    group = [];
    for (let i = 0; i < number; i++) {
      group.push(atom(random(), random(), color));
      atoms.push(group[i]);
    }
    return group;
  };
  rule = (atoms1, atoms2, g) => {
    for (let i = 0; i < atoms1.length; i++) {
      fx = 0;
      fy = 0;
      for (let j = 0; j < atoms2.length; j++) {
        a = atoms1[i];
        b = atoms2[j];
        dx = a.x - b.x;
        dy = a.y - b.y;
        d = Math.sqrt(dx * dx + dy * dy);
        if (d > 0 &amp;&amp; d < 80) {
          F = (g * 1) / d;
          fx += F * dx;
          fy += F * dy;
        }
      }
      a.vx = (a.vx + fx) * 0.5;
      a.vy = (a.vy + fy) * 0.5;
      a.x += a.vx;
      a.y += a.vy;
      if (a.x <= 0 || a.x >= 500) { a.vx *= -1; }
      if (a.y <= 0 || a.y >= 500) { a.vy *= -1; }
    }
  };
  yellow = create(200, &quot;yellow&quot;);
  red = create(200, &quot;red&quot;);
  green = create(200, &quot;green&quot;);
  update = () => {
    rule(green, green, -0.32);
    rule(green, red, -0.17);
    rule(green, yellow, 0.34);
    rule(red, red, -0.1);
    rule(red, green, -0.34);
    rule(yellow, yellow, 0.15);
    rule(yellow, green, -0.2);
    m.clearRect(0, 0, 500, 500);
    draw(0, 0, &quot;black&quot;, 500);
    for (i = 0; i < atoms.length; i++) {
      draw(atoms[i].x, atoms[i].y, atoms[i].color, 5);
    }
    requestAnimationFrame(update);
  };
  update();
</script>"><pre><span>&lt;</span><span>canvas</span> <span>id</span>="<span>life</span>" <span>width</span>="<span>500</span>" <span>height</span>="<span>500</span>"<span>&gt;</span><span>&lt;/</span><span>canvas</span><span>&gt;</span>
<span>&lt;</span><span>script</span><span>&gt;</span>
  <span>//Hunar Ahmad @ brainxyz</span>
  <span>m</span> <span>=</span> <span>document</span><span>.</span><span>getElementById</span><span>(</span><span>"life"</span><span>)</span><span>.</span><span>getContext</span><span>(</span><span>"2d"</span><span>)</span><span>;</span>
  <span>draw</span> <span>=</span> <span>(</span><span>x</span><span>,</span> <span>y</span><span>,</span> <span>c</span><span>,</span> <span>s</span><span>)</span> <span>=&gt;</span> <span>{</span>
    <span>m</span><span>.</span><span>fillStyle</span> <span>=</span> <span>c</span><span>;</span>
    <span>m</span><span>.</span><span>fillRect</span><span>(</span><span>x</span><span>,</span> <span>y</span><span>,</span> <span>s</span><span>,</span> <span>s</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>
  <span>atoms</span> <span>=</span> <span>[</span><span>]</span><span>;</span>
  <span>atom</span> <span>=</span> <span>(</span><span>x</span><span>,</span> <span>y</span><span>,</span> <span>c</span><span>)</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>{</span> <span>x</span>: <span>x</span><span>,</span> <span>y</span>: <span>y</span><span>,</span> <span>vx</span>: <span>0</span><span>,</span> <span>vy</span>: <span>0</span><span>,</span> <span>color</span>: <span>c</span> <span>}</span><span>;</span>
  <span>}</span><span>;</span>
  <span>random</span> <span>=</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>Math</span><span>.</span><span>random</span><span>(</span><span>)</span> <span>*</span> <span>400</span> <span>+</span> <span>50</span><span>;</span>
  <span>}</span><span>;</span>
  <span>create</span> <span>=</span> <span>(</span><span>number</span><span>,</span> <span>color</span><span>)</span> <span>=&gt;</span> <span>{</span>
    <span>group</span> <span>=</span> <span>[</span><span>]</span><span>;</span>
    <span>for</span> <span>(</span><span>let</span> <span>i</span> <span>=</span> <span>0</span><span>;</span> <span>i</span> <span>&lt;</span> <span>number</span><span>;</span> <span>i</span><span>++</span><span>)</span> <span>{</span>
      <span>group</span><span>.</span><span>push</span><span>(</span><span>atom</span><span>(</span><span>random</span><span>(</span><span>)</span><span>,</span> <span>random</span><span>(</span><span>)</span><span>,</span> <span>color</span><span>)</span><span>)</span><span>;</span>
      <span>atoms</span><span>.</span><span>push</span><span>(</span><span>group</span><span>[</span><span>i</span><span>]</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>group</span><span>;</span>
  <span>}</span><span>;</span>
  <span>rule</span> <span>=</span> <span>(</span><span>atoms1</span><span>,</span> <span>atoms2</span><span>,</span> <span>g</span><span>)</span> <span>=&gt;</span> <span>{</span>
    <span>for</span> <span>(</span><span>let</span> <span>i</span> <span>=</span> <span>0</span><span>;</span> <span>i</span> <span>&lt;</span> <span>atoms1</span><span>.</span><span>length</span><span>;</span> <span>i</span><span>++</span><span>)</span> <span>{</span>
      <span>fx</span> <span>=</span> <span>0</span><span>;</span>
      <span>fy</span> <span>=</span> <span>0</span><span>;</span>
      <span>for</span> <span>(</span><span>let</span> <span>j</span> <span>=</span> <span>0</span><span>;</span> <span>j</span> <span>&lt;</span> <span>atoms2</span><span>.</span><span>length</span><span>;</span> <span>j</span><span>++</span><span>)</span> <span>{</span>
        <span>a</span> <span>=</span> <span>atoms1</span><span>[</span><span>i</span><span>]</span><span>;</span>
        <span>b</span> <span>=</span> <span>atoms2</span><span>[</span><span>j</span><span>]</span><span>;</span>
        <span>dx</span> <span>=</span> <span>a</span><span>.</span><span>x</span> <span>-</span> <span>b</span><span>.</span><span>x</span><span>;</span>
        <span>dy</span> <span>=</span> <span>a</span><span>.</span><span>y</span> <span>-</span> <span>b</span><span>.</span><span>y</span><span>;</span>
        <span>d</span> <span>=</span> <span>Math</span><span>.</span><span>sqrt</span><span>(</span><span>dx</span> <span>*</span> <span>dx</span> <span>+</span> <span>dy</span> <span>*</span> <span>dy</span><span>)</span><span>;</span>
        <span>if</span> <span>(</span><span>d</span> <span>&gt;</span> <span>0</span> <span>&amp;&amp;</span> <span>d</span> <span>&lt;</span> <span>80</span><span>)</span> <span>{</span>
          <span>F</span> <span>=</span> <span>(</span><span>g</span> <span>*</span> <span>1</span><span>)</span> <span>/</span> <span>d</span><span>;</span>
          <span>fx</span> <span>+=</span> <span>F</span> <span>*</span> <span>dx</span><span>;</span>
          <span>fy</span> <span>+=</span> <span>F</span> <span>*</span> <span>dy</span><span>;</span>
        <span>}</span>
      <span>}</span>
      <span>a</span><span>.</span><span>vx</span> <span>=</span> <span>(</span><span>a</span><span>.</span><span>vx</span> <span>+</span> <span>fx</span><span>)</span> <span>*</span> <span>0.5</span><span>;</span>
      <span>a</span><span>.</span><span>vy</span> <span>=</span> <span>(</span><span>a</span><span>.</span><span>vy</span> <span>+</span> <span>fy</span><span>)</span> <span>*</span> <span>0.5</span><span>;</span>
      <span>a</span><span>.</span><span>x</span> <span>+=</span> <span>a</span><span>.</span><span>vx</span><span>;</span>
      <span>a</span><span>.</span><span>y</span> <span>+=</span> <span>a</span><span>.</span><span>vy</span><span>;</span>
      <span>if</span> <span>(</span><span>a</span><span>.</span><span>x</span> <span>&lt;=</span> <span>0</span> <span>||</span> <span>a</span><span>.</span><span>x</span> <span>&gt;=</span> <span>500</span><span>)</span> <span>{</span> <span>a</span><span>.</span><span>vx</span> <span>*=</span> <span>-</span><span>1</span><span>;</span> <span>}</span>
      <span>if</span> <span>(</span><span>a</span><span>.</span><span>y</span> <span>&lt;=</span> <span>0</span> <span>||</span> <span>a</span><span>.</span><span>y</span> <span>&gt;=</span> <span>500</span><span>)</span> <span>{</span> <span>a</span><span>.</span><span>vy</span> <span>*=</span> <span>-</span><span>1</span><span>;</span> <span>}</span>
    <span>}</span>
  <span>}</span><span>;</span>
  <span>yellow</span> <span>=</span> <span>create</span><span>(</span><span>200</span><span>,</span> <span>"yellow"</span><span>)</span><span>;</span>
  <span>red</span> <span>=</span> <span>create</span><span>(</span><span>200</span><span>,</span> <span>"red"</span><span>)</span><span>;</span>
  <span>green</span> <span>=</span> <span>create</span><span>(</span><span>200</span><span>,</span> <span>"green"</span><span>)</span><span>;</span>
  <span>update</span> <span>=</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
    <span>rule</span><span>(</span><span>green</span><span>,</span> <span>green</span><span>,</span> <span>-</span><span>0.32</span><span>)</span><span>;</span>
    <span>rule</span><span>(</span><span>green</span><span>,</span> <span>red</span><span>,</span> <span>-</span><span>0.17</span><span>)</span><span>;</span>
    <span>rule</span><span>(</span><span>green</span><span>,</span> <span>yellow</span><span>,</span> <span>0.34</span><span>)</span><span>;</span>
    <span>rule</span><span>(</span><span>red</span><span>,</span> <span>red</span><span>,</span> <span>-</span><span>0.1</span><span>)</span><span>;</span>
    <span>rule</span><span>(</span><span>red</span><span>,</span> <span>green</span><span>,</span> <span>-</span><span>0.34</span><span>)</span><span>;</span>
    <span>rule</span><span>(</span><span>yellow</span><span>,</span> <span>yellow</span><span>,</span> <span>0.15</span><span>)</span><span>;</span>
    <span>rule</span><span>(</span><span>yellow</span><span>,</span> <span>green</span><span>,</span> <span>-</span><span>0.2</span><span>)</span><span>;</span>
    <span>m</span><span>.</span><span>clearRect</span><span>(</span><span>0</span><span>,</span> <span>0</span><span>,</span> <span>500</span><span>,</span> <span>500</span><span>)</span><span>;</span>
    <span>draw</span><span>(</span><span>0</span><span>,</span> <span>0</span><span>,</span> <span>"black"</span><span>,</span> <span>500</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>i</span> <span>=</span> <span>0</span><span>;</span> <span>i</span> <span>&lt;</span> <span>atoms</span><span>.</span><span>length</span><span>;</span> <span>i</span><span>++</span><span>)</span> <span>{</span>
      <span>draw</span><span>(</span><span>atoms</span><span>[</span><span>i</span><span>]</span><span>.</span><span>x</span><span>,</span> <span>atoms</span><span>[</span><span>i</span><span>]</span><span>.</span><span>y</span><span>,</span> <span>atoms</span><span>[</span><span>i</span><span>]</span><span>.</span><span>color</span><span>,</span> <span>5</span><span>)</span><span>;</span>
    <span>}</span>
    <span>requestAnimationFrame</span><span>(</span><span>update</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>
  <span>update</span><span>(</span><span>)</span><span>;</span>
<span>&lt;/</span><span>script</span><span>&gt;</span></pre></div>

<p dir="auto">Related topics:
Particle Life Simulation,
Primordial Soup - Evolution,
Conway's game of life,
Cellular automata,
Self organzing patterns,</p>
<p dir="auto">This project was inspired by: Jeffery Ventrella's Clusters <a href="http://www.ventrella.com/Clusters/" rel="nofollow">http://www.ventrella.com/Clusters/</a>. I do not have access to Ventrella's code but I guess the main difference of this project from the other particle life projects is that I did not implement collision detection and this made simulating thousands of particles possible in real-time. Also, I added GUI controls to change the parameters in real-time allowing easy fine-tuning and exploration, hence, I was able to find some never-seen-before patterns emerge form some extremely simple models of relations.
The code here is probably an order of magnitude simpler than any other Artificial Life codes out there because I started this code solely as an educational material for non-programmers and general audience to prove the point that complexity can arise from simplicity.</p>
<h2 tabindex="-1" dir="auto">Todos:</h2>
<ol dir="auto">
<li>Adding the ability to save and load parameters (so that people can easily share the interesting models they find)</li>
<li>Ability to add more particle types (currently it is fixed to four particle types)</li>
<li>Currently, the biggest bottleneck is the nested for-loops (which calculate the pairwise distance among all particles) making the computational complexity quadratic. It would be amazing if we could find a way around.</li>
<li>Alternative to point 3, computing the pairwise distances are embarrassingly parallel so it can be computed on GPU.</li>
<li>Adding the ability to resize the screen and improving boundary-checking as many fast moving particles can escape the screen bounds.</li>
<li>Adding a more intuitive UI so that it gives the ability for a finer control over the parameters.</li>
<li>Adding a randomize button or, even better, having a simple meta rule to mutate the initial rule continously and recursively. This way the patterns will never get stuck on a local maximum and will keep changing!</li>
<li>A better way to fine-tune is to use an evolutionary algorithm to select and optimize the parameters but one needs to write a fitness function for that. I currently don't know what fitness function corresponds to in the realm of this program. In our world the fitness function is competition and survival of the fittest. However, here we fine-tune and select the parameters that produce interesting patterns for us but the word "interesting" is easier to say than to define!</li>
</ol>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Amazon receives FDA warning letter for supplements with undeclared ingredients (440 pts)]]></title>
            <link>https://www.fda.gov/inspections-compliance-enforcement-and-criminal-investigations/warning-letters/amazoncom-inc-662503-12202023</link>
            <guid>38794068</guid>
            <pubDate>Thu, 28 Dec 2023 15:07:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fda.gov/inspections-compliance-enforcement-and-criminal-investigations/warning-letters/amazoncom-inc-662503-12202023">https://www.fda.gov/inspections-compliance-enforcement-and-criminal-investigations/warning-letters/amazoncom-inc-662503-12202023</a>, See on <a href="https://news.ycombinator.com/item?id=38794068">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

                                 <article id="main-content" role="article">
          
                                                                <header role="heading" aria-level="1">
                         <div id="block-entityviewcontent-8" data-block-plugin-id="entity_view:node">

        <p>WARNING LETTER</p>
      <h2>Amazon.com, Inc.
            
      <span>
                  MARCS-CMS 662503 —           <time datetime="2023-12-20T00:00:00Z">December 20, 2023</time>
</span></h2>


    

 
</div>






                      </header>
                              
                                                                           <div role="main">

                            
                            
                            
                            
                                              
  
 

                 

  <hr>
 

<div>
  <dl>

              <dt>Delivery Method:</dt> 
        <dd>Via Email
                                                                                                                                                                                                                                                                                                                                                                                                                              </dd>
      
      
              <dt>Product:</dt> 
        <dd>Drugs<br>Food &amp; Beverages                          
            
            
            
            
            
            
            
             
            
            
            
              
            
            
            </dd>
      
          </dl>
  </div>            


<hr>

<div>
    <dl>
          
          <dt>Issuing Office:</dt>
        
         
          <dd>Center for Drug Evaluation and Research | CDER</dd>
        
         
          <dd><p translate="no"><span>United States</span></p></dd>
        
        
        
        
        
    </dl>
    <dl> 
      
  <div>
    <p>Secondary Issuing Offices</p>
          
              </div>
      </dl></div>  
      
</div>

 

 

<hr>

<p><strong>WARNING LETTER</strong></p>

<p>December 20, 2023</p>

<p><strong>RE: 662503</strong></p>

<p>Dear Mr. Jassy:</p>

<p>This letter concerns your firm’s distribution of products that violate the Federal Food, Drug, and Cosmetic Act (the “FD&amp;C Act”). The United States Food and Drug Administration (FDA) purchased on your website, www.amazon.com, products that are labeled as energy enhancing supplements or food, but laboratory analyses confirmed that they contained undeclared and potentially harmful active pharmaceutical ingredients. As discussed further below, your firm is responsible for introducing or delivering for introduction into interstate commerce products that are unapproved new drugs under section 505(a) of the FD&amp;C Act, 21 U.S.C. 355(a). Furthermore, the products are misbranded drugs under section 502 of the FD&amp;C Act, 21 U.S.C. 352. As explained further below, introducing or delivering these products for introduction into interstate commerce is prohibited under sections 301(a), 301(d), and 505(a) of the FD&amp;C Act, 21 U.S.C. 331(a), 331(d), and 355(a). Your firm is also responsible for introducing or delivering for introduction into interstate commerce a food that is prohibited under section 301(ll) of the FD&amp;C Act, 21 U.S.C. 331(ll).</p>

<p>FDA purchased “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” “Mens Maximum Energy Supplement,” and “X Max Triple Shot Energy Honey” through your website, www.amazon.com. All of these products were introduced or delivered for introduction into interstate commerce by Amazon via your Fulfillment by Amazon service.<sup><em><strong>1</strong></em></sup> FDA confirmed through laboratory analyses that the “MANNERS Energy Boost,” “Round 2,” “Genergy,” and “X Max Triple Shot Energy Honey” products, purchased on www.amazon.com, contained the active pharmaceutical ingredient (API) tadalafil; and the “WeFun,”<sup><em><strong>2</strong></em></sup> “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” products, also purchased on www.amazon.com, contained the API sildenafil. These ingredients are not declared on the products’ labeling.<sup><em><strong>3</strong></em></sup> Sildenafil and tadalafil are phosphodiesterase type-5 (PDE-5) inhibitors and the active ingredients in the FDA-approved prescription drugs Viagra and Cialis, respectively, used to treat erectile dysfunction (ED). These undeclared ingredients may interact with nitrates found in some prescription drugs, such as nitroglycerin, and may lower blood pressure to dangerous levels.</p>

<p>Information on the labels and/or labeling of “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” demonstrates that these products are marketed as dietary supplements<sup><em><strong>4</strong></em></sup>. However, these products do not meet the definition of “dietary supplement” under section 201(ff) of the FD&amp;C Act, 21 U.S.C. 321(ff). Under section 201(ff)(3)(B)(i) of the FD&amp;C Act, 21 U.S.C. 321(ff)(3)(B)(i), a product is not a dietary supplement if it includes an article that is approved as a new drug under section 505 of the FD&amp;C Act, unless that article was marketed as a dietary supplement or food before its approval as a drug. Sildenafil and tadalafil were not marketed as dietary supplements or as foods before Viagra and Cialis were FDA-approved. FDA approved Viagra (containing sildenafil as the active ingredient) as a new drug on March 27, 1998. FDA approved Cialis (containing tadalafil as the active ingredient) as a new drug on November 21, 2003. Given that sildenafil and tadalafil were not marketed as dietary supplements or as foods before Viagra and Cialis were FDA-approved, “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement,” which contain sildenafil or tadalafil, are excluded from the definition of “dietary supplement” under section 201(ff)(3)(B)(i) of the FD&amp;C Act.</p>

<p>The remaining product, “X Max Triple Shot Energy Honey,” is a food<sup><em><strong>5</strong></em></sup> that was confirmed by laboratory analysis to contain tadalafil.</p>

<p><u><strong>Unapproved New Drugs</strong></u></p>

<p>The “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” products that are marketed as dietary supplements are drugs as defined by section 201(g)(1) of the FD&amp;C Act, 21 U.S.C. 321(g)(1), because they are intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease and/or intended to affect the structure or any function of the body. Examples of claims observed on the labeling, including the outer packaging, that establish the intended use of these products as drugs include, but may not be limited to, the following:</p>

<p><strong>“MANNERS Energy Boost”</strong><br>
From the product label:</p>

<ul><li>“Energy Boost”</li>
</ul><p><strong>“Round 2”</strong><br>
From the product label:</p>

<ul><li>“THE POWER TO GO AGAIN! STRENGTH * ENERGY * ENDURANCE”</li>
</ul><p><strong>“WeFun”</strong><br>
From the product label:</p>

<ul><li>“Energy[,] Performance”</li>
</ul><p><strong>“Genergy”</strong><br>
From the product label:</p>

<ul><li>“ENERGY FOR MEN”</li>
</ul><p><strong>“Big Guys Male Energy Supplement”</strong><br>
From the product label:</p>

<ul><li>From the product name: “Male Energy Supplement”</li>
	<li>“Extreme Power”</li>
	<li>“Focus . . . Energy . . . Mood”</li>
	<li>“500 MG POWER BOOST”</li>
</ul><p><strong>“Mens Maximum Energy Supplement”</strong><br>
From the product label:</p>

<ul><li>The product name: “Mens Maximum Energy Supplement”</li>
	<li>“NEVER ENDING ENERGY!”</li>
	<li>“STRENGTH[,] ENERGY[,] ENDURANCE”</li>
</ul><p>“MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” are not generally recognized as safe and effective for their above referenced uses and, therefore, are “new drugs” under section 201(p) of the FD&amp;C Act, 21 U.S.C. 321(p). With certain exceptions not applicable here, new drugs may not be legally introduced or delivered for introduction into interstate commerce without prior approval from the FDA, as described in sections 301(d) and 505(a) of the FD&amp;C Act, 21 U.S.C. 331(d) and 355(a). There are no FDA-approved applications in effect for “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement.” Introduction or delivery of these products into interstate commerce without approved applications violates sections 301(d) and 505(a) of the FD&amp;C Act, 21 U.S.C. 331(d) and 355(a).</p>

<p><strong>Misbranded Drugs</strong></p>

<p>Additionally, “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” are misbranded under section 502(a) of the FD&amp;C Act, 21 U.S.C. 352(a). Under section 502(a) of the FD&amp;C Act, 21 U.S.C. 352(a), a drug is misbranded if its labeling is false or misleading in any particular. Section 201(n) of the FD&amp;C Act, 21 U.S.C. 321(n), provides that, in determining whether an article’s labeling or advertising “is misleading there shall be taken into account . . . not only representations made or suggested . . . but also the extent to which the labeling or advertising fails to reveal facts material in light of such representations.” The labeling for these products does not declare that they contain PDE-5 inhibitors. The use of PDE-5 inhibitors can be associated with significant safety issues and the risk of serious adverse events. The undeclared PDE-5 inhibitors in these products may pose serious health risks because consumers with underlying medical issues may take the products without knowing that they can cause serious harm or interact in dangerous ways with other drugs they may be taking. For example, PDE-5 inhibitors may interact with nitrates found in some prescription drugs (such as nitroglycerin) and can lower blood pressure to dangerous levels. Consumers with diabetes, high blood pressure, or heart disease often take nitrates. The failure to disclose these ingredients in the products’ labeling renders them misbranded under section 502(a) of the FD&amp;C Act.</p>

<p>“MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” are also misbranded under section 502(f)(1) of the FD&amp;C Act, 21 U.S.C. 352(f)(1), in that their labeling fails to bear adequate directions for their intended uses. “Adequate directions for use” means directions under which a layman can use a drug safely and for the purposes for which it is intended (see 21 CFR 201.5). Prescription drugs, as defined in section 503(b)(1) of the FD&amp;C Act, 21 U.S.C. 353(b)(1), include those that, because of their toxicity or other potentiality for harmful effect, and/or the method of their use, and/or the collateral measures necessary for their use, are not safe for use except under supervision of a practitioner licensed by law to administer them. All PDE-5 inhibitors which have been approved for marketing by FDA are limited by an approved new drug application to use under the supervision of a practitioner licensed by law to administer such drugs. “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement,” which contain undeclared sildenafil or tadalafil, are also prescription drugs as defined in section 503(b)(1)(A) of the FD&amp;C Act, and as such, can be used safely only at the direction and under the supervision of a licensed practitioner. Therefore, it is impossible to write “adequate directions for use” for “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” such that a layperson can use these drugs safely for their intended uses. These products are not exempt from the requirements that their labeling bear adequate directions for use by a layperson, 21 CFR 201.100(c)(2) and 201.115, because there are no FDA-approved applications in effect for these products. For these reasons, “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” are misbranded under section 502(f)(1) of the FD&amp;C Act.</p>

<p>The undeclared sildenafil or tadalafil in “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” also causes the products to be misbranded under section 502(f)(2) of the FD&amp;C Act, 21 U.S.C. 352(f)(2), because their labeling lacks adequate warnings against unsafe dosage or methods or duration of administration or application, in such manner and form, as are necessary for the protection of users. As previously noted, there is a potential for serious health risks associated with these products, particularly since anyone who takes these products would be unaware of the presence of the undeclared drug ingredients and placed at risk for the associated adverse events.</p>

<p>The introduction or delivery for introduction into interstate commerce of these misbranded drug products is a prohibited act under section 301(a) of the FD&amp;C Act, 21 U.S.C. 331(a).</p>

<p><strong>Prohibited Act under Section 301(ll)</strong></p>

<p>It is a prohibited act under section 301(ll) of the FD&amp;C Act, 21 U.S.C. 331(ll), to introduce or deliver for introduction into interstate commerce any food to which has been added a drug approved under section 505 of the FD&amp;C Act or for which substantial clinical investigations have been instituted and for which the existence of such investigations has been made public. As noted above, FDA purchased “X Max Triple Shot Energy Honey” from www.amazon.com and confirmed through laboratory testing that the product contained undeclared tadalafil. Based on available evidence, FDA has determined that the prohibition in section 301(ll) applies to tadalafil.<sup><em><strong>6</strong></em></sup> The introduction or delivery for introduction into interstate commerce of “X Max Triple Shot Energy Honey” is therefore prohibited under section 301(ll) of the FD&amp;C Act.</p>

<p><strong>Conclusion</strong></p>

<p>The violations cited in this letter are not intended to be an all-inclusive statement of past or present violations that may exist in connection with the products you distribute. You are responsible for investigating and determining the causes of any violations and for preventing their recurrence or the occurrence of other violations. It is your responsibility to ensure that your firm complies with all requirements of federal law, including FDA regulations.</p>

<p>This letter notifies you of our concerns and provides you an opportunity to address them. Failure to adequately address this matter may result in legal action including, without limitation, seizure and/or injunction. Please submit a written response to this letter within fifteen working days from the date of receipt, explaining the specific steps you have taken to address any violations. Include an explanation of each step being taken to prevent the recurrence of violations, including steps you will take to ensure that Amazon will no longer introduce or deliver for introduction into interstate commerce unapproved new drugs and/or misbranded products with undeclared drug ingredients, as well as copies of related documentation. If you believe that the products you distribute are not in violation of the FD&amp;C Act, include your reasoning and any supporting information for our consideration within fifteen working days from the date of receipt of this letter.</p>

<p>Your response should be sent to U.S. Food and Drug Administration, CDER/OC/Office of Unapproved Drugs and Labeling Compliance by email to FDAAdvisory@fda.hhs.gov.</p>

<p>Sincerely,<br>
/S/</p>

<p>Jill Furman<br>
Director<br>
Office of Compliance<br>
Center for Drug Evaluation and Research<br>
Food and Drug Administration</p>

<p>/S/</p>

<p>Ann M. Oxenham, J.D.<br>
Director<br>
Office of Compliance<br>
Center for Food Safety and Applied Nutrition<br>
Food and Drug Administration</p>

<p>____________________________</p>

<p><em><strong>1</strong></em> Amazon distributed each of the products directly to individual U.S. consumers on behalf of third parties. Each of the products was “fulfilled” by Amazon; your website states, “<em>Fulfillment by Amazon (FBA) is a service that allows you to outsource order fulfillment to Amazon. Sign up for Amazon FBA to send products to Amazon’s global network of fulfillment centers and offer customers free, two-day shipping through Prime. When a customer makes a purchase, Amazon fulfillment specialists can pick, pack, and ship the order. We can also provide customer service and process returns for those orders</em>.” (See https://sell.amazon.com/fulfillment-by-amazon).</p>

<p><em><strong>2</strong></em> On August 25, 2023, Hua Da Trading Inc., dba WeFun Inc., issued a voluntary nationwide recall of WeFun Capsules due to the presence of undeclared sildenafil (see https://www.fda.gov/safety/recalls-market-withdrawals-safety-alerts/hua-da-trading-inc-dba-wefun-inc-issues-voluntary-nationwide-recall-wefun-capsules-due-presence).</p>

<p><em><strong>3</strong></em> U.S. Food &amp; Drug Administration, Public Notification: MANNERS Energy Boost contains hidden drug ingredient (February 2, 2023), https://www.fda.gov/drugs/medication-health-fraud/public-notification-manners-energy-boost-contains-hidden-drug-ingredient;<br>
U.S. Food &amp; Drug Administration, Public Notification: Round 2 contains hidden drug ingredient (August 22, 2023),https://www.fda.gov/drugs/medication-health-fraud/round-2-contains-hidden-drug-ingredient;<br>
U.S. Food &amp; Drug Administration, Public Notification: Genergy contains hidden drug ingredient (August 23, 2023), https://www.fda.gov/drugs/medication-health-fraud/genergy-contains-hidden-drug-ingredient;<br>
U.S. Food &amp; Drug Administration, Public Notification: X Max Triple Shot Energy Honey contains hidden drug ingredient (August 23, 2023), https://www.fda.gov/drugs/medication-health-fraud/x-max-triple-shot-energy-honey-contains-hidden-drug-ingredient;<br>
U.S. Food &amp; Drug Administration, Public Notification: WeFun contains hidden drug ingredient (August 23, 2023) https://www.fda.gov/drugs/medication-health-fraud/wefun-contains-hidden-drug-ingredient;<br>
U.S. Food &amp; Drug Administration, Public Notification: Big Guys Male Energy Supplement contains hidden drug ingredient (August 23, 2023), https://www.fda.gov/drugs/medication-health-fraud/big-guys-male-energy-supplement-contains-hidden-drug-ingredient;<br>
U.S. Food &amp; Drug Administration, Public Notification: Mens Maximum Energy Supplement contains hidden drug ingredient (August 23, 2023), https://www.fda.gov/drugs/medication-health-fraud/mens-maximum-energy-supplement-contains-hidden-drug-ingredient.</p>

<p><em><strong>4</strong></em> The labeling for each of these products includes a Supplement Facts panel.</p>

<p><em><strong>5</strong></em> The labeling for this product includes a Nutritional Information panel.</p>

<p><em><strong>6</strong></em> There is an exception if the substance was marketed in food before the drug was approved or before the substantial clinical investigations involving the drug had been instituted. However, based on available evidence, FDA has concluded that this is not the case for tadalafil.</p>


<!--BEGIN QUALTRICS WEBSITE FEEDBACK SNIPPET-->


<!--END WEBSITE FEEDBACK SNIPPET-->

<!--BEGIN QUALTRICS WEBSITE FEEDBACK SNIPPET-->



              
                                            
              
            </article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New U.S. immigration rules spur more visa approvals for STEM workers (200 pts)]]></title>
            <link>https://www.science.org/content/article/new-u-s-immigration-rules-spur-more-visa-approvals-stem-workers</link>
            <guid>38793735</guid>
            <pubDate>Thu, 28 Dec 2023 14:24:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.science.org/content/article/new-u-s-immigration-rules-spur-more-visa-approvals-stem-workers">https://www.science.org/content/article/new-u-s-immigration-rules-spur-more-visa-approvals-stem-workers</a>, See on <a href="https://news.ycombinator.com/item?id=38793735">Hacker News</a></p>
Couldn't get https://www.science.org/content/article/new-u-s-immigration-rules-spur-more-visa-approvals-stem-workers: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[The Most Compelling Reason to Use Firefox Is Sync That Works (435 pts)]]></title>
            <link>https://www.howtogeek.com/the-best-reason-to-use-firefox-is-sync-that-actually-works/</link>
            <guid>38793414</guid>
            <pubDate>Thu, 28 Dec 2023 13:46:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.howtogeek.com/the-best-reason-to-use-firefox-is-sync-that-actually-works/">https://www.howtogeek.com/the-best-reason-to-use-firefox-is-sync-that-actually-works/</a>, See on <a href="https://news.ycombinator.com/item?id=38793414">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                                                       <div>
                    


        

                        <nav>
                <ul>
                    <li><a href="https://www.howtogeek.com/">Home</a></li>
                                                                                            <li><a href="https://www.howtogeek.com/category/web/">Web</a></li>
                                                                                                                                                            </ul>
            </nav>
            
                </div>
                            

    
            
    
        
            
    
    
    
        
    
                            






            
            

    
    
        
    
            
    
            
    
        
            
    
    
    
        
    
                                
    <p>Firefox's continuity features work better than any browser I've tried.</p>

            
            

    
    
        
    
            
    
            
    
        
            
    
    
    
        
    
                                
                                    
                                                                                                                        
                                                <div data-img-url="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/firefox-hero-1.png" data-modal-id="single-image-modal" data-modal-container-id="single-image-modal-container" data-img-caption="&quot;Joe Fedewa \/ How-To Geek&quot;">

        <figure>
            <picture>
                <!--[if IE 9]>
                <video style="display: none;"><![endif]-->
                                    <source media="(min-width: 1024px)" sizes="1140px" srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/firefox-hero-1.png?q=50&amp;fit=contain&amp;w=1140&amp;h=&amp;dpr=1.5">
                                    <source media="(min-width: 768px)" sizes="943px" srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/firefox-hero-1.png?q=50&amp;fit=contain&amp;w=943&amp;h=&amp;dpr=1.5">
                                    <source media="(min-width: 481px)" sizes="767px" srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/firefox-hero-1.png?q=50&amp;fit=contain&amp;w=767&amp;h=&amp;dpr=1.5">
                                    <source media="(min-width: 0px)" sizes="480px" srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/firefox-hero-1.png?q=50&amp;fit=contain&amp;w=480&amp;h=&amp;dpr=1.5">
                                <!--[if IE 9]></video><![endif]-->
                                    <img width="2100" height="1400" alt="Firefox logo." data-img-url="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/firefox-hero-1.png" src="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/firefox-hero-1.png">
                            </picture>
            <figcaption>Joe Fedewa / How-To Geek</figcaption>
        </figure>
    </div>

    
            <!-- No winning ad found for zone: below main pic! -->
    
            
            

    
    
        
    
            
                    </div><div id="article-body" itemprop="articleBody">
<div><h3>Quick Links</h3><ul> <li> <a href="#the-problem-with-chrome-sync">The Problem With Chrome Sync</a> </li> </ul><ul> <li> <a href="#firefox-sync-to-the-rescue">Firefox Sync to the Rescue</a> </li> </ul> </div>
<p>With so much of our digital lives neatly saved and synced in our web browser of choice, the idea of switching to a different one can feel as daunting as moving to a new home. Chrome Sync, in particular, has kept many people using Chrome. However, as good as Chrome Sync is, Firefox Sync is surprisingly better.</p>
<!-- Repeatable debug data: {"injection":"before","adPosition":0,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":0,"nbrPlacementsScanned":0,"ruleCount":10,"degradationStartingPoint":1,"actualCount":310} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":1,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":0,"ruleCount":10,"degradationStartingPoint":1,"actualCount":0} -->
<!-- No winning ad found for zone: below first paragraph! -->
<!-- No winning ad found for zone: mid intro! -->
<p>The promise of <a href="https://www.howtogeek.com/408150/how-to-turn-syncing-on-or-off-in-chrome/">Chrome Sync</a> has always been great, and I feel like it lived up to it for a while. As time has gone on, though, I've had more than a few problems with Chrome Sync. Some of the features simply don't work like they should. It ends up be more frustrating than convenient, which completely defeats the purpose. That's why <a href="https://www.howtogeek.com/787392/why-you-should-try-firefox-on-android/">a recent switch to Firefox</a> felt like a breath of fresh air.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":1,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":1,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":403} -->
<!-- No winning ad found for zone: native in content! -->
<h2 id="the-problem-with-chrome-sync"> The Problem With Chrome Sync </h2>
<div data-img-url="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-12-02.jpg" data-modal-id="single-image-modal" data-modal-container-id="single-image-modal-container" data-img-caption="null"> <figure> <picture><!--[if IE 9]> <video style="display: none;"><![endif]--> <source media="(min-width: 1024px)" sizes="750px" data-srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-12-02.jpg?q=50&amp;fit=crop&amp;w=750&amp;dpr=1.5"> <source media="(min-width: 768px)" sizes="943px" data-srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-12-02.jpg?q=50&amp;fit=crop&amp;w=943&amp;dpr=1.5"> <source media="(min-width: 481px)" sizes="767px" data-srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-12-02.jpg?q=50&amp;fit=crop&amp;w=767&amp;dpr=1.5"> <source media="(min-width: 0px)" sizes="480px" data-srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-12-02.jpg?q=50&amp;fit=crop&amp;w=480&amp;dpr=1.5"><!--[if IE 9]></video><![endif]--><img width="999" height="188" alt="Chrome Sync out of date." data-img-url="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-12-02.jpg" src="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-12-02.jpg"> </picture> </figure> </div>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":1,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":1,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":643} -->
<p>As a refresher, <a href="https://www.howtogeek.com/408363/how-to-choose-what-information-to-sync-in-chrome/">Chrome Sync is capable of syncing</a> bookmarks, passwords, browsing history, tabs, payment info, personal info, and settings across devices signed into with the same Google account. That's the idea, at least.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":1,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":1,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":868} -->
<p>The biggest problems I've had with Chrome Sync are history and tabs. I was constantly having issues with Chrome being able to find things in my history from the address bar. I'd start typing the page name into the bar, expecting to see it propagate in the results, and it never would. These were not pages I visited as a one-off, mind you—they appeared in my browsing history many times. Chrome simply wouldn't bring them up.</p>
<!-- Repeatable debug data: {"injection":"before","adPosition":1,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":1,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":1311} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":2,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":1,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":0} -->
<p>The Tab Syncing feature worked better, but I found it to be terribly laggy. The idea is to pick up where you left off on a different device. That's hard to do when you get to the other device and the "Tabs From Other Devices" aren't current. The situation gets more annoying when you add in the aforementioned history search woes, making it even more frustrating to find pages.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":2,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":395} -->
<p>Long story short, Chrome's continuity features have felt lacking to me for a while. However, they weren't bad enough to be the reason I tried Firefox. I wasn't expecting Firefox Sync to be any better. To be honest, I assumed these were just common browser annoyances. I was wrong.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":2,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":687} -->

<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":2,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":687} -->
<h2 id="firefox-sync-to-the-rescue"> Firefox Sync to the Rescue </h2>
<div data-img-url="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-02-24.jpg" data-modal-id="single-image-modal" data-modal-container-id="single-image-modal-container" data-img-caption="null"> <figure> <picture><!--[if IE 9]> <video style="display: none;"><![endif]--> <source media="(min-width: 1024px)" sizes="750px" data-srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-02-24.jpg?q=50&amp;fit=crop&amp;w=750&amp;dpr=1.5"> <source media="(min-width: 768px)" sizes="943px" data-srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-02-24.jpg?q=50&amp;fit=crop&amp;w=943&amp;dpr=1.5"> <source media="(min-width: 481px)" sizes="767px" data-srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-02-24.jpg?q=50&amp;fit=crop&amp;w=767&amp;dpr=1.5"> <source media="(min-width: 0px)" sizes="480px" data-srcset="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-02-24.jpg?q=50&amp;fit=crop&amp;w=480&amp;dpr=1.5"><!--[if IE 9]></video><![endif]--><img width="1029" height="430" alt="Firefox history results in address bar." data-img-url="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-02-24.jpg" src="https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2023/12/2023-12-19_17-02-24.jpg"> </picture> </figure> </div>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":2,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":927} -->
<p>On the surface, Firefox Sync seems to be basically the same as Chrome Sync. To set it up, you just need to sign into your devices with the same Mozilla account and choose what you'd like to sync. It's an easy process made even easier with scannable QR codes from Firefox on your mobile devices.</p>
<!-- Repeatable debug data: {"injection":"before","adPosition":2,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":1229} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":3,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":0} -->
<p>The magic of Firefox Sync doesn't have anything to do with the core concept. It's essentially trying to do the same things as Chrome Sync. In my experience, the big difference is it actually works.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":3,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":205} -->
<p>When I type the name of a web page from my history in the Firefox address bar, it shows up. Doesn't matter if I've visited that page a hundred times or only once. If it appears in my history, Firefox will show it to me. That includes history from Firefox on <em>all </em>my devices.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":3,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":486} -->
<p>Tab Syncing is even better. As I'm writing this, I opened a webpage on my computer and immediately grabbed my phone, launched Firefox, opened the tabs, and the page had already synced to "Tabs From Other Devices." I didn't have to wait for anything to sync or manually tap a button to make it happen. To borrow a saying, "It just works." As it should.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":3,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":865} -->
<hr>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":3,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":865} -->
<p>Truly, if you do a lot of switching between devices, you should give Firefox a try. I haven't even mentioned the handy "Tabs From Other Devices" toolbar shortcut you can use on the desktop version or the ability to see other devices from the "<a href="https://support.mozilla.org/en-US/kb/how-set-tab-pickup-firefox-view" rel="noopener noreferrer" target="_blank">Firefox View</a>" screen. I didn't switch to Firefox for syncing features, but it is what's keeping me there.</p>
<!-- Repeatable debug data: {"injection":"before","adPosition":3,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":1245} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":4,"startingPoint":0,"skipEvery":null,"nbrPlacementFilledEachSkip":4,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":1,"actualCount":0} -->
 </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Foundations (1997-2000) (149 pts)]]></title>
            <link>https://www.gregegan.net/FOUNDATIONS/</link>
            <guid>38793249</guid>
            <pubDate>Thu, 28 Dec 2023 13:28:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gregegan.net/FOUNDATIONS/">https://www.gregegan.net/FOUNDATIONS/</a>, See on <a href="https://news.ycombinator.com/item?id=38793249">Hacker News</a></p>
<div id="readability-page-1" class="page">

<h2>by Greg Egan</h2>
<div><p><img src="https://www.gregegan.net/FOUNDATIONS/Foundations200.gif" width="300" height="200" alt="Sample diagram from Foundations articles"></p></div>
<!-- *Substitute NavBar --><ul>
<li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html"><span>Special Relativity</span></a> | <a href="https://www.gregegan.net/FOUNDATIONS/02/found02.html"><span>From Special to General</span></a> | <a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html"><span>Black Holes</span></a> | <a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html"><span>Quantum Mechanics</span></a></li>
<li><a href="https://www.gregegan.net/ALLSKIES/AllSkies.html"><span><b>The Book of All Skies</b></span></a> | <a href="https://www.gregegan.net/BORDER/Border.html"><span>“Border Guards”</span></a> | <a href="https://www.gregegan.net/DIASPORA/DIASPORA.html"><span><b>Diaspora</b></span></a> | <a href="https://www.gregegan.net/DICHRONAUTS/DICHRONAUTS.html"><span><b>Dichronauts</b></span></a> | <a href="https://www.gregegan.net/DIDICOSM/Didicosm.html"><span>“Didicosm”</span></a> | <a href="https://www.gregegan.net/DISTRESS/DISTRESS.html"><span><b>Distress</b></span></a> | <a href="https://www.gregegan.net/ESSAYS/Essays.html"><span>Essays</span></a> | <span><i>Foundations</i></span> | <a href="https://www.gregegan.net/HORROR/Horror.html"><span>Horror Stories</span></a> | <a href="https://www.gregegan.net/INCANDESCENCE/Incandescence.html"><span><b>Incandescence</b></span></a> | <a href="https://www.gregegan.net/MISC/Misc.html"><span>Miscellaneous Fiction</span></a> | <a href="https://www.gregegan.net/OCEANIC/Oceanic.html"><span>“Oceanic”</span></a> | <a href="https://www.gregegan.net/ORTHOGONAL/ORTHOGONAL.html"><span><b>Orthogonal</b></span></a> | <a href="https://www.gregegan.net/PERMUTATION/Permutation.html"><span><b>Permutation City</b></span></a> | <a href="https://www.gregegan.net/PLANCK/Planck.html"><span>“The Planck Dive”</span></a> | <a href="https://www.gregegan.net/QUARANTINE/Quarantine.html"><span><b>Quarantine</b></span></a> | <a href="https://www.gregegan.net/SCALE/SCALE.html"><span><b>Scale</b></span></a> | <a href="https://www.gregegan.net/SCHILD/SCHILD.html"><span><b>Schild’s Ladder</b></span></a> | <a href="https://www.gregegan.net/SCIENCE/Science.html"><span>Science Notes</span></a> | <a href="https://www.gregegan.net/TERANESIA/TERANESIA.html"><span><b>Teranesia</b></span></a> | <a href="https://www.gregegan.net/ZENDEGI/ZENDEGI.html"><span><b>Zendegi</b></span></a></li>
<li><a href="https://www.gregegan.net/index.html"><span>Back to home page</span></a> | <a href="https://www.gregegan.net/SiteMap.html#d10_1" target="_top"><span>Site Map</span></a> | <a href="https://www.gregegan.net/SMFrame.html" target="_top"><span>Side-bar Site Map</span></a></li>
</ul><!-- *EndSubstitute -->
<hr>
<p><i>Foundations</i> is a series of articles, first published in the magazine <i>Eidolon</i>, on some of the theories of twentieth-century physics that have most influenced modern science fiction.  However, these are not essays on the history or philosophy of science; their aim is to show how the central idea of each theory leads to detailed, quantitative predictions of real physical effects.  For example, the article on special relativity derives formulas for time dilation, Doppler shift, and aberration.</p>
<p>These articles are for the interested lay reader.  No prior knowledge of mathematics beyond high school algebra and geometry is needed.</p>
<a id="CONTENTS"></a>
<hr>
<h3>Articles online</h3><!-- *Substitute Contents --><ul><li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html">1: Special Relativity</a><sup> </sup><ul><li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html#s1">Spacetime</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html#s2">Rotations in Space</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html#s3">Spacetime Geometry</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html#s4">Rotations in Spacetime</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html#s5">Time Dilation</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html#s6">The Flight to Sirius</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html#s7">Doppler Shift and Aberration</a><sup> </sup></li></ul></li><li><a href="https://www.gregegan.net/FOUNDATIONS/02/found02.html">2: From Special to General</a><sup> </sup><ul><li><a href="https://www.gregegan.net/FOUNDATIONS/02/found02.html#s1">Gravity as Spacetime Curvature</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/02/found02.html#s2">Manifolds</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/02/found02.html#s3">Curved Geometry</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/02/found02.html#s4">Parallel Transport</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/02/found02.html#s5">The Curvature Tensor</a><sup> </sup></li></ul></li><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html">3: Black Holes</a><sup> </sup><ul><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html#s1">Mass</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html#s2">Velocity and Acceleration</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html#s3">Energy and Momentum</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html#s4">The Stress-Energy Tensor</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html#s5">Conservation of 4-momentum in Curved Spacetime</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html#s6">The Einstein Tensor</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html#s7">The Bianchi Identity</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html#s8">The Schwarzschild Solution</a><sup> </sup></li></ul></li><li><a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html">4: Quantum Mechanics</a><sup> </sup><ul><li><a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html#s1">The Birth of Quantum Mechanics</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html#s2">Complex Numbers</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html#s3">Wave Mechanics</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html#s4">Matrix Mechanics</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html#s5">The Uncertainty Principle</a><sup> </sup></li><li><a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html#s6">The Action Principle</a><sup> </sup></li></ul></li></ul><!-- *EndSubstitute -->
<hr>
<!-- *Substitute NavBar --><ul>
<li><a href="https://www.gregegan.net/FOUNDATIONS/01/found01.html"><span>Special Relativity</span></a> | <a href="https://www.gregegan.net/FOUNDATIONS/02/found02.html"><span>From Special to General</span></a> | <a href="https://www.gregegan.net/FOUNDATIONS/03/found03.html"><span>Black Holes</span></a> | <a href="https://www.gregegan.net/FOUNDATIONS/04/found04.html"><span>Quantum Mechanics</span></a></li>
<li><a href="https://www.gregegan.net/ALLSKIES/AllSkies.html"><span><b>The Book of All Skies</b></span></a> | <a href="https://www.gregegan.net/BORDER/Border.html"><span>“Border Guards”</span></a> | <a href="https://www.gregegan.net/DIASPORA/DIASPORA.html"><span><b>Diaspora</b></span></a> | <a href="https://www.gregegan.net/DICHRONAUTS/DICHRONAUTS.html"><span><b>Dichronauts</b></span></a> | <a href="https://www.gregegan.net/DIDICOSM/Didicosm.html"><span>“Didicosm”</span></a> | <a href="https://www.gregegan.net/DISTRESS/DISTRESS.html"><span><b>Distress</b></span></a> | <a href="https://www.gregegan.net/ESSAYS/Essays.html"><span>Essays</span></a> | <span><i>Foundations</i></span> | <a href="https://www.gregegan.net/HORROR/Horror.html"><span>Horror Stories</span></a> | <a href="https://www.gregegan.net/INCANDESCENCE/Incandescence.html"><span><b>Incandescence</b></span></a> | <a href="https://www.gregegan.net/MISC/Misc.html"><span>Miscellaneous Fiction</span></a> | <a href="https://www.gregegan.net/OCEANIC/Oceanic.html"><span>“Oceanic”</span></a> | <a href="https://www.gregegan.net/ORTHOGONAL/ORTHOGONAL.html"><span><b>Orthogonal</b></span></a> | <a href="https://www.gregegan.net/PERMUTATION/Permutation.html"><span><b>Permutation City</b></span></a> | <a href="https://www.gregegan.net/PLANCK/Planck.html"><span>“The Planck Dive”</span></a> | <a href="https://www.gregegan.net/QUARANTINE/Quarantine.html"><span><b>Quarantine</b></span></a> | <a href="https://www.gregegan.net/SCALE/SCALE.html"><span><b>Scale</b></span></a> | <a href="https://www.gregegan.net/SCHILD/SCHILD.html"><span><b>Schild’s Ladder</b></span></a> | <a href="https://www.gregegan.net/SCIENCE/Science.html"><span>Science Notes</span></a> | <a href="https://www.gregegan.net/TERANESIA/TERANESIA.html"><span><b>Teranesia</b></span></a> | <a href="https://www.gregegan.net/ZENDEGI/ZENDEGI.html"><span><b>Zendegi</b></span></a></li>
<li><a href="https://www.gregegan.net/index.html"><span>Back to home page</span></a> | <a href="https://www.gregegan.net/SiteMap.html#d10_1" target="_top"><span>Site Map</span></a> | <a href="https://www.gregegan.net/SMFrame.html" target="_top"><span>Side-bar Site Map</span></a></li>
</ul><!-- *EndSubstitute -->
<hr>
 <!-- *Substitute Address -->
<address>Foundations / created Thursday,  4 December 1997 / revised Saturday, 22 July 2000</address><!-- *EndSubstitute -->
<!-- *Substitute Copyright --><i>Copyright © <a href="https://www.gregegan.net/images/GregEgan.htm">Greg Egan</a>, 1997-2000.  All rights reserved.</i><!-- *EndSubstitute -->


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cold-blooded software (292 pts)]]></title>
            <link>https://dubroy.com/blog/cold-blooded-software/</link>
            <guid>38793206</guid>
            <pubDate>Thu, 28 Dec 2023 13:22:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dubroy.com/blog/cold-blooded-software/">https://dubroy.com/blog/cold-blooded-software/</a>, See on <a href="https://news.ycombinator.com/item?id=38793206">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
			
			<p><small>December 28, 2023
            </small></p><p>It’s 2004 and I’m sitting in one of the largest lecture halls at my university. I’m a computer science major but I’m taking a course on natural history — plants and animals — as one of my electives.</p>
<p>The professor tells us that he’s brought something from home, something he found in his freezer. He reaches down behind his desk, and then holds his arm out to show us what’s sitting in his palm: a baby painted turtle. We’re learning about cold-blooded animals, and it turns out that painted turtle hatchlings are pretty special — they’re one of only a few species that can survive being frozen.</p>
<p>Now, the lecture hall is pretty modern for 2004: there’s an overhead camera at the podium, where the professor can write notes that are displayed on screens around the hall. But instead of writing notes, he puts the turtle under the camera and starts his lecture.</p>
<p>Over the next hour, we watch this little reptile slowly come to life as the professor lectures. The first movements were nearly imperceptible. An eyelid cracking open, a leg inching forward. By the end of the lecture, the turtle has moved about halfway across our screens.</p>
<p>I’ll never forget that class, because it’s where I really understood what it means for an animal to be cold blooded. You see, warm-blooded animals — like humans or mice — have a stable body temperature that stays within a pretty narrow range. For humans, it’s around 37 degrees Celsius. A few degrees higher or lower and we’re in big trouble. Cold-blooded animals like the painted turtle can adapt their metabolism to the temperature around them. They’re active when it’s warm out, and as the environment (and their bodies) get cooler, they move more slowly. Very few of them can survive being frozen like the baby painted turtle can.</p>
<p>I see a similar dichotomy with software projects. Certain technology decisions lead to projects that are warm-blooded: everything is great when there’s constant motion on the project, generating heat. But put warm-blooded software in the freezer, and you’ll pull out a corpse six months later.</p>
<p>Maybe your CI isn’t working because one of the services you depend on got bought or ran out of money. You add a new dependency and find yourself needing to upgrade your compiler. Another package you depend on is deprecated, and doesn’t work with the latest version of the compiler.</p>
<p>Some projects are different. You work alone, make some changes when you’re inspired, and then don’t touch it again for another year, or two, or three. You can’t run something like that as a warm-blooded project. There’s not enough activity to keep the temperature up.</p>
<p>A cold-blooded project is like the baby painted turtle. You can freeze it for a year and then pick it back up right where you left off.</p>
<p>A cold-blooded project uses <a href="https://mcfunley.com/choose-boring-technology">boring technology</a>. The build and test scripts don’t depend on external services that might change, break, or disappear entirely. It uses <a href="https://go.dev/ref/mod#vendoring">vendored dependencies</a>.</p>
<p>The software that powers this blog is cold-blooded. The first commit was nearly twelve years ago — a simple little static site generator to replace my out-of-date Wordpress installation:</p>
<pre><code>commit 68949229ad426c1e8795ee640808db9987ab30ab
Author: Patrick Dubroy &lt;<a href="https://dubroy.com/cdn-cgi/l/email-protection" data-cfemail="4b3b2f3e293924320b2c262a222765282426">[email&nbsp;protected]</a>&gt;
Date:   Sun Jan 8 19:10:24 2012 +0100

    Add templates and site-building script.</code></pre>


<p>It’s written in Python (2, not 3). It depends on four third-party modules, and they’re all committed to the project repository. Everything runs locally, and I deploy the result with rsync over ssh.</p>
<p>And boy am I glad I decided to do it that way. I’ve made a few small improvements over the years, but otherwise it’s continued to work without modification. And I fully expect that it will still be working in another twelve years.</p>
<p>🐢</p>


<p>👉 <em>You might also want to check out <a href="https://news.ycombinator.com/item?id=38793206">the discussion on Hacker News</a>.</em></p>
<p><small><i>Thanks to Thorsten Ball for helpful suggestions on this post.</i></small></p>
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lode Runner (HTML5 Remake) (263 pts)]]></title>
            <link>https://loderunnerwebgame.com/game/</link>
            <guid>38792753</guid>
            <pubDate>Thu, 28 Dec 2023 12:24:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://loderunnerwebgame.com/game/">https://loderunnerwebgame.com/game/</a>, See on <a href="https://news.ycombinator.com/item?id=38792753">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[How random is xkcd? (2015) (177 pts)]]></title>
            <link>https://hardmath123.github.io/xkcd-random.html</link>
            <guid>38792631</guid>
            <pubDate>Thu, 28 Dec 2023 12:06:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hardmath123.github.io/xkcd-random.html">https://hardmath123.github.io/xkcd-random.html</a>, See on <a href="https://news.ycombinator.com/item?id=38792631">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="postcontent">
            <section>
                
                <center><em><p>A blatant abuse of statistics.</p>
</em></center>
                <h4>Friday, March 20, 2015 · 6 min read</h4>
<p>Apparently Randall Munroe gets a lot of messages saying that the “random”
button on xkcd is biased.</p>
<blockquote>
<p>2015-03-19 16:47:00    <strong>Hobz</strong>    also, Randall, the random button on the xkcd
frontpage is frustratingly un-random</p>
<p>2015-03-19 18:50:52   <strong>~Randall</strong>    it’s random.</p>
<p>2015-03-19 18:50:59   <strong>~Randall</strong>    people contact me constantly to tell me
that it’s not</p>
<p>2015-03-19 18:51:17   <strong>~Randall</strong>    which is a nice illustration of that mental
bias we have</p>
</blockquote>
<p>I thought I would do a little investigating to see just how random xkcd is.</p>
<hr>
<p>Making consistently random numbers (yes, that sounds weird) is really important
in things like cryptography. Unrandom random numbers can cripple an otherwise
secure network. So there’s a surprisingly large amount of work dedicated to
randomness.</p>
<p>There are services like <a href="http://www.random.org/">random.org</a> which pride
themselves on randomness, and <a href="http://www.fourmilab.ch/hotbits/">HotBits</a>,
which lets you order random bytes that are generated from radioactive decay. A
lot of applications use <code>/dev/urandom/</code>, which is an OS-level random generator
that uses all sorts of sources of entropy such as network noise, CPU heat, and
the current weather in Kansas.</p>
<p>Unfortunately, it’s <em>really</em> hard to tell whether numbers are random or not.
Of course, patterns <a href="http://boallen.com/random-numbers.html">can creep into random
numbers</a>. But more annoyingly, a
glaringly obvious pattern might just be accidental. My favorite example of this
is the <a href="http://en.wikipedia.org/wiki/Feynman_point">Feynman Point</a>, which is a
series of lots of 9s that appears somewhere in the (very unpredictable) decimal
expansion of pi.</p>
<p><img src="http://imgs.xkcd.com/comics/ayn_random.png" alt="xkcd 1277"></p>
<p>There are a bunch of established ways to test the randomness of a random number
generator (such as the excitingly-named <a href="http://en.wikipedia.org/wiki/Diehard_tests">Diehard
tests</a>). They all test for features
that ostensibly random data should have. For example, a random stream of bits
should have almost as many ones as zeros. Not all tests are that obvious,
though, and statistics can be very slippery and unintuitive when it feels like
it.</p>
<p>NIST (the National Institute of Standards and Technology, who deal with things
like how long an inch is and how to backdoor elliptic curves)
<a href="http://csrc.nist.gov/groups/ST/toolkit/rng/documentation_software.html">publishes</a>
a standard for randomness based on such tests, and distributes software that
runs these tests on datasets.</p>
<p>I wrote a Python program to download 10,000 xkcd-random numbers (yay
<code>requests</code>!), and converted them into bitstrings. Then, I fed them to the NIST
Statistical Test Suite.</p>
<p>The results are below:</p>
<pre><code>
------------------------------------------------------------------------------
RESULTS FOR THE UNIFORMITY OF P-VALUES AND THE PROPORTION OF PASSING SEQUENCES
------------------------------------------------------------------------------
   generator is &lt;data/data.xkcd.long&gt;
------------------------------------------------------------------------------
 C1  C2  C3  C4  C5  C6  C7  C8  C9 C10  P-VALUE  PROPORTION  STATISTICAL TEST
------------------------------------------------------------------------------
  5   8   7  13   9   8  13  12  15  10  0.437274    100/100     Frequency
 10  10  11   9  10  16  10   6   8  10  0.759756     99/100     BlockFrequency
  5  12  13  10   7  10  10  10   9  14  0.699313    100/100     CumulativeSums
  8   3  13   9   9  14  13   8  12  11  0.366918     98/100     CumulativeSums
  8  12  11   3   9   8  17  12   9  11  0.224821    100/100     Runs
  7   8   8   6  15   9  12   9  15  11  0.437274     99/100     LongestRun
  7   8   7  16   0  25   0  25   0  12  0.000000 *  100/100     FFT
  3  10   4  19  15   0  18   6  10  15  0.000009 *  100/100     Serial
  9  14  10   2  14   8   6  10  16  11  0.080519    100/100     Serial
 16   1   5   9   6   0   6   0  10  47  0.000000 *   93/100  *  LinearComplexity
</code></pre><p>The important column here is “Proportion”, which shows the pass rate. They’re
all stellar.</p>
<p>If that isn’t convincing, I ran an obviously nonrandom sample for comparison.
This is what NIST’s STS thinks of the first 100,000 bits of Project Gutenberg’s
<a href="http://www.gutenberg.org/dirs/etext98/2ws1610.txt">plaintext version</a> of
<em>Romeo and Juliet</em>:</p>
<pre><code>
------------------------------------------------------------------------------
RESULTS FOR THE UNIFORMITY OF P-VALUES AND THE PROPORTION OF PASSING SEQUENCES
------------------------------------------------------------------------------
   generator is &lt;data/data.rnj&gt;
------------------------------------------------------------------------------
 C1  C2  C3  C4  C5  C6  C7  C8  C9 C10  P-VALUE  PROPORTION  STATISTICAL TEST
------------------------------------------------------------------------------
 95   3   0   1   0   0   1   0   0   0  0.000000 *   25/100  *  Frequency
 55  14  10   6   6   3   1   1   3   1  0.000000 *   64/100  *  BlockFrequency
 94   3   1   0   0   1   1   0   0   0  0.000000 *   28/100  *  CumulativeSums
 93   4   1   1   0   0   0   0   1   0  0.000000 *   30/100  *  CumulativeSums
 51   7  10  10   4   4   2   5   2   5  0.000000 *   61/100  *  Runs
 90   8   1   1   0   0   0   0   0   0  0.000000 *   44/100  *  LongestRun
 92   2   2   2   0   1   0   1   0   0  0.000000 *   23/100  *  FFT
100   0   0   0   0   0   0   0   0   0  0.000000 *    0/100  *  Serial
100   0   0   0   0   0   0   0   0   0  0.000000 *    0/100  *  Serial
 14   2   2   7  11   0   4   0  11  49  0.000000 *   95/100  *  LinearComplexity
</code></pre><p>Much worse.</p>
<p>I encourage you to play with the STS code. It lets you do all sorts of other
neat things, like testing bitstrings for common “templates” and reporting if
too many are found. It also segfaults all over the place, which is actually
very disturbing considering that it’s technically part of the US government’s
computer security project.</p>
<p>In any case, we’ve established that xkcd’s random generator is reasonably
unpredictable and unbiased. As it happens, they’re using the Mersenne Twister,
which is a well-established pseudorandom generation algorithm.</p>
<hr>
<p>So why does the random number generation appear so biased when we’re idly
refreshing on lazy Sunday nights? Part of it is, of course, human nature. We
like to see patterns everywhere.</p>
<p>But here’s a more concrete, mathematical explanation. The conceptual idea is
that in the beginning, hitting “random” is likelier to hit an unread comic, but
once you’ve seen more and more of them, you get repeats. Let’s try to quantify
this: we’re going to calculate the <em>expected value</em> of the number of times you
need to hit “random” until you have seen every single comic. You may have seen
this problem in the context of “how many times do you need to roll a die until
you have rolled all six faces at least once?”.</p>
<p><a href="http://en.wikipedia.org/wiki/Expected_value">Expected value</a> is the average
value of some random variable if you do an experiment lots of times. For
example, if you roll a die gazillions of time, the average number you’ll get is
$ (1+2+3+4+5+6)/6 = 3.5 $, so that’s the <em>expected</em> value.</p>
<p>We’re going to calculate the expected number of times you hit “random” by
calculating the number of times you need to hit it to get the first, second,
third, and (in general) nth unique comic. Then, because of a useful property of
expected values, we can just add them together until $ n = 1500 $ (there are
1500 comics published as of right now) to see how long, as of today, this
process would take.</p>
<p>If you’re looking for your $ n $th unread comic, each time you hit “random”
you have a $ 1 - n/1500 $ chance of getting a fresh one. This is a <a href="http://en.wikipedia.org/wiki/Geometric_distribution">geometric
probability distribution</a>,
which is Math for “you keep trying something with a constant probability until
it succeeds”.  For geometric probability distributions, the expected value is
one over the probability (though I’m not going to prove it here, this
intuitively makes sense: you would expect to have to roll a die around 6 times
until you get your first 1, or to flip a coin twice until you get your first
heads).</p>
<p>Anyhow, for the nth comic, the expected number of clicks is $ 1500/(1500-n) $. Adding
these up for each $ n $, we have this monstrosity:</p>
<p>\[ \sum_{n=1}^{1500} \frac{1500}{n} = \frac{1500}{1500} + \frac{1500}{1499} + \dots + \frac{1500}{2} + \frac{1500}{1} \]</p>
<p>This works out to, on average, 11836 clicks. That’s a lot of clicks.</p>
<p>As common sense dictates, the more times you have clicked “random”, the less
likely it is for you to hit a new comic. And that’s why Randall’s random button
seems biased.</p>
<hr>
<p>One more bit of statistics: if you’ve taken a probability class, you might have
heard of the birthday problem. That is, say you have a party with $ n $ people.
What is the probability that some pair of people at the party share a birthday?</p>
<p>It turns out that if you have just 23 people, the probability is already 50-50.
This is somewhat counterintuitive; most birthday parties only have one birthday
boy! The fallacy is that the problem isn’t asking if some <em>particular</em> person
shares a birthday with someone else. It’s asking if <em>any</em> two people share a
birthday.</p>
<p>The birthday “paradox” turns out to be important in cryptography, especially
when looking for hash collisions. The number of hashes you need to generate
before you hit a collision is similar to the number of people you need at a
party before some pair shares a birthday—much smaller than what you would
expect.</p>
<p>In terms of xkcd-surfing, this helps answer the question “how many times will I
hit random before I see a repeat?”.</p>
<p>There are plenty of good explanations for the math behind the birthday problem
online (<a href="http://mathworld.wolfram.com/BirthdayProblem.html">Wolfram Mathworld</a>
and <a href="http://en.wikipedia.org/wiki/Birthday_problem">Wikipedia</a>)—but if you
don’t believe the number 23 quoted above, it’s worth spending some time trying
to solve it yourself just to understand what’s really going on (it’s not hard).
I’m just going to dump the formula here without any explanation.</p>
<p>For 1500 comics, the probability that you get a repeat after $ k $ clicks is:</p>
<p>\[ 1 - \frac{1500!}{(1500-k)!1500^k} \]</p>
<p>Throwing this at WolframAlpha, we see that after only 45 clicks, you have a
50-50 chance of seeing a duplicate comic. Put a different way, <em>there are even
odds that the last 45 comics you have seen contain a duplicate pair somewhere
in there</em>.</p>
<hr>
<p>So we’ve empirically validated that xkcd’s RNG is as close as we can expect for
something statistically random. We’ve also seen two reasons why it feels
biased.</p>
<p>But on a deeper and much more important level, we’ve seen how counterintuitive
and messy the random-number business is, and how statistical facts can trick us
into seeing patterns that aren’t there.</p>
<hr>
<p>P.S. My methodology for these experiments probably not the best, since I have
no formal statistics background. If you want to check out the code used or a
dump of my dataset, leave a comment below and I’ll send it to you.</p>

            </section>

            

        </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[IDEs we had 30 years ago (402 pts)]]></title>
            <link>https://blogsystem5.substack.com/p/the-ides-we-had-30-years-ago-and</link>
            <guid>38792446</guid>
            <pubDate>Thu, 28 Dec 2023 11:38:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blogsystem5.substack.com/p/the-ides-we-had-30-years-ago-and">https://blogsystem5.substack.com/p/the-ides-we-had-30-years-ago-and</a>, See on <a href="https://news.ycombinator.com/item?id=38792446">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>I grew up learning to program in the late 1980s / early 1990s. Back then, I did not fully comprehend what I was doing and why the tools I used were impressive given the constraints of the hardware we had. Having gained more knowledge throughout the years, it is now really fun to pick up DOSBox to re-experience those programs and compare them with our current state of affairs.</p><p>This time around, I want to look at the pure text-based IDEs that we had in that era before Windows eclipsed the PC industry. I want to do this because those IDEs had little to envy from the IDEs of today—yet it feels as if we went through a dark era where we lost most of those features for years and they are only resurfacing now.</p><p>If anything, stay for a nostalgic ride back in time and a little rant on “bloat”. But, more importantly, read on to gain perspective on what existed before so that you can evaluate future feature launches more critically.</p><p>In the 1990s, almost every DOS program you ran had a full-screen Text User Interface (TUI) which sported text-based windows, drop shadows, colors, and mouse support. Here is just one example:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png" width="1264" height="948" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:948,&quot;width&quot;:1264,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:70830,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1db3aeed-b831-49f5-a534-34d993bed81e_1264x948.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>The MS-DOS Editor (aka EDIT.COM) with one of its settings dialog open. Note the menu bar, the rich dialog with list selectors and buttons, and the status bar documenting navigation shortcuts.</figcaption></figure></div><p>Each program was its own island because its interface was unique to the program. However, they were all so similar in how they looked like—80x25 characters didn’t leave much room for uniqueness—and how they worked that the differences didn’t really get in the way of usability and discoverability. Once you learned that the Alt key opened the menus and that Tab moved across input fields and buttons, you could navigate almost any program with ease.</p><p><span>But let’s talk about editors. MS-DOS shipped with a TUI text editor since version 5 (1981), which </span><a href="https://blogsystem5.substack.com/p/a-cli-text-editor-in-my-windows" rel="">I previously covered in a recent article</a><span> and is shown above. This editor “worked”, but it was really inconvenient for coding: you needed to exit the editor to compile and run your code, and when you re-ran the editor, you’d have to navigate back to where you were before.</span></p><p><span>“In my house”, we used something called </span><a href="https://en.wikipedia.org/wiki/Borland_Sidekick" rel="">SideKick Plus</a><span> (1984), which wasn’t really a code editor: it was more of a Personal Information Management (PIM) system with a built-in notepad. The cool thing about it, however, was that it was a Terminate and Stay Resident (TSR) program, which meant that it loaded in the background and you could bring it up at any time by pressing Ctrl+Alt.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png" width="1264" height="948" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:948,&quot;width&quot;:1264,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:65113,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1e3c2211-437b-4e17-b24f-8ebbc7eb53eb_1264x948.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>SideKick Plus' main screen after pressing Ctrl+Alt to bring it up. Note how DOS remains in the background.</figcaption></figure></div><p><span>Think of this TSR feature as rudimentary multitasking for an OS that did </span><em>not</em><span> have multitasking. This was really effective because quickly switching between code editing and building is critical for an efficient inner development loop. (And by the way, this past experience explains the design of the </span><a href="https://www.endbasic.dev/docs.html#intro-first" rel="">code editing flow in EndBASIC</a><span>. I did not implement the equivalent of Ctrl+Alt, but I’ve considered it many times.)</span></p><p><span>By this point, however, real IDEs had already existed for a few years. Turbo Pascal 1.0 (1983) shows the beginning of an integrated experience, although it did not feature its iconic TUI yet. QuickBASIC 2.0 (1986) shows more of a “traditional” TUI (the same as </span><code>EDIT.COM</code><span>, because they are the same editor), and MS-DOS 5 came with QBasic, a reduced version of QuickBASIC that didn’t allow compiling to native code but that had the same look.</span></p><p>The crown jewel of IDEs, in my opinion, were the later Borland Turbo series, which included Turbo C++ (1990), Turbo Assembler and Turbo Pascal. These IDEs were language specific, but they had full-screen TUIs and were extremely powerful.</p><p>Here, take a look at what we had. Syntax highlighting:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png" width="1264" height="948" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/eaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:948,&quot;width&quot;:1264,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:55763,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feaff10b2-c7af-4d06-9c1e-3aeeac48d2f9_1264x948.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Borland Turbo C++ showing a "Hello World" program to demonstrate syntax highlighting.</figcaption></figure></div><p>Compiler integration and diagnostics:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png" width="1264" height="948" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:948,&quot;width&quot;:1264,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:62699,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F37cfb69d-5355-4c59-99b9-1555b5cba3b5_1264x948.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Borland Turbo C++ after compiling a program, showing a warning because I did not return a value from main().</figcaption></figure></div><p>Integrated project and build system management:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png" width="1264" height="948" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:948,&quot;width&quot;:1264,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:78236,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffedc5d3b-9816-439d-9aa8-0e04c3e40572_1264x948.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Borland Turbo C++ showing its project management and multi-window features. In the picture, you can see two C++ source files, with one depending on the other, and the project window listing all files that need to be compiled together.</figcaption></figure></div><p>A debugger with breakpoints, stack traces, and the like:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png" width="1264" height="948" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:948,&quot;width&quot;:1264,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:72323,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31c158ea-54c0-4d60-aee6-98c29d0c2c65_1264x948.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Borland Turbo C++ showing a debugging session with a program that contains multiple functions, a breakpoint, and the current call stack.</figcaption></figure></div><p>And even a full reference manual:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png" width="1264" height="948" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:948,&quot;width&quot;:1264,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:107059,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F016e93a0-bc96-4437-b08a-3626c26bf07f_1264x948.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Borland Turbo C++ showing its integrated help system, with the "Hello World" program in the background and the help for printf.</figcaption></figure></div><p>Remember: all of this in the early 1990s—a little over 30 years ago at the time of this writing.</p><p><span>I was an avid user of Turbo C++, with which I learned a lot. I remember using their </span><code>conio.h</code><span> libraries to implement TUIs of my own, and then their builtin </span><code>graphics.h</code><span> libraries to play with implementing GUIs. And note: this was </span><em>without the Internet</em><span>. There was no option for many to just “look up how things worked” in Stack Overflow: the IDE had to be discoverable right away (which it was) and self-contained to offer you a complete development experience.</span></p><p>Now take a moment to compare this scene with Linux in the early 1990s.</p><p><span>In Linux, almost every program was </span><em>also</em><span> text based, but those programs did not come with a full-screen TUI. It just wasn’t “the Unix way”. I remember watching the X11 configuration tool (</span><code>XF86Setup</code><span>) or the OpenBSD installer and feeling shocked by how simplistic those were: me, a young teenager with barely any “real” coding experience, had written better-looking programs already.</span></p><p><span>In any case, this didn’t stop me from my quest to </span><em>not</em><span> use Windows. I continued to learn the ways of Linux and soon faced the “best” editors recommended by every book and community online: Vim and Emacs. And I could not understand why they were praised. Using these was like stepping back into the past. They were full-screen programs indeed, but they seemed pretty arcane. Vim did have syntax highlighting but it was far from being an IDE. Emacs could be configured to integrate with some code assisting features and the like, but it was far from being “fire and forget” like the Turbo family of IDEs.</span></p><p><span>Just look at the default Emacs configuration </span><em>today</em><span>, which hasn’t changed much (if at all) since then. It does have windows, but they aren’t decorated. It didn’t have colors (and now barely has), because why? It didn’t use to have mouse support. It </span><em>does</em><span> have a menu bar though, but it is just a gimmick? If you press M-` as the instructions tell you, you face a truly strange interface to navigate the menu—which makes one wonder why they even bothered to waste a full line of screen real state to show a menu bar that does nothing.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png" width="973" height="650" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:650,&quot;width&quot;:973,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:127463,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7d6424f-498d-4ded-94d6-76cd5205d563_973x650.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>A fresh installation of Emacs in the console, with the standard welcome screen in the background and the "menu" open after pressing M-`.</figcaption></figure></div><p>Now try giving this to anyone with little coding experience and getting them to create, compile, and debug a program. They will have trouble just navigating the editor, and they won’t find any of the features that would allow for project management or compiler integration.</p><p>For comparison, in writing this post, I fired up Turbo C++ in DOSBox and I was able to create a “hello world” project and navigate the environment in minutes—all without prior knowledge (everything I had known has been forgotten by now). The environment is intuitive and, as an IDE, integrated all around.</p><p><span>Anyhow. Let’s forget about the past and look at what we have today in TUI-land. I don’t want to look at GUIs because… well, Visual Basic was the pinnacle of graphics programming and we don’t have that either anymore—which is also a topic for another day. (Well, OK, you have </span><a href="https://gambas.sourceforge.net/" rel="">Gambas</a><span>… but who knows about it?)</span></p><p><span>The closest more-modern equivalent to the Borland Turbo C++ environment is </span><a href="https://directory.fsf.org/wiki/RHIDE" rel="">RHIDE</a><span>. As you can see in the picture below, it looks incredibly similar—and you’d be forgiven if you thought this </span><em>is</em><span> Turbo C++. Unfortunately, it is DOS-only and seems to be mostly abandoned by now with its latest release dated 7 years ago.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png" width="1264" height="948" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:948,&quot;width&quot;:1264,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:67977,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd5155c1f-297e-4ce7-90b0-5d7e3db5384e_1264x948.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>The RHIDE IDE showing the same "hello world" program as before, with no errors nor warnings after compilation.</figcaption></figure></div><p><span>Then we have </span><a href="https://www.freepascal.org/" rel="">Free Pascal</a><span>. This is the closest you’ll get to the old experience but with a modern codebase, running natively on Unix systems and leveraging terminals of any size.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png" width="973" height="650" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:650,&quot;width&quot;:973,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:118496,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6437dfa3-051a-4573-9db9-8f7b8f90d210_973x650.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>The Free Pascal IDE with a trivial "hello world" program and overlapping windows for a built-in ASCII table and a calculator.</figcaption></figure></div><p><span>And lastly we have </span><a href="https://qb64.com/" rel="">QB64</a><span>. This closely resembles Microsoft QuickBasic but… don’t let it trick you: even though it looks like a TUI, it is actually a GUI application that simulates a TUI. You cannot run QB64 in a terminal.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png" width="1360" height="700" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:700,&quot;width&quot;:1360,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:25786,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbba1c191-c757-4684-a90d-2ca478210bc0_1360x700.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>The QB64 IDE, which looks textual but is actually a graphical program.</figcaption></figure></div><p>Both Free Pascal and QB64 are maintained and under relatively-active development, with their most recent releases in 2021… but they are mostly ignored because they expose arcane languages that most people have no interest in these days.</p><p><span>So what are we left with for </span><em>modern</em><span> languages today?</span></p><p><span>The state of the art seems to be </span><a href="https://neovim.io/" rel="">Neovim</a><span>, </span><a href="https://github.com/doomemacs/doomemacs" rel="">Doom Emacs</a><span>, or even </span><a href="https://helix-editor.com/" rel="">Helix</a><span>. These editors are very powerful and, thanks to various plugins, offer reasonable IDE-like experiences. That said, if you ask me, none of these provide the same kind of experience that the previous Borland products offered: their interfaces are obscure and, due to their multi-language nature, they work OK for almost everything but they aren’t great for anything. “Jack of all trades, master of none” if you will.</span></p><p><span>In any case, the preferred “simple” TUI editor, based on what I observed in the deranged </span><a href="https://github.com/microsoft/terminal/discussions/16440" rel="">microsoft/terminal#16440</a><span> discussion, seems to be… </span><a href="https://www.nano-editor.org/" rel="">GNU Nano</a><span>… which OK, it works, but first: it’s no IDE, and second, to me this looks like WordStar. Yeah, I know it isn’t WordStar: if you want WordStar, the closest you’ll find is </span><a href="https://joe-editor.sourceforge.io/" rel="">Joe</a><span>, but the </span><em>looks</em><span> of Nano remind me of my first experiences with a word processor back in the CP/M days. Here, look:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png" width="973" height="650" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:650,&quot;width&quot;:973,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:29129,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c498b8d-bc35-454d-a482-59acd08fda7a_973x650.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>The GNU Nano editor in its default setup, with an empty file open.</figcaption></figure></div><p><span>So even though we </span><em>do</em><span> have powerful console editors these days, they don’t quite offer the same usable experience we had 30 years ago. In fact, it feels like during these 30 years, we regressed in many ways, and only now are reaching feature parity with some of the features we used to have.</span></p><p><span>It is natural that TUIs diminished in popularity once graphical OSes gained traction, and it is somewhat interesting that they are making a comeback just now. As for why, I think we have to thank the invention of </span><a href="https://microsoft.github.io/language-server-protocol/" rel="">LSP</a><span> for most of the recent progress in this area. TUI editors were “on hold” for many years because building IDE features for them was a lot of effort and their small maintainer base could not afford to implement them. LSP unlocked access to existing language-specific integrations and reinfused interest in the old-and-trusty Vim and Emacs. Hopefully, the upcoming </span><a href="https://build-server-protocol.github.io/" rel="">BSP</a><span> will do even more to make these TUIs more IDE-like.</span></p><p>It is fair to ask “Who cares? Every desktop and laptop runs a graphical OS now!”</p><p><span>And it’s a good question. In general, you probably </span><em>don’t</em><span> want a TUI IDE. If VSCode is your jam, its remoting abilities are superb and VSCode has a reasonably good graphical interface without being a full-blown IDE. But there are a few things that VSCode doesn’t give us.</span></p><p><span>The first is that a TUI IDE is excellent for work on remote machines—even better than VSCode. You can SSH into </span><em>any</em><span> machine with ease and launch the IDE. </span><a href="https://jmmv.dev/2015/09/my-coding-workflow.html" rel="">Combine it with tmux and you get “full” multitasking.</a><span> Yes, you could instead use a remote desktop client instead of SSH, but I’ve always found them clunky due to lag and the improper integration with the local desktop shortcuts.</span></p><p><span>The second is that </span><a href="https://code.visualstudio.com/docs/remote/faq#_why-arent-the-remote-development-extensions-or-their-components-open-source" rel="">VSCode’s remote extensions are </a><em><a href="https://code.visualstudio.com/docs/remote/faq#_why-arent-the-remote-development-extensions-or-their-components-open-source" rel="">not</a></em><a href="https://code.visualstudio.com/docs/remote/faq#_why-arent-the-remote-development-extensions-or-their-components-open-source" rel=""> open source</a><span>, which isn’t a major problem… except for the fact that they don’t work on, say, FreeBSD and there is no way to fix them. So this makes it impossible for me to remote into my primary development server with VSCode.</span></p><p>And the third is… reduced resource consumption.</p><p>I can’t leave without ranting about “bloat” for a little bit. Borland Turbo C++, with all its bells and whistles (the UI, the C++ toolchain, the integrated manuals…), is less than 9 MB after installation and ran within 640kb of RAM.</p><p>For comparison, Helix is 16 MB on disk, which is pretty impressive (and honestly unexpected), but Doom Emacs is about 500 MBs and consumes many MBs of RAM. Note, however, that none of these numbers account for the language toolchains or help systems, and toolchains nowadays rank in the GBs of disk space.</p><p>To get “real” IDEs, we have to jump to graphical programs like IntelliJ or VSCode. VSCode, for example, is about 350 MBs on disk (surprisingly less than Doom Emacs) but it will eat your computer for lunch: it’s Electron after all. I have noticed very significant savings in laptop battery life by dropping VSCode and moving to Doom Emacs.</p><p><span>So the question I want to part with is: have we advanced </span><em>much</em><span> in 30 years? Modern IDEs have some better refactoring tools, better features, and support more languages, but fundamentally… they haven’t changed much. The only major difference that we are </span><em>starting</em><span> to see might be AI-assisted coding, but this is a feature mostly provided by a remote service, not even by the installed code!</span></p><p><span>And that’s all for today. On my side, I’ll happily continue using </span><em>all of</em><span> Doom Emacs, Vim, VSCode, and IntelliJ depending on the situation. Merry Christmas if this is your thing!</span></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[37C3 Video List (108 pts)]]></title>
            <link>https://media.ccc.de/b/congress/2023</link>
            <guid>38791870</guid>
            <pubDate>Thu, 28 Dec 2023 10:03:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://media.ccc.de/b/congress/2023">https://media.ccc.de/b/congress/2023</a>, See on <a href="https://news.ycombinator.com/item?id=38791870">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="conference logo" src="https://static.media.ccc.de/media/congress/2023/logo.png">
</p>
<p>
Full playlist:
<a data-method="get" href="https://media.ccc.de/v/37c3-12034-the_impact_of_quantum_computers_in_cybersecurity/playlist">Video</a>
/
<a data-method="get" href="https://media.ccc.de/v/37c3-12034-the_impact_of_quantum_computers_in_cybersecurity/audio">Audio</a></p><p>
The 37th Chaos Communication Congress (37C3) takes place in Hamburg, 27.-30.12.2023, and is the 2023 edition of the annual four-day conference on technology, society and utopia organised by the Chaos Computer Club (CCC) and volunteers.

Congress offers lectures and workshops and various events on a multitude of topics including (but not limited to) information technology and generally a critical-creative attitude towards technology and the discussion about the effects of technological advances on society.
</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[You've just been fucked by psyops [video] (273 pts)]]></title>
            <link>https://media.ccc.de/v/37c3-12326-you_ve_just_been_fucked_by_psyops</link>
            <guid>38791575</guid>
            <pubDate>Thu, 28 Dec 2023 09:17:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://media.ccc.de/v/37c3-12326-you_ve_just_been_fucked_by_psyops">https://media.ccc.de/v/37c3-12326-you_ve_just_been_fucked_by_psyops</a>, See on <a href="https://news.ycombinator.com/item?id=38791575">Hacker News</a></p>
<div id="readability-page-1" class="page">

<div>
<ol>
<li>
<a href="https://media.ccc.de/b">
browse
</a>
</li>
<li>
<span></span>
<a href="https://media.ccc.de/b/congress">
congress
</a>
</li>
<li>
<span></span>
<a href="https://media.ccc.de/b/congress/2023">
2023
</a>
</li>
<li>
<span></span>
event
</li>
</ol>
</div>

<div>

<p>
<span></span>
<a href="https://media.ccc.de/search?p=Trevor+Paglen">Trevor Paglen</a>

</p>

<p><a href="https://media.ccc.de/c/37c3/" rel="tag"></a>
<a href="https://media.ccc.de/c/37c3/Art%20&amp;%20Beauty" rel="tag">Art &amp; Beauty</a>
Playlists:
<a href="https://media.ccc.de/v/37c3-12326-you_ve_just_been_fucked_by_psyops/playlist">'37c3' videos starting here</a>
/
<a data-method="get" href="https://media.ccc.de/v/37c3-12326-you_ve_just_been_fucked_by_psyops/audio">audio</a></p>
<!-- %h3 About -->
<p>How the history of military and government PSYOPS involving mind-control, UFOs, magic, and remote-control zombies, explains the future of AI and generative media. Along the way, talk attendees will be given an enrollment code to join a specialized CTF/ARG game called CYCLOPS that explores these themes and that will run the duration of Congress. </p>

<p>As AI-generated content, social-media influence operations, micro-targeted advertising, and ubiquitous surveillance have become the norm on the Internet and in the market in general, we have entered an era of PSYOP Capitalism. This is an era of hallucinations designed to transform each of us into a “targeted individual” through the manipulation of perception. This talk explores a secret history of reality-altering military and intelligence programs that serve as antecedents to a phantasmagoric present.</p>

<p>At the talk, attendees will be given a registration code to play “CYCLOPS,” a CTF/ARG game that will run the duration of Congress. CYCLOPS explores the themes of the mind-control and PSYOPS through an interactive parafictional narrative taking place in the context of an obscure CIA cognitive warfare program from the early days of the Cold War.
</p>

<h3>Download</h3>
<div>

<div>
<h4>These files contain multiple languages.</h4>
<p>
This Talk was translated into multiple languages. The files available
for download contain all languages as separate audio-tracks. Most
desktop video players allow you to choose between them.
</p>
<p>
Please look for "audio tracks" in your desktop video player.
</p>
</div>
<div>
<p>
<h4>Subtitles</h4>
</p>

</div>
<div>
<p>
<h4>Audio</h4>
</p>

</div>
</div>
<!-- %h3 Embed/Share -->

<h3>Tags</h3>

</div>





</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Formally modeled Dreidel for no good reason (117 pts)]]></title>
            <link>https://buttondown.email/hillelwayne/archive/i-formally-modeled-dreidel-for-no-good-reason/</link>
            <guid>38791517</guid>
            <pubDate>Thu, 28 Dec 2023 09:08:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://buttondown.email/hillelwayne/archive/i-formally-modeled-dreidel-for-no-good-reason/">https://buttondown.email/hillelwayne/archive/i-formally-modeled-dreidel-for-no-good-reason/</a>, See on <a href="https://news.ycombinator.com/item?id=38791517">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <article>
            <date>
                
                    Dec. 12, 2023, 2:14 p.m.
                </date>
            
            
                <h2>
                    I can mathematically prove the game's not fun.
                </h2>
            

            

            
                
                    <h3>New blog post</h3>
<p><a href="https://www.hillelwayne.com/post/strangeloop-23/" target="_blank">Notes on Every Strangeloop 2023 Talk I Attended</a>. Would have been out earlier but I was busy and sick. Patreon is <a href="https://www.patreon.com/posts/notes-on-notes-i-94141348" target="_blank">here</a>.</p>
<hr>
<h2>I formally modeled Dreidel for no good reason</h2>
<p>It's the sixth night of <a href="https://en.wikipedia.org/wiki/Hanukkah" target="_blank">Channukah</a> and I'm thinking about dreidels:</p>
<p><img alt="A dreidel" src="https://assets.buttondown.email/images/b665a8db-c930-4215-80b1-d8b89661b34f.png?w=960&amp;fit=max"> </p>
<p>On Channukah we use dreidels to play the game dreidel:</p>
<ol>
<li>Every player starts with N pieces (usually chocolate coins). This is usually 10-15 pieces per player.</li>
<li>At the beginning of the game, and whenever the pot is empty, every play antes one coin into the pot.</li>
<li>
<p>Turns consist of spinning the dreidel. Outcomes are:</p>
<ul>
<li>נ (Nun): nothing happens.</li>
<li>ה (Hey): player takes half the pot, rounded up.</li>
<li>ג (Gimmel): player takes the whole pot, everybody antes.</li>
<li>ש (Shin): player adds one of their coins to the pot.</li>
</ul>
</li>
<li>
<p>If a player ever has zero coins, they are eliminated. Play continues until only one player remains, or (much more likely) everybody gets bored.</p>
</li>
</ol>
<p>Traditionally this game is played by kids, as it's an excellent way to convince them that gambling is boring as all hell. In 2015 <a href="https://www.slate.com/articles/life/holidays/2014/12/rules_of_dreidel_the_hannukah_game_is_way_too_slow_let_s_speed_it_up.html" target="_blank">Ben Blatt simulated the game</a> and found that for P=4 and N=10, the average game will take 860 spins to finish. </p>
<p>But this was based on a mere 50,000 simulated games! We can do better than a mere simulation. We can mathematically model the game and get <em>exact</em> numbers. So we're busting out <a href="https://www.prismmodelchecker.org/" target="_blank">PRISM</a>.</p>
<h3>Modeling Dreidel in PRISM</h3>
<p>PRISM is a probabilistic model checker. You create a model of a probabilistic system, like queueing workers or a gambling game, and PRISM can give you exact probabilities of various events happening. I've written two blog posts on PRISM:</p>
<ul>
<li><a href="https://www.hillelwayne.com/post/prism/" target="_blank">Probabilistic Modeling with PRISM</a></li>
<li><a href="https://www.hillelwayne.com/post/queueing-prism/" target="_blank">Two workers are quadratically better than one</a></li>
</ul>
<p>If you read those blog posts, you'll quickly learn that I <em>really do not like PRISM</em>. The problem is that it is <em>incredibly</em> limited language. It doesn't have strings, or arrays, or <em>functions</em>. This makes generalizing or abstracting things virtually impossible, and you're going to be hardcoding a lot of stuff. Despite all that, I keep finding excuses to use PRISM anyway. I've got an enormous number of small PRISM tricks I will never share with anyone because nobody else will ever use PRISM. Maybe there's a grad student who needs them, I dunno.</p>
<p>I'm not going to go through the entire model, you can see it <a href="https://gist.github.com/hwayne/f8724f0c83393c576b1e20ee4b76966d" target="_blank">here</a>. Just some highlights:</p>
<div><pre><span></span><code>formula Players = 4; //Players
formula maxval = M*Players;
formula done = (p1=0) | (p2=0) | (p3=0) | (p4=0);
</code></pre></div>

<p>Since I can't abstract over anything, I can't make a general model that works for P players, so instead I hardcode in 4 players. Also, properly modeling "playing until one player is left" would have been a <em>nightmare</em>, so instead I'm just modeling until <em>one</em> player is eliminated.</p>
<div><pre><span></span><code>    [spin] ((pot != 0) &amp; !done &amp; (turn = 1)) -&gt;
      0.25: (p1' = p1-1) &amp; (pot' = min(pot+1, maxval)) &amp; (turn' = 2) //shin
    + 0.25: (turn' = 2) //nun
    + 0.25: (p1' = min(p1+halfpot,maxval)) &amp; (pot' = pot-halfpot) &amp; (turn' = 2) // hay
    + 0.25: (p1' = min(p1+pot,maxval)) &amp; (pot' = 0) &amp; (turn' = 2); //gimmel
</code></pre></div>

<p>This is the core of a PRISM spec: a set of conditions for this to happen, a set of weighted outcomes, and the updates for each outcome. Though it's mathematically impossible for a shin to make the pot have more than <code>maxval</code> coins, whatever model checking algorithm PRISM uses couldn't tell that, so I had to manually cap it with <code>(pot' = min(pot+1, maxval))</code>. I spent a lot of time on this spec coddling the model checker. </p>
<p>Also notice that I had to hardcode that this is all for <em>player one</em> (<code>p1</code>). This means that I have to write this action three more times:</p>
<div><pre><span></span><code>    [spin] ((pot != 0) &amp; !done &amp; (turn = 2)) -&gt;
      0.25: (p2' = p2-1) &amp; (pot' = min(pot+1, maxval)) &amp; (turn' = 3)
    + 0.25: (turn' = 3)
    // etc etc etc
</code></pre></div>

<p>All of the actions are guarded on <code>pot!=0</code>. When it's empty, we instead have an ante action:</p>
<div><pre><span></span><code>    [ante] (pot = 0) &amp; !done -&gt; (pot'=pot+4) &amp; (p1' = p1-1) &amp; (p2' = p2-1) &amp; (p3' = p3-1) &amp; (p4' = p4-1);
</code></pre></div>

<p>Since this means not all actions will be spins, I added a <a href="https://www.prismmodelchecker.org/manual/ThePRISMLanguage/CostsAndRewards" target="_blank">reward</a> to track just the spins: </p>
<div><pre><span></span><code>rewards "num_spins"
    [spin] true : 1;
endrewards
</code></pre></div>

<h3>Querying the system</h3>
<p>So why bother with all this when the Python would be like ten lines? The reason is that once you've gone through all the work of modeling something in PRISM, you get a powerful querying system to learn properties of the model. First, let's just find the expected value (weighted average) for the number of spins to knock out one player:</p>
<div><pre><span></span><code>$ ./prism dreidel.prism -const M=10 -pf 'R=? [C]'    

Value in the initial state: 63.71149441710945
Time for model checking: 174.563 seconds.
</code></pre></div>

<p>So if we have four players, and each player starts with 10 coins, it'll take on average 64 spins to knock a single player out. I stopwatched a dreidel and it takes about 8 seconds for a spin, so you're looking at about nine minutes of watching a top spin before <em>someone</em> gets to leave the table.</p>
<p>Of course that's only the <em>likeliest</em> outcome. I can also get the cumulative probability like this: </p>
<div><pre><span></span><code>const C0;
P=? [F&lt;=C0 done]
</code></pre></div>

<p>That returns the probability that within C0 steps of starting, <code>done</code> is <strong>F</strong>inally true. Note this is total model checking steps and includes antes too. While I can run this from the command line, it's nicer to see in the GUI.</p>
<p><img alt="A graph of the gui showing that 90% of the time, you'll knock out one player within 150 steps" src="https://assets.buttondown.email/images/07a3fc81-e86d-4a4a-bec8-f1f1768f218c.png?w=960&amp;fit=max"> </p>
<p>Those are still pretty easy to find from a regular simulation, so let's try a more complex property. What's the probability that the game ends because a player rolled a Shin, as opposed to an ante?</p>
<div><pre><span></span><code>prism dreidel.prism 
  -pf "P=? [F (pot != 0 &amp; !done &amp; (X done))]" 
  -const M=6:4:10 
  -exportresults stdout

M       Result
6       0.2944666679018678
10      0.2930102532933088
</code></pre></div>

<p>(Don't forget to check the probability it ends because of an ante!)</p>
<p>What's the probability that the first player will have 75% of all pieces in the game, and still lose?</p>
<div><pre><span></span><code>-pf "P=? [F (p1=maxval-M &amp; (F p1=0))]"
-const M=5:5:15 
-exportresults stdout
M       Result
6       1.1876357695852015E-10
10      1.0185162507865054E-8
15      4.902270837317093E-8
</code></pre></div>

<p>It's extraordinarily unlikely but becomes less extraordinarily likely when you start with more coins. And again we're just modeling until one player runs out of coins, so the odds are slightly (slightly) higher than this. </p>
<p>Finally, the chance the pot maxes out at <code>C0</code> coins:</p>
<div><pre><span></span><code>-pf 'P=? [(F pot=C0) &amp; (G pot &lt;= C0)]'
-const M=10,C0=0:1:20
</code></pre></div>

<p><img alt="A graph showing the maximum pot size probability peaks at 6 coins and almost never goes above 9" src="https://assets.buttondown.email/images/a5caff3a-99bd-42b7-b997-50d1cde5e129.png?w=960&amp;fit=max"> </p>
<h3>Was this worth it?</h3>
<p>Ugh no I hate PRISM</p>
<p>But also I think I figured out a different approach to modeling this that would better handle adding players <em>and</em> running until just one player is left. Maybe that'll be a blog post for next Channukah!</p>
<hr>
<h3>End of Year Administrative Stuff</h3>
<p>Next week will be the last newsletter of the year. Quick updates on this year's projects:</p>
<ul>
<li><em>Logic for Programmers</em>: Haven't made any progress on it for a while, but a friend has kindly offered to help edit and keep me to a schedule, so I'm more optimistic for the next year.</li>
</ul>
<ul>
<li><em>Why programming languages doesn't have graph types</em>: Done with interviews, writing an outline!</li>
</ul>
<p>I want to write a new formal methods talk for next year, which would focus on the general history and idea of formal specification instead of just pitching TLA+ as a product. If you know any conference people who'd be interested, put me in touch!</p>
                
            

            
                <p><em>If you're reading this on the web, you can subscribe <a href="https://buttondown.email/hillelwayne" target="_blank">here</a>. Updates are 6x a month. My main website is <a href="https://www.hillelwayne.com/" target="_blank">here</a>.</em></p>
            

            

            <div>
                <p>
                    Don't miss what's next. Subscribe to Computer Things:
                </p>
                 








            </div>
        </article>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Outlook/Hotmail is no longer blocking my mail server (167 pts)]]></title>
            <link>https://taoshu.in/net/outlook-delist.html</link>
            <guid>38790854</guid>
            <pubDate>Thu, 28 Dec 2023 07:06:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://taoshu.in/net/outlook-delist.html">https://taoshu.in/net/outlook-delist.html</a>, See on <a href="https://news.ycombinator.com/item?id=38790854">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
  
  
  <date>2023-12-23</date>
    <span>⏳1.9 min(0.8k words)</span>
      <a id="noad" href="https://taoshu.in/about.html#%E5%85%B3%E4%BA%8E%E5%B9%BF%E5%91%8A"></a>
  
      <p>After some struggle, I managed to de-list the address of my mail server from Microsoft’s blocklist. Here is some experiences may help you.</p>
      <p>I am running my mail server on one Oracle Cloud Computer, which has no cost. You can read my another blog post<a href="#fn1" id="fnref1" role="doc-noteref"><sup>1</sup></a> to dig the setting up details. After all work has been done, I can deploy mail to all major Mail Service Providers like Gmail, Yahoo Mail, QQ Mail, and so on. My employer uses the enterprise edition service of Office365. And I send testing mail to it, no problem has been found. Since I do not own a personal account of Outlook or Hotmail, I do not test mail to the domain of outlook.com/hotmail.com, assuming there is no problem.</p>
      <p>One day some reader of my blog leave a message to me and He uses a mail address with the domain of live.com, which is part of Outlook/Hotmail. When I try to reply his message in my mail client, it received the following error message:</p>
      <pre><code>Delivery to xxx@outlook.com failed with error:
outlook-com.olc.protection.outlook.com. said:

Unfortunately, messages from [xx.xx.xx.xx] weren't sent.
Please contact your Internet service provider since part of their network
is on our block list (S3150). You can also refer your provider to
http://mail.live.com/mail/troubleshooting.aspx#errors.

[BN7NAM10FT025.eop-nam10.prod.protection.outlook.com 2023-12-15T15:17:55.319Z 08DBF7ED000951E3]

Diagnostic-Code: smtp; 550 5.0.0 outlook-com.olc.protection.outlook.com.</code></pre>
      <p>I opened the link it offered. In the section <em>Sender services, tools, and issue submission</em>, they offers a link to create support list. You need an account of Microsoft to submit request, and I registered one with my own email address and some fake contact information, because I do not want to lave too many of my personal data to Microsoft. It take several days that Microsoft replied my request with Email. However, the reply is very frustrating, because it said that they do not block mail from my IP address.</p>
      <pre><code>Hi ,
 
Thanks for your patience while we investigated your request.
Below your IP address(es) and their status(es) are listed.

XX.XX.XX.XX;

Nothing was detected to prevent your mail from reaching Outlook.com customers. Please follow the instructions below.

Still need help?

If you have additional questions or still experiencing deliverability issues or want further investigation, please reply to this email with the following information and an advocate will respond to you by via email.
Relevant IP addresses(es)
Detailed description of the problem you are having
specific error message(s)</code></pre>
      <p>According some article from the Internet, I replied the mail immediately with the following content:</p>
      <pre><code>Hello,

Thanks for replying. 

You say my IP address XX.XX.XX.XX was not prevent from reaching outlook.com.
However, I still can not send email from XX.XX.XX.XX to outlook.com customers.

Here is the error message:

[...]

XX.XX.XX.XX is my own personal email server, with controlled user creation access.

This is a newly acquired IP address.

Security
    This server is used solely for the purpose of mailserver, with ssh
    access only granted to an administrator.

Settings
    The server is also configured with all the necessary records to ensure
    only authenticated users connected to our secured smtp can send mails
    from our domains.</code></pre>
      <p>Microsoft never reply my mail. Three days later, I resend another mail trying to persuade them to unblock my server. In the mail, I explained this is an indie mail server and for personal usage only. I also try to let them understand that I am not an spam sender by offering relative content of my blog. Maybe the fake contact information of my Microsoft Account make them worry that I am not a good guy. Here is the full content.</p>
      <pre><code>Sorry for replying again.

I still can't delivery email to outlook/hotmail now.

This server is my personal mail server for my own usage.
I have setup only one month ago.

I am also writing on my blog, and the readers may contact me by this mail server.

My blog URL is https://taoshu.in/ and the setting process was recorded at

https://taoshu.in/net/selfhost-email.html

Some readers contacted me by hotmail/outlook, and I can't reply to them.
That's when I discovered I hotmail/outlook has blocked my server.

The IP XX.XX.XX.XX I am using is from Oracle Cloud, and it is not in any public blacklist according to mxtoolbox

https://mxtoolbox.com/SuperTool.aspx?action=blacklist%3amx1.lehu.in&amp;run=toolpage

I have not, and will not to try to delivery bulk mail or spam mail to outlook/hotmail or any mail service provider.

Please consider to unblock my IP.

Thanks.</code></pre>
      <p>Still get no response. So I tried to contract to Oracle Cloud and wished they could offically communicate with Microsoft and make their IP address range unblocked. Unfortunately, they did not offer any help.</p>
      <pre><code>Thank you for your response. Unfortunately, we do not have any power or say
when it comes to blacklists from third-parties. You would need to continue
to work with Microsoft in order to resolve this issue.</code></pre>
      <p>I have no choice but wait the response from Microsoft.</p>
      <p>Five days passed, there still no reply. But today I login the server and try to connect the MX server for Outlook/Hotmail by telnet. After I sent the command of <code>mail from</code>, the other side responded <code>250 2.1.0 Sender OK</code>. I known Microsoft has finally unblocked my mail server. Cheering up🍻</p>
      <p>If you also encounter this kind of problem, do not be afraid. You are not alone. So many people have replied this thread<a href="#fn2" id="fnref2" role="doc-noteref"><sup>2</sup></a>, complaining Outlook/Hotmail block their mail server unreasonably. It is a problem for self-mail-hosting, however, it can be addressed. So don’t be intimidated by this difficulties.</p>
      <p>According to my experiences, although Microsoft may block some IP range, it does not intend to do so. This blocking policy is only one stress measure for the increasingly rampant Spam problem. They are just not very friendly, but never hostile to self-mail-hosting. If you encounter this kind of issue, using a normal Microsoft Account with real contact information and submit request with detailed information may address you problem.</p>
      <p>So many words have been said that you should never run your own mail server. I beg to differ on this point. Because Email is the only successful federate system that is always defending the foundation of the freedom of the Internet. Every one should have the freedom to run their own mail server and communicate with each other freely. So we should defend the right for self-mail-hosting.</p>
      
  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[4B If Statements (1167 pts)]]></title>
            <link>https://andreasjhkarlsson.github.io//jekyll/update/2023/12/27/4-billion-if-statements.html</link>
            <guid>38790597</guid>
            <pubDate>Thu, 28 Dec 2023 06:11:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://andreasjhkarlsson.github.io//jekyll/update/2023/12/27/4-billion-if-statements.html">https://andreasjhkarlsson.github.io//jekyll/update/2023/12/27/4-billion-if-statements.html</a>, See on <a href="https://news.ycombinator.com/item?id=38790597">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content">
        <article itemscope="" itemtype="http://schema.org/BlogPosting">

  

  <div itemprop="articleBody">
    <p>I recently stumbled upon this screenshot while researching social media on the train. Of course, it was followed by a cascade of spiteful comments, criticizing this fresh programmer’s attempt to solve a classical problem in computer science. The modulus operation.</p>

<p><img src="https://andreasjhkarlsson.github.io/assets/images/GCPVDa1WYAAoBut.jpg" alt="TikTok screenshot" width="250"></p>

<p>Now, in a world where AI is replacing programmers by the minute, taking their jobs and revolutionizing the way we think about code, maybe we should be more open to the thoughts of the fresh new blood of the industry? In fact, the above code is a perfect example of a time-memory tradeoff. You’re trading off your time and at the same time, the computers memory and time as well! Truly a marvelous algorithm!</p>

<p>So I went to work to explore this idea of checking if a number is odd or even by only using comparisons to see how well it works in a real world scenario. Since I’m a great believer in performant code I decided to implement this in the C programming language as it’s by far the fastest language on the planet to this day (thanks to the visionary genius Dennis Richie).</p>

<p>So I started composing</p>

<figure><pre><code data-lang="c"><span>/* Copyright 2023. All unauthorized distribution of this source code 
   will be persecuted to the fullest extent of the law*/</span>
<span>#include &lt;stdio.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdlib.h&gt;
</span><span>int</span> <span>main</span><span>(</span><span>int</span> <span>argc</span><span>,</span> <span>char</span><span>*</span> <span>argv</span><span>[])</span>
<span>{</span>
    <span>uint8_t</span> <span>number</span> <span>=</span> <span>atoi</span><span>(</span><span>argv</span><span>[</span><span>1</span><span>]);</span> <span>// No problems here</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>0</span><span>)</span>
        <span>printf</span><span>(</span><span>"even</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>1</span><span>)</span>
        <span>printf</span><span>(</span><span>"odd</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>2</span><span>)</span>
        <span>printf</span><span>(</span><span>"even</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>3</span><span>)</span>
        <span>printf</span><span>(</span><span>"odd</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>4</span><span>)</span>
        <span>printf</span><span>(</span><span>"even</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>5</span><span>)</span>
        <span>printf</span><span>(</span><span>"odd</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>6</span><span>)</span>
        <span>printf</span><span>(</span><span>"even</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>7</span><span>)</span>
        <span>printf</span><span>(</span><span>"odd</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>8</span><span>)</span>
        <span>printf</span><span>(</span><span>"even</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>9</span><span>)</span>
        <span>printf</span><span>(</span><span>"odd</span><span>\n</span><span>"</span><span>);</span>
    <span>if</span> <span>(</span><span>number</span> <span>==</span> <span>10</span><span>)</span>
        <span>printf</span><span>(</span><span>"even</span><span>\n</span><span>"</span><span>);</span>
<span>}</span></code></pre></figure>

<p>Beautiful! Lets compile the code, disabling optimizations with /Od to make sure that the pesky compiler doesn’t interfere with our algorithm. After compiling we can do a quick test of the program we get some positive results:</p>

<figure><pre><code data-lang="powershell"><span>PS</span><span> </span><span>&gt;</span><span> </span><span>cl.exe</span><span> </span><span>/Od</span><span> </span><span>program.c</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>0</span><span> 
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>4</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>3</span><span>
</span><span>odd</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>7</span><span>
</span><span>odd</span></code></pre></figure>

<p>However, after doing some further testing I found some problems:</p>

<figure><pre><code data-lang="powershell"><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>50</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>11</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>99</span></code></pre></figure>

<p>No output! It seems that the program only works for numbers under 11! Going back to the code we can find the issue right after the last if statement, we need more if statements!</p>

<p>Now, this is a time-memory tradeoff, but my time on this earth is limited so I decided to meta-program the if statements using a programmer program in a different programming language. To compensate for this cheating I decided to use the slowest language on the planet, Python (thanks to the visionary genius of Ross van der Gussom).</p>

<figure><pre><code data-lang="python"><span>print</span><span>(</span><span>"/* Copyright 2023. All unauthorized distribution of this source code"</span><span>)</span>
<span>print</span><span>(</span><span>"   will be persecuted to the fullest extent of the law*/"</span><span>)</span>

<span>print</span><span>(</span><span>"#include &lt;stdio.h&gt;"</span><span>)</span>
<span>print</span><span>(</span><span>"#include &lt;stdint.h&gt;"</span><span>)</span>
<span>print</span><span>(</span><span>"#include &lt;stdlib.h&gt;"</span><span>)</span>

<span>print</span><span>(</span><span>"int main(int argc, char* argv[])"</span><span>)</span>
<span>print</span><span>(</span><span>"{"</span><span>)</span>
<span>print</span><span>(</span><span>"    uint8_t number = atoi(argv[1]); // No problems here"</span><span>)</span>

<span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>2</span><span>**</span><span>8</span><span>):</span>
    <span>print</span><span>(</span><span>"    if (number == "</span><span>+</span><span>str</span><span>(</span><span>i</span><span>)</span><span>+</span><span>")"</span><span>)</span>
    <span>if</span> <span>i</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>:</span>
        <span>print</span><span>(</span><span>"        printf(</span><span>\"</span><span>even</span><span>\\</span><span>n</span><span>\"</span><span>);"</span><span>)</span>
    <span>else</span><span>:</span>
        <span>print</span><span>(</span><span>"        printf(</span><span>\"</span><span>odd</span><span>\\</span><span>n</span><span>\"</span><span>);"</span><span>)</span>

<span>print</span><span>(</span><span>"}"</span><span>)</span></code></pre></figure>

<p>Nice! Now we can generate a program that solves the even-odd problem for all 8-bit integers!</p>

<figure><pre><code data-lang="powershell"><span>PS</span><span> </span><span>&gt;</span><span> </span><span>python</span><span> </span><span>programmer.py</span><span> </span><span>&gt;</span><span> </span><span>program.c</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>cl.exe</span><span> </span><span>/Od</span><span> </span><span>program.c</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>99</span><span>
</span><span>odd</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>50</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>240</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>241</span><span>
</span><span>odd</span></code></pre></figure>

<p>Would you look at that! It works flawlessly! Now, let’s scale it up to 16 bit!</p>

<figure><pre><code data-lang="python"><span>print</span><span>(</span><span>"    uint16_t number = atoi(argv[1]); // No problems here"</span><span>)</span>
<span>…</span>
<span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>2</span><span>**</span><span>16</span><span>):</span></code></pre></figure>

<p>This gives a nice and thick c file of around 130k lines. Nothing really when looking back at some of the code bases I’ve worked on over the years. Let’s compile!</p>

<figure><pre><code data-lang="powershell"><span>PS</span><span> </span><span>&gt;</span><span> </span><span>python</span><span> </span><span>programmer.py</span><span> </span><span>&gt;</span><span> </span><span>program.c</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>cl.exe</span><span> </span><span>/Od</span><span> </span><span>program.c</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>21000</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>3475</span><span> 
</span><span>odd</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>3</span><span>   
</span><span>odd</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>65001</span><span>
</span><span>odd</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span> </span><span>.</span><span>\program.exe</span><span> </span><span>65532</span><span>
</span><span>even</span></code></pre></figure>

<p>Beautiful! Our algorithm seems to scale with the data! The executable is around 2 MB, but that’s no match for my beefy gaming rig with a whopping 31.8 GB of memory.</p>

<p>Now, 16 bit is a very cool bitwidth, but as we all know, 32 bit is the holy grail of computing and is the final bitwidth that we need to solve all practical engineering and scientific problems. After all, IPv4 is still standing stronger than ever, 60 years after it was deemed deprecated due to so called <a href="https://en.wikipedia.org/wiki/IPv4_address_exhaustion">“address exhaustion”</a>.</p>

<p>So without further ado, lets scale to our final size. 32 bit is only 65536 times as many numbers as 16 bit, what could go wrong?</p>

<figure><pre><code data-lang="python"><span>print</span><span>(</span><span>"    uint32_t number = atoi(argv[1]); // No problems here"</span><span>)</span>
<span>…</span>
<span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>2</span><span>**</span><span>32</span><span>):</span></code></pre></figure>

<p>So I let the mighty snake do its work and after getting a cup of coffee and getting back to check on the program 48 hours later I was left with a beautiful c file, almost 330 GB in size! Almost certainly among the largest c files in history. My fingers were trembling when I entered the next command, surely MSVC had never before encountered such powerful source code. After abusing the pagefile of my poor, powerful computer for half an hour the following was spat out:</p>

<figure><pre><code data-lang="powershell"><span>PS</span><span> </span><span>&gt;</span><span> </span><span>cl</span><span> </span><span>/Od</span><span> </span><span>program.c</span><span>
</span><span>Microsoft</span><span> </span><span>(</span><span>R</span><span>)</span><span> </span><span>C/C</span><span>++</span><span> </span><span>Optimizing</span><span> </span><span>Compiler</span><span> </span><span>Version</span><span> </span><span>19.32.31329</span><span> </span><span>for</span><span> </span><span>x64</span><span>
</span><span>Copyright</span><span> </span><span>(</span><span>C</span><span>)</span><span> </span><span>Microsoft</span><span> </span><span>Corporation.</span><span>  </span><span>All</span><span> </span><span>rights</span><span> </span><span>reserved.</span><span>

</span><span>program.c</span><span>
</span><span>program.c</span><span>(</span><span>134397076</span><span>):</span><span> </span><span>warning</span><span> </span><span>C4049:</span><span> </span><span>compiler</span><span> </span><span>limit:</span><span> </span><span>terminating</span><span> </span><span>line</span><span> </span><span>number</span><span> </span><span>emission</span><span>
</span><span>program.c</span><span>(</span><span>134397076</span><span>):</span><span> </span><span>note:</span><span> </span><span>Compiler</span><span> </span><span>limit</span><span> </span><span>for</span><span> </span><span>line</span><span> </span><span>number</span><span> </span><span>is</span><span> </span><span>16777215</span><span>
</span><span>program.c</span><span>(</span><span>41133672</span><span>):</span><span> </span><span>fatal</span><span> </span><span>error</span><span> </span><span>C1060:</span><span> </span><span>compiler</span><span> </span><span>is</span><span> </span><span>out</span><span> </span><span>of</span><span> </span><span>heap</span><span> </span><span>space</span></code></pre></figure>

<p>Pathetic!</p>

<p>And not only did the compiler fail us, but when looking into the limits of the Portable Executable format (.exe) for windows, I discovered that it cannot handle more than a <a href="https://stackoverflow.com/questions/6976693/what-is-the-maximum-size-of-a-pe-file-on-64-bit-windows">measly 4 GB</a>! With more than 4 billion comparisons needed to be encoded into the executable, this is a major obstacle for implementing our algorithm. Even if each comparison would use less than a single byte we would still be too heavy.</p>

<p>However, bad compilers and file formats should not stop us from achieving our dream. After all, all what a compiler does is writing some fancy machine code into a file and the file format is just some structure telling the OS how to put the binary code into memory. Really, we can do that ourselves.</p>

<p>Let’s start by writing an IsEven function in <a href="https://en.wikipedia.org/wiki/X86_assembly_language">x86-64 assembly</a> as it’s the native language of my Intel powered machine. It looks something like this:</p>

<figure><pre><code data-lang="assembly">; Argument is stored in ECX, return value in EAX
XOR EAX, EAX ; Set eax to zero (return value for odd number)
CMP ECX, 0h ; Compare arg to 0 
JNE 3h ; Skip next two instructions if it wasn't equal
INC EAX ; It was even, set even return value (1)
RET ; Return
CMP ECX, 1h ; Compare arg to 1
JNE 2 ; Skip next instruction if not equal
RET ; Odd return value already in EAX, just RET
; add the next 2...2^32-1 comparisons here
RET ; Fallback return</code></pre></figure>

<p>Not really correct asm, but it doesn’t matter much, because we’re gonna compile it into machine code manually.</p>

<p>How did I do this? Well I jumped online, using a mix of my early life experience coding emulators and hacking and looked into the x86(-64) architecture manuals to figure out the correct opcodes and format for each instruction.</p>

<p>… Just kidding, that’s horrible. I asked ChatGPT what the correct <a href="https://en.wikipedia.org/wiki/Opcode">opcode</a> was for each instruction and lucky for us it didn’t hallucinate any new extensions to x86-64.</p>

<p>So now we just write a “compiler” to output this code. Note that we will write the opcodes we got from the AI for the instructions directly. Here’s how it looks in our friend python:</p>

<figure><pre><code data-lang="python"><span>import</span> <span>struct</span>

<span>with</span> <span>open</span><span>(</span><span>'isEven.bin'</span><span>,</span> <span>'wb'</span><span>)</span> <span>as</span> <span>file</span><span>:</span>
   
    <span>file</span><span>.</span><span>write</span><span>(</span><span>b</span><span>"</span><span>\x31\xC0</span><span>"</span><span>)</span>                     <span># XOR EAX, EAX
</span>
    <span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>2</span><span>**</span><span>32</span><span>):</span>
        <span>ib</span> <span>=</span> <span>struct</span><span>.</span><span>pack</span><span>(</span><span>"&lt;I"</span><span>,</span> <span>i</span><span>)</span>               <span># Encode i as 32 bit little endian integer
</span>
        <span>file</span><span>.</span><span>write</span><span>(</span><span>b</span><span>"</span><span>\x81\xF9</span><span>"</span> <span>+</span> <span>ib</span><span>)</span>            <span># CMP ECX, i
</span>
        <span>if</span> <span>i</span><span>%</span><span>2</span> <span>==</span> <span>0</span><span>:</span>
            <span>file</span><span>.</span><span>write</span><span>(</span><span>b</span><span>"</span><span>\x75\x03</span><span>"</span><span>)</span>             <span># JNE +3
</span>            <span>file</span><span>.</span><span>write</span><span>(</span><span>b</span><span>"</span><span>\xFF\xC0</span><span>"</span><span>)</span>             <span># INC EAX
</span>            <span>file</span><span>.</span><span>write</span><span>(</span><span>b</span><span>"</span><span>\xC3</span><span>"</span><span>)</span>                 <span># RET
</span>        <span>else</span><span>:</span>
            <span>file</span><span>.</span><span>write</span><span>(</span><span>b</span><span>"</span><span>\x75\x01</span><span>"</span><span>)</span>             <span># JNE +1
</span>            <span>file</span><span>.</span><span>write</span><span>(</span><span>b</span><span>"</span><span>\xC3</span><span>"</span><span>)</span>                 <span># RET
</span>
    <span>file</span><span>.</span><span>write</span><span>(</span><span>b</span><span>"</span><span>\xC3</span><span>"</span><span>)</span>                         <span># Fallback RET</span></code></pre></figure>

<p>While we somewhat deviated from the original vision of the TikTok post, the essence remains the same. We create a long, long, long list of if-statements to determine if any number is even or odd, ignoring any arithmetic operation that would help out.</p>

<p>Running this gives us a nice 40 GB file which contains all 4.2 billion comparisons needed to determine if any 32 bit number is even or odd! Now we just need to write our host program that can load and use these instructions. For added performance (it is very important), I decided to map the file into the address space instead of reading all of it. By doing this, we can just pretend that the entire file is already in memory and let the poor OS deal with fitting a 40 GB blob into virtual memory. After mapping the file with READ and EXECUTE permissions we can call into the code by using a function pointer. It looks like this:</p>

<figure><pre><code data-lang="c"><span>#include &lt;stdio.h&gt;
#include &lt;Windows.h&gt;
#include &lt;stdint.h&gt;
</span>
<span>int</span> <span>main</span><span>(</span><span>int</span> <span>argc</span><span>,</span> <span>char</span><span>*</span> <span>argv</span><span>[])</span>
<span>{</span>
    <span>uint32_t</span> <span>number</span> <span>=</span> <span>atoi</span><span>(</span><span>argv</span><span>[</span><span>1</span><span>]);</span> <span>// No problems here</span>

    <span>// Open code file</span>
    <span>HANDLE</span> <span>binFile</span> <span>=</span> <span>CreateFileA</span><span>(</span>
                        <span>"isEven.bin"</span><span>,</span>
                        <span>GENERIC_READ</span> <span>|</span> <span>GENERIC_EXECUTE</span><span>,</span> <span>FILE_SHARE_READ</span><span>,</span>
                        <span>NULL</span><span>,</span>
                        <span>OPEN_EXISTING</span><span>,</span>
                        <span>FILE_ATTRIBUTE_NORMAL</span><span>,</span>
                        <span>NULL</span><span>);</span>
   
    <span>// Get 64 bit size of file</span>
    <span>LARGE_INTEGER</span> <span>codeSize</span><span>;</span>
    <span>GetFileSizeEx</span><span>(</span><span>binFile</span><span>,</span> <span>&amp;</span><span>codeSize</span><span>);</span>

    <span>// Create memory map of the file</span>
    <span>HANDLE</span> <span>mapping</span> <span>=</span> <span>CreateFileMapping</span><span>(</span>
                        <span>binFile</span><span>,</span>
                        <span>NULL</span><span>,</span>
                        <span>PAGE_EXECUTE_READ</span><span>,</span>
                        <span>0</span><span>,</span>
                        <span>0</span><span>,</span>
                        <span>NULL</span><span>);</span>

    <span>// Get a pointer to the code</span>
    <span>LPVOID</span> <span>code</span> <span>=</span> <span>MapViewOfFile</span><span>(</span>
                    <span>mapping</span><span>,</span><span>FILE_MAP_EXECUTE</span> <span>|</span> <span>FILE_MAP_READ</span><span>,</span>
                    <span>0</span><span>,</span>
                    <span>0</span><span>,</span>
                    <span>codeSize</span><span>.</span><span>QuadPart</span><span>);</span>

    <span>// Create a function that points to the code</span>
    <span>int</span> <span>(</span><span>*</span><span>isEven</span><span>)(</span><span>int</span><span>)</span> <span>=</span> <span>(</span><span>int</span><span>(</span><span>*</span><span>)(</span><span>int</span><span>))</span><span>code</span><span>;</span>

    <span>if</span> <span>(</span><span>isEven</span><span>(</span><span>number</span><span>))</span>
        <span>printf</span><span>(</span><span>"even</span><span>\n</span><span>"</span><span>);</span>
    <span>else</span>
        <span>printf</span><span>(</span><span>"odd</span><span>\n</span><span>"</span><span>);</span>

    <span>CloseHandle</span><span>(</span><span>binFile</span><span>);</span>
<span>}</span></code></pre></figure>

<p>And there we go! We now have everything to check if any 32 bit number is even or odd. Let’s take it for a spin:</p>

<figure><pre><code data-lang="powershell"><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>300</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>0</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>1000000</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>100000007</span><span>
</span><span>odd</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>400000000</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>400000001</span><span>
</span><span>odd</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>400000006</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>4200000000</span><span>
</span><span>odd</span><span> </span><span>&lt;</span><span>----</span><span> </span><span>WRONG</span><span>!</span></code></pre></figure>

<p>Almost! Seems like the algorithm has some issues with signedness, any value over 2^31 seems to give random results. Sad!</p>

<p>Let’s fix the final bug.</p>

<p>It turns out that atoi cannot deal with unsigned pureness, so it failed to parse our big boy numbers. Replacing it with strtoul fixes everything.</p>

<figure><pre><code data-lang="c"><span>uint32_t</span> <span>number</span> <span>=</span> <span>strtoul</span><span>(</span><span>argv</span><span>[</span><span>1</span><span>],</span> <span>NULL</span><span>,</span> <span>10</span><span>);</span><span>// No problems here</span></code></pre></figure>

<figure><pre><code data-lang="powershell"><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>4200000000</span><span>
</span><span>even</span><span>
</span><span>PS</span><span> </span><span>&gt;</span><span>.</span><span>\program.exe</span><span> </span><span>4200000001</span><span>
</span><span>odd</span></code></pre></figure>

<p>As a side note, the program is amazingly performant. For small numbers the results are instantaneous and for the large number close to the 2^32 limit the result is still returned in around 10 seconds. Considering the computer has to read 40 GB of data from disk, map it to physical memory and then let the CPU has a rip of it without many chances of caching is honestly quite mind blowing. For reference, the computer is a Core i5 12600K with 32 GB memory and the files are residing on a M.2 SSD disk. While calculating, the peak read speed I saw from the SSD was around 800 MB/s (which doesn’t really make sense as that should give execution speeds at 40+ seconds, but computers are magical so who knows what is going on).</p>

<p>And there we have it! The Internet proven wrong once again, not only can you actually write a fully functioning and performant program in the manner of the TikTok post, but it’s also very fun.</p>

  </div>
</article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NY Times copyright suit wants OpenAI to delete all GPT instances (477 pts)]]></title>
            <link>https://arstechnica.com/tech-policy/2023/12/ny-times-sues-open-ai-microsoft-over-copyright-infringement/</link>
            <guid>38790255</guid>
            <pubDate>Thu, 28 Dec 2023 05:07:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/tech-policy/2023/12/ny-times-sues-open-ai-microsoft-over-copyright-infringement/">https://arstechnica.com/tech-policy/2023/12/ny-times-sues-open-ai-microsoft-over-copyright-infringement/</a>, See on <a href="https://news.ycombinator.com/item?id=38790255">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <h4>
      Not the sincerest form of flattery    —
</h4>
            <h2 itemprop="headline">NY Times copyright suit wants OpenAI to delete all GPT instances</h2>
            <h2 itemprop="description">Shows evidence that GPT-based systems will reproduce Times articles if asked.</h2>
                    </div><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/12/GettyImages-1621976654-800x450.jpg" alt="Image of a CPU on a motherboard with " ai="" stamped="" on="" it="">
      <figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2023/12/GettyImages-1621976654.jpg" data-height="1299" data-width="2309">Enlarge</a> <span>/</span> Microsoft is named in the suit for allegedly building the system that allowed GPT derivatives to be trained using infringing material.</p></figcaption>  </figure>

  




<!-- cache hit 339:single/related:c68a8bff5724c49da7e49cf4e16a54d5 --><!-- empty -->
<p>In August, <a href="https://arstechnica.com/tech-policy/2023/08/report-potential-nyt-lawsuit-could-force-openai-to-wipe-chatgpt-and-start-over/">word leaked out</a> that The New York Times was considering joining the growing legion of creators that are suing AI companies for misappropriating their content. The Times had reportedly been negotiating with OpenAI regarding the potential to license its material, but those talks had not gone smoothly. So, eight months after the company was reportedly considering suing, <a href="https://nytco-assets.nytimes.com/2023/12/NYT_Complaint_Dec2023.pdf">the suit has now been filed</a>.</p>
<p>The Times is targeting various companies under the OpenAI umbrella, as well as Microsoft, an OpenAI partner that both uses it to power its Copilot service and helped provide the infrastructure for training the GPT Large Language Model. But the suit goes well beyond the use of copyrighted material in training, alleging that OpenAI-powered software will happily circumvent the Times' paywall and ascribe hallucinated misinformation to the Times.</p>
<h2>Journalism is expensive</h2>
<p>The suit notes that The Times maintains a large staff that allows it to do things like dedicate reporters to a huge range of beats and engage in important investigative journalism, among other things. Because of those investments, the newspaper is often considered an authoritative source on many matters.</p>
<p>All of that costs money, and The Times earns that by limiting access to its reporting through a robust paywall. In addition, each print edition has a copyright notification, the Times' terms of service limit the copying and use of any published material, and it can be selective about how it licenses its stories. In addition to driving revenue, these restrictions also help it to maintain its reputation as an authoritative voice by controlling how its works appear.</p>
<p>The suit alleges that OpenAI-developed tools undermine all of that. "By providing Times content without The Times’s permission or authorization, Defendants’ tools undermine and damage The Times’s relationship with its readers and deprive The Times of subscription, licensing, advertising, and affiliate revenue," the suit alleges.</p>
<p>Part of the unauthorized use The Times alleges came during the training of various versions of GPT. Prior to GPT-3.5, information about the training dataset was made public. One of the sources used is a large collection of online material called "Common Crawl," which the suit alleges contains information from 16 million unique records from sites published by The Times. That places the Times as the third most referenced source, behind Wikipedia and a database of US patents.</p>                                            
                                                        
<p>OpenAI no longer discloses as many details of the data used for training of recent GPT versions, but all indications are that full-text NY Times articles are still part of that process (Much more on that in a moment.) Expect access to training information to be a major issue during discovery if this case moves forward.</p>
<h2>Not just training</h2>
<p>A <a href="https://arstechnica.com/tech-policy/2023/10/two-artists-suing-ai-image-makers-never-copyrighted-their-works/">number of suits</a> have <a href="https://arstechnica.com/tech-policy/2023/10/universal-music-sues-ai-start-up-anthropic-for-scraping-song-lyrics/">been filed</a> regarding the <a href="https://arstechnica.com/information-technology/2023/07/book-authors-sue-openai-and-meta-over-text-used-to-train-ai/">use of copyrighted material</a> during <a href="https://arstechnica.com/tech-policy/2023/09/george-r-r-martin-joins-authors-suing-openai-over-copyright-infringement/">training of AI systems</a>. But the Times' suit goes well beyond that to show how the material ingested during training can come back out during use. "Defendants’ GenAI tools can generate output that recites Times content verbatim, closely summarizes it, and mimics its expressive style, as demonstrated by scores of examples," the suit alleges.</p>
<p>The suit alleges—and we were able to verify—that it's comically easy to get GPT-powered systems to offer up content that is normally protected by the Times' paywall. The suit shows a number of examples of GPT-4 reproducing large sections of articles nearly verbatim.</p>
<p>The suit includes screenshots of ChatGPT being given the title of a piece at The New York Times and asked for the first paragraph, which it delivers. Getting the ensuing text is apparently as simple as repeatedly asking for the next paragraph.</p>
<p>ChatGPT has apparently closed that loophole in between the preparation of that suit and the present. We entered some of the prompts shown in the suit, and were advised "I recommend checking The New York Times website or other reputable sources," although we can't rule out that context provided prior to that prompt could produce copyrighted material.</p>
<figure><img alt="Ask for a paragraph, and Copilot will hand you a wall of normally paywalled text." src="https://cdn.arstechnica.net/wp-content/uploads/2023/12/Screen-Shot-2023-12-27-at-12.11.54-PM.png" width="934" height="799"><figcaption><p>Ask for a paragraph, and Copilot will hand you a wall of normally paywalled text.</p><p>John Timmer</p></figcaption></figure>
<p>But not all loopholes have been closed. The suit also shows output from Bing Chat, since rebranded as Copilot. We were able to verify that asking for the first paragraph of a specific article at The Times caused Copilot to reproduce the first third of the article.</p>                                            
                                                        
<p>The suit is dismissive of attempts to justify this as a form of fair use. "Publicly, Defendants insist that their conduct is protected as 'fair use' because their unlicensed use of copyrighted content to train GenAI models serves a new 'transformative' purpose," the suit notes. "But there is nothing 'transformative' about using The Times’s content without payment to create products that substitute for The Times and steal audiences away from it."</p>
<h2>Reputational and other damages</h2>
<p>The hallucinations common to AI also came under fire in the suit for potentially damaging the value of the Times' reputation, and possibly damaging human health as a side effect. "A GPT model completely fabricated that “The New York Times published an article on January 10, 2020, titled ‘Study Finds Possible Link between Orange Juice and Non-Hodgkin’s Lymphoma,’” the suit alleges. "The Times never published such an article."</p>
<p>Similarly, asking about a Times article on heart-healthy foods allegedly resulted in Copilot saying it contained a list of examples (which it didn't). When asked for the list, 80 percent of the foods on weren't even mentioned by the original article. In another case, recommendations were ascribed to the Wirecutter when the products hadn't even been reviewed by its staff.</p>
<p>As with the Times material, it's alleged that it's possible to get Copilot to offer up large chunks of Wirecutter articles (The Wirecutter is owned by The New York Times). But the suit notes that these article excerpts have the affiliate links stripped out of them, keeping the Wirecutter from its primary source of revenue.</p>
<p>The suit targets various OpenAI companies for developing the software, as well as Microsoft—the latter for both offering OpenAI-powered services, and for having developed the computing systems that enabled the copyrighted material to be ingested during training. Allegations include direct, contributory, and vicarious copyright infringement, as well as DMCA and trademark violations. Finally, it alleges "Common Law Unfair Competition By Misappropriation."</p>
<p>The suit seeks nothing less than the erasure of both any GPT instances that the parties have trained using material from the Times, as well as the destruction of the datasets that were used for the training. It also asks for a permanent injunction to prevent similar conduct in the future. The Times also wants money, lots and lots of money: "statutory damages, compensatory damages, restitution, disgorgement, and any other relief that may be permitted by law or equity."</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Little File Explorer – File Manager for Android 1.0 and above (161 pts)]]></title>
            <link>https://github.com/martinmimigames/little-file-explorer</link>
            <guid>38789958</guid>
            <pubDate>Thu, 28 Dec 2023 04:11:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/martinmimigames/little-file-explorer">https://github.com/martinmimigames/little-file-explorer</a>, See on <a href="https://news.ycombinator.com/item?id=38789958">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">Little File Explorer</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/martinmimigames/little-file-explorer/blob/main/docs/images/icon.png"><img src="https://github.com/martinmimigames/little-file-explorer/raw/main/docs/images/icon.png" alt="Icon"></a></p>
<p dir="auto"><a href="https://github.com/martinmimigames/little-file-explorer/blob/main/LICENSE.md"><img src="https://camo.githubusercontent.com/e7bb4e4d68df6fd055e495ae65d3a0fa1b7766c0b49e1e6b7cd638847a13924d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d617274696e6d696d6967616d65732f6c6974746c652d66696c652d6578706c6f7265723f7374796c653d666c61742d737175617265" alt="Read License" data-canonical-src="https://img.shields.io/github/license/martinmimigames/little-file-explorer?style=flat-square"></a></p>
<p dir="auto"><a href="https://www.codefactor.io/repository/github/martinmimigames/little-file-explorer" rel="nofollow"><img src="https://camo.githubusercontent.com/b1831516e31dabea2627d22b5afb1189e7cf37b31ab87ebbd75b5d5fa1db7956/68747470733a2f2f696d672e736869656c64732e696f2f636f6465666163746f722f67726164652f6769746875622f6d617274696e6d696d6967616d65732f6c6974746c652d66696c652d6578706c6f7265722f6d61696e3f7374796c653d666c61742d737175617265" alt="Code Quality" data-canonical-src="https://img.shields.io/codefactor/grade/github/martinmimigames/little-file-explorer/main?style=flat-square"></a></p>
<h2 tabindex="-1" dir="auto">Descriptions</h2>
<p dir="auto">A small, simple file explorer, designed with compatibility in mind.</p>
<p dir="auto">Open-sourced and publicly-viewable code for anyone worrying about being locked in or privacy invasion.</p>
<p dir="auto">It provides multiple functions, including copy and pasting files, multi-file share, etc. More information available in <strong>Features</strong> section below.</p>
<p dir="auto">Supports Android 1.0+</p>
<p dir="auto">Currently under 40 KB.</p>
<p dir="auto">Previous known as <em>Simple File Explorer</em> (but from martinmimigames).</p>
<p dir="auto">Location of website:
<a href="https://martinmimigames.github.io/projects/little-file-explorer/index.html" rel="nofollow">https://martinmimigames.github.io/projects/little-file-explorer</a>.</p>
<h2 tabindex="-1" dir="auto">Screenshots</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/martinmimigames/little-file-explorer/blob/main/docs/images/example1.jpg"><img src="https://github.com/martinmimigames/little-file-explorer/raw/main/docs/images/example1.jpg" alt="Screenshot 1"></a></p>
<h2 tabindex="-1" dir="auto">Features</h2>
<ul dir="auto">
<li>Free</li>
<li>Small (&lt; 40 KB)</li>
<li>Basic file operations (Cut, copy, paste, rename, delete)</li>
<li>File name filter</li>
<li>Name and Modified Time sort</li>
<li>Easy switch between sdcard and internal storage</li>
<li>Multi-share function</li>
<li>File/folder path copying</li>
<li>Minimum permissions</li>
<li>Dark/light theme toggle</li>
<li>md5 checksum generation and verification</li>
</ul>
<h2 tabindex="-1" dir="auto">Latest Versions</h2>
<ul dir="auto">
<li>
<p dir="auto">v4.14</p>
<ul dir="auto">
<li>Fixed filter bug causing crash on startup</li>
<li>Fixed file not opening on some apps (missing metadata)</li>
<li>Fixed file size calculation incorrect</li>
<li>Now clear text input when create new folder</li>
<li>More natural-looking back button</li>
<li>Removed unused notification about invalid folder name</li>
<li>Now uses Future for concurrency management (less race condition)</li>
</ul>
</li>
<li>
<p dir="auto">v4.13</p>
<ul dir="auto">
<li>Fixed # in file name error</li>
<li>Added follow system dark mode</li>
<li>Fixed crash when open details of large files</li>
<li>Fixed error when empty clipboard</li>
<li>Now clear filter when entering/exiting folder</li>
<li>Added invalid name warning when creating/renaming files</li>
</ul>
</li>
<li>
<p dir="auto">v4.12</p>
<ul dir="auto">
<li>added md5 checksum calculation and verification (details page)</li>
<li>theme is now toggle-based (burger menu)</li>
<li>app now forget last path (feature reverted)</li>
</ul>
</li>
<li>
<p dir="auto">v4.11</p>
<ul dir="auto">
<li>Fix crashing if last exited on a non-existing folder</li>
<li>Fix unable to exit folders with access denied</li>
<li>Added details page for files</li>
<li>Added light mode (follows system settings)</li>
<li>Added sorting by file size</li>
<li>Moved storage info to the bottom</li>
<li>Added slight padding to dialogs</li>
</ul>
</li>
<li>
<p dir="auto">v4.10</p>
<ul dir="auto">
<li>Added "toggle hidden" option (available in menu button)</li>
<li>Added File/Folder name filtering (available on top bar)</li>
<li>Added display sorting (name, last modified time) (available in menu button)</li>
<li>Added file path remembering on app exit</li>
<li>Re-added share button in open list options</li>
<li>Fixed delete confirmation screen being full screen</li>
</ul>
</li>
<li>
<p dir="auto">v4.9</p>
<ul dir="auto">
<li>Fixed sticky selection state after leaving app</li>
<li>Fixed concurrent directory list modification</li>
<li>Removed share button from file option menu</li>
<li>Added duplicate folder warning when creating new folder</li>
<li>Changed rounding system for storage size display</li>
<li>Always update storage list quick switch display</li>
<li>Now use cache thread pool for reducing idle cpu usage and increase performance</li>
</ul>
</li>
<li>
<p dir="auto">v4.8</p>
<ul dir="auto">
<li>Allow folder path to be copied to clipboard</li>
<li>Fixed incorrect handling after path copying</li>
<li>Fixed delete conformation button being pushed out by long list</li>
<li>Fixed copying to incorrect directory when moved directory while in progress</li>
</ul>
</li>
<li>
<p dir="auto">v4.7</p>
<ul dir="auto">
<li>Added multi-share option (sdk 4+)</li>
<li>Added file path copy option</li>
<li>Allow open file with default apps</li>
<li>Reduced open list button size</li>
<li>Capitalised buttons</li>
<li>Changed opener text</li>
</ul>
</li>
<li>
<p dir="auto">v4.6</p>
<ul dir="auto">
<li>Fixed not opening when no sdcard inserted</li>
</ul>
</li>
<li>
<p dir="auto">v4.5</p>
<ul dir="auto">
<li>smaller apk</li>
<li>fixed quick selection overlap with menu list</li>
<li>opening file request by other app now have open prompt</li>
<li>changed audio png</li>
<li>back button now go back to parent folder if available</li>
</ul>
</li>
</ul>
<h2 tabindex="-1" dir="auto">Branches</h2>
<ul dir="auto">
<li>main: latest source-code</li>
</ul>
<h2 tabindex="-1" dir="auto">Issues</h2>
<p dir="auto">Issues and pull requests are always welcome!</p>
<p dir="auto">You can submit issues the following ways:</p>
<ul dir="auto">
<li>via <a href="https://github.com/martinmimigames/little-file-explorer/issues">Github Issues</a></li>
<li>via email: <a href="mailto:martinmimigames@gmail.com">martinmimigames@gmail.com</a></li>
</ul>
<h2 tabindex="-1" dir="auto">Installation</h2>
<p dir="auto"><a href="https://f-droid.org/packages/com.martinmimigames.simplefileexplorer/" rel="nofollow"><img src="https://camo.githubusercontent.com/6904720a6735bf9a5ff4296afbe06c9e4c0d2f55f88ffdabd6df340c87b2083d/68747470733a2f2f6d617274696e6d696d6967616d65732e6769746875622e696f2f7265732f6765742d69742d6f6e2f662d64726f69642e706e67" alt="Get it on F-Droid" height="80" data-canonical-src="https://martinmimigames.github.io/res/get-it-on/f-droid.png"></a></p>
<p dir="auto"><a href="https://github.com/martinmimigames/little-file-explorer/releases/latest"><img src="https://camo.githubusercontent.com/8d8788cbbd75d3ebaacf8084cfb1d5d29f5069434007a42b26a89bc9169b68a8/68747470733a2f2f6d617274696e6d696d6967616d65732e6769746875622e696f2f7265732f6765742d69742d6f6e2f6769746875622e706e67" alt="Get it on Github" height="80" data-canonical-src="https://martinmimigames.github.io/res/get-it-on/github.png"></a></p>
<p dir="auto"><a href="https://martinmimigames.github.io/projects/little-file-explorer" rel="nofollow">Get it from the official website</a></p>
<h2 tabindex="-1" dir="auto">Made by Martinmimigames</h2>
<p dir="auto">Official Website at <a href="https://martinmimigames.github.io/" rel="nofollow">https://martinmimigames.github.io</a></p>
<h3 tabindex="-1" dir="auto">Last update of README</h3>
<p dir="auto">Date : 28-11-2023 dd-mm-yyyy</p>
<h3 tabindex="-1" dir="auto">Important</h3>
<p dir="auto"><strong>Please read the license!</strong></p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Generation Junk (326 pts)]]></title>
            <link>https://walterkirn.substack.com/p/generation-junk</link>
            <guid>38789411</guid>
            <pubDate>Thu, 28 Dec 2023 02:44:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://walterkirn.substack.com/p/generation-junk">https://walterkirn.substack.com/p/generation-junk</a>, See on <a href="https://news.ycombinator.com/item?id=38789411">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg" width="221" height="228" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:228,&quot;width&quot;:221,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:8853,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8978450-3afd-4253-866b-fbd8507f8409_221x228.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; About five years ago, for seven dollars, I bought an old citrus juicer at a thrift shop.&nbsp; It was one of those vintage small appliances which seem built to survive gas explosions and hammer attacks. When I turned on the motor with a metal toggle switch, a drive shaft spun a heavy ceramic knob that gouged out the hearts of lemon and orange halves, leaving not a scrap of pulp uncrushed. The thing worked beautifully, almost like new, so I looked up its serial number on the internet to see when the unit was manufactured, guessing it might be almost forty years old. Wrong. It dated to the 1940s. It was seventy, the stubborn monster, still giving satisfaction with every use.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; I can’t say the same about my coffee grinders. I use the plural because I’ve owned a lot of them, all bought in their original packaging and dead within a year. They’re good ones, supposedly, with burrs not blades, but they stop performing before long, ending their long journeys from overseas factories in unmarked graves in my local Montana landfill. I have a whole ghost kitchen in this landfill, and soon I will need to reserve a bigger plot. For the nifty under-the-counter fridge that has stopped getting cold after three years and which no one in the area can fix. For the cool bagless vacuum cleaner that clogs and chokes when I run it over a rug. For the set of glass measuring cups whose numbers and hashmarks are swiftly fading and becoming illegible, much like those on the dials of the washer my wife bought just three years ago. For the remains of the Pyrex casserole that shattered when I removed it from the oven, strewing the floor with blade-like shards, some so tiny I probably won’t find them until they lodge in my bare feet.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Should I go on? I think I will. It’s important to get to the thoughtful, speculative part, where I ask what it means when the objects in our lives demoralize us in a blizzard of malfunctions, but it’s also important – to me, emotionally -- to bury the reader in details of the unceasing material disappointments I’ve faced &nbsp;&nbsp;The cute yellow mittens my wife picked up at Target which unraveled the second time she wore them. The new suitcase which won’t stand upright when it’s full. The laptop computers that have turned to bricks within months of their warranties expiring. And the hybrid sedan with fifty thousand miles on it that also turned into a brick while going eighty down the freeway, losing its power steering, its power brakes, its power everything. I survived, by some miracle, issued legal threats, and the car’s manufacturer repaired it, free. Then it bricked again a few weeks later.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; It’s the little things too, of course, because they’re constant. The staples that won’t pierce five stacked sheets of paper. The matches that sizzle and smoke but don’t catch fire. The grocery bags split by the corners of the milk cartons whose inadequately seals leak drops of milk. The strangely short power cords on electronics. The two or three new pens I use each week that, because no ink comes out of them (at least not continually, in lines) aren’t really pens at all, in fact, but tributes to pens, Potemkin pens, mere props.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Baffled by how to measure this decline in the quality of common wares – a decline whose significance I promise to cover once I’ve further gratified my rage -- I opened the matter to my Twitter audience and quickly garnered two thousand replies, by far the longest thread I’ve ever triggered. The complaints were specific and formed patterns. One was a loathing for newer washers and dryers, because they don’t wash or dry well, and then they break. The clothes that go inside them were disliked too. (A former top executive of Levi’s chimed in to confirm that jeans aren’t what they used to be.) My favorite replies were the picky ones. One person noted that the “juice content” of juice is going down. Another observed that the “foaming liquid hand soap” which suddenly is dominating store shelves is just normal liquid soap, diluted.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Many blamed these problems on the government. They believed it had crippled certain products (major home appliances especially) with environmental regulations, causing them to function poorly and turn rapidly to landfill fodder -- an ecological net loss, perhaps. Some folks blamed our trade arrangements with China and the evils of capitalism itself. Weak-link computer chips in items that don’t require them also came in for abuse. One philosophical reply spoke of a sinister general trend toward the degradation of everything human. “There’s a war on value that’s going that’s comprised of three parts: war on quality, war on money, war on life.” Lofty rhetoric, but I understood. When my suddenly de-electrified hybrid car became a hurtling giant stone inside which my wife and I were helplessly strapped – all for the crime of trying to save fuel and, ultimately, earth-- it was hard not to feel ambushed, tricked.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Only a couple of my correspondents challenged my premise – and the flood of testimony -- that stuff is getting crappier, acutely so. They made an economic argument. They claimed things are worse because we want them cheaper, but if price is adjusted for inflation, they’re of the same quality as always. These rant-killing sophisticates annoyed me. Our new washing machine with the faded dials and the vanishing enamel on its corners (I forgot to mention that defect) is the costliest model we’ve ever purchased. As for the much of the cheap stuff – those Target mittens, say – they aren’t merely inexpensive, they’re valueless. In fact, they’re of negative value when one considers the waste or materials involved, and the wasted energy of driving to buy them, then driving to return them later – a second trip that in this case, and many others, wasn’t worth making. Instead, we took the loss. And the world took the loss. A small one, but they add up.</p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; In England in the 19</span><sup>th</sup><span> Century there arose certain thinkers – John Ruskin, William Morris – who believed that the quality of material objects reflects and affects the quality of society, even of the spirit. “Have nothing in your home,” wrote Morris, the father of the Arts and Crafts movement, which aimed to elevate the lives of the working and middle classes, “that you do not know to be useful or believe to be beautiful.” This would be a tall order nowadays. Recently, my wife needed a carrot peeler. She needed one rather quickly. Off to Target. The one she bought (the only one on sale) looked handsome enough, and the brand was one she recognized, but it failed in the useful department, miserably. It wasn’t sharp enough to peel a carrot. Like my pens which aren’t pens because pens put ink on paper, her peeler which didn’t peel was a nullity, a simulacrum, a representation of something, not the thing.</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The world is going digital, we’re told, and someday there will even be digital real estate inhabited by people in digital clothes drinking digital orange juice extracted with digital juicers. &nbsp;People will play at the lives they once took seriously, lives that had once had heft and weight, and the juice content of juice will fall to zero. I suspect my old physical squeezer will still be working then, but the rest of my kitchen gear won’t. Not much of it. I might not last, either. I fear I won’t. The psychic toll of goods that don’t endure is that one loses faith that future will even come, and then one loses interest in it coming, for little that we own or use or cherish seems likely to be there with us to meet it.</p><p>             One wonders whose obsolescence is being planned, our products’ or our own?</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Book list for streetfighting computer scientists (2022) (123 pts)]]></title>
            <link>https://nick-black.com/dankwiki/index.php/Book_list_for_streetfighting_computer_scientists</link>
            <guid>38789332</guid>
            <pubDate>Thu, 28 Dec 2023 02:33:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nick-black.com/dankwiki/index.php/Book_list_for_streetfighting_computer_scientists">https://nick-black.com/dankwiki/index.php/Book_list_for_streetfighting_computer_scientists</a>, See on <a href="https://news.ycombinator.com/item?id=38789332">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="mw-content" role="main"><p>From dankwiki</p><div id="bodyContent" lang="en" dir="ltr"><figure typeof="mw:File/Thumb"><a href="https://nick-black.com/dankwiki/index.php/File:Dijkstra.jpg"><img src="https://nick-black.com/dankwiki/images/thumb/a/ad/Dijkstra.jpg/300px-Dijkstra.jpg" decoding="async" width="300" height="343" srcset="https://nick-black.com/dankwiki/images/a/ad/Dijkstra.jpg 1.5x"></a><figcaption>Edsger Dijkstra is watching you</figcaption></figure>
<p>2022 edition. this is very different from most "best books for programmers" lists you'll see, with <i>Code Complete</i> and <i>Clean Code</i> and <i>Wistful Wanking for Practical Wankers</i> and <i>Design Slatterns</i> and titles like that. you'll figure all that out as you go along. these are books to read so that you can cut motherfuckers with knives. do you need to read all of these? only if you want to know the things inside, i guess.
</p>
<ul><li>Dijkstra, A Discipline of Programming</li>
<li>Knuth, The Art of Computer Programming, especially volumes 1 and 4B</li>
<li>Warren, Hacker's Delight</li>
<li>Stevens, Advanced Programming in the UNIX Environment</li>
<li>Stevens, UNIX Network Programming</li>
<li>Abelson + Sussman, Structure and Interpretation of Computer Programs</li>
<li>Varghese, Networking Algorithmics</li>
<li>McKusick, The Design and Implementation of the FreeBSD Operating System</li>
<li>Kerrisk, The Linux Programming Interface</li>
<li>Stroustrup, The C++ Programming Language</li>
<li>Gustedt, Modern C</li>
<li>Hanson, C Interfaces and Implementations</li>
<li>Garcia + Widjaja, Communications Networks</li>
<li>Kleinrock, Queueing Systems, especially volume 1</li>
<li>Hennessy + Paterson, Computer Architecture: A Quantitative Approach</li>
<li>Kennedy, Optimizing Compilers for Modern Architectures</li>
<li>Stepanov, From Mathematics to Generic Programming</li>
<li>CLRS, Introduction to Algorithms</li>
<li>Samet, Metric and Multidimensional Data Structures</li>
<li>McKenney, Is Parallel Programming Hard, And, If So, What Can You Do About It</li>
<li>Crochemere et al, Algorithms on Strings</li>
<li>Culler et al, Parallel Computer Architecture</li>
<li>Ward + Halstead, Computation Structures</li>
<li>Shriver + Smith, The Anatomy of a High-Performance Microprocessor</li>
<li>Vazirani, Approximation Algorithms</li>
<li>Raghaven + Motwani, Randomized Algorithms</li>
<li>Sipser, Introduction to the Theory of Computation</li>
<li>Ahora + Barak, Computational Complexity</li>
<li>Pierce, Types and Programming Languages</li>
<li>Barendregt, The Lambda Calculus</li>
<li>Okasaki, Purely Functional Data Structures</li>
<li>Van Roy + Hardidi, Concepts, Techniques, and Models of Computer Programming</li>
<li>Galub + Van Loan, Matrix Computations (note that this last is pretty much a straight mathematics textbook, but roaming multiethnic gangs of matrices make up many streetfights)</li></ul>
<p>speaking of math, you might want to take a look at Axler's <i>Linear Algebra Done Right</i> and Knuth's <i>Concrete Mathematics</i>. you'll want to know your combinatorics, your prob/stats, and your linear algebra cold. calculus through diffeqs is necessary to know, but i'm a pretty hardcore nerd and yet don't find myself integrating things all that often.
</p><p>now go forth and <a rel="nofollow" href="https://www.youtube.com/watch?v=BUt0dZXPFoU">fight in the streets</a>. i list no machine learning because i dislike machine learning. there are no quantum books because quantum is not yet useful for streetfighting (we all look forward to this situation changing). i list no SIMT/accelerator books because they're all shite. i list no infosec because infosec is a subfield of QA, fight me. there are no links because i'm a lazy, lazy man.
</p><p>i've heard good things about Tim Roughgarden's algorithms books, and have them on my shelves to read soon, but cannot yet speak to them.
</p><p>you should of course also read <a rel="nofollow" href="https://www.amazon.com/Hacking-Planet-Notcurses-Character-Graphics/dp/B086PNVNC9">Hacking the Planet with Notcurses</a>, buying copies for your team and family.
</p>
<!-- 
NewPP limit report
Cached time: 20231228063244
Cache expiry: 86400
Reduced expiry: false
Complications: [no‐toc‐conversion]
CPU time usage: 0.007 seconds
Real time usage: 0.007 seconds
Preprocessor visited node count: 1/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 1/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1434-0!canonical and timestamp 20231228063247 and revision id 10434. Rendering was triggered because: edit-page
 -->
</div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Game-icons.net: Free icons for your games (298 pts)]]></title>
            <link>https://game-icons.net/</link>
            <guid>38788552</guid>
            <pubDate>Thu, 28 Dec 2023 00:28:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://game-icons.net/">https://game-icons.net/</a>, See on <a href="https://news.ycombinator.com/item?id=38788552">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content"><main><h2><a href="https://game-icons.net/feeds/icons.xml"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/rss.svg" alt="rss icon" width="24" height="24"></a> Last Update Dec 20, 2022 | <a href="https://game-icons.net/recent.html">Recent icons</a></h2><h2>Popular ones with random colors</h2><ul><li data-hint="Robber"><p><a href="https://game-icons.net/1x1/delapouite/robber.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/robber.svg" alt="Robber icon" width="120" height="120"></a></p></li><li data-hint="Triton head"><p><a href="https://game-icons.net/1x1/lorc/triton-head.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/triton-head.svg" alt="Triton head icon" width="120" height="120"></a></p></li><li data-hint="Shark bite"><p><a href="https://game-icons.net/1x1/delapouite/shark-bite.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/shark-bite.svg" alt="Shark bite icon" width="120" height="120"></a></p></li><li data-hint="Glass heart"><p><a href="https://game-icons.net/1x1/lorc/glass-heart.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/glass-heart.svg" alt="Glass heart icon" width="120" height="120"></a></p></li><li data-hint="Drop weapon"><p><a href="https://game-icons.net/1x1/skoll/drop-weapon.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/skoll/drop-weapon.svg" alt="Drop weapon icon" width="120" height="120"></a></p></li><li data-hint="Winged sword"><p><a href="https://game-icons.net/1x1/lorc/winged-sword.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/winged-sword.svg" alt="Winged sword icon" width="120" height="120"></a></p></li><li data-hint="Ship's wheel"><p><a href="https://game-icons.net/1x1/delapouite/ship-wheel.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/ship-wheel.svg" alt="Ship's wheel icon" width="120" height="120"></a></p></li><li data-hint="Fishing"><p><a href="https://game-icons.net/1x1/delapouite/fishing.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/fishing.svg" alt="Fishing icon" width="120" height="120"></a></p></li><li data-hint="Angler fish"><p><a href="https://game-icons.net/1x1/lorc/angler-fish.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/angler-fish.svg" alt="Angler fish icon" width="120" height="120"></a></p></li><li data-hint="Bowling Strike"><p><a href="https://game-icons.net/1x1/delapouite/bowling-strike.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/bowling-strike.svg" alt="Bowling Strike icon" width="120" height="120"></a></p></li><li data-hint="Vine leaf"><p><a href="https://game-icons.net/1x1/lorc/vine-leaf.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/vine-leaf.svg" alt="Vine leaf icon" width="120" height="120"></a></p></li><li data-hint="Missile swarm"><p><a href="https://game-icons.net/1x1/lorc/missile-swarm.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/missile-swarm.svg" alt="Missile swarm icon" width="120" height="120"></a></p></li><li data-hint="Andromeda chain"><p><a href="https://game-icons.net/1x1/lorc/andromeda-chain.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/andromeda-chain.svg" alt="Andromeda chain icon" width="120" height="120"></a></p></li><li data-hint="Sword clash"><p><a href="https://game-icons.net/1x1/lorc/sword-clash.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/sword-clash.svg" alt="Sword clash icon" width="120" height="120"></a></p></li><li data-hint="Dungeon light"><p><a href="https://game-icons.net/1x1/delapouite/dungeon-light.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/dungeon-light.svg" alt="Dungeon light icon" width="120" height="120"></a></p></li><li data-hint="Cyborg face"><p><a href="https://game-icons.net/1x1/delapouite/cyborg-face.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/cyborg-face.svg" alt="Cyborg face icon" width="120" height="120"></a></p></li><li data-hint="Fangs"><p><a href="https://game-icons.net/1x1/skoll/fangs.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/skoll/fangs.svg" alt="Fangs icon" width="120" height="120"></a></p></li><li data-hint="Gold mine"><p><a href="https://game-icons.net/1x1/delapouite/gold-mine.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/delapouite/gold-mine.svg" alt="Gold mine icon" width="120" height="120"></a></p></li><li data-hint="Castle"><p><a href="https://game-icons.net/1x1/lorc/castle.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/castle.svg" alt="Castle icon" width="120" height="120"></a></p></li><li data-hint="Diamonds smile"><p><a href="https://game-icons.net/1x1/lorc/diamonds-smile.html"><img src="https://game-icons.net/icons/ffffff/000000/1x1/lorc/diamonds-smile.svg" alt="Diamonds smile icon" width="120" height="120"></a></p></li></ul><h2>About the project</h2><h3>An ever growing collection of free game icons</h3><p>Dozen new symbols are added weekly and organized in intuitive categories to offer both a comfy browsing and let room for serendipity.</p><p>Stay up to date by following <a href="https://twitter.com/GameIcons">the project on twitter</a> or just fetching the <a href="https://game-icons.net/feeds/icons.xml">RSS feed</a>.</p><h3>Easy styling thanks to SVG</h3><p>All the images are downloadable in a vector format, so <a href="https://game-icons.net/studio.html">you can easily tweak</a> colors, rotation, adjust effects like blur, bevels or shadows and add <a href="https://game-icons.net/badges.html">badges</a>.</p><p>Another direct benefit is infinite scaling with low <a href="https://game-icons.net/memory.html">memory</a>, it means no size limit for the resulting files which can be used for high resolution interfaces, retina display, logos, stencils etc...</p><h3>Community oriented</h3><p>People designing video games or enthusiasts crafting board games have different constraints and needs.</p><p>Let us know what they are on our <a href="https://github.com/game-icons/icons/issues">GitHub tracker</a>.</p><h3>Passion driven</h3><p>Made by <a href="https://game-icons.net/about.html#authors">guys</a> who care about delivering a neat experience, because they eat their own dog food.</p><p><a href="https://game-icons.net/about.html">Learn more...</a></p></main></div></div>]]></description>
        </item>
    </channel>
</rss>