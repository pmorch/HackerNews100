<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 08 Sep 2023 22:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Safety Inspector Fired for Finding Too Many Defects Could Cost Railroad Millions (150 pts)]]></title>
            <link>https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520</link>
            <guid>37437764</guid>
            <pubDate>Fri, 08 Sep 2023 18:51:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520">https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520</a>, See on <a href="https://news.ycombinator.com/item?id=37437764">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>You would think that if you worked as a track inspector for a railroad company, reporting defects would make you good at your job. After all, wouldn’t the company want to know where its trains should slow down and where repairs need to be made? Ignoring those problems <span><a data-ga="[[&quot;Embedded Url&quot;,&quot;Internal link&quot;,&quot;https://jalopnik.com/overworked-inspector-missed-major-track-problems-two-da-1850699999&quot;,{&quot;metric25&quot;:1}]]" href="https://jalopnik.com/overworked-inspector-missed-major-track-problems-two-da-1850699999">would be a recipe for train derailments</a></span> that could cost the company a lot of money and could injure or even kill employees. According to former track inspector Don Sanders, you would be wrong, at least if you work for <span><a data-ga="[[&quot;Embedded Url&quot;,&quot;Internal link&quot;,&quot;https://jalopnik.com/over-2-000-railroad-workers-filed-safety-complaints-ove-1850320431&quot;,{&quot;metric25&quot;:1}]]" href="https://jalopnik.com/over-2-000-railroad-workers-filed-safety-complaints-ove-1850320431">Burlington Northern Santa Fe</a></span>.</p><div data-video-id="195640" data-monetizable="true" data-position="sidebar" data-video-title="2024 Polestar 2 | First Drive" data-video-blog-id="12" data-video-network="jalopnik" data-video-duration="238" data-playlist="195640,195639,195630" data-current="195640"><div><p>2024 Polestar 2 | First Drive</p></div><video disablepictureinpicture="" muted="" playsinline="" width="100%" height="100%" crossorigin="anonymous" preload="none"><source data-src="https://vid.kinja.com/prod/195640/195640_240p.mp4" label="240p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_480p.mp4" label="480p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_720p.mp4" label="720p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_1080p.mp4" label="1080p" type="video/mp4"><track kind="captions" label="English" src="https://kinja.com/api/videoupload/caption/21134.vtt" srclang="en"></video><div><ul><li data-label="">Off</li><li data-label="English">English</li></ul></div></div><p><span><a data-ga="[[&quot;Embedded Url&quot;,&quot;External link&quot;,&quot;https://kstp.com/kstp-news/top-news/a-track-inspector-claimed-he-was-fired-for-reporting-too-many-defects-his-secret-recordings-may-cost-bnsf-millions/&quot;,{&quot;metric25&quot;:1}]]" href="https://kstp.com/kstp-news/top-news/a-track-inspector-claimed-he-was-fired-for-reporting-too-many-defects-his-secret-recordings-may-cost-bnsf-millions/" target="_blank" rel="noopener noreferrer">KSTP-TV reports</a></span> Sanders had previously sued BNSF back in 2017, claiming he was retaliated against after he reported “too many defects.” The jury found in his favor, and BNSF is currently appealing the multi-million-dollar judgment. This isn’t the first time BNSF found itself in court, either. After a train derailed back in March, the news channel  “...found BNSF had repeatedly been sanctioned or admonished in court for destroying evidence or retaliating against employees.”</p><p>But now, KSTP-TV has obtained a series of previously unreleased secretly recorded phone calls from the lawsuit. And let’s just say they do not make BNSF look good. In one, you can hear an employee ask, “Why can’t we just fix the (expletive) defects?” In another from 2015, Sanders’ supervisor is clearly upset that he called the Federal Railroad Administration.</p><p>“Why in the world would we ever call the FRA about anything? Unless I’m absolutely blatantly telling you to break the rules,” the supervisor says. “They know the rule book better than anybody,” Sanders responds. “Have I ever called the FRA on you because you told me not to follow the rules like you do all the time? No.”</p><p>Another former BNSF track inspector, Kevin Gaylor, told KSTP-TV he<!-- --> was working with Sanders on a track inspection trip when they both received a call from their boss criticizing their performance. “We were both called and criticized for putting out too many slow order defects,” Gaylor said. “Every track inspector on this system can tell you their experiences about the pressure that’s put on.”</p><p>A slow order is given when a defect is found that is serious enough that trains need to reduce their speed until they pass. </p><p>In another one of the calls, Sanders’ boss sounds upset about a reported defect potentially putting his job in jeopardy, saying, “All I can say is I need your help right now to keep my ass from getting fired.” “I need to just look the other way?” Sanders responds. “No. We just need to have a conversation,” his boss replies.</p><p>According to court records obtained by KSTP-TV, that supervisor still has his job and was actually given a raise and a near <!-- -->$20,000 bonus. The performance review that led to that raise and bonus specifically referenced the fact that “Don Sanders is no longer working for BNSF” and the reduction in slow orders.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FTC judge decides Intuit’s ‘free’ TurboTax ads misled consumers (247 pts)]]></title>
            <link>https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing</link>
            <guid>37437311</guid>
            <pubDate>Fri, 08 Sep 2023 18:19:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing">https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing</a>, See on <a href="https://news.ycombinator.com/item?id=37437311">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article id="content"><div><div><div><h2>FTC judge decides Intuit’s ‘free’ TurboTax ads did mislead consumers</h2><p><span><span> / </span><h2>The FTC ruled TurboTax ‘deceived consumers’ by advertising its tax filing service as ‘free.’</h2></span></p></div><div><p><span>By</span> <span><span></span> <span><a href="https://www.theverge.com/authors/emma-roth">Emma Roth</a></span><span>, <span>a news writer who covers the streaming wars, consumer tech, crypto, social media, and much more. Previously, she was a writer and editor at MUO. </span></span></span></p><p><time datetime="2023-09-08T17:52:39.793Z"> <!-- -->Sep 8, 2023, 5:52 PM UTC</time><span>|</span></p><div><h2>Share this story</h2></div></div></div><div><figure><span><span></span><img alt="A photo showing the TurboTax logo on a laptop" sizes="(max-width: 768px) calc(100vw - 100px), (max-width: 1180px) 700px, 600px" srcset="https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/16x11/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 16w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/32x21/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 32w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/48x32/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 48w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/64x43/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 64w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/96x64/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 96w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/128x85/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 128w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/256x171/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 256w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/376x251/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 376w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/384x256/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 384w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/415x277/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 415w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/480x320/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 480w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/540x360/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 540w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/640x427/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 640w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/750x500/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 750w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/828x552/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 828w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1080x720/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1080w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1200x800/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1200w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1440x960/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1440w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1920x1280/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1920w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2048x1365/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 2048w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2400x1600/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 2400w" src="https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2400x1600/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg" decoding="async" data-nimg="responsive"></span><p><cite>Image: Getty</cite></p></figure></div></div><div><div><p>Intuit, the parent company of TurboTax, is still facing blowback over claims it tricked people into using its “free” tax filing service that wasn’t actually free. In <a href="https://www.ftc.gov/news-events/news/press-releases/2023/09/administrative-law-judge-issues-initial-decision-ftcs-case-against-intuit-inc?utm_campaign=administrative_law_judge_&amp;utm_content=1694185883&amp;utm_medium=social&amp;utm_source=twitter">a ruling on Friday</a>, the Federal Trade Commission’s chief administrative law judge (ALJ) ruled that Intuit “deceived consumers” and “engaged in deceptive advertising.”</p><div><p>The <a href="https://www.ftc.gov/system/files/ftc_gov/pdf/intuit_initial_decision_public_redacted_1.pdf">ruling includes several pages</a> of commercials and online ads where Intuit advertised its “Free Edition” software. While the name implies that the service is, well, <em>free</em>, people wound up having to pay to use it — <a href="https://www.theverge.com/2022/3/29/23002219/ftc-turbo-tax-irs-free-tax-prep-software-intuit-misleading">sparking a lawsuit from the FTC</a> and a <a href="https://www.theverge.com/2022/5/4/23057463/intuit-141-million-agreement-new-york-attorney-general-turbotax-free">$141 million payout to affected users</a>. Meanwhile, Intuit’s <em>actually</em> no-cost Free File version, which it launched in partnership with the IRS, <a href="https://www.theverge.com/2019/4/26/18518211/turbotax-free-tax-filing-hidden-google-search-results">remained exceedingly difficult to find</a>. In 2021, Intuit <a href="https://www.theverge.com/2021/7/17/22581587/turbotax-parent-company-intuit-opts-out-irs-free-file-program">exited the program</a> after the <a href="https://www.theverge.com/2020/1/1/21045779/irs-turbotax-free-file-h-r-block-tax-preparation-new-rules">IRS stopped letting companies</a> hide their free filing services from search engines.</p></div><p>The FTC’s ALJ determined that there is a “cognizant danger of a recurring violation” by Intuit and issued a cease-and-desist order that prohibits the company from “engaging in deceptive practices in the future.” The ruling prevents Intuit from representing a product as free unless it actually <em>is</em> free for everyone to use and “clearly and conspicuously discloses any terms that would limit the offer.”</p><p><a href="https://www.intuit.com/blog/news-social/intuit-responds-to-u-s-federal-trade-commissions-anticipated-decision-and-reaffirms-its-commitment-to-free-tax-preparation/">In a response provided</a> in advance of the FTC’s ruling, Intuit calls the agency’s investigation process “flawed and highly questionable,” noting “Intuit already adheres to most of the advertising practices in the FTC’s erroneous decision.” The company adds that it has “been clear, fair, and transparent” with customers and remains “committed to free tax preparation.”</p><div><p>Hopefully, we won’t need to rely on potentially deceptive third parties to file our taxes online going forward. The IRS is working on a government-backed <a href="https://www.theverge.com/2023/5/17/23727414/irs-free-direct-tax-filing-test">free filing service that it will pilot during the 2024 tax season</a>.</p></div></div><div><p>Most Popular</p><ol><li><a href="https://www.theverge.com/2023/9/7/23862311/google-chrome-redesign-material-you-web-store"><h2>Chrome is about to look a bit different</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/7/23863192/google-pixel-8-pro-watch-2"><h2>Google teaser previews Pixel Watch 2 and both Pixel 8 phones</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/7/23863258/bmw-cancel-heated-seat-subscription-microtransaction"><h2>BMW drops plan to charge a monthly fee for heated seats</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/8/23864172/tesla-next-generation-car-cybertruck-design-price"><h2>Tesla’s $25,000 ‘next-generation car’ will have a Cybertruck design</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/8/23864150/ios-16-6-1-iphone-security-vulnerability-0-day-exploit-patch-update"><h2>iOS 16.6.1 fixes a big iPhone security vulnerability used to install Pegasus spyware</h2></a><hr></li></ol></div></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FAA closes SpaceX Starship mishap investigation (135 pts)]]></title>
            <link>https://apnews.com/article/spacex-starship-launch-accident-faa-a8d6cec63de579af4b6d5f040e51825d</link>
            <guid>37435656</guid>
            <pubDate>Fri, 08 Sep 2023 16:19:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://apnews.com/article/spacex-starship-launch-accident-faa-a8d6cec63de579af4b6d5f040e51825d">https://apnews.com/article/spacex-starship-launch-accident-faa-a8d6cec63de579af4b6d5f040e51825d</a>, See on <a href="https://news.ycombinator.com/item?id=37435656">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-module="" data-padding="none">
                    
                    
                        
                            

    <div><figure>
    

    
        <picture data-crop="medium-3x2">
    
        <source media="(min-width: 1280px)" type="image/webp" width="980" height="653" srcset="https://dims.apnews.com/dims4/default/4034ecb/2147483647/strip/true/crop/6600x4398+0+2/resize/980x653!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 1280px)" width="980" height="653" srcset="https://dims.apnews.com/dims4/default/391d036/2147483647/strip/true/crop/6600x4398+0+2/resize/980x653!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 1024px)" type="image/webp" width="820" height="546" srcset="https://dims.apnews.com/dims4/default/dc53b5c/2147483647/strip/true/crop/6600x4395+0+3/resize/820x546!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 1024px)" width="820" height="546" srcset="https://dims.apnews.com/dims4/default/06a468e/2147483647/strip/true/crop/6600x4395+0+3/resize/820x546!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 768px)" type="image/webp" width="1024" height="683" srcset="https://dims.apnews.com/dims4/default/2122adf/2147483647/strip/true/crop/6598x4401+1+0/resize/1024x683!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 768px)" width="1024" height="683" srcset="https://dims.apnews.com/dims4/default/f09d6ac/2147483647/strip/true/crop/6598x4401+1+0/resize/1024x683!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 600px)" type="image/webp" width="767" height="511" srcset="https://dims.apnews.com/dims4/default/9e9d57a/2147483647/strip/true/crop/6600x4397+0+2/resize/767x511!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/7b753e5/2147483647/strip/true/crop/6600x4397+0+2/resize/1534x1022!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source media="(min-width: 600px)" width="767" height="511" srcset="https://dims.apnews.com/dims4/default/c7fe7b1/2147483647/strip/true/crop/6600x4397+0+2/resize/767x511!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/82b170e/2147483647/strip/true/crop/6600x4397+0+2/resize/1534x1022!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source media="(max-width: 599px)" type="image/webp" width="567" height="378" srcset="https://dims.apnews.com/dims4/default/16e053e/2147483647/strip/true/crop/6600x4400+0+1/resize/567x378!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/54746bd/2147483647/strip/true/crop/6600x4400+0+1/resize/1134x756!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source media="(max-width: 599px)" width="567" height="378" srcset="https://dims.apnews.com/dims4/default/732e673/2147483647/strip/true/crop/6600x4400+0+1/resize/567x378!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/c19939d/2147483647/strip/true/crop/6600x4400+0+1/resize/1134x756!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source type="image/webp" width="320" height="213" srcset="https://dims.apnews.com/dims4/default/b084902/2147483647/strip/true/crop/6600x4393+0+4/resize/320x213!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/c413c5f/2147483647/strip/true/crop/6600x4393+0+4/resize/640x426!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source width="320" height="213" srcset="https://dims.apnews.com/dims4/default/2f11a83/2147483647/strip/true/crop/6600x4393+0+4/resize/320x213!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/99b5f9e/2147483647/strip/true/crop/6600x4393+0+4/resize/640x426!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    <img alt="FILE - SpaceX's Starship turns after its launch from Starbase in Boca Chica, Texas, Thursday, April 20, 2023. The Federal Aviation Administration has closed its accident investigation into SpaceX's failed debut of its Starship mega rocket. The FAA said Friday, Sept. 8, that multiple problems led to the launch explosion on April 20 over the Gulf of Mexico, off the South Texas coast. (AP Photo/Eric Gay, File)" srcset="https://dims.apnews.com/dims4/default/2f11a83/2147483647/strip/true/crop/6600x4393+0+4/resize/320x213!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/99b5f9e/2147483647/strip/true/crop/6600x4393+0+4/resize/640x426!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" width="320" height="213" src="https://dims.apnews.com/dims4/default/2f11a83/2147483647/strip/true/crop/6600x4393+0+4/resize/320x213!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5" loading="lazy">
</picture>

    

    
        <div>
            <div><figcaption><p>FILE - SpaceX’s Starship turns after its launch from Starbase in Boca Chica, Texas, Thursday, April 20, 2023. The Federal Aviation Administration has closed its accident investigation into SpaceX’s failed debut of its Starship mega rocket. The FAA said Friday, Sept. 8, that multiple problems led to the launch explosion on April 20 over the Gulf of Mexico, off the South Texas coast. (AP Photo/Eric Gay, File)</p></figcaption></div>
            <bsp-lead-superlead-ui></bsp-lead-superlead-ui>
        </div>
    
</figure>
</div>



                        
                    

                    <div>
                                        <p>CAPE CANAVERAL, Fla. (AP) — SpaceX must take a series of steps before it can launch its mega rocket again after its <span><a href="https://apnews.com/article/spacex-starship-launch-elon-musk-d9989401e2e07cdfc9753f352e44f6e2" target="_blank" rel="noopener">debut ended in an explosion</a></span>, federal regulators said Friday. </p><p>The Federal Aviation Administration said it closed its investigation into <span><a href="https://apnews.com/article/spacex-musk-starship-launch-test-flight-11de145e989e0534b6399640bc437b8e" target="_blank" rel="noopener">SpaceX’s failed debut of Starship</a></span>, the world’s biggest rocket. The agency is requiring SpaceX to take 63 corrective actions and to apply for a modified FAA license before launching again. </p><p>FAA official said multiple problems led to the April launch explosion, which sent pieces of concrete and metal hurtling for thousands of feet (meters) and created a plume of pulverized concrete that spread for miles (kilometers) around.</p>
    

<p>SpaceX founder Elon Musk said in the accident’s aftermath that he improved the 394-foot (120-meter) rocket and strengthened the launch pad. A new Starship is on the redesigned pad, awaiting liftoff. It will fly empty, as before.</p><p>During the initial test flight, the rocketship had to be destroyed after it tumbled out of control shortly after liftoff from Boca Chica Beach. The wreckage crashed into the Gulf of Mexico. SpaceX said fuel leaks during ascent caused fires to erupt at the tail of the rocket, severing connection with the main flight computer and leading to a loss of control.</p><p>That flight “provided numerous lessons learned,” the company said in a statement. </p>

<p>NASA wants to use Starship to land astronauts back on the moon in another few years. Musk’s ultimate goal is to build a fleet of Starships to carry people and supplies to Mars. </p><h2>___</h2><p>The Associated Press Health and Science Department receives support from the Howard Hughes Medical Institute’s Science and Educational Media Group. The AP is solely responsible for all content.</p>
                                    </div>

                    


                    
    



                    
    



                    
    


                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Async Rust Is A Bad Language (386 pts)]]></title>
            <link>https://bitbashing.io/async-rust.html</link>
            <guid>37435515</guid>
            <pubDate>Fri, 08 Sep 2023 16:10:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bitbashing.io/async-rust.html">https://bitbashing.io/async-rust.html</a>, See on <a href="https://news.ycombinator.com/item?id=37435515">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
    <p>But to get at whatever the hell I mean by that,
we need to talk about why <code>async</code> Rust exists in the first place.
Let’s talk about:</p>

<h2 id="modern-concurrency-theyre-green-theyre-mean--they-ate-my-machine">Modern Concurrency: They’re Green, They’re Mean, &amp; They Ate My Machine</h2>

<p><img src="https://assets.bitbashing.io/images/gofast.png" alt="gotta go fast"></p>

<!-- ## Why are we here? -->

<p>Suppose we want our code to go fast. We have two big problems to solve:</p>

<ol>
  <li>
    <p>We want to use the whole computer. Code runs on CPUs, and in 2023,
even my phone has eight of the damn things. If I want to use more than
12% of the machine, I need several cores.</p>
  </li>
  <li>
    <p>We want to keep working while we wait for slow things to complete
instead of just twiddling our thumbs.
Sending a message over the Internet, or even opening a file<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" rel="footnote">1</a></sup>
takes eternities in computer time—we could literally do
<em>millions</em> of other things meanwhile.</p>
  </li>
</ol>

<p>And so, we turn to our friends <em>parallelism and concurrency</em>.
It’s a favorite hobby of CS nerds to quibble over distinctions between the two,
so to oversimplify:</p>

<p><strong>Parallelism</strong> is about running code <em>in parallel</em> on several CPUs.</p>

<p><strong>Concurrency</strong> is about breaking a problem into separate, independent parts.</p>

<p>These <a href="https://www.youtube.com/watch?v=oV9rvDllKEg">are not the same thing</a>—single-core
machines have been running code concurrently for half a century now—but they are related.
So much online <em>well akshually</em>-ing ignores how we often break programs
into concurrent pieces <em>so that</em> those pieces can run in parallel,
and interleave in ways that keep our cores crunching!
(If we didn’t care about performance, why would we bother?)</p>

<h3 id="how-do-i-concurrency">How do I concurrency?</h3>

<p>One of the simplest ways to build a concurrent system is to split code into multiple processes.
After all, the operating system is a lean, mean, concurrency machine,
conspiring with your hardware to make each process think it has the
whole box to itself.
And the OS’s scheduler gives us parallelism for free, running <em>time slices</em> of
any process that’s ready on an available CPU core.
Once upon a time this was
<a href="https://en.wikipedia.org/wiki/Common_Gateway_Interface"><em>the</em> way</a>,
and we still employ it today whenever we pipe shell commands together.</p>

<figure>
<img src="https://cube-drone.com/103.gif">
<figcaption>
All hail <a href="https://cube-drone.com/">CubeDrone</a>
</figcaption>
</figure>

<p>But this approach has its limitations. Inter-process communication is not cheap,
since most implementations copy data to OS memory and back.<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" rel="footnote">2</a></sup></p>

<h3 id="mutex-based-concurrency-considered-harmful-or-hoare-was-right">Mutex-Based Concurrency Considered Harmful, or, <em>Hoare Was Right</em></h3>

<blockquote>
  <p>Some people, when confronted with a problem, think, “I know, I’ll use threads,”
and then two they hav erpoblesms.<br>
– Ned Batchelder</p>
</blockquote>

<p>We can avoid these overheads using <em>threads</em>—processes that share the same memory.
Common wisdom <!-- ---ones you'll learn in any operating systems
course---tell --> teaches us to connect them with mysterious beasts,
like <em>mutexes</em>, <em>condition variables</em>, and <em>semaphores</em>. This is a dangerous game!
Simple mistakes will plague you with <em>race conditions</em>
and <em>deadlocks</em> and other terrible diseases that fill your code with bugs,
but only on Tuesdays when it’s raining and the temperature is is a multiple of three.
And god help you if you want to learn how this stuff actually works on modern
hardware.<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" rel="footnote">3</a></sup></p>

<p>There is Another Way.
In his 1978 paper, <em>Communicating Sequential Processes</em>, Tony Hoare
suggested connecting threads with queues, or <em>channels</em>,
which they can use to send each other messages.
This has many advantages:</p>

<ul>
  <li>
    <p>Threads enjoy process-like isolation from the rest of the program,
since they don’t share memory.
(Bonus points for memory-safe languages that make it hard to
accidentally scramble another thread!)</p>
  </li>
  <li>
    <p>Each thread has a very obvious set of inputs (the channels it receives from)
and outputs (the channels it sends to).
This is easy to reason about, and easy to debug!
Instrument the channels for powerful visibility into your system,
measuring each thread’s throughput.</p>
  </li>
  <li>
    <p>Channels <em>are the synchronization</em>.
If a channel is empty, the receiver waits until it’s not.
If a channel is full, the sender waits.
Threads never sleep while they have work to do,
and gracefully pause if they outpace the rest of the system.</p>
  </li>
</ul>

<p>After decades of mutex madness,
many modern languages heed Hoare’s advice and
provide channels in their standard library.
In Rust, we call them
<a href="https://doc.rust-lang.org/std/sync/mpsc/fn.sync_channel.html"><code>std::sync::mpsc::sync_channel</code></a>.</p>

<p>Most software can stop here, building concurrent systems with threads and channels.<sup id="fnref:4" role="doc-noteref"><a href="#fn:4" rel="footnote">4</a></sup>
Combine them with tools to parallelize CPU-intensive loops
(like Rust’s <a href="https://crates.io/crates/rayon">Rayon</a>
or Haskell’s <a href="https://hackage.haskell.org/package/parallel-3.2.2.0/docs/Control-Parallel-Strategies.html"><code>par</code></a>),
and you’ve got a powerful cocktail.</p>

<p>But…</p>

<h3 id="ludicrous-speed-go">Ludicrous Speed, go!</h3>

<p><img src="https://assets.bitbashing.io/images/ludicrous-speed.jpg" alt="going to plaid"></p>

<p>Some problems demand a <em>lot</em> of concurrency.
The canonical example, described by Dan Kagel as the
<a href="https://web.archive.org/web/19990508164301/http://www.kegel.com/c10k.html"><em>C10K problem</em></a>
back in 1999, is a web server connected to tens of thousands of concurrent users.
At this scale, threads won’t cut it—while they’re <em>pretty</em> cheap,<sup id="fnref:5" role="doc-noteref"><a href="#fn:5" rel="footnote">5</a></sup>
fire up a thread per connection and your computer will grind to a halt.</p>

<p>To solve this, some languages provide a concurrency model where:</p>

<ol>
  <li>
    <p>Tasks are created and managed in <em>userspace</em>,
i.e., without the operating system’s help.</p>
  </li>
  <li>
    <p>A <em>runtime</em> schedules these tasks onto a pool of OS threads,
usually sized so that each CPU core gets a thread, to maximize parallelism.</p>
  </li>
</ol>

<p>This scheme goes by many names—<em>green threads, lightweight threads,
lightweight processes, fibers, coroutines</em>, and more—complete with pedantic
nerds endlessly debating the subtle differences between them.</p>

<p>Rust comes at this problem with an “async/await” model,
seen previously in places like C# and Node.js.<sup id="fnref:6" role="doc-noteref"><a href="#fn:6" rel="footnote">6</a></sup>
Here, functions marked <code>async</code> don’t block, but immediately return
a <em>future</em> or <em>promise</em> that can be awaited to produce the result.</p>
<div><pre><code><span>fn</span> <span>foo</span><span>()</span> <span>-&gt;</span> <span>i32</span> <span>{</span> <span>/* returns an int when called */</span> <span>}</span>

<span>async</span> <span>fn</span> <span>bar</span><span>()</span> <span>-&gt;</span> <span>i32</span> <span>{</span> <span>/* returns a future we can .await to get an int */</span> <span>}</span>
</code></pre></div>

<h2 id="painawait"><code>pain.await</code></h2>

<p>On one hand, futures in Rust are exceedingly small and fast,
thanks to their <em>cooperatively scheduled, stackless</em> design.
But unlike other languages with userspace concurrency,
Rust tries to offer this abstraction while <em>also</em> promising the programmer
total low-level control.</p>

<p>There’s a fundamental tension between the two, and the poor <code>async</code> Rust programmer
is perpetually caught in the middle, torn between the language’s design goals
and the massively-concurrent world they’re trying to build.
Rust attempts to statically verify the lifetime of every object and reference
in your program, all at compile time.
Futures promise the opposite: that we can break code
<em>and the data it references</em> into thousands of little pieces,
runnable at any time, on any thread,
based on conditions we can only know once we’ve started!
A future that reads data from a client should only run when that client’s socket
has data to read, and no lifetime annotation will tells us when that might be.</p>

<h2 id="send-help">Send help</h2>

<p>Assuring the compiler that everything will be okay runs into the same challenges
you see when working with raw threads.
Data must either be marked <code>Send</code> and moved,
or passed through references with <code>'static</code> lifetimes.
Both are easier said than done.
Moving (at least without cloning)
is often a non-starter, since it’s common in <code>async</code> code to spawn many
tasks that share common state.
And references are a pain too—there’s no
<a href="https://doc.rust-lang.org/std/thread/fn.scope.html"><code>thread::scope</code></a> equivalent to help us
bound futures’ lifetimes to anything short of “forever”.</p>

<p>is out,</p>
<div><pre><code><span>async</span> <span>fn</span> <span>foo</span><span>(</span><span>&amp;</span><span>BIG_GLOBAL_STATIC_REF_OR_SIMILAR_HORROR</span><span>,</span> <span>sendable_chungus</span><span>.clone</span><span>())</span>
</code></pre></div>
<p>is in.</p>

<p>And unlike launching raw threads, where you might have to deal with these annoyances
in a handful of functions,
this happens <em>constantly</em> due to
<a href="https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/"><code>async</code>’s viral nature</a>.
Since any function that calls an <code>async</code> function must itself be <code>async</code>,<sup id="fnref:7" role="doc-noteref"><a href="#fn:7" rel="footnote">7</a></sup>
you need to solve this problem everywhere, all the time.</p>

<h2 id="just-arc-my-shit-up">Just Arc my shit up</h2>

<p>A seasoned Rust developer will respond by saying that Rust gives us simple tools
for dynamic lifetimes spanning multiple threads.
We call them “atomic reference counts”,
or <a href="https://doc.rust-lang.org/std/sync/struct.Arc.html"><code>Arc</code></a>.
While it’s true that they solve the immediate problem—borrows check and our
code compiles—they’re far from a silver bullet.
Used pervasively, <code>Arc</code> gives you the world’s worst garbage collector.
Like a GC, the lifetime of objects and the resources they represent
(memory, files, sockets) is unknowable.
But you take this loss without the wins you’d get from an actual GC!</p>

<p>Don’t buy the “GC is slow” FUD—the claim is a misunderstanding of
latency vs. throughput at best and a bizarre psyop at worst.
A modern, moving garbage collector gets you more allocation throughput,
less fragmentation, and means you don’t have to play Mickey Mouse games with
weak pointers to avoid cycle leaks.
You can even trick systems programmers into leveraging GC in one of the world’s
most important software projects by calling it
<a href="https://www.kernel.org/doc/html/next/RCU/whatisRCU.html">“deferred destruction”</a>.
More on that another day.</p>

<h2 id="other-random-nonsense">Other random nonsense</h2>

<ul>
  <li>
    <p>Because Rust coroutines are stackless, the compiler turns each one into
a state machine that advances to the next <code>.await</code>.<sup id="fnref:42" role="doc-noteref"><a href="#fn:42" rel="footnote">8</a></sup>
But this makes any recursive <code>async</code> function a recursively-defined type!
A user just trying to call a function from itself is met with
inscrutable errors until they manually box it or use a
<a href="https://crates.io/crates/async-recursion">crate</a> that does the same.</p>
  </li>
  <li>
    <p>There’s an important distinction between a <em>future</em>—which does nothing
until awaited—and a <a href="https://docs.rs/tokio/latest/tokio/task/fn.spawn.html"><code>task</code></a>,
which spawns work in the runtime’s thread pool… returning a future that
marks its completion.</p>
  </li>
  <li>
    <p>There’s nothing keeping you from calling blocking code inside a future,
and there’s nothing keeping that call from blocking the runtime thread it’s on.
You know, the entire thing we’re trying to avoid with all this <code>async</code> business.</p>
  </li>
</ul>

<h2 id="running-away">Running away</h2>

<p><img src="https://assets.bitbashing.io/images/run-away.jpg"></p>

<p>Mixed together, this all gives <code>async</code> Rust a much different flavor than
“normal” Rust. One with many more gotchas,
that is harder to understand and teach,
and that pushes users to either:</p>

<ul>
  <li>
    <p>Develop a deep understanding of how these abstractions actually work,<sup id="fnref:69" role="doc-noteref"><a href="#fn:69" rel="footnote">9</a></sup>
writing complicated code to handle them, or</p>
  </li>
  <li>
    <p>Sprinkle <code>Arc</code>, <code>Pin</code>, <code>'static</code>, and other sacred runes throughout their
code and hope for the best.</p>
  </li>
</ul>

<p>Rust proponents (I’d consider myself one!) might call these criticisms overblown.
But I’ve seen whole teams of experienced developers,
trying to use Rust for some new project, mired in this minutia.
To whatever challenges teaching Rust has, <code>async</code> adds a whole new set.</p>

<p>The degree to which these problems <em>just aren’t a thing</em> in other languages
can’t be overstated either.
In Haskell or Go, “async code” is just normal code.
You might say this isn’t a fair comparison—after all,
those languages hide the difference between blocking and non-blocking
code behind fat runtimes, and lifetimes are handwaved with garbage collection.
But that’s exactly the point!
These are pure wins when we’re doing this sort of programming.</p>

<p>Maybe Rust isn’t a good tool for massively concurrent, userspace software.
We can save it for the 99% of our projects that
<a href="#mutex-based-concurrency-considered-harmful-or-hoare-was-right">don’t have to be</a>.</p>

<hr>



  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zinc-air batteries as an alternative to lithium-ion: study (106 pts)]]></title>
            <link>https://www.ecu.edu.au/newsroom/articles/research/move-over-lithium-ion-zinc-air-batteries-a-cheaper-and-safer-alternative</link>
            <guid>37435215</guid>
            <pubDate>Fri, 08 Sep 2023 15:49:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ecu.edu.au/newsroom/articles/research/move-over-lithium-ion-zinc-air-batteries-a-cheaper-and-safer-alternative">https://www.ecu.edu.au/newsroom/articles/research/move-over-lithium-ion-zinc-air-batteries-a-cheaper-and-safer-alternative</a>, See on <a href="https://news.ycombinator.com/item?id=37435215">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="mainContent">

        <!-- Hero Section //-->
        
        
        

        
        
        <!-- Page Body Content //-->
        <article aria-labelledby="articleHeading">

            
            

            <div id="content_container_1045624">
<p>Zinc-air batteries have emerged as a better alternative to lithium in a recent Edith Cowan University (ECU) <a href="https://onlinelibrary.wiley.com/doi/10.1002/eom2.12394">study</a> into the advancement of sustainable battery systems.</p><p>ECU's Dr Muhammad Rizwan Azhar led the project which discovered lithium-ion batteries, although a popular choice for electric vehicles around the world, face limitations related to cost, finite resources, and safety concerns.</p><p>"Rechargeable zinc-air batteries (ZABs) are becoming more appealing because of their low cost, environmental friendliness, high theoretical energy density, and inherent safety," Dr Muhammad Rizwan Azhar said.</p><p>"With the emergence of next-generation long-range vehicles and electric aircraft in the market, there is an increasing need for safer, more cost-effective, and high-performance battery systems that can surpass the capabilities of lithium-ion batteries."</p><h2>Zinc-air: An explainer</h2><p>A zinc–air battery consists of a zinc negative electrode and an air positive electrode.</p><p>The major disadvantage of these has been the limited power output, due to poor performance of air electrodes and short lifespan – until now.</p><p>ECU's breakthrough has enabled engineers to use a combination of new materials, such as carbon, cheaper iron and cobalt based minerals to redesign zinc-air batteries.</p><p>"The new design has been so efficient it suppressed the internal resistance of batteries, and their voltage was close to the theoretical voltage which resulted in a high peak power density and ultra-long stability,"&nbsp;&nbsp;&nbsp;Dr Azhar said.</p><p>"In addition to revolutionising the energy storage industry, this breakthrough contributes significantly to building a sustainable society, reducing our reliance on fossil fuels, and mitigating environmental impacts.”</p><p>"By using natural resources, such as zinc from Australia and air, this further enhances the cost-effectiveness and viability of these innovative zinc-air batteries for the future."</p><h2>Viable and reliable</h2><p>Dr Azhar said while renewable resources such as solar, wind, and hydro energy play a critical role in the future of green energy, they are not completely reliable solutions as they are intermittent sources of energy.</p><p>"Due to the abundance of zinc available in countries such as Australia, and the ubiquity of air, this becomes a highly viable and reliable energy storage solution," Dr Azhar explained.</p><p>ECU's re-design of zinc-air batteries brings Australia closer to achieving the UN sustainable development goals and targets set by the Paris Agreement, which was established in late 2015 to emphasise the need for sustainable energy resources to limit climate change.</p>
</div>

            

        </article>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Procreate Dreams (381 pts)]]></title>
            <link>https://procreate.com/dreams</link>
            <guid>37434918</guid>
            <pubDate>Fri, 08 Sep 2023 15:32:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://procreate.com/dreams">https://procreate.com/dreams</a>, See on <a href="https://news.ycombinator.com/item?id=37434918">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page-content"><main role="main" aria-label="Page Content"><div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/hero-still_en.c0a8d91.jpg"></p> </div> <div><h2>Available November 22</h2> <p>Procreate Dreams</p> <svg aria-label="Procreate Dreams™" width="266" height="25" viewBox="0 0 266 25" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_2590_10490)"><path d="M10.4219 0H0V23.8937H5.36108V14.9824H10.4267C15.478 14.9824 18.7566 11.7372 18.7566 7.43879C18.7566 3.1404 15.4733 0 10.4219 0ZM9.60228 10.9557H5.35631V4.02676H9.60228C12.0612 4.02676 13.4956 5.59458 13.4956 7.43879C13.4956 9.283 12.0612 10.9557 9.60228 10.9557ZM41.1016 6.10925C35.6071 6.10925 32.0902 9.83102 32.0902 15.1873C32.0902 20.5436 35.6071 24.3369 41.1016 24.3369C46.5961 24.3369 50.1463 20.6151 50.1463 15.1873C50.1463 9.75954 46.6295 6.10925 41.1016 6.10925ZM41.1016 20.4817C38.371 20.4817 36.7984 18.261 36.7984 15.1921C36.7984 12.1232 38.3662 9.96922 41.1016 9.96922C43.8369 9.96922 45.4381 12.1899 45.4381 15.1921C45.4381 18.1943 43.8703 20.4817 41.1016 20.4817ZM60.4205 21.8827C56.9037 21.8827 54.8545 19.1188 54.8545 15.3637C54.8545 11.6085 56.9037 8.84459 60.4205 8.84459C63.2893 8.84459 64.8238 10.5172 65.3003 12.7379H68.1691C67.5877 9.12098 64.8238 6.45712 60.4205 6.45712C55.3025 6.45712 52.124 10.2456 52.124 15.3684C52.124 20.4912 55.2977 24.2797 60.4205 24.2797C65.0287 24.2797 67.826 21.4443 68.2739 17.5891H65.4766C65.0668 20.048 63.4609 21.8875 60.4253 21.8875L60.4205 21.8827ZM88.8986 6.45235C83.9473 6.45235 80.602 10.2075 80.602 15.4637C80.602 20.72 83.709 24.2702 88.8271 24.2702C92.6823 24.2702 95.5511 22.0876 96.5089 18.4326H93.4019C92.5822 20.8915 90.6713 21.878 88.7604 21.878C85.7915 21.878 83.7424 19.5239 83.5375 16.0737V15.9355H96.6471V15.3541C96.6471 10.2361 93.8498 6.44282 88.8986 6.44282V6.45235ZM83.609 13.8244C84.1189 10.7507 85.9297 8.83982 88.8652 8.83982C91.9723 8.83982 93.745 10.9557 93.8165 13.8244H83.609ZM106.383 6.45235C102.251 6.45235 99.6255 8.67303 99.5206 12.2233H102.318C102.456 10.1408 104.024 8.84459 106.378 8.84459C108.87 8.84459 110.405 10.3457 110.405 12.7713V13.5242H108.051C101.189 13.5242 98.7677 15.9498 98.7677 19.1903C98.7677 22.1925 100.988 24.07 104.334 24.07C107.441 24.07 109.523 22.4975 110.343 21.2013H110.41V23.8985H113.14V12.7713C113.14 8.87794 110.548 6.45712 106.383 6.45712V6.45235ZM110.41 17.3079C110.41 19.662 107.951 21.816 104.948 21.816C102.833 21.816 101.498 20.8248 101.498 19.1188C101.498 17.2079 102.999 15.7068 108.051 15.7068H110.405V17.3127L110.41 17.3079ZM136.028 6.45235C131.077 6.45235 127.732 10.2075 127.732 15.4637C127.732 20.72 130.839 24.2702 135.957 24.2702C139.812 24.2702 142.681 22.0876 143.639 18.4326H140.532C139.712 20.8915 137.801 21.878 135.89 21.878C132.921 21.878 130.872 19.5239 130.667 16.0737V15.9355H143.777V15.3541C143.777 10.2361 140.98 6.44282 136.028 6.44282V6.45235ZM130.739 13.8244C131.249 10.7507 133.06 8.83982 135.995 8.83982C139.102 8.83982 140.875 10.9557 140.946 13.8244H130.739ZM73.7112 10.989V6.82882H70.9139V23.8985H73.7112V16.5598C73.7112 11.8754 75.8604 9.76907 80.1731 9.80243V6.76211C77.1852 7.0385 74.9026 8.2918 73.7112 10.9938V10.989ZM25.2471 10.9223V6.55243H20.434V23.8937H25.2471V17.3747C25.2471 13.1668 26.853 11.1606 31.3659 11.2845V6.44759C28.297 6.73351 26.2335 8.05353 25.2471 10.9223ZM120.87 1.36767H118.072V5.75184C118.072 6.35228 117.586 6.83835 116.986 6.83835H115.976C115.856 6.83835 115.728 6.83835 115.59 6.83835H114.484V9.22105H118.068V18.2658C118.068 21.8827 120.493 24.1368 124.315 24.1368C125.149 24.1368 125.916 24.0129 126.593 23.7889V21.3061C125.764 21.592 124.987 21.6778 124.315 21.6778C122.061 21.6778 120.87 20.4817 120.87 18.2658V9.22105H127.117V6.83359H120.87V1.36767Z" fill="white"></path> <path d="M190.03 6.61929C185.298 6.61929 182.086 10.3697 182.086 15.4782C182.086 20.5867 185.165 24.2703 190.063 24.2703C193.78 24.2703 196.587 22.1402 197.469 18.5566H195.744C194.967 21.4302 192.703 22.8836 190.03 22.8836C186.28 22.8836 183.811 20.0768 183.706 15.7832V15.6116H197.636V15.2733C197.602 10.2029 194.729 6.61929 190.03 6.61929ZM183.74 14.3964C184.111 10.6079 186.442 7.97266 190.03 7.97266C193.618 7.97266 195.949 10.5746 196.049 14.3964H183.744H183.74ZM207.438 6.61929C203.583 6.61929 201.014 8.57787 200.776 12.1281H202.329C202.601 9.42135 204.56 7.9679 207.433 7.9679C210.307 7.9679 212.303 9.72633 212.303 12.5665V14.02H208.787C202.43 14.02 200.099 16.3169 200.099 19.5669C200.099 22.307 202.296 24.1655 205.508 24.1655C206.742 24.1655 207.805 23.9558 208.706 23.5984C208.729 23.5889 208.753 23.5841 208.777 23.5746C208.806 23.5651 208.83 23.5508 208.858 23.5365C209.03 23.465 209.196 23.384 209.354 23.303C209.416 23.2696 209.482 23.241 209.544 23.2077C209.554 23.2029 209.568 23.1934 209.578 23.1886C210.221 22.836 210.817 22.3928 211.36 21.859C211.722 21.5016 212.027 21.1061 212.303 20.6915V23.8986H213.824V12.5713C213.824 8.92098 211.222 6.61929 207.433 6.61929H207.438ZM212.308 17.3033C212.141 20.6153 209.535 22.8502 205.818 22.8502C203.316 22.8502 201.624 21.5302 201.624 19.5383C201.624 17.0365 203.449 15.278 208.791 15.278H212.308V17.3081V17.3033ZM236.736 6.59546C234.105 6.59546 232.008 8.06797 230.936 10.6556C230.198 8.07274 228.148 6.59546 225.275 6.59546C222.725 6.59546 220.714 7.97266 219.685 10.3887V7.00052H218.184V23.8939H219.752V14.9683C219.795 11.6134 221.22 8.02508 225.07 8.02508C228.106 8.02508 229.712 9.86453 229.712 13.3433V23.8891H231.279V14.9635C231.303 11.6087 232.709 8.02032 236.597 8.02032C239.657 8.02032 241.206 9.80734 241.206 13.3385V23.8843H242.778V13.2003C242.778 8.99723 240.577 6.58117 236.736 6.58117V6.59546ZM252.986 14.5299C249.774 13.7197 248.015 13.4481 248.015 11.2179C248.015 8.9877 250.179 7.93931 252.447 7.93931C255.302 7.93931 257.103 9.2212 257.522 11.9851H259.019C258.533 8.36819 256.217 6.61929 252.481 6.61929C249.474 6.61929 246.495 7.76775 246.495 11.318C246.495 14.4965 248.897 14.9016 252.681 15.8499C256.098 16.66 257.718 17.0984 257.718 19.3334C257.718 21.9019 255.554 22.917 252.952 22.917C249.726 22.917 247.72 21.2729 247.401 18.2278H245.871C246.228 22.0592 248.749 24.2656 252.919 24.2656C256.536 24.2656 259.243 22.6787 259.243 19.2619C259.243 16.0834 256.841 15.4734 252.986 14.5299ZM157.358 0.224121H150.353V23.8986H157.192C164.707 23.8986 168.929 19.3763 168.929 12.0614C168.929 4.74649 164.74 0.224121 157.358 0.224121ZM157.192 22.3975H152.021V1.72522H157.358C163.682 1.72522 167.161 5.39458 167.161 12.0614C167.161 18.7282 163.525 22.3975 157.192 22.3975ZM176.31 8.24906C175.081 9.2212 174.218 10.5746 173.718 12.2997V6.97193H172.298V23.8986H173.756V16.8697C173.756 15.116 174.061 13.5768 174.676 12.252C175.291 10.9272 176.12 9.98843 177.163 9.28315C178.207 8.57787 179.356 8.22523 180.609 8.22523H181.376V6.78608H180.571C178.96 6.78608 177.535 7.27215 176.306 8.24429L176.31 8.24906Z" fill="#F7235B"></path> <path d="M260.31 4.0219H259.185V3.59302H261.883V4.0219H260.753V6.9288H260.31V4.0219ZM262.536 3.59302H263.065L264.256 6.39984L265.447 3.59302H266V6.9288H265.552V4.40314L264.485 6.9288H264.027L262.974 4.45556V6.9288H262.531V3.59302H262.536Z" fill="#F7235B"></path></g> <defs><clipPath id="clip0_2590_10490"><rect width="266" height="25" fill="white"></rect></clipPath></defs></svg> <p>Procreate Dreams is an all-new animation app packed with powerful tools that anyone can use. Create engaging hand-drawn animations, motion graphics and enhance them with photos, videos&nbsp;and&nbsp;sound. </p> <!----></div></div> <!----> <!----> <div><p>Procreate Dreams <span>has everything you need to create rich 2D animations, expressive videos, and breathtaking stories.</span></p></div> <div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/painting_en.eb98cb8.jpg" alt="" height="1300" width="1734"></p></div> <div><h2>Draw &amp; paint
                            </h2> <p>All-new drawing experience.</p> <p>Bring gorgeous texture to your animations with all your favorite Procreate brushes and more resolution than ever before. Flick the timeline away to make more&nbsp;room&nbsp;to&nbsp;draw.</p></div></div> <section><div><h2><span><img src="https://procreate-assets-cdn.procreate.art/img/performing.28c91e2.png" width="16" height="16"></span>Performing
                </h2> <p>Now anyone can animate, <span>record motion or effects through touch and instantly respond to the movie as&nbsp;it&nbsp;plays.</span></p></div> <div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/performing_en.29f6a7d.jpg" alt="" height="1300" width="1734"></p></div> <p><img src="https://procreate-assets-cdn.procreate.art/img/performing-overlay.e168a14.png" alt=""></p></div></section> <div><h2>
                    Multi-touch Timeline
                </h2> <p>A revolutionary timeline <span>made for animation, with fluid gestures that keep you focused on&nbsp;creating.</span></p></div> <div><div><h2>
                                Audio &amp; video
                            </h2> <p>Edit video and enrich with&nbsp;sound.</p> <p>Bring your animations to life with dramatic voice overs, and atmospheric music and sound&nbsp;effects.</p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/audio-landscape_en.979fb7f.jpg" alt="" width="1300" height="1734"></p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/audio-portrait_en.40ff00f.jpg" alt="" width="1734" height="1300"></p></div> <div><h3>High-resolution video</h3> <p>Perform lightning-fast edits as you work with gorgeous 4K ProRes footage.</p></div></div> <div><div><h2>
                    Stage
                </h2> <p>Set the scene.</p> <p>Create massive sets for characters to come to life, all in a single project. Draw beyond the Stage or keep elements Backstage until the perfect moment. Focus in on the details with simple pinch gestures to Zoom, Pan and Rotate around&nbsp;the&nbsp;stage.</p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/stage_bg.20e62cb.jpg" alt=""></p> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/stage_en.a35a85f.jpg" alt="" width="1734" height="1300"></p></div></div></div> <div><div><p><span>Procreate Dreams is packed with everything you need to bring your art and stories to life, and </span>this is only&nbsp;the&nbsp;beginning.</p></div> <div><div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/tile-effects_en.1ee948a.jpg"></p><video src="https://procreate-assets-cdn.procreate.art/videos/tile-effects_en.76c00b7.mp4" poster="https://procreate-assets-cdn.procreate.art/img/tile-effects_en.1ee948a.jpg" playsinline="" muted="muted" autoplay="autoplay" loop="loop"></video></div> <div><h3>Live Motion &amp; Effects</h3> <p>Adjust any time.</p></div></div> <div><h3>Keyframes</h3> <p>Power and precision made&nbsp;simple.</p></div> <div><h3>Real-time Rendering</h3> <p>Get more time for creativity, instantly playback your movie as you make&nbsp;edits.</p></div> <div><h3>Onion Skins</h3> <p>Easily activate and customize Onion&nbsp;Skins.</p></div> <div><h3>Text &amp; Type</h3> <p>Animate type and import custom&nbsp;fonts.</p></div></div></div> <div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/file.9e15da3.jpg" width="454" height="461" alt=""></p><h2>File format of the future.</h2> <p>All your assets are bundled into one file made for iCloud synchronization and backups. With saved undo history and instant open, the new Procreate file format is made for the next-generation of Procreate&nbsp;products.</p></div> <ul role="presentation"><li><div> <h3>Instant Open</h3></div> <p>Dive straight into creating. Procreate Dreams’ files open and close in an instant.</p></li><li><div> <h3>Automatic Saving</h3></div> <p>Never forget to save, every change you make is instantly saved.</p></li><li><div> <h3>iCloud Support</h3></div> <p>Organize and backup with iCloud synchronization.</p></li><li><div> <h3>Eternal History</h3></div> <p>Experiment without the risk of losing your work with saved undo history.</p></li></ul></div> <div><div><h2>Made for iPad &amp; Apple Pencil</h2> <p>The Perfect Match.</p> <p>From the leading developers for iPad, Procreate Dreams once again delivers an unmatched experience for touch and Apple Pencil. Experience natural and responsive painting, supercharged timeline editing, and&nbsp;more.</p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/pencil-landscape_en.522aaac.jpg" alt="" width="1300" height="1734"></p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/pencil-portrait_en.bad4795.jpg" alt="" width="1734" height="1300"></p></div> <p><img src="https://procreate-assets-cdn.procreate.art/img/dreams-pencil.d98fe86.png" width="1500" height="460" alt=""></p></div> <div><p>Art is for everyone. <span>Procreate Dreams is set to welcome a whole new generation of&nbsp;creators.</span></p></div> <div id="notify-me"><p><img src="https://procreate-assets-cdn.procreate.art/img/laser-left.c0f62a8.jpg" alt=""> <img src="https://procreate-assets-cdn.procreate.art/img/laser-right.a4b7c33.jpg" alt=""></p><div><p><img src="https://procreate-assets-cdn.procreate.art/img/dreams-app-icon.f2bc29c.png" width="100" height="100" alt=""></p> <p>No subscriptions. Just $19.99 USD. Available November&nbsp;22.</p> </div></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bees struggle to find flowers because of air pollution (199 pts)]]></title>
            <link>https://www.birmingham.ac.uk/news/2023/bees-struggle-to-find-flowers-because-of-air-pollution</link>
            <guid>37434381</guid>
            <pubDate>Fri, 08 Sep 2023 14:59:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.birmingham.ac.uk/news/2023/bees-struggle-to-find-flowers-because-of-air-pollution">https://www.birmingham.ac.uk/news/2023/bees-struggle-to-find-flowers-because-of-air-pollution</a>, See on <a href="https://news.ycombinator.com/item?id=37434381">Hacker News</a></p>
<div id="readability-page-1" class="page"><div type="news"><figure><img src="https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg" alt="A bee on a purple flower." srcset="https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=200 200w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=400 400w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=600 600w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=800 800w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1000 1000w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1200 1200w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1400 1400w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1600 1600w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1800 1800w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=2000 2000w"><figcaption><span>Photo credit: Pixabay. </span></figcaption></figure><p><span><p>A research team comprising the UK Centre for Ecology &amp; Hydrology (UKCEH) and the Universities of Birmingham, Reading, Surrey and Southern Queensland, found that ozone substantially changes the size and scent of floral odour plumes given off by flowers, and that it reduced honeybees' ability to recognise odours by up to 90% from just a few metres away.<em> </em></p>
<p>Ground-level ozone typically forms when nitrogen oxide emissions from vehicles and industrial processes react with volatile organic compounds emitted from vegetation in the presence of sunlight.</p></span></p><div><blockquote><div><p>Our study provides robust evidence that the changes due to ground-level ozone on floral scent cause pollinators to struggle to carry out their crucial role in the natural environment also with implications for food security.</p><p><cite>Professor Christian Pfrang, University of Birmingham</cite></p></div></blockquote></div><p><span><p>Professor Christian Pfrang from the University of Birmingham who collaborated on the research said: “Our study provides robust evidence that the changes due to ground-level ozone on floral scent cause pollinators to struggle to carry out their crucial role in the natural environment also with implications for food security.”</p>
<p>The findings suggest that ozone is likely to be having a negative impact on wildflower abundance and crop yields. International research has already established that ozone has a negative impact on food production because it damages plant growth.</p>
<p>Dr Ben Langford, an atmospheric scientist at UKCEH who led the study said: "Some 75% of our food crops and nearly 90% of wild flowering plants depend, to some extent, upon animal pollination, particularly by insects. Therefore, understanding what adversely affects pollination, and how, is essential to helping us preserve the critical services that we rely upon for production of food, textiles, biofuels and medicines, for example."</p>
<p>The researchers used a 30-m wind tunnel at Surrey University to monitor how the size and shape of odour plumes changed in the presence of ozone. As well as decreasing the size of the odour plume the scientists found that the scent of the plume changed substantially as certain compounds reacted away much faster than others.</p>
<p>Honeybees were trained to recognise the same odour blend and then exposed to the new, ozone-modified odours. Pollinating insects use floral odours to find flowers and learn to associate their unique blend of chemical compounds with the amount of nectar it provides, allowing them to locate the same species in the future.</p>
<p>The research showed that towards the centre of plumes, 52% of honeybees recognised an odour at 6 metres, decreasing to 38% at 12 m. At the edge of plumes, which degraded more quickly, 32% of honeybees recognised a flower from 6 m away and just a tenth of the insects from 12 m away.</p>
<p>The study indicates that ozone could also affect insects’ other odour-controlled behaviours such as attracting a mate.</p>
<p>The research was funded by the Natural Environment Research Council, part of UK Research and Innovation, and was published in the journal <a href="https://www.sciencedirect.com/science/article/pii/S0269749123013386?via%3Dihub"><em>Environmental Pollution</em></a>.</p>
<p>Professor Christian Pfrang concluded: "We know that air pollution has a detrimental effect on human health, biodiversity and the climate, but now we can see how it prevents bees and other pollinating insects from carrying out their key job. This should act as a wake-up call to take action on air pollution and help safeguard food production and biodiversity for the future."</p></span></p><div><h2>Featured staff</h2></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dating app Grindr loses nearly half its staff after trying to force RTO (117 pts)]]></title>
            <link>https://www.cnn.com/2023/09/08/business/grindr-return-to-office-union/index.html</link>
            <guid>37434293</guid>
            <pubDate>Fri, 08 Sep 2023 14:54:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2023/09/08/business/grindr-return-to-office-union/index.html">https://www.cnn.com/2023/09/08/business/grindr-return-to-office-union/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=37434293">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-uri="cms.cnn.com/_components/video-resource/instances/h_8710257b98c3cc87e5d5d5601429b08b-h_d769b1babdb73fdff1c1f78211f20c52-pageTop@published" data-component-name="video-resource" data-editable="lede" data-fixed-ratio="16x9" data-video-id="business/2023/08/07/exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business.cnn" data-live="" data-analytics-aggregate-events="true" data-custom-experience="" data-asset-type="" data-medium-env="prod" data-autostart="true" data-show-ads="true" data-source="CNN" data-featured-video="true" data-headline="Employees face shift back to working from the office" data-description="Eagle Hill Consulting CEO Melissa Jezior discusses the balance between remote, hybrid, and fully in-person work.<br />" data-duration="02:13" data-source-html="<span class=&quot;video-resource__source&quot;> - Source:
                <a href=&quot;https://www.cnn.com/&quot; class=&quot;video-resource__source-url&quot;>CNN</a>
    </span>" data-fave-thumbnails="{&quot;big&quot;: { &quot;uri&quot;: &quot;https://media.cnn.com/api/v1/images/stellar/prod/230807172636-exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business-00002301.png?c=16x9&amp;q=h_540,w_960,c_fill&quot; }, &quot;small&quot;: { &quot;uri&quot;: &quot;https://media.cnn.com/api/v1/images/stellar/prod/230807172636-exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business-00002301.png?c=16x9&amp;q=h_540,w_960,c_fill&quot; }  }" data-vr-video="" data-show-html="<!-- unable to render partial show without a supplied context -->" data-check-event-based-preview="" data-network-id="" data-details="" data-freewheel-lede="true">
            <div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/thumbnail-image-4894e08d36d25c489e49921b3286acc1@published" data-name="exp remote work return to office jezior live 080703PSEG3 cnni business_00002301" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="1080" data-original-width="1920" data-url="https://media.cnn.com/api/v1/images/stellar/prod/230807172636-exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business-00002301.png?c=original" data-unselectable="true" id="player-cms.cnn.com/_components/video-resource/instances/h_8710257b98c3cc87e5d5d5601429b08b-h_d769b1babdb73fdff1c1f78211f20c52-pageTop@published">
       <picture><img src="https://media.cnn.com/api/v1/images/stellar/prod/230807172636-exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business-00002301.png?c=16x9&amp;q=w_850,c_fill" alt="exp remote work return to office jezior live 080703PSEG3 cnni business_00002301.png" onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="1080" width="1920"></picture>
    </div>
            
            <div>
                <p>Employees face shift back to working from the office</p>
                <p><span>
                            02:13
                        </span>
                        <span> - Source:
                <a href="https://www.cnn.com/">CNN</a>
    </span>
                </p>
            </div>
        </div><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                    <p><cite>
      <span data-editable="location">New York</span>
      <span data-editable="source">CNN</span>
        &nbsp;—&nbsp;
    </cite>
</p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_129FACE6-7B25-F500-940E-713B296BFB4C@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      LGBTQ dating app Grindr ended its <a href="https://www.cnn.com/2023/04/09/success/hybrid-wfh-remote-work/index.html" target="_blank">remote work </a>policies and forced employees to relocate. Nearly half of its staff left.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_A17DEE50-2D29-5B60-447A-71568E3933D5@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      In early August, Grindr announced a return-to-office mandate. The policy gave workers two weeks to choose between relocating to their respective team’s newly assigned “hub” city to work in-person twice a week or leave the company with severance, according to the Communications Workers of America (CWA).
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_20176EF6-DB4F-F7DA-4CFE-715690A99240@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Approximately 80 of Grindr’s 178 workers were forced to leave as of August 31, the <a href="https://code-cwa.org/stories/grindr-united-cwa-files-unfair-labor-0" target="_blank">CWA said</a> Wednesday. Many of these workers were hired remotely and were required to relocate to new “hub” cities — New York, Chicago, Los Angeles, San Francisco and Washington D.C.
  </p>

  



  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_1D9105D4-9E93-CCF7-9669-7157A21FFC92@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The CWA also said the return-to-work policy was retaliatory and in response to a union drive at the company. Just two weeks prior to Grindr’s policy change, a majority of employees filed to organize a union. 
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_E3ACDE27-21C5-EE11-1199-7150BDC811D1@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “Rather than recognize the union, the company issued a new return-to-office policy requiring staff to relocate or quit,” the CWA said in a statement. The union has filed an unfair labor practice charge against Grindr with the National Labor Relations Board.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_76847653-4287-43A1-2EFB-7501BD542D32@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      A Grindr spokesperson said the latest claims by the union “have no merit.”
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_01F39A34-B4D9-B996-2910-7503A08BDBD8@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “We are looking forward to returning to the office in a hybrid model in October and further improving productivity and collaboration for our entire team,” the spokesperson said. 
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_10B2FB85-BD2E-47B1-DA82-716BAB26DD0F@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The dispute highlights the tensions between employers and workers over return-to-office policies more than three years after the Covid-19 pandemic forced millions of white-collar employees to work remotely.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_319D5DDD-4225-5637-EDD6-716E23945C20@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      According to the Conference Board’s August <a href="https://www.prnewswire.com/news-releases/survey-73-of-companies-struggle-to-get-workers-back-to-the-office-301890629.html" target="_blank">survey</a> of 185 US HR executives, 73% of organizations reported challenges getting workers to return to the workplace. 
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_90570D57-5F12-1644-7504-74B91D6820FA@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The push for on-site work may be hindering efforts to retain workers. Seventy-one percent of employers that are mandating their on-site work policy reported difficulty retaining workers, according to the survey.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_398BBFFF-12F6-C09A-F93F-716E2749ED06@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Some big-name employers have said they will get tough on enforcing their return-to-office mandates after Labor Day.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_E62D8A34-2520-E936-7095-716E274BC2DE@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Last month, Amazon CEO Andy Jassy told employees they were free to disagree with the company’s policy requiring them to be in the office at least three days a week. But, he added, if they don’t comply, <a href="https://www.cnn.com/2023/08/29/business/amazon-jobs-return-to-office/index.html" target="_blank">their futures at Amazon</a> might not be, um, bright. A few weeks prior, the company had sent emails to some employees letting them know their badge swipes indicated they were not coming in as often as required.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_F3069C21-00DE-4281-27AD-716E274C7915@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Meta, meanwhile, told employees that by September 5 those already assigned to an office must come in three days a week, and managers would track attendance, <a href="https://www.businessinsider.com/meta-rto-policy-updates-stricter-mandate-2023-8" target="_blank">according to a report</a> from Business Insider. Noncompliance could result in disciplinary action, including a lower performance rating or, if unaddressed, dismissal.
  </p>

  <p data-uri="cms.cnn.com/_components/footnote/instances/022a9b576cf7ccb08c6a614be2c26f4f@published" data-editable="text" data-article-gutter="true">
  CNN’s Jeanne Sahadi contributed to this article.
</p>

                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bun v1.0.0 (624 pts)]]></title>
            <link>https://github.com/oven-sh/bun/releases/tag/bun-v1.0.0</link>
            <guid>37434117</guid>
            <pubDate>Fri, 08 Sep 2023 14:41:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/oven-sh/bun/releases/tag/bun-v1.0.0">https://github.com/oven-sh/bun/releases/tag/bun-v1.0.0</a>, See on <a href="https://news.ycombinator.com/item?id=37434117">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-pjax="true" data-test-selector="body-content" data-view-component="true"><p>Today is an exciting day.</p>
<p>To install Bun v1.0:</p>
<div data-snippet-clipboard-copy-content="curl https://bun.sh/install | bash
# or you can use npm
# npm install -g bun"><pre>curl https://bun.sh/install <span>|</span> bash
<span><span>#</span> or you can use npm</span>
<span><span>#</span> npm install -g bun</span></pre></div>
<p>To upgrade to Bun v1.0:</p>

<p><strong><a href="https://bun.sh/blog/bun-v1.0" rel="nofollow">Read Bun v1.0.0's release notes on Bun's blog</a></strong></p>
<h2>What's Changed</h2>
<ul>
<li>Fix assertion failure with sourcemaps in multi-threaded transpiler by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1866764461" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4321" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4321/hovercard" href="https://github.com/oven-sh/bun/pull/4321">#4321</a></li>
<li>Automatically hot reload Bun.serve() by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1867861824" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4344" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4344/hovercard" href="https://github.com/oven-sh/bun/pull/4344">#4344</a></li>
<li>Fix the crash when importing a module that does not exist. by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1867933376" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4348" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4348/hovercard" href="https://github.com/oven-sh/bun/pull/4348">#4348</a></li>
<li>More improvements to debugger support by <a data-hovercard-type="user" data-hovercard-url="/users/Electroid/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Electroid">@Electroid</a> in <a data-error-text="Failed to load title" data-id="1867868912" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4345" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4345/hovercard" href="https://github.com/oven-sh/bun/pull/4345">#4345</a></li>
<li>Set the timezone in spawn in tests by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1867799292" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4337" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4337/hovercard" href="https://github.com/oven-sh/bun/pull/4337">#4337</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/Electroid/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Electroid">@Electroid</a>'s dap changes by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1868545792" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4367" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4367/hovercard" href="https://github.com/oven-sh/bun/pull/4367">#4367</a></li>
<li>Fix some edge cases in the <code>env</code> param of <code>spawn</code>. by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1868423993" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4364" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4364/hovercard" href="https://github.com/oven-sh/bun/pull/4364">#4364</a></li>
<li>just kernel32 things by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1868079933" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4354" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4354/hovercard" href="https://github.com/oven-sh/bun/pull/4354">#4354</a></li>
<li>make pending_response and metdata life cycle more clear and make fetch more reliable by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1867266294" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4331" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4331/hovercard" href="https://github.com/oven-sh/bun/pull/4331">#4331</a></li>
<li>Bring uSockets &amp; uWebSockets forks into Bun's repository by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1869762034" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4372" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4372/hovercard" href="https://github.com/oven-sh/bun/pull/4372">#4372</a></li>
<li>remove uws from .gitmodules by <a data-hovercard-type="user" data-hovercard-url="/users/prabhatexit0/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/prabhatexit0">@prabhatexit0</a> in <a data-error-text="Failed to load title" data-id="1870139917" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4374" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4374/hovercard" href="https://github.com/oven-sh/bun/pull/4374">#4374</a></li>
<li>use <code>options.fd</code> if provided for <code>fs.Read/WriteStream</code> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1870343306" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4378" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4378/hovercard" href="https://github.com/oven-sh/bun/pull/4378">#4378</a></li>
<li>feat(node:dns): implement <code>dns.reverse</code>. by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1867288054" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4332" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4332/hovercard" href="https://github.com/oven-sh/bun/pull/4332">#4332</a></li>
<li>fix <a data-error-text="Failed to load title" data-id="1868157856" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4356" data-hovercard-type="issue" data-hovercard-url="/oven-sh/bun/issues/4356/hovercard" href="https://github.com/oven-sh/bun/issues/4356">#4356</a> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1871176685" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4386" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4386/hovercard" href="https://github.com/oven-sh/bun/pull/4386">#4386</a></li>
<li>Fix close callback and open event for fs streams by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1870863608" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4384" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4384/hovercard" href="https://github.com/oven-sh/bun/pull/4384">#4384</a></li>
<li>add unix socket support for <code>node:http.server</code> by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1871937343" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4390" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4390/hovercard" href="https://github.com/oven-sh/bun/pull/4390">#4390</a></li>
<li>fix(node-fetch): use stream.Readable instead of web streams by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1872419767" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4394" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4394/hovercard" href="https://github.com/oven-sh/bun/pull/4394">#4394</a></li>
<li>Fix assertion failure in spawn-related tests by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1872765282" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4400" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4400/hovercard" href="https://github.com/oven-sh/bun/pull/4400">#4400</a></li>
<li>More support for DAP by <a data-hovercard-type="user" data-hovercard-url="/users/Electroid/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Electroid">@Electroid</a> in <a data-error-text="Failed to load title" data-id="1870714529" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4380" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4380/hovercard" href="https://github.com/oven-sh/bun/pull/4380">#4380</a></li>
<li>reset signal handlers in Bun.spawn  by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1872992873" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4405" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4405/hovercard" href="https://github.com/oven-sh/bun/pull/4405">#4405</a></li>
<li>fix(http/https) disable decompress on http/https client by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1872747697" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4399" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4399/hovercard" href="https://github.com/oven-sh/bun/pull/4399">#4399</a></li>
<li>minor rebuild diffs by <a data-hovercard-type="user" data-hovercard-url="/users/alexlamsl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/alexlamsl">@alexlamsl</a> in <a data-error-text="Failed to load title" data-id="1874167506" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4416" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4416/hovercard" href="https://github.com/oven-sh/bun/pull/4416">#4416</a></li>
<li>exit handlers for resetting tty by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1874494661" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4419" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4419/hovercard" href="https://github.com/oven-sh/bun/pull/4419">#4419</a></li>
<li>[install] fix stale root life-cycle script in lockfile by <a data-hovercard-type="user" data-hovercard-url="/users/alexlamsl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/alexlamsl">@alexlamsl</a> in <a data-error-text="Failed to load title" data-id="1873804873" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4411" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4411/hovercard" href="https://github.com/oven-sh/bun/pull/4411">#4411</a></li>
<li>add life cycle scripts to lockfile metahash by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1874556936" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4420" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4420/hovercard" href="https://github.com/oven-sh/bun/pull/4420">#4420</a></li>
<li>feat(node:fs): add <code>cp</code>/<code>cpSync</code>/<code>promises.cp</code> + async <code>copyFile</code> by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1867808424" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4340" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4340/hovercard" href="https://github.com/oven-sh/bun/pull/4340">#4340</a></li>
<li>Fix(semver): fix matching with pre-release version by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1873885927" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4412" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4412/hovercard" href="https://github.com/oven-sh/bun/pull/4412">#4412</a></li>
<li>get name if not provided in <code>FormData.append</code> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1876297886" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4434" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4434/hovercard" href="https://github.com/oven-sh/bun/pull/4434">#4434</a></li>
<li><code>bun install</code> correctly join dependency URLs by <a data-hovercard-type="user" data-hovercard-url="/users/Parzival-3141/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Parzival-3141">@Parzival-3141</a> in <a data-error-text="Failed to load title" data-id="1874571928" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4421" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4421/hovercard" href="https://github.com/oven-sh/bun/pull/4421">#4421</a></li>
<li>only set initial debugger breakpoint once by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1876691243" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4441" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4441/hovercard" href="https://github.com/oven-sh/bun/pull/4441">#4441</a></li>
<li>fix(runtime): <code>fs.cp</code> edge cases by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1876475429" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4439" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4439/hovercard" href="https://github.com/oven-sh/bun/pull/4439">#4439</a></li>
<li>fix(runtime): fix dns_resolver crash by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1876392249" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4435" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4435/hovercard" href="https://github.com/oven-sh/bun/pull/4435">#4435</a></li>
<li>fix <code>Bun.serve</code> with tls and <code>Bun.file</code> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1878260371" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4450" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4450/hovercard" href="https://github.com/oven-sh/bun/pull/4450">#4450</a></li>
<li>keep <code>export * as</code> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1878359573" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4451" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4451/hovercard" href="https://github.com/oven-sh/bun/pull/4451">#4451</a></li>
<li>Fix typo in docs/api/tcp by <a data-hovercard-type="user" data-hovercard-url="/users/JorgeJimenez15/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/JorgeJimenez15">@JorgeJimenez15</a> in <a data-error-text="Failed to load title" data-id="1877639175" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4445" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4445/hovercard" href="https://github.com/oven-sh/bun/pull/4445">#4445</a></li>
<li>docs: fix http simple example log statement by <a data-hovercard-type="user" data-hovercard-url="/users/karlbohlmark/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/karlbohlmark">@karlbohlmark</a> in <a data-error-text="Failed to load title" data-id="1866713541" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4320" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4320/hovercard" href="https://github.com/oven-sh/bun/pull/4320">#4320</a></li>
<li>fix(runtime): Fix <code>fs.stat().mtime</code> on MacOS by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1876686471" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4440" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4440/hovercard" href="https://github.com/oven-sh/bun/pull/4440">#4440</a></li>
<li>fix(syscall): fix handling syscall errno by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1879111833" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4461" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4461/hovercard" href="https://github.com/oven-sh/bun/pull/4461">#4461</a></li>
<li>fix(HTMLRewriter) buffer response before transform by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1874231888" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4418" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4418/hovercard" href="https://github.com/oven-sh/bun/pull/4418">#4418</a></li>
<li>docs typo: <code>loaders</code> -&gt; <code>loader</code> by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1880491139" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4476" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4476/hovercard" href="https://github.com/oven-sh/bun/pull/4476">#4476</a></li>
<li>fix zlib deflate on fetch by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1880908416" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4483" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4483/hovercard" href="https://github.com/oven-sh/bun/pull/4483">#4483</a></li>
<li>remove <code>chmod</code> usage with <code>--bun</code> flag by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1881020191" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4490" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4490/hovercard" href="https://github.com/oven-sh/bun/pull/4490">#4490</a></li>
<li>fix dup syscall on Windows by <a data-hovercard-type="user" data-hovercard-url="/users/CGQAQ/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/CGQAQ">@CGQAQ</a> in <a data-error-text="Failed to load title" data-id="1881479165" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4496" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4496/hovercard" href="https://github.com/oven-sh/bun/pull/4496">#4496</a></li>
<li>minor rebuild diffs by <a data-hovercard-type="user" data-hovercard-url="/users/alexlamsl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/alexlamsl">@alexlamsl</a> in <a data-error-text="Failed to load title" data-id="1880944679" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4486" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4486/hovercard" href="https://github.com/oven-sh/bun/pull/4486">#4486</a></li>
<li>fix ipv6 localhost fetch by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1881603924" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4498" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4498/hovercard" href="https://github.com/oven-sh/bun/pull/4498">#4498</a></li>
<li>fix checkout/build failure due to <code>src/deps/uws</code> by <a data-hovercard-type="user" data-hovercard-url="/users/alexlamsl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/alexlamsl">@alexlamsl</a> in <a data-error-text="Failed to load title" data-id="1882195698" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4505" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4505/hovercard" href="https://github.com/oven-sh/bun/pull/4505">#4505</a></li>
<li>fix(install): ensure all lockfile structs do not have undefined padding by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1872767125" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4401" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4401/hovercard" href="https://github.com/oven-sh/bun/pull/4401">#4401</a></li>
<li>fix(fetch) fix proxy tunneling by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1882739448" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4510" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4510/hovercard" href="https://github.com/oven-sh/bun/pull/4510">#4510</a></li>
<li>fix(fetch) always use readable stream if it is available by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1882049039" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4503" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4503/hovercard" href="https://github.com/oven-sh/bun/pull/4503">#4503</a></li>
<li>fix(node:net): emit close event on connection error by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1867753431" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4336" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4336/hovercard" href="https://github.com/oven-sh/bun/pull/4336">#4336</a></li>
<li>feat(runtime): Implement <code>fs.watchFile</code> by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1879253940" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4467" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4467/hovercard" href="https://github.com/oven-sh/bun/pull/4467">#4467</a></li>
<li>Align <code>process.nextTick</code> execution order with Node by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1873731484" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4409" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4409/hovercard" href="https://github.com/oven-sh/bun/pull/4409">#4409</a></li>
<li>fix text decode trim by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1881341557" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4495" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4495/hovercard" href="https://github.com/oven-sh/bun/pull/4495">#4495</a></li>
<li>update root certs by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1881887797" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4499" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4499/hovercard" href="https://github.com/oven-sh/bun/pull/4499">#4499</a></li>
<li>Update development.md by <a data-hovercard-type="user" data-hovercard-url="/users/ThatOneBro/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ThatOneBro">@ThatOneBro</a> in <a data-error-text="Failed to load title" data-id="1880872801" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4480" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4480/hovercard" href="https://github.com/oven-sh/bun/pull/4480">#4480</a></li>
<li>allocate task for <code>ThreadSafeFunction</code>  by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1883142644" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4513" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4513/hovercard" href="https://github.com/oven-sh/bun/pull/4513">#4513</a></li>
<li>fix(runtime): fix <code>events.once</code> not using a once listener. by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1884083624" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4520" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4520/hovercard" href="https://github.com/oven-sh/bun/pull/4520">#4520</a></li>
<li>Update node:fs compat docs cp/cpSync/watchFile/unwatchFile by <a data-hovercard-type="user" data-hovercard-url="/users/birkskyum/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/birkskyum">@birkskyum</a> in <a data-error-text="Failed to load title" data-id="1884738020" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4525" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4525/hovercard" href="https://github.com/oven-sh/bun/pull/4525">#4525</a></li>
<li>feat(fetch) rejectUnauthorized and checkServerIdentity by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1883289117" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4514" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4514/hovercard" href="https://github.com/oven-sh/bun/pull/4514">#4514</a></li>
<li>Progress for Next.js  by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1879256121" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4468" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4468/hovercard" href="https://github.com/oven-sh/bun/pull/4468">#4468</a></li>
<li>revert by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1885940498" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4539" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4539/hovercard" href="https://github.com/oven-sh/bun/pull/4539">#4539</a></li>
<li>fix(fetch) closeAndFail instead of close by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1885865893" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4537" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4537/hovercard" href="https://github.com/oven-sh/bun/pull/4537">#4537</a></li>
<li>fix(cli): final touches for 1.0 by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1885930252" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4538" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4538/hovercard" href="https://github.com/oven-sh/bun/pull/4538">#4538</a></li>
<li>Doc updates for v1.0 by <a data-hovercard-type="user" data-hovercard-url="/users/colinhacks/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/colinhacks">@colinhacks</a> in <a data-error-text="Failed to load title" data-id="1880943801" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4485" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4485/hovercard" href="https://github.com/oven-sh/bun/pull/4485">#4485</a></li>
<li>Bump version to Bun 1.0.0 by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1886235919" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4543" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4543/hovercard" href="https://github.com/oven-sh/bun/pull/4543">#4543</a></li>
<li>Fix typo in sveltekit.md by <a data-hovercard-type="user" data-hovercard-url="/users/hiadamk/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/hiadamk">@hiadamk</a> in <a data-error-text="Failed to load title" data-id="1886503690" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4550" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4550/hovercard" href="https://github.com/oven-sh/bun/pull/4550">#4550</a></li>
<li>Fix a couple important bugs by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1886824940" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4560" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4560/hovercard" href="https://github.com/oven-sh/bun/pull/4560">#4560</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a data-hovercard-type="user" data-hovercard-url="/users/prabhatexit0/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/prabhatexit0">@prabhatexit0</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1870139917" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4374" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4374/hovercard" href="https://github.com/oven-sh/bun/pull/4374">#4374</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/JorgeJimenez15/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/JorgeJimenez15">@JorgeJimenez15</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1877639175" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4445" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4445/hovercard" href="https://github.com/oven-sh/bun/pull/4445">#4445</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/karlbohlmark/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/karlbohlmark">@karlbohlmark</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1866713541" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4320" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4320/hovercard" href="https://github.com/oven-sh/bun/pull/4320">#4320</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/birkskyum/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/birkskyum">@birkskyum</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1884738020" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4525" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4525/hovercard" href="https://github.com/oven-sh/bun/pull/4525">#4525</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/hiadamk/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/hiadamk">@hiadamk</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1886503690" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4550" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4550/hovercard" href="https://github.com/oven-sh/bun/pull/4550">#4550</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/oven-sh/bun/compare/bun-v0.8.1...bun-v1.0.0"><tt>bun-v0.8.1...bun-v1.0.0</tt></a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Flexport is rescinding a bunch of signed offer letters (136 pts)]]></title>
            <link>https://twitter.com/typesfast/status/1700092765798048093</link>
            <guid>37433681</guid>
            <pubDate>Fri, 08 Sep 2023 14:07:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/typesfast/status/1700092765798048093">https://twitter.com/typesfast/status/1700092765798048093</a>, See on <a href="https://news.ycombinator.com/item?id=37433681">Hacker News</a></p>
Couldn't get https://twitter.com/typesfast/status/1700092765798048093: Error [ERR_FR_TOO_MANY_REDIRECTS]: Maximum number of redirects exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Emoji Generator with AI (267 pts)]]></title>
            <link>https://emoji.fly.dev</link>
            <guid>37433523</guid>
            <pubDate>Fri, 08 Sep 2023 13:54:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://emoji.fly.dev">https://emoji.fly.dev</a>, See on <a href="https://news.ycombinator.com/item?id=37433523">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <header>
  <p>
    <h2>
      Recents (view at your own risk...)
    </h2>
    
  </p>
  
</header>

  <ul id="recent-predictions" phx-update="stream" role="list">
    <li id="recent_predictions-24147">
      
      <p>
        :github-octocat:
      </p>
      
    </li><li id="recent_predictions-24146">
      
      <p>
        :github:
      </p>
      
    </li><li id="recent_predictions-24149">
      
      <p>
        :kitler:
      </p>
      
    </li><li id="recent_predictions-24144">
      
      <p>
        :heart-emoji-wearing-a-cape:
      </p>
      
    </li><li id="recent_predictions-24153">
      
      <p>
        :andrew-schein:
      </p>
      
    </li><li id="recent_predictions-24152">
      
      <p>
        :person-named-jp:
      </p>
      
    </li><li id="recent_predictions-24148">
      
      <p>
        :girl-scientist:
      </p>
      
    </li><li id="recent_predictions-24150">
      
      <p>
        :iphone-14-pro:
      </p>
      
    </li><li id="recent_predictions-24142">
      
      <p>
        :suit-and-tied-puppy,-only-one-head:
      </p>
      
    </li><li id="recent_predictions-24143">
      
      <p>
        :ghostbuster-proton-pack:
      </p>
      
    </li><li id="recent_predictions-24141">
      
      <p>
        :mayonaise-person:
      </p>
      
    </li><li id="recent_predictions-24140">
      
      <p>
        :man-that-hung-himself.-its-a-suicide!:
      </p>
      
    </li><li id="recent_predictions-24139">
      
      <p>
        :farting-cat:
      </p>
      
    </li><li id="recent_predictions-24138">
      
      <p>
        :devilish-blonde-girl:
      </p>
      
    </li><li id="recent_predictions-24137">
      
      <p>
        :butthead:
      </p>
      
    </li><li id="recent_predictions-24136">
      
      <p>
        :mild-panic:
      </p>
      
    </li><li id="recent_predictions-24135">
      
      <p>
        :wtf:
      </p>
      
    </li><li id="recent_predictions-24131">
      
      <p>
        :keanu-reeves:
      </p>
      
    </li><li id="recent_predictions-24130">
      
      <p>
        :portuguese-music:
      </p>
      
    </li><li id="recent_predictions-24134">
      
      <p>
        :anthony:
      </p>
      
    </li><li id="recent_predictions-24132">
      
      <p>
        :rick-astley-meme:
      </p>
      
    </li><li id="recent_predictions-24128">
      
      <p>
        :concerned-frog:
      </p>
      
    </li><li id="recent_predictions-24129">
      
      <p>
        :ned-flanders:
      </p>
      
    </li><li id="recent_predictions-24126">
      
      <p>
        :havanese-dog-with-grey-with-black-ear-tips-in-emoji-style-with-a-smile:
      </p>
      
    </li><li id="recent_predictions-24123">
      
      <p>
        :unicron:
      </p>
      
    </li><li id="recent_predictions-24124">
      
      <p>
        :potato-head:
      </p>
      
    </li><li id="recent_predictions-24125">
      
      <p>
        :nestor-kirchner:
      </p>
      
    </li><li id="recent_predictions-24122">
      
      <p>
        :female-chinese-mystic:
      </p>
      
    </li><li id="recent_predictions-24121">
      
      <p>
        :italian-greyhound-in-sunglasses:
      </p>
      
    </li><li id="recent_predictions-24115">
      
      <p>
        :adderall-mountain:
      </p>
      
    </li><li id="recent_predictions-24117">
      
      <p>
        :guy-in-a-blue-shirt-looking-over-shoulder-at-woman-in-a-red-dress:
      </p>
      
    </li><li id="recent_predictions-24116">
      
      <p>
        :criminal:
      </p>
      
    </li><li id="recent_predictions-24113">
      
      <p>
        :five-people-shaking-hands:
      </p>
      
    </li><li id="recent_predictions-24112">
      
      <p>
        :robot:
      </p>
      
    </li><li id="recent_predictions-24111">
      
      <p>
        :andreas:
      </p>
      
    </li><li id="recent_predictions-24109">
      
      <p>
        :tok-emoji-of-balenciaga-le-cagole:
      </p>
      
    </li><li id="recent_predictions-24108">
      
      <p>
        :go-fcuk-yourself:
      </p>
      
    </li><li id="recent_predictions-24110">
      
      <p>
        :hollowpoiint:
      </p>
      
    </li><li id="recent_predictions-24107">
      
      <p>
        :hundred-cats:
      </p>
      
    </li><li id="recent_predictions-24106">
      
      <p>
        :cariñosa:
      </p>
      
    </li>
  </ul>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple vs. Meta: The Illusion of Privacy (327 pts)]]></title>
            <link>https://growth.design/case-studies/apple-privacy-policy</link>
            <guid>37433495</guid>
            <pubDate>Fri, 08 Sep 2023 13:52:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://growth.design/case-studies/apple-privacy-policy">https://growth.design/case-studies/apple-privacy-policy</a>, See on <a href="https://news.ycombinator.com/item?id=37433495">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__next"><p><img alt="Case Study" fetchpriority="high" decoding="async" data-nimg="fill" sizes="100vw" srcset="https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=640&amp;q=75 640w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=750&amp;q=75 750w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=828&amp;q=75 828w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=1080&amp;q=75 1080w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=1200&amp;q=75 1200w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=1920&amp;q=75 1920w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=2048&amp;q=75 2048w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=3840&amp;q=75 3840w" src="https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=3840&amp;q=75"></p><div><p>Loading<span>…</span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Rivet – open-source AI Agent dev env with real-world applications (129 pts)]]></title>
            <link>https://rivet.ironcladapp.com/</link>
            <guid>37433218</guid>
            <pubDate>Fri, 08 Sep 2023 13:29:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rivet.ironcladapp.com/">https://rivet.ironcladapp.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37433218">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__docusaurus">
<main><div id="hero"><h2>The Open-Source Visual AI Programming Environment</h2><p><a href="https://github.com/Ironclad/rivet/releases/latest" target="_blank">Download</a><a href="https://github.com/Ironclad/rivet/releases/latest">Latest Release</a></p><div><p>Built and used by</p><p><a href="https://www.ironcladapp.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/ironclad-logo-white.png" height="40px" width="209px" alt="Link to Ironclad"></a></p></div><p><img height="300px" src="https://rivet.ironcladapp.com/img/graph.png" alt="Rivet Graph"></p><p>∨</p></div><div id="what-is-rivet"><h2>What is Rivet?</h2><div><p>Rivet is a visual programming environment for building AI agents with LLMs. Iterate on your prompt graphs in Rivet, then run them directly in your application. With Rivet, teams can effectively design, debug, and collaborate on complex LLM prompt graphs, and deploy them in their own environment.</p><p>At Ironclad, we struggled to build AI agents programmatically. Rivet's visual environment, easy debugger, and remote executor unlocked our team's ability to collaborate on increasingly complex and powerful LLM prompt graphs.</p><p><img src="https://rivet.ironcladapp.com/img/ironclad-logo.png" height="16px"> is the leading digital contracting platform.<!-- --> <a href="https://ironcladapp.com/product/ai-based-contract-management/" target="_blank">Ironclad AI</a> <!-- -->helps legal teams with everything from reviewing contracts faster to answering questions about their obligations.<!-- --> <!-- -->Learn more at <a href="https://www.ironcladapp.com/" target="_blank">ironcladapp.com</a>.</p><p>Rivet is built and used by <img src="https://rivet.ironcladapp.com/img/ironclad-logo.png" height="16px"> Research.</p></div></div><div id="features"><h2>Why Rivet?</h2><div><div><h3>Visualize and Build</h3><p>Visualize and build complex chains to create applications for production — not just prototyping.</p></div><div><h3>Debug Remotely</h3><p>See what's under the hood and observe the execution of prompt chains in your application, in real-time.</p></div><div><h3>Collaborate</h3><p>Rivet graphs are just YAML files, so you can version them in your team's repository, and review them using your favorite code review tools.</p></div></div></div><div id="demo-video"><h2>See it in Action</h2><p><iframe width="560" height="315" src="https://www.youtube.com/embed/HhgM9MiShwA?si=ULy6PThLVtV7D-Ab&amp;rel=0" title="Rivet Demo" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p></div><div id="use-cases"><h2>What the Community is Saying</h2><div><div><p>Rivet's visual programming environment is a game-changer. The visual nature of the tool, paired with how collaborative it is, allows us to create complex chains for AI agents in drastically less time than it would take in other environments. It's the best tool out there.</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-todd-berman.jpeg" alt="Todd Berman"></p><div><p>Todd Berman, CTO</p><p><a href="https://www.attentive.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-attentive.svg" alt="Attentive"></a></p></div></div></div><div><p>Rivet really addressed some limitations that we were hitting up against... and some we didn't know we had. The visualization makes a big difference when working through agentic logic and really makes it easy to see what the AI is doing. But the ability to debug and collaborate across the team made a huge difference as well - we've used it to launch our virtual mortgage servicing agent and are excited to see how the tool continues to evolve.</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-teddy-coleman.jpeg" alt="Teddy Coleman"></p><div><p>Teddy Coleman, CTO</p><p><a href="https://www.willowservicing.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-willow.webp" alt="Willow Servicing"></a></p></div></div></div><div><p>In order to build great product experiences we have to be able to iterate quickly. Leveraging tools like Rivet allows us to more accurately understand the tradeoffs between things like speed and quality as we build AI-powered experiences in Bento.</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-emily-wang.jpeg" alt="Emily Wang"></p><div><p>Emily Wang, CEO</p><p><a href="https://www.trybento.co/products/bentoai" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-bento.svg" alt="Bento"></a></p></div></div></div><div><p>Rivet is an amazing tool for rapidly prototyping and visually understanding complex AI workflows. It's been wonderful collaborating with Ironclad to integrate AssemblyAI's audio transcription and understanding models into the Rivet ecosystem. We're excited to see what developers create equipped with such a powerful and capable toolkit!</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-domenic-donato.jpeg" alt="Domenic Donato"></p><div><p>Domenic Donato, VP of Technology</p><p><a href="https://www.assemblyai.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-assemblyai.svg" alt="AssemblyAI"></a></p></div></div></div><div><p>Rivet is a super slick and compelling tool for prompt construction and LLM composition, particularly when you're trying to combine AI with many existing tools and APIs. I can see this becoming a popular tool for those working on robust and reliable AI applications.</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-beyang-liu.jpeg" alt="Beyang Liu"></p><div><p>Beyang Liu, CTO</p><p><a href="https://www.sourcegraph.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-sourcegraph.svg" alt="Sourcegraph"></a></p></div></div></div></div></div><div id="ironclad-contract-ai"><h2><img src="https://rivet.ironcladapp.com/img/ironclad-logo-white.png" height="24px"> Contract AI</h2><p>Ironclad Contract AI (CAI) is a virtual contract assistant, powered by AI agents, and developed with Rivet. CAI is capable of answering diverse questions about every stage of the contract lifecycle, directly using Ironclad's existing capabilities, like contract search, workflow process, and data visualization.</p><p>You can<!-- --> <a href="https://ironcladapp.com/product/ironclad-contract-ai/" target="_blank">learn more about CAI here</a>.</p></div><div id="get-started"><h2>Get Started</h2><p>Start building AI agents with Rivet in just a few simple steps!</p><ul><li>Follow the <a href="https://rivet.ironcladapp.com/docs/getting-started/installation">Getting Started</a> guide, to learn how to build AI agent graphs in Rivet.</li><li><a href="https://rivet.ironcladapp.com/docs/api-reference/getting-started-integration">Integrate Rivet</a> into your Node or TypeScript application.</li><li>Experiment with the<!-- --> <a href="https://github.com/Ironclad/rivet-example" target="_blank">Rivet example application</a>, to get a sense for what developing and debugging a chat application looks like in Rivet.</li></ul></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Aardvark'd: The Fog Creek Documentary, 18 Years Later (300 pts)]]></title>
            <link>https://mtlynch.io/aardvarkd/</link>
            <guid>37433186</guid>
            <pubDate>Fri, 08 Sep 2023 13:26:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mtlynch.io/aardvarkd/">https://mtlynch.io/aardvarkd/</a>, See on <a href="https://news.ycombinator.com/item?id=37433186">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>In 2005, Joel Spolsky’s software company, Fog Creek, filmed a documentary about their summer internship program. The film is called <em>Aardvark’d: 12 Weeks with Geeks</em>, and it follows four college interns as they design, implement, and launch a completely new software product.</p><p>That’s not the interesting part.</p><p>Looking back on this documentary 18 years later, it’s striking how many interviews it captured with people who would go on to greater fame and success:</p><ul><li>Paul Graham and Jessica Livingston, months after they co-founded Y Combinator</li><li>Aaron Swartz, Steve Huffman, and Alexis Ohanian, months after they launched reddit</li><li>Joel Spolsky and Michael Pryor before their mega-hits like StackOverflow and Trello</li></ul><p><em>Aardvark’d</em> sold about 5,000 copies on DVD, mostly to fans of Joel’s blog, but it quickly faded from popular consciousness.</p><p>As a longtime Joel Spolsky fanboy, I’ve always been curious to watch <em>Aardvark’d</em>. I was delighted that the film’s producer recently published it <a href="https://www.youtube.com/watch?v=YbrkZ07LKbk">for free on YouTube</a> at 1080p resolution.</p><p>At the time of this writing, <em>Aardvark’d</em> has only 41 views on YouTube, which is surprisingly low given the rarity of its interviews.</p><figure><a href="https://www.youtube.com/watch?v=YbrkZ07LKbk"><img sizes="(min-width: 768px) 650px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/3351b475a9f312a36ac2aa9184d85f690481fadf/1e849/aardvarkd/41-views_hu291d5d21dc25e43a21a5e9de2c26c26f_124522_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/68ea5fe8f1b7a5742eac80a7cd7dddfc4a8cd722/d037f/aardvarkd/41-views_hu291d5d21dc25e43a21a5e9de2c26c26f_124522_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/42983a127c2cf343d0f30024332e4f68ae06a069/54725/aardvarkd/41-views_hu291d5d21dc25e43a21a5e9de2c26c26f_124522_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/dfc94971510bb4064426a954e16be48a19c798e1/8e7e9/aardvarkd/41-views_hu291d5d21dc25e43a21a5e9de2c26c26f_124522_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/9bb00ef1ad477c68c239548382621f47827c3cfa/2b3ff/aardvarkd/41-views.webp 1240w" src="https://d33wubrfki0l68.cloudfront.net/9bb00ef1ad477c68c239548382621f47827c3cfa/2b3ff/aardvarkd/41-views.webp" alt="" loading="lazy"></a><figcaption><p><em>Aardvark’d</em> currently has only 41 views <a href="https://www.youtube.com/watch?v=YbrkZ07LKbk">on YouTube</a>.</p></figcaption></figure><h2 id="what-was-going-on-in-2005">What was going on in 2005?<a href="#what-was-going-on-in-2005" arialabel="Anchor"> 🔗︎</a></h2><p>To understand what makes <em>Aardvark’d</em> a fun watch, you need to understand what was going on with indie software in 2005.</p><h3 id="fog-creek-software">Fog Creek Software<a href="#fog-creek-software" arialabel="Anchor"> 🔗︎</a></h3><p>At the time of filming, <a href="https://en.wikipedia.org/wiki/Joel_Spolsky">Joel Spolsky</a> was 40 years old. He had co-founded Fog Creek in 2000 with Michael Pryor. Aside from the founders, Fog Creek had six employees. They sold two products: FogBugz, a bug-tracking application, and CityDesk, a web publishing tool. The company was profitable enough to get by without external investors, but they weren’t experiencing any kind of exponential hypergrowth.</p><figure><a href="https://mtlynch.io/aardvarkd/joel.webp"><img sizes="(min-width: 768px) 400px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/c1e35fc0433b83b20a1d1205b0ded9ff288092bc/c1e52/aardvarkd/joel_hub441d78b9fa5f134ac8668827fae2328_21732_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/651e0f4daa6c3525065becc66b92870a1337cdb9/755e0/aardvarkd/joel_hub441d78b9fa5f134ac8668827fae2328_21732_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/ba7adc2e5aa7a353257daf5d0d5a7b70c4d892af/89586/aardvarkd/joel.webp 706w" src="https://d33wubrfki0l68.cloudfront.net/ba7adc2e5aa7a353257daf5d0d5a7b70c4d892af/89586/aardvarkd/joel.webp" alt="" loading="lazy"></a><figcaption><p>Joel Spolsky, Fog Creek co-founder, in 2005</p></figcaption></figure><h3 id="y-combinator">Y Combinator<a href="#y-combinator" arialabel="Anchor"> 🔗︎</a></h3><p><a href="https://en.wikipedia.org/wiki/Paul_Graham_(programmer)">Paul Graham</a> and <a href="https://en.wikipedia.org/wiki/Jessica_Livingston">Jessica Livingston</a> had just co-founded <a href="https://en.wikipedia.org/wiki/Y_Combinator">Y Combinator</a>, which would become one of the most successful startup accelerators in the world, launching companies like Airbnb, Dropbox, and Stripe.</p><figure><a href="https://mtlynch.io/aardvarkd/paul-jessica.webp"><img sizes="(min-width: 768px) 700px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/53e93c463b952dad20690065db15139ee92137b6/fc5bf/aardvarkd/paul-jessica_hu9941cc2db587034bf8e896c230747b22_50884_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/96ff8919faaab7d0ae27a68b4740f3e2f9e7b071/3cf69/aardvarkd/paul-jessica_hu9941cc2db587034bf8e896c230747b22_50884_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/06b52690ffeaa7c495fb1929e9f3e57ff20dee73/9bce0/aardvarkd/paul-jessica_hu9941cc2db587034bf8e896c230747b22_50884_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/4441c047f25cc3b137a6acb171a7f3626733d231/4a499/aardvarkd/paul-jessica_hu9941cc2db587034bf8e896c230747b22_50884_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/08aadd025ec5b4c144c3b66837b6895279fe973e/e5212/aardvarkd/paul-jessica.webp 1428w" src="https://d33wubrfki0l68.cloudfront.net/08aadd025ec5b4c144c3b66837b6895279fe973e/e5212/aardvarkd/paul-jessica.webp" alt="" loading="lazy"></a><figcaption><p>Y Combinator co-cofounders Paul Graham and Jessica Livingston in 2005</p></figcaption></figure><p>Graham was 41 years old, and Livingston was 34. Seven years prior, Graham had sold his startup <a href="https://en.wikipedia.org/wiki/Viaweb">Viaweb</a> to Yahoo for $50M. He then became popular online for <a href="http://paulgraham.com/articles.html">his essays about startups and software</a>. Livingston was not active in the startup community at the time, having come from a career in marketing.</p><p>Graham and Livingston <a href="http://paulgraham.com/worked.html">had been dating for two years</a> but weren’t married yet. The documentary interviews them in the middle of Y Combinator’s first batch of startups, which included a then-unknown social media platform called <a href="https://en.wikipedia.org/wiki/Reddit">reddit</a>.</p><h3 id="reddit">reddit<a href="#reddit" arialabel="Anchor"> 🔗︎</a></h3><p>reddit had launched a few months before the documentary began filming, and it wasn’t yet on anyone’s radar.</p><p>At the time, reddit only allowed users to post links — there was no commenting. <a href="https://en.wikipedia.org/wiki/Fark">Fark</a>, <a href="https://en.wikipedia.org/wiki/Digg">digg</a>, and <a href="https://en.wikipedia.org/wiki/Slashdot">slashdot</a> were still the dominant platforms for social link sharing.</p><figure><a href="https://mtlynch.io/aardvarkd/reddit-2005.webp"><img sizes="(min-width: 768px) 650px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/84fe204e4f51f1e0c12e7637187960cf59b1484a/760b7/aardvarkd/reddit-2005_hu2c0c0e6d79446fe8fcd3dc887d88840e_19328_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/e91f66a691bfd8d5f2db4e41652fb02698ab7fbe/4a906/aardvarkd/reddit-2005_hu2c0c0e6d79446fe8fcd3dc887d88840e_19328_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/daf756f9e003d4765c38a2a40def188aa1e92058/0cdfa/aardvarkd/reddit-2005_hu2c0c0e6d79446fe8fcd3dc887d88840e_19328_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/8ac18e591887588d6a648951ec2abde2d650c822/1b0bc/aardvarkd/reddit-2005.webp 1073w" src="https://d33wubrfki0l68.cloudfront.net/8ac18e591887588d6a648951ec2abde2d650c822/1b0bc/aardvarkd/reddit-2005.webp" alt="" loading="lazy"></a><figcaption><p>The reddit homepage <a href="https://web.archive.org/web/20050804002153/http://www.reddit.com/">in 2005</a></p></figcaption></figure><p>Early in 2005, college roommates Steve Huffman and Alexis Ohanian drove to Boston to attend one of Paul Graham’s lectures about startups. After the talk, Graham had dinner with Huffman, Ohanian, and a few other attendees. The conversations inspired Graham to create Y Combinator, and reddit was in the first batch of investments.</p><figure><a href="https://mtlynch.io/aardvarkd/ohanian-swartz-huffman.webp"><img sizes="(min-width: 768px) 700px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/ef1b3cd50fac19f534b0038169d1d2ec5ba5e7fe/2f30e/aardvarkd/ohanian-swartz-huffman_hu7eee7e75df06811ff8abc8852d92ace0_57714_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/96e16e86f02abfb516ff72ff3455e14db5bfb3f6/0f843/aardvarkd/ohanian-swartz-huffman_hu7eee7e75df06811ff8abc8852d92ace0_57714_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/09cc207b6404c5b9bca0643fe8cec0dc59d2aaf3/e3506/aardvarkd/ohanian-swartz-huffman_hu7eee7e75df06811ff8abc8852d92ace0_57714_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/be78946da5849ec52fa9a97f0777609b62c86d13/37cff/aardvarkd/ohanian-swartz-huffman_hu7eee7e75df06811ff8abc8852d92ace0_57714_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/631d76c62e1604b848d638b68ac63c02906c8168/ed95a/aardvarkd/ohanian-swartz-huffman.webp 1857w" src="https://d33wubrfki0l68.cloudfront.net/631d76c62e1604b848d638b68ac63c02906c8168/ed95a/aardvarkd/ohanian-swartz-huffman.webp" alt="" loading="lazy"></a><figcaption><p>reddit co-founders (right to left) Alexis Ohanian, Aaron Swartz, and Steve Huffman in 2005</p></figcaption></figure><p>Aaron Swartz was 19 at the time of filming. He already impacted the early web as one of the authors of the <a href="https://www.rssboard.org/rss-validator/docs/rss1.html">RSS specification</a> and a founding contributor to <a href="https://creativecommons.org/">Creative Commons</a>.</p><p>An undergrad at Stanford in 2005, Swartz was also accepted into Y Combinator’s first batch. When his company stalled, Graham suggested he <a href="https://qz.com/594715/when-aaron-swartz-met-paul-graham-his-life-and-the-entire-internet-changed-forever">merge with reddit</a>.</p><h2 id="back-when-they-were-getting-started-they-were-terrified">“Back when they were getting started, they were terrified”<a href="#back-when-they-were-getting-started-they-were-terrified" arialabel="Anchor"> 🔗︎</a></h2><p>As a documentary, <em>Aardvark’d</em> is not very good. The filmmaker didn’t have much experience, so the shots are always uncomfortably close to people’s faces, often with harsh lighting and mediocre sound quality.</p><figure><a href="https://mtlynch.io/aardvarkd/joel-lighting.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/896e50a701dee377e4a1e98717140ffe4241d970/2b84d/aardvarkd/joel-lighting_hufaaebc049afa6719b3d5b14315b1eabb_31040_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/75b9eff95ee0fdb2dddcfdf2ae35314da9676447/c1c43/aardvarkd/joel-lighting_hufaaebc049afa6719b3d5b14315b1eabb_31040_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/e3e84d46d30e8bbdf6b8823b897e7b539a4286fd/6a0d0/aardvarkd/joel-lighting_hufaaebc049afa6719b3d5b14315b1eabb_31040_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/f6fdd8fb038c95dc7badb37f02b83e2a0109c2d1/6061f/aardvarkd/joel-lighting_hufaaebc049afa6719b3d5b14315b1eabb_31040_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/7f054f49799f4b9b810498efb5d6758f4ca787da/9c196/aardvarkd/joel-lighting.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/7f054f49799f4b9b810498efb5d6758f4ca787da/9c196/aardvarkd/joel-lighting.webp" alt="" loading="lazy"></a><figcaption><p>Joel Spolsky isn’t this luminescent in real life.</p></figcaption></figure><p>The film flits from topic to topic without ever landing on a cohesive story. Is it about the interns’ project? Or is it about the interns themselves? Or is it a story about Fog Creek as a company?</p><p>Still, I found it compelling.</p><p>Towards the end of the movie, Jessica Livingston captures so crisply what makes the film engaging:</p><blockquote><p>A lot of these tech startup founders who are extremely successful, back when they were getting started, they were terrified.</p><p>They were very unsure of what they were doing. They questioned things, and I’m sure doubted themselves…</p><p>And so to see these people as vulnerable people at one point in time is interesting to me.</p></blockquote><p>This vulnerability is what makes the film’s interviews with Steve Huffman so fascinating.</p><p>Huffman is currently the target of widespread ire for <a href="https://techcrunch.com/2023/06/16/reddit-ceo-lashes-out-on-protests-moderators-and-third-party-apps/">cutting third-party clients out of the platform they helped build</a>. But in 2005, Huffman was just a lovably doofy kid. In his interview, he admits that he had such intense nightmares about reddit having an outage that he slept with his laptop in bed with him.</p><figure><div><p><a href="https://mtlynch.io/aardvarkd/steve-huffman-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/4cad2a9227adfb7d9f2e34253746eb67c9f3bbbb/d69e8/aardvarkd/steve-huffman-2005_hu1fd649e5a44e0fa4d467a9b63c5aa0cb_20354_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/12d06290846d781e4a2dbf223ffb99a978adfb9f/bab3f/aardvarkd/steve-huffman-2005_hu1fd649e5a44e0fa4d467a9b63c5aa0cb_20354_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/32c2b686b8c27bf8d7a7293225d9d29e3348b563/ee0cc/aardvarkd/steve-huffman-2005.webp 694w" src="https://d33wubrfki0l68.cloudfront.net/32c2b686b8c27bf8d7a7293225d9d29e3348b563/ee0cc/aardvarkd/steve-huffman-2005.webp" alt="" loading="lazy"></a></p><p><a href="https://mtlynch.io/aardvarkd/steve-huffman-2017.webp"><img sizes="(min-width: 768px) 487px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/5b65927e21e494dec47255b5bfa3350cc8502cdd/6eb8c/aardvarkd/steve-huffman-2017_huf0c9188eaacdc73221ff90330d14dcf5_77676_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/ad127a1fcd6c86d42672fdd9c1b04f47c97f66dd/57d45/aardvarkd/steve-huffman-2017_huf0c9188eaacdc73221ff90330d14dcf5_77676_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/c70a842cd04673fa13e9f9820a30664e5be5e68a/7c883/aardvarkd/steve-huffman-2017_huf0c9188eaacdc73221ff90330d14dcf5_77676_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/a025f9c655fbb463b157d258eb030942134abfd8/786ae/aardvarkd/steve-huffman-2017_huf0c9188eaacdc73221ff90330d14dcf5_77676_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/9d89070140875b4e056376d47f65881124fd2df0/0e862/aardvarkd/steve-huffman-2017.webp 1222w" src="https://d33wubrfki0l68.cloudfront.net/9d89070140875b4e056376d47f65881124fd2df0/0e862/aardvarkd/steve-huffman-2017.webp" alt="" loading="lazy"></a></p></div><figcaption><p>Steve Huffman in 2005 (left) and in 2017 (right) (photo <a href="https://www.flickr.com/photos/websummit/26487734439/in/photostream/">by Cody Glenn/Web Summit</a>, used under <a href="https://creativecommons.org/licenses/by/2.0/">CC-BY-2.0</a>)</p></figcaption></figure><h2 id="the-infuriating-launch-day-scene">The infuriating launch day scene<a href="#the-infuriating-launch-day-scene" arialabel="Anchor"> 🔗︎</a></h2><p>There’s one <em>Aardvark’d</em> scene that drives me crazy.</p><p>The main storyline of the documentary is the interns’ summer project. Originally codenamed Aardvark, the interns’ app would eventually take the name Copilot.</p><p>No, not the AI coding assistant.</p><p>Fog Creek Copilot was a tool that let people provide remote computer assistance to friends, family, and co-workers.</p><figure><a href="https://mtlynch.io/aardvarkd/fog-creek-copilot.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/23409a927744fe6b160bc82c5d95d5cb2ac38662/59dbd/aardvarkd/fog-creek-copilot_hu88a270a4988b0caa4249d12d4e581510_142212_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/6ceedfafcca0c1c5150f8b2b27e561d45b0a164e/5cce6/aardvarkd/fog-creek-copilot_hu88a270a4988b0caa4249d12d4e581510_142212_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/cbd46aef627a843cd4df5a3af6b16a2b0ddf9693/b0f81/aardvarkd/fog-creek-copilot_hu88a270a4988b0caa4249d12d4e581510_142212_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/8eaf26fdb814ac1f471ed615bd1923f060f5065b/0e4c7/aardvarkd/fog-creek-copilot.webp 1180w" src="https://d33wubrfki0l68.cloudfront.net/8eaf26fdb814ac1f471ed615bd1923f060f5065b/0e4c7/aardvarkd/fog-creek-copilot.webp" alt="" loading="lazy"></a><figcaption><p><a href="https://web.archive.org/web/20080829161613/https://www.copilot.com/">Fog Creek Copilot</a> let people provide remote computer assistance to friends, family, and co-workers.</p></figcaption></figure><p>So, it’s the end of the internship, and Fog Creek is finally launching Copilot. This is the make-or-break moment for all the work we’ve watched the interns do throughout the movie.</p><p>The interns and employees compete to predict when their first sale will come through. Some guessed it would happen within a minute of launch, while others thought it might take up to an hour.</p><figure><a href="https://mtlynch.io/aardvarkd/sale-predictions.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/77a3dee26ccb95585632070b20484ae577cb66e7/eb923/aardvarkd/sale-predictions_hubf8cb9bbc5b39764251a459b65156fd3_16094_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/84b68954257292365d229b25d22dc111b68489ea/9a839/aardvarkd/sale-predictions_hubf8cb9bbc5b39764251a459b65156fd3_16094_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/9cf01845e2d58d5119b0df6fc3fd6ca87dcbd592/d61d0/aardvarkd/sale-predictions_hubf8cb9bbc5b39764251a459b65156fd3_16094_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/5b94919e46b133adac0407050da9ae55c050d344/1d99b/aardvarkd/sale-predictions_hubf8cb9bbc5b39764251a459b65156fd3_16094_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/351762b2a6b0c7f12405cf28ccf5f9a4d3adf7a3/3506a/aardvarkd/sale-predictions.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/351762b2a6b0c7f12405cf28ccf5f9a4d3adf7a3/3506a/aardvarkd/sale-predictions.webp" alt="" loading="lazy"></a><figcaption><p>Fog Creek employees and interns make optimistic predictions about the first sale of Copilot</p></figcaption></figure><p>But the sale doesn’t come. As each minute rolls by, the interns glumly cross out predictions that turned out to be too optimistic. You’re watching the team grow increasingly worried that their product might be a complete flop.</p><figure><div><p><a href="https://mtlynch.io/aardvarkd/cross-off.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/b2f9f3afaa07bf872ea0fccdc27a71456c505357/ef667/aardvarkd/cross-off_hubecf1245dbb195e4ad39995e4053da00_36416_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/3a4e5891131acd19e4f3c80ad6edf6ceda823406/dd358/aardvarkd/cross-off_hubecf1245dbb195e4ad39995e4053da00_36416_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/37179c3de783315eb6282f4dd4393dc78c37b34a/05eb3/aardvarkd/cross-off_hubecf1245dbb195e4ad39995e4053da00_36416_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/a67b7754b5cf5f1bab12ac7e79cb553fd10bb217/d8f23/aardvarkd/cross-off_hubecf1245dbb195e4ad39995e4053da00_36416_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/0f46bce58df47e76846c1d85fa573e89041e1d40/bba52/aardvarkd/cross-off.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/0f46bce58df47e76846c1d85fa573e89041e1d40/bba52/aardvarkd/cross-off.webp" alt="" loading="lazy"></a></p><p><a href="https://mtlynch.io/aardvarkd/waiting.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/f977371713dac6621120b1b44773ce7baf477f73/b2bee/aardvarkd/waiting_hu6f790f07573b3d3b92f28bf76acc8ffa_47414_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/bd932c2733ad190f1d1f5a656e43adb9c82c0220/1ce15/aardvarkd/waiting_hu6f790f07573b3d3b92f28bf76acc8ffa_47414_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/a6026b06b1dbce26bb33a8961e8d2196b473746d/f21cd/aardvarkd/waiting_hu6f790f07573b3d3b92f28bf76acc8ffa_47414_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/959e90216e6fad13bb2f5e05de92d1ceeb3c78ea/2aa24/aardvarkd/waiting_hu6f790f07573b3d3b92f28bf76acc8ffa_47414_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/f15b11590d22654952bc76aa4943dede96e80137/c1d47/aardvarkd/waiting.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/f15b11590d22654952bc76aa4943dede96e80137/c1d47/aardvarkd/waiting.webp" alt="" loading="lazy"></a></p></div><figcaption><p>Fog Creek interns anxiously awaiting their first customer</p></figcaption></figure><p>As a founder, I found this moment extremely relatable. There have been so many times where I put weeks or months of work into something that I was sure people would love. Then, I launched it only to discover that I was completely wrong and nobody was interested.</p><p>But the thing about failed software launches is that the failure isn’t a moment — it’s the minutes then hours after launch as hope drains away. Even if you don’t get the results you want immediately, there’s a desperate possibility that it could land on the front page of Hacker News or fall into the lap of someone with a huge audience. But every minute that ticks by, you know your chances of success are creeping ever closer to zero.</p><p>The documentary does a great job of capturing that anxiously ambiguous time for the Fog Creek interns. And then it just… forgets what it was doing.</p><p>There’s no resolution whatsoever! We cut to the next scene, and Joel is popping champagne. It’s not even clear if there’s been a sale or if they’re just celebrating the launch. You never see anyone sighing in relief or admitting defeat.</p><figure><a href="https://mtlynch.io/aardvarkd/joel-champagne.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/a00174b50e67b146cc385ef6deb14b5df2affe52/5fd2b/aardvarkd/joel-champagne_hu54d08428145867e9961f0d05af5f9d15_54712_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/7f8b0eb1d3cfc7bd586431c8c2aee34d78031965/a7ab3/aardvarkd/joel-champagne_hu54d08428145867e9961f0d05af5f9d15_54712_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/e0c03db16a3d922f80470f6b0c9203d7485b8bd0/f5001/aardvarkd/joel-champagne_hu54d08428145867e9961f0d05af5f9d15_54712_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/1bf4d4eea1778613c643d01f914aabf7ba8a7fb3/193b0/aardvarkd/joel-champagne_hu54d08428145867e9961f0d05af5f9d15_54712_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/b4b550a7496ddc486fb53d86ef48efdaa8f3007c/ee6fb/aardvarkd/joel-champagne.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/b4b550a7496ddc486fb53d86ef48efdaa8f3007c/ee6fb/aardvarkd/joel-champagne.webp" alt="" loading="lazy"></a><figcaption><p>What are we celebrating, exactly?</p></figcaption></figure><p>It would be like if you ended the story of Little Red Riding Hood by saying, “And then Little Red Riding Hood realized her grandmother was a wolf! Suddenly, the wolf threw her to the floor and bared his razor-sharp teeth inches from her neck. Anyway, she ended up being fine. The End.”</p><h2 id="quotable-moments">Quotable moments<a href="#quotable-moments" arialabel="Anchor"> 🔗︎</a></h2><p>The documentary’s interviews are fun overall, but a couple of quotes delighted me.</p><h3 id="paul-graham-on-developers-and-businesspeople">Paul Graham, on developers and businesspeople<a href="#paul-graham-on-developers-and-businesspeople" arialabel="Anchor"> 🔗︎</a></h3><blockquote><p><a href="https://mtlynch.io/aardvarkd/graham-no-business-guys.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/71bd689bd13cceff17a0f5fc204c06c1e388def6/f5e96/aardvarkd/graham-no-business-guys_hu546c5201b5ef7a32f64a7726c1664a97_34884_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/9ffd18cf53efd1c413b0c2be75e3fc684fc07c8b/79066/aardvarkd/graham-no-business-guys_hu546c5201b5ef7a32f64a7726c1664a97_34884_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/947b5443774d58657be16034c75f46e68c435431/bd312/aardvarkd/graham-no-business-guys_hu546c5201b5ef7a32f64a7726c1664a97_34884_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/41b807f25c86f222df38f713abf5063891777e4a/6e7f9/aardvarkd/graham-no-business-guys_hu546c5201b5ef7a32f64a7726c1664a97_34884_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/9b32ec765100cb3517fcd00d5bef4f1b951457ac/f2df9/aardvarkd/graham-no-business-guys.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/9b32ec765100cb3517fcd00d5bef4f1b951457ac/f2df9/aardvarkd/graham-no-business-guys.webp" alt="" loading="lazy"></a></p><p>I think the relationship between hackers and business guys — at least in the beginning — is that you need hackers, and you don’t need business guys.</p><p>-Paul Graham</p></blockquote><h3 id="aaron-swartz-on-schoolwork-vs-hobby-projects">Aaron Swartz, on schoolwork vs. hobby projects<a href="#aaron-swartz-on-schoolwork-vs-hobby-projects" arialabel="Anchor"> 🔗︎</a></h3><blockquote><p><a href="https://mtlynch.io/aardvarkd/aaron-swartz.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/17fca5b90afcf0bb2d98851297e5ed0bc803a534/bd3db/aardvarkd/aaron-swartz_hu20c1677275e6edb5a2130596f8d972ff_29882_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/7a576c467f5024978323723f30e9294440080211/7be3d/aardvarkd/aaron-swartz_hu20c1677275e6edb5a2130596f8d972ff_29882_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/ceceb36f111764c1260c31f628c79890917bf32d/a735a/aardvarkd/aaron-swartz_hu20c1677275e6edb5a2130596f8d972ff_29882_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/3b39a830aef5f0c2f264d572d455fa985052595b/0c6bc/aardvarkd/aaron-swartz_hu20c1677275e6edb5a2130596f8d972ff_29882_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/4d76efaa9a9a800829e96cb0df3a98902e6eb58e/b2676/aardvarkd/aaron-swartz.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/4d76efaa9a9a800829e96cb0df3a98902e6eb58e/b2676/aardvarkd/aaron-swartz.webp" alt="" loading="lazy"></a></p><p>You don’t have to be in this fake world of school doing some silly assignment that has no real purpose. You can build something that’s actually useful. You can go put it up on your website, and people can really use it. If you can build something real, why spend your life doing stuff that’s fake?</p><p>-Aaron Swartz</p></blockquote><h2 id="fog-creek-didnt-finance-the-documentary">Fog Creek didn’t finance the documentary<a href="#fog-creek-didnt-finance-the-documentary" arialabel="Anchor"> 🔗︎</a></h2><p>In researching the documentary, one of the big surprises was that Fog Creek didn’t finance it.</p><p>I had remembered <em>Aardvark’d</em> as essentially a vanity project that Fog Creek funded as advertising. Re-reading the <a href="https://www.joelonsoftware.com/2005/03/23/documentary-filmmaker-wanted/">job posting</a>, I realized it was more of an angel investor model:</p><blockquote><p>We’re looking for a filmmaker who will finance and make the film themselves and own the rights. We want someone who can promote the film to typical documentary outlets.</p></blockquote><p>Spolsky said in his blog that he paid the filmmaker a $5k stipend and $5k for expenses. In <a href="https://web.archive.org/web/20230712203549/https://www.inc.com/magazine/20080101/how-hard-could-it-be-the-four-pillars-of-organic-growth.html">a later column</a> he wrote for <em>Inc.</em> magazine, he says, “We ended up paying the filmmaker about $30,000.”</p><p>Letting an external filmmaker assume ownership worked, apparently.</p><p>Fog Creek no longer cares about Copilot or <em>Aardvark’d</em>. They’ve taken <a href="https://web.archive.org/web/20060208042202/http://www.projectaardvark.com/">the interns’ development blog</a> offline, and Joel has let many of the Copilot links on his blog die, but the filmmaker still cared enough about <em>Aardvark’d</em> to upload a high-def copy to YouTube 18 years later.</p><h2 id="the-artifacts-of-aardvark">The artifacts of Aardvark<a href="#the-artifacts-of-aardvark" arialabel="Anchor"> 🔗︎</a></h2><p>After Fog Creek released Copilot, Joel Spolsky <a href="https://www.joelonsoftware.com/2005/08/17/the-project-aardvark-spec/">published the original functional spec</a>. The link to the actual PDF is now dead, but the Internet Archive <a href="https://web.archive.org/web/20051028171624/https://www.joelonsoftware.com/RandomStuff/copilot_spec.pdf">has a copy</a>.</p><figure><a href="https://mtlynch.io/aardvarkd/aardvark-spec.webp"><img sizes="(min-width: 768px) 300px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/953c49c2afaaaf28b64bd2f5e45c4c00af937177/5a036/aardvarkd/aardvark-spec_hubcc8d6553548ae6bc240d70571882cc1_45976_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/affc18ebd0c667516e24f719ff384f38a034e822/3d36f/aardvarkd/aardvark-spec_hubcc8d6553548ae6bc240d70571882cc1_45976_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/c0be49fcba5446fcd4d12a21245bed1403aea77f/a8b2f/aardvarkd/aardvark-spec_hubcc8d6553548ae6bc240d70571882cc1_45976_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/61cb84c45842d2e4de453423a66755de540aac08/83b76/aardvarkd/aardvark-spec.webp 897w" src="https://d33wubrfki0l68.cloudfront.net/61cb84c45842d2e4de453423a66755de540aac08/83b76/aardvarkd/aardvark-spec.webp" alt="" loading="lazy"></a><figcaption><p>Joel Spolsky’s <a href="https://web.archive.org/web/20051028171624/https://www.joelonsoftware.com/RandomStuff/copilot_spec.pdf">original functional spec</a> for Fog Creek Copilot (codename Aardvark)</p></figcaption></figure><p>Fog Creek adapted open-source VNC code for the Copilot client, so they were required under the <a href="https://en.wikipedia.org/wiki/GNU_General_Public_License">GPL</a> to publish their source code.</p><p>I unfortunately couldn’t find the source code for the original version of Copilot that the interns wrote. The <a href="https://web.archive.org/web/20150911071232/https://www.copilot.com/copilot_helper_src.zip/">earliest version I could find</a> was from 2011. By that point, they had rewritten the C# codebase in C++.</p><h2 id="what-happened-to-the-interns">What happened to the interns?<a href="#what-happened-to-the-interns" arialabel="Anchor"> 🔗︎</a></h2><p><a href="https://tghw.com/">Tyler Griffin Hicks-Wright</a> accepted a full-time position at Fog Creek after his internship and worked there for several years. He left in 2012 to start a photo backup startup called Snaposit. He sought funding from his <em>Aardvark’d</em> co-star, Paul Graham, but <a href="https://tghw.com/blog/well-that-sucks-what-else-you-got">Y Combinator rejected Tyler’s pitch</a>. Tyler shuttered the business a year later.</p><figure><a href="https://mtlynch.io/aardvarkd/tyler-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/b55ea861098db769131b14b34e8102fd6c084c10/74224/aardvarkd/tyler-2005_hub71d24486fc38f550fd998852d0e5511_111468_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/642a53820a1b283dce8cd6fbd492d9c0bb782dd7/4af0a/aardvarkd/tyler-2005_hub71d24486fc38f550fd998852d0e5511_111468_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/a5e7d17ecc38e9b6c2d9fe44ca5d8d048607ae33/1218f/aardvarkd/tyler-2005_hub71d24486fc38f550fd998852d0e5511_111468_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/6b8ac52a6a406f5926c7531f0fb39ae712494b44/d0ba8/aardvarkd/tyler-2005_hub71d24486fc38f550fd998852d0e5511_111468_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/156cdbfe4b0ff77e787fd841a009cbea2843d290/db0e6/aardvarkd/tyler-2005.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/156cdbfe4b0ff77e787fd841a009cbea2843d290/db0e6/aardvarkd/tyler-2005.webp" alt="" loading="lazy"></a><figcaption><p>Tyler Griffin Hicks-Wright, software development intern on Aardvark</p></figcaption></figure><p>In 2014, Fog Creek restructured to spin out <a href="https://en.wikipedia.org/wiki/Trello">Trello</a>, its ultra-successful project management app. As part of the restructuring, Fog Creek sold the Copilot product to Tyler <a href="https://tghw.com/blog/copilot-coming-full-circle">for an undisclosed sum</a>. He ran Copilot on the side for eight years before <a href="https://news.ycombinator.com/item?id=31192812">shutting it down in April 2022</a>.</p><p><a href="https://twitter.com/mikelehen">Michael Lehenbauer</a> took a job at Microsoft after his <em>Aardvark’d</em> internship. He left in 2011 to join Firebase as employee #2, which I can only assume means he’s now relaxing on a superyacht somewhere.</p><figure><a href="https://mtlynch.io/aardvarkd/michael-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/b2f41295c39759fb123ea53ffa3748187b2f3673/9ef66/aardvarkd/michael-2005_hu4136fb84222d869ff5bb50598387cdb1_44226_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/4a0e360455901d9474dc04034b90aa69c04c71a4/b09af/aardvarkd/michael-2005_hu4136fb84222d869ff5bb50598387cdb1_44226_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/5b1f66b362e7653d119408a54523955796e511ed/fd8a2/aardvarkd/michael-2005_hu4136fb84222d869ff5bb50598387cdb1_44226_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/7c097014c9e1efe64d686f7d58446a861727bf8b/cd8de/aardvarkd/michael-2005_hu4136fb84222d869ff5bb50598387cdb1_44226_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/b5416abe336480ea4d63a7f7b0bd7bb74447aba4/2e653/aardvarkd/michael-2005.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/b5416abe336480ea4d63a7f7b0bd7bb74447aba4/2e653/aardvarkd/michael-2005.webp" alt="" loading="lazy"></a><figcaption><p>Michael Lehenbauer, software development intern on Aardvark</p></figcaption></figure><p><a href="https://www.bitquabit.com/meta/about/">Ben Pollack</a> worked at Fog Creek for several years. He seems to have <del>never caught the startup bug</del> (<strong>Edit</strong>: Ben <a href="https://news.ycombinator.com/item?id=37435723">responded</a> to say that he has worked mainly at startups, though not as early-stage as Fog Creek), mainly working at larger, more established companies. He has followed in Joel’s footsteps in blogging, as he writes regularly about software, technology, and his passion for functional programming, sometimes engaging in <a href="https://web.archive.org/web/20090523175306/http://hicks-wright.net/blog/my-language-features-are-your-libraries/">geeky online arguments with Tyler</a>.</p><figure><a href="https://mtlynch.io/aardvarkd/ben-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/16d910dc6f1a86b12a129b0385f3dabb78cc215d/f5e44/aardvarkd/ben-2005_huc25fc7f3980c979e4044b1e839fe325e_64530_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/c8a6a0c7d3b6a164268aff02d7550286c40ce684/2c63a/aardvarkd/ben-2005_huc25fc7f3980c979e4044b1e839fe325e_64530_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/0216112627473a1a190491c886d40b89ed0b7c44/97085/aardvarkd/ben-2005_huc25fc7f3980c979e4044b1e839fe325e_64530_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/450eaa8ee6ee9f9d4083abddffe51d9a83ba46a1/fb850/aardvarkd/ben-2005_huc25fc7f3980c979e4044b1e839fe325e_64530_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/cbdc17f3dcbfa11d5506d3e71bf2d4df17d7cca7/26cb4/aardvarkd/ben-2005.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/cbdc17f3dcbfa11d5506d3e71bf2d4df17d7cca7/26cb4/aardvarkd/ben-2005.webp" alt="" loading="lazy"></a><figcaption><p>Ben Pollack, software development intern on Aardvark</p></figcaption></figure><p><a href="https://www.yaronguez.com/">Yaron Guez</a> worked for several medtech and enterprise-y SaaS businesses. He’s the co-founder of <a href="https://www.trestian.com/#about">a buzzwordy consulting firm</a> and a dev manager at <a href="https://www.servicenow.com/">ServiceNow</a>.</p><figure><a href="https://mtlynch.io/aardvarkd/yaron-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/aca81e42b93058d7213018cd33fc4db2d7e2f316/c7e2a/aardvarkd/yaron-2005_hu43663b01785d272699e3fdb004b06a1c_83374_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/48ba04f7095964e31b4b3a152bc19cd45208a029/effb0/aardvarkd/yaron-2005_hu43663b01785d272699e3fdb004b06a1c_83374_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/320cb363169148f452450f9a4c6e8537a0f61bb2/735b9/aardvarkd/yaron-2005_hu43663b01785d272699e3fdb004b06a1c_83374_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/f615af202abf83435e4c9b048611b02ba8f1d326/ea544/aardvarkd/yaron-2005_hu43663b01785d272699e3fdb004b06a1c_83374_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/cac3ce70b0adfa13c08a2664b0e868a842c29608/b0a62/aardvarkd/yaron-2005.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/cac3ce70b0adfa13c08a2664b0e868a842c29608/b0a62/aardvarkd/yaron-2005.webp" alt="" loading="lazy"></a><figcaption><p>Yaron Guez, project management intern on Aardvark</p></figcaption></figure><h2 id="liz-gordons-satisfying-career-trajectory">Liz Gordon’s satisfying career trajectory<a href="#liz-gordons-satisfying-career-trajectory" arialabel="Anchor"> 🔗︎</a></h2><p>One of the most affable characters in <em>Aardvark’d</em> is Liz Gordon, Fog Creek’s then recently-hired office manager.</p><p>Liz is presented in the film as the non-nerd outsider at Fog Creek. She ends up having to coddle and indulge a bunch of college interns, most of whom have somewhat inflated egos as subjects of a documentary.</p><figure><a href="https://mtlynch.io/aardvarkd/liz-gordon-laughing.webp"><img sizes="(min-width: 768px) 700px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/38c8c8cfc88f7b5cd126ef321c6b09f26356a01e/75d01/aardvarkd/liz-gordon-laughing_hu34339979105ac0063da3fd56ad68f5c6_28060_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/a80d009c63bb354911ccdc80d7fadf073aedc93f/c02f3/aardvarkd/liz-gordon-laughing_hu34339979105ac0063da3fd56ad68f5c6_28060_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/ec14070f8a1f978cfc1f391259bc561f0f7b7093/a2a7e/aardvarkd/liz-gordon-laughing_hu34339979105ac0063da3fd56ad68f5c6_28060_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/f05f90d51f472a6532563341527612247d131154/4cb24/aardvarkd/liz-gordon-laughing_hu34339979105ac0063da3fd56ad68f5c6_28060_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/65744c13d0c660bfb1839d67ed0db74863dfda8a/b39b6/aardvarkd/liz-gordon-laughing.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/65744c13d0c660bfb1839d67ed0db74863dfda8a/b39b6/aardvarkd/liz-gordon-laughing.webp" alt="" loading="lazy"></a><figcaption><p>“There’s always a better way to do something, and that’s what [the interns] are always trying to figure out… what star trooper is going to kick some other superhero’s butt, and how they’re going to do it. Or what’s the best way to use a lightsaber.” -Liz Gordon</p></figcaption></figure><p>In one scene, she’s being interviewed on her birthday. Nobody remembered, so she had to buy herself a birthday hat. While she’s explaining this to the camera, one of her co-workers <em>shushes</em> her for making too much noise. On her birthday!</p><figure><a href="https://mtlynch.io/aardvarkd/liz-gordon-shush.webp"><img sizes="(min-width: 768px) 700px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/f628e73cc5733ab19e839fd0f6ff922c32e9a46f/bcc14/aardvarkd/liz-gordon-shush_huaa228325455cda16e594b64aea9b6360_64946_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/42d3aa812c2dab1996ca0f6b2c8dcce5b537d659/4e2ab/aardvarkd/liz-gordon-shush_huaa228325455cda16e594b64aea9b6360_64946_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/05fd9a85f1fe688829b8a025c60497a4f3baf4f5/6da32/aardvarkd/liz-gordon-shush_huaa228325455cda16e594b64aea9b6360_64946_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/41425748ebbd2d2a7453e0138784ec65548beb81/b7988/aardvarkd/liz-gordon-shush_huaa228325455cda16e594b64aea9b6360_64946_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/371a7c65d321981697aec1222a710d349c1f2523/30cbb/aardvarkd/liz-gordon-shush.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/371a7c65d321981697aec1222a710d349c1f2523/30cbb/aardvarkd/liz-gordon-shush.webp" alt="" loading="lazy"></a><figcaption><p>Liz Gordon being shushed on her birthday at the Fog Creek office</p></figcaption></figure><p>It turns out Liz stuck with Fog Creek and rose along with the company, eventually taking on the role of Head of People.</p><p>When Fog Creek spun out Trello into its own company, Liz became Trello’s VP of People and retained the position when Atlassian acquired Trello.</p><p>She’s now <a href="https://www.linkedin.com/in/elizabeth-hall-8939551b/">Liz Hall</a> and is a C-suite executive at <a href="https://splashthat.com/">Splash</a>, where I presume nobody tries to shush her on her birthday.</p><figure><a href="https://mtlynch.io/aardvarkd/liz-hall.webp"><img sizes="(min-width: 768px) 450px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/dbb7ef67393b23a7b523de71c6082b49568ebe62/6d9e1/aardvarkd/liz-hall_hua43e58e9b7537fa56aab7143ab6a92fa_41168_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/9b0d0c03ae8665d31fa30ed8b1b19420bfcd0acb/4ab1a/aardvarkd/liz-hall_hua43e58e9b7537fa56aab7143ab6a92fa_41168_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/1cbb5c6523fd2af354b96e50440b9c2560a2ce55/57017/aardvarkd/liz-hall_hua43e58e9b7537fa56aab7143ab6a92fa_41168_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/ebf2328ba378d1735ae419899052b693b45cc08f/69574/aardvarkd/liz-hall.webp 916w" src="https://d33wubrfki0l68.cloudfront.net/ebf2328ba378d1735ae419899052b693b45cc08f/69574/aardvarkd/liz-hall.webp" alt="" loading="lazy"></a><figcaption><p>Liz Hall is now Chief People Officer at Splash.</p></figcaption></figure><p><strong>Edit</strong>: According to <a href="https://news.ycombinator.com/item?id=37435723">a comment from Ben Pollack</a> in response to this post, the sound was not actually a “shush”:</p><blockquote><p>this coworker right here was starting to say “shit fuck shit dammit” on camera as he discovered that a stale precompiled header was getting picked up on the build box and then realized Lerone was rolling, so you’re hearing me halt myself before saying a pile of profanity on camera.</p></blockquote><h2 id="_make-better-software-the-training-series_"><em>Make Better Software: The Training Series</em><a href="#_make-better-software-the-training-series_" arialabel="Anchor"> 🔗︎</a></h2><p>Five years later, Fog Creek collaborated once again with <em>Aardvark’d</em> producer, Boondoggle Media, on a video course called <a href="https://boondogglemedia.com/project/make-better-software/"><em>Make Better Software: The Training Series</em></a>. Fog Creek <a href="https://web.archive.org/web/20110711014829/http://training.fogcreek.com/order.html">used to sell this course</a> for $2,000, but now Boondoggle Media has released it <a href="https://www.youtube.com/playlist?list=PLcIkt5s7w8D0ywp0CBmNFWRTFZic3pWNn">free on YouTube</a>.</p><p>I’m watching it, and it’s pretty good. It’s kind of like a video version of Joel Spolsky’s best blog posts. The series shows how Joel puts his many software philosophies into practice at Fog Creek.</p><p>Most of the Fog Creek characters from <em>Aardvark’d</em> are still there. You get to see slightly more grown-up versions of Tyler and Ben, who had at that point had several years of real-world experience.</p><figure><div><p><a href="https://mtlynch.io/aardvarkd/tyler-later.webp"><img sizes="(min-width: 768px) 400px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/23009fdde59c2e50233274f1612837a76908056e/d451a/aardvarkd/tyler-later_huf51863011ae9053b20d1bf7c1c0b2f8f_115348_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/3129aa5e18e7ba570df7c26d27121516791fc2b3/db230/aardvarkd/tyler-later_huf51863011ae9053b20d1bf7c1c0b2f8f_115348_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/a7bf9bf7f546f5cbbcbc07fbca16f0dfa28f7d80/b5fee/aardvarkd/tyler-later_huf51863011ae9053b20d1bf7c1c0b2f8f_115348_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/fdf5d210b2ec97c3cef0db2629edfd40401890bd/51a21/aardvarkd/tyler-later_huf51863011ae9053b20d1bf7c1c0b2f8f_115348_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/4c4485020dfcb1425cd31d1b897a4b83dda75588/93f05/aardvarkd/tyler-later.webp 1221w" src="https://d33wubrfki0l68.cloudfront.net/4c4485020dfcb1425cd31d1b897a4b83dda75588/93f05/aardvarkd/tyler-later.webp" alt="" loading="lazy"></a></p><p><a href="https://mtlynch.io/aardvarkd/ben-later.webp"><img sizes="(min-width: 768px) 441px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/fe760f0edc0efa7fc2c49c3cab526972d5d8bfc5/832e6/aardvarkd/ben-later_hu02e0a26f26731e57c7561aa329e4ddda_43084_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/e2015454c0b28eae6c417470ac64054b3b3216d9/8442c/aardvarkd/ben-later_hu02e0a26f26731e57c7561aa329e4ddda_43084_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/00e85ba8150c8e07239e2431361011f2d162904a/84a9e/aardvarkd/ben-later_hu02e0a26f26731e57c7561aa329e4ddda_43084_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/b6e2d070fdcf22b9e6ac78150cd9dedf152fed15/73170/aardvarkd/ben-later.webp 808w" src="https://d33wubrfki0l68.cloudfront.net/b6e2d070fdcf22b9e6ac78150cd9dedf152fed15/73170/aardvarkd/ben-later.webp" alt="" loading="lazy"></a></p></div><figcaption><p>Tyler (left) and Ben (right) appear as full-time Fog Creek employees in <em>Make Better Software</em> five years after the filming of <em>Aardvark’d</em>.</p></figcaption></figure><h2 id="watch-the-films">Watch the films<a href="#watch-the-films" arialabel="Anchor"> 🔗︎</a></h2><p>Both movies are available for free on YouTube. If you’re a fan of Joel Spolsky, Paul Graham, or Aaron Swartz, I think <em>Aardvark’d</em> is worth a watch.</p><ul><li><a href="https://www.youtube.com/watch?v=YbrkZ07LKbk"><em>Aardvark’d: 12 Weeks with Geeks</em></a></li></ul><p>And if you’re a superfan of Joel Spolsky’s blog, <a href="https://www.joelonsoftware.com/">Joel on Software</a>, you’ll enjoy <em>Make Better Software</em>.</p><ul><li><a href="https://www.youtube.com/playlist?list=PLcIkt5s7w8D0ywp0CBmNFWRTFZic3pWNn"><em>Make Better Software: The Training Series</em></a></li></ul><blockquote><p lang="en" dir="ltr">An official copy of the 2005 documentary Aardvark'd was recently published on YouTube. It has just 109 views despite interviews with Paul Graham months after starting YC, reddit's co-founders months after reddit's launch, and Joel Spolsky before Trello/SO <a href="https://t.co/Km8MPpySm1">https://t.co/Km8MPpySm1</a></p>— Michael Lynch (@deliberatecoder) <a href="https://twitter.com/deliberatecoder/status/1700140534126244021?ref_src=twsrc%5Etfw">September 8, 2023</a></blockquote></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TSMC warns AI chip crunch will last another 18 months (138 pts)]]></title>
            <link>https://www.theregister.com/2023/09/08/tsmc_ai_chip_crunch/</link>
            <guid>37432948</guid>
            <pubDate>Fri, 08 Sep 2023 13:03:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2023/09/08/tsmc_ai_chip_crunch/">https://www.theregister.com/2023/09/08/tsmc_ai_chip_crunch/</a>, See on <a href="https://news.ycombinator.com/item?id=37432948">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>Bad news for anyone looking to get their hands on Nvidia's top specced GPUs, such as the A100 or H100: it's not going to get any easier to source the parts until at least the end of 2024, TSMC has warned.</p>
<p>The problem, it seems, isn't that TSMC – which fabricates not just those GPUs for Nvidia but also components for AMD, Apple, and many others – can't make enough chips. Rather, a lack of advanced packaging capacity used to stitch the silicon together is holding up production, TSMC chairman Mark Liu told <a href="https://asia.nikkei.com/Business/Tech/Semiconductors/TSMC-sees-AI-chip-output-constraints-lasting-1.5-years" rel="nofollow">Nikkei Asia</a>.</p>
<p>According to Liu, TSMC is only able to meet about 80 percent of demand for its chip on wafer on substrate (CoWoS) packaging technology. This is used in some of the most advanced chips on the market today – particularly those that rely on high-bandwidth memory (HBM) which is ideal for AI workloads.</p>

    

<p>Liu expects this is a temporary bottleneck in the production of machine-learning accelerators and that additional CoWoS capacity should come online within a year and a half. Incidentally, TSMC recently announced plans to <a href="https://www.theregister.com/2023/07/26/tsmc_29b_chip_plant_taiwan/">expand</a> its advanced packaging capacity in Taiwan with a $3 billion facility at the Tongluo Science Park in Miaoli County.</p>

        


        

<p>Until TSMC can bring additional capacity online, Nvidia's H100 and older A100 – which power many popular generative AI models, such as GPT-4 – are at the heart of this shortage. However, it's not just Nvidia. AMD's upcoming Instinct MI300-series accelerators – which it <a href="https://www.theregister.com/2023/06/13/amd_epyc_announcement/">showed off</a> during its Datacenter and AI event in June – make extensive use of CoWoS packaging technology.</p>
<p>AMD's MI300A APU is currently sampling with customers and is slated to <a href="https://www.nextplatform.com/2023/06/14/the-third-time-charm-of-amds-instinct-gpu/">power</a> Lawrence Livermore National Laboratory's El Capitan system, while the MI300X GPU is due to start making its way into customers' hands in Q3.</p>

        

<p>We've reached out to AMD for comment on whether the shortage of CoWoS packaging capacity could impact availability of the chip and we'll let you know if we hear anything back.</p>
<ul>

<li><a href="https://www.theregister.com/2023/09/05/intel_tower_amd/">After failed takeover, Intel and Tower Semi aren't giving up on the relationship</a></li>

<li><a href="https://www.theregister.com/2023/09/01/rapidus_hiring_fab/">Rapidus ramps as construction begins on 2nm wafer fab</a></li>

<li><a href="https://www.theregister.com/2023/08/24/china_us_tech_restrictions/">China cooks covert chips, recruits global geeks to dodge US restrictions</a></li>

<li><a href="https://www.theregister.com/2023/08/18/ai_datacenter_evolution/">Our AI habit is already changing the way we build datacenters</a></li>
</ul>
<p>It's worth noting that TSMC's CoWoS isn't the only packaging tech out there. Samsung, which is <a href="https://www.bloomberg.com/news/articles/2023-09-01/samsung-surges-6-on-talk-it-s-joining-nvidia-s-ai-suppliers#xj4y7vzkg" rel="nofollow">rumored</a> to pick up some of the slack for the production of Nvidia GPUs, has I-Cube and H-Cube for 2.5D packaging and X-Cube for 3D packaging.</p>
<p>Intel, meanwhile, packages several of the chiplets used in its Ponte Vecchio <a target="_blank" href="https://www.theregister.com/2022/11/09/intel_max/">GPU Max</a> cards, but doesn't rely on CoWoS tech to stitch them together. Chipzilla has developed its own advanced packaging tech, which can work with chips from different fabs or process nodes. It's called embedded multi-die interconnect bridge (EMIB) for 2.5D packaging and Foveros for vertically stacking chiplets on top of one another. ®</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NYPD spent millions to contract with firm banned by Meta for fake profiles (196 pts)]]></title>
            <link>https://www.theguardian.com/us-news/2023/sep/08/new-york-police-tracking-voyager-labs-meta-contract</link>
            <guid>37431962</guid>
            <pubDate>Fri, 08 Sep 2023 10:45:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/us-news/2023/sep/08/new-york-police-tracking-voyager-labs-meta-contract">https://www.theguardian.com/us-news/2023/sep/08/new-york-police-tracking-voyager-labs-meta-contract</a>, See on <a href="https://news.ycombinator.com/item?id=37431962">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>New York law enforcement agencies have spent millions of dollars to expand their capabilities to track and analyze social media posts, new documents show, including by contracting with a surveillance firm accused of improperly scraping social media platforms for data.</p><figure id="dd2d329d-bc92-47a3-ba67-b508073654a9" data-spacefinder-role="richLink" data-spacefinder-type="model.dotcomrendering.pageElements.RichLinkBlockElement"><gu-island name="RichLinkComponent" deferuntil="idle" props="{&quot;richLinkIndex&quot;:1,&quot;element&quot;:{&quot;_type&quot;:&quot;model.dotcomrendering.pageElements.RichLinkBlockElement&quot;,&quot;url&quot;:&quot;https://www.theguardian.com/us-news/2023/sep/05/nypd-protest-reform-lawsuit-george-floyd&quot;,&quot;text&quot;:&quot;NYPD agrees to ‘significantly’ change how it handles protests in the city&quot;,&quot;prefix&quot;:&quot;Related: &quot;,&quot;role&quot;:&quot;richLink&quot;,&quot;elementId&quot;:&quot;dd2d329d-bc92-47a3-ba67-b508073654a9&quot;},&quot;ajaxUrl&quot;:&quot;https://api.nextgen.guardianapps.co.uk&quot;,&quot;format&quot;:{&quot;display&quot;:0,&quot;theme&quot;:0,&quot;design&quot;:0}}" config="{&quot;renderingTarget&quot;:&quot;Web&quot;}"></gu-island></figure><p>Documents obtained by the Surveillance Technology Oversight Project (Stop), a privacy advocacy non-profit and shared with the Guardian, reveal the New York police department in 2018 entered a nearly $9m contract with Voyager Labs, a surveillance company that has been sued by Meta for using nearly 40,000 fake Facebook accounts to collect data on an <a href="https://www.theguardian.com/technology/2023/jan/12/meta-voyager-labs-surveillance-fake-accounts" data-link-name="in body link">estimated 600,000 users.</a></p><p>NYPD purchased Voyager Labs products that the company claims can use artificial intelligence to analyze online human behavior and detect and predict fraud and crimes, the documents show.</p><p>A separate document reveals a contract between the Queens district attorney and Israeli firm Cobwebs Technologies, which also offers social network mapping products, as well as tools to track <a href="https://theintercept.com/2023/07/26/texas-phone-tracking-border-surveillance/" data-link-name="in body link">location</a> information through phones. It’s unclear how much that contract is worth.</p><p>Law enforcement across the United States have worked with social media analytics companies for years, hoping to more effectively and efficiently collect and make sense of the hordes of personal information available on the internet.</p><p>But experts have argued the practice can cross ethical and legal lines, particularly when used to access private information, make inferences or predict future criminality based on the content posted on social media, or otherwise help law enforcement skip obtaining subpoenas and warrants before gathering information on someone.</p><p>William Owens, the communications director at Stop, said there’s often also little public information available on law enforcement’s contracts with private surveillance companies, which make it difficult to hold law enforcement accountable to existing laws that protect people against privacy violations and unreasonable searches and seizures. “It takes something like a [Freedom of Information Law] request to then receive any information from the NYPD, which often is redacted,” he said.</p><p>The NYPD contract showed the department purchased Voyager Labs tools, Voyager Analytics and Genesis, for nearly $9m in 2018 and paid over $1.6m to renew the services in 2021. And the department confirmed to the Guardian it is still working with Voyager.</p><p>As the Guardian previously <a href="https://www.theguardian.com/us-news/2021/nov/17/police-surveillance-technology-voyager" data-link-name="in body link">reported</a>, Voyager Labs pitches itself as a software company that helps law enforcement surveil and investigate people by pulling together and reconstructing their entire digital lives.</p><p>Internal documents the civil rights organization The Brennan Center obtained and <a href="https://www.theguardian.com/us-news/2021/nov/17/police-surveillance-technology-voyager" data-link-name="in body link">shared with the Guardian</a> in 2021 show that Voyager tells its clients its analytics software can map out a person’s posts and their social connections. That includes the direct connections on social media platforms, as well as “indirect” connections or people with whom the subject of the investigation has at least four mutual friends. The company’s user guide indicates this allows the software to “unearth previously unknown middlemen or instances of improper association”. Even if someone deletes a friend, the company maintains an archive of their former connection.</p><p>The documents also show Voyager Analytics enables clients to create “avatars” or fake social media profiles to “collect and analyze information that is otherwise inaccessible”, a feature that has drawn the ire of social media companies. Facebook-parent company Meta sued in January to banVoyager from accessing any of its services. At the time, Meta alleged Voyager had made 38,000 fake Facebook and Instagram accounts. Months later, Meta said it discovered Voyager had created 17,000 new fake accounts, despite revoking the company’s access to Facebook and Instagram and sending two separate cease-and-desist letters. Voyager has filed to dismiss the lawsuit and denies making fake accounts<strong>. </strong></p><p>It’s hard to tell exactly how the NYPD is using Voyager software, given the lack of transparency into the contract.</p><p>But the department <a href="https://www.nyc.gov/assets/nypd/downloads/pdf/public_information/post-final/social-network-analysis-tools-nypd-impact-and-use-policy_4.9.21_final.pdf" data-link-name="in body link">did describe its overall policy on social network analysis tools</a> in a 2021 report on the privacy implications of the tools. In the paper, the department notes that it uses such tools to discover “information relevant to investigations and to address public safety concerns”.</p><p>The department uses the tools to analyze both publicly available information and “information that is viewable as a result of user privacy settings or practices”, according to the document. The latter is ambiguously phrased, but New York police are legally permitted to use fake social media profiles and if someone unknowingly accepts a friend request from a cop it counts as consent, according to Stop legal director David Siffert.</p><figure data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.NewsletterSignupBlockElement"><a data-ignore="global-link-styling" href="#EmailSignup-skip-link-15">skip past newsletter promotion</a><p id="EmailSignup-skip-link-15" tabindex="0" aria-label="after newsletter promotion" role="note">after newsletter promotion</p></figure><p>Social media analytics tools may also be used to find connections between potential subjects of a criminal investigation, the department stipulated in the paper, and to notify police when a person whose profile they have been tracking posts something new and collect and archive that new information.</p><p>NYPD declined to answer detailed questions about how it uses the tools. A spokesperson said in an emailed statement that “offenders” increasingly “utilize social media in furtherance of their unlawful activities” and that “Voyager assists the Department in preventing victimization and apprehending these offenders”. They do not use “features that would be described as predictive of future criminality”, the spokesperson added.</p><p>Voyager Labs would not comment on specific contracts but a spokesperson, William Colston, said the company was proud that governmental and law enforcement organizations have successfully used its platforms.</p><p>There are fewer details about Cobwebs Technologies and the Queens district attorney’s contract with the firm. The DA posted a notice in the April issue of the city record, an official journal for city agencies to share legal information such as contract procurements, that it had entered into a year-long contract with Cobwebs for its Tangles and Webloc products.</p><p>Much like Voyager, Cobwebs says Tangles, its web investigation platform, can help “easily identify new threats, reveal hidden connections” by analyzing personal and other data available on the internet. A company video shows the software may use <a href="https://www.vice.com/en/article/xgynn4/company-helping-irs-go-undercover-cobwebs-technologies" data-link-name="in body link">facial recognition and image recognition</a> in its processes and, like Voyager, maps out potential connections between people based on data from the internet and social media to create a “detailed” target profile.</p><p>An <a href="https://web.archive.org/web/20210725164419/https://cobwebs.com/products/location-intelligence-system/" data-link-name="in body link">archived</a> landing page on Cobweb’s site describes Webloc as a “location intelligence platform that provides access to vast amounts of location-based data in any specified geographic location”. The website does not specify where the tool gets that data. But a <a href="https://govtribe.com/file/government-file/lsj-rfq-ssa-geoint-webloc-swa-dot-pdf" data-link-name="in body link">2021 contract with the Navy</a> indicates Webloc collects location information through mobile phones in addition to other personal data such as demographic information and what apps are installed on devices.</p><p>The Queens DA declined to provide details on how it uses Coweb’s products, but did specify it does not use or subscribe to the location tracking feature the company offers and only accesses public information.</p><p>A spokesperson for Cobwebs, AJ Guenther, said the company does not comment on specific law enforcement contracts but said that Cobwebs operates<em> </em>“according to the law and we adhere to strict standards and regulations, like GDPR in the EU, in respect to privacy protection”.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Touch Pianist (574 pts)]]></title>
            <link>http://touchpianist.com/</link>
            <guid>37431644</guid>
            <pubDate>Fri, 08 Sep 2023 09:56:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://touchpianist.com/">http://touchpianist.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37431644">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="non-canvas">
        <!-- <span class="glyphicon glyphicon-refresh gly-spin" id="pre-preload-spin"></span> -->
        <p><span>Loading Touch Pianist...</span>
        <span id="browser-notice">Chrome highly recommended.</span></p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[PgBouncer is useful, important, and fraught with peril (166 pts)]]></title>
            <link>https://jpcamara.com/2023/04/12/pgbouncer-is-useful.html</link>
            <guid>37431560</guid>
            <pubDate>Fri, 08 Sep 2023 09:43:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jpcamara.com/2023/04/12/pgbouncer-is-useful.html">https://jpcamara.com/2023/04/12/pgbouncer-is-useful.html</a>, See on <a href="https://news.ycombinator.com/item?id=37431560">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><p><img src="https://cdn.uploads.micro.blog/98548/2023/e0723a5982.png" alt=""></p>
<p>To start, I want to say that I’m appreciative that PgBouncer exists and the work its open source maintainers put into it. I also love working with PostgreSQL, and I’m thankful for the incredible amount of work and improvements that go into it as well.</p>
<p>I also think community and industry enthusiasm around Postgres is at an all time high. There are more managed hosting options than ever (<a href="https://www.crunchydata.com/">Crunchy Data</a>, <a href="https://render.com/docs/databases">Render</a>, <a href="https://fly.io/docs/postgres/">Fly.io</a>, and on and on), deep extensions like <a href="https://postgresml.org/">PostgresML</a>, <a href="https://www.citusdata.com/">Citus</a> and <a href="https://www.timescale.com/">Timescale</a>, serverless options like <a href="https://neon.tech/">Neon</a>, and real-time services like <a href="https://supabase.com/">Supabase</a> with Postgres at their center. Postgres is a robust, advanced and <em>fast</em> RDBMS capable of handling the needs of most every application.</p>
<p>I just find the current state of recommendations and guidance around scaling Postgres to be confounding. And it feels surprising for new Postgres users to discover that one of the most common scaling options relies on a solution like PgBouncer.</p>
<p>Over the years I’ve read dozens of articles around scaling and maintaining Postgres databases, and they always understate the impact of PgBouncer on your application. They casually mention unusable features without any exploration, or the numerous ways you can silently break expected query behavior. The advice is just to turn it on. <strong>I want it to be clear that as your application scales, PgBouncer is often necessary but isn’t free</strong>.</p>
<p>The following sections provide an overview of what connection pooling is in general, how connection pooling modes work in PgBouncer and similar tools, and then I dig into every Postgres feature that does not work in PgBouncer transaction mode and what the implications are. This is the PgBouncer article I wish existed the first time I used it - let’s get going 🐘!</p>
<h3 id="contents">Contents</h3>
<ul>
<li><a href="#connection-pooling">What is connection pooling?</a></li>
<li><a href="#separate-tool">Why do I need a separate tool from Postgres?</a>
<ul>
<li><a href="#framework-pool">Framework pooling</a></li>
<li><a href="#client-pool">Client proxy pooling</a></li>
<li><a href="#server-pool">Server proxy pooling</a></li>
</ul>
</li>
<li><a href="#turn-it-on">Can I just turn on PgBouncer and get scaling for free?</a>
<ul>
<li><a href="#session-mode">Session mode</a></li>
<li><a href="#statement-mode">Statement mode</a></li>
<li><a href="#transaction-mode">Transaction mode</a></li>
</ul>
</li>
<li><a href="#perils">Perils</a>
<ul>
<li><a href="#invalid-statements">Detecting invalid statements 😑</a></li>
<li><a href="#lock-timeouts">Lock timeouts (SET/RESET) 🔓</a></li>
<li><a href="#statement-timeouts">Statement timeouts (SET/RESET) ⏳</a></li>
<li><a href="#transparency">Transparency 👻</a></li>
<li><a href="#prepared-statements">Prepared Statements (PREPARE/DEALLOCATE, Protocol-level prepared plans) ✔️</a></li>
<li><a href="#throughput">Pool throughout / Long running queries 🏃‍♂️</a></li>
<li><a href="#session-level-locks">Session Level Advisory Locks 🔐&nbsp;</a></li>
<li><a href="#listen-notify">Listen/Notify 📣</a></li>
<li><a href="#single-threaded">The single thread 🪡&nbsp;</a></li>
<li><a href="#pg_dump">pg_dump 🚮</a></li>
<li><a href="#unavailable">Other unavailable features 🫥</a></li>
</ul>
</li>
<li><a href="#linting">Linting 🧶</a></li>
<li><a href="#future-improvements">Can we improve connections without a pooler?</a></li>
<li><a href="#alternatives">PgBouncer alternatives</a></li>
</ul>
<h2 id="connection-pooling">What is connection pooling?</h2>
<p>PgBouncer is a lightweight connection pooler for PostgreSQL. What does that mean exactly? What is connection pooling and why is it needed?</p>
<p>Opening a connection is expensive: a new Postgres client connection involves TCP setup, process creation and backend initialization – all of which are costly in terms of time and system resources. A connection pool keeps a set of connections available for reuse so we can avoid that overhead past initial connection.</p>
<p>There are three main levels of connection pooling<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup>:</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/0c4ffd30c0.jpg" alt=""></p>
<p><strong>Framework connection pooling</strong>. This is a common feature of many frameworks/libraries. Within a given process, you maintain a pool of active connections that are shared between code, generally running across threads. Whenever you handle some processing in a server request, a background process, a job, etc, you open a connection and keep that connection open. When that piece of work finishes and a new piece of work starts, you can reuse the connection without the expense of opening a new connection to the database every single time. These connections are usually local to a particular operating system process, so you gain no benefit outside of that process (and if you’re scaling Postgres, you probably have lots of processes)</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/d281d0294d.jpg" alt=""></p>
<p>One level higher, you can have <strong>client level connection pooling</strong> outside of your code. PgBouncer can handle this, and instead of independent unsharable process-isolated connections you proxy all of your connections through PgBouncer. But it runs on your server, so you still cannot share connections between servers (and again, when needing to do it you probably have lots of servers).</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/cd987b4e04.jpg" alt=""></p>
<p><strong>Server level connection pooling</strong>. Here we host PgBouncer independent of our servers and connect to a single central PgBouncer instance<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">2</a></sup>. This is the most robust form of connection pooling because independent of anything else in your code or server, you are guaranteed that any client connection is coming from the pool.</p>

<p>That’s all great but… why do we need it?</p>
<p>There are two primary layers to this:</p>
<ol>
<li>Maintaining connections is beneficial as a base feature. Less memory and io churn, less latency before running queries. Less pressure on the database constantly opening and closing connections.</li>
<li>Postgres connections get expensive very quickly. <em>Surprisingly</em> quickly.</li>
</ol>
<p>Here are some general community guidelines around allowable Postgres connection counts based on a mixture of community experience and specific benchmarking:</p>
<ul>
<li>In terms of what some managed services even offer: <a href="https://supabase.com/blog/supabase-pgbouncer">Supabase</a> offers a max of <em>50</em> connections, <a href="https://neon.tech/">Neon</a> offers a max of <em>100</em> connections, and <a href="https://render.com/docs/databases#connecting-to-your-database">Render</a> offers a max of 397 connections.</li>
<li>The general upper bound recommendation is a <em>max</em> of 500 active connections. Services like <a href="https://elements.heroku.com/addons/heroku-postgresql">Heroku Postgres</a> even <em>enforce</em> a hard limit of 500 connections<sup id="fnref:3"><a href="#fn:3" role="doc-noteref">3</a></sup></li>
<li>Even at 500 connections, your server is going to be strained. <a href="https://www.enterprisedb.com/postgres-tutorials/why-you-should-use-connection-pooling-when-setting-maxconnections-postgres">This more recent (as of 2023) enterprisedb article</a> analyzed connection performance and found that 300-400 active connections seems optimal. This <a href="https://brandur.org/postgres-connections">article from Brandur</a> is older (2018) but seems to reinforce this idea as well</li>
<li>There have been <a href="https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/improving-postgres-connection-scalability-snapshots/ba-p/1806462">some more recent connection improvements in Postgres</a> (as of version 14) handling idle connections more efficiently<sup id="fnref:4"><a href="#fn:4" role="doc-noteref">4</a></sup>, but active connections are still expensive<sup id="fnref:5"><a href="#fn:5" role="doc-noteref">5</a></sup> and idle connections have not reached the scale of a dedicated pooler</li>
<li>The reality of 500 connections is it sounds extremely low but those connections can handle <em>a ton of throughput</em>. The <em>problem</em> is, as a metric of pure concurrency, real connections have a hard upper limit. So if you try to have five thousand clients connect simultaneously, you’re going to start getting loads of connection errors<sup id="fnref:6"><a href="#fn:6" role="doc-noteref">6</a></sup>.</li>
</ul>
<p>To improve the cost of connection overhead, general connection pooling is helpful and a PgBouncer instance in its default session based mode can handle it. But to improve concurrency things have to get a bit… <em>quirky</em>.</p>
<p>There are two modes in PgBouncer which give clients access to more connections than Postgres <em>actually</em> has available. They rely on the idea that at any given time many of your connections are idle, so you can free up usage of idle connections to improve concurrency.</p>
<h2 id="turn-it-on">Can I just turn on PgBouncer and get scaling for free?</h2>
<p>Kind of? But not really? It’s complicated.</p>
<p>Internally, PgBouncer will manage a pool of connections for you. The default pooling mode it starts with, session pooling, is conservative, and in most cases will not provide improved concurrency<sup id="fnref:7"><a href="#fn:7" role="doc-noteref">7</a></sup>.</p>
<p>I’m going to hand wave a bit past two of the modes and focus on the typical recommendation.</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/7391257b1c.jpg" alt=""></p>
<p><strong>Session mode</strong> is the default and most conservative mode. This is a 1:1 - your local connection truly holds onto a full connection until you close it. This does little to help you scale connection concurrency, but it helps with latency and connection churn overhead.</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/6e486ad1b1.jpg" alt=""></p>
<p><strong>Statement mode</strong> is the most aggressive mode and means your connection goes back into the pool after <em>every statement</em>. You lose the ability to use transactions 😰 - that seems wild and unusable for only the most specialized of use cases.</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/9e0451a965.jpg" alt=""></p>
<p>The mode that results in a more sane balance of improved concurrency and retained critical database features is <strong>transaction mode</strong>. Transaction mode means your connection stays consistent as long as you’re in a transaction. Once the transaction finishes, your code <em>thinks</em> it still has real connection but PgBouncer actually releases the connection back into the pool internally. This is <em>session sharing</em>, your session is going to be shared with other connections without being reset or closed.</p>
<p>Transaction mode is a powerful concept. Your code in general has lots of database downtime. Most code does not solely operate on the database - it takes CPU cycles, interacts with files, makes network calls, and calls other data stores. During that time, your connection sits idle and unused for what in computing and database terms is an eternity. By releasing that back into the pool outside of transactions you free up your idle connection for use by a client who actually needs it. This way your 500 available connections can services thousands of clients, instead of a 1:1 with the number of available connections.</p>
<pre><code>-- connection is actually pulled from the pool inside PgBouncer
BEGIN;
INSERT INTO...;
UPDATE;
COMMIT;
-- connection goes back to the pool inside PgBouncer
</code></pre>
<p>The problem with transaction mode is that this tiny configuration change quietly changes not only your ability to scale, but also the way your connections <em>behave</em>. It breaks the expected command semantics between client and database server. And understanding whether you’ve gotten things right in transaction mode is <em>very difficult</em>.</p>
<p>Let’s say you’ve been operating with PgBouncer in session mode (or operating without a proxy at all), and you make the switch to transaction mode. Your perspective on how you can use Postgres needs to change - so now we’re onto the <em>peril</em>.</p>
<h2 id="perils">Perils</h2>
<p>Many of the following items are documented shortcomings of PgBouncer in <a href="#transaction-mode">transaction mode</a>. But:</p>
<ol>
<li>They’re treated lightly</li>
<li>Their repercussions and downsides are not discussed</li>
<li>PgBouncer is often recommended without mentioning them</li>
<li>PgBouncer is often recommended at the same time as recommending incompatible transaction mode features like session level advisory locks and session level statement timeouts</li>
<li>The non-determinism introduced by using incompatible statements is not discussed (ie, I execute a statement in Process A and suddenly Process B errors out due to it)</li>
</ol>
<p>Assume anytime I mention PgBouncer after this point I am referring to <a href="#transaction-mode">transaction mode</a>. Here we go!</p>
<h3 id="invalid-statements">Detecting invalid statements 😑</h3>
<p>PgBouncer happily accepts statements that are not supported in transaction mode. The problem is pushed onto the developer, which means they <em>can</em> and <em>will</em> get it wrong<sup id="fnref:8"><a href="#fn:8" role="doc-noteref">8</a></sup>.</p>
<p>This is by design. The sense I get is that PgBouncer was specifically architected to not analyze any statements and so it would be a big change for them to handle this<sup id="fnref:9"><a href="#fn:9" role="doc-noteref">9</a></sup>.</p>
<p>Amazon has a similar tool to PgBouncer called RDS Proxy, and it has a feature called “<a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-proxy-managing.html#rds-proxy-pinning">connection pinning</a>”. If it detects a statement that is incompatible with transaction mode, it will automatically hold that connection for that client for the duration of their session.</p>
<p>This is both highly useful and simultaneously problematic. It means query behavior is consistent with your expectations (🙌🏼) but also that you can silently kill all concurrency benefits (😑). If enough queries are run that trigger connection pinning, all of a sudden you may throttle your <a href="#throughput">throughput</a>. But it does give you an escape hatch for safely running statements which are not transaction compatible without having to jump through any hoops.</p>
<p>I’d be fine with some logging I could monitor. As far as I can tell there is nothing like this in PgBouncer, and so all the burden lands on you to get it right. As one engineer, or a few engineers, all aware of potential issues, you can probably maintain that. But what about dozens of engineers? Or hundreds? Thousands? All with varying levels of experience with databases and poolers? There’s going to be mistakes.</p>
<h3 id="lock-timeouts">Lock Timeouts (SET/RESET) 🔓</h3>
<p>Unless you <em>like</em> app downtime, you should be using a <code>lock_timeout</code> when running <a href="https://www.postgresql.org/docs/current/ddl.html">DDL</a>. It’s a critical aspect of <a href="https://medium.com/paypal-tech/postgresql-at-scale-database-schema-changes-without-downtime-20d3749ed680">zero downtime migrations</a>.</p>
<p>The idea is to set it to a limit that would be acceptable for queries in your application to slowdown by - waiting to acquire a lock can cause related queries to queue up behind your DDL operation:</p>
<pre><code>-- slow select
SELECT * FROM my_table;

-- DDL starts in separate process, blocked on acquiring the lock by the 
--    slow query
ALTER TABLE my_table...

-- Subsequent queries start queuing up...
SELECT * FROM my_table WHERE id = 123;
SELECT * FROM my_table WHERE id = 234;
--- ...
</code></pre>
<p>In that scenario, the slow query is running the show. Until it finishes, <em>all the other queries to that table are stuck</em>. That goes on long enough and users can’t use the system. A bit longer and your app starts timing out. A bit longer you’re running out of <em>connections</em>. Now you’re staring at a total app outage, about ready to kill all of your connections in a desperate attempt to salvage things, contemplating a career change to landscaping where you can at most impact one person at a time, right? That sounds nice, doesn’t it?</p>
<p>I’ve of course never experienced that. I’m just <em>very</em> creative 💀. But if <em>you</em> have experienced that, or you’d like to <em>avoid</em> experiencing that, use a <code>lock_timeout</code>:</p>
<pre><code>SET lock_timeout TO '2s';
</code></pre>
<p><em>Now</em> if your DDL cannot acquire a lock it will throw an error after 2 seconds. That should be an ok delay in running queries, and you can retry the operation later.</p>
<p>But wait! Are you connected to PgBouncer?! You may want to bring up that landscaping help-wanted listing again… 🌳</p>
<p><code>SET</code> operations apply at the <a href="#session-mode">session level</a>. This means that on a PgBouncer connection, there is no guarantee our <code>lock_timeout</code> will still be applied when we run our DDL:</p>
<pre><code>-- Process 1
-- PgBouncer pulls connection 1
SET lock_timeout TO '2s';
-- connection 1 goes back to the pool

-- Meanwhile, in Process 2:
-- PgBouncer pulls connection 3
SELECT id FROM my_table, pg_sleep(30);

-- Back in Process 1:
-- PgBouncer pulls connection 2
-- This connection has no lock_timeout set, so it will hang 
--    until our pg_sleep query finishes 30 seconds later, and all
--    queries to my_table after it are stuck for those 30 seconds as well
ALTER TABLE my_table...
</code></pre>
<p>It’d be easy to argue “don’t have slow queries”. And that should be the goal! But we don’t call it “happy path uptime 🌼”, we call it “<em>zero</em> downtime”. It means even if things go wrong, you don’t go down. There can also be other operations that hold a lock on your table, so you simply can’t rely on successfully acquiring that lock<sup id="fnref:10"><a href="#fn:10" role="doc-noteref">10</a></sup>.</p>
<p>So what can we do? There are two options:</p>
<ol>
<li>Bypass PgBouncer and go straight to the database</li>
<li>Use a transaction level <code>lock_timeout</code></li>
</ol>
<h4 id="bypassing-pgbouncer">Bypassing PgBouncer</h4>
<p>Your safest bet is to go with option (1). You should have some ability to directly connect to your database, so take advantage of it and don’t jump through hoops to run DDL safely.</p>
<p>The biggest obstacle you hit with (1) is <a href="#transparency">transparency</a>: PgBouncer <em>really</em> doesn’t want you to know whether you are connected to the real database or not. There’s no <em>easy</em> answer there, but by validating a setup where you consistently run your DDL process directly against Postgres then you’re set.</p>
<h4 id="use-transaction-level-statements">Use transaction level statements</h4>
<p>There is a transaction local equivalent to the <code>SET</code> statement: <code>SET LOCAL</code>. Using our example from earlier:</p>
<pre><code>-- Process 1
-- PgBouncer pulls connection 1
BEGIN;
SET LOCAL lock_timeout TO '2s';
-- connection 1 stays checked out

-- Meanwhile, in Process 2:
-- PgBouncer pulls connection 3
SELECT id FROM my_table, pg_sleep(30);

-- Back in Process 1:
-- Connection 1 is still checked out
ALTER TABLE my_table...
-- lock_timeout raises an error after 2 seconds waiting, and 
--    we avoid our downtime!
</code></pre>
<p>DDL in Postgres is transactional, so it’s valid to start our transaction, set our <code>lock_timeout</code> using <code>SET LOCAL</code>, then start our DDL operation. Our transaction local setting will stick with us until the transaction commits or rolls back, so we safely keep our timeout and rollback our DDL.</p>
<p>It’s not a <em>terrible</em> solution (1 is still better), except for two things:</p>
<ol>
<li>Concurrent indexes</li>
<li>Tooling</li>
</ol>
<p>Another zero downtime star is the concurrent index. When you create a new index on a table you run the chance of locking it up long enough to cause downtime. Here’s the answer to that problem:</p>
<pre><code>CREATE INDEX CONCURRENTLY index_name ON my_table;
</code></pre>
<p>Concurrent indexes are created without an exclusive lock, so your normal operations keep going while it builds the index in the background. The <em>problem</em> is they can’t be run in a transaction, so <code>SET LOCAL</code> is not an option.</p>
<p>Because they don’t require an exclusive lock, setting a <code>lock_timeout</code> is less important. But if there is contention and you just can’t get that index to acquire it’s shared lock, do you really want it to run forever?</p>
<p>As for (2), popular tooling usually does not handle <code>SET LOCAL</code> for you. In the Rails/ActiveRecord world there are several libraries that will automatically apply zero downtime policies for you, but they all assume you have an exclusive connection and operate at the <code>SET</code> session level.</p>
<p><a href="https://en.m.wikipedia.org/wiki/The_road_to_hell_is_paved_with_good_intentions">In PgBouncer, the road to downtime is paved with session level statements</a>.</p>
<p>Just go with (1), keep your sanity, throw away the diary entries about living out your days breathing in the smell of fresh cut grass, and connect directly to Postgres to run DDL with <code>SET lock_timeout</code> calls.</p>
<h3 id="statement-timeouts">Statement timeouts (SET/RESET) ⏳</h3>
<p>Determined not to repeat your experiences from <code>lock_timeout</code>, you read about this thing called <code>statement_timeout</code>. This little magic wand makes it so you control how long a statement is allowed to run 🪄.</p>
<p>So here it is:</p>
<pre><code>SET statement_timeout TO '2s';
</code></pre>
<p>Those greedy queries now don’t stand a chance. You can tame your long running queries and avoid blocking your DDL! You ignore my advice to always use <code>lock_timeout</code>, say “bye losers” to long running queries, and fire off that DDL again… oh god. Why are things slowing down. Now they’re timing out. <em>The connections are filling up.</em> What is <em>happening?</em></p>
<p><img src="https://media.tenor.com/MYZgsN2TDJAAAAAC/this-is.gif" alt=""></p>
<p>Oh riiiight. You forgot. You’re using PgBouncer. <code>SET</code> is off the table. Should have set that <code>lock_timeout</code> 🔐…</p>
<p>If I had a nickel for every time someone mentioned <code>SET statement_timeout</code> and PgBouncer in the same article…<sup id="fnref:11"><a href="#fn:11" role="doc-noteref">11</a></sup> I know no one sharing this content is doing it maliciously, but be aware that these are misleading and incompatible features.</p>
<h4 id="with-lock_timeout-why-does-statement_timeout-even-matter">With lock_timeout, why does statement_timeout even matter?</h4>
<ul>
<li>Statement timeouts are helpful for long running queries so they cancel earlier. If a client disconnects, Postgres will periodically check for the connection and try to cancel the query when it goes away. But a query <a href="https://dba.stackexchange.com/a/81424/256107">with runaway cpu</a> usage will just keep running even if the client dies or disconnects. That means you lose that connection until the query finishes, which can take minutes (or hours)</li>
<li>The database default is 0, which means there is no limit. In some contexts this is not a problem, but particularly for web requests this is excessive</li>
</ul>
<p>The first time I used <code>statement_timeout</code> was from a blog recommendation to limit statements for requests in web applications. In a web request, you usually have an upper limit on how long you allow them to run before they time out - this conserves resources, protects against runaway buggy code and helps with bad actors. It made sense that I’d set it to something conservative on all my web connections to deal with long running queries.</p>
<p>I deployed the code and for a little while things seemed to work well. Then I saw something odd. This started popping up:</p>
<pre><code>canceling statement due to statement timeout
</code></pre>
<p>But in my… <em>background jobs</em>? My web requests were tuned to be fast, but the constraints around my background processes were a bit… looser. Can you guess what I had recently enabled? PgBouncer in transaction mode. My session level statement timeout was being swapped out from my web request, picked up by my job, and caused my job to timeout instead - web request safety was off the rails and longer running jobs were intermittently failing.</p>
<p>So is there any way we can use it? There’s a couple ways I know of, but nothing great when pooling.</p>
<h4 id="our-old-friend-transaction">Our old friend transaction</h4>
<pre><code>BEGIN;
SET LOCAL statement_timeout '5s';
SELECT ...
COMMIT;
</code></pre>
<p>Something about wrapping a SELECT in a transaction feels kind of strange, but it works. If you have targeted concerns, you can wrap particular queries in a transaction and use <code>SET LOCAL</code> to localize the <code>statement_timeout</code>.</p>
<p>This is absolutely not a viable solution for a whole request lifecycle. If I wanted to attempt my web request level timeouts again, no way am I wrapping every web request in one giant transaction. Postgres doesn’t have a concept of nested transactions so any code I have that may be operating transactionally is gonna be in for some confusing surprises<sup id="fnref:12"><a href="#fn:12" role="doc-noteref">12</a></sup>. And most importantly, wrapping my whole request in a transaction means I’ve completely negated the benefit of proxy pooling - now my request lifecycles are basically 1:1 with my connection sessions.</p>
<h4 id="apply-statement-timeouts-per-user">Apply statement timeouts per user</h4>
<p>I’ve never tried it, but I’ve seen it recommended to set statement timeouts per user when using PgBouncer. That seems to have a couple problems I can think of:</p>
<ol>
<li>It’s not dynamically configurable.</li>
<li>It dilutes the pool of available connections per context</li>
</ol>
<p>(1) is definitely inconvenient. If you have different contexts where you’d like to apply different timeout constraints, this would be way too cumbersome to maintain.</p>
<p>But (2) <em>feels</em> like a deal breaker. If I want to constrain my web requests to a conservative timeout, but give my background processes more wiggle room, my pool size of real connections is now split instead of sharing a pool of total available database connections. I also have to manage making sure each context uses the appropriate user, or things will go badly.</p>
<p>It’s technically an option, but seems trickier to maintain and monitor.</p>
<h3 id="transparency">Transparency 👻</h3>
<p><img src="https://media2.giphy.com/media/xT5LMN0UgalbScp6uI/giphy.gif?cid=6c09b952f7248c90c21812529981462733f1d648a5076839&amp;rid=giphy.gif&amp;ct=g" alt=""></p>
<blockquote>
<p>I don’t understand why my session features aren’t working. I always make sure to use plenty of Postgr…PgBouncer?!</p>
</blockquote>
<p>It is very difficult to tell when you are or aren’t using PgBouncer, <a href="https://github.com/pgbouncer/pgbouncer/issues/249">which is unfortunately by design</a>. It considers itself a transparent proxy. In <a href="#session-mode">session mode</a>, that’s pretty much true. But in <a href="#transaction-mode">transaction</a> and <a href="#statement-mode">statement</a> mode you are working with bizarro Postgres. It all works the same except when it doesn’t.</p>
<p>So if you want a regular connection because you need a feature not available in transaction mode, being sure you did it right is extremely difficult.</p>
<p>I have had a hell of a time verifying that some servers are or aren’t running with PgBouncer. Server A is using pub sub, I don’t want it. Server B needs the throughput, I want it. How can I make sure someone never makes a mistake and attaches the server to the wrong place? Basically, I can’t.</p>
<p>When it comes to production code I like to be paranoid. On a large enough codebase, and team, and user base, unusual things are bound to happen, sometimes regularly. I try to write code and configure environments so the right way is easy and the wrong way is hard. PgBouncer does not make that easy.</p>
<p>On this particular point I’d love to say I have some kind of advice to act on, but it mostly takes testing and validating your setup. If someone out there has better ideas or tips, I am all ears.</p>
<h3 id="prepared-statements">Prepared Statements (PREPARE/DEALLOCATE, Protocol-level prepared plans) ✔️</h3>
<p>PgBouncer has a public relations problem when it comes to prepared statements. This is all the <a href="https://www.pgbouncer.org/features.html">PgBouncer docs say</a> about them:</p>
<table>
	<thead>
		<tr>
			<th>
				Feature
			</th>
			<th>
				Session pooling
			</th>
			<th>
				Transaction pooling
			</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				`PREPARE` / `DEALLOCATE`
			</td>
			<td>
				Yes
			</td>
			<td>
				Never
			</td>
		</tr>
		<tr>
			<td>
				Protocol-level prepared plans
			</td>
			<td>
				Yes
			</td>
			<td>
				No*
			</td>
		</tr>
	</tbody>
</table>
<blockquote>
<p>* It is possible to add support for that into PgBouncer</p>
</blockquote>
<p>Kind of feels… alarming. No prepared statements in transaction mode?! Aren’t those… important? Even further when you go to use PgBouncer with Hibernate or ActiveRecord (and I’m sure others) you’ll see the recommendation to configure them to <em>turn off</em> prepared statements 😱. Does it surprise you a bit to hear that? Make you feel a little queasy maybe?</p>
<p>I had it drilled into me early in my career that prepared statements are a critical part of protecting against SQL injection. In the <a href="https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html">OWASP SQL Injection Prevention Cheatsheet</a> the very first recommendation is:</p>
<ul>
<li><strong>Use of Prepared Statements (with Parameterized Queries)</strong></li>
</ul>
<p>So PgBouncer tells me I need to <em>turn them off?</em></p>
<p><img src="https://thumbs.gfycat.com/AstonishingEarlyHornet-size_restricted.gif" alt=""></p>
<p>The first time I used PgBouncer in an application I spent <em>a lot</em> of time figuring out how turning off prepared statements was safe to do. It turns out that prepared statements in Postgres mean a few things, but come down to two main options:</p>
<ol>
<li>Named prepared statements</li>
<li>Unnamed prepared statements</li>
</ol>
<p><em>Named</em> prepared statements are reusable, and are tied to the connection session.</p>
<p><em>Unnamed</em> prepared statements are single use, and have no association to the connection session.</p>
<p>There are two ways to create a <em>named</em> prepared statement and one way to create an <em>unnamed</em> prepared statement:</p>
<ol>
<li><code>PREPARE</code></li>
<li>Protocol-level Parse/Bind/Execute with a name specified</li>
<li>Protocol-level Parse/Bind/Execute with no name specified</li>
</ol>
<p>PgBouncer says it doesn’t support prepared statements in either <code>PREPARE</code> or protocol-level format. What it <em>actually</em> doesn’t support are <em>named</em> prepared statements in any form. That’s because named prepared statements live in the session and in <a href="#transaction-mode">transaction mode</a> you can switch sessions.</p>
<pre><code>-- PgBouncer pulls connection 1
PREPARE bouncer_since (int, timestamp) AS
SELECT * 
FROM bouncers b
INNER JOIN guests g ON g.bouncer_id = b.id
WHERE b.id = $1 AND b.created &gt; $2;
-- connection 1 goes back to the pool

-- PgBouncer pulls connection 2
EXECUTE bouncer_since(1, now() - INTERVAL '2 days');
-- 💣 ERROR: prepared statement "bouncer_since" does not exist 💣
</code></pre>
<p>But <em>unnamed prepared statements are totally fine</em>. In fact, I’d be shocked if the current client library you’re using to connect to Postgres does not already switch to them if “prepared statements” (again, so damn misleading) are “turned off”.</p>
<p>But wait. What the heck is an unnamed statement? <code>PREPARE</code> <em>requires</em> a name… how can I make a prepared statement without a name?</p>
<h4 id="protocol-level-prepared-plans">Protocol-level prepared plans</h4>
<p><img src="https://media0.giphy.com/media/P5wPrhzZDdeJW/giphy.gif?cid=6c09b95256738d3ee35e24f988a790f60659836b97f75ee8&amp;rid=giphy.gif&amp;ct=g" alt=""></p>
<p>The alternative to the <code>PREPARE</code> statement is to directly communicate with Postgres at the protocol level.</p>
<p>I had to dig a bit to get a handle on this - I started from a common Ruby ORM called ActiveRecord, dug into the Ruby “pg” gem <em>it</em> uses, then went one layer deeper into <code>libpq</code>, which is part of Postgres itself.</p>
<p>If we use active record as an example, <a href="https://guides.rubyonrails.org/configuring.html#configuring-a-postgresql-database">when prepared statements are “disabled”</a>, the postgres adapter internally calls <code>exec_no_cache</code> in <code>activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb</code>:</p>
<pre><code>def exec_no_cache(sql, name, binds...)
  #...
  conn.exec_params(sql, type_casted_binds)
</code></pre>
<p>That’s powered by the ruby “pg” gem, which when calling <code>exec_params</code> from ruby ultimately calls into the <code>libpq</code> function <code>PQsendQueryParams</code>:</p>
<pre><code>// Ruby "pg" gem
// ext/pg_connection.c
static VALUE
pgconn_async_exec_params(int argc, VALUE *argv, VALUE self) {}

// internally calls...
static VALUE
pgconn_send_query_params(int argc, VALUE *argv, VALUE self) {}

// internally calls this from the libpq c postgres internals:
// src/interfaces/libpq/fe-exec.c
int PQsendQueryParams(PGconn *conn,
  const char *command,
  int nParams,
  const Oid *paramTypes,
  const char *const *paramValues,
  const int *paramLengths,
  const int *paramFormats,
  int resultFormat) {}
</code></pre>
<p>What does <code>PQsendQueryParams</code> do? It calls an internal method named <code>PQsendQueryGuts</code>. Notice the empty string and <code>use unnamed statement</code> comment 🤔.</p>
<div><pre tabindex="0"><code data-lang="c"><span>return</span> <span>PQsendQueryGuts</span>(conn,
    command,
    <span>""</span>, <span>/* use unnamed statement */</span>
    nParams,
    paramTypes,
    paramValues,
    paramLengths,
    paramFormats,
    resultFormat);
</code></pre></div><p>What does <em>that</em> function do (aside from making me laugh every time I read the name <code>PQsendQueryGuts</code> 😆)? Internally <code>PQsendQueryGuts</code> communicates with Postgres at the protocol level:</p>
<pre><code>/* construct the Parse message */
if (pqPutMsgStart('P', conn) &lt; 0 ||
  pqPuts(stmtName, conn) &lt; 0 ||
  pqPuts(command, conn) &lt; 0) {}

/* Construct the Bind message */
if (pqPutMsgStart('B', conn) &lt; 0 ||
  pqPuts("", conn) &lt; 0 ||
  pqPuts(stmtName, conn) &lt; 0) {}

/* construct the Execute message */
if (pqPutMsgStart('E', conn) &lt; 0 ||
  pqPuts("", conn) &lt; 0 ||
  pqPutInt(0, 4, conn) &lt; 0 ||
  pqPutMsgEnd(conn) &lt; 0) {}
</code></pre>
<p>This is the Parse/Bind/Execute process I mentioned earlier.</p>
<ul>
<li>The code sends a <strong>P</strong>arse message with the query and an optional name. In our case the name is empty</li>
<li>The code then <strong>B</strong>inds params to that query (if the query is parameterized)</li>
<li>It then <strong>E</strong>xecutes using the combination of the parsed query and the bound params</li>
</ul>
<p>This is perfectly safe to do in transaction mode, and from a SQL safety perspective should behave identically to a named prepared statement.</p>
<h4 id="named-protocol-level-statements">Named protocol-level statements</h4>
<p>For comparison, when ActiveRecord has prepared statements turned on, things <em>look</em> a bit different, but by the end we’re in the same place:</p>
<pre><code>def exec_cache(sql, name, binds...)
  #...pseudo coded a bit but importantly
  #   it calls `prepare`
  if !cached
    stmt_key = conn.prepare(sql)
  # then it calls exec_prepared
  conn.exec_prepared(stmt_key, type_casted_binds)
</code></pre>
<p>It first has to call <code>prepare</code> with whatever sql we’re going to run. The caller is in charge of keeping track of whether the sql has been prepared before, otherwise Postgres will keep overwriting our previous sql and it might as well just execute an unnamed statement. Then it calls <code>exec_prepared</code> with only the <code>stmt_key</code>, which should match the name of a previously prepared query.</p>
<p>If we skip ahead to what gets called in <code>libpq</code>:</p>
<pre><code>// conn.prepare(sql)
int
PQsendPrepare(PGconn *conn,
    const char *stmtName, 
    const char *query,
    int nParams, 
    const Oid *paramTypes) {
  //...
  if (pqPutMsgStart('P', conn) &lt; 0 ||
      pqPuts(stmtName, conn) &lt; 0 ||
      pqPuts(query, conn) &lt; 0) {}
  //...
}
</code></pre>
<p>We see something similar to our earlier Parse/Bind/Execute, but now we’re <em>only</em> calling the <strong>P</strong>arse portion and this time we have a <code>stmtName</code>. We then trigger the prepared statement calling <code>exec_prepared</code>, which ultimately calls <code>PQsendQueryPrepared</code>:</p>
<pre><code>// conn.exec_prepared(stmt_key, type_casted_binds)
int
PQsendQueryPrepared(PGconn *conn,
    const char *stmtName,
    int nParams,
    const char *const *paramValues,
    const int *paramLengths,
    const int *paramFormats,
    int resultFormat) {
  //...
  return PQsendQueryGuts(conn,
      NULL,     // no sql
      stmtName, // named
      nParams,
      NULL,
      paramValues,
      paramLengths,
      paramFormats,
      resultFormat);
  //...
}
</code></pre>
<p>Anything look familiar? That’s the same <code>PQsendQueryGuts</code> function we called for the unnamed statement! This time it doesn’t hand a <code>command</code> in because we already parsed our SQL in the earlier <code>prepare</code> call. We also have a <code>stmtName</code> defined, instead of handing in an empty string. This version goes on to skip the <strong>P</strong>arse, call the <strong>B</strong>ind with the <code>stmtName</code>, then call <strong>E</strong>xecute - same flow as our unnamed version.</p>
<p>For SQL injection safety, both named and unnamed versions are equivalent: they separate query structure (Parse) from data values (Bind). Adding query bindings when not in a prepared statement simply makes an unnamed statement.</p>
<p>Nothing about these calls is specific to the <code>libpq</code> library, it’s just a rock solid implementation of them<sup id="fnref:13"><a href="#fn:13" role="doc-noteref">13</a></sup> - any language could make the same protocol calls. If a library is utilizing this protocol, they are doing the same things when binding to an unnamed prepared statement as they are when binding to a named prepared statement<sup id="fnref:14"><a href="#fn:14" role="doc-noteref">14</a></sup>.</p>
<p>As long as your code uses parameterized queries, “turning off” prepared statements for PgBouncer is safe, even if it seems a bit unnerving. There is a <a href="https://github.com/pgbouncer/pgbouncer/pull/757">PR to allow PgBouncer to track prepared statements</a>, so maybe this won’t cause people like me as much heartburn in the future 🥲.</p>
<h3 id="throughput">Pool throughput / Long running queries 🏃‍♂️</h3>
<p>We’ve got two types of connections to Postgres: active and idle. Idle connections are the backbone of poolers - having idle connections means we’ve got capacity to swap around transactions for connected clients. What about active connections?</p>
<p>An active connection means that connection is actively tied up by the database. For that timespan, the connection cannot be swapped out to do anything else until its operation completes. We know that active connections get expensive quickly, and we also know that most managed services range somewhere from 50 to 500 allowed total, non-pooled connections.</p>
<p>Using a max PgBouncer connection pool of 10k and Render’s managed Postgres service with a max of 397 total connections means we’d have:</p>
<p>10000 / 397 = ~25 connections per active connection</p>
<p>Using Supabase’s 50 connections the spread is even higher:</p>
<p>10000 / 50 = ~<em>200</em> connections per active connection</p>
<p>That means that for every long running operation, you are potentially down 200 connections worth of pooling.</p>
<p>These numbers are very back of the napkin and of course do not represent the true scaling capability and connection handling of a real pooler. But the point is this:</p>
<ul>
<li>Active connections are very valuable to a pooler</li>
<li>Long running queries disproportionally impact concurrency</li>
</ul>
<p>As an example, you’re using Render Postgres fronted by PgBouncer and you’ve got 10k available connections backed by the max of 397 Postgres connections. Let’s say a new feature is introduced for populating some graph data on your app’s landing page. It’s powered by a new query that looks great, has indexes, and seems well optimized. It’s even run against some load testing and representatively sized data as a QA check. It gets deployed to production and <em>OOF, it’s taking 15 seconds per query</em> 🐌. Users are logging in or navigating to the landing page all the time so within moments you’ve had thousands of hits to this query. Obviously this is going to get quickly rolled back, but what does it mean for your pool in the meantime?</p>
<p><img src="https://media1.giphy.com/media/137TKgM3d2XQjK/giphy.gif?cid=6c09b952ebbb45e59739e8c9dd3ca08d23031a7fe573cd54&amp;rid=giphy.gif&amp;ct=g" alt=""></p>
<p>It means you’re maxed out. Your pooler being there means at least you’re less likely to start erroring out right away, but transaction mode can’t fix a stuck query. For each of those 15 second chunks of time your concurrency basically went from 10k back down to 397.</p>
<p>This is not the general behavior you’ll see when using PgBouncer unless you’ve really got some intermittent trouble with runaway queries. But it does emphasize an important point to remember: these are not real Postgres connections. Your upper bound on long running, active queries is always constrained by your actual pool of real Postgres connections.</p>
<h4 id="guarding-against-slow-queries">Guarding against slow queries</h4>
<ul>
<li><a href="https://www.crunchydata.com/blog/logging-tips-for-postgres-featuring-your-slow-queries">Log your slow queries</a> using <code>log_min_duration_statement</code>. This option lets you set a threshold and if queries take long than that threshold Postgres will log the offending query. This won’t help the sudden mass slow query situation mentioned above, but it helps to keep an eye on overall app query health</li>
<li>Use <a href="https://www.postgresql.org/docs/current/libpq-single-row-mode.html">streaming queries</a> sparingly. In most client libraries you can set your query to run in “single row mode”. This means you retrieve your rows one at a time instead of getting one big result set at once. This is helpful for efficiency with very large result sets but is slower than a full result set query, and probably means you are running queries large enough to be slower in the first place</li>
<li>Use <a href="#statement-timeouts">statement timeouts</a>. This is tricky, especially when pooling, but see that section for ideas on how to approach it</li>
<li>Spread out reads across read replicas</li>
</ul>
<h3 id="session-level-locks">Session Level Advisory Locks 🔐</h3>
<p>Session level advisory locks work fine in PgBouncer.</p>
<p><img src="https://i.gifer.com/7DWJ.gif" alt=""></p>
<p>Sorry 🙈.</p>
<p>If you’ve read the previous sections you’ve already picked up on the pattern: “session” anything means it probably doesn’t work in <a href="#transaction-mode">transaction mode</a>. But what does that matter to you?</p>
<p>Advisory locks are a great option for creating simple, cross process, cross server application mutexes based on a provided integer key. Unlike traditional locks you use/encounter elsewhere in Postgres which are tied to tables or rows, advisory locks can be created independent of tables to control application level concerns. There are plenty of other tools you could use for this job outside of Postgres, but since Postgres is already part of your tech stack it’s a convenient and simple option.</p>
<p>Across languages a common use case for session level advisory locks is to hold a lock while database migrations (ie, DDL) are being run. For example:</p>
<pre><code>-- 1234 is arbitrary, it can be any integer
SELECT pg_advisory_lock(1234);
SET lock_timeout TO '1s';
ALTER TABLE my_table...;
INSERT INTO migrations VALUES (1234567);
-- If we don't explicitly unlock here, the lock will be held until this 
--    connection is closed
SELECT pg_advisory_unlock(1234);
</code></pre>
<p>If another connection went to acquire the same lock, it would be blocked:</p>
<pre><code>-- This will block indefinitely until the other connection is closed, 
--    or calls pg_advisory_unlock(1234)
SELECT pg_advisory_lock(1234);
</code></pre>
<p>This is largely an attempt to improve consistency of migration tracking, and help coordinate multi process deploys:</p>
<ul>
<li>Continuous deployment with the potential to trigger multiple deployments in succession</li>
<li>Propagating code changes to multiple servers with deploy scripts automatically triggering migrations in each context</li>
</ul>
<p>By waiting to acquire a lock at the Postgres level, each process waits for the first lock owner to finish before continuing, coordinating each process based on a shared lock key.</p>
<h3 id="once-more-with-strikefeelingstrike-pgbouncer">Once more, with <strike>feeling</strike> PgBouncer</h3>
<p>Now for the obligatory example of trying the same thing when connected to PgBouncer 🫠:</p>
<pre><code>-- Grab the lock on connection 1
SELECT pg_advisory_lock(1234);
-- Connection 1 goes back into pool
-- ...
-- Try to unlock on connection 2, which does not own the 1234 lock
SELECT pg_advisory_unlock(1234);
-- WARNING: you don't own a lock of type ExclusiveLock
</code></pre>
<p>We try to unlock, but because we’re on a different connection we can’t. The lock stays locked for as long as connection 1 stays alive, which means now no one else can acquire that lock unless that connection naturally closes at some point or is explicitly <code>pg_cancel_backend</code>ed 😓.</p>
<h3 id="more-session-advisory-lock-use-cases">More session advisory lock use cases</h3>
<p>Outside of migrations, advisory locks can serve other use cases:</p>
<ul>
<li>Application mutexes on sensitive operations like <a href="https://rclayton.silvrback.com/distributed-locking-with-postgres-advisory-locks">ledger updates</a></li>
<li><a href="https://jeremydmiller.com/2020/05/05/using-postgresql-advisory-locks-for-leader-election/">Leader election</a> for maintaining a single but constant daemon operation across servers</li>
<li>Exactly once run job controls for Postgres based job systems like <a href="https://github.com/bensheldon/good_job">GoodJob</a> and <a href="https://github.com/que-rb/que">Que</a></li>
</ul>
<p>If these things sound interesting or useful, they are! But only if you connect directly to Postgres.</p>
<h4 id="transaction-level-locks">Transaction level locks</h4>
<p>Advisory locks do have a transaction based companion:</p>
<pre><code>-- Process 1
BEGIN;
SELECT pg_advisory_xact_lock(1234);

-- Process 2 
-- Blocks while process 1 is in the transaction
SELECT pg_advisory_lock(1234);

-- Back in Process 1
SET LOCAL lock_timeout TO '1s';
ALTER TABLE my_table...;
INSERT INTO migrations VALUES (1234567);
COMMIT; -- automatically unlocks on commit or rollback
-- Process 2 now can acquire the lock

-- If you need to manually unlock while still in the transaction 
-- SELECT pg_advisory_xact_unlock(1234);
</code></pre>
<p>You could use it as a replacement for certain scenarios, like the above migration operating transactionally. For custom purposes, it’s a good alternative!</p>
<p>Unfortunately most migration tooling, things like leader election, and request or job lifetime locks, all use or require a longer lived lock than a single transaction could reasonably provide.</p>
<h4 id="turn-off-advisory-migration-locks">Turn off advisory migration locks</h4>
<p>If you need to run migrations against PgBouncer, in Rails you can turn them off with an <code>advisory_locks</code> flag in <code>database.yml</code>. Other migration tools likely have something similar. Do it at your <em>own</em> peril 🤷🏻‍♂️</p>
<h4 id="maintaining-a-separate-direct-connection-to-postgres">Maintaining a separate direct connection to Postgres</h4>
<p>If the lock is critical, but the operations past the lock fan out and acquire multiple connections, you could potentially have two pieces:</p>
<ul>
<li>A direct connection to Postgres where you acquire a session level advisory lock</li>
<li>Your normal <a href="#framework-pool">code level connection pooling</a> using your PgBouncer connections so it can capitalize on the scaling opportunities provided there</li>
</ul>
<p>There’s an obvious downside - you’re consuming an extra direct connection and potentially impacting <a href="#throughput">throughput</a> - but it’s an alternative available if needed.</p>
<h3 id="listen-notify">Listen / Notify 📣</h3>
<p>Postgres comes out of the box with a handy pub/sub feature called <a href="https://www.postgresql.org/docs/current/sql-listen.html">LISTEN</a>/<a href="https://www.postgresql.org/docs/current/sql-notify.html">NOTIFY</a>.</p>
<p>You simply call:</p>
<pre><code>LISTEN channel_name;
</code></pre>
<p>And that connection will receive <code>NOTIFY</code> events:</p>
<pre><code>NOTIFY channel_name, 'hi there!';
</code></pre>
<p>Like session level advisory locks, there are more robust pub/sub solutions out there. But the Postgres implementation works well, and you already have it available in your stack.</p>
<p>Looking at the example, you’ll notice that the <code>LISTEN</code> call is just a single statement, and it activates the listener for the current session. What have we said so many times already? Sessions bad. Transactions good… kind of.</p>
<h4 id="kind-of">kind of?</h4>
<p>Similar to prepared statements, the docs are misleading when it comes to <code>LISTEN</code>/<code>NOTIFY</code>.</p>
<p>PgBouncer officially lists <code>LISTEN</code>/<code>NOTIFY</code> as an unsupported feature in transaction mode, which is not precisely true. <code>LISTEN</code> does not work in transaction mode, but <code>NOTIFY</code> does.</p>
<p><code>NOTIFY</code> is a single statement, and doesn’t rely on any session semantics. It’s also transactional<sup id="fnref:15"><a href="#fn:15" role="doc-noteref">15</a></sup>:</p>
<pre><code>BEGIN;
NOTIFY channel_name, 'hi!';
ROLLBACK; -- no notification is sent
</code></pre>
<p>Both <code>NOTIFY</code> formats (inside and outside a transaction) work fine with transaction mode pooling. If you want to use pub/sub, you just need to make sure your <code>LISTEN</code>er is connected directly to Postgres. Since <a href="#transparency">it can be hard to tell if you’re connected to Postgres or PgBouncer</a> this is somewhat tricky, unfortunately.</p>
<p>I’ve built implementations <code>LISTEN</code>ing on a non-PgBouncer connection and <code>NOTIFY</code>ing on PgBouncer that work fine. There’s not much writing on this, but I have found this approach to work well.</p>
<h3 id="single-threaded">The single thread 🪡</h3>
<p>In contrast to the multi process monster that is Postgres, PgBouncer runs on a paltry single process with a single thread.</p>
<p>This means that no matter how capable a server is, PgBouncer is only going to utilize a max of one CPU core so once <a href="https://news.ycombinator.com/item?id=17187436">you’ve maxed out on that core</a> you can’t scale that single instance anymore.</p>
<p>A popular option is to <a href="https://www.crunchydata.com/blog/postgres-at-scale-running-multiple-pgbouncers">load balance PgBouncer instances</a>. Otherwise, almost every alternative to PgBouncer (like Odyssey, PgCat and Supavisor) utilize multiple cores.</p>
<p>If you’re using a managed Postgres service (like Crunchy Data, Supabase, Neon or Heroku), your default option is going with PgBouncer as a connection pooler - so it will be up to those services to offer a load balanced option.</p>
<h3 id="pg_dump">pg_dump 🚮</h3>
<p>If you’re running <code>pg_dump</code> against PgBouncer, it’s probably by mistake.</p>
<p>As far as I can tell, <code>pg_dump</code> is broken when run against PgBouncer. See <a href="https://github.com/pgbouncer/pgbouncer/issues/452">https://github.com/pgbouncer/pgbouncer/issues/452</a>.</p>
<p>The answer here is to make sure you’re using a direct connection to Postgres for utility operations like <code>pg_dump</code>.</p>
<h3 id="unavailable">Other unavailable features 🫥</h3>
<p><img src="https://media0.giphy.com/media/VCZgfe90H1tMTAW6n4/giphy.gif?cid=6c09b9526e2d6dfd051e5257c6dbce5ac862293219ad6e76&amp;rid=giphy.gif&amp;ct=g" alt=""></p>
<p>There are some remaining features which transaction mode is incompatible with as well<sup id="fnref:16"><a href="#fn:16" role="doc-noteref">16</a></sup>. I have less or no experience with these:</p>
<ul>
<li><code>WITH HOLD CURSOR</code> - A <code>WITH HOLD</code> continues to exist outside of a transaction, which seems like it could have handy use cases but I’ve never personally used it in my day to day.</li>
<li>PRESERVE/DELETE ROWS temp tables - temporary tables are a session level feature so will not work properly, and preserve/delete rows are modifiers on how those temporary tables behave on commit, and are unsupported</li>
<li>LOAD statement - this is for loading shared libraries into Postgres, so it makes sense this is not something you should be doing through a pooler. I haven’t actually tried, so I’m not sure if PgBouncer would stop you, but it requires super user privileges so it’s very unlikely that’s what your PgBouncer user has</li>
</ul>
<p>PgBouncer documents a simple “<a href="https://www.pgbouncer.org/features.html">SQL feature map for pooling modes</a>” where you can see all the features mentioned in this post.</p>
<h2 id="linting">Linting 🧶</h2>
<p>Aside from having identified potential issues - what can we do to avoid them in an automated way?</p>
<p>Surprisingly, not much exists. And by not much, I mean i’ve found nothing outside of advice.</p>
<p>It makes me feel a bit like I’m exaggerating the importance of these issues. Maybe I’m the oddball that has actually encountered many of them in real production usage and had to address them. I’ve had statement timeouts and lock timeouts misapplied. I’ve had to deal with rearranging connections because of code using a session advisory lock and <code>LISTEN</code>/<code>NOTIFY</code>, or drop libraries that use them. I’ve had to remember to turn off prepared statements in my ORM to avoid named prepared statement errors.</p>
<p>The implications can feel small, but they can be surprising and particularly around migrations can cause real serious downtime.</p>
<p>We lint everywhere. As engineers we try to automate away as many mistakes as possible with linting and specs. As development teams grow, the importance of automation becomes critical to scaling because otherwise someone somewhere is going to do the wrong thing and it won’t get caught.</p>
<p>Some ideas that would be great to see:</p>
<ul>
<li>PgBouncer optional process that detects bad queries and logs them</li>
<li>RDS connection pinning behavior</li>
<li>Static analysis tools for app queries</li>
<li>Runtime extension to client libraries</li>
<li>Making sure your development flow runs PgBouncer locally to try and encounter this behavior before running on production</li>
</ul>
<p>In the rails world there are <a href="https://github.com/braintree/pg_ha_migrations">several</a> <a href="https://github.com/doctolib/safe-pg-migrations">active</a> <a href="https://github.com/ankane/strong_migrations">gems</a> devoted to keeping a codebase safe from issues that would cause downtime while migrating tables (ie, zero downtime). But across ecosystems I could not find anything related to protecting against PgBouncer issues.</p>
<p>As a step in this direction, I’ve published a (currently experimental) gem for use in Rails/ActiveRecord apps called <a href="https://rubygems.org/gems/pg_pool_safe_query">pg_pool_safe_query</a>. It will log warnings if SQL is run that is incompatible with PgBouncer and raise an error if advisory locks and prepared statements are not disabled.</p>
<h2 id="future-improvements">Can we improve connections without a pooler?</h2>
<p>A more recent development in Postgres 14 was improvements to <a href="https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/analyzing-the-limits-of-connection-scalability-in-postgres/ba-p/1757266">snapshot scalability</a>, which seem to have resulted in big improvements in efficiently <a href="https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/improving-postgres-connection-scalability-snapshots/ba-p/1806462#first-performance-improvements">maintaining more idle connections</a> in Postgres.</p>
<p>It’s exciting to see effort being applied to increasing connection efficiency in Postgres itself. The author of that snapshot scalability improvement lines up with my own frustrations:</p>
<ul>
<li>Ideally Postgres would better handle traffic spikes without requiring a pooler</li>
<li>Poolers cut out useful database features</li>
<li>Postgres itself would ideally move towards architecture changes across several key areas, eventually culminating in a larger move towards a lighter weight process/thread/async model which better aligns with the C10k problem out of the box</li>
</ul>
<p>Most of the work in the industry <em>seems</em> to concentrate on building better poolers, rather than improving the internals of Postgres connection handling itself<sup id="fnref:17"><a href="#fn:17" role="doc-noteref">17</a></sup>. Outside of PgBouncer you’ve got RDS Proxy, Odyssey, PgCat, Supavisor, PgPool II and I’m sure others. All have their own benefits but suffer from the same transactional scaling limitations.</p>
<p>In fairness to the <em>incredible</em> work that goes into Postgres - every performance improvement they make in every new version is also a connection scalability improvement. If the queries, indexes, plans, and processes are making big performance gains with each version then less connections can do more.</p>
<h2 id="alternatives">PgBouncer alternatives</h2>
<p>There are alternatives to PgBouncer, but the same transaction limitations apply to all of them: each has a transaction mode (or operate exclusively in transaction mode) that offers the best scaling. Once in transaction mode you can’t support most session level features anymore and you’re working off of the fact that database connections spend more time being idle than active.</p>
<p>They all have their own unique benefits in comparison, but have the same fundamental transaction limitations.</p>
<ul>
<li><a href="https://github.com/supabase/supavisor">Supavisor</a></li>
<li><a href="https://github.com/postgresml/pgcat">PgCat</a></li>
<li><a href="https://github.com/yandex/odyssey">Odyssey</a></li>
<li><a href="https://pgpool.net/mediawiki/index.php/Main_Page">Pg Pool II</a></li>
<li><a href="https://aws.amazon.com/rds/proxy/">RDS Proxy</a></li>
</ul>
<h2 id="am-i-finally-done-with-this-post">Am I finally done with this post?</h2>
<p>I think I’ve said enough.</p>
<p>Postgres is great. PgBouncer is important. Know what can go wrong and account for it.</p>
<p>🐘 ✌🏼 🐘</p>
<section role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>This <a href="https://brandur.org/postgres-connections">article from Brandur</a> details some additional nuances of handling connections and pools, but these three are the higher level version of it&nbsp;<a href="#fnref:1" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p>Technically it doesn’t have to be a single instance, it could be a round Robin of multiple PgBouncers, but from a client perspective you connect to a single one</p>
<p><a href="https://www.crunchydata.com/blog/postgres-at-scale-running-multiple-pgbouncers">https://www.crunchydata.com/blog/postgres-at-scale-running-multiple-pgbouncers</a>&nbsp;<a href="#fnref:2" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:3" role="doc-endnote">
<p><a href="https://elements.heroku.com/addons/heroku-postgresql">It’s even lower</a> on their lower powered options. It goes from 20, to 120, to 400, then 500 once you’re around their $400/mo plans.</p>
<p>Supabase has no standard plans with <a href="https://supabase.com/blog/supabase-pgbouncer">more than 50 connections</a>.</p>
<p><a href="https://render.com/docs/databases#connecting-to-your-database">Render.com’s managed Postgres offering</a> is based on memory available on each plan: 6 gigs or less is 97 connections, less than 10 gigs is 197 connections and over 10 gigs is 397 connections.</p>
<p>This isn’t totally unreasonable - managing more connections requires more cores and more memory in a process based model especially. But at their highest tiers these services don’t exceed 500 available connections.</p>
<p>More generalized services like Azure and Amazon RDS will let you go as high as you like, but that’ll go badly.&nbsp;<a href="#fnref:3" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:4" role="doc-endnote">
<p>Which is very exciting to see concentrated work on improving this aspect in Postgres internals! 🤘🏼&nbsp;<a href="#fnref:4" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:5" role="doc-endnote">
<p>This more recent crunchy data article on making sure your Postgres app is production ready implies the old standard of 500 connections is no longer accurate so I’d be curious to know more specifics since most resources still emphasize these numbers <a href="https://www.crunchydata.com/blog/is-your-postgres-ready-for-production">https://www.crunchydata.com/blog/is-your-postgres-ready-for-production</a>&nbsp;<a href="#fnref:5" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:6" role="doc-endnote">
<p>AFAIK this is largely true of any database and MySQL also has connection pooling solutions, but it does <em>seem</em> to be particularly necessary with postgres&nbsp;<a href="#fnref:6" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:7" role="doc-endnote">
<p>There are a couple caveats to this statement. Just having a dedicated low latency pool is an improvement so may slightly help concurrency. PgBouncer can also proxy multiple databases so you could increase read concurrency at least this way.</p>
<p>The queueing behavior of poolers can also be a benefit since you can wait for a connection to be available for longer, vs Postgres instantly rejecting the attempt: <a href="https://www.percona.com/blog/connection-queuing-in-pgbouncer-is-it-a-magical-remedy/">https://www.percona.com/blog/connection-queuing-in-pgbouncer-is-it-a-magical-remedy/</a>&nbsp;<a href="#fnref:7" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:8" role="doc-endnote">
<p>They do mention this in <a href="https://www.pgbouncer.org/features.html">their docs</a>:</p>
<p>&gt; “Note that “transaction” pooling breaks client expectations of the server by design and can be used only if the application cooperates by not using non-working features.”&nbsp;<a href="#fnref:8" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:9" role="doc-endnote">
<p><a href="https://github.com/pgbouncer/pgbouncer/issues/653">https://github.com/pgbouncer/pgbouncer/issues/653</a></p>
<p><a href="https://github.com/pgbouncer/pgbouncer/issues/249">https://github.com/pgbouncer/pgbouncer/issues/249</a></p>
<p>It also just seems to be something they’re not interested in doing&nbsp;<a href="#fnref:9" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:10" role="doc-endnote">
<p>The idea is you fail and continue to retry. See this article for some framework agnostic approaches to retries: <a href="https://postgres.ai/blog/20210923-zero-downtime-postgres-schema-migrations-lock-timeout-and-retries">https://postgres.ai/blog/20210923-zero-downtime-postgres-schema-migrations-lock-timeout-and-retries</a>&nbsp;<a href="#fnref:10" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:11" role="doc-endnote">
<p>I might have five nickels, but still, it happens. Also again I am grateful for anyone taking the time to write up content and share their expertise.&nbsp;<a href="#fnref:11" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:12" role="doc-endnote">
<p>That’s a topic for another time…&nbsp;<a href="#fnref:12" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:13" role="doc-endnote">
<p>In addition to the Ruby pg gem It’s used by the python <a href="https://github.com/psycopg/psycopg">psycopg</a> lib, and node <a href="https://github.com/brianc/node-libpq">node-libpq</a> package (and I’m sure many others). So it seems like most client libraries handle things safely enough at the protocol level to turn off prepared statements</p>
<p>If you are using Go with the pure Go lib/pq driver <a href="https://github.com/lib/pq/issues/889">see this issue</a> for how to properly handle unnamed statements. The <a href="https://github.com/launchbadge/sqlx/issues/368">rust sqlx library</a> seems to have a similar issue. Seems that if a library does not use libpq they end up in a bit of pain when trying to work with PgBouncer&nbsp;<a href="#fnref:13" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:14" role="doc-endnote">
<p>Named prepared statements can boost performance for repetitious queries because they bypass the Parse call on subsequent runs. That’s their primary benefit in comparison to unnamed statements&nbsp;<a href="#fnref:14" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:15" role="doc-endnote">
<p><code>LISTEN</code> can be <a href="https://www.postgresql.org/docs/current/sql-listen.html">called in a transaction as well</a>, but all that means is the session level listen won’t be triggered until the transaction commits, and won’t start listening at all if a rollback is triggered&nbsp;<a href="#fnref:15" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:16" role="doc-endnote">
<p>I do find myself asking “what is the point of nice features if you can’t use them at scale because of transaction mode pooling”? Not being able to use certain features at scale should never preclude them from being built - but it’s a disappointing reality&nbsp;<a href="#fnref:16" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:17" role="doc-endnote">
<p>I’m a <em>little</em> afraid to have made this statement and the potential for someone to come back at me angry about this being an oversimplification 😅&nbsp;<a href="#fnref:17" role="doc-backlink">↩︎</a></p>
</li>
</ol>
</section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[LibreWolf – Custom version of Firefox, focused on privacy, security and freedom (166 pts)]]></title>
            <link>https://librewolf.net/</link>
            <guid>37431474</guid>
            <pubDate>Fri, 08 Sep 2023 09:29:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://librewolf.net/">https://librewolf.net/</a>, See on <a href="https://news.ycombinator.com/item?id=37431474">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><main><div><p><img src="https://librewolf.net/icon.svg" alt="Logo"></p><h4>A custom version of Firefox, focused on privacy, security and freedom.</h4></div>
<h2 id="what-is-librewolf"><span id="what-is-librewolf"></span><a href="#what-is-librewolf">What is LibreWolf?</a></h2>
<p>This project is a custom and independent version of Firefox, with the primary
goals of privacy, security and user freedom.</p>
<p>LibreWolf is designed to increase protection against tracking and fingerprinting
techniques, while also including a few security improvements. This is achieved
through our privacy and security oriented settings and patches. LibreWolf also
aims to remove all the telemetry, data collection and annoyances, as well as
disabling anti-freedom features like DRM.</p>
<h2 id="main-features"><span id="main-features"></span><a href="#main-features">Main Features</a></h2>
<div><div><picture><source srcset="https://librewolf.net/icons/no-looking.avif" type="image/avif"><source srcset="https://librewolf.net/icons/no-looking.jxl" type="image/jxl"><source srcset="https://librewolf.net/icons/no-looking.webp" type="image/webp"><img src="https://librewolf.net/icons/no-looking.webp" alt="Icon No Telemetry"></picture><h5>No Telemetry</h5><p>No experiments, adware, annoyances, or unnecessary distractions.</p></div><div><p><img src="https://librewolf.net/icons/ublock.svg" alt="Icon Content Blocker Included"></p><h5>Content Blocker Included</h5><p><a href="https://addons.mozilla.org/en-US/firefox/addon/ublock-origin">uBlock Origin</a> is already included for your convenience.</p></div><div><picture><source srcset="https://librewolf.net/icons/lock.avif" type="image/avif"><source srcset="https://librewolf.net/icons/lock.jxl" type="image/jxl"><source srcset="https://librewolf.net/icons/lock.webp" type="image/webp"><img src="https://librewolf.net/icons/lock.webp" alt="Icon Enhanced Privacy"></picture><h5>Enhanced Privacy</h5><p>Hardened to maximize privacy, without sacrificing usability.</p></div><div><picture><source srcset="https://librewolf.net/icons/update.avif" type="image/avif"><source srcset="https://librewolf.net/icons/update.jxl" type="image/jxl"><source srcset="https://librewolf.net/icons/update.webp" type="image/webp"><img src="https://librewolf.net/icons/update.webp" alt="Icon Fast Updates"></picture><h5>Fast Updates</h5><p>LibreWolf is always built from the latest Firefox stable source, for up-to-date security and features along with stability.</p></div><div><p><img src="https://librewolf.net/icons/open-source.svg" alt="Icon Open Source"></p><h5>Open Source</h5><p>Everyone can participate in the development of LibreWolf. Join us on <a href="https://codeberg.org/librewolf">GitLab</a>, <a href="https://codeberg.org/librewolf">Codeberg</a> and <a href="https://matrix.to/#/#librewolf:matrix.org">Matrix</a>.</p></div></div>
<p>For more details read the full <a href="https://librewolf.net/docs/features">feature list</a>.</p>
<h2 id="contributing"><span id="contributing"></span><a href="#contributing">Contributing</a></h2>
<p>LibreWolf is a largely community-driven project and we don’t just say that. We
encourage you to join us in our
<a target="_blank" rel="noreferrer" href="https://matrix.to/#/#librewolf:matrix.org">Matrix</a> room. You can also visit us
on <a target="_blank" rel="noreferrer" href="https://www.reddit.com/r/LibreWolf/">r/librewolf</a> and
<a target="_blank" rel="noreferrer" href="https://lemmy.ml/c/librewolf">Lemmy</a>.</p>
<p>Merge requests, bug reports, and feature requests are welcome in all
<a target="_blank" rel="noreferrer" href="https://codeberg.org/librewolf">our repositories</a>. We value discussion, debate,
and feedback.</p>
<p>If you wish to contribute a build for a currently unsupported operating system,
we will do our best to support you.</p>
<h3 id="core-contributors"><span id="core-contributors"></span><a href="#core-contributors">Core contributors</a></h3>

<h3 id="questions"><span id="questions"></span><a href="#questions">Questions?</a></h3>
<p>Check out our <a href="https://librewolf.net/docs/faq">FAQ</a> first. Most questions can already be answered by
them. After that, you can also ask in our
<a target="_blank" rel="noreferrer" href="https://matrix.to/#/#librewolf:matrix.org">Matrix</a> room, or open a issue in our
<a target="_blank" rel="noreferrer" href="https://codeberg.org/librewolf/issues">issue tracker</a> for specific questions.</p></main></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lean 4.0 (122 pts)]]></title>
            <link>https://github.com/leanprover/lean4/releases/tag/v4.0.0</link>
            <guid>37429938</guid>
            <pubDate>Fri, 08 Sep 2023 05:59:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/leanprover/lean4/releases/tag/v4.0.0">https://github.com/leanprover/lean4/releases/tag/v4.0.0</a>, See on <a href="https://news.ycombinator.com/item?id=37429938">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-pjax="true" data-test-selector="body-content" data-view-component="true"><p>This is the first official release of Lean 4.</p>
<p>We intend to begin regular releases of Lean 4, providing a new "minor" version approximately monthly.<br>
We do not yet make promises about backwards compatibility,<br>
although all breaking changes will be documented in <a href="https://github.com/leanprover/lean4/blob/master/RELEASES.md">RELEASES.md</a>.</p>
<p>Please visit</p>
<ul>
<li>Our <a href="https://leanprover.zulipchat.com/" rel="nofollow">community forum</a> on Zulip! This is the best place to get help, and find out what the Lean community is working on.</li>
<li>The <a href="https://leanprover.github.io/" rel="nofollow">Lean langauge</a> website for downloads and documentation.</li>
<li>The homepage of the <a href="https://lean-fro.org/" rel="nofollow">Lean Focused Research Organization</a> for the team behind Lean.</li>
<li>The Lean <a href="https://leanprover-community.github.io/" rel="nofollow">community website</a> for help getting started, tutorials, and information about Mathlib.</li>
<li>The <a href="https://github.com/leanprover-community/mathlib4">Mathlib</a> GitHub repository, for Lean's major mathematical library.</li>
</ul>
<p>We have had over 2000 commits since the previous milestone.</p>
<div data-snippet-clipboard-copy-content="% git log v4.0.0-m5..v4.0.0 --pretty=&quot;%an&quot; | sort | uniq -c | sort -rn
 833 Leonardo de Moura
 662 Mac Malone
 301 Sebastian Ullrich
 228 Gabriel Ebner
 215 Mario Carneiro
  46 Henrik Böving
  41 Ed Ayers
  26 Scott Morrison
  20 Siddharth Bhat
  12 Wojciech Nawrocki
  11 Bulhwi Cha
   8 Adrien Champion
   7 Chris Lovett
   6 Alex J Best
   5 Yuri de Wit
   5 Tobias Grosser
   4 Rishikesh Vaishnav
   4 David Renshaw
   3 pcpthm
   3 int-y1
   3 Patrick Massot
   3 Martin Dvořák
   3 Marcus Rossel
   3 Elias Aebi
   2 Pietro Monticone
   2 Parth Shastri
   2 Joachim Breitner
   2 Jannis Limperg
   2 James Gallicchio
   2 François G. Dorais
   2 Floris van Doorn
   2 Eric Wieser
   2 Connor Baker
   2 Chris Hughes
   2 Anders Christiansen Sørby
   1 thorimur
   1 mcdoll
   1 locriacyber
   1 joao guilherme
   1 bc²
   1 awson
   1 ammkrn
   1 Richard Musiol
   1 Olivier Taïbi
   1 Matthias Hetzenberger
   1 Kaiyu Yang
   1 Junyan Xu
   1 Juan Pablo Romero
   1 Jon Eugster
   1 Jeremy Salwen
   1 Jakob von Raumer
   1 Gabriel Dahia
   1 Fynn Schmitt-Ulms
   1 Evgenia Karunus
   1 Enrico Borba
   1 Denis Gorbachev
   1 David Thrane Christiansen
   1 Arthur Paulino
   1 Andrés Goens"><pre><code>% git log v4.0.0-m5..v4.0.0 --pretty="%an" | sort | uniq -c | sort -rn
 833 Leonardo de Moura
 662 Mac Malone
 301 Sebastian Ullrich
 228 Gabriel Ebner
 215 Mario Carneiro
  46 Henrik Böving
  41 Ed Ayers
  26 Scott Morrison
  20 Siddharth Bhat
  12 Wojciech Nawrocki
  11 Bulhwi Cha
   8 Adrien Champion
   7 Chris Lovett
   6 Alex J Best
   5 Yuri de Wit
   5 Tobias Grosser
   4 Rishikesh Vaishnav
   4 David Renshaw
   3 pcpthm
   3 int-y1
   3 Patrick Massot
   3 Martin Dvořák
   3 Marcus Rossel
   3 Elias Aebi
   2 Pietro Monticone
   2 Parth Shastri
   2 Joachim Breitner
   2 Jannis Limperg
   2 James Gallicchio
   2 François G. Dorais
   2 Floris van Doorn
   2 Eric Wieser
   2 Connor Baker
   2 Chris Hughes
   2 Anders Christiansen Sørby
   1 thorimur
   1 mcdoll
   1 locriacyber
   1 joao guilherme
   1 bc²
   1 awson
   1 ammkrn
   1 Richard Musiol
   1 Olivier Taïbi
   1 Matthias Hetzenberger
   1 Kaiyu Yang
   1 Junyan Xu
   1 Juan Pablo Romero
   1 Jon Eugster
   1 Jeremy Salwen
   1 Jakob von Raumer
   1 Gabriel Dahia
   1 Fynn Schmitt-Ulms
   1 Evgenia Karunus
   1 Enrico Borba
   1 Denis Gorbachev
   1 David Thrane Christiansen
   1 Arthur Paulino
   1 Andrés Goens
</code></pre></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Unpacking Elixir: Syntax (114 pts)]]></title>
            <link>https://underjord.io/unpacking-elixir-syntax.html</link>
            <guid>37429922</guid>
            <pubDate>Fri, 08 Sep 2023 05:57:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://underjord.io/unpacking-elixir-syntax.html">https://underjord.io/unpacking-elixir-syntax.html</a>, See on <a href="https://news.ycombinator.com/item?id=37429922">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
        
        <small>2023-09-01</small>
        <p>Elixir is a language with syntactical roots in Ruby. It also carries the Erlang legacy. Legacy used here as in “a great legacy” and not as in “system you don’t like anymore”. Ruby is an object-oriented language. Elixir is functional language. The Erlang part has an impact as Elixir was designed to provide strong interoperability with Erlang. Like Ruby and Erlang, Elixir offers a high-level of abstraction and is a very dynamic language. Overall I would say the Elixir syntax is pretty approachable and reasonable to learn. Let’s unpack it.</p>
<p>This is another piece of my series on “Unpacking Elixir”. The previously published part was on <a href="https://underjord.io/unpacking-elixir-concurrency.html">concurrency</a>.</p>
<p>My background is Python so I wasn’t familiar with Ruby before-hand and ran into all these Ruby-isms with some confusion. Overall it was still a pretty smooth ride for me. I had done PHP, Javascript, Python, some C/C++, C#. It is a slightly new style but it didn’t scare me.</p>
<p>The thing that many people will probably find unnecessary coming from C-style languages or find very verbose coming from Python is how a block is defined:</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>do</span>
  <span># block contents go here</span>
<span>end</span>

<span>if</span> foo? <span>do</span>
	<span># true</span>
<span>else</span>
    <span># false</span>
<span>end</span>

<span>def</span> my_function(arg1) <span>do</span>
  <span># function body</span>
<span>end</span></code></pre></div>
  </div>

<p>It is fair to note that <code>end</code>  has a lot more characters than <code>}</code> but I do think it comes across as more human. A less dense and symbol-filled syntax could be argued to be more approachable and potentially less noisy. I don’t particularly care either way.</p>
<p>Let’s write a basic module:</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>defmodule</span> <span>MyModule.SampleThing</span> <span>do</span>
	<span>@moduledoc</span> <span>"""
</span><span>	This is module documentation. Typically written as Markdown.
</span><span>	"""</span>
	
	<span># compile-time attribute, define-style</span>
	<span>@my_attribute</span> <span>1000</span>
	
	<span>@doc</span> <span>"""
</span><span>	This is function documentation.
</span><span>	"""</span>
	<span>def</span> public_function(arg1, arg2) <span>do</span>
	  <span># do thing</span>
	  new_arg <span>=</span> arg1 <span>+</span> arg2
	  <span># return the last thing done</span>
	  new_arg <span>+</span> <span>2</span>
	<span>end</span>

    <span># private function with an optional default argument</span>
	<span>defp</span> private_function(arg1, arg2 \\ <span>5</span>) <span>do</span>
	  <span># do something</span>
	<span>end</span>

	<span>defp</span> short_function(x), <span>do</span>: x <span>+</span> <span>1</span>
	<span>defp</span> no_args, <span>do</span>: <span>1</span>
<span>end</span></code></pre></div>
  </div>

<p>Modules are Pascal case. Functions, module attributes and bindings of values (variable names) are snake_case. Docstrings are multi-line text strings and also compile-time attributes. ExDoc can make very nice documentation with these. Both types of docs can also contain doctests which are a nice way of making simple tests, testing your sample code in the docs and encouraging code samples in the documentation.</p>
<p>Any do/end block can be replaced with <code>, do:</code>  for one-liners. If a function takes no args you can skip the parentheses. Functions return the value of the last expression. There is no early return without branching and you do not make the return explicit.</p>
<p>Quickly some values and types:</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir">integer <span>=</span> <span>1</span>
float <span>=</span> <span>1.0</span>
boolean <span>=</span> <span>true</span> <span># true and false are both atoms</span>
null_value <span>=</span> <span>nil</span> <span># nil is also an atom</span>
atom <span>=</span> <span>:foo</span> <span># aside from true/false/nil you reference atoms with a colon :</span>
string <span>=</span> <span>"lawik"</span>
binary <span>=</span> &lt;&lt;<span>108</span>, <span>97</span>, <span>119</span>, <span>105</span>, <span>107</span>&gt;&gt; <span># equivalent to string above</span>

tuple <span>=</span> {<span>:ok</span>, <span>5</span>} <span># multiple values grouped, not limited to two</span>
list <span>=</span> [<span>1</span>, <span>2</span>, <span>3</span>, <span>4</span>, <span>5</span>]
map_of_strings <span>=</span> %{<span>"username"</span> <span>=&gt;</span> <span>"lawik"</span>, <span>"site"</span> <span>=&gt;</span> <span>"underjord.io"</span>}
map_of_atoms <span>=</span> %{<span>username</span>: <span>"lawik"</span>, <span>site</span>: <span>"underjord.io"</span>}
map_of_atoms_without_sugar <span>=</span> %{<span>:username</span> <span>=&gt;</span> <span>"lawik"</span>, <span>:site</span> <span>=&gt;</span> <span>"underjord.io"</span>} <span># Removing the syntactic sugar for colons</span>
struct <span>=</span> %<span>MyStruct</span>{<span>username</span>: <span>"lawik"</span>, <span>site</span>: <span>"underjord.io"</span>} <span># very special map</span>

<span># erlang compatibility</span>
keyword_list <span>=</span> [<span>username</span>: <span>"lawik"</span>, <span>site</span>: <span>"underjord.io"</span>] <span># the old-school Erlang map, but syntatically sugared</span>
same_but_in_lists_and_tuples <span>=</span> [{<span>:username</span>, <span>"lawik"</span>}, {<span>:site</span>, <span>"underjord.io"</span>}] <span># free from syntactic sugar</span>
charlist <span>=</span> <span>'lawik'</span> <span># the old-school Erlang string</span>
charlist_in_lists_and_numbers <span>=</span> [<span>108</span>, <span>97</span>, <span>119</span>, <span>105</span>, <span>107</span>]</code></pre></div>
  </div>

<p>Interesting sugar around these types.</p>
<p>Strings are binaries that fit within the constraints of a UTF-8-encoded binary. String and binary concatenation is <code>"foo" &lt;&gt; "bar"</code>. String interpolation is <code>"Hello #{name} and welcome."</code> where <code>name</code> is a value or expression that converts to a string through a particular Protocol.</p>
<p>Lists have a syntax convenience for prepending. <code>new_list = [ new_value | old_list ]</code> will do it. It will return when we talk pattern matching. Lists are implemented as linked lists (not ideal, it is known) so appending is much less performant. List concatenation is <code>a ++ b</code> . Most operations are found in either the <code>List</code> or <code>Enum</code> modules.</p>
<p>Maps have a syntax convenience for updating an existing field. <code>new_map = %{ old_map | atom_key: new_value}</code> makes for a pretty simple process. Also works for structs. Overall map operations live in the <code>Map</code>  and <code>Enum</code> modules.</p>
<p>Keyword lists are very common in Erlang for options. Elixir added some nice sugar for that purpose. A list of tuples can be created with <code>[key1: 5, key2: 6]</code> and when calling a function which takes options as a Keyword list as the last argument you can drop into what feels like a python kwargs situation: <code>my_function("regular value", force: true, timeout: 553)</code> No double splat to speak of though.</p>
<p>Pipes are kind of neat:</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>defmodule</span> <span>MyModule.Pipage</span> <span>do</span>
  <span>def</span> new <span>do</span>
    %{}
  <span>end</span>

  <span>def</span> add_defaults(thing) <span>do</span>
    thing
    <span>|&gt;</span> <span>Map</span><span>.</span>put(<span>:timeout</span>, <span>5000</span>)
    <span>|&gt;</span> <span>Map</span><span>.</span>put(<span>:weather</span>, <span>"rainy"</span>)
  <span>end</span>

  <span>def</span> set_name(thing, name) <span>do</span>
    <span>Map</span><span>.</span>put(thing, <span>:name</span>, name)
  <span>end</span>

  <span>def</span> do_all_of_it <span>do</span>
    new()
    <span>|&gt;</span> add_defaults()
    <span>|&gt;</span> set_name(<span>"lawik"</span>)
  <span>end</span>
<span>end</span></code></pre></div>
  </div>

<p>So pipes allow passing a value through and changing it. They don’t deal with failure or anything like that but in functional life there are many cases where this just becomes much more readable. Not that there is only one type of pipe <code>|&gt;</code> and it feeds the output into the first argument of the next function. This worked nicely for my brain. It will upset many established FP folks that want all kind of pipes and arrows. I also know there is some history with piping to the last position and I know Elm does it that way. I think this is more approachable but it might be the Python <code>self</code> OOP bleeding through rather than what humans expect as a general rule.</p>
<p>Let’s make an example that is more scripting-oriented and uses the Elixir standard library.</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>"~"</span>
<span>|&gt;</span> <span>Path</span><span>.</span>expand()
<span>|&gt;</span> <span>Path</span><span>.</span>join(<span>".config/my_app"</span>)
<span>|&gt;</span> <span>File</span><span>.</span>mkdir_p!()
<span>|&gt;</span> <span>File</span><span>.</span>ls!()</code></pre></div>
  </div>

<p>This shows one of two interesting conventions for Elixir function names. The <code>!</code> at the end of a function indicates a function that will raise an error on failure. Usually they have a sibling function without the bang that will return a tuple of <code>{:ok, result}</code> or <code>{:error, reason}</code>. The other one is <code>?</code> at the end of a function to indicate it typically provides a boolean result. This is not enforced, it is only a convention.</p>
<p>Why these result tuples? We don’t have static typing and Result types, monads or what have you in Elixir. The ok/error tuple is a convention from Erlang and is essentially an informal Result type. Elixir didn’t upend the convention which means interop with Erlang code feels normal.</p>
<p>The way they are generally used is with pattern matching. To extract the value and throw a MatchError if it does not you can use a bare pattern match inline in a function.</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir">{<span>:ok</span>, status} <span>=</span> <span>File</span><span>.</span>stat(my_path)</code></pre></div>
  </div>

<p>Or you can do a case statement:</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>case</span> <span>File</span><span>.</span>stat(my_path) <span>do</span>
  {<span>:ok</span>, %{<span>type</span>: <span>:directory</span>}} <span>-&gt;</span> <span># do thing</span>
  {<span>:ok</span>, _unused} <span>-&gt;</span> <span># do other thing</span>
  {<span>:error</span>, <span>:enoent</span>} <span>-&gt;</span> <span># specific error</span>
  _ <span>-&gt;</span> <span># any other result</span>
<span>end</span></code></pre></div>
  </div>

<p>You can also do nice things using the <code>if</code> macro, the <code>with</code> statement and a bunch of other things. I won’t attempt to cover all the syntax. The <code>for</code> macro comprehension thing is wildly feature-filled. One very nice place to use pattern matching is in function heads. Elixir supports overloading of a sort.</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>defmodule</span> <span>MyApp.MyModule</span> <span>do</span>
	<span>def</span> eat_value(<span>nil</span>) <span>do</span>
		{<span>:error</span>, <span>:hates_nil</span>}
	<span>end</span>

	<span>def</span> eat_value(%{<span>style</span>: <span>:tasty</span>}), <span>do</span>: {<span>:ok</span>, <span>:tasty</span>}
	<span>def</span> eat_value(%{<span>flavor</span>: any_flavor}), <span>do</span>: {<span>:ok</span>, any_flavor}

	<span>def</span> eat_value(%{} <span>=</span> any_map_or_struct) <span>do</span>
		{<span>:ok</span>, <span>:tasted_fine</span>}
	<span>end</span>

	<span>def</span> eat_value([first_value, <span>|</span> _rest_of_list]) <span>do</span>
		{<span>:ok</span>, first_value}
	<span>end</span>

	<span>def</span> eat_value(num) <span>when</span> is_integer(num) <span>or</span> is_float(num) <span>do</span>
		{<span>:ok</span>, <span>"I will consider it a </span><span>#{</span>num<span>}</span><span>."</span>}
	<span>end</span>

    <span># Convention dictates _ to ignore a value in a match</span>
	<span>def</span> eat_value(_), <span>do</span>: {<span>:ok</span>, <span>:nothing_special</span>}
<span>end</span></code></pre></div>
  </div>

<p>This fundamentally compiles down to a case statement in a single function and if none of the cases match it will raise a specific error. You can also apply guards for numeric ranges and such. This example has matching for; Specific value <code>nil</code>. Value of a key in a map. Value of a key in a map to a binding and using it later. Head of a list.</p>
<p>The <code>with is_integer(..</code> stuff is a guard clause. It also shows the convention of <code>_</code> marking unused bindings, either with a name like <code>_bla</code> or just the plain <code>_</code>.</p>
<p>Anonymous/lambda functions are an important thing in most functional programming and we certainly have those.</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span># We can bind an existing function to a value with this syntax</span>
referenced_function <span>=</span> <span>&amp;</span><span>File</span><span>.</span>stat<span>/</span><span>1</span>

<span># Anonymous function, full syntax</span>
anon <span>=</span> <span>fn</span> arg1, arg2 <span>-&gt;</span>
	arg1 <span>+</span> arg2
<span>end</span>

<span># Anonymous function, short syntax</span>
anon <span>=</span> <span>&amp;</span> &amp;1 <span>+</span> &amp;2

<span># Anonymous function, multiple clauses</span>
anon <span>=</span> <span>fn</span>
  {<span>:ok</span>, result} <span>-&gt;</span> result <span>+</span> <span>5</span>
  {<span>:error</span>, reason} <span>-&gt;</span> {<span>:error</span>, <span>:bad</span>, reason}
  other <span>-&gt;</span> other
<span>end</span>

<span># Calling an anonymous function</span>
anon<span>.</span>(my_first_arg)</code></pre></div>
  </div>

<p>These are commonly used in pipelines for things like the very important Enum module:</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>File</span><span>.</span>ls!()
<span>|&gt;</span> <span>Enum</span><span>.</span>map(<span>fn</span> filename <span>-&gt;</span>
  <span>Path</span><span>.</span>join(my_path, filename)
<span>end</span>)</code></pre></div>
  </div>

<p>Something that is not Elixir syntax so much as something you run into using libraries within Elixir are macros and DSLs (domain-specific-languages) built from macros. Elixir does not allow a ton of hiding things in normal code. The code is explicit and mostly goes in a straight line. To avoid some things becoming very unwieldy, such as the Phoenix web framework’s routing and the Ecto database library’s schema/migration definitions they have built small sets of macros that generate the relevant functions for you. This is one of few places where I find things often feel a bit woo-woo and magical. But it is almost exlusively where the alternative would be worse, either for a technical reason or for a human reason.</p>
<p>So when you run into things that don’t feel like normal Elixir code. Odds are you are dealing with macros. They can define custom blocks and they can define custom keywords that are mostly like functions but actually expanded at compile-time.</p>
<p>Example of an Ecto database schema:</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>defmodule</span> <span>MyApp.MyUser</span> <span>do</span>
	<span>use</span> <span>Ecto.Schema</span>

	schema <span>"users"</span> <span>do</span>
		field <span>:username</span>, <span>:string</span>
		field <span>:password</span>, <span>:string</span>, <span>redact</span>: <span>true</span>
		timestamps()
	<span>end</span>
<span>end</span></code></pre></div>
  </div>

<p>This generates a model with everything the database layer needs to know about the schema. Your <code>MyApp.MyUser</code> module will have a <code>__schema__()</code> function. <code>use Ecto.Schema</code> is what brings that magic into your module and your subsequent calls to the macro <code>schema</code>, <code>field</code> and <code>timestamps</code> do the rest.</p>
<p>This brings us to one thing that is a bit messy but learnable. <code>alias</code>, <code>import</code>, <code>require</code> and <code>use</code>. This is <a href="https://elixir-lang.org/getting-started/alias-require-and-import.html">also covered in the official guide</a> which is where I learned Elixir mostly.</p>
<ul>
<li><code>alias</code> shortens the name of a module or lets you change the name you use for a module.</li>
<li><code>require</code> makes macros available from a particular function.</li>
<li><code>import</code> brings in functions AND macros.</li>
<li><code>use</code> lets the specific module inject any code functions through macro madness.</li>
</ul>
<p>Erlang interop deserves a mention. Both Elixir and Erlang module and function names are atoms. <code>MyApp.MyUser</code> is actually syntactic sugar for <code>:Elixir.MyApp.MyUser</code> which is just an atom. So Erlang interop looks like this:</p>

  <div>
    <p><span>elixir</span>
      
    </p>
    <div><pre tabindex="0"><code data-lang="elixir"><span>:erlang_module_name</span><span>.</span>function_name(arg1, arg2)
<span># OR actual example</span>
im <span>=</span> <span>:egd</span><span>.</span>create(<span>200</span>, <span>200</span>)</code></pre></div>
  </div>

<p>This is already a bunch so I will end it. I have not covered all syntax in the language but I think I’ve given it a fair shake. I hope this is beneficial to you if you are curious to try the language or figure out if it is something you might enjoy.</p>
<hr>
<p>If you have questions, comments or concerns you can reach me by my email at <a href="mailto:lars@underjord.io">lars@underjord.io</a> or on the socials <a href="https://twitter.com/lawik">@lawik</a>.</p>

        <p>Note: If you like my writing you might appreciate my videos. Give them a go over on <a href="https://youtube.com/c/underjord">the YouTube
                channel</a>.</p>
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Critical ignoring as a core competence for digital citizens (2022) (110 pts)]]></title>
            <link>https://journals.sagepub.com/doi/epub/10.1177/09637214221121570</link>
            <guid>37428937</guid>
            <pubDate>Fri, 08 Sep 2023 03:36:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://journals.sagepub.com/doi/epub/10.1177/09637214221121570">https://journals.sagepub.com/doi/epub/10.1177/09637214221121570</a>, See on <a href="https://news.ycombinator.com/item?id=37428937">Hacker News</a></p>
Couldn't get https://journals.sagepub.com/doi/epub/10.1177/09637214221121570: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Why isn't chess popular in Japan? (127 pts)]]></title>
            <link>https://lichess.org/@/datajunkie/blog/27-why-isnt-chess-popular-in-japan/UoEDbXUU</link>
            <guid>37428447</guid>
            <pubDate>Fri, 08 Sep 2023 02:16:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lichess.org/@/datajunkie/blog/27-why-isnt-chess-popular-in-japan/UoEDbXUU">https://lichess.org/@/datajunkie/blog/27-why-isnt-chess-popular-in-japan/UoEDbXUU</a>, See on <a href="https://news.ycombinator.com/item?id=37428447">Hacker News</a></p>
<div id="readability-page-1" class="page"><p><strong>Overview of the past, present and future of the game in the Land of the Rising Sun</strong></p><div><h3>Shōgi and Go</h3>
<p>A big reason chess isn’t so popular in Japan is the existence of two games which are far more popular: <strong><a href="https://en.wikipedia.org/wiki/Shogi">Shōgi</a></strong>, also called <strong>Japanese chess</strong>, and <strong><a href="https://en.wikipedia.org/wiki/Go_(game)">Go</a></strong>. They’ve been a part of Japanese culture for centuries, and have enthusiasts around Japan <a href="https://news.yahoo.co.jp/expert/articles/2c23bd026f14f90c1edac088554015cee0d6ab1e#">in the millions</a>.</p>
<ul>
<li>While the ancient Indian game, chaturanga, is believed to have developed into chess in Europe and other games elsewhere, it became shōgi in Japan. <strong>Think <a href="https://en.wikipedia.org/wiki/Crazyhouse">crazyhouse</a> on a 9x9 board where the pieces are not as mobile as in chess but most of them can promote!</strong> If you love tactical play, you might find it more fun than chess. The earliest forms of the game seem to date back to a little less than 1,000 years ago, and the modern form took shape <a href="https://www.shogi.or.jp/history/story/">around the 15th–16th centuries</a>.<br>The top shōgi pros are household names, and the game’s been going through a surge in popularity due to <a href="https://en.wikipedia.org/wiki/S%C5%8Dta_Fujii">an unprecedently strong, dominant player</a>.</li>
<li>Go is believed to have been invented over 2,500 years ago in China. Unlike chess or shōgi, where the aim is to checkmate the opponent’s king, <strong>the aim in Go is to surround more territory than the opponent</strong>, with one player using white stones and the other black. Go also has a much higher <a href="https://en.wikipedia.org/wiki/Game_complexity">game complexity</a> compared to the other two games, and I have a feeling I’ll take it up one day. This year, I was fascinated to read the news of a 96-year old female pro <a href="https://www.asahi.com/articles/ASR3J6RGZR3JUCVL04B.html">beating</a> a 50-year old male pro...which wasn’t the record for a win by the oldest player on the circuit. That record belongs to her late husband! It’s hard to imagine that kind of longevity in chess or shōgi—is it Go’s <strong>positional nature</strong>? If you’ve never seen or heard about Go, I recommend <a href="https://www.youtube.com/watch?v=WXuK6gekU1Y">the documentary on AlphaGo</a> (2017), a man vs. machine epic.</li>
</ul>
<p><img src="https://image.lichess1.org/display?h=0&amp;op=resize&amp;path=datajunkie:ublogBody:DmYkAEfmI8Fu:uB3xMAnn.png&amp;w=720&amp;sig=84bbc40ec5ac0d036fe408b99f94408a07650f76" alt="A Go board and stones. Illustrations: irasutoya"><br>From an early age, Japanese people are far more likely to be exposed to these two games rather than chess, whether it be learning the game or through the media.</p>
<hr>
<h3>Chess in Japan</h3>
<p>While there are few credible sources on the history of chess in Japan, it seems plausible that more chess books, documents and enthusiasts would have appeared in the country in its period of Westernisation in the <a href="https://en.wikipedia.org/wiki/Meiji_era">Meiji era</a> (1868–1912), called <a href="https://en.wikipedia.org/wiki/Bunmei-kaika">bunmei-kaika</a> (‘civilisation and enlightenment’). It’s worth noting that <strong>Alekhine, then World Champion, visited Japan in January 1933 to learn more about shōgi</strong>, and gave a simul. For interested readers, I urge you to read Edward Winter’s magnificent article <a href="https://www.chesshistory.com/winter/winter80.html#6994._Alekhine_v_Kimura_Tokyo_1933">here</a>. You can get a glimpse of how ‘Western chess’ was perceived in the country then.</p>
<p>Another reliable source is the book <em><a href="https://www.h-up.com/books/isbn978-4-588-21101-0.html">Cultural History: Chess</a></em> (my translations) by the late Kōichi Masukawa, the leading Japanese expert on the history of games. In the 2003 book (thanks to <a href="https://twitter.com/chesscoach13">Shinpei Uehara</a> who owns a copy of the book and shared some excerpts), he proposed several reasons <strong>why chess hasn’t become popular in Japan</strong>:</p>
<blockquote>
<ul>
<li><em>In shōgi, you can reuse pieces captured from the opponent as your own, and since this adds a layer of complexity compared to chess, chess is seen as ‘simpler’ and not as sophisticated.</em></li>
<li><em>Shōgi has a large base of enthusiasts already, so it’s easy to pass the game on from generation to generation.</em></li>
<li><em>Shōgi is very familiar to the people through TV, newspapers and magazines</em> (note: of course, it’s exploded further now online)<em>, and there are many amateur players who can appreciate the play of professionals.</em></li>
</ul>
</blockquote>
<p>Masukawa also mentioned the lack of financial support for chess in Japan and there not being many places for face-to-face training.</p>
<p>It makes sense that for the vast majority of people in Japan, shōgi is more accessible—and when two games are relatively similar, you’re more likely to take up the one which is better known, so there are more opportunities to play and connect with others.<br><img src="https://image.lichess1.org/display?h=0&amp;op=resize&amp;path=datajunkie:ublogBody:r9CnEUUn1zwE:KZUsumr1.png&amp;w=720&amp;sig=a7aef0cc114ac0264512ce2d63c47bebbfbefc44" alt=""></p>
<hr>
<h3>How strong are Japanese players?</h3>
<p>As of <a href="https://ratings.fide.com/topfed.phtml?tops=0&amp;ina=1&amp;country=">September 2023</a>, Japan is ranked 91st out of 184 countries with a top 10 average FIDE rating of 2248. They have</p>
<ul>
<li>3 IMs,</li>
<li>9 FMs,</li>
<li>9 CMs,</li>
<li>1 WIM,</li>
<li>2 WFMs and</li>
<li>7 WCMs on their lists.</li>
</ul>
<p><img src="https://image.lichess1.org/display?h=0&amp;op=resize&amp;path=datajunkie:ublogBody:0ZP3kT0kOlrW:BVvrJrme.png&amp;w=720&amp;sig=dbdbceac585bd2a3cf71999d5625b377effdce65" alt=""><br>At the top, a few IMs and IM-strength players, but no one has gotten close to GM yet.</p>
<hr>
<h3>Shōgi players playing chess</h3>
<p>As Alekhine remarked 90 years ago (see Winter’s article above), <strong>shōgi players have great potential to be good at chess</strong>. The prime example of this is shōgi legend <a href="https://en.wikipedia.org/wiki/Yoshiharu_Habu">Yoshiharu Habu</a> who took up chess as a hobby while being <em>the</em> top shōgi player. He had an initial (!) FIDE rating of 2342 in 2001, and occasionally playing in domestic events and taking trips to overseas tournaments during his ultra-busy shōgi schedule, scored 2 IM norms. He reached a PB of 2415 in 2014 after only 100 or so FIDE-rated games—his wins against GMs <a href="https://www.chessgames.com/perl/chessgame?gid=1411126">Wells</a> and <a href="https://www.chessgames.com/perl/chessgame?gid=1544348">Nikolic</a> are masterpieces of dynamic play (shōgi magic?). I have no doubt he would have at least made the GM title and 2500 if he had more time for chess. A couple of other shōgi pros have also surpassed 2300.</p>
<p>I experienced first-hand the strength of shōgi players when I visited Japan last year—I played blitz in Tokyo as well as in Kyoto, and I lost a game in each city—to a shōgi pro in one, and in the other, a young shōgi player who took up chess...several months ago. There have been some prominent chessplayers who took up shōgi and/or Go, and it’s fascinating to think about how competency in one game links to potential in another.<br><img src="https://image.lichess1.org/display?h=0&amp;op=resize&amp;path=datajunkie:ublogBody:LFrUcUHDLeKo:79SSR7Q4.png&amp;w=720&amp;sig=f341fe8816fb885342f932ac17bfdd05499fed00" alt=""></p>
<hr>
<h3>The future of chess in Japan</h3>
<p>From 2003, when Masukawa’s book was published, there have been two big changes:</p>
<ol>
<li><strong>The exponential growth in online chess platforms and resources</strong>, from the big websites like Lichess and Chess.com to others for learning and entertainment through videos and streaming etc.—the playing field is more level, to the benefit of those in countries where chess isn’t as traditionally popular</li>
<li>The Japan Chess Association, which operated from 1968 to 2019, was <em><a href="https://en.wikipedia.org/wiki/Japan_Chess_Association">not</a></em><a href="https://en.wikipedia.org/wiki/Japan_Chess_Association">the most popular organisation</a>. Since 2019, the newly founded National Chess Society of Japan, now the <strong><a href="https://japanchess.org/en/top/">Japan Chess Federation</a></strong>, has been doing <strong>an amazing job of promoting chess and growing the game in the country</strong>—<a href="https://twitter.com/JapanChessFed">active on social media</a> and, importantly, transparent in its operations and management.</li>
</ol>
<p><strong>The Federation has over 600 annual members</strong> <a href="https://japanchess.org/en/id-list/">as at July 2023</a>, and the increase in participation over the last years has been plain to see. As an Australian, which, in competitive terms, comes with some geographical difficulties, I nevertheless had the opportunity to play regularly growing up—nearly 140 classical games in a year when I was 12, for example—and being able to play so often at clubs and weekenders no doubt helped accelerate my chess development. Even with all of the online resources now,<em>nothing beats learning from playing over the board</em>, so it’s been heart-warming to see the gradual yet real strides chess in Japan is making so people can <strong>play more tournaments, find more chess clubs near them and nurture their love for the game</strong>.<br><img src="https://image.lichess1.org/display?h=0&amp;op=resize&amp;path=datajunkie:ublogBody:0UBjuNW9hJvY:DtCRIAWs.png&amp;w=720&amp;sig=f4ce7f9c8a11784b047fb92e44271d15e83ef994" alt=""><br>The JCF also has nearly 2,700 subscribers on its <a href="https://www.youtube.com/@-JapanChessFederation">YouTube channel</a> at present. They have commentary on a few live boards on-stream for the bigger tournaments, and even cameras on the players! For paid members to the channel, they can take part in a weekly lecture given by masters and other strong players. I often do commentary on the big tournaments in Japan, and <a href="https://www.youtube.com/playlist?list=PLlWyGUzI38SKxhYqMYuwEGNdnIPCbVgoU">give monthly lectures</a> on their channel. <strong>It’s clear the not-yet-5-years-old Japan Chess Federation is punching above its weight.</strong></p>
<p>As for grandmasters, Japan doesn’t have one yet—and this is only one of many factors which help paint a picture of how chess is in one country—but from what I’ve seen over the last few years, I have high hopes for the future of chess in Japan.</p>
<p>A <a href="https://twitter.com/IkedaJunta/status/1563367845278339073">poll</a> from one year ago: "How many GMs do you think Japan will have in 2032?"<br><img src="https://image.lichess1.org/display?h=0&amp;op=resize&amp;path=datajunkie:ublogBody:a6rNZRZ6mLAl:7E3RKfrw.jpg&amp;w=720&amp;sig=e8360ef3fbcfbaf7e88c532afe96d1e65667c3a7" alt=""></p>
<hr>
<h3>Want to play chess in Japan?</h3>
<p>If you’re interested in playing tournaments in Japan, they have several FIDE-rated tournaments <a href="https://japanchess.org/en/tournament-information-2023/">throughout the year</a>, with one remaining for 2023—the Japan Open in November. I believe its limit of 80 players is filling up <em>fast</em>, so get on it quickly!<br>I’ve heard there’ll be a tournament next year, perhaps in November, in a beautiful location in Kyoto—I’m quite tempted by that one.<br><img src="https://image.lichess1.org/display?h=0&amp;op=resize&amp;path=datajunkie:ublogBody:uwm6N4EuRZUo:d3yreqsF.png&amp;w=720&amp;sig=d678e8d6a4f2de4b2a7f09fba4b619c89c56b9f0" alt=""></p>
<hr>
<p>If you'd like to receive posts like this in your inbox, you can subscribe to my free newsletter at <a href="https://juntaikeda.substack.com/">https://juntaikeda.substack.com/</a>, now read by 850 people.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We built an AI-powered Magic the Gathering card generator (115 pts)]]></title>
            <link>https://txt.cohere.com/urzas-ai/</link>
            <guid>37427854</guid>
            <pubDate>Fri, 08 Sep 2023 00:53:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://txt.cohere.com/urzas-ai/">https://txt.cohere.com/urzas-ai/</a>, See on <a href="https://news.ycombinator.com/item?id=37427854">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
        <p>Magic the Gathering (Magic) has fascinated me since I was a child. It’s pretty unique as a game in that players use asymmetric game pieces. Unlike chess, in which both players have the same pieces in front of them, in Magic, every player sits down at the table with their own deck of cards that they have handcrafted.</p><p>My obsession with the game came from the enjoyment of poring over the thousands of Magic cards released during its history and trying to build a good deck. My only complaint about Magic is that although there are thousands of cards, I really wish there were hundreds of thousands! This was the motivation behind this project—I just wanted more Magic cards.</p><p>It turns out that finetuned <a href="https://docs.cohere.ai/intro-to-llms/?ref=txt.cohere.com">large language models (LLM)</a> are actually really good at creating magic cards, and they can create hundreds of thousands of them in just a few days!</p><p>This is a story of how my two friends and I created <a href="https://urzas.ai/?ref=txt.cohere.com">Urza’s AI</a>, a website that uses Artificial Intelligence (AI) to generate Magic cards, and how over 38 thousand others joined in the fun.</p><figure><a href="https://os.cohere.ai/register?ref=txt.cohere.com"><img src="https://txt.cohere.com/content/images/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png" alt="" loading="lazy" width="2000" height="642" srcset="https://txt.cohere.com/content/images/size/w600/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png 600w, https://txt.cohere.com/content/images/size/w1000/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png 1000w, https://txt.cohere.com/content/images/size/w1600/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png 1600w, https://txt.cohere.com/content/images/size/w2400/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png 2400w" sizes="(min-width: 720px) 720px"></a></figure><h2 id="how-we-built-it">How We Built It</h2><p>Magic the Gathering is a collectible card game played with two or more players. Each player starts with a deck of cards and 20 life points and uses those cards to deal damage to the opponent and reduce the life points to 0. Each card consists of a set of information, including its name, cost, type (out of 6 basic types), subtype, a text description about its abilities, and sometimes a small story about the card (flavor text).</p><p>Together with my colleagues, Ali Sabet and Michael Kozakov, we had this question—what if we could create an AI that, when prompted with just a card name, would generate a playable Magic card that follows the theme of that given name, complete with all the card information and an image?</p><p>It turns out we could! In the end, it took a combination of language AI (an LLM) to generate the text of a Magic card and text-to-image AI to create the card’s image based on the generated text. Here is how we built it.</p><h3 id="step-1-generating-the-text">Step 1: Generating the text</h3><p>LLMs are massive neural networks that model how the human language works. They are pre-trained with a vast body of text data, allowing them to excel in various Natural Language Processing (NLP) use cases.</p><p>One example is <a href="https://cohere.ai/generate?ref=txt.cohere.com">language generation</a>, where an LLM can take a piece of text and continue generating text whose context matches closely the one given. This is the essence of <a href="https://docs.cohere.ai/prompt-engineering-wiki/?ref=txt.cohere.com">prompt engineering</a>, which is what enables so many creative use cases out there such as in creative writing, chatbots, role-playing games, and more.</p><p>With Urza’s AI, given a card name, we wanted to generate original and complete information about the card, such as the cost, type, subtype, and description. Using Cohere’s Generate LLM model, <a href="https://docs.cohere.ai/api-reference/?ref=txt.cohere.com">accessible via an API</a>, we created a few examples of Magic card information as the prompt.</p><p>The outcome was not bad at all. The model generated a very good output, as in the screenshot below, taken from one example generation in the <a href="https://docs.cohere.ai/playground-overview/?ref=txt.cohere.com">Cohere playground</a>.</p><figure><img src="https://txt.cohere.com/content/images/2022/06/generate-card-2.jpg" alt="Prompting the Cohere Generate model to generate original Magic card information" loading="lazy" width="1920" height="1080" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/generate-card-2.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/generate-card-2.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/generate-card-2.jpg 1600w, https://txt.cohere.com/content/images/2022/06/generate-card-2.jpg 1920w" sizes="(min-width: 720px) 720px"><figcaption>Prompting the Cohere Generate model to generate original Magic card information</figcaption></figure><p>But though the cards were readable, they were often overpowered or uninterpretable. There was room to make them better. So we decided to take it further by <a href="https://docs.cohere.ai/finetuning-wiki?ref=txt.cohere.com">finetuning</a> a Generate model.</p><p>Finetuning is a step where you take a pre-trained LLM and customize it with your own dataset. The model then goes through a training round and thereafter, can produce outputs that are more attuned to the dataset you had given it.</p><p>So we took a dataset of all the cards released by Wizards of the Coast containing full Magic card descriptions. We finetuned a Cohere Generate model using this dataset⁠—a simple activity of uploading the dataset and kickstarting the finetune via the Playground.</p><p>The result was much richer generations that felt more realistic and playable!</p><figure><img src="https://txt.cohere.com/content/images/2022/06/generate-card-finetune-2.jpg" alt="Getting much richer generations by prompting the finetuned model" loading="lazy" width="1920" height="1080" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/generate-card-finetune-2.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/generate-card-finetune-2.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/generate-card-finetune-2.jpg 1600w, https://txt.cohere.com/content/images/2022/06/generate-card-finetune-2.jpg 1920w" sizes="(min-width: 720px) 720px"><figcaption>Getting much richer generations by prompting the finetuned model</figcaption></figure><p>I have saved the prompt so you can <a href="https://t.co/YxP4SZtEE8?ref=txt.cohere.com">try it out here</a>. Take it for a spin and let me know how it went!</p><h3 id="step-2-generating-the-image">Step 2: Generating the image</h3><p>A Magic card of just text without a picture wouldn’t be complete, so we needed to find a way to create card images that match the theme of the generated text.</p><p>For this, we used the <a href="http://wombo.art/?ref=txt.cohere.com">Wombo Art API</a> to generate the card image. Wombo’s API leverages another type of neural network—a model trained with text as the input and image as the output.</p><p>We provided the API with the card name, types, and subtypes. We also made a few other prompt tricks to condition the API to return the kinds of images that we wanted.</p><p>The images generated were impressive! You can see from some examples below that the images captured the themes nicely and were beautifully illustrated to boot.</p><figure><img src="https://txt.cohere.com/content/images/2022/06/example-complete-cards-1.jpg" alt="Getting highly realistic and playable cards via the Cohere and Wombo APIs" loading="lazy" width="1920" height="1080" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/example-complete-cards-1.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/example-complete-cards-1.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/example-complete-cards-1.jpg 1600w, https://txt.cohere.com/content/images/2022/06/example-complete-cards-1.jpg 1920w" sizes="(min-width: 720px) 720px"><figcaption>Getting highly realistic and playable cards via the Cohere and Wombo APIs</figcaption></figure><p>More examples here:</p><figure><img src="https://txt.cohere.com/content/images/2022/06/more-example-complete-cards-1.jpg" alt="More examples of cards generated" loading="lazy" width="1920" height="1920" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/more-example-complete-cards-1.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/more-example-complete-cards-1.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/more-example-complete-cards-1.jpg 1600w, https://txt.cohere.com/content/images/2022/06/more-example-complete-cards-1.jpg 1920w" sizes="(min-width: 720px) 720px"><figcaption>More examples of cards generated</figcaption></figure><p>We didn’t stop there. We also wanted to use AI to generate the card back and the Mana icons. So we created some prompts and sent them to the Wombo API to generate the images.</p><p>Here’s what we got for the card back (except for the title text, which we had to add manually):</p><figure><img src="https://txt.cohere.com/content/images/2022/06/card-back-1.jpg" alt="The card back generated by the Wombo API" loading="lazy" width="1920" height="1080" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/card-back-1.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/card-back-1.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/card-back-1.jpg 1600w, https://txt.cohere.com/content/images/2022/06/card-back-1.jpg 1920w" sizes="(min-width: 720px) 720px"><figcaption>The card back generated by the Wombo API</figcaption></figure><p>And here are the Mana icons:</p><figure><img src="https://txt.cohere.com/content/images/2022/06/mana-icons-1.jpg" alt="The Mana icons generated by the Wombo API" loading="lazy" width="1920" height="1080" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/mana-icons-1.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/mana-icons-1.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/mana-icons-1.jpg 1600w, https://txt.cohere.com/content/images/2022/06/mana-icons-1.jpg 1920w" sizes="(min-width: 720px) 720px"><figcaption>The Mana icons generated by the Wombo API</figcaption></figure><h3 id="step-3-serving-the-application">Step 3: Serving the application</h3><p>With all the ingredients ready, it’s time to render a complete card. We pieced it together with a bunch of CSS and HTML stuff, which honestly turned out to be the hardest part of the whole project!</p><p>We hosted it on Urza’s AI, a website where you can enter a card name and it will take care of the rest, rendering a complete card. <a href="https://urzas.ai/?ref=txt.cohere.com">Try it out here</a>!</p><h2 id="the-outcome">The Outcome</h2><p>We didn’t know how this project would turn out, but the quality of the cards we saw has been mind-blowing. They felt super realistic and were fully playable. I have actually generated complete decks and printed them out, and the games I have played with them have been wild!</p><figure><img src="https://txt.cohere.com/content/images/2022/06/printed-cards.jpg" alt="Here are the printed cards" loading="lazy" width="2000" height="2667" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/printed-cards.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/printed-cards.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/printed-cards.jpg 1600w, https://txt.cohere.com/content/images/size/w2400/2022/06/printed-cards.jpg 2400w" sizes="(min-width: 720px) 720px"><figcaption>Here are the printed cards</figcaption></figure><p>Thousands of people seem to agree as well. The Urza’s AI website got more than 38,000 visitors within the first four days of the launch, accumulating more than 183,000 events. We also made it to the front page of Hacker News!</p><p>The usage continues to increase and is totaling more than 40,000 users at the time of writing.</p><figure><img src="https://txt.cohere.com/content/images/2022/06/user-statistics-1.jpg" alt="Getting 38k users and 183k events within four days of launch" loading="lazy" width="1920" height="1080" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/user-statistics-1.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/user-statistics-1.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/user-statistics-1.jpg 1600w, https://txt.cohere.com/content/images/2022/06/user-statistics-1.jpg 1920w" sizes="(min-width: 720px) 720px"><figcaption>Getting 38k users and 183k events within four days of launch</figcaption></figure><p>Getting the servers up and running to host the site and surviving the hug of death from Hacker News was not actually that difficult because all the AI is done via network-based API requests. Our site doesn’t even have GPUs. They just make requests to Cohere and Wombo!</p><h2 id="what-made-this-possible">What Made This Possible</h2><p>LLMs are now emerging as a general-purpose answer to implementing NLP use cases. Currently, the common approach to machine learning in NLP is having specific models for specific use cases, with little flexibility within a model to perform different kinds of tasks. But with prompt engineering, we can use the same model to adapt to various use cases by shaping how we want the model to produce its outputs.</p><p>With Urza’s AI, that use case is text generation. We conditioned a model with Magic card information, and because it has been pre-trained with a massive corpus of text data, it was able to capture the prompt’s context. And it duly returned the kind of generation we were looking for.</p><p>But we are only just scratching the surface. Prompt engineering works beyond just simple text generation. We can adapt it to other tasks such as extracting information from a piece of text, paraphrasing, summarizing, classifying, and many more. LLMs’ versatility continues to surprise, and their applications continue to traverse various industries and verticals.</p><p>And if that’s still not enough, we can take an already strong pre-trained LLM up another level with finetuning. With Urza’s AI, the information we needed had a particular pattern and theme, and a baseline LLM would not have been attuned to this nuance. So we finetuned the model with the dataset, which was by no means massive, and saw a marked improvement in the quality of the output.</p><p>Finetuning a model with the Cohere platform is very accessible. You don’t need to be good at machine learning to be able to do it. It’s all done via a user interface.</p><figure><img src="https://txt.cohere.com/content/images/2022/06/cohere-finetuning-interface-1.jpg" alt="Finetuning with Cohere is a simple step via a user interface" loading="lazy" width="1920" height="1080" srcset="https://txt.cohere.com/content/images/size/w600/2022/06/cohere-finetuning-interface-1.jpg 600w, https://txt.cohere.com/content/images/size/w1000/2022/06/cohere-finetuning-interface-1.jpg 1000w, https://txt.cohere.com/content/images/size/w1600/2022/06/cohere-finetuning-interface-1.jpg 1600w, https://txt.cohere.com/content/images/2022/06/cohere-finetuning-interface-1.jpg 1920w" sizes="(min-width: 720px) 720px"><figcaption>Finetuning with Cohere is a simple step via a user interface</figcaption></figure><h2 id="what-does-this-mean">What Does This Mean</h2><p>It’s incredible to think that via a simple API call, developers can have access to these massive LLMs, previously only within the realms of the big tech companies. Teams looking to leverage this technology can do so without having to worry about building the expertise, infrastructure, dataset, and the associated costs of training and serving a model.</p><p>I really think this is the future of AI development. The most cutting-edge neural networks will always be prohibitively large for most teams to host. So they will just make requests to hosted APIs like Cohere or Wombo.</p><p>I’m excited about empowering makers and innovators to use AI as a tool of creation. APIs such as this level up the playing field, opening up access to those who don’t have the finances and expertise to build and operate AI systems. Instead of having to mess with the technology, they can now focus solely on creating value.</p><p>Try out <a href="https://cohere.ai/generate?ref=txt.cohere.com">Cohere Generate here</a>!</p><figure><a href="https://os.cohere.ai/register?ref=txt.cohere.com"><img src="https://txt.cohere.com/content/images/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png" alt="" loading="lazy" width="2000" height="642" srcset="https://txt.cohere.com/content/images/size/w600/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png 600w, https://txt.cohere.com/content/images/size/w1000/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png 1000w, https://txt.cohere.com/content/images/size/w1600/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png 1600w, https://txt.cohere.com/content/images/size/w2400/2022/07/Screen-Shot-2022-07-15-at-8.57.04-AM.png 2400w" sizes="(min-width: 1200px) 1200px"></a></figure>
    </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[California moves to decriminalize use of magic mushrooms, other psychedelics (212 pts)]]></title>
            <link>https://www.latimes.com/california/story/2023-09-07/california-magic-mushrooms-psychedelics-scott-wiener-psilocybin</link>
            <guid>37427679</guid>
            <pubDate>Fri, 08 Sep 2023 00:30:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.latimes.com/california/story/2023-09-07/california-magic-mushrooms-psychedelics-scott-wiener-psilocybin">https://www.latimes.com/california/story/2023-09-07/california-magic-mushrooms-psychedelics-scott-wiener-psilocybin</a>, See on <a href="https://news.ycombinator.com/item?id=37427679">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-element="story-body" data-subscriber-content=""> <p>California lawmakers on Thursday narrowly approved a bill supported by veterans and criminal justice reform advocates to decriminalize the possession and personal use of a limited list of natural psychedelics, including “magic mushrooms.” </p><p>Gov. Gavin Newsom will now decide the fate of <a href="https://leginfo.legislature.ca.gov/faces/billTextClient.xhtml?bill_id=202320240SB58" target="_blank">Senate Bill 58,</a> which would remove criminal penalties for the possession and use of psilocybin and psilocin, the active ingredients in psychedelic mushrooms, mescaline and dimethyltryptamine, or DMT, known as ayahuasca. The bill also would require the California Health and Human Services Agency to study the therapeutic use of psychedelics and submit a report with its findings and recommendations to the Legislature. </p><p>The measure passed the Senate 21 to 14, with several Democrats opposing. </p><p>“California’s veterans, first responders, and others struggling with PTSD, depression, and addiction deserve access to these promising plant medicines,” state Sen. Scott Wiener (D-San Francisco) said in a statement after the bill passed the Assembly in a bipartisan 42-11 vote. “It’s time to stop criminalizing people who use psychedelics for healing or personal well-being.”</p><p>The measure would apply only to those 21 and older and does not authorize the personal transfer or sale of psychedelics in dispensaries. Rather, it would mean police cannot arrest people who have or use limited amounts of the drugs. <a href="https://www.npr.org/2019/06/05/730061916/oakland-city-council-effectively-decriminalizes-psychedelic-mushrooms" target="_blank">Oakland</a> and <a href="https://www.cnn.com/2020/01/30/us/santa-cruz-mushrooms-psychedelics-trnd/index.html" target="_blank">Santa Cruz</a> have passed similar measures. </p><p>Criminal justice reform advocates said decriminalizing psychedelics is a step toward ending a war on drugs, while veterans groups said it would help destigmatize psychedelics that, in some cases, have been more effective in treating post-traumatic stress disorder, anxiety and depression than traditional drugs and therapies. </p><p>Jesse Gould, a former army ranger and founder of the Heroic Hearts Project, SB 58’s sponsor, said the measure would help prevent veterans from having to make the choice between “saving their own life or becoming a criminal in the eyes of their country.” </p><p>Gould said psychedelics helped him through his own journey with PTSD after three deployments to Afghanistan. He said many of his organization’s clients have similarly turned to hallucinogens for relief after other interventions didn’t work.</p><p>“This is just very basic, people should not be criminalized if they are using personal possession of these substances. If people are choosing to do that in their own privacy, they should absolutely be able to have that ability,” Gould said. “We just came out of 20 years of war. There’s clearly a mental health issue.” </p><p>The measure that passed the Senate is a narrowed version that Wiener first introduced last year that would have also decriminalized the use and possession of MDMA, commonly known as ecstasy, and LSD. Wiener also agreed this summer to cut ibogaine, a psychoactive alkaloid found in the iboga shrub, from the decriminalization portion of SB 58 and instead added it to the list of therapeutics to be studied.</p><p>Those changes eased some concerns among lawmakers, including a handful of Republicans who voted for the proposal. </p><p>Assemblymember Bill Essayli (R-Corona) said he was convinced to support the bill after it was revised to include only three plant-based psychedelics and because it is largely limited to personal use and has an age requirement of 21. </p><p>“I think the data is clear that while pharmaceuticals certainly have a benefit to some people, it’s not having a benefit on all of society,” Essayli said. “And I think we can say our approach to mental health in the medical community is not working. I think we are worse off now than we were before.” </p><p>But the bill divided Democrats, with many of the caucus’ more moderate members either abstaining or voting in opposition of the measure. Law enforcement lobbied against the proposal, arguing that the drugs were understudied and could lead to a surge in crime. Parental organizations also worry that the bill lacks the necessary guardrails to keep young adults and teenagers from experimenting with the drugs. </p><p>Lisa Hudson, a Marin County mom who has opposed the bill, said her 16-year-old son Shayne Rebbetoy died at their home after taking mushrooms and running off their deck, thinking he could fly. Hudson said the bill fails to include the necessary education, research and training for first responders. </p><p>“I fear more deaths amongst teenagers, amongst young adults, amongst veterans, and people who are searching for this therapeutic benefit,” Hudson said. “Because in an unregulated model, you’re spinning the roulette wheel. ... To me, it’s just so irresponsible and reckless.” </p><p>Newsom has until Oct. 14 to approve or veto hundreds of bills. If signed, the bill would go into effect on Jan. 1, 2025. </p> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What's new in Emacs 29.1 (216 pts)]]></title>
            <link>https://www.masteringemacs.org/article/whats-new-in-emacs-29-1</link>
            <guid>37427279</guid>
            <pubDate>Thu, 07 Sep 2023 23:46:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.masteringemacs.org/article/whats-new-in-emacs-29-1">https://www.masteringemacs.org/article/whats-new-in-emacs-29-1</a>, See on <a href="https://news.ycombinator.com/item?id=37427279">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
    
    
    
      
    
    
      
    
    
      
        <section>
          What's new in Emacs 29.1? I go through every change and annotate the ones I feel are interesting or worth knowing more about.
        </section>
      
      
        <figure>
          <img src="https://www.masteringemacs.org/static/uploads/article-images/purple-gnu.jpg">
        </figure>
      
      
        
      
      
        <p>Updated for <strong>emacs 29</strong></p>
      
      <img src="https://www.masteringemacs.org/static/img/fleuron2.gif">
      
<p>Wonderful news! Emacs 29.1 is out now. If you’re wondering what’s new, and why it’s <em>absolutely</em> worth upgrading, keep reading. I’ve annotated the NEWS file – as I’ve been doing for the last thirteen years – with my own thoughts and comments on the deluge of new and interesting features.</p><p>To celebrate, <a href="https://www.masteringemacs.org/book">my book on Emacs</a> is also on sale: 29% off.</p><p>Before I go into the specifics of every minor item, a quick summary of what I think are the major highlights of Emacs 29.1:</p><dl><dt>Official tree-sitter support</dt><dd><p>Tree-sitter is a third-party library that parses your text (usually code, but also things like Markdown) into a <em>concrete syntax tree</em>. It’s one of the hallmark features in Emacs 29, though it is optional for now.</p><p>I have written extensively about tree sitter. If you’re new, and wondering why you should care, read my article on <a href="https://www.masteringemacs.org/article/tree-sitter-complications-of-parsing-languages">tree-sitter and the complications of parsing languages</a>.</p><p>Briefly, a concrete syntax tree is the distillation of your text or code, and so it’s better than regular expressions and <em>ad hoc</em> snippets of code at extracting meaning from your code. It offers better font locking (syntax highlighting); correct and more precise indentation; and limitless potential to extract syntactically interesting elements from your code. That means you can do <a href="https://www.masteringemacs.org/article/combobulate-structured-movement-editing-treesitter">structured movement and editing with tree-sitter</a>, as my package Combobulate aims to do, in the vein of paredit and similar tools.</p><p>Installing tree-sitter is not straight forward, at least until your package manager starts shipping Emacs 29 with tree sitter support. My article on <a href="https://www.masteringemacs.org/article/how-to-get-started-tree-sitter">how to get started with tree-sitter</a> is a good place to start if you’re using Linux.</p></dd><dt>EGlot, the Language Server Client</dt><dd><p>EGlot, the leaner complement to the fully-featured LSP-mode, is now built into Emacs. It should work out of the box. Just type <code>M-x eglot</code> in a buffer to get started.</p></dd><dt>Use-package</dt><dd><p>I wrote about <a href="https://www.masteringemacs.org/article/spotlight-use-package-a-declarative-configuration-tool">use-package, a declarative configuration tool</a> back when it came out. That was a decade ago, almost. It’s finally in Emacs, which is a good thing indeed.</p><p>It’s an easier and more expressive way of sharing Emacs configuration snippets, and knowing it’s built in just makes everything much easier.</p></dd><dt>Better long line support</dt><dd><p>There have been, ah, several bites at this rather bitter cherry over the years.</p><p>Emacs gums up on very long lines. To say it’s infuriating would be an understatement. I’ve been caught out by this a million times. Sometimes I have to kill Emacs as it’s desperately trying to append to the same, long line of text.</p><p>It’s still not <em>solved</em>, but it <em>is</em> a lot better. More on that below.</p></dd><dt>Native SQLite Support</dt><dd><p>SQLite support, in one form or another, has been around for a while. Now you can legitimately compile Emacs with sqlite support, which is a large step forward.</p><p>As much as we like to delude ourselves into thinking that unstructured orgmode text, or even s-expressions, represent the pinnacle of text editing and the acme of scrappy hackerdom, that mantra does come with a significant penalty to performance. Ask anyone with very large org mode files or someone who wants to fast, random access to clown-sized s-expression trees. I’m sure we’ll see a much larger effort towards representing – yes, indeed, the whole point of Emacs – text in buffers as we know it, but with a fast query engine and efficient storage medium in the backend. The two need not be mutually exclusive.</p></dd><dt>Changing the init directory</dt><dd><p>You can now instruct Emacs to read its initialization from another directory from the command line. Hugely useful if you’re using and testing multiple Emacs versions at the same time.</p></dd><dt>Pixel Scroll Precision Mode</dt><dd><p>You can enable <code>M-x pixel-scroll-precision-mode</code> and get smooth scrolling like you do in other programs.</p></dd></dl><h2 id="installation-changes-in-emacs-29.1">Installation Changes in Emacs 29.1</h2><pre><code>Ahead-of-time native compilation can now be requested via configure.
Use '--with-native-compilation=aot' to request that all the Lisp files
in the Emacs tree should be natively compiled ahead of time.  (This is
slow on most machines.)

This feature existed in Emacs 28.1, but was less easy to request.</code></pre><p>Native compilation was the marquee feature in Emacs 28. It uses GCC’s libgccjit to add just-in-time compilation for all elisp code, resulting in – usually – greatly improved performance. My article, <a href="https://www.masteringemacs.org/article/speed-up-emacs-libjansson-native-elisp-compilation">Speed up Emacs with libjansson and native elisp compilation</a>, has all the gory details.</p><p>This new switch is, as it says, really just a way of front loading the (frustrating to some, but I do not mind) elisp compilation that usually runs in the background in Emacs. You could tell it to do this before also, but it was admittedly harder.</p><p>The thing is, native compilation is only run once; once it’s done, it won’t run again unless the source file changes.</p><p>So, if you want to do it all up front while you’re building Emacs from source, you can with this switch.</p><pre><code>Emacs can be built with the tree-sitter parsing library.
This library, together with separate grammar libraries for each
language, provides incremental parsing capabilities for several
popular programming languages and other formatted files.  Emacs built
with this library offers major modes, described elsewhere in this
file, that are based on the tree-sitter's parsers.  If you have the
tree-sitter library installed, the configure script will automatically
include it in the build; use '--without-tree-sitter' at configure time
to disable that.

Emacs modes based on the tree-sitter library require an additional
grammar library for each mode.  These grammar libraries provide the
tree-sitter library with language-specific lexical analysis and
parsing capabilities, and are developed separately from the
tree-sitter library itself.  If you don't have a grammar library
required by some Emacs major mode, and your distro doesn't provide it
as an installable package, you can compile and install such a library
yourself.  Many libraries can be downloaded from the tree-sitter site:

    https://github.com/tree-sitter

Emacs provides a user command, 'treesit-install-language-grammar',
that automates the download and build process of a grammar library.
It prompts for the language, the URL of the language grammar's VCS
repository, and then uses the installed C/C++ compiler to build the
library and install it.

You can also do this manually.  To compile such a library after
cloning its Git repository, compile the files "scanner.c" and
"parser.c" (sometimes named "scanner.cc" and "parser.cc") in the "src"
subdirectory of the library's source tree using the C or C++ compiler,
then link these two files into a shared library named
"libtree-sitter-LANG.so" ("libtree-sitter-LANG.dll" on MS-Windows,
"libtree-sitter-LANG.dylib" on macOS), where LANG is the name of the
language supported by the grammar as it is expected by the Emacs major
mode (for example, "c" for 'c-ts-mode', "cpp" for 'c++-ts-mode',
"python" for 'python-ts-mode', etc.).  Then place the shared library
you've built in the same directory where you keep the other shared
libraries used by Emacs, or in the "tree-sitter" subdirectory of your
'user-emacs-directory', or in a directory mentioned in the variable
'treesit-extra-load-path'.

You only need to install language grammar libraries required by the
Emacs modes you will use, as Emacs loads these libraries only when the
corresponding mode is turned on in some buffer for the first time in
an Emacs session.

We generally recommend to use the latest versions of grammar libraries
available from their sites, as these libraries are in constant
development and occasionally add features and fix important bugs to
follow the advances in the programming languages they support.</code></pre><p>As I recommended in the beginning, my article on <a href="https://www.masteringemacs.org/article/how-to-get-started-tree-sitter">installing tree-sitter</a> is a good place to start if you’re unfamiliar with the finer points of installing tree-sitter. Doubly so for the shared libraries you need for the languages you want tree-sitter to use. I demonstrate how you can both compile from source, but also download pre-compiled binaries. The latter is especially important for OSes like Windows where you may not have the tooling required to do this yourself.</p><p>It’s… a significant barrier to entry, in my opinion, to require all this work before you can use tree-sitter. The maintainers’ reasons for not shipping the libraries is also reasonable: it’s not in the scope of the GNU Emacs project to lug around a bunch of libraries written by third-party sources.</p><p>Having said that, the frustration of setting it up is somewhat alleviated by the helpful <code>treesit-install-language-grammar</code> function, as it’ll attempt to guess the target and compiler switches required and automatically check out the tree-sitter libraries from Ghit. But, still, it could be easier.</p><p>So, yeah, again: read my article where I cover all the gotchas and things you need to know. This sort of stuff is the prize you get for going through with it all:</p><figure>
<img src="https://www.masteringemacs.org/static/uploads/combobulate/expand-region.gif" alt="">
<figcaption>My package, <a href="https://www.masteringemacs.org/article/combobulate-structured-movement-editing-treesitter">Combobulate</a>, adds advanced editing and movement using tree-sitter. This is Combobulate's expand region feature, bound to <code>M-h</code>.</figcaption>
</figure><p>Thanks to tree-sitter you can have crisp and clear “expand region” functionality that’ll correctly mark the boundaries of each syntactic unit.</p><pre><code>Emacs can be built with built-in support for accessing SQLite databases.
This uses the popular sqlite3 library, and can be disabled by using
the '--without-sqlite3' option to the 'configure' script.</code></pre><p>With formal support of SQLite in Emacs, I can imagine that this’ll be one of those options most distro maintainers will enable by default, as SQLite’s widely used in most distros already. That’s good new for everyone: SQLite will find a place in all manner of places in Emacs over time.</p><p>All we need now is a nice, ergonomic and Lispy query builder layer on top. Any takers?</p><pre><code>Support for the WebP image format.
This support is built by default when the libwebp library is
available, and includes support for animated WebP images.  To disable
WebP support, use the '--without-webp' configure flag.  Image
specifiers can now use ':type webp'.</code></pre><p>Useful if you do a lot of web development where that is becoming a common file format. I cannot divine how this integrates with the imagemagick configure flag, though. The implication is it is not required at all or that it even works with imagemagick.</p><pre><code>Emacs now installs the ".pdmp" file using a unique fingerprint in the name.
The file is typically installed using a file name akin to
"...dir/libexec/emacs/29.1/x86_64-pc-linux-gnu/emacs-&lt;fingerprint&gt;.pdmp".
If a constant file name is required, the file can be renamed to
"emacs.pdmp", and Emacs will find it during startup anyway.</code></pre><p>This should be of interest to few, except maybe distro maintainers.</p><pre><code>Emacs on X now uses XInput 2 for input events.
If your X server has support and you have the XInput 2 development
headers installed, Emacs will use the X Input Extension for handling
input.  If this causes problems, you can configure Emacs with the
option '--without-xinput2' to disable this support.

'(featurep 'xinput2)' can be used to test for the presence of XInput 2
support from Lisp programs.</code></pre><p>I reported a couple of bugs against this (which were fixed within the hour!) particularly around mouse wheel scrolling not working well. If you do compile Emacs with this flag, as I have and still do, I’d keep an eye on weird input event regressions. Make sure you report them.</p><pre><code>Emacs can now be optionally built with the Cairo XCB backend.
Configure Emacs with the '--with-cairo-xcb' option to use the Cairo
XCB backend; the default is not to use it.  This backend makes Emacs
moderately faster when running over X connections with high latency,
but is currently known to crash when Emacs repeatedly closes and opens
a display connection to the same terminal; this could happen, for
example, if you repeatedly visit files via emacsclient in a single
client frame, each time deleting the frame with 'C-x C-c'.</code></pre><p>Cairo’s an open source 2d rendering library that Emacs added support for some versions ago.</p><pre><code>Emacs now supports being built with pure GTK.
To use this option, make sure the GTK 3 (version 3.22.23 or later) and
Cairo development files are installed, and configure Emacs with the
option '--with-pgtk'.  Unlike the default X and GTK build, the
resulting Emacs binary will work on any underlying window system
supported by GDK, such as Wayland and Broadway.  We recommend that you
use this configuration only if you are running a window system other
than X that's supported by GDK.  Running this configuration on X is
known to have problems, such as undesirable frame positioning and
various issues with keyboard input of sequences such as 'C-;' and
'C-S-u'.  Running this on WSL is also known to have problems.

Note that, unlike the X build of Emacs, the PGTK build cannot
automatically switch to text-mode interface (thus emulating '-nw') if
it cannot determine the default display; it will instead complain and
ask you to invoke it with the explicit '-nw' option.</code></pre><p>The warning about not running Emacs built with <code>--with-pgtk</code> under X cannot be understated. You really shouldn’t do that, though you’ll occasionally see references to people insisting that you build Emacs with it, regardless of the window system you’re using. If you’re not using Wayland/Broadway, you probably do not care about this.</p><pre><code>Emacs has been ported to the Haiku operating system.
The configuration process should automatically detect and build for
Haiku.  There is also an optional window-system port to Haiku, which
can be enabled by configuring Emacs with the option '--with-be-app',
which will require the Haiku Application Kit development headers and a
C++ compiler to be present on your system.  If Emacs is not built with
the option '--with-be-app', the resulting Emacs will only run in
text-mode terminals.

To enable Cairo support, ensure that the Cairo and FreeType
development files are present on your system, and configure Emacs with
'--with-be-cairo'.

Unlike X, there is no compile-time option to enable or disable
double-buffering; it is always enabled.  To disable it, change the
frame parameter 'inhibit-double-buffering' instead.</code></pre><pre><code>Emacs no longer reduces the size of the Japanese dictionary.
Building Emacs includes generation of a Japanese dictionary, which is
used by Japanese input methods.  Previously, the build included a step
of reducing the size of this dictionary's vocabulary.  This vocabulary
reduction is now optional, by default off.  If you need the Emacs
build to include the vocabulary reduction, configure Emacs with the
option '--with-small-ja-dic'.  In an Emacs source tree already
configured without that option, you can force the vocabulary reduction
by saying

    make -C leim generate-ja-dic JA_DIC_NO_REDUCTION_OPTION=''

after deleting "lisp/leim/ja-dic/ja-dic.el".</code></pre><pre><code>The docstrings of preloaded files are not in "etc/DOC" any more.
Instead, they're fetched as needed from the corresponding ".elc"
files, as was already the case for all the non-preloaded files.</code></pre><h2 id="startup-changes-in-emacs-29.1">Startup Changes in Emacs 29.1</h2><pre><code>'--batch' and '--script' now adjust the garbage collection levels.
These switches now set 'gc-cons-percentage' to 1.0 (up from the
default of 0.1).  This means that batch processes will typically use
more memory than before, but use less time doing garbage collection.
Batch jobs that are supposed to run for a long time should adjust the
limit back down again.</code></pre><p>That’s excellent news and it cuts out the middle-man of having to manually <code>let</code>-bind these variables if you were doing complex things in batch mode.</p><pre><code>Emacs can now be used more easily in an executable script.
If you start an executable script with

    #!/usr/bin/emacs -x

Emacs will start without reading any init files (like with '--quick'),
and then execute the rest of the script file as Emacs Lisp.  When it
reaches the end of the script, Emacs will exit with an exit code from
the value of the final form.</code></pre><p>I’ll have to experiment and see if I can elide the need for <code>bash</code> in my tool <code>ezf</code>, which is an Emacs-only version of the <code>fzf</code> tool. See: <a href="https://www.masteringemacs.org/article/fuzzy-finding-emacs-instead-of-fzf">Fuzzy Finding with Emacs Instead of fzf</a>.</p><pre><code>Emacs now supports setting 'user-emacs-directory' via '--init-directory'.
Use the '--init-directory' command-line option to set
'user-emacs-directory'.</code></pre><p>Wonderful news for those of us who have to test our packages using various Emacs versions and user configurations.</p><pre><code>Emacs now has a '--fingerprint' option.
This will output a string identifying the current Emacs build, and exit.</code></pre><p>Useful if you run Emacs in CI, I guess.</p><pre><code>New hook 'after-pdump-load-hook'.
This is run at the end of the Emacs startup process, and is meant to
be used to reinitialize data structures that would normally be done at
load time.</code></pre><p>This is unlikely to be of use to anyone except elisp grognards doing very particular things.</p><h3 id="native-compilation">Native Compilation</h3><pre><code>New command 'native-compile-prune-cache'.
This command deletes old subdirectories of the eln cache (but not the
ones for the current Emacs version).  Note that subdirectories of the
system directory where the "*.eln" files are installed (usually, the
last entry in 'native-comp-eln-load-path') are not deleted.</code></pre><p>If you regularly rebuild Emacs from scratch, it’s probably worth enabling this.</p><pre><code>New function 'startup-redirect-eln-cache'.
This function can be called in your init files to change the
user-specific directory where Emacs stores the "*.eln" files produced
by native compilation of Lisp packages Emacs loads.  The default
eln cache directory is unchanged: it is the "eln-cache" subdirectory
of 'user-emacs-directory'.</code></pre><p>Files are put in your – usually <code>.emacs.d</code> – directory by default. If you dislike Emacs polluting that directory you can now change it.</p><h2 id="incompatible-changes-in-emacs-29.1">Incompatible changes in Emacs 29.1</h2><pre><code>The image commands have changed key bindings.
In previous Emacs versions, the '+', '-' and 'r' keys were bound when
point was over an image.  In Emacs 29.1, additional commands have been
added, and this made it more likely that users would trigger the image
commands by mistake.  To avoid this, all image commands have been
moved to the 'i' prefix keymap, so '+' is now 'i +', '-' is now 'i -',
and 'r' is now 'i r'.  In addition, these commands are now repeating,
so you can rotate an image twice by saying 'i r r', for instance.</code></pre><p>It’s not clear, but all the key bindings (incl. the new ones) now live under <code>i</code>. See <code>M-x describe-keymap image-slice-map</code>.</p><pre><code>Emacs now picks the correct coding-system for X input methods.
Previously, Emacs would use 'locale-coding-system' for input
methods, which could in some circumstances be incorrect, especially
when the input method chose to fall back to some other coding system.

Emacs now automatically detects the coding-system used by input
methods, and uses that to decode input in preference to the value of
'locale-coding-system'.  This unfortunately means that users who have
changed the coding system used to decode X keyboard input must adjust
their customizations to 'locale-coding-system' to the variable
'x-input-coding-system' instead.</code></pre><p>Not sure how many people this is likely to affect, but fixing this is nice. I do feel the variable is a little bit mis-named now, as I would not ordinarily connect locale (be it in the i18n or unix LOCALE sense of the word) to my X windows keyboard input.</p><pre><code>Bookmarks no longer include context for encrypted files.
If you're visiting an encrypted file, setting a bookmark no longer
includes excerpts from that buffer in the bookmarks file.  This is
implemented by the new hook 'bookmark-inhibit-context-functions',
where packages can register a function which returns non-nil for file
names to be excluded from adding such excerpts.</code></pre><p>Heh. Whoops. It’s easy to see how it could happen due to how bookmarking is implemented in Emacs. The perils of having so many disparate and tangled systems all working together in (mostly) harmony.</p><pre><code>'show-paren-mode' is now disabled in 'special-mode' buffers.
In Emacs versions previous to Emacs 28.1, 'show-paren-mode' defaulted
off.  In Emacs 28.1, the mode was switched on in all buffers.  In
Emacs 29.1, this was changed to be switched on in all editing-related
buffers, but not in buffers that inherit from 'special-mode'.  To go
back to how things worked in Emacs 28.1, put the following in your
init file:

    (setopt show-paren-predicate t)</code></pre><p>Unlikely to bother too many people in <em>theory</em> when you read this, but it also affects Help and Info buffers! So if you want it back in those, you clearly have to re-set it for all special buffers.</p><pre><code>Explicitly-set read-only state is preserved when reverting a buffer.
If you use the 'C-x C-q' command to change the read-only state of the
buffer and then revert it, Emacs would previously use the file
permission bits to determine whether the buffer should be read-only
after reverting the buffer.  Emacs now remembers the decision made in
'C-x C-q'.</code></pre><p>That’s a handy fix for me if you also use TRAMP or such-like to view files that you only have read permissions to look at. Now you can have auto revert on and yet still apply things like <code>M-x flush-lines</code> without losing the read only flag on revert.</p><pre><code>The Gtk selection face is no longer used for the region.
The combination of a Gtk-controlled background and a foreground color
controlled by the internal Emacs machinery led to low-contrast faces
in common default setups.  Emacs now uses the same 'region' face on
Gtk and non-Gtk setups.</code></pre><p>Never spotted this issue myself, though it’s nice to see these little burrs get filed off, one by one.</p><pre><code>'C-h f' and 'C-h x' may now require confirmation when you press 'RET'.
If the text in the minibuffer cannot be completed to a single function
or command, typing 'RET' will not automatically complete to the shortest
candidate, but will instead ask for confirmation.  Typing 'TAB' will
complete as much as possible, and another 'TAB' will show all the
possible completions.  This allows you to insist on the functions name
even if Help doesn't appear to know about it, by confirming with a
second 'RET'.</code></pre><p>I’m unclear if this is a generic change to the completion system or if it’s limited to just those two commands.</p><pre><code>'w' ('dired-copy-filename-as-kill') has changed behavior.
If there are several files marked, file names containing space and
quote characters will be quoted "like this".</code></pre><p>Good. I’ve been caught out by that bug before.</p><pre><code>The 'd' command now more consistently skips dot files.
In previous Emacs versions, commands like 'C-u 10 d' would put the "D"
mark on the next ten files, no matter whether they were dot files
(i.e., "." and "..") or not, while marking the next ten lines with the
mouse (in 'transient-mark-mode') and then hitting 'd' would skip dot
files.  These now work equivalently.</code></pre><p>Another nice fix. Imagine the panic of seeing <code>..</code> or <code>.</code> marked D after you’ve triggered the delete action…</p><pre><code>'/ a' in "*Packages*" buffer now limits by archive name(s) instead of regexp.</code></pre><p>I don’t have any strong feelings about this. Is regexp search ever really useful in a repository where you’re looking for things by name? Word stemming and other such techniques would be a more useful feature than regexp. I can’t imagine too many people mind this.</p><pre><code>Setting the goal columns now also affects '&lt;prior&gt;' and '&lt;next&gt;'.
Previously, 'C-x C-n' only affected 'next-line' and 'previous-line',
but it now also affects 'scroll-up-command' and 'scroll-down-command'.</code></pre><p>Goal columns change the default column offset point is placed at on a line. Set it to 10, and point is set at the 10th column position when you move up or down a line. All this does is make it so your page up / down keys also respect it.</p><p>(You can unset a goal column with <code>C-0 C-x C-n</code>.)</p><pre><code>Isearch in "*Help*" and "*info*" now char-folds quote characters by default.
This means that you can say 'C-s `foo' (GRAVE ACCENT) if the buffer
contains "‘foo" (LEFT SINGLE QUOTATION MARK) and the like.  These
quotation characters look somewhat similar in some fonts.  To switch
this off, disable the new 'isearch-fold-quotes-mode' minor mode.</code></pre><p>This is useful outside those buffers, of course. If you work with prose where the unicode glyphs are common, you can instead search for their elementary ASCII cousins instead and still match. Turn it on – why not?</p><pre><code>Sorting commands no longer necessarily change modification status.
In earlier Emacs versions, commands like 'sort-lines' would always
change buffer modification status to "modified", whether they changed
something in the buffer or not.  This has been changed: the buffer is
marked as modified only if the sorting ended up actually changing the
contents of the buffer.</code></pre><p>You can still toggle a buffer’s modification manually with <code>M-~</code> though.</p><pre><code>'string-lines' handles trailing newlines differently.
It no longer returns an empty final string if the string ends with a
newline.</code></pre><pre><code>'TAB' and '&lt;backtab&gt;' are now bound in 'button-map'.
This means that if point is on a button, 'TAB' will take you to the
next button, even if the mode has bound it to something else.  This
also means that 'TAB' on a button in an 'outline-minor-mode' heading
will move point instead of collapsing the outline.</code></pre><p>Nice change. Buttons aren’t just <em>buttons</em>, they are often clickable things generally speaking. Hyperlinks often also fall under this category.</p><pre><code>'outline-minor-mode-cycle-map' is now parent of 'outline-minor-mode'.
Instead of adding text property 'keymap' with 'outline-minor-mode-cycle'
on outline headings in 'outline-minor-mode', the keymap
'outline-minor-mode-cycle' is now active in the whole buffer.
But keybindings in 'outline-minor-mode-cycle' still take effect
only on outline headings because they are bound with the help of
'outline-minor-mode-cycle--bind' that checks if point is on a heading.</code></pre><p>Mechanical change that is unlikely to affect day-to-day use if you use outline. I suspect this is mostly done to make it easier to search keymaps or perhaps fix some obscure keyboard events that don’t activate property keymaps.</p><pre><code>'Info-default-directory-list' is no longer populated at Emacs startup.
If you have code in your init file that removes directories from
'Info-default-directory-list', this will no longer work.</code></pre><pre><code>'C-k' no longer deletes files in 'ido-mode'.
To get the previous action back, put something like the following in
your Init file:

    (require 'ido)
    (keymap-set ido-file-completion-map "C-k" #'ido-delete-file-at-head)</code></pre><p>Terrifying default, if you ask me. Good riddance.</p><pre><code>New user option 'term-clear-full-screen-programs'.
By default, term.el will now work like most terminals when displaying
full-screen programs: When they exit, the output is cleared, leaving
what was displayed in the window before the programs started.  Set
this user option to nil to revert back to the old behavior.</code></pre><p>As always I recommend you explore alternatives to term. See <a href="https://www.masteringemacs.org/article/running-shells-in-emacs-overview">Running Shells and Terminal Emulators in Emacs</a>,</p><pre><code>Support for old EIEIO functions is not autoloaded any more.
You need an explicit '(require 'eieio-compat)' to use 'defmethod'
and 'defgeneric' (which were made obsolete in Emacs 25.1 by
'cl-defmethod' and 'cl-defgeneric').
Similarly you might need to '(require 'eieio-compat)' before loading
files that were compiled with an old EIEIO (Emacs&lt;25).</code></pre><p>Mostly of interest to people maintaining libraries.</p><pre><code>'C-x 8 .' has been moved to 'C-x 8 . .'.
This is to open up the 'C-x 8 .' map to bind further characters there.</code></pre><p>Unlikely to affect a great many people.</p><pre><code>'C-x 8 =' has been moved to 'C-x 8 = ='.
You can now use 'C-x 8 =' to insert several characters with macron;
for example, 'C-x 8 = a' will insert U+0101 LATIN SMALL LETTER A WITH
MACRON.  To insert a lone macron, type 'C-x 8 = =' instead of the
previous 'C-x ='.</code></pre><p>It’s just another keymap with a range of characters.</p><h2 id="eshell">Eshell</h2><p>Eshell is Emacs’s builtin shell written entirely in Elisp. It’s, like, totally awesome. See <a href="https://www.masteringemacs.org/article/complete-guide-mastering-eshell">Mastering Eshell</a>.</p><pre><code>Eshell's PATH is now derived from 'exec-path'.
For consistency with remote connections, Eshell now uses 'exec-path'
to determine the execution path on the local or remote system, instead
of using the PATH environment variable directly.</code></pre><p>Should aid with using TRAMP from Eshell.</p><pre><code>'source' and '.' no longer accept the '--help' option.
This is for compatibility with the shell versions of these commands,
which don't handle options like '--help' in any special way.</code></pre><pre><code>String delimiters in argument predicates/modifiers are more restricted.
Previously, some argument predicates/modifiers allowed arbitrary
characters as string delimiters.  To provide more unified behavior
across all predicates/modifiers, the list of allowed delimiters has
been restricted to "...", '...', /.../, |...|, (...), [...], &lt;...&gt;,
and {...}.  See the "(eshell) Argument Predication and Modification"
node in the Eshell manual for more details.</code></pre><p>Seems like a sensible change, though I wonder if there are any instances where this limitation won’t work?</p><pre><code>Eshell pipelines now only pipe stdout by default.
To pipe both stdout and stderr, use the '|&amp;' operator instead of '|'.</code></pre><p>That is in keeping with the behavior of other shells, so that’s good.</p><pre><code>The 'delete-forward-char' command now deletes by grapheme clusters.
This command is by default bound to the '&lt;Delete&gt;' function key
(a.k.a. '&lt;deletechar&gt;').  When invoked without a prefix argument or
with a positive prefix numeric argument, the command will now delete
complete grapheme clusters produced by character composition.  For
example, if point is before an Emoji sequence, pressing '&lt;Delete&gt;'
will delete the entire sequence, not just a single character at its
beginning.</code></pre><p>Interesting change, but if you use <code>C-d</code> then know that it calls <code>delete-char</code> and not <code>delete-forward-char</code>. Consider rebinding it if you want this feature.</p><p>If you regularly work with languages that make use of grapheme clusters – or if you’re a Javascript developer and write purely with Emoji characters – then this is most likely a useful feature for you.</p><pre><code>'load-history' does not treat autoloads specially any more.
An autoload definition appears just as a '(defun . NAME)' and the
'(t . NAME)' entries are not generated any more.</code></pre><p>This is of little to no impact to most users.</p><pre><code>The Tamil input methods no longer insert Tamil digits.
The input methods 'tamil-itrans' and 'tamil-inscript' no longer insert
the Tamil digits, as those digit characters are not used nowadays by
speakers of the Tamil language.  To get back the previous behavior,
use the new 'tamil-itrans-digits' and 'tamil-inscript-digits' input
methods instead.</code></pre><pre><code>New variable 'current-time-list' governing default timestamp form.
Functions like 'current-time' now yield '(TICKS . HZ)' timestamps if
this new variable is nil.  The variable defaults to t, which means
these functions default to timestamps of the forms '(HI LO US PS)',
'(HI LO US)' or '(HI LO)', which are less regular and less efficient.
This is part of a long-planned change first documented in Emacs 27.
Developers are encouraged to test timestamp-related code with this
variable set to nil, as it will default to nil in a future Emacs
version and will be removed some time after that.</code></pre><pre><code>Functions that recreate the "*scratch*" buffer now also initialize it.
When functions like 'other-buffer' and 'server-execute' recreate
"*scratch*", they now also insert 'initial-scratch-message' and set
the major mode according to 'initial-major-mode', like at Emacs
startup.  Previously, these functions ignored
'initial-scratch-message' and left "*scratch*" in 'fundamental-mode'.</code></pre><p>Heh, you know, whenever I’ve had to recreate that buffer myself I always found I missed the usual scratch buffer blurb.</p><pre><code>Naming of Image-Dired thumbnail files has changed.
Names of thumbnail files generated when 'image-dired-thumbnail-storage'
is 'image-dired' now always end in ".jpg".  This fixes various issues
on different platforms, but means that thumbnails generated in Emacs 28
will not be used in Emacs 29, and vice-versa.  If disk space is an
issue, consider deleting the 'image-dired-dir' directory (usually
"~/.emacs.d/image-dired/") after upgrading to Emacs 29.</code></pre><p>Or you could rename them yourself. See <a href="https://www.masteringemacs.org/article/working-multiple-files-dired">Working with multiple files in dired</a> and <a href="https://www.masteringemacs.org/article/wdired-editable-dired-buffers">WDired: Editable Dired Buffers</a>.</p><pre><code>The 'rlogin' method in the URL library is now obsolete.
Emacs will now display a warning if you request a URL like
"rlogin://foo@example.org".</code></pre><pre><code>Setting 'url-gateway-method' to 'rlogin' is now obsolete.
Emacs will now display a warning when setting it to that value.
The user options 'url-gateway-rlogin-host',
'url-gateway-rlogin-parameters', and 'url-gateway-rlogin-user-name'
are also obsolete.</code></pre><pre><code>The rlogin.el library, and the 'rsh' command are now obsolete.
Use something like 'M-x shell RET ssh &lt;host&gt; RET' instead.</code></pre><p>Rlogin is a series of, putting it mildly, insecure legacy protocols from the disco era of software. They’re long-abandoned and consigned to the history books. So, I mean, yeah, sure, rlogin is awful, but… that horse has long bolted, had millennial kids and is comfortably on its way to retirement. So I think Emacs is a bit late to the party here.</p><pre><code>The user function 'url-irc-function' now takes a SCHEME argument.
The user option 'url-irc-function' is now called with a sixth argument
corresponding to the scheme portion of the target URL.  For example,
this would be "ircs" for a URL like "ircs://irc.libera.chat".</code></pre><pre><code>The linum.el library is now obsolete.
We recommend using either the built-in 'display-line-numbers-mode', or
the 'nlinum' package from GNU ELPA instead.  The former has better
performance, but the latter is closer to a drop-in replacement.

1. To use 'display-line-numbers-mode', add something like this to your
   init file:

    (global-display-line-numbers-mode 1)
    ;; Alternatively, to use it only in programming modes:
    (add-hook 'prog-mode-hook #'display-line-numbers-mode)

2. To use 'nlinum', add this to your Init file:

    (package-install 'nlinum)
    (global-nlinum-mode 1)
    ;; Alternatively, to use it only in programming modes:
    (add-hook 'prog-mode-hook #'nlinum-mode)

3. To continue using the obsolete package 'linum', add this line to
   your Init file, in addition to any existing customizations:

    (require 'linum)</code></pre><p>The “new” (it debuted in Emacs 26) line numbers mode is excellent and far and away the best way to show line numbers in Emacs. I can’t imagine too many are sad to see linum get obsoleted.</p><pre><code>The thumbs.el library is now obsolete.
We recommend using the 'image-dired' command instead.</code></pre><pre><code>The autoarg.el library is now marked obsolete.
This library provides the 'autoarg-mode' and 'autoarg-kp-mode' minor
modes to emulate the behavior of the historical editor Twenex Emacs.
We believe it is no longer useful.</code></pre><p>Interesting historical curiosity that lives on in Emacs, now in an obsolete state. Obsolete in Emacs usually means that it’ll get removed <em>eventually</em> or, indeed, never; it comes down to how many flare-ups there are on the mailing list.</p><p>Still, Emacs’s many dusty corners remain, to me, a fun time capsule and a look back at how things were. We shouldn’t rush into removing things just because they’re mostly forgotten.</p><pre><code>The quickurl.el library is now obsolete.
Use 'abbrev', 'skeleton' or 'tempo' instead.</code></pre><p>Yet another snippet completion tool. Abbrev is useful for <a href="https://www.masteringemacs.org/article/correcting-typos-misspellings-abbrev">correcting typos and misspellings</a>, and Skeleton and Tempo are two peas in a pod that offer textual expansion using a simple s-expression-based language.</p><pre><code>The url-about.el library is now obsolete.</code></pre><p>It seems to generate an HTML page with a list of supported URL schemes. There’s no commentary nor any real version history to accompany it. its actual use is a mystery to me.</p><pre><code>The autoload.el library is now obsolete.
It is superseded by the new loaddefs-gen.el library.</code></pre><pre><code>The netrc.el library is now obsolete.
Use the 'auth-source-netrc-parse-all' function in auth-source.el
instead.</code></pre><pre><code>The url-dired.el library is now obsolete.</code></pre><pre><code>The fast-lock.el and lazy-lock.el libraries have been removed.
They have been obsolete since Emacs 22.1.

The variable 'font-lock-support-mode' is occasionally useful for
debugging purposes.  It is now a regular variable (instead of a user
option) and can be set to nil to disable Just-in-time Lock mode.</code></pre><p>Neither are likely to be missed by anyone. Lazy locking and Fast Locking were both attempts to speed up Emacs’s font locking facilities using a number of heuristics and obtuse variables. They’re gone, but the arcana lives on in Emacs’s Just-in-Time font locking engine.</p><pre><code>The 'utf-8-auto' coding-system now produces BOM on encoding.
This is actually a bugfix, since this is how 'utf-8-auto' was
documented from day one; it just didn't behave according to
documentation.  It turns out some Lisp programs were using this
coding-system on the wrong assumption that the "auto" part means some
automagic handling of the end-of-line (EOL) format conversion; those
programs will now start to fail, because BOM signature in UTF-8 encoded
text is rarely expected.  That is the reason we mention this bugfix
here.

In general, this coding-system should probably never be used for
encoding, only for decoding.</code></pre><h2 id="changes-in-emacs-29.1">Changes in Emacs 29.1</h2><pre><code>New user option 'major-mode-remap-alist' to specify favorite major modes.
This user option lets you remap the default modes (e.g. 'perl-mode' or
'latex-mode') to your favorite ones (e.g. 'cperl-mode' or
'LaTeX-mode') instead of having to use 'defalias', which can have
undesirable side effects.
This applies to all modes specified via 'auto-mode-alist', file-local
variables, etc.</code></pre><p><em>Bit</em> of a hack. Essentially, it’s a “remap” facility for major modes, akin to <code>defalias</code> which would not work here. Use it, as it says above, to swap one major mode for another.</p><p>However, and it forgets to say this explicitly, its primary use case is for tree-sitter-enabled major modes as they are separate from their non-TS kin; use this variable to rewire them. See <a href="https://www.masteringemacs.org/article/how-to-get-started-tree-sitter">my article on getting started with tree-sitter</a> for an example of how to use it.</p><p>Note that this variable only remaps the major mode command – it does <em>not</em> fix your mode hooks or other settings!</p><pre><code>Emacs now supports Unicode Standard version 15.0.</code></pre><p><a href="https://www.unicode.org/versions/Unicode15.0.0/">Unicode 15</a> adds:</p><blockquote><p>Unicode 15.0 adds 4,489 characters, for a total of 149,186 characters. These additions include 2 new scripts, for a total of 161 scripts, along with 20 new emoji characters, and 4,193 CJK (Chinese, Japanese, and Korean) ideographs.</p></blockquote><pre><code>New user option 'electric-quote-replace-consecutive'.
This allows you to disable the default behavior of consecutive single
quotes being replaced with a double quote.</code></pre><p>This is referring to <code>electric-pair[-local]-mode</code>, the built-in pairing tool for characters. You’re <em>probably</em> using it already in newer Emacsen.</p><pre><code>Emacs is now capable of editing files with very long lines.
The display of long lines has been optimized, and Emacs should no
longer choke when a buffer on display contains long lines.  The
variable 'long-line-threshold' controls whether and when these display
optimizations are in effect.

A companion variable 'large-hscroll-threshold' controls when another
set of display optimizations are in effect, which are aimed
specifically at speeding up display of long lines that are truncated
on display.

If you still experience slowdowns while editing files with long lines,
this may be due to line truncation, or to one of the enabled minor
modes, or to the current major mode.  Try turning off line truncation
with 'C-x x t', or try disabling all known slow minor modes with
'M-x so-long-minor-mode', or try disabling both known slow minor modes
and the major mode with 'M-x so-long-mode', or visit the file with
'M-x find-file-literally' instead of the usual 'C-x C-f'.

In buffers in which these display optimizations are in effect, the
'fontification-functions', 'pre-command-hook' and 'post-command-hook'
hooks are executed on a narrowed portion of the buffer, whose size is
controlled by the variables 'long-line-optimizations-region-size' and
'long-line-optimizations-bol-search-limit', as if they were in a
'with-restriction' form.  This may, in particular, cause occasional
mis-fontifications in these buffers.  Modes which are affected by
these optimizations and by the fact that the buffer is narrowed,
should adapt and either modify their algorithm so as not to expect the
entire buffer to be accessible, or, if accessing outside of the
narrowed region doesn't hurt performance, use the
'without-restriction' form to temporarily lift the restriction and
access portions of the buffer outside of the narrowed region.

The new function 'long-line-optimizations-p' returns non-nil when
these optimizations are in effect in the current buffer.</code></pre><p>So long, <code>so-long-mode</code>. Having said that, I’m still getting coughs and sputters on long lines, on occasion. But it’s a marked improvement over older Emacsen. You should follow the advice given above and experiment to find the right settings for you.</p><pre><code>New command to change the font size globally.
To increase the font size, type 'C-x C-M-+' or 'C-x C-M-='; to
decrease it, type 'C-x C-M--'; to restore the font size, type 'C-x
C-M-0'.  The final key in these commands may be repeated without the
leading 'C-x' and without the modifiers, e.g. 'C-x C-M-+ C-M-+ C-M-+'
and 'C-x C-M-+ + +' increase the font size by three steps.  When
'mouse-wheel-mode' is enabled, 'C-M-wheel-up' and 'C-M-wheel-down' also
increase and decrease the font size globally.  Additionally, the
user option 'global-text-scale-adjust-resizes-frames' controls whether
the frames are resized when the font size is changed.</code></pre><p>You can already use <code>C-x C-=</code> and friends to adjust a single buffer, so it’s nice to see it extended to all of Emacs. Great for projectors and screen sharing.</p><pre><code>New config variable 'syntax-wholeline-max' to reduce the cost of long lines.
This variable is used by some operations (mostly syntax-propertization
and font-locking) to treat lines longer than this variable as if they
were made up of various smaller lines.  This can help reduce the
slowdowns seen in buffers made of a single long line, but can also
cause misbehavior in the presence of such long lines (though most of
that misbehavior should usually be limited to mis-highlighting).  You
can recover the previous behavior with:

    (setq syntax-wholeline-max most-positive-fixnum)</code></pre><p>Definitely worth playing with if you have performance issues. It’s set to 10,000 which I think sounds like a reasonable default. Syntax here refers to a huge range of commands, many of them you probably don’t know of, like <code>parse-partial-sexp</code> and <code>syntax-ppss</code>. Needless to say, everything from font locking to navigation and editing are affected in one way or another.</p><pre><code>New bindings in 'find-function-setup-keys' for 'find-library'.
When 'find-function-setup-keys' is enabled, 'C-x L' is now bound to
'find-library', 'C-x 4 L' is now bound to 'find-library-other-window'
and 'C-x 5 L' is now bound to 'find-library-other-frame'.</code></pre><p>Okay, so the wording’s a bit diffuse. When you <a href="https://www.masteringemacs.org/article/evaluating-elisp-emacs">evaluate</a> <code>(find-function-setup-keys)</code> it’ll bind a bunch of key bindings in the <code>C-x</code>, <code>C-x 4</code> and <code>C-x 5</code> keymaps.</p><p>I didn’t even <em>know</em> about this feature. Turns out Stallman added it in 1998. Huh. The more you know. So yeah, if execute that function you’ll get some handy key bindings to jump to functions and now libraries.</p><pre><code>New key binding after 'M-x' or 'M-X': 'M-X'.
Emacs allows different completion predicates to be used with 'M-x'
(i.e., 'execute-extended-command') via the
'read-extended-command-predicate' user option.  Emacs also has the
'M-X' (note upper case X) command, which only displays commands
especially relevant to the current buffer.  Emacs now allows toggling
between these modes while the user is inputting a command by hitting
'M-X' while in the minibuffer.</code></pre><p>Nice change. The <code>M-X</code> (note case) key binding filters the list of commands to the ones deemed “relevant” to your active buffer. It’s a nifty feature and a nice way to discover new things.</p><pre><code>Interactively, 'kill-buffer' will now offer to save the buffer if unsaved.</code></pre><p>Not much to say here: good.</p><pre><code>New commands 'duplicate-line' and 'duplicate-dwim'.
'duplicate-line' duplicates the current line the specified number of times.
'duplicate-dwim' duplicates the region if it is active.  If not, it
works like 'duplicate-line'.  An active rectangular region is
duplicated on its right-hand side.  The new user option
'duplicate-line-final-position' specifies where to move point
after duplicating a line.</code></pre><p>Apparently one of the ‘meme arguments’ for why Vi(m) is better, as it has the option to easily do this. Well, good news, Vim users: you can now prostrate yourself before Emacs.</p><p>Now annoyingly, they didn’t bind them to a key. (Why?). Let’s fix that real quick:</p><p>:</p><pre><code>(global-set-key (kbd "C-x j") #'duplicate-dwim)</code></pre><p><code>C-x j</code> seems free; we’ll wedge it in there.</p><pre><code>Files with the ".eld" extension are now visited in 'lisp-data-mode'.</code></pre><pre><code>'network-lookup-address-info' can now check numeric IP address validity.
Specifying 'numeric' as the new optional HINTS argument makes it
check if the passed address is a valid IPv4/IPv6 address (without DNS
traffic).

    (network-lookup-address-info "127.1" 'ipv4 'numeric)
    =&gt; ([127 0 0 1 0])</code></pre><p>Speaking of network stuff. Did you know that Emacs <a href="https://www.masteringemacs.org/article/network-utilities-emacs">has a host of wrappers for commandline network utilities</a>?</p><pre><code>New command 'find-sibling-file'.
This command jumps to a file considered a "sibling file", which is
determined according to the new user option 'find-sibling-rules'.</code></pre><p>No word on whether this is meant to replace – or indeed, augment – the existing <code>M-x ffap</code> (find file at point) that tries to do much the same. There’s also <code>M-x ff-find-related-file</code> which works well indeed.</p><p>It’s worth noting that both of these options come with a laundry list of heuristics already, such as finding header files belonging to a source file.</p><p>The <code>find-sibling-rules</code> variable, meanwhile, is empty.</p><p>Mmm… there’s a missed opportunity here to merge this stuff.</p><pre><code>New user option 'delete-selection-temporary-region'.
When non-nil, 'delete-selection-mode' will only delete the temporary
regions (usually set by mouse-dragging or shift-selection).</code></pre><p>Actually, this is a neat little feature. If you use the mark commands to select stuff, like <code>C-M-SPC</code> or <code>M-@</code>, then you’d delete the text if you typed a character. With this option, it only happens if you select by some other means.</p><pre><code>New user option 'switch-to-prev-buffer-skip-regexp'.
This should be a regexp or a list of regexps; buffers whose names
match those regexps will be ignored by 'switch-to-prev-buffer' and
'switch-to-next-buffer'.</code></pre><p>If you use either of these commands (<code>C-x C-&lt;right/left&gt;</code>) to navigate, you’d probably want to add all the flotsam and jetsam you don’t want to switch to.</p><pre><code>New command 'rename-visited-file'.
This command renames the file visited by the current buffer by moving
it to a new name or location, and also makes the buffer visit this new
file.</code></pre><p>Yep. Emacs has never had the ability to rename a file <em>in-situ</em> from the buffer. Until someone pointed that out to me I thought it did. But then I remember I rename everything in dired — and seemingly so did everyone else who used Emacs up until now when that command was added.</p><p>A long, over-due command.</p><pre><code>The entries following the buffers in the "Buffers" menu can now be altered.
Change the 'menu-bar-buffers-menu-command-entries' variable to alter
the entries that follow the buffer list.</code></pre><p>You can customize Emacs’s menu entries by altering this variable.</p><pre><code>'delete-process' is now a command.
When called interactively, it will kill the process running in the
current buffer (if any).  This can be useful if you have runaway
output in the current buffer (from a process or a network connection),
and want to stop it.</code></pre><p>Very useful. You should know about <code>M-x list-processes</code> also.</p><pre><code>New command 'restart-emacs'.
This is like 'save-buffers-kill-emacs', but instead of just killing
the current Emacs process at the end, it starts a new Emacs process
(using the same command line arguments as the running Emacs process).
'kill-emacs' and 'save-buffers-kill-emacs' have also gained new
optional arguments to restart instead of just killing the current
process.</code></pre><p>Nice to have.</p><h2 id="drag-and-drop">Drag and Drop</h2><p>Just as a quick side note: you can drag and drop a bunch of stuff into Emacs and have it do the right thing. Files get opened, for instance, if you drag them into Emacs. If you drag them into message buffer you’ll instead <em>attach</em> them as a file. Great if you do email in Emacs like I do.</p><pre><code>New user option 'mouse-drag-mode-line-buffer'.
If non-nil, dragging on the buffer name part of the mode-line will
drag the buffer's associated file to other programs.  This option is
currently only available on X, Haiku and Nextstep (GNUstep or macOS).</code></pre><p>Neat. No way I’ll ever remember that, but it’s a nice addition.</p><pre><code>New user option 'mouse-drag-and-drop-region-cross-program'.
If non-nil, this option allows dragging text in the region from Emacs
to another program.</code></pre><p>That I <em>will</em> remember though.</p><pre><code>New user option 'mouse-drag-and-drop-region-scroll-margin'.
If non-nil, this option allows scrolling a window while dragging text
around without a scroll wheel.</code></pre><p>Another one of those features people who move to Emacs come to depend on.</p><pre><code>The value of 'mouse-drag-copy-region' can now be the symbol 'non-empty'.
This prevents mouse drag gestures from putting empty strings onto the
kill ring.</code></pre><p>You’d probably want to set this to t.</p><pre><code>New user options 'dnd-indicate-insertion-point' and 'dnd-scroll-margin'.
These options allow adjusting point and scrolling a window when
dragging items from another program.</code></pre><pre><code>The X Direct Save (XDS) protocol is now supported.
This means dropping an image or file link from programs such as
Firefox will no longer create a temporary file in a random directory,
instead asking you where to save the file first.</code></pre><p>Never heard of this protocol before, but it reads like a fine improvement over the copy-to-temp approach Emacs employed before.</p><pre><code>New user option 'record-all-keys'.
If non-nil, this option will force recording of all input keys,
including those typed in response to passwords prompt (this was the
previous behavior).  The default is nil, which inhibits recording of
passwords.</code></pre><p>Keep in mind Emacs still records most stuff you type. See the lossage for an example: <code>C-h l</code>.</p><pre><code>New function 'command-query'.
This function makes its argument command prompt the user for
confirmation before executing.</code></pre><pre><code>The 'disabled' property of a command's symbol can now be a list.
The first element of the list should be the symbol 'query', which will
cause the command disabled this way prompt the user with a y/n or a
yes/no question before executing.  The new function 'command-query' is
a convenient method of making commands disabled in this way.</code></pre><p>There are a handful of commands marked disabled in Emacs as they’re confusing to beginners. You might’ve run into the prompts when you typed one of them.</p><pre><code>'count-words' will now report buffer totals if given a prefix.
Without a prefix, it will only report the word count for the narrowed
part of the buffer.</code></pre><pre><code>'count-words' will now report sentence count when used interactively.</code></pre><p>Cue the interminable arguments over what constitutes a sentence.</p><pre><code>New user option 'set-message-functions'.
It allows more flexible control of how echo-area messages are displayed
by adding functions to this list.  The default value is a list of one
element: 'set-minibuffer-message', which displays echo-area messages
at the end of the minibuffer text when the minibuffer is active.
Other useful functions include 'inhibit-message', which allows
specifying, via 'inhibit-message-regexps', the list of messages whose
display should be inhibited; and 'set-multi-message' that accumulates
recent messages and displays them stacked together.</code></pre><p>Nifty new features. The echo area is a busy area now, particularly if you’re using a lot of tools, all vying for your attention. Maybe give the multi-message approach a shot if you’re missing messages? I wrote about a similar problem with Eldoc and competing messages. <a href="https://www.masteringemacs.org/article/seamlessly-merge-multiple-documentation-sources-eldoc">Seamlessly Merge Multiple Documentation Sources with Eldoc</a>.</p><pre><code>New user option 'find-library-include-other-files'.
If set to nil, commands like 'find-library' will only include library
files in the completion candidates.  The default is t, which preserves
previous behavior, whereby non-library files could also be included.</code></pre><pre><code>New command 'sqlite-mode-open-file' for examining an sqlite3 file.
This uses the new 'sqlite-mode' which allows listing the tables in a
DB file, and examining and modifying the columns and the contents of
those tables.</code></pre><p>Nifty!</p><pre><code>'write-file' will now copy some file mode bits.
If the current buffer is visiting a file that is executable, the
'C-x C-w' command will now make the new file executable, too.</code></pre><p>Along the same lines, you should consider the switch to <a href="https://www.masteringemacs.org/article/script-files-executable-automatically">make script files executable automatically</a>.</p><pre><code>New user option 'process-error-pause-time'.
This determines how long to pause Emacs after a process
filter/sentinel error has been handled.</code></pre><p>If you regularly cancel out of compilation buffers or other processes and find the delay annoying, try setting it to 0.</p><pre><code>New faces for font-lock.
These faces are primarily meant for use with tree-sitter.  They are:
'font-lock-bracket-face', 'font-lock-delimiter-face',
'font-lock-escape-face', 'font-lock-function-call-face',
'font-lock-misc-punctuation-face', 'font-lock-number-face',
'font-lock-operator-face', 'font-lock-property-name-face',
'font-lock-property-use-face', 'font-lock-punctuation-face',
'font-lock-regexp-face', and 'font-lock-variable-use-face'.</code></pre><p>This is part of the tree-sitter changes. As TS allows for far more precise selection of syntactic constructs, it made sense to add a bunch of faces.</p><p>You’ll want to customize them to suit your needs.</p><pre><code>New face 'variable-pitch-text'.
This face is like 'variable-pitch' (from which it inherits), but is
slightly larger, which should help with the visual size differences
between the default, non-proportional font and proportional fonts when
mixed.</code></pre><pre><code>New face 'mode-line-active'.
This inherits from the 'mode-line' face, but is the face actually used
on the mode lines (along with 'mode-line-inactive').</code></pre><pre><code>New face attribute pseudo-value 'reset'.
This value stands for the value of the corresponding attribute of the
'default' face.  It can be used to reset attribute values produced by
inheriting from other faces.</code></pre><p>Useful if you want some, but not all, inheriting faces.</p><pre><code>New X resource "borderThickness".
This controls the thickness of the external borders of the menu bars
and pop-up menus.</code></pre><pre><code>New X resource "inputStyle".
This controls the style of the pre-edit and status areas of X input
methods.</code></pre><pre><code>New X resources "highlightForeground" and "highlightBackground".
Only in the Lucid build, this controls colors used for highlighted
menu item widgets.</code></pre><pre><code>On X, Emacs now tries to synchronize window resize with the window manager.
This leads to less flicker and empty areas of a frame being displayed
when a frame is being resized.  Unfortunately, it does not work on
some ancient buggy window managers, so if Emacs appears to freeze, but
is still responsive to input, you can turn it off by setting the X
resource "synchronizeResize" to "off".</code></pre><pre><code>On X, Emacs can optionally synchronize display with the graphics hardware.
When this is enabled by setting the X resource "synchronizeResize" to
"extended", frame content "tearing" is drastically reduced.  This is
only supported on the Motif, Lucid, and no-toolkit builds, and
requires an X compositing manager supporting the extended frame
synchronization protocol (see
https://fishsoup.net/misc/wm-spec-synchronization.html).

This behavior can be toggled on and off via the frame parameter
'use-frame-synchronization'.</code></pre><pre><code>New frame parameter 'alpha-background' and X resource "alphaBackground".
This controls the opacity of the text background when running on a
composited display.</code></pre><p>Party like it’s 1998. Remember back when everyone took screenshots of their KDE/GNOME/WindowMaker desktops and they all had that obligatory semi-translucent terminal window?</p><pre><code>New frame parameter 'shaded'.
With window managers which support this, it controls whether or not a
frame's contents will be hidden, leaving only the title bar on display.</code></pre><pre><code>New user option 'x-gtk-use-native-input'.
This controls whether or not GTK input methods are used by Emacs,
instead of XIM input methods.  Defaults to nil.</code></pre><pre><code>New user option 'use-system-tooltips'.
This controls whether to use the toolkit tooltips, or Emacs's own
native implementation of tooltips as small frames.  This option is
only meaningful if Emacs was built with GTK+, Nextstep, or Haiku
support, and defaults to t, which makes Emacs use the toolkit
tooltips.  The existing GTK-specific option
'x-gtk-use-system-tooltips' is now an alias of this new option.</code></pre><p>I long ago disabled tooltips and made them appear in the echo area instead:</p><pre><code>(tooltip-mode nil)
(setq tooltip-use-echo-area t)
(setq x-gtk-use-system-tooltips nil)</code></pre><pre><code>Non-native tooltips are now supported on Nextstep.
This means Emacs built with GNUstep or built on macOS is now able to
display different faces and images inside tooltips when the
'use-system-tooltips' user option is nil.</code></pre><pre><code>New minor mode 'pixel-scroll-precision-mode'.
When enabled, and if your mouse supports it, you can scroll the
display up or down at pixel resolution, according to what your mouse
wheel reports.  Unlike 'pixel-scroll-mode', this mode scrolls the
display pixel-by-pixel, as opposed to only animating line-by-line
scrolls.</code></pre><p>Pixel-perfect scrolling, at least in theory. On my computer it does act funny around large images, though this is mostly a limitation of Emacs’s display engine, more than the pixel scrolling.</p><h2 id="terminal-emacs">Terminal Emacs</h2><pre><code>Emacs will now use 24-bit colors on terminals that support "Tc" capability.
This is in addition to previously-supported ways of discovering 24-bit
color support: either via the "RGB" or "setf24" capabilities, or if
the 'COLORTERM' environment variable is set to the value "truecolor".</code></pre><p>Emacs has had 24-bit support for years, so this is really only about catching the tail end of termcaps.</p><pre><code>Select active regions with xterm selection support.
On terminals with xterm "setSelection" support, the active region may be
saved to the X primary selection, following the
'select-active-regions' variable.  This support is enabled when
'tty-select-active-regions' is non-nil.</code></pre><p>Worth setting to t if you prefer running Emacs in a GUI terminal.</p><pre><code>New command to set up display of unsupported characters.
The new command 'standard-display-by-replacement-char' produces Lisp
code that sets up the 'standard-display-table' to use a replacement
character for display of characters that the text-mode terminal
doesn't support.  This code is intended to be used in your init files.
This feature is most useful with the Linux console and similar
terminals, where Emacs has a reliable way of determining which
characters have glyphs in the font loaded into the terminal's memory.</code></pre><p>This is the default character to display if Emacs or you terminal cannot. If you have strong views on this, you should contemplate changing it.</p><pre><code>New functions to set terminal output buffer size.
The new functions 'tty--set-output-buffer-size' and
'tty--output-buffer-size' allow setting and retrieving the output
buffer size of a terminal device.  The default buffer size is and has
always been BUFSIZ, which is defined in your system's stdio.h.  When
you set a buffer size with 'tty--set-output-buffer-size', this also
prevents Emacs from explicitly flushing the tty output stream, except
at the end of display update.</code></pre><p>I’ve no opinion nor any wisdom to share as to why you’d want to change this. Keen to hear from people who do though.</p><h2 id="ert">ERT</h2><p>ERT is Emacs’s unit test framework.</p><pre><code>New ERT variables 'ert-batch-print-length' and 'ert-batch-print-level'.
These variables will override 'print-length' and 'print-level' when
printing Lisp values in ERT batch test results.</code></pre><pre><code>Redefining an ERT test in batch mode now signals an error.
Executing 'ert-deftest' with the same name as an existing test causes
the previous definition to be discarded, which was probably not
intended when this occurs in batch mode.  To remedy the error, rename
tests so that they all have unique names.</code></pre><pre><code>ERT can generate JUnit test reports.
When environment variable 'EMACS_TEST_JUNIT_REPORT' is set, ERT
generates a JUnit test report under this file name.  This is useful
for Emacs integration into CI/CD test environments.</code></pre><pre><code>Unbound test symbols now signal an 'ert-test-unbound' error.
This affects the 'ert-select-tests' function and its callers.</code></pre><h2 id="emoji">Emoji</h2><p>There’s a NEWS category just for Emoji now?</p><pre><code>Emacs now has several new methods for inserting Emoji.
The Emoji commands are under the new 'C-x 8 e' prefix.</code></pre><p>This is now the primary composition key for dealing with emoji.</p><pre><code>New command 'emoji-insert' (bound to 'C-x 8 e e' and 'C-x 8 e i').
This command guides you through various Emoji categories and
combinations in a graphical menu system.</code></pre><p><code>C-x 8 e e</code> opens a <a href="https://www.masteringemacs.org/article/introduction-magit-emacs-mode-git">Magit-style</a> popup using the now-builtin transient package. I think this is the first instance of using transient in Emacs?</p><pre><code>New command 'emoji-search' (bound to 'C-x 8 e s').
This command lets you search for and insert an Emoji based on names.</code></pre><p>Like <code>C-x 8 RET</code>, but the search space limited to just emoji.</p><pre><code>New command 'emoji-list' (bound to 'C-x 8 e l').
This command lists all Emoji (categorized by themes) in a special
buffer and lets you choose one of them to insert.</code></pre><p>Rather useful overview of smileys in a buffer. This is my preferred method for picking out emoji; note that the emoji are hyperlinked will insert the smiley at point.</p><pre><code>New command 'emoji-recent' (bound to 'C-x 8 e r').
This command lets you choose among the Emoji you have recently
inserted and insert it.</code></pre><pre><code>New command 'emoji-describe' (bound to 'C-x 8 e d').
This command will tell you the name of the Emoji at point.  (It also
works for non-Emoji characters.)</code></pre><p>It prints the unicode descriptor for the character at point. It’s also available in <code>C-u C-x =</code>.</p><pre><code>New commands 'emoji-zoom-increase' and 'emoji-zoom-decrease'.
These are bound to 'C-x 8 e +' and 'C-x 8 e -', respectively.  They
can be used on any character, but are mainly useful for Emoji.</code></pre><pre><code>New command 'emoji-zoom-reset'.
This is bound to 'C-x 8 e 0', and undoes any size changes performed by
'emoji-zoom-increase' and 'emoji-zoom-decrease'.</code></pre><pre><code>New input method 'emoji'.
This allows you to enter Emoji using short strings, eg ':face_palm:'
or ':scream:'.</code></pre><p>I think I wrote the first input method to insert Emoji. In fact, it was the upcoming emoji code in Emacs 29 that prompted me to blog about it: <a href="https://www.masteringemacs.org/article/inserting-emoji-input-methods">Inserting Emoji with Input Methods</a>.</p><p>Input methods are a nifty way of inserting chorded text. It’s a really pleasant way of inserting diacritics. If you’re unfamiliar with input methods, then check out <a href="https://www.masteringemacs.org/article/diacritics-in-emacs">Olé! Diacritics in Emacs</a>.</p><h2 id="help">Help</h2><pre><code>Variable values displayed by 'C-h v' in "*Help*" are now fontified.</code></pre><p>Yep. Big fan of this change.</p><pre><code>New user option 'help-clean-buttons'.
If non-nil, link buttons in "*Help*" buffers will have any surrounding
quotes removed.</code></pre><pre><code>'M-x apropos-variable' output now includes values of variables.
Such an apropos buffer is more easily viewed with outlining after
enabling 'outline-minor-mode' in 'apropos-mode'.</code></pre><p>Nifty change indeed. The apropos commands in Emacs should not be slept on.</p><pre><code>New docstring syntax to indicate that symbols shouldn't be links.
When displaying docstrings in "*Help*" buffers, strings that are
"`like-this'" are made into links (if they point to a bound
function/variable).  This can lead to false positives when talking
about values that are symbols that happen to have the same names as
functions/variables.  To inhibit this buttonification, use the new
"\\+`like-this'" syntax.</code></pre><pre><code>New user option 'help-window-keep-selected'.
If non-nil, commands to show the info manual and the source will reuse
the same window in which the "*Help*" buffer is shown.</code></pre><p>If you have strong preferences on where the windows should go, consider enabling this. Alternatively, my article on <a href="https://www.masteringemacs.org/article/demystifying-emacs-window-manager">Demystifying Emacs’s Window Manager</a> will teach you how to tame window management in Emacs.</p><pre><code>Commands like 'C-h f' have changed how they describe menu bindings.
For instance, previously a command might be described as having the
following bindings:

    It is bound to &lt;open&gt;, C-x C-f, &lt;menu-bar&gt; &lt;file&gt; &lt;new-file&gt;.

This has been changed to:

    It is bound to &lt;open&gt; and C-x C-f.
    It can also be invoked from the menu: File → Visit New File...</code></pre><pre><code>The 'C-h .' command now accepts a prefix argument.
'C-u C-h .' would previously inhibit displaying a warning message if
there was no local help at point.  This has been changed to call
'button-describe'/'widget-describe' and display button/widget help
instead.</code></pre><pre><code>New user option 'help-enable-variable-value-editing'.
If enabled, 'e' on a value in "*Help*" will pop you to a new buffer
where you can edit the value.  This is not enabled by default, because
it is easy to make an edit that yields an invalid result.</code></pre><p>There’s also <code>c</code> in a help window to open its customize window. That is perhaps of more use to most people.</p><pre><code>'C-h b' uses outlining by default.
Set 'describe-bindings-outline' to nil to get back the old behavior.</code></pre><p><code>C-h b</code> is a great command to know about. It displays all the pertinent bindings in a buffer.</p><pre><code>Jumping to function/variable source now saves mark before moving point.
Jumping to source from a "*Help*" buffer moves point when the source
buffer is already open.  Now, the old point is pushed onto mark ring.</code></pre><p>The global/local mark rings are worth learning about. They’re useful beacons for moving around in Emacs and they are always precipitated by a user-led action.</p><pre><code>New key bindings in "*Help*" buffers: 'n' and 'p'.
These will take you (respectively) to the next and previous "page".</code></pre><p>Page here meaning the old-fashioned concept in LISP and Emacs where the FORM FEED (<code>^L</code>) character is used to denote a page in code. That’s what all the <code>xxx-page</code> command do; they operate on them.</p><pre><code>'describe-char' now also outputs the name of Emoji sequences.</code></pre><pre><code>New key binding in "*Help*" buffer: 'I'.
This will take you to the Emacs Lisp manual entry for the item
displayed, if any.</code></pre><p>There is also <code>i</code> which goes to the manual; this, in turn, tries to find the elisp symbol reference.</p><pre><code>The 'C-h m' ('describe-mode') "*Help*" buffer has been reformatted.
It now only includes local minor modes at the start, and the global
minor modes are listed after the major mode.</code></pre><p>I like this change, as this is most likely what you want to look at first, anyway.</p><pre><code>The user option 'help-window-select' now affects apropos commands.
The apropos commands will now select the apropos window if
'help-window-select' is non-nil.</code></pre><p>See above regarding windows.</p><pre><code>'describe-keymap' now considers the symbol at point.
If the symbol at point is a keymap, 'describe-keymap' suggests it as
the default candidate.</code></pre><p>Always nice to see contextual completions. I wish more commands did this.</p><pre><code>New command 'help-quick' displays an overview of common commands.
The command pops up a buffer at the bottom of the screen with a few
helpful commands for various tasks.  You can toggle the display using
'C-h C-q'.</code></pre><p>This is cheat sheet for keyboard shortcuts. My view is still that you should use the menu bar until you’ve memorized the keys you’re ever likely to encounter in a cheat sheet.</p><pre><code>Emacs now comes with Org v9.6.
See the file "etc/ORG-NEWS" for user-visible changes in Org.</code></pre><h2 id="outline-mode">Outline Mode</h2><p>Outline is the progenitor to Org mode and works in much the same way. It is, of course, vastly simpler.</p><pre><code>Support for customizing the default visibility state of headings.
Customize the user option 'outline-default-state' to define what
headings will be visible initially, after Outline mode is turned on.
When the value is a number, the user option 'outline-default-rules'
determines the visibility of the subtree starting at the corresponding
level.  Values are provided to control showing a heading subtree
depending on whether the heading matches a regexp, or on whether its
subtree has long lines or is itself too long.</code></pre><h3 id="outline-minor-mode">Outline Minor Mode</h3><pre><code>New user option 'outline-minor-mode-use-buttons'.
If non-nil, Outline Minor Mode will use buttons to hide/show outlines
in addition to the ellipsis.  The default is nil, but in 'help-mode'
it has the value 'insert' that inserts the buttons directly into the
buffer, and you can use 'RET' to cycle outline visibility.  When
the value is 'in-margins', Outline Minor Mode uses the window margins
for buttons that hide/show outlines.</code></pre><pre><code>Buttons and headings now have their own keymaps.
'outline-button-icon-map', 'outline-overlay-button-map', and
'outline-inserted-button-map' are now available as defined keymaps
instead of being anonymous keymaps.</code></pre><h2 id="windows">Windows</h2><p>See my article on <a href="https://www.masteringemacs.org/article/demystifying-emacs-window-manager">Demystifying Emacs’s Window Manager</a> to truly understand how all these window changes below work, and how you can use them. The subject is well beyond the scope of this blog entry.</p><pre><code>New commands 'split-root-window-below' and 'split-root-window-right'.
These commands split the root window in two, and are bound to 'C-x w 2'
and 'C-x w 3', respectively.  A number of other useful window-related
commands are now available with key sequences that start with the
'C-x w' prefix.</code></pre><p>I am glad they added these. One of the things about Emacs’s window system is that you only ever operate within the part of the tree – Emacs’s window layout is stored in a simple tree structure – that your active window is in. So, splitting against the root window wasn’t possible without elisp.</p><pre><code>New display action 'display-buffer-full-frame'.
This action removes other windows from the frame when displaying a
buffer on that frame.</code></pre><p>This is a <code>display-buffer</code> action that ensures a buffer is displayed in a new frame.</p><pre><code>'display-buffer' now can set up the body size of the chosen window.
For example, a 'display-buffer-alist' entry of

    (window-width . (body-columns . 40))

will make the body of the chosen window 40 columns wide.  For the
height use 'window-height' and 'body-lines', respectively.</code></pre><p>The body is the size of the window without the margins and all the other bits. You can already set the height/width of a window, but now you can also do it with just the body. Should allow for more fine-grained control.</p><pre><code>'display-buffer' provides more options for using an existing window.
The display buffer action functions 'display-buffer-use-some-window' and
'display-buffer-use-least-recent-window' now honor the action alist
entry 'window-min-height' as well as the entries listed below to make
the display of several buffers in a row more amenable.</code></pre><p>Excellent news. Placing a window is difficult for Emacs as it has to respect a range of constraints and criteria. And when it fails to do it the way you want or expect it to, it can easily lead to user frustration.</p><pre><code>New buffer display action alist entry 'lru-frames'.
This allows specifying which frames 'display-buffer' should consider
when using a window that shows another buffer.  It is interpreted as
per the ALL-FRAMES argument of 'get-lru-window'.</code></pre><p>LRU meaning Least-Recently-Used.</p><pre><code>New buffer display action alist entry 'lru-time'.
'display-buffer' will ignore windows with a use time higher than this
when using a window that shows another buffer.</code></pre><pre><code>New buffer display action alist entry 'bump-use-time'.
This has 'display-buffer' bump the use time of any window it returns,
making it a less likely candidate for displaying another buffer.</code></pre><p>Taken together, you can use this to cycle buffers through windows using a combination of lru-time and bump-use-time. Now I’m curious to hear where this was first used.</p><pre><code>New buffer display action alist entry 'window-min-width'.
This allows specifying a preferred minimum width of the window used to
display a buffer.</code></pre><p>Useful to help constrain where Emacs can put a buffer (or a window, for that matter) and it should hopefully prevent things from popping up in tiny little windows that won’t fit the buffer’s content.</p><pre><code>You can specify on which window 'scroll-other-window' operates.
This is controlled by the new 'other-window-scroll-default' variable,
which should be set to a function that returns a window.  When this
variable is nil, 'next-window' is used.</code></pre><p>A hidden feature of Emacs is the ability to carry out a limited number of actions on other, nearby windows. <code>C-M-S-v</code> scrolls down the ‘other’ window (useful if you have two or more windows, one you’re editing and the other you’re reading along from.)</p><p>But now you can seemingly customize how this ‘other’ window is chosen.</p><h2 id="frames">Frames</h2><pre><code>Deleted frames can now be undeleted.
The 16 most recently deleted frames can be undeleted with 'C-x 5 u' when
'undelete-frame-mode' is enabled.  Without a prefix argument, undelete
the most recently deleted frame.  With a numerical prefix argument
between 1 and 16, where 1 is the most recently deleted frame, undelete
the corresponding deleted frame.</code></pre><p>Neat! I’m sure we’ve all closed a frame by accident.</p><pre><code>The variable 'icon-title-format' can now have the value t.
That value means to use 'frame-title-format' for iconified frames.
This is useful with some window managers and desktop environments
which treat changes in frame's title as requests to raise the frame
and/or give it input focus, or if you want the frame's title to be the
same no matter if the frame is iconified or not.</code></pre><h2 id="tab-bars-and-tab-lines">Tab Bars and Tab Lines</h2><p>Tab <em>bars</em> are window configurations; custom set pieces for how you want to arrange your windows. Tab <em>lines</em> are just a tabbed list of buffers.</p><pre><code>New user option 'tab-bar-auto-width' to automatically determine tab width.
This option is non-nil by default, which resizes tab-bar tabs so that
their width is evenly distributed across the tab bar.  A companion
option 'tab-bar-auto-width-max' controls the maximum width of a tab
before its name on display is truncated.</code></pre><p>If you want dynamic sizing and dislike truncated names, try it out.</p><pre><code>'C-x t RET' creates a new tab when the provided tab name doesn't exist.
It prompts for the name of a tab and switches to it, creating a new
tab if no tab exists by that name.</code></pre><p>Great if you want to navigate by tab name <em>or</em> maybe create a new one if that name does not exist.</p><pre><code>New keymap 'tab-bar-history-mode-map'.
By default, it contains 'C-c &lt;left&gt;' and 'C-c &lt;right&gt;' to browse
the history of tab window configurations back and forward.</code></pre><p>This feature is already in older Emacsen; what’s new is the mode map.</p><h2 id="bidi">BIDI</h2><pre><code>Better detection of text suspiciously reordered on display.
The function 'bidi-find-overridden-directionality' has been extended
to detect reordering effects produced by embeddings and isolates
(started by directional formatting control characters such as RLO and
LRI).  The new command 'highlight-confusing-reorderings' finds and
highlights segments of buffer text whose reordering for display is
suspicious and could be malicious.</code></pre><p><em>Confusables</em> are a group of unicode characters that appear to look like well-known (often Western) characters but are in actual fact from other scripts. This is what spammers and scammers tend to use to make it appear like a domain name or email is actually someone else.</p><h2 id="emacs-server-and-client">Emacs Server and Client</h2><p>Emacs has a client-server architecture, of course. It’s great! Set <code>EDITOR</code> to <code>emacsclient</code> and then <code>M-x server-start</code> (or any number of other ways of starting an Emacs server!) and now your Emacs will open files in a running instance.</p><pre><code>New command-line option '-r'/'--reuse-frame' for emacsclient.
With this command-line option, Emacs reuses an existing graphical client
frame if one exists; otherwise it creates a new frame.</code></pre><pre><code>New command-line option '-w N'/'--timeout=N' for emacsclient.
With this command-line option, emacsclient will exit if Emacs does not
respond within N seconds.  The default is to wait forever.</code></pre><pre><code>'server-stop-automatically' can be used to automatically stop the server.
The Emacs server will be automatically stopped when certain conditions
are met.  The conditions are determined by the argument to
'server-stop-automatically', which can be 'empty', 'delete-frame' or
'kill-terminal'.</code></pre><p>Worthwhile if you have a use case that requires shutting down the server when you are finished. I, however, tend to keep it running forever and ever.</p><h2 id="rcirc">Rcirc</h2><p>Rcirc is one of <em>two</em> IRC clients in Emacs. The other is ERC.</p><pre><code>New command 'rcirc-when'.
This shows the reception time of the message at point (if available).</code></pre><pre><code>New user option 'rcirc-cycle-completion-flag'.
Rcirc now uses the default 'completion-at-point' mechanism.  The
conventional IRC behavior of completing by cycling through the
available options can be restored by enabling this option.</code></pre><pre><code>New user option 'rcirc-bridge-bot-alist'.
If you are in a channel where a bot is responsible for bridging
between networks, you can use this variable to make these messages
appear more native.  For example, you might set the option to:

    (setopt rcirc-bridge-bot-alist '(("bridge" . "{\\(.+?\\)}[[:space:]]+")))

for messages like

    09:47 &lt;bridge&gt; {john} I am not on IRC

to be reformatted into

    09:47 &lt;john&gt; I am not on IRC</code></pre><pre><code>New formatting commands.
Most IRC clients (including rcirc) support basic formatting using
control codes.  Under the 'C-c C-f' prefix a few commands have been
added to insert these automatically.  For example, if a region is
active and 'C-c C-f C-b' is invoked, markup is inserted for the region
to be highlighted in bold.</code></pre><p>Remember when ornery graybeard <em>ircII</em> users would shout at mIRC users for using colors in channels? Now you can shout at mIRC users in boldface.</p><pre><code>'imenu' is now bound to 'M-g i' globally.</code></pre><p>I prefer <code>M-i</code>. It’s bound to <code>tab-to-tab-stop</code>, which is beyond useless. Nevertheless, it’s about time they bind one of the most useful navigational aids to a key.</p><pre><code>New function 'imenu-flush-cache'.
Use it if you want Imenu to forget the buffer's index alist and
recreate it anew next time 'imenu' is invoked.</code></pre><p>This is of interest to major mode programmers.</p><pre><code>Emacs is now capable of abandoning a window's redisplay that takes too long.
This is controlled by the new variable 'max-redisplay-ticks'.  If that
variable is set to a non-zero value, display of a window will be
aborted after that many low-level redisplay operations, thus
preventing Emacs from becoming wedged when visiting files with very
long lines.  The default is zero, which disables the feature: Emacs
will wait forever for redisplay to finish.  (We believe you won't need
this feature, given the ability to display buffers with very long
lines.)</code></pre><p>I hope so, too.</p><h2 id="editing-changes-in-emacs-29.1">Editing Changes in Emacs 29.1</h2><pre><code>'M-SPC' is now bound to 'cycle-spacing'.
Formerly it invoked 'just-one-space'.  The actions performed by
'cycle-spacing' and their order can now be customized via the user
option 'cycle-spacing-actions'.</code></pre><p>If you didn’t know, this used to set the amount of whitespace around point to just one space. Super-duper command in code and prose: combine with <code>M-^</code> to ‘lift’ the current line to the one above. That’d usually leave excess spacing, which you could then delete with <code>M-SPC</code>.</p><p>I recommend you review <code>cycle-spacing-actions</code> now that it’s changed.</p><pre><code>'zap-to-char' and 'zap-up-to-char' are case-sensitive for upper-case chars.
These commands now behave as case-sensitive for interactive calls when
they are invoked with an uppercase character, regardless of the value
of 'case-fold-search'.</code></pre><p>Case folding is mostly applied to the likes of isearch and replace-regexp. With it on (the default), Emacs will ignore casing <em>unless</em> you enter an uppercase letter. At that point Emacs becomes case-sensitive in search and replace. Great feature and really underrated.</p><pre><code>'scroll-other-window' and 'scroll-other-window-down' now respect remapping.
These commands (bound to 'C-M-v' and 'C-M-V') used to scroll the other
windows without looking at customizations in that other window.  These
functions now check whether they have been rebound in the buffer shown
in that other window, and then call the remapped function instead.  In
addition, these commands now also respect the
'scroll-error-top-bottom' user option.</code></pre><p>I’ve never remapped them, so I never knew there were problems when you did.</p><pre><code>Indentation of 'cl-flet' and 'cl-labels' has changed.
These forms now indent like this:

    (cl-flet ((bla (x)
                (* x x)))
      (bla 42))

This change also affects 'cl-macrolet', 'cl-flet*' and
'cl-symbol-macrolet'.</code></pre><p>I have no real opinion on this, but clearly someone did.</p><pre><code>New user option 'translate-upper-case-key-bindings'.
Set this option to nil to inhibit the default translation of upper
case keys to their lower case variants.</code></pre><p>If true (default), then Emacs will convert an upper case key binding to a lower case one provided there is no upper case binding. It is, in other words, there to catch mistyped commands. Just leave it as is. It’s a good default.</p><pre><code>New command 'ensure-empty-lines'.
This command increases (or decreases) the number of empty lines before
point.</code></pre><p>I can definitely find a user for this in <a href="https://www.masteringemacs.org/article/keyboard-macros-are-misunderstood">keyboard macros</a>, where it’s hard to assert the presence or absence of a certain number of things without a lot of diligence.</p><pre><code>Improved mouse behavior with auto-scrolling modes.
When clicking inside the 'scroll-margin' or 'hscroll-margin' region,
point is now moved only when releasing the mouse button.  This no
longer results in a bogus selection, unless the mouse has also been
dragged.</code></pre><pre><code>'kill-ring-max' now defaults to 120.</code></pre><p>I never noticed the old limit, to be honest. I couldn’t even tell you what it was.</p><pre><code>New user option 'yank-menu-max-items'.
Customize this option to limit the number of entries in the menu
"Edit → Paste from Kill Menu".  The default is 60.</code></pre><pre><code>New user option 'copy-region-blink-predicate'.
By default, when copying a region with 'kill-ring-save', Emacs only
blinks point and mark when the region is not denoted visually, that
is, when either the region is inactive, or the 'region' face is
indistinguishable from the 'default' face.

Users who would rather enable blinking unconditionally can now set
this user option to 'always'.  To disable blinking unconditionally,
either set this option to 'ignore', or set 'copy-region-blink-delay'
to 0.</code></pre><pre><code>Performing a pinch gesture on a touchpad now increases the text scale.</code></pre><p>Wait until you find out that Emacs has mouse gestures. <code>M-x strokes-help</code>.</p><h2 id="show-paren-mode">Show Paren Mode</h2><p>Show paren mode highlights the matching delimiters at point.</p><pre><code>New user option 'show-paren-context-when-offscreen'.
When non-nil, if the point is in a closing delimiter and the opening
delimiter is offscreen, shows some context around the opening
delimiter in the echo area.  The default is nil.

This option can also be set to the symbols 'overlay' or 'child-frame',
in which case the context is shown in an overlay or child-frame at the
top-left of the current window.  The latter option requires a
graphical frame.  On non-graphical frames, the context is shown in the
echo area.</code></pre><p>This is a <em>great</em> feature, as it does more than it implies here. I recommend you experiment with it on (or set to <code>overlay</code> or <code>child-frame</code>).</p><h2 id="comint">Comint</h2><p>Comint is the general term for Emacs’s interface that communicates with sub-processes, like bash or python.</p><pre><code>'comint-term-environment' is now aware of connection-local variables.
The user option 'comint-terminfo-terminal' and the variable
'system-uses-terminfo' can now be set as connection-local variables to
change the terminal used on a remote host.</code></pre><p>Connection-local variables are variables, much like buffer-local ones, that are specific to a particular network connection.</p><pre><code>New user option 'comint-delete-old-input'.
When nil, this prevents comint from deleting the current input when
inserting previous input using '&lt;mouse-2&gt;'.  The default is t, to
preserve previous behavior.</code></pre><pre><code>New minor mode 'comint-fontify-input-mode'.
This minor mode is enabled by default in "*shell*" and "*ielm*"
buffers.  It fontifies input text according to 'shell-mode' or
'emacs-lisp-mode' font-lock rules.  Customize the user options
'shell-fontify-input-enable' and 'ielm-fontify-input-enable' to nil if
you don't want to enable input fontification by default.</code></pre><p>Handy and a good default. You’ll get free syntax highlighting. It’s already there for the output, but until now, it never worked with the input.</p><h2 id="mwheel">Mwheel</h2><pre><code>New user options for alternate wheel events.
The user options 'mouse-wheel-down-alternate-event' and
'mouse-wheel-up-alternate-event' as well as the variables
'mouse-wheel-left-alternate-event' and
'mouse-wheel-right-alternate-event' have been added to better support
systems where two kinds of wheel events can be received.</code></pre><h2 id="internationalization">Internationalization</h2><pre><code>The '&lt;Delete&gt;' function key now allows deleting the entire composed sequence.
For the details, see the item about the 'delete-forward-char' command
above.</code></pre><p>This was covered earlier.</p><pre><code>New user option 'composition-break-at-point'.
Setting it to a non-nil value temporarily disables automatic
composition of character sequences at point, and thus makes it easier
to edit such sequences by allowing point to "enter" the composed
sequence.</code></pre><pre><code>Support for many old scripts and writing systems.
Emacs now supports, and has language-environments and input methods,
for several dozens of old scripts that were used in the past for
various languages.  For each such script Emacs now has font-selection
and character composition rules, a language environment, and an input
method.  The newly-added scripts and the corresponding language
environments are:

 Tai Tham script and the Northern Thai language environment

 Brahmi script and language environment

 Kaithi script and language environment

 Tirhuta script and language environment

 Sharada script and language environment

 Siddham script and language environment

 Syloti Nagri script and language environment

 Modi script and language environment

 Baybayin script and Tagalog language environment

 Hanunoo script and language environment

 Buhid script and language environment

 Tagbanwa script and language environment

 Limbu script and language environment

 Balinese script and language environment

 Javanese script and language environment

 Sundanese script and language environment

 Batak script and language environment

 Rejang script and language environment

 Makasar script and language environment

 Lontara script and language environment

 Hanifi Rohingya script and language environment

 Grantha script and language environment

 Kharoshthi script and language environment

 Lepcha script and language environment

 Meetei Mayek script and language environment

 Adlam script and language environment

 Mende Kikakui script and language environment

 Wancho script and language environment

 Toto script and language environment

 Gothic script and language environment

 Coptic script and language environment

 Mongolian-traditional script and language environment

 Mongolian-cyrillic language environment</code></pre><pre><code>The "Oriya" language environment was renamed to "Odia".
This is to follow the change in the official name of the script.  The
'oriya' input method was also renamed to 'odia'.  However, the old
name of the language environment and the input method are still
supported.</code></pre><pre><code>New Greek translation of the Emacs tutorial.
Type 'C-u C-h t' to select it in case your language setup does not do
so automatically.</code></pre><pre><code>New Ukrainian translation of the Emacs tutorial.</code></pre><pre><code>New Farsi/Persian translation of the Emacs tutorial.</code></pre><pre><code>New default phonetic input method for the Tamil language environment.
The default input method for the Tamil language environment is now
"tamil-phonetic" which is a customizable phonetic input method.  To
change the input method's translation rules, customize the user option
'tamil-translation-rules'.</code></pre><pre><code>New 'tamil99' input method for the Tamil language.
This supports the keyboard layout specifically designed for the Tamil
language.</code></pre><pre><code>New input method 'slovak-qwerty'.
This is a variant of the 'slovak' input method, which corresponds to
the QWERTY Slovak keyboards.</code></pre><pre><code>New input method 'cyrillic-chuvash'.
This input method is based on the russian-computer input method, and
is intended for typing in the Chuvash language written in the Cyrillic
script.</code></pre><pre><code>New input method 'cyrillic-mongolian'.
This input method is for typing in the Mongolian language using the
Cyrillic script.  It is the default input method for the new
Mongolian-cyrillic language environment, see above.

</code></pre><h2 id="changes-in-specialized-modes-and-packages-in-emacs-29.1">Changes in Specialized Modes and Packages in Emacs 29.1</h2><h3 id="ecomplete">Ecomplete</h3><p>Ecomplete is an address book auto completion tool.</p><pre><code>New commands 'ecomplete-edit' and 'ecomplete-remove'.
These allow you to (respectively) edit and bulk-remove entries from
the ecomplete database.</code></pre><pre><code>New user option 'ecomplete-auto-select'.
If non-nil and there's only one matching option, auto-select that.</code></pre><pre><code>New user option 'ecomplete-filter-regexp'.
If non-nil, this user option describes what entries not to add to the
database stored on disk.</code></pre><h3 id="auth-source">Auth Source</h3><p>Auth source is one of Emacs’s secrets stores. It’s used by GNUS and many other programs. I’ve written a detailed article on <a href="https://www.masteringemacs.org/article/keeping-secrets-in-emacs-gnupg-auth-sources">keeping secrets in Emacs with GnuPG and Auth Sources</a>.</p><pre><code>New user option 'auth-source-pass-extra-query-keywords'.
Whether to recognize additional keyword params, like ':max' and
':require', as well as accept lists of query terms paired with
applicable keywords.  This disables most known behavioral quirks
unique to auth-source-pass, such as wildcard subdomain matching.</code></pre><h3 id="dired">Dired</h3><p>Dired is the Emacs Directory Editor, bound to <code>C-x d</code>.</p><pre><code>'dired-guess-shell-command' moved from dired-x to dired.
This means that 'dired-do-shell-command' will now provide smarter
defaults without first having to require 'dired-x'.  See the node
"(emacs) Shell Command Guessing" in the Emacs manual for more details.</code></pre><p><code>dired-x</code> was one of those red-headed step children of Dired. It’s always had a long list of really useful features that, somehow, never really made it into the main file, for unknown reasons. That wouldn’t matter if it was loaded by default, but it wasn’t. So you always had two types of Dired users: those who did, and those who did not, know about or use dired-x.</p><p>Anyway. This is a welcome change. It’ll offer better guesses for what to do with the file at point.</p><pre><code>'dired-clean-up-buffers-too' moved from dired-x to dired.
This means that Dired now offers to kill buffers visiting files and
dirs when they are deleted in Dired.  Before, you had to require
'dired-x' to enable this behavior.  To disable this behavior,
customize the user option 'dired-clean-up-buffers-too' to nil.  The
related user option 'dired-clean-confirm-killing-deleted-buffers'
(which see) has also been moved to 'dired'.</code></pre><p>Controversial default, but a lot of people use dired as the focal point of their work.</p><pre><code>'dired-do-relsymlink' moved from dired-x to dired.
The corresponding key 'Y' is now bound by default in Dired.</code></pre><pre><code>'dired-do-relsymlink-regexp' moved from dired-x to dired.
The corresponding key sequence '% Y' is now bound by default in Dired.</code></pre><p>Relative symlinks should’ve been part of dired from day one.</p><pre><code>'M-G' is now bound to 'dired-goto-subdir'.
Before, that binding was only available if the dired-x package was
loaded.</code></pre><p>Another useful command worth knowing about.</p><pre><code>'dired-info' and 'dired-man' moved from dired-x to dired.
The 'dired-info' and 'dired-man' commands have been moved from the
dired-x package to dired.  They have also been renamed to
'dired-do-info' and 'dired-do-man'; the old command names are obsolete
aliases.

The keys 'I' ('dired-do-info') and 'N' ('dired-do-man') are now bound
in Dired mode by default.  The user options 'dired-bind-man' and
'dired-bind-info' no longer have any effect and are obsolete.

To get the old behavior back and unbind these keys in Dired mode, add
the following to your Init file:

    (with-eval-after-load 'dired
      (keymap-set dired-mode-map "N" nil)
      (keymap-set dired-mode-map "I" nil))</code></pre><p>These commands will render a groff/troff/lroff ‘man’ file, or a TeXInfo info manual and open it.</p><pre><code>New command 'dired-do-eww'.
This command visits the file on the current line with EWW.</code></pre><p>EWW is Emacs’s Web Wowser.</p><pre><code>'browse-url-of-dired-file' can now call the secondary browser.
When invoked with a prefix arg, this will now call
'browse-url-secondary-browser-function' instead of the default
browser.  'browse-url-of-dired-file' is bound to 'W' by default in
dired mode.</code></pre><p>Interesting addition. Meanwhile <code>M-x browse-url</code> does not feature this.</p><pre><code>New user option 'dired-omit-lines'.
This is used by 'dired-omit-mode', and now allows you to hide based on
other things than just the file names.</code></pre><p>Omit mode hides things you do not wish to see in a dired buffer. Great way to filter out junk.</p><pre><code>New user option 'dired-mouse-drag-files'.
If non-nil, dragging file names with the mouse in a Dired buffer will
initiate a drag-and-drop session allowing them to be opened in other
programs.</code></pre><p>I use the mouse often in other programs, and drag and drop is in that weird sweet spot for me, speed-wise, where dragging in and out of Emacs is a desirable thing to be able to do.</p><pre><code>New user option 'dired-free-space'.
Dired will now, by default, include the free space in the first line
instead of having it on a separate line.  To get the previous behavior
back, say:

    (setopt dired-free-space 'separate)</code></pre><pre><code>New user option 'dired-make-directory-clickable'.
If non-nil (which is the default), hitting 'RET' or 'mouse-1' on
the directory components at the directory displayed at the start of
the buffer will take you to that directory.</code></pre><pre><code>Search and replace in Dired/Wdired supports more regexps.
For example, the regexp ".*" will match only characters that are part
of the file name.  Also "^.*$" can be used to match at the beginning
of the file name and at the end of the file name.  This is used only
when searching on file names.  In Wdired this can be used when the new
user option 'wdired-search-replace-filenames' is non-nil (which is the
default).</code></pre><p>Great change. The search scope for regexp in dired and <a href="https://www.masteringemacs.org/article/wdired-editable-dired-buffers">wdired</a> is now confined to the filename, which is infinitely more useful than the previous behavior.</p><h3 id="elisp">Elisp</h3><pre><code>New command 'elisp-eval-region-or-buffer' (bound to 'C-c C-e').
This command evals the forms in the active region or in the whole buffer.</code></pre><p>Great addition, as <code>M-x eval-buffer</code> was never bound to anything.</p><pre><code>New commands 'elisp-byte-compile-file' and 'elisp-byte-compile-buffer'.
These commands (bound to 'C-c C-f' and 'C-c C-b', respectively)
byte-compile the visited file and the current buffer, respectively.</code></pre><p>Also useful if you rely on the byte compiler to flag common mistakes.</p><h3 id="games">Games</h3><p>Emacs ships with a range of <a href="https://www.masteringemacs.org/article/fun-games-in-emacs">fun computer games</a>.</p><pre><code>New user option 'tetris-allow-repetitions'.
This controls how randomness is implemented (whether to use pure
randomness as before, or to use a bag).</code></pre><h3 id="battery">Battery</h3><p>The Battery library concerns tooling related to laptop batteries.</p><pre><code>New user option 'battery-update-functions'.
This can be used to trigger actions based on the battery status.</code></pre><h3 id="docview">DocView</h3><p>DocView is Emacs’s image and document converter. It converts all manner of documents to simple images so you can browse them in Emacs.</p><pre><code>doc-view can now generate SVG images when viewing PDF files.
If Emacs is built with SVG support, doc-view can generate SVG files
when using MuPDF as the converter for PDF files, which generally leads
to sharper images (especially when zooming), and allows customization
of background and foreground color of the page via the new user
options 'doc-view-svg-background' and 'doc-view-svg-foreground'.  To
activate this behavior, set 'doc-view-mupdf-use-svg' to non-nil if
your Emacs has SVG support.  Note that, with some versions of MuPDF,
SVG generation is known to sometimes produce SVG files that are buggy
or can take a long time to render.</code></pre><p>SVG support is a nice addition, thanks to Emacs’s support for libsvg.</p><h3 id="enriched-mode">Enriched Mode</h3><p>Enriched mode (“Rich-Text Format”, to others) is a useful little mode if you want basic WYSIWYG-style document editing.</p><pre><code>New command 'enriched-toggle-markup'.
This allows you to see the markup in 'enriched-mode' buffers (e.g.,
the "HELLO" file).  Bound to 'M-o m' by default.</code></pre><h3 id="shell-script-mode">Shell Script Mode</h3><pre><code>New user option 'sh-indent-statement-after-and'.
This controls how statements like the following are indented:

    foo &amp;&amp;
        bar</code></pre><pre><code>New Flymake backend using the ShellCheck program.
It is enabled by default, but requires that the external "shellcheck"
command is installed.</code></pre><p>Shellcheck’s amazing for shell script writers of all stripes. Do not write bash or sh scripts without it.</p><h3 id="cc-mode">CC Mode</h3><pre><code>C++ Mode now supports most of the new features in the C++20 Standard.</code></pre><pre><code>In Objective-C Mode, no extra types are recognized by default.
The default value of 'objc-font-lock-extra-types' has been changed to
nil, since too many identifiers were getting misfontified as types.
This may cause some actual types not to get fontified.  To get the old
behavior back, customize the user option to the value suggested in its
doc string.</code></pre><h3 id="cperl-mode">Cperl Mode</h3><pre><code>New user option 'cperl-file-style'.
This option determines the indentation style to be used.  It can also
be used as a file-local variable.</code></pre><h3 id="gud">Gud</h3><p>GUD is the Grand Unified Debugger. A frontend for a range of debuggers.</p><pre><code>'gud-go' is now bound to 'C-c C-v'.
If given a prefix, it will prompt for an argument to use for the
run/continue command.</code></pre><pre><code>'perldb' now recognizes '-E'.
As of Perl 5.10, 'perl -E 0' behaves like 'perl -e 0' but also activates
all optional features of the Perl version in use.  'perldb' now uses
this invocation as its default.</code></pre><h3 id="customize">Customize</h3><p><code>M-x customize</code> is Emacs’s configuration tool.</p><pre><code>New command 'custom-toggle-hide-all-widgets'.
This is bound to 'H' and toggles whether to hide or show the widget
contents.</code></pre><h3 id="diff-mode">Diff Mode</h3><pre><code>New user option 'diff-whitespace-style'.
Sets the value of the buffer-local variable 'whitespace-style' in
'diff-mode' buffers.  By default, this variable is '(face trailing)',
which preserves behavior of previous Emacs versions.</code></pre><pre><code>New user option 'diff-add-log-use-relative-names'.
If non-nil insert file names in ChangeLog skeletons relative to the
VC root directory.</code></pre><h3 id="ispell">Ispell</h3><pre><code>'ispell-region' and 'ispell-buffer' now push the mark.
These commands push onto the mark ring the location of the last
misspelled word where corrections were offered, so that you can then
skip back to that location with 'C-x C-x'.</code></pre><p>You can pop the mark with <code>C-u C-SPC</code> and return from whence you came.</p><h3 id="dabbrev">Dabbrev</h3><p>Although dynamic abbrev is powerful, I prefer <a href="https://www.masteringemacs.org/article/text-expansion-hippie-expand">Hippie Expand</a>.</p><pre><code>New function 'dabbrev-capf' for use on 'completion-at-point-functions'.</code></pre><pre><code>New user option 'dabbrev-ignored-buffer-modes'.
Buffers with major modes in this list will be ignored.  By default,
this includes "binary" buffers like 'archive-mode' and 'image-mode'.</code></pre><h3 id="package">Package</h3><p>Package is Emacs’s package manager.</p><pre><code>New command 'package-upgrade'.
This command allows you to upgrade packages without using 'list-packages'.
A package that comes with the Emacs distribution can only be upgraded
after you install, once, a newer version from ELPA via the
package-menu displayed by 'list-packages'.</code></pre><pre><code>New command 'package-upgrade-all'.
This command allows upgrading all packages without any queries.
A package that comes with the Emacs distribution will only be upgraded
by this command after you install, once, a newer version of that
package from ELPA via the package-menu displayed by 'list-packages'.</code></pre><p>Convenience commands, really. Nice to have.</p><pre><code>New commands 'package-recompile' and 'package-recompile-all'.
These commands can be useful if the ".elc" files are out of date
(invalid byte code and macros).</code></pre><pre><code>New DWIM action on 'x' in "*Packages*" buffer.
If no packages are marked, 'x' will install the package under point if
it isn't already, and remove it if it is installed.  Customize the new
option 'package-menu-use-current-if-no-marks' to the nil value to get
back the old behavior of signaling an error in that case.</code></pre><p>I’d probably turn it off. Seems easy to fat finger and delete something.</p><pre><code>New command 'package-vc-install'.
Packages can now be installed directly from source by cloning from
their repository.</code></pre><p>Many of us have been waiting for this feature. It checks out – using VC, Emacs’s generic version control frontend – a repository and installs it as a package.</p><p>Unfortunately, it does not plug into <code>use-package</code>.</p><pre><code>New command 'package-vc-install-from-checkout'.
An existing checkout can now be loaded via package.el, by creating a
symbolic link from the usual package directory to the checkout.</code></pre><p>This is really handy for those of us who develop packages and want to test that it all works.</p><pre><code>New command 'package-vc-checkout'.
Used to fetch the source of a package by cloning a repository without
activating the package.</code></pre><pre><code>New command 'package-vc-prepare-patch'.
This command allows you to send patches to package maintainers, for
packages checked out using 'package-vc-install'.</code></pre><p>Handy – I look forward to seeing if this gets used.</p><pre><code>New command 'package-report-bug'.
This command helps you compose an email for sending bug reports to
package maintainers, and is bound to 'b' in the "*Packages*" buffer.</code></pre><p>Also very nice. And a good way of acknowledging the role that repositories play in the package ecosystem in Emacs today.</p><pre><code>New user option 'package-vc-selected-packages'.
By customizing this user option you can specify specific packages to
install.</code></pre><pre><code>New user option 'package-install-upgrade-built-in'.
When enabled, 'package-install' will include in the list of
upgradeable packages those built-in packages (like Eglot and
use-package, for example) for which a newer version is available in
package archives, and will allow installing those newer versions.  By
default, this is disabled; however, if 'package-install' is invoked
with a prefix argument, it will act as if this new option were
enabled.

In addition, when this option is non-nil, built-in packages for which
a new version is available in archives can be upgraded via the package
menu produced by 'list-packages'.  If you do set this option non-nil,
we recommend not to use the 'U' command, but instead to use '/ u' to
show the packages which can be upgraded, and then decide which ones of
them you actually want to update from the archives.

If you customize this option, we recommend you place its non-default
setting in your early-init file.</code></pre><p>The thing this solves is this: how should Emacs handle upgrades to packages it ships with? I recommend you cautiously decide whether to upgrade builtin packages or not.</p><h3 id="emacs-sessions-desktop">Emacs Sessions (Desktop)</h3><p>Desktop mode saves your Emacs session and restores it when you restart Emacs.</p><pre><code>New user option to load a locked desktop if locking Emacs is not running.
The option 'desktop-load-locked-desktop' can now be set to the value
'check-pid', which means to allow loading a locked ".emacs.desktop"
file if the Emacs process which locked it is no longer running on the
local machine.  This allows avoiding questions about locked desktop
files when the Emacs session which locked it crashes, or was otherwise
interrupted and didn't exit gracefully.  See the "(emacs) Saving
Emacs Sessions" node in the Emacs manual for more details.</code></pre><h3 id="miscellaneous">Miscellaneous</h3><pre><code>New command 'scratch-buffer'.
This command switches to the "*scratch*" buffer.  If "*scratch*" doesn't
exist, the command creates it first.  You can use this command if you
inadvertently delete the "*scratch*" buffer.</code></pre><p>Weirdly useful, this. I like the scratch buffer.</p><h3 id="debugging">Debugging</h3><pre><code>'q' in a "*Backtrace*" buffer no longer clears the buffer.
Instead it just buries the buffer and switches the mode from
'debugger-mode' to 'backtrace-mode', since commands like 'e' are no
longer available after exiting the recursive edit.</code></pre><p>A quality of life change more than anything.</p><pre><code>New user option 'debug-allow-recursive-debug'.
This user option controls whether the 'e' (in a "*Backtrace*"
buffer or while edebugging) and 'C-x C-e' (while edebugging) commands
lead to a (further) backtrace.  By default, this variable is nil,
which is a change in behavior from previous Emacs versions.</code></pre><pre><code>'e' in edebug can now take a prefix arg to pretty-print the results.
When invoked with a prefix argument, as in 'C-u e', this command will
pop up a new buffer and show the full pretty-printed value there.</code></pre><p>I like this a lot. Pretty printing output is still a bit poor in Emacs, in my opinion.</p><pre><code>'C-x C-e' now interprets a non-zero prefix arg to pretty-print the results.
When invoked with a non-zero prefix argument, as in 'C-u C-x C-e',
this command will pop up a new buffer and show the full pretty-printed
value there.</code></pre><pre><code>You can now generate a backtrace from Lisp errors in redisplay.
To do this, set the new variable 'backtrace-on-redisplay-error' to a
non-nil value.  The backtrace will be written to a special buffer
named "*Redisplay-trace*".  This buffer will not be automatically
displayed in a window.</code></pre><h3 id="compile">Compile</h3><p><code>M-x compile</code> is a generic compilation system with error highlighting, and more. See <a href="https://www.masteringemacs.org/article/compiling-running-scripts-emacs">Compiling and running scripts in Emacs</a>.</p><pre><code>New user option 'compilation-hidden-output'.
This regular expression can be used to make specific parts of
compilation output invisible.</code></pre><p>Can come in handy if you deal with noisy build output</p><pre><code>The 'compilation-auto-jump-to-first-error' user option has been extended.
It can now have the additional values 'if-location-known' (which will
only jump if the location of the first error is known), and
'first-known' (which will jump to the first known error location).</code></pre><p>Now <em>that</em> is helpful. It’s worth your time trying that out if you are a regular user of compile, as I am.</p><pre><code>New user option 'compilation-max-output-line-length'.
Lines longer than the value of this option will have their ends
hidden, with a button to reveal the hidden text.  This speeds up
operations like grepping on files that have few newlines.  The default
value is 400; set to nil to disable hiding.</code></pre><p>This should help stop things like minified files from gumming up everything.</p><h3 id="flymake">Flymake</h3><p>Flymake is the on-the-fly syntax and linter frontend. There is also <a href="https://www.masteringemacs.org/article/spotlight-flycheck-a-flymake-replacement">Flycheck, a Flymake replacement</a>.</p><pre><code>New user option 'flymake-mode-line-lighter'.</code></pre><p>The mode line’s become a dumping ground for every little minor mode or feature, so being able to easily remove the overly verbose “Flymake” string is welcome.</p><p>I had to resort to all manner of trickery to hide it before. See <a href="https://www.masteringemacs.org/article/hiding-replacing-modeline-strings">hiding and replacing modeline strings with clean-mode-line</a>.</p><pre><code>New minor mode 'word-wrap-whitespace-mode' for extending 'word-wrap'.
This mode switches 'word-wrap' on, and breaks on all the whitespace
characters instead of just 'SPC' and 'TAB'.</code></pre><pre><code>New mode, 'emacs-news-mode', for editing the NEWS file.
This mode adds some highlighting, makes the 'M-q' command aware of the
format of NEWS entries, and has special commands for doing maintenance
of the Emacs NEWS files.  In addition, this mode turns on
'outline-minor-mode', and thus displays customizable icons (see
'icon-preference') in the margins.  To disable these icons, set
'outline-minor-mode-use-buttons' to a nil value.</code></pre><h3 id="kmacro">Kmacro</h3><p>KMacro is Emacs’s macro recorder or, more accurately, the extensions built in top of the original. You can do an awful lot of cool stuff with them: <a href="https://www.masteringemacs.org/article/keyboard-macros-are-misunderstood">Keyboard Macros are Misunderstood</a>.</p><pre><code>Kmacros are now OClosures and have a new constructor 'kmacro' which
uses the 'key-parse' syntax.  It replaces the old 'kmacro-lambda-form'
(which is now declared obsolete).</code></pre><p>This shouldn’t affect any existing, recorded macros.</p><pre><code>savehist.el can now truncate variables that are too long.
An element of user option 'savehist-additional-variables' can now be
of the form '(VARIABLE . MAX-ELTS)', which means to truncate the
VARIABLE's value to at most MAX-ELTS elements (if the value is a list)
before saving the value.</code></pre><h3 id="minibuffer-and-completions">Minibuffer and Completions</h3><p>Minibuffer completion’s a dizzying array of options now. I’ve written a guide on <a href="https://www.masteringemacs.org/article/understanding-minibuffer-completion">understanding minibuffer completion</a> if you want to know more.</p><pre><code>New commands for navigating completions from the minibuffer.
When the minibuffer is the current buffer, typing 'M-&lt;up&gt;' or
'M-&lt;down&gt;' selects a previous/next completion candidate from the
"*Completions*" buffer and inserts it to the minibuffer.
When the user option 'minibuffer-completion-auto-choose' is nil,
'M-&lt;up&gt;' and 'M-&lt;down&gt;' do the same, but without inserting
a completion candidate to the minibuffer, then 'M-RET' can be used
to choose the currently active candidate from the "*Completions*"
buffer and exit the minibuffer.  With a prefix argument, 'C-u M-RET'
inserts the currently active candidate to the minibuffer, but doesn't
exit the minibuffer.  These keys are also available for in-buffer
completion, but they don't insert candidates automatically, you need
to type 'M-RET' to insert the selected candidate to the buffer.</code></pre><p>If you use the <em>Completions</em> buffer to help select matches – one of many possible workflows – then you’re likely to find this selection mechanism a useful alternative to the cumbersome methods of picking and choosing from that buffer before.</p><p>If you use a fancy type-as-you-complete completion framework, then you’re not likely to benefit from this change at all.</p><pre><code>Choosing a completion with a prefix argument doesn't exit the minibuffer.
This means that typing 'C-u RET' on a completion candidate in the
"*Completions*" buffer inserts the completion into the minibuffer,
but doesn't exit the minibuffer.</code></pre><p>Niche use, but the completion system’s flexible and omnipresent, as you can ‘enter’ the completion mechanism using any number of features in Emacs, such as <code>M-x shell</code>, where the ability to repeatedly insert matches is useful.</p><pre><code>The "*Completions*" buffer can now be automatically selected.
To enable this behavior, customize the user option
'completion-auto-select' to t, then pressing 'TAB' will switch to the
"*Completions*" buffer when it pops up that buffer.  If the value is
'second-tab', then the first 'TAB' will display "*Completions*", and
the second one will switch to the "*Completions*" buffer.</code></pre><p>This feature also plays into the <em>Completions</em> buffer workflow. I’ve never been a huge fan of mucking around with manually selecting stuff, preferring instead to type my way to an answer and then only use the buffer as a popup of remaining choices.</p><pre><code>New user option 'completion-auto-wrap'.
When non-nil, the commands 'next-completion' and 'previous-completion'
automatically wrap around on reaching the beginning or the end of
the "*Completions*" buffer.</code></pre><pre><code>New values for the 'completion-auto-help' user option.
There are two new values to control the way the "*Completions*" buffer
behaves after pressing a 'TAB' if completion is not unique.  The value
'always' updates or shows the "*Completions*" buffer after any attempt
to complete.  The value 'visual' is like 'always', but only updates
the completions if they are already visible.  The default value t
always hides the completion buffer after some completion is made.</code></pre><p>All this controls is how or when the buffer is shown, which is again down to the specifics of your completion setup. If you want the buffer to only appear when you tab twice, now you can.</p><pre><code>New commands to complete the minibuffer history.
'minibuffer-complete-history' ('C-x &lt;up&gt;') is like 'minibuffer-complete'
but completes on the history items instead of the default completion
table.  'minibuffer-complete-defaults' ('C-x &lt;down&gt;') completes
on the list of default items.</code></pre><pre><code>User option 'minibuffer-eldef-shorten-default' is now obsolete.
Customize the user option 'minibuffer-default-prompt-format' instead.</code></pre><pre><code>New user option 'completions-sort'.
This option controls the sorting of the completion candidates in
the "*Completions*" buffer.  Available styles are no sorting,
alphabetical (the default), or a custom sort function.</code></pre><p>Sort order is weirdly important, as you can sort by frequency, context, etc. I expect this feature will prove enduring and popular going forward.</p><pre><code>New user option 'completions-max-height'.
This option limits the height of the "*Completions*" buffer.</code></pre><p>Instead of toying with <code>display-buffer-alist</code>, you can now set this height directly.</p><pre><code>New user option 'completions-header-format'.
This is a string to control the header line to show in the
"*Completions*" buffer before the list of completions.
If it contains "%s", that is replaced with the number of completions.
If nil, the header line is not shown.</code></pre><pre><code>New user option 'completions-highlight-face'.
When this user option names a face, the current
candidate in the "*Completions*" buffer is highlighted with that face.
The nil value disables this highlighting.  The default is to highlight
using the 'completions-highlight' face.</code></pre><pre><code>You can now define abbrevs for the minibuffer modes.
'minibuffer-mode-abbrev-table' and
'minibuffer-inactive-mode-abbrev-table' are now defined.</code></pre><p>That’s actually quite helpful. <a href="https://www.masteringemacs.org/article/correcting-typos-misspellings-abbrev">Abbrev</a> is meant for simple typos and word replacements, and indeed they can happen anywhere, even in the minibuffer.</p><h3 id="isearch-and-replace">Isearch and Replace</h3><pre><code>Changes in how Isearch responds to 'mouse-yank-at-point'.
If a user does 'C-s' and then uses '&lt;mouse-2&gt;' ('mouse-yank-primary')
outside the echo area, Emacs will, by default, end the Isearch and
yank the text at mouse cursor.  But if 'mouse-yank-at-point' is
non-nil, the text will now be added to the Isearch instead.</code></pre><pre><code>Changes for values 'no' and 'no-ding' of 'isearch-wrap-pause'.
Now with these values the search will wrap around not only on repeating
with 'C-s C-s', but also after typing a character.</code></pre><p>Isearch will by default wrap around and start anew if you double-tap <code>C-s</code> at the end of the search.</p><pre><code>New user option 'char-fold-override'.
Non-nil means that the default definitions of equivalent characters
are overridden.</code></pre><p>The character folding feature (turning one character into another, for the purposes of ease of searching) is governed by this, new, variable, and <code>char-fold-[include/exclude]</code>.</p><pre><code>New command 'describe-char-fold-equivalences'.
It displays character equivalences used by 'char-fold-to-regexp'.</code></pre><p>This command is an intuitive display of what a character is folded to, if anything.</p><pre><code>New command 'isearch-emoji-by-name'.
It is bound to 'C-x 8 e RET' during an incremental search.  The
command accepts the Unicode name of an Emoji (for example, "smiling
face" or "heart with arrow"), like 'C-x 8 e e', with minibuffer
completion, and adds the Emoji into the search string.</code></pre><p>Oddly specific, but… OK.</p><h3 id="gdbmi">GDB/MI</h3><pre><code>New user option 'gdb-debuginfod-enable-setting'.
On capable platforms, GDB 10.1 and later can download missing source
and debug info files from special-purpose servers, called "debuginfod
servers".  Use this new option to control whether 'M-x gdb' instructs
GDB to download missing files from debuginfod servers when you debug
the corresponding programs.  The default is to ask you at the
beginning of each debugging session whether to download the files for
that session.</code></pre><h3 id="glyphless-characters">Glyphless Characters</h3><pre><code>New minor mode 'glyphless-display-mode'.
This allows an easy way to toggle seeing all glyphless characters in
the current buffer.</code></pre><pre><code>The extra slot of 'glyphless-char-display' can now have cons values.
The extra slot of the 'glyphless-char-display' char-table can now have
values that are cons cells, specifying separate values for text-mode
and GUI terminals.</code></pre><pre><code>"Replacement character" feature for undisplayable characters on TTYs.
The 'acronym' method of displaying glyphless characters on text-mode
frames treats single-character acronyms specially: they are displayed
without the surrounding '[..]' "box", thus in effect treating such
"acronyms" as replacement characters.</code></pre><h3 id="registers">Registers</h3><p>Registers are single-character short-hands that can store a wide range of things, including strings, numbers, points, window configurations, and much more.</p><pre><code>Buffer names can now be stored in registers.
For instance, to enable jumping to the "*Messages*" buffer with
'C-x r j m':

    (set-register ?m '(buffer . "*Messages*"))</code></pre><p>Neat addition.</p><h3 id="pixel-fill">Pixel Fill</h3><pre><code>This is a new package that deals with filling variable-pitch text.</code></pre><pre><code>New function 'pixel-fill-region'.
This fills the region to be no wider than a specified pixel width.</code></pre><h3 id="info">Info</h3><pre><code>Command 'info-apropos' now takes a prefix argument to search for regexps.</code></pre><p>Great command, and worth knowing about, as it’ll free-form search <em>all</em> known Info manuals. See <a href="https://www.masteringemacs.org/article/full-text-searching-info-mode-apropos">Full text searching in Info mode with Apropos</a>.</p><pre><code>New command 'Info-goto-node-web' and key binding 'G'.
This will take you to the "gnu.org" web server's version of the current
info node.  This command only works for the Emacs and Emacs Lisp manuals.</code></pre><p>Convenient shortcut if you want to give someone a link to a manual page.</p><h3 id="shortdoc">Shortdoc</h3><p>Shortdoc is Emacs’s extensible cheat sheet for elisp. See <a href="https://www.masteringemacs.org/article/emacs-builtin-elisp-cheat-sheet">Emacs’s Builtin Elisp Cheat Sheet</a>.</p><pre><code>New command 'shortdoc-copy-function-as-kill' bound to 'w'.
It copies the name of the function near point into the kill ring.</code></pre><pre><code>'N' and 'P' are now bound to 'shortdoc-{next,previous}-section'.
This is in addition to the old keybindings 'C-c C-n' and 'C-c C-p'.</code></pre><h3 id="vc">VC</h3><p>VC is Emacs’s generic Version Control system that works with all major and minor version control systems. They’re bound to <code>C-x v</code>. I love VC, even though I use Magit with Git for 95% of what I do.</p><p>It works really well and offers a unified view of all version control systems it supports.</p><pre><code>New command 'vc-pull-and-push'.
This commands first does a "pull" command, and if that is successful,
does a "push" command afterwards.  Currently supported in Git and Bzr.</code></pre><p>Handy time saver.</p><pre><code>'C-x v b' prefix key is used now for branch commands.
'vc-print-branch-log' is bound to 'C-x v b l', and new commands are
'vc-create-branch' ('C-x v b c') and 'vc-switch-branch' ('C-x v b s').
The VC Directory buffer now uses the prefix 'b' for these branch-related
commands.</code></pre><p>This is a great set of features, and if you use VC, you should definitely learn them.</p><pre><code>New command 'vc-dir-mark-by-regexp' bound to '% m' and '* %'.
This command marks files based on a regexp.  If given a prefix
argument, unmark instead.</code></pre><p>Much like dired. Note that this is meant to be run in <code>C-x v d</code>, the dired-style VC buffer.</p><pre><code>New command 'C-x v !' ('vc-edit-next-command').
This prefix command requests editing of the next VC shell command
before execution.  For example, in a Git repository, you can produce a
log of more than one branch by typing 'C-x v ! C-x v b l' and then
appending additional branch names to the 'git log' command.

The intention is that this command can be used to access a wide
variety of version control system-specific functionality from VC
without complexifying either the VC command set or the backend API.</code></pre><pre><code>'C-x v v' in a diffs buffer allows to commit only some of the changes.
This command is intended to allow you to commit only some of the
changes you have in your working tree.  Begin by creating a buffer
with the changes against the last commit, e.g. with 'C-x v D'
('vc-root-diff').  Then edit the diffs to remove the hunks you don't
want to commit.  Finally, type 'C-x v v' in that diff buffer to commit
only part of your changes, those whose hunks were left in the buffer.</code></pre><p>Partial commits of hunks is a great feature of Magit, and I am happy to see it in VC also.</p><pre><code>'C-x v v' on an unregistered file will now use the most specific backend.
Previously, if you had an SVN-covered "~/" directory, and a Git-covered
directory in "~/foo/bar", using 'C-x v v' on a new, unregistered file
"~/foo/bar/zot" would register it in the SVN repository in "~/" instead of
in the Git repository in "~/foo/bar".  This makes this command
consistent with 'vc-responsible-backend'.</code></pre><pre><code>Log Edit now fontifies long Git commit summary lines.
Writing shorter summary lines avoids truncation in contexts in which
Git commands display summary lines.  See the two new user options
'vc-git-log-edit-summary-target-len' and 'vc-git-log-edit-summary-max-len'.</code></pre><pre><code>New 'log-edit-headers-separator' face.
It is used to style the line that separates the 'log-edit' headers
from the 'log-edit' summary.</code></pre><pre><code>The function 'vc-read-revision' accepts a new MULTIPLE argument.
If non-nil, multiple revisions can be queried.  This is done using
'completing-read-multiple'.</code></pre><pre><code>New function 'vc-read-multiple-revisions'.
This function invokes 'vc-read-revision' with a non-nil value for
MULTIPLE.</code></pre><pre><code>New command 'vc-prepare-patch'.
Patches for any version control system can be prepared using VC.  The
command will query what commits to send and will compose messages for
your mail user agent.  The behavior of 'vc-prepare-patch' can be
modified by the user options 'vc-prepare-patches-separately' and
'vc-default-patch-addressee'.</code></pre><h3 id="message">Message</h3><p>Message is Emacs’s Message mode intended for e-mails and suchlike.</p><pre><code>New user option 'mml-attach-file-at-the-end'.
If non-nil, 'C-c C-a' will put attached files at the end of the message.</code></pre><p>Don’t forget that you can drag files into a message buffer.</p><pre><code>Message Mode now supports image yanking.</code></pre><pre><code>New user option 'message-server-alist'.
This controls automatic insertion of the "X-Message-SMTP-Method"
header before sending a message.</code></pre><h3 id="html-mode">HTML Mode</h3><pre><code>HTML Mode now supports "text/html" and "image/*" yanking.</code></pre><p>Not much to say: great addition. Now I just have to remember that it can do this.</p><h3 id="texinfo-mode">Texinfo Mode</h3><pre><code>'texinfo-mode' now has a specialized 'narrow-to-defun' definition.
It narrows to the current node.</code></pre><h3 id="eudc">EUDC</h3><p>EUDC is a directory client frontend for various protocols, such as LDAP. If you work in a corporate environment, you’re probably using LDAP. You can use EUDC to talk to Microsoft Exchange (or FreeIPA, or …) and pull out contracts and whatnot from it. Powerful stuff.</p><pre><code>Deprecations planned for next release.
After Emacs 29.1, some aspects of EUDC will be deprecated.  The goal
of these deprecations is to simplify EUDC server configuration by
making 'eudc-server-hotlist' the only place to add servers.  There
will not be a need to set the server using the 'eudc-set-server'
command.  Instead, the 'eudc-server-hotlist' user option should be
customized to have an entry for the server.  The plan is to obsolete
the 'eudc-hotlist' package since Customize is sufficient for changing
'eudc-server-hotlist'.  How the 'eudc-server' user option works in this
context is to-be-determined; it can't be removed, because that would
break compatibility, but it may become synchronized with
'eudc-server-hotlist' so that 'eudc-server' is always equal to '(car
eudc-server-hotlist)'.  The first entry in 'eudc-server-hotlist' is the
first server tried by 'eudc-expand-try-all'.  The hotlist
simplification will allow 'eudc-query-form' to show a drop down of
possible servers, instead of requiring a call to 'eudc-set-server'
like it does in this release.  The default value of
'eudc-ignore-options-file' will be changed from nil to t.</code></pre><pre><code>New user option 'eudc-ignore-options-file' that defaults to nil.
The 'eudc-ignore-options-file' user option can be configured to ignore
the 'eudc-options-file' (typically "~/.emacs.d/eudc-options").  Most
users should configure this to t and put EUDC configuration in the
main Emacs initialization file ("~/.emacs" or "~/.emacs.d/init.el").</code></pre><pre><code>'eudc-expansion-overwrites-query' to 'eudc-expansion-save-query-as-kill'.
The user option 'eudc-expansion-overwrites-query' is renamed to
'eudc-expansion-save-query-as-kill' to reflect the actual behavior of
the user option.  The former is kept as alias.</code></pre><pre><code>New command 'eudc-expand-try-all'.
This command can be used in place of 'eudc-expand-inline'.  It takes a
prefix argument that causes 'eudc-expand-try-all' to return matches
from all servers instead of just the matches from the first server to
return any.  This is useful for example, if one wants to search LDAP
for a name that happens to match a contact in one's BBDB.</code></pre><pre><code>New behavior and default for user option 'eudc-inline-expansion-format'.
EUDC inline expansion result formatting defaulted to

    ("%s %s &lt;%s&gt;" firstname name email)

Since email address specifications need to comply with RFC 5322 in
order to be useful in messages, there was a risk of producing syntax
which was standard with RFC 822, but is marked as obsolete syntax by
its successor RFC 5322.  Also, the first and last name part was never
enclosed in double quotes, potentially producing invalid address
specifications, which may be rejected by a receiving MTA.  Thus, this
variable can now additionally be set to nil (the new default), or a
function.  In both cases, the formatted result will be in compliance
with RFC 5322.  When set to nil, a default format very similar to the
old default will be produced.  When set to a function, that function
is called, and the returned values are used to populate the phrase and
comment parts (see RFC 5322 for definitions).  In both cases, the
phrase part will be automatically quoted if necessary.</code></pre><pre><code>New function 'eudc-capf-complete' with 'message-mode' integration.
EUDC can now contribute email addresses to 'completion-at-point' by
adding the new function 'eudc-capf-complete' to
'completion-at-point-functions' in 'message-mode'.</code></pre><p>The missing link that ties EUDC into Emacs’s general-purpose completion framework called “capf” (short for <code>completion-at-point-functions</code>)</p><pre><code>Additional attributes of query and results in eudcb-macos-contacts.el.
The EUDC back-end for the macOS Contacts app now provides a wider set
of attributes to use for queries, and delivers more attributes in
query results.</code></pre><pre><code>New back-end for ecomplete.
A new back-end for ecomplete allows information from that database to
be queried by EUDC, too.  The attributes present in the EUDC query are
used to select the entry type in the ecomplete database.</code></pre><pre><code>New back-end for mailabbrev.
A new back-end for mailabbrev allows information from that database to
be queried by EUDC, too.  Only the attributes 'email', 'name', and
'firstname' are supported.</code></pre><h3 id="ewwshr">EWW/SHR</h3><p>EWW is Emacs’s Web Wowser. SHR is the renderer that powers it.</p><pre><code>New user option to automatically rename EWW buffers.
The 'eww-auto-rename-buffer' user option can be configured to rename
rendered web pages by using their title, URL, or a user-defined
function which returns a string.  For the first two cases, the length
of the resulting name is controlled by the user option
'eww-buffer-name-length'.  By default, no automatic renaming is
performed.</code></pre><pre><code>New user option 'shr-allowed-images'.
This complements 'shr-blocked-images', but allows specifying just the
allowed images.</code></pre><pre><code>New user option 'shr-use-xwidgets-for-media'.
If non-nil (and Emacs has been built with support for xwidgets),
display &lt;video&gt; elements with an xwidget.  Note that this is
experimental; it is known to crash Emacs on some systems, and just
doesn't work on other systems.  Also see etc/PROBLEMS.</code></pre><p>If you compile Emacs with xwidget support, then maybe — just maybe – you might be able to watch a video link in your EWW buffer.</p><pre><code>New user option 'eww-url-transformers'.
These are used to alter an URL before using it.  By default it removes
the common "utm_" trackers from URLs.</code></pre><h3 id="find-dired">Find Dired</h3><p>Who needs <code>find</code> and <code>xargs</code> when you have <a href="https://www.masteringemacs.org/article/dired-shell-commands-find-xargs-replacement">Dired, the find &amp; xargs replacement</a>?</p><pre><code>New command 'find-dired-with-command'.
This enables users to run 'find-dired' with an arbitrary command,
enabling running commands previously unsupported and also enabling new
commands to be built on top.</code></pre><h3 id="gnus">Gnus</h3><p>For some, GNUS is a news, mail, and rss reader; for others, it’s a lifestyle.</p><pre><code>Tool bar changes in Gnus/Message.
There were previously two styles of tool bars available in Gnus and
Message, referred to as 'gnus-summary-tool-bar-retro',
'gnus-group-tool-bar-retro' and 'message-tool-bar-retro', and
'gnus-summary-tool-bar-gnome', 'gnus-group-tool-bar-gnome' and
'message-tool-bar-gnome'.  The "retro" tool bars have been removed (as
well as the icons used), and the "gnome" tool bars are now the only
pre-defined toolbars.</code></pre><pre><code>'gnus-summary-up-thread' and 'gnus-summary-down-thread' bindings removed.
The 'gnus-summary-down-thread' binding to 'M-C-d' was shadowed by
'gnus-summary-read-document', and these commands are also available on
'T u' and 'T d' respectively.</code></pre><pre><code>Gnus now uses a variable-pitch font in the headers by default.
To get the monospace font back, you can put something like the
following in your ".gnus" file:

    (set-face-attribute 'gnus-header nil :inherit 'unspecified)</code></pre><pre><code>The default value of 'gnus-treat-fold-headers' is now 'head'.</code></pre><pre><code>New face 'gnus-header'.
All other 'gnus-header-*' faces inherit from this face now.</code></pre><pre><code>New user option 'gnus-treat-emojize-symbols'.
If non-nil, symbols that have an Emoji representation will be
displayed as emojis.  The default is nil.</code></pre><pre><code>New command 'gnus-article-emojize-symbols'.
This is bound to 'W D e' and will display symbols that have Emoji
representation as Emoji.</code></pre><pre><code>New mu backend for gnus-search.
Configuration is very similar to the notmuch and namazu backends.  It
supports the unified search syntax.</code></pre><p>Interesting. <code>mu</code> is a standalone mail indexer, and <code>mu4e</code> a mail reader on top of it. So it’s perhaps possible, then, to use GNUS for mail reading, and outsource storing and indexing?</p><pre><code>'gnus-html-image-cache-ttl' is now a seconds count.
Formerly it was a pair of numbers '(A B)' that represented 65536*A + B,
to cater to older Emacs implementations that lacked bignums.
The older form still works but is undocumented.</code></pre><h3 id="rmail">Rmail</h3><p>Rmail is yet another way of interacting with email in Emacs.</p><pre><code>Rmail partial summaries can now be applied one on top of the other.
You can now narrow the set of messages selected by Rmail summary's
criteria (recipients, topic, senders, etc.) by making a summary of the
already summarized messages.  For example, invoking
'rmail-summary-by-senders', followed by 'rmail-summary-by-topic' will
produce a summary where both the senders and the topic are according
to your selection.  The new user option
'rmail-summary-progressively-narrow' controls whether the stacking of
the filters is in effect; customize it to a non-nil value to enable
this feature.</code></pre><pre><code>New Rmail summary: by thread.
The new command 'rmail-summary-by-thread' produces a summary of
messages that belong to a single thread of discussion.</code></pre><h3 id="eieio">EIEIO</h3><p>EIEIO is Elisp’s CLOS-style object oriented system. It’s also a nursery rhyme.</p><blockquote><p>Old MacDonald had a farm…</p></blockquote><pre><code>'slot-value' can now be used to access slots of 'cl-defstruct' objects.</code></pre><h3 id="align">Align</h3><p>Align is Emacs’s text alignment facility.</p><pre><code>Alignment in 'text-mode' has changed.
Previously, 'M-x align' didn't do anything, and you had to say 'C-u
M-x align' for it to work.  This has now been changed.  The default
regexp for 'C-u M-x align-regexp' has also been changed to be easier
for inexperienced users to use.</code></pre><h3 id="help-1">Help</h3><p>Help is, well, help. It’s the mode you interact with when you ask Emacs for help.</p><pre><code>New mode, 'emacs-news-view-mode', for viewing the NEWS file.
This mode is used by the 'C-h N' command, and adds buttons to manual
entries and symbol references.</code></pre><pre><code>New user option 'help-link-key-to-documentation'.
When this option is non-nil (which is the default), key bindings
displayed in the "*Help*" buffer will be linked to the documentation
for the command they are bound to.  This does not affect listings of
key bindings and functions (such as 'C-h b').</code></pre><p>More interlinking is always a good thing. I’m glad they’re spending more time improving this in recent Emacsen.</p><h3 id="info-look">Info Look</h3><pre><code>info-look specs can now be expanded at run time instead of a load time.
The new ':doc-spec-function' element can be used to compute the
':doc-spec' element when the user asks for info on that particular
mode (instead of at load time).</code></pre><h3 id="ansi-color">Ansi Color</h3><p>Ansi color is Emacs’s rather tired and limited ANSI color feature.</p><pre><code>Support for ANSI 256-color and 24-bit colors.
256-color and 24-bit color codes are now handled by ANSI color
filters and displayed with the specified color.</code></pre><h3 id="term-mode">Term Mode</h3><p>Term is Emacs’s terminal emulator. Not to be confused with shells!</p><p>See <a href="https://www.masteringemacs.org/article/running-shells-in-emacs-overview">Running Shells and Terminal Emulators in Emacs</a></p><pre><code>New user option 'term-bind-function-keys'.
If non-nil, 'term-mode' will pass the function keys on to the
underlying shell instead of using the normal Emacs bindings.</code></pre><pre><code>Support for ANSI 256-color and 24-bit colors, italic and other fonts.
'term-mode' can now display 256-color and 24-bit color codes.  It can
also handle ANSI codes for faint, italic and blinking text, displaying
it with new 'term-{faint,italic,slow-blink,fast-blink}' faces.</code></pre><h3 id="project">Project</h3><p>Project is the latest in a long, <em>long</em> list of project management solutions built into Emacs. This one seems to have a bit more staying power than the others before it (filesets, CEDET’s project management suite EDE, filecache, …) and that is a good thing.</p><p>Emacs has sorely lacked a proper project manager that people can rally behind.</p><pre><code>'project-find-file' and 'project-or-external-find-file' can include all.
The commands 'project-find-file' and 'project-or-external-find-file'
now accept a prefix argument, which is interpreted to mean "include
all files".</code></pre><pre><code>New command 'project-list-buffers' bound to 'C-x p C-b'.
This command displays a list of buffers from the current project.</code></pre><p>Scoping buffers to the project is good. Shame it’s not using <code>M-x ibuffer</code>.</p><pre><code>'project-kill-buffers' can display the list of buffers to kill.
Customize the user option 'project-kill-buffers-display-buffer-list'
to enable the display of the buffer list.</code></pre><pre><code>New user option 'project-vc-extra-root-markers'.
Use it to add detection of nested projects (inside a VCS repository),
or projects outside of VCS repositories.

As a consequence, the 'VC project backend' is formally renamed to
'VC-aware project backend'.</code></pre><pre><code>New user option 'project-vc-include-untracked'.
If non-nil, files untracked by a VCS are considered to be part of
the project by a VC project based on that VCS.</code></pre><h3 id="xref">Xref</h3><p>Xref is the cross-referencing tool that replaced the rather poor and cumbersome “TAGS” search machinery.</p><pre><code>New command 'xref-go-forward'.
It is bound to 'C-M-,' and jumps to the location where you previously
invoked 'xref-go-back' ('M-,', also known as 'xref-pop-marker-stack').</code></pre><pre><code>The depth of the Xref marker stack is now infinite.
The implementation of the Xref marker stack was changed in a way that
allows as many places to be saved on the stack as needed, limited only
by the available memory.  Therefore, the variables
'find-tag-marker-ring-length' and 'xref-marker-ring-length' are now
obsolete and unused; setting them has no effect.</code></pre><p>Not sure I ever knew, much less reached, the old limit.</p><pre><code>'xref-query-replace-in-results' prompting change.
This command no longer prompts for FROM when called without prefix
argument.  This makes the most common case faster: replacing entire
matches.</code></pre><pre><code>New command 'xref-find-references-and-replace' to rename one identifier.</code></pre><p>Handy, as it saves on typing.</p><pre><code>New variable 'xref-current-item' (renamed from a private version).</code></pre><pre><code>New function 'xref-show-xrefs'.</code></pre><pre><code>'outline-minor-mode' is supported in Xref buffers.
You can enable outlining by adding 'outline-minor-mode' to
'xref-after-update-hook'.</code></pre><p>I didn’t know I wanted this in my life, but… I do! that’s a neat feature. And, just sayin’, if it weren’t for this NEWS entry, nobody – ever – would figure this out.</p><h3 id="file-notifications">File Notifications</h3><p>Emacs can stay updated on file system changes thanks to a range of OS-specific mechanisms.</p><pre><code>The new command 'file-notify-rm-all-watches' removes all file notifications.</code></pre><h3 id="sql">Sql</h3><pre><code>Sql now supports sending of passwords in-process.
To improve security, if an sql product has ':password-in-comint' set
to t, a password supplied via the minibuffer will be sent in-process,
as opposed to via the command-line.</code></pre><h3 id="image-mode">Image Mode</h3><pre><code>New command 'image-transform-fit-to-window'.
This command fits the image to the current window by scaling down or
up as necessary.  Unlike 'image-transform-fit-both', this can scale
the image up as well as down.  It is bound to 's w' in Image Mode by
default.</code></pre><p>I do use the Image mode feature in Emacs, but I’ve never had to scale an image up; but it’s good to know it’s there.</p><pre><code>New command 'image-mode-wallpaper-set'.
This command sets the desktop background to the current image.  It is
bound to 'W' in Image Mode by default.</code></pre><p>I live in Emacs; it may as well be my wallpaper.</p><pre><code>'image-transform-fit-to-{height,width}' are now obsolete.
Use the new command 'image-transform-fit-to-window' instead.
The keybinding for 'image-transform-fit-to-width' is now 's i'.</code></pre><pre><code>User option 'image-auto-resize' can now be set to 'fit-window'.
This works like 'image-transform-fit-to-window'.</code></pre><pre><code>New user option 'image-auto-resize-max-scale-percent'.
The new 'fit-window' option will never scale an image more than this
much (in percent).  It is nil by default, which means no limit.</code></pre><pre><code>New user option 'image-text-based-formats'.
This controls whether or not to show a message, when opening certain
image formats, explaining how to edit it as text.  The default is to
show this message for SVG and XPM.</code></pre><pre><code>New command 'image-transform-set-percent'.
It allows resizing the image to a percentage of its original size, and
is bound to 's p' in Image mode.</code></pre><pre><code>'image-transform-original' renamed to 'image-transform-reset-to-original'.
The old name was confusing, and is now an obsolete function alias.</code></pre><pre><code>'image-transform-reset' renamed to 'image-transform-reset-to-initial'.
The old name was confusing, and is now an obsolete function alias.</code></pre><h3 id="images">Images</h3><pre><code>New commands 'image-crop' and 'image-cut'.
These commands allow interactively cropping/cutting the image at
point.  The commands are bound to keys 'i c' and 'i x' (respectively)
in the local keymap over images.  They rely on external programs, by
default "convert" from ImageMagick, to do the actual cropping/eliding
of the image file.</code></pre><pre><code>New commands 'image-flip-horizontally' and 'image-flip-vertically'.
These commands horizontally and vertically flip the image under point,
and are bound to 'i h' and 'i v', respectively.</code></pre><pre><code>Users can now add special image conversion functions.
This is done via 'image-converter-add-handler'.</code></pre><h3 id="image-dired">Image Dired</h3><p>Yep, image dired is a thing. It’ll generate thumbnails of images and display them alongside the file.</p><pre><code>'image-dired-image-mode' is now based on 'image-mode'.
This avoids converting images in the background, and makes Image-Dired
noticeably faster.  New keybindings from 'image-mode' are now
available in the "*image-dired-display-image*" buffer; press '?' or
'h' in that buffer to see the full list.</code></pre><p>This is just a consolidation of code.</p><pre><code>Navigation and marking commands now work in image display buffer.
The following new bindings have been added:
- 'n', 'SPC' =&gt; 'image-dired-display-next'
- 'p', 'DEL' =&gt; 'image-dired-display-previous'
- 'm'        =&gt; 'image-dired-mark-thumb-original-file'
- 'd'        =&gt; 'image-dired-flag-thumb-original-file'
- 'u'        =&gt; 'image-dired-unmark-thumb-original-file'</code></pre><p>They have been sorely missed. I never quite understood why they couldn’t do this before. I ended up writing my own glue code to do this.</p><pre><code>New command 'image-dired-unmark-all-marks'.
It removes all marks from all files in the thumbnail and the
associated Dired buffer, and is bound to 'U' in the thumbnail and
display buffer.</code></pre><pre><code>New command 'image-dired-do-flagged-delete'.
It deletes all flagged files, and is bound to 'x' in the thumbnail
buffer.  It replaces the command 'image-dired-delete-marked', which is
now an obsolete alias.</code></pre><pre><code>New command 'image-dired-copy-filename-as-kill'.
It copies the name of the marked or current image to the kill ring,
and is bound to 'w' in the thumbnail buffer.</code></pre><pre><code>New command 'image-dired-wallpaper-set'.
This command sets the desktop background to the image at point in the
thumbnail buffer.  It is bound to 'W' by default.</code></pre><pre><code>'image-dired-slideshow-start' is now bound to 'S'.
It is bound in both the thumbnail and display buffer, and no longer
prompts for a timeout; use a numerical prefix (e.g. 'C-u 8 S') to set
the timeout.</code></pre><pre><code>New user option 'image-dired-marking-shows-next'.
If this option is non-nil (the default), marking, unmarking or
flagging an image in either the thumbnail or display buffer shows the
next image.</code></pre><pre><code>New face 'image-dired-thumb-flagged'.
If 'image-dired-thumb-mark' is non-nil (the default), this face is
used for images that are flagged for deletion in the Dired buffer
associated with Image-Dired.</code></pre><pre><code>Image information is now shown in the header line of the thumbnail buffer.
This replaces the message that most navigation commands in the
thumbnail buffer used to show at the bottom of the screen.</code></pre><pre><code>New specifiers for 'image-dired-display-properties-format'.
This is used to format the new header line.  The new specifiers are:
"%d" for the name of the directory that the file is in, "%n" for
file's number in the thumbnail buffer, and "%s" for the file size.

The default format has been updated to use this.  If you prefer the
old format, add this to your Init file:

    (setopt image-dired-display-properties-format "%b: %f (%t): %c")</code></pre><pre><code>New faces for the header line of the thumbnail buffer.
These faces correspond to different parts of the header line, as
specified in 'image-dired-display-properties-format':
- 'image-dired-thumb-header-directory-name'
- 'image-dired-thumb-header-file-name'
- 'image-dired-thumb-header-file-size'
- 'image-dired-thumb-header-image-count'</code></pre><pre><code>PDF support.
Image-Dired now displays thumbnails for PDF files.  Type 'RET' on a
PDF file in the thumbnail buffer to visit the corresponding PDF.</code></pre><pre><code>Support GraphicsMagick command line tools.
Support for the GraphicsMagick command line tool ("gm") has been
added, and is used when it is available instead of ImageMagick.</code></pre><pre><code>Support Thumbnail Managing Standard v0.9.0 (Dec 2020).
This standard allows sharing generated thumbnails across different
programs.  Version 0.9.0 adds two larger thumbnail sizes: 512x512 and
1024x1024 pixels.  See the user option 'image-dired-thumbnail-storage'
to use it; it is not enabled by default.</code></pre><pre><code>Reduce dependency on external "exiftool" program.
The 'image-dired-copy-with-exif-file-name' command no longer requires
an external "exiftool" program to be available.  The user options
'image-dired-cmd-read-exif-data-program' and
'image-dired-cmd-read-exif-data-options' are now obsolete.</code></pre><pre><code>Support for bookmark.el.
The command 'bookmark-set' (bound to 'C-x r m') is now supported in
the thumbnail view, and will create a bookmark that opens the current
directory in Image-Dired.</code></pre><p>Nifty addition to Emacs’s general-purpose bookmarking tool.</p><pre><code>The 'image-dired-slideshow-start' command no longer prompts.
It no longer inconveniently prompts for a number of images and a
delay: it runs indefinitely, but stops automatically on any command.
You can set the delay with a prefix argument, or a negative prefix
argument to prompt for a delay.  Customize the user option
'image-dired-slideshow-delay' to change the default from 5 seconds.</code></pre><pre><code>'image-dired-show-all-from-dir-max-files' increased to 1000.
This user option controls asking for confirmation when starting
Image-Dired in a directory with many files.  Since Image-Dired creates
thumbnails in the background in recent versions, this is not as
important as it used to be.  You can now also customize this option to
nil to disable this confirmation completely.</code></pre><pre><code>'image-dired-thumb-size' increased to 128.</code></pre><pre><code>'image-dired-db-file' renamed to 'image-dired-tags-db-file'.</code></pre><pre><code>'image-dired-display-image-mode' renamed to 'image-dired-image-mode'.
The corresponding keymap is now named 'image-dired-image-mode-map'.</code></pre><pre><code>Some commands have been renamed to be shorter.
- 'image-dired-display-thumbnail-original-image' has been renamed to
  'image-dired-display-this'.
- 'image-dired-display-next-thumbnail-original' has been renamed to
  'image-dired-display-next'.
- 'image-dired-display-previous-thumbnail-original' has been renamed
  to 'image-dired-display-previous'.
The old names are now obsolete aliases.</code></pre><pre><code>'image-dired-thumb-{height,width}' are now obsolete.
Customize 'image-dired-thumb-size' instead, which will set both the
height and width.</code></pre><pre><code>HTML image gallery generation is now obsolete.
The 'image-dired-gallery-generate' command and these user options are
now obsolete: 'image-dired-gallery-thumb-image-root-url',
'image-dired-gallery-hidden-tags', 'image-dired-gallery-dir',
'image-dired-gallery-image-root-url'.</code></pre><pre><code>'image-dired-rotate-thumbnail-{left,right}' are now obsolete.
Instead, use commands 'image-dired-refresh-thumb' to generate a new
thumbnail, or 'image-rotate' to rotate the thumbnail without updating
the thumbnail file.</code></pre><pre><code>Some commands and user options are now obsolete.
Since 'image-dired-display-image-mode' is now based on 'image-mode',
some commands and user options are no longer needed and are now obsolete:
'image-dired-cmd-create-temp-image-options',
'image-dired-cmd-create-temp-image-program',
'image-dired-display-current-image-full',
'image-dired-display-current-image-sized',
'image-dired-display-window-height-correction',
'image-dired-display-window-width-correction',
'image-dired-temp-image-file'.</code></pre><pre><code>New function 'exif-field'.
This is a convenience function to extract the field data from
'exif-parse-file' and 'exif-parse-buffer'.</code></pre><h3 id="bookmarks">Bookmarks</h3><p>Bookmarks is Emacs’s general-purpose bookmark facility. Nearly anything can be bookmarked, recalled and edited. It’s a powerful feature, and greatly underused. Try bookmarking: files, eww buffers, info node buffers, dired, image dired, and more.</p><pre><code>'list-bookmarks' now includes a type column.
Types are registered via a 'bookmark-handler-type' symbol property on
the jumping function.</code></pre><pre><code>'bookmark-sort-flag' can now be set to 'last-modified'.
This will display bookmark list from most recently set to least
recently set.</code></pre><pre><code>When editing a bookmark annotation, 'C-c C-k' will now cancel.
It is bound to the new command 'bookmark-edit-annotation-cancel'.</code></pre><pre><code>New user option 'bookmark-fringe-mark'.
This option controls the bitmap used to indicate bookmarks in the
fringe (or nil to disable showing this marker).</code></pre><h3 id="xwidget">Xwidget</h3><p>Xwidget is an optional, compiled module that – in theory – grants access to ‘widgets’ like Chromium in Emacs. I say <em>in theory</em>, as it can be quite unstable.</p><pre><code>New user option 'xwidget-webkit-buffer-name-format'.
This option controls how xwidget-webkit buffers are named.</code></pre><pre><code>New user option 'xwidget-webkit-cookie-file'.
This option controls whether the xwidget-webkit buffers save cookies
set by web pages, and if so, in which file to save them.</code></pre><pre><code>New minor mode 'xwidget-webkit-edit-mode'.
When this mode is enabled, self-inserting characters and other common
web browser shortcut keys are redefined to send themselves to the
WebKit widget.</code></pre><pre><code>New minor mode 'xwidget-webkit-isearch-mode'.
This mode acts similarly to incremental search, and allows searching
the contents of a WebKit widget.  In xwidget-webkit mode, it is bound
to 'C-s' and 'C-r'.</code></pre><p>Seems useful, if it behaves like isearch does elsewhere.</p><pre><code>New command 'xwidget-webkit-browse-history'.
This command displays a buffer containing the page load history of
the current WebKit widget, and allows you to navigate it.</code></pre><pre><code>On X, the WebKit inspector is now available inside xwidgets.
To access the inspector, right click on the widget and select "Inspect
Element".</code></pre><pre><code>"Open in New Window" in a WebKit widget's context menu now works.
The newly created buffer will be displayed via 'display-buffer', which
can be customized through the usual mechanism of 'display-buffer-alist'
and friends.</code></pre><h3 id="tramp">Tramp</h3><p>Tramp is the remote connection tool in Emacs. It’s excellent, and one of my favorite features.</p><pre><code>New connection methods "docker", "podman" and "kubernetes".
They allow accessing containers provided by Docker and similar
programs.</code></pre><p>Great feature additions. Now you can trivially <code>cd</code> into a docker container from <a href="https://www.masteringemacs.org/article/complete-guide-mastering-eshell">Eshell</a>, from <code>find-file</code>, or anywhere else that accepts a filepath.</p><pre><code>Tramp supports abbreviating remote home directories now.
When calling 'abbreviate-file-name' on a Tramp file name, the result
will abbreviate the user's home directory, for example by abbreviating
"/ssh:user@host:/home/user" to "/ssh:user@host:~".</code></pre><pre><code>New user option 'tramp-use-scp-direct-remote-copying'.
When set to non-nil, Tramp does not copy files between two remote
hosts via a local copy in its temporary directory, but lets the 'scp'
command do this job.</code></pre><pre><code>Proper password prompts for methods "doas", "sudo" and "sudoedit".
The password prompts for these methods reflect now the credentials of
the user requesting such a connection, and not of the user who is the
target.  This has always been needed, just the password prompt and the
related 'auth-sources' entry were wrong.</code></pre><pre><code>New user option 'tramp-completion-use-cache'.
During user and host name completion in the minibuffer, results from
Tramp's connection cache are taken into account.  This can be disabled
by setting the user option 'tramp-completion-use-cache' to nil.</code></pre><h3 id="browse-url">Browse URL</h3><p>Browse url opens up an URL in your browser.</p><pre><code>New user option 'browse-url-default-scheme'.
This user option decides which URL scheme that 'browse-url' and
related functions will use by default.  For example, you could
customize this to "https" to always prefer HTTPS URLs.</code></pre><pre><code>New user option 'browse-url-irc-function'.
This option specifies a function for opening "irc://" links.  It
defaults to the new function 'browse-url-irc'.</code></pre><pre><code>New function 'browse-url-irc'.
This multipurpose autoloaded function can be used for opening "irc://"
and "ircs://" URLS by any caller that passes a URL string as an initial
arg.</code></pre><pre><code>Support for the Netscape web browser has been removed.
This support has been obsolete since Emacs 25.1.  The final version of
the Netscape web browser was released in February, 2008.</code></pre><pre><code>Support for the Galeon web browser has been removed.
This support has been obsolete since Emacs 25.1.  The final version of
the Galeon web browser was released in September, 2008.</code></pre><pre><code>Support for the Mozilla web browser is now obsolete.
Note that this historical web browser is different from Mozilla
Firefox; it is its predecessor.</code></pre><h3 id="python-mode">Python Mode</h3><pre><code>Project shells and a new user option 'python-shell-dedicated'.
When called with a prefix argument, 'run-python' now offers the choice
of creating a shell dedicated to the current project.  This shell runs
in the project root directory and is shared among all project buffers.

Without a prefix argument, the kind of shell (buffer-dedicated,
project-dedicated or global) is specified by the new
'python-shell-dedicated' user option.</code></pre><p>A welcome addition. This is the benefit of having a builtin <em>and</em> well-supported project tool in Emacs.</p><h3 id="ruby-mode">Ruby Mode</h3><pre><code>New user option 'ruby-toggle-block-space-before-parameters'.</code></pre><pre><code>Support for endless methods.</code></pre><pre><code>New user options that determine indentation logic.
'ruby-method-params-indent', 'ruby-block-indent',
'ruby-after-operator-indent', 'ruby-method-call-indent',
'ruby-parenless-call-arguments-indent'.  See the docstrings for
explanations and examples.</code></pre><h3 id="eshell-1">Eshell</h3><p>Eshell is Emacs’s shell written in elisp.</p><pre><code>New feature to easily bypass Eshell's own pipelining.
Prefixing '|', '&lt;' or '&gt;' with an asterisk, i.e. '*|', '*&lt;' or '*&gt;',
will cause the whole command to be passed to the operating system
shell.  This is particularly useful to bypass Eshell's own pipelining
support for pipelines which will move a lot of data.  See section
"Running Shell Pipelines Natively" in the Eshell manual, node
"(eshell) Pipelines".</code></pre><p>Pipelining in eshell was never all that feature complete; it could also be slow. These redirections allow us to circumvent eshell in favor of a shell that implements it correctly – and expediently.</p><pre><code>New module to help supplying absolute file names to remote commands.
After enabling the new 'eshell-elecslash' module, typing a forward
slash as the first character of a command line argument will
automatically insert the Tramp prefix.  The automatic insertion
applies only when 'default-directory' is remote and the command is a
Lisp function.  This frees you from having to keep track of whether
commands are Lisp function or external when supplying absolute file
name arguments.  See the "(eshell) Electric forward slash" node in the
Eshell manual for details.</code></pre><p>One annoyance about <code>cd</code>’ing into a remote directory in Tramp was always how easy it was to accidentally <code>cd</code> <em>out</em> of it again. This will go some way towards alleviating that.</p><pre><code>Improved support for redirection operators in Eshell.
Eshell now supports a wider variety of redirection operators.  For
example, you can now redirect both stdout and stderr via '&amp;&gt;' or
duplicate one output handle to another via 'NEW-FD&gt;&amp;OLD-FD'.  For more
information, see the "(eshell) Redirection" node in the Eshell manual.</code></pre><pre><code>New eshell built-in command 'doas'.
The privilege-escalation program 'doas' has been added to the existing
'su' and 'sudo' commands from the 'eshell-tramp' module.  The external
command may still be accessed by using '*doas'.</code></pre><p><code>doas</code> is slowly taking over as a smaller – safer – alternative to the sprawling <code>sudo</code> program.</p><pre><code>Double-quoting an Eshell expansion now treats the result as a single string.
If an Eshell expansion like '$FOO' is surrounded by double quotes, the
result will always be a single string, no matter the type that would
otherwise be returned.</code></pre><pre><code>Concatenating Eshell expansions now works more similarly to other shells.
When concatenating an Eshell expansion that returns a list, "adjacent"
elements of each operand are now concatenated together,
e.g. '$(list "a" "b")c' returns '("a" "bc")'.  See the "(eshell)
Expansion" node in the Eshell manual for more details.</code></pre><pre><code>Eshell subcommands with multiline numeric output return lists of numbers.
If every line of the output of an Eshell subcommand like '${COMMAND}'
is numeric, the result will be a list of numbers (or a single number
if only one line of output).  Previously, this only converted numbers
when there was a single line of output.</code></pre><pre><code>Built-in Eshell commands now follow Posix/GNU argument syntax conventions.
Built-in commands in Eshell now accept command-line options with
values passed as a single token, such as '-oVALUE' or
'--option=VALUE'.  New commands can take advantage of this with the
'eshell-eval-using-options' macro.  See "Defining new built-in
commands" in the "(eshell) Built-ins" node of the Eshell manual.</code></pre><pre><code>Eshell globs ending with "/" now match only directories.
Additionally, globs ending with "**/" or "***/" no longer raise an
error, and now expand to all directories recursively (following
symlinks in the latter case).</code></pre><pre><code>Lisp forms in Eshell now treat a nil result as a failed exit status.
When executing a command that looks like '(lisp form)' and returns
nil, Eshell will set the exit status (available in the '$?'
variable) to 2.  This allows commands like that to be used in
conditionals.  To change this behavior, customize the new
'eshell-lisp-form-nil-is-failure' user option.</code></pre><h3 id="shell">Shell</h3><p>Shell mode is Emacs’s wrapper around a common shell, usually bash or the cmd.exe on Windows.</p><pre><code>New user option 'shell-kill-buffer-on-exit'.
Enabling this will automatically kill a "*shell*" buffer as soon as
the shell session terminates.</code></pre><p>Nope, not for me. I accidentally kill or terminate my shell, and I don’t want to lose the output of the buffer as a result of that.</p><pre><code>New minor mode 'shell-highlight-undef-mode'.
Customize 'shell-highlight-undef-enable' to t if you want to enable
this minor mode in "*shell*" buffers.  It will highlight undefined
commands with a warning face as you type.</code></pre><p>Seems useful. I’d have to use it for a while to determine how reliable it is.</p><h3 id="calc">Calc</h3><p><code>M-x calc</code> is Emacs’s all-powerful symbolic RPN calculator. It’s fantastically advanced, and well worth learning if you do a lot of mathematics.</p><pre><code>New user option 'calc-kill-line-numbering'.
Set it to nil to exclude line numbering from kills and copies.</code></pre><p>I always found that annoying, so I am glad there is now a switch to disable it.</p><h3 id="hierarchy">Hierarchy</h3><p>Hierarchy is a tree list user interface component.</p><pre><code>Tree Display can delay computation of children.
'hierarchy-add-tree' and 'hierarchy-add-trees' have an optional
argument which allows tree-widget display to be activated and computed
only when the user expands the node.</code></pre><p>Being able to thunk the calculations of the child node matches should certainly improve performance (or delay computation until it is needed, anyway) but I do not know of too many packages that use hierarchy.</p><h3 id="proced">Proced</h3><p>Proced is Emacs’s answer to <code>top</code> and <code>ps</code>. <a href="https://www.masteringemacs.org/article/displaying-interacting-processes-proced">Displaying and Interacting with processes using Proced</a> is a good place to start if you want to learn more.</p><pre><code>proced.el shows system processes of remote hosts.
When 'default-directory' is remote, and 'proced' is invoked with a
negative argument like 'C-u - proced', the system processes of that
remote host are shown.  Alternatively, the user option
'proced-show-remote-processes' can be set to non-nil.
'proced-signal-function' has been marked obsolete.</code></pre><p>Nifty! You can built a neat little server dashboard with a couple of keyboard macros and some window configurations.</p><pre><code>Proced can now optionally show process details in color.
New user option 'proced-enable-color-flag' enables coloring of Proced
buffers.  This option is disabled by default; customize it to a
non-nil value to enable colors.</code></pre><p>I’ve enabled it, as it does make things easier to read.</p><h3 id="miscellaneous-1">Miscellaneous</h3><pre><code>New user option 'webjump-use-internal-browser'.
When non-nil, WebJump will use an internal browser to open web pages,
instead of the default external browser.</code></pre><pre><code>New user option 'font-lock-ignore'.
This option provides a mechanism to selectively disable font-lock
keyword-driven fontifications.</code></pre><p>I can’t immediately discern if this works with tree-sitter based font locking. Probably not, as it uses <code>font-lock-keywords</code> to drive it.</p><pre><code>New user option 'auto-save-visited-predicate'.
This user option is a predicate function which is called by
'auto-save-visited-mode' to decide whether or not to save a buffer.
You can use it to automatically save only specific buffers, for
example buffers using a particular mode or in some directory.</code></pre><pre><code>New user option 'remote-file-name-inhibit-auto-save-visited'.
If this user option is non-nil, 'auto-save-visited-mode' will not
auto-save remote buffers.  The default is nil.</code></pre><pre><code>New package vtable.el for formatting tabular data.
This package allows formatting data using variable-pitch fonts.
The resulting tables can display text in variable pitch fonts, text
using fonts of different sizes, and images.  See the "(vtable) Top"
manual for more details.</code></pre><p>Emacs had long had a package that can tabulate data: <code>tabulated-list.el</code>. This new, and improved version, adds a range of new features.</p><pre><code>New minor mode 'elide-head-mode'.
Enabling this minor mode turns on hiding header material, like
'elide-head' does; disabling it shows the header.  The commands
'elide-head' and 'elide-head-show' are now obsolete.</code></pre><pre><code>New package ansi-osc.el.
Support for OSC ("Operating System Command") escape sequences has been
extracted from comint.el in order to provide interpretation of OSC
sequences in compilation buffers.

Adding the new function 'ansi-osc-compilation-filter' to
'compilation-filter-hook' enables interpretation of OSC escape
sequences in compilation buffers.  By default, all sequences are
filtered out.

The list of handlers (already covering OSC 7 and 8) has been extended
with a handler for OSC 2, the command to set a window title.</code></pre><p>Emacs 27 added better directory tracking support for OSC 8. I wrote about <a href="https://www.masteringemacs.org/article/running-shells-in-emacs-overview">how to set it up for Shell-mode</a>.</p><pre><code>'recentf-mode' now uses abbreviated file names by default.
This means that e.g. "/home/foo/bar" is now displayed as "~/bar".
Customize the user option 'recentf-filename-handlers' to nil to get
back the old behavior.</code></pre><p>Recent Files is a capable, little feature. It can recall recently used files at will.</p><pre><code>New command 'recentf-open'.
This command prompts for a recently opened file in the minibuffer, and
visits it.</code></pre><pre><code>'ffap-machine-at-point' no longer pings hosts by default.
It will now simply look at a hostname to determine if it is valid,
instead of also trying to ping it.  Customize the user option
'ffap-machine-p-known' to 'ping' to get the old behavior back.</code></pre><pre><code>The 'run-dig' command is now obsolete; use 'dig' instead.</code></pre><pre><code>Some 'bib-mode' commands and variables have been renamed.
To respect Emacs naming conventions, the variable 'unread-bib-file'
has been renamed to 'bib-unread-file'.  The following commands have
also been renamed:
    'addbib'           to  'bib-add'
    'return-key-bib'   to  'bib-return-key'
    'mark-bib'         to  'bib-mark'
    'unread-bib'       to  'bib-unread'</code></pre><pre><code>'outlineify-sticky' command is renamed to 'allout-outlinify-sticky'.
The old name is still available as an obsolete function alias.</code></pre><pre><code>The url-irc library now understands "ircs://" links.</code></pre><pre><code>New command 'world-clock-copy-time-as-kill' for 'world-clock-mode'.
It copies the current line into the kill ring.</code></pre><p>I betcha didn’t know Emacs had a <code>M-x world-clock-mode</code>. It goes well with <code>M-x sunrise-sunset</code> and <code>M-x phases-of-moon</code>.</p><pre><code>'edit-abbrevs' now uses font-locking.
The new face 'abbrev-table-name' is used to display the abbrev table
name.</code></pre><pre><code>New key binding 'O' in "*Buffer List*".
This key is now bound to 'Buffer-menu-view-other-window', which will
view this line's buffer in View mode in another window.</code></pre><p>Nice to have. You should just use <code>M-x ibuffer</code> though.</p><h3 id="scheme-mode">Scheme Mode</h3><pre><code>Auto-detection of Scheme library files.
Emacs now automatically enables the Scheme mode when opening R6RS
Scheme Library Source (".sls") files and R7RS Scheme Library
Definition (".sld") files.</code></pre><pre><code>Imenu members for R6RS and R7RS library members.
Imenu now lists the members directly nested in R6RS Scheme libraries
('library') and R7RS libraries ('define-library').

</code></pre><h3 id="new-modes-and-packages-in-emacs-29.1">New Modes and Packages in Emacs 29.1</h3><pre><code>Eglot: Emacs Client for the Language Server Protocol.
Emacs now comes with the Eglot package, which enhances various Emacs
features, such as completion, documentation, error detection, etc.,
based on data provided by language servers using the Language Server
Protocol (LSP).  See the new Info manual "(eglot) Top" for more.  Also
see "etc/EGLOT-NEWS".

If you want to be able to use 'package-install' to upgrade Eglot to
newer versions released on GNU ELPA, customize the new option
'package-install-upgrade-built-in' to a non-nil value.</code></pre><p>You should <em>definitely</em> read the manual for this package if you want to use it. You’ll want to make sure you have the right language server, et al. But, generally speaking, <code>M-x eglot</code> is all you need.</p><pre><code>use-package: Declarative package configuration.
use-package is now shipped with Emacs.  It provides the 'use-package'
macro, which allows you to isolate package configuration in your init
file in a way that is declarative, tidy, and performance-oriented.
See the new Info manual "(use-package) Top" for more.

If you want to be able to use 'package-install' to upgrade use-package
to newer versions released on GNU ELPA, customize the new option
'package-install-upgrade-built-in' to a non-nil value.</code></pre><pre><code>New package 'wallpaper'.
This package provides the command 'wallpaper-set', which sets the
desktop background image.  Depending on the system and the desktop,
this may require an external program (such as "swaybg", "gm",
"display" or "xloadimage").  If so, a suitable command should be
detected automatically in most cases.  It can also be customized
manually if needed, using the new user options 'wallpaper-command' and
'wallpaper-command-args'.</code></pre><p>A fine complement to <code>M-x zone</code>, Emacs’s screensaver.</p><pre><code>New package 'oclosure'.
This allows the creation of OClosures, which are "functions with
slots" or "function objects" that expose additional information about
themselves.  Use the new macros 'oclosure-define' and
'oclosure-lambda' to create OClosures.  See the "(elisp) OClosures"
node for more information.</code></pre><pre><code>New generic function 'oclosure-interactive-form'.
Used by 'interactive-form' when called on an OClosure.
This allows specific OClosure types to compute their interactive specs
on demand rather than precompute them when created.</code></pre><pre><code>New theme 'leuven-dark'.
This is a dark version of the 'leuven' theme.</code></pre><pre><code>New mode 'erts-mode'.
This mode is used to edit files geared towards testing actions in
Emacs buffers, like indentation and the like.  The new ert function
'ert-test-erts-file' is used to parse these files.</code></pre><p>One of the hardest things about writing tests for a text editor package is having to keep tabs on the point, the text, the window layout, etc. <em>Anything</em> that helps make that easier is a win for everyone.</p><pre><code>New major mode 'js-json-mode'.
This is a lightweight variant of 'js-mode' that is used by default
when visiting JSON files.</code></pre><pre><code>New major mode 'csharp-mode'.
A major mode based on CC Mode for editing programs in the C# language.
This mode is auto-enabled for files with the ".cs" extension.</code></pre><pre><code>New major modes based on the tree-sitter library.
These new major modes are available if Emacs was built with the
tree-sitter library.  They provide support for font-locking,
indentation, and navigation by defuns based on parsing the buffer text
by a tree-sitter parser.  Some major modes also offer support for
Imenu and 'which-func'.

The new modes based on tree-sitter are for now entirely optional, and
you must turn them on manually, or load them in your init file, or
customize 'auto-mode-alist' to turn them on automatically for certain
files.  You can also customize 'major-mode-remap-alist' to
automatically turn on some tree-sitter based modes for the same files
for which a "built-in" mode would be turned on.  For example:

    (add-to-list 'major-mode-remap-alist '(ruby-mode . ruby-ts-mode))

If you try these modes and don't like them, you can go back to the
"built-in" modes by restarting Emacs.  (If you use desktop.el to save
and restore Emacs sessions, make sure no buffer under these modes is
recorded in the desktop file, before restarting.)  But please tell us
why you didn't like the tree-sitter based modes, so that we could try
improving them.

Each major mode based on tree-sitter needs a language grammar library,
usually named "libtree-sitter-LANG.so" ("libtree-sitter-LANG.dll" on
MS-Windows), where LANG is the corresponding language name.  Emacs
looks for these libraries in the following places:

 . in the directories mentioned in the list 'treesit-extra-load-path'
 . in the "tree-sitter" subdirectory of your 'user-emacs-directory'
   (by default, "~/.emacs.d/tree-sitter")
 . in the standard system directories where other shared libraries are
   usually installed

We recommend to install these libraries in one of the standard system
locations (the last place in the above list).

If a language grammar library required by a mode is not found in any
of the above places, the mode will display a warning when you try to
turn it on.</code></pre><p>This is a good summary of what you need to do to start using tree-sitter. But, as I’ve said before, it can be a bit gnarly if you haven’t done this sort of thing before. My guide to <a href="https://www.masteringemacs.org/article/how-to-get-started-tree-sitter">tree-sitter</a> is a good place to start.</p><pre><code>New major mode 'typescript-ts-mode'.
A major mode based on the tree-sitter library for editing programs
in the TypeScript language.</code></pre><pre><code>New major mode 'tsx-ts-mode'.
A major mode based on the tree-sitter library for editing programs
in the TypeScript language, with support for TSX.</code></pre><p>Both TSX/TS modes are welcome additions.</p><pre><code>New major mode 'c-ts-mode'.
An optional major mode based on the tree-sitter library for editing
programs in the C language.</code></pre><pre><code>New major mode 'c++-ts-mode'.
An optional major mode based on the tree-sitter library for editing
programs in the C++ language.</code></pre><pre><code>New command 'c-or-c++-ts-mode'.
A command that automatically guesses the language of a header file,
and enables either 'c-ts-mode' or 'c++-ts-mode' accordingly.</code></pre><pre><code>New major mode 'java-ts-mode'.
An optional major mode based on the tree-sitter library for editing
programs in the Java language.</code></pre><pre><code>New major mode 'python-ts-mode'.
An optional major mode based on the tree-sitter library for editing
programs in the Python language.</code></pre><pre><code>New major mode 'css-ts-mode'.
An optional major mode based on the tree-sitter library for editing
CSS (Cascading Style Sheets).</code></pre><pre><code>New major mode 'json-ts-mode'.
An optional major mode based on the tree-sitter library for editing
programs in the JSON language.</code></pre><pre><code>New major mode 'csharp-ts-mode'.
An optional major mode based on the tree-sitter library for editing
programs in the C# language.</code></pre><pre><code>New major mode 'bash-ts-mode'.
Am optional major mode based on the tree-sitter library for editing
Bash shell scripts.</code></pre><pre><code>New major mode 'dockerfile-ts-mode'.
A major mode based on the tree-sitter library for editing
Dockerfiles.</code></pre><p>This is Emacs’s first Dockerfile mode. There is no regular mode for it.</p><pre><code>New major mode 'cmake-ts-mode'.
A major mode based on the tree-sitter library for editing CMake files.</code></pre><pre><code>New major mode 'toml-ts-mode'.
An optional major mode based on the tree-sitter library for editing
files written in TOML, a format for writing configuration files.</code></pre><pre><code>New major mode 'go-ts-mode'.
A major mode based on the tree-sitter library for editing programs in
the Go language.</code></pre><pre><code>New major mode 'go-mod-ts-mode'.
A major mode based on the tree-sitter library for editing "go.mod"
files.</code></pre><pre><code>New major mode 'yaml-ts-mode'.
A major mode based on the tree-sitter library for editing files
written in YAML.</code></pre><p>This mode is a bit lacking in many areas. There is no indentation, for instance. You may want to use the third-party <code>yaml</code> mode instead.</p><pre><code>New major mode 'rust-ts-mode'.
A major mode based on the tree-sitter library for editing programs in
the Rust language.</code></pre><pre><code>New major mode 'ruby-ts-mode'.
An optional major mode based on the tree-sitter library for editing
programs in the Ruby language.</code></pre><h3 id="incompatible-lisp-changes-in-emacs-29.1">Incompatible Lisp Changes in Emacs 29.1</h3><pre><code>The implementation of overlays has changed.
Emacs now uses an implementation of overlays that is much more
efficient than the original one, and should speed up all the
operations that involve overlays, especially when there are lots of
them in a buffer.

As result of this, some minor incompatibilities in behavior could be
observed, as described below.  Except those minor incompatibilities,
no other changes in behavior of overlays should be visible on the Lisp
or user level, with the exception of better performance and the order
of overlays returned by functions that don't promise any particular
order.</code></pre><p>Overlays are ranges of positions in Emacs that you can apply to a buffer and assign all manner of metadata and contextual information. This is how a wide range of Emacs’s features work: from flymake errors to buttons to many other things. Speedups and efficiency gains here pay dividends everywhere else.</p><pre><code>The function 'overlay-recenter' is now a no-op.
This function does nothing, and in particular has no effect on the
value returned by 'overlay-lists'.  The purpose of 'overlay-recenter'
was to allow more efficient lookup of overlays around a certain buffer
position; however with the new implementation the lookup of overlays
is efficient regardless of their position, and there's no longer any
need to "optimize" the lookup, nor any notion of a "center" of the
overlays.</code></pre><pre><code>The function 'overlay-lists' returns one unified list of overlays.
This function used to return a cons of two lists, one with overlays
before the "center" position, the other after that "center".  It now
returns a list whose 'car' is the list of all the buffer overlays, and
whose 'cdr' is always nil.</code></pre><pre><code>'format-prompt' now uses 'substitute-command-keys'.
This means that both the prompt and 'minibuffer-default-prompt-format'
will have key definitions and single quotes handled specially.</code></pre><pre><code>New function 'substitute-quotes'.
This function works like 'substitute-command-keys' but only
substitutes quote characters.</code></pre><pre><code>'find-image' now uses 'create-image'.
This means that images found through 'find-image' also have
auto-scaling applied.  (This only makes a difference on HiDPI
displays.)</code></pre><pre><code>Changes in how "raw" in-memory XBM images are specified.
Some years back Emacs gained the ability to scale images, and you
could then specify ':width' and ':height' when using 'create-image' on all
image types -- except XBM images, because this format already used the
':width' and ':height' arguments to specify the width/height of the "raw"
in-memory format.  This meant that if you used these specifications
on, for instance, XBM files, Emacs would refuse to display them.  This
has been changed, and ':width'/':height' now works as with all other image
formats, and the way to specify the width/height of the "raw"
in-memory format is now by using ':data-width' and ':data-height'.</code></pre><pre><code>"loaddefs.el" generation has been reimplemented.
The various "loaddefs.el" files in the Emacs tree (which contain
information about autoloads, built-in packages and package prefixes)
used to be generated by functions in autoloads.el.  These are now
generated by loaddefs-gen.el instead.  This leads to functionally
equivalent "loaddefs.el" files, but they do not use exactly the same
syntax, so using 'M-x update-file-autoloads' no longer works.  (This
didn't work well in most files in the past, either, but it will now
signal an error in any file.)

In addition, files are scanned in a slightly different way.
Previously, ';;;###' specs inside a top-level form (i.e., something
like '(when ... ;;;### ...)' would be ignored.  They are now parsed as
usual.</code></pre><pre><code>Themes have special autoload cookies.
All built-in themes are scraped for ';;;###theme-autoload' cookies
that are loaded along with the regular auto-loaded code.</code></pre><pre><code>'buffer-modified-p' has been extended.
This function was previously documented to return only nil or t.  This
has been changed to nil/'autosaved'/non-nil.  The new 'autosaved'
value means that the buffer is modified, but that it hasn't been
modified since the time of last auto-save.</code></pre><pre><code>'with-silent-modifications' also restores buffer autosave status.
'with-silent-modifications' is a macro meant to be used by the font
locking machinery to allow applying text properties without changing
the modification status of the buffer.  However, it didn't restore the
buffer autosave status, so applying font locking to a modified buffer
that had already been auto-saved would trigger another auto-saving.
This is no longer the case.</code></pre><pre><code>'prin1' doesn't always escape "." and "?" in symbols any more.
Previously, symbols like 'foo.bar' would be printed by 'prin1' as
"foo\.bar".  This now prints as "foo.bar" instead.  The Emacs Lisp
reader interprets these strings as referring to the same symbol, so
this is virtually always backwards-compatible, but there may
theoretically be code out there that expects a specific printed
representation.

The same is the case with the "?" character: The 'foo?' symbol is now
printed as "foo?" instead of "foo\?".

If the "." and "?" characters are the first character in the symbol,
they will still be escaped, so the '.foo' symbol is still printed as
"\.foo" and the '?bar' symbol is still printed as "\?bar".</code></pre><pre><code>Remapping 'mode-line' face no longer works as expected.
'mode-line' is now the parent face of the new 'mode-line-active' face,
and remapping parent of basic faces does not work reliably.
Instead of remapping 'mode-line', you have to remap 'mode-line-active'.</code></pre><pre><code>'make-process' has been extended to support ptys when ':stderr' is set.
Previously, setting ':stderr' to a non-nil value would force the
process's connection to use pipes.  Now, Emacs will use a pty for
stdin and stdout if requested no matter the value of ':stderr'.</code></pre><p>PTYs (pseudo-terminals) are generally much faster and better to use than pipes when you want to interface with a sub-process.</p><pre><code>User option 'mail-source-ignore-errors' is now obsolete.
The whole mechanism for prompting users to continue in case of
mail-source errors has been removed, so this option is no longer
needed.</code></pre><h3 id="fonts">Fonts</h3><pre><code>Emacs now supports 'medium' fonts.
Emacs previously didn't distinguish between the 'regular'/'normal'
weight and the 'medium' weight, but it now also supports the (heavier)
'medium' weight.  However, this means that if you specify a weight of
'normal' and the font doesn't have this weight, Emacs won't find the
font spec.  In these cases, replacing ":weight 'normal" with ":weight
'medium" should fix the issue.</code></pre><p>Better and more sophisticated font rendering is always a positive. Emacs has made so many strides in this area over the years. Don’t forget that <code>M-x customize-face default</code> is still a good way to experiment with fonts.</p><pre><code>Keymap descriptions by Help commands have changed.
'help--describe-command', 'C-h b' and associated functions that output
keymap descriptions have changed.  In particular, prefix commands are
not output at all, and instead of "??" for closures/functions, these
functions output "[closure]"/"[lambda]".  You can get back the old
behavior of including prefix commands by customizing the new option
'describe-bindings-show-prefix-commands' to a non-nil value.</code></pre><pre><code>'downcase' details have changed slightly.
In certain locales, changing the case of an ASCII-range character may
turn it into a multibyte character, most notably with "I" in Turkish
(the lowercase is "ı", 0x0131).  Previously, 'downcase' on a unibyte
string was buggy, and would mistakenly just return the lower byte of
this, 0x31 (the digit "1").  'downcase' on a unibyte string has now
been changed to downcase such characters as if they were ASCII.  To
get proper locale-dependent downcasing, the string has to be converted
to multibyte first.  (This goes for the other case-changing functions,
too.)</code></pre><pre><code>Functions in 'tramp-foreign-file-name-handler-alist' have changed.
Functions to determine which Tramp file name handler to use are now
passed a file name in dissected form (via 'tramp-dissect-file-name')
instead of in string form.</code></pre><pre><code>'def' indentation changes.
In 'emacs-lisp-mode', forms with a symbol with a name that start with
"def" have been automatically indented as if they were 'defun'-like
forms, for instance:

    (defzot 1
      2 3)

This heuristic has now been removed, and all functions/macros that
want to be indented this way have to be marked with

    (declare (indent defun))

or the like.  If the function/macro definition itself can't be
changed, the indentation can also be adjusted by saying something
like:

    (put 'defzot 'lisp-indent-function 'defun)</code></pre><pre><code>The 'inhibit-changing-match-data' variable is now obsolete.
Instead, functions like 'string-match' and 'looking-at' now take an
optional INHIBIT-MODIFY argument.</code></pre><pre><code>'gnus-define-keys' is now obsolete.
Use 'define-keymap' instead.</code></pre><pre><code>MozRepl has been removed from js.el.
MozRepl was removed from Firefox in 2017, so this code doesn't work
with recent versions of Firefox.</code></pre><pre><code>The function 'image-dired-get-exif-data' is now obsolete.
Use 'exif-parse-file' and 'exif-field' instead.</code></pre><pre><code>'insert-directory' alternatives should not change the free disk space line.
This change is now applied in 'dired-insert-directory'.</code></pre><pre><code>'compilation-last-buffer' is (finally) declared obsolete.
It has been obsolete since Emacs 22.1, actually.</code></pre><pre><code>Calling 'lsh' now elicits a byte-compiler warning.
'lsh' behaves in somewhat surprising and platform-dependent ways for
negative arguments, and is generally slower than 'ash', which should be
used instead.  This warning can be suppressed by surrounding calls to
'lsh' with the construct '(with-suppressed-warnings ((suspicious lsh)) ...)',
but switching to 'ash' is generally much preferable.</code></pre><pre><code>Some functions and variables obsolete since Emacs 24 have been removed:
'Buffer-menu-buffer+size-width', 'Electric-buffer-menu-mode',
'Info-edit-map', 'allout-abbreviate-flattened-numbering',
'allout-exposure-change-hook', 'allout-mode-deactivate-hook',
'allout-structure-added-hook', 'allout-structure-deleted-hook',
'allout-structure-shifted-hook', 'ansi-color-unfontify-region',
'archive-extract-hooks', 'auth-source-forget-user-or-password',
'auth-source-hide-passwords', 'auth-source-user-or-password',
'automatic-hscrolling', 'automount-dir-prefix', 'bibtex-complete',
'bibtex-entry-field-alist', 'buffer-has-markers-at',
'buffer-substring-filters', 'byte-compile-disable-print-circle',
'c-prepare-bug-report-hooks', 'cfengine-mode-abbrevs',
'change-log-acknowledgement', 'chart-map',
'checkdoc-comment-style-hooks', 'comint--unquote&amp;expand-filename',
'comint-dynamic-complete', 'comint-dynamic-complete-as-filename',
'comint-dynamic-simple-complete', 'comint-unquote-filename',
'command-history-map', 'compilation-parse-errors-function',
'completion-annotate-function', 'condition-case-no-debug',
'count-lines-region', 'crisp-mode-modeline-string',
'custom-print-functions', 'cvs-string-prefix-p', 'data-debug-map',
'deferred-action-function', 'deferred-action-list',
'dired-pop-to-buffer', 'dired-shrink-to-fit',
'dired-sort-set-modeline', 'dired-x-submit-report',
'display-buffer-function',
'ediff-choose-window-setup-function-automatically',
'eieio-defgeneric', 'eieio-defmethod', 'emacs-lock-from-exiting',
'erc-complete-word', 'erc-dcc-chat-filter-hook',
'eshell-add-to-window-buffer-names', 'eshell-cmpl-suffix-list',
'eshell-for', 'eshell-remove-from-window-buffer-names',
'eshell-status-in-modeline', 'filesets-cache-fill-content-hooks',
'font-list-limit', 'font-lock-maximum-size',
'font-lock-reference-face', 'gnus-carpal',
'gnus-debug-exclude-variables', 'gnus-debug-files',
'gnus-local-domain', 'gnus-outgoing-message-group',
'gnus-registry-user-format-function-M', 'gnus-secondary-servers',
'gnus-subscribe-newsgroup-hooks', 'gud-inhibit-global-bindings',
'hangul-input-method-inactivate', 'hfy-post-html-hooks',
'image-extension-data', 'image-library-alist',
'inactivate-current-input-method-function', 'inactivate-input-method',
'inhibit-first-line-modes-regexps',
'inhibit-first-line-modes-suffixes', 'input-method-inactivate-hook',
'intdos', 'javascript-generic-mode', 'javascript-generic-mode-hook',
'latex-string-prefix-p', 'macro-declaration-function' (function),
'macro-declaration-function' (variable), 'mail-complete',
'mail-complete-function', 'mail-mailer-swallows-blank-line',
'mail-sent-via', 'make-register', 'makefile-complete',
'menu-bar-kill-ring-save', 'meta-complete-symbol', 'meta-mode-map',
'mh-kill-folder-suppress-prompt-hooks',
'minibuffer-completing-symbol',
'minibuffer-local-filename-must-match-map', 'mode25', 'mode4350',
'mpc-string-prefix-p', 'msb-after-load-hooks',
'nndiary-request-accept-article-hooks',
'nndiary-request-create-group-hooks',
'nndiary-request-update-info-hooks', 'nnimap-split-rule',
'nntp-authinfo-file', 'ns-alternatives-map',
'ns-store-cut-buffer-internal', 'package-menu-view-commentary',
'pascal-last-completions', 'pascal-show-completions',
'pascal-toggle-completions', 'pcomplete-arg-quote-list',
'pcomplete-quote-argument', 'prolog-char-quote-workaround',
'python-buffer', 'python-guess-indent', 'python-indent',
'python-info-ppss-comment-or-string-p', 'python-info-ppss-context',
'python-info-ppss-context-type', 'python-preoutput-result',
'python-proc', 'python-send-receive', 'python-send-string',
'python-use-skeletons', 'quail-inactivate', 'quail-inactivate-hook',
'query-replace-interactive', 'rcirc-activity-hooks',
'rcirc-print-hooks', 'rcirc-receive-message-hooks',
'rcirc-sentinel-hooks', 'read-filename-at-point', 'redraw-modeline',
'reftex-index-map', 'reftex-index-phrases-map',
'reftex-select-bib-map', 'reftex-select-label-map', 'reftex-toc-map',
'register-name-alist', 'register-value', 'report-emacs-bug-info',
'report-emacs-bug-pretest-address',
'rmail-default-dont-reply-to-names', 'rmail-dont-reply-to',
'rmail-dont-reply-to-names', 'robin-inactivate',
'robin-inactivate-hook', 'rst-block-face', 'rst-comment-face',
'rst-definition-face', 'rst-directive-face', 'rst-emphasis1-face',
'rst-emphasis2-face', 'rst-external-face', 'rst-literal-face',
'rst-reference-face', 'semantic-change-hooks',
'semantic-edits-delete-change-hooks',
'semantic-edits-new-change-hooks',
'semantic-edits-reparse-change-hooks', 'semantic-grammar-map',
'semantic-grammar-syntax-table', 'semantic-lex-reset-hooks',
'semanticdb-elisp-sym-function-arglist',
'semanticdb-save-database-hooks', 'set-face-underline-p',
'set-register-value', 'sh-maybe-here-document', 'speedbar-key-map',
'speedbar-syntax-table', 'starttls-any-program-available',
'strokes-modeline-string', 'strokes-report-bug',
'term-default-bg-color', 'term-default-fg-color',
'tex-string-prefix-p', 'timeclock-modeline-display',
'timeclock-modeline-display', 'timeclock-update-modeline',
'toggle-emacs-lock', 'tooltip-use-echo-area', 'turn-on-cwarn-mode',
'turn-on-iimage-mode', 'ucs-input-inactivate', 'ucs-insert',
'url-recreate-url-attributes', 'user-variable-p',
'vc-string-prefix-p', 'vc-toggle-read-only', 'view-return-to-alist',
'view-return-to-alist-update', 'w32-default-color-map' (function),
'which-func-mode' (function), 'window-system-version',
'winner-mode-leave-hook', 'x-cut-buffer-or-selection-value'.</code></pre><pre><code>Some functions and variables obsolete since Emacs 23 have been removed:
'find-emacs-lisp-shadows', 'newsticker-cache-filename',
'process-filter-multibyte-p', 'redisplay-end-trigger-functions',
'set-process-filter-multibyte', 'set-window-redisplay-end-trigger',
'unify-8859-on-decoding-mode', 'unify-8859-on-encoding-mode',
'vc-arch-command', 'window-redisplay-end-trigger', 'x-selection'.</code></pre><pre><code>Some functions and variables obsolete since Emacs 21 or 22 have been removed:
'c-toggle-auto-state', 'find-file-not-found-hooks',
'ls-lisp-dired-ignore-case', 'query-replace-regexp-eval'.</code></pre><pre><code>New generic function 'function-documentation'.
It can dynamically generate a raw docstring depending on the type of a
function.  Used mainly for docstrings of OClosures.</code></pre><pre><code>Base64 encoding no longer tolerates latin-1 input.
The functions 'base64-encode-string', 'base64url-encode-string',
'base64-encode-region' and 'base64url-encode-region' no longer accept
characters in the range U+0080..U+00FF as substitutes for single bytes
in the range 128..255, but signal an error for all multibyte characters.
The input must be unibyte encoded text.</code></pre><pre><code>The 'clone-indirect-buffer-hook' is now run by 'make-indirect-buffer'.
It was previously only run by 'clone-indirect-buffer' and
'clone-indirect-buffer-other-window'.  Since 'make-indirect-buffer' is
called by both of these, the hook is now run by all 3 of these
functions.</code></pre><pre><code>'?\' at the end of a line now signals an error.
Previously, it produced a nonsense value, -1, that was never intended.</code></pre><pre><code>Some libraries obsolete since Emacs 24.1 and 24.3 have been removed:
abbrevlist.el, assoc.el, complete.el, cust-print.el,
erc-hecomplete.el, mailpost.el, mouse-sel.el, old-emacs-lock.el,
patcomp.el, pc-mode.el, pc-select.el, s-region.el, and sregex.el.</code></pre><pre><code>Many seldom-used generalized variables have been made obsolete.
Emacs has a number of rather obscure generalized variables defined,
that, for instance, allowed you to say things like:

    (setf (point-min) 4)

These never caught on and have been made obsolete.  The form above,
for instance, is the same as saying

    (narrow-to-region 4 (point-max))

The following generalized variables have been made obsolete:
'buffer-file-name', 'buffer-local-value', 'buffer-modified-p',
'buffer-name', 'buffer-string', 'buffer-substring', 'current-buffer',
'current-column', 'current-global-map', 'current-input-mode',
'current-local-map', 'current-window-configuration',
'default-file-modes', 'documentation-property', 'eq', 'frame-height',
'frame-width', 'frame-visible-p', 'global-key-binding',
'local-key-binding', 'mark', 'mark-marker', 'marker-position',
'mouse-position', 'point', 'point-marker', 'point-max', 'point-min',
'read-mouse-position', 'screen-height', 'screen-width',
'selected-frame', 'selected-screen', 'selected-window',
'standard-case-table', 'syntax-table', 'visited-file-modtime',
'window-height', 'window-width', and 'x-get-secondary-selection'.</code></pre><pre><code>The 'dotimes' loop variable can no longer be manipulated in the loop body.
Previously, the 'dotimes' loop counter could be modified inside the
loop body, but only in code using dynamic binding.  Now the behavior
is the same as when using lexical binding: changes to the loop
variable have no effect on subsequent iterations.  That is,

    (dotimes (i 10)
      (print i)
      (setq i (+ i 6)))

now always prints the numbers 0 .. 9.

</code></pre><h3 id="lisp-changes-in-emacs-29.1">Lisp Changes in Emacs 29.1</h3><pre><code>Interpreted closures are "safe for space".
As was already the case for byte-compiled closures, instead of capturing
the whole current lexical environment, interpreted closures now only
capture the part of the environment that they need.
The previous behavior could occasionally lead to memory leaks or
to problems where a printed closure would not be 'read'able because
of an un'read'able value in an unrelated lexical variable.</code></pre><pre><code>New accessor function 'file-attribute-file-identifier'.
It returns the list of the inode number and device identifier
retrieved by 'file-attributes'.  This value can be used to identify a
file uniquely.  The device identifier can be a single number or (for
remote files) a cons of 2 numbers.</code></pre><pre><code>New macro 'while-let'.
This is like 'when-let', but repeats until a binding form is nil.</code></pre><p>Useful addition. I’m liking all the <code>xxx-let</code> bindings they’ve been adding over the years. It cuts down on chaff and it retains readability.</p><pre><code>New function 'make-obsolete-generalized-variable'.
This can be used to mark setters used by 'setf' as obsolete, and the
byte-compiler will then warn about using them.</code></pre><pre><code>New functions 'pos-eol' and 'pos-bol'.
These are like 'line-end-position' and 'line-beginning-position'
(respectively), but ignore fields (and are more efficient).</code></pre><pre><code>New function 'compiled-function-p'.
This returns non-nil if its argument is either a built-in, or a
byte-compiled, or a natively-compiled function object, or a function
loaded from a dynamic module.</code></pre><pre><code>'deactivate-mark' can have new value 'dont-save'.
This value means that Emacs should deactivate the mark as usual, but
without setting the primary selection, if 'select-active-regions' is
enabled.</code></pre><pre><code>New 'declare' form 'interactive-args'.
This can be used to specify what forms to put into 'command-history'
when executing commands interactively.</code></pre><pre><code>The FORM argument of 'time-convert' is mandatory.
'time-convert' can still be called without it, as before, but the
compiler now emits a warning about this deprecated usage.</code></pre><pre><code>Emacs now supports user-customizable and themable icons.
These can be used for buttons in buffers and the like.  See the
"(elisp) Icons" and "(emacs) Icons" nodes in the manuals for details.</code></pre><pre><code>New arguments MESSAGE and TIMEOUT of 'set-transient-map'.
MESSAGE specifies a message to display after activating the transient
map, including a special formatting spec to list available keys.
TIMEOUT is the idle time after which to deactivate the transient map.
The default timeout value can be defined by the new variable
'set-transient-map-timeout'.</code></pre><pre><code>New forms 'with-restriction' and 'without-restriction'.
These forms can be used as enhanced alternatives to the
'save-restriction' form combined with, respectively,
'narrow-to-region' and 'widen'.  They also accept an optional label
argument, with which labeled narrowings can be created and lifted.
See the "(elisp) Narrowing" node for details.</code></pre><h3 id="connection-local-variables">Connection Local Variables</h3><pre><code>Some connection-local variables are now user options.
The variables 'connection-local-profile-alist' and
'connection-local-criteria-alist' are now user options, in order to
make it more convenient to inspect and modify them.</code></pre><pre><code>New function 'connection-local-update-profile-variables'.
This function allows to modify the settings of an existing
connection-local profile.</code></pre><pre><code>New macro 'with-connection-local-application-variables'.
This macro works like 'with-connection-local-variables', but it allows
using another application instead of 'tramp'.  This is useful when
running code in a buffer where Tramp has already set some
connection-local variables.</code></pre><pre><code>New macro 'setq-connection-local'.
This allows dynamically setting variable values for a particular
connection within the body of 'with-connection-local-{application-}variables'.
See the "(elisp) Connection Local Variables" node in the Lisp
Reference manual for more information.</code></pre><pre><code>'plist-get', 'plist-put' and 'plist-member' are no longer limited to 'eq'.
These function now take an optional comparison PREDICATE argument.</code></pre><pre><code>'read-multiple-choice' can now use long-form answers.</code></pre><pre><code>'M-s c' in 'read-regexp' now toggles case folding.</code></pre><pre><code>'completing-read' now allows a function as its REQUIRE-MATCH argument.
This function is called to see whether what the user has typed is a
match.  This is also available from functions that call
'completing-read', like 'read-file-name'.</code></pre><pre><code>'posn-col-row' can now give position data based on windows.
Previously, it reported data only based on the frame.</code></pre><pre><code>'file-expand-wildcards' can now also take a regexp as PATTERN argument.</code></pre><pre><code>vc-mtn (the VC backend for Monotone) has been made obsolete.</code></pre><pre><code>'gui-set-selection' can specify different values for different data types.
If DATA is a string, then its text properties are searched for values
for each specific data type while the selection is being converted.</code></pre><pre><code>New eldoc function 'elisp-eldoc-var-docstring-with-value'.
This function includes the current value of the variable in eldoc display
and can be used as a more detailed alternative to 'elisp-eldoc-var-docstring'.</code></pre><pre><code>'save-some-buffers' can now be extended to save other things.
Traditionally, 'save-some-buffers' saved buffers, and also saved
abbrevs.  This has been generalized via the
'save-some-buffers-functions' variable, and packages can now register
things to be saved.</code></pre><pre><code>New function 'string-equal-ignore-case'.
This compares strings ignoring case differences.</code></pre><pre><code>'symbol-file' can now report natively-compiled ".eln" files.
If Emacs was built with native-compilation enabled, Lisp programs can
now call 'symbol-file' with the new optional 3rd argument non-nil to
request the name of the ".eln" file which defined a given symbol.</code></pre><pre><code>New macro 'with-memoization' provides a very primitive form of memoization.</code></pre><pre><code>'max-char' can now report the maximum codepoint according to Unicode.
When called with a new optional argument UNICODE non-nil, 'max-char'
will now report the maximum valid codepoint defined by the Unicode
Standard.</code></pre><h3 id="seq">Seq</h3><p>Seq is a library that adds a range of functions that operate on all manner of sequences. It’s filled a gaping void that the likes of <code>dash.el</code> also tries to fill.</p><pre><code>New function 'seq-split'.
This returns a list of sub-sequences of the specified sequence.</code></pre><pre><code>New function 'seq-remove-at-position'.
This function returns a copy of the specified sequence with the
element at a given (zero-based) index removed.</code></pre><pre><code>New function 'seq-positions'.
This returns a list of the (zero-based) indices of elements matching a
given predicate in the specified sequence.</code></pre><pre><code>New function 'seq-keep'.
This is like 'seq-map', but removes all nil results from the returned
list.</code></pre><h3 id="themes">Themes</h3><p>Color themes, that is.</p><pre><code>New hooks 'enable-theme-functions' and 'disable-theme-functions'.
These are run after enabling and disabling a theme, respectively.</code></pre><pre><code>Themes can now be made obsolete.
Using 'make-obsolete' on a theme is now supported.  This will make
'load-theme' issue a warning when loading the theme.</code></pre><pre><code>New hook 'display-monitors-changed-functions'.
It is called whenever the configuration of different monitors on a
display changes.</code></pre><pre><code>'prin1' and 'prin1-to-string' now take an optional OVERRIDES argument.
This argument can be used to override values of print-related settings.</code></pre><pre><code>New minor mode 'header-line-indent-mode'.
This is meant to be used by Lisp programs that show a header line
which should be kept aligned with the buffer contents when the user
switches 'display-line-numbers-mode' on or off, and when the width of
line-number display changes.  See the "(elisp) Header Lines" node in
the Emacs Lisp Reference manual for more information.</code></pre><pre><code>New global minor mode 'lost-selection-mode'.
This global minor mode makes Emacs deactivate the mark in all buffers
when the primary selection is obtained by another program.</code></pre><pre><code>On X, Emacs will try to preserve selection ownership when a frame is deleted.
This means that if you make Emacs the owner of a selection, such as by
selecting some text into the clipboard or primary selection, and then
delete the current frame, you will still be able to insert the
contents of that selection into other programs as long as another
frame is open on the same display.  This behavior can be disabled by
setting the user option 'x-auto-preserve-selections' to nil.</code></pre><pre><code>New predicate 'char-uppercase-p'.
This returns non-nil if its argument its an uppercase character.</code></pre><h3 id="byte-compilation">Byte Compilation</h3><pre><code>Byte compilation will now warn about some quoting mistakes in docstrings.
When writing code snippets that contains the "'" character (APOSTROPHE),
that quote character has to be escaped to avoid Emacs displaying it as
"’" (LEFT SINGLE QUOTATION MARK), which would make code examples like

    (setq foo '(1 2 3))

invalid.  Emacs will now warn during byte compilation if it sees
something like that, and also warn about when using RIGHT/LEFT SINGLE
QUOTATION MARK directly.  In both these cases, if these characters
should really be present in the docstring, they should be quoted with
"\=".</code></pre><pre><code>Byte compilation will now warn about some malformed 'defcustom' types.
It is very common to write 'defcustom' types on the form:

    :type '(choice (const :tag "foo" 'bar))

I.e., double-quoting the 'bar', which is almost never the correct
value.  The byte compiler will now issue a warning if it encounters
these forms.</code></pre><pre><code>'restore-buffer-modified-p' can now alter buffer auto-save state.
With a FLAG value of 'autosaved', it will mark the buffer as having
been auto-saved since the time of last modification.</code></pre><pre><code>New minor mode 'isearch-fold-quotes-mode'.
This sets up 'search-default-mode' so that quote characters are
char-folded into each other.  It is used, by default, in "*Help*" and
"*info*" buffers.</code></pre><p>We talked about this before.</p><pre><code>New macro 'buffer-local-set-state'.
This is a helper macro to be used by minor modes that wish to restore
buffer-local variables back to their original states when the mode is
switched off.</code></pre><p>This should help minor mode authors that temporarily alter values restore them to their correct, former values without keeping a copy of the values around.</p><pre><code>New macro 'with-buffer-unmodified-if-unchanged'.
If the buffer is marked as unmodified, and code does modifications
that, in total, means that the buffer is identical to the buffer
before, mark the buffer as unmodified again.</code></pre><pre><code>New function 'malloc-trim'.
This function allows returning unused memory back to the operating
system, and is mainly meant as a debugging tool.  It is currently
available only when Emacs was built with glibc as the C library.</code></pre><pre><code>'x-show-tip' no longer hard-codes a timeout default.
The new variable 'x-show-tooltip-timeout' allows the user to alter
this for packages that don't use 'tooltip-show', but instead call the
lower level function directly.</code></pre><pre><code>New function 'current-cpu-time'.
It gives access to the CPU time used by the Emacs process, for
example for benchmarking purposes.</code></pre><pre><code>New function 'string-edit'.
This is meant to be used when the user has to edit a (potentially)
long string.  It pops up a new buffer where you can edit the string,
and the provided callback is called when the user types 'C-c C-c'.</code></pre><p>Great addition. There’s a wide range of cases in Emacs where that would come in handy.</p><pre><code>New function 'read-string-from-buffer'.
This is a modal version of 'string-edit', and can be used as an
alternative to 'read-string'.</code></pre><pre><code>The return value of 'clear-message-function' is not ignored anymore.
If the function returns 'dont-clear-message', then the message is not
cleared, with the assumption that the function cleared it itself.</code></pre><pre><code>The local variables section now supports defining fallback modes.
This was previously only available when using a property line (i.e.,
putting the modes on the first line of a file).</code></pre><pre><code>New function 'flush-standard-output'.
This enables display of lines that don't end in a newline from
batch-based Emacs scripts.</code></pre><pre><code>New convenience function 'buttonize-region'.
This works like 'buttonize', but for a region instead of a string.</code></pre><pre><code>'macroexp-let2*' can omit TEST argument and use single-var bindings.</code></pre><pre><code>New macro-writing macros, 'cl-with-gensyms' and 'cl-once-only'.
See the "(cl) Macro-Writing Macros" manual section for descriptions.</code></pre><pre><code>New variable 'last-event-device' and new function 'device-class'.
On X Windows, 'last-event-device' specifies the input extension device
from which the last input event originated, and 'device-class' can be
used to determine the type of an input device.</code></pre><pre><code>Variable 'track-mouse' can have a new value 'drag-source'.
This means the same as 'dropping', but modifies the mouse position
list in reported motion events if there is no frame underneath the
mouse pointer.</code></pre><pre><code>New functions for dragging items from Emacs to other programs.
The new functions 'x-begin-drag', 'dnd-begin-file-drag',
'dnd-begin-drag-files', and 'dnd-direct-save' allow dragging contents
(such as files and text) from Emacs to other programs.</code></pre><pre><code>New function 'ietf-drums-parse-date-string'.
This function parses RFC5322 (and RFC822) date strings, and should be
used instead of 'parse-time-string' when parsing data that's standards
compliant.</code></pre><pre><code>New macro 'setopt'.
This is like 'setq', but is meant to be used for user options instead
of plain variables, and uses 'custom-set'/'set-default' to set them.</code></pre><p>Intended as a drop-in replacement for customizable options, as they can have edge triggers that run when the value changes. That is something <code>setq</code> cannot do, which can in rare cases lead to bugs.</p><pre><code>New utility predicate 'mode-line-window-selected-p'.
This is meant to be used from ':eval' mode line constructs to create
different mode line looks for selected and unselected windows.</code></pre><pre><code>New variable 'messages-buffer-name'.
This variable (defaulting to "*Messages*") allows packages to override
where messages are logged.</code></pre><pre><code>New function 'readablep'.
This function says whether an object can be written out and then
read back by the Emacs Lisp reader.</code></pre><pre><code>New variable 'print-unreadable-function'.
This variable allows changing how Emacs prints unreadable objects.</code></pre><pre><code>The user option 'polling-period' now accepts floating point values.
This means Emacs can now poll for input during Lisp execution more
frequently than once in a second.</code></pre><pre><code>New function 'bidi-string-strip-control-characters'.
This utility function is meant for displaying strings when it is
essential that there's no bidirectional context.  It removes all the
bidirectional formatting control characters (such as RLM, LRO, PDF,
etc.) from its argument string.  The characters it removes are listed
in the value of 'bidi-control-characters'.</code></pre><pre><code>The Gnus range functions have been moved to a new library, range.el.
All the old names have been made obsolete.</code></pre><pre><code>New function 'function-alias-p'.
This predicate says whether an object is a function alias, and if it
is, the alias chain is returned.</code></pre><pre><code>New variable 'lisp-directory' holds the directory of Emacs's own Lisp files.</code></pre><pre><code>New facility for handling session state: 'multisession-value'.
This can be used as a convenient way to store (simple) application
state, and the command 'list-multisession-values' allows users to list
(and edit) this data.</code></pre><pre><code>New function 'get-display-property'.
This is like 'get-text-property', but works on the 'display' text
property.</code></pre><pre><code>New function 'add-display-text-property'.
This is like 'put-text-property', but works on the 'display' text
property.</code></pre><pre><code>New 'min-width' 'display' property.
This allows setting a minimum display width for a region of text.</code></pre><pre><code>New 'cursor-face' text property.
This uses 'cursor-face' instead of the default face when cursor is on or
near the character and 'cursor-face-highlight-mode' is enabled.  The
user option 'cursor-face-highlight-nonselected-window' is similar to
'highlight-nonselected-windows', but for this property.</code></pre><pre><code>New event type 'touch-end'.
This event is sent whenever the user's finger moves off the mouse
wheel on some mice, or when the user's finger moves off the touchpad.</code></pre><pre><code>New event type 'pinch'.
This event is sent when a user performs a pinch gesture on a touchpad,
which is comprised of placing two fingers on the touchpad and moving
them towards or away from each other.</code></pre><pre><code>New hook 'x-pre-popup-menu-hook'.
This hook is run before 'x-popup-menu' is about to display a
deck-of-cards menu on screen.</code></pre><pre><code>New hook 'post-select-region-hook'.
This hook is run immediately after 'select-active-regions'.  It causes
the region to be set as the primary selection.</code></pre><pre><code>New function 'buffer-match-p'.
Check if a buffer satisfies some condition.  Some examples for
conditions can be regular expressions that match a buffer name, a
cons-cell like '(major-mode . shell-mode)' that matches any buffer
where 'major-mode' is 'shell-mode' or a combination with a condition
like '(and "\\`\\*.+\\*\\'" (major-mode . special-mode))'.</code></pre><pre><code>New function 'match-buffers'.
It uses 'buffer-match-p' to gather a list of buffers that match a
condition.</code></pre><pre><code>New optional arguments TEXT-FACE and DEFAULT-FACE for 'tooltip-show'.
They allow changing the faces used for the tooltip text and frame
colors of the resulting tooltip frame from the default 'tooltip' face.</code></pre><h3 id="text-security-and-suspiciousness">Text Security and Suspiciousness</h3><pre><code>New library textsec.el.
This library contains a number of checks for whether a string is
"suspicious".  This usually means that the string contains characters
that have glyphs that can be confused with other, more commonly used
glyphs, or contains bidirectional (or other) formatting characters
that may be used to confuse a user.</code></pre><p>This is back to what I was saying earlier about <em>confusables</em>.</p><pre><code>New user option 'textsec-check'.
If non-nil (which is the default), Emacs packages that are vulnerable
to attackers trying to confuse the users will use the textsec library
to mark suspicious text.  For instance shr/eww will mark suspicious
URLs and links, Gnus will mark suspicious From addresses, and
Message mode will query the user if the user is sending mail to a
suspicious address.  If this variable is nil, these checks are
disabled.</code></pre><pre><code>New function 'textsec-suspicious-p'.
This is the main function Emacs applications should be using to check
whether a string is suspicious.  It heeds the 'textsec-check' user
option.</code></pre><h3 id="keymaps-and-key-definitions">Keymaps and Key Definitions</h3><pre><code>'where-is-internal' can now filter events marked as non key events.
If a command maps to a key binding like '[some-event]', and 'some-event'
has a symbol plist containing a non-nil 'non-key-event' property, then
that binding is ignored by 'where-is-internal'.</code></pre><pre><code>New functions for defining and manipulating keystrokes.
These all take the syntax defined by 'key-valid-p', which is basically
the same syntax as the one accepted by the 'kbd' macro.  None of the
older functions have been deprecated or altered, but they are now
de-emphasized in the documentation, and we encourage Lisp programs to
switch to these new functions.

Use 'keymap-set' instead of 'define-key'.
Use 'keymap-global-set' instead of 'global-set-key'.
Use 'keymap-local-set' instead of 'local-set-key'.
Use 'keymap-global-unset' instead of 'global-unset-key'.
Use 'keymap-local-unset' instead of 'local-unset-key'.
Use 'keymap-substitute' instead of 'substitute-key-definition'.
Use 'keymap-set-after' instead of 'define-key-after'.
Use 'keymap-lookup' instead of 'lookup-key' and 'key-binding'.
Use 'keymap-local-lookup' instead of 'local-key-binding'.
Use 'keymap-global-lookup' instead of 'global-key-binding'.</code></pre><p>I’m glad they’re thinking about unifying the rather inconsistent key binding system in Emacs, but we’re decades away from ever obsoleting the existing ones. They’re just too ingrained (and they work fine.)</p><pre><code>'define-key' now takes an optional REMOVE argument.
If non-nil, remove the definition from the keymap.  This is subtly
different from setting a definition to nil: when the keymap has a
parent such a definition will shadow the parent's definition.</code></pre><p>Weirdly, removing (not marking <code>nil</code> or <code>ignore</code>) was quite hard.</p><pre><code>'read-multiple-choice' now takes an optional SHOW-HELP argument.
If non-nil, show the help buffer immediately, before any user input.</code></pre><pre><code>New function 'key-valid-p'.
The 'kbd' function is quite permissive, and will try to return
something usable even if the syntax of the argument isn't completely
correct.  The 'key-valid-p' predicate does a stricter check of the
syntax.</code></pre><pre><code>New function 'key-parse'.
This is like 'kbd', but only returns vectors instead of a mix of
vectors and strings.</code></pre><pre><code>New ':type' for 'defcustom' for keys.
The new 'key' type can be used for options that should be a valid key
according to 'key-valid-p'.  The type 'key-sequence' is now obsolete.</code></pre><pre><code>New function 'define-keymap'.
This function allows defining a number of keystrokes with one form.</code></pre><pre><code>New macro 'defvar-keymap'.
This macro allows defining keymap variables more conveniently.</code></pre><pre><code>'defvar-keymap' can specify 'repeat-mode' behavior for the keymap.
Use ':repeat t' to have all bindings be repeatable or for more
advanced usage:

    :repeat (:enter (commands ...) :exit (commands ...))</code></pre><pre><code>'kbd' can now be used in built-in, preloaded libraries.
It no longer depends on edmacro.el and cl-lib.el.</code></pre><pre><code>New substitution in docstrings and 'substitute-command-keys'.
Use \\`KEYSEQ' to insert a literal key sequence "KEYSEQ" (for example
\\`C-k') in a docstring or when calling 'substitute-command-keys',
which will use the same face as a command substitution.  This should
be used only when a key sequence has no corresponding command, for
example when it is read directly with 'read-key-sequence'.  It must be
a valid key sequence according to 'key-valid-p'.</code></pre><pre><code>'lookup-key' is more permissive when searching for extended menu items.
In Emacs 28.1, the behavior of 'lookup-key' was changed: when looking
for a menu item '[menu-bar Foo-Bar]', first try to find an exact
match, then look for the lowercased '[menu-bar foo-bar]'.

This has been extended, so that when looking for a menu item with a
symbol containing spaces, as in '[menu-bar Foo\ Bar]', first look for
an exact match, then the lowercased '[menu-bar foo\ bar]' and finally
'[menu-bar foo-bar]'.  This further improves backwards-compatibility
when converting menus to use 'easy-menu-define'.</code></pre><pre><code>New function 'file-name-split'.
This returns a list of all the components of a file name.</code></pre><pre><code>New function 'file-name-parent-directory'.
This returns the parent directory of a file name.</code></pre><pre><code>New macro 'with-undo-amalgamate'.
It records a particular sequence of operations as a single undo step.</code></pre><pre><code>New command 'yank-media'.
This command supports yanking non-plain-text media like images and
HTML from other applications into Emacs.  It is only supported in
modes that have registered support for it, and only on capable
platforms.</code></pre><pre><code>New command 'yank-media-types'.
This command lets you examine all data in the current selection and
the clipboard, and insert it into the buffer.</code></pre><pre><code>New variable 'yank-transform-functions'.
This variable allows the user to alter the string to be inserted.</code></pre><pre><code>New command 'yank-in-context'.
This command tries to preserve string/comment syntax when yanking.</code></pre><pre><code>New function 'minibuffer-lazy-highlight-setup'.
This function allows setting up the minibuffer so that lazy
highlighting of its content is applied in the original window.</code></pre><pre><code>New text property 'inhibit-isearch'.
If set, 'isearch' will skip these areas, which can be useful (for
instance) when covering huge amounts of data (that has no meaningful
searchable data, like image data) with a 'display' text property.</code></pre><pre><code>'insert-image' now takes an INHIBIT-ISEARCH optional argument.
It marks the image with the 'inhibit-isearch' text property, which
inhibits 'isearch' matching the STRING argument.</code></pre><pre><code>New variable 'replace-regexp-function'.
Function to call to convert the entered FROM string to an Emacs
regexp in 'query-replace' and similar commands.  It can be used to
implement a different regexp syntax for search/replace.</code></pre><pre><code>'E' in 'query-replace' now edits the replacement with exact case.
Previously, this command did the same as 'e'.</code></pre><pre><code>New variables to customize defaults of FROM for 'query-replace*' commands.
The new variable 'query-replace-read-from-default' can be set to a
function that returns the default value of FROM when 'query-replace'
prompts for a string to be replaced.  An example of such a function is
'find-tag-default'.

The new variable 'query-replace-read-from-regexp-default' can be set
to a function (such as 'find-tag-default-as-regexp') that returns the
default value of FROM when 'query-replace-regexp' prompts for a regexp
whose matches are to be replaced.  If these variables are nil (which
is the default), 'query-replace' and 'query-replace-regexp' take the
default value from the previous FROM-TO pair.</code></pre><h3 id="lisp-pretty-printer-pp">Lisp pretty-printer (‘pp’)</h3><pre><code>New function 'pp-emacs-lisp-code'.
'pp' formats general Lisp sexps.  This function does much the same,
but applies formatting rules appropriate for Emacs Lisp code.  Note
that this could currently be quite slow, and is thus appropriate only
for relatively small code fragments.</code></pre><pre><code>New user option 'pp-use-max-width'.
If non-nil, 'pp' and all 'pp-*' commands that format the results, will
attempt to limit the line length when formatting long lists and
vectors.  This uses 'pp-emacs-lisp-code', and thus could be slow for
large lists.</code></pre><pre><code>New function 'file-has-changed-p'.
This convenience function is useful when writing code that parses
files at run-time, and allows Lisp programs to re-parse files only
when they have changed.</code></pre><pre><code>'abbreviate-file-name' now respects magic file name handlers.</code></pre><pre><code>New function 'font-has-char-p'.
This can be used to check whether a specific font has a glyph for a
character.</code></pre><pre><code>'window-text-pixel-size' now accepts a new argument IGNORE-LINE-AT-END.
This controls whether or not the last screen line of the text being
measured will be counted for the purpose of calculating the text
dimensions.</code></pre><pre><code>'window-text-pixel-size' understands a new meaning of FROM.
Specifying a cons as the FROM argument allows to start measuring text
from a specified amount of pixels above or below a position.</code></pre><pre><code>'window-body-width' and 'window-body-height' can use remapped faces.
Specifying 'remap' as the PIXELWISE argument now checks if the default
face was remapped, and if so, uses the remapped face to determine the
character width/height.</code></pre><pre><code>'set-window-vscroll' now accepts a new argument PRESERVE-VSCROLL-P.
This means the vscroll will not be reset when set on a window that is
"frozen" due to a mini-window being resized.</code></pre><h3 id="xdg-support">XDG Support</h3><pre><code>New function 'xdg-state-home'.
It returns the new 'XDG_STATE_HOME' environment variable.  It should
point to a file name that "contains state data that should persist
between (application) restarts, but that is not important or portable
enough to the user that it should be stored in $XDG_DATA_HOME".
(This variable was introduced in the XDG Base Directory Specification
version 0.8 released on May 8, 2021.)</code></pre><p>Let’s hope this is the beginning of well-behaved elisp code (incl. core Emacs!) that’ll put all their junk files there instead of in my <code>.emacs.d</code> directory.</p><pre><code>New function 'xdg-current-desktop'.
It returns a list of strings, corresponding to the colon-separated
list of names in the 'XDG_CURRENT_DESKTOP' environment variable, which
identify the current desktop environment.
(This variable was introduced in XDG Desktop Entry Specification
version 1.2.)</code></pre><pre><code>New function 'xdg-session-type'.
It returns the 'XDG_SESSION_TYPE' environment variable.  (This is not
part of any official standard; see the man page pam_systemd(8) for
more information.)</code></pre><pre><code>New macro 'with-delayed-message'.
This macro is like 'progn', but will output the specified message if
the body takes longer to execute than the specified timeout.</code></pre><pre><code>New function 'funcall-with-delayed-message'.
This function is like 'funcall', but will output the specified message
if the function takes longer to execute than the specified timeout.</code></pre><h3 id="locale">Locale</h3><pre><code>New variable 'current-locale-environment'.
This holds the value of the previous call to 'set-locale-environment'.</code></pre><pre><code>New macro 'with-locale-environment'.
This macro can be used to change the locale temporarily while
executing code.</code></pre><h3 id="table">Table</h3><p>Table creates editable ASCII tables. I find it incredibly buggy.</p><pre><code>New user option 'table-latex-environment'.
This allows switching between "table" and "tabular".</code></pre><h3 id="tabulated-list-mode">Tabulated List Mode</h3><pre><code>A column can now be set to an image descriptor.
The 'tabulated-list-entries' variable now supports using an image
descriptor, which means to insert an image in that column instead of
text.  See the documentation string of that variable for details.</code></pre><pre><code>':keys' in 'menu-item' can now be a function.
If so, it is called whenever the menu is computed, and can be used to
calculate the keys dynamically.</code></pre><pre><code>New major mode 'clean-mode'.
This is a new major mode meant for debugging.  It kills absolutely all
local variables and removes overlays and text properties.</code></pre><pre><code>'kill-all-local-variables' can now kill all local variables.
If given the new optional KILL-PERMANENT argument, it also kills
permanent local variables.</code></pre><pre><code>Third 'mapconcat' argument SEPARATOR is now optional.
An explicit nil always meant the empty string, now it can be left out.</code></pre><pre><code>New function 'image-at-point-p'.
This function returns t if point is on a valid image, and nil
otherwise.</code></pre><pre><code>New function 'buffer-text-pixel-size'.
This is similar to 'window-text-pixel-size', but can be used when the
buffer isn't displayed.</code></pre><pre><code>New function 'string-pixel-width'.
This returns the width of a string in pixels.  This can be useful when
dealing with variable pitch fonts and glyphs that have widths that
aren't integer multiples of the default font.</code></pre><pre><code>New function 'string-glyph-split'.
This function splits a string into a list of strings representing
separate glyphs.  This takes into account combining characters and
grapheme clusters, by treating each sequence of characters composed on
display as a single unit.</code></pre><h3 id="xwidget-1">Xwidget</h3><pre><code>The function 'make-xwidget' now accepts an optional RELATED argument.
This argument is used as another widget for the newly created WebKit
widget to share settings and subprocesses with.  It must be another
WebKit widget.</code></pre><pre><code>New function 'xwidget-perform-lispy-event'.
This function allows you to send events to xwidgets.  Usually, some
equivalent of the event will be sent, but there is no guarantee of
what the widget will actually receive.

On GTK+, only key and function key events are implemented.</code></pre><pre><code>New function 'xwidget-webkit-load-html'.
This function is used to load HTML text into WebKit xwidgets
directly, in contrast to creating a temporary file to hold the
markup, and passing the URI of the file as an argument to
'xwidget-webkit-goto-uri'.</code></pre><pre><code>New functions for performing searches on WebKit xwidgets.
Some new functions, such as 'xwidget-webkit-search', have been added
for performing searches on WebKit xwidgets.</code></pre><pre><code>New function 'xwidget-webkit-back-forward-list'.
This function returns the history of page-loads in a WebKit xwidget.</code></pre><pre><code>New function 'xwidget-webkit-estimated-load-progress'.
This function returns the estimated progress of page loading in a
WebKit xwidget.</code></pre><pre><code>New function 'xwidget-webkit-stop-loading'.
This function terminates all data transfer during page loads in a
WebKit xwidget.</code></pre><pre><code>'load-changed' xwidget events are now more detailed.
In particular, they can now have different arguments based on the
state of the WebKit widget.  'load-finished' is sent when a load has
completed, 'load-started' when a load first starts, 'load-redirected'
after a redirect, and 'load-committed' when the WebKit widget first
commits to the load.</code></pre><pre><code>New event type 'xwidget-display-event'.
These events are sent whenever an xwidget requests that Emacs displays
another xwidget.  The only arguments to this event are the xwidget
that should be displayed, and the xwidget that asked to display it.</code></pre><pre><code>New function 'xwidget-webkit-set-cookie-storage-file'.
This function is used to control where and if an xwidget stores
cookies set by web pages on disk.</code></pre><pre><code>New variable 'help-buffer-under-preparation'.
This variable is bound to t during the preparation of a "*Help*" buffer.</code></pre><pre><code>Timestamps like '(1 . 1000)' now work without warnings being generated.
For example, '(time-add nil '(1 . 1000))' no longer warns that the
'(1 . 1000)' acts like '(1000 . 1000000)'.  This warning, which was a
temporary transition aid for Emacs 27, has served its purpose.</code></pre><pre><code>'encode-time' now also accepts a 6-element list with just time and date.
'(encode-time (list SECOND MINUTE HOUR DAY MONTH YEAR))' is now short for
'(encode-time (list SECOND MINUTE HOUR DAY MONTH YEAR nil -1 nil))'.</code></pre><pre><code>'date-to-time' now accepts arguments that lack month, day, or time.
The function now assumes the earliest possible values if its argument
lacks month, day, or time.  For example, (date-to-time "2021-12-04")
now assumes a time of "00:00" instead of signaling an error.</code></pre><pre><code>'format-seconds' now allows suppressing zero-value trailing elements.
The new "%x" non-printing control character will suppress zero-value
elements that appear after "%x".</code></pre><pre><code>New events for taking advantage of touchscreen devices.
The events 'touchscreen-begin', 'touchscreen-update', and
'touchscreen-end' have been added to take better advantage of
touch-capable display panels.</code></pre><pre><code>New error symbol 'permission-denied'.
This is a subcategory of 'file-error', and is signaled when some file
operation fails because the OS doesn't allow Emacs to access a file or
a directory.</code></pre><pre><code>Warning about "eager macro-expansion failure" is now an error.</code></pre><pre><code>Previously, the X "reverseVideo" value at startup was heeded for all frames.
This meant that if you had a "reverseVideo" resource on the initial
display, and then opened up a new frame on a display without any
explicit "reverseVideo" setting, it would get heeded there, too.  (This
included terminal frames.)  In Emacs 29, the "reverseVideo" X resource
is handled like all the other X resources, and set on a per-frame basis.</code></pre><pre><code>The ':underline' face attribute now accepts a new property.
The property ':position' now specifies the position of the underline
when used as part of a property list specification for the
':underline' attribute.</code></pre><pre><code>'defalias' records a more precise history of definitions.
This is recorded in the 'function-history' symbol property.</code></pre><pre><code>New hook 'save-place-after-find-file-hook'.
This is called at the end of 'save-place-find-file-hook'.</code></pre><pre><code>'indian-tml-base-table' no longer translates digits.
Use 'indian-tml-base-digits-table' if you want digits translation.</code></pre><pre><code>'indian-tml-itrans-v5-hash' no longer translates digits.
Use 'indian-tml-itrans-digits-v5-hash' if you want digits
translation.</code></pre><pre><code>'shell-quote-argument' has a new optional argument POSIX.
This is useful when quoting shell arguments for a remote shell
invocation.  Such shells are POSIX conformant by default.</code></pre><pre><code>'make-process' can set connection type independently for input and output.
When calling 'make-process', communication via pty can be enabled
selectively for just input or output by passing a cons cell for
':connection-type', e.g. '(pipe . pty)'.  When examining a process
later, you can determine whether a particular stream for a process
uses a pty by passing one of 'stdin', 'stdout', or 'stderr' as the
second argument to 'process-tty-name'.</code></pre><pre><code>'signal-process' now consults the list 'signal-process-functions'.
This is to determine which function has to be called in order to
deliver the signal.  This allows Tramp to send the signal to remote
asynchronous processes.  The hitherto existing implementation has been
moved to 'internal-default-signal-process'.</code></pre><pre><code>Some system information functions honor remote systems now.
'list-system-processes' returns remote process IDs.
'memory-info' returns memory information of remote systems.
'process-attributes' expects a remote process ID.
This happens only when the current buffer's 'default-directory' is
remote.  In order to preserve the old behavior, bind
'default-directory' to a local directory, like

    (let ((default-directory temporary-file-directory))
      (list-system-processes))</code></pre><pre><code>New functions 'take' and 'ntake'.
'(take N LIST)' returns the first N elements of LIST; 'ntake' does
the same but works by modifying LIST destructively.</code></pre><pre><code>'string-split' is now an alias for 'split-string'.</code></pre><pre><code>'format-spec' now accepts functions in the replacement.
The function is called only when used in the format string.  This is
useful to avoid side-effects such as prompting, when the value is not
actually being used for anything.</code></pre><pre><code>The variable 'max-specpdl-size' has been made obsolete.
Now 'max-lisp-eval-depth' alone is used for limiting Lisp recursion
and stack usage.  'max-specpdl-size' is still present as a plain
variable for compatibility but its limiting powers have been taken away.</code></pre><pre><code>New function 'external-completion-table'.
This function returns a completion table designed to ease
communication between Emacs's completion facilities and external tools
offering completion services, particularly tools whose full working
set is too big to transfer to Emacs every time a completion is
needed.  The table uses new 'external' completion style exclusively
and cannot work with regular styles such as 'basic' or 'flex'.</code></pre><pre><code>Magic file name handlers for 'make-directory-internal' are no longer needed.
Instead, Emacs uses the already-existing 'make-directory' handlers.</code></pre><pre><code>'(make-directory DIR t)' returns non-nil if DIR already exists.
This can let a caller know whether it created DIR.  Formerly,
'make-directory's return value was unspecified.

</code></pre><h3 id="changes-in-emacs-29.1-on-non-free-operating-systems">Changes in Emacs 29.1 on Non-Free Operating Systems</h3><h3 id="ms-windows">MS-Windows</h3><pre><code>Emacs now supports double-buffering on MS-Windows to reduce display flicker.
(This was supported on Free systems since Emacs 26.1.)

To disable double-buffering (e.g., if it causes display problems), set
the frame parameter 'inhibit-double-buffering' to a non-nil value.
You can do that either by adding

    '(inhibit-double-buffering . t)

to 'default-frame-alist', or by modifying the frame parameters of the
selected frame by evaluating

    (modify-frame-parameters nil '((inhibit-double-buffering . t)))</code></pre><pre><code>Emacs now supports system dark mode.
On Windows 10 (version 1809 and higher) and Windows 11, Emacs will now
follow the system's dark mode: GUI frames use the appropriate light or
dark title bar and scroll bars, based on the user's Windows-wide color
settings.</code></pre><pre><code>Emacs now uses native image APIs to display some image formats.
On Windows 2000 and later, Emacs now defaults to using the native
image APIs for displaying the BMP, GIF, JPEG, PNG, and TIFF images.
This means Emacs on MS-Windows needs no longer use external image
support libraries to display those images.  Other image types -- XPM,
SVG, and WEBP -- still need support libraries for Emacs to be able to
display them.

The use of native image APIs is controlled by the variable
'w32-use-native-image-API', whose value now defaults to t on systems
where those APIs are available.</code></pre><pre><code>Emacs now supports display of BMP images using native image APIs.
When 'w32-use-native-image-API' is non-nil, Emacs on MS-Windows now
has built-in support for displaying BMP images.</code></pre><pre><code>GUI Yes/No dialogs now include a "Cancel" button.
The "Cancel" button is in addition to "Yes" and "No", and is intended
to allow users to quit the dialog, as an equivalent of 'C-g' when Emacs
asks a yes/no question via the echo area.  This is controlled by the
new variable 'w32-yes-no-dialog-show-cancel', by default t.  Set it to
nil to get back the old behavior of showing a modal dialog with only
two buttons: "Yes" and "No".</code></pre><h3 id="cygwin">Cygwin</h3><pre><code>'process-attributes' is now implemented.</code></pre><h3 id="macos">macOS</h3><pre><code>The 'ns-popup-font-panel' command has been removed.
Use the general command 'M-x menu-set-font' instead.</code></pre>

    
    
  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google gets its way, bakes a user-tracking ad platform directly into Chrome (822 pts)]]></title>
            <link>https://arstechnica.com/gadgets/2023/09/googles-widely-opposed-ad-platform-the-privacy-sandbox-launches-in-chrome/</link>
            <guid>37427227</guid>
            <pubDate>Thu, 07 Sep 2023 23:41:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/gadgets/2023/09/googles-widely-opposed-ad-platform-the-privacy-sandbox-launches-in-chrome/">https://arstechnica.com/gadgets/2023/09/googles-widely-opposed-ad-platform-the-privacy-sandbox-launches-in-chrome/</a>, See on <a href="https://news.ycombinator.com/item?id=37427227">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">



<article itemscope="" itemtype="http://schema.org/NewsArticle" id="">
      <div>
        <header>
            <h4>
      the ads will keep coming    —
</h4>
            
            <h2 itemprop="description">Chrome now directly tracks users, generates a "topic" list it shares with advertisers.</h2>
                    </header>
        <div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2019/04/3-800x369.jpg" alt="Google's not looking as good as it used to.">
      <figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2019/04/3.jpg" data-height="461" data-width="1000">Enlarge</a> <span>/</span> Google's not looking as good as it used to.</p><p>Aurich Lawson</p></figcaption>  </figure>

  




<!-- cache hit 21:single/related:c3fe78e04774f666a793c0386865ea11 --><!-- empty -->
<p>Don't let <a href="https://arstechnica.com/gadgets/2023/09/chrome-is-getting-a-big-redesign-with-rounded-corners-material-you-colors/">Chrome's big redesign</a> distract you from the fact that Chrome's invasive new ad platform, ridiculously branded the "Privacy Sandbox," is also getting a widespread rollout in Chrome today. If you haven't been following this, this feature will track the web pages you visit and generate a list of advertising topics that it will share with web pages whenever they ask, and it's built directly into the Chrome browser. It's been in the news previously as "<a href="https://arstechnica.com/gadgets/2021/04/everybody-hates-floc-googles-tracking-plan-for-chrome-ads/">FLoC</a>" and then the "<a href="https://arstechnica.com/gadgets/2022/01/google-drops-floc-after-widespread-opposition-pivots-to-topics-api-plan/">Topics API</a>," and despite widespread opposition from just about every non-advertiser in the world, Google owns Chrome and is one of the world's biggest advertising companies, so this is being railroaded into the production builds.</p>
<p>Google seemingly knows this won't be popular. Unlike the glitzy front-page Google blog post that the redesign got, the big ad platform launch announcement is tucked away on the <a href="https://privacysandbox.com/news/privacy-sandbox-for-the-web-reaches-general-availability">privacysandbox.com</a> page. The blog post says the ad platform is hitting "general availability" today, meaning it has rolled out to most Chrome users. This has been a long time coming, with <a href="https://techcrunch.com/2023/07/20/google-starts-the-ga-rollout-of-its-privacy-sandbox-apis-to-all-chrome-users/">the APIs</a> rolling out about a month ago and a million incremental steps in the beta and dev builds, but now the deed is finally done.</p>
  <div>
    <ul>
              <li data-thumb="https://cdn.arstechnica.net/wp-content/uploads/2023/09/image-5-150x150.png" data-src="https://cdn.arstechnica.net/wp-content/uploads/2023/09/image-5.png" data-responsive="https://cdn.arstechnica.net/wp-content/uploads/2023/09/image-5-980x1098.png 1080, https://cdn.arstechnica.net/wp-content/uploads/2023/09/image-5.png 2560" data-sub-html="#caption-1966390">
          <figure>
            
                          <figcaption id="caption-1966390">
                <span></span>
                                  <p>
                    Chrome users will see this pop-up, telling them the ad platform has rolled out to them.                  </p>
                                                  <p><span></span>
                                          Aurich Lawson                                      </p>
                              </figcaption>
                      </figure>
        </li>
          </ul>
  </div>

<p>Users should see a pop-up when they start up Chrome soon, informing them that an "ad privacy" feature has been rolled out to them and enabled. The new pop-up has been hitting users all week. As you can see in the pop-up, all of Google's documentation about this feature feels like it was written on opposite day, with Google calling the browser-based advertising platform "a significant step on the path towards a fundamentally more private web."</p>                                            
                                                        
<p>The argument here is that someday—not now, but someday—Google promises to turn off third-party tracking cookies in Chrome, and the new ad platform, which has some limitations, is better than the free-for-all that is third-party cookies. The thing is, third-party cookies mostly only affect Chrome users. Apple and Firefox have both been blocking third-party cookies for years and won't be implementing Google's new advertising system—it's only the Chromium browsers that still allow them.
</p><p>That's actually what started this whole process: Apple dealt a giant blow to Google's core revenue stream when it blocked third-party cookies in Safari in 2020. While it was a win for privacy, Google's not following suit until it can secure its advertising business. The Federated Learning of Cohorts and now the Topics API are part of a plan to pitch an "alternative" tracking platform, and Google argues that there <em>has</em> to be a tracking alternative—you can't just not be spied on. The Electronic Frontier Foundation also argued this when it called Google's FLoC a "<a href="https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea">terrible idea</a>," saying "[Google's] framing is based on a false premise that we have to choose between 'old tracking' and 'new tracking.' It’s not either-or. Instead of re-inventing the tracking wheel, we should imagine a better world without the myriad problems of targeted ads."</p>
<p>Chrome has some controls for this built into the browser now. Just go to the Chrome Settings, then "Privacy and Security," then "Ad privacy" (alternatively, paste "chrome://settings/adPrivacy" into the address bar). From there, you can click through to each of the <em>three</em> individual pages and turn off the top checkbox, and in a mere six clicks, you can presumably turn off the ad platform. If you leave it on for a while, you can check out the "Ad topics" page, where Google will show you what ads Chrome things you would like to see. This list gets sent to advertisers when you visit a page.</p>
<p>Google says it will block third-party cookies in the second half of 2024—presumably after it makes sure the "Privacy Sandbox" will allow it to keep its profits up. Did any user in the world want a user tracking and ad platform baked directly into their browser? Probably not, but this is Google, and they control Chrome, and this probably still won't make people switch to Firefox.</p>

                                                </div>
    </div>

<section>
          
    
    <p>
      <section>
        <a href="https://arstechnica.com/author/ronamadeo">Ron Amadeo</a>
        Ron is the Reviews Editor at Ars Technica, where he specializes in Android OS and Google products. He is always on the hunt for a new gadget and loves to rip things apart to see how they work. He loves to tinker and always seems to be working on a new project.
      </section>
    </p>

  </section>

  </article>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: HackYourNews – AI summaries of the top HN stories (275 pts)]]></title>
            <link>https://hackyournews.com/</link>
            <guid>37427127</guid>
            <pubDate>Thu, 07 Sep 2023 23:30:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hackyournews.com/">https://hackyournews.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37427127">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <table>
        <tbody><tr><td>HackYourNews - AI summaries of the top HN stories <a href="https://hackyournews.com/indexM.html">(Mobile)</a></td></tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                1. <a href="https://citizenlab.ca/2023/09/blastpass-nso-group-iphone-zero-click-zero-day-exploit-captured-in-the-wild/">NSO group iPhone zero-click, zero-day exploit captured in the wild</a>
                <span>(citizenlab.ca)</span>
            </td>
        </tr>
        <tr>
            <td>
                917 points by ericzawo | 2023-09-07 20:21:01 | <a href="https://news.ycombinator.com/item?id=37425007">525 comments</a>
                <br>
        
                <i>Dehyped title: Apple Releases Update to Address Zero-Click Vulnerability Exploited by NSO Group's Pegasus Spyware</i>
                
                <p><strong>Summary:</strong> Apple issues update to fix zero-click vulnerability exploited by NSO Group's Pegasus spyware. The exploit chain, known as BLASTPASS, targeted iPhones running the latest iOS version without user interaction. Citizen Lab discovered and disclosed the vulnerability to Apple, who issued two CVEs related to the exploit. Users are urged to update their devices immediately and consider enabling Lockdown Mode for added protection. The incident highlights the ongoing targeting of civil society organizations by sophisticated cyber threats. Apple's response and collaboration with Citizen Lab are commended.</p>
            
                    <p><strong>Comments:</strong> The NSO Group iPhone zero-click, zero-day exploit has been captured in the wild, according to a report by Citizen Lab. The vulnerability is believed to exist in the image processing libraries used to render PassKit attachment previews in iMessage. By crafting a malicious JPEG/PNG image with inflated dimensions, an attacker could overflow the bounds of the buffer and overwrite adjacent memory, allowing them to execute their own shellcode and disable memory protections. The report also discusses misconceptions about ASLR, sandboxing, and jailbreaking. It highlights the complexities of bypassing protections and suggests possible ways the exploit could have bypassed the blastdoor sandbox. The discussion also touches on the use of Lockdown Mode and the challenges of using iMessage securely.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                2. <a href="https://phys.org/news/2023-08-china-ancient-pipe-networks-communal.html">China's ancient water pipe networks show no evidence of a centralized authority</a>
                <span>(phys.org)</span>
            </td>
        </tr>
        <tr>
            <td>
                38 points by Stratoscope | 2023-09-07 20:25:09 | <a href="https://news.ycombinator.com/item?id=37425052">11 comments</a>
                <br>
        
                <i>Dehyped title: Ancient Chinese water pipes reveal neolithic communities' engineering capabilities without centralized authority</i>
                
                <p><strong>Summary:</strong> Ancient ceramic water pipes discovered in China reveal that neolithic communities were capable of complex engineering without a centralized state authority, according to a study by University College London. The network of pipes and drainage ditches at the site of Pingliangtai, dating back 4,000 years, demonstrates communal cooperation in building and maintaining the system. The settlement shows little evidence of social hierarchy, with uniformly small houses and no signs of significant inequality. The discovery challenges the belief that only centralized states could undertake such engineering feats, highlighting the capabilities of more egalitarian and communal societies. The advanced water management system at Pingliangtai required significant community-wide planning and coordination.</p>
            
                    <p><strong>Comments:</strong> China's ancient water pipe networks show no evidence of a centralized authority, challenging the narrative of communal planning. Excavations revealed no social hierarchy in burials, suggesting a different social structure. The decentralized construction of the Chinese walled site of Pingliangtai further supports this idea. Commenters discuss the instinctive hierarchical nature of humans and the possibility of non-physical hierarchies. They also mention the capabilities of organization in ancient societies and the coordination between kings in different regions. The original paper and a related link are shared for further reading. Overall, the discourse explores the implications of the lack of evidence for centralized authority in ancient Chinese communities.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                3. <a href="https://gal.hagever.com/posts/my-node-js-is-a-bit-rusty">My Node.js is a bit Rusty</a>
                <span>(gal.hagever.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                66 points by qsantos | 2023-09-07 07:34:09 | <a href="https://news.ycombinator.com/item?id=37415812">35 comments</a>
                <br>
        
                <i>Dehyped title: Boosting Performance: Replacing Node.js with Rust for CDN Stats at Wix</i>
                
                <p><strong>Summary:</strong> Replacing an internal Node.js module with a native Rust module resulted in a 25x performance boost for a CDN Stats platform at Wix. The platform provides real-time data on the usage of compiled assets by customers, helping front-end developers optimize bundles. The process of parsing and aggregating data from tab-separated values files was initially slow and resource-intensive in Node.js. Attempts to optimize the code using the Wix Serverless framework and the Wix Node.js platform were unsuccessful. However, embedding Rust in Node.js using the NAPI library allowed for more efficient memory management and significantly improved performance. The use of Rust's memory management capabilities and type-driven development workflow led to a more scalable and optimized solution.</p>
            
                    <p><strong>Comments:</strong> Engineers discuss the performance issues of parsing a large TSV file using Node.js and the potential solutions. The original code was slow due to excessive allocations in the TSV parser, causing low throughput. Some commenters suggest using a pool of pre-allocated objects or optimizing the JavaScript code to improve performance. Others mention alternative languages like Rust or Go that could handle the task more efficiently. The discussion also touches on the use of N-API and WebAssembly for better portability. Overall, the conversation highlights the importance of understanding memory allocation and optimizing code for better performance.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                4. <a href="https://underjord.io/unpacking-elixir-syntax.html">Unpacking Elixir: Syntax</a>
                <span>(underjord.io)</span>
            </td>
        </tr>
        <tr>
            <td>
                4 points by lawik | 2023-09-08 05:57:27 | <a href="https://news.ycombinator.com/item?id=37429922">0 comments</a>
                <br>
        
                <i>Dehyped title: Understanding the Syntax of Elixir</i>
                
                <p><strong>Summary:</strong> Unpacking Elixir: Syntax</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                5. <a href="https://howqueryengineswork.com/">How Query Engines Work</a>
                <span>(howqueryengineswork.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                3 points by asicsp | 2023-09-07 06:38:55 | <a href="https://news.ycombinator.com/item?id=37415494">0 comments</a>
                <br>
        
                <i>Dehyped title: How Query Engines Work: A Comprehensive Guide</i>
                
                <p><strong>Summary:</strong> This book provides an in-depth exploration of how query engines work, covering topics such as Apache Arrow, type systems, data sources, logical plans, DataFrames, physical plans, query planning, query optimizers, query execution, SQL support, parallel and distributed query execution, testing, benchmarks, and further resources. The author expresses gratitude to their family, Matthew Powers, the Apache Arrow community, and colleagues at RMS for their support and inspiration. The book is available for purchase in multiple formats.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                6. <a href="https://hackyournews.com/">Show HN: HackYourNews – AI summaries of the top HN stories</a>
                <span>(hackyournews.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                94 points by ukuina | 2023-09-07 23:30:33 | <a href="https://news.ycombinator.com/item?id=37427127">84 comments</a>
                <br>
        
                <i>Dehyped title: HackYourNews uses AI to summarize top HN stories</i>
                
                <p><strong>Summary:</strong> HackYourNews is a website that uses OpenAI's gpt-3.5-turbo to provide AI summaries of the top Hacker News stories and their comments. The site offers a minimal design and a mobile view that is easy to skim on any device. The creator aims to help users focus on the most important stories while browsing aimlessly.</p>
            
                    <p><strong>Comments:</strong> HackYourNews is a website that uses OpenAI's gpt-3.5-turbo to provide AI summaries of the top Hacker News stories and their comments. The site aims to help users determine which stories to focus on while browsing aimlessly. The summaries of the articles are always cached, while the comment summaries are regenerated if there is a significant change in the number of comments. The site offers a minimal design and a mobile view that is easy to skim on any device. Users have provided feedback on improving the conciseness of the summaries and capturing the mood of the discussions.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                7. <a href="http://www.ws.binghamton.edu/fridrich/cube.html">My speed cubing page</a>
                <span>(www.ws.binghamton.edu)</span>
            </td>
        </tr>
        <tr>
            <td>
                3 points by weinzierl | 2023-09-07 10:33:33 | <a href="https://news.ycombinator.com/item?id=37416999">0 comments</a>
                <br>
        
                <i>Dehyped title: Advanced Speed Cubing Techniques and Resources</i>
                
                <p><strong>Summary:</strong> A guide to advanced speed cubing techniques and resources, including tips for solving Rubik's cube faster, customizing algorithms, and achieving record times. It also features collections of various algorithms, pretty patterns, and expert insights from renowned speed cubers. The page includes personal experiences from attending world championships and cube-related events, as well as links to additional resources for further exploration.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                8. <a href="https://www.freightwaves.com/news/i-rode-with-an-ice-road-trucker-to-the-arctic-circle-heres-what-it-was-like">I rode with an ice road trucker to the Arctic Circle</a>
                <span>(www.freightwaves.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                128 points by jjslocum3 | 2023-09-07 21:27:38 | <a href="https://news.ycombinator.com/item?id=37425855">77 comments</a>
                <br>
        
                <i>Dehyped title: Riding Along with an Ice Road Trucker in Alaska: Challenges and Allure of Trucking in the Arctic Circle</i>
                
                <p><strong>Summary:</strong> A reporter rides along with an ice road trucker in Alaska to experience the unique challenges and allure of trucking in the Arctic Circle. The trucking industry in Alaska is booming, with companies looking to hire more drivers to haul equipment on the Dalton Highway. The summer is a slower time for Alaskan trucking fleets, as the ice roads are too warm to maintain. In the winter, truck drivers from all over the U.S. come to Alaska to work as ice road truckers, earning significantly higher salaries than typical truck drivers. The reporter accompanies a driver on a journey from Anchorage to Fairbanks, and then from Fairbanks to Prudhoe Bay on the Dalton Highway, where they haul pipes for the oil fields. The Dalton Highway is known for its steep grades and challenging conditions.</p>
            
                    <p><strong>Comments:</strong> This article discusses the experience of riding with an ice road trucker to the Arctic Circle. The author highlights the beauty of the landscape, including the changing colors of the grass and the appearance of sun dogs and the aurora borealis. The comments section includes discussions about capturing the scenery through photography, winter camping in extreme temperatures, and the challenges faced by truck drivers in Alaska. Overall, the article and comments provide insights into the unique and challenging experience of driving on ice roads in the Arctic Circle.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                9. <a href="https://blog.lancedb.com/llms-rag-the-missing-storage-layer-for-ai-28ded35fa984">LLMs, RAG, and the missing storage layer for AI</a>
                <span>(blog.lancedb.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                68 points by yurisagalov | 2023-09-07 15:41:38 | <a href="https://news.ycombinator.com/item?id=37420628">25 comments</a>
                <br>
        
                <i>Dehyped title: The Missing Storage Layer for AI: Introducing LanceDB for Simplified Retrieval and Management of Embeddings</i>
                
                <p><strong>Summary:</strong> The missing storage layer for AI, specifically Language Model Machines (LLMs), is identified as a crucial element to unlock greater AI capabilities. LLMs have the potential to revolutionize various industries and fields of research, but they suffer from hallucination and lack interpretability. The use of Retrieval Augmented Generation (RAG) systems, which combine LLMs with a retriever to generate responses, offers a solution. RAG systems reduce reliance on LLMs and provide finer control, modularity, and cheaper updates. The debate between fine-tuning models and using general models for RAG is deemed pointless, as both approaches have their advantages. The need for an AI-native, multi-modal, and embedded vector database is highlighted, with LanceDB being introduced as a solution that simplifies retrieval, filtering, and management of embeddings.</p>
            
                    <p><strong>Comments:</strong> This discussion on Hacker News revolves around the topic of retrieval augmented generation (RAG) and the missing storage layer for AI. The conversation primarily focuses on the benefits and drawbacks of using semantic search results in combination with language models. Some participants argue that the retrieval part is already effective and that users should be allowed to synthesize their own responses. Others highlight the advantages of separating memory from linguistic skills and using vector search for faster and more efficient performance. The discussion also touches on the challenges of relevance and accuracy in vector indexing, as well as the potential use of structured data and feature stores in customer chatbots. Overall, the conversation provides insights into the different perspectives on RAG and the storage layer for AI.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                10. <a href="http://www-formal.stanford.edu/jmc/facts.txt">John McCarthy’s collection of numerical facts for use in elisp programs</a>
                <span>(www-formal.stanford.edu)</span>
            </td>
        </tr>
        <tr>
            <td>
                170 points by chrchr | 2023-09-07 15:52:09 | <a href="https://news.ycombinator.com/item?id=37420812">48 comments</a>
                <br>
        
                <i>Dehyped title: Numerical Facts, Units Conversions, and Astronomical Data for Moving Mars</i>
                
                <p><strong>Summary:</strong> This file contains a collection of numerical facts and units conversions, as well as astronomical data related to moving Mars to a different location. The file can be loaded into Emacs and used within the editor. It provides various units of measurement and constants, such as the gravitational constant, Avogadro number, and Planck's constant. It also includes data on the masses, radii, densities, and orbital parameters of celestial bodies like Mercury, Venus, Earth, Mars, Jupiter, and the Moon. The file concludes with escape velocities and velocities of these celestial bodies.</p>
            
                    <p><strong>Comments:</strong> John McCarthy's collection of numerical facts for use in elisp programs, including units conversions and astronomical facts, sparks a discussion on moving Mars and space mega-engineering. The conversation touches on topics such as disrupting a solar system with a small asteroid, the correlation between AI researchers and interest in space elevators, and the possibility of cooling Venus and terraforming it. The comments also mention McCarthy's role as a pioneer in AI and the differences between symbolic and connectionist AI. Overall, the discourse explores various ideas related to space exploration and the future of AI.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                11. <a href="https://en.wikipedia.org/wiki/Buffalo_buffalo_Buffalo_buffalo_buffalo_buffalo_Buffalo_buffalo">Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo</a>
                <span>(en.wikipedia.org)</span>
            </td>
        </tr>
        <tr>
            <td>
                86 points by screamingninja | 2023-09-07 21:26:33 | <a href="https://news.ycombinator.com/item?id=37425842">35 comments</a>
                <br>
        
                <i>Dehyped title: The Linguistic Complexity of 'Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo'</i>
                
                <p><strong>Summary:</strong> The sentence 'Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo' is a grammatically correct example of how homonyms and homophones can create complex linguistic constructs. It uses three meanings of the word buffalo: as a noun referring to a place named Buffalo, as a verb meaning to bully or baffle, and as a noun referring to the animal. The sentence claims that bison from Buffalo who are bullied by other bison in their community also bully other bison. The sentence is syntactically ambiguous and can be parsed in different ways. The idea of constructing a sentence using repetitions of 'buffalo' was independently discovered multiple times in the 20th century.</p>
            
                    <p><strong>Comments:</strong> The content primarily consists of comments discussing linguistic examples and wordplay. Users share their favorite examples, such as sentences with repeating words and ambiguous meanings. The main focus is on the sentence 'Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo,' with users providing alternative examples and discussing their understanding of the sentence. Some users also mention other linguistic examples, such as the Chinese sentence 'Lion-Eating Poet in the Stone Den.' Overall, the comments provide a lighthearted and engaging discussion about language and wordplay.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                12. <a href="https://github.com/samvher/bert-for-laptops/blob/main/BERT_for_laptops.ipynb">A BERT for laptops, from scratch</a>
                <span>(github.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                159 points by samvher | 2023-09-07 20:30:27 | <a href="https://news.ycombinator.com/item?id=37425130">33 comments</a>
                <br>
        
                <i>Dehyped title: Code Repository for 'bert-for-laptops' Project</i>
                
                <p><strong>Summary:</strong> The content is a code repository for a project called 'bert-for-laptops'. The latest commit was made by a user named 'samvher'. The file being worked on is 'BERT_for_laptops.ipynb'. The file contains 2163 lines of code and is 157 KB in size. The content seems to be related to using BERT (Bidirectional Encoder Representations from Transformers) for laptops, although the details of the project are not provided in the given information.</p>
            
                    <p><strong>Comments:</strong> The author built and trained a BERT model from scratch on their gaming laptop, achieving 94% of BERT-base's performance in 17 hours. The notebook covers the entire process, including implementing and training a tokenizer, pretraining, and finetuning. One notable feature of this BERT model is the use of relative position embeddings. BERT is an encoder-only model designed for classification and natural language inference, while GPT is a decoder-only model used for text generation. BERT generates embeddings for input text that can be used for predictive models like sentiment prediction. The author also shares their source code for others to run the notebook.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                13. <a href="https://www.nature.com/articles/s42256-023-00652-2">Nature Machine Intelligence: Federated Benchmarking of Medical AI</a>
                <span>(www.nature.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                4 points by gkew | 2023-09-08 02:28:36 | <a href="https://news.ycombinator.com/item?id=37428505">0 comments</a>
                <br>
        
                <i>Dehyped title: MedPerf: An Open Platform for Benchmarking Medical AI Models</i>
                
                <p><strong>Summary:</strong> MedPerf is an open platform for benchmarking medical artificial intelligence (AI) models. It enables federated evaluation of AI models by securely distributing them to different healthcare organizations. This allows each facility to assess and verify the performance of AI models while prioritizing privacy. The platform addresses the challenges of accessing diverse and large-scale datasets for AI model evaluation, which is crucial for improving the generalizability of these models. MedPerf has already been used in various settings, including the FeTS challenge and academic pilot studies, demonstrating its scalability and user-friendliness. It aims to provide consistent methodologies for evaluating AI model performance, protect patient privacy, and foster collaboration among experts in the medical AI field.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                14. <a href="https://github.com/leanprover/lean4/releases/tag/v4.0.0">Lean 4.0</a>
                <span>(github.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                6 points by quag | 2023-09-08 05:59:40 | <a href="https://news.ycombinator.com/item?id=37429938">1 comments</a>
                <br>
        
                <i>Dehyped title: Lean 4: First Official Release and Regular Monthly Updates Planned</i>
                
                <p><strong>Summary:</strong> Lean 4, the first official release of Lean 4, is now available. Regular releases of Lean 4 are planned, with a new 'minor' version approximately monthly. Backwards compatibility is not yet guaranteed, but all breaking changes will be documented. The release includes over 2000 commits since the previous milestone, with Leonardo de Moura leading in contributions. The release also provides links to the Lean community forum, Lean language website, Lean Focused Research Organization homepage, Lean community website, and Mathlib GitHub repository.</p>
            
                    <p><strong>Comments:</strong> Lean 4.0 is a new release of the Lean theorem prover, and a user on Hacker News expresses their interest in trying it out. The comment suggests that there is no longer any excuse not to give it a try. The post also includes links to guidelines, FAQs, lists, APIs, security information, legal details, applying to YC, and contact information.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                15. <a href="https://www.masteringemacs.org/article/whats-new-in-emacs-29-1">What's new in Emacs 29.1</a>
                <span>(www.masteringemacs.org)</span>
            </td>
        </tr>
        <tr>
            <td>
                139 points by User23 | 2023-09-07 23:46:12 | <a href="https://news.ycombinator.com/item?id=37427279">72 comments</a>
                <br>
        
                <i>Dehyped title: What's New in Emacs 29.1: Improved Code Parsing, Language Server Client, and More</i>
                
                <p><strong>Summary:</strong> Emacs 29.1 introduces several new features and improvements, including official tree-sitter support for better code parsing and editing, the inclusion of EGlot as a language server client, the integration of use-package for easier configuration management, enhancements to long line support, native SQLite support for improved performance, the ability to change the init directory for multiple Emacs versions, and the addition of pixel-scroll-precision-mode for smoother scrolling. The release also includes changes to installation, such as ahead-of-time native compilation and built-in support for tree-sitter and SQLite. The article provides detailed explanations and instructions for each new feature.</p>
            
                    <p><strong>Comments:</strong> Emacs 29.1 introduces a starter kit called 'Emacs bedrock' that leverages built-in features for improved completion, project management, and language support. Users praise the kit for its ability to make Emacs more accessible and recommend it to others. The discussion also touches on other Emacs configurations, such as Doom Emacs, and the performance differences between Emacs on Unix-like systems and Windows. Some users express frustration with the Windows port of Emacs and suggest using WSL for better performance. Overall, the comments highlight the ongoing interest in Emacs and the various ways users customize and optimize their configurations.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                16. <a href="https://blog.google/threat-analysis-group/active-north-korean-campaign-targeting-security-researchers/">North Korean campaign targeting security researchers</a>
                <span>(blog.google)</span>
            </td>
        </tr>
        <tr>
            <td>
                496 points by todsacerdoti | 2023-09-07 15:53:23 | <a href="https://news.ycombinator.com/item?id=37420831">230 comments</a>
                <br>
        
                <i>Dehyped title: North Korean Threat Actors Target Security Researchers in New Campaign</i>
                
                <p><strong>Summary:</strong> Google's Threat Analysis Group (TAG) has identified a new campaign by North Korean threat actors targeting security researchers. The actors use social media platforms to build relationships with their targets and then send malicious files containing 0-day exploits. TAG has discovered at least one actively exploited 0-day in the past few weeks. In addition, the threat actors have developed a Windows tool that can download and execute arbitrary code. TAG advises those who have downloaded or run this tool to take precautions. The vulnerability has been reported to the affected vendor and is being patched.</p>
            
                    <p><strong>Comments:</strong> GitHub users discuss the potential risks of trusting code hosted on the platform, following a North Korean campaign targeting security researchers. The conversation highlights concerns about malicious software, backdoors, and the need for caution when using GitHub as a trusted build source. Users also draw comparisons between GitHub Actions and iMessage, noting the potential vulnerabilities and trust issues associated with both platforms. The discussion includes links to suspect repositories and cached code, as well as suggestions for analyzing account activity and implementing warnings on GitHub. Overall, the conversation emphasizes the importance of vigilance and security measures when using GitHub and other similar platforms.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                17. <a href="https://txt.cohere.com/urzas-ai/">We built an AI-powered Magic the Gathering card generator</a>
                <span>(txt.cohere.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                58 points by MWil | 2023-09-08 00:53:34 | <a href="https://news.ycombinator.com/item?id=37427854">42 comments</a>
                <br>
        
                <i>Dehyped title: How Urza's AI Uses AI to Generate Magic the Gathering Cards</i>
                
                <p><strong>Summary:</strong> Urza's AI is a website that uses AI to generate Magic the Gathering cards. The creators used a combination of language AI and text-to-image AI to generate the cards. They used a large language model to generate the text of the cards, and a neural network model to generate the images. The result was impressive, with realistic and playable cards being generated. The website received over 38,000 visitors within the first four days of launch. The creators believe that APIs like this are the future of AI development, as they provide access to powerful models without the need for expertise or infrastructure.</p>
            
                    <p><strong>Comments:</strong> AI-powered Magic the Gathering card generator surpasses hand-made solution with the help of ChatGPT's structured data support. The generator can create mechanically valid and balanced cards based on natural language prompts. The potential for AI-generated cards to create diverse and fair fights raises both excitement and concern. Users discuss the challenge of balancing power levels and the need for fine-tuning. The use of LLMs for creative tasks and the impact of AI on various industries are also explored. Additionally, there are discussions on selling old Magic cards and recommendations for grading and identifying their value.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                18. <a href="https://mathspp.com/blog/animations-from-first-principles-in-5-minutes">Animations From First Principles (in 5 minutes)</a>
                <span>(mathspp.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                30 points by RojerGS | 2023-09-07 10:38:07 | <a href="https://news.ycombinator.com/item?id=37417027">3 comments</a>
                <br>
        
                <i>Dehyped title: Creating Animations from Scratch with Python and Pygame</i>
                
                <p><strong>Summary:</strong> This blog post provides a step-by-step guide on creating animations from scratch using Python and pygame. It starts by explaining how to create a canvas and draw a circle using a parametrization function. The post then demonstrates how to animate the drawing of the circle by gradually adding points to the screen. It also shows how to animate other shapes, such as a figure eight. The post concludes by introducing the concept of morphing between two figures and provides a simple implementation for achieving this effect.</p>
            
                    <p><strong>Comments:</strong> This article discusses the concept of creating animations from first principles using programming, specifically in Python. The author shares their thoughts on simple animations and invites readers to provide feedback and suggestions for further exploration. The comments section includes positive feedback on the accessibility and clarity of the examples, as well as a recommendation for a related book. One commenter suggests making the code runnable in a browser environment for easier experimentation. Overall, the article and comments provide a brief overview of creating animations and invite discussion on the topic.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                19. <a href="https://apps.london.gov.uk/street-trees/">London Street Trees</a>
                <span>(apps.london.gov.uk)</span>
            </td>
        </tr>
        <tr>
            <td>
                109 points by buro9 | 2023-09-07 19:34:41 | <a href="https://news.ycombinator.com/item?id=37424416">51 comments</a>
                <br>
        
                <i>Dehyped title: N/A</i>
                
                <p><strong>Summary:</strong> N/A</p>
            
                    <p><strong>Comments:</strong> London Street Trees is a website that showcases the city's love for its trees. The site provides a map of street trees in London, allowing users to explore and learn about the different types of trees in the city. The website also includes links to other similar projects in different cities around the world, such as San Francisco, Berlin, and Montreal. Users in the comments section share their own experiences with tree mapping projects in their respective cities, highlighting the importance of trees in urban environments. Overall, the website serves as a valuable resource for tree enthusiasts and showcases the efforts of various cities in promoting and preserving their urban green spaces.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                20. <a href="https://github.com/JuliaDebug/Cthulhu.jl">Cthulhu.jl – show type-inferred Julia code</a>
                <span>(github.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                61 points by xgdgsc | 2023-09-07 06:40:36 | <a href="https://news.ycombinator.com/item?id=37415505">24 comments</a>
                <br>
        
                <i>Dehyped title: Cthulhu.jl: A Debugging Tool for Type Inference Issues in Julia</i>
                
                <p><strong>Summary:</strong> Cthulhu.jl is a debugging tool for type inference issues in Julia. It helps users identify the exact point where inference fails or behaves unexpectedly. The tool provides an interactive interface to explore type-annotated source code and allows users to descend into callees of a function. It also offers options to toggle the display of type annotations and view non-concrete types. Cthulhu can be used to debug type inference problems faster and analyze invalidation and inference triggers. However, there may be errors or omissions in mapping type inference results back to the source code.</p>
            
                    <p><strong>Comments:</strong> The discourse on Hacker News revolves around the Julia programming language and its type system. Some users express frustration with working in Julia and the reliance on external tools for type inference. Others discuss the compatibility of static typing with Julia's philosophy of delayed binding and multiple dispatch. The conversation also touches on the challenges of reasoning about code in Julia and the limitations of its tooling. Overall, there is a mix of opinions on the strengths and weaknesses of Julia's type system and its suitability for different use cases.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                21. <a href="https://www.tandfonline.com/doi/full/10.1080/01611194.2022.2160677">Deciphering Mary Stuart’s lost letters from 1578-1584</a>
                <span>(www.tandfonline.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                15 points by pallas_athena | 2023-09-07 06:17:13 | <a href="https://news.ycombinator.com/item?id=37415356">0 comments</a>
                <br>
        
                <i>Dehyped title: Website www.tandfonline.com Requests Security Review of Connection</i>
                
                <p><strong>Summary:</strong> The website www.tandfonline.com is requesting to review the security of the user's connection before proceeding. This is likely due to concerns about the connection's safety. The website is utilizing Cloudflare for performance and security purposes. The Ray ID provided is 80346a40dbb01690, which may be used for tracking or troubleshooting purposes. It is important for users to ensure the security of their connection before accessing the website.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                22. <a href="https://lichess.org/@/datajunkie/blog/27-why-isnt-chess-popular-in-japan/UoEDbXUU">Why isn't chess popular in Japan?</a>
                <span>(lichess.org)</span>
            </td>
        </tr>
        <tr>
            <td>
                66 points by cushpush | 2023-09-08 02:16:48 | <a href="https://news.ycombinator.com/item?id=37428447">41 comments</a>
                <br>
        
                <i>Dehyped title: Why Chess Isn't Popular in Japan: The Dominance of Shōgi and Go</i>
                
                <p><strong>Summary:</strong> Chess is not as popular in Japan compared to Shōgi (Japanese chess) and Go. Shōgi has been a part of Japanese culture for centuries and has a large base of enthusiasts. Go, on the other hand, is believed to have been invented over 2,500 years ago in China and has a higher game complexity. The lack of financial support for chess in Japan and the familiarity of Shōgi to the people through media are some reasons why chess hasn't become popular. However, the Japan Chess Federation has been actively promoting chess in the country, leading to an increase in participation and growth of the game. While Japan doesn't have any grandmasters yet, there are high hopes for the future of chess in the country.</p>
            
                    <p><strong>Comments:</strong> Chess is not popular in Japan, and the comments discuss possible reasons for this. Some commenters mention that Shogi, Go, and Mahjong are more popular in Japan. Others suggest that the lack of chill public spaces in Tokyo may contribute to the lack of popularity of chess. The comments also mention various resources and clubs for playing Shogi and chess in Japan. Overall, the comments provide insights into the popularity of different board games in Japan and the availability of resources for playing them.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                23. <a href="https://www.cringely.com/2013/03/14/accidental-empires-chapter-11-font-wars/">Accidental Empires, Chapter 11 – Font Wars (1992)</a>
                <span>(www.cringely.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                3 points by longaway | 2023-09-07 21:55:05 | <a href="https://news.ycombinator.com/item?id=37426132">0 comments</a>
                <br>
        
                <i>Dehyped title: The Font Wars: How John Warnock Revolutionized Font Technology with PostScript</i>
                
                <p><strong>Summary:</strong> The Font Wars: How John Warnock's brilliance in computer graphics led to the development of PostScript, a language that revolutionized the way letters and numbers are described and displayed. Warnock's solution to the hidden surface problem in a graphics program caught the attention of the programming world, propelling him to fame. He later co-developed JaM, Interpress, and PostScript, which allowed for the creation of outline fonts. PostScript described letters and numbers as mathematical formulas, enabling the storage of character descriptions as lines, curves, and color fill instructions. This breakthrough in font technology had a significant impact on desktop publishing and the way words and pictures are displayed on computer screens and printed pages.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                24. <a href="https://www.latimes.com/california/story/2023-09-07/california-magic-mushrooms-psychedelics-scott-wiener-psilocybin">California moves to decriminalize use of magic mushrooms, other psychedelics</a>
                <span>(www.latimes.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                150 points by voisin | 2023-09-08 00:30:11 | <a href="https://news.ycombinator.com/item?id=37427679">129 comments</a>
                <br>
        
                <i>Dehyped title: California Moves to Decriminalize Use of Magic Mushrooms and Other Natural Psychedelics</i>
                
                <p><strong>Summary:</strong> California lawmakers have narrowly approved a bill to decriminalize the possession and personal use of natural psychedelics, including magic mushrooms. The bill, Senate Bill 58, would remove criminal penalties for the possession and use of psilocybin and psilocin, the active ingredients in psychedelic mushrooms, as well as mescaline and DMT. The measure also requires the California Health and Human Services Agency to study the therapeutic use of psychedelics and submit a report to the Legislature. The bill passed the Senate 21 to 14, with several Democrats opposing. If signed by Gov. Gavin Newsom, the bill would go into effect on Jan. 1, 2025.</p>
            
                    <p><strong>Comments:</strong> The comments on a Hacker News thread discuss the recent move by California to decriminalize the use of magic mushrooms and other psychedelics. One commenter expresses concern about the potential negative effects of legalizing recreational drug use on both individuals and society. Another commenter criticizes the bill for excluding chemically-derived psychedelics like LSD and MDMA. The discussion also touches on the issue of standardizing doses for natural substances and the potential risks of using psychedelics for individuals with mental illness. Overall, the comments provide a range of perspectives on the topic of drug decriminalization and its potential consequences.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                25. <a href="https://arstechnica.com/gadgets/2023/09/googles-widely-opposed-ad-platform-the-privacy-sandbox-launches-in-chrome/">Chrome now tracks users and shares a “topic” list with advertisers</a>
                <span>(arstechnica.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                564 points by edvinbesic | 2023-09-07 23:41:24 | <a href="https://news.ycombinator.com/item?id=37427227">350 comments</a>
                <br>
        
                <i>Dehyped title: Google integrates user-tracking ad platform directly into Chrome</i>
                
                <p><strong>Summary:</strong> Google's Chrome browser has rolled out its invasive new ad platform, known as the 'Privacy Sandbox,' which tracks users and generates a list of advertising topics to share with web pages. Despite opposition, Google is implementing this feature as it owns Chrome and is a major advertising company. The ad platform launch announcement was not prominently featured, indicating that Google knows it won't be popular. The argument for this platform is that it is a step towards a more private web, as it promises to turn off third-party tracking cookies in the future. However, this platform only affects Chrome users, as Apple and Firefox have been blocking third-party cookies for years. Chrome does have controls to disable the ad platform, but Google plans to block third-party cookies in 2024.</p>
            
                    <p><strong>Comments:</strong> Chrome now tracks users and shares a 'topic' list with advertisers, sparking a discussion on privacy concerns and alternative browsers. Users provide actionable information on how to disable tracking in Chrome and suggest using Firefox or Brave as more privacy-focused alternatives. Some commenters debate the implications of Google's Privacy Sandbox project and its impact on privacy. Others express concerns about the concentration of personal data at Google and the potential anti-competitive nature of their tracking methods. The discussion also touches on the history of third-party cookies and the role of government regulation in addressing privacy issues in the adtech industry.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                26. <a href="https://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model (2010)</a>
                <span>(nvie.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                46 points by saaspirant | 2023-09-07 07:12:50 | <a href="https://news.ycombinator.com/item?id=37415677">31 comments</a>
                <br>
        
                <i>Dehyped title: The Successful Git Branching Model: Reflections and Recommendations</i>
                
                <p><strong>Summary:</strong> The article discusses the Git branching model introduced by Vincent Driessen and reflects on its popularity and applicability in the current software development landscape. It emphasizes that the model is best suited for versioned software or when supporting multiple versions, while suggesting a simpler workflow like GitHub flow for continuous delivery. The model involves a decentralized but centralized repository setup with main branches like master and develop. It also explains the use of supporting branches like feature branches, release branches, and hotfix branches. The article concludes by highlighting the importance of considering one's own context and not treating any model as a panacea.</p>
            
                    <p><strong>Comments:</strong> The article discusses the controversial Git branching model known as Git Flow. The author criticizes Git Flow for its complexity and argues that it has caused more harm than good in version control. They suggest starting with a simpler approach like trunk-based development and adding complexity only when necessary. Comments from readers largely agree with the author's viewpoint, sharing their own experiences and recommending trunk-based development. Some commenters mention that Git Flow may have gained popularity due to its misleading branding and its appeal to developers familiar with older version control systems. Overall, the consensus is that Git Flow is not the best approach for most teams and that simpler alternatives like trunk-based development are more effective.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                27. <a href="https://news.ycombinator.com/item?id=37423893">NaNofuzz: A Usable Tool for Automatic Test Generation [pdf]</a>
                <span>(news.ycombinator.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                25 points by luu | 2023-09-07 18:58:15 | <a href="https://news.ycombinator.com/item?id=37423893">3 comments</a>
                
        
                    <p><strong>Comments:</strong> NaNofuzz is a usable tool for automatic test generation, as explained in a PDF document. The tool is discussed on Hacker News, where users comment on the pronunciation of its name and the potential benefits of using it for testing. The post also includes a link to the GitHub repository for the tool's Typescript and VS Code extension. Overall, the discussion revolves around the usefulness of automatic test generation and the potential impact it can have on software development. The post provides a resource for those interested in exploring NaNofuzz further.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                28. <a href="https://www.vulture.com/article/rotten-tomatoes-movie-rating.html">The Decomposition of Rotten Tomatoes</a>
                <span>(www.vulture.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                181 points by tortilla | 2023-09-06 22:56:52 | <a href="https://news.ycombinator.com/item?id=37412560">449 comments</a>
                <br>
        
                <i>Dehyped title: The Manipulation and Flaws of Rotten Tomatoes</i>
                
                <p><strong>Summary:</strong> The article discusses the flaws and manipulation of Rotten Tomatoes, a popular movie review aggregation site. It highlights a case where a movie publicity company paid critics to write positive reviews for a film, resulting in a higher score on Rotten Tomatoes. The article also explores how Rotten Tomatoes has become a crucial arbiter in the film industry, with studios using it to determine a film's quality and potential success. However, the article points out that Rotten Tomatoes' scoring system is flawed, as it doesn't account for the enthusiasm or nuance of reviews. It also discusses how studios strategically manipulate the timing of reviews to influence the initial Tomatometer score. Overall, the article raises questions about the reliability and impact of Rotten Tomatoes in the movie industry.</p>
            
                    <p><strong>Comments:</strong> The discussion on Hacker News revolves around the decomposition of Rotten Tomatoes ratings. Users share their insights on how to interpret the ratings and discuss specific movies like 'The Last Jedi' and 'The Greatest Showman'. Some users argue that a large difference between the tomatometer and audience score indicates an 'artsy fartsy' movie, while others disagree. The conversation also touches on plot inconsistencies and character development in 'The Last Jedi'. Overall, the discussion provides different perspectives on the reliability and interpretation of Rotten Tomatoes ratings.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                29. <a href="https://blog.duolingo.com/words-shared-in-all-languages/">Are any words the same in all languages?</a>
                <span>(blog.duolingo.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                189 points by spansoa | 2023-09-07 14:58:59 | <a href="https://news.ycombinator.com/item?id=37419864">359 comments</a>
                <br>
        
                <i>Dehyped title: The Shared Words in Almost Every Language: Coffee and Chocolate</i>
                
                <p><strong>Summary:</strong> There are a few words that are shared across many languages, including words for tea, pineapple, and orange. However, the two words that are the same in almost every language are 'coffee' and 'chocolate'. These words have spread across the globe and have been adopted by different languages with slight variations in pronunciation and spelling. The word for coffee originated from the Arabic word 'qahwah' and has been borrowed into many languages, while the word for chocolate is based on a Nahuatl word that was adopted by Spanish-speaking communities and then spread worldwide. Knowing these two words can make you feel connected to speakers of almost every language.</p>
            
                    <p><strong>Comments:</strong> Are any words the same in all languages? This discussion on Hacker News explores the universality of certain words across different languages. The focus is on words like 'mama' and 'papa' which have similar variations in many languages. The conversation also touches on loan words like 'robot' and 'computer' that are widely used but not necessarily the same in all languages. The discussion delves into linguistic terms like 'babble word' and explores the origins of certain words. Overall, the discourse provides interesting insights into the cross-cultural similarities and differences in language.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        <tr>
            <td>
                30. <a href="https://tailscale.com/blog/mullvad-integration/">Mullvad on Tailscale: Privately browse the web</a>
                <span>(tailscale.com)</span>
            </td>
        </tr>
        <tr>
            <td>
                466 points by xd1936 | 2023-09-07 15:09:19 | <a href="https://news.ycombinator.com/item?id=37420053">265 comments</a>
                <br>
        
                <i>Dehyped title: Tailscale Partners with Mullvad to Offer Secure and Private Web Browsing</i>
                
                <p><strong>Summary:</strong> Tailscale has partnered with Mullvad to offer its VPN servers to customers, allowing them to browse the web securely and privately. Mullvad is known for its commitment to user privacy and anonymity, and Tailscale helps users connect to services and people securely from anywhere. The partnership allows Tailscale users to access Mullvad's global network of servers, bringing them into their personal private internet. Tailscale acts as a coordination layer between devices and Mullvad's network edge, ensuring privacy and encryption. Users can now use Mullvad exit nodes to browse the web privately, protect themselves on public Wi-Fi, and connect to the internet from different locations. The partnership provides a combination of Tailscale's privacy guarantees and Mullvad's VPN infrastructure.</p>
            
                    <p><strong>Comments:</strong> The discussion on Hacker News revolves around the topic of VPNs and proxies, specifically focusing on the differences between them. One user highlights the historical evolution of VPNs and how they have transformed from being used for secure internet traffic to accessing corporate networks. Another user shares their experience with web proxies and the security risks associated with them. The conversation also touches upon the use of self-signed TLS certificates and the potential risks involved. Overall, the discussion provides insights into the various aspects of VPNs and proxies, their functionalities, and the potential privacy risks associated with them.</p>
            
            </td>
        </tr>
        <tr><td></td></tr>
        

        </tbody></table>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TEMU Is Cleverly Hidden Spyware That Poses an Urgent Security Threat to U.S. (110 pts)]]></title>
            <link>https://grizzlyreports.com/we-believe-pdd-is-a-dying-fraudulent-company-and-its-shopping-app-temu-is-cleverly-hidden-spyware-that-poses-an-urgent-security-threat-to-u-s-national-interests/</link>
            <guid>37427008</guid>
            <pubDate>Thu, 07 Sep 2023 23:18:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://grizzlyreports.com/we-believe-pdd-is-a-dying-fraudulent-company-and-its-shopping-app-temu-is-cleverly-hidden-spyware-that-poses-an-urgent-security-threat-to-u-s-national-interests/">https://grizzlyreports.com/we-believe-pdd-is-a-dying-fraudulent-company-and-its-shopping-app-temu-is-cleverly-hidden-spyware-that-poses-an-urgent-security-threat-to-u-s-national-interests/</a>, See on <a href="https://news.ycombinator.com/item?id=37427008">Hacker News</a></p>
Couldn't get https://grizzlyreports.com/we-believe-pdd-is-a-dying-fraudulent-company-and-its-shopping-app-temu-is-cleverly-hidden-spyware-that-poses-an-urgent-security-threat-to-u-s-national-interests/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Searx is no longer maintained (121 pts)]]></title>
            <link>https://github.com/searx/searx/commit/276ffd3f01cdd823f75676c51231fad4040059d3</link>
            <guid>37426223</guid>
            <pubDate>Thu, 07 Sep 2023 22:04:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/searx/searx/commit/276ffd3f01cdd823f75676c51231fad4040059d3">https://github.com/searx/searx/commit/276ffd3f01cdd823f75676c51231fad4040059d3</a>, See on <a href="https://news.ycombinator.com/item?id=37426223">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    
      <tr data-position="0">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fHL1" data-line-number="..."></td>
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fHR1" data-line-number="..."></td>
    <td>@@ -1,5 +1,7 @@</td>
  </tr>

    <tr data-hunk="6f378f0997426e78c9d8399d3cc588022859dcd9e783758b867b0e359eff0b3f">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL1" data-line-number="1"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR1" data-line-number="1"></td>

  <td>
    <span data-code-marker=" "><span><span>..</span> SPDX-License-Identifier: AGPL-3.0-or-later</span></span></td>
</tr>




    <tr data-hunk="6f378f0997426e78c9d8399d3cc588022859dcd9e783758b867b0e359eff0b3f">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL2" data-line-number="2"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR2" data-line-number="2"></td>

  <td>
    <span data-code-marker=" "><span></span></span></td>
</tr>




    <tr data-hunk="6f378f0997426e78c9d8399d3cc588022859dcd9e783758b867b0e359eff0b3f">
    <td></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR3" data-line-number="3"></td>

  <td>
    <span data-code-marker="+"><span></span>Searx is no longer maintained. Thank you for your support and all your contributions.</span></td>
</tr>




    <tr data-hunk="6f378f0997426e78c9d8399d3cc588022859dcd9e783758b867b0e359eff0b3f">
    <td></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR4" data-line-number="4"></td>

  <td>
    <span data-code-marker="+"><br></span></td>
</tr>




    <tr data-hunk="6f378f0997426e78c9d8399d3cc588022859dcd9e783758b867b0e359eff0b3f">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL3" data-line-number="3"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR5" data-line-number="5"></td>

  <td>
    <span data-code-marker=" ">.. <span>figure</span>:: <span>https://raw.githubusercontent.com/searx/searx/master/searx/static/themes/oscar/img/logo_searx_a.png</span></span></td>
</tr>




    <tr data-hunk="6f378f0997426e78c9d8399d3cc588022859dcd9e783758b867b0e359eff0b3f">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL4" data-line-number="4"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR6" data-line-number="6"></td>

  <td>
    <span data-code-marker=" ">   <span>:target:</span> <span>https://searx.github.io/searx/</span></span></td>
</tr>




    <tr data-hunk="6f378f0997426e78c9d8399d3cc588022859dcd9e783758b867b0e359eff0b3f">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL5" data-line-number="5"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR7" data-line-number="7"></td>

  <td>
    <span data-code-marker=" ">   <span>:alt:</span> <span>searX</span></span></td>
</tr>




      <tr data-position="8">
    <td colspan="2">
          <a href="#diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" id="expand-down-link-8-diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" aria-label="Expand Down" data-url="/searx/searx/blob_excerpt/bb3bb517e576a088542517fdd53e7aaf1bf9ef79?diff=unified&amp;direction=down&amp;in_wiki_context=&amp;last_left=5&amp;last_right=7&amp;left=73&amp;left_hunk_size=14&amp;mode=100644&amp;path=README.rst&amp;right=75&amp;right_hunk_size=7" data-left-range="6-38" data-right-range="8-40">
            
          </a>
          <tool-tip id="tooltip-d9d6f8ee-48ea-4512-803d-f98ef85df768" for="expand-down-link-8-diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand Down</tool-tip>
          <a href="#diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" id="expand-up-link-8-diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" aria-label="Expand Up" data-url="/searx/searx/blob_excerpt/bb3bb517e576a088542517fdd53e7aaf1bf9ef79?diff=unified&amp;direction=up&amp;in_wiki_context=&amp;last_left=5&amp;last_right=7&amp;left=73&amp;left_hunk_size=14&amp;mode=100644&amp;path=README.rst&amp;right=75&amp;right_hunk_size=7" data-left-range="39-72" data-right-range="41-74">
            
          </a>
          <tool-tip id="tooltip-bbe8a02c-981d-4773-b31c-70e312623edb" for="expand-up-link-8-diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand Up</tool-tip>
    </td>
    <td>@@ -73,14 +75,7 @@ Frequently asked questions</td>
  </tr>

    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL73" data-line-number="73"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR75" data-line-number="75"></td>

  <td>
    <span data-code-marker=" ">Is searx in maintenance mode?</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL74" data-line-number="74"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR76" data-line-number="76"></td>

  <td>
    <span data-code-marker=" "><span>#############################</span></span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL75" data-line-number="75"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR77" data-line-number="77"></td>

  <td>
    <span data-code-marker=" "><br></span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL76" data-line-number="76"></td>

    <td></td>

  <td>
    <span data-code-marker="-">No, searx is accepting new features, including new engines. We are also adding</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL77" data-line-number="77"></td>

    <td></td>

  <td>
    <span data-code-marker="-">engine fixes or other bug fixes when needed. Also, keep in mind that searx is</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL78" data-line-number="78"></td>

    <td></td>

  <td>
    <span data-code-marker="-">maintained by volunteers who work in their free time. So some changes might take</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL79" data-line-number="79"></td>

    <td></td>

  <td>
    <span data-code-marker="-">some time to be merged.</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL80" data-line-number="80"></td>

    <td></td>

  <td>
    <span data-code-marker="-"><br></span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL81" data-line-number="81"></td>

    <td></td>

  <td>
    <span data-code-marker="-">We reject features that might violate the privacy of users. If you really want</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL82" data-line-number="82"></td>

    <td></td>

  <td>
    <span data-code-marker="-">such a feature, it must be disabled by default and warn users about the consequances</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL83" data-line-number="83"></td>

    <td></td>

  <td>
    <span data-code-marker="-">of turning it off.</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR78" data-line-number="78"></td>

  <td>
    <span data-code-marker="+">No, searx is no longer maintained.</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL84" data-line-number="84"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR79" data-line-number="79"></td>

  <td>
    <span data-code-marker=" "><br></span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL85" data-line-number="85"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR80" data-line-number="80"></td>

  <td>
    <span data-code-marker=" ">What is the difference between searx and SearxNG?</span></td>
</tr>




    <tr data-hunk="12313f8a79c3a2ffff987f45b23ad87247e6408b679ce413bdaa6a8308187073">
    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fL86" data-line-number="86"></td>

    <td id="diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168fR81" data-line-number="81"></td>

  <td>
    <span data-code-marker=" "><span>#################################################</span></span></td>
</tr>




  <tr data-position="">
    <td colspan="2">
          <a href="#diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" id="expand-down-link--diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" aria-label="Expand Down" data-url="/searx/searx/blob_excerpt/bb3bb517e576a088542517fdd53e7aaf1bf9ef79?diff=unified&amp;direction=down&amp;in_wiki_context=&amp;last_left=86&amp;last_right=81&amp;left=127&amp;left_hunk_size=&amp;mode=100644&amp;path=README.rst&amp;right=127&amp;right_hunk_size=" data-left-range="87-126" data-right-range="82-126">
            
          </a>
          <tool-tip id="tooltip-c0fe003d-5fb8-4448-b985-887d82f7958a" for="expand-down-link--diff-7b3ed02bc73dc06b7db906cf97aa91dec2b2eb21f2d92bc5caa761df5bbc168f" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand Down</tool-tip>
    </td>
    <td></td>
  </tr>


              </div></div>]]></description>
        </item>
    </channel>
</rss>