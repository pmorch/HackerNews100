(ignoring known css parsing error)
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 10 Jun 2025 20:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Android 16 Is Here (106 pts)]]></title>
            <link>https://blog.google/products/android/android-16/</link>
            <guid>44239812</guid>
            <pubDate>Tue, 10 Jun 2025 18:29:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.google/products/android/android-16/">https://blog.google/products/android/android-16/</a>, See on <a href="https://news.ycombinator.com/item?id=44239812">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="jump-content" tabindex="-1">
            

    
    

    <article>

    
    





    

    
      

<div data-analytics-module="{
    &quot;module_name&quot;: &quot;Hero Menu&quot;,
    &quot;section_header&quot;: &quot;Android 16 is here&quot;
  }">
      <div>
          
            <p>Jun 10, 2025</p>
          
          
            <p data-reading-time-render="">[[read-time]] min read</p>
          
        </div>
      
        <p>
          Check out more helpful and streamlined notifications, multitasking tools to keep you in the flow, enhanced support for hearing devices and more.
        </p>
      
    </div>

    

    
      










<div>
    <figure>
      <div>
        <p><img alt="Green sixteen numbers in the middle surrounded by blue, green and orange confetti. The sixteen is framed by visuals of a food order notification, a tablet screen with a multiple windows like a desktop, a notification with text Switch to hearing aid mic?" data-component="uni-progressive-image" fetchpriority="high" height="150px" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Android_16_blog_header.width-200.format-webp.webp" width="360px" data-sizes="(max-width: 1023px) 100vw,(min-width: 1024px and max-width: 1259) 80vw, 1046px" data-srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Android_16_blog_header.width-800.format-webp.webp 800w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Android_16_blog_header.width-1200.format-webp.webp 1200w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Android_16_blog_header.width-1600.format-webp.webp 1600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Android_16_blog_header.width-2200.format-webp.webp 2200w">
        </p>
      </div>
      
    </figure>
  </div>






    

    
    <div data-reading-time="true" data-component="uni-article-body">

            
              





<uni-article-speakable page-title="Android 16 is here" listen-to-article="Listen to article" data-date-modified="2025-06-10T18:00:03.192411+00:00" data-tracking-ids="G-HGNBTNCHCQ,G-6NKTLKV14N" data-voice-list="en.ioh-pngnat:Cyan,en.usb-pngnat:Lime" data-script-src="https://www.gstatic.com/readaloud/player/web/api/js/api.js"></uni-article-speakable>

            

            
            
<!--article text-->

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Android 16 is here&quot;
         }"><p data-block-key="eqnb7">Today, we’re bringing you Android 16, rolling out first to supported Pixel devices with more phone brands to come later this year. This is the <a href="https://android-developers.googleblog.com/2024/10/android-sdk-release-update.html">earliest</a> Android has launched a major release in the last few years, which ensures you get the latest updates as soon as possible on your devices.</p><p data-block-key="35du0">Android 16 lays the foundation for our new <a href="https://blog.google/products/android/material-3-expressive-android-wearos-launch/">Material 3 Expressive</a> design, with features that make Android more accessible and easy to use. Let’s take a look at what’s new:</p><h2 data-block-key="fq1jr">Streamlined and up-to-date notifications</h2><p data-block-key="1ueir">Waiting for your food delivery to get to your house? Instead of opening your delivery app every 5 minutes, live updates keep you informed in real-time. These live updates are starting with compatible ride-share and food delivery apps. We’re working together with these app partners to bring this capability to the Android ecosystem, including in Samsung’s Now Bar and OPPO and OnePlus’ Live Alerts.</p></div>
  

  
    






<uni-image-full-width alignment="full" alt-text="Phone screen showing the action of unlocking the phone, tapping on the top left of the screen to open a notification of an Uber Eats update that shows status bar of the order." external-image="" or-mp4-video-title="Live updates" or-mp4-video-url="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Live_updates.mp4" section-header="Android 16 is here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
    
  
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Android 16 is here&quot;
         }">
        <p data-block-key="eqnb7">We’re also force-grouping notifications that come from a single app to help reduce information overload. Your notifications will automatically be grouped together to keep things looking tight and organized.</p>
      </div>
  

  
    






<uni-image-full-width alignment="full" alt-text="A rounded corner rectangular notification box with a Google Home icon on the left and the text: Home, now, package seen front door, break, matt seen front door, break, animal seen outside back yard." external-image="" or-mp4-video-title="" or-mp4-video-url="" section-header="Android 16 is here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
    <p><img alt="A rounded corner rectangular notification box with a Google Home icon on the left and the text: Home, now, package seen front door, break, matt seen front door, break, animal seen outside back yard." src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Notifications_grouping.width-100.format-webp.webp" loading="lazy" data-loading="{
            &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Notifications_grouping.width-500.format-webp.webp&quot;,
            &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Notifications_grouping.width-1000.format-webp.webp&quot;
          }">
    </p>
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Android 16 is here&quot;
         }"><h2 data-block-key="eqnb7">Clearer, simpler calling with hearing devices</h2><p data-block-key="6vl6c">Android 16 provides significant enhancements for people who use hearing aids
<a data-ga4-analytics-superscript-click="" data-target="inline text" href="#footnote-1" id="footnote-source-1"><sup>1</sup></a>
. Current LE audio hearing devices use their built-in front-facing mics for audio input. Those mics are designed to pick up the sound of the person you're speaking to — not the sound of your voice. Now you can switch to using your phone's microphone for clearer calls in noisy environments.</p></div>
  

  
    






<uni-image-full-width alignment="full" alt-text="Phone screen with an active call with a person with black hair and name angana ghosh. Call duration is shown as 58 seconds. The icon for Anna’s Hearing Aids is lit up and there is a notification at the top of the screen prompting the user to switch to hearing aid mic for hands free calling on the go." external-image="" or-mp4-video-title="" or-mp4-video-url="" section-header="Android 16 is here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
    <p><img alt="Phone screen with an active call with a person with black hair and name angana ghosh. Call duration is shown as 58 seconds. The icon for Anna’s Hearing Aids is lit up and there is a notification at the top of the screen prompting the user to switch to hearing aid mic for hands free calling on the go." src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Change_mic_hearing_devices.width-100.format-webp.webp" loading="lazy" data-loading="{
            &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Change_mic_hearing_devices.width-500.format-webp.webp&quot;,
            &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Change_mic_hearing_devices.width-1000.format-webp.webp&quot;
          }">
    </p>
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Android 16 is here&quot;
         }">
        <p data-block-key="eqnb7">We’re also releasing native control for hearing devices in Android 16 for easier access and a more consistent experience. This means you can now control things like volume on your hearing devices right from your Android phone.</p>
      </div>
  

  
    






<uni-image-full-width alignment="full" alt-text="Phone screen showing the window for hearing aids control with the top lit up with Anna’s Hearing Aids Active and settings icon. Below shows different settings including a Preset for All-Around and default microphone for calls. The last section includes Surroundings and a control bar for left and right." external-image="" or-mp4-video-title="" or-mp4-video-url="" section-header="Android 16 is here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
    <p><img alt="Phone screen showing the window for hearing aids control with the top lit up with Anna’s Hearing Aids Active and settings icon. Below shows different settings including a Preset for All-Around and default microphone for calls. The last section includes Surroundings and a control bar for left and right." src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Mic_control_hearing_devices.width-100.format-webp.webp" loading="lazy" data-loading="{
            &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Mic_control_hearing_devices.width-500.format-webp.webp&quot;,
            &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Mic_control_hearing_devices.width-1000.format-webp.webp&quot;
          }">
    </p>
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Android 16 is here&quot;
         }"><h2 data-block-key="eqnb7">Stronger security in a single tap</h2><p data-block-key="ci737">With Android 16, you can now activate <a href="https://security.googleblog.com/2025/05/advanced-protection-mobile-devices.html">Advanced Protection</a>
<a data-ga4-analytics-superscript-click="" data-target="inline text" href="#footnote-2" id="footnote-source-2"><sup>2</sup></a>
, Google’s strongest mobile device protection. It enables an array of robust device security features that protect you from online attacks, harmful apps, unsafe websites, scam calls and more. Whether you’re a public figure or you just prioritize security, Advanced Protection gives you greater peace of mind that you’re protected against the most sophisticated attacks.</p></div>
  

  
    






<uni-image-full-width alignment="full" alt-text="A phone screen scrolling through the Advanced Protection page with a list of capabilities that are activated when Device Protection is turned on including Device Safety, Apps, Networks and Web." external-image="" or-mp4-video-title="Advanced Protection" or-mp4-video-url="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Advanced_protection.mp4" section-header="Android 16 is here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Android 16 is here&quot;
         }"><h2 data-block-key="eqnb7">Enhanced productivity for tablets</h2><p data-block-key="5ospg">Samsung <a href="https://www.samsung.com/us/apps/dex/">DeX</a> has helped maximize productivity on phones, foldables and tablets for years. In Android 16, we worked closely with Samsung to develop desktop windowing, a new way to interact with your apps and content on large-screen devices. In addition to the single app and split-screen modes, you can open, move and resize multiple app windows in a single screen, just like a desktop. This makes it easier to work across apps. Android 16’s desktop windowing will roll out later this year on compatible devices.</p></div>
  

  
    






<uni-image-full-width alignment="full" alt-text="A horizontal tablet screen showing a Chrome web browser window being tapped and pulled into a smaller window, with calendar and email opened as separate windows overlaid like on a desktop." external-image="" or-mp4-video-title="Desktop windowing" or-mp4-video-url="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Desktop_windowing.mp4" section-header="Android 16 is here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Android 16 is here&quot;
         }">
        <p data-block-key="eqnb7">Later this year, we’re also launching custom keyboard shortcuts, so you can create your own combination of hotkeys, and taskbar overflow, which provides a simple, visual way for you to find the app you need when the taskbar is full. Future updates will also bring even more productivity enhancements to Android, allowing you to connect tablets and phones to an external display for an expanded desktop experience, and <a href="https://android-developers.googleblog.com/2025/06/developer-preview-enhanced-android-desktop-experiences-connected-displays.html">developers can begin testing</a> those features starting today.</p>
      </div>
  

  
    






<uni-image-full-width alignment="full" alt-text="Two tablets side by side. The left tablet shows a window with the ability to customize shortcuts on your system and the right tablet shows multiple windows overlaid, with a bar ar the bottom showing all the different windows." external-image="" or-mp4-video-title="" or-mp4-video-url="" section-header="Android 16 is here" custom-class="image-full-width--constrained-width uni-component-spacing">
  
  
    <p><img alt="Two tablets side by side. The left tablet shows a window with the ability to customize shortcuts on your system and the right tablet shows multiple windows overlaid, with a bar ar the bottom showing all the different windows." src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Taskbar_and_keyboard.width-100.format-webp.webp" loading="lazy" data-loading="{
            &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Taskbar_and_keyboard.width-500.format-webp.webp&quot;,
            &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Taskbar_and_keyboard.width-1000.format-webp.webp&quot;
          }">
    </p>
  
</uni-image-full-width>


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Android 16 is here&quot;
         }"><p data-block-key="eqnb7">There are many more features to explore with Android 16 — like HDR screenshots, adaptive refresh rate, identity check and others — as well as additional updates coming to <a href="https://blog.google/products/android/new-android-features-june-2025/">Android</a> and <a href="https://blog.google/products/pixel/pixel-drop-june-2025/">Pixel</a> devices today. And later this year, more Material 3 Expressive design updates are coming to Android 16 and Wear OS 6 on Pixel devices.</p><p data-block-key="d8sqs">See all the Android 16 features at <a href="http://android.com/16">Android.com/16</a>.</p></div>
  


            
            

            
              




            
          </div>
  </article>
  



  



  



  

  


<div data-component="uni-related-articles" aria-roledescription="carousel" data-analytics-module="{
    &quot;module_name&quot;: &quot;Article Footer Related Stories&quot;,
    &quot;section_header&quot;: &quot;Related stories&quot;
  }">
        <h3>
          <p>
            Related stories
          </p>
        </h3>
      </div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Low-background Steel: content without AI contamination (101 pts)]]></title>
            <link>https://blog.jgc.org/2025/06/low-background-steel-content-without-ai.html</link>
            <guid>44239481</guid>
            <pubDate>Tue, 10 Jun 2025 17:55:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.jgc.org/2025/06/low-background-steel-content-without-ai.html">https://blog.jgc.org/2025/06/low-background-steel-content-without-ai.html</a>, See on <a href="https://news.ycombinator.com/item?id=44239481">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-6718543456445220885" itemprop="description articleBody">
<p>Somehow I forgot to blog my site: <a href="https://lowbackgroundsteel.ai/">https://lowbackgroundsteel.ai/</a>. I created it back in March 2023 as a clearinghouse for online resources that hadn't been contaminated with AI-generated content.&nbsp;</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijWm8XoAHKZn2-fYIvZZXJFJLv4ASg4T0nmvExAee9kk32vI4V3gln9PpYKQBfJkMsae-fJvuo1A_cRI-ZX6E5i0f92RCHm5MXtZNHZr3ki3f3sX4n9HtlwwZCQVVGWigHYLhTJbz-pZQvRm0O5N6If_LqG6Cw2A9InEtGuBD4-mPqRtdc7NUBMQ/s2370/lbs.jpeg"><img data-original-height="2370" data-original-width="2066" height="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijWm8XoAHKZn2-fYIvZZXJFJLv4ASg4T0nmvExAee9kk32vI4V3gln9PpYKQBfJkMsae-fJvuo1A_cRI-ZX6E5i0f92RCHm5MXtZNHZr3ki3f3sX4n9HtlwwZCQVVGWigHYLhTJbz-pZQvRm0O5N6If_LqG6Cw2A9InEtGuBD4-mPqRtdc7NUBMQ/w558-h640/lbs.jpeg" width="558"></a></p><p><a href="https://en.wikipedia.org/wiki/Low-background_steel">Low-background Steel </a>(and lead) is a type of metal uncontaminated by radioactive isotopes from nuclear testing. That steel and lead is usually recovered from ships that sunk before the Trinity Test in 1945. The site is about uncontaminated content that I'm terming "Low-background Steel". The idea is to point to sources of text, images and video that were created prior to the explosion of AI-generated content that occurred in 2022.</p><p>It currently contains pointers to a Wikipedia dump from prior to the release of ChatGPT, the Arctic Code Vault, Project Gutenberg, and more.</p><p>If you know of other sources of non-contaminated content plus <a href="https://lowbackgroundsteel.ai/submit">submit them</a>!</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI dropped the price of o3 by 80% (176 pts)]]></title>
            <link>https://twitter.com/sama/status/1932434606558462459</link>
            <guid>44239359</guid>
            <pubDate>Tue, 10 Jun 2025 17:41:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/sama/status/1932434606558462459">https://twitter.com/sama/status/1932434606558462459</a>, See on <a href="https://news.ycombinator.com/item?id=44239359">Hacker News</a></p>
Couldn't get https://twitter.com/sama/status/1932434606558462459: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Show HN: Chili3d – A open-source, browser-based 3D CAD application (167 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=44238171</link>
            <guid>44238171</guid>
            <pubDate>Tue, 10 Jun 2025 15:39:57 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=44238171">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="44238171">
      <td><span></span></td>      <td><center><a id="up_44238171" href="https://news.ycombinator.com/vote?id=44238171&amp;how=up&amp;goto=item%3Fid%3D44238171"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=44238171">Show HN: Chili3d – A open-source, browser-based 3D CAD application</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_44238171">112 points</span> by <a href="https://news.ycombinator.com/user?id=xiange">xiange</a> <span title="2025-06-10T15:39:57 1749569997"><a href="https://news.ycombinator.com/item?id=44238171">2 hours ago</a></span> <span id="unv_44238171"></span> | <a href="https://news.ycombinator.com/hide?id=44238171&amp;goto=item%3Fid%3D44238171">hide</a> | <a href="https://hn.algolia.com/?query=Show%20HN%3A%20Chili3d%20%E2%80%93%20A%20open-source%2C%20browser-based%203D%20CAD%20application&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=44238171&amp;auth=0e8832f8414e75ac011f4abd7df1e72081b5cfa3">favorite</a> | <a href="https://news.ycombinator.com/item?id=44238171">24&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>I'm currently developing Chili3D, an open-source, browser-based 3D CAD application. By compiling OpenCascade to WebAssembly and integrating Three.js, Chili3D delivers near-native performance for powerful online modeling, editing, and rendering—all without local installation. Access it here:</p><p><a href="https://github.com/xiangechen/chili3d">https://github.com/xiangechen/chili3d</a></p><p>Features:</p><p>Modeling Tools: Create basic shapes (boxes, cylinders, cones, etc.), 2D sketches (lines, arcs, circles, etc.), and perform advanced operations (boolean operations, extrusion, revolution, etc.).</p><p>Snapping and Tracking: Precisely snap to geometric features, workplanes, and track axes for accurate alignment.</p><p>Editing Tools: Modify (chamfer, fillet, trim, etc.), transform (move, rotate, mirror), and perform advanced edits (feature removal, sub-shape manipulation).</p><p>Measurement Tools: Measure angles and lengths, and calculate sums of length, area, and volume.</p><p>Document Management: Create, open, and save documents, with full undo/redo history and support for importing/exporting STEP, IGES, BREP formats.</p><p>User Interface: Office-style interface with contextual command organization, hierarchical assembly management, dynamic workplanes, and 3D viewport controls.</p><p>Multi-Language Support: Built-in i18n support with current languages including Chinese and English.</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Malleable software: Restoring user agency in a world of locked-down apps (104 pts)]]></title>
            <link>https://www.inkandswitch.com/essay/malleable-software/</link>
            <guid>44237881</guid>
            <pubDate>Tue, 10 Jun 2025 15:16:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.inkandswitch.com/essay/malleable-software/">https://www.inkandswitch.com/essay/malleable-software/</a>, See on <a href="https://news.ycombinator.com/item?id=44237881">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>

<h2 id="motivation"><a href="#motivation">Motivation</a></h2>
<h3 id="we-want-to-adapt-our-environments"><a href="#we-want-to-adapt-our-environments">We want to adapt our environments</a></h3>
<p>Environments matter. To do our best work and live our best lives, we need spaces that let us each express our unique potential.</p>
<p>A guitar maker sets up their workshop with their saws, hammers, chisels and files arranged just so. They can also build new tools as needed to achieve the best result—a wooden block as a support, or a pair of pliers sanded down into the right shape.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/guitar-workshop.jpg" alt="guitar-workshop.jpg"></p>
</figure>
<p>Over the years, a home cook gradually assembles a combination of knives, cutting boards, and pots and pans, finding the ones that work best for them. They can install hooks on the ceiling and move shelves around to support their workflow—whether that’s cooking weekday dinners or hosting elaborate weekend cookouts.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/kitchen.jpg" alt="kitchen.jpg"></p>
</figure>
<p>These are everyday situations. <strong>In the physical world, the act of crafting our environments comes naturally, because physical reality is malleable.</strong></p>
<p>Many small tweaks—taping a post-it note to the wall, rearranging some drawers, moving a piece of furniture—can be done instantly without asking anyone’s permission. We can also take on larger changes that require more effort and skill, like building a workshop or renovating a kitchen. And should we lack those skills ourselves, we can recruit help from craftspeople in our local communities.</p>
<p>When we work and live in a physical space that we control, we tend to evolve it to suit our own needs. As Stewart Brand writes in his book <a href="https://en.wikipedia.org/wiki/How_Buildings_Learn">How Buildings Learn</a>: “Age plus adaptivity is what makes a building come to be loved. The building learns from its occupants, and they learn from it.”</p>
<h3 id="mass-produced-software-is-too-rigid"><a href="#mass-produced-software-is-too-rigid">Mass-produced software is too rigid</a></h3>
<p>These days, we spend more and more of our time in environments built from code, not atoms. We’ve gained many capabilities in this shift—we can collaborate instantly across continents and search thousands of files in an instant. But <strong>we’re also losing something important: the ability to adapt our environments and make them our own.</strong></p>
<p>Here’s an example. One of the authors worked on a software team that tracked its work with index cards taped to a wall. The team would constantly evolve the tracker—tape lines moved; checklists appeared; special zones of cards emerged around the main grid. The fluidity of the tool encouraged fluidity of process.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/wall-board.jpg" alt="wall-board.jpg"></p>
<figcaption>A wall of index cards is a malleable medium for managing software development.</figcaption>
</figure>
<p>Later, the team switched to a web-based issue tracker to support remote collaborators. Now there wasn’t a way to model or display a special zone of cards, so the team abandoned that part of their process.  Further process changes also ground to a halt. Before, new ideas took minutes to try; now they could take hours of wrangling configurations, if they were possible at all. <strong>Computerizing work led to a loss of agency.</strong></p>
<p>The rigidity of software isn’t just a minor inconvenience. It can seriously impede people doing important work. The doctor and writer Atul Gawande <a href="https://www.newyorker.com/magazine/2018/11/12/why-doctors-hate-their-computers">has written about</a> how computerization in the medical profession is leading to record levels of burnout. For instance, doctors would once skip irrelevant fields when filling out paper forms; now the software forces them to fill in those fields, and they have no power to edit those software rules. As Gawande says of one doctor: “Spending the extra time didn’t anger her. The pointlessness of it did.”</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/epic.jpg" alt="epic.jpg"></p>
<figcaption>Inflexible electronic medical records systems are driving doctors to burnout.</figcaption>
</figure>
<p>When you face a situation where software doesn’t meet your needs, you might try giving feedback to the developers—but that usually doesn’t result in immediate action. <strong>When different users have different needs, a centralized development team can’t possibly address everyone’s problems.</strong> And for that matter, when a developer does try to cram too many solutions into a single product, the result is a bloated mess. To avoid this trap, good product teams learn to decline most user requests, leaving a long tail of niche needs unserved.</p>
<p>It may seem inevitable that our specific requirements aren’t served by our software—but that’s only because we’ve taken for granted that software is controlled by centralized development teams. What if we were to shift more control into the hands of users who know their own needs?</p>
<p>Gawande tells a story of a neurosurgeon who worked with an IT analyst to adapt his department’s medical records system. “Before long, they had built a faster, more intuitive interface, designed specifically for neurosurgery office visits.” The requirements were driven by the needs of <em>their specific department</em>, not the needs of every doctor in the country. Beyond the direct productivity benefit, the physicians felt more in control of their tools—an antidote to burnout.</p>
<p>As inspiring as this story is, it’s more the exception than the rule, because <strong>the tools and infrastructure we use to deploy software treat users as passive recipients rather than active co-creators.</strong> Software is organized into monolithic applications rather than flexible remixable toolkits. Customization requires programming skills that most people don’t have—and besides, most software is closed source. Software doesn’t ship to users with the tools to edit the software. App stores are designed for companies distributing software to consumers, not amateurs sharing tools with their friends. This is a system of industrial mass production, not small-scale craft.</p>
<p>To be fair, mass-produced software has delivered many benefits. We can access a vast array of highly polished applications at reasonable prices. Software has made progress in reliability, accessibility, and security. Developers have created business models that can sustainably pay teams to deliver continuously improving software.</p>
<p>But as these stories and countless other examples show, inflexible mass-produced software also gets in the way. The more different you are from the average user, the more the benefits of customization outweigh the benefits of professional polish. Everyone is unique in some way—perhaps you have strong opinions about tools for writing, making music, having discussions, or planning projects. When you have specific needs, agency matters.</p>
<h3 id="our-goal-malleable-software"><a href="#our-goal-malleable-software">Our goal: malleable software</a></h3>
<p>We envision a new kind of computing ecosystem that gives users agency as co-creators. We call this idea malleable software—<strong>a software ecosystem where anyone can adapt their tools to their needs with minimal friction.</strong></p>

<ul>
<li>By “software ecosystem”, we mean the broad technical and cultural environment surrounding software and its users. Malleability isn’t a narrow technical problem.</li>
<li>By “anyone”, we mean that broad accessibility is the goal. And while individual self-sufficiency is useful to cultivate, cooperating with local community is also valuable.</li>
<li>When we say “adapting tools” we include a whole range of customizations, from making small tweaks to existing software, to deep renovations, to creating new tools that work well in coordination with existing ones. Adaptation doesn’t imply starting over from scratch.</li>
<li>Finally, “minimal friction” is key. Editing our tools should be fast. It should feel light. At best, it should be something we can do in the moment when a need arises, so we can get back to the task at hand.</li>
</ul>
<h3 id="existing-approaches"><a href="#existing-approaches">Existing approaches</a></h3>
<p>You may be wondering: what about settings or plugins? There are indeed many techniques for customizing software that deserve to be celebrated. However, they also have limits that prevent them from fully achieving the goals we’ve laid out above.</p>
<h4 id="settings"><a href="#settings">Settings</a></h4>
<p>Settings are a common way to change the way an application behaves. If the right setting exists, you can just toggle a checkbox and move on with your day.</p>
<p>But settings only offer controls that the application developers have thought to expose, leaving you stuck if there’s not a setting that does what you want. Settings also tend to become long lists of disjointed checkboxes without a coherent mental model tying them together.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/settings.png" alt="settings.png"></p>
<figcaption>
<p>Settings allow for certain customizations chosen in advance by an application developer.</p>
</figcaption>
</figure>
<h4 id="plugins"><a href="#plugins">Plugins</a></h4>
<p>One way to scale beyond the bandwidth of a central developer is to allow third-party plugins that extend the behavior of an application. A good plugin system makes it easy for users to get started customizing with a minimum of effort, because they can install plugins that other people have created. A plugin API also has the key benefit of stabilizing the contract between the underlying application and various extensions, helping with ongoing maintenance.</p>
<p>However, <strong>plugin systems still can only edit an app’s behavior in specific authorized ways.</strong> If there’s not a plugin surface available for a given customization, the user is out of luck. (In fact, most applications have no plugin API at all, because it’s hard work to design a good one!)</p>
<p>There are other problems too. Going from installing plugins to <em>making</em> one is a chasm that’s hard to cross. And each app has its own distinct plugin system, making it typically impossible to share plugins across different apps.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/obsidian-plugins.png" alt="obsidian-plugins.png"></p>
<figcaption>The Obsidian Markdown editor offers a rich ecosystem of community plugins for extending the editor's behavior.</figcaption>
</figure>
<h4 id="modding"><a href="#modding">Modding</a></h4>
<p>When settings and official extension APIs don’t go far enough (or aren’t provided in the first place), users can sometimes take control through permissionless <em>modding</em>. For instance, browser extensions can intervene in a website’s user interface and inject new client-side behavior without needing any hooks to be exposed by the original application developer.</p>

<p>Permissionless mods apply in a much broader range of scenarios than officially supported plugin APIs. In fact, they can even be used when the original developer is actively opposed to a given type of extension—ad blockers prioritize the interests of users over the interests of websites.</p>
<p>Mods face their own limitations. They can require tedious reverse-engineering to create. They are often difficult to maintain as the underlying application evolves. Different mods on the same app often don’t work together cleanly.</p>
<p>The limits of the underlying platform can also limit what they’re able to do—for example, <strong>browser extensions can’t modify server-side behavior</strong>, severely limiting the features they can provide. Also, much like other kinds of plugins, unsupported mods have a wide chasm between <em>installing</em> and <em>creating</em>. For instance, to make a browser extension, you need to leave the browser, write code, and distribute a packaged code artifact. (Later on we’ll discuss some strategies to avoid these steps.)</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/extension.png" alt="extension.png"></p>
<figcaption>
    An example of a browser extension serving a niche need: BoA Checklist adds a persistent checkbox next to each transaction on the Bank of America website, to track if you've already reviewed that transaction.
</figcaption>
</figure>
<h4 id="open-source"><a href="#open-source">Open source</a></h4>
<p>The open source software movement promotes the idea of distributing source code so that users of software can own their software, contribute back to it, and if needed create their own version that better meets their own needs. This has been a positive force for the world, and represents an important ingredient for malleability.</p>
<p>But having access to edit the code doesn’t mean minimal friction. <strong>Modifying a serious open source codebase usually requires significant expertise and effort</strong>. This applies even for making a tiny change, like changing the color of a button . Even for a skilled programmer, setting up a development environment and getting acquainted with a codebase represents enough of a hurdle that it’s not casually pursued in the moment.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/pull-requests.png" alt="pull-requests.png"></p>
<figcaption>Users can propose changes to an open source project on GitHub.</figcaption>
</figure>
<h4 id="ai-assisted-coding"><a href="#ai-assisted-coding">AI-assisted coding</a></h4>
<p>Finally, it’s worth addressing a hot topic of the moment. Will AI tools automatically make malleable software a reality?</p>
<p>Historically, one of the biggest puzzles in democratizing the creation of software was figuring out how to enable regular people to write computer programs. Many approaches have been tried: programming languages with friendlier syntax or simpler semantics; programming-by-demonstration macro recording systems; visual live programming environments, and more.</p>
<p>Today, large language models offer a new approach: to take fuzzy ideas expressed in natural language and automatically turn them into code. There is now momentum towards a world where anyone can generate a web application from a chat, without needing any programming experience. There are new examples every day, from a journalist making <a href="https://www.nytimes.com/2025/02/27/technology/personaltech/vibecoding-ai-software-programming.html">an app for generating school lunch ideas</a> to an environmental studies student making <a href="https://www.wsj.com/tech/ai/your-next-favorite-app-the-one-you-make-yourself-a6a84f5f">a website for tracking reforestation efforts</a>. We’ve personally found it useful to build our own software tools with AI, such as a specialized <a href="https://www.geoffreylitt.com/2023/07/25/building-personal-tools-on-the-fly-with-llms">Japanese translation app</a>, and a minimal workout timer with a custom workout plan:</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/claude-workout-artifact.png" alt="claude-workout-artifact.png"></p>
<figcaption>Building a workout timer tool using AI in Claude Artifacts</figcaption>
</figure>
<p>We think these developments hold exciting potential, and represent a good reason to pursue malleable software at this moment. But at the same time, <strong>AI code generation alone does not address all the barriers to malleability.</strong> Even if we presume that every computer user could perfectly write and edit code, that still leaves open some big questions.</p>
<p>How can users tweak the <em>existing</em> tools they’ve installed, rather than just making new siloed applications? How can AI-generated tools compose with one another to build up larger workflows over shared data? And how can we let users take more direct, precise control over tweaking their software, without needing to resort to AI coding for even the tiniest change? None of these questions are addressed by products that generate a cloud-hosted application from a prompt.</p>
<p><strong>Bringing AI coding tools into today’s software ecosystem is like bringing a talented sous chef to a food court.</strong> If you’re used purchasing meals from a menu, a skilled chef can’t do much to help you. Similarly, if you’re using closed-source software from an app store, an AI coding assistant can’t do very much to help you as a user. To fully take advantage of the capabilities of AI, we need to move past the food court to something more like a kitchen—a site of open-ended creation.</p>
<hr>
<p>Reshaping the foundations of computing around user agency is an ambitious goal. Luckily, since the dawn of personal computing, many people have proposed powerful ideas for achieving it.</p>
<p>In the next few sections, we’ll summarize three design patterns that we see as essential for achieving malleable software. These aren’t precise recipes for how to solve the problem. But we believe they are important ways of thinking that are underrepresented in today’s software world and will form part of the solution to achieving malleable software.</p>

<h2 id="a-gentle-slope-from-user-to-creator"><a href="#a-gentle-slope-from-user-to-creator">A gentle slope from user to creator</a></h2>
<p>Malleable software does not imply everybody creating all of their own tools from scratch. That would be a waste of time, since many off-the-shelf tools are already pretty close to serving our needs, with only minor tweaks needed.</p>
<p>A more sensible approach is to start out using existing software tools built by other people or companies, but to have the <em>option</em> of modifying these tools as you discover ways that they don’t meet your needs. You can start out as a passive user, and <em>gradually</em> become an editor and a creator.</p>
<p>In a 1990 paper <a href="https://dl.acm.org/doi/10.1145/97243.97271">User-Tailorable Systems: Pressing the Issues with Buttons</a>, Allan MacLean and his collaborators at EuroPARC propose a powerful mental model for designing software systems that invite users to gradually become creators.</p>
<p>Consider this chart where the x-axis represents the power or depth of a customization, and the y-axis represents the level of skill required to perform that customization. In this model, whenever someone needs to suddenly learn a lot more in order to achieve the next level of depth of customization, that appear as a vertical “cliff”.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/maclean-cliffs.png" alt="maclean-cliffs.png"></p>
<figcaption>Going from changing settings to full programming is a sharp "cliff" that's hard to scale. (figure from MacLean et al)</figcaption>
</figure>
<p>To flatten out the cliffs and encourage smooth progress, MacLean et al. proposed a design goal: <strong>each incremental increase in tailoring power should only require a small incremental investment of learning and skill.</strong> A system that follows this rule can be visualized as having a “gentle slope” free of cliffs.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/maclean-slope.png" alt="maclean-slope.png"></p>
<figcaption>A gentle slope of tailorability, made up of many different customization techniques. (figure from MacLean et al)</figcaption>
</figure>
<p>The researchers demonstrated this principle in an automation system called Buttons. To start out, users could move buttons around and change the text or color. Slightly further up the slope, users could edit variable values or use a toolkit to create simple UIs. Finally, at the top of the slope, users could create new behaviors by doing Lisp programming. The key point was that <strong>each customization could be done with the simplest technique possible, leaving full programming only as a last resort when absolutely needed.</strong></p>

<p>Many successful environments for end-user malleability employ the gentle slope pattern. Consider spreadsheets as an example. When someone sends you a complex spreadsheet, you can start by just viewing it, or editing a cell marked as an input. Next you might try changing some formatting or add some labels. As you get deeper into using the spreadsheet, you might start tweaking formulas or adding your own new cells. A spreadsheet can start out feeling like an “application”—an artifact that someone else put together, with a few knobs intended for you to control—but unlike an application, you can smoothly progress to deeper customizations.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/spreadsheet-slope.png" alt="spreadsheet-slope.png"></p>
<figcaption>Spreadsheets offer a gentle slope of customization, from use to deeper modification.</figcaption>
</figure>
<p>Spreadsheets show us a couple useful qualities for achieving a gentle slope. First, It has an <a href="https://www.inkandswitch.com/end-user-programming/#in-place-toolchain">in-place toolchain</a>: everyone using a spreadsheet is running the full editor. When you want to dive deeper into modifying a spreadsheet, there’s no need to install or open a separate development environment.</p>
<p>Also, spreadsheets often have a scrappy aesthetic. It can <em>feel</em> safer to change a spreadsheet, compared to the pixel-perfect polish of a professionally designed application.</p>

<p>Another way to achieve a gentle slope is through explicit modes. HyperCard, a Mac program from the 1980s in which users could create stacks of “cards”, offered “levels” which governed what actions were available to the user at any time.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/hypercard-levels.png" alt="hypercard-levels.png"></p>
<figcaption>In HyperCard, users could select a "level" to restrict their editing capabilities.</figcaption>
</figure>
<p>Level 1 was read-only; Levels 2 and 3 supported text and graphical editing with direct manipulation interactions; Level 4 added creating buttons and linking things together; Level 5 unlocked full programming using a scripting language called HyperTalk. These explicit modes served as guardrails, allowing users to safely explore without unintended consequences.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/hypercard-slope.png" alt="hypercard-slope.png"></p>
<figcaption>Each level in HyperCard represents a modest step up in power and skill.</figcaption>
</figure>
<p>Finally, let’s see what it looks like to smooth out a cliff. As we discussed earlier, there’s a big chasm from installing a browser extension to building one yourself.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/browser-extension-cliff.png" alt="browser-extension-cliff.png"></p>
<figcaption>Going from installing a browser extension to making one is a steep cliff. It requires leaving the browser and doing involved programming.</figcaption>
</figure>
<p>We can achieve a much smoother slope if we incorporate lighter weight techniques for customizing websites. Tools like <a href="https://userstyles.org/">Stylish</a> and <a href="https://resources.arc.net/hc/en-us/articles/19212718608151-Boosts-Customize-Any-Website">Arc Boosts</a> let users create and share custom styling themes from within the browser. Further up the curve, <a href="https://citeseerx.ist.psu.edu/document?repid=rep1&amp;type=pdf&amp;doi=7eb0bba253a1d494544a15c3df921dd5a8f2401f">macro systems</a> and let users record and replay actions taken on websites. And if the user knows a little bit of JavaScript, they can tweak user scripts written in <a href="https://www.tampermonkey.net/">Tampermonkey</a> directly in the browser.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/arc-styles.png" alt="arc-styles.png"></p>
<figcaption>Arc Boosts lets users restyle a website with direct manipulation interactions from directly within the browser.</figcaption>
</figure>
<p>Each of these techniques gives a different tradeoff between power and skill. If someone just wants to tweak a color on a website, they should be able to do it in a less expressive system focused on that task, rather than needing to build an entire browser extension. With these techniques, we can smooth out the slope:</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/browser-extension-steady-slope.png" alt="browser-extension-steady-slope.png"></p>
<figcaption>Web customization techniques provide a gentler slope before needing to create a browser extension.</figcaption>
</figure>
<p>There are two ways to make a slope gentler. One way is to start from the right side of the diagram and reduce the required skill. This strategy corresponds to a huge variety of work which starts with the full expressiveness of programming and makes it more approachable—with <a href="https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/reference/ASLR_cmds.html">friendlier syntax</a>, <a href="https://liveprog.org/">live programming environments</a>, <a href="https://support.microsoft.com/en-us/office/using-flash-fill-in-excel-3f9bcf1e-db93-4890-94a0-1578341f73f7">inferring programs from examples</a>, <a href="https://hedy.org/">gradual scaffolding</a> and more.</p>
<p>However, there’s another strategy that’s just as important, and sometimes overlooked: starting from the left side of the diagram and gradually offering more power. Many successful customizable systems such as spreadsheets, HyperCard, Flash, Notion, and Airtable follow a similar pattern: <strong>a media editor with optional programmability.</strong>  When an environment offers document editing with familiar direct manipulation interactions, users can get a lot done without needing to write any code.</p>
<p>One final note: <strong>not everyone needs to reach the top of the slope.</strong> At some point, many amateurs will enlist help from others in order to save time and energy, or to avoid having to learn the necessary skills. The key is that many customizations are accessible to amateurs, with reasonable incremental investments of learning and skill. A gentle slope also supports smoother collaboration between people of different skill levels. We’ll explore this point more later on when we discuss the importance of communal creation.</p>

<p>So far we’ve focused on the rigidity of individual applications. But there’s another reason that it’s hard to adapt software to meet our needs: the very idea of “applications”. Because we’re so accustomed to this idea, it can be hard to see the nature of the problem—so let’s consider an analogy from the kitchen.</p>
<h3 id="apps-are-avocado-slicers"><a href="#apps-are-avocado-slicers">Apps are avocado slicers</a></h3>
<p>One way to slice an avocado is to use an “avocado slicer”: a 3-in-1 gadget that combines a dull plastic knife for slicing the avocado in half, a circular grabber for extracting the pit, and a line of plastic rods that produce 7 slices at once.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/avocado-slicer.jpg" alt="avocado-slicer.jpg"></p>
<figcaption>An avocado slicer is specialized to one use case.</figcaption>
</figure>
<p>Anyone can use an avocado slicer with no practice, and it poses no safety risk. And yet, because the avocado slicer is narrowly focused on one task, it’s useless at anything else. If you used a specialized gadget for every single task, you’d end up with a mountain of plastic.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/kitchen-gadgets.jpg" alt="kitchen-gadgets.jpg"></p>
<figcaption>
There are specialized gadgets available for an enormous variety of tasks, from stripping corn to cutting lettuce.
</figcaption>
</figure>
<p>Another approach is to use a knife. A knife can handle all the steps of slicing an avocado, and much more: it can slice a chicken breast, dice an onion, or smash a garlic clove.  You do need to learn how to handle the knife safely and skillfully, but it’s worth the effort, because <strong>a knife is a general tool.</strong></p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/knife.jpg" alt="knife.jpg"></p>
<figcaption>A knife can cut an avocado, and much more.</figcaption>
</figure>
<p>How does this analogy apply to software? <strong>Many applications are avocado slicers.</strong> They’re a bundle of functionality targeted at some specific use case: planning a trip, tracking workouts, organizing recipes. Because an app needs to handle many tasks associated with a use case, it sometimes doesn’t handle any of them particularly well. You may have come across situations where an app is missing some functionality that’s important to you, while simultaneously including extra bits you don’t need.</p>

<p>On top of that, solving a larger task using multiple applications often requires manual coordination. We can put windows next to each other and copy-paste data, but not much more. If we want more knife-like software tools, we’ll need better ways for smaller software tools to work together.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/travel-apps.png" alt="travel-apps.png"></p>
<figcaption>Planning a vacation requires manually coordinating across many isolated applications.</figcaption>
</figure>
<p>This isn’t to say that the application model has no benefits. Users get a cohesive experience within the bounds of an application, since the developer can finetune it without worrying about interoperating with other tools. Siloing data by application is a convenient answer to some security and privacy concerns. Paying for an application (and support) is a reasonable billing model. These are important benefits which can’t be ignored.</p>
<p>But when you’re trying to solve a complex problem or construct a creative workflow spanning multiple applications, the isolation between applications can cause serious problems. <strong>How might we reorient software around more general, composable tools</strong>—that feels more like a knife and less like an avocado slicer? There are two sub-problems to address: sharing data between tools, and combining tools within the user interface.</p>

<h3 id="sharing-data-between-tools"><a href="#sharing-data-between-tools">Sharing data between tools</a></h3>
<p>If we’re going to use different software tools together in coordination to get a job done, it’s essential that those tools can operate on one shared reality.</p>
<p>In modern cloud and mobile platforms, each application manages its own data in a private silo. The plan for the trip lives across a notes app, a Google Maps list, a calendar. This fragmentation impedes malleability. <strong>When each application manages its own data, introducing a new tool into a workflow incurs more friction</strong>. It’s easier to stay within an existing application to complete the whole job, even if superior alternatives exist for completing some part of the task.</p>
<p>When data is instead shared among applications, it empowers end users to compose tools in more flexible ways. One well-known example is the desktop filesystem. When information is stored in files, <strong>you can edit the same file in different tools have that focus on different subtasks</strong>. You can edit the light levels on a photograph in Lightroom, and then use Apple Preview to scribble a note on the photo. <strong>Different collaborators can also use their preferred tools</strong>—one user can edit a code repository in VSCode while collaborating with a coworker who edits it in emacs.</p>

<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/files.png" alt="files.png"></p>
<figcaption>Files serve as a common ground between different tools.</figcaption>
</figure>
<p>Another example of tools operating on shared data is low-code database application builders—including desktop-based applications like Microsoft Access and Filemaker Pro, and cloud-based applications like Airtable and Notion. These environments support end-users in building multiple views of the same database. For example, Airtable comes with with general tools such as a grid table editor, a board of cards, and a calendar. It also offers tools for adding custom UIs, but those are only needed in specialized cases, since many tasks can be achieved in the general grid editor.</p>
<figure>

<figcaption>Editing the same data with multiple views in Airtable, with live reactivity</figcaption>
</figure>
<p><strong>The idea of shared data also extends to shared objects with behavior.</strong> In <a href="https://en.wikipedia.org/wiki/Smalltalk">Smalltalk</a>, a user works with an <em>image</em>: a repository of objects representing not only persisted state, but also code associated with that state. Because everything in the system is represented as objects, it’s possible to introduce new tools that operate on those existing objects—including calling methods to invoke behavior.</p>

<p>Finally, <strong>realtime collaboration over shared data enables different people to work live in different tools.</strong> One example of this is in <a href="https://webstrates.net/">Webstrates</a>, a malleable software platform for collaboration in the browser. In Webstrates, tools run by different users can collaboratively edit the contents of a shared, synchronized dataset stored in the browser’s DOM. As a result, two users can each use their preferred editor to work on the same research paper together, with one of them using a WYSIWYG editor and the other using a plain text interface.</p>
<figure>

<figcaption>The same paper being edited realtime in two different editors, in Webstrates</figcaption>
</figure>
<h3 id="composing-the-user-interface"><a href="#composing-the-user-interface">Composing the user interface</a></h3>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/pegboard.jpg" alt="pegboard.jpg"></p>
</figure>
<p>Tools need to share not only underlying data, but a workspace where they can be used together.</p>
<p>The app paradigm isn’t set up for this. An application takes control over a window or tab and builds a world inside of it. This has advantages – an application’s creator can carefully craft your experience in this world and make sure everything works together just right. But it means that <strong>using multiple applications together requires flipping between isolated user experiences.</strong> It’s as though you have to carry ingredients from one kitchen to another every time you want to use a new tool. Even if data interoperates, your experience is splintered.</p>
<p>How can we break up not just an application’s ownership of data, but its control of the interactive environment? Earlier, we discussed approaches like plugins and permissionless modding, which crack open seams to extend applications from within. These are great, but if we want a world where we work with “tools, not apps”, we need something a little different – environments where tools can be brought together and used in a shared space.</p>
<p>One set of ideas comes from <strong>compound-document systems</strong>, like <a href="https://archive.org/details/OpenDocProgrammersGuide">OpenDoc</a> and <a href="https://en.wikipedia.org/wiki/Object_Linking_and_Embedding">OLE</a>. These let authors compose documents out of multiple kinds of media embedded in each other. For instance, a text document might host an embedded diagram, which can in turn host a table of data. Selecting one of these parts opens up an editor in-place, with no flipping back and forth between windows or digging through the file system required. These systems are open-ended; developers can introduce new kinds of media, as well as new, alternative editors for existing media types.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/opendoc.png" alt=""></p>
<figcaption>OpenDoc documents are made of "parts" that are edited with different editors, but stored together in a unified document.</figcaption>
</figure>
<p>Splitting up the UI into smaller pieces raises new design challenges. How do users choose which editors to use for each part of a document? How can a user share a document and guarantee that others will have all the necessary sub-editors available? How do global interactions like selection and focus work across editors? Systems like OpenDoc developed answers to these questions which are worth studying, although the nature of modern collaborative and web-based applications have also changed the surrounding context.</p>
<p>Sometimes, embedding editors for parts of a document is not enough. Consider this example from Tchernavskij’s <a href="https://theses.hal.science/tel-02612943v1">Designing and programming malleable software</a>: <strong>how might a user reuse a color picker from one app inside of another app?</strong> Unlike a diagram editor, a color picker is not associated with just one part of a document; it’s a tool that interacts with objects <em>throughout</em> the document. In order to do its job, the color picker somehow needs to be aware of other objects and have the ability to edit their colors. Usually, user interfaces hardcode these kinds of connections, but to allow extension or reuse, we need a more flexible and open-ended approach</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/color-picker.png" alt="color-picker.png"></p>
<figcaption>
<p>A challenge problem from <a href="https://theses.hal.science/tel-02612943v1">Designing and programming malleable software</a>: reusing a color picker from one application in another.</p>
</figcaption>
</figure>
<p>To solve this, Tchernavskij proposes <em>entanglers</em>: a dedicated layer of the UI system that dynamically detects and connects related UI elements. Another research project, <a href="https://vis.csail.mit.edu/pubs/varv/">Varv</a>, solves the problem by specifying behavior with lists of event triggers which can be additively grown. While the details of these approaches differ, the common element is representing connections between parts of the UI in such a way that supports later extension.</p>
<p>A more radical approach to UI composition is to use the physical world as a foundation for composability, as seen in <a href="https://dynamicland.org/">Dynamicland</a>. Programs at Dynamicland are built as collections of physical objects (like pieces of paper) that can carry code and data and act as handles for interaction. At Dynamicland, you can compose user interfaces by bringing them near each other on a table and taping or gluing them together. Programs can also use relationships in space, like pointing and proximity, to create virtual connections between objects. While screen-based systems can’t directly emulate Dynamicland’s use of the physical world, they may still be able to take some lessons from the value of having a consistent materiality and physics.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/spatial-relationships.jpg" alt="spatial-relationships.jpg"></p>
<figcaption>
<p>Pieces of paper running programs at Dynamicland, assembled on a table, sending out green “whiskers” to define their connections.</p>
</figcaption>
</figure>
<p>Dynamicland also derives much of its composability from how it breaks up programs into small objects that work together. Communication between these objects happens through a global database. As a result, it’s possible to add new tools into the system that intercept messages between existing objects, modifing the behavior of existing tools. When a system doesn’t assume up front that certain connections exist between senders and receivers of information, it’s easier to additively extend the system with new uses of that information.</p>

<h2 id="communal-creation"><a href="#communal-creation">Communal creation</a></h2>
<p>While it’s exciting to imagine every person crafting their own unique computing experience, an individualistic view of malleable software will only get you so far.</p>
<p>Sure, individuals should be able to adapt their software to their needs in small ways in the moment, climbing up a “gentle slope from use to creation”. But as the changes they want to make get larger, software is going to take more time and skills to make. If everyone were forced to make these changes just for themselves, as one-offs, the benefits would probably not be worth the costs. Not everyone wants to be a software-making expert.</p>
<p>And there’s an even more fundamental reason to think of malleability through a communal lens: we use computers together! A product team needs a single system for tracking projects. A department at a hospital needs a single system for patient intake forms. These communities are certainly not well-served by one-size-fits-all applications they have no control over. But the solution can’t be every-user-for-themselves either. We should help communities build and maintain <em>shared</em> solutions to their problems.</p>

<p><strong>With the right infrastructure, we can work together to craft our software.</strong> People with similar needs around the world can exchange work and build collaboratively, as we have seen happen in free-software communities. And local communities, from companies to families to civic organizations, can build and maintain software suited to their local needs. When local needs get higher up the “slope” and call for special levels of skill and enthusiasm, you don’t need everyone in a community to attain these levels – just enough people to play that role and get the job done.</p>

<p><strong>Building software for “local” contexts is sometimes <em>easier</em> than building software for world-wide use.</strong> You don’t need to build airtight, industrial-grade software if you are in direct contact with your users and can be responsive to the situations they run into. You don’t need to anticipate everyone’s needs in your design, just your community’s. Clay Shirky termed this pattern <a href="https://gwern.net/doc/technology/2004-03-30-shirky-situatedsoftware.html">“situated software”</a>, describing how his students were able to rapidly build software for their communities by “taking advantage of social infrastructure or context-sensitive information”. On an even more intimate level, Robin Sloan memorably described how an app built for his family could be a <a href="https://www.robinsloan.com/notes/home-cooked-app/">“home-cooked meal”</a>.</p>
<p>For all these reasons, we believe that <em>technical</em> infrastructures for  malleable software will need to support <em>sociotechnical</em> systems of people working together, across many levels, to make software work for themselves and their communities.</p>
<p>The history of free software offers lessons on how sociotechnical systems like this can be constructed. We are especially inspired by situations where free-software communities don’t assume there should only be one centrally-controlled version of an application in the world. For instance, Mastodon instances run by small communities often <a href="https://runyourown.social/">edit Mastodon’s code</a> to implement community-specific features and policies. Of course, situations like this still require serious engineering work, and are still operating on apps. As we move towards a world with gentler slopes into software modification, and more tools rather than apps, we’ll need to figure out how smaller pieces of code can be shared and collaboratively developed, and how interoperability can be maintained in a world of pluralistic software.</p>
<h2 id="ink-switch-prototypes"><a href="#ink-switch-prototypes">Ink &amp; Switch prototypes</a></h2>
<p>At Ink &amp; Switch, we’ve spent several years building research prototypes that explore different aspects of malleable software. These projects aren’t commercial products. Rather, the goal of each prototype has been to develop our understanding of techniques for enabling malleability, and then to learn from deep usage of those prototypes. (In fact, we wrote this very essay in a homegrown malleable software environment, and will share some of our successes and failures from that experience.)</p>

<p>Our work has spanned the entire computing stack, and can be roughly grouped into two threads. One thread has explored <strong>foundational infrastructure</strong>—techniques for storing data, loading code, and defining user interfaces, in a way that supports malleable experiences being built on top. Higher up the stack, another thread of work has focused on a particular kind of user experience:  <strong>dynamic documents</strong> where static media can be gradually enriched with interactive behavior. Let’s cover each in turn.</p>
<h3 id="infrastructure-for-malleability"><a href="#infrastructure-for-malleability">Infrastructure for malleability</a></h3>
<p>We’ve discussed how most of the <em>infrastructure</em> used to run and develop software today is designed without malleability as a priority. We’ve also shown some inspirations for reorienting around malleability. The desktop filesystem enables shared data between tools. Smalltalk, Hypercard, and spreadsheets enable live modification by allowing code editing at runtime. Browser-based apps encoding their UIs using the DOM enables permissionless modding through extensions.</p>
<p>Inspired by these predecessors, <strong>we have been prototyping an infrastructure stack for building, running, and sharing software that prioritizes malleability.</strong> Our approach builds on another area of our research: <a href="https://www.inkandswitch.com/essay/local-first/">local-first software</a>, which is a philosophy that prioritizes giving users ownership and control over their data, while maintaining the ability to collaborate with others. As part of that work, we developed a collaboration library called <a href="https://automerge.org/">Automerge</a>, which persists and synchronizes JSON documents among users.</p>

<h4 id="pushpin-an-extensible-media-canvas"><a href="#pushpin-an-extensible-media-canvas">PushPin: an extensible media canvas</a></h4>
<p>To start figuring out how a local-first foundation could enable malleability, we prototyped <a href="https://www.inkandswitch.com/pushpin">PushPin</a>, a web-based collaborative media canvas. A key idea we developed in that project was “document functional reactive programming” (DFRP): representing a tool as a UI component authored in React, backed by a JSON document that was automatically persisted and synchronized through Automerge.</p>
<p>DFRP made it less work to extend the interface than in traditional applications, since we could just add a UI component without worrying about backend databases or REST APIs. Furthermore, the decoupling of data and UI made it straightforward to define new user interfaces for <em>existing documents</em>—since we could define a new component and then register it as an alternate editor.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/pushpin.jpg" alt="pushpin.jpg"></p>
<figcaption>A PushPin board with embedded cards, each implemented as a React component backed by its own synced Automerge document</figcaption>
</figure>
<p>PushPin also showcased several challenges. First: how do you choose which UI to use to show a document in a given context?  We tried a simple model based on hardcoded contexts—“show a compact view when rendering the document as a card on a board; show an expanded view when rendering as the main content”—but this approach wasn’t sufficient for all our needs. For one thing, it didn’t allow users to choose among views depending on their task.</p>
<p>We also found that an embedding model needs to balance isolation and coordination. We used a restrictive model in which components can embed one another but no further communication was allowed. While this strong isolation made it easy to reason about behavior within a given component, there was no easy way for UI components to share context like hover states, which prevented certain rich user experiences. And permissionless modding wasn’t well supported either, since there was no mechanism to reach into an existing component. These questions of dispatching views and coordinating across components remain open areas of exploration for us.</p>
<h4 id="cambria-mediating-schema-compatibility-across-tools"><a href="#cambria-mediating-schema-compatibility-across-tools">Cambria: mediating schema compatibility across tools</a></h4>
<p>Schema compatibility was a point of frustration using PushPin. Upgrading tools would frequently break compatibility with existing data. And it was difficult to make different tools interoperate if they couldn’t agree exactly on the format of their underlying JSON data. This is an instance of a broader class of challenges—how should tools cooperate if they can’t agree on the shape of their data? In a malleable environment, we can’t rely on a central authority to dictate the schema.</p>
<p>We prototyped a system called <a href="https://www.inkandswitch.com/cambria/">Cambria</a> which solves this challenge by decoupling write schemas from read schemas. Updates are written by each tool in its preferred schema, and then interpreted on demand in other schemas—which could include newer/older versions of the schema, as well as entirely different schemas used by other tools. These are not one-time data migrations; they are ongoing live translations, preserving the ability to write and read from any schema simultaneously.</p>
<p>Based on some limited testing of the Cambria prototype, we believe live data translations are a promising direction for supporting pluralistic schemas. However, we have not yet built a production-ready version of this system that integrates with Automerge; one challenge is that it may require deep integration with the underlying data engine.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/lens-graph.png" alt="lens-graph.png"></p>
<figcaption>
<p>Cambria supports translating data between tools live on demand, through a graph of transformations called <em>lenses</em>.</p>
</figcaption>
</figure>
<h4 id="farm-code-is-data"><a href="#farm-code-is-data">Farm: code is data</a></h4>
<p>Although PushPin lowered the bar to contributing new tools to the environment, the system wasn’t editable at runtime—the code was stored in a GitHub repository, and deployed through a standard web application pipeline. Thus, in our next project, we experimented with enabling fluid modifications by <strong>using the local-first data layer to host not just user data, but also the code for the system itself.</strong> We built a system called <a href="https://github.com/inkandswitch/farm">Farm</a> which allowed users to author tools in the Elm language, with the source code stored and synced in Automerge documents.</p>

<p>At a basic level, treating code as data streamlined the sharing of tools. However, many aspects of collaboration proved challenging. How could you work on a tool without breaking it for other people as you edited it? And how could multiple collaborators work on different aspects of the same tool in parallel? This set of challenges led us to our next project.</p>
<h4 id="patchwork-version-control-bootstrapping"><a href="#patchwork-version-control-bootstrapping">Patchwork: version control + bootstrapping</a></h4>
<p>Enabling exploration and divergence lies at the heart of malleability. Different users need the freedom to try changing a piece of software or make multiple variations, without fear of losing work or messing up their collaborators. In traditional software engineering projects, these problems are solved with version control concepts, like Git branches.</p>
<p>While version control systems are useful tools for software engineers, they’re not designed to support malleable software. They are difficult to learn, and targeted at formal collaboration workflows. We believe that malleable software demands new solutions which prioritize accessibility to a broad set of users, and which better support casual, informal exploration. We call this vision  <a href="https://www.inkandswitch.com/universal-version-control/">universal version control</a>.</p>
<p>To explore these version control ideas further, we created Patchwork—a web-based collaboration environment for malleable software. Patchwork builds on the core ideas of PushPin and Farm, storing both user data and software code in Automerge documents. On top of that, it adds version control utilities like history views and simple branching. These tools apply to any document in the system—whether a piece of writing, or code for a software tool.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/diff-sidebar-replace.png" alt="diff-sidebar-replace.png"></p>
<figcaption>
    Patchwork can display diffs on branches of text documents, among other media types.
</figcaption>
</figure>
<p>One process difference between Patchwork and our previous infrastructure projects is that we are now “bootstrapping”—<strong>most of our lab’s internal knowledge work, from writing to whiteboarding to project planning, happens inside of Patchwork.</strong> In fact, these very words are being typed into a collaboratively edited Markdown document hosted in Patchwork.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/patchwork-tools.png" alt="patchwork-tools.png"></p>
<figcaption>
<p>We’ve used a broad variety of tools hosted in Patchwork—from text editors and whiteboards to simulations, audio sequencers and games.</p>
</figcaption>
</figure>

<p>One thing we’ve observed from using Patchwork for our work is that <strong>opportunities for improving your software can emerge naturally within a malleable system</strong>. Here’s an example from the process of writing this essay. The main tool we use is a collaborative Markdown editor:</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/markdown.png" alt="markdown.png"></p>
<figcaption>Editing this essay in Patchwork</figcaption>
</figure>
<p>At some point, we realized the essay was too long, but it was hard to see the length of different sections just by looking in the Markdown editor. So we created a minimal Section Word Counter tool that measured the length of each section:</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/word-counter.png" alt="word-counter.png"></p>
</figure>
<p>In Patchwork, this new tool could be straightforwardly integrated into the existing workflow. It was coded in a desktop IDE and then synchronized into an Automerge document, with no need to rebuild or redeploy Patchwork itself. Once installed, the Section Word Counter could instantly be used to view the existing essay document, with live updates as the essay changed.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/two-tools.png" alt="two-tools.png"></p>
<figcaption>Two Patchwork tools can edit/view the same underlying Automerge document.</figcaption>
</figure>
<p>Treating code as data also simplifies sharing. The word counter tool was initially developed by one of the authors for his own personal use, and only loaded in his own Patchwork instance. But when another author asked to use the tool, it could be shared with a link, just like any other document. Each collaborator could choose which tools they wanted to install based on their own needs.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/share-tool.png" alt="share-tool.png"></p>
<figcaption>Sharing a tool with a collaborator via URL. (Chat is one use case we haven't managed to migrate into Patchwork yet)</figcaption>
</figure>
<p>We used a similar approach to develop several other tools as needs arose. A “Zoomout View” proved useful for talking about the overall structure of the essay:</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/zoomout.png" alt="zoomout.png"></p>
</figure>
<p>In some cases, new tools have proven less useful. We built a “Request Tracker” that would manage assigning feedback requests to coauthors, but this tool didn’t end up getting used very much. That wasn’t a huge loss, though—it didn’t take much work to create the tool, and it was easy to ignore and uninstall.</p>
<p>Another thing we’ve found while customizing Patchwork is that <strong>AI is a useful complement to a malleable environment.</strong> We argued earlier that AI-assisted coding alone does not guarantee malleability. But <em>when combined with a malleable environment</em>, AI-assisted development can make it much faster to edit your tools.</p>
<p>We’ve used AI assistance to rapidly build many tools in Patchwork. The Section Word Counter tool mentioned above was coded with AI assistance in just a few minutes—in the middle of a writing session, without needing to set aside dedicated time.</p>
<p>A malleable environment can also provide platform capabilities that make AI-generated software more useful. For example: we have an interface for making small software tools from an AI chat. While this UI superficially resembles existing products like <a href="https://support.anthropic.com/en/articles/9487310-what-are-artifacts-and-how-do-i-use-them">Claude Artifacts</a>, the generated tools gain capabilities from existing inside of Patchwork. They automatically support persistence and multi-user collaboration, and can compose with existing tools for editing existing data.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/chess-clock.png" alt="chess-clock.png"></p>
<figcaption>
<p>A presentation timer tool built with an AI chat in Patchwork has automatic persistence and multi-user synchronization.</p>
</figcaption>
</figure>
<p>While we’ve already experienced some glimpses of malleability in Patchwork, some big challenges remain.</p>
<p><strong>One open challenge is fully applying the ideas of lightweight universal version control to code.</strong> Although we have a basic mechanism for creating a branch of a software tool, we’ve yet to flesh out a full set of capabilities around branching—such as seeing and running different branches of a tool simultaneously. And more broadly, we’ve noticed there are tricky social challenges around collaborating on software in a less centralized way. How do people negotiate whether to share the same version of a tool or go their own way with separate forks? Who makes product decisions for a given tool—does the original creator stay in charge, or do they allow anyone to freely contribute? While these questions can’t be magically resolved, we think versioning tools can help.</p>
<p>A related challenge is managing expectations of quality. Most of the tools we’ve built aren’t anywhere close to the polish level of commercial products; they’re scrappy personal tools. When someone shares a tool, how can they communicate its level of quality? There’s a difference between sharing a tool “as-is” and committing to ongoing maintenance.</p>
<p>Finally, Patchwork currently has a limited embedding model that we’d like to improve on. Tools can embed other tools, but the UI of the embedded tool gets cramped, and users need better ways to choose tools at all levels of the hierarchy. We’ve also gradually discovered many reasons why UI components need to communicate in richer ways. For instance, when working on a <a href="https://www.inkandswitch.com/patchwork/notebook/11/">generic commenting utility</a> that could work with any tool, we realized that it’s useful for tools to report the current user selection as a semantic region of a document. We’ve added hardcoded workarounds to enable these kinds of tool composition, but we’d like to find a more general and less coupled approach, perhaps inspired by approaches like entanglers and Varv we mentioned earlier.</p>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/tldraw-embed.jpg" alt="tldraw-embed.jpg"></p>
<figcaption>Embedding a text document and a spreadsheet inside a whiteboard in Patchwork</figcaption>
</figure>
<p>Patchwork is still an active project. We’ve published some early findings from our version control work in a <a href="https://www.inkandswitch.com/patchwork/notebook/">lab notebook</a>, and we plan to share more about the broader system as we make progress. Eventually we also plan to release Patchwork as an open-source tool.</p>
<h3 id="dynamic-documents"><a href="#dynamic-documents">Dynamic documents</a></h3>
<p>In our infrastructure work, we’ve innovated on how software is hosted, but the behavior itself has been specified with traditional code. And yet, we know that writing code—even with AI assistance—still represents a steep “cliff” between usage and modification.</p>
<p>Thus, <strong>another strand of our work has focused on allowing the creation of custom tools without programming</strong>. Above, we showed some prior art like spreadsheets and Hypercard which embodied the approach of starting with some directly manipulable information and optionally layering on programming.</p>
<p>We’ve followed in this tradition in our work on <strong>dynamic documents</strong>. Our goal is to explore new techniques for letting users layer behavior onto their existing media documents. We’ve aimed to figure out: how should users represent information to make it possible to enrich with interaction? And how can tools cooperate and coexist within a document as a shared fabric?</p>
<h4 id="potluck-dynamic-plaintext-for-recipe-planning"><a href="#potluck-dynamic-plaintext-for-recipe-planning">Potluck: dynamic plaintext for recipe planning</a></h4>
<p>In <a href="https://www.inkandswitch.com/potluck/">Potluck</a>, we explored how users might enrich text notes with dynamic behavior like scaling ingredients and setting timers in a recipe. Users could represent information with any text syntax they found natural, and then write detectors that would parse meaningful structure out of the text.</p>
<p>We found that Potluck could support the creation of <a href="https://www.inkandswitch.com/potluck/#gallery">many useful tools</a>, and it felt nice to jot down information in any format that felt natural.</p>
<figure>
<figcaption>Scaling a recipe in Potluck document. The behavior of the scaling slider is specified within the Potluck editor using a formula language.</figcaption>
</figure>
<p>AI assistance also <a href="https://www.youtube.com/watch?v=bJ3i4K3hefI">integrates nicely</a> into Potluck. The AI can draft a set of detectors and computation rules, while preserving the user’s ability to see and edit the generated logic themselves in a live programming environment.</p>
<figure>

<figcaption>
<p>Doubling quantities in a recipe with AI support. The generated detectors and formulas can be directly viewed and edited.</p>
</figcaption>
</figure>
<p>However, one problem with Potluck was that parsing structure from arbitrary plaintext proved cumbersome. We struggled to represent connections between related information (like containment or sequence) without resorting to complex detector rules.</p>
<h4 id="embark-dynamic-outlines-for-travel-planning"><a href="#embark-dynamic-outlines-for-travel-planning">Embark: dynamic outlines for travel planning</a></h4>
<p>In our next project, we decided to try a more structured approach. We built an editor for travel planning documents called <a href="https://www.inkandswitch.com/embark">Embark</a>, which used a hierarchical outline as the base format. The outline provided some low-level structure that resolved some of the issues with detecting complex patterns in Potluck.</p>
<p>We also added a first-class concept of structured information. An object like a Google Maps location could be “mentioned” and stored within the outline. These objects could then be used as inputs to computations like routing and weather forecasting.</p>
<p>Finally, we allowed rich views like maps and calendars to be embedded in the outline, to visualize and interact with information about the trip.</p>
<figure>
<video controls="" src="https://www.inkandswitch.com/essay/malleable-software/embark-demo.mp4"></video>
    <figcaption>Computing a driving route in an Embark document. The route calculation draws on context from the surrounding document.</figcaption>
</figure>
<p>A key takeaway from Embark was that <strong>an embedding model with rich shared context enables powerful interactions</strong>. The embedded views in Embark are deeply aware of surrounding information—a map view can read and visualize the locations in the outline. The available information depends on <em>local</em> context—you can limit what information is shown on a map by moving it to a different part of the outline. Interactions are also synchronized—hovering on a place in the map highlights it in the outline, and vice versa. The cumulative result of these mechanisms is a cohesive user experience that’s not available in a more restricted embedding scheme, like the one we have in Patchwork currently, or one website embedding another one as an iFrame.</p>
<figure>

<figcaption>In Embark, a map can interact with structured data in the outline document.</figcaption>
</figure>
<p>A major challenge we faced in both Potluck and Embark is navigating the tension between more and less formal representations of information. It’s valuable to be able to express your thoughts in an unstructured way, but computational tools typically benefit from operating on more structured representations. Furthermore, data schemas aren’t limited to user input—Google Maps locations have their own structured format that needs to be usable across various tools.</p>

<p>Finally, it remains to be seen whether the ideas of Potluck and Embark can be generalized further to handle a broader variety of tasks. We grounded each of those projects in the specific use cases of recipes and travel to limit our scope and encourage authentic use, but we plan to try generalizing these ideas further and integrating them on top of a malleable infrastructure foundation such as Patchwork.</p>
<h2 id="towards-a-better-future"><a href="#towards-a-better-future">Towards a better future</a></h2>
<figure>
<p><img src="https://www.inkandswitch.com/essay/malleable-software/desktop-workspace.jpg" alt="desktop-workspace.jpg"></p>
</figure>
<p>Over the course of this essay, we’ve laid out a vision of a different kind of computing – one that could empower people to craft their own tools, shift power towards local communities, and help people do their best work. We’ve also shared many ideas for how exactly this different kind of computing might come about, from prior art and our own work.</p>
<p>At the same time, we also don’t want to understate the challenges that lie ahead. Enormous effort over many decades has gone into refining application-centric computing, and forging a new path will require grappling with many difficult questions. We’ve covered some of the questions we see as fundamental: How can we create gentle slopes from passive use to active creation? How can we break up applications into composable tools? How can we keep the needs of collaborating groups in focus?</p>
<p>That is still a partial list, and there are big challenges we’ve mostly left out of scope in this piece.</p>
<p><strong>Privacy and security</strong>: How do we reconcile the desire for extensible software and interoperability with the reality of bad actors? When untrusted strangers are sharing modifications to existing software that can access sensitive data, dangerous things can happen.</p>

<p><strong>Business models</strong>: How would developers make money from their software if they were shipping composable tools, not monolithic applications? How is support and maintenance paid for?</p>
<p><strong>Culture</strong>: How do we cultivate a movement towards personal agency where people <em>want</em> to modify their environments, both digital and otherwise?</p>
<p>These are daunting challenges. Technical capabilities can’t be a full solution; economic and cultural shifts will also be required. But change is possible—computing is still young, it has changed a lot in the past decades, and surely many structural shifts still lie ahead.</p>
<p>Many different kinds of people can play a role. If you are a computing researcher, it’s a ripe time to reimagine the foundational metaphors of computing to put more power in users’ hands. If you are a platform developer, consider tipping the balance towards seeing end-users as capable participants rather than passive users that need to be protected at all costs. Security and ease of initial use are virtues, but extensibility and power are as well. And if you make software products, consider how you might empower your users to take matters more into their own hands, rather than dictating every decision. While we believe radical change is needed to fully realize malleable software, incremental improvements are helpful too.</p>
<p>When the people living or working in a space gradually evolve their tools to meet their needs, the result is a special kind of quality. While malleable software may lack the design consistency of artifacts crafted behind closed doors in Palo Alto, we find that over time it develops the kind of charm of an old house. It bears witness to past uses and carries traces of its past decisions, even as it evolves to meet the needs of the day.</p>
<p>Everyone deserves the right to evolve their digital environments. It’s an important way to fulfill our creative potential and maintain a sense of agency in a world that is increasingly defined in code. We hope you’ll join us in making malleable software a reality.</p>
<hr>
<p><em>To follow our ongoing research, subscribe to our <a href="https://buttondown.com/inkandswitch">email newsletter</a>.</em></p>
<p><em>We are grateful to</em>:</p>
<ul>
<li><em>Roshan Choxi, Orion Henry, Ignatius Gilfedder, Mark McGranaghan, Alexander Obenauer, Jeff Peterson, Max Schoening, Paul Shen, Paul Sonnnentag, Matt Tognetti, and Adam Wiggins, for contributions to the research projects mentioned in this essay.</em></li>
<li><em>Mary Rose Cook, Marcel Goethals, Alex Komoroske, Clemens Klokmose, Steve Krouse, Jess Martin, Andy Matuschak, Paul Sonnentag, Alex Warth, and Adam Wiggins for valuable feedback on the essay.</em></li>
<li><em>Thomas Mitchell Clark, Guitar Builder; and Nathan Peterson, Food Practitioner; for allowing us to photograph their creative spaces.</em></li>
</ul>

  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Magistral — the first reasoning model by Mistral AI (533 pts)]]></title>
            <link>https://mistral.ai/news/magistral</link>
            <guid>44236997</guid>
            <pubDate>Tue, 10 Jun 2025 14:08:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mistral.ai/news/magistral">https://mistral.ai/news/magistral</a>, See on <a href="https://news.ycombinator.com/item?id=44236997">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p dir="ltr text-lg">Announcing Magistral — the first reasoning model by Mistral AI — excelling in domain-specific, transparent, and multilingual reasoning.</p>
<p dir="ltr">The best human thinking isn’t linear — it weaves through logic, insight, uncertainty, and discovery. Reasoning language models have enabled us to augment and delegate complex thinking and deep understanding to AI, improving our ability to work through problems requiring precise, step-by-step deliberation and analysis.</p>
<p dir="ltr">But this space is still nascent. Lack of specialized depth needed for domain-specific problems, limited transparency, and inconsistent reasoning in the desired language — are just some of the known limitations of early thinking models.</p>
<p dir="ltr">Today, we’re excited to announce our latest contribution to AI research with Magistral — our first reasoning model. Released in both open and enterprise versions, Magistral is designed to think things through — in ways familiar to us — while bringing expertise across professional domains, transparent reasoning that you can follow and verify, along with deep multilingual flexibility.</p>
<p dir="ltr"><iframe title="YouTube video player" src="https://www.youtube.com/embed/99xd7kHx80U?si=GPEvDJxf68FFEM9T" width="560" height="315" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p>
<p dir="ltr">A one-shot physics simulation showcasing gravity, friction and collisions with Magistral Medium in Preview.</p>
<h2 dir="ltr">Highlights.</h2>
<p><img src="https://cms.mistral.ai/assets/d73ee721-ea92-46f5-af77-79674fdb4163.png?width=1600&amp;height=635" alt="Plot Magistral"></p>
<p dir="ltr">Magistral is a dual-release model focused on real-world reasoning and feedback-driven improvement.</p>
<ul>
<li dir="ltr" aria-level="1">
<p dir="ltr" role="presentation">We’re releasing the model in two variants: Magistral Small — a 24B parameter open-source version and Magistral Medium — a more powerful, enterprise version.</p>
</li>
<li dir="ltr" aria-level="1">
<p dir="ltr" role="presentation">Magistral Medium scored 73.6% on AIME2024, and 90% with majority voting @64. Magistral Small scored 70.7% and 83.3% respectively.</p>
</li>
<li dir="ltr" aria-level="1">
<p dir="ltr" role="presentation">Reason natively — Magistral’s chain-of-thought works across global languages and alphabets.</p>
</li>
<li dir="ltr" aria-level="1">
<p dir="ltr" role="presentation">Suited for a wide range of enterprise use cases — from structured calculations and programmatic logic to decision trees and rule-based systems.</p>
</li>
<li dir="ltr" aria-level="1">
<p dir="ltr" role="presentation">With the new Think mode and Flash Answers in Le Chat, you can get responses at 10x the speed compared to most competitors.</p>
</li>
<li dir="ltr" aria-level="1">
<p dir="ltr" role="presentation">The release is supported by our <a href="https://mistral.ai/static/research/magistral.pdf" target="_blank" rel="noopener">latest paper</a> covering comprehensive evaluations of Magistral, our training infrastructure, reinforcement learning algorithm, and novel observations for training reasoning models.&nbsp;</p>
</li>
</ul>
<p dir="ltr">As we’ve open-sourced Magistral Small, we welcome the community to examine, modify and build upon its architecture and reasoning processes to further accelerate the emergence of thinking language models. Our earlier open models have already been leveraged by the community for exciting projects like&nbsp;<a href="https://www.futurehouse.org/research-announcements/ether0-a-scientific-reasoning-model-for-chemistry">ether0</a> and <a href="https://huggingface.co/NousResearch/DeepHermes-3-Mistral-24B-Preview">DeepHermes 3</a>.</p>
<h3 dir="ltr">Purpose-built for transparent reasoning.</h3>
<p dir="ltr">Magistral is fine-tuned for multi-step logic, improving interpretability and providing a traceable thought process in the user’s language, unlike general-purpose models.</p>
<p dir="ltr">We aim to iterate the model quickly starting with this release. Expect the models to constantly improve.</p>
<h3 dir="ltr">Multilingual dexterity.</h3>
<p dir="ltr">The model excels in maintaining high-fidelity reasoning across numerous languages. Magistral is especially well-suited to reason in languages including English, French, Spanish, German, Italian, Arabic, Russian, and Simplified Chinese.</p>
<p dir="ltr"><iframe title="YouTube video player" src="https://www.youtube.com/embed/0NC-wM3hbgs?si=D-LEpAKUekkbGeyn" width="560" height="315" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p>
<p dir="ltr">Prompt and response in Arabic with Magistral Medium in Preview in Le Chat.</p>
<h3 dir="ltr">10x faster reasoning with Le Chat.</h3>
<p dir="ltr">With Flash Answers in Le Chat, Magistral Medium achieves up to 10x faster token throughput than most competitors. This enables real-time reasoning and user feedback, at scale.</p>
<p dir="ltr"><iframe title="YouTube video player" src="https://www.youtube.com/embed/_ImwDFqgblY?si=SAmY7mFwzKjGgKTT" width="560" height="315" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p>
<p dir="ltr">Speed comparison of Magistral Medium in Preview in Le Chat against ChatGPT.</p>
<h2 dir="ltr">Versatility in application.</h2>
<p dir="ltr">Magistral is ideal for general purpose use requiring longer thought processing and better accuracy than with non-reasoning LLMs. From legal research and financial forecasting to software development and creative storytelling — this model solves multi-step challenges where transparency and precision are critical.</p>
<h3 dir="ltr">Business strategy and operations.</h3>
<p dir="ltr">Building on our flagship <a href="https://mistral.ai/models">models</a>, Magistral is designed for research, strategic planning, operational optimization, and data-driven decision making — whether executing risk assessment and modelling with multiple factors, or calculating optimal delivery windows under constraints.</p>
<h3 dir="ltr">Regulated industries and sectors.</h3>
<p dir="ltr">Legal, finance, healthcare, and government professionals get traceable reasoning that meets compliance requirements. Every conclusion can be traced back through its logical steps, providing auditability for high-stakes environments with domain-specialized AI.</p>
<h3 dir="ltr">Systems, software, and data engineering.</h3>
<p dir="ltr">Magistral enhances coding and development use cases: compared to non-reasoning models, it significantly improves project planning, backend architecture, frontend design, and data engineering through sequenced, multi-step actions involving external tools or API.</p>
<h3 dir="ltr">Content and communication.</h3>
<p dir="ltr">Our early tests indicated that Magistral is an excellent creative companion. We highly recommend it for creative writing and storytelling, with the model capable of producing coherent or — if needed — delightfully eccentric copy.</p>
<h2 dir="ltr">Availability</h2>
<p dir="ltr">Magistral Small is an open-weight model, and is available for self-deployment under the Apache 2.0 license. You can download it from:&nbsp;&nbsp;</p>
<ul>
<li dir="ltr" aria-level="1">
<p dir="ltr" role="presentation">Hugging Face: <a href="https://huggingface.co/mistralai/Magistral-Small-2506">https://huggingface.co/mistralai/Magistral-Small-2506</a></p>
</li>
</ul>
<p dir="ltr">You can try out a preview version of Magistral Medium in <a href="http://chat.mistral.ai/">Le Chat</a> or via API on <a href="http://console.mistral.ai/">La Plateforme</a>.&nbsp;</p>
<p dir="ltr">Magistral Medium is also available on Amazon SageMaker, and soon on IBM WatsonX, Azure AI and Google Cloud Marketplace.</p>
<p dir="ltr"><strong id="docs-internal-guid-dcd44481-7fff-e65a-9fdf-b6a154ef6740"></strong>For enterprise and custom solutions, including on-premises deployments,&nbsp;<a href="https://mistral.ai/contact">contact our sales team</a>.</p>
<div>
<h2 dir="ltr">BTW, we’re hiring!</h2>
<p dir="ltr">Magistral represents a significant contribution by Mistral AI to the open source community, with input from seasoned experts and interns. And we’re keen to grow our family to further shape future AI innovation.</p>
<p dir="ltr">If you’re interested in joining us on our mission to democratize artificial intelligenceI, we welcome your applications to <a href="https://mistral.ai/careers">join our team</a>!&nbsp;</p>
</div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Finding Atari Games in Randomly Generated Data (125 pts)]]></title>
            <link>https://bbenchoff.github.io/pages/FiniteAtari.html</link>
            <guid>44236900</guid>
            <pubDate>Tue, 10 Jun 2025 13:58:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bbenchoff.github.io/pages/FiniteAtari.html">https://bbenchoff.github.io/pages/FiniteAtari.html</a>, See on <a href="https://news.ycombinator.com/item?id=44236900">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <!-- ── Finite Atari Machine banner ── -->


<p>
  Finding Atari Games in Randomly Generated Data
</p>

<p>
  TL;DR, <a href="https://github.com/bbenchoff/FiniteAtariMachine">here’s the GitHub repo</a>
</p>



<!-- ── Finite Atari Machine banner ── -->

<p>This project generated around 30 Billion individual 4kB files of random data. These files were winnowed down to about 10,000 through some heuristics gleaned from the complete collection of Atari ROM files. Finally, a classifier system scanned them using an Atari 2600 emulator to see if any of these random files were actually an Atari game. This project answers a question no one asked, no one wanted, and is a massive waste of resources: What if I shove a billion monkeys in a GPU and asked them to write a game for the Atari 2600?</p>

<p>Thanks to advances in GPUs, AI, and machine learning, we can now (very quickly) write a Python script that dumps garbage into 4KB ROMs and asks, <em>“does this look like a game?”</em>  This isn’t nostalgia, because my first console was an NES. This is about exploring something unimaginably vast and seeing if anything weird falls out.</p>

<h2 id="results-first">Results First</h2>

<p>Because no one reads below the fold, here’s an interactive emulator showcasing the most interesting Atari ROMs discovered. There’s no genetic algorithm here; just billions of random files run through an emulator. These are the best of the weird:</p>

<div>
  <p>
    <strong>WARNING: turn your volume down. There’s a bug in <a href="https://github.com/EmulatorJS/EmulatorJS">EmulatorJS</a>.</strong>
  </p>

  
</div>

<h2 id="problem-scope">Problem Scope</h2>

<p>Assume each Atari 2600 cartridge is a 4 kilobyte chunk of data. It’s a maximum of 4096 bytes, or 32,768 bits. That means there are $2^{32768}$ possible ROMs. For perspective:</p>

<ul>
  <li>That’s $10^{10159}$ potential Atari games.</li>
  <li>There are about $10^{20}$ grains of sand on Earth.</li>
  <li>And roughly $10^{80}$ protons in the visible universe.</li>
</ul>

<p>If you turned an entire datacenter of AI compute boxes onto this problem, it would likely take years before anything interesting was found. But with a little bit of smarts and actually reading a datasheet, the problem set is massively reduced. The basic search path to finding a ‘random’ Atari game would be to:</p>

<ol>
  <li>Generate a ROM, by dumping 4kB of data from /dev/random into a file.</li>
  <li>Run that file in an emulator</li>
  <li>Capture a screenshot or five</li>
  <li>Filter or score them with AI</li>
  <li>Save the best results for further investigation.</li>
</ol>

<p>This would work, if we had enough time to wait for black holes to devour the Universe. A better idea would be to front-load the pipeline with some simple checks to discard the absolute garbage before spinning up an emulator. It would help to know what a real Atari ROM would look like, simply to build some heuristics.</p>

<h2 id="heuristics">Heuristics</h2>

<p>I’m not going to emulate every possible ROM. I’m trying to find the <em>interesting</em> ones. This means filtering, and being smart about what we’re doing:</p>

<p><strong>Opcode Sanity</strong> The 6507 CPU (from here on out I’m calling it a 6502, to make you, specifically, angry) has 151 valid opcodes, and these opcodes are going to be all over the first half of the ROM. First I should check if there are a lot of opcodes in the data. These opcodes are:</p>

<p><code>
    0x00, 0x01, 0x05, 0x06, 0x08, 0x09, 0x0A, 0x0D, 0x0E, 0x10, 0x11, 0x15, 0x16, 0x18,
    0x19, 0x1D, 0x1E, 0x20, 0x21, 0x24, 0x25, 0x26, 0x28, 0x29, 0x2A, 0x2C, 0x2D, 0x2E,
    0x30, 0x31, 0x35, 0x36, 0x38, 0x39, 0x3D, 0x3E, 0x40, 0x41, 0x45, 0x46, 0x48, 0x49,
    0x4A, 0x4C, 0x4D, 0x4E, 0x50, 0x51, 0x55, 0x56, 0x58, 0x59, 0x5D, 0x5E, 0x60, 0x61,
    0x65, 0x66, 0x68, 0x69, 0x6A, 0x6C, 0x6D, 0x6E, 0x70, 0x71, 0x75, 0x76, 0x78, 0x79,
    0x7D, 0x7E, 0x81, 0x84, 0x85, 0x86, 0x88, 0x8A, 0x8C, 0x8D, 0x8E, 0x90, 0x91, 0x94,
    0x95, 0x96, 0x98, 0x99, 0x9A, 0x9D, 0xA0, 0xA1, 0xA2, 0xA4, 0xA5, 0xA6, 0xA8, 0xA9,
    0xAA, 0xAC, 0xAD, 0xAE, 0xB0, 0xB1, 0xB4, 0xB5, 0xB6, 0xB8, 0xB9, 0xBA, 0xBC, 0xBD,
    0xBE, 0xC0, 0xC1, 0xC4, 0xC5, 0xC6, 0xC8, 0xC9, 0xCA, 0xCC, 0xCD, 0xCE, 0xD0, 0xD1,
    0xD5, 0xD6, 0xD8, 0xD9, 0xDD, 0xDE, 0xE0, 0xE1, 0xE4, 0xE5, 0xE6, 0xE8, 0xE9, 0xEA,
    0xEC, 0xED, 0xEE, 0xF0, 0xF1, 0xF5, 0xF6, 0xF8, 0xF9, 0xFD, 0xFE
</code></p>

<p>Random data has about a 59% chance of being a valid opcode (151 out of 256 possible bytes). Real games should do much better than that. The structure of an Atari ROM has the first kilobyte as executable, with everything after that being data and graphics data. Analysing the full set commercial Atari ROMs reveals $&gt;$ 75% of the first kilobyte should be opcodes.</p>

<p><strong>Reset Vector Tomfoolery</strong> Atari ROMs need a valid reset vector to the code’s entry point. In other words, the last two bytes of the code should be between <code>0xF000</code> and <code>0xFFFF</code>. I can cheat on this by generating a 4k ROM minus two bytes, and then try every possible reset vector during emulation. <em>That’s only 4096 times as much work</em>.</p>

<p><strong>Input <em>and</em> Output?!</strong> I can look for access to the TIA (Television Interface Adapter) to see if it will output to the screen and the RIOT (RAM-I/O-Timer) to see if it will use any input or output. The TIA handles all graphics and sound, and does so with extremely specific patterns, discovered by looking at the patterns in all real Atari games. The pattern analysis revealed:</p>

<ul>
  <li>90% use zero page addressing (<code>STA $02</code>, <code>STX $06</code>, <code>STY $00</code>)</li>
  <li>80% are STA instructions, 10% STX, 10% STY</li>
  <li>Indexed addressing is common (<code>STA $00,X</code>, <code>STY $10,X</code>)</li>
  <li>WSYNC ($02) dominates - 18.8% of all TIA accesses (games constantly sync to the TV)</li>
</ul>

<p>The most critical TIA registers games actually use:
<code>
$02 (WSYNC) - 18.8% of accesses - TV synchronization
$1B (GRP0)  - 8.4% of accesses  - Player 0 graphics  
$1C (GRP1)  - 7.0% of accesses  - Player 1 graphics
$2A (HMOVE) - 4.9% of accesses  - Horizontal movement
$0E/$0F (PF1/PF2) - 7.8% combined - Playfield graphics
</code></p>

<p>Instead of blindly counting any store to the TIA range <code>$00-$2F</code>, I look for the specific instruction patterns real games use.</p>

<p>The RIOT registers are more complex due to memory mirroring. The Atari 2600 uses incomplete address decoding, causing the same hardware to appear at multiple addresses. The RIOT chip contains:</p>

<ul>
  <li>Timer registers: Canonical addresses <code>$0280-$0287</code>, but due to mirroring also appear at <code>$80-$87</code>, <code>$180-$187</code>, <code>$380-$387</code>, etc.</li>
  <li>I/O registers: Canonical addresses <code>$0294-$0297</code>, also mirrored at <code>$94-$97</code>, <code>$194-$197</code>, etc.</li>
</ul>

<p>In actual ROM files, you’ll find programmers using the shorter mirrored addresses because they’re more efficient. A typical instruction like <code>STA $80</code> (set timer) appears in the ROM as <code>85 80    ; STA $80 (zero page addressing)</code> rather than the wasteful <code>8D 80 02    ; STA $0280 (absolute addressing)</code>. My heuristics look for this.</p>

<p><strong>Branches and Jumps</strong> We’re looking for games here, and every game has loops and structure. These show up as branch instructions (for loops and conditionals) and jump instructions (for subroutines and major flow control). These show up as backwards branches (loops) and forward branches (conditionals).</p>

<ul>
  <li>Branch opcodes: <code>0x10, 0x30, 0x50, 0x70, 0x90, 0xB0, 0xD0, 0xF0</code></li>
  <li>Jump opcodes: <code>0x4C</code> (JMP absolute), <code>0x6C</code> (JMP indirect), <code>0x20</code> (JSR - jump to subroutine)</li>
</ul>

<p>Take all of this together, and we can assign some heuristics to validate what counts as a “game”.</p>

<h2 id="calibrating-against-reality">Calibrating Against Reality</h2>

<p>To validate these heuristics, I analyzed the <a href="https://archive.org/details/Atari2600FullRomCollectionReuploadByDataghost">Atari 2600 Full ROM Collection</a> from the Internet Archive - all 1,530 commercial Atari ROMs ever made. A Python script analyzed each ROM to count the incidence of these heuristics in commercial games.</p>

<h3 id="rom-characteristics-by-metric">ROM Characteristics by Metric</h3>

<p>Here’s what real Atari games actually look like:</p>

<table>
  <thead>
    <tr>
      <th>Metric</th>
      <th>Min</th>
      <th>5th %</th>
      <th>10th %</th>
      <th>25th %</th>
      <th>Median</th>
      <th>75th %</th>
      <th>90th %</th>
      <th>95th %</th>
      <th>Max</th>
      <th>Mean</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Valid Opcodes (%)</strong></td>
      <td>42.1%</td>
      <td>65.6%</td>
      <td>70.0%</td>
      <td>74.0%</td>
      <td>76.0%</td>
      <td>77.9%</td>
      <td>79.6%</td>
      <td>81.4%</td>
      <td>90.7%</td>
      <td>74.8%</td>
    </tr>
    <tr>
      <td><strong>TIA Accesses</strong></td>
      <td>12</td>
      <td><strong>93</strong></td>
      <td>118</td>
      <td>186</td>
      <td>282</td>
      <td>398</td>
      <td>567</td>
      <td>743</td>
      <td>2,847</td>
      <td><strong>341</strong></td>
    </tr>
    <tr>
      <td><strong>RIOT Accesses</strong></td>
      <td>3</td>
      <td><strong>34</strong></td>
      <td>47</td>
      <td>72</td>
      <td>111</td>
      <td>158</td>
      <td>219</td>
      <td>287</td>
      <td>891</td>
      <td><strong>134</strong></td>
    </tr>
    <tr>
      <td><strong>RIOT Timer Access</strong></td>
      <td>1</td>
      <td>22</td>
      <td>31</td>
      <td>51</td>
      <td>78</td>
      <td>115</td>
      <td>161</td>
      <td>211</td>
      <td>723</td>
      <td><strong>95</strong></td>
    </tr>
    <tr>
      <td><strong>RIOT I/O Access</strong></td>
      <td>0</td>
      <td>8</td>
      <td>12</td>
      <td>18</td>
      <td>28</td>
      <td>41</td>
      <td>58</td>
      <td>74</td>
      <td>201</td>
      <td><strong>33</strong></td>
    </tr>
    <tr>
      <td><strong>Branch Instructions</strong></td>
      <td>28</td>
      <td>177</td>
      <td>200</td>
      <td>296</td>
      <td>364</td>
      <td>528</td>
      <td>789</td>
      <td>1,066</td>
      <td>5,928</td>
      <td>457</td>
    </tr>
    <tr>
      <td><strong>Jump Instructions</strong></td>
      <td>3</td>
      <td>37</td>
      <td>54</td>
      <td>76</td>
      <td>111</td>
      <td>172</td>
      <td>260</td>
      <td>351</td>
      <td>1,495</td>
      <td>142</td>
    </tr>
    <tr>
      <td><strong>Unique Opcodes</strong></td>
      <td>29</td>
      <td>125</td>
      <td>129</td>
      <td>137</td>
      <td>143</td>
      <td>148</td>
      <td>151</td>
      <td>151</td>
      <td>151</td>
      <td>141</td>
    </tr>
  </tbody>
</table>

<h3 id="instruction-distribution">Instruction Distribution</h3>
<ul>
  <li><strong>STA (Store A)</strong>: 71.8% - Writing graphics data, colors, positions</li>
  <li><strong>STX (Store X)</strong>: 9.3% - Often used for indexed operations</li>
  <li><strong>STY (Store Y)</strong>: 8.5% - Similar to STX patterns</li>
  <li><strong>LDA (Load A)</strong>: 6.7% - Games also <em>read</em> from TIA (collision detection, etc.)</li>
  <li><strong>Other</strong>: 3.7% - Indexed addressing, absolute mode</li>
</ul>

<h3 id="addressing-modes">Addressing Modes</h3>
<ul>
  <li><strong>Zero page</strong>: 82.1% - <code>STA $02</code>, <code>STX $1B</code> (fastest, most common)</li>
  <li><strong>Zero page indexed</strong>: 13.2% - <code>STA $00,X</code>, <code>STY $10,X</code> (sprite positioning)</li>
  <li><strong>Absolute</strong>: 4.7% - <code>STA $001B</code> (rare, but exists)</li>
</ul>

<h3 id="most-accessed-tia-registers">Most Accessed TIA Registers</h3>
<div><pre><code>$02 (WSYNC) - 18.8% - TV horizontal sync (critical timing)
$1B (GRP0)  - 8.4%  - Player 0 graphics data
$1C (GRP1)  - 7.0%  - Player 1 graphics data  
$2A (HMOVE) - 4.9%  - Horizontal movement strobe
$0E (PF1)   - 4.1%  - Playfield graphics register 1
$0F (PF2)   - 3.7%  - Playfield graphics register 2
</code></pre></div>

<h3 id="riot-pattern-analysis">RIOT Pattern Analysis</h3>

<p>RIOT usage splits into two clear categories:</p>

<p><strong>Timer Operations (78% of RIOT usage)</strong></p>
<ul>
  <li><strong>Registers</strong>: <code>$80-$87</code> (1T, 8T, 64T, 1024T intervals plus timer read)</li>
  <li><strong>Purpose</strong>: Timing loops, delays, frame counting</li>
  <li><strong>Pattern</strong>: Write to set timer, read <code>$84</code> to check status</li>
</ul>

<p><strong>I/O Operations (22% of RIOT usage)</strong></p>
<ul>
  <li><strong>Registers</strong>: <code>$94-$97</code> (joystick/paddle inputs, console switches)</li>
  <li><strong>Purpose</strong>: Reading player input, detecting game reset</li>
  <li><strong>Pattern</strong>: Mostly reads (<code>LDA $94</code>), occasional writes for configuration</li>
</ul>

<h3 id="composite-scoring-updated">Composite Scoring (Updated)</h3>

<p>The corrected composite score uses realistic weights based on actual game analysis:</p>

<div><pre><code>Score = (Opcode Ratio × 0.25) + 
        (min(TIA_Accesses/150, 1.0) × 0.30) + 
        (min(RIOT_Accesses/50, 1.0) × 0.20) + 
        (min(Branches/200, 1.0) × 0.15) + 
        (min(Jumps/40, 1.0) × 0.10)
</code></pre></div>

<p>Real games scored between 0.393 and 1.004, with an average of 0.853. This composite score helps rank how “game-like” any ROM appears based on multiple characteristics rather than relying on a single metric. The weights prioritize opcodes and graphics capability (TIA) as the most important indicators, with control flow and I/O capability as secondary factors.</p>

<h2 id="mining-atari-games">Mining Atari Games</h2>

<p>The first implementation of this project was extremely simple – a single thread Python script that generated 4kB minus two bytes of random data, counted the number of branches, jumps, the number of valid opcodes, backwards branches (or a loop), and the number of vectors pointing to the ROM. This was very slow, around 300-400 ROMs checked per second.</p>

<p>This is a massively parallel search, though. My GTX 1070 (I know, except I exclusively play TF2, Rocket League, and Kerbal Space Program, <a href="https://bbenchoff.github.io/pages/SXM2PCIe.html">nvidia plz gib H200 + SXM5 PCIe carrier board</a>) has 1,920 CUDA cores compared to my CPU’s 20 cores. More importantly, each CUDA core can independently generate and analyze a ROM simultaneously. Instead of generating ROMs sequentially and passing them through a pipeline, I can generate a million ROMs in parallel, analyze them all at once, and only transfer the promising candidates back to the CPU.</p>

<p>The CUDA implementation moves all the heuristics directly onto the GPU. Each thread generates one 4KB ROM using CUDA’s random number generator, then immediately applies the same analysis pipeline: counting valid opcodes, detecting TIA/RIOT register accesses, finding branch patterns, and calculating the composite score. This was written with the the CuPy library:</p>

<div><pre><code><span>"""
CUDA Atari ROM Generator
"""</span>

<span>import</span> <span>cupy</span> <span>as</span> <span>cp</span>
<span>import</span> <span>numpy</span> <span>as</span> <span>np</span>
<span>import</span> <span>time</span>
<span>from</span> <span>pathlib</span> <span>import</span> <span>Path</span>

<span># Constants
</span><span>ROM_SIZE</span> <span>=</span> <span>4094</span>  <span># Reset vector tested later
</span><span>BATCH_SIZE</span> <span>=</span> <span>1024</span> <span>*</span> <span>256</span>

<span># Discovery thresholds based on observed patterns
</span><span>OPCODE_THRESHOLD</span> <span>=</span> <span>0.58</span>
<span>TIA_THRESHOLD</span> <span>=</span> <span>50</span>
<span>RIOT_THRESHOLD</span> <span>=</span> <span>13</span>
<span>BRANCH_THRESHOLD</span> <span>=</span> <span>150</span>
<span>JUMP_THRESHOLD</span> <span>=</span> <span>37</span>
<span>INSTRUCTION_VARIETY</span> <span>=</span> <span>100</span>
<span>MIN_SCORE</span> <span>=</span> <span>0.52</span>

<span># Valid 6502 opcodes (151 total)
</span><span>VALID_OPCODES</span> <span>=</span> <span>np</span><span>.</span><span>array</span><span>([</span>
    <span>0x00</span><span>,</span> <span>0x01</span><span>,</span> <span>0x05</span><span>,</span> <span>0x06</span><span>,</span> <span>0x08</span><span>,</span> <span>0x09</span><span>,</span> <span>0x0A</span><span>,</span> <span>0x0D</span><span>,</span> <span>0x0E</span><span>,</span> <span>0x10</span><span>,</span> <span>0x11</span><span>,</span> <span>0x15</span><span>,</span> <span>0x16</span><span>,</span> <span>0x18</span><span>,</span>
    <span>0x19</span><span>,</span> <span>0x1D</span><span>,</span> <span>0x1E</span><span>,</span> <span>0x20</span><span>,</span> <span>0x21</span><span>,</span> <span>0x24</span><span>,</span> <span>0x25</span><span>,</span> <span>0x26</span><span>,</span> <span>0x28</span><span>,</span> <span>0x29</span><span>,</span> <span>0x2A</span><span>,</span> <span>0x2C</span><span>,</span> <span>0x2D</span><span>,</span> <span>0x2E</span><span>,</span>
    <span>0x30</span><span>,</span> <span>0x31</span><span>,</span> <span>0x35</span><span>,</span> <span>0x36</span><span>,</span> <span>0x38</span><span>,</span> <span>0x39</span><span>,</span> <span>0x3D</span><span>,</span> <span>0x3E</span><span>,</span> <span>0x40</span><span>,</span> <span>0x41</span><span>,</span> <span>0x45</span><span>,</span> <span>0x46</span><span>,</span> <span>0x48</span><span>,</span> <span>0x49</span><span>,</span>
    <span>0x4A</span><span>,</span> <span>0x4C</span><span>,</span> <span>0x4D</span><span>,</span> <span>0x4E</span><span>,</span> <span>0x50</span><span>,</span> <span>0x51</span><span>,</span> <span>0x55</span><span>,</span> <span>0x56</span><span>,</span> <span>0x58</span><span>,</span> <span>0x59</span><span>,</span> <span>0x5D</span><span>,</span> <span>0x5E</span><span>,</span> <span>0x60</span><span>,</span> <span>0x61</span><span>,</span>
    <span>0x65</span><span>,</span> <span>0x66</span><span>,</span> <span>0x68</span><span>,</span> <span>0x69</span><span>,</span> <span>0x6A</span><span>,</span> <span>0x6C</span><span>,</span> <span>0x6D</span><span>,</span> <span>0x6E</span><span>,</span> <span>0x70</span><span>,</span> <span>0x71</span><span>,</span> <span>0x75</span><span>,</span> <span>0x76</span><span>,</span> <span>0x78</span><span>,</span> <span>0x79</span><span>,</span>
    <span>0x7D</span><span>,</span> <span>0x7E</span><span>,</span> <span>0x81</span><span>,</span> <span>0x84</span><span>,</span> <span>0x85</span><span>,</span> <span>0x86</span><span>,</span> <span>0x88</span><span>,</span> <span>0x8A</span><span>,</span> <span>0x8C</span><span>,</span> <span>0x8D</span><span>,</span> <span>0x8E</span><span>,</span> <span>0x90</span><span>,</span> <span>0x91</span><span>,</span> <span>0x94</span><span>,</span>
    <span>0x95</span><span>,</span> <span>0x96</span><span>,</span> <span>0x98</span><span>,</span> <span>0x99</span><span>,</span> <span>0x9A</span><span>,</span> <span>0x9D</span><span>,</span> <span>0xA0</span><span>,</span> <span>0xA1</span><span>,</span> <span>0xA2</span><span>,</span> <span>0xA4</span><span>,</span> <span>0xA5</span><span>,</span> <span>0xA6</span><span>,</span> <span>0xA8</span><span>,</span> <span>0xA9</span><span>,</span>
    <span>0xAA</span><span>,</span> <span>0xAC</span><span>,</span> <span>0xAD</span><span>,</span> <span>0xAE</span><span>,</span> <span>0xB0</span><span>,</span> <span>0xB1</span><span>,</span> <span>0xB4</span><span>,</span> <span>0xB5</span><span>,</span> <span>0xB6</span><span>,</span> <span>0xB8</span><span>,</span> <span>0xB9</span><span>,</span> <span>0xBA</span><span>,</span> <span>0xBC</span><span>,</span> <span>0xBD</span><span>,</span>
    <span>0xBE</span><span>,</span> <span>0xC0</span><span>,</span> <span>0xC1</span><span>,</span> <span>0xC4</span><span>,</span> <span>0xC5</span><span>,</span> <span>0xC6</span><span>,</span> <span>0xC8</span><span>,</span> <span>0xC9</span><span>,</span> <span>0xCA</span><span>,</span> <span>0xCC</span><span>,</span> <span>0xCD</span><span>,</span> <span>0xCE</span><span>,</span> <span>0xD0</span><span>,</span> <span>0xD1</span><span>,</span>
    <span>0xD5</span><span>,</span> <span>0xD6</span><span>,</span> <span>0xD8</span><span>,</span> <span>0xD9</span><span>,</span> <span>0xDD</span><span>,</span> <span>0xDE</span><span>,</span> <span>0xE0</span><span>,</span> <span>0xE1</span><span>,</span> <span>0xE4</span><span>,</span> <span>0xE5</span><span>,</span> <span>0xE6</span><span>,</span> <span>0xE8</span><span>,</span> <span>0xE9</span><span>,</span> <span>0xEA</span><span>,</span>
    <span>0xEC</span><span>,</span> <span>0xED</span><span>,</span> <span>0xEE</span><span>,</span> <span>0xF0</span><span>,</span> <span>0xF1</span><span>,</span> <span>0xF5</span><span>,</span> <span>0xF6</span><span>,</span> <span>0xF8</span><span>,</span> <span>0xF9</span><span>,</span> <span>0xFD</span><span>,</span> <span>0xFE</span>
<span>],</span> <span>dtype</span><span>=</span><span>np</span><span>.</span><span>uint8</span><span>)</span>

<span># Control flow opcodes
</span><span>BRANCH_OPCODES</span> <span>=</span> <span>np</span><span>.</span><span>array</span><span>([</span><span>0x10</span><span>,</span> <span>0x30</span><span>,</span> <span>0x50</span><span>,</span> <span>0x70</span><span>,</span> <span>0x90</span><span>,</span> <span>0xB0</span><span>,</span> <span>0xD0</span><span>,</span> <span>0xF0</span><span>],</span> <span>dtype</span><span>=</span><span>np</span><span>.</span><span>uint8</span><span>)</span>
<span>JUMP_OPCODES</span> <span>=</span> <span>np</span><span>.</span><span>array</span><span>([</span><span>0x4C</span><span>,</span> <span>0x6C</span><span>,</span> <span>0x20</span><span>],</span> <span>dtype</span><span>=</span><span>np</span><span>.</span><span>uint8</span><span>)</span>

<span>def</span> <span>create_lookup_tables</span><span>():</span>
    <span>"""Create GPU lookup tables for ROM analysis"""</span>
    <span>valid_lut</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>valid_lut</span><span>[</span><span>VALID_OPCODES</span><span>]</span> <span>=</span> <span>True</span>
    
    <span>branch_lut</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>branch_lut</span><span>[</span><span>BRANCH_OPCODES</span><span>]</span> <span>=</span> <span>True</span>
    
    <span>jump_lut</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>jump_lut</span><span>[</span><span>JUMP_OPCODES</span><span>]</span> <span>=</span> <span>True</span>
    
    <span># TIA instruction lookups
</span>    <span>tia_store_lut</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>tia_store_lut</span><span>[[</span><span>0x85</span><span>,</span> <span>0x86</span><span>,</span> <span>0x84</span><span>,</span> <span>0x95</span><span>,</span> <span>0x96</span><span>,</span> <span>0x94</span><span>]]</span> <span>=</span> <span>True</span>
    
    <span>tia_load_lut</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>tia_load_lut</span><span>[[</span><span>0xA5</span><span>,</span> <span>0xA6</span><span>,</span> <span>0xA4</span><span>,</span> <span>0xB5</span><span>,</span> <span>0xB6</span><span>,</span> <span>0xB4</span><span>]]</span> <span>=</span> <span>True</span>
    
    <span>tia_abs_lut</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>tia_abs_lut</span><span>[[</span><span>0x8D</span><span>,</span> <span>0x8E</span><span>,</span> <span>0x8C</span><span>,</span> <span>0xAD</span><span>,</span> <span>0xAE</span><span>,</span> <span>0xAC</span><span>]]</span> <span>=</span> <span>True</span>
    
    <span># RIOT instruction lookups
</span>    <span>riot_access_lut</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>riot_access_lut</span><span>[[</span><span>0x85</span><span>,</span> <span>0x86</span><span>,</span> <span>0x84</span><span>,</span> <span>0xA5</span><span>,</span> <span>0xA6</span><span>,</span> <span>0xA4</span><span>]]</span> <span>=</span> <span>True</span>
    
    <span># Address range masks
</span>    <span>tia_range_mask</span> <span>=</span> <span>cp</span><span>.</span><span>arange</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>uint8</span><span>)</span> <span>&lt;=</span> <span>0x2F</span>
    <span>riot_timer_mask</span> <span>=</span> <span>(</span><span>cp</span><span>.</span><span>arange</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>uint8</span><span>)</span> <span>&gt;=</span> <span>0x80</span><span>)</span> <span>&amp;</span> <span>(</span><span>cp</span><span>.</span><span>arange</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>uint8</span><span>)</span> <span>&lt;=</span> <span>0x87</span><span>)</span>
    <span>riot_io_mask</span> <span>=</span> <span>(</span><span>cp</span><span>.</span><span>arange</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>uint8</span><span>)</span> <span>&gt;=</span> <span>0x94</span><span>)</span> <span>&amp;</span> <span>(</span><span>cp</span><span>.</span><span>arange</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>uint8</span><span>)</span> <span>&lt;=</span> <span>0x97</span><span>)</span>
    
    <span>return</span> <span>{</span>
        <span>'valid'</span><span>:</span> <span>valid_lut</span><span>,</span>
        <span>'branch'</span><span>:</span> <span>branch_lut</span><span>,</span>
        <span>'jump'</span><span>:</span> <span>jump_lut</span><span>,</span>
        <span>'tia_store'</span><span>:</span> <span>tia_store_lut</span><span>,</span>
        <span>'tia_load'</span><span>:</span> <span>tia_load_lut</span><span>,</span>
        <span>'tia_abs'</span><span>:</span> <span>tia_abs_lut</span><span>,</span>
        <span>'riot_access'</span><span>:</span> <span>riot_access_lut</span><span>,</span>
        <span>'tia_range'</span><span>:</span> <span>tia_range_mask</span><span>,</span>
        <span>'riot_timer'</span><span>:</span> <span>riot_timer_mask</span><span>,</span>
        <span>'riot_io'</span><span>:</span> <span>riot_io_mask</span>
    <span>}</span>

<span>def</span> <span>analyze_roms</span><span>(</span><span>roms</span><span>,</span> <span>lut</span><span>):</span>
    <span>"""Analyze ROMs for game-like patterns"""</span>
    <span>batch_size</span> <span>=</span> <span>roms</span><span>.</span><span>shape</span><span>[</span><span>0</span><span>]</span>
    
    <span># Opcode analysis
</span>    <span>valid_opcodes_count</span> <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>'valid'</span><span>][</span><span>roms</span><span>],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>opcode_ratio</span> <span>=</span> <span>valid_opcodes_count</span><span>.</span><span>astype</span><span>(</span><span>cp</span><span>.</span><span>float32</span><span>)</span> <span>/</span> <span>ROM_SIZE</span>
    
    <span># Control flow analysis
</span>    <span>branch_count</span> <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>'branch'</span><span>][</span><span>roms</span><span>],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>jump_count</span> <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>'jump'</span><span>][</span><span>roms</span><span>],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    
    <span># TIA analysis
</span>    <span>tia_accesses</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>batch_size</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>int32</span><span>)</span>
    
    <span># Zero page addressing
</span>    <span>tia_store_zp</span> <span>=</span> <span>lut</span><span>[</span><span>'tia_store'</span><span>][</span><span>roms</span><span>[:,</span> <span>:</span><span>-</span><span>1</span><span>]]</span> <span>&amp;</span> <span>lut</span><span>[</span><span>'tia_range'</span><span>][</span><span>roms</span><span>[:,</span> <span>1</span><span>:]]</span>
    <span>tia_load_zp</span> <span>=</span> <span>lut</span><span>[</span><span>'tia_load'</span><span>][</span><span>roms</span><span>[:,</span> <span>:</span><span>-</span><span>1</span><span>]]</span> <span>&amp;</span> <span>lut</span><span>[</span><span>'tia_range'</span><span>][</span><span>roms</span><span>[:,</span> <span>1</span><span>:]]</span>
    <span>tia_zp_total</span> <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>tia_store_zp</span> <span>|</span> <span>tia_load_zp</span><span>,</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>tia_accesses</span> <span>+=</span> <span>tia_zp_total</span>
    
    <span># Absolute addressing
</span>    <span>tia_abs_positions</span> <span>=</span> <span>lut</span><span>[</span><span>'tia_abs'</span><span>][</span><span>roms</span><span>[:,</span> <span>:</span><span>-</span><span>2</span><span>]]</span>
    <span>tia_abs_targets</span> <span>=</span> <span>lut</span><span>[</span><span>'tia_range'</span><span>][</span><span>roms</span><span>[:,</span> <span>1</span><span>:</span><span>-</span><span>1</span><span>]]</span> <span>&amp;</span> <span>(</span><span>roms</span><span>[:,</span> <span>2</span><span>:]</span> <span>==</span> <span>0x00</span><span>)</span>
    <span>tia_abs_total</span> <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>tia_abs_positions</span> <span>&amp;</span> <span>tia_abs_targets</span><span>,</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>tia_accesses</span> <span>+=</span> <span>tia_abs_total</span>
    
    <span># RIOT analysis
</span>    <span>riot_accesses</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>batch_size</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>int32</span><span>)</span>
    
    <span># Timer access
</span>    <span>riot_timer_positions</span> <span>=</span> <span>lut</span><span>[</span><span>'riot_access'</span><span>][</span><span>roms</span><span>[:,</span> <span>:</span><span>-</span><span>1</span><span>]]</span>
    <span>riot_timer_targets</span> <span>=</span> <span>lut</span><span>[</span><span>'riot_timer'</span><span>][</span><span>roms</span><span>[:,</span> <span>1</span><span>:]]</span>
    <span>riot_timer_hits</span> <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>riot_timer_positions</span> <span>&amp;</span> <span>riot_timer_targets</span><span>,</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>riot_accesses</span> <span>+=</span> <span>riot_timer_hits</span>
    
    <span># I/O access
</span>    <span>riot_io_positions</span> <span>=</span> <span>lut</span><span>[</span><span>'riot_access'</span><span>][</span><span>roms</span><span>[:,</span> <span>:</span><span>-</span><span>1</span><span>]]</span>
    <span>riot_io_targets</span> <span>=</span> <span>lut</span><span>[</span><span>'riot_io'</span><span>][</span><span>roms</span><span>[:,</span> <span>1</span><span>:]]</span>
    <span>riot_io_hits</span> <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>riot_io_positions</span> <span>&amp;</span> <span>riot_io_targets</span><span>,</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>riot_accesses</span> <span>+=</span> <span>riot_io_hits</span>
    
    <span># Unique opcode counting in first 1KB (code section)
</span>    <span>unique_opcodes</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>batch_size</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>int32</span><span>)</span>
    <span>first_kb</span> <span>=</span> <span>roms</span><span>[:,</span> <span>:</span><span>1024</span><span>]</span>  <span># First 1KB where code typically resides
</span>    
    <span># Count unique valid opcodes in the code section
</span>    <span>for</span> <span>opcode</span> <span>in</span> <span>VALID_OPCODES</span><span>:</span>
        <span>has_opcode</span> <span>=</span> <span>cp</span><span>.</span><span>any</span><span>(</span><span>first_kb</span> <span>==</span> <span>opcode</span><span>,</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
        <span>unique_opcodes</span> <span>+=</span> <span>has_opcode</span><span>.</span><span>astype</span><span>(</span><span>cp</span><span>.</span><span>int32</span><span>)</span>
    
    <span># Composite score
</span>    <span>scores</span> <span>=</span> <span>(</span>
        <span>opcode_ratio</span> <span>*</span> <span>0.25</span> <span>+</span> 
        <span>cp</span><span>.</span><span>minimum</span><span>(</span><span>tia_accesses</span> <span>/</span> <span>150.0</span><span>,</span> <span>1.0</span><span>)</span> <span>*</span> <span>0.30</span> <span>+</span>
        <span>cp</span><span>.</span><span>minimum</span><span>(</span><span>riot_accesses</span> <span>/</span> <span>50.0</span><span>,</span> <span>1.0</span><span>)</span> <span>*</span> <span>0.20</span> <span>+</span>
        <span>cp</span><span>.</span><span>minimum</span><span>(</span><span>branch_count</span> <span>/</span> <span>200.0</span><span>,</span> <span>1.0</span><span>)</span> <span>*</span> <span>0.15</span> <span>+</span>
        <span>cp</span><span>.</span><span>minimum</span><span>(</span><span>jump_count</span> <span>/</span> <span>40.0</span><span>,</span> <span>1.0</span><span>)</span> <span>*</span> <span>0.10</span>
    <span>)</span>
    
    <span># Promising ROM detection
</span>    <span>promising</span> <span>=</span> <span>(</span>
        <span>(</span><span>opcode_ratio</span> <span>&gt;=</span> <span>OPCODE_THRESHOLD</span><span>)</span> <span>&amp;</span>
        <span>(</span><span>tia_accesses</span> <span>&gt;=</span> <span>TIA_THRESHOLD</span><span>)</span> <span>&amp;</span>
        <span>(</span><span>riot_accesses</span> <span>&gt;=</span> <span>RIOT_THRESHOLD</span><span>)</span> <span>&amp;</span>
        <span>(</span><span>branch_count</span> <span>&gt;=</span> <span>BRANCH_THRESHOLD</span><span>)</span> <span>&amp;</span>
        <span>(</span><span>jump_count</span> <span>&gt;=</span> <span>JUMP_THRESHOLD</span><span>)</span> <span>&amp;</span>
        <span>(</span><span>unique_opcodes</span> <span>&gt;=</span> <span>INSTRUCTION_VARIETY</span><span>)</span> <span>&amp;</span>
        <span>(</span><span>scores</span> <span>&gt;=</span> <span>MIN_SCORE</span><span>)</span>
    <span>)</span>
    
    <span>return</span> <span>{</span>
        <span>'scores'</span><span>:</span> <span>scores</span><span>,</span>
        <span>'opcode_ratio'</span><span>:</span> <span>opcode_ratio</span><span>,</span>
        <span>'tia_accesses'</span><span>:</span> <span>tia_accesses</span><span>,</span>
        <span>'riot_accesses'</span><span>:</span> <span>riot_accesses</span><span>,</span>
        <span>'branch_count'</span><span>:</span> <span>branch_count</span><span>,</span>
        <span>'jump_count'</span><span>:</span> <span>jump_count</span><span>,</span>
        <span>'unique_opcodes'</span><span>:</span> <span>unique_opcodes</span><span>,</span>
        <span>'promising'</span><span>:</span> <span>promising</span>
    <span>}</span>

<span>def</span> <span>save_promising_rom</span><span>(</span><span>rom_data</span><span>,</span> <span>score</span><span>,</span> <span>rom_id</span><span>,</span> <span>output_dir</span><span>):</span>
    <span>"""Save promising ROM with: number_score_timestamp.bin"""</span>
    <span>timestamp</span> <span>=</span> <span>int</span><span>(</span><span>time</span><span>.</span><span>time</span><span>())</span>
    <span>filename</span> <span>=</span> <span>f</span><span>"</span><span>{</span><span>rom_id</span><span>:</span><span>06</span><span>d</span><span>}</span><span>_</span><span>{</span><span>score</span><span>:</span><span>.</span><span>3</span><span>f</span><span>}</span><span>_</span><span>{</span><span>timestamp</span><span>}</span><span>.bin"</span>
    <span>filepath</span> <span>=</span> <span>output_dir</span> <span>/</span> <span>filename</span>
    
    <span>with</span> <span>open</span><span>(</span><span>filepath</span><span>,</span> <span>'wb'</span><span>)</span> <span>as</span> <span>f</span><span>:</span>
        <span>f</span><span>.</span><span>write</span><span>(</span><span>rom_data</span><span>.</span><span>tobytes</span><span>())</span>
    
    <span>return</span> <span>filename</span>

<span>def</span> <span>main</span><span>():</span>
    <span>print</span><span>(</span><span>"Finite Atari Machine - Streamlined CUDA Generator"</span><span>)</span>
    <span>print</span><span>(</span><span>"="</span> <span>*</span> <span>60</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"Batch size: </span><span>{</span><span>BATCH_SIZE</span><span>:</span><span>,</span><span>}</span><span> ROMs per batch"</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"ROM size: </span><span>{</span><span>ROM_SIZE</span><span>:</span><span>,</span><span>}</span><span> bytes"</span><span>)</span>
    <span>print</span><span>()</span>
    <span>print</span><span>(</span><span>"Thresholds:"</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"  Opcodes: </span><span>{</span><span>OPCODE_THRESHOLD</span><span>:</span><span>.</span><span>1</span><span>%</span><span>}</span><span>"</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"  TIA: </span><span>{</span><span>TIA_THRESHOLD</span><span>}</span><span>+"</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"  RIOT: </span><span>{</span><span>RIOT_THRESHOLD</span><span>}</span><span>+"</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"  Branches: </span><span>{</span><span>BRANCH_THRESHOLD</span><span>}</span><span>+"</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"  Jumps: </span><span>{</span><span>JUMP_THRESHOLD</span><span>}</span><span>+"</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"  Unique opcodes: </span><span>{</span><span>INSTRUCTION_VARIETY</span><span>}</span><span>+"</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"  Min score: </span><span>{</span><span>MIN_SCORE</span><span>:</span><span>.</span><span>2</span><span>f</span><span>}</span><span>"</span><span>)</span>
    <span>print</span><span>()</span>
    
    <span># GPU info
</span>    <span>try</span><span>:</span>
        <span>gpu_props</span> <span>=</span> <span>cp</span><span>.</span><span>cuda</span><span>.</span><span>runtime</span><span>.</span><span>getDeviceProperties</span><span>(</span><span>0</span><span>)</span>
        <span>gpu_name</span> <span>=</span> <span>gpu_props</span><span>[</span><span>'name'</span><span>].</span><span>decode</span><span>()</span>
        <span>total_mem</span> <span>=</span> <span>cp</span><span>.</span><span>cuda</span><span>.</span><span>runtime</span><span>.</span><span>memGetInfo</span><span>()[</span><span>1</span><span>]</span> <span>//</span> <span>1024</span><span>**</span><span>2</span>
        <span>print</span><span>(</span><span>f</span><span>"GPU: </span><span>{</span><span>gpu_name</span><span>}</span><span>"</span><span>)</span>
        <span>print</span><span>(</span><span>f</span><span>"Memory: </span><span>{</span><span>total_mem</span><span>:</span><span>,</span><span>}</span><span> MB"</span><span>)</span>
    <span>except</span> <span>Exception</span><span>:</span>
        <span>print</span><span>(</span><span>"GPU: CuPy device detected"</span><span>)</span>
    
    <span>print</span><span>(</span><span>"</span><span>\n</span><span>Initializing lookup tables..."</span><span>)</span>
    
    <span># Setup
</span>    <span>output_dir</span> <span>=</span> <span>Path</span><span>(</span><span>"finite_atari_roms"</span><span>)</span>
    <span>output_dir</span><span>.</span><span>mkdir</span><span>(</span><span>exist_ok</span><span>=</span><span>True</span><span>)</span>
    
    <span>lookup_tables</span> <span>=</span> <span>create_lookup_tables</span><span>()</span>
    
    <span># Statistics
</span>    <span>total_generated</span> <span>=</span> <span>0</span>
    <span>promising_found</span> <span>=</span> <span>0</span>
    <span>start_time</span> <span>=</span> <span>time</span><span>.</span><span>time</span><span>()</span>
    <span>last_report</span> <span>=</span> <span>start_time</span>
    <span>best_score_ever</span> <span>=</span> <span>0.0</span>
    
    <span>print</span><span>(</span><span>"Starting ROM generation..."</span><span>)</span>
    <span>print</span><span>(</span><span>"="</span> <span>*</span> <span>60</span><span>)</span>
    
    <span>try</span><span>:</span>
        <span>while</span> <span>True</span><span>:</span>
            <span>batch_start</span> <span>=</span> <span>time</span><span>.</span><span>time</span><span>()</span>
            
            <span># Generate batch of ROMs
</span>            <span>roms</span> <span>=</span> <span>cp</span><span>.</span><span>random</span><span>.</span><span>randint</span><span>(</span><span>0</span><span>,</span> <span>256</span><span>,</span> <span>size</span><span>=</span><span>(</span><span>BATCH_SIZE</span><span>,</span> <span>ROM_SIZE</span><span>),</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>uint8</span><span>)</span>
            
            <span># Analyze ROMs
</span>            <span>analysis</span> <span>=</span> <span>analyze_roms</span><span>(</span><span>roms</span><span>,</span> <span>lookup_tables</span><span>)</span>
            
            <span># Track best score
</span>            <span>current_best</span> <span>=</span> <span>float</span><span>(</span><span>cp</span><span>.</span><span>max</span><span>(</span><span>analysis</span><span>[</span><span>'scores'</span><span>]))</span>
            <span>if</span> <span>current_best</span> <span>&gt;</span> <span>best_score_ever</span><span>:</span>
                <span>best_score_ever</span> <span>=</span> <span>current_best</span>
            
            <span># Check for promising ROMs
</span>            <span>promising_indices</span> <span>=</span> <span>cp</span><span>.</span><span>where</span><span>(</span><span>analysis</span><span>[</span><span>'promising'</span><span>])[</span><span>0</span><span>]</span>
            
            <span>if</span> <span>len</span><span>(</span><span>promising_indices</span><span>)</span> <span>&gt;</span> <span>0</span><span>:</span>
                <span># Save promising ROMs
</span>                <span>promising_roms</span> <span>=</span> <span>cp</span><span>.</span><span>asnumpy</span><span>(</span><span>roms</span><span>[</span><span>promising_indices</span><span>])</span>
                <span>promising_scores</span> <span>=</span> <span>cp</span><span>.</span><span>asnumpy</span><span>(</span><span>analysis</span><span>[</span><span>'scores'</span><span>][</span><span>promising_indices</span><span>])</span>
                
                <span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>len</span><span>(</span><span>promising_indices</span><span>)):</span>
                    <span>filename</span> <span>=</span> <span>save_promising_rom</span><span>(</span>
                        <span>promising_roms</span><span>[</span><span>i</span><span>],</span> <span>promising_scores</span><span>[</span><span>i</span><span>],</span> <span>promising_found</span><span>,</span> <span>output_dir</span>
                    <span>)</span>
                    <span>promising_found</span> <span>+=</span> <span>1</span>
            
            <span>total_generated</span> <span>+=</span> <span>BATCH_SIZE</span>
            <span>batch_time</span> <span>=</span> <span>time</span><span>.</span><span>time</span><span>()</span> <span>-</span> <span>batch_start</span>
            
            <span># Progress reporting
</span>            <span>current_time</span> <span>=</span> <span>time</span><span>.</span><span>time</span><span>()</span>
            <span>if</span> <span>current_time</span> <span>-</span> <span>last_report</span> <span>&gt;=</span> <span>4</span><span>:</span>
                <span># Get best ROM stats for this batch
</span>                <span>scores</span> <span>=</span> <span>cp</span><span>.</span><span>asnumpy</span><span>(</span><span>analysis</span><span>[</span><span>'scores'</span><span>])</span>
                <span>best_idx</span> <span>=</span> <span>np</span><span>.</span><span>argmax</span><span>(</span><span>scores</span><span>)</span>
                <span>best_opcodes</span> <span>=</span> <span>float</span><span>(</span><span>analysis</span><span>[</span><span>'opcode_ratio'</span><span>][</span><span>best_idx</span><span>])</span>
                <span>best_tia</span> <span>=</span> <span>int</span><span>(</span><span>analysis</span><span>[</span><span>'tia_accesses'</span><span>][</span><span>best_idx</span><span>])</span>
                <span>best_riot</span> <span>=</span> <span>int</span><span>(</span><span>analysis</span><span>[</span><span>'riot_accesses'</span><span>][</span><span>best_idx</span><span>])</span>
                <span>best_branches</span> <span>=</span> <span>int</span><span>(</span><span>analysis</span><span>[</span><span>'branch_count'</span><span>][</span><span>best_idx</span><span>])</span>
                <span>best_jumps</span> <span>=</span> <span>int</span><span>(</span><span>analysis</span><span>[</span><span>'jump_count'</span><span>][</span><span>best_idx</span><span>])</span>
                
                <span>elapsed</span> <span>=</span> <span>current_time</span> <span>-</span> <span>start_time</span>
                <span>rate</span> <span>=</span> <span>total_generated</span> <span>/</span> <span>elapsed</span>
                <span>success_rate</span> <span>=</span> <span>promising_found</span> <span>/</span> <span>total_generated</span> <span>*</span> <span>100</span> <span>if</span> <span>total_generated</span> <span>&gt;</span> <span>0</span> <span>else</span> <span>0</span>
                
                <span>print</span><span>(</span><span>f</span><span>"</span><span>\r</span><span>Generated: </span><span>{</span><span>total_generated</span><span>:</span><span>,</span><span>}</span><span> | Found: </span><span>{</span><span>promising_found</span><span>}</span><span> | "</span>
                      <span>f</span><span>"Success: </span><span>{</span><span>success_rate</span><span>:</span><span>.</span><span>8</span><span>f</span><span>}</span><span>% | Rate: </span><span>{</span><span>rate</span><span>:</span><span>,.</span><span>0</span><span>f</span><span>}</span><span>/sec | "</span>
                      <span>f</span><span>"Best: </span><span>{</span><span>best_score_ever</span><span>:</span><span>.</span><span>3</span><span>f</span><span>}</span><span> | "</span>
                      <span>f</span><span>"Op:</span><span>{</span><span>best_opcodes</span><span>:</span><span>.</span><span>1</span><span>%</span><span>}</span><span> TIA:</span><span>{</span><span>best_tia</span><span>}</span><span> RIOT:</span><span>{</span><span>best_riot</span><span>}</span><span> Br:</span><span>{</span><span>best_branches</span><span>}</span><span> Jmp:</span><span>{</span><span>best_jumps</span><span>}</span><span>"</span><span>,</span> 
                      <span>end</span><span>=</span><span>""</span><span>,</span> <span>flush</span><span>=</span><span>True</span><span>)</span>
                
                <span>last_report</span> <span>=</span> <span>current_time</span>
    
    <span>except</span> <span>KeyboardInterrupt</span><span>:</span>
        <span>elapsed</span> <span>=</span> <span>time</span><span>.</span><span>time</span><span>()</span> <span>-</span> <span>start_time</span>
        <span>rate</span> <span>=</span> <span>total_generated</span> <span>/</span> <span>elapsed</span>
        <span>success_rate</span> <span>=</span> <span>promising_found</span> <span>/</span> <span>total_generated</span> <span>*</span> <span>100</span> <span>if</span> <span>total_generated</span> <span>&gt;</span> <span>0</span> <span>else</span> <span>0</span>
        
        <span>print</span><span>(</span><span>f</span><span>"</span><span>\n\n</span><span>Stopped after </span><span>{</span><span>elapsed</span><span>:</span><span>.</span><span>1</span><span>f</span><span>}</span><span> seconds"</span><span>)</span>
        <span>print</span><span>(</span><span>f</span><span>"Total ROMs generated: </span><span>{</span><span>total_generated</span><span>:</span><span>,</span><span>}</span><span>"</span><span>)</span>
        <span>print</span><span>(</span><span>f</span><span>"Promising ROMs found: </span><span>{</span><span>promising_found</span><span>}</span><span>"</span><span>)</span>
        <span>print</span><span>(</span><span>f</span><span>"Success rate: </span><span>{</span><span>success_rate</span><span>:</span><span>.</span><span>8</span><span>f</span><span>}</span><span>%"</span><span>)</span>
        <span>print</span><span>(</span><span>f</span><span>"Average rate: </span><span>{</span><span>rate</span><span>:</span><span>,.</span><span>0</span><span>f</span><span>}</span><span> ROMs/second"</span><span>)</span>
        <span>print</span><span>(</span><span>f</span><span>"Best score achieved: </span><span>{</span><span>best_score_ever</span><span>:</span><span>.</span><span>4</span><span>f</span><span>}</span><span>"</span><span>)</span>
        <span>print</span><span>(</span><span>f</span><span>"Results saved in: </span><span>{</span><span>output_dir</span><span>}</span><span>"</span><span>)</span>

<span>if</span> <span>__name__</span> <span>==</span> <span>"__main__"</span><span>:</span>
    <span>main</span><span>()</span>

</code></pre></div>

<p>…Which gave me a whopping 60,000 ‘random’ ROMs checked per second. With the heuristics, I was finding one ‘promising’ ROM for every 2.59 million ROMs generated. It’s one ROM every few minutes.</p>

<h2 id="first-results-and-why-machine-learning-didnt-work">First Results And Why Machine Learning Didn’t Work</h2>

<p>After checking <em>billions and billions</em> of potential ROMs, I had a collection of about 10,000 that passed the heuristics laid out above. I could move onto the next step: checking them all in an emulator.</p>

<p>I tried two methods of running these 10,000 ROMs in an emulator to see if there was anything ‘game-like’. The first was a classifier, trained on ~1,500 real commercial Atari ROMs (positives) and ~1,500 GPU-generated random ROMs (negatives). These trained a model (Random Forest) with features ranging from “Would the emulator execute the ROM”, to more pertinate features such as, “how many times did the registers of the TIA change during 2 seconds of execution time.”</p>

<p>This is, academically, the correct way to do this. By scripting in output from <a href="https://stella-emu.github.io/">Stella</a>, and <a href="https://www.mamedev.org/">MAME</a>, I was able to build a classifier that would tell me if a random ROM <em>could</em> run on an Atari. Unfortunately, it didn’t work. The top-scoring results were mostly all black screens when run on an emulator. This made sense when I looked at the model. The most important features were:</p>

<table>
  <thead>
    <tr>
      <th>Feature</th>
      <th>Value</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>execution_time</td>
      <td>0.9847</td>
    </tr>
    <tr>
      <td>output_lines</td>
      <td>0.0086</td>
    </tr>
    <tr>
      <td>stdout_length</td>
      <td>0.0067</td>
    </tr>
    <tr>
      <td>crashed</td>
      <td>0.0000</td>
    </tr>
    <tr>
      <td>stderr_length</td>
      <td>0.0000</td>
    </tr>
    <tr>
      <td>video_indicators</td>
      <td>0.0000</td>
    </tr>
    <tr>
      <td>audio_indicators</td>
      <td>0.0000</td>
    </tr>
    <tr>
      <td>tia_activity</td>
      <td>0.0000</td>
    </tr>
    <tr>
      <td>game_indicators</td>
      <td>0.0000</td>
    </tr>
    <tr>
      <td>error_indicators</td>
      <td>0.0000</td>
    </tr>
  </tbody>
</table>

<p>It was obvious what was happening: I was only selecting for ROMs that <em>ran</em>, not ROMs that <em>did anything interesting</em>. A quick check showed they were just booting into an infinite loop; After booting, there would be a few instructions that did nothing until eventually jumping back to somewhere around the reset vector. In fact, this <em>should</em> be frequently found. Consider the simplest possible Atari program:</p>

<pre><code>
; Program starts at $F000

F000: 4C 00 F0   ; JMP $F000 — forever doing nothing
</code></pre>

<p>This code starts running at F000, and jumps immediately to that same address. The odds of generating this code are $\frac{1}{256} \times \frac{1}{256} \times \frac{1}{256} = \frac{1}{16,777,216}$. In other words, for every 16 Million ROMs I generate, I will have one that is a valid ROM that does absolutely nothing. I probably generated this ROM several times while generating 30 Billion ROMs. I just don’t care about a program that does nothing.</p>

<p>In short, a classifier on the actual machine code was worthless. Or my training data was. But then again, there’s no training set for Atari games that almost work — just masterpieces and garbage.</p>

<h2 id="second-results-finding-anything-interesting">Second Results, Finding Anything Interesting</h2>

<p>Realizing I only want one thing - interesting visual output - I rewrote the generation pipeline to find interesting ROMs and immediately send them to an emulator to find interesting candidates.</p>

<div><pre><code><span># ==========================================================================
#
#   Finite Atari unified pipeline (4 KB, reset @ $F000) - FIXED VERSION
#
#   This script generates random Atari 2600 ROMs in the GPU via CUDA,
#   Filters them on-GPU with a heuristic, and if interesting, boots
#   them in head-less MAME for 2 s to check if they have dynamic video.
#
#   It is designed to run on a CUDA-capable GPU with MAME installed in PATH.
#
#   The output is saved in the "finite_atari_roms" directory.
#
# ===========================================================================
</span>
<span>from</span> <span>__future__</span> <span>import</span> <span>annotations</span>
<span>import</span> <span>cupy</span> <span>as</span> <span>cp</span><span>,</span> <span>numpy</span> <span>as</span> <span>np</span><span>,</span> <span>hashlib</span><span>,</span> <span>subprocess</span><span>,</span> <span>tempfile</span><span>,</span> <span>time</span><span>,</span> <span>textwrap</span>
<span>from</span> <span>pathlib</span> <span>import</span> <span>Path</span>
<span>from</span> <span>PIL</span> <span>import</span> <span>Image</span>

<span># ─── 1.  Global constants ────────────────────────────────────────────────────
</span><span>ROM_SIZE</span>       <span>=</span> <span>4096</span>
<span>PAYLOAD_BYTES</span>  <span>=</span> <span>ROM_SIZE</span> <span>-</span> <span>2</span>
<span>RESET_VECTOR</span>   <span>=</span> <span>(</span><span>0x00</span><span>,</span> <span>0xF0</span><span>)</span>         <span># little-endian $F000
</span><span>BATCH_SIZE</span>     <span>=</span> <span>1024</span> <span>*</span> <span>256</span>           <span># ~256 k ROMs per GPU batch
</span><span>STATUS_EVERY</span>   <span>=</span> <span>10</span>                   <span># batches between status prints
</span><span>OUTPUT_DIR</span>     <span>=</span> <span>Path</span><span>(</span><span>"finite_atari_roms"</span><span>);</span> <span>OUTPUT_DIR</span><span>.</span><span>mkdir</span><span>(</span><span>exist_ok</span><span>=</span><span>True</span><span>)</span>

<span># Video thresholds
</span><span>BLACK_LEVEL</span>          <span>=</span> <span>15</span>             <span># 0-255 grey; ≤ this is "black"
</span><span>NONBLACK_THRESHOLD</span>   <span>=</span> <span>0.005</span>          <span># ≥ 0.5 % pixels brighter ⇒ video
</span><span>DYNAMIC_THRESHOLD</span>    <span>=</span> <span>0.01</span>           <span># ≥ 1 % hashed pixels differ ⇒ motion
</span>
<span># Heuristic thresholds (same as your earlier Stella/MAME scripts)
</span><span>OPCODE_THRESHOLD</span>    <span>=</span> <span>0.58</span>
<span>TIA_THRESHOLD</span>       <span>=</span> <span>50</span>
<span>RIOT_THRESHOLD</span>      <span>=</span> <span>13</span>
<span>BRANCH_THRESHOLD</span>    <span>=</span> <span>150</span>
<span>JUMP_THRESHOLD</span>      <span>=</span> <span>37</span>
<span>INSTRUCTION_VARIETY</span> <span>=</span> <span>100</span>
<span>MIN_SCORE</span>           <span>=</span> <span>0.52</span>

<span># ─── 2.  Opcode lookup tables ────────────────────────────────────────────────
# Valid 6502 opcodes for 2600 home-brew context
</span><span>VALID_OPCODES</span> <span>=</span> <span>np</span><span>.</span><span>array</span><span>([</span>
    <span>0x00</span><span>,</span><span>0x01</span><span>,</span><span>0x05</span><span>,</span><span>0x06</span><span>,</span><span>0x08</span><span>,</span><span>0x09</span><span>,</span><span>0x0A</span><span>,</span><span>0x0D</span><span>,</span><span>0x0E</span><span>,</span><span>0x10</span><span>,</span><span>0x11</span><span>,</span><span>0x15</span><span>,</span><span>0x16</span><span>,</span><span>0x18</span><span>,</span>
    <span>0x19</span><span>,</span><span>0x1D</span><span>,</span><span>0x1E</span><span>,</span><span>0x20</span><span>,</span><span>0x21</span><span>,</span><span>0x24</span><span>,</span><span>0x25</span><span>,</span><span>0x26</span><span>,</span><span>0x28</span><span>,</span><span>0x29</span><span>,</span><span>0x2A</span><span>,</span><span>0x2C</span><span>,</span><span>0x2D</span><span>,</span><span>0x2E</span><span>,</span>
    <span>0x30</span><span>,</span><span>0x31</span><span>,</span><span>0x35</span><span>,</span><span>0x36</span><span>,</span><span>0x38</span><span>,</span><span>0x39</span><span>,</span><span>0x3D</span><span>,</span><span>0x3E</span><span>,</span><span>0x40</span><span>,</span><span>0x41</span><span>,</span><span>0x45</span><span>,</span><span>0x46</span><span>,</span><span>0x48</span><span>,</span><span>0x49</span><span>,</span>
    <span>0x4A</span><span>,</span><span>0x4C</span><span>,</span><span>0x4D</span><span>,</span><span>0x4E</span><span>,</span><span>0x50</span><span>,</span><span>0x51</span><span>,</span><span>0x55</span><span>,</span><span>0x56</span><span>,</span><span>0x58</span><span>,</span><span>0x59</span><span>,</span><span>0x5D</span><span>,</span><span>0x5E</span><span>,</span><span>0x60</span><span>,</span><span>0x61</span><span>,</span>
    <span>0x65</span><span>,</span><span>0x66</span><span>,</span><span>0x68</span><span>,</span><span>0x69</span><span>,</span><span>0x6A</span><span>,</span><span>0x6C</span><span>,</span><span>0x6D</span><span>,</span><span>0x6E</span><span>,</span><span>0x70</span><span>,</span><span>0x71</span><span>,</span><span>0x75</span><span>,</span><span>0x76</span><span>,</span><span>0x78</span><span>,</span><span>0x79</span><span>,</span>
    <span>0x7D</span><span>,</span><span>0x7E</span><span>,</span><span>0x81</span><span>,</span><span>0x84</span><span>,</span><span>0x85</span><span>,</span><span>0x86</span><span>,</span><span>0x88</span><span>,</span><span>0x8A</span><span>,</span><span>0x8C</span><span>,</span><span>0x8D</span><span>,</span><span>0x8E</span><span>,</span><span>0x90</span><span>,</span><span>0x91</span><span>,</span><span>0x94</span><span>,</span>
    <span>0x95</span><span>,</span><span>0x96</span><span>,</span><span>0x98</span><span>,</span><span>0x99</span><span>,</span><span>0x9A</span><span>,</span><span>0x9D</span><span>,</span><span>0xA0</span><span>,</span><span>0xA1</span><span>,</span><span>0xA2</span><span>,</span><span>0xA4</span><span>,</span><span>0xA5</span><span>,</span><span>0xA6</span><span>,</span><span>0xA8</span><span>,</span><span>0xA9</span><span>,</span>
    <span>0xAA</span><span>,</span><span>0xAC</span><span>,</span><span>0xAD</span><span>,</span><span>0xAE</span><span>,</span><span>0xB0</span><span>,</span><span>0xB1</span><span>,</span><span>0xB4</span><span>,</span><span>0xB5</span><span>,</span><span>0xB6</span><span>,</span><span>0xB8</span><span>,</span><span>0xB9</span><span>,</span><span>0xBA</span><span>,</span><span>0xBC</span><span>,</span><span>0xBD</span><span>,</span>
    <span>0xBE</span><span>,</span><span>0xC0</span><span>,</span><span>0xC1</span><span>,</span><span>0xC4</span><span>,</span><span>0xC5</span><span>,</span><span>0xC6</span><span>,</span><span>0xC8</span><span>,</span><span>0xC9</span><span>,</span><span>0xCA</span><span>,</span><span>0xCC</span><span>,</span><span>0xCD</span><span>,</span><span>0xCE</span><span>,</span><span>0xD0</span><span>,</span><span>0xD1</span><span>,</span>
    <span>0xD5</span><span>,</span><span>0xD6</span><span>,</span><span>0xD8</span><span>,</span><span>0xD9</span><span>,</span><span>0xDD</span><span>,</span><span>0xDE</span><span>,</span><span>0xE0</span><span>,</span><span>0xE1</span><span>,</span><span>0xE4</span><span>,</span><span>0xE5</span><span>,</span><span>0xE6</span><span>,</span><span>0xE8</span><span>,</span><span>0xE9</span><span>,</span><span>0xEA</span><span>,</span>
    <span>0xEC</span><span>,</span><span>0xED</span><span>,</span><span>0xEE</span><span>,</span><span>0xF0</span><span>,</span><span>0xF1</span><span>,</span><span>0xF5</span><span>,</span><span>0xF6</span><span>,</span><span>0xF8</span><span>,</span><span>0xF9</span><span>,</span><span>0xFD</span><span>,</span><span>0xFE</span><span>],</span> <span>dtype</span><span>=</span><span>np</span><span>.</span><span>uint8</span><span>)</span>

<span>BRANCH_OPCODES</span> <span>=</span> <span>np</span><span>.</span><span>array</span><span>([</span><span>0x10</span><span>,</span><span>0x30</span><span>,</span><span>0x50</span><span>,</span><span>0x70</span><span>,</span><span>0x90</span><span>,</span><span>0xB0</span><span>,</span><span>0xD0</span><span>,</span><span>0xF0</span><span>],</span> <span>dtype</span><span>=</span><span>np</span><span>.</span><span>uint8</span><span>)</span>
<span>JUMP_OPCODES</span>   <span>=</span> <span>np</span><span>.</span><span>array</span><span>([</span><span>0x4C</span><span>,</span><span>0x6C</span><span>,</span><span>0x20</span><span>],</span> <span>dtype</span><span>=</span><span>np</span><span>.</span><span>uint8</span><span>)</span>

<span>def</span> <span>create_luts</span><span>():</span>
    <span>"""Return a dict of 256-entry boolean lookup tables (cupy)."""</span>
    <span>lut</span> <span>=</span> <span>{}</span>
    <span>lut</span><span>[</span><span>"valid"</span><span>]</span>  <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>cp</span><span>.</span><span>bool_</span><span>);</span> <span>lut</span><span>[</span><span>"valid"</span><span>][</span><span>VALID_OPCODES</span><span>]</span>  <span>=</span> <span>True</span>
    <span>lut</span><span>[</span><span>"branch"</span><span>]</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>cp</span><span>.</span><span>bool_</span><span>);</span> <span>lut</span><span>[</span><span>"branch"</span><span>][</span><span>BRANCH_OPCODES</span><span>]</span> <span>=</span> <span>True</span>
    <span>lut</span><span>[</span><span>"jump"</span><span>]</span>   <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>cp</span><span>.</span><span>bool_</span><span>);</span> <span>lut</span><span>[</span><span>"jump"</span><span>][</span><span>JUMP_OPCODES</span><span>]</span>     <span>=</span> <span>True</span>

    <span># 2600 addressing quirks for TIA/RIOT access detection
</span>    <span>lut</span><span>[</span><span>"tia_store"</span><span>]</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>lut</span><span>[</span><span>"tia_store"</span><span>][[</span><span>0x84</span><span>,</span><span>0x85</span><span>,</span><span>0x86</span><span>,</span> <span>0x94</span><span>,</span><span>0x95</span><span>,</span><span>0x96</span><span>]]</span> <span>=</span> <span>True</span>   <span># STY/STA/STX (zp &amp; zp,x)
</span>    <span>lut</span><span>[</span><span>"tia_load"</span><span>]</span>  <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>lut</span><span>[</span><span>"tia_load"</span> <span>][[</span><span>0xA4</span><span>,</span><span>0xA5</span><span>,</span><span>0xA6</span><span>,</span> <span>0xB4</span><span>,</span><span>0xB5</span><span>,</span><span>0xB6</span><span>]]</span> <span>=</span> <span>True</span>   <span># LDY/LDA/LDX (zp &amp; zp,x)
</span>    <span>lut</span><span>[</span><span>"tia_abs"</span><span>]</span>   <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>lut</span><span>[</span><span>"tia_abs"</span>  <span>][[</span><span>0x8C</span><span>,</span><span>0x8D</span><span>,</span><span>0x8E</span><span>,</span> <span>0xAC</span><span>,</span><span>0xAD</span><span>,</span><span>0xAE</span><span>]]</span> <span>=</span> <span>True</span>   <span># abs versions
</span>
    <span>lut</span><span>[</span><span>"riot_acc"</span><span>]</span>  <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>256</span><span>,</span> <span>cp</span><span>.</span><span>bool_</span><span>)</span>
    <span>lut</span><span>[</span><span>"riot_acc"</span><span>][[</span><span>0x84</span><span>,</span><span>0x85</span><span>,</span><span>0x86</span><span>,</span> <span>0xA4</span><span>,</span><span>0xA5</span><span>,</span><span>0xA6</span><span>]]</span> <span>=</span> <span>True</span>

    <span>addr</span> <span>=</span> <span>cp</span><span>.</span><span>arange</span><span>(</span><span>256</span><span>,</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>uint8</span><span>)</span>
    <span>lut</span><span>[</span><span>"tia_range"</span><span>]</span> <span>=</span> <span>addr</span> <span>&lt;=</span> <span>0x2F</span>
    <span>lut</span><span>[</span><span>"riot_tmr"</span><span>]</span>  <span>=</span> <span>(</span><span>addr</span> <span>&gt;=</span> <span>0x80</span><span>)</span> <span>&amp;</span> <span>(</span><span>addr</span> <span>&lt;=</span> <span>0x87</span><span>)</span>
    <span>lut</span><span>[</span><span>"riot_io"</span><span>]</span>   <span>=</span> <span>(</span><span>addr</span> <span>&gt;=</span> <span>0x94</span><span>)</span> <span>&amp;</span> <span>(</span><span>addr</span> <span>&lt;=</span> <span>0x97</span><span>)</span>
    <span>return</span> <span>lut</span>

<span># ─── 3.  GPU heuristic filter ────────────────────────────────────────────────
</span><span>def</span> <span>analyse_batch</span><span>(</span><span>roms</span><span>:</span> <span>cp</span><span>.</span><span>ndarray</span><span>,</span> <span>lut</span><span>)</span> <span>-&gt;</span> <span>tuple</span><span>[</span><span>np</span><span>.</span><span>ndarray</span><span>,</span> <span>cp</span><span>.</span><span>ndarray</span><span>]:</span>
    <span>"""
    Return (interesting_mask, scores) for a 2-D uint8 array of ROMs.
    Each row = one ROM.
    """</span>
    <span>valid_cnt</span>    <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>"valid"</span><span>][</span><span>roms</span><span>],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>opcode_ratio</span> <span>=</span> <span>valid_cnt</span><span>.</span><span>astype</span><span>(</span><span>cp</span><span>.</span><span>float32</span><span>)</span> <span>/</span> <span>ROM_SIZE</span>
    <span>branch_cnt</span>   <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>"branch"</span><span>][</span><span>roms</span><span>],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>jump_cnt</span>     <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>"jump"</span>  <span>][</span><span>roms</span><span>],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>

    <span># --- TIA accesses --------------------------------------------------------
</span>    <span>tia_acc</span>  <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>((</span><span>lut</span><span>[</span><span>"tia_store"</span><span>][</span><span>roms</span><span>[:,:</span><span>-</span><span>1</span><span>]]</span> <span>|</span> <span>lut</span><span>[</span><span>"tia_load"</span><span>][</span><span>roms</span><span>[:,:</span><span>-</span><span>1</span><span>]])</span>
                      <span>&amp;</span> <span>lut</span><span>[</span><span>"tia_range"</span><span>][</span><span>roms</span><span>[:,</span><span>1</span><span>:]],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>tia_acc</span> <span>+=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>"tia_abs"</span><span>][</span><span>roms</span><span>[:,:</span><span>-</span><span>2</span><span>]]</span>
                      <span>&amp;</span> <span>lut</span><span>[</span><span>"tia_range"</span><span>][</span><span>roms</span><span>[:,</span><span>1</span><span>:</span><span>-</span><span>1</span><span>]]</span>
                      <span>&amp;</span> <span>(</span><span>roms</span><span>[:,</span><span>2</span><span>:]</span> <span>==</span> <span>0x00</span><span>),</span> <span>axis</span><span>=</span><span>1</span><span>)</span>

    <span># --- RIOT accesses -------------------------------------------------------
</span>    <span>riot_acc</span>  <span>=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>"riot_acc"</span><span>][</span><span>roms</span><span>[:,:</span><span>-</span><span>1</span><span>]]</span> <span>&amp;</span> <span>lut</span><span>[</span><span>"riot_tmr"</span><span>][</span><span>roms</span><span>[:,</span><span>1</span><span>:]],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>
    <span>riot_acc</span> <span>+=</span> <span>cp</span><span>.</span><span>sum</span><span>(</span><span>lut</span><span>[</span><span>"riot_acc"</span><span>][</span><span>roms</span><span>[:,:</span><span>-</span><span>1</span><span>]]</span> <span>&amp;</span> <span>lut</span><span>[</span><span>"riot_io"</span> <span>][</span><span>roms</span><span>[:,</span><span>1</span><span>:]],</span> <span>axis</span><span>=</span><span>1</span><span>)</span>

    <span># --- Opcode diversity in first 1 KB --------------------------------------
</span>    <span>uniq</span> <span>=</span> <span>cp</span><span>.</span><span>zeros</span><span>(</span><span>roms</span><span>.</span><span>shape</span><span>[</span><span>0</span><span>],</span> <span>dtype</span><span>=</span><span>cp</span><span>.</span><span>int32</span><span>)</span>
    <span>first_kb</span> <span>=</span> <span>roms</span><span>[:,</span> <span>:</span><span>1024</span><span>]</span>
    <span>for</span> <span>op</span> <span>in</span> <span>VALID_OPCODES</span><span>:</span>
        <span>uniq</span> <span>+=</span> <span>cp</span><span>.</span><span>any</span><span>(</span><span>first_kb</span> <span>==</span> <span>op</span><span>,</span> <span>axis</span><span>=</span><span>1</span><span>)</span>

    <span>scores</span> <span>=</span> <span>(</span><span>opcode_ratio</span> <span>*</span> <span>0.25</span> <span>+</span>
              <span>cp</span><span>.</span><span>minimum</span><span>(</span><span>tia_acc</span> <span>/</span> <span>150.0</span><span>,</span> <span>1.0</span><span>)</span> <span>*</span> <span>0.30</span> <span>+</span>
              <span>cp</span><span>.</span><span>minimum</span><span>(</span><span>riot_acc</span> <span>/</span> <span>50.0</span><span>,</span> <span>1.0</span><span>)</span>  <span>*</span> <span>0.20</span> <span>+</span>
              <span>cp</span><span>.</span><span>minimum</span><span>(</span><span>branch_cnt</span> <span>/</span> <span>200.0</span><span>,</span> <span>1.0</span><span>)</span> <span>*</span> <span>0.15</span> <span>+</span>
              <span>cp</span><span>.</span><span>minimum</span><span>(</span><span>jump_cnt</span> <span>/</span> <span>40.0</span><span>,</span> <span>1.0</span><span>)</span>   <span>*</span> <span>0.10</span><span>)</span>

    <span>interesting</span> <span>=</span> <span>((</span><span>opcode_ratio</span> <span>&gt;=</span> <span>OPCODE_THRESHOLD</span><span>)</span> <span>&amp;</span>
                   <span>(</span><span>tia_acc</span>      <span>&gt;=</span> <span>TIA_THRESHOLD</span><span>)</span> <span>&amp;</span>
                   <span>(</span><span>riot_acc</span>     <span>&gt;=</span> <span>RIOT_THRESHOLD</span><span>)</span> <span>&amp;</span>
                   <span>(</span><span>branch_cnt</span>   <span>&gt;=</span> <span>BRANCH_THRESHOLD</span><span>)</span> <span>&amp;</span>
                   <span>(</span><span>jump_cnt</span>     <span>&gt;=</span> <span>JUMP_THRESHOLD</span><span>)</span> <span>&amp;</span>
                   <span>(</span><span>uniq</span>         <span>&gt;=</span> <span>INSTRUCTION_VARIETY</span><span>)</span> <span>&amp;</span>
                   <span>(</span><span>scores</span>       <span>&gt;=</span> <span>MIN_SCORE</span><span>))</span>

    <span>return</span> <span>interesting</span><span>,</span> <span>scores</span>

<span># ─── 4.  Lua helper script (snapshot two frames) - FIXED ────────────────────
</span><span>SNAPSHOT_LUA</span> <span>=</span> <span>textwrap</span><span>.</span><span>dedent</span><span>(</span><span>"""
    local s = manager.machine.screens[":screen"]
    local frame_count = 0
    emu.register_frame_done(function ()
        frame_count = frame_count + 1
        if     frame_count == 1  then s:snapshot("first.png")
        elseif frame_count == 60 then s:snapshot("second.png"); manager.machine:exit() end
    end, "snapper")
"""</span><span>)</span>

<span># ─── 5.  Video analysis helpers ──────────────────────────────────────────────
</span><span>def</span> <span>_hash16</span><span>(</span><span>img</span><span>:</span> <span>Path</span><span>)</span> <span>-&gt;</span> <span>str</span><span>:</span>
    <span>with</span> <span>Image</span><span>.</span><span>open</span><span>(</span><span>img</span><span>)</span> <span>as</span> <span>im</span><span>:</span>
        <span>im</span> <span>=</span> <span>im</span><span>.</span><span>convert</span><span>(</span><span>"L"</span><span>).</span><span>resize</span><span>((</span><span>16</span><span>,</span><span>16</span><span>),</span> <span>Image</span><span>.</span><span>NEAREST</span><span>)</span>
        <span>return</span> <span>hashlib</span><span>.</span><span>sha1</span><span>(</span><span>im</span><span>.</span><span>tobytes</span><span>()).</span><span>hexdigest</span><span>()</span>

<span>def</span> <span>_frame_is_nonblack</span><span>(</span><span>img</span><span>:</span> <span>Path</span><span>)</span> <span>-&gt;</span> <span>bool</span><span>:</span>
    <span>with</span> <span>Image</span><span>.</span><span>open</span><span>(</span><span>img</span><span>)</span> <span>as</span> <span>im</span><span>:</span>
        <span>g</span> <span>=</span> <span>np</span><span>.</span><span>asarray</span><span>(</span><span>im</span><span>.</span><span>convert</span><span>(</span><span>"L"</span><span>))</span>
    <span>return</span> <span>(</span><span>g</span> <span>&gt;</span> <span>BLACK_LEVEL</span><span>).</span><span>mean</span><span>()</span> <span>&gt;=</span> <span>NONBLACK_THRESHOLD</span>

<span>def</span> <span>rom_video_flags</span><span>(</span><span>rom</span><span>:</span> <span>bytes</span><span>,</span> <span>*</span><span>,</span> <span>mame</span><span>=</span><span>"mame"</span><span>,</span> <span>seconds</span><span>=</span><span>2.0</span><span>)</span> <span>-&gt;</span> <span>tuple</span><span>[</span><span>bool</span><span>,</span><span>bool</span><span>]:</span>
    <span>"""
    Returns (has_video, is_dynamic).
    • has_video  → first frame not black
    • is_dynamic → ≥ 1 % hashed pixels differ between frame 1 and 60
    """</span>
    <span>with</span> <span>tempfile</span><span>.</span><span>TemporaryDirectory</span><span>()</span> <span>as</span> <span>td_s</span><span>:</span>
        <span>td</span> <span>=</span> <span>Path</span><span>(</span><span>td_s</span><span>)</span>
        <span>(</span><span>td</span> <span>/</span> <span>"test.bin"</span><span>).</span><span>write_bytes</span><span>(</span><span>rom</span><span>)</span>
        <span>(</span><span>td</span> <span>/</span> <span>"snapshot.lua"</span><span>).</span><span>write_text</span><span>(</span><span>SNAPSHOT_LUA</span><span>)</span>

        <span>base</span> <span>=</span> <span>[</span><span>mame</span><span>,</span> <span>"a2600"</span><span>,</span> <span>"-cart"</span><span>,</span> <span>"test.bin"</span><span>,</span>
                <span>"-seconds_to_run"</span><span>,</span> <span>str</span><span>(</span><span>seconds</span><span>),</span>
                <span>"-nothrottle"</span><span>,</span> <span>"-window"</span><span>,</span> <span>"-sound"</span><span>,</span> <span>"none"</span><span>,</span> <span>"-skip_gameinfo"</span><span>]</span>

        <span>for</span> <span>flag</span> <span>in</span> <span>(</span><span>"-autoboot_script"</span><span>,</span> <span>"-script"</span><span>):</span>
            <span>try</span><span>:</span>
                <span>subprocess</span><span>.</span><span>run</span><span>(</span><span>base</span> <span>+</span> <span>[</span><span>flag</span><span>,</span> <span>"snapshot.lua"</span><span>],</span>
                               <span>cwd</span><span>=</span><span>td</span><span>,</span> <span>stdout</span><span>=</span><span>subprocess</span><span>.</span><span>DEVNULL</span><span>,</span>
                               <span>stderr</span><span>=</span><span>subprocess</span><span>.</span><span>DEVNULL</span><span>,</span> <span>timeout</span><span>=</span><span>seconds</span><span>*</span><span>5</span><span>,</span>
                               <span>check</span><span>=</span><span>True</span><span>)</span>
                <span>break</span>
            <span>except</span> <span>(</span><span>subprocess</span><span>.</span><span>CalledProcessError</span><span>,</span> <span>subprocess</span><span>.</span><span>TimeoutExpired</span><span>):</span>
                <span>if</span> <span>flag</span> <span>==</span> <span>"-autoboot_script"</span><span>:</span>
                    <span>continue</span>
                <span>return</span> <span>(</span><span>False</span><span>,</span> <span>False</span><span>)</span>

        <span># Check both root directory and snap subdirectory for frames
</span>        <span>f1</span><span>,</span> <span>f2</span> <span>=</span> <span>td</span> <span>/</span> <span>"first.png"</span><span>,</span> <span>td</span> <span>/</span> <span>"second.png"</span>
        <span>snap_dir</span> <span>=</span> <span>td</span> <span>/</span> <span>"snap"</span>
        <span>if</span> <span>not</span> <span>f1</span><span>.</span><span>exists</span><span>()</span> <span>and</span> <span>snap_dir</span><span>.</span><span>exists</span><span>():</span>
            <span>snap_f1</span> <span>=</span> <span>snap_dir</span> <span>/</span> <span>"first.png"</span>
            <span>snap_f2</span> <span>=</span> <span>snap_dir</span> <span>/</span> <span>"second.png"</span>
            <span>if</span> <span>snap_f1</span><span>.</span><span>exists</span><span>():</span>
                <span>f1</span> <span>=</span> <span>snap_f1</span>
            <span>if</span> <span>snap_f2</span><span>.</span><span>exists</span><span>():</span>
                <span>f2</span> <span>=</span> <span>snap_f2</span>

        <span>if</span> <span>not</span> <span>f1</span><span>.</span><span>exists</span><span>():</span>
            <span>return</span> <span>(</span><span>False</span><span>,</span> <span>False</span><span>)</span>

        <span>nonblack</span> <span>=</span> <span>_frame_is_nonblack</span><span>(</span><span>f1</span><span>)</span>
        <span>if</span> <span>not</span> <span>nonblack</span> <span>or</span> <span>not</span> <span>f2</span><span>.</span><span>exists</span><span>():</span>
            <span>return</span> <span>(</span><span>nonblack</span><span>,</span> <span>False</span><span>)</span>

        <span>diff_bits</span> <span>=</span> <span>bin</span><span>(</span><span>int</span><span>(</span><span>_hash16</span><span>(</span><span>f1</span><span>),</span><span>16</span><span>)</span> <span>^</span> <span>int</span><span>(</span><span>_hash16</span><span>(</span><span>f2</span><span>),</span><span>16</span><span>)).</span><span>count</span><span>(</span><span>"1"</span><span>)</span>
        <span>dynamic</span> <span>=</span> <span>diff_bits</span> <span>/</span> <span>256.0</span> <span>&gt;=</span> <span>DYNAMIC_THRESHOLD</span>
        <span>return</span> <span>(</span><span>nonblack</span><span>,</span> <span>dynamic</span><span>)</span>

<span># ─── 6.  ROM generator ───────────────────────────────────────────────────────
</span><span>def</span> <span>generate_batch</span><span>(</span><span>n</span><span>:</span> <span>int</span><span>)</span> <span>-&gt;</span> <span>np</span><span>.</span><span>ndarray</span><span>:</span>
    <span>payload</span> <span>=</span> <span>np</span><span>.</span><span>random</span><span>.</span><span>randint</span><span>(</span><span>0</span><span>,</span> <span>256</span><span>,</span> <span>size</span><span>=</span><span>(</span><span>n</span><span>,</span> <span>PAYLOAD_BYTES</span><span>),</span> <span>dtype</span><span>=</span><span>np</span><span>.</span><span>uint8</span><span>)</span>
    <span>reset</span>   <span>=</span> <span>np</span><span>.</span><span>tile</span><span>(</span><span>np</span><span>.</span><span>array</span><span>(</span><span>RESET_VECTOR</span><span>,</span> <span>dtype</span><span>=</span><span>np</span><span>.</span><span>uint8</span><span>),</span> <span>(</span><span>n</span><span>,</span><span>1</span><span>))</span>
    <span>return</span> <span>np</span><span>.</span><span>hstack</span><span>((</span><span>payload</span><span>,</span> <span>reset</span><span>))</span>

<span># ─── 7.  Main loop ───────────────────────────────────────────────────────────
</span><span>def</span> <span>main</span><span>():</span>
    <span>lut</span> <span>=</span> <span>create_luts</span><span>()</span>
    <span>tot_gen</span> <span>=</span> <span>tot_int</span> <span>=</span> <span>tot_vid</span> <span>=</span> <span>tot_dyn</span> <span>=</span> <span>0</span>
    <span>batch_idx</span> <span>=</span> <span>0</span>
    <span>start</span> <span>=</span> <span>time</span><span>.</span><span>perf_counter</span><span>()</span>

    <span>try</span><span>:</span>
        <span>while</span> <span>True</span><span>:</span>
            <span>roms_cpu</span> <span>=</span> <span>generate_batch</span><span>(</span><span>BATCH_SIZE</span><span>);</span> <span>tot_gen</span> <span>+=</span> <span>BATCH_SIZE</span>

            <span>roms_gpu</span> <span>=</span> <span>cp</span><span>.</span><span>asarray</span><span>(</span><span>roms_cpu</span><span>)</span>
            <span>keep</span><span>,</span> <span>_</span> <span>=</span> <span>analyse_batch</span><span>(</span><span>roms_gpu</span><span>,</span> <span>lut</span><span>)</span>
            <span>keep</span> <span>=</span> <span>keep</span><span>.</span><span>get</span><span>();</span> <span>del</span> <span>roms_gpu</span>
            <span>interesting</span> <span>=</span> <span>roms_cpu</span><span>[</span><span>keep</span><span>]</span>
            <span>tot_int</span> <span>+=</span> <span>len</span><span>(</span><span>interesting</span><span>)</span>

            <span>for</span> <span>rom</span> <span>in</span> <span>interesting</span><span>:</span>
                <span>has_vid</span><span>,</span> <span>is_dyn</span> <span>=</span> <span>rom_video_flags</span><span>(</span><span>rom</span><span>.</span><span>tobytes</span><span>())</span>

                <span># Save if EITHER condition is true
</span>                <span>if</span> <span>has_vid</span> <span>or</span> <span>is_dyn</span><span>:</span>
                    <span>sha</span> <span>=</span> <span>hashlib</span><span>.</span><span>sha1</span><span>(</span><span>rom</span><span>).</span><span>hexdigest</span><span>()[:</span><span>12</span><span>]</span>
                    <span>(</span><span>OUTPUT_DIR</span> <span>/</span> <span>f</span><span>"</span><span>{</span><span>sha</span><span>}</span><span>.bin"</span><span>).</span><span>write_bytes</span><span>(</span><span>rom</span><span>.</span><span>tobytes</span><span>())</span>

                <span># Separate bookkeeping
</span>                <span>if</span> <span>has_vid</span><span>:</span>
                    <span>tot_vid</span> <span>+=</span> <span>1</span>           <span># first frame not black
</span>                <span>if</span> <span>is_dyn</span><span>:</span>
                    <span>tot_dyn</span> <span>+=</span> <span>1</span>           <span># animation detected
</span>
            <span>batch_idx</span> <span>+=</span> <span>1</span>
            <span>if</span> <span>batch_idx</span> <span>%</span> <span>STATUS_EVERY</span> <span>==</span> <span>0</span><span>:</span>
                <span>elapsed</span> <span>=</span> <span>time</span><span>.</span><span>perf_counter</span><span>()</span> <span>-</span> <span>start</span>
                <span>rate</span> <span>=</span> <span>int</span><span>(</span><span>tot_gen</span> <span>/</span> <span>elapsed</span><span>)</span> <span>if</span> <span>elapsed</span> <span>else</span> <span>0</span>
                <span>print</span><span>(</span><span>f</span><span>"</span><span>{</span><span>tot_gen</span><span>:</span><span>,</span><span>d</span><span>}</span><span> generated | "</span>
                      <span>f</span><span>"</span><span>{</span><span>tot_int</span><span>:</span><span>,</span><span>d</span><span>}</span><span> interesting | </span><span>{</span><span>tot_vid</span><span>:</span><span>,</span><span>d</span><span>}</span><span> with video | "</span>
                      <span>f</span><span>"</span><span>{</span><span>tot_dyn</span><span>:</span><span>,</span><span>d</span><span>}</span><span> dynamic | </span><span>{</span><span>rate</span><span>:</span><span>,</span><span>d</span><span>}</span><span> ROM/s"</span><span>,</span> <span>flush</span><span>=</span><span>True</span><span>)</span>

    <span>except</span> <span>KeyboardInterrupt</span><span>:</span>
        <span>pass</span>  <span># graceful exit
</span>
    <span>elapsed</span> <span>=</span> <span>time</span><span>.</span><span>perf_counter</span><span>()</span> <span>-</span> <span>start</span>
    <span>rate</span> <span>=</span> <span>int</span><span>(</span><span>tot_gen</span> <span>/</span> <span>elapsed</span><span>)</span> <span>if</span> <span>elapsed</span> <span>else</span> <span>0</span>
    <span>print</span><span>(</span><span>"─"</span><span>*</span><span>72</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"TOTAL: </span><span>{</span><span>tot_gen</span><span>:</span><span>,</span><span>d</span><span>}</span><span> generated | </span><span>{</span><span>tot_int</span><span>:</span><span>,</span><span>d</span><span>}</span><span> interesting | "</span>
          <span>f</span><span>"</span><span>{</span><span>tot_vid</span><span>:</span><span>,</span><span>d</span><span>}</span><span> with video | </span><span>{</span><span>tot_dyn</span><span>:</span><span>,</span><span>d</span><span>}</span><span> dynamic | </span><span>{</span><span>rate</span><span>:</span><span>,</span><span>d</span><span>}</span><span> ROM/s"</span><span>)</span>

<span>if</span> <span>__name__</span> <span>==</span> <span>"__main__"</span><span>:</span>
    <span>main</span><span>()</span>
</code></pre></div>

<p>This script generates 4kB of random data, then filters them for heuristics on the GPU. On an Nvidia GeForce GTX 1070, this generates about <strong>62,150 ROMs/s</strong>. Filtering for the heuristics, I get one “interesting” ROM – one that passes the heuristics – for every 2.5 Million ROMs generated.</p>

<p>From there, the interesting ROMs are sent to the CPU, where they’re checked with MAME for visual output. Here’s an example of the output after being run overnight:</p>

<p><code>
TOTAL: 1,804,075,008 generated | 456 interesting | 16 with video | 11 dynamic | 62,156 ROM/s
<code></code></code></p>

<p>Out of 1.8 Billion ROMs generated, only 456 passed the heuristics test. Of those, 16 had a static video output, 11 had video that moved. You have no idea how much I’m resisting a making a Sankey diagram/fluffer joke right now.</p>

<h2 id="what-i-found">What I found</h2>

<p>These are some of the most visually interesting results from this experiment. All of these ROMs were generated entirely from random data, filtered with heuristics, and run through an Atari emulator. All of these produce valid video output and show dynamic or structured data.</p>




<h2 id="a-real-actual-protogame">A Real, Actual, Protogame</h2>

<p>Despite my entire pipeline being focused on generating visual output, I discovered something that is more than just weird visual ouput. The ROM I’m calling <code>51014</code> (<a href="https://bbenchoff.github.io/assets/pages/roms/5101496f45e8b.bin">here’s a link</a> to the actual ROM file) displays some game-like behavior. It’s an infinite loop of visual output that responds to human input. Take a look at the .gifs below:</p>





<p>Rom <code>51014</code> consists of a yellow background with two static vertical red stripes on the screen. There is also a third stripe – actually a pair of red stripes – that is not static; it looks like it’s tearing every few scanlines. By pressing Up on the joystick, that torn pair of stripes stays still. It’s input being translated into visual output.</p>

<p>It’s certainly not impressive from a programming point of view, but considering the fact it was generated <em>only out of properly filtering random data</em> is crazy. Combine a few more of these into a single rom and you have a game!</p>

<h2 id="future-work">Future Work?</h2>

<p>I targeted the Atari 2600 for a reason. It’s dead simple, there are no memory mappers or program and character ROMs, and it doesn’t have the ‘Nintendo Logo copy protection’ the original Game Boy has. Basically, if you throw random bytes at an Atari, <em>something</em> is going to fall out, which I have proven here.</p>

<p>But others have suggested other platforms to target, like the NES or Game Boy. These will not work as well as the 2600 for a few reasons.</p>

<p><strong>The NES</strong> is much more complex, with memory mappers required for nearly any game. You can’t just drop random bytes into the ROM and expect anything. Rather, you <em>could</em> but it would take much longer than waiting for an Atari game. The NES uses split character and program ROMs for code and graphics. These are stored separately. You could dump garbage into a CHR ROM while keeping the PRG of Tetris, but you’d just get static. Reverse it with the PRG of Mario 3 and maybe you’ll see a quarter of a Mario sprite flicker once.</p>

<p><strong>The Game Boy</strong> requires a 48-byte Nintendo logo at a hardcoded location in the ROM. Sure, you could brute-force this by just slapping it in after being generated, but there’s a whole boot ROM that must complete successfully before anything happens. And there’s bank switching chips to consider.</p>

<p>In contrast, the Atari 2600 is astonishingly stupid. It boots straight into ROM with zero safeguards. It will send video after nine instructions. <em>Something</em> is going to fall out if you shake it enough.</p>

<p>There’s also the possibility of using more advanced machine learning models or even an LLM to generate Atari games. This, I think, misses the point. Training an LLM on the thousand or so commercial Atari games would would only produce something like a commercial Atari game, if anything at all. My method of generating random data, then filtering with some basic heuristics, then actually running the thing to see if there’s any output is the best way to produce something out of randomness. My goal isn’t just to make a playable game, it’s to make a playable game out of randomness.</p>

<p>If I take this further, it would be as a distributed computing project, something like SETI@Home, where millions of machines search for signals in cosmic noise. Imagine GPUs across the world mining entropy for Atari games, then sending the promising ones to a central system to evaluate their ‘game-ness’. It’s an absurd idea. I’ll see how popular this project gets. It’s better than mining fartcoin, at least.</p>

<h2 id="a-conclusion">A Conclusion</h2>



<div>
  <figure>
    <img src="https://bbenchoff.github.io/images/blurst.png" alt="It was the best of times, it was the blurst of times?">
    <figcaption>It was the best of times, it was the blurst of times?</figcaption>
  </figure>

  <div>
    <p>The idea that I could pull random video games out of the ether is absurd at first, but I knew this would work before I began. I can describe this in both as a philosophical / thought experiment, and as a technical inevitability.</p>

    <p>What I'm doing is not Infinite Monkey Theorem. A million monkeys will eventually produce the works of Shakespeare, that's true, but it would take longer than any time the Universe has left. I'm not asking monkeys to produce the works of Shakespeare, I'm asking them to produce <em>any</em> work.</p>

    <p>Producing the word ‘banana’ in ASCII is just $\frac{1}{256}^6 = \frac{1}{281{,}474{,}976{,}710{,}656}$ or once every 300 trillion monkeys. But I’m not looking for ‘banana’, I’m just looking for <em>a word</em>. Any word in the dictionary. I don’t care if I’m not generating <em>Yar’s Revenge</em>. I just want something that runs on an Atari. That’s significantly easier.</p>
  </div>
</div>

<p>The <em>technical</em> reason why I knew this would work is the simplicity of the Atari. The simplest thing you could ever create on an Atari looks something like this:</p>

<pre><code>
; Program starts at $F000

F000: A9 84       ; LDA #$84        - Load a color value (red/orange)
F002: 85 09       ; STA $09         - Store to COLUBK (background color register)
F004: 85 02       ; STA $02         - Store to WSYNC (wait for horizontal sync)
F006: 4C 04 F0    ; JMP $F004       - Jump back to the WSYNC line (infinite loop)
</code></pre>

<p>That’s nine instructions. In fact, we can do the math on that, too. It would have to start with <code>A9</code>, and then it could be any one of 128 total colors. Then it’s <code>85 09</code> to store the background color, <code>85 02</code> to wait for <code>WSYNC</code>, and <code>4C 04 F0</code> for the jump back to the previous instruction. It’s $\frac{1}{256} \times \frac{128}{256} \times \frac{1}{256} \times \frac{1}{256} \times \frac{1}{256} \times \frac{1}{256} \times \frac{1}{256} \times \frac{1}{256} \times \frac{1}{256} = \frac{1}{36{,}893{,}488{,}147{,}419{,}103{,}232}$, or about 36 Pentillion. There are nearly infinite variations on this code though, so after a few Billion ROMs tested, I’m bound to get <em>something</em> for my efforts.</p>

<p>You can find all the code for this in the <a href="https://github.com/bbenchoff/FiniteAtariMachine">Finite Atari Machine repo</a></p>

<p><a href="https://bbenchoff.github.io/">back</a></p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA["Localhost tracking" explained. It could cost Meta €32B (267 pts)]]></title>
            <link>https://www.zeropartydata.es/p/localhost-tracking-explained-it-could</link>
            <guid>44235467</guid>
            <pubDate>Tue, 10 Jun 2025 11:29:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.zeropartydata.es/p/localhost-tracking-explained-it-could">https://www.zeropartydata.es/p/localhost-tracking-explained-it-could</a>, See on <a href="https://news.ycombinator.com/item?id=44235467">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p>Meta devised an ingenious system (“localhost tracking”) that bypassed Android’s sandbox protections to identify you while browsing on your mobile phone — even if you used a VPN, the browser’s incognito mode, and refused or deleted cookies in every session.</p><p>Next, we preview what may (and should) become the combined sanctioning smackdown of the century, and then we explain — in simple terms (because it’s complicated) — what Meta was doing.</p><p>Meta faces simultaneous liability under the following regulations, listed from least to most severe: GDPR, DSA, and DMA (I’m not even including the ePrivacy Directive because it’s laughable).</p><p>GDPR, DMA, and DSA protect different legal interests, so the penalties under each can be imposed cumulatively.</p><p>The combined theoretical maximum risk amounts to approximately €32 billion** (4% + 6% + 10% of Meta’s global annual revenue, which surpassed €164 billion in 2024).</p><p>Maximum fines have never before been applied simultaneously, but some might say these scoundrels have earned it.</p><p><span>If you want to go straight to the breakdown of infractions and penalties, click </span><strong><a href="https://citizen8.eu/localhost-tracking-explained-it-could-cost-meta-32-billion/" rel="">here</a></strong><span>.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png" width="925" height="778" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:778,&quot;width&quot;:925,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:785315,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.zeropartydata.es/i/165552054?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3808b62b-e2a1-44c8-bcd5-fcf8224f7d25_925x778.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>You’re reading ZERO PARTY DATA. The newsletter about the crazy crazy world news from a data protection perspective by Jorge García Herrero and Darío López Rincón.</p><p>In the spare time this newsletter leaves us, we like to solve complicated issues about GDPR &amp; AI Act. If you’ve got one of those, give us a little wave. Or contact us by email at jgh(at)jorgegarciaherrero.com.          </p><p><span>Below is a simplified explanation of a very technical process, </span><strong><a href="https://localmess.github.io/" rel="">rigorously detailed on the website set up by the researchers who uncovered Meta’s latest major blow</a></strong><span> to the GDPR specifically, and to other regulations more broadly, as we’ll see.</span></p><p>Credit where it’s due — it’s ingenious. Ingenious in the sense of breaking (yet again) the record for a privacy-related fine, but hey!... ingenious.</p><p>This is the process through which Meta (Facebook/Instagram) managed to link what you do in your browser (for example, visiting a news site or an online store) with your real identity (your Facebook or Instagram account), even if you never logged into your account through the browser or anything like that.</p><p>Meta accomplishes this through two invisible channels that exchange information:</p><p>(i) The Facebook or Instagram app running in the background on your phone, even when you’re not using it.</p><p>(ii) Meta’s tracking scripts (the now-pulled illegal brainchild uncovered last week), which operate inside your mobile web browser.</p><p><strong>Thanks</strong><span> to the outstanding human beings who revealed this scandal: </span><strong>Tim Vlummens, Narseo Vallina-Rodriguez, Nipuna Weerasekara, Gunes Acar, and Aniketh Girish</strong><span>.</span></p><blockquote><p>The entire flow of the _fbp cookie from web to native and the server is as follows:</p><ol><li><p>The user opens the native Facebook or Instagram app, which eventually is sent to the background and creates a background service to listen for incoming traffic on a TCP port (12387 or 12388) and a UDP port (the first unoccupied port in 12580-12585). Users must be logged-in with their credentials on the apps.</p></li><li><p>The user opens their browser and visits a website integrating the Meta Pixel.</p></li><li><p>At this stage, websites may ask for consent depending on the website's and visitor's locations.</p></li><li><p><span>The Meta Pixel script sends the </span><a href="https://localmess.github.io/#about_fbp" rel="">_fbp cookie</a><span> to the native Instagram or Facebook app via WebRTC (STUN) SDP Munging.</span></p></li><li><p><span>The Meta Pixel script also sends the _fbp value in a request to https://www.facebook.com/tr along with other parameters such as page URL (dl), website and browser metadata, and the </span><a href="https://web.archive.org/web/20250531104925/https://developers.facebook.com/docs/meta-pixel/reference/" rel="">event type</a><span> (ev) (e.g., PageView, AddToCart, Donate, Purchase).</span></p></li><li><p>The Facebook or Instagram apps receive the _fbp cookie from the Meta Pixel JavaScript running on the browser. The apps transmit _fbp as a GraphQL mutation to (https://graph[.]facebook[.]com/graphql) along with other persistent user identifiers, linking users' fbp ID (web visit) with their Facebook or Instagram account.</p></li></ol></blockquote><p>If I understood it, you can too — trust me.</p><blockquote><p><span>“</span><em>The user opens the native Facebook or Instagram app, which eventually goes into the background and creates a background service to listen for incoming traffic on a TCP port (12387 or 12388) and a UDP port (the first free port between 12580 and 12585). Users must have logged in with their credentials in the apps</em><span>.”</span></p></blockquote><p><strong>Translation:</strong></p><p>You open the Facebook or Instagram app like normal.</p><p>Then you go do something else on your phone (the app remains running in the background).</p><p>Without telling you, the app keeps running and “listens” for traffic — like having a hidden microphone eavesdropping on internal calls.</p><p>Technically, it does this by opening local network “ports” (like little internal doors in your phone) through which it can receive messages.</p><p>It’s important to clarify that this only happens if you've already logged into those apps with your account.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg" width="1456" height="971" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:971,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2313006,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.zeropartydata.es/i/165526623?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F63846217-7cdf-490c-a5c1-c4adefcc2391_7500x5000.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>(Insert your favorite ultra-private vice here — let’s say mine is watching chick sexers doing their thing. Just saying.)</p><blockquote><p><span>“</span><em>The user opens their browser and visits a website that integrates Meta’s Pixel</em><span>.”</span></p></blockquote><p>You open Chrome, Firefox, or any browser on the same phone.</p><p>You turn on VPN and incognito mode and, confidently like a fool, head straight to that website — which, by coincidence, has a Meta Pixel embedded.</p><p>This pixel, with your consent, collects data about your actions (visits, clicks, purchases...) and sends it to Meta.</p><p>What has now been proven is that, before you even had the chance to give consent, the pixel starts the localhost tracking process we're explaining here.</p><p>Theoretically, this should have been explained when asking for cookie consent. Obviously, it wasn’t — because it was blatantly illegal.</p><p>I mean, even if you had clicked the “consent” button on the chick sexer website, that consent can’t cover something you were never informed about (note that this trick even caught Google off guard).</p><blockquote><p><em>“The Meta Pixel script sends the _fbp cookie to the native Instagram or Facebook app via WebRTC (STUN) using SDP modification (SDP Munging).”</em></p></blockquote><p>The Pixel script in your browser tries to send information to the Facebook/Instagram app that’s “listening” in the background.</p><p>It uses a technique called WebRTC, normally used for voice or video calls (like Zoom or Google Meet), but here it’s being used to secretly transmit data between the browser and the app.</p><p>Additionally, a technical trick called “SDP Munging” allows the browser to insert data (like the _fbp cookie identifier) into the WebRTC “initial handshake” message.</p><p>In this way, the _fbp (a temporary cookie supposedly limited to your current web session) is sent directly to the native app that’s listening. In other words, the website you didn’t want anyone to know you visited just passed your identification cookie to your Facebook/Instagram app. It’s still just an alphanumeric string at this point.</p><p>But that alphanumeric sausage, my friend — is you.</p><p>Android has many flaws, but in the relevant part here, it’s specifically designed to prevent apps from doing this — from listening to local ports like localhost.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png" width="1384" height="690" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:690,&quot;width&quot;:1384,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1596376,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.zeropartydata.es/i/165526623?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a64ebad-935a-4de7-a91a-d9c7e85a104c_1384x690.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><blockquote><p><em><span>“The Meta Pixel script also sends the _fbp value in a request to </span><a href="https://www.facebook.com/tr" rel="">https://www.facebook.com/tr</a><span> along with other parameters such as the page URL (dl), website and browser metadata, and the event type (ev) (e.g., PageView, AddToCart, Donate, Purchase).”</span></em></p></blockquote><p><strong>WHAT?</strong></p><p>At the same time, the Pixel sends the same information (the _fbp cookie) to Meta’s servers over the internet, along with:</p><ul><li><p>The URL you’re visiting</p></li><li><p>Your browser and operating system</p></li><li><p>The type of event performed (e.g., “page view,” “add to cart” or, in the case of chick sexer videos... better not know, trust me)</p></li></ul><p><span>It’s like the Pixel is sending the same letter through two routes:</span><br><span>(a) directly to Facebook’s servers, and</span><br><span>(b) to the Facebook app inside your phone.</span></p><blockquote><p><em>“The Facebook or Instagram apps receive the _fbp cookie from the Meta Pixel JavaScript running in the browser. The apps transmit _fbp as a GraphQL mutation to (https://graph[.]facebook[.]com/graphql) along with other persistent user identifiers, linking the user's fbp ID (web visit) with their Facebook or Instagram account.”</em></p></blockquote><p>The app, upon receiving the _fbp identifier, bundles it together with your real account (the one you’re logged into in the app).</p><p>Then, it sends it all to Meta’s servers, where they can now say:</p><p><em>“Aha! This _fbp identifier (from that questionable website you just visited) belongs to Jorge García Herrero, Instagram user.”</em></p><p><em>“Chick sexers? Seriously, bald guy?”</em></p><p>And just like that, they link your web activity (browser) to your real identity (account) — even if you never logged into your account in that browser or gave any explicit consent for it.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png" width="1180" height="639" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:639,&quot;width&quot;:1180,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1002720,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.zeropartydata.es/i/165526623?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2d887f6b-c879-49a5-846f-a5a444d655cf_1180x639.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Meta has used a technical loophole that privacy protection systems didn’t anticipate — in fact, they were specifically designed to prevent it.</p><ul><li><p>You aren’t using the app (but have a session open in the background).</p></li><li><p>You haven’t logged into your account in the browser.</p></li><li><p>You’re browsing in incognito mode.</p></li><li><p>You’re using a VPN.</p></li><li><p>You delete cookies at the end of every session.</p></li></ul><p>Once again, Meta has blatantly disregarded the requirement to obtain informed user consent before collecting and combining personal information from different sources.</p><p><span>22% of the most visited websites in the world are affected. In the U.S., 17,223 sites with the Meta Pixel and 1,312 with Yandex Metrica initiated this tracking </span><strong>without user consent</strong><span>. Over 8 years (Yandex) and at least 9 months (Meta), billions of users were tracked without their knowledge.</span></p><ul><li><p>Complete browsing history with specific URLs</p></li><li><p>Products added to cart and purchases made</p></li><li><p>Registrations on websites and completed forms</p></li><li><p>Temporal behavioral patterns across websites and apps</p></li><li><p>Direct linking to real identities on social networks</p></li></ul><ul><li><p>You access Facebook and Instagram via the web, without having the apps installed on your phone</p></li><li><p>You browse on desktop computers or use iOS (iPhones)</p></li><li><p>You always used the Brave browser or the DuckDuckGo search engine on mobile</p></li></ul><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg" width="1456" height="971" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:971,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2097152,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.zeropartydata.es/i/165552054?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09cf9acf-b0ec-40b5-b092-c67c75c9f50a_4205x2805.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>As stated at the beginning, Meta faces simultaneous liability under the following regulations, ranked from lesser to greater severity (not including the </span><strong>ePrivacy Directive</strong><span> — it’s a joke at this point):</span></p><ul><li><p><strong>GDPR:</strong><span> Requires consent to process personal data for ad personalization. Meta also violated the principles of data minimization and privacy by design. (Up to 4% of global annual turnover)</span></p></li><li><p><strong>DSA (Art. 26):</strong><span> Explicitly prohibits personalized advertising based on profiles created from special categories of personal data (e.g., sexual orientation, political views, health data).</span></p></li></ul><p>If such data could be inferred from users’ interactions on websites and apps (which is almost certain, given the scale of the violation — reaching 25% of the world’s most visited sites), the penalty could reach 10% of turnover. </p><p>CJEU has been clear about this one (“Fondas” C-184/20 and Bundeskartellamt).</p><p>Meta was declared a VLOP (Very Large Online Platform) in February 2024 and was already under investigation for violations involving content moderation transparency, child protection, and election integrity.</p><ul><li><p><strong>DMA (Art. 5.2):</strong><span> The most damaging one: it specifically prohibits combining personal data between core platform services without the user’s </span><strong>explicit</strong><span> consent, as defined by GDPR. The localhost tracking technique combines data across at least Facebook and Instagram, and potentially WhatsApp and Messenger as well.</span></p></li></ul><p>The DMA carries the highest financial risk — fines up to 10% of global turnover (€16.4 billion), increasing to 20% for repeat offenses.</p><p>Meta was designated a gatekeeper in September 2023 and received its first DMA fine in April 2025: €200 million for its “pay or consent” model.</p><p>Meta will undoubtedly claim it already had user consent to do this, but here’s the truth: it needed three specific consents to process the data (GDPR), access the device (ePrivacy), and combine profiles across services (DMA). It only requested one — and even that with a coercive “pay or okay” alternative.</p><p>Unfortunately, Meta’s most recent fine was precisely over its “pay or okay” approach.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png" width="886" height="316" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:316,&quot;width&quot;:886,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:101075,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.zeropartydata.es/i/165552054?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25fce5fb-bf4d-424c-9307-387c55eb2896_886x316.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>GDPR, DMA, and DSA protect different legal rights, so the penalties under each can be imposed cumulatively.</p><p>The combined theoretical maximum risk amounts to approximately €32 billion (4% + 6% + 10% of Meta’s global annual revenue, which exceeds €164 billion).</p><p>Maximum fines have never before been applied simultaneously, but one could argue these bad guys have earned it.</p><p>Several factors favor setting that precedent: Meta’s long record of violations (it holds the record for GDPR fines in Europe), its lack of cooperation with regulatory investigations, the systemic impact of this scheme given its market dominance, and the clear intent to bypass all technical and legal protections established for users.</p><p><strong>Jorge García Herrero</strong></p><p><strong>Data Protection Officer</strong></p><p data-attrs="{&quot;url&quot;:&quot;https://www.zeropartydata.es/?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Compartir Zero Party Data&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}" data-component-name="ButtonCreateButton"><a href="https://www.zeropartydata.es/?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Compartir Zero Party Data</span></a></p><p data-attrs="{&quot;url&quot;:&quot;https://www.zeropartydata.es/p/por-que-el-faceid-del-iphone-es-licito/comments&quot;,&quot;text&quot;:&quot;Deja un comentario&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}" data-component-name="ButtonCreateButton"><a href="https://www.zeropartydata.es/p/por-que-el-faceid-del-iphone-es-licito/comments" rel=""><span>Deja un comentario</span></a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[WWDC25: macOS Tahoe Breaks Decades of Finder History (112 pts)]]></title>
            <link>https://512pixels.net/2025/06/wwdc25-macos-tahoe-breaks-decades-of-finder-history/</link>
            <guid>44235177</guid>
            <pubDate>Tue, 10 Jun 2025 10:52:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://512pixels.net/2025/06/wwdc25-macos-tahoe-breaks-decades-of-finder-history/">https://512pixels.net/2025/06/wwdc25-macos-tahoe-breaks-decades-of-finder-history/</a>, See on <a href="https://news.ycombinator.com/item?id=44235177">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-32553">
	<!-- .entry-header -->

	<div>
		<p>Something jumped out at me in the macOS Tahoe segment of the WWDC keynote today: the Finder icon is reversed.</p>
<p>You can see that in the image below. On the left is macOS Sequoia, and on the right is macOS Tahoe:</p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/About-Finder.jpg" alt="About Finder"></p>
<p>I know I am going to sound old and fussy, but Apple needs to roll this back.</p>
<h2>Some History</h2>
<p>The Finder logo has changed over the years, but the dark side has been on the left <em>forever</em>. Here it is on the boot screen on System 7.5.3, which shipped in 1996, an early version of the logo in color:</p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/Finder-7-5-3.png" alt="Finder in 7.5.3"></p>
<p>And in the About This Computer screen in Mac OS 8:</p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/Finder-About-8-0.png" alt="Finder in 8.0"></p>
<p>This same basic design survived the move to Mac OS X, as can be seen here in the Public Beta from 2000. The only real change was the addition of a little sheen to make it fit in better with the Aqua user interface:</p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/10-Public-Beta-Kodiak-About-This-Mac.png" alt="Finder in Public Beta"></p>
<p>Here you can see it in Mac OS X Panther which shipped three years later:</p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/10-3-Panther-Finder-Go-Menu.png" alt="Finder in Panther"></p>
<p>The Finder then transitioned to the Retina era in 2012 with OS X Lion:</p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/10-7-Lion-About-This-Mac.jpeg" alt="Finder in Lion"></p>
<p>The logo was updated with the redesign that was ushered in with OS X Yosemite in 2014, then tweaked again for macOS Big Sur in 2020:</p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/10-10-Yosemite-Stacks.jpeg" alt="Finder in Yosemite"></p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/Big-Sur-Apple-Menu.jpeg" alt="Big Sur Finder"></p>
<h2>A Solution</h2>
<p>The Big Sur Finder icon has been with us ever since,<sup id="fnref-32553-fn-car"><a href="#fn-32553-fn-car" title="Read footnote.">1</a></sup> and I hope Apple reverses course here. I understand that the new icon is meant to be in sync with <a href="https://www.apple.com/newsroom/2025/06/apple-introduces-a-delightful-and-elegant-new-software-design/">the new Liquid Glass user interface</a>, but some things are just tradition.</p>
<p>For kicks, I ran the current Finder icon through Apple’s <a href="https://developer.apple.com/icon-composer/">new Icon Composer app,</a> and I think it looks pretty good with Liquid Glass, even in the clear and tinted modes:</p>
<p><img decoding="async" src="https://512pixels.net/wp-content/uploads/2025/06/Liquid-Glass-Finder.jpg" alt="Liquid Glass Finder"></p>
<hr>
<p><strong>This has been filed with Apple as Feedback FB17840162. Yes, seriously.</strong></p>

	</div><!-- .entry-content -->

	<!-- .entry-footer -->
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Danish Ministry of Digitalization Is Switching to Linux and LibreOffice (230 pts)]]></title>
            <link>https://politiken.dk/viden/tech/art10437680/Caroline-Stage-udfaser-Microsoft-i-Digitaliseringsministeriet</link>
            <guid>44234552</guid>
            <pubDate>Tue, 10 Jun 2025 09:30:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://politiken.dk/viden/tech/art10437680/Caroline-Stage-udfaser-Microsoft-i-Digitaliseringsministeriet">https://politiken.dk/viden/tech/art10437680/Caroline-Stage-udfaser-Microsoft-i-Digitaliseringsministeriet</a>, See on <a href="https://news.ycombinator.com/item?id=44234552">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="js-article-section-observer-mounting">
          <header>
            <p>For første gang bliver suverænitet en prioritet i regeringens, kommunernes og regionernes fælles strategi for digitalisering.</p>
          </header>
          
          <figure>
            <picture title="" data-image-overlay-data="{&quot;url&quot;:&quot;https://politiken.dk/incoming/img10442792.di376b/ORIGINALS/original_2000/JD080425-059328&quot;,&quot;highestResImgWidth&quot;:&quot;2000&quot;,&quot;lowResPreRenderUrl&quot;:&quot;https://politiken.dk/incoming/img10442792.di376b/ORIGINALS/original_150/JD080425-059328&quot;,&quot;caption&quot;:&quot;Minister for digitalisering Caroline Stage Olsen (M) vil afprøve såkaldte open source programmer i sit eget ministerium. &quot;,&quot;aspectRatio&quot;:1.5}" js-activate-image-overlay=""><img alt="Minister for digitalisering Caroline Stage Olsen (M) vil afprøve såkaldte open source programmer i sit eget ministerium. " src="https://politiken.dk/incoming/img10442792.di376b/ORIGINALS/original_150/JD080425-059328" data-high-res-url="https://politiken.dk/incoming/img10442792.di376b/ORIGINALS/original_750/JD080425-059328" data-high-res-srcset="&quot;https://politiken.dk/incoming/img10442792.di376b/ORIGINALS/original_615/JD080425-059328 615w, https://politiken.dk/incoming/img10442792.di376b/ORIGINALS/original_750/JD080425-059328 750w, https://politiken.dk/incoming/img10442792.di376b/ORIGINALS/original_960/JD080425-059328 960w&quot;" data-high-res-sizes="&quot;(min-width: 768px) 33vw, (min-width: 1180px) 50vw, (min-width: 1364px) 55vw&quot;" decoding="auto" loading="lazy" srcset="https://politiken.dk/incoming/img10442792.di376b/ORIGINALS/original_150/JD080425-059328" sizes="(min-width: 768px) 33vw, (min-width: 1180px) 50vw, (min-width: 1364px) 55vw"></picture>
            <figcaption>Minister for digitalisering Caroline Stage Olsen (M) vil afprøve såkaldte open source programmer i sit eget ministerium. </figcaption>
          </figure>
        </section><div id="js-article-body">
            <article>
              
              
            </article>
            
            <p>Digitaliseringsminister Caroline Stage (M) vil fra næste måned begynde at udfase Microsoft i sit eget ministerium. Planen er, at omkring halvdelen af medarbejderne om en måneds tid og hen over sommeren skal arbejde med computere, hvor Office 365 er erstattet af Libre Office. Hvis det går som forventet, vil alle medarbejdere være på en open source-løsning i løbet af efteråret.</p>
            <p>Det fortæller ministeren op til lanceringen af en ny digitaliseringsstrategi for de kommende fire år, hvor digital suverænitet for første gang er en prioritet. Strategien er aftalt mellem staten, regionerne og kommunerne.</p>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Europe needs digital sovereignty – and Microsoft has just proven why (235 pts)]]></title>
            <link>https://tuta.com/blog/digital-sovereignty-europe</link>
            <guid>44233480</guid>
            <pubDate>Tue, 10 Jun 2025 06:51:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tuta.com/blog/digital-sovereignty-europe">https://tuta.com/blog/digital-sovereignty-europe</a>, See on <a href="https://news.ycombinator.com/item?id=44233480">Hacker News</a></p>
<div id="readability-page-1" class="page"><article itemscope="" itemtype="https://schema.org/NewsArticle">   <section> <p>A quiet but deeply unsettling moment just shook the foundations of international justice, proving why Europe needs digital sovereignty - and most Europeans not too interested in tech likely missed it: The Chief Prosecutor of the International Criminal Court (ICC), a court based in The Hague and central to Europe’s upholding of human rights, suddenly found that his email account was shut down. The service provider? Microsoft. The reason? Mr. Trump.
</p> <hr> <div> <h3 id="what-happened">What happened</h3>
<p>In February, <a href="https://apnews.com/article/trump-icc-sanctions-israel-order-01beee050ae84d0d9eae66d00bc8ead9" rel="noopener noreferrer" target="_blank">Trump sanctioned International Criminal Court (ICC)</a> for issuing arrest warrants for Israeli Prime Minister Benjamin Netanyahu and his former defense minister, Yoav Gallant. The court argued that the Israeli politicians have committed war crimes by restricting humanitarian aid in Gaza amid the war against Hamas, thus, harming civilians.</p>
<p>Israeli officials denied all charges, and, consequently, US President Donald Trump issued sanctions against the ICC saying that the court had committed “illegitimate and baseless actions targeting America and our close ally Israel”. Trump also called the warrants “baseless arrest warrants”.</p>
<p>Following these sanctions, the ICC has found itself faced with several issues:</p>
<ul>
<li>The chief prosecutor, Karim Khan, has lost access to his email; his bank accounts were frozen.</li>
<li>American employees of the court risk arrest when traveling to the U.S.</li>
</ul>
<p>Due to the blocking of Khan’s Microsoft email account, the court is facing severe hurdles in its day-to-day work.</p>
<h3 id="microsoft-blocked-email-account-based-on-us-sanction">Microsoft blocked email account based on U.S. sanction</h3>
<p><image-zoom-wrapper> <span><picture> <source srcset="https://tuta.com/assets/microsoft-shut-down-email-account.BgAnMnC8_Z2orNlR.webp" type="image/webp"> <img src="https://tuta.com/assets/microsoft-shut-down-email-account.BgAnMnC8_e8q5s.png" alt="Microsoft sperrte Khans E-Mail-Konto." width="1800" height="1013" loading="lazy" decoding="async"> </picture></span> <picture> <source srcset="https://tuta.com/assets/microsoft-shut-down-email-account.BgAnMnC8_Z2orNlR.webp" type="image/webp"> <img src="https://tuta.com/assets/microsoft-shut-down-email-account.BgAnMnC8_e8q5s.png" alt="Microsoft sperrte Khans E-Mail-Konto." width="1800" height="1013" loading="lazy" decoding="async"> </picture> </image-zoom-wrapper> 
<em>Microsoft shut down Khan’s email account.</em></p>
<p>The blocking of Khan’s Microsoft email account took place because of an executive order signed by Trump which the U.S.-based company – Microsoft – fulfilled. This gets even more explosive when one considers that Microsoft - even if it wanted to - had to obey this order because of the legal and political situation.</p>
<p>The Open-Source Business Alliance (OSBA) told <a href="https://www.heise.de/en/news/Criminal-Court-Microsoft-s-email-block-a-wake-up-call-for-digital-sovereignty-10387383.html" rel="noopener noreferrer" target="_blank">Heise</a> that it considers Microsoft’s actions to be “unprecedented in this context and with this impact”, and that this incident proves that <strong>Europe needs digital sovereignty</strong> by choosing European-based tech services over US-based Big Tech.</p>
<blockquote>
<p>“This must be a wake-up call for all those responsible for the secure availability of state and private IT and communication infrastructures. … We cannot rely on companies that are not under our jurisdiction.”</p>
</blockquote>
<h3 id="wake-up-call-for-digital-sovereignty">Wake-up call for digital sovereignty</h3>
<p><strong>This, indeed, must be a wake-up call.</strong></p>
<p>U.S. sanctions – unrelated to Europe and imposed by a foreign power – led to the shutdown of the digital communication of a leading public figure, the Chief Prosecutor of the International Criminal Court.</p>
<p><strong>This is a story of digital sovereignty.</strong></p>
<p>And it marks a clear turning point in Europe’s relationship with foreign technology providers. If key figures in international law can be digitally silenced by a company subject to U.S. law, what does that say about our control – or lack thereof – over the very digital foundations we rely on?</p>
<p>For years, European institutions have relied on a false promise of security and data protection by Silicon Valley tech giants. Cloud providers like Microsoft, Amazon, and Google have repeatedly assured us that they respect European law, have built data centers within EU borders, and have pledged to comply with the GDPR. While at the same time <a href="https://tuta.com/blog/outlook-business-security-issue" rel="" target="_self">Microsoft’s New Outlook uploads all data, including passwords, into the cloud</a>, <a href="https://tuta.com/blog/microsoft-office-365-email-alternative" rel="" target="_self">Microsoft’s Office 365 has been declared illegal for German schools because of data protection issues</a>, and <a href="https://tuta.com/blog/denmark-bans-google-email-and-cloud-services-due-to-privacy-concerns" rel="" target="_self">Denmark has banned Gmail from schools due to privacy concerns based on the GDPR</a>. <strong>And these are just a few examples.</strong></p>
<h3 id="jurisdiction-trumps-everything">Jurisdiction trumps everything</h3>
<p><image-zoom-wrapper> <span><picture> <source srcset="https://tuta.com/assets/boycott-us-choose-eu.VNyJdP4k_u3jTI.webp" type="image/webp"> <img src="https://tuta.com/assets/boycott-us-choose-eu.VNyJdP4k_1vjqEt.png" alt="Die Zuständigkeit ist wichtiger, als wir bisher dachten: Europäische Behörden sollten sich an europäische technische Dienste halten." width="1800" height="1013" loading="lazy" decoding="async"> </picture></span> <picture> <source srcset="https://tuta.com/assets/boycott-us-choose-eu.VNyJdP4k_u3jTI.webp" type="image/webp"> <img src="https://tuta.com/assets/boycott-us-choose-eu.VNyJdP4k_1vjqEt.png" alt="Die Zuständigkeit ist wichtiger, als wir bisher dachten: Europäische Behörden sollten sich an europäische technische Dienste halten." width="1800" height="1013" loading="lazy" decoding="async"> </picture> </image-zoom-wrapper> 
<em>Jurisdiction matters more than we used to think: European authorities should stick to European tech services.</em></p>
<p>In the light of all this, the ICC incident has just put the final nail in the coffin. It reveals a deeper truth, one that Europeans must start acting upon!</p>
<p><strong>Jurisdiction trumps geography.</strong> It doesn’t matter if your servers are in Frankfurt, Rome, or Paris – if your provider is subject to foreign law, so is your data.</p>
<p>And this must be included in every worst case scenarios of every business and every authority. The question is obvious: Is my data secure and protected – not just from external threats like malicious attackers, but also from internal threats stemming from the company hosting your data?</p>
<p>If political decisions made thousands of kilometers away can have immediate and severe consequences on European digital communications and European data, this poses a huge risk. One that you should not be taking. And with the recent Microsoft incident, it’s no longer a theoretical threat. That is exactly what just happened.</p>
<h3 id="dependency-is-a-threat">Dependency is a threat</h3>
<p>Let’s imagine this was not about email, but about the energy sector.</p>
<p>Would Europe ever hand over control of its national power grids to foreign companies bound by non-European law? Would we trust a foreign supplier’s guarantee for 99.999% uptime (which is the standard uptime SLA agreement of cloud providers) while at the same time a foreign power could force them anytime to cut Europe’s power?</p>
<p>Of course not.</p>
<p><strong>Yet this is how we’re managing our digital infrastructure in Europe.</strong></p>
<p>We are blind to the risks, and much too trusting of American tech providers. Cloud platforms, communication tools, and email providers are core services that run our governments, schools, hospitals, and courts. And in most cases, European institutions have chosen American providers - while great <a href="https://tuta.com/blog/small-business-email-address" rel="" target="_self">email alternatives for businesses</a> exist.</p>
<h3 id="europe-has-the-services--lets-start-using-them">Europe has the services – let’s start using them!</h3>
<p>What makes all this even more frustrating is that Europe doesn’t lack innovation; <a href="https://tuta.com/blog/boycott-us-choose-european-products" rel="" target="_self">Europe has great tech services that are better than their U.S. equivalents</a>. Particularly when it comes to tech services, Europe has much more on offer than some would expect – especially if you value privacy and security.</p>
<p>Across the continent, privacy-first, security-focused, and truly sovereign digital solutions are being developed. One of the best examples is Tuta, which offers secure, encrypted email and calendar tools, even with <a href="https://tuta.com/blog/post-quantum-cryptography" rel="" target="_self">quantum-safe encryption</a>. The email provider not only operates under German data protection laws with all servers based in German data centers, but it also uses the most advanced encryption technologies to protect businesses’ data.</p>
<p>So why don’t we see services like this one powering ministries, parliaments, and courts?</p>
<p>Because despite all the speeches about “strategic autonomy,” European tech is still often treated as a backup plan by the authorities – and most of them have not even started putting this plan into action. For decades, European authorities have relied on Microsoft’s products. Stemming from Microsoft’s integration into Windows, the most widely used OS since its launch in the 1980s, most businesses and authorities still use Microsoft Outlook for email, Microsoft Word, Excel, etc. While switching from Microsoft to European-based alternatives can’t be done in a day, authorities must start planning the switch.</p>
<p><strong>Now it’s time to break free from the dependency on American tech!</strong></p>
<!--xs--><astro-island uid="Z10Y8As" data-solid-render-id="s3" component-url="/assets/CallToAction.BHpNIwO3.js" component-export="CallToAction" renderer-url="/assets/client.a6UBOSBj.js" props="{&quot;type&quot;:[0,&quot;mail&quot;]}" ssr="" client="load" opts="{&quot;name&quot;:&quot;CallToAction&quot;,&quot;value&quot;:true}" await-children=""><div data-hk="s30000"><!--$--><!--/--><!--$--><p><strong>Turn ON Privacy</strong> in one click.</p><!--/--></div><!--astro:end--></astro-island>
<h3 id="the-sovereign-cloud">The sovereign cloud</h3>
<p>There’s a saying in tech that goes as follows: There is no cloud, just other people’s computers.</p>
<p>When taking this concept into action, one has to ask themselves: On whose computer would I like to store my data? With an American tech provider – to which the US (government, NSA, CIA, FBI, etc.) can potentially have full access? Even if the data stays in Europe, the control – the ability to operate, deny, or transfer access – remains elsewhere. As long as American tech providers hold the key, Europe does not own its data.</p>
<p>We need true sovereignty – by choosing European services that are built and operated under European law and that store the data solely in Europe, best end-to-end encrypted.</p>
<h3 id="looking-into-a-brighter-future">Looking into a brighter future</h3>
<p><image-zoom-wrapper> <span><picture> <source srcset="https://tuta.com/assets/team_summer_2022.B8r96R6g_ZmS1Y5.webp" type="image/webp"> <img src="https://tuta.com/assets/team_summer_2022.B8r96R6g_2fAqHL.jpg" alt="Das Tuta-Team freut sich auf eine bessere Zukunft!" width="1800" height="1014" loading="lazy" decoding="async"> </picture></span> <picture> <source srcset="https://tuta.com/assets/team_summer_2022.B8r96R6g_ZmS1Y5.webp" type="image/webp"> <img src="https://tuta.com/assets/team_summer_2022.B8r96R6g_2fAqHL.jpg" alt="Das Tuta-Team freut sich auf eine bessere Zukunft!" width="1800" height="1014" loading="lazy" decoding="async"> </picture> </image-zoom-wrapper> 
<em>The Tuta Team welcoming a brighter future!</em></p>
<p>If Europe wants to regain control of its digital infrastructure, we need a structural change; and an immense effort from all parties involved. But in the end, the effort will pay off. Not only by gaining sovereignty, but also by supporting and building a European tech industry – one that can easily compete with American and Chinese tech companies.</p>
<p>To achieve this, we don’t even need new laws, all we need is a commitment by the public sector. <strong>When Trump says “America first”, Europe must say “Europe first”</strong> – and in tech the gain is double: 1. A big share of what the public sector spends on European tech, they get back in the form of company taxes. 2. The public sector could help boost an already vibrating and innovative European tech industry to gain a competitive edge, not just in Europe but also abroad.</p>
<p><strong>Make “European” a requirement for public procurement of tech products</strong>: EU institutions, governments and local authorities should make being “European” a requirement for procuring tech products. This way they can make sure that the services they purchase follow European data protection laws and are not under the influence of foreign governments.</p>
<p><strong>Prevent vendor lock-in</strong>: Any platform used in the public sector should be interoperable and replaceable. No exceptions. Contracts should be written with exit strategies in mind so that a dependency like the one we are currently seeing with Microsoft never happens again.</p>
<p>Going forward, European and local authorities can make a real difference. All they have to do is get active!
The Microsoft email issue of the ICC must not be dismissed and forgotten. It’s a wake-up call for what happens when you build your digital house on someone else’s foundation.</p>
<p>Let’s not wait for the next company to switch off an essential tech service in Europe.</p>
<p>Let’s build systems that adhere to European laws and regulations, protect European citizens and their data, and strengthen European independence.</p>
<p><strong>Let’s stop borrowing digital power – and start generating our own. Together we can make the web a better place!</strong></p>
<div> <article> <h2>Turn ON Privacy</h2> <p>  <span>  Secure </span> <span>  Fast </span> <span>  Ad-free </span>  </p> <a href="https://app.tuta.com/?r=/signup#subscription" rel="noopener noreferrer" target="_blank">  </a> </article> <picture> <source srcset="https://tuta.com/assets/forever-free.DedJvQTK_1s1dEg.webp" type="image/webp"> <img src="https://tuta.com/assets/forever-free.DedJvQTK_XIdQ6.png" alt="Illustration of a phone with Tuta logo on its screen, next to the phone is an enlarged shield with a check mark in it symbolizing the high level of security due to Tuta's encryption." width="1000" height="1051" loading="lazy" decoding="async"> </picture> </div> </div> </section>  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Successful people set constraints rather than chasing goals (358 pts)]]></title>
            <link>https://www.joanwestenberg.com/smart-people-dont-chase-goals-they-create-limits/</link>
            <guid>44232714</guid>
            <pubDate>Tue, 10 Jun 2025 05:01:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.joanwestenberg.com/smart-people-dont-chase-goals-they-create-limits/">https://www.joanwestenberg.com/smart-people-dont-chase-goals-they-create-limits/</a>, See on <a href="https://news.ycombinator.com/item?id=44232714">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		

		<p>A few years ago, I sat across from a friend at a late dinner. He was telling me about his new promotion, the big title, the bonus, the corner office. I remember watching his face as he described it. He looked like someone describing a story he’d once believed but no longer knew how to finish.</p><p>Later that night, walking home alone, I realized I had spent the last year of my life pursuing a goal I barely remembered choosing. I had grown proficient at producing, scaling, optimizing. I had systems. I had habits. But I was working in the absence of inner alignment. I was winning at a game I no longer wanted to play.</p><p>The goal hadn’t been wrong. It had just been handed to me, implicitly, by a world that measures progress in forward motion and not in depth.</p><p>That was the moment I began to question the entire architecture of ambition. Not whether it worked, but whether it asked the right things of a person. Whether a life could be constructed from milestones rather than methods, from outcomes rather than orientation.</p><p>Lately, I’ve paid closer attention to the boundaries that shape my work. The negative space. The rules. The constraints. I stopped asking where I wanted to go and started asking what I was unwilling to violate in order to get there. I noticed a shift: The work got harder, yes. But also clearer.</p><p>I haven’t abandoned goals entirely. But I no longer treat them as sacred. They’re furniture. Constraints are the frame.</p><h3 id="the-overrated-religion-of-goals">The Overrated Religion of Goals</h3><p>In 1953, a popular myth claimed that Yale graduates who wrote down their goals were significantly more successful 20 years later than those who didn’t. The study was cited in self-help books, business seminars, and motivational speeches for decades. The only problem was that the study never happened. It was completely fabricated, a ghost statistic that wandered the halls of corporate training programs like a benevolent poltergeist. But it persisted. Like a bad penny, it kept showing up for decades. </p><p>Why?</p><p><strong><em>Because it said what people wanted to believe: that clarity of ambition would bring control, that intention would yield destiny.</em></strong></p><p>The cult of goal-setting thrives in this illusion. It converts uncertainty into an illusion of progress. It demands specificity in exchange for comfort. And it replaces self-trust with the performance of future-planning. That makes it wildly appealing to organizations, executives, and knowledge workers who want to feel like they’re doing something without doing anything unpredictable. But the more interesting question is: who is <em>not</em> setting goals? And why?</p><p>It turns out that many of the people doing genuinely innovative work avoid explicit goals entirely. They work within constraints instead.</p><h3 id="goals-are-for-games-constraints-are-for-worlds">Goals are for Games. Constraints are for Worlds.</h3><p>A goal is a win condition. Constraints are the rules of the game. But not all games are worth playing. And some of the most powerful forms of progress emerge from people who stopped trying to win and started building new game boards entirely.</p><p>When John Boyd, the brilliant / irascible military strategist, developed the OODA loop, he worked within the limits of jet fighter dogfights. In those constraints, he found a dynamic model of decision-making that would later influence military doctrine, business strategy and start-up culture.</p><p>Richard Feynman didn’t get his Nobel Prize by pursuing "win a Nobel Prize" as a goal. He played with problems, often placing arbitrary limits on himself: what if we assume this system has no dissipation? What if we ignore spin? He looked for elegance within boundaries, not outcomes. His freedom came from self-imposed structure.</p><p>Constraints do not block creativity. They aim it. The sonnet form is maddeningly restrictive. Yet Shakespeare produced infinite meaning inside 14 lines. Jazz musicians work within a key and tempo. Architects must respect the load-bearing capacity of concrete. The painter who begins with a blank canvas faces more paralysis than the one who starts with a frame and a palette.</p><h3 id="the-seduction-of-goals">The Seduction of Goals</h3><p>Setting goals feels like action. It gives you the warm sense of progress without the discomfort of change. You can spend hours calibrating, optimizing, refining your goals. You can build a Notion dashboard. You can make a spreadsheet. You can go on a dopamine-fueled productivity binge and still never do anything meaningful.</p><p>Because goals are often surrogates for clarity. We set goals when we’re uncertain about what we really want. The goal becomes a placeholder. It acts as a proxy for direction, not a result of it.</p><p>In WWII, when allied bombers returned to base riddled with bullet holes, engineers initially proposed reinforcing the areas with the most damage. But statistician Abraham Wald pointed out the flaw: they were only seeing the planes that made it back. The holes marked the <em>survivable</em> areas. The real vulnerabilities were the untouched parts on the returning planes, because the ones hit there never came home.</p><p>Goals often focus our attention on the visible holes. But it’s the invisible constraints that tell us what really matters.</p><h3 id="constraints-as-compass">Constraints as Compass</h3><p>NASA had a fixed budget, fixed timeline, and a goal that bordered on the absurd: land a man on the moon before the decade was out. But what made it possible wasn’t the moonshot goal. It was the sheer range of constraints: weight, heat, vacuum, radio delay, computation. Each constraint forced creative workarounds. Slide rules and paper simulations gave us one of the most improbable technological feats in history.</p><p>Constraints make solutions non-obvious. They force the kind of second-order thinking that goals actively discourage. Instead of aiming for a finish line, the constrained mind seeks viability. It doesn’t ask, “How do I get there?” It asks, “What’s possible from here?”</p><h3 id="why-constraints-scale-and-goals-break">Why Constraints Scale and Goals Break</h3><p>A goal set at time T is a bet on the future from a position of ignorance. The more volatile the domain, the more brittle that bet becomes.</p><p>This is where smart people get stuck. The brighter you are, the more coherent your plans tend to look on paper. But plans are scripts. And reality is improvisation.</p><p>Constraints scale better because they don’t assume knowledge. They are adaptive. They respond to feedback. A small team that decides, "We will not hire until we have product-market fit" has created a constraint that guides decisions without locking in a prediction. A founder who says, "I will only build products I can explain to a teenager in 60 seconds" is using a constraint as a filtering mechanism.</p><h3 id="the-psychology-of-anti-goals">The Psychology of Anti-Goals</h3><p>There’s a kind of internal rebellion that occurs when you set a goal you don’t believe in. You drag your heels. You sabotage yourself. You procrastinate, but not because you’re lazy. Because you’re not aligned.</p><p>Anti-goals are constraints disguised as aversions. The entrepreneur who says, "I never want to work with clients who drain me" is sketching a boundary around their time, energy, and identity. It’s not a goal. It’s a refusal. And refusals shape lives just as powerfully as ambitions.</p><p>Marcus Aurelius, writing in his private journal that we now call <em>Meditations</em>, returned constantly to the idea of limits. He didn't prescribe grand goals. He reminded himself what <em>not</em> to do: Don’t lie. Don’t whine. Don’t be ruled by impulse. The Stoic path is constraint-oriented. It avoids the seduction of outcomes.</p><h3 id="the-career-of-the-constraint-seeker">The Career of the Constraint-Seeker</h3><p>One person sets a goal: become a best-selling author. Another imposes a constraint: write every day, but never write what bores me. The first may spend years pitching, networking, contorting themselves into marketable shapes. The second may accidentally build a following simply because the work sustains itself.</p><p>The historian Fernand Braudel once wrote that time flows on multiple levels: the rapid time of events, the slow time of structures, the almost imperceptible time of geography. Constraints operate on the second level - they shape how you move through the world over years and decades. Not by pointing to a specific outcome, but by removing paths that would corrupt, dilute, or distract you.</p><h3 id="when-to-use-goals">When to Use Goals</h3><p>There are times when goals make sense. Training for a marathon. Preparing for an exam. Trying to ship a product by a hard deadline. In finite, controlled, well-understood domains, goals are fine.</p><p>But smart people often face ambiguous, ill-defined problems. Should I switch careers? Start a company? Move cities? Build a media business? In those spaces, setting a goal is like mapping a jungle with a Sharpie. Constraints are the machete.</p><p>If you’re building a path through the unknown, it’s better to say:</p><ul><li>I won’t take money from people I don’t trust.</li><li>I won’t build things I wouldn’t use.</li><li>I won’t work in teams where I have to wear a mask.</li></ul><p><strong><em>These are not goals. But they will get you further than most goals ever will.</em></strong></p><h3 id="closing-the-loop">Closing the Loop</h3><p>John Boyd, again. In his famous decision fork, he posed a career-defining question: Do you want to be someone, or do you want to do something?</p><p>Goals often come from the first desire. Constraints come from the second.</p><p>One is about image. The other is about identity.</p><p>And the latter has more room to grow.</p>


	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI Saved My Company from a 2-Year Litigation Nightmare (218 pts)]]></title>
            <link>https://tylertringas.com/ai-legal/</link>
            <guid>44232314</guid>
            <pubDate>Tue, 10 Jun 2025 03:55:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tylertringas.com/ai-legal/">https://tylertringas.com/ai-legal/</a>, See on <a href="https://news.ycombinator.com/item?id=44232314">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
									<p data-pm-slice="1 1 []">After 2+ years and a tremendous waste of energy and money, my firm Calm Company Fund resolved a lawsuit against us on very favorable terms.</p>
<p>What started as one of the most challenging periods of my life became an unexpected masterclass in using AI to level the playing field against well-funded opponents. If you’re an entrepreneur, especially one without a massive legal budget, this story contains lessons that could save your company.</p>
<h2>The Broken System: Why Defendants Always Lose</h2>
<p>The Delaware legal system is fundamentally broken for defendants. Due to the ironically labeled “American Rule,” even if you win, it’s extremely rare for the other side to have to cover your attorneys’ fees, much less compensate you for lost time and energy. The best case scenario is spending a small fortune to maintain the status quo of: not guilty of anything. By and large, the U.S. legal system seems to imbue people and companies with a strong right to file dumb lawsuits, even if they are mostly fabricated or based on incredibly weak claims.</p>
<p>And the legal costs to defend against a lawsuit all the way through trial can be enormous. $1 million is a reasonable expectation.</p>
<p><em>“But wait, if the lawsuit is truly dumb, won’t a judge just ‘throw it out’?“</em></p>
<p>This is the first question you get from anybody who has not actually had to interact with the U.S. legal system. And, yes, while there are two primary opportunities for a judge to throw out a case without it going to a jury trial, once you look at the basic details of each phase, you realize that they are pretty poor protection to defendants from the cost of a defense. Let’s look at the two of them.</p>
<p><strong>Motion to Dismiss: </strong>This is usually what folks who don’t have legal experience are thinking of when they think of a judge throwing out a dumb lawsuit. That somebody will file a lawsuit with basically no actual supporting facts or evidence or founded legal claims, and a studious judge will look it over and say this is BS and throw the case out. It happens relatively early on in the process. And it’s true that if you win a motion to dismiss, you will be able to wrap the case up quickly without too much cost. But here is the standard in Delaware for winning a motion to dismiss, and the standards are pretty similar in other U.S. jurisdictions.</p>
<blockquote><p>The court must <strong>accept all well-pleaded factual allegations as true</strong>, draw <strong>all reasonable inferences in the plaintiff’s favor</strong>, and <strong>dismiss the complaint only if the plaintiff could not recover under any reasonably conceivable set of circumstances</strong>.</p></blockquote>
<p>Put another way, you basically have to accept almost all of the entire initial lawsuit as true, in particular, the facts being alleged as true. And then determine that even if all of this stuff was totally true, the case should still not proceed. This really only works if there are technical flaws in the lawsuit that render the entire thing invalid regardless of the truth of the matter. A classic example would be that this is a federal issue being filed in a state court, or vice versa, or that the statute of limitations has passed, or that the plaintiff does not actually have standing to bring this lawsuit even if what they say happened, happened. It cannot in any way look at the truth or falseness of the claims being made or at the real meaningful validity of the legal arguments being weighed. All of those have to simply be accepted as true, and otherwise you basically can’t win a motion to dismiss.</p>
<p>Unfortunately, if you can’t win a motion to dismiss, you will essentially be forced to move to discovery and several other shorter phases of the trial. But discovery ends up being an incredibly time-consuming and expensive process where you’re forced to hand over all sorts of internal documents and communications and all sorts of things that could potentially be relevant to the lawsuit.</p>
<p>There can be plenty of fights over what does or does not get included there, and you also typically have to involve third-party vendors to ensure that it is happening appropriately. And all this stuff is incredibly expensive, potentially to the tune of hundreds of thousands of dollars that you are forced to do before you can make any further arguments that this case should be over.</p>
<p><strong>Summary Judgement: </strong>Once discovery is over, both sides would have an opportunity to file a motion for summary judgment. The motion for summary judgment is the first opportunity. Again, you have probably at this point already spent months or maybe up to a year of work and hundreds of thousands of dollars, and now this is your first opportunity to make a strong argument that the legal claims against you are so weak that they should be thrown out. Here is the standard for it:</p>
<blockquote><p>“The judgment sought shall be rendered forthwith if the pleadings, depositions, answers to interrogatories, and admissions on file, together with the affidavits, if any, show that <u>there is no genuine issue as to any material fact</u> and that <u>the moving party is entitled to a judgment as a matter of law</u>.”</p></blockquote>
<p>Summary judgment is a two-part standard, and you have to win both parts in order to win summary judgment.</p>
<p>The first argument you need to make is that there are no genuine issues of material fact. So you essentially need to persuade the judge that the facts that they need to understand in order to rule on the case are known and not disputed between the two parties. You, in this case, can’t really make any fact-based arguments. If one party is alleging that somebody said something and the other party says, “Well, we didn’t say that,” that is a disputed fact. That’s the kind of thing that a jury trial will need to hear evidence and look at testimony and do all that to determine facts. So you need to argue that all the facts that you need are here and are undisputed. For example, if all the information is in contracts which we have the text of and emails that we have the text of, and certain things are not disputed between the two parties, then you have to establish that there is not any fact-based questions that need to be sorted out by a jury trial. And you then also need to win the idea that, based on these non-disputed facts, you should win as a matter of law. So you really can only be making arguments about the legal invalidity of the case against you, not about the truthiness of the case against you. This can be an incredibly high bar to clear because most cases are probably going to have some disputed facts. So even if you have an incredibly compelling case here, you probably will have a tough time winning summary judgment if there are any material facts that you know the parties are disputing. This is your second and potentially last time to have a judge throw the case out before it goes to a jury trial, and in both cases, the standard for the judge to throw it out is just incredibly high. The odds are very high that you’re going to continue having to go through the case process and continue spending a lot of money unless you come to a settlement.</p>
<p><strong>So here’s the asymmetric trap every defendant faces</strong>: Defending yourself all the way through trial will definitely be incredibly expensive, no matter how strong your case is. The chance of losing in a jury trial is always more than 0%, and even if you win, you will almost certainly not be able to recover your legal costs. So the Prisoner’s Dilemma most defendants face is: Do you want to pay us some amount for a 100% chance of making this go away now, or spend much more money with at least some chance of losing at trial? This is why ~98% of civil cases settle before trial.</p>
<p><strong>Founder Takeaway #1:</strong> Understanding this reality has profound implications for how you structure deals and contracts. The actual language of a contract almost doesn’t matter unless the underlying issue is worth $2-3 million or more. No matter how iron-clad your contract language, the other side can always raise enough doubt to force the matter to trial, and <em>it can cost $1 million+ to litigate through completion</em>.</p>
<p>This means contract disputes over smaller amounts mostly depend on leverage or a willingness to outspend the other side. Consider this in your future contract negotiations—you’re better off identifying risks and potential areas for dispute upfront than spending money having a lawyer “button up” language you can’t afford to enforce anyway.</p>
<p>I also now deeply understand why experienced business people have a strict “no assholes” policy. I always thought this was throwaway advice, but it only takes one lawsuit to make it clear how incredibly valuable it is to work with people you trust.</p>
<h2>Into the Litigation Black Hole</h2>
<p>Two years ago, I was sued for the first time. I’m going to leave out many of the specific facts and focus on what I learned about the process of dealing with litigation—the decisions I made and how I was feeling along the way.</p>
<p>This was uncharted territory for me. The first curveball: our primary counsel wasn’t based in Delaware, and when someone files a lawsuit in Delaware, you immediately need Delaware-barred lawyers to defend you. You’re suddenly scrambling for referrals to lawyers you’ve never worked with to help you with what is now the most important legal issue of your life. And you don’t have much time—litigation comes with tight response deadlines.</p>
<h3>Are They An Oncologist or General Contractor?</h3>
<p>When working with paid professionals, I think people tend to put them into one of two categories: doctors or general contractors.</p>
<p>With doctors, if your oncologist says you have a lump that needs to come out, you pretty much do whatever they say. You’re the patient; they’re the expert leading the charge.</p>
<p>With general contractors doing home renovations, most people intuitively know that’s not the right approach. You stay on top of them, give clear instructions, try to understand the issues yourself, and assume you need to provide lots of direction and monitoring to get what you want done.</p>
<p>Most people—entrepreneurs included, certainly myself—put lawyers in the doctor category when they should really treat them more like general contractors.</p>
<h3>The Delegation Trap</h3>
<p>When the lawsuit hit, I asked various people I trusted for their take. Almost across the board, the perspective was: “This is ridiculous. It doesn’t make any sense. I can’t even understand how there would be damages.”</p>
<p>So I made what seemed like a rational, delegating-CEO decision: don’t let this take up too much brain space. Give it to lawyers and let them handle it.</p>
<p>In retrospect, this was a huge mistake.</p>
<p>This approach might be right if your business can comfortably spend $500K-$1M to defend a lawsuit. But if, like many entrepreneurs, you don’t have that kind of money, and the mounting costs will become a source of leverage against you, then you need to take it seriously and go “Founder Mode” on the legal process.</p>
<h3>The Expensive Treadmill of “Best Representation”</h3>
<p>When you tell lawyers “what do you think we should do,” they’re going to give you the “best representation” they can—because that’s what they’re incentivized to do. This means ticking every box, being as thorough as humanly possible, and taking everything the other side throws at them as seriously as possible.</p>
<p>This approach can cost you a fortune.</p>
<p>What lawyers typically won’t do is come up with creative ways for you to accumulate leverage against the other side to get them to back down. If you understand the dynamics I laid out earlier—that you’re essentially angling toward a settlement—this standard approach is exactly the opposite of what you should be doing.</p>
<p>You want to spend as little money as possible so costs don’t become leverage against you. And you want to find ways to make it clear that pursuing litigation against you isn’t in the other side’s best interest.</p>
<p>How exactly to create that leverage is more of a conversation over beers than a blog post topic. But this should be your primary focus—not perfectly playing the tit-for-tat game of legal proceedings that will mostly end up being irrelevant when two sides sit at a negotiating table.</p>
<h3>The Breaking Point</h3>
<p>I learned this the hard way. We spent a large portion of the initial proceedings allowing lawyers to follow the standard process, charging us $1,000/hour to check all the boxes and respond to every silly and pointless motion. The mounting legal bills became an accumulating source of leverage against us.</p>
<p>Meanwhile, these new lawyers weren’t presenting me with any viable options other than continuing to fire-hose money into an absurd litigation process. The current bills piled up and the prospective costs froze our ability to make nearly all strategic decisions—like hiring or raising new funds.</p>
<p>As I expressed my enormous frustration with this black hole of time, energy, and money, my partner gave me the pep talk I needed: she told me I needed to take control of the situation myself.</p>
<p>She was right.</p>
<h2>How AI Became My Secret Weapon</h2>
<p>It was at this breaking point that I started using AI to review all contracts and filings, understand case law, and consider courses of action. I showed up to meetings with our lawyers with a strong point of view on where we should minimize costs and maximize our leverage. My general sense is that most lawyers are used to being totally deferred to by clients, and in this case, the new counsel we had started working with really did not like my new approach.</p>
<p>So, I fired them and got new lawyers.</p>
<p>It worked—but there’s no way I could have done it without LLMs getting good enough at exactly the moment I needed them.</p>
<h3>My AI Legal Research Workflow</h3>
<p>Here’s the specific process that saved my company:</p>
<p><strong>1: Upload Everything to AI Projects.</strong> Use the projects feature in Claude or ChatGPT to upload all relevant documents—contracts, motions, emails, anything relevant to your case. You might need to be selective if you hit context window limitations with thousands of pages, but include as much source material as possible.</p>
<p>For what it’s worth I didn’t necessarily find one platform (Claude or ChatGPT) or even specific models to be materially better than others at this work.</p>
<p><strong>2: Treat AI Like a Coach, Not an Oracle.</strong> Instead of asking “what do we do next,” I would ask the AI to explain the principles involved, the mechanics of what was happening in each motion, where we were in the process. I wanted to understand the controlling variables myself, not just get answers.</p>
<p>The AI is infinitely patient—you can drill down into anything you don’t understand and ask “explain that to me” or “how does that work?” This coaching approach was incredibly effective.</p>
<p><strong>Mental Health Tip:</strong> Do this research using voice mode while walking. Legal research isn’t fun, but being outside in fresh air using your voice rather than staring at a screen makes it much more bearable.</p>
<p><strong>3: Leverage AI for Contract Analysis.</strong> AI excels at reviewing lengthy contracts. When you have a 400-page agreement where page 6 references “customary exceptions” that are finally listed on page 421, AI can instantly find and connect these references without you having to jump around through table of contents.</p>
<p>Always have the AI excerpt the actual contract language with page numbers, then verify by searching the document yourself. Don’t take the AI’s word for it—confirm everything.</p>
<p><strong>4: Have AI draft arguments and briefs. </strong>Writing from a blank page is always much more work than editing. I started showing up with outlines or drafts for our filings and briefs and asking my lawyers to discuss it with me and then edit them, rather than crafting everything completely from scratch. This is a huge time and money saver.</p>
<h3>Working with Lawyers in the AI Era</h3>
<p>I wasn’t totally upfront with even my new lawyers about using AI—I was worried about the “quoting WebMD at the doctor’s office” dynamic. Instead, I made it clear that I wanted to take an active role in strategic decisions.</p>
<p>This is tricky. Most lawyers are used to being delegated to completely. People treat the legal system like a complete mystery, with lawyers as spirit guides. If you’re going to take a more active role because you’re empowered by AI, you need to set that tone early.</p>
<p>Some lawyers bristle at clients setting strategic direction. They believe there’s a “correct way” to do things, they know it, and they’ll fight you if you disagree. In that case, get different lawyers. Ultimately I was able to find good counsel who were willing to work with me taking an active role.</p>
<h3>The Cost Arbitrage Advantage</h3>
<p>The US legal system is optimized for wealthy people and businesses to extract leverage against those with less money. As litigation proceeds, expensive steps just automatically trigger—filings, motions, discovery, disclosures. If you just show up and ask “we got sued, what do we do?” lawyers will walk you through the most expensive approach possible.</p>
<p>This creates a vicious cycle: if you’re ultimately going to settle (which 98% of cases do), it’s almost entirely about leverage and negotiation. The most effective leverage wealthier opponents have is simply bleeding you dry through expensive procedural steps.</p>
<p><strong>Founder Takeaway #2:</strong> You must proactively set budget constraints with your legal counsel. Be completely upfront: “Here’s where we think this is heading. We need to spend very little money so we don’t get bled dry and forced to accept a terrible settlement.”</p>
<p>When I radically reduced our legal costs using AI, it became a form of serious leverage. If the other party is spending 10x more than you, that creates negotiating power.</p>
<h3>Where AI Falls Short</h3>
<p>AI works best as a coach for your own primary research—don’t try to fully delegate legal strategy to it. The main limitations I encountered:</p>
<p><strong>Case Law Hallucinations:</strong> Earlier models definitely hallucinated case law that didn’t exist. Always double-check any case citations using open-source legal databases. This is getting better with newer models, but verify everything.</p>
<p><strong>Strategic Decision-Making:</strong> Neither AI nor your lawyer can make the truly strategic decisions for you that you’ll need to get to a settlement. AI can help craft strong legal arguments, but you need to develop the overarching strategy yourself, balancing risks and negotiating position.</p>
<h2>The Psychological Toll and Unexpected Growth</h2>
<p>Going through protracted litigation is one of the most psychologically challenging experiences I’ve ever faced. As an entrepreneur, I’m used to hard things, but my saving grace has always been knowing I’m <em>choosing</em> the challenge. With litigation, you have <em>zero</em> choice—it soaks up enormous amounts of time, brain space, energy, and money for something you have less than zero interest in doing.</p>
<p>This forced me to develop practices of radical acceptance and get comfortable with circumstances I couldn’t change. The Untethered Soul was particularly helpful during this period. Ironically, I later learned it was written by a tech entrepreneur during his own multi-year litigation ordeal.</p>
<h2>Communicating Through Crisis</h2>
<p>Balancing transparency with stakeholders while managing legal constraints is incredibly difficult. Your counsel will advise against sharing anything that could end up in discovery, but litigation might be the most important thing affecting your business.</p>
<p><strong>For entrepreneurs in litigation:</strong> Be transparent, don’t sugarcoat, and ask for help. Your stakeholders want you to succeed and will offer advice or introductions if you ask.</p>
<p><strong>For investors/stakeholders:</strong> Give entrepreneurs in litigation enormous grace and patience. It’s incredibly difficult to strike the right balance between keeping you informed and following legal counsel’s advice.</p>
<h2>Your AI Legal Playbook: Three Actions to Take Today</h2>
<p>Before you’re in crisis mode, take these steps:</p>
<ol>
<li><strong>Set up your AI legal research system:</strong> Create projects in Claude or ChatGPT specifically for legal documents. Practice uploading contracts and asking the AI to explain key terms, potential risks, and ambiguous language.</li>
<li><strong>Audit your legal insurance using AI:</strong> Upload your business insurance policy and have AI analyze your coverage gaps for the most likely litigation scenarios in your industry.</li>
<li><strong>Establish your “no assholes” policy:</strong> Start assuming that you won’t necessarily be able to hide behind ironclad contracts if you’re working with people that you don’t trust, and really start to factor that in to who you decide to do business with. The cost of one bad actor can destroy years of progress.</li>
</ol>
<h2>The Bigger Picture</h2>
<p>I’m convinced every entrepreneur should start using AI to take charge of legal issues now. Contracts are language, and Large Language Models are exceptionally good at reviewing and even creating them. Use actual lawyers more like strategic consultants rather than paying them to do all the laborious work of contract review or drafting.</p>
<p>This experience taught me that while the legal system is broken for defendants, AI can level the playing field for entrepreneurs who can’t afford to be outspent. The key is using it as a force multiplier for your own understanding and strategic thinking, not as a replacement for human judgment.</p>
<p>The most important lesson? Don’t let anyone—even expensive lawyers—convince you that legal strategy is too complex for you to understand and influence. With AI as your coach, you can take charge of your legal destiny and turn cost efficiency into competitive advantage.</p>
									
																	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple has announced its final version of macOS for Intel (161 pts)]]></title>
            <link>https://tedium.co/2025/06/09/apple-wwdc-intel-mac-support-ending/</link>
            <guid>44232296</guid>
            <pubDate>Tue, 10 Jun 2025 03:51:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tedium.co/2025/06/09/apple-wwdc-intel-mac-support-ending/">https://tedium.co/2025/06/09/apple-wwdc-intel-mac-support-ending/</a>, See on <a href="https://news.ycombinator.com/item?id=44232296">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                
                    <div><p><strong>As you probably know after all this time,</strong> Tedium is obsessed with the closing frame, the end of the story. And today, we learned that Apple is finally ending its 20-year run of Intel-based Macs.</p><p>That’s the bad news. The good news is that they gave the public one more year of new versions, along with the promise of potential security fixes, avoiding an uncomfortable rug-pull like <a href="https://tedium.co/2020/06/16/apple-powerpc-intel-transition-history/">the one that many PowerPC users experienced</a> with Snow Leopard in 2009. That OS came out a mere three years after the discontinuation of the last PowerPC Mac, and users had to figure out the cutoff was happening by <a href="https://www.macrumors.com/2008/06/11/mac-os-x-snow-leopard-drops-powerpc-support/">reading Apple rumor sites</a>.</p><p>While some Mac models did get short shrift (owners of the 2020 Intel MacBook Air have some angry skeets to write), for the most part, the company did not try to force this transition to happen faster than it needed to.</p>


<p><em>The <a href="https://www.youtube.com/watch?v=uwIUNbrjS9I">commercial</a> for the first Intel Mac, dating to 2006. If you’ve ever seen the video for The Postal Service’s “Such Great Heights” and think it looks very familiar, <a href="https://www.wired.com/2006/01/apple-vs-postal/">there’s a reason for that</a>.</em></p><p>It was as if the company wanted to bury the blow as much as possible, so it didn’t even mention it during the main WWDC keynote, which is the one that the average person cares about. It was instead <a href="https://www.youtube.com/live/51iONeETSng?t=3259s">buried nearly 55 minutes</a> into the 57-minute Platforms State of the Union, where Apple Senior Director of Developer Relations Matthew Firlik dropped the news like this:</p><blockquote><p>Metal 4 is a great example of the tight integration of our software with Apple silicon, creating a whole new class of experiences. In fact, since we began the transition to Apple silicon over five years ago, we’ve been able to add incredible features like Apple Intelligence, Game Mode, Presenter Overlay, and more.</p><p>We completed the transition to Apple silicon across our entire product lineup two years ago. So your apps can now depend on and build upon these features too. Apple silicon enables us all to achieve things that were previously unimaginable. And it’s time to put all of our focus and innovation there.</p><p>And so, macOS Tahoe will be the final release for Intel Macs. So if you’ve not done so already, now is a great time to help your users migrate to the Apple silicon versions of your apps.</p></blockquote><p>This sort of finality—a one-year pre-announcement from an official Apple source—is useful for any old users who have been holding off for whatever reason. But it’s also great for developers, who now have the OK to transition towards an upgrade if they haven’t already. And certainly, Apple’s ARM-based chips are some of the best processors ever made, based on their balance of speed and energy efficiency, which has made the M1 MacBook Air (nearly a 5-year-old machine!) perhaps the greatest goldilocks machine ever created.</p><p>But still, even with all that lead-up, this decision still stings, because it feels unnecessary to put all that good hardware to pasture. As I wrote back in April, <a href="https://tedium.co/2025/04/14/windows-10-forgotten-tech-users/">a similar decision to put an end of life on Windows 10</a> is ultimately unnecessary—and it would lead to a lot of good hardware ending up in landfills. That’s the downside, and one we should not ignore.</p></div><div><p>The upside of the Intel Mac going away is that users aren’t totally screwed. They still will likely see security updates for quite a while. And it is possible to install Linux on Intel Macs, though it’s more complicated on the newest Intel Macs because of the existence of the T2 security chip. (There’s actually a project, <a href="https://t2linux.org/">T2Linux</a>, that has largely solved this issue.) And plus, an old version of MacOS still has a lot of charm to it. With the right security posture it can still remain a very useful machine years down the line.</p><figure><img src="https://proxy.tedium.co/WeQGG97jdHEGDnC5idGvbk0jSE8=/1000x751/filters:quality(80)/uploads/MacBook-Air-Stickers.jpg" width="1000" height="751" loading="lazy" alt="MacBook-Air-Stickers.jpg"><figcaption>Where are we going to put our hundreds of stickers now? (<a href="https://unsplash.com/photos/text-hfiym43qBpk">Mehmet Ali Peker/Unsplash</a>)</figcaption></figure><p>Finally, the barrier of entry into the Mac market is perhaps at its most cost-effective point in quite some time. Currently, the Mac Mini M4, sporting 16 gigs of RAM and a 256-gigabyte SSD, sells on Apple’s website for $599 and is frequently discounted elsewhere. The original Mac Mini sold for $499 at launch with a mere 256 megabytes of RAM and a 40-gigabyte hard drive. With inflation, that PowerPC Mac Mini would cost the equivalent of $839 today. Put another way, the cheapest way into the Mac ecosystem is 30% cheaper than the cheapest option 20 years ago. Based on a quick analysis of pricing on Low End Mac, this is technically the cheapest that a new Mac Mini (and by extension, entry into the Mac ecosystem) has ever been, accounting for inflation.</p><p>Nonetheless, I’m still sad that we have some finality on the fate of the Intel Mac. As someone who spent a long time Hackintoshing back in the days before Apple Silicon reshaped the Mac landscape, I appreciated the freedom the Mac’s Intel compatibility allowed me. For a few great years, you could buy some random piece of junk and turn it into a Mac with a few hours of research and a few hours of work.</p><p>No, that was not the way Apple intended you to use it. But like lots of other things Apple didn’t intend you to do, it created a culture of sorts that I and others were happy to oblige in. To me, that culture was immensely valuable, even if it often felt at odds with what this company wanted me to do with their computers and operating systems.</p><p>These days, I’m mostly a Linux user. Sure, I still have an M1 MacBook Air, but I use it as a secondary machine on which I run Asahi Linux. But I think what Apple taught me, in my years of working around their limitations as a Hackintosh user, was that I wanted more flexibility in my computing experience, even if it means not having the most power-efficient processors. Over the years, Apple has only given it begrudgingly. The marquee feature of this year’s WWDC as an actual multitasking interface for iPadOS. But it was a decision Apple dragged its feet on for years, first slow-rolling mouse support, then split-screening, then the ability to manage files.</p><p>Apple gives flexibility begrudgingly. As <a href="https://tedium.co/2025/05/02/apple-app-store-decision-reaction/">its recent App Store saga</a> proved, it is a company that does not like bending. The company’s choice to put MacOS on Intel made its technology surprisingly flexible, whether they liked it or not.</p><p>That’s the part about the Intel Macs I’m going to miss.</p></div><div><h5>Power-Efficient Links</h5><p><strong>The fact that <a href="https://www.cnbc.com/2025/06/09/warner-bros-discovery-to-split-into-two-public-companies-by-next-year.html">Warner Bros. Discovery is breaking up again</a>,</strong> already, spinning off its cable assets, just makes me want to say one thing: I want to not care about the business decisions of David Zaslav, but he makes it so hard.</p><p><strong>I clearly need to pay more attention</strong> to The Family Circus. Don McHoull has apparently discovered that <a href="https://www.youtube.com/watch?v=mOV0BV45NqA">the strip has been recycling and updating frames</a>, replacing old TVs and old haircuts, for nearly a decade, with things picking up after the pandemic.</p><p><strong>Sufjan Stevens’ landmark <em>Carrie &amp; Lowell</em>,</strong> which just got a reissue, <a href="https://pitchfork.com/reviews/albums/sufjan-stevens-carrie-and-lowell-10th-anniversary-edition/">earns the rare 10 rating on Pitchfork</a>. Well-deserved. In Apple WWDC parlance, it’s a <a href="https://www.youtube.com/watch?v=_E821In6oKo">6 out of 5</a>. It is Sufjan’s best album, even if he understandably has <a href="https://www.npr.org/2025/05/27/1253209950/sufjan-stevens-interview-carrie-and-lowell">tough feelings about it</a> these days.</p><p>--</p><p>Shout-out to a good line of computers. Find this one an interesting read? <a href="https://old.tedium.co/2025/06/09/apple-wwdc-intel-mac-support-ending/">Share it with a pal</a>!</p></div>
                
                
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Discrete Mathematics: An Open Introduction [pdf] (215 pts)]]></title>
            <link>https://discrete.openmathbooks.org/pdfs/dmoi4.pdf</link>
            <guid>44231649</guid>
            <pubDate>Tue, 10 Jun 2025 01:48:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://discrete.openmathbooks.org/pdfs/dmoi4.pdf">https://discrete.openmathbooks.org/pdfs/dmoi4.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=44231649">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Implementing DOES> in Forth, the entire reason I started this mess (111 pts)]]></title>
            <link>https://boston.conman.org/2025/06/09.1</link>
            <guid>44231594</guid>
            <pubDate>Tue, 10 Jun 2025 01:36:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://boston.conman.org/2025/06/09.1">https://boston.conman.org/2025/06/09.1</a>, See on <a href="https://news.ycombinator.com/item?id=44231594">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">

<!-- google_ad_section_start --> <!-- Hey, it can't hurt! -->
<h2><a name="2025-06-09" href="https://boston.conman.org/2025/06/09">Monday, June 09, 2025</a></h2>

<h3><a rel="bookmark" name="2025-06-09.1" href="https://boston.conman.org/2025/06/09.1">Implementing DOES&gt; in Forth, the entire reason I started this mess</a></h3>

<!-- Forth, ANS Forth, implementing Forth, DOES>, assembly, 6809 -->

<p><a href="https://boston.conman.org/2025/06/02.1">The issue</a> I had with <code>DOES&gt;</code> isn't that it's hard to use—it's just that I had no idea how one would go about implementing it,
much like Javascript programmers use closures without having to think about how they're implemented
(even if they're aware of closures in the first place).
So,
before going into how it works,
a sample from <a href="https://www.forth.com/starting-forth/11-forth-compiler-defining-words/">Starting Forth</a> is in order.</p>

<pre title="Forth">: STAR 42 EMIT ;

: .ROW CR 8 0 DO
    DUP 128 AND IF STAR ELSE SPACE THEN 2*
  LOOP DROP ;

: SHAPE CREATE 8 0 DO C, LOOP
  DOES&gt; DUP 7 + DO I C@ .ROW -1 +LOOP CR ;

HEX 18 18 3C 5A 99 24 24 24 SHAPE MAN
</pre>


<p>These two words support the example.
The first word, <code>STAR</code> just prints a asterisk
(42 is the ASCII code for the word).
The second word,
<code>.ROW</code>,
takes an 8-bit value and for each bit,
if it's a 1,
prints an asterisk,
otherwise,
it prints a space.
<code>DO</code> <code>LOOP</code> is Forth's <code>for</code> loop by the way.
The next word,
<code>SHAPE</code> is the interesting one.
But first,
we need to discuss <code>CREATE</code>.</p>

<p>This word creates a new entry in the Forth dictionary by reading the next word
(defined as a collection of non-space letters)
in the input as the name.
It then gives the newly created word a default action of pushing the address of the body of the word into the stack.
Going ahead a bit,
the word <code>MAN</code> just after <code>CREATE</code> is run will look like this
(in assembly):</p>

<pre title="Assembly">man		fdb	shape	; link to next word
		fdb	.xt - .name
.name		fcc	'man'
.xt		fdb	forth_core_create.runtime
.body
</pre>


<p>When <code>MAN</code> is run,
the address of <code>.body</code> will be pushed onto the stack.
<code>CREATE</code> is typically used to create “smart data structures”—data structures that know how to do some action.</p>

<p>Now,
getting back to the example,
when <code>SHAPE</code> is run,
the first thing it does is call <code>CREATE</code> to create a new word,
then it compiles 8 values off the top of the stack into the body of the newly created word.
Just prior to <code>DOES&gt;</code>, 
<code>MAN</code> will look like:</p>

<pre title="Assembly">man		fdb	shape	; link to next word
		fdb	.xt - .name
.name		fcc	'man'
.xt		fdb	forth_core_create.runtime
.body		fcb	$24
		fcb	$24
		fcb	$24
		fcb	$99
		fcb	$5A
		fcb	$3C
		fcb	$18
		fcb	$18
</pre>


<p>Now we get to <code>DOES&gt;</code>.
Due to the nature of what it does,
<code>DOES&gt;</code> is an immediate word—that is,
its executing during compilation to do the voodoo that it do.
Um, does.
Somehow,
it needs to modify the newly created word to not only push the address of its body onto the stack,
but execute the code that appears after itself.
So the code to be executed needs to be compiled and stored somewhere,
and somehow <code>MAN</code>
(in this example) needs to run this code.</p>

<p>And this was the problem I had with the word—<em>how does this all work?</em>
Even the well known <a href="http://git.annexia.org/?p=jonesforth.git;a=summary">JonesForth</a>,
implemented as an <abbr title="Indirect Threaded Code">ITC</abbr>,
<a href="http://git.annexia.org/?p=jonesforth.git;a=blob;f=jonesforth.f;h=5c1309574ae1165195a43250c19c822ab8681671;hb=HEAD#l1769">didn't bother with implementing <code>DOES&gt;</code></a>
(and now that I have implemented <code>DOES&gt;</code>,
I suspect I know why JonesForth didn't implement it).</p>

<p>The runtime portion of <code>CREATE</code> just pushes the address of the body of the word into the stack.
The data bytes following the <var>xt</var> have no meaning in and of themselves
(even as code it's nonsensical).
I did a search and found only <a href="https://www.bradrodriguez.com/papers/moving3.htm">one page</a> that describes how to implement <code>DOES&gt;</code>,
but:</p>

<ol>
<li>it was part three of a series of articles describing how Forth's are implemented;</li>
<li>using terminology no longer used by the ANS Forth standard;</li>
<li>attempting to describe how to implement Forth on several different <abbr title="Central Processing Unit">CPU</abbr> architectures;</li>
<li>using a few different methods (like <abbr title="Indirect Threaded Code">ITC</abbr>, <abbr title="Direct Threaded Code">DTC</abbr> and <abbr title="Subroutine Threaded Code">STC</abbr>);</li>
<li>and on this page, a wierd side trip through another Forth word <code>;CODE</code>.</li>
</ol>

<p>It wasn't an exactly easy source to read,
but between part three and <a href="https://www.bradrodriguez.com/papers/moving1.htm">part one</a>,
I was able to puzzle it out
(and it makes much more sense now that I've done it).
Now I can discribe the result using a single architecture
(6809) and a single implementation (<abbr title="Indirect Threaded Code">ITC</abbr>).
The trick here is to realize that <code>DOES&gt;</code> has a temporal aspect unlike any other Forth word.</p>

<p>Most immediate words in Forth have two temporal aspects—at the time of compilation,
and later at runtime.
For instance,
<code>IF</code>'s compile time aspect is to compile a conditional jump into the word,
and the runtime aspect is to do said conditional jump
(at least,
it does so in my implementation).
But <code>DOES&gt;</code> has <em>three</em> temporal aspects:</p>

<pre title="Forth">: SHAPE CREATE ...a DOES&gt; ( time 1 ) ...b ;
...c SHAPE MAN (time 2 )
MAN (time 3 )
</pre>


<p>At time 1,
we are compiling a word that creates other words
(so at this point, <code>CREATE</code> is compiled, not run).
The compiler looks up <code>DOES&gt;</code>, 
notices that it's an immediate word and executes it.
<code>DOES&gt;</code> at this point needs to include code to cause <code>SHAPE</code> to stop executing,
then somehow leave … something … behind for time 2,
and somehow compile the rest of the code <code>...b</code> for later execution.</p>

<p>At time 2,
we're defining a new word.
<code>CREATE</code> has been called and the initialization code for this new word <code>…a</code> has been executed.
At this point,
<code>DOES&gt;</code> needs to modify the new word … somehow … to execute the code that followed it at time 1.</p>

<p>And at time 3,
the word created is run and somehow,
it needs to know where the code to run is located.
But going back to what <code>CREATE</code> and the inialization code left us:</p>

<pre title="Assembly">man		fdb	shape	; link to next word
		fdb	.xt - .name
.name		fcc	'man'
.xt		fdb	forth_core_create.runtime
.body		fcb	$24
		fcb	$24
		fcb	$24
		fcb	$99
		fcb	$5A
		fcb	$3C
		fcb	$18
		fcb	$18
</pre>


<p>What can be done?</p>

<p>The easy answer—<code>DOES&gt;</code> updates the <var>xt</var> of the newly created word at time 2.
Where is this <var>xt</var> created?
At time 1.
And when is it uses?
At time 3.</p>

<p>Here's what happens.</p>

<p><code>DOES&gt;</code> is an immediate word.
When it runs at time 1,
it compiles into the current word
(in this example, <code>SHAPE</code>)
the <var>xt</var> of its runtime.
So <code>SHAPE</code> will look like this:</p>

<pre title="Assembly">shape		fdb	dot_row	; link to next word
		fdb	.xt - .name
.name		fcc	'shape'
.xt		fdb	forth_core_colon.runtime
		fdb	forth_core_create.xt
		fdb	forth_core_literal.runtime_xt
		fdb	8
		fdb	forth_core_literal.runtime_xt
		fdb	0
		fdb	forth_core_do.runtime_xt
.L1		fdb	forth_core_literal.runtime_xt
		fdb	128
		fdb	forth_core_and.xt
		fdb	forth_core_if.runtime_xt
		fdb	.L2
		fdb	dot_row.xt
		fdb	forth_core_ext_again.runtime_xt
		fdb	.L3
.L2		fdb	forth_core_space.xt
.L3		fdb	forth_core_two_star.xt
		fdb	forth_core_loop.runtime_xt
		fdb	.L1
		fdb	forth_core_drop.xt
		fdb	forth_core_does.runtime_xt
</pre>


<p>(Note:  here you can see that literal numbers have the <code>LITERAL</code> runtime action,
that <code>IF</code> compiles to its runtime action.
There are two Forth words that pretty much do the same thing—<code>AHEAD</code> does an unconditional branch forward,
and <code>AGAIN</code> does an unconditional branch backwards;
they basically both do an unconditional branch,
so I picked one to handle both internally and I picked <code>AGAIN</code> for this.
More on this in a later post.)</p>

<p>To create the new <var>xt</var> that words created by <code>SHAPE</code> will use
(or any word that includes <code>DOES&gt;</code>)
it then lays out a single instruction,
<code>JSR forth_core_create.does_hook</code>
(more on this in a bit).
It then exits,
keeping the compiler “on” so the rest of the code that follows <code>DOES&gt;</code> gets compiled into the word
(<code>SHAPE</code> in this case).
This is all <code>DOES&gt;</code> does (man, that sounds weird) at time 1.
At the end,
<code>SHAPE</code> looks like:</p>

<pre title="Assembly">shape		fdb	dot_row	; link to next word
		fdb	.xt - .name
.name		fcc	'shape'
.xt		fdb	forth_core_colon.runtime
		fdb	forth_core_create.xt
		fdb	forth_core_literal.runtime_xt
		fdb	8
		fdb	forth_core_literal.runtime_xt
		fdb	0
		fdb	forth_core_do.runtime_xt
.L1		fdb	forth_core_literal.runtime_xt
		fdb	128
		fdb	forth_core_and.xt
		fdb	forth_core_if.runtime_xt
		fdb	.L2
		fdb	dot_row.xt
		fdb	forth_core_ext_again.runtime_xt
		fdb	.L3
.L2		fdb	forth_core_space.xt
.L3		fdb	forth_core_two_star.xt
		fdb	forth_core_loop.runtime_xt
		fdb	.L1
		fdb	forth_core_drop.xt
		fdb	forth_core_does.runtime_xt

.does		jsr	forth_core_create.does_hook	; !!!

		fdb	forth_core_dupe.xt
		fdb	forth_core_literal.runtime_xt
		fdb	7
		fdb	forth_core_plus.xt
		fdb	forth_core_do.runtime_xt
.L4		fdb	forth_core_i.xt
		fdb	forth_core_c_fetch.xt
		fdb	dot_row.xt
		fdb	forth_core_literal.runtime_xt
		fdb	-1
		fdb	forth_core_ext_plus_loop.runtime_xt
		fdb	.L4
		fdb	forth_core_c_r.xt
		fdb	forth_core_exit.xt
</pre>


<p>Now we execute <code>SHAPE</code>.
Things go along until we get to <code>forth_core_does.runtime_xt</code>.
At this point,
the <code>Y</code> register is pointing to the <code>JSR forth_core_create.does_hook</code>
(see <a href="https://boston.conman.org/2025/06/04.1">the previous installment for why this is</a>—but to recap:
the <code>Y</code> register is the Forth <abbr title="Instruction Pointer">IP</abbr>).
We get the <var>xt</var> of the newly created word
(and yes,
I had to modify <code>CREATE</code> to stash this for later use)
to replace the default <var>xt</var>.
At this point, <code>MAN</code> now looks like:</p>

<pre title="Assembly">man		fdb	shape	; link to next word
		fdb	.xt - .name
.name		fcc	'man'
.xt		fdb	shape.does
.body		fcb	$24
		fcb	$24
		fcb	$24
		fcb	$99
		fcb	$5A
		fcb	$3C
		fcb	$18
		fcb	$18
</pre>


<p>Then the <code>DOES&gt;</code> runtime basically does a Forth return,
ending the execution of <code>SHAPE</code>.
Thus ends the steps that happen at time 2.</p>

<p>When <code>MAN</code> executes,
it executes <code>JSR forth_core_create.does_hook</code>.
This is a small extension to forth_core_create that does the double duty of pushing the address of the body onto the stack,
and setting things up to run the Forth code compiled just after that instruction:</p>

<pre title="Assembly">forth_core_create
		fdb	forth_core_c_r
		fdb	.xt - .name
.name		fcc	"CREATE"
.xt		fdb	.body
.body		...		; not important right now

.does_hook	puls	d	; pull return address of the stack
		pshs	y	; push Forth IP onto return stack
		tfr	d,y	; point to DOES&gt; code
.runtime	leax	2,x	; get body from xt
		pshu	x	; push into the stack
		ldx	,y++	; NEXT
		jmp	[,x]
</pre>


<p>The <code>forth_core_create.does_hook</code> pulls the return address
(from the <code>JSR</code> instruction) from the stack—this contains the Forth code after <code>DOES&gt;</code> that needs to run.
We then push the existing <code>Y</code> register onto the stack,
then set <code>Y</code> to the Forth code to execute.
This leads right into <code>forth_core_create.runtime</code>,
which pushes the body of the word
(in this case, <code>MAN</code>)
onto the stack,
and then jumps into the code following the <code>DOES&gt;</code>.</p>

<p>And at the end of all this,
you get:</p>

<pre title="Forth">MAN
   **   
   **   
  ****  
 * ** * 
*  **  *
  *  *  
  *  *  
  *  *
 OK
</pre>


<p>I suspect the reason why JonesForth didn't implement <code>DOES&gt;</code> has to do with the direct subroutine call in the middle of a Forth word.
This only works if memory is both writable and exectuable,
and modern systems tend to disallow that.
There might be a way around this,
but I haven't yet bothered to figure it out.
I'm just happy to have figured it out as it is.</p>

<hr>

<h4>Discussions about this entry</h4>

<ul>
<li><a href="https://lobste.rs/s/w1ludh/implementing_does_forth_entire_reason_i">Implementing DOES&gt; in Forth, the entire reason I started this mess | Lobsters</a></li>
<li><a href="https://lemmy.bestiver.se/post/432839">Implementing DOES&gt; in Forth, the entire reason I started this mess - Lemmy: Bestiverse</a></li>
<li><a href="https://news.ycombinator.com/item?id=44231594">Implementing DOES&gt; in Forth, the entire reason I started this mess | Hacker News</a></li>

</ul>


<!-- google_ad_section_end -->
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Las Vegas is embracing a simple climate solution: More trees (152 pts)]]></title>
            <link>https://www.npr.org/2025/06/09/nx-s1-5340363/las-vegas-climate-change-solution-trees</link>
            <guid>44231151</guid>
            <pubDate>Tue, 10 Jun 2025 00:21:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.npr.org/2025/06/09/nx-s1-5340363/las-vegas-climate-change-solution-trees">https://www.npr.org/2025/06/09/nx-s1-5340363/las-vegas-climate-change-solution-trees</a>, See on <a href="https://news.ycombinator.com/item?id=44231151">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storytext">
      <div id="resg-s1-71090">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2001+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F17%2F2c%2Ff39d836e436786fc764254ea4c0a%2Fdsc7847-edit-2.jpg" alt="The sun sets over Las Vegas' skyline." fetchpriority="high">
        </picture>
</div>
<div>
    <div>
        <p>
                Last year, the city of Las Vegas reached a record 120 degrees during the peak of summer. The Clark County Coroner's Office found that heat was a factor in more than 500 deaths. Now, city, county and local advocates are planting thousands of trees to help bring down temperatures in the hottest neighborhoods. Trees can have a significant impact on mitigating heat.
                <b aria-label="Image credit">
                    
                    Ryan Kellman/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Ryan Kellman/NPR
        
    </span>
</p></div>
   </div>
   <p><em>Climate change shapes where and how we live. That's why NPR is dedicating a week to </em><a href="https://www.npr.org/series/1199537689/climate-week" target="_blank"><em>stories about solutions</em></a><em> for building and living on a hotter planet.</em></p>      <p>Trees in the desert are like oxygen at high altitude — scarce and precious.</p>   <p>During a recent spring tree giveaway sponsored by Nevada's Clark County, the team had a couple of hundred young trees ready and lined up for residents. All the trees disappeared within an hour.</p>   <p>Lulu Banks was eligible for two free trees. That's because her neighborhood in North Las Vegas is a designated "urban heat island" — a specific area that's hotter than other neighborhoods, in part because of lack of shade.</p>   <div id="resg-s1-71092">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F12%2F22%2F79cd6d0344ff9acc6c649e4c40dd%2F359a0276.jpg" alt="In this photo, Brad Daseler walks between two rows of potted trees at a tree nursery. The nursery has multiple rows of potted trees of varying heights." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Urban forester Brad Daseler walks through a tree nursery in Las Vegas. The city has a goal of planting 60,000 trees by 2050.
                <b aria-label="Image credit">
                    
                    Ryan Kellman/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Ryan Kellman/NPR
        
    </span>
</p></div>
   </div>
   <p>"I don't have any trees on my property," Banks said.</p>   
   <p>She knew exactly where she was going to plant the new trees: one close to her front window and another outside her bedroom. She hopes the shade will help lower her air conditioning bill in the summer.</p>   <p>Research has shown that trees can lower the temperature in the area around them significantly, by at least 10 degrees. And Las Vegas needs all the cooling it can get.</p>   <p>Climate change is driving up peak temperatures in cities across the country, and <a href="https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.weather.gov%2Fvef%2Flasvegas_climate_book&amp;data=05%7C02%7Cyvette.fernandez%40nevadapublicradio.org%7Cd5eb7008d11d456d4acf08dda2d8f4c3%7Ce8ccdc8e98cd421394214f4e7a25a271%7C0%7C0%7C638845774912714367%7CUnknown%7CTWFpbGZsb3d8eyJFbXB0eU1hcGkiOnRydWUsIlYiOiIwLjAuMDAwMCIsIlAiOiJXaW4zMiIsIkFOIjoiTWFpbCIsIldUIjoyfQ%3D%3D%7C0%7C%7C%7C&amp;sdata=7Jdi3TWkL%2F5kYRQBKk6lZ3Hly5WO4paZeJ516aaJGtQ%3D&amp;reserved=0" target="_blank">last summer</a>, Las Vegas reached a record high of 120 degrees. Temperatures hit 100 degrees or higher for <a href="https://www.weather.gov/media/vef/Las%20Vegas_consecutive_day_records_.pdf" target="_blank">more than two months</a> straight.</p>   <p data-pym-loader="" data-child-src="https://apps.npr.org/dailygraphics/graphics/las-vegas-trees-heat-20250604/" id="responsive-embed-las-vegas-trees-heat-20250604"> Loading... </p>
   
<!-- END ID="RESNX-S1-5340363-100" CLASS="BUCKETWRAP STATICHTML" -->
   <p>That summer heat contributed to <a href="https://www.clarkcountynv.gov/news/news-detail-t28-r1195" target="_blank">more than 500 deaths</a>, according to the Clark County Coroner's Office. Experts say heat-related deaths <a href="https://www.npr.org/2024/06/10/nx-s1-4842299/climate-disasters-death-tolls" target="_blank">are likely undercounted</a> across the country.</p>   <p>It prompted an increased focus on finding ways to help keep people safe from the heat.</p>   
   
<!-- END ID="RESNX-S1-5340363-101" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>In May, state lawmakers passed a bill requiring the state's biggest cities and counties to <a href="https://www.reviewjournal.com/news/politics-and-government/nevada/trees-water-shade-lombardo-oks-extreme-heat-bill-after-2023-veto-3381710/?utm_campaign=widget&amp;utm_medium=topnews&amp;utm_source=news&amp;utm_term=Trees%2C%20water%2C%20shade%3A%20Lombardo%20OKs%20extreme%20heat%20bill%20after%202023%20veto" target="_blank">create heat mitigation plans</a> by next summer; it was signed into law this month. </p>   <p>In Las Vegas, the city, county and nonprofits are all stepping up efforts to plant more trees and provide more shade — especially in the hottest neighborhoods.</p>   <div id="resg-s1-71097">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F9b%2F3c%2Ffe9f14e4479d9e52c02bd8a5950e%2F359a9901.jpg" alt="This photo shows a city street with a sidewalk and a wall rising up along the side of the sidewalk that's farther from the street. Only a few trees rise up behind the wall." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                The lack of tree canopy in many of Las Vegas' neighborhoods is an important issue. Research has shown trees can lower the temperature in the area around them by at least 10 degrees. Temperatures can range significantly more depending on the surroundings, but even 10 degrees can make a big difference.
                <b aria-label="Image credit">
                    
                    Ryan Kellman/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Ryan Kellman/NPR
        
    </span>
</p></div>
   </div>
   <h3><strong>Tackling "shade disparity"&nbsp;</strong></h3>   <p>Across the U.S., studies show heat <a href="https://www.npr.org/2019/09/03/754044732/as-rising-heat-bakes-u-s-cities-the-poor-often-feel-it-most" target="_blank">disproportionately affects lower-income neighborhoods</a> because they tend to have older, less-energy-efficient homes and <a href="https://www.npr.org/2020/01/14/795961381/racist-housing-practices-from-the-1930s-linked-to-hotter-neighborhoods-today" target="_blank">often have little tree canopy</a>.</p>   <p>Ariel Choinard calls it "shade disparity."</p>   <p>Choinard leads the Southern Nevada Heat Resilience Lab, which studies how heat affects people and communities and then recommends data-based solutions. The lab was created in 2023 and is funded primarily by the National Oceanic and Atmospheric Administration, a federal agency. </p>   <div id="resg-s1-71098">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd5%2F3e%2F95ac8fb14119a22a2fff9f4633de%2F359a9967-2.jpg" alt="This photo shows an empty gravel lot devoid of trees that stretches behind a chain-link fence." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Studies show heat disproportionately affects lower-income neighborhoods. This has a ripple effect, according to Ariel Choinard of the Southern Nevada Heat Resilience Lab. People in these neighborhoods end up paying more to cool their homes. And they may have to choose between keeping their home at a livable temperature and other necessities like food or medication.
                <b aria-label="Image credit">
                    
                    Ryan Kellman/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Ryan Kellman/NPR
        
    </span>
</p></div>
   </div>
   <p>In April, Choinard visited several urban heat island neighborhoods to demonstrate how the built environment can dramatically increase surface temperatures, and the significant difference trees can make. </p>   
   <p>A <a href="https://www.rtcsnv.com/projects-initiatives/projects/current-projects/southern-nevada-urban-heat-mapping-project-v2/" target="_blank">2022 heat mapping project</a> found that several areas, including East Las Vegas and North Las Vegas, can experience temperatures up to 11 degrees hotter than other parts of the region. Each of these neighborhoods is relatively poorer than other parts of Las Vegas.</p>   
   
<!-- END ID="RESNX-S1-5340363-102" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>"Folks here have to work harder and longer to afford to cool their homes," Choinard said. "And we know that people make really tough trade-offs when it's superhot."</p>   <p>That can mean choosing between keeping their homes at a safe and comfortable temperature and paying for groceries, or limiting medication. </p>   <p>Choinard pointed out a mature tree providing plenty of shade in a neighborhood without many others.</p>   <p>"It's this tree that's doing really great work here," she said.</p>   <div id="resg-s1-71099">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x1377+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F45%2Fa0%2F467571c6429abd1ff890986a11f5%2Fheat-dip.jpg" alt="The photo on the left shows Ariel Choinard's wrist and hand, which is holding a temperature-reading device. In the photo on the right, Choinard sits on a bench in the shade of a tree. She's wearing jeans, a black T-shirt and sandals." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Ariel Choinard leads the Southern Nevada Heat Resilience Lab, which recommends data-based solutions to heat islands. The lab's studies show that heat can have wide-ranging effects on health, the environment and people's economic well-being.
                <b aria-label="Image credit">
                    
                    Ryan Kellman/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Ryan Kellman/NPR
        
    </span>
</p></div>
   </div>
   <p>On this day in April, it was 95 degrees out. But under the tree, it was much cooler. Choinard measured the temperature on the ground with an infrared thermometer: 87 degrees.</p>   <p><a href="https://www.usgs.gov/publications/urban-tree-cover-provides-consistent-mitigation-extreme-heat-arid-not-humid-cities" target="_blank">Trees help cool the air</a> through a process known as transpiration cooling. Essentially, trees release water into the atmosphere from their leaves, cooling the air around them. Tree cover also provides shade, keeping sidewalks, roads and buildings from absorbing and trapping as much of the sun's heat.</p>   <p>At the Desert Inn Estates, a mobile home community with few trees in East Las Vegas, Choinard pointed the infrared thermometer at a picnic table sitting directly in the sun.</p>   <div id="resg-s1-71133">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F94%2F63%2F7a3fea1f4703a16914b9e2edd28b%2F359a9884-2.jpg" alt="This photo of the Desert Inn Estates shows a long paved road lined with one-story homes on each side. Two palm trees rise high above the road; little other foliage is in sight." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Many older neighborhoods and mobile home communities still have palm trees and cactuses, which provide a particular visual aesthetic but little shade.&nbsp;Local leaders are moving toward nonnative, drought-tolerant trees that can provide shade. Here, at the Desert Inn Estates, two palm trees stand high above a road with little other foliage.
                <b aria-label="Image credit">
                    
                    Ryan Kellman/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Ryan Kellman/NPR
        
    </span>
</p></div>
   </div>
   <p>"130 degrees on a bench next to a table," she said, reading the device.</p>   <p>Asphalt can get even hotter: The asphalt parking space near the picnic table registered 144 degrees. </p>   <p>That's hot enough that Las Vegas has seen an <a href="https://www.umcsn.com/medical-services/lions-burn-care-center" target="_blank">increase in burns</a> — among people and pets — from hot pavement during the summer. </p>   <div id="resg-s1-71571">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x2000+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fec%2F67%2Ff60b07084a20a203aeed6485e2d9%2F359a9862.jpg" alt="In this photo, Mike Michel is visiting a small park at Desert Inn Estates. Wearing blue pants and a blue T-shirt, he's using a wheelchair on a paved sidewalk, and his small white dog, Suzy, is in his lap. The park has green grass, and in the background are one tree and a green bench." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Mike Michel is a resident at Desert Inn Estates. Just about every afternoon, he and his dog, Suzy, take advantage of the small park's relative shade.
                <b aria-label="Image credit">
                    
                    Ryan Kellman/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Ryan Kellman/NPR
        
    </span>
</p></div>
   </div>
   <h3>Planting 2,000 trees a year</h3>   <p>That's why the county, the city and nonprofits are all increasing efforts to plant more trees in the desert.</p>   <p>"Our 2050 goal is to plant 60,000 trees within the city of Las Vegas, and that breaks down to a little over 2,000 trees a year," said Brad Daseler, the city's urban forester.</p>   
   <p>Daseler is bringing in mostly nonnative plants that provide shade and are drought tolerant, like oak trees from northern Mexico and eucalyptus trees from Australia. </p>   <p>"Las Vegas is a pretty challenging environment for plant material in general because we do get so warm, but we also have the ability to freeze," Daseler said. "So finding trees that can survive in both of those climate extremes absolutely is a challenge."</p>   <p>And you can't just plant any tree in any place, Daseler says. There's nuance and strategy to what kind of trees are chosen for what areas.</p>   <p>Walking through the city tree nursery, he pointed out a young bur oak.</p>   <p>"Those would be trees that we would use more in our park spaces," he said. Other trees, like the Indian rosewood, can better withstand the harshness of being planted in a median, surrounded by asphalt and concrete, with a "high heat load."</p>   <p>The region is currently <a href="https://droughtmonitor.unl.edu/" target="_blank">in a drought</a> that the U.S. Drought Monitor has classified as "exceptional" — its severest category.</p>   <p>So there's a delicate balancing act, Daseler said, in maximizing both trees and water. </p>   <p>That's a constant challenge in the desert, says Choinard.</p>   <p>"There's always that question of, what is the highest use of a gallon of water?" she said. "But when we're talking about the long-term viability of our communities, I think a tree is a great thing to put water on."</p>   <div id="resg-s1-71135">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3000x3010+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F91%2F0e%2F71a87d3948c8876fddae3e6aeb08%2Fheattrip.jpg" alt="In this grid of three photos, the top-left photo shows two rows of potted foliage with lavender-pink flowers. The top-right photo shows a cluster of potted foliage with white flowers. In the bottom photo, Brad Daseler bends down to examine the white felt lining of a tree pot." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Planting trees for their specific environment is an important piece of the puzzle, according to Brad Daseler. For example, he might choose to plant a tree with a smaller profile to fit a narrower patch of sidewalk or a backyard garden, versus a city park. Here, Daseler points out tree pots with a textured felt lining that helps keep roots from binding up. "There's a lot of nuance to planting trees," Daseler says.
                <b aria-label="Image credit">
                    
                    Ryan Kellman/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Ryan Kellman/NPR
        
    </span>
</p></div>
   </div>
   <h3>Teaching the next generation</h3>   <p>The tree-planting effort has also spread to some schools, which are starting garden clubs.</p>   <p>On a weekend this spring, students and parents gathered in the garden at Booker Elementary School. Students planted trees, fruits and vegetables in beds — each with its own letter, spelling out S-T-E-M (for science, technology, engineering and mathematics).</p>   <p>"Don't give plants too much water, but you need it to have some water so it can grow,"  said third-grader Donovan Pantoja. </p>   
   <p>His mom, Natalie Hernandez, said the project instills positive life lessons, and teaches kids to be environmentally conscious.</p>   <p>"And then they may teach their kids," she said. "And hopefully that trickles [down], to try to conserve and help the planet."</p>   <p data-pym-loader="" data-child-src="https://apps.npr.org/dailygraphics/graphics/climateweek-footer-20250604/" id="responsive-embed-climateweek-footer-20250604"> Loading... </p>
   
<!-- END ID="RESNX-S1-5340363-103" CLASS="BUCKETWRAP STATICHTML" -->
   
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why agents are bad pair programmers (257 pts)]]></title>
            <link>https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/</link>
            <guid>44230838</guid>
            <pubDate>Mon, 09 Jun 2025 23:36:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/">https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/</a>, See on <a href="https://news.ycombinator.com/item?id=44230838">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
  <article data-pagefind-body="">
    <time pubdate="" datetime="2025-05-30" data-pagefind-meta="date:2025-05-30" data-pagefind-sort="date:2025-05-30">
      Friday, May 30, 2025
    </time>
    <a href="https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/">
      
    </a>

    <p>LLM agents make bad pairs because <strong>they code faster than humans think</strong>.</p>
<p>I'll admit, I've had a lot of fun <a href="https://justin.searls.co/tubes/2025-04-19-17h46m37s/">using GitHub Copilot's agent mode in VS Code</a> this month. It's invigorating to watch it effortlessly write a working method on the first try. It's a relief when the agent unblocks me by reaching for a framework API I didn't even know existed. It's motivating to pair with someone even more tirelessly committed to my goal than I am.</p>
<p>In fact, pairing with top LLMs evokes many memories of pairing with top human programmers.</p>
<p><em>The worst memories.</em></p>
<p>Memories of my pair grabbing the keyboard and—in total and unhelpful silence—hammering out code faster than I could ever hope to read it. Memories of slowly, inevitably becoming disengaged after expending all my mental energy in a futile attempt to keep up. Memories of my pair hitting a roadblock and finally looking to me for help, only to catch me off guard and without a clue as to what had been going on in the preceding minutes, hours, or days. Memories of gradually realizing my pair had been building the <em>wrong thing all along</em> and then suddenly realizing the task now fell to me to remediate a boatload of incidental complexity in order to hit a deadline.</p>
<p>So yes, pairing with an AI agent can be uncannily similar to pairing with an expert programmer.</p>

<h2 id="the-path-forward">
    <a href="#the-path-forward">The path forward</a>
</h2>
<p>What should we do instead? Two things:</p>
<ol>
<li>The same thing I did with human pair programmers who wanted to take the ball and run with it: I let them have it. In a perfect world, pairing might lead to a better solution, but there's no point in forcing it when both parties aren't bought in. Instead, I'd break the work down into discrete sub-components for my colleague to build independently. I would then review those pieces as pull requests. Translating that advice to LLM-based tools: <strong>give up on editor-based agentic pairing in favor of asynchronous workflows like GitHub's new <a href="https://github.blog/news-insights/product-news/github-copilot-meet-the-new-coding-agent/">Coding Agent</a></strong>, whose work you can <em>also</em> review via pull request</li>
<li>Continue to practice pair-programming with your editor, but <strong>throttle down from the semi-autonomous "Agent" mode to the turn-based "Edit" or "Ask" modes</strong>. You'll go slower, and <em>that's the point</em>. Also, just like pairing with humans, try to establish a rigorously consistent workflow as opposed to only reaching for AI to troubleshoot. I've found that <a href="https://martinfowler.com/articles/on-pair-programming.html#PingPong">ping-pong pairing</a> with an AI in Edit mode (where the LLM can propose individual edits but you must manually accept them) strikes the best balance between accelerated productivity and continuous quality control</li>
</ol>
<p>Give people a few more months with agents and I think (hope) others will arrive at similar conclusions about their suitability as pair programmers. My advice to the AI tool-makers would be to introduce features to make pairing with an AI agent more qualitatively similar to pairing with a human. Agentic pair programmers are not inherently bad, but their lightning-fast speed has the unintended consequence of undercutting any opportunity for collaborating with us mere mortals. If an agent were designed to type at a slower pace, pause and discuss periodically, and frankly expect more of us as equal partners, that could make for a hell of a product offering.</p>
<p>Just imagining it now, any of these features would make agent-based pairing much more effective:</p>
<ul>
<li>Let users set how many lines-per-minute of code—or words-per-minute of prose—the agent outputs</li>
<li>Allow users to pause the agent to ask a clarifying question or push back on its direction without derailing the entire activity or train of thought</li>
<li>Expand beyond the chat metaphor by adding UI primitives that mirror the work to be done. Enable users to pin the current working session to a particular GitHub issue. Integrate a built-in to-do list to tick off before the feature is complete. That sort of thing</li>
<li>Design agents to act with less self-confidence and more self-doubt. They should frequently stop to converse: validate <em>why</em> we're building this, solicit advice on the best approach, and express concern when we're going in the wrong direction</li>
<li>Introduce advanced voice chat to better emulate human-to-human pairing, which would allow the user both to keep their eyes on the code (instead of darting back and forth between an editor and a chat sidebar) and to light up the parts of the brain that find mouth-words more engaging than text</li>
</ul>
<p>Anyway, that's how I see it from where I'm sitting the morning of Friday, May 30th, 2025. Who knows where these tools will be in a week or month or year, but I'm fairly confident you could find worse advice on meeting this moment.</p>
<p>As always, if you have thoughts, <a href="mailto:justin@searls.co">e-mail 'em</a>.</p>
  </article>
  <div>
  <hr>
  <h2>Got a taste for hot, fresh takes?</h2>
  <p>
    Then you're in luck, because you can subscribe to this site via <a href="https://justin.searls.co/rss">RSS</a> or <a href="https://mastodon.social/@searls">Mastodon</a>!
    And if that ain't enough, then sign up for my <a href="https://justin.searls.co/newsletter">newsletter</a> and I'll send you a usually-pretty-good essay once a month.
    I also have a solo <a href="https://justin.searls.co/casts">podcast</a>, because of course I do.
  </p>
</div>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Marines being mobilized in response to LA protests (584 pts)]]></title>
            <link>https://www.cnn.com/2025/06/09/politics/marines-mobilized-los-angeles-protests</link>
            <guid>44230182</guid>
            <pubDate>Mon, 09 Jun 2025 22:21:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2025/06/09/politics/marines-mobilized-los-angeles-protests">https://www.cnn.com/2025/06/09/politics/marines-mobilized-los-angeles-protests</a>, See on <a href="https://news.ycombinator.com/item?id=44230182">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300, &quot;image--eq-large&quot;: 660}" data-uri="cms.cnn.com/_components/image/instances/cmbpi195a000g3b6mzwua9w78@published" data-name="2021-03-11T140045Z_894655815_RC229M9786JU_RTRMADP_3_USA-DEFENSE.JPG" data-component-name="image" data-observe-resizes="" data-original-ratio="0.666875" data-original-height="1067" data-original-width="1600" data-url="https://media.cnn.com/api/v1/images/stellar/prod/2021-03-11t140045z-894655815-rc229m9786ju-rtrmadp-3-usa-defense.JPG?c=original" data-editable="lede" data-freewheel-lede="true">
       <picture><source height="383" width="680" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/2021-03-11t140045z-894655815-rc229m9786ju-rtrmadp-3-usa-defense.JPG?c=16x9&amp;q=h_383,w_680,c_fill/f_webp" type="image/webp"><source height="653" width="1160" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/2021-03-11t140045z-894655815-rc229m9786ju-rtrmadp-3-usa-defense.JPG?c=16x9&amp;q=h_653,w_1160,c_fill/f_webp" type="image/webp"><source height="605" width="1075" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/2021-03-11t140045z-894655815-rc229m9786ju-rtrmadp-3-usa-defense.JPG?c=16x9&amp;q=h_605,w_1075,c_fill/f_webp" type="image/webp"><source height="833" width="1480" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/2021-03-11t140045z-894655815-rc229m9786ju-rtrmadp-3-usa-defense.JPG?c=16x9&amp;q=h_833,w_1480,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/2021-03-11t140045z-894655815-rc229m9786ju-rtrmadp-3-usa-defense.JPG?c=16x9&amp;q=h_833,w_1480,c_fill" alt="The entrance to US Marine Corps Air Ground Combat Center in Twentynine-Palms, California, on March 10, 2021." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="1067" width="1600"></picture>
    </div><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbphz4zi001w27p24qumgv3e@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            More than 700 Marines based out of the Marine Corps Air Ground Combat Center in California have been mobilized to respond to <a href="https://www.cnn.com/2025/06/09/politics/trump-national-guard-los-angeles-hegseth">the protests in Los Angeles</a>, and the troops will join the thousands of National Guard members who were activated by President Donald Trump over the weekend without the consent of California’s governor or LA’s mayor.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbphzpyb00053b6mxnqjb52p@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The deployment of the full Marine battalion marks a significant escalation in Trump’s use of the military as a show of force against protesters, but it is still unclear what their specific task will be once in LA, sources told CNN. Like the National Guard troops, they are prohibited from conducting law enforcement activity such as making arrests unless Trump invokes the Insurrection Act, which permits the president to use the military to end an insurrection or rebellion of federal power.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpjfidz000l3b6mgpx79r7x@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The Marines being activated are with 2nd battalion, 7th Marines, 1st Marine division, according to US Northern Command. The activation is “intended to provide Task Force 51 with adequate numbers of forces to provide continuous coverage of the area in support of the lead federal agency,” NORTHCOM said in statement, referring to US Army north’s contingency command post.
    </p>

  





    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbphzpyb00063b6m5hpprjqy@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            One of the people familiar with the Marine mobilization said they will be augmenting the guard presence on the ground in LA.<strong> </strong>
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpx7zh300013b6mjp342mtp@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Approximately 1,700 National Guard members are now operating in the greater Los Angeles area, two days after Trump’s Saturday memorandum deploying 2,000 service members, according to a statement from NORTHCOM. On Monday evening, the Pentagon announced that Trump ordered the deployment of an additional batch of 2,000 more National Guard members. It is unclear when the rest of the initial group, or the new troops announced Monday, would arrive in Los Angeles.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpx81n800033b6mkpbitc4i@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The Marines are expected to bolster some of the guard members who have been deployed to LA in the last two days, this person said.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpiwbhi00053b6mtr3q7lia@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            And while the person familiar stressed that the Marines were being deployed only to augment the forces already there, the image of US Marines mobilizing inside the United States will stand in contrast to National Guardsmen who more routinely respond to domestic issues. While some Marines have been assisting in border security at the southern border, one US official said Marines have not been mobilized within the US like they are in California now since the 1992 riots in Los Angeles.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbphz76k00003b6m0ocepmlq@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            While the Marines’ tasks have not been specified publicly, they could include assignments like crowd control or establishing perimeter security. Lawyers within the Defense Department are also still finalizing language around the use-of-force guidelines for the troops being mobilized, but the person familiar said it will likely mirror the military’s standing rules of the use of force.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpm0io600083b6muc570zg9@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            California Gov. Gavin Newsom described the involvement of Marines as “unwarranted” and “unprecedented.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpm7d9o000c3b6m32el1dnc@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “The level of escalation is completely unwarranted, uncalled for, and unprecedented — mobilizing the best in class branch of the U.S. military against its own citizens,” Newsom said in a statement linking to a news story about the Marines mobilizing.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpm9qel000q3b6mh8xkh9nj@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Newsom disputed the characterization as a “deployment,” which the governor described as different from mobilization. US Northern Command said in their statement, however, that the Marines will “seamlessly integrate” with National Guard forces “protecting federal personnel and federal property in the greater Los Angeles area.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpq99t600003b6ml720h6br@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Los Angeles Police Chief Jim McDonnell <a href="https://x.com/LAPDPIO/status/1932204738151698907" target="_blank">called for</a> “open and continuous lines of communication” between all agencies responding to protests in the city ahead of the deployment of US Marines.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpqacco00043b6mx9p4if0e@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            McDonell said in a statement that his agency and other partner agencies have experience dealing with large-scale demonstrations and safety remains a top priority for them.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpqacco00053b6muq7fosz3@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            That communication will “prevent confusion, avoid escalation, and ensure a coordinated, lawful, and orderly response during this critical time,” McDonnell stressed.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpivwta00003b6mr86ishcv@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            <em>This story and headline have been updated with additional developments.</em>
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cmbpixy8g000b3b6mqoov8xcg@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            <em>CNN’s Cindy Von Quednow and Danya Gainor contributed to this report.</em>
    </p>

              </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sly Stone has died (373 pts)]]></title>
            <link>https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345</link>
            <guid>44229841</guid>
            <pubDate>Mon, 09 Jun 2025 21:42:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345">https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345</a>, See on <a href="https://news.ycombinator.com/item?id=44229841">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="prism-article-body"><p>Sly Stone, the pioneering leader of the funk band bearing his name, Sly and the Family Stone, has died, according to his family. Stone was 82 years old.</p><p>"After a prolonged battle with COPD and other underlying health issues, Sly passed away peacefully, surrounded by his three children, his closest friend, and his extended family," his family said in a statement. "While we mourn his absence, we take solace in knowing that his extraordinary musical legacy will continue to resonate and inspire for generations to come."</p><div data-testid="prism-inline-image"><figure data-testid="prism-figure"><div data-testid="prism-ratio-frame"><picture data-testid="prism-picture"><source media="(max-width: 414px)" srcset="https://i.abcnewsfe.com/a/8c27ef74-7f21-4aea-8dfc-647d2f9b22c5/sly-stone-gty-jef-250609_1749497128653_hpMain.jpg?w=375, https://i.abcnewsfe.com/a/8c27ef74-7f21-4aea-8dfc-647d2f9b22c5/sly-stone-gty-jef-250609_1749497128653_hpMain.jpg?w=750 2x"><source media="(min-width: 415px)" srcset="https://i.abcnewsfe.com/a/8c27ef74-7f21-4aea-8dfc-647d2f9b22c5/sly-stone-gty-jef-250609_1749497128653_hpMain.jpg?w=750, https://i.abcnewsfe.com/a/8c27ef74-7f21-4aea-8dfc-647d2f9b22c5/sly-stone-gty-jef-250609_1749497128653_hpMain.jpg?w=1500 2x"><img alt="" data-testid="prism-image" draggable="false" loading="lazy" src="https://i.abcnewsfe.com/a/8c27ef74-7f21-4aea-8dfc-647d2f9b22c5/sly-stone-gty-jef-250609_1749497128653_hpMain.jpg"></picture></div><figcaption><div data-testid="prism-caption"><p><span data-testid="prism-truncate"><span><span>Sly Stone of Sly And The Family Stone poses in London, July 16, 1973.</span></span></span></p><p><span>Michael Putland/Getty Images</span></p></div></figcaption></figure></div><p>Stone, whose real name was Sylvester Stewart, formed a band with his brother Freddie and sisters Loretta and Rose at an early age. The band played gospel music, seemingly a far cry from the funk and psychedelia he would later become known for, but Sly and the Family Stone would become known for its blending of music styles.</p><p>Sly Stone would answer simply when writing in his 2023 memoir, "Thank You (Falettinme Be Mice Elf Agin)," about how he wanted to be remembered: "Music, just music."</p><p>"I don't want to get in people's way and I don't want them to get in my way. I just want to play my songs," he said. "I would do it for nothing."</p><p>He was born in Texas in 1943, the second oldest of five children, but his family moved to the San Francisco Bay Area when he was young. He got a job as a disc jockey in the early '60s and played everything from British rock to soul music.</p><p>Sly and the Family Stone formed in 1966 as a combination of Sly and his brother Freddie's individual bands. Sister Rose also joined the group. Loretta chose not to pursue music while younger sister Vaetta performed in her own band, Little Sister, and would join Sly and the Family Stone for occasional gigs.</p><p>While Sly was predominantly a guitarist when the band formed, he allowed Freddie to take that role in the new group and mostly played keyboard. However, he was, by many accounts, a musical prodigy. He learned to play guitar, keyboard, bass and the drums as a child.</p><p>The Family Stone was the first major American rock band to be racially integrated.</p><p>Sly and the Family Stone released its first album in October 1967, "A Whole New Thing," but it received only limited attention. Just a month later, the band would be launched into the stratosphere when it released the single "Dance to the Music."</p><p>"Dance to the Music" peaked at No. 8 on the Billboard Pop Singles chart.</p><p>"I knew the music worked, but I didn’t know if people would get it," Stone <a data-testid="prism-linkbase" href="https://www.theguardian.com/music/2023/oct/06/i-never-lived-a-life-i-didnt-want-to-live-sly-stone-on-addiction-ageing-and-changing-music-for-ever" target="_blank">told The Guardian</a> in 2023 in a rare interview during the later years of his life. “That’s what happened after the first album -- I poured everything into those songs. Music people liked it, but not everyone was a music person. 'Dance to the Music' came out as a simpler version, and more people understood that."</p><div data-testid="prism-inline-image"><figure data-testid="prism-figure"><div data-testid="prism-ratio-frame"><picture data-testid="prism-picture"><source media="(max-width: 414px)" srcset="https://i.abcnewsfe.com/a/a8e2009b-0109-4bf0-8892-9b6a6df0b4a0/sly-stone-mo_1749500180904_hpEmbed_3x2.jpg?w=375, https://i.abcnewsfe.com/a/a8e2009b-0109-4bf0-8892-9b6a6df0b4a0/sly-stone-mo_1749500180904_hpEmbed_3x2.jpg?w=750 2x"><source media="(min-width: 415px)" srcset="https://i.abcnewsfe.com/a/a8e2009b-0109-4bf0-8892-9b6a6df0b4a0/sly-stone-mo_1749500180904_hpEmbed_3x2.jpg?w=750, https://i.abcnewsfe.com/a/a8e2009b-0109-4bf0-8892-9b6a6df0b4a0/sly-stone-mo_1749500180904_hpEmbed_3x2.jpg?w=1500 2x"><img alt="" data-testid="prism-image" draggable="false" loading="lazy" src="https://i.abcnewsfe.com/a/a8e2009b-0109-4bf0-8892-9b6a6df0b4a0/sly-stone-mo_1749500180904_hpEmbed_3x2.jpg"></picture></div><figcaption><div data-testid="prism-caption"><p><span data-testid="prism-truncate"><span><span>Sly Stone from the group Sly and the Family Stone performs at the 48th Annual Grammy Awards on Feb. 8, 2006, in Los Angeles.</span></span></span></p><p><span>Mark J. Terrill/AP, FILE</span></p></div></figcaption></figure></div><p>The band -- and Sly in particular -- also quickly came to be known for its high-energy, uptempo live performances. By 1969, after the release of "Stand!" the same year, the band was one of the biggest in the world and Sly was a household name.</p><section data-testid="prism-collection"><header><p><h2>Popular Reads</h2></p></header></section><p>"Stand!" featured the song "Everyday People," the group's first No. 1 single, and "Hot Fun in the Summertime," which reached No. 2 on the Billboard Hot 100 chart.</p><p>"Timing is everything, you can't plan lightning in a bottle, and Sly just happened to come at a time period in which the paradigm shift was gonna change culturally for music," Roots drummer Questlove, who directed the film "Sly Lives!," released in February, <a data-testid="prism-linkbase" href="https://www.goodmorningamerica.com/culture/video/questlove-talks-sly-lives-118773656" target="_blank">told "Good Morning America."</a> "He's one of the first Black artists -- really one of the first artists to sort of write confessional, along with [Bob] Dylan -- the idea of not just doing love songs but talking about how you feel inside or political things. ... Everything that was modern music, Sly pretty much built the blueprint.</p><p>At the height of the band's fame, the members took the stage at the original Woodstock in August 1969. The band went on stage at 3:30 a.m. on Sunday morning, just after Janis Joplin and just before The Who. The group ripped through an electric medley of hits including "Everyday People," "Dance To The Music," "Music Lover" and "I Want To Take You Higher."</p><p>However, it was not long after that the band devolved into drugs, finger-pointing and missed shows. Sly himself admitted in his memoir that he became dependent on cocaine and PCP. The band released several unheralded albums in the '70s but never reached the height of 1969 again. It was the same for Sly's solo career, which included several albums in the late '70s and early '80s, usually still under the Family Stone name.</p><p>"When you get success, why do you feel guilty about it? And why do we sabotage it?" Questlove told "GMA." "Even though he invented the alphabet for which we write many of the books, the culture doesn't know. They know him for not showing up for shows, being late, being an addict."</p><p>"Instead of saying, 'He became an addict,' we wanted to focus more on what events in life make you go there," Questlove added, about the documentary.</p><div data-testid="prism-inline-image"><figure data-testid="prism-figure"><div data-testid="prism-ratio-frame"><picture data-testid="prism-picture"><source media="(max-width: 414px)" srcset="https://i.abcnewsfe.com/a/f5e9f4ed-7359-437a-833c-71bd2f6ff00a/sly-stone-mo_1749501360940_hpEmbed_3x2.jpg?w=375, https://i.abcnewsfe.com/a/f5e9f4ed-7359-437a-833c-71bd2f6ff00a/sly-stone-mo_1749501360940_hpEmbed_3x2.jpg?w=750 2x"><source media="(min-width: 415px)" srcset="https://i.abcnewsfe.com/a/f5e9f4ed-7359-437a-833c-71bd2f6ff00a/sly-stone-mo_1749501360940_hpEmbed_3x2.jpg?w=750, https://i.abcnewsfe.com/a/f5e9f4ed-7359-437a-833c-71bd2f6ff00a/sly-stone-mo_1749501360940_hpEmbed_3x2.jpg?w=1500 2x"><img alt="" data-testid="prism-image" draggable="false" loading="lazy" src="https://i.abcnewsfe.com/a/f5e9f4ed-7359-437a-833c-71bd2f6ff00a/sly-stone-mo_1749501360940_hpEmbed_3x2.jpg"></picture></div><figcaption><div data-testid="prism-caption"><p><span data-testid="prism-truncate"><span><span>Sylvester "Sly" Stewart and his bride Kathy Silva, right, are congratulated during their wedding ceremony at a rock concert by Sly and the Family Stone at New York's Madison Square Garden on June 6, 1974.</span></span></span></p><p><span>Richard Drew/AP, FILE</span></p></div></figcaption></figure></div><p>Sly took the stage for a live performance at the 2006 Grammys, his first in decades, and made occasional appearances in the ensuing years. Sly and the Family Stone was <a data-testid="prism-linkbase" href="https://rockhall.com/inductees/sly-and-family-stone/" target="_blank">inducted</a> into the Rock and Roll Hall of Fame in 1993.</p><p>"They're the greatest funk band that ever was," George Clinton of Parliament Funkadelic, another pioneering funk band at the time, said during the induction ceremony. "Sly is probably the single greatest writer that I can try to think of."</p><p>in addition to the recent documentary, a movie based on Sly Stone's life is also in the works, his family said.</p><p>"In a testament to his enduring creative spirit, Sly recently completed the screenplay for his life story, a project we are eager to share with the world in due course," they said in their statement.</p><p>"We extend our deepest gratitude for the outpouring of love and prayers during this difficult time," they added. "We wish peace and harmony to all who were touched by Sly's life and his iconic music."</p><p>Stone married his first wife, model Kathy Silva, on stage during a concert at Madison Square Garden in June 1974. Silva and Stone had a son, Sylvester Jr., in 1973, but later separated in 1976. He also has two daughters, Sylvyette, who goes by her middle name Phunne, born in 1976, and Novena Carmel, born in 1982.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[RFK Jr. ousts entire CDC vaccine advisory committee (264 pts)]]></title>
            <link>https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9</link>
            <guid>44229778</guid>
            <pubDate>Mon, 09 Jun 2025 21:35:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9">https://apnews.com/article/kennedy-cdc-acip-vaccines-3790c89f45b6314c5c7b686db0e3a8f9</a>, See on <a href="https://news.ycombinator.com/item?id=44229778">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                                        <p>Health Secretary Robert F. Kennedy Jr. on Monday removed every member of a scientific committee that advises the Centers for Disease Control and Prevention on how to use vaccines and pledged to replace them with his own picks.</p><p>Major physicians and public health groups criticized the move to oust all 17 members of the Advisory Committee on Immunization Practices.</p><p>Kennedy, who was one of the nation’s leading anti-vaccine activists before becoming the nation’s top health official, has not said who he would appoint to the panel, but said it would convene in just two weeks in Atlanta.</p><p>Although it’s typically not viewed as a partisan board, the Biden administration had installed the entire committee.</p><p>“Without removing the current members, the current Trump administration would not have been able to appoint a majority of new members until 2028,” Kennedy wrote in <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://www.wsj.com/opinion/rfk-jr-hhs-moves-to-restore-public-trust-in-vaccines-45495112" target="_blank" rel="noopener">a Wall Street Journal opinion piece</a></span>. “A clean sweep is needed to re-establish public confidence in vaccine science. ”</p>
    
<p>Kennedy said the committee members had too many conflicts of interest. Currently, committee members are required to declare any potential such conflicts, as well as business interests, that arise during their tenure. They also must disclose any possible conflicts at the start of each public meeting.</p>



<p>Dr. Tom Frieden, president and CEO of Resolve to Save Lives and former director of the Centers for Disease Control and Prevention, said Kennedy’s actions were based on false conflict-of-interest claims and set “a dangerous and unprecedented action that makes our families less safe” by potentially reducing vaccine access for millions of people.</p>
    
    
    
<p>“Make no mistake: Politicizing the ACIP as Secretary Kennedy is doing will undermine public trust under the guise of improving it,” he said in a statement. “We’ll look back at this as a grave mistake that sacrificed decades of scientific rigor, undermined public trust, and opened the door for fringe theories rather than facts.”</p>
    
<p>Dr. Georges Benjamin, executive director of the American Public Health Association, called Kennedy’s mass ouster “a coup.” </p><p>“It’s not how democracies work. It’s not good for the health of the nation,” Benjamin told The Associated Press. </p><p>Benjamin said the move raises real concerns about whether future committee members will be viewed as impartial. He added that Kennedy is going against what he told lawmakers and the public, and the public health association plans to watch Kennedy “like a hawk.”</p><p>“He is breaking a promise,” Benjamin said. “He said he wasn’t going to do this.”</p><p>Dr. Bruce A. Scott, president of the American Medical Association, called the committee a trusted source of science- and data-driven advice and said Kennedy’s move, coupled with declining vaccination rates across the country, will help drive an increase in vaccine-preventable diseases.</p><p>“Today’s action to remove the 17 sitting members of ACIP undermines that trust and upends a transparent process that has saved countless lives,” Scott said in a statement.</p><p>Republican Sen. Bill Cassidy of Louisiana, a doctor who had expressed reservations about Kennedy’s nomination but voted to install him as the nation’s health secretary nonetheless, said he had spoken with Kennedy moments after the announcement.</p>
    
<p>“Of course, now the fear is that the ACIP will be filled up with people who know nothing about vaccines except suspicion,” Cassidy said in a social media post. “I’ve just spoken with Secretary Kennedy, and I’ll continue to talk with him to ensure this is not the case.”</p><p>The committee had been in a state of flux since Kennedy took over. Its first meeting this year had been delayed when the U.S. Department of Health and Human Services <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/vaccines-cdc-rfk-trump-acip-74ad20e0a5430bfd6b48d35900c34d13">abruptly postponed</a></span> its February meeting. </p><p>During Kennedy’s confirmation, Cassidy <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/cassidy-kennedy-trump-health-secretary-e826bc40fddf90829f6438681c5d9275">had expressed concerns</a></span> about preserving the committee, saying he had sought assurances that Kennedy would keep the panel’s current vaccine recommendations. </p><p>Kennedy did not stick to that. He recently took the unusual step of <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/covid-vaccines-cdc-kennedy-fd6ab0c7303a4a1698b319885a02ef54">changing COVID-19 recommendations</a></span> without first consulting the advisers.</p>
    
<p>The webpage that featured the committee’s members was deleted Monday evening, shortly after Kennedy’s announcement.</p><p>___</p><p>Associated Press writers Zeke Miller and Devi Shastri contributed.</p><p>___</p><p>The Associated Press Health and Science Department receives support from the Howard Hughes Medical Institute’s Science and Educational Media Group and the Robert Wood Johnson Foundation. The AP is solely responsible for all content.</p>
                                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Xerox Alto, Smalltalk, and rewriting a running GUI (2017) (110 pts)]]></title>
            <link>https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html</link>
            <guid>44229694</guid>
            <pubDate>Mon, 09 Jun 2025 21:25:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html">https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html</a>, See on <a href="https://news.ycombinator.com/item?id=44229694">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-2145038559598285372" itemprop="description articleBody">


<p>
Be sure to read the comment from Alan Kay at the bottom of the article!
</p>

<p>We succeeded in running the Smalltalk-76 language on our vintage Xerox Alto;
this blog post gives a quick overview of the Smalltalk environment.
One unusual feature of Smalltalk is you can view and modify the system's code while the system is running. I demonstrate this by modifying the scrollbar code on a running system.</p>
<p>Smalltalk is a highly-influential programming language and environment that introduced the term "object-oriented programming" and was the ancestor of modern object-oriented languages.<span id="fnref:developers"><a href="#fn:developers" rel="footnote">1</a></span>
The Alto's Smalltalk environment is also notable for its creation of the graphical user interface with the desktop metaphor, icons, scrollbars, overlapping windows, popup menus and so forth. When Steve Jobs famously visited Xerox PARC, the Smalltalk GUI inspired him on how the Lisa and Macintosh should work.<span id="fnref:jobs"><a href="#fn:jobs" rel="footnote">2</a></span></p>
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjiaiieOZ5hcbD6b5hFxFalQq7wzUlt3L2mUFVacMH7-rW38iX1QMyH5Y0pPyX7g6Etjpe6kPTdGqP2rL30OzSZiq3IHrlDA6gXxTJTlugso0Tz0vjhVhFKZ7KezPEvYuup-8PjCraXVv2E/w9999/alto-running-smalltalk.jpg"><img alt="Our Xerox Alto running Smalltalk-76." height="396" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjiaiieOZ5hcbD6b5hFxFalQq7wzUlt3L2mUFVacMH7-rW38iX1QMyH5Y0pPyX7g6Etjpe6kPTdGqP2rL30OzSZiq3IHrlDA6gXxTJTlugso0Tz0vjhVhFKZ7KezPEvYuup-8PjCraXVv2E/w300/alto-running-smalltalk.jpg" title="Our Xerox Alto running Smalltalk-76." width="300"></a></p><p>Our Xerox Alto running Smalltalk-76.</p>
<p>The Alto was a revolutionary computer designed at Xerox PARC in 1973
to investigate personal computing. It introduced the GUI, high-resolution bitmapped displays, WYSIWYG editors, Ethernet, the optical mouse and laser printers to the world, among other things.
I've been restoring an Alto from YCombinator, along with 
Marc Verdiell,
<a href="https://rescue1130.blogspot.com/">Carl Claunch</a>
My full set of Alto posts is <a href="https://www.righto.com/search/label/alto">here</a> and Marc's extensive videos of the restoration are <a href="https://www.youtube.com/user/mverdiell/videos">here</a>.</p>
<h2>The desktop</h2>
<p>Smalltalk introduced the desktop metaphor used in modern computing.<span id="fnref:moad"><a href="#fn:moad" rel="footnote">3</a></span>
It included overlapping windows<span id="fnref:perf"><a href="#fn:perf" rel="footnote">4</a></span>, multiple desktops and pop-up menus.
These windows could be moved and resized with the mouse.
(The biggest missing desktop feature was desktop icons, which Xerox later introduced in the Star computer.)
To understand how revolutionary this was, consider that
the Apple 1 microcomputer came out in 1976,
displaying 24 lines of 40 uppercase characters. 
The mainframe and minicomputer worlds were focused around punched cards, line printers, Teletypes, and dumb CRT terminals.
Alan Kay changed all this with his vision of a computer desktop with windows that could be directly manipulated, windows containing fancy typography or images.</p>
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhRl2yzWbUSCV9oBXcSczsqhHOAOg2EHludOFMaJK-PJ6LnbjtmjEMQJCaR7tclymMSQ4JaPqLuxXcYtsGYJ7HDgQX-x34QqwnHUzORJ4yKn5t1t4c3jOvphsphEkc_DgBNY8yViZx4xqK1/w9999/smalltalk-desktop.jpg"><img alt="Smalltalk introduced the desktop environment, with overlapping windows for multiple applications." height="664" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhRl2yzWbUSCV9oBXcSczsqhHOAOg2EHludOFMaJK-PJ6LnbjtmjEMQJCaR7tclymMSQ4JaPqLuxXcYtsGYJ7HDgQX-x34QqwnHUzORJ4yKn5t1t4c3jOvphsphEkc_DgBNY8yViZx4xqK1/w606/smalltalk-desktop.jpg" title="Smalltalk introduced the desktop environment, with overlapping windows for multiple applications." width="606"></a></p><p>Smalltalk introduced the desktop environment, with overlapping windows for multiple applications.</p>
<p>The screenshot above shows the Smalltalk-76 desktop. At the bottom, a drawing program displays the Smalltalk elf image.<span id="fnref:elf"><a href="#fn:elf" rel="footnote">5</a></span>
Icons allow selection of drawing mode, line style, brush color (grayscale), and so forth.
The Smalltalk class browser is in the middle.
In the upper right is a file viewer. Finally, in the upper left is a window for entering Smalltalk statements, essentially a shell or <a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">REPL</a>.</p>
<h2>Dynamically changing the running system</h2>
<p>One of the most interesting things about the Smalltalk environment is that all the Smalltalk code can be examined and modified, even while the system is running.
The class browser below lets you select (using the mouse) a functional area such as "Basic Data Structures" or "Files". You can then select a class in that area,
functionality within the class, and then a particular method. The browser then displays the code running on the system.
All the Smalltalk code can be examined in this way, making the system's implementation very transparent.</p>
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhDOjADktxBgn-v3NiQr3DhMrew1n3u4iJGX5Wn-1Y3HTyjfNQ5Gvwdoh-WXMgP9xpRZrB0HdT8BGhUVmZJnhsLa3ttbFv9GroPHnBAjGce1Y6eZkRibUsVShCtkMsETWzp0nC7Z5dsvxSv/w9999/scrollbar1.jpg"><img alt="Using the Smalltalk class browser, we can view the code to show a ScrollBar." height="279" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhDOjADktxBgn-v3NiQr3DhMrew1n3u4iJGX5Wn-1Y3HTyjfNQ5Gvwdoh-WXMgP9xpRZrB0HdT8BGhUVmZJnhsLa3ttbFv9GroPHnBAjGce1Y6eZkRibUsVShCtkMsETWzp0nC7Z5dsvxSv/w600/scrollbar1.jpg" title="Using the Smalltalk class browser, we can view the code to show a ScrollBar." width="600"></a></p><p>Using the Smalltalk class browser, we can view the code to show a ScrollBar.</p>
<p>In the screenshot above, I use the class browser to access "Panes and Menus", then "ScrollBar", then "Image" and finally "show". This displays the code for the scrollbar's "show" method, which draws the scrollbar.
This code draws a black rectangle, and then insets a white rectangle, resulting in a black-bordered rectangle for the scrollbar.
(Note the unusual dotted-circle character ☉ that Smalltalk-76 uses to create a <code>Point</code> from two <code>Number</code>s.)</p>
<p>The unusual feature of the class browser is that you can use it to change the system's code, while the system is running, and everything will pick up the new code.
For example, I can change how scrollbars are drawn.
In the screenshot below, I changed <code>clear: white</code> to <code>clear: black</code>.
Pressing the middle mouse button pops up a menu, and I can select "compile".
This causes the scrollbar code to be recompiled—while the system is still running.
(Note the modern appearance of the contextual pop-up menu.)</p>
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhzPMVBl4uZvz2nBSUfaH96ddsPOyZBLEo_AcAIY_NhsQrKAXXDIE1JEQxytC0xU4-EZzFongjdP7nDh4-vrZ3eRb74Neshn_uXLn07QyLcH0reZUC1npzBldS3M9t6uvM-p0qBVvQJjD2p/w9999/scrollbar2.jpg"><img alt="After changing the code, I selected &quot;compile&quot; from the pop-up menu." height="179" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhzPMVBl4uZvz2nBSUfaH96ddsPOyZBLEo_AcAIY_NhsQrKAXXDIE1JEQxytC0xU4-EZzFongjdP7nDh4-vrZ3eRb74Neshn_uXLn07QyLcH0reZUC1npzBldS3M9t6uvM-p0qBVvQJjD2p/w600/scrollbar2.jpg" title="After changing the code, I selected &quot;compile&quot; from the pop-up menu." width="600"></a></p><p>After changing the code, I selected "compile" from the pop-up menu.</p>
<p>The result of this change is that all scrollbars (for existing or new windows) will now have a black background, as you can see below.
The key point is this change was made while the system was running; there is no need to restart anything.
Even existing windows get the new scrollbars. </p>
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjaAiKZjCG2swjZQWzPTA5N-9jkwwV56UlMyq3f54CzGogHXcMDs9d9xU3dDGfW5mmo8obCTm4rXV3f8O0esUirOisf3nQDVPS7PMEGBtB2EIrE4J-ZzCHfBdsxZ7m_qJLneAtTb_hZUQKT/w9999/scrollbar3.jpg"><img alt="Scrollbars now appear with a black background, even for existing windows." height="322" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjaAiKZjCG2swjZQWzPTA5N-9jkwwV56UlMyq3f54CzGogHXcMDs9d9xU3dDGfW5mmo8obCTm4rXV3f8O0esUirOisf3nQDVPS7PMEGBtB2EIrE4J-ZzCHfBdsxZ7m_qJLneAtTb_hZUQKT/w600/scrollbar3.jpg" title="Scrollbars now appear with a black background, even for existing windows." width="600"></a></p><p>Scrollbars now appear with a black background, even for existing windows.</p>
<p>Although this scrollbar change was rather trivial, major changes can be made to the running Smalltalk system.
One well-known story of changing Smalltalk's behavior on the fly is from Steve Jobs' visit to Xerox PARC. Steve Jobs didn't like the way the window scrolled line-by-line, so Smalltalk implementer <a href="https://en.wikipedia.org/wiki/Dan_Ingalls">Dan Ingalls</a> rewrote the scrolling code in a minute and implemented smooth scrolling while the system was running, much to Jobs' surprise.<span id="fnref:scrolling"><a href="#fn:scrolling" rel="footnote">6</a></span></p>
<h2>A closer look at some Smalltalk code</h2>
<p>In Smalltalk, even most of the math functions are written in Smalltalk.
For instance, suppose we wonder how square roots are computed.
We can look at the square root function in the class browser by going to "Numbers", "Float", "Math functions", "sqrt".
This brings up the seven lines of code below for the square root function.
We can see that the code uses five iterations of <a href="https://en.wikipedia.org/wiki/Newton%27s_method#Square_root_of_a_number">Newton's method</a> to approximate the square root.</p>
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbl8qMpL8AYmoAaNQN5OUfbj3XvMxqSDrDIy0oUAoZDMqeUo3YjSI_Aihs0P9hwLPoGTwa9UdS868OPepsWNF4VYsHAFJKtVTYgKJ8wKk5aU2BhLOpLm-0jYJL6lqdcb5Ao1IC_n-Uj75Q/w9999/sqrt.jpg"><img alt="Looking at the square root code in the Smalltalk-76 class browser." height="91" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbl8qMpL8AYmoAaNQN5OUfbj3XvMxqSDrDIy0oUAoZDMqeUo3YjSI_Aihs0P9hwLPoGTwa9UdS868OPepsWNF4VYsHAFJKtVTYgKJ8wKk5aU2BhLOpLm-0jYJL6lqdcb5Ao1IC_n-Uj75Q/w508/sqrt.jpg" title="Looking at the square root code in the Smalltalk-76 class browser." width="508"></a></p><p>Looking at the square root code in the Smalltalk-76 class browser.</p>
<p>If you're used to Java or C++, this object-oriented code may look strange, especially since Smalltalk uses some strange characters.
The first line of code above defines local variables <code>guess</code> and <code>i</code>.
In the next line, the right arrow ⇒ implements an "if" statement.
If the number receiving the square root message (<code>self</code>) is 0, then 0 is returned (via the up arrow ⇑ return symbol) and if it is negative an exception is raised.
The square brackets define blocks, similar to curly braces in C.
The <code>instfield</code> line is a bit tricky; it pulls the exponent out of the floating point number and divides it by 2, yielding a reasonable starting point for the square root.
Finally, the <code>for</code> loop applies Newton's method 5 times and returns the result. Note the unusual double colon symbol ⦂; this delays evaluation of the argument, so it can be evaluated multiple times in the loop.<span id="fnref:moreinfo"><a href="#fn:moreinfo" rel="footnote">7</a></span></p>
<p>You might think that executing Smalltalk code for math operations would be very slow, and that is the case.
The good news is that basic operations such as addition are implemented with short cuts, rather than full message passing. But other operations are slow; the team described performance as between "majestic" and "glacial".
Xerox PARC ended up creating the Dorado, a much faster minicomputer than the Alto, to improve performance.</p>
<h2>Conclusion</h2>
<p>Although Smalltalk wasn't the first object-oriented programming language, Smalltalk introduced the term <i>object-oriented programming</i> and was very influential in later object-oriented programming languages.
Most modern object-oriented languages, from Objective-C and Go to Java and Python, show the influence of Smalltalk.
Smalltalk was also responsible for design patterns. The famous "Gang of Four" <a href="http://amzn.to/2xHGTzL">Design Patterns book</a> 
describes design patterns in Smalltalk and C++.<span id="fnref:java"><a href="#fn:java" rel="footnote">8</a></span></p>
<p>Smalltalk systems are still in use.
Smalltalk-76 (and the earlier 71 and 72 versions) were intended for research, but
Xerox released the Smalltalk-80 version; it was licensed by Xerox to HP, Apple, Tektronix and DEC for royalty-free distribution.
Smalltalk-80 in turn led to modern Smalltalk systems such as
<a href="http://pharo.org/">Pharo</a>, <a href="http://smalltalk.gnu.org/">GNU Smalltalk</a> and <a href="http://squeak.org/">Squeak</a> (which led to the <a href="https://scratch.mit.edu/">Scratch</a> language for children).</p>
<p>If you want to try Alto Smalltalk out for yourself, you can use the <a href="https://github.com/livingcomputermuseum/ContrAlto">Contralto emulator</a>, built by the Living Computers Museum. I explain how to run it <a href="https://www.righto.com/2016/10/simulating-xerox-alto-with-contralto.html">here</a>.
(Most of the screenshots above are from Contralto rather than the live Alto, for clearer images.)
Be warned, however, that Smalltalk on the Alto (live or emulated) is painfully slow.</p>
<p>Follow me on Twitter: <a href="https://twitter.com/kenshirriff">@kenshirriff</a> to find out about my latest blog posts. I also have an <a href="https://www.righto.com/feeds/posts/default">RSS feed</a>.</p>
<h2>Notes and references</h2>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kennedy guts CDC's vaccine panel of independent experts (235 pts)]]></title>
            <link>https://www.nbcnews.com/health/health-news/kennedy-guts-acip-cdc-vaccine-panel-rcna211935</link>
            <guid>44229533</guid>
            <pubDate>Mon, 09 Jun 2025 21:11:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nbcnews.com/health/health-news/kennedy-guts-acip-cdc-vaccine-panel-rcna211935">https://www.nbcnews.com/health/health-news/kennedy-guts-acip-cdc-vaccine-panel-rcna211935</a>, See on <a href="https://news.ycombinator.com/item?id=44229533">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p id="anchor-94dad4">The 17 members of the Centers for Disease Control and Prevention’s independent vaccine advisory committee are being removed from their posts, Health and Human Services Secretary Robert F. Kennedy Jr. said Monday afternoon.</p><p id="anchor-0b6167">Kennedy <a href="https://www.wsj.com/opinion/rfk-jr-hhs-moves-to-restore-public-trust-in-vaccines-45495112?mod=opinion_lead_pos5" target="_blank">announced the change</a> in an editorial in The Wall Street Journal, claiming that the “committee has been plagued with persistent conflicts of interest and has become little more than a rubber stamp for any vaccine.”</p><p id="anchor-52d895">Such a claim is "deeply insulting to the many scientists who contribute countless hours to the process," said Dr. Sean O’Leary, an infectious disease expert with the American Academy of Pediatrics. "We are, in fact, a model for the rest of the world." </p><p id="anchor-45e6b9">"This is manufactured chaos," O'Leary said. </p><p id="anchor-c9666c">The Advisory Committee on Immunization Practices, known more commonly as ACIP, consists of medical and public health experts — including pediatricians, epidemiologists and geriatricians — who make recommendations to the CDC about who should get certain vaccines, including the schedule for childhood vaccinations. Several times a year the committee holds public meetings where data is presented and reviewed. </p><p id="anchor-81ca1b">The committee reports the data to the CDC director, who then reviews the recommendations and can choose whether to adopt them. The CDC director isn't required to do so, but usually goes along with the ACIP recommendations.  </p><p id="anchor-6dff9b">Members of ACIP, who undergo an extensive vetting process before being appointed, are required to disclose conflicts of interest and recuse themselves from voting on vaccines for which a conflict exists. The CDC <a href="https://www.cdc.gov/acip/disclosures/by-member.html" target="_blank">released a database</a> in March of some members’ previous work on clinical trials or vaccine research funded by drug companies, but much of the information was already public. Many public health experts argue that past associations with the pharmaceutical industry is relevant and valuable expertise for ACIP members, as long as conflicts are disclosed.</p><p id="anchor-fe8663">“To claim that you are doing this to restore faith in CDC is a special form of gaslighting,” said a CDC employee, referring to Kennedy's comments. The employee did not want to speak on the record for fear of retribution.</p><p id="anchor-0f0ca7">Dismantling the committee is among Kennedy’s most aggressive actions so far to reshape U.S. vaccine policy.<strong> </strong>Kennedy rose to prominence as a high-profile figure in the anti-vaccine movement, and has made a variety of specious and debunked claims about vaccine harms. Since aligning himself with President Donald Trump and becoming head of the U.S. Department of Health and Human Services, Kennedy has overseen a series of steps that have undercut vaccine access, including the pullback of funds for <a href="https://www.nbcnews.com/health/health-news/rfk-jr-vaccines-children-weakening-system-hhs-budget-cuts-rcna199188" target="_blank">vaccine distribution to children of lower income families</a>.</p><p id="anchor-414673">Kennedy’s decision to fire ACIP members “should erase any remaining doubt that he intends to impose his personal anti-vaccine agenda on the American people,” Dr. Richard Besser, the former acting director of the CDC and current president of the nonprofit Robert Wood Johnson Foundation, said in a statement. He added that Monday’s action will “make it far more difficult for pediatricians and other providers to care for their patients,” since they rely on ACIP’s guidance to make their own vaccine recommendations.</p><p id="anchor-6e1216">In his editorial, Kennedy called for a “clean sweep” of the ACIP, but did not say who he planned to appoint to the now-vacant positions or provide a timeline for filling the roles. HHS said <a href="https://www.hhs.gov/press-room/hhs-restore-public-trust-vaccines-acip.html" target="_blank">in a press release</a> that ACIP will convene its next meeting from June 25 to June 27.</p><p id="anchor-af5b9b">“What I think Kennedy is doing here is attempting to replace career civil servants with scientific expertise with those who may be more amenable to his and the Trump administration’s agenda,” said Matt Motta, an assistant professor of health law and policy at Boston University’s School of Public Health.</p><p id="anchor-d84794">Motta said firing ACIP members is “an unequivocally clear attempt to break the promise” that Kennedy made during his confirmation hearings to not limit vaccine access. Sen. Bill Cassidy, R-La., <a href="https://www.cassidy.senate.gov/newsroom/press-releases/cassidy-delivers-floor-speech-in-support-of-rfk-jr-to-be-hhs-secretary/" target="_blank">said in February</a> that Kennedy had promised to maintain the ACIP “without changes.”</p><p id="anchor-092c25">Kennedy's shake up of the vaccine committee comes as the U.S. is experiencing a rise in vaccine-preventable outbreaks, <a href="https://www.nbcnews.com/data-graphics/track-measles-outbreak-cases-us-map-rcna198932" target="_blank">including measles</a> and <a href="https://apnews.com/article/whooping-cough-pertussis-tdap-vaccination-outbreak-eb8f4776fdd0796ad789aac1ccdc9b67" target="_blank">whooping cough</a>. Since last fall, <a href="https://www.cdc.gov/fluview/surveillance/2025-week-22.html#cdc_data_surveillance_section_6-mortality-surveillance" target="_blank">241 mostly unvaccinated children have died of flu-related illnesses</a>, the highest number for a non-pandemic season since 2004.</p><p id="anchor-10c7a5">Members of the ACIP are appointed to four-year terms, and many were slated to serve on the committee for another three years. Kennedy wrote Monday that “without removing the current members, the current Trump administration would not have been able to appoint a majority of new members until 2028.”</p><p id="anchor-68b2e5">The move further degrades the federal government as a trusted source on vaccines and could force consumers, doctors and insurers to look elsewhere for expert guidance on vaccines, according to one ACIP member.</p><p id="anchor-898c4d">“The clear implication is that CDC will no longer be credible in the space of vaccination,” said the ACIP member, who spoke on the condition of anonymity because their employer does not allow them to speak to the media. “Insurers and other funding agencies will have to turn to the professional associations for recommendations about vaccines.” </p></div><div><div data-activity-map="expanded-byline-article-bottom"><div data-testid="byline-thumbnail"><a href="https://www.nbcnews.com/author/aria-bendix-ncpn1294089" tabindex="-1"><picture data-testid="picture"><source media="(min-width: 320px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_avif,q_auto:eco,dpr_2/newscms/2024_38/3662657/240917-aria-bendix.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2024_38/3662657/240917-aria-bendix.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2024_38/3662657/240917-aria-bendix.jpg" alt="" height="48" width="48"></picture></a></div><p><span data-testid="byline-name"><a href="https://www.nbcnews.com/author/aria-bendix-ncpn1294089">Aria Bendix</a></span><span><a href="https://x.com/ariabendix" target="_blank" rel="noopener noreferrer"><span></span></a><a href="mailto:aria.bendix@nbcuni.com" target="_blank" rel="noopener noreferrer"><span></span></a></span></p><p>Aria Bendix is the breaking health reporter for NBC News Digital.</p></div><div data-activity-map="expanded-byline-article-bottom"><div data-testid="byline-thumbnail"><a href="https://www.nbcnews.com/author/brandy-zadrozny-ncpn858391" tabindex="-1"><picture data-testid="picture"><source media="(min-width: 320px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_avif,q_auto:eco,dpr_2/newscms/2020_09/3242336/brandy-zadrozny-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_09/3242336/brandy-zadrozny-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_09/3242336/brandy-zadrozny-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p><span data-testid="byline-name"><a href="https://www.nbcnews.com/author/brandy-zadrozny-ncpn858391">Brandy Zadrozny</a></span><span><a href="https://x.com/brandyzadrozny" target="_blank" rel="noopener noreferrer"><span></span></a><a href="mailto:brandy.zadrozny@nbcuni.com" target="_blank" rel="noopener noreferrer"><span></span></a></span></p><p>Brandy Zadrozny is a senior reporter for NBC News. She covers misinformation, extremism and the internet.</p></div><div data-activity-map="expanded-byline-article-bottom"><div data-testid="byline-thumbnail"><a href="https://www.nbcnews.com/author/erika-edwards-ncpn56261" tabindex="-1"><picture data-testid="picture"><source media="(min-width: 320px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_avif,q_auto:eco,dpr_2/newscms/2019_28/2925941/190612-erika-edwards-byline-30101.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2019_28/2925941/190612-erika-edwards-byline-30101.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2019_28/2925941/190612-erika-edwards-byline-30101.jpg" alt="" height="48" width="48"></picture></a></div><p><span data-testid="byline-name"><a href="https://www.nbcnews.com/author/erika-edwards-ncpn56261">Erika Edwards</a></span><span><a href="https://x.com/erikaedwardsNBC" target="_blank" rel="noopener noreferrer"><span></span></a><a href="mailto:erika.edwards@nbcuni.com" target="_blank" rel="noopener noreferrer"><span></span></a></span></p><p>Erika Edwards is a health and medical news writer and reporter for NBC News and "TODAY."</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Containerization is a Swift package for running Linux containers on macOS (692 pts)]]></title>
            <link>https://github.com/apple/containerization</link>
            <guid>44229348</guid>
            <pubDate>Mon, 09 Jun 2025 20:53:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/apple/containerization">https://github.com/apple/containerization</a>, See on <a href="https://news.ycombinator.com/item?id=44229348">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Containerization</h2><a id="user-content-containerization" aria-label="Permalink: Containerization" href="#containerization"></a></p>
<p dir="auto">The Containerization package allows applications to use Linux containers.
Containerization is written in <a href="https://www.swift.org/" rel="nofollow">Swift</a> and uses <a href="https://developer.apple.com/documentation/virtualization" rel="nofollow">Virtualization.framework</a> on Apple silicon.</p>
<p dir="auto">Containerization provides APIs to:</p>
<ul dir="auto">
<li>Manage OCI images.</li>
<li>Interact with remote registries.</li>
<li>Create and populate ext4 file systems.</li>
<li>Interact with the Netlink socket family.</li>
<li>Create an optimized Linux kernel for fast boot times.</li>
<li>Spawn lightweight virtual machines.</li>
<li>Manage the runtime environment of virtual machines.</li>
<li>Spawn and interact with containerized processes.</li>
<li>Use Rosetta 2 for executing x86_64 processes on Apple silicon.</li>
</ul>
<p dir="auto">Please view the <a href="https://github.com/apple/containerization/blob/main">API documentation</a> for information on the Swift packages that Containerization provides.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Design</h2><a id="user-content-design" aria-label="Permalink: Design" href="#design"></a></p>
<p dir="auto">Containerization executes each Linux container inside of its own lightweight virtual machine. Clients can create dedicated IP addresses for every container to remove the need for individual port forwarding. Containers achieve sub-second start times using an optimized <a href="https://github.com/apple/containerization/blob/main/kernel">Linux kernel configuration</a> and a minimal root filesystem with a lightweight init system.</p>
<p dir="auto"><a href="https://github.com/apple/containerization/blob/main/vminitd">vminitd</a> is a small init system, which is a subproject within Containerization.
<code>vminitd</code> is spawned as the initial process inside of the virtual machine and provides a GRPC API over vsock.
The API allows the runtime environment to be configured and containerized processes to be launched.
<code>vminitd</code> provides I/O, signals, and events to the calling process when a process is ran.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Requirements</h2><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<p dir="auto">You need an Apple silicon Mac to build and run Containerization.</p>
<p dir="auto">To build the Containerization package, your system needs either:</p>
<ul dir="auto">
<li>macOS 15 or newer and Xcode 26 Beta</li>
<li>macOS 26 Beta 1 or newer</li>
</ul>
<p dir="auto">Applications built using the package will run on macOS 15 or later, but the following features are not available on macOS 15:</p>
<ul dir="auto">
<li>Non-isolated container networking - with macOS 15, containers on the same vmnet network cannot communicate with each other</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example Usage</h2><a id="user-content-example-usage" aria-label="Permalink: Example Usage" href="#example-usage"></a></p>
<p dir="auto">For examples of how to use some of the libraries surface, the cctl executable is a good start. This tools primary job is as a playground to trial out the API. It contains commands that exercise some of the core functionality of the various products, such as:</p>
<ol dir="auto">
<li><a href="https://github.com/apple/containerization/blob/main/Sources/cctl/ImageCommand.swift">Manipulating OCI images</a></li>
<li><a href="https://github.com/apple/containerization/blob/main/Sources/cctl/LoginCommand.swift">Logging in to container registries</a></li>
<li><a href="https://github.com/apple/containerization/blob/main/Sources/cctl/RootfsCommand.swift">Creating root filesystem blocks</a></li>
<li><a href="https://github.com/apple/containerization/blob/main/Sources/cctl/RunCommand.swift">Running simple Linux containers</a></li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Linux kernel</h2><a id="user-content-linux-kernel" aria-label="Permalink: Linux kernel" href="#linux-kernel"></a></p>
<p dir="auto">A Linux kernel is required for spawning lightweight virtual machines on macOS.
Containerization provides an optimized kernel configuration located in the <a href="https://github.com/apple/containerization/blob/main/kernel">kernel</a> directory.</p>
<p dir="auto">This directory includes a containerized build environment to easily compile a kernel for use with Containerization.</p>
<p dir="auto">The kernel configuration is a minimal set of features to support fast start times and a light weight environment.</p>
<p dir="auto">While this configuration will work for the majority of workloads we understand that some will need extra features.
To solve this Containerization provides first class APIs to use different kernel configurations and versions on a per container basis.
This enables containers to be developed and validated across different kernel versions.</p>
<p dir="auto">See the <a href="https://github.com/apple/containerization/blob/main/kernel/README.md">README</a> in the kernel directory for instruction on how to compile the optimized kernel.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Pre-build Kernel</h3><a id="user-content-pre-build-kernel" aria-label="Permalink: Pre-build Kernel" href="#pre-build-kernel"></a></p>
<p dir="auto">If you wish to consume a pre-built kernel it must have <code>VIRTIO</code> drivers compiled into the kernel, not as modules.</p>
<p dir="auto">The <a href="https://github.com/kata-containers/kata-containers">Kata Containers</a> project provides an optimized kernel for containers with all the required configuration options enabled provided on the <a href="https://github.com/kata-containers/kata-containers/releases/">releases</a> page.</p>
<p dir="auto">A kernel image named <code>vmlinux.container</code> can be found in the <code>/opt/kata/share/kata-containers/</code> directory of the release artifacts.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Prepare to build package</h2><a id="user-content-prepare-to-build-package" aria-label="Permalink: Prepare to build package" href="#prepare-to-build-package"></a></p>
<p dir="auto">Install Swiftly, <a href="https://www.swift.org/" rel="nofollow">Swift</a>, and <a href="https://www.swift.org/documentation/articles/static-linux-getting-started.html" rel="nofollow">Static Linux SDK</a>:</p>

<p dir="auto">If you use a custom terminal application, you may need to move this command from <code>.zprofile</code> to <code>.zshrc</code> (replace <code>&lt;USERNAME&gt;</code>):</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Added by swiftly
. &quot;/Users/<USERNAME>/.swiftly/env.sh&quot;"><pre><span><span>#</span> Added by swiftly</span>
<span>.</span> <span><span>"</span>/Users/&lt;USERNAME&gt;/.swiftly/env.sh<span>"</span></span></pre></div>
<p dir="auto">Restart the terminal application. Ensure this command returns <code>/Users/&lt;USERNAME&gt;/.swiftly/bin/swift</code> (replace <code>&lt;USERNAME&gt;</code>):</p>

<p dir="auto">If you've installed or used a Static Linux SDK previously, you may need to remove older SDK versions from the system (replace <code>&lt;SDK-ID&gt;</code>):</p>
<div dir="auto" data-snippet-clipboard-copy-content="swift sdk list
swift sdk remove <SDK-ID>"><pre>swift sdk list
swift sdk remove <span>&lt;</span>SDK-ID<span>&gt;</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Build the package</h2><a id="user-content-build-the-package" aria-label="Permalink: Build the package" href="#build-the-package"></a></p>
<p dir="auto">Build Containerization from sources:</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Test the package</h2><a id="user-content-test-the-package" aria-label="Permalink: Test the package" href="#test-the-package"></a></p>
<p dir="auto">After building, run basic and integration tests:</p>

<p dir="auto">A kernel is required to run integration tests.
If you do not have a kernel locally for use a default kernel can be fetched using the <code>make fetch-default-kernel</code> target.</p>
<p dir="auto">Fetching the default kernel only needs to happen after an initial build or after a <code>make clean</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="make fetch-default-kernel
make all test integration"><pre>make fetch-default-kernel
make all <span>test</span> integration</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Protobufs</h2><a id="user-content-protobufs" aria-label="Permalink: Protobufs" href="#protobufs"></a></p>
<p dir="auto">Containerization depends on specific versions of <code>grpc-swift</code> and <code>swift-protobuf</code>. You can install them and re-generate RPC interfaces with:</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Documentation</h2><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto">Generate the API documentation for local viewing with:</p>
<div dir="auto" data-snippet-clipboard-copy-content="make docs
make serve-docs"><pre>make docs
make serve-docs</pre></div>
<p dir="auto">Preview the documentation by running in another terminal:</p>
<div dir="auto" data-snippet-clipboard-copy-content="open http://localhost:8000/documentation/"><pre>open http://localhost:8000/documentation/</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Contributions to Containerization are welcomed and encouraged. Please see <a href="https://github.com/apple/containerization/blob/main/CONTRIBUTING.md">CONTRIBUTING.md</a> for more information.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Project Status</h2><a id="user-content-project-status" aria-label="Permalink: Project Status" href="#project-status"></a></p>
<p dir="auto">Version 0.1.0 is the first official release of Containerization. Earlier versions have no source stability guarantees.</p>
<p dir="auto">Because the Containerization library is under active development, source stability is only guaranteed within minor versions (e.g. between 0.1.1 and 0.1.2). If you don't want potentially source-breaking package updates, you can specify your package dependency using .upToNextMinorVersion(from: "0.1.0") instead.</p>
<p dir="auto">Future minor versions of the package may introduce changes to these rules as needed.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Container: Apple's Linux-Container Runtime (275 pts)]]></title>
            <link>https://github.com/apple/container</link>
            <guid>44229239</guid>
            <pubDate>Mon, 09 Jun 2025 20:42:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/apple/container">https://github.com/apple/container</a>, See on <a href="https://news.ycombinator.com/item?id=44229239">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto"><code>container</code></h2><a id="user-content-container" aria-label="Permalink: container" href="#container"></a></p>
<p dir="auto"><code>container</code> is a tool that you can use to create and run Linux containers as lightweight virtual machines on your Mac. It's written in Swift, and optimized for Apple silicon.</p>
<p dir="auto">The tool consumes and produces OCI-compliant container images, so you can pull and run images from any standard container registry. You can push images that you build to those registries as well, and run the images in any other OCI-compliant application.</p>
<p dir="auto"><code>container</code> uses the <a href="https://github.com/apple/containerization">Containerization</a> Swift package for low level container, image, and process management.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apple/container/blob/main/docs/assets/landing-movie.gif"><img src="https://github.com/apple/container/raw/main/docs/assets/landing-movie.gif" alt="introductory movie showing some basic commands" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Get started</h2><a id="user-content-get-started" aria-label="Permalink: Get started" href="#get-started"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Requirements</h3><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<p dir="auto">You need an Apple silicon Mac to run <code>container</code>. To build it, see the <a href="https://github.com/apple/container/blob/main/BUILDING.md">BUILDING</a> document.</p>
<p dir="auto"><code>container</code> relies on the new features and enhancements present in the macOS 26 Beta 1. You can run the tool on macOS 15, but the <code>container</code> maintainers typically will not address issues discovered on macOS 15 that cannot be reproduced on the macOS 26 Beta 1.</p>
<p dir="auto">There are <a href="https://github.com/apple/container/blob/main/docs/technical-overview.md#macos-15-limitations">significant networking limitations</a> that impact the usability of <code>container</code> on macOS 15.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Install or upgrade</h3><a id="user-content-install-or-upgrade" aria-label="Permalink: Install or upgrade" href="#install-or-upgrade"></a></p>
<p dir="auto">If you're upgrading, first uninstall your existing <code>container</code> while preserving your user data:</p>
<div dir="auto" data-snippet-clipboard-copy-content="uninstall-container.sh -k"><pre>uninstall-container.sh -k</pre></div>
<p dir="auto">Download the latest signed installer package for <code>container</code> from the <a href="https://github.com/apple/container/releases">GitHub release page</a>.</p>
<p dir="auto">To install the tool, double click the package file and follow the instructions. Enter your administrator password when prompted, to give the installer permission to place the installed files under <code>/usr/local</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Uninstall</h3><a id="user-content-uninstall" aria-label="Permalink: Uninstall" href="#uninstall"></a></p>
<p dir="auto">Use the <code>uninstall-container.sh</code> script to remove <code>container</code> from your system. To remove your user data along with the tool, run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="uninstall-container.sh -d"><pre>uninstall-container.sh -d</pre></div>
<p dir="auto">To retain your user data so that it is available should you reinstall later, run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="uninstall-container.sh -k"><pre>uninstall-container.sh -k</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Next steps</h2><a id="user-content-next-steps" aria-label="Permalink: Next steps" href="#next-steps"></a></p>
<ul dir="auto">
<li>Take <a href="https://github.com/apple/container/blob/main/docs/tutorial.md">a guided tour of <code>container</code></a> by building, running, and publishing a simple web server image.</li>
<li>Learn how to <a href="https://github.com/apple/container/blob/main/docs/how-to.md">use various <code>container</code> features</a>.</li>
<li>Read a brief description and <a href="https://github.com/apple/container/blob/main/docs/technical-overview.md">technical overview</a> of <code>container</code>.</li>
<li>View the project <a href="https://apple.github.io/container/documentation/" rel="nofollow">API documentation</a>.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Contributions to <code>container</code> are welcomed and encouraged. Please see our <a href="https://github.com/apple/containerization/blob/main/CONTRIBUTING.md">main contributing guide</a> for more information.</p>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>