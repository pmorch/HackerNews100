<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 23 Feb 2025 14:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Half-Life (169 pts)]]></title>
            <link>https://www.filfre.net/2024/12/half-life/</link>
            <guid>43147698</guid>
            <pubDate>Sun, 23 Feb 2025 08:18:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.filfre.net/2024/12/half-life/">https://www.filfre.net/2024/12/half-life/</a>, See on <a href="https://news.ycombinator.com/item?id=43147698">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
														<blockquote><p><a href="https://www.filfre.net/2024/11/__trashed/4597980-half-life-windows-front-cover/" rel="attachment wp-att-6184"><img fetchpriority="high" decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/4597980-half-life-windows-front-cover-248x300.jpg" alt="" width="372" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/4597980-half-life-windows-front-cover-248x300.jpg 248w, https://www.filfre.net/wp-content/uploads/2024/11/4597980-half-life-windows-front-cover.jpg 661w" sizes="(max-width: 372px) 100vw, 372px"></a></p>
<p>Around twenty years ago, people would have laughed if you told them that videogames would end up at the Smithsonian, but the Half-Life team really did want to make games that were more than just throwaway toys. The rule against cinematics — which made our jobs much harder and also ended up leaving a lot of my favorite work out of the game — was a kind of ideological stake in the ground: we really did want the game and the story to be the same thing. It was far from flawless, but it was really trying to push the boundaries of a young medium.</p>
<p>— Valve artist Steve Theodore</p>
</blockquote>
<p>By 1998, the first-person shooter was nearing its pinnacle of popularity. In June of that year, <em>Computer Gaming World</em> magazine could list fourteen reasonably big-budget, high-profile FPS’s earmarked for release in the next six months alone. And yet the FPS seemed rather to be running to stand still. Almost all of the innovation taking place in the space was in the realm of technology rather than design.</p>
<p>To be sure, progress in the former realm was continuing apace. Less than five years after <a href="https://www.filfre.net/2020/05/the-shareware-scene-part-3-the-id-boys">id Software</a> had shaken the world with <a href="https://www.filfre.net/2020/06/the-shareware-scene-part-4-doom"><em>DOOM</em></a>, that game’s low-resolution 2.5D graphics and equally crude soundscapes had become positively quaint. Aided and abetted by a fast-evolving ecosystem of <a href="https://www.filfre.net/2023/05/the-next-generation-in-graphics-part-2-three-dimensions-in-hardware">3D-graphics hardware</a> from <a href="https://www.filfre.net/2023/05/the-next-generation-in-graphics-part-3-software-meets-hardware">companies like 3Dfx</a>, <a href="https://www.filfre.net/2023/04/the-next-generation-in-graphics-part-1-three-dimensions-in-software-or-quake-and-its-discontents">id’s <em>Quake</em> engine</a> had raised the bar enormously in 1996; ditto <a href="https://www.mobygames.com/game/405/quake-ii/"><em>Quake II</em></a> in 1997. These were the cutting-edge engines that everyone with hopes of selling a lot of shooters scrambled to license. Then, in May of 1998, with <a href="https://www.mobygames.com/game/649/quake-iii-arena/"><em>Quake III</em></a> not scheduled for release until late the following year, Epic MegaGames came along with their own <a href="https://www.mobygames.com/game/330/unreal/"><em>Unreal</em></a> engine, boasting a considerably longer bullet list of graphical effects than <em>Quake II</em>. In thus directly challenging id’s heretofore unquestioned supremacy in the space, <em>Unreal</em> ignited a 3D-graphics arms race that seemed to promise even faster progress in the immediate future.</p>
<p>Yet whether they sported the name <em>Quake</em> or <em>Unreal</em> or something else on their boxes, single-player FPS’s were still content to hew to the “shooting gallery” design template laid out by <em>DOOM</em>. You were expected to march through a ladder-style campaign consisting of a set number of discrete levels, each successive one full of more and more deadly enemies to kill than the last, perhaps with some puzzles of the lock-and-key or button-mashing stripe to add a modicum of variety. These levels were joined together by some thread of story, sometimes more elaborate and sometimes — usually — less so, but so irrelevant to what occurred inside the levels that impatient gamers could and sometimes did skip right over the intervening cutscenes or other forms of exposition in order to get right back into the action.</p>
<p>This was clearly a model with which countless gamers were completely comfortable, one which had the virtue of allowing them maximal freedom of choice: follow along with the story or ignore it, as you liked. Or, as id’s star programmer John Carmack famously said: “Story in a game is like a story in a porn movie. It’s expected to be there, but it’s not that important.”</p>
<p>But what if you could build the story right into the gameplay, such that the two became inseparable? What if you could eliminate the artificial division between exposition and action, and with it the whole conceit of a game as a mere series of levels waiting to be beaten one by one? What if you could drop players into an open-ended space where the story was taking place all around them?</p>
<p>This was the thinking that animated an upstart newcomer to the games industry that went by the name of Valve L.L.C. The game that resulted from it would prove the most dramatic conceptual advance in the FPS genre since <em>DOOM</em>, with lessons and repercussions that reached well beyond the borders of shooter country.</p>
<hr>
<div id="attachment_6182"><p><a href="https://www.filfre.net/2024/11/__trashed/newell2/" rel="attachment wp-att-6182"><img decoding="async" aria-describedby="caption-attachment-6182" src="https://www.filfre.net/wp-content/uploads/2024/11/newell2-300x196.jpg" alt="" width="600" height="392" srcset="https://www.filfre.net/wp-content/uploads/2024/11/newell2-300x196.jpg 300w, https://www.filfre.net/wp-content/uploads/2024/11/newell2.jpg 632w" sizes="(max-width: 600px) 100vw, 600px"></a></p><p id="caption-attachment-6182">Gabe Newell.</p></div>
<div id="attachment_6206"><p><a href="https://www.filfre.net/2024/11/__trashed/harrington-2/" rel="attachment wp-att-6206"><img decoding="async" aria-describedby="caption-attachment-6206" src="https://www.filfre.net/wp-content/uploads/2024/11/harrington.jpg" alt="" width="300" height="350" srcset="https://www.filfre.net/wp-content/uploads/2024/11/harrington.jpg 300w, https://www.filfre.net/wp-content/uploads/2024/11/harrington-257x300.jpg 257w" sizes="(max-width: 300px) 100vw, 300px"></a></p><p id="caption-attachment-6206">Mike Harrington, who left Valve in 2000 because there were other fish in the sea.</p></div>
<p>The formation of Valve was one of several outcomes of a dawning realization inside the Microsoft of the mid-1990s that computer gaming was becoming a very big business. The same realization led a highly respected Microsoft programmer named Michael Abrash to quit his cushy job in Redmond, Washington, throw his tie into the nearest trashcan, and move to Mesquite, Texas, to help John Carmack and the other scruffy id boys make <em>Quake</em>. It led another insider named Alex St. John to put together the internal team who made DirectX, a library of code that allowed game developers and players to finally say farewell to creaky old MS-DOS and join the rest of the world that was running <a href="https://www.filfre.net/2022/11/doing-windows-part-10-chicago">Windows 95</a>. It led Microsoft to buy an outfit called Ensemble Studios and their promising real-time-strategy game <a href="https://www.filfre.net/2024/03/age-of-empires-or-how-microsoft-got-in-on-games"><em>Age of Empires</em></a> as a first wedge for levering their way into the gaming market as a publisher of major note. And it led to Valve Corporation.</p>
<p>In 1996, Valve’s future co-founders Gabe Newell and Mike Harrington were both valued employees of Microsoft. Newell had been working there in project-management roles since 1983; he had played an important part in the creation of the <a href="https://www.filfre.net/2018/06/doing-windows-part-1-ms-dos-and-its-discontents">early versions of Windows</a> before moving on to Microsoft Office and other high-profile applications. Harrington was a programmer whose tenure had been shorter, but he had made significant contributions to Windows NT, Microsoft’s business- and server-oriented operating system.</p>
<p>As Newell tells the tale, he had an epiphany when he was asked to commission a study to find out just how many computers were currently running Microsoft Windows in the United States. The number of 20 million that he got back was impressive. Yet he was shocked to learn that Windows wasn’t the most popular single piece of software to be found on American personal computers; that was rather a game called <em>DOOM</em>. Newell and Harrington had long enjoyed playing games. Now, it seemed, there were huge piles of money to be earned from making them. Doing so struck them as a heck of a lot more fun than making more operating systems and business software. It was worth a shot, at any rate; both men were wealthy enough by now that they could afford to take a flier on something completely different.</p>
<p>So, on August, 24, 1996, the pair quit Microsoft to open an office for their new company Valve some five miles away in Kirkland, Washington. At the time, no one could have imagined — least of all them — what a milestone moment this would go down as in the history of gaming. “On the surface, we should have failed,” says Gabe Newell. “Realistically, both Mike and I thought we would get about a year into it, realize we’d made horrible mistakes, and go back to our friends at Microsoft and ask for our jobs back.”</p>
<p>Be that as it may, they did know what kind of game they wanted to make. Or rather Newell did; from the beginning, he was the driving creative and conceptual force, while Harrington focused more on the practical logistics of running a business and making quality software. Like so many others in the industry he was entering, Newell wanted to make a shooter. Yet he wanted his shooter to be more immersive and encompassing of its player than any of the ones that were currently out there, with a story that was embedded right into the gameplay rather than standing apart from it. Valve wasted no time in licensing id’s <em>Quake</em> engine to bring these aspirations to life, via the game that would come to be known as <em>Half-Life</em>.</p>
<p>As the id deal demonstrates, Newell and Harrington had connections and financial resources to hand that almost any other would-be game maker would have killed for; both had exited Microsoft as millionaires several times over. Yet they had no access to gaming distribution channels, meaning that they had to beat the bush for a publisher just like anyone else with a new studio. They soon found that their studio and their ambitious ideas were a harder sell than they had expected. With games becoming a bigger business every year, there were a lot of deep-pocketed folks from other fields jumping into the industry with plans to teach all of the people who were already there what they were doing wrong; such folks generally had no clue about what it took to do games right. Seasoned industry insiders had a name for these people, one that was usually thoroughly apt: “Tourists.” At first glance, the label was easy to apply to Newell and Harrington and Valve. Among those who did so was Mitch Lasky, then an executive at Activision, who would go on to become a legendary gaming venture capitalist. He got “a whiff of tourism” from Valve, he admits. He says he still has “post-traumatic stress disorder” over his decision to pass on signing them to a publishing deal — but by no means was he the only one to do so.</p>
<p>Newell and Harrington finally wound up pitching to Sierra, a publisher known primarily for point-and-click adventure games, a venerable genre that was now being sorely tested by all of the new FPS’s. In light of this, Sierra was understandably eager to find a horse of the new breed to back. The inking of a publishing deal with Valve was one of the last major decisions made by <a href="https://www.filfre.net/2011/10/ken-and-roberta">Ken Williams</a>, who had <a href="https://www.filfre.net/2011/10/on-line-systems-is-born">founded Sierra</a> in his living room back in 1980 but was now in the process of selling the business he had built from the ground up. As a man with such deep roots in adventure games, he found Valve’s focus on story both refreshing and appealing. Still, there was a lot of wrangling between the parties, mainly over the ultimate disposition of the rights to the <em>Half-Life</em> name; Williams wanted them to go to Sierra, but Newell and Harrington wanted to retain them for themselves. In the end, with no other publishers stepping up to the plate, Valve had to accept what Sierra was offering, a capitulation that would lead to a lengthy legal battle a few years down the road. For now, though, they had their publisher.</p>
<p>As for Ken Williams, who would exit the industry stage left well before <em>Half-Life</em> was finished:</p>
<blockquote><p>Now that I’m retired, people sometimes ask me what I used to do. I usually just say, “I had a game company back in the old days.” That inevitably causes them to say, “Did you make any games I might have heard of?” I answer, “<a href="https://www.filfre.net/2015/08/leisure-suit-larry-in-the-land-of-the-lounge-lizards">Leisure Suit Larry</a>.” That normally is sufficient, but if there is no glimmer of recognition I pull out the heavy artillery and say, “Half-Life.” Unless they’ve been sleeping under a rock for the last couple of decades, that always lights up their eyes.</p></blockquote>
<p>One can imagine worse codas to a business career…</p>
<p>In what could all too easily be read as another sign of naïve tourism, Newell and Harrington agreed to a crazily optimistic development timeline, promising a finished game for the Christmas of 1997, which was just one year away. To make it happen, they hired a few dozen level designers, programmers, artists, and other creative and technical types, many of whom had no prior professional experience in the games industry, all of whom recognized what an extraordinary opportunity they were being handed and were willing to work like dogs to make the most of it. The founders tapped a fertile pool of recruits in the online <em>DOOM</em> and <em>Quake</em> modding scenes, where amateurs were making names for themselves by bending those engines in all sorts of new directions. They would now do the same on a professional basis at Valve, even as the programmers modified the <em>Quake</em> engine itself to suit their needs, implementing better lighting and particle effects, and adding scripting and artificial-intelligence capabilities that the straightforward run-and-shoot gameplay in which id specialized had never demanded. Gabe Newell would estimate when all was said and done that 75 percent of the code in the engine had been written or rewritten at Valve.</p>
<p>In June of 1997, Valve took <em>Half-Life</em> to the big E3 trade show, where it competed for attention with a murderers’ row of other FPS’s, including early builds of <em>Unreal</em>, <a href="https://www.mobygames.com/game/322/sin/"><em>SiN</em></a>, <a href="https://www.mobygames.com/game/1678/john-romeros-daikatana/"><em>Daikatana</em></a>, <em>Quake II</em>, and <a href="https://www.filfre.net/2024/04/jedi-knight-plus-notes-on-an-expanded-universe"><em>Jedi Knight</em></a>. Valve didn’t even have a booth of their own at the show. Nor were they to be found inside Sierra’s; <em>Half-Life</em> was instead shown in the booth of 3Dfx. Like so many of Valve’s early moves, this one was deceptively clever, because 3Dfx was absolutely huge at the time, with as big a buzz around their hardware as id enjoyed around their software. <em>Half-Life</em> walked away from the show with the title of “Best Action Game.”</p>
<p>The validation of E3 made the unavoidable moment of reckoning that came soon after easier to stomach. I speak, of course, about the moment when Valve had to recognize that they didn’t have a ghost of a chance of finishing the game that they wanted to make within the next few months. Newell and Harrington looked at the state of the project and decided that they could probably scrape together a more or less acceptable but formulaic shooter in time for that coming Christmas. Or they could keep working and end up with something amazing for the <em>next</em> Christmas. To their eternal credit, they chose the latter course, a decision which was made possible only by their deep pockets. For Sierra, who were <a href="https://www.filfre.net/2019/07/the-mortgaging-of-sierra-online">notorious</a> for releasing <a href="https://www.filfre.net/2018/10/quest-for-glory-iii-and-iv">half-finished games</a>, certainly did not intend to pay for an extra year of development time. The co-founders would have to foot that bill themselves. Nevertheless, to hear Gabe Newell tell it today, it was a no-brainer: “Late is just for a little while. Suck is forever.”</p>
<p>The anticipation around <em>Half-Life</em> didn’t diminish in the months that followed, not even after the finished <em>Unreal</em> took the world by storm in May of 1998. Despite being based on a two-plus-year-old engine in a milieu that usually prized the technologically new and shiny above all else, Valve’s “shooter with a story” had well and truly captured the imaginations of gamers. During the summer of 1998, a demo of the game consisting of the first three chapters — including the now-iconic opening scenes, in which you ride a tram into a secret government research facility as just another scientist on the staff headed for another day on the job — leaked out of the offices of a magazine to which it had been sent. It did more to promote the game than a million dollars worth of advertising could have; the demo spread like wildfire online, raising the excitement level to an even more feverish pitch. <em>Half-Life</em> was different enough to have the frisson of novelty in the otherwise homogeneous culture of the FPS, whilst still being readily identifiable <em>as</em> an FPS. It was the perfect mix of innovation and familiarity.</p>
<p>So, it was no real surprise when the full game turned into a massive hit for Valve and Sierra after its release on November 19, 1998. The magazines fell all over themselves to praise it. <em>Computer Gaming World</em>, normally the closest thing the hype-driven journalism of gaming had to a voice of sobriety, got as high on <em>Half-Life’</em>s supply as anyone. The magazine’s long-serving associate editor Jeff Green took it upon himself to render the official verdict.</p>
<blockquote><p>Everything you’ve heard, everything you’ve hoped for — it’s all true. Half-Life, Valve Software’s highly anticipated first-person shooter, is not just one of the best games of the year. It’s one of the best games of any year, an instant classic that is miles better than any of its immediate competition, and, in its single-player form, is the best shooter since DOOM. Plus, despite the fact that it’s “just” a shooter, Half-Life provides one of the best examples ever of how to present an interactive movie — and a great, scary movie at that.</p></blockquote>
<p><em>Half-Life</em> sold its first 200,000 copies in the United States before Christmas — i.e., before glowing reviews like the one above even hit the newsstands. But this was the barest beginning to its success story. In honor of its tenth birthday in 2008, Guinness of world-records fame would formally anoint <em>Half-Life</em> as the best-selling single FPS in history, with total sales in the neighborhood of 10 million copies across all platforms and countries. For Newell and Harrington, it was one hell of a way to launch a game-development studio. For Sierra, who in truth had done very little for <em>Half-Life</em> beyond putting it in a box and shipping it out to stores, it was a tsunami of cash that seemed to come out of nowhere, the biggest game they had ever published almost by an order of magnitude. One does hope that somebody in the company’s new management took a moment to thank Ken Williams for this manna from heaven.</p>
<hr>
<p><a href="https://www.filfre.net/2024/11/__trashed/3965832-half-life-windows-inside-cover/" rel="attachment wp-att-6186"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/3965832-half-life-windows-inside-cover.jpg" alt="" width="372" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/3965832-half-life-windows-inside-cover.jpg 662w, https://www.filfre.net/wp-content/uploads/2024/11/3965832-half-life-windows-inside-cover-248x300.jpg 248w" sizes="(max-width: 372px) 100vw, 372px"></a></p>
<p><em>Half-Life</em> has come to occupy such a hallowed, well-nigh sacrosanct position in the annals of gaming that any encounter with the actual artifact today seems bound to be slightly underwhelming. Yet even when we take into account the trouble that any game would have living up to a reputation as elevated as this one’s, the truth is that there’s quite a lot here for the modern skeptical critic to find fault with — and, Lord knows, this particular critic has seldom been accused of lacking in skepticism.</p>
<p>Judged purely as a shooter, the design shows its age. It’s sometimes amazingly inspired, but more often no better than average for its time. There’s a lot of crawling through anonymous vents that serve no real purpose other than to extend the length of the game, a lot of places where you can survive only by dying first so as to learn what’s coming, a lot of spots where it’s really not clear at all what the game wants from you. And then there are an <em>awful</em> lot of jumping puzzles, shoehorned into a game engine that has way more slop in it than is ideal for such things. I must say that I had more unadulterated fun with LucasArts’s <em>Jedi Knight</em>, the last shooter I played all the way through for these histories, than I did with <em>Half-Life</em>. There the levels are constructed like thrill rides straight out of the <em>Star Wars</em> films, with a through-line that seems to just intuitively come to you; looking back, I’m still in awe of their subtle genius in this respect. <em>Half-Life</em> is not like that. You really have to work to get through it, and that’s not as appealing to me.</p>
<p>Then again, my judgment on these things should, like that of any critic, be taken with a grain of salt. Whether you judge a game good or bad or mediocre hinges to a large degree on what precisely you’re looking for from it; we’ve all read countless negative reviews reflective not so much of a bad game as one that isn’t the game that that reviewer wanted to play. Personally, I’m very much a tourist in the land of the FPS. While I understand the appeal of the genre, I don’t want to expend too many hours or too much effort on it. I want to blast through a fun and engaging environment without too much friction. Make me feel like an awesome action hero while I’m at it, and I’ll probably walk away satisfied, ready to go play something else. <em>Jedi Knight</em> on easy mode gave me that experience; <em>Half-Life</em> did not, demanding a degree of careful attention from me that I wasn’t always eager to grant it. If you’re more hardcore about this genre than I am, your judgment of the positives and negatives in these things may very well be the opposite of mine. Certainly <em>Half-Life</em> is more typical of its era than <em>Jedi Knight</em> — an era when games like this were still accepted and even expected to be harder and more time-consuming than they are today. <em>C’est la vie et vive la différence!</em></p>
<p>But of course, it wasn’t the granular tactical details of the design that made <em>Half-Life</em> stand out so much from the competition back in the day. It was rather its brilliance as a storytelling vehicle that led to its legendary reputation. And don’t worry, you definitely won’t see me quibbling that said reputation isn’t deserved. Even here, though, we do need to be sure that we understand exactly what it did and did not do that was so innovative at the time.</p>
<p>Contrary to its popular rep then and now, <em>Half-Life</em> was by no means the first “shooter with a story.” Technically speaking, even <em>DOOM</em> has a story, some prattle about a space station and a portal to Hell and a space marine who’s the only one that can stop the demon spawn. The story most certainly isn’t <em>War and Peace</em>, but it’s there.</p>
<p><em>Half-Life</em> wasn’t even the shooter at the time of its release with the inarguably best or most complicated story. LucasArts makes a strong bid for the title there. Both <a href="https://www.mobygames.com/game/500/star-wars-dark-forces/"><em>Dark Forces</em></a> and the aforementioned <em>Jedi Knight</em>, released in 1995 and 1997 respectively, weave fairly elaborate tales into the fabric of the existing <em>Star Wars</em> universe, drawing on its rich lore, inserting themselves into the established chronology of the original trilogy of films and the “Expanded Universe” series of <em>Star Wars</em> novels.</p>
<p>Like that of many games of this era, <em>Half-Life’</em>s story betrays the heavy influence of the television show <a href="https://www.filfre.net/2024/09/the-truth-is-out-there-part-1-the-will-to-believe"><em>The X-Files</em></a>, which enjoyed its biggest season ever just before this game was released. We have the standard nefarious government conspiracy involving extraterrestrials, set in the standard top-secret military installation somewhere in the Desert Southwest. We even have a direct equivalent to Cancer Man, <em>The X-Files’</em>s shadowy, nameless villain who is constantly lurking behind the scenes. “G-Man” does the same in <em>Half-Life</em>; voice actor Michael Shapiro even opted to give him a “lizard voice” that’s almost a dead ringer for Cancer Man’s nicotine-addled croak.</p>
<p><a href="https://www.filfre.net/2024/11/__trashed/cancer_man/" rel="attachment wp-att-6194"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/cancer_man.jpg" alt="" width="250" height="333" srcset="https://www.filfre.net/wp-content/uploads/2024/11/cancer_man.jpg 250w, https://www.filfre.net/wp-content/uploads/2024/11/cancer_man-225x300.jpg 225w" sizes="(max-width: 250px) 100vw, 250px"></a></p>
<div id="attachment_6195"><p><a href="https://www.filfre.net/2024/11/__trashed/half-life_7/" rel="attachment wp-att-6195"><img decoding="async" aria-describedby="caption-attachment-6195" src="https://www.filfre.net/wp-content/uploads/2024/11/half-life_7.jpg" alt="" width="600" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/half-life_7.jpg 800w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_7-300x225.jpg 300w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_7-768x576.jpg 768w" sizes="(max-width: 600px) 100vw, 600px"></a></p><p id="caption-attachment-6195">Separated at birth?</p></div>
<p>All told, <em>Half-Life’</em>s story is more of a collection of tropes than a serious exercise in fictional world-building. To be clear, the sketchiness is by no means an automatically bad thing, not when it’s judged in the light of the purpose the story actually needs to serve. Mark Laidlaw, the sometime science-fiction novelist who wrote the script, makes no bones about the limits to his ambitions for it. “You don’t have to write the whole story,” he says. “Because it’s a conspiracy plot, everybody knows more about it than you do. So you don’t have to answer those questions. Just keep raising questions.”</p>
<p>Once the shooting starts, plot-related things happen, but it’s all heat-of-the-moment stuff. You fight your way out of the complex after its been overrun by alien invaders coming through a trans-dimensional gate that’s been inadvertently opened, only to find that your own government is now as bent on killing you as the aliens are in the name of the disposal of evidence. Eventually, in a plot point weirdly reminiscent of <em>DOOM</em>, you have to teleport yourself onto the aliens’ world to shut down the portal they’re using to reach yours.</p>
<p>Suffice to say that, while <em>Half-Life</em> may be slightly further along the continuum toward <em>War and Peace</em> than <em>DOOM</em> is, it’s only slightly so. Countless better, richer, deeper stories were told in games before this one came along. When people talk about <em>Half-Life</em> as “the FPS with a story,” they’re really talking about something more subtle: about its way of <em>presenting</em> its story. Far from diminishing the game, this makes it more important, across genres well beyond the FPS. The best way for us to start to come to grips with what <em>Half-Life</em> did that was so extraordinary might be to look back to the way games were deploying their stories before its arrival on the scene.</p>
<p>Throughout the 1980s, story in games was largely confined to the axiomatically narrative-heavy genres of the adventure game and the CRPG. Then, in 1990, Origin Systems released <a href="https://www.filfre.net/2017/04/from-squadron-to-wingleader">Chris Roberts’s <em>Wing Commander</em></a>, a game which was as revolutionary in the context of its own time as <em>Half-Life</em> was in its. In terms of gameplay, <em>Wing Commander</em> was a “simulation” of outer-space dog-fighting, not all that far removed in spirit from the classic <a href="https://www.filfre.net/2013/12/elite"><em>Elite</em></a>. What made it stand out was what happened when you weren’t behind the controls of your space fighter. Between missions, you hung out in the officers’ lounge aboard your mother ship, collecting scuttlebutt from the bartender, even flirting with the fetching female pilot in your squadron. When you went into the briefing room to learn about your next mission, you also learned about the effect your last one had had on the unfolding war against the deadly alien Kilrathi, and were given a broader picture of the latest developments in the conflict that necessitated this latest flight into danger. The missions themselves remained shooting galleries, but the story that was woven around them gave them resonance, made you feel like you were a part of something much grander. Almost equally importantly, this “campaign” provided an easy way to structure your time in the game and chart your improving skills; beat all of the missions in the campaign and see the story to its end, and you could say that you had mastered the game as a whole.</p>
<p>People <em>loved</em> this; <em>Wing Commander</em> became by far the most popular computer-gaming franchise of the young decade prior to the smashing arrival of <em>DOOM</em> at the end of 1993. The approach it pioneered quickly spread across virtually all gaming genres. In particular, both the first-person-shooter and the real-time strategy genres — the two that would dominate over all others in the second half of the decade — adopted it as their model for the single-player experience. Even at its most rudimentary, a ladder-style campaign gave you a goal to pursue and a framework of progression to hang your hat on.</p>
<p>Yet the same approach created a weirdly rigid division between gameplay and exposition, not only on the playing side of the ledger but to a large extent on the development side as well. It wasn’t unusual for completely separate teams to be charged with making the gameplay part of a game and all of the narrative pomp and circumstance that justified it. The disconnect could sometimes verge on hilarious; in <em>Jedi Knight</em>, which went so far as to film real humans acting out a B-grade <em>Star Wars</em> movie between its levels, the protagonist has a beard in the cutscenes but is clean-shaven during the levels. By the late 1990s, the pre-rendered-3D or filmed-live-action cutscenes sometimes cost more to produce than the game itself, and almost always filled more of the space on the CD.</p>
<p>As he was setting up his team at Valve, Gabe Newell attempted to eliminate this weird bifurcation between narrative and gameplay by passing down two edicts to his employees, the only non-negotiable rules he would ever impose upon them. <em>Half-Life</em> had to have a story — not necessarily one worthy of a film or a novel, but one worthy of the name. And at the same time, it couldn’t ever, under any conditions, from the very first moment to the very last, take control out of the hands of the player. Everything that followed cascaded from these two simple rules, which many a game maker of the time would surely have seen as mutually contradictory. To state the two most obvious and celebrated results, they meant no cutscenes whatsoever and no externally imposed ladder of levels to progress through — for any sort of level break did mean taking control out of the hands of the player, no matter how briefly.</p>
<p>Adapting to such a paradigm the <em>Quake</em> engine, which had been designed with a traditional FPS campaign in mind, proved taxing but achievable. Valve set up the world of <em>Half-Life</em> as a spatial grid of “levels” that were now better described as zones; pass over a boundary from one zone into another, and the new one would be loaded in swiftly and almost transparently. Valve kept the discrete zones small so as to minimize the loading times, judging more but shorter loading breaks to be better than fewer but longer ones. The hardest part was dealing with the borderlands, so to speak; you needed to be able to look into one zone from another, and the enemies and allies around you had to stay consistent before and after a transition. But Valve managed even this through some clever technical sleight of hand — such as by creating overlapping areas that existed in both of the adjoining sets of level data — and through more of the same on the design side, such as by placing the borders whenever possible at corners in corridors and at other spots where the line of sight didn’t extend too far. The occasional brief loading message aside — and they’re <em>very</em> brief, or even effectively nonexistent, on modern hardware — <em>Half-Life</em> really does feel like it all takes place in the same contiguous space.</p>
<hr>
<p><code> </code><br>
Every detail of <em>Half-Life</em> has been analyzed at extensive, exhaustive length over the decades since its release. Such analysis has its place in fan culture, but it can be more confusing than clarifying when it comes to appreciating the game’s most important achievements. The ironic fact is that you can learn almost everything that really matters about <em>Half-Life</em> as a game design just by playing it for an hour or so, enough to get into its third chapter. Shall we do so together now?</p>
<p><iframe title="YouTube video player" src="https://www.youtube.com/embed/qUDNiyOf92o?si=DOOyBpyJmQ84FVrH" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<p><code> </code><br>
<em>Half-Life</em> hews to Gabe Newell’s guiding rules from the moment you click the “New Game” button on the main menu and the iconic tram ride into the Black Mesa Research Center begins. The opening credits play over this sequence, in which you are allowed to move around and look where you like. There are reports that many gamers back in the day didn’t actually realize that they were already in control of the protagonist — reports that they just sat there patiently waiting for the “cutscene” to finish, so ingrained was the status quo of bifurcation.</p>
<p><a href="https://www.filfre.net/2024/11/__trashed/half-life_1/" rel="attachment wp-att-6188"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/half-life_1.jpg" alt="" width="600" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/half-life_1.jpg 640w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_1-300x225.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a></p>
<p>The protagonist himself strikes an artful balance between being an undefined player stand-in — what <a href="https://www.filfre.net/2024/06/the-last-days-of-zork"><em>Zork: Grand Inquisitor</em></a> called an “AFGNCAAP,” or “Ageless, Faceless, Gender-Neutral, Culturally Ambiguous Adventure Person” — and a fully fleshed-out character. As another result of Newell’s guiding rules, you never see him in the game unless you look in a mirror; you only see the world through his eyes. You do, however, hear security guards and colleagues refer to him — or, if you like, to you — as “Gordon” or “Mr. Freeman.” The manual and the intertitles that appear over the opening sequence of the game explain that his full name is indeed Gordon Freeman, and that he’s a 27-year-old theoretical physicist with a PhD from MIT who has been recently hired to work at Black Mesa. The game’s loading screen and its box art show us a rather atypical FPS protagonist, someone very different from the muscle-bound, cigar-chomping Duke Nukem or the cocky budding Jedi knight Kyle Katarn: a slim, studious-looking fellow with Coke-bottle eyeglasses and a token goatee. The heart of the computer-gaming demographic being what it was in 1998, he was disarmingly easy for many of the first players of <em>Half-Life</em> to identify with, thus adding just that one more note of immersion to the symphony. Small wonder that he has remained a favorite with cosplayers for decades. In fact, cipher though he almost entirely is, Gordon Freeman has become one of the most famous videogame characters in history.</p>
<p><a href="https://www.filfre.net/2024/11/__trashed/half-life_2/" rel="attachment wp-att-6189"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/half-life_2.jpg" alt="" width="600" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/half-life_2.jpg 800w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_2-300x225.jpg 300w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_2-768x576.jpg 768w" sizes="(max-width: 600px) 100vw, 600px"></a></p>
<p>The tram eventually arrives at its destination and a security guard welcomes you to the part of the complex where you work: “Morning, Mr. Freeman. Looks like you’re running late.” Passing through the double blast doors, you learn from your colleagues inside that it’s already been a rough morning: the main computer has crashed, which has thrown a wrench into an important test that was planned for today. Mind you, you don’t learn this through dialog menus, which Valve judged to qualify as taking control away from the player. You can’t speak at all, but if you approach the guards and scientists, they’ll say things to you, leaving you to imagine your own role in the conversation. Or you can stand back and listen to the conversations they have with one another.</p>
<p>You can wander around as you like in this office area. You can look in Gordon’s locker to learn a little bit more about him, buy a snack from the vending machine, even blow it up by microwaving it for too long. (“My God!” says your colleague in reaction. “What are you doing?”) All of this inculcates the sense of a lived-in workspace better than any amount of external exposition could have done, setting up a potent contrast with the havoc to come.</p>
<p><a href="https://www.filfre.net/2024/11/__trashed/half-life_3/" rel="attachment wp-att-6190"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/half-life_3.jpg" alt="" width="600" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/half-life_3.jpg 800w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_3-300x225.jpg 300w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_3-768x576.jpg 768w" sizes="(max-width: 600px) 100vw, 600px"></a></p>
<p>When you get bored fooling around with lockers and microwaves, you put on your hazardous-environment suit and head down to where the day’s test is to be conducted. It isn’t made clear to you the player just what the test is meant to accomplish; it isn’t even clear that Gordon himself understands the entirety of the research project to which he’s been assigned. All that matters is that the test goes horribly wrong, creating a “resonance cascade event” that’s accompanied by a lot of scary-looking energy beams flying through the air and explosions popping off everywhere. You’ve now reached the end of the second chapter without ever touching a weapon. But that’s about to change, because you’re about to find out that hostile alien lifeforms are now swarming the place. “Get to the surface as soon as you can and let someone know we’re stranded down here!” demand your colleagues. So, you pick up the handy crowbar you find lying on the floor and set off to batter a path through the opposition.</p>
<p><a href="https://www.filfre.net/2024/11/__trashed/half-life_4/" rel="attachment wp-att-6191"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/half-life_4.jpg" alt="" width="600" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/half-life_4.jpg 800w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_4-300x225.jpg 300w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_4-768x576.jpg 768w" sizes="(max-width: 600px) 100vw, 600px"></a></p>
<p>This was a drill with which 1990s shooter fans were a lot more familiar, but there are still plenty of new wrinkles. The scientists and guards who were present in the complex before all hell broke loose don’t just disappear. They’re still around, mostly cowering in the corners in the case of the former, doing their best to fight back in that of the latter. The scientists sometimes have vital information to share, while the guards will join you as full-blown allies, firing off their pop-gun pistols at your side, although they tend not to live very long. Allies were a new thing under the FPS sun in 1998, an idea that would quickly spread to other games. (Ditto the way that the guards here are almost better at shooting you in the back than they are at shooting the rampaging aliens. The full history of “allies” in the FPS genre is a fraught one…)</p>
<p><a href="https://www.filfre.net/2024/11/__trashed/half-life_5/" rel="attachment wp-att-6192"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/half-life_5.jpg" alt="" width="600" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/half-life_5.jpg 800w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_5-300x225.jpg 300w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_5-768x576.jpg 768w" sizes="(max-width: 600px) 100vw, 600px"></a></p>
<p>As you battle your way up through the complex, you witness plenty of pre-scripted scenes to go along with the emergent behavior of the scientists, guards, and aliens. Ideally, you won’t consciously notice any distinction between the two. You see a scientist being transformed into a zombie by an alien “head crab” behind the window of his office; see several hapless sad sacks tumbling down an open elevator shaft; see a dying guard trying and just failing to reach a healing station. These not only add to the terror and drama, but sometimes have a teaching function. The dying guard, for example, points out to you the presence of healing stations for ensuring that you don’t come to share his fate.</p>
<p>It’s the combination of emergent and scripted behaviors, on the part of your enemies and even more on that of your friends, that makes <em>Half-Life</em> come so vividly alive. I’m tempted to use the word “realism” here, but I know that Gabe Newell would rush to correct me if I did. Realism, he would say, is boring. Realistically, a guy like Gordon Freeman — heck, even one like Duke Nukem — wouldn’t last ten minutes in a situation like this one. Call it verisimilitude instead, a sign of a game that’s absolutely determined to stay true to its fictional premise, never mind how outlandish it is. The world <em>Half-Life</em> presents really is a living one; Newell’s rule of thumb was that five seconds should never pass without something happening near the player. Likewise, the world has to react to anything the player does. “If I shoot the wall, the wall should change, you know?” Newell said. “Similarly, if I were to throw a grenade at a grunt, he should react to it, right? I mean, he should run away from it or lay down on the ground and duck for cover. If he can’t run away from it, he should yell ‘Shit!’ or ‘Fire in the hole!’ or something like that.” In <em>Half-Life</em>, he will indeed do one or all of these things.</p>
<p>The commitment to verisimilitude means that most of what you see and hear is, to use the language of film, diegetic, or internal to the world as Gordon Freeman is experiencing it. Even the onscreen HUD is the one that Gordon is seeing, being the one that’s built into his hazard suit. The exceptions to the diegetic rule are few: the musical soundtrack that plays behind your exploits; the chapter names and titles which flash on the screen from time to time; those credits that are superimposed over the tram ride at the very beginning. These exceptions notwithstanding, the game’s determination to immerse you in an almost purely diegetic sensory bubble is the reason I have to strongly differ with Jeff Green’s description of <em>Half-Life</em> as an “interactive movie.” It’s actually the polar opposite of such a stylized beast. It’s an exercise in raw immersion which seeks to eliminate any barriers between you and your lived experience rather than making you feel like you’re doing anything so passive as watching or even guiding a movie. One might go so far as to take <em>Half-Life</em> as a sign that gaming was finally growing up and learning to stand on its own two feet by 1998, no longer needing to take so many of its cues from other forms of media.</p>
<p>We’ve about reached the end of our hour in <em>Half-Life</em> now, so we can dispense with the blow-by-blow. This is not to say that we’ve seen all the game has to offer. Betwixt and between the sequences that I find somewhat tedious going are more jaw-dropping dramatic peaks: the moment when you reach the exit to the complex at long last, only to learn that the United States Army wants to terminate rather than rescue you; the moment when you discover a tram much like the one you arrived on and realize that you can drive it through the tunnels; the moment when you burst out of the complex completely and see the bright blue desert sky above. (Unfortunately, it’s partially blotted out by a big Marine helicopter that also wants to kill you).</p>
<p><a href="https://www.filfre.net/2024/11/__trashed/half-life_6/" rel="attachment wp-att-6193"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2024/11/half-life_6.jpg" alt="" width="600" height="450" srcset="https://www.filfre.net/wp-content/uploads/2024/11/half-life_6.jpg 1024w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_6-300x225.jpg 300w, https://www.filfre.net/wp-content/uploads/2024/11/half-life_6-768x576.jpg 768w" sizes="(max-width: 600px) 100vw, 600px"></a></p>
<p>In my opinion, <em>Half-Life</em> could have been an even better game if it had been about half as long, made up of only its most innovative and stirring moments — “all killer, no filler,” as they used to say in the music business. Alas, the marketplace realities of game distribution in the late 1990s militated against this. If you were going to charge a punter $40 or $50 for a boxed game, you had to make sure it lasted more than six or seven hours. If <em>Half-Life</em> was being made today, Valve might very well have made different choices.</p>
<p>Again, though, mileages will vary when it comes to these things. The one place where <em>Half-Life</em> does fall down fairly undeniably is right at the end. Your climactic journey into Xen, the world of the aliens, is so truncated by time and budget considerations as to be barely there at all, being little more than a series of (infuriating) jumping puzzles and a couple of boss fights. Tellingly, it’s here that <em>Half-Life</em> gives in at last and violates its own rules of engagement, by delivering — perish the thought! — a cutscene containing the last bits of exposition that Valve didn’t have time to shoehorn into their game proper. The folks from Valve almost universally name the trip to Xen as their biggest single regret, saying they wish they had either found a way to do it properly or just saved it for a sequel. Needless to say, I can only concur.</p>
<p>Yet the fact remains that <em>Half-Life</em> at its best is so audacious and so groundbreaking that it almost transcends such complaints. Its innovations have echoed down across decades and genres. We’ll be bearing witness to that again and again in the years to come as we continue our journey through gaming history. Longtime readers of this site will know that I’m very sparing in my use of words like “revolutionary.” But I feel no reluctance whatsoever to apply the word to this game.</p>
<hr>
<p><code> </code><br>
<strong>Did you enjoy this article? If so, please think about pitching in to help me make many more like it. You can pledge any amount you like.</strong></p>
<p><a href="https://www.patreon.com/DigitalAntiquarian" rel="attachment wp-att-5598"><img decoding="async" src="https://www.filfre.net/wp-content/uploads/2023/04/Patreon-300x133-1.png" alt="" width="300" height="133"></a></p>
<hr>

<p><strong>Sources:</strong> The books <em>Rocket Jump: Quake and the Golden Age of First-Person Shooters</em> by David L. Craddock, <em>Masters of DOOM: How Two Guys Created an Empire and Transformed Pop Culture</em> by David Kushner, <em>Not All Fairy Tales Have Happy Endings: The Rise and Fall of Sierra On-Line</em> by Ken Williams, and <em>Game Design: Theory &amp; Practice</em> (2nd edition) by Richard Rouse III. <em>Retro Gamer</em> 149; the <em>Games<sup>TM</sup></em> special issue “Trigger Happy”; <em>Next Generation</em> of December 1998, April 1999, and June 1999; <em>Computer Gaming World</em> of June 1998, December 1998, and February 1999; Sierra’s newsletter <em>InterAction</em> of Fall 1997; <em>Gamers’ Republic</em> of September 1998.</p>
<p>Online sources include <a href="https://www.gamesradar.com/history-of-valve/">“Full Steam Ahead: The History of Valve”</a> by Jeff Dunn at <em>Games Radar</em>, <a href="https://www.gamespot.com/articles/the-final-hours-of-half-life-2/1100-6112889/">“The Final Hours of Half-Life 2”</a> by Geoff Keighley at <em>GameSpot</em>, and Soren Johnson’s <a href="https://www.idlethumbs.net/designernotes/episodes/mitch-lasky-part-1/">interview of Mitch Latsky</a> on his <em>Designer Notes</em> podcast.</p>
<p><strong>Where to Get It:</strong> <em>Half-Life</em> is <a href="https://store.steampowered.com/app/70/HalfLife/">available for digital purchase</a> on Steam.</p>
							
							
														
													</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[U Pittsburgh pauses all PhD admissions amid DOGE funding cuts (138 pts)]]></title>
            <link>https://www.wesa.fm/health-science-tech/2025-02-21/university-pittsburgh-phd-pause-research-funding-uncertainty</link>
            <guid>43145483</guid>
            <pubDate>Sun, 23 Feb 2025 01:53:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wesa.fm/health-science-tech/2025-02-21/university-pittsburgh-phd-pause-research-funding-uncertainty">https://www.wesa.fm/health-science-tech/2025-02-21/university-pittsburgh-phd-pause-research-funding-uncertainty</a>, See on <a href="https://news.ycombinator.com/item?id=43145483">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>
        Published&nbsp;February 21, 2025 at 4:46 PM EST
    </p>
    <meta content="2025-02-21T21:46:43.945Z">


                                        </div><div>
                                        <p>Amid uncertainty about frozen research aid from the National Institutes of Health, the University of Pittsburgh has put its Ph.D. admissions on ice. The school confirmed Friday that there would be no new Ph.D. offers of admission while Pitt works to understand how reduced federal aid could impact the institution.</p><p>The move comes as research universities across the country battle against the National Institutes of Health over a policy to <a href="https://www.wesa.fm/health-science-tech/2025-02-10/pitt-cmu-national-institute-health-funding" target="_blank" data-cms-ai="0">reduce the funding cap for ancillary research expenses</a> like building construction and maintenance as well as support staff.</p><p>The policy would reduce the cap for those indirect research costs to 15%. Pitt’s current rate is 59%. A federal judge <a href="https://www.wesa.fm/health-science-tech/2025-02-21/nih-funding-indirects-judge-stay" target="_blank" data-cms-ai="0">extended a temporary pause</a> on implementation of that policy Friday. But Pitt’s decision to halt admissions was made earlier in the week.</p><p>"After the announcement that NIH indirect costs would be capped at 15%, the University’s Office of the Provost temporarily paused additional Ph.D. offers of admission until the impacts of that cap were better understood,” a Pitt spokesperson said in a statement to WESA.</p><p>The pause applies to all Pitt departments, not just medical and scientific research programs. University leadership is evaluating how reduced funding could impact the school, and it’s not clear when Ph.D. offers will resume.</p><p>“The University is in the process of completing that analysis and expects to be in a position to resume offers soon," the spokesperson said.</p><p>Emails obtained by WESA show Pitt faculty informing a Ph.D. applicant about the pause, explaining that the timeline and decision-making process is unclear. The email indicates that the applicant had upcoming plans to tour the campus and was highly recommended by the department for admission.</p><p>Pitt is not the first research university to take such a drastic measure as it tries to find its financial footing amid the Trump administration’s first month. The University of Southern California paused admissions in some of its departments last week, <a href="https://www.statnews.com/2025/02/19/trump-funding-freeze-grad-student-postdoc-acceptances-paused-nih-research/" target="_blank" data-cms-ai="0">according to STAT</a>.</p><p>And <a href="https://vanderbilthustler.com/2025/02/15/graduate-student-admissions-temporarily-paused-as-university-monitors-federal-funding/" target="_blank" data-cms-ai="0">according to the Vanderbilt Hustler</a>, the student newspaper at Vanderbilt University, a dean at the Tennessee school announced a pause on graduate student admissions last week. The school later told the paper that admissions were not paused but steps were being taken to “balance program admissions with current student needs.”</p><p>The NIH announced the cuts earlier this month, sending shockwaves through Pittsburgh’s life sciences sector. The University of Pittsburgh said in a statement shortly after the announcement that such cuts would harm the institution's mission “irreparably.”</p><p>A <a href="https://www.wesa.fm/health-science-tech/2025-02-21/nih-grants-indirects-trump-pittsburgh" target="_blank" data-cms-ai="0">WESA analysis</a> found that if the indirect cost cuts were implemented for the 2024 fiscal year, the University of Pittsburgh would have seen a $115 million drop in indirect funds. Carnegie Mellon University, another major research hub in Pittsburgh, would have seen a $3 million drop. It’s unclear how the cuts would impact the schools’ 2025 budget.</p>
<p>Meanwhile, despite the courts holding off implementation of the funding cuts, WESA has found grants from the NIH are <a href="https://www.wesa.fm/health-science-tech/2025-02-21/nih-funding-indirects-judge-stay" target="_blank" data-cms-ai="0">already lagging significantly behind this year compared to the first few weeks of 2024</a>. Between Inauguration Day and Feb. 15, roughly $781 million have been awarded to projects at research institutions nationwide. That’s a nearly 56% decrease compared to the same period in 2024 when $1.8 billion was awarded.</p><p>And with almost all grant review meetings on indefinite hold at NIH, former staffers tell WESA the plunge in funding is likely to continue.</p>
                                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Meta slashes staff stock awards as group embarks on AI spending drive (136 pts)]]></title>
            <link>https://www.ft.com/content/67a4c030-a7f6-47af-bab0-a998f0a09506</link>
            <guid>43145179</guid>
            <pubDate>Sun, 23 Feb 2025 01:12:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ft.com/content/67a4c030-a7f6-47af-bab0-a998f0a09506">https://www.ft.com/content/67a4c030-a7f6-47af-bab0-a998f0a09506</a>, See on <a href="https://news.ycombinator.com/item?id=43145179">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><a data-trackable="a11y-skip-to-help" href="https://www.ft.com/accessibility">Accessibility help</a><a data-trackable="a11y-skip-to-navigation" href="#site-navigation">Skip to navigation</a><a data-trackable="a11y-skip-to-content" href="#site-content">Skip to content</a><a data-trackable="a11y-skip-to-footer" href="#site-footer">Skip to footer</a></p><div id="barrier-page"><div id="heroOffer-Hero offer-1b090ac3-18dd-4a86-9550-5362c056eaa3" data-component="heroOffer" data-component-unique-name="Hero offer"><div data-o-grid-colspan="12 L6"><p><span></span><span></span><span></span><span>Subscribe to unlock this article</span><span></span></p></div><div data-o-grid-colspan="12 L6"><p><h2><span>Limited time offer</span></h2><h2><strong><span>Save 40% on Standard Digital</span></strong></h2></p><p><span>was </span><span>CHF660</span><span> </span><span>now </span><span>CHF395</span><span> for your first year
Make up your own mind. Build robust opinions on the FT's trusted journalism.
Offer available until 27 February 2025.</span></p></div></div><div id="recommendedOffers-Recommended offers" data-component="recommendedOffers" data-component-unique-name="Recommended offers"><p><h2 data-o-grid-colspan="12">Explore more offers.</h2></p><div data-o-grid-colspan="12"><div data-o-grid-colspan="12"><div><p><img src="https://www.ft.com/__origami/service/image/v2/images/raw/https://barrier-page-components.s3.eu-west-1.amazonaws.com/assets/icons/primary_product_icon_trial.svg?source=next-barrier-page&amp;format=svg" alt=""></p></div><p><span>CHF1</span><span> for 4 weeks</span></p><p><span>Then </span><span>CHF85</span><span> per month. Complete digital access to quality FT journalism. Cancel anytime during your trial.</span></p></div><div data-o-grid-colspan="12"><div><p><img src="https://www.ft.com/__origami/service/image/v2/images/raw/https://barrier-page-components.s3.eu-west-1.amazonaws.com/assets/icons/primary_product_icon_weekend_premium.svg?source=next-barrier-page&amp;format=svg" alt=""></p></div><p><span>was </span><span>CHF949</span><span> </span><span>now </span><span>CHF815</span><span> per year</span></p><p><span>Get Premium &amp; FT Weekend Print edition for the price of Premium. Complete digital access to quality analysis and expert insights, complemented with our award-winning Weekend Print edition.</span></p></div><div data-o-grid-colspan="12"><div><p><img src="https://www.ft.com/__origami/service/image/v2/images/raw/https://barrier-page-components.s3.eu-west-1.amazonaws.com/assets/icons/primary_product_icon_print.svg?source=next-barrier-page&amp;format=svg" alt=""></p></div><p><span>CHF345</span><span> for your first year</span></p><p><span>FT newspaper delivered Monday-Saturday, plus FT Digital Edition delivered to your device Monday-Saturday.</span></p></div></div></div><div data-component="subscriptionOptions" data-component-unique-name="Subscription options"><h2>Explore our full range of subscriptions.</h2><div><div><p>Discover all the plans currently available in your country</p></div><div><p>Digital access for organisations. Includes exclusive features and content.</p></div></div></div><div data-component="whyFT" data-component-unique-name="Why FT"><div><h2>Why the FT?</h2><p>See why over a million readers pay to read the Financial Times.</p></div><p><a href="https://subs.ft.com/whytheft?ft-content-uuid=67a4c030-a7f6-47af-bab0-a998f0a09506">Find out why</a></p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Digital Services Playbook (109 pts)]]></title>
            <link>https://playbook.usds.gov/</link>
            <guid>43145057</guid>
            <pubDate>Sun, 23 Feb 2025 00:54:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://playbook.usds.gov/">https://playbook.usds.gov/</a>, See on <a href="https://news.ycombinator.com/item?id=43145057">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="plays">
  
    <div>
      <h6>PLAY 1</h6>
      <h2>Understand what people need</h2>

      <p>We must begin digital projects by exploring and pinpointing the needs of the people who will use the service, and the ways the service will fit into their lives. Whether the users are members of the public or government employees, policy makers must include real people in their design process from the beginning. The needs of people — not constraints of government structures or silos — should inform technical and design decisions. We need to continually test the products we build with real people to keep us honest about what is important.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Early in the project, spend time with current and prospective users of the service</li>
  <li>Use a range of qualitative and quantitative research methods to determine people’s goals, needs, and behaviors; be thoughtful about the time spent</li>
  <li>Test prototypes of solutions with real people, in the field if possible</li>
  <li>Document the findings about user goals, needs, behaviors, and preferences</li>
  <li>Share findings with the team and agency leadership</li>
  <li>Create a prioritized list of tasks the user is trying to accomplish, also known as “user stories”</li>
  <li>As the digital service is being built, regularly test it with potential users to ensure it meets people’s needs</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>Who are your primary users?</li>
  <li>What user needs will this service address?</li>
  <li>Why does the user want or need this service?</li>
  <li>Which people will have the most difficulty with the service?</li>
  <li>Which research methods were used?</li>
  <li>What were the key findings?</li>
  <li>How were the findings documented? Where can future team members access the documentation?</li>
  <li>How often are you testing with real people?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 2</h6>
      <h2>Address the whole experience, from start to finish</h2>

      <p>We need to understand the different ways people will interact with our services, including the actions they take online, through a mobile application, on a phone, or in person. Every encounter — whether it’s online or offline — should move the user closer towards their goal.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Understand the different points at which people will interact with the service – both online and in person</li>
  <li>Identify pain points in the current way users interact with the service, and prioritize these according to user needs</li>
  <li>Design the digital parts of the service so that they are integrated with the offline touch points people use to interact with the service</li>
  <li>Develop metrics that will measure how well the service is meeting user needs at each step of the service</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>What are the different ways (both online and offline) that people currently accomplish the task the digital service is designed to help with?</li>
  <li>Where are user pain points in the current way people accomplish the task?</li>
  <li>Where does this specific project fit into the larger way people currently obtain the service being offered?</li>
  <li>What metrics will best indicate how well the service is working for its users?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 3</h6>
      <h2>Make it simple and intuitive</h2>

      <p>Using a government service shouldn’t be stressful, confusing, or daunting. It’s our job to build services that are simple and intuitive enough that users succeed the first time, unaided.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Use a simple and flexible design style guide for the service. Use the <a href="https://playbook.cio.gov/designstandards">U.S. Web Design System</a> as a default</li>
  <li>Use the design style guide consistently for related digital services</li>
  <li>Give users clear information about where they are in each step of the process</li>
  <li>Follow accessibility best practices to ensure all people can use the service</li>
  <li>Provide users with a way to exit and return later to complete the process</li>
  <li>Use language that is familiar to the user and easy to understand</li>
  <li>Use language and design consistently throughout the service, including online and offline touch points</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>What primary tasks are the user trying to accomplish?</li>
  <li>Is the language as plain and universal as possible?</li>
  <li>What languages is your service offered in?</li>
  <li>If a user needs help while using the service, how do they go about getting it?</li>
  <li>How does the service’s design visually relate to other government services?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 4</h6>
      <h2>Build the service using agile and iterative practices</h2>

      <p>We should use an incremental, fast-paced style of software development to reduce the risk of failure. We want to get working software into users’ hands as early as possible to give the design and development team opportunities to adjust based on user feedback about the service. A critical capability is being able to automatically test and deploy the service so that new features can be added often and be put into production easily.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Ship a functioning “minimum viable product” (MVP) that solves a core user need as soon as possible, no longer than three months from the beginning of the project, using a “beta” or “test” period if needed</li>
  <li>Run usability tests frequently to see how well the service works and identify improvements that should be made</li>
  <li>Ensure the individuals building the service communicate closely using techniques such as launch meetings, strategy rooms, daily standups, and team chat tools</li>
  <li>Keep delivery teams small and focused; limit organizational layers that separate these teams from the business owners</li>
  <li>Release features and improvements multiple times each month</li>
  <li>Create a prioritized list of features and bugs, also known as the “feature backlog” and “bug backlog”</li>
  <li>Use a source code version control system</li>
  <li>Give the entire project team access to the issue tracker and version control system</li>
  <li>Use code reviews to ensure quality</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>How long did it take to ship the MVP? If it hasn’t shipped yet, when will it?</li>
  <li>How long does it take for a production deployment?</li>
  <li>How many days or weeks are in each iteration/sprint?</li>
  <li>Which version control system is being used?</li>
  <li>How are bugs tracked and tickets issued? What tool is used?</li>
  <li>How is the feature backlog managed? What tool is used?</li>
  <li>How often do you review and reprioritize the feature and bug backlog?</li>
  <li>How do you collect user feedback during development? How is that feedback used to improve the service?</li>
  <li>At each stage of usability testing, which gaps were identified in addressing user needs?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 5</h6>
      <h2>Structure budgets and contracts to support delivery</h2>

      <p>To improve our chances of success when contracting out development work, we need to work with experienced budgeting and contracting officers. In cases where we use third parties to help build a service, a well-defined contract can facilitate good development practices like conducting a research and prototyping phase, refining product requirements as the service is built, evaluating open source alternatives, ensuring frequent delivery milestones, and allowing the flexibility to purchase cloud computing resources.</p>

<p><a href="https://techfarhub.cio.gov/handbook/">The TechFAR Handbook</a> provides a detailed explanation of the flexibilities in the Federal Acquisition Regulation (FAR) that can help agencies implement this play.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Budget includes research, discovery, and prototyping activities</li>
  <li>Contract is structured to request frequent deliverables, not multi-month milestones</li>
  <li>Contract is structured to hold vendors accountable to deliverables</li>
  <li>Contract gives the government delivery team enough flexibility to adjust feature prioritization and delivery schedule as the project evolves</li>
  <li>Contract ensures open source solutions are evaluated when technology choices are made</li>
  <li>Contract specifies that software and data generated by third parties remains under our control, and can be reused and released to the public as appropriate and in accordance with the law</li>
  <li>Contract allows us to use tools, services, and hosting from vendors with a variety of pricing models, including fixed fees and variable models like “pay-for-what-you-use” services</li>
  <li>Contract specifies a warranty period where defects uncovered by the public are addressed by the vendor at no additional cost to the government</li>
  <li>Contract includes a transition of services period and transition-out plan</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>What is the scope of the project? What are the key deliverables?</li>
  <li>What are the milestones? How frequent are they?</li>
  <li>What are the performance metrics defined in the contract (e.g., response time, system uptime, time period to address priority issues)?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 6</h6>
      <h2>Assign one leader and hold that person accountable</h2>

      <p>There must be a single product owner who has the authority and responsibility to assign tasks and work elements; make business, product, and technical decisions; and be accountable for the success or failure of the overall service. This product owner is ultimately responsible for how well the service meets the needs of its users, which is how a service should be evaluated. The product owner is responsible for ensuring that features are built and managing the feature and bug backlogs.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>A product owner has been identified</li>
  <li>All stakeholders agree that the product owner has the authority to assign tasks and make decisions about features and technical implementation details</li>
  <li>The product owner has a product management background with technical experience to assess alternatives and weigh tradeoffs</li>
  <li>The product owner has a work plan that includes budget estimates and identifies funding sources</li>
  <li>The product owner has a strong relationship with the contracting officer</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>Who is the product owner?</li>
  <li>What organizational changes have been made to ensure the product owner has sufficient authority over and support for the project?</li>
  <li>What does it take for the product owner to add or remove a feature from the service?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 7</h6>
      <h2>Bring in experienced teams</h2>

      <p>We need talented people working in government who have experience creating modern digital services. This includes bringing in seasoned product managers, engineers, and designers. When outside help is needed, our teams should work with contracting officers who understand how to evaluate third-party technical competency so our teams can be paired with contractors who are good at both building and delivering effective digital services. The makeup and experience requirements of the team will vary depending on the scope of the project.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Member(s) of the team have experience building popular, high-traffic digital services</li>
  <li>Member(s) of the team have experience designing mobile and web applications</li>
  <li>Member(s) of the team have experience using automated testing frameworks</li>
  <li>Member(s) of the team have experience with modern development and operations (DevOps) techniques like continuous integration and continuous deployment</li>
  <li>Member(s) of the team have experience securing digital services</li>
  <li>A Federal contracting officer is on the internal team if a third party will be used for development work</li>
  <li>A Federal budget officer is on the internal team or is a partner</li>
  <li>The appropriate privacy, civil liberties, and/or legal advisor for the department or agency is a partner</li>
</ol>

    </div>
  
    <div>
      <h6>PLAY 8</h6>
      <h2>Choose a modern technology stack</h2>

      <p>The technology decisions we make need to enable development teams to work efficiently and enable services to scale easily and cost-effectively. Our choices for hosting infrastructure, databases, software frameworks, programming languages and the rest of the technology stack should seek to avoid vendor lock-in and match what successful modern consumer and enterprise software companies would choose today. In particular, digital services teams should consider using open source, cloud-based, and commodity solutions across the technology stack, because of their widespread adoption and support by successful consumer and enterprise technology companies in the private sector.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Choose software frameworks that are commonly used by private-sector companies creating similar services</li>
  <li>Whenever possible, ensure that software can be deployed on a variety of commodity hardware types</li>
  <li>Ensure that each project has clear, understandable instructions for setting up a local development environment, and that team members can be quickly added or removed from projects</li>
  <li><a href="https://www.obamawhitehouse.gov/sites/default/files/omb/assets/egov_docs/memotociostechnologyneutrality.pdf">Consider open source software solutions</a> at every layer of the stack</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>What is your development stack and why did you choose it?</li>
  <li>Which databases are you using and why did you choose them?</li>
  <li>How long does it take for a new team member to start contributing?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 9</h6>
      <h2>Deploy in a flexible hosting environment</h2>

      <p>Our services should be deployed on flexible infrastructure, where resources can be provisioned in real-time to meet spikes in traffic and user demand. Our digital services are crippled when we host them in data centers that market themselves as “cloud hosting” but require us to manage and maintain hardware directly. This outdated practice wastes time, weakens our disaster recovery plans, and results in significantly higher costs.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Resources are provisioned on demand</li>
  <li>Resources scale based on real-time user demand</li>
  <li>Resources are provisioned through an API</li>
  <li>Resources are available in multiple regions</li>
  <li>We only pay for resources we use</li>
  <li>Static assets are served through a content delivery network</li>
  <li>Application is hosted on commodity hardware</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>Where is your service hosted?</li>
  <li>What hardware does your service use to run?</li>
  <li>What is the demand or usage pattern for your service?</li>
  <li>What happens to your service when it experiences a surge in traffic or load?</li>
  <li>How much capacity is available in your hosting environment?</li>
  <li>How long does it take you to provision a new resource, like an application server?</li>
  <li>How have you designed your service to scale based on demand?</li>
  <li>How are you paying for your hosting infrastructure (e.g., by the minute, hourly, daily, monthly, fixed)?</li>
  <li>Is your service hosted in multiple regions, availability zones, or data centers?</li>
  <li>In the event of a catastrophic disaster to a datacenter, how long will it take to have the service operational?</li>
  <li>What would be the impact of a prolonged downtime window?</li>
  <li>What data redundancy do you have built into the system, and what would be the impact of a catastrophic data loss?</li>
  <li>How often do you need to contact a person from your hosting provider to get resources or to fix an issue?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 10</h6>
      <h2>Automate testing and deployments</h2>

      <p>Today, developers write automated scripts that can verify thousands of scenarios in minutes and then deploy updated code into production environments multiple times a day. They use automated performance tests which simulate surges in traffic to identify performance bottlenecks. While manual tests and quality assurance are still necessary, automated tests provide consistent and reliable protection against unintentional regressions, and make it possible for developers to confidently release frequent updates to the service.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Create automated tests that verify all user-facing functionality</li>
  <li>Create unit and integration tests to verify modules and components</li>
  <li>Run tests automatically as part of the build process</li>
  <li>Perform deployments automatically with deployment scripts, continuous delivery services, or similar techniques</li>
  <li>Conduct load and performance tests at regular intervals, including before public launch</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>What percentage of the code base is covered by automated tests?</li>
  <li>How long does it take to build, test, and deploy a typical bug fix?</li>
  <li>How long does it take to build, test, and deploy a new feature into production?</li>
  <li>How frequently are builds created?</li>
  <li>What test tools are used?</li>
  <li>Which deployment automation or continuous integration tools are used?</li>
  <li>What is the estimated maximum number of concurrent users who will want to use the system?</li>
  <li>How many simultaneous users could the system handle, according to the most recent capacity test?</li>
  <li>How does the service perform when you exceed the expected target usage volume? Does it degrade gracefully or catastrophically?</li>
  <li>What is your scaling strategy when demand increases suddenly?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 11</h6>
      <h2>Manage security and privacy through reusable processes</h2>

      <p>Our digital services have to protect sensitive information and keep systems secure. This is typically a process of continuous review and improvement which should be built into the development and maintenance of the service. At the start of designing a new service or feature, the team lead should engage the appropriate privacy, security, and legal officer(s) to discuss the type of information collected, how it should be secured, how long it is kept, and how it may be used and shared. The sustained engagement of a privacy specialist helps ensure that personal data is properly managed. In addition, a key process to building a secure service is comprehensively testing and certifying the components in each layer of the technology stack for security vulnerabilities, and then to re-use these same pre-certified components for multiple services.</p>

<p>The following checklist provides a starting point, but teams should work closely with their privacy specialist and security engineer to meet the needs of the specific service.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Contact the appropriate privacy or legal officer of the department or agency to determine whether a System of Records Notice (SORN), Privacy Impact Assessment, or other review should be conducted</li>
  <li>Determine, in consultation with a records officer, what data is collected and why, how it is used or shared, how it is stored and secured, and how long it is kept</li>
  <li>Determine, in consultation with a privacy specialist, whether and how users are notified about how personal information is collected and used, including whether a privacy policy is needed and where it should appear, and how users will be notified in the event of a security breach</li>
  <li>Consider whether the user should be able to access, delete, or remove their information from the service</li>
  <li>“Pre-certify” the hosting infrastructure used for the project using FedRAMP</li>
  <li>Use deployment scripts to ensure configuration of production environment remains consistent and controllable</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>Does the service collect personal information from the user?  How is the user notified of this collection?</li>
  <li>Does it collect more information than necessary? Could the data be used in ways an average user wouldn’t expect?</li>
  <li>How does a user access, correct, delete, or remove personal information?</li>
  <li>Will any of the personal information stored in the system be shared with other services, people, or partners?</li>
  <li>How and how often is the service tested for security vulnerabilities?</li>
  <li>How can someone from the public report a security issue?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 12</h6>
      <h2>Use data to drive decisions</h2>

      <p>At every stage of a project, we should measure how well our service is working for our users. This includes measuring how well a system performs and how people are interacting with it in real-time. Our teams and agency leadership should carefully watch these metrics to find issues and identify which bug fixes and improvements should be prioritized. Along with monitoring tools, a feedback mechanism should be in place for people to report issues directly.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Monitor system-level resource utilization in real time</li>
  <li>Monitor system performance in real-time (e.g. response time, latency, throughput, and error rates)</li>
  <li>Ensure monitoring can measure median, 95th percentile, and 98th percentile performance</li>
  <li>Create automated alerts based on this monitoring</li>
  <li>Track concurrent users in real-time, and monitor user behaviors in the aggregate to determine how well the service meets user needs</li>
  <li>Publish metrics internally</li>
  <li>Publish metrics externally</li>
  <li>Use an experimentation tool that supports multivariate testing in production</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>What are the key metrics for the service?</li>
  <li>How have these metrics performed over the life of the service?</li>
  <li>Which system monitoring tools are in place?</li>
  <li>What is the targeted average response time for your service? What percent of requests take more than 1 second, 2 seconds, 4 seconds, and 8 seconds?</li>
  <li>What is the average response time and percentile breakdown (percent of requests taking more than 1s, 2s, 4s, and 8s) for the top 10 transactions?</li>
  <li>What is the volume of each of your service’s top 10 transactions? What is the percentage of transactions started vs. completed?</li>
  <li>What is your service’s monthly uptime target?</li>
  <li>What is your service’s monthly uptime percentage, including scheduled maintenance? Excluding scheduled maintenance?</li>
  <li>How does your team receive automated alerts when incidents occur?</li>
  <li>How does your team respond to incidents? What is your post-mortem process?</li>
  <li>Which tools are in place to measure user behavior?</li>
  <li>What tools or technologies are used for A/B testing?</li>
  <li>How do you measure customer satisfaction?</li>
</ul>

    </div>
  
    <div>
      <h6>PLAY 13</h6>
      <h2>Default to open</h2>

      <p>When we collaborate in the open and publish our data publicly, we can improve Government together. By building services more openly and publishing open data, we simplify the public’s access to government services and information, allow the public to contribute easily, and enable reuse by entrepreneurs, nonprofits, other agencies, and the public.</p>

<h3 id="checklist">Checklist</h3>
<ol>
  <li>Offer users a mechanism to report bugs and issues, and be responsive to these reports</li>
  <li>Provide datasets to the public, in their entirety, through bulk downloads and APIs (application programming interfaces)</li>
  <li>Ensure that data from the service is explicitly in the public domain, and that rights are waived globally via an international public domain dedication, such as the “Creative Commons Zero” waiver</li>
  <li>Catalog data in the agency’s enterprise data inventory and add any public datasets to the agency’s public data listing</li>
  <li>Ensure that we maintain the rights to all data developed by third parties in a manner that is releasable and reusable at no cost to the public</li>
  <li>Ensure that we maintain contractual rights to all custom software developed by third parties in a manner that is publishable and reusable at no cost</li>
  <li>When appropriate, create a versioned API for third parties and internal users to interact with the service directly</li>
  <li>When appropriate, publish source code of projects or components online</li>
  <li>When appropriate, share your development process and progress publicly</li>
</ol>

<h3 id="key-questions">Key Questions</h3>
<ul>
  <li>How are you collecting user feedback for bugs and issues?</li>
  <li>If there is an API, what capabilities does it provide? Is it versioned? Who uses it? How is it documented?</li>
  <li>If the codebase has not been released under an open source license, explain why.</li>
  <li>What components are made available to the public as open source?</li>
  <li>What datasets are made available to the public?</li>
</ul>

    </div>
  
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Penn to reduce graduate admissions, rescind acceptances amid research cuts (197 pts)]]></title>
            <link>https://www.thedp.com/article/2025/02/penn-graduate-student-class-size-cut-trump-funding</link>
            <guid>43144940</guid>
            <pubDate>Sun, 23 Feb 2025 00:37:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thedp.com/article/2025/02/penn-graduate-student-class-size-cut-trump-funding">https://www.thedp.com/article/2025/02/penn-graduate-student-class-size-cut-trump-funding</a>, See on <a href="https://news.ycombinator.com/item?id=43144940">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
			

										<figure>
					<a href="https://www.thedp.com/multimedia/4e0bcb26-b4cc-46e2-a584-8dad5b39289f">
						<img src="https://snworksceo.imgix.net/dpn/a9857926-a95e-4060-b290-a146d70c0845.sized-1000x1000.jpg?w=1000" alt="cyl-6903">
					</a>
					<figcaption>
						<p>On Feb. 21, Penn told departments in the School of Arts and Sciences to institute cuts to graduate student admissions.&nbsp;</p>
																				Credit: <a href="https://www.thedp.com/staff/chenyao-liu">Chenyao Liu</a> 																									</figcaption>
				</figure>
			

						  		
	<p>Penn directed department chairs to significantly reduce admissions rates across graduate programs in the face of federal research funding cuts, multiple faculty members told The Daily Pennsylvanian.
</p>
<p>On Friday, Penn notified department chairs that it will cut admissions across graduate programs, a decision faculty members say was made after programs had already accepted students. Professors expressed frustration over the lack of transparency from the University, with some attributing the cuts to broader funding issues — including a proposed $240 million <a href="https://www.thedp.com/article/2025/02/penn-uncertainty-remains-nih-funding-lawsuit-research" target="_blank">funding reduction</a> from the National Institutes of Health — and warned that the decision will impact Penn’s research and educational mission, particularly within the School of Arts and Sciences.
		</p>
<hr>
	<center>
<!-- gryphon/ads/rectangle_mobile_top.tpl -->

</center>
	<hr>
	<center>
<!-- /12234093/VidCrunch_Video -->

</center>

		
<p>Requests for comment were left with a University spokesperson and a spokesperson from the Office of the Provost.&nbsp;
</p>
<p>A Penn professor, who requested anonymity due to fear of retribution, told the DP that the decision appeared to be “last minute” and came after departments had already informed the University of the students who were selected for graduate programs.&nbsp;
				</p>

	
	
<p>“We go through hundreds of applications, we interviewed dozens of finalists, and basically all that work was just for naught,” the professor said. “We just wasted half of those people’s time because our list just got cut by more than half.”
</p>
<p>The professor added that the University “pulled the rug out” from many faculty members, some of whom had already offered acceptances to students they had thought were admitted — only to now face the possibility of having to cut those students from the program. The professor said that their department — which submitted its choices for admits to its graduate program on Feb. 14 — will be forced to rescind the acceptances of 10 of the 17 students.
	</p>
<hr>
	<center>
<!-- gryphon/ads/rectangle_mobile_bottom.tpl -->

</center>
	<hr>

			  		
<p>“This whole thing about rescinding offers is just absolutely deplorable,” the professor said.&nbsp;
</p>
<p>The DP could not confirm how many schools and departments will be affected by these cuts to admissions at the time of publication. In statements and interviews with the DP, SAS faculty members said that all departments within the school have been notified to reduce the size of their graduate programs.&nbsp;
</p>
<p>Another Penn professor — who also requested anonymity due to a fear of retribution — wrote in a statement to the DP that SAS called an emergency meeting on Friday evening to address the admissions cuts and “decide on collective action.”
</p>
<p>“On the whole, people were very upset, complaining about lack of transparency and consultation and about decisions being imposed by the [Penn] administration without proper explanation,” the professor wrote.
</p>
<p>The professor noted that many faculty members voiced concerns about how the University’s actions will impact Penn’s “educational mission” and were upset about a “lack of proportionality between the relatively small percentage of the lost income versus the large 35% cut in [graduate] programs.”
</p>
<p>While the University did not inform the departments why it was instituting funding cuts, a professor noted that it could be a response to 1968 Wharton graduate and President Donald Trump’s executive actions, <a href="https://www.thedp.com/article/2025/01/penn-graduate-worker-union-rally-contract" target="_blank">graduate students’ unionization efforts</a>, or simply because “[Penn doesn’t] believe in the humanities.”
</p>
<p>While some graduate chairs at the Friday meeting expressed concerns over graduate programs “being punished for unionization,” the majority of faculty members did not “seem to agree” that the cuts were in response to organized labor efforts, according to a professor who attended the meeting.&nbsp;
</p>
<p>Penn has seen a recent uptick in campus union organizing. In May 2024, Penn’s graduate student workers <a href="https://www.thedp.com/article/2024/05/penn-graduation-issue-graduate-workers-union-roundup" target="_blank">voted to unionize</a> by an overwhelming majority. Last month, following continued engagement from union groups, around 200 people gathered at a <a href="https://www.thedp.com/article/2025/01/penn-graduate-worker-union-rally-contract" target="_blank">rally in front of College Hall</a> in support of securing a graduate student worker contract with the University.&nbsp;
</p>
<p>A Perelman School of Medicine professor, who requested anonymity due to fear of retribution, said that the school was told to make cuts to Ph.D. programs prior to the NIH funding cuts, but additional cuts have been implemented following executive actions from the Trump administration. The professor expressed concern that Penn may have to cut other programs within the school to account for the loss of federal funding.&nbsp;
</p>
<p>On Feb. 7, the NIH<a href="https://www.thedp.com/article/2025/02/penn-uncertainty-remains-nih-funding-lawsuit-research" target="_blank"> proposed a funding cut</a> that could cost Penn $240 million. While a judge temporarily halted the changes following Penn and 12 other universities bringing a lawsuit against the NIH, the cut — a 15% cap on indirect costs — could stunt the development of graduate programs.
		</p>

		
<p>Indirect funding typically covers overhead research expenses, including equipment, facilities, and administrative expenditures that cannot be claimed as direct costs. Although the NIH does not fund individual graduate programs, indirect grants support academic staff, and cuts could spread departmental resources thin.&nbsp;
</p>
<p>In a Feb. 11 <a href="https://www.thedp.com/article/2025/02/penn-jameson-addresses-lawsuit-nih-funding-cuts" target="_blank">statement</a> responding to the NIH funding cut, Interim Penn President Larry Jameson reiterated the University’s commitment to ongoing research.
</p>
<p>“I want to emphasize that Penn has long been a leader in research, resilience, and adaptation,” Jameson wrote in an email to the Penn community. “Our community is strong, and we will continue our groundbreaking research, advocate forcefully, and take the steps needed to sustain our mission.”
	

							</p>
<div>
  <p>The Daily Pennsylvanian is an independent, student-run newspaper. Please consider <a href="https://host.nxt.blackbaud.com/donor-form/?svcid=tcs&amp;formId=2a8f65aa-ece3-49c4-98c1-8b4da49881bd&amp;envid=p-BbGbRoTNyEqlmBrbIkE5nw&amp;zone=usa">making a donation</a> to support the coverage that shapes the University. Your generosity ensures a future of strong journalism at Penn.</p>
  <p><a href="https://host.nxt.blackbaud.com/donor-form/?svcid=tcs&amp;formId=2a8f65aa-ece3-49c4-98c1-8b4da49881bd&amp;envid=p-BbGbRoTNyEqlmBrbIkE5nw&amp;zone=usa" target="_blank" rel="noopener noreferrer">Donate</a>
</p></div>

      

						        		              
      

<div>
  <h2>More Like This</h2>
  
  </div>
	</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ask for no, don't ask for yes (2022) (450 pts)]]></title>
            <link>https://www.mooreds.com/wordpress/archives/3518</link>
            <guid>43144611</guid>
            <pubDate>Sat, 22 Feb 2025 23:55:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.mooreds.com/wordpress/archives/3518">https://www.mooreds.com/wordpress/archives/3518</a>, See on <a href="https://news.ycombinator.com/item?id=43144611">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">
			
			            
			
								
					<article id="post-3518">
 <div>
 		<p>I think it is important to have a bias for action. Like anything else, this is something you can make a habit of. Moving forward allows you to make progress. I don’t know about you, but I’ve frozen up in the past not knowing what the right path was for me. Moving forward, even the smallest possible step, helped break that stasis.</p>
<p>One habit I like is to ask for no, not yes. Note that this is based on my experience at small companies (&lt; 200 employees) where a lot of my experience has been. I’m not sure how it’d work in a big company, non-profit, or government.</p>
<p>When you have something you want to do and that you feel is in scope for your position, but you want a bit of reassurance or to let the boss know what you are up to, it’s common to reach out and ask them for permission. Don’t. Don’t ask for a yes. Instead, <strong>offer a chance to say no, but with a deadline</strong>.</p>
<p>Let’s see how this works.</p>
<p>Suppose I want to set up a new GitHub action that I feel will really improve the quality of our software. This isn’t whimsy, I’ve done some research and tested it locally. I may have even asked a former colleague how they used this GitHub action.</p>
<p>But I’m not quite sure. I want to let my boss know that I’ll be modifying the repository.</p>
<p>I could say “hey, boss, can we install action X? It’ll help with the XYZ problems we’ve been having.”</p>
<p>If you have a busy boss (and most people do), this is going to require a bit of work on their part to say “yes”.</p>
<p>They’ll want to review the XYZ problem, think about how X will solve it and maybe do some thinking or prioritization about how this fits in with other work. Or maybe they’ll want you to share what you know. It may fall off their plate. You will probably have to remind them a few times to get around to saying “yes”. It might be a more pressing issue for you</p>
<p>Now, let’s take the alternative approach.”Hey, boss, I am going to install action X, which should solve the XYZ problems we’ve been having. Will take care of this on Monday unless I hear differently from you.”</p>
<p>Do you see the change in tone?</p>
<p>You are saying (without being explicit) that you “got it” and are going to handle this issue. The boss can still weigh in if they want to, but they don’t have to. If they forget about it or other issues pop up, you still proceed. This lets you keep moving forward and solving problems while keeping the boss informed and allowing them to add their two cents if it is important enough.</p>
<p>You can also use this approach with a group of people.</p>
<p>By the way, the deadline is critical too. Which would you respond to more quickly, if it was Jan 15, all other things being equal and assuming a response was needed?</p>
<ul>
<li>“I’m going to do task X.”</li>
<li>“I’m going to do task X on Jan 17.”</li>
<li>“I’m going to do task X on Feb 15.”</li>
</ul>
<p>I would respond to the second one, which has a deadline in the near future. I think that is the way most folks work.</p>
<p>Again, pursue this approach for problems you feel are in the scope of your role but that you want to inform the boss about. It’s great when you want to <strong>offer</strong> a chance for feedback, but you are confident enough in the course of action that you don’t <strong>need</strong> feedback.</p>
		            </div>
</article><!-- #post-3518 -->
				
			
                        	
	
	
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Vine: A programming language based on Interaction Nets (167 pts)]]></title>
            <link>https://vine.dev/</link>
            <guid>43144040</guid>
            <pubDate>Sat, 22 Feb 2025 22:43:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://vine.dev/">https://vine.dev/</a>, See on <a href="https://news.ycombinator.com/item?id=43144040">Hacker News</a></p>
<div id="readability-page-1" class="page">
    
    
    <svg id="logo" xmlns="http://www.w3.org/2000/svg" viewBox="0 25 200 150"> <defs>  </defs> <rect id="bg_square" data-name="bg square" y="0" width="200" height="200"></rect> <path id="VI" d="m77.91,109.3l-13.56-37.25h0c-.2-.56-.32-1.16-.32-1.8,0-2.9,2.35-5.26,5.26-5.26h0c1.38,0,2.5-1.12,2.5-2.5s-1.12-2.5-2.5-2.5h-35c-1.38,0-2.5,1.12-2.5,2.5s1.12,2.5,2.5,2.5h0c4.63,0,8.57,2.94,10.07,7.05h0s20.97,57.61,20.97,57.61h0c.15.42.24.88.24,1.36,0,2.2-1.78,3.98-3.98,3.98-1.38,0-2.5,1.12-2.5,2.5s1.12,2.5,2.5,2.5h35c1.38,0,2.5-1.12,2.5-2.5s-1.12-2.5-2.5-2.5c-2.2,0-3.98-1.78-3.98-3.98,0-.48.08-.94.24-1.36h0s20.97-57.61,20.97-57.61h0c1.5-4.11,5.44-7.05,10.07-7.05h0s0,0,0,0c4.14,0,7.5,3.36,7.5,7.5v55c0,4.14-3.36,7.5-7.5,7.5-1.38,0-2.5,1.12-2.5,2.5s1.12,2.5,2.5,2.5h35c1.38,0,2.5-1.12,2.5-2.5s-1.12-2.5-2.5-2.5c-4.14,0-7.5-3.36-7.5-7.5v-55c0-4.14,3.36-7.5,7.5-7.5,1.38,0,2.5-1.12,2.5-2.5s-1.12-2.5-2.5-2.5h-35s-35,0-35,0c-1.38,0-2.5,1.12-2.5,2.5s1.12,2.5,2.5,2.5h0c2.9,0,5.26,2.35,5.26,5.25,0,.63-.11,1.24-.32,1.8h0s-13.56,37.25-13.56,37.25h0c-.17.48-.63.82-1.17.82s-1-.34-1.17-.82h0Z"></path> <g id="vines"> <g id="I-2" data-name="I"> <path id="neg_6" data-name="neg 6" d="m148.61,91.65c.35-11.85-11.74-19-19.78-20.37"></path> <path id="pos_5" data-name="pos 5" d="m141.83,107.86c-4.33-8.42-11.63-12.97-1.05-26.8,4.74-6.19,5.31-13.11,4.73-18.41"></path> <path id="neg_5" data-name="neg 5" d="m141.83,107.86c-4.33-8.42-11.63-12.97-1.05-26.8,9.29-12.15,2.55-27.12,2.55-27.12"></path> <path id="pos_4" data-name="pos 4" d="m145.67,137.64c-19.46-18.78,2.58-33.34,2.95-45.99"></path> <path id="neg_4" data-name="neg 4" d="m149.7,141.12c-26.26-20.47-1.48-36.05-1.09-49.47"></path> </g> <g id="V"> <path id="neg_3" data-name="neg 3" d="m80.87,126.32c4.74-15.67,12.32-13.37,16.22-21.07,5.48-10.82-17.56-35.33,27.61-34.27"></path> <path id="neg_2" data-name="neg 2" d="m80.87,136.26c-16.03-6.51-8.31-18.84-10.94-34.13-1.96-11.38-11.43-24.92-30.5-25.57"></path> <path id="pos_1" data-name="pos 1" d="m80.11,138.31c8.35-19.7-20.29-22.88-21.37-41.23-.77-13.09,7.31-20.28-.95-34.82"></path> <path id="neg_1" data-name="neg 1" d="m65.28,157.29c39.7-38.06-5.17-37.15-6.53-60.21-.94-15.93,11.23-23.12-8.88-45.45"></path> <path id="pos_0" data-name="pos 0" d="m73.81,131.66c-6.29-6.98-1.78-17.31-3.88-29.53-.67-3.88-2.21-8.02-4.71-11.81"></path> <path id="neg_0" data-name="neg 0" d="m73.81,131.66c-6.29-6.98-1.78-17.31-3.88-29.53-.67-3.88-2.21-8.02-4.71-11.81"></path> </g> </g> <g id="vine_leaves" data-name="vine leaves"> <path id="leaf" d="m138.03,96.06c.99-6.16,1.83-3.49,5.59-7.36-.5,5.18-.87,6.59-5.59,7.36Z"></path> <path id="leaf-2" data-name="leaf" d="m143.03,70.12c-.7-6.74-1.77-3.9-5.61-8.34.22,5.65.53,7.2,5.61,8.34Z"></path> <path id="leaf-3" data-name="leaf" d="m137.11,112.84c.06-5.82-1.13-3.5-3.97-7.66-.36,4.84-.24,6.2,3.97,7.66Z"></path> <path id="leaf-4" data-name="leaf" d="m141.29,127.78c.03-6.55,1.34-3.91,4.61-8.54.32,5.45.16,6.98-4.61,8.54Z"></path> <path id="leaf-5" data-name="leaf" d="m98.65,88.69c1.24-6.98,2.15-3.93,6.49-8.28-.66,5.88-1.1,7.48-6.49,8.28Z"></path> <path id="leaf-6" data-name="leaf" d="m94.58,104.9c-.08-7.76-1.61-4.63-5.51-10.1-.35,6.46-.16,8.27,5.51,10.1Z"></path> <path id="leaf-7" data-name="leaf" d="m63.67,104.44c-1.85-4.71-.16-3.19.85-7.45,1.79,3.82,2.12,4.96-.85,7.45Z"></path> <path id="leaf-8" data-name="leaf" d="m85.32,121.46c3.59-4.87,3.13-2.19,8.1-3.87-2.73,4.25-3.68,5.3-8.1,3.87Z"></path> <path id="leaf-9" data-name="leaf" d="m101.63,71.95c6.12-3.09,3.04-3.08,5.85-8.3-5.26,2.24-6.61,3.1-5.85,8.3Z"></path> <path id="leaf-10" data-name="leaf" d="m58.55,70.15c-3.67-6.83-3.57-3.35-9.57-6.38,2.69,5.88,3.7,7.39,9.57,6.38Z"></path> <path id="leaf-11" data-name="leaf" d="m68.14,124.54c-.39-5.35-1.31-3.13-4.24-6.74.04,4.48.25,5.72,4.24,6.74Z"></path> </g> </svg>
    <a href="https://vine.dev/docs/" draggable="false">
      <span>description</span>
      <p>Docs</p>
    </a>
    <a href="https://github.com/VineLang/vine" draggable="false">
      <span>
        <svg viewBox="0 0 98 96" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z" fill="currentcolor"></path>
        </svg>
      </span>
      <p>GitHub</p>
    </a>
    <a href="https://discord.gg/bgUPV8KjDv" draggable="false">
      <span>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 127.14 96.36">
          <path fill="currentcolor" d="M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z"></path>
        </svg>
      </span>
      <p>Discord</p>
    </a>
  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gig workers worked more but earned less in 2024: study (140 pts)]]></title>
            <link>https://www.businessinsider.com/uber-lyft-instacart-gig-workers-saw-earnings-fall-2024-2025-2</link>
            <guid>43143871</guid>
            <pubDate>Sat, 22 Feb 2025 22:22:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.businessinsider.com/uber-lyft-instacart-gig-workers-saw-earnings-fall-2024-2025-2">https://www.businessinsider.com/uber-lyft-instacart-gig-workers-saw-earnings-fall-2024-2025-2</a>, See on <a href="https://news.ycombinator.com/item?id=43143871">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-component-type="content-lock" data-load-strategy="exclude" id="piano-inline-content-wrapper" data-piano-inline-content-wrapper="" data-user-status="anonymous" data-track-content="" data-post-type="post">
                                    <ul><li>Gig workers for <a target="_blank" href="https://www.businessinsider.com/uber-ceo-no-one-compete-against-tesla-elon-musk-2025-2" data-autoaffiliated="false" data-analytics-product-module="summary_bullets" rel="">Uber</a>, Instacart, and other services made less money for their time in 2024.</li><li>Even when delivery and ride-hailing drivers made more, their hours rose, too, a new report found.</li><li>Gig workers have said their jobs have gotten more competitive and less lucrative in recent years.</li></ul><p><a target="_blank" href="https://www.businessinsider.com/gig-drivers-pay-down-uber-lyft-doordash-gig-work-alternatives-2024-12#:~:text=Garin%20and%20other%20gig%20economy,some%20drivers%20to%20earn%20money." data-analytics-product-module="body_link" rel="">Gig workers</a> for Uber, Instacart, and other services made less money on average in 2024 — even as the number of hours that they worked rose, in some cases.</p><!-- Excluded mobile ad on desktop --><p>Uber hide-hailing drivers saw their earnings for 2024 fall 3.4% on average to $513 a week, according to a study released Tuesday by data analytics company <a target="_blank" href="https://gridwise.io/" data-analytics-product-module="body_link" rel=" nofollow">Gridwise</a>. At the same time, Uber drivers worked 0.8% more hours in 2024.</p><p><a target="_blank" href="https://www.businessinsider.com/uber-lyft-drivers-starting-own-ride-businesses-as-earnings-drop-2024-11" data-analytics-product-module="body_link" rel="">Lyft drivers</a>, meanwhile, worked 5.4% fewer hours in 2024, but saw their pay decline at a faster clip of 13.9% to $318 a week.</p><!-- Excluded mobile ad on desktop --><p>Workers who shop and deliver orders for Instacart saw their pay for the year decline 8% to $194. Their hours worked fell 4.9%.</p><p>"Drivers are earning less across all of the platforms," Ryan Green, the CEO of Gridwise, told Business Insider.</p><p>Meantime at DoorDash, gross weekly earnings rose 4.8% to $240 in 2024. Hourly earnings for those on the app fell, though, as the number of hours that gig workers spent on the app rose 5.2%.</p><!-- Excluded mobile ad on desktop --><p>Amazon Flex workers were in a similar situation. Their earnings soared 18.1% to $413 a week — just as their hours increased 20.4%.</p><p>Uber Eats workers made $178 a week, or 5.1% more than 2023. Average worker hours on the app rose 2.1%, though.</p><p>The only app where workers earned significantly more money for the same or less work was Favor, a service owned by Texas supermarket H-E-B that delivers online orders for the chain. There, workers saw their pay rise 3.4% to $155 a week in 2024 as their hours worked fell 13.1%.</p><!-- Excluded mobile ad on desktop --><p>In response to the report, an Uber spokesperson told BI that its drivers make more than $30 an hour on average.</p><p>A Lyft spokesperson referred BI to comments that CEO David Risher made this month on the company's earnings call, including that ride-hailing drivers on the app earned a collective $9 billion in 2024. That was "the highest amount of combine driver earnings on our platform ever," Risher said.</p><p>"Several of the claims made in the Gridwise report related to driver earnings and market share are likely based on different methodologies, painting an incomplete picture," a spokesperson from Lyft told BI.</p><!-- Excluded mobile ad on desktop --><p>An Instacart spokesperson called the report's findings "inaccurate and misleading."</p><p>"Shopper earnings remain steady across the Instacart platform, and we continue to hear from shoppers that Instacart creates rewarding, flexible earnings opportunities that allow them to earn on their own time and their own terms," the spokesperson said.</p><p>DoorDash declined to comment. Amazon and Favor did not respond to requests for comment.</p><!-- Excluded mobile ad on desktop --><p><strong><em>We want to hear from you. Are you a gig worker? What are the biggest benefits or challenges of gig work that you'd be comfortable sharing with a reporter? Please fill out this </em></strong><a target="_blank" rel=" nofollow" href="https://docs.google.com/forms/d/e/1FAIpQLScXCvCZBGpx-CGekj3lL69xe2aHFpVwR6D4vwkfh1_Nt0ZVKg/viewform?usp=sf_link" data-analytics-product-module="body_link"><strong><em><u>quick form</u></em></strong></a><strong><em>.</em></strong></p><p>Gridwise obtained the data for the report using its own app, which it markets to gig workers to track their earnings and expenses. The company analyzed 171 million trips and $1.9 billion worth of gig worker earnings documented by the app to compile its findings for 2024.</p><p>The report also found that the average restaurant delivery worker relied on tips for a majority — 53.4% — of their earnings. For grocery delivery workers, 45.7% of earnings came from tips.</p><!-- Excluded mobile ad on desktop --><p>Tips were much less significant for ride-hailing drivers, Gridwise found. Gratuities made up just 10.4% of earnings, per the report.</p><p>Gig workers have told BI that claiming good-paying rides and orders on the apps has gotten more competitive. Some workers have even set up their own businesses to offer rides or <a target="_blank" href="https://www.businessinsider.com/i-started-own-delivery-business-after-working-for-uber-eats-2024-2" data-analytics-product-module="body_link" rel="">deliver restaurant food</a> in hopes of making more money than they do on the apps.</p><p>Consumers, meanwhile, told Gridwise that they plan to keep using ride-hailing and <a target="_blank" href="https://www.businessinsider.com/us-diners-splurge-food-delivery-doordash-grubhub-ubereats-convenience-rules-2024-11" data-analytics-product-module="body_link" rel="">delivery services</a> despite the lingering effects of inflation on many items in Americans' monthly budgets.</p><!-- Excluded mobile ad on desktop --><p>Majorities of the 1,000 customers surveyed by Gridwise in January said that they thought prices on both ride-hailing apps like Uber and Lyft as well as grocery delivery apps like Instacart were "reasonable."</p><p>"They talk about being price-sensitive, but their actions reflect differently," Green said.</p><p><em>Do you work for Uber, Lyft, DoorDash, Instacart, or another service that uses gig workers and have a story idea to share? Reach out to this reporter at </em><a target="_blank" href="mailto:abitter@businessinsider.com" data-analytics-product-module="body_link" rel=" nofollow"><em>abitter@businessinsider.com</em></a></p>
                        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenBSD Innovations (424 pts)]]></title>
            <link>https://www.openbsd.org/innovations.html</link>
            <guid>43143777</guid>
            <pubDate>Sat, 22 Feb 2025 22:08:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.openbsd.org/innovations.html">https://www.openbsd.org/innovations.html</a>, See on <a href="https://news.ycombinator.com/item?id=43143777">Hacker News</a></p>
<div id="readability-page-1" class="page">

<hr>
<p>
    This is a list of software and ideas developed or maintained by the OpenBSD
    project, sorted in order of approximate introduction. Some of them are
    explained in detail in our <a href="https://www.openbsd.org/events.html">research papers</a>.
</p><hr>

<h3>Concepts</h3>

<ul>
    <li><a href="https://man.openbsd.org/ipsec.4">ipsec(4)</a>:
	Started by John Ioannidis, Angelos D. Keromytis, Niels Provos, and
	Niklas Hallqvist, imported February 20, 1997.  OpenBSD was the first
	free operating system to provide an IPSec stack.
    </li><li><a href="https://man.openbsd.org/inet6.4">inet6(4)</a>:
	First complete integration and adoption of IPv6 led by
	"Itojun" (Dr. Junichiro Hagino) [WIDE/KAME], Craig Metz [NRL], and
	Angelos D. Keromytis starting Jan 6, 1999.
	Almost fully operational Jun 6, 1999 during the
	<a href="https://www.openbsd.org/hackathons.html">first OpenBSD hackathon</a>.
	OpenBSD 2.7.
    </li><li><strong>Privilege separation</strong>:
	First implemented by
	<a href="http://www.citi.umich.edu/u/provos/ssh/privsep.html">Niels Provos</a>
	and Markus Friedl in OpenSSH in March 2002, released with OpenBSD 3.2.
	The concept is now used in many OpenBSD programs, for example
	<a href="https://man.openbsd.org/bgpd.8">bgpd(8)</a>,
	<a href="https://man.openbsd.org/dhclient.8">dhclient(8)</a>,
	<a href="https://man.openbsd.org/dhcpd.8">dhcpd(8)</a>,
	<a href="https://man.openbsd.org/dvmrpd.8">dvmrpd(8)</a>,
	<a href="https://man.openbsd.org/eigrpd.8">eigrpd(8)</a>,
	<a href="https://man.openbsd.org/file.1">file(1)</a>,
	<a href="https://man.openbsd.org/httpd.8">httpd(8)</a>,
	<a href="https://man.openbsd.org/iked.8">iked(8)</a>,
	<a href="https://man.openbsd.org/ldapd.8">ldapd(8)</a>,
	<a href="https://man.openbsd.org/ldpd.8">ldpd(8)</a>,
	<a href="https://man.openbsd.org/mountd.8">mountd(8)</a>,
	<a href="https://man.openbsd.org/npppd.8">npppd(8)</a>,
	<a href="https://man.openbsd.org/ntpd.8">ntpd(8)</a>,
	<a href="https://man.openbsd.org/ospfd.8">ospfd(8)</a>,
	<a href="https://man.openbsd.org/ospf6d.8">ospf6d(8)</a>,
	<a href="https://man.openbsd.org/pflogd.8">pflogd(8)</a>,
	<a href="https://man.openbsd.org/radiusd.8">radiusd(8)</a>,
	<a href="https://man.openbsd.org/relayd.8">relayd(8)</a>,
	<a href="https://man.openbsd.org/ripd.8">ripd(8)</a>,
	<a href="https://man.openbsd.org/script.1">script(1)</a>,
	<a href="https://man.openbsd.org/smtpd.8">smtpd(8)</a>,
	<a href="https://man.openbsd.org/syslogd.8">syslogd(8)</a>,
	<a href="https://man.openbsd.org/tcpdump.8">tcpdump(8)</a>,
	<a href="https://man.openbsd.org/tmux.1">tmux(1)</a>,
	<a href="https://man.openbsd.org/xconsole.1">xconsole(1)</a>,
	<a href="https://man.openbsd.org/xdm.1">xdm(1)</a>,
	<a href="https://man.openbsd.org/Xserver.1">Xserver(1)</a>,
	<a href="https://man.openbsd.org/ypldap.8">ypldap(8)</a>,
	<a href="https://man.openbsd.org/pkg_add.1">pkg_add(1)</a>,
	etc.
    </li><li><strong>Privilege revocation</strong>:
	Related to the work on privilege separation, some programs were refactored
	to drop privileges while holding onto a tricky resource such as a raw socket,
	reserved port, or modification-locked bpf(4) descriptor,
	for example
	<a href="https://man.openbsd.org/ping.8">ping(8)</a>,
	<a href="https://man.openbsd.org/traceroute.8">traceroute(8)</a>,
	etc.
    </li><li><strong>Stack protector</strong>:
	Developed since 2001 as "propolice" by Hiroaki Etoh. Integrated, and
	implemented for additional hardware platforms, by Federico G. Schwindt,
	Miod Vallat and Theo de Raadt.  OpenBSD 3.3 was the first operating
	system to enable it systemwide by default.
    </li><li><strong>W^X</strong>:
	First used for sparc, sparc64, alpha, and hppa in OpenBSD 3.3.
	Strictly enforced by default since OpenBSD 6.0: a program can only
	violate it if the executable is marked with <code>PT_OPENBSD_WXNEEDED</code>
	and it is located on a filesystem mounted with the <code>wxallowed</code>
	<a href="https://man.openbsd.org/mount.8">mount(8)</a> option.
    </li><li><strong>GOT and PLT protection</strong> by ld.so:
	first done as part of the W^X work in OpenBSD 3.3, by Dale Rahn and
	Theo de Raadt. The GOT and PLT regions are read-only outside of ld.so
	itself. Extended to the .init/.fini sections (constructors and
	destructors) in OpenBSD 3.4.
    </li><li><strong>ASLR</strong>:
	OpenBSD 3.4 was the first widely used operating system to
	provide it by default.
    </li><li><a href="https://man.openbsd.org/gcc-local.1">gcc-local(1)</a>
	__attribute__((__bounded__)) static analysis annotation
	and checking mechanism:
	Started by Anil Madhavapeddy on June 26, 2003
	and ported to GCC 4 by Nicholas Marriott.
	First released with OpenBSD 3.4.
    </li><li><a href="https://man.openbsd.org/malloc.3">malloc(3)</a>
	randomization implemented by Thierry Deval. Guard pages and randomized (delayed) free added by Ted Unangst.
	Reimplemented by <a href="https://www.openbsd.org/papers/eurobsdcon2009/otto-malloc.pdf">Otto Moerbeek</a>
	for OpenBSD 4.4.
    </li><li><strong>Position-independent executables (PIE)</strong>:
	OpenBSD 5.3 was the first widely used operating system to enable it
	globally by default, on seven hardware platforms.
	Implemented in November 2008 by
	<a href="https://www.openbsd.org/papers/nycbsdcon08-pie/">Kurt Miller</a>
	and enabled by default by
	<a href="https://www.openbsd.org/papers/asiabsdcon2015-pie-slides.pdf">Pascal Stumpf</a>
	in August 2012.
    </li><li><strong>Random-data memory</strong>:
	the ability to specify that a variable should be initialized
	at load time with random byte values (placed into a new ELF
	<b>.openbsd.randomdata</b> section) was implemented in
	OpenBSD 5.3 by Matthew Dempsky.
    </li><li><strong>Stack protector per shared object</strong>:
	using the random-data memory feature, each shared object was given its
	own stack protector cookie in OpenBSD 5.3 by Matthew Dempsky.
    </li><li><strong>Static-PIE</strong>:
	Position-independent static binaries for /bin, /sbin and ramdisks.
	Implemented for OpenBSD 5.7 by Kurt Miller and Mark Kettenis.
    </li><li><strong>SROP</strong>
	(<a href="https://man.openbsd.org/sigreturn.2">sigreturn(2)</a>
	oriented programming) mitigation: attacks researched by
	<a href="https://www.cs.vu.nl/~herbertb/papers/srop_sp14.pdf">Eric Bosman</a>
	and Herbert Bos in 2014, solution implemented by Theo de Raadt in May 2016,
	enabled by default since OpenBSD 6.0.
    </li><li><strong>Library order randomization</strong>:
	In <a href="https://man.openbsd.org/rc.8">rc(8)</a>, re-link
	<code>libc.so</code>, <code>libcrypto</code>, and <code>ld.so</code>
	on startup, placing the objects in a random order.
	Theo de Raadt and Robert Peichaer, May 2016,
	enabled by default since OpenBSD 6.0 and 6.2.
    </li><li>Kernel-assisted lazy-binding for W^X safety in multi-threaded programs.
	A new syscall <a href="https://man.openbsd.org/kbind.2">kbind(2)</a>
	permits lazy-binding to be W^X safe in multi-threaded programs.
	Implemented for OpenBSD 5.9 by Philip Guenther in July 2015.
    </li><li>Process layouts in memory tightened to remove execute permission from
	all segmented, non-instruction data and to remove write permission from
	data that is only modified during loading and relocation.
	By combining the RELRO (Read-Only after Relocation) design from the
	GNU project with the original ASLR work from OpenBSD 3.3 and
	strict lazy-binding work from OpenBSD 5.9, this is applied to not
	just a subset of programs and libraries but rather to all programs
	and libraries.
	Implemented for OpenBSD 6.1 by Philip Guenther in August 2016.
    </li><li>Use of <strong>fork+exec in privilege separated programs</strong>. The
	strategy is to give each process a fresh &amp; unique address space for
	ASLR, stack protector -- as protection against address space discovery attacks.
	Implemented first by
	Damien Miller (<a href="https://man.openbsd.org/sshd.8">sshd(8)</a> 2004),
	Claudio Jeker (<a href="https://man.openbsd.org/bgpd.8">bgpd(8)</a>, 2015),
	Eric Faurot (<a href="https://man.openbsd.org/smtpd.8">smtpd(8)</a>, 2016),
	Rafael Zalamena (various, 2016), and others.
    </li><li><strong>trapsleds</strong>:
	Reduction of incidental NOP instructions/sequences in the instruction
	stream which could be useful potentially for ROP attack methods to
	inaccurately target gadgets. These NOP sequences are converted into
	trap sequences where possible. Todd Mortimer and Theo de Raadt, June
	2017.
    </li><li><strong>Kernel relinking at boot</strong>:
	the .o files of the kernel are relinked in random order from a
	link-kit, before every reboot. This provides substantial interior
	randomization in the kernel's text and data segments for layout and
	relative branches/calls.  Basically a unique address space for each
	kernel boot, similar to the userland fork+exec model described above
	but for the kernel.  Theo de Raadt, June 2017.
    </li><li>Rearranged i386/amd64 register allocator order in
	<a href="https://man.openbsd.org/clang.1">clang(1)</a>
	to reduce polymorphic RET instructions:
	Todd Mortimer, November 20, 2017.
    </li><li>Reencoding of i386/amd64 instruction sequences to avoid
	embedded polymorphic RET instructions.  Enhancements to
	<a href="https://man.openbsd.org/clang.1">clang(1)</a>
	Todd Mortimer, April 28, 2018 and onwards.
    </li><li><b>MAP_STACK</b> addition to
	<a href="https://man.openbsd.org/mmap.2">mmap(2)</a>
	allows opportunistic verification that the stack-register
	points at stack memory, therefore catching pivots to non-stack
	memory (sometimes used in ROP attacks).
	Theo de Raadt, April 12, 2018.
    </li><li><b>RETGUARD</b> is a replacement for the <b>stack-protector</b>
	which uses a per-function random cookie (located in the read-only ELF
	<b>.openbsd.randomdata</b> section) to consistency-check the
	return address on the stack.  Implemented for amd64 and arm64
	by Todd Mortimer in OpenBSD 6.4, for mips64 in OpenBSD 6.7, and
	powerpc/powerpc64 in OpenBSD 6.9.  amd64 system call stubs also
	protected in OpenBSD 7.3.
    </li><li><b>MAP_CONCEAL</b> addition to
	<a href="https://man.openbsd.org/mmap.2">mmap(2)</a>
	disallows memory pages to be written to core dumps, preventing
	accidental exposure of private information.
	Theo de Raadt, Mark Kettenis and Scott Soule Cheloha,
	February 2, 2019.
    </li><li>Similar to the opportunistic verification in <b>MAP_STACK</b>,
	system-calls can no longer be performed from PROT_WRITE memory.
	Theo de Raadt, June 2, 2019.
    </li><li>System calls may only be performed from selected code regions
        (main program, ld.so, libc.so, and sigtramp).  The libc.so region
	is setup by <a href="https://man.openbsd.org/msyscall.2">msyscall(2)</a>.
	Theo de Raadt, November 28, 2019.<br>
	This mechanism was removed because later work on immutable memory +
	pinned system calls was even better.
    </li><li>Permissions (RWX, MAP_STACK, etc) on address space regions can be
	made immutable, so that <a href="https://man.openbsd.org/mmap.2">mmap(2)</a>,
	<a href="https://man.openbsd.org/mprotect.2">mprotect(2)</a> or
	<a href="https://man.openbsd.org/munmap.2">munmap(2)</a> fail with
	EPERM. Most of the program static address space is now automatically
	immutable (main program, ld.so, main stack, load-time shared libraries,
	and dlopen()'d libraries mapped without RTLD_NODELETE).  Programmers
	can request non-immutable static data using the "openbsd.mutable" section,
	or manually bring immutability to (page aligned heap objects) using
	<a href="https://man.openbsd.org/mimmutable.2">mimmutable(2)</a>.
	Theo de Raadt, Dec 4, 2022.
    </li><li>sshd random relinking at boot. Theo de Raadt. Jan 18, 2023.
    </li><li>Some architectures now have non-readable code ("xonly"), both from
	the perspective of userland reading its own memory, or the kernel
	trying to read memory in a system call.  Many sloppy practices in
	userland code had to be repaired to allow this.  The linker option
	<b>--execute-only</b> is enabled by default. In order of
	development: arm64, riscv64, hppa, amd64,
	powerpc64, powerpc (G5 only), octeon.
	sparc64 (sun4u only, unfinished).
	Mark Kettenis, Theo de Raadt, Visa Hankala, Miod Vallat,
	Dave Voutila, George Koehler in kernel and base, and
	Theo Buehler, Robert Nagy, Christian Weisgerber in ports.
	Dec 2022 - Feb 2023, still ongoing.
    </li><li>On all architectures which lack hardware-enforcement of xonly,
	system calls are now prevented from reading (via copyin/copyinst)
	inside the program's main text, ld.so text, sigtramp text, or
	libc.so text.
	Theo de Raadt, Jan 2023.
    </li><li>Architectures which lack xonly mmu-enforcement can still benefit
	from switching to --execute-only binaries if the cpu generates
	different traps for instruction-fetch versus data-fetch.  The
	VM system will not allow memory to be read before it was
	executed which is valuable together with library relinking.
	Architectures switched over include loongson.
	Theo de Raadt, Feb 2023.
    </li><li>ld.so and crt0 register the location of the
        <a href="https://man.openbsd.org/execve.2">execve(2)</a>
	libc syscall stub with the kernel using
        <a href="https://man.openbsd.org/pinsyscall.2">pinsyscall(2)</a>,
	after which the kernel only accepts an execve call from that
	specific location. Theo de Raadt, Feb 2023. Made redundant by
        <a href="https://man.openbsd.org/pinsyscalls.2">pinsyscalls(2)</a>
        which handles all system calls.
    </li><li>Mandatory enforcement of indirect branch targets (BTI on arm64,
        IBT on Intel amd64), unless a linker flag (-Wl,-z,nobtcfi) requests
        no enforcement.
    </li><li>The kernel and ld.so register the precise entry location of
	every system call used by a program, as described in the
	new ELF section <b>.openbsd.syscalls</b> inside ld.so and
	libc.so.  ld.so uses the new syscall
        <a href="https://man.openbsd.org/pinsyscalls.2">pinsyscalls(2)</a>
        to tell the kernel the precise entry location of system calls in libc.so.
	Since all syscall entries are now known to the kernel, the
	pininsyscall(SYS_execve) interface becomes redundant.
        <a href="https://man.openbsd.org/msyscall.2">msyscall(2)</a> mechanism
	also becomes redundant (and is removed a bit later), because immutable
	memory + pinsyscalls together are cheaper and more effective targeting.
	Theo de Raadt, Jan 2024.
    </li><li><b>-fret-clean</b> is a clang extension that, upon return from a function
	cleans the return value off the stack (one of many information leaks which
	can be used to determine where functions in a different DSO reside).
	The kernel, libc, libcrypto, and ld.so(1) are compiled with this option.
	amd64 only, for now.
</li></ul>

<h3>Functions</h3>

<ul>
    <li><a href="https://man.openbsd.org/issetugid.2">issetugid(2)</a>:
	Theo de Raadt, August 25, 1996, OpenBSD 2.0
    </li><li><a href="https://man.openbsd.org/arc4random.3">arc4random(3)</a>:
	David Mazieres, December 28, 1996, OpenBSD 2.1
    </li><li><a href="https://man.openbsd.org/bcrypt.3">bcrypt(3)</a>:
	Implemented by <a href="https://www.usenix.org/legacy/events/usenix99/provos/provos_html/node1.html">Niels Provos and David Mazieres</a>
	Imported February 13, 1997 and first released with OpenBSD 2.1.
    </li><li><a href="https://man.openbsd.org/strlcpy.3">strlcpy(3)</a>,
	<a href="https://man.openbsd.org/strlcat.3">strlcat(3)</a>:
	Todd Miller and Theo de Raadt, July 1, 1998, OpenBSD 2.4
    </li><li><a href="https://man.openbsd.org/strtonum.3">strtonum(3)</a>:
	Ted Unangst, Todd Miller, and Theo de Raadt, May 3, 2004, OpenBSD 3.6
    </li><li><a href="https://man.openbsd.org/imsg_init.3">imsg</a>:
	Message passing API, written by Henning Brauer.
	In libutil since May 26, 2010, OpenBSD 4.8;
	used by various daemons before that.
    </li><li><a href="https://man.openbsd.org/timingsafe_bcmp.3">timingsafe_bcmp(3)</a>:
	Damien Miller, July 13, 2010, OpenBSD 4.9
    </li><li><a href="https://man.openbsd.org/explicit_bzero.3">explicit_bzero(3)</a>:
	Ted Unangst and Matthew Dempsky, January 22, 2014, OpenBSD 5.5
    </li><li><a href="https://man.openbsd.org/ohash_init.3">ohash</a>:
	Written and maintained by Marc Espie.
	In libutil since May 12, 2014, OpenBSD 5.6;
	used by make(1) and m4(1) before that.
    </li><li><a href="https://man.openbsd.org/asr_run.3">asr</a>:
	Replacement resolver written and maintained by Eric Faurot.
	Imported April 14, 2012; activated on March 26, 2014, OpenBSD 5.6.
    </li><li><a href="https://man.openbsd.org/reallocarray.3">reallocarray(3)</a>:
	Theo de Raadt and Ted Unangst, April 22, 2014, OpenBSD 5.6
    </li><li><a href="https://man.openbsd.org/getentropy.2">getentropy(2)</a>:
	Matthew Dempsky and Theo de Raadt, June 13, 2014, OpenBSD 5.6
    </li><li><a href="https://man.openbsd.org/sendsyslog.2">sendsyslog(2)</a>:
	Theo de Raadt, July 10, 2014, OpenBSD 5.6
    </li><li><a href="https://man.openbsd.org/timingsafe_memcmp.3">timingsafe_memcmp(3)</a>:
	Matthew Dempsky, July 13, 2014, OpenBSD 5.6
    </li><li><a href="https://man.openbsd.org/pledge.2">pledge(2)</a>:
	Theo de Raadt, July 19, 2015, OpenBSD 5.9
    </li><li><a href="https://man.openbsd.org/getpwnam_shadow.3">getpwnam_shadow(3)</a>,
	<a href="https://man.openbsd.org/getpwuid_shadow.3">getpwuid_shadow(3)</a>:
	Ted Unangst and Theo de Raadt, November 18, 2015, OpenBSD 5.9
    </li><li><a href="https://man.openbsd.org/recallocarray.3">recallocarray(3)</a>:
	Otto Moerbeek, Joel Sing and Theo de Raadt, March 6, 2017, OpenBSD 6.1
    </li><li><a href="https://man.openbsd.org/freezero.3">freezero(3)</a>:
	Otto Moerbeek, April 10, 2017, OpenBSD 6.2
    </li><li><a href="https://man.openbsd.org/unveil.2">unveil(2)</a>:
	Theo de Raadt and Bob Beck, July 13, 2018, OpenBSD 6.4
    </li><li><a href="https://man.openbsd.org/malloc_conceal.3">malloc_conceal(3)</a>
	and
	<a href="https://man.openbsd.org/calloc_conceal.3">calloc_conceal(3)</a>:
	Otto Moerbeek, May 10, 2019, OpenBSD 6.5
    </li><li><a href="https://man.openbsd.org/ober_read_elements.3">ober</a>:
        ASN.1 basic encoding rules API, written by Claudio Jeker and
        Reyk Flöter, maintained by Rob Pierce and Martijn van Duren;
        started in 2006/07, moved to libutil on May 11, 2019, OpenBSD 6.6
</li></ul>


<h3>Programs and subsystems</h3>

<ul>
    <li><a href="https://man.openbsd.org/ypbind.8">ypbind(8)</a>,
	<a href="https://man.openbsd.org/ypset.8">ypset(8)</a>,
	<a href="https://man.openbsd.org/ypcat.1">ypcat(1)</a>,
	<a href="https://man.openbsd.org/ypmatch.1">ypmatch(1)</a>,
	<a href="https://man.openbsd.org/ypwhich.1">ypwhich(1)</a>,
	and libc support: Started by Theo de Raadt.
	Imported April 26, 1993 and first released with NetBSD 0.9.
    </li><li><a href="https://man.openbsd.org/ypserv.8">ypserv(8)</a>:
	Started by Mats O. Jansson in 1994.
	Imported October 23, 1995 and first released with OpenBSD 2.0.
    </li><li><a href="https://man.openbsd.org/mopd.8">mopd(8)</a>:
	Started by Mats O. Jansson in 1993.
	Imported September 21, 1996 and first released with OpenBSD 2.0.
    </li><li><a href="https://www.openbsd.org/anoncvs.html">AnonCVS</a>:
	Designed and implemented by Chuck Cranor and Theo de Raadt in 1995
	(<a href="https://www.openbsd.org/papers/anoncvs-paper.pdf">paper</a>,
	<a href="https://www.openbsd.org/papers/anoncvs-slides.pdf">slides</a>)
    </li><li><a href="https://man.openbsd.org/aucat.1">aucat(1)</a>:
	Started by Kenneth Stailey.
	Imported January 2, 1997 and first released with OpenBSD 2.1.
	Now maintained by Alexandre Ratchov.
    </li><li><a href="https://www.openssh.com/">OpenSSH</a>
	including <a href="https://man.openbsd.org/ssh.1">ssh(1)</a>,
	<a href="https://man.openbsd.org/scp.1">scp(1)</a>,
	<a href="https://man.openbsd.org/sftp.1">sftp(1)</a>,
	<a href="https://man.openbsd.org/ssh-add.1">ssh-add(1)</a>,
	<a href="https://man.openbsd.org/ssh-agent.1">ssh-agent(1)</a>,
	<a href="https://man.openbsd.org/ssh-keygen.1">ssh-keygen(1)</a>,
	<a href="https://man.openbsd.org/sshd.8">sshd(8)</a>,
	<a href="https://man.openbsd.org/sftp-server.8">sftp-server(8)</a>:
	Started by Aaron Campbell, Bob Beck, Dug Song, Markus Friedl,
	Niels Provos, and Theo de Raadt
	as a fork of SSH 1.2.12 by Tatu Ylonen.
	Imported September 26, 1999 and first released with OpenBSD 2.6.
	Now maintained by Markus Friedl, Damien Miller, Darren Tucker, and
	Theo de Raadt.
    </li><li><a href="https://man.openbsd.org/mg.1">mg(1)</a>:
	Started by Dave Conroy in November 1986.
	Imported February 25, 2000 and first released with OpenBSD 2.7.
	Now maintained by Mark Lumsden.
    </li><li><a href="https://man.openbsd.org/m4.1">m4(1)</a>:
	Originally implemented by Ozan Yigit and Richard A. O'Keefe for 4.3BSD-Reno.
	Considerably extended and maintained by Marc Espie since 1999.
    </li><li><a href="https://man.openbsd.org/pf.4">pf(4)</a>,
	<a href="https://man.openbsd.org/pfctl.8">pfctl(8)</a>,
	<a href="https://man.openbsd.org/pflogd.8">pflogd(8)</a>,
	<a href="https://man.openbsd.org/authpf.8">authpf(8)</a>,
	<a href="https://man.openbsd.org/ftp-proxy.8">ftp-proxy(8)</a>:
	Started by Daniel Hartmeier as a replacement for the non-free ipf by
	Darren Reed. Imported June 24, 2001 and first released with OpenBSD
	3.0. Now maintained by Henning Brauer.
    </li><li><a href="https://man.openbsd.org/OpenBSD-5.9/systrace.4">systrace(4)</a>,
	<a href="https://man.openbsd.org/OpenBSD-5.9/systrace.1">systrace(1)</a>:
	Started by Niels Provos.
	Imported June 4, 2002 and first released with OpenBSD 3.2.
	Deleted after OpenBSD 5.9 because
	<a href="https://man.openbsd.org/pledge.2">pledge(2)</a> is even better.
    </li><li><a href="https://man.openbsd.org/spamd.8">spamd(8)</a>:
	Written by Bob Beck. Imported December 21, 2002 and first released with
	OpenBSD 3.3.
    </li><li><a href="https://man.openbsd.org/dc.1">dc(1)</a>:
	Written and maintained by Otto Moerbeek.
	Imported September 19, 2003 and first released with OpenBSD 3.5.
    </li><li><a href="https://man.openbsd.org/bc.1">bc(1)</a>:
	Written and maintained by Otto Moerbeek.
	Imported September 25, 2003 and first released with OpenBSD 3.5.
    </li><li><a href="https://man.openbsd.org/sensorsd.8">sensorsd(8)</a>:
	Started by Henning Brauer.
	Imported September 24, 2003 and first released with OpenBSD 3.5.
	Reworked by Constantine A. Murenin.
    </li><li><a href="https://man.openbsd.org/pkg_add.1">pkg_add(1)</a>:
	Written and maintained by Marc Espie.
	Imported October 16, 2003 and first released with OpenBSD 3.5.
    </li><li><a href="https://man.openbsd.org/carp.4">carp(4)</a>:
	Written by Mickey Shalayeff, Markus Friedl, Marco Pfatschbacher,
	and Ryan McBride.
	Imported October 17, 2003 and first released with OpenBSD 3.5.
    </li><li><a href="https://www.openbgpd.org/">OpenBGPD</a>
	including <a href="https://man.openbsd.org/bgpd.8">bgpd(8)</a>
	and <a href="https://man.openbsd.org/bgpctl.8">bgpctl(8)</a>:
	Written and maintained by Henning Brauer and Claudio Jeker,
	and also maintained by Peter Hessler.
	Imported December 17, 2003 and first released with OpenBSD 3.5.
    </li><li><a href="https://man.openbsd.org/dhclient.8">dhclient(8)</a>:
	Started by Ted Lemon and Elliot Poger in 1996.
	Imported January 18, 2004 and first released with OpenBSD 3.5.
	Reworked by Henning Brauer.
	Now maintained by Kenneth Westerback.
    </li><li><a href="https://man.openbsd.org/dhcpd.8">dhcpd(8)</a>:
	Started by Ted Lemon in 1995.
	Imported April 13, 2004 and first released with OpenBSD 3.6.
	Reworked by Henning Brauer.
	Now maintained by Kenneth Westerback.
    </li><li><a href="https://man.openbsd.org/hotplugd.8">hotplugd(8)</a>:
	Started by Alexander Yurchenko.
	Imported May 30, 2004 and first released with OpenBSD 3.6.
    </li><li><a href="https://www.openntpd.org/">OpenNTPD</a>
	including <a href="https://man.openbsd.org/ntpd.8">ntpd(8)</a>
	and <a href="https://man.openbsd.org/ntpctl.8">ntpctl(8)</a>:
	Written and maintained by Henning Brauer.
	Imported May 31, 2004 and first released with OpenBSD 3.6.
	Portable version maintained by Brent Cook.
    </li><li><a href="https://man.openbsd.org/dpb.1">dpb(1)</a>:
	Started by Nikolay Sturm on August 10, 2004; first available for OpenBSD 3.6.
	Rewritten and maintained by Marc Espie since August 20, 2010.
    </li><li><a href="https://man.openbsd.org/ospfd.8">ospfd(8)</a>,
	<a href="https://man.openbsd.org/ospfctl.8">ospfctl(8)</a>:
	Started by Esben Norby and Claudio Jeker.
	Imported January 28, 2005 and first released with OpenBSD 3.7.
    </li><li><a href="https://man.openbsd.org/ifstated.8">ifstated(8)</a>:
	Started by Marco Pfatschbacher and Ryan McBride.
	Imported January 23, 2004 and first released with OpenBSD 3.8.
    </li><li><a href="https://man.openbsd.org/bioctl.8">bioctl(8)</a>:
	Started by Marco Peereboom.
	Imported March 29, 2005 and first released with OpenBSD 3.8.
    </li><li><a href="https://man.openbsd.org/hostapd.8">hostapd(8)</a>:
	Written by Reyk Flöter.
	Imported May 26, 2005 and first released with OpenBSD 3.8.
    </li><li><a href="https://man.openbsd.org/watchdogd.8">watchdogd(8)</a>:
	Started by Marc Balmer.
	Imported August 8, 2005 and first released with OpenBSD 3.8.
    </li><li><a href="https://man.openbsd.org/sdiff.1">sdiff(1)</a>:
	Written by Ray Lai.
	Imported December 27, 2005 and first released with OpenBSD 3.9.
    </li><li><a href="https://man.openbsd.org/dvmrpd.8">dvmrpd(8)</a>,
	<a href="https://man.openbsd.org/dvmrpctl.8">dvmrpctl(8)</a>:
	Started by Esben Norby.
	Imported June 1, 2006 and first released with OpenBSD 4.0.
    </li><li><a href="https://man.openbsd.org/ripd.8">ripd(8)</a>,
	<a href="https://man.openbsd.org/ripctl.8">ripctl(8)</a>:
	Started by Michele Marchetto.
	Imported October 18, 2006 and first released with OpenBSD 4.1.
    </li><li><a href="https://man.openbsd.org/pkg-config.1">pkg-config(1)</a>:
	Started by Chris Kuethe and Marc Espie.
	Imported November 27, 2006 and first released with OpenBSD 4.1.
	Now maintained by Jasper Lievisse Adriaanse.
    </li><li><a href="https://man.openbsd.org/relayd.8">relayd(8)</a>
	with <a href="https://man.openbsd.org/relayctl.8">relayctl(8)</a>:
	Started by Pierre-Yves Ritschard and Reyk Flöter.
	Imported December 16, 2006 and first released with OpenBSD 4.1.
	Now maintained by Sebastian Benoit.<br>
    </li><li><a href="https://man.openbsd.org/cwm.1">cwm(1)</a>:
	Started by <a href="https://monkey.org/~marius/cwm/README">Marius
	    Aamodt Eriksen</a> in 2004.
	Imported April 27, 2007 and first released with OpenBSD 4.2.
	Now maintained by Okan Demirmen.
	<a href="https://github.com/chneukirchen/cwm">Portable version</a>
	maintained by Leah Neukirchen.
    </li><li><a href="https://man.openbsd.org/ospf6d.8">ospf6d(8)</a>,
	<a href="https://man.openbsd.org/ospf6ctl.8">ospf6ctl(8)</a>:
	Started by Esben Norby and Claudio Jeker.
	Imported October 8, 2007 and first released with OpenBSD 4.2.
    </li><li><a href="https://man.openbsd.org/libtool.1">libtool(1)</a>:
	Written by Steven Mestdagh and Marc Espie.
	Imported October 28, 2007 and first available for OpenBSD 4.3.
	Now maintained by Marc Espie, Jasper Lievisse Adriaanse,
	and Antoine Jacoutot.
    </li><li><a href="https://man.openbsd.org/snmpd.8">snmpd(8)</a>:
	Started by Reyk Flöter.
	Imported December 5, 2007 and first released with OpenBSD 4.3.
	Now maintained by Martijn van Duren.
    </li><li><a href="https://man.openbsd.org/sysmerge.8">sysmerge(8)</a>:
	Written and maintained by Antoine Jacoutot,
	originally forked from mergemaster by Douglas Barton.
	Imported April 22, 2008, first released with OpenBSD 4.4.
    </li><li><a href="https://man.openbsd.org/ypldap.8">ypldap(8)</a>:
	Started by Pierre-Yves Ritschard.
	Imported June 26, 2008 and first released with OpenBSD 4.4.
    </li><li><a href="https://www.opensmtpd.org/">OpenSMTPD</a>
	including <a href="https://man.openbsd.org/smtpd.8">smtpd(8)</a>,
	<a href="https://man.openbsd.org/smtpctl.8">smtpctl(8)</a>,
	<a href="https://man.openbsd.org/makemap.8">makemap(8)</a>:
	Started by Gilles Chehade.
	Imported November 1, 2008 and first released with OpenBSD 4.6.
	Now maintained by Gilles Chehade and Eric Faurot.
    </li><li><a href="https://tmux.github.io/">tmux</a>,
	<a href="https://man.openbsd.org/tmux.1">tmux(1)</a>:
	Started in 2007 and maintained by Nicholas Marriott.
	Imported June 1, 2009, first released with OpenBSD 4.6.
    </li><li><a href="https://man.openbsd.org/ldpd.8">ldpd(8)</a>,
	<a href="https://man.openbsd.org/ldpctl.8">ldpctl(8)</a>:
	Started by Michele Marchetto.
	Imported June 1, 2009 and first released with OpenBSD 4.6.
	Now maintained by Claudio Jeker.
    </li><li><a href="https://mdocml.bsd.lv/">mandoc</a>
	including <a href="https://man.openbsd.org/mandoc.1">mandoc(1)</a>,
	<a href="https://man.openbsd.org/man.1">man(1)</a>,
	<a href="https://man.openbsd.org/apropos.1">apropos(1)</a>,
	<a href="https://man.openbsd.org/makewhatis.8">makewhatis(8)</a>,
	<a href="https://man.openbsd.org/man.cgi.8">man.cgi(8)</a>:
	Started by Kristaps Dzonsons in November 2008.
	Imported April 6, 2009, first released with OpenBSD 4.8.
	Now maintained by Ingo Schwarze.
    </li><li><a href="https://man.openbsd.org/ldapd.8">ldapd(8)</a>,
	<a href="https://man.openbsd.org/ldapctl.8">ldapctl(8)</a>:
	Written by Martin Hedenfalk.
	Imported May 31, 2010 and first released with OpenBSD 4.8.
    </li><li><a href="https://www.openiked.org/">OpenIKED</a>
	including <a href="https://man.openbsd.org/iked.8">iked(8)</a>
	and <a href="https://man.openbsd.org/ikectl.8">ikectl(8)</a>:
	Started by Reyk Flöter.
	Imported June 3, 2010 and first released with OpenBSD 4.8.
	Now maintained by Tobias Heider.
    </li><li><a href="https://man.openbsd.org/iscsid.8">iscsid(8)</a>,
	<a href="https://man.openbsd.org/iscsictl.8">iscsictl(8)</a>:
	Written and maintained by Claudio Jeker.
	Imported September 24, 2010 and first released with OpenBSD 4.9.
    </li><li><a href="https://man.openbsd.org/rc.d.8">rc.d(8)</a>,
	<a href="https://man.openbsd.org/rc.subr.8">rc.subr(8)</a>:
	Written and maintained by Robert Nagy and Antoine Jacoutot.
	Imported October 26, 2010 and first released with OpenBSD 4.9.
    </li><li><a href="https://man.openbsd.org/tftpd.8">tftpd(8)</a>:
	Written and maintained by David Gwynne.
	Imported March 2, 2012 and first released with OpenBSD 5.2.
    </li><li><a href="https://man.openbsd.org/npppd.8">npppd(8)</a>,
	<a href="https://man.openbsd.org/npppctl.8">npppctl(8)</a>:
	Started by Internet Initiative Japan Inc.
	Imported January 11, 2010, first released with OpenBSD 5.3.
	Maintained by YASUOKA Masahiko.
    </li><li><a href="https://man.openbsd.org/ldomd.8">ldomd(8)</a>,
	<a href="https://man.openbsd.org/ldomctl.8">ldomctl(8)</a>:
	Written and maintained by Mark Kettenis.
	Imported October 26, 2012 and first released with OpenBSD 5.3.
    </li><li><a href="https://man.openbsd.org/sndiod.8">sndiod(8)</a>:
	Written and maintained by Alexandre Ratchov.
	Imported November 23, 2012 and first released with OpenBSD 5.3.
    </li><li><a href="https://man.openbsd.org/cu.1">cu(1)</a>:
	Written and maintained by Nicholas Marriott.
	Imported July 10, 2012 and first released with OpenBSD 5.4.
    </li><li><a href="https://man.openbsd.org/identd.8">identd(8)</a>:
	Written and maintained by David Gwynne.
	Imported March 18, 2013 and first released with OpenBSD 5.4.
    </li><li><a href="https://man.openbsd.org/slowcgi.8">slowcgi(8)</a>:
	Written and maintained by Florian Obser.
	Imported May 23, 2013 and first released with OpenBSD 5.4.
    </li><li><a href="https://man.openbsd.org/signify.1">signify(1)</a>:
	Written and maintained by <a href="https://www.tedunangst.com/flak/post/signify">Ted Unangst</a>.
	Imported December 31, 2013 and first released with OpenBSD 5.5.
    </li><li><a href="https://man.openbsd.org/htpasswd.1">htpasswd(1)</a>:
	Written and maintained by Florian Obser.
	Imported March 17, 2014 and first released with OpenBSD 5.6.
    </li><li><a href="https://www.libressl.org/">LibreSSL</a>:
	Started by Ted Unangst, Bob Beck, Joel Sing, Miod Vallat, Philip Guenther,
	and Theo de Raadt on April 13, 2014, as a fork of OpenSSL 1.0.1g.
	First released with OpenBSD 5.6.
	Portable version maintained by Brent Cook.
    </li><li><a href="https://man.openbsd.org/httpd.8">httpd(8)</a>:
	Started by Reyk Flöter.
	Imported July 12, 2014 and first released with OpenBSD 5.6.
    </li><li><a href="https://man.openbsd.org/rcctl.8">rcctl(8)</a>:
	Written and maintained by Antoine Jacoutot.
	Imported August 19, 2014 and first released with OpenBSD 5.7.
    </li><li><a href="https://man.openbsd.org/file.1">file(1)</a>:
	Rewritten from scratch and maintained by Nicholas Marriott.
	Imported April 24, 2015 and first released with OpenBSD 5.8.
    </li><li><a href="https://man.openbsd.org/doas.1">doas(1)</a>:
	Written and maintained by Ted Unangst.
	Imported July 16, 2015 and first released with OpenBSD 5.8.
    </li><li><a href="https://man.openbsd.org/radiusd.8">radiusd(8)</a>:
	Written and maintained by YASUOKA Masahiko.
	Imported July 21, 2015 and first released with OpenBSD 5.8.
    </li><li><a href="https://man.openbsd.org/eigrpd.8">eigrpd(8)</a>,
	<a href="https://man.openbsd.org/eigrpctl.8">eigrpctl(8)</a>:
	Written and maintained by Renato Westphal.
	Imported October 2, 2015 and first released with OpenBSD 5.9.
    </li><li><a href="https://man.openbsd.org/vmm.4">vmm(4)</a>,
	<a href="https://man.openbsd.org/vmd.8">vmd(8)</a>,
	<a href="https://man.openbsd.org/vmctl.8">vmctl(8)</a>:
	Written by Mike Larkin and Reyk Flöter.
	Imported November 13, 2015 and first released with OpenBSD 5.9.
    </li><li><a href="https://man.openbsd.org/pdisk.8">pdisk(8)</a>:
	Originally written by Eryk Vershen in 1996-1998,
	rewritten and maintained by Kenneth Westerback since January 11, 2016
	and first released with OpenBSD 5.9.
    </li><li><a href="https://man.openbsd.org/mknod.8">mknod(8)</a>:
	Original version from Version 6 AT&amp;T UNIX (1975),
	last rewritten by Marc Espie on March 5, 2016
	and first released with OpenBSD 6.0.
    </li><li><a href="https://man.openbsd.org/audioctl.1">audioctl(1)</a>:
	Originally written by Lennart Augustsson in 1997,
	rewritten and maintained by Alexandre Ratchov since June 21, 2016
	and first released with OpenBSD 6.0.
    </li><li><a href="https://man.openbsd.org/acme-client.1">acme-client(1)</a>:
	Written by Kristaps Dzonsons, imported August 31, 2016; released
	with OpenBSD 6.1.
    </li><li><a href="https://man.openbsd.org/syspatch.8">syspatch(8)</a>:
	Written and maintained by Antoine Jacoutot.
	Imported September 5, 2016; released with OpenBSD 6.1.
    </li><li><a href="https://man.openbsd.org/ping.8">ping(8)</a>:
	Restructured to include IPv6 functionality and maintained by Florian Obser.
	The separate
	<a href="https://man.openbsd.org/OpenBSD-6.0/ping6.8">ping6(8)</a>
	was superseded on September 17, 2016,
	and the new, combined version was released with OpenBSD 6.1.
    </li><li><a href="https://man.openbsd.org/xenodm.1">xenodm(1)</a>:
	Cleaned-up fork of
	<a href="https://man.openbsd.org/OpenBSD-6.0/xdm.1">xdm(1)</a>
	maintained by Matthieu Herrb.
	Imported October 23, 2016; released with OpenBSD 6.1.
    </li><li><a href="https://man.openbsd.org/ocspcheck.8">ocspcheck(8)</a>:
	Written and maintained by Bob Beck.
	Imported January 24, 2017; released with OpenBSD 6.1.
    </li><li><a href="https://man.openbsd.org/slaacd.8">slaacd(8)</a>:
	Written and maintained by Florian Obser.
	Imported March 18, 2017; released with OpenBSD 6.2.
    </li><li><a href="https://man.openbsd.org/rad.8">rad(8)</a>:
	Written and maintained by Florian Obser.
	Imported July 10, 2018; released with OpenBSD 6.4.
    </li><li><a href="https://man.openbsd.org/unwind.8">unwind(8)</a>:
	Written and maintained by Florian Obser.
	Imported January 23, 2019; released with OpenBSD 6.5.
    </li><li><a href="https://man.openbsd.org/openrsync.1">openrsync(1)</a>:
	Written by Kristaps Dzonsons.
	Imported February 10, 2019; released with OpenBSD 6.5.
    </li><li><a href="https://man.openbsd.org/sysupgrade.8">sysupgrade(8)</a>:
        Written by Christian Weisgerber, Florian Obser, and Theo de Raadt.
        Imported April 25, 2019; released with OpenBSD 6.6.
    </li><li><a href="https://man.openbsd.org/snmp.1">snmp(1)</a>:
        Written and maintained by Martijn van Duren.
        Imported August 9, 2019; released with OpenBSD 6.6.
    </li><li><a href="https://man.openbsd.org/rpki-client.8">rpki-client(8)</a>:
        Written by Kristaps Dzonsons; maintained by Claudio Jeker,
        Theo Buehler, and Job Snijders.
        Imported June 17, 2019; released with OpenBSD 6.7.
    </li><li><a href="https://man.openbsd.org/resolvd.8">resolvd(8)</a>:
        Written and maintained by Florian Obser and Theo de Raadt.
        Imported February 24, 2021; released with OpenBSD 6.9.
    </li><li><a href="https://man.openbsd.org/dhcpleased.8">dhcpleased(8)</a>:
        Written and maintained by Florian Obser.
        Imported February 26, 2021; released with OpenBSD 6.9.
</li></ul>

<h3>Projects maintained by OpenBSD developers outside OpenBSD</h3>

<ul>
    <li><a href="https://www.sudo.ws/">sudo</a>:
	Started by Bob Coggeshall and Cliff Spencer around 1980.
	Imported November 18, 1999, first released with OpenBSD 2.7.
	Now maintained by Todd Miller.
    </li><li><a href="http://bulabula.org/femail/">femail</a>:
	Written and maintained by Henning Brauer.
	Started in 2005, port available since September 22, 2005.
    </li><li><a href="https://www.midish.org/">midish</a>:
	Written and maintained by Alexandre Ratchov.
	Started in 2003, port available since November 4, 2005.
    </li><li><a href="https://github.com/nicm/fdm">fdm</a>:
	Written and maintained by Nicholas Marriott.
	Started in 2006, port available since January 18, 2007.
    </li><li><a href="https://github.com/ajacoutot/toad/">toad</a>:
	Written and maintained by Antoine Jacoutot.
	Started in 2013, port available since October 8, 2013.
    </li><li><a href="https://mandoc.bsd.lv/docbook2mdoc/">docbook2mdoc</a>:
	Started by Kristaps Dzonsons in 2014, maintained by Ingo Schwarze.
	Port available since April 3, 2014.
    </li><li><a href="https://jasperla.github.io/portroach/">portroach</a>:
	Written and maintained by Jasper Lievisse Adriaanse,
	originally forked from FreeBSD's portscout.
	Started in 2014, port available since September 5, 2014.
    </li><li><a href="https://github.com/yasuoka/cvs2gitdump">cvs2gitdump</a>:
	Written and maintained by YASUOKA Masahiko.
	Started in 2012, port available since August 1, 2016.
    </li><li><a href="https://gameoftrees.org/">Game of Trees</a>:
	Written and maintained by Stefan Sperling.
	Started in 2017, port available since August 9, 2019.
</li></ul>
</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kaneo – An open source project management platform (143 pts)]]></title>
            <link>https://kaneo.app/</link>
            <guid>43143097</guid>
            <pubDate>Sat, 22 Feb 2025 20:52:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kaneo.app/">https://kaneo.app/</a>, See on <a href="https://news.ycombinator.com/item?id=43143097">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="headline">  <p>
An open source project management platform focused on simplicity
                and efficiency. Self-host it, customize it, make it yours.
</p>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[In Defense of Text Labels (202 pts)]]></title>
            <link>https://www.chrbutler.com/in-defense-of-text-labels</link>
            <guid>43142989</guid>
            <pubDate>Sat, 22 Feb 2025 20:40:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.chrbutler.com/in-defense-of-text-labels">https://www.chrbutler.com/in-defense-of-text-labels</a>, See on <a href="https://news.ycombinator.com/item?id=43142989">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

        
<h2>
Why Icons Alone Aren’t Enough
</h2>
<p><img src="https://cdn.blot.im/blog_a7eb7cf1ab024efcb17c380ef69c53f4/_image_cache/8b6170ad-2d4d-4c3b-ade6-6f278b48b825.svg" width="800" height="650">
</p>
<p>
I’m a firm believer in text labels.
</p>
<p>
Interfaces are over-stuffed with icons. The more icons we have to scan over, the more brain power we put toward making sense of them rather than using the tools they represent. This slows us down, not just once, but over and over again.
</p>
<p>
While it may feel duplicative to add a text label, the reality is that few icons are self-sufficient in communicating meaning.
</p>
<h2>
The Problems that Icons Create
</h2>
<p>
<b>1. Few icons communicate a clear, singular meaning immediately</b>
</p>
<p>
It’s easy to say that a <i>good</i> icon will communicate meaning — or that if an icon needs a text label, it’s not doing its job. But that doesn’t take into consideration the burden that icons — <i>good</i> or <i>bad</i> — put on people trying to navigate interfaces.
</p>
<p>
Even the simplest icons can create ambiguity. While a trash can icon reliably communicates “delete,” what about the common pencil icon. Does it mean create? Edit? Write? Draw? Context can help with disambiguation, but not always, and that contextual interpretation requires additional cognitive effort.
</p>
<p>
When an icon’s meaning isn’t immediately clear, it slows down our orientation within an interface and the use of its features. Each encounter requires a split-second of processing that might seem negligible but accumulates across interactions.
</p>
<p>
<b>2. The more icons within an interface, the more difficult it can be to navigate.</b>
</p>
<p>
As feature sets grow, we often resort to increasingly abstract or subtle visual distinctions between icons. What might have worked with 5-7 core functions becomes unmanageable at 15-20 features. Users must differentiate between various forms of creation, sharing, saving, and organizing - all through pictorial representation alone.
</p>
<p>
The burden of communication increases for each individual icon as an interface’s feature set expands. It becomes increasingly difficult to communicate specific functions with icons alone, especially when distinguishing between similar actions like creating and editing, saving and archiving, or uploading and downloading.
</p>
<p>
<b>3. Icons function as an interface-specific language within a broader ecosystem.</b>
</p>
<p>
Interfaces operate within other interfaces. Your application may run within a browser that also runs within an operating system. Users must navigate multiple levels of interface complexity, most of which you cannot control. When creating bespoke icons, you force users to learn a new visual language while still maintaining awareness of established conventions.
</p>
<p>
This creates particular challenges with standardized icon sets. When we use established systems like Google’s Material Design, an icon that represents one function in our interface might represent something entirely different in another application. This cross-context confusion adds to the cognitive load of icon interpretation.
</p>
<h2>
Why Text Labeling Helps Your Interface
</h2>
<p><img src="https://cdn.blot.im/blog_a7eb7cf1ab024efcb17c380ef69c53f4/_image_cache/e517c845-e798-4eef-af64-079e7ae3aa8e.svg" width="800" height="650"></p>
<p>
<b>1. Text alone is usually more efficient.</b>
</p>
<p>
Our brains process familiar words holistically rather than letter-by-letter, making them incredibly efficient information carriers. We’ve spent our lives learning to recognize words instantly, while most app icons require new visual vocabulary.
</p>
<p>
Scanning text is fundamentally easier than scanning icons. A stacked list of text requires only a one-directional scan (top-to-bottom), while icon grids demand bi-directional scanning (top-to-bottom and left-to-right). This efficiency becomes particularly apparent in mobile interfaces, where similar-looking app icons can create a visually confusing grid.
</p>
<p><img src="https://cdn.blot.im/blog_a7eb7cf1ab024efcb17c380ef69c53f4/_image_cache/dee196a0-9ba7-4324-8a62-86808dba2d9d.svg" width="800" height="650"></p>
<p>
<b>2. Text can make icons more efficient.</b>
</p>
<p>
The example above comes from <a href="http://www.magnolia-made.com/" target="_blank">Magnolia</a>, an application I designed. On the left is the side navigation panel without labels. On the right is the same panel with text labels. Magnolia is an extremely niche tool with highly specific features that align with the needs of research and planning teams who develop account briefs. Without the labels, the people who we created Magnolia for would likely find the navigation system confusing.
</p>
<p>
Adding text labels to icons serves two purposes: it clarifies meaning and provides greater creative freedom. When an icon’s meaning is reinforced by text, users can scan more quickly and confidently. Additionally, designers can focus more on the unity of their interface’s visual language when they’re not relying on icons alone to communicate function.
</p>
<p><img src="https://cdn.blot.im/blog_a7eb7cf1ab024efcb17c380ef69c53f4/_image_cache/5ba58f0b-6f27-493b-a156-69a0eeb34649.svg" width="899" height="651"></p>
<p>
<b>3. Icons are effective anchors in text-heavy applications.</b>
</p>
<p>
Above is another example from <a href="http://www.magnolia-made.com/" target="_blank">Magnolia</a>. Notice how the list of options on the right (Export, Regenerate, and History) stands out because of the icons, but the text labels make it immediately clear what these things do.
</p>
<p>
See, this isn’t an argument for eliminating icons entirely. Icons serve an important role as visual landmarks, helping to differentiate functional areas from content areas. Especially in text-heavy applications, icons help pull the eye toward interactive elements.
</p>
<p>
The combination of icon and text label creates clearer affordances than either element alone.
</p>
<h2>
Finding the Balance
</h2>
<p>
Every time we choose between an icon and a text label, we’re making a choice about cognitive load. We’re deciding how much mental energy people will spend interpreting our interfaces rather than using them. While a purely iconic interface might seem simple and more attractive, it often creates an invisible tax on attention and understanding.
</p>
<p>
The solution, of course, isn’t found in a “perfect” icon, nor in abandoning icons entirely. Icons remain powerful tools for creating visual hierarchy and differentiation. Instead, we need to be more thoughtful about when and how we deploy them. The best interfaces recognize that icons and text aren’t competing approaches but complementary tools that work best in harmony.
</p>
<p>
This means considering not just the immediate context of our own interfaces, but the broader ecosystem in which they exist. Our applications don’t exist in isolation — they’re part of a complex digital environment where users are constantly switching between different contexts, each with its own visual language.
</p>
<p>
The next time you’re tempted to create yet another icon, or to remove text labels, remember: the most elegant solution isn’t always the one that <i>looks</i> simple — it’s the one that makes communication and understanding <i>feel</i> simple.
</p>
        
        <p><img width="30" src="https://www.chrbutler.com/public/icons/asterisk.svg"></p><hr>
        <p><span color="grey"><small>Written by Christopher Butler on</small></span></p><p>February 22, 2025</p> &nbsp;
        
        
        <p><span color="grey"><small>Tagged</small></span></p><a href="https://www.chrbutler.com/tagged/essays"><p>Essays</p></a>
        <hr>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[September 17, 1787: "A Republic, If You Can Keep It" (223 pts)]]></title>
            <link>https://www.nps.gov/articles/000/constitutionalconvention-september17.htm</link>
            <guid>43142572</guid>
            <pubDate>Sat, 22 Feb 2025 19:58:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nps.gov/articles/000/constitutionalconvention-september17.htm">https://www.nps.gov/articles/000/constitutionalconvention-september17.htm</a>, See on <a href="https://news.ycombinator.com/item?id=43142572">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="cs_control_7611127">
<figure>
<picture>
<source type="image/webp" srcset="https://www.nps.gov/articles/000/images/RisingConstitution960x480.jpg?maxwidth=1300&amp;autorotate=false&amp;quality=78&amp;format=webp">
<img alt="Mohagany chair back with detail of a half-sun." src="https://www.nps.gov/articles/000/images/RisingConstitution960x480.jpg?maxwidth=1300&amp;autorotate=false" title="Rising Sun Chair">
</picture>
<figcaption>The Rising Sun Chair in Independence Hall <p>NPS photo</p></figcaption>
</figure><!-- floating-image alignment  -->
<blockquote>
<p><em><strong>“A republic, if you can keep it.”</strong></em></p>
</blockquote>
<p>--Benjamin Franklin's response to Elizabeth Willing Powel's question: "Well, Doctor, what have we got, a republic or a monarchy?"</p>
</div><div id="cs_control_7611227">
<p><b><i>Monday, September 17, 1787: The Convention Today</i></b></p><p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{32}" paraid="1682256536">The day began with a prepared speech from Franklin (PA) who, eighty-one years old and painfully afflicted with gout and kidney stone, was unable to read it himself and delegated that task to Wilson (PA). </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{46}" paraid="1054480062">While the speech was formally addressed to Washington (VA), the Convention’s president, its purpose was to convince the three delegates who had announced their refusal to sign the Constitution—Gerry (MA), Randolph (VA), and Mason (VA)—to abandon their opposition. Franklin began on a note of humility. “I confess that there are several parts of this Constitution which I do not at present approve, but I am not sure I shall never approve them. For having lived long, I have experienced many instances of being obliged by better information, or fuller consideration, to change opinions even on important subjects, which I once thought right, but found to be otherwise. It is therefore that, the older I grow, the more apt I am to doubt my own judgment, and to pay more respect to the judgment of others.” </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{80}" paraid="1831610571">“In these sentiments, Sir, I agree to this Constitution, with all its faults, if they are such; because I think a General Government necessary for us, and there is no form of government, but what may be a blessing to the people if well administered; and believe further, that this is likely to be well administered for a course of years, and can only end in despotism, as other forms have done before it, when the people shall become so corrupted as to need despotic government.”  </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{90}" paraid="1258863415">He didn’t think another Convention (which Mason and Randolph had argued for) would do any better than the first had. He admitted that the men in the room were all well-reasoned and had a diversity of opinions, making it difficult to find common ground. “From such an assembly can a perfect production be expected? It therefore astonishes me, sir, to find this system approaching so near to perfection as it does.... Thus I consent, Sir, to this Constitution, because I expect no better, and because I am not sure, that it is not the best.” </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{114}" paraid="157634583">“On the whole, Sir, I cannot help expressing a wish that every member of the Convention, who may still have objections to it, would with me, on this occasion, doubt a little of his own infallibility, and to make manifest our unanimity, put his name to this instrument.” </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{120}" paraid="2117331119">Franklin then moved for the form of the signing to be such: “Done in Convention by the unanimous consent of the States present, the seventeenth of September, &amp;c. In witness whereof, we have hereunto subscribed our names.” </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{130}" paraid="972683271">This form had actually been thought up by Gouverneur Morris (PA), who had given it to Franklin so that Franklin’s esteem would lend it credence. The wording of the form doesn’t explicitly state that the signer is endorsing the Constitution. It only means that the signer is affirming that the states present in the Convention unanimously approved the Constitution. The idea was to get Gerry, Mason, and Randolph to sign by making their personal objections irrelevant to their signatures. </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{150}" paraid="729640072">Gorham (MA) then motioned for Congress to be given the power to increase the size of the House of Representatives from one representative for every 40,000 people to one for every 30,000. (Mind that Congress would not have been required to increase the House to such a size, but just given the option to do so.) Proposals such as this one had repeatedly failed, but King (MA) and Carroll (MD) seconded him. </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{164}" paraid="1319186782">Now, on this last day of the Convention, Washington (VA) spoke for the only time. While he said it was typically inappropriate for him, as president of the Convention, to offer his opinion, he felt called to support Gorham’s motion. He thought increasing the size of the House of Representatives would increase the “security of the rights and the interests of the people.” After Washington’s speech, no one spoke in opposition to the motion, and it passed unanimously. Jacob Shallus, the scribe who had the day before handwritten the engrossed copy of the Constitution, corrected the text to reflect this final amendment. </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{198}" paraid="1378118405">Randolph gave a brief speech where (much like one from two days earlier) he was almost apologetic about refusing to sign the Constitution, but left open the possibility that he might support the Constitution when Virginia considered ratifying it. He stated, “Nine States [the minimum number for the Constitution to take effect] will fail to ratify the plan, and confusion must ensue.” </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{216}" paraid="2102259563">G. Morris and Williamson (NC) gave speeches encouraging the holdouts to sign. Hamilton (NY) spoke similarly, with Madison (VA) summarizing him thus: “No man’s ideas were more remote from the plan than his own were known to be; but is it possible to deliberate between anarchy and convulsion on one side, and the chance of good to be expected from the plan on the other?” </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{228}" paraid="1828567102">Blount (NC) stated that his signature should not be taken as a sign of his support for the Constitution but just as his affirmation that the Constitution had been unanimously approved by the states at the Convention. </p>
<p paraeid="{892b154e-8c25-42d0-8da8-ae2aec71512f}{244}" paraid="18537606">Franklin gave a second speech where he personally begged Randolph to sign. Randolph said that Franklin’s proposed form for the signatures didn’t make a difference: signing the Constitution would imply that he supported it, and he didn’t. Madison writes that “He [Randolph] repeated, that, in refusing to sign the Constitution, he took a step which might be the most awful of his life; but it was dictated by his conscience, and it was not possible for him to hesitate, — much less, to change.” Randolph thought that presenting the Constitution to the American people to only accept or reject in total, without amendments, would cause all the “anarchy and civil convulsions” which the soon-to-be signers professed to want to avoid. Gerry gave a speech to the same effect. </p>
<p paraeid="{01b48b25-d4db-49ae-94c9-8e9c2c527693}{9}" paraid="1168694754">Charles Cotesworth Pinckney (SC) did not like the ambiguity in Franklin’s proposed form for the signatures. He supported the Constitution and intended his signature to be a sign of that support. </p>
<p paraeid="{01b48b25-d4db-49ae-94c9-8e9c2c527693}{19}" paraid="2066198772">Ingersoll (PA) took a middle position: his signature would not indicate his support for the Constitution, but neither would it merely be his attestation to the Convention’s unanimity. His signature would be his “recommendation” that the Convention’s final product, “all things considered, was the most eligible.” </p>
<p paraeid="{01b48b25-d4db-49ae-94c9-8e9c2c527693}{45}" paraid="1837245824">Franklin’s motion (related to the form of the signing) passed 10–1, with South Carolina’s vote divided on account of C.C. Pinckney and Butler wanting the form to be more emphatically supportive. </p>
<p paraeid="{01b48b25-d4db-49ae-94c9-8e9c2c527693}{55}" paraid="2006718381">The Convention then voted to deposit their official journals (which ended up being much less detailed than Madison’s personal notes) with Washington.  </p>
<p paraeid="{01b48b25-d4db-49ae-94c9-8e9c2c527693}{61}" paraid="611006880">The delegates then proceeded to sign the engrossed copy of the United States Constitution. Thirty-eight men signed thirty-nine names—Dickinson (DE) was ailing with a headache and had asked Read (DE) to sign for him two days earlier. Despite so many personal appeals, Gerry, Randolph, and Mason still refused to sign. Hamilton, as the only New Yorker present at this point, signed in a personal capacity, since New York could not be effectively represented in the Convention by only one delegate. The signatures were grouped by state, with Pennsylvania’s eight being the most. The listing of state names next to the signatures appears to be in the hand of Hamilton. Rhode Island, the only state not to send delegates to the Convention, is not listed. </p>
<p paraeid="{01b48b25-d4db-49ae-94c9-8e9c2c527693}{95}" paraid="328781109">After the signing, the Convention adjourned for a final time. </p>
<p paraeid="{01b48b25-d4db-49ae-94c9-8e9c2c527693}{101}" paraid="2133607111">The signatures did not have any legal significance. The Constitution was clear: it would only go into effect when nine of the thirteen states chose to ratify it. As hard as the past four months had been, the real challenge lay ahead, in convincing the American people to embrace the government that these men had authored. </p>
<p paraeid="{01b48b25-d4db-49ae-94c9-8e9c2c527693}{111}" paraid="401102845">As the last names were being signed, Franklin, in a personal aside to some other members, made an observation about the chair that Washington had been sitting in as he presided over the Convention. The chair had an emblem of half of a sun. Franklin noted that artists often have a hard time distinguishing between a rising and a setting sun in their artwork. “I have often and often, in the course of the session, and the vicissitudes of my hopes and fears as to its issue, looked at that behind the President, without being able to tell whether it was rising or setting: but now at length, I have the happiness to know, that it is a rising and not a setting sun.” </p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Utah Bill Aims to Make Officers Disclose AI-Written Police Reports (134 pts)]]></title>
            <link>https://www.eff.org/deeplinks/2025/02/utah-bill-aims-make-officers-disclose-ai-written-police-reports</link>
            <guid>43142518</guid>
            <pubDate>Sat, 22 Feb 2025 19:53:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.eff.org/deeplinks/2025/02/utah-bill-aims-make-officers-disclose-ai-written-police-reports">https://www.eff.org/deeplinks/2025/02/utah-bill-aims-make-officers-disclose-ai-written-police-reports</a>, See on <a href="https://news.ycombinator.com/item?id=43142518">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <article role="article">
  
  
  <div><p><span>A bill headed to the Senate floor in Utah would </span><a href="https://www.popsci.com/technology/utah-ai-police-bill/"><span>require officers</span></a><span> to disclose if a </span><a href="https://www.eff.org/deeplinks/2024/05/what-can-go-wrong-when-police-use-ai-write-reports"><span>police report was written by generative AI</span></a><span>. </span><span>The bill, <a href="https://le.utah.gov/~2025/bills/static/SB0180.html">S.B. 180</a>, requires a department to have a policy governing the use of AI. This policy would mandate that police reports created in whole or in part by generative AI have a disclaimer that the report contains content generated by AI and requires officers to legally certify that the report was checked for accuracy.</span></p>
<p><span>S.B. 180 is unfortunately a necessary step in the right direction when it comes to regulating the rapid spread of police using generative AI to write their narrative reports for them. EFF will continue to monitor this bill in hopes that it will be part of a larger conversation about more robust regulations. Specifically, Axon, the makers of tasers and the salespeople behind a </span><a href="https://www.vice.com/en/article/axon-acquires-fusus-ai-surveillance-retail-healthcare/"><span>shocking amount of police and surveillance tech</span></a><span>, has recently rolled out a new product, </span><a href="https://www.police1.com/police-products/police-technology/software/report-writing/revolutionizing-police-report-writing-axons-draft-one-transforms-the-tedious-into-the-effortless"><span>Draft One</span></a><span>, which uses body-worn camera audio to generate police reports. This product is spreading quickly in part because it is integrated with other </span><a href="https://theintercept.com/2021/12/08/police-reform-body-cameras-axon-motorola/"><span>Axon products which are already omnipresent in U.S. society</span></a><span>. <br></span></p>
<p><span>But it’s going to take more than a disclaimer to curb the potential harms of AI-generated police reports. <br></span></p>
<p><span>As we’ve previously cautioned, the public should be skeptical of AI’s ability to accurately process and distinguish between the wide range of languages, dialects, vernacular, idioms, and slang people use. As online content moderation has shown, software may have a passable ability to capture words, but it often</span><a href="https://www.eff.org/deeplinks/2019/04/content-moderation-broken-let-us-count-ways"> <span>struggles with content and meaning</span></a><span>. In a tense setting such as a traffic stop, AI mistaking a metaphorical statement for a literal claim could fundamentally change the content of a police report.</span></p>
<p><span>Moreover, so-called</span><a href="https://www.eff.org/deeplinks/2024/03/how-avoid-ai-apocalypse-one-easy-step"> <span>artificial intelligence</span></a><span> taking over consequential tasks and decision-making has the power to obscure human agency. Police officers who deliberately exaggerate or lie to shape the narrative available in body camera footage now have even more of a veneer of plausible deniability with AI-generated police reports. If police were to be caught in a lie concerning what’s in the report, an officer might be able to say that they did not lie: the AI simply did not capture what was happening in the chaotic video.</span></p>
<p><span>As this technology spreads without much transparency, oversight, or guardrails, we are likely to see more cities, counties, and states push back against its use. Out of fear that AI-generated reports would complicate and compromise cases in the criminal justice system,prosecutors in King County, Washington (which includes Seattle) </span><a href="https://www.eff.org/deeplinks/2024/10/prosecutors-washington-state-warn-police-dont-use-gen-ai-write-reports"><span>have instructed</span></a><span> officers not to use the technology for now. <br></span></p>
<p><span>The use of AI to write police reports is troubling in ways we are accustomed to, but also in new ways. Not only do we not yet know how widespread use of this technology will affect the criminal justice system, but because of how the product is designed, there is a chance we won’t even know if AI has been used even if we are staring directly at the police report in question. For that reason, it’s no surprise that lawmakers in Utah have introduced this bill to require some semblance of transparency. We will likely see similar regulations and restrictions in other states and local jurisdictions, and possibly even stronger ones.&nbsp;</span></p>

</div>

          </article>
    </div><div>
          <h2>Join EFF Lists</h2>
        
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Amazon now discloses you're buying a license to view Kindle eBooks (413 pts)]]></title>
            <link>https://blog.the-ebook-reader.com/2025/02/22/amazon-now-openly-discloses-youre-buying-a-license-to-view-kindle-ebooks/</link>
            <guid>43141825</guid>
            <pubDate>Sat, 22 Feb 2025 18:50:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.the-ebook-reader.com/2025/02/22/amazon-now-openly-discloses-youre-buying-a-license-to-view-kindle-ebooks/">https://blog.the-ebook-reader.com/2025/02/22/amazon-now-openly-discloses-youre-buying-a-license-to-view-kindle-ebooks/</a>, See on <a href="https://news.ycombinator.com/item?id=43141825">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main id="genesis-content"><article aria-label="Amazon Now Openly Discloses You’re Buying a License to View Kindle eBooks" itemscope="" itemtype="https://schema.org/CreativeWork"><div itemprop="text"><p><a href="https://blog.the-ebook-reader.com/wp-content/uploads/2025/02/Kindle-License-Disclaimer.jpg"><img decoding="async" src="https://blog.the-ebook-reader.com/wp-content/uploads/2025/02/Kindle-License-Disclaimer-560x888.jpg" alt="Kindle License Disclaimer" width="560" height="888" srcset="https://blog.the-ebook-reader.com/wp-content/uploads/2025/02/Kindle-License-Disclaimer-560x888.jpg 560w, https://blog.the-ebook-reader.com/wp-content/uploads/2025/02/Kindle-License-Disclaimer-189x300.jpg 189w, https://blog.the-ebook-reader.com/wp-content/uploads/2025/02/Kindle-License-Disclaimer.jpg 605w" sizes="(max-width: 560px) 100vw, 560px"></a></p>
<p>Amazon recently changed the wording on their website when it comes to buying <a href="https://www.amazon.com/kindle-dbs/storefront?storeType=browse&amp;node=154606011&amp;nodl=0&amp;linkCode=ll2&amp;tag=ter000-20&amp;linkId=929ad6761676da6a2e0bcb2ef290e121&amp;language=en_US&amp;ref_=as_li_ss_tl" target="_blank">Kindle ebooks</a>.</p>
<p>As the screenshot above shows, they now have a disclaimer under the buy now button that says, “By placing your order, <strong>you’re purchasing a license to the content</strong> and you agree to the Kindle Store Terms of Use”.</p>
<p>It also says that same thing when shopping for Kindle ebooks directly from the store on Kindle ereaders and Kindle apps.</p>




<p>The funny thing is they only appear to be doing that in the US. I checked Amazon UK and Amazon CA and both show the old disclaimer that just says, “By clicking the above button, you agree to the Kindle Store Terms of Use”.</p>
<p>If you click the terms of use link you’ll find a page full of legal disclaimers indicating you’re buying a license to access Kindle content, but they don’t openly disclose it on product pages under the buy button like on the Amazon US website.</p>
<p>I read somewhere about a new law that was passed in California where companies have to “conspicuously” disclose that customers are buying a license when it comes to digital media like ebooks, so that’s likely the reason why Amazon made the change.</p>
<p>But not all ebook stores are following the same path. Kobo still just has a link to their terms of sale page when you go to checkout. Apple doesn’t say anything about licenses at all when trying to buy an ebook from them. Google doesn’t say anything about it on their ebook product pages, but they do say you’re purchasing a license before confirming the purchase, with a link to their terms of service.</p>
<p>Some people still don’t know that when buying digital content you’re buying a license to view said content, not the actual content itself. You don’t actually “own” the ebooks you purchase; you just own the rights to view them. It’s a distinction that applies to digital media since you can’t physically own it. </p>
<p>I think it’s a good idea for companies to openly disclose that fact before buying. Nobody is going to read through those ridiculous TOS pages before purchasing something.</p>
<!-- CONTENT END 1 -->
</div></article><h2>Reader Interactions</h2>	<!-- #respond -->
	</main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Is anyone still using Dreamweaver? (151 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=43141368</link>
            <guid>43141368</guid>
            <pubDate>Sat, 22 Feb 2025 17:59:27 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=43141368">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="43141640"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141640" href="https://news.ycombinator.com/vote?id=43141640&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I do!!!!!! I love dreamwaver even today, I'm surprised people don't use it, they have done an amazing job keeping it up to date - it's honestly a joy to use. Granted: I'm not a real dev/swe, just a dude who likes to mess around with webtech, still, I think "real devs" would enjoy it too, it's great to use.</p><p>I learn web on dreamweaver, I would make something on the front end WYSIWYG editor, and then "turn it around" (I called it in my head) and look at the "back of it" (I was a kid) - anyway, tables and frames and dhtml baby!!!!</p><p>Also: <a href="https://s.h4x.club/nOu445qL" rel="nofollow">https://s.h4x.club/nOu445qL</a> :) :)</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43141826"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43141826" href="https://news.ycombinator.com/vote?id=43141826&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I did the same, except with Netscape Composer. That was a time where the output of the WYSIWYG editor - really, the source of any page - was pretty digestible, even to me as a middle school student.</p><p>I've noticed recently that the JavaScript debugger in Firefox can "un-Webpack" (and in some cases un-minify, if I've read the inputs and outputs correctly) the code behind many sites. It's certainly not as approachable as declarative HTML, but I suspect to some enterprising person, that route is still open.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43141941"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43141941" href="https://news.ycombinator.com/vote?id=43141941&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I think it was Microsoft FrontPage that had the most undigestible output at the time. A mess of tables, inline styles, Internet Explorer-specific tricks, plus a reliance on FrontPage Server Extensions for full functionality.</p><p>Adobe still had GoLive at the time, which was basically what Dreamweaver is now, and it didn't mangle the output as much, neither did Netscape Composer (which was way more limited). Many of the simpler WYSIWYG editors (Netscape Composer, that thing AOL had, etc.) were not nearly as bad as FrontPage.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43144282"><td></td></tr>
            <tr id="43143507"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_43143507" href="https://news.ycombinator.com/vote?id=43143507&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>FrontPage was indeed terrible, it caused me to make an even worse decision in the 1990’s—-make websites almost entirely out of image maps, and then eventually that terrible idea evolved into the classic terrible approach to early ‘00’s web frontends (bum bum bum): <i>Macromedia Flash</i> and Actionscript (the latter of which I actually remember fondly, although I may just be remembering it with rose-tinted glasses).</p><p>Edit: clarification of bad writing</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43143815"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_43143815" href="https://news.ycombinator.com/vote?id=43143815&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Oh man that reminds me of customizing people Neopets personal pages as kid. Image maps and tables everywhere.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43142783"><td></td></tr>
            <tr id="43142791"><td></td></tr>
                <tr id="43143049"><td></td></tr>
                        <tr id="43144246"><td></td></tr>
            <tr id="43142004"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43142004" href="https://news.ycombinator.com/vote?id=43142004&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>&gt; I've noticed recently that the JavaScript debugger in Firefox can "un-Webpack" (and in some cases un-minify, if I've read the inputs and outputs correctly) the code behind many sites. It's certainly not as approachable as declarative HTML, but I suspect to some enterprising person, that route is still open.</p><p>That's just sourcemaps I think. Pretty standard stuff, but the site have to provide the maps.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43144200"><td></td></tr>
                <tr id="43144222"><td></td></tr>
                <tr id="43144315"><td></td></tr>
                        <tr id="43142801"><td></td></tr>
                  <tr id="43142245"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142245" href="https://news.ycombinator.com/vote?id=43142245&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I had to read the question twice. Dreamweaver was the go-to in <i>2010</i>? I think it was already well on its decline by then.</p><p>At a new job in 2003 one of my first tasks was to generate new “heat map” code since the company was updating the background image file for 50-state map interfaces. Dreamweaver had the best interface for doing that work, so I got a copy and spent a couple days carefully tracing the 50 state outlines (which Dreamweaver turned into geometric shape code).</p><p>But even then, most of our sites were running on a database-backed CMS. By 2010 we were building sites in Drupal, Wordpress, and Joomla.</p><p>I knew folks still maintaining sites with Dreamweaver templates at that time, but they were all legacy sites in academic and government jobs. Most of those types of orgs at the time still thought a website was something you built once and used for decades, like a building.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43143229"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43143229" href="https://news.ycombinator.com/vote?id=43143229&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>That depends on how people remember "decline". Blackberry was thought to be dead in 2009, 2 years after the iPhone, but that year BB sold more devices than ever.</p><p>For a long time, "UI design" was done in Adobe Photoshop, so using Adobe Dreamweaver to build out the final product and upload to SFTP was a perfectly serviceable workflow. Back then, websites were needed for a Google presence. Today you can have a business through a Facebook page, or pay to advertise on Google Maps or Yelp. Anything more complicated and you'd need a full SaaS ecommerce platform, not something that only does static HTML pages like DW.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142434"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142434" href="https://news.ycombinator.com/vote?id=43142434&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>Funny story, I'm a SWE and my wife used to work as a marketing manager. Her boss wanted her to make something similar, a heat map over a U.S. map. Except he wanted it to work in Excel. She asked me about it and I told her I could code something like that, but no way inside Excel...</p><p>Sure enough, she hacked on it for a while and was able to actually build a functioning heat map in Excel. I have no idea how it works. I've been a dev for 20+ years and that remains one of the more voodoo tech things I've seen!</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43144207"><td></td></tr>
            <tr id="43142566"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43142566" href="https://news.ycombinator.com/vote?id=43142566&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Excel is not merely Turing-complete, but a step above, able to achieve dark things best left unsaid.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43143664"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43143664" href="https://news.ycombinator.com/vote?id=43143664&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>Set default zoom on the sheet to very small and map out states by cells - treat them like pixels.</p><p>So much yuck.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43143804"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_43143804" href="https://news.ycombinator.com/vote?id=43143804&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I did this back in the early/mid 1990's. I wrote a program that could convert .gif files to Excel using the cells as pixels. I converted a pic of a supermodel and sent the excel file to my buddies. They were surprised to say the least.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="43142987"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142987" href="https://news.ycombinator.com/vote?id=43142987&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>My first websites around 98 I landed on something more obscure to build them I think, Net Objects Fusion. Later switched to (Macromedia) Dreamweaver.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="43144273"><td></td></tr>
                  <tr id="43142454"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142454" href="https://news.ycombinator.com/vote?id=43142454&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Yeah I used it at my first job in 2000 which was essentially a webmaster job my local college.  But 2001 we were already moving away from it as we started to embed PHP here and there, and eventually start building full-blown apps inline into the website (replacing poorly integrated ColdFusion stuff developed in isolation by some other department back in the 90s).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43141633"><td></td></tr>
                <tr id="43141753"><td></td></tr>
                <tr id="43142116"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43142116" href="https://news.ycombinator.com/vote?id=43142116&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Using view source in IE to discover how certain layouts and effects were done and trying to replicate it on Notepad... and then downloading Dreamweaver because you were a n00b and needed that WYSIWYG goodness.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141960"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43141960" href="https://news.ycombinator.com/vote?id=43141960&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>That's ironically still the easiest way to go for HTML emails as the output is almost guaranteed to display well across various email clients that don't implement CSS properly (Outlook).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142755"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_43142755" href="https://news.ycombinator.com/vote?id=43142755&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>IIRC Outlook[1] just uses the Word engine internally, so it's going to share the same quirks.</p><p>(I also seem to remember that Internet Explorer's Trident engine started as a fork from Word, although that's presumably a bit less direct in the later versions).</p><p>[1] At least proper desktop Win32 Outlook, not the dozens of other things Microsoft have called Outlook.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142792"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_43142792" href="https://news.ycombinator.com/vote?id=43142792&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>&gt; email clients that don't implement CSS properly (Outlook).</p><p>Can anyone explain how this is even possible? It's 2025.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43144301"><td></td></tr>
                              <tr id="43141783"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43141783" href="https://news.ycombinator.com/vote?id=43141783&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>FrontPage Express was what I used to build my first website. (personal project with friends) I learned so much about HTML simply because of the limitations in FrontPage Express.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142676"><td></td></tr>
                <tr id="43142753"><td></td></tr>
                        <tr id="43143370"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43143370" href="https://news.ycombinator.com/vote?id=43143370&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I was a kid the last time I touched front page. Why did my simple site need front page extensions on the server? It was basically a static site. Finding a free web host with those extensions was near impossible.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141981"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43141981" href="https://news.ycombinator.com/vote?id=43141981&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>That's nothing, you’ll have to pry my Mac with System 8 and GoLive CyberStudio (winner of most 90s application name) from my cold, dead hands.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142795"><td></td></tr>
            <tr id="43142816"><td></td></tr>
            <tr id="43141780"><td></td></tr>
            <tr id="43141770"><td></td></tr>
                  <tr id="43144234"><td></td></tr>
            <tr id="43141792"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141792" href="https://news.ycombinator.com/vote?id=43141792&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>An ode to Dreamweaver</p><p>Dreamweaver was how I learned MySQL back when I was 12-13 and got into web development. I don't remember how I came across it but somehow things, the way they were laid out at the time, made sense to me. This would ripple into a career that's making my living 16 years later.</p><p>I remember downloading XAMPP and installing it to get a local MySQL and PhpMyAdmin server. A few clicks in Dreamweaver later, I somehow had a connection file that would connect to my local MySQL server. I started playing around with it and creating different forms. The MySQL query generators on Dreamweaver were so simple that you could, with a few clicks, have a full on CRM.</p><p>I ended up coding a test score reporting system for my middle school class and the school somehow trusted me and started using it. This made me possibly the most hated person in the school because parents could now see their kids scores every day and there was no more "Oh the teacher hasn't given out the scores yet." But it was good times, and I was so excited about it.</p><p>Many years later, I now run a startup and have transitioned into using Node.js but MySQL is still my bread and butter. I still remember that day when I discovered the SELECT query.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142809"><td></td></tr>
                  <tr id="43142016"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142016" href="https://news.ycombinator.com/vote?id=43142016&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I like dreamweaver. But I could still code html by hand with HotDogPro.</p><p>The one that I really miss is Macromedia Fireworks.</p><p>The perfect mix between vector editor + html editor + OOP.</p><p>And to think that it did all of that in the metadata of a binary format (png).</p><p>Nothing has come close.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142764"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142764" href="https://news.ycombinator.com/vote?id=43142764&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>If you hadn't post this comment, I would have.</p><p>Fireworks could have been Figma, it could have been the default platform every designer used. But Adobe didn't understand it, they saw it as a weird Photoshop competitor and shelved it.</p><p>The last few versions bundled with CS were clearly neglected maintenance releases. I finally stopped using my slowing rotting copy in about 2014 when I got a Mac with a retina screen and fireworks was stuck with a terrible pixel doubled ui. :-(</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43143422"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43143422" href="https://news.ycombinator.com/vote?id=43143422&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I held on until 2020. At some point I had to give up MacOS updates to keep it going.</p><p>I still haven't found an acceptable replacement, choosing instead to design in-browser with CSS. Of course this means I can't make graphic heavy designs that I can slice and export with transparent PNGs, but we haven't cycled back to that sort of design yet so I'll be OK with minimalist crap for a while.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43143944"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43143944" href="https://news.ycombinator.com/vote?id=43143944&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>fireworks is still the best 2d graphics design system I’ve ever used.</p><p>I used to make a non-insignificant amount of rasterised computer “art” using fireworks, its discontinuance (and the fact that photoshop was not at <i>all</i> a replacement) killed that for me.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142192"><td></td></tr>
                <tr id="43144036"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43144036" href="https://news.ycombinator.com/vote?id=43144036&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Homesite was amazing. I consider it the first real text editor that I've ever used.
And I hated Macromedia for killing it.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="43143151"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43143151" href="https://news.ycombinator.com/vote?id=43143151&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>The last time I used Dreamweaver was in 2009 when I was putting together a site at a small business, my first job after college in a recession-hit market.</p><p>These days I know HTML/CSS pretty well, but do still use a DW-style tool to build simple websites without an IDE: Bootstrap Studio[0]. with a customizable barebones Bootstrap grid system under the hood. It's pretty powerful, GUI-based flexbox positioning, custom code support, split code/design view, SFTP upload built-in. I've used it to export an HTML design to flat files, and edit them in an IDE to hook it up to CMS logic, so there isn't any app lock-in or spaghetti code.</p><p>A new feature I really like is the "blog" function, where you can assign a folder to be the "blog", and the app will build an index page containing all those entries upon hitting "publish". The final export is all static HTML and CSS, so it's a way to upload to places like Amazon S3 and Neocities without the need for an underlying server-side blog platform.</p><p>[0] <a href="https://bootstrapstudio.io/" rel="nofollow">https://bootstrapstudio.io/</a></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141692"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141692" href="https://news.ycombinator.com/vote?id=43141692&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I think the emerging meta seems to be using LLMs that will create HTML components for you from your Figma storyboards.</p><p>And also to let another LLM create your Figma storyboards from your novel design ideas.</p><p>And asking a third LLM to give you some novel design ideas.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142224"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142224" href="https://news.ycombinator.com/vote?id=43142224&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>One prompt to generate 75% of what you want and get you excited and fill you with a sense of dread over what it means for future tech careers.</p><p>10 prompts to add a new feature.</p><p>20 prompts to add a second feature and fix everything that broke in the 1st feature while adding the second.</p><p>50 prompts to add a third feature and fix what broke in the 1st and 2nd features while adding the third.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43144020"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43144020" href="https://news.ycombinator.com/vote?id=43144020&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>One for the Dark Lord on his Dark Throne,</p><p>In the damp bedroom where the doges lie,</p><p>One Prompt to rule them all, One prompt to find them,</p><p>One Prompt to bring them all and in the darkness bind them,</p><p>In the damp bedroom where the black molds lie.</p><p>Edit: don't judge me I'm not a poet.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43142301"><td></td></tr>
                <tr id="43143432"><td></td></tr>
                  <tr id="43141734"><td></td></tr>
                <tr id="43141879"><td></td></tr>
                        <tr id="43142147"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142147" href="https://news.ycombinator.com/vote?id=43142147&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>Around the same time, I was using Coda actually!</p><p><a href="https://web.archive.org/web/20101007013748/http://panic.com/coda/" rel="nofollow">https://web.archive.org/web/20101007013748/http://panic.com/...</a></p><p>I had only used dreamweaver a small amount at highschool, but the imac we had at home had a Coda license on it. While I don't think I could comfortably use Dreamweaver to make something today, Coda is possibly usable. Coda 2 since came out which I never tried, and now it's a new editor called Nova, which I was using for a short while but has strayed away from the style-focused Coda 1.x.</p><p>I would like to see that class of "make your own website" desktop editors come back, that bridge the line between dreamweaver and IntelliJ. Just a few core IDE features that make it not a pain to use, and just a few GUI features to make designing easy.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142832"><td></td></tr>
                  <tr id="43142619"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142619" href="https://news.ycombinator.com/vote?id=43142619&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I was using DreamWeaver in maybe 2006-2007. I hadn’t thought about it in a long while. Back then we were CRUD web apps with a FileMaker backend and there was an integration where you could drag database fields straight out of FMP7 into DreamWeaver and it would automatically create the correct PHP (also 6 or 7 back then) code for your form.</p><p>I coded up a simple CRUD in Streamlit yesterday (needed a simple way for my Field guys to create professional looking PDF trip reports) but it still took me longer than that workflow used to. Our tooling really seems far behind where it ought to be. The whole time I was writing it, I was thinking why did I stop using PHP for stuff like this?</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142962"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142962" href="https://news.ycombinator.com/vote?id=43142962&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>Tools like FileMaker, Dreamweaver and others empowered regular people to do "personal computing" and allowed them to help themselves build the tools they needed.</p><p>It seems to me like that was a golden age of genuine personal computing that went by too fast and with many avenues left unexplored.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43143459"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43143459" href="https://news.ycombinator.com/vote?id=43143459&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I remember feeling like a power user upgrading from Frontpage 98 to Dreamweaver and being able to hot swap between code and the live view. Dreamweaver rolled a ton of then-groundbreaking features into a great interface.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142342"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142342" href="https://news.ycombinator.com/vote?id=43142342&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I think about Dreamweaver once a year, last time I used it was around 2004, I guess. The WYSIWYG way of doing things was an eye opener after using Notepad and manually typing tables from some HTML book. I later switched to PHP, MySQL and CSS, but I miss ActionScript sometimes. I made some cool browser games with it and it sparked an interest for programming on top of designing (try making a car steer correctly in a topdown view when math and stuff is not your strongest point).</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141868"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141868" href="https://news.ycombinator.com/vote?id=43141868&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>Now that's a name I've not heard in a long time.</p><p>Early 2000s Adobe was stacked with web technology. They knew where the world was headed, but didn't quite capture it the right way.</p><p>Flash, Shockwave, Dreamweaver, Macromedia Homesite, Fireworks, Coldfusion, Adobe AIR, LiveMotion, Actionscript 3.0, MXML, Flex.</p><p>They shipped so much software, it's incredible.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142124"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142124" href="https://news.ycombinator.com/vote?id=43142124&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>Macromedia is really where to point most of that admiration IMO. Most of the products you list were developed there and then Adobe bought the company.</p><p>Jeremy Allaire somehow flies under the radar as an impactful tech entrepreneur, but look at this resume: Allaire Corp, Macromedia, Brightcove, Circle.</p><p><a href="https://en.m.wikipedia.org/wiki/Jeremy_Allaire" rel="nofollow">https://en.m.wikipedia.org/wiki/Jeremy_Allaire</a></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142074"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142074" href="https://news.ycombinator.com/vote?id=43142074&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>What's even more interesting is when you look at some of those tools, many of them were actually way more straightforward to use to design websites without much coding than what we have today. Just like how we had all those CRUD rapid app development tools that would build the app for you just from a database model (Access, PowerBuilder, Delphi, FoxPro...). While what we have today is arguably way more powerful, we've lost some of that simplicity (at least for more trivial use cases) along the way.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43141570"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141570" href="https://news.ycombinator.com/vote?id=43141570&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Dreamweaver confused? It was a drag &amp; drop &amp; point &amp; click web builder; what was confusing about it? There are many similar tools now, free and paid, haven't heard about Dreamweaver in a long while, so while I don't understand the confusing part, I am very curious if anyone is using it still. I do see it is still sold (and maintained?).</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142863"><td></td></tr>
            <tr id="43142008"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142008" href="https://news.ycombinator.com/vote?id=43142008&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I had no idea that you could even still get a copy of Dreamweaver anymore, but a quick search seems to confirm that, indeed, you can still get it.</p><p>As a teenager I used to use a pirated copy of Dreamweaver, and it was cool but I eventually just learned HTML since I found that the stuff I wrote ended up being better than the stuff being generated by Dreamweaver, and of course that had the advantage of being legal and free. I'm sure that the HTML exporter has gotten a lot better since 2005, but I have moved as far away from web development as I could since then because web development is terrible.</p><p>A small part of me wants to try the latest Dreamweaver now but I don't have a Windows or Mac computer anymore.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142186"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142186" href="https://news.ycombinator.com/vote?id=43142186&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Macromedia didn't mind the piracy at the time. People learned from pirated versions and then went to work in companies that bought licenses. They bootstrapped the company with that tactic. Same with Flash.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142528"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43142528" href="https://news.ycombinator.com/vote?id=43142528&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Not trying to make the piracy seem "right" or anything, but I would like to point out that I didn't make any money with the pirated Macromedia software either.  I made a couple cartoons that got blammed on Newgrounds, did the examples in the Animator's Survival Kit, and then decided I'm not smart enough to be creative and did software instead.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43142239"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142239" href="https://news.ycombinator.com/vote?id=43142239&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>This is pretty much my experience too, back then I had a copy of a 1000+ page book called HTML 4 The Complete Reference.</p><p>With that tome on my desk it honestly didn't take much work to be able to do a better job than Dreamweaver using notepad and writing HTML by hand.</p><p>I never got into the advanced Dreamweaver features, am sure I remember loads of stuff around managing complete sites with it, etc. But from a purely front end developers perspective it always seemed superfluous.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43142519"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142519" href="https://news.ycombinator.com/vote?id=43142519&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>No, but I actually named my company's flagship software "Laneweaver" (logistics industry) as an homage to what once was a great product.</p><p>Adobe will probably read this and sue me.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141602"><td></td></tr>
                <tr id="43141880"><td></td></tr>
                <tr id="43142119"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43142119" href="https://news.ycombinator.com/vote?id=43142119&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Flash being a persistent security hole and memory hog is what killed it. Adobe should have gotten their shit together. Apple saved us from the hell of fixed resolution flash apps and dozens of flash ads on a page.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="43144039"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_43144039" href="https://news.ycombinator.com/vote?id=43144039&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Steve Jobs talked about this- when asked by the audience why he wasn't supporting Flash, he said the main thing people will be missing out on is banner ads. And he was mostly right.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="43141849"><td></td></tr>
            <tr id="43142253"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142253" href="https://news.ycombinator.com/vote?id=43142253&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>You should have seen what VMware did with Flash when they moronically rewrote vCenter client in it. Worst software ever.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141727"><td></td></tr>
                <tr id="43142223"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43142223" href="https://news.ycombinator.com/vote?id=43142223&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I used it yesterday to plot out a deck I'm building. The ability to draw easily, snap to grid, custom rulers, makes it a great design tool. Better than Corel Draw anyway.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142068"><td></td></tr>
                        <tr id="43142741"><td></td></tr>
            <tr id="43144016"><td></td></tr>
            <tr id="43141892"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141892" href="https://news.ycombinator.com/vote?id=43141892&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I can’t imagine anyone is still using Dreamweaver—that market must have been utterly subsumed by Squarespace. If you are a, say, small business that needs a 3–5 page marketing site with contact info and about pages, surely it makes more sense to use Squarespace (or wix, or what have you).</p><p>But this sent me down a memory rabbit hole…a former manager of mine <i>loved</i> Brackets. Brackets was Adobe’s open-source text editor (<a href="https://opensource.adobe.com/brackets.io/?lang=en" rel="nofollow">https://opensource.adobe.com/brackets.io/?lang=en</a>) that was sorta VSCode, but prettier.</p><p>Adobe sunsetted that project, but it still apparently somewhat lives on, in the form of Phoenix Code. (<a href="https://phcode.dev/" rel="nofollow">https://phcode.dev</a>) And it still does look very “designed” in comparison to VSCode. I really like the default typography, tag highlighting, and some of the details of the text editor itself.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142003"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142003" href="https://news.ycombinator.com/vote?id=43142003&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>&gt; I can’t imagine anyone is still using Dreamweaver—that market must have been utterly subsumed by Squarespace. If you are a, say, small business that needs a 3–5 page marketing site with contact info and about pages, surely it makes more sense to use Squarespace (or wix, or what have you).</p><p>You're right, considering that Dreamweaver is SaaS now. Were it a single purchase it would actually be more affordable for independent webmasters making websites as one could buy a single copy of Dreamweaver, make several websites, and host them on a single server with multiple domain names, while not paying the subscription over and over again.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142070"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142070" href="https://news.ycombinator.com/vote?id=43142070&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Does it? IMO it looks very outdated and cluttered compared to most editors. Clicking around a bit, this screen specifically stood out to me as lacking a lot of visual hierarchy: <a href="https://i.imgur.com/Y7iBS2p.png" rel="nofollow">https://i.imgur.com/Y7iBS2p.png</a>. It just kind of reads as a visual jumble with too many elements competing for your attention with slightly different/incoherent styling—I count 5 different unique button styles on this page alone, with some buttons having flat borders, some buttons having shiny highlights, and 3 completely different shades of grey button borders. Definitely doesn't feel "designed" to me.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43141612"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141612" href="https://news.ycombinator.com/vote?id=43141612&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I am volunteering in a school library and someone „built“ their system with Dreamweaver and FileMaker. It’s still in use on an airgapped winxp machine.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142151"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142151" href="https://news.ycombinator.com/vote?id=43142151&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>Wow, I was taught Dreamweaver on a college course in the very early 2000s but I have never really seen it used professionally.</p><p>In 20+ years of employment I think I came across one developer who used it, and that was probably in 2005 or so!</p><p>Find it hard to imagine what kind of team would use it for development today.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141953"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141953" href="https://news.ycombinator.com/vote?id=43141953&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I heard recently during the big government purge that a lot of the actual mechanics of that purge functioned by revoking people's Dreamweaver licenses, and that a lot of .gov websites run on Dreamweaver. Probably the US government is singlehandedly keeping Dreamweaver alive through large annual contracts for new features. I don't have any concrete sources on this, it was just Twitter gossip, but it makes a lot of sense to me—Dreamweaver provides the ability for non-technical government employees to edit the site, low system requirements for the servers, and presumably enough Enterprise features to ensure template homogeneity across an org as large as USG.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142122"><td></td></tr>
                <tr id="43142976"><td></td></tr>
                        <tr id="43141808"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141808" href="https://news.ycombinator.com/vote?id=43141808&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>When Dreamweaver integrates GPT4o it will finally reach mainstream. I can imagine the podcast ad-spots already. Watch out SquareSpace. Disruption comes for us all.</p><p>(P.S: I did use Dreamweaver in the early 2000s. It was great. I’m surprised it still is running! RIP Fireworks)</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141749"><td></td></tr>
                <tr id="43142967"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142967" href="https://news.ycombinator.com/vote?id=43142967&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Homesite was the first editor I used extensively for web development (after trying some of the other options like HotDog Pro, etc). It was small enough, and simple enough, that you could run it directly from a 1.44mb floppy. (I was poor in college and relied on computer labs) Later went on to use Allaire's ColdFusion Studio, which was a superset of Homesite, for several years.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43142573"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142573" href="https://news.ycombinator.com/vote?id=43142573&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Weird quirk I inherited from Dreamweaver: I used a bootlegged/trial version in high school to learn coding and it would close itself every few minutes so I would Ctrl+S every few seconds to save my progress. I still do that to this day even though all my Jetbrains IDEs auto-save.
I think I still have my webassist.com PHP extensions for Dreamweaver somewhere on my hard drive from 2008.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43143346"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43143346" href="https://news.ycombinator.com/vote?id=43143346&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I remember unmessing webpage layout from the dreamweaver generated html by hand so it could be templated for the actual website on my first job. Never again!</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142584"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142584" href="https://news.ycombinator.com/vote?id=43142584&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I got my (professional) start with it but very quickly grew out of it when I got a job working on real websites. But I do have fond memories of its editor. To this day I’m still confused how their built in scripts were supposed to work, especially their auth flow.</p><p>My first real editor was Netscape Composer.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43141785"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141785" href="https://news.ycombinator.com/vote?id=43141785&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I loved dreamweaver when starting out. Never got on with the WYSIWYG (hence moving on), but its ability to read your CSS file and suggest classes was great. MX was the pinnacle in early 2000s.</p><p>More relevant to me though, I miss Fireworks so much. Nothing comes closer. Figma is great but web based and already shown willing to sell out everyone who trusts them.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43141928"><td></td></tr>
                  <tr id="43141655"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141655" href="https://news.ycombinator.com/vote?id=43141655&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I stopped using it ages ago but I still use its HTML code colour scheme into whatever code editor I use, nothing else feels right.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142948"><td></td></tr>
            <tr id="43142894"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142894" href="https://news.ycombinator.com/vote?id=43142894&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>Not dreamweaver, But I use Flash (Macromedia) on Windows and Adobe on Mac frequently.</p><p>Call it muscle memory, I find it easier to cook a chart, shape and basic resize/crop on Flash.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142981"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142981" href="https://news.ycombinator.com/vote?id=43142981&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Not me, I wish I could take back my college $ on courses that used extensive  Dreamweaver and Flash. I guess we can't predict the future.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43143058"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43143058" href="https://news.ycombinator.com/vote?id=43143058&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I have a friend that's been using Dreamweaver for decades. He still maintains a handful of client sites with it.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43143095"><td></td></tr>
            <tr id="43142167"><td></td></tr>
            <tr id="43142365"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142365" href="https://news.ycombinator.com/vote?id=43142365&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Yes. I have to run it under Wine on Linux, but my paid-for version of Dreamweaver 8 still works fine.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43143383"><td></td></tr>
                <tr id="43143855"><td></td></tr>
                  <tr id="43142715"><td></td></tr>
            <tr id="43142438"><td></td></tr>
            <tr id="43143055"><td></td></tr>
            <tr id="43142440"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43142440" href="https://news.ycombinator.com/vote?id=43142440&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Dreamweaver, now that's a name I haven't heard in a long time, I remember using it in highschool to build websites during a web design class. I always thought it ended up being discontinued by Adobe and replaced by various web frameworks, but maybe I'm thinking of Microsoft Frontpage</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142970"><td></td></tr>
            <tr id="43142053"><td></td></tr>
            <tr id="43141902"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_43141902" href="https://news.ycombinator.com/vote?id=43141902&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>No, no one is using it. It never was a go-to tool even back then. I feel old by just remembering it.</p><p>Dreamweaver solved no one's problems.</p><p>1) Regular users didn't need it: they couldn't use it for publishing their web-sites anyway. They quickly just switched to social media for publishing their content.</p><p>2) Dreamweaver was not a great tool for professionals too. Its code editor was not convenient and overall the program felt really poor in features. It never could catch up with new features of web. Besides, no one creates whole pages and Dreamweaver didn't support dividing a page into parts like header, main part, menu, articles footer etc, as far as I remember. This would be a way too much complicated task to implement.</p><p>So it was just a tool for students. If you were learning HTML, it was a fine tool to learn it. That's it. It was never used in real work.</p><p>The name "Dreamweaver" is really cool though, I must give them credit. It sounds even way too cool for such a simple program as it was. It should have been used for an iconic film or a video game instead.</p><p>Unexpected bottom line: do we need something like Dreamweaver which wouldn't suck? Yes. Figma got so successful because it allowed creating prototypes and was solving real life problems. Now a new program like Dreamweaver could solve the problem of quick prototyping and generating HTML code for something like React components.</p><p>Would it be a complicated app? Yes. Would it require a lot of programming? Yes. Would it immediately bring money? No. So currently it's probably won't be a good idea to work on it.</p><p>You can create something like a visual editor module for HTML pages or react components to be used in modern IDEs. Maybe even just by embedding a non-read only WebView with some cleverly butchered developer tools and sell that module to companies for a cheap subscription.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="43142716"><td></td></tr>
            <tr id="43143841"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43143841" href="https://news.ycombinator.com/vote?id=43143841&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p><i>"Would it be a complicated app? Yes. Would it require a lot of programming? Yes. Would it immediately bring money? No. So currently it's probably won't be a good idea to work on it."</i></p><p>Consider that web browsers essentially do the reverse of HTML editors such as Dreamweaver. Moreover, all current web browsers do a much better job at rendering web pages from HTML than do WYSIWYG editors do at turning text into HTML.</p><p>I don't think many appreciate how sophisticated web browsers are these days. Now consider that browsers such as Firefox and Chromium are open source, their code could be used to develop HTML editors.</p><p>The question I keep asking is why aren't there a plethora of HTML editors out there that harness the algorithms these browsers already use for their own development.</p><p>As you suggest, producing a good HTML editor is very hard work, if it weren't then there'd be many good editors out there but there aren't. Take wordprocessors with a 'save as HTML' option and one will find the code they produde ranges from almost unusable to abominable.</p><p>Same goes for email editors that produce HTML-formatted emails. For example, Thunderbird has about the worst HTML editor around, it's brain-dead and full of bugs, and it's been like that for decades. It's as if those at Mozilla are terrified to touch it for fear that they'll kill it altogether.</p><p>Now keep in mind that Thunderbird actually uses the Firefox engine so what's going on here? With Thunderbird is the browser code completely divorced from its email editor?</p><p>OK, you may well say that's just how is it with Thunderbird, the editor evolved separately to its rendering engine. I'll then say take a good look at BlueGriffon which is quite an excellent HTML editor based on Firefox (despite the fact that it's awkward to use and hasn't been updated in ages). How come its developer can produce good HTML whereas Thunderbird's developers don't seem to have a clue?</p><p>Also, how relevant to this discussion is the fact that BlueGriffon's development has ceased: <a href="http://bluegriffon.org/" rel="nofollow">http://bluegriffon.org/</a>. What's the actual reason for the developer ceasing development (there's likely more than he's stating on his webpage)?</p><p>Right, perhaps somewhere in all that comment lies the path to actual truth of the matter—that is, how difficult it is to actually make a decent HTML editor?</p><p>I've been on the lookout for a good open-source HTML editor for years and I've yet to see a decent discussion, analysis or exposé of the subject. Why not?</p><p>It's still impossible to sort out whether the demand for a decent HTML editor just isn't there or whether it's a too bigger project and not worth the effort.</p><p>I wish those who are truly in the know would put this matter to rest. Many of us who don't wish to delve deep into web browser/editor code would love some answers.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43141604"><td></td></tr>
                <tr id="43143125"><td></td></tr>
            <tr id="43141651"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43141651" href="https://news.ycombinator.com/vote?id=43141651&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Webflow ? Squarespace ? I assumed that segment had been occupied by CMS and SaaS companies.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="43143012"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43143012" href="https://news.ycombinator.com/vote?id=43143012&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I tried out Webflow this past week was a pretty enjoyable experience took me back to Dreamweaver days a bit.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142091"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_43142091" href="https://news.ycombinator.com/vote?id=43142091&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>Absolutely Squarespace (and WordPress). Non-technical website maintainers don’t want an HTML editor; they want their website to have an edit button.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="43142095"><td></td></tr>
                  <tr id="43141614"><td></td></tr>
            <tr id="43141578"><td></td></tr>
                <tr id="43141638"><td></td></tr>
                  <tr id="43141590"><td></td></tr>
                <tr id="43141848"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43141848" href="https://news.ycombinator.com/vote?id=43141848&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>It is always funny to see "professional" code or tools compared with "toys". In reality, it is precisely the "professional", "enterprise" stuff that turns out to be a giant pile of shit (which we rarely get to see from outside). There are professional businesses storing their main database in Excel, while the amateurs obsess over whether Postgres is scalable enough.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="43143493"><td></td></tr>
                  <tr id="43141636"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43141636" href="https://news.ycombinator.com/vote?id=43141636&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>I would hope nobody is using it for anything professional now but it was definitely used back in the day, my first professional development job was for a small agency which used Dreamweaver for everything. I'm not saying that was a good thing, it generated some of the worst code I've ever seen, but it was used.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142933"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142933" href="https://news.ycombinator.com/vote?id=43142933&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div>
                  <p>While you are correct that few are using it to build "professional" sites, it was never really a toy. Pretty powerful for the time, and even let you integrate with a number of backend technologies, database servers, etc. For today's world, where you need 3000 Javascript packages to display "Hello World", it's not a good fit.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="43142155"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_43142155" href="https://news.ycombinator.com/vote?id=43142155&amp;how=up&amp;goto=item%3Fid%3D43141368"></a></center>    </td><td><br><div><p>I think I used it to build an ie5 for Macintosh compatible Sharepoint theme.</p><p>Age check if you’re shuddering now.</p></div></td></tr>
        </tbody></table></td></tr>
                  </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The $1.5B Bybit Hack (121 pts)]]></title>
            <link>https://blog.trailofbits.com/2025/02/21/the-1.5b-bybit-hack-the-era-of-operational-security-failures-has-arrived/</link>
            <guid>43140754</guid>
            <pubDate>Sat, 22 Feb 2025 17:05:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.trailofbits.com/2025/02/21/the-1.5b-bybit-hack-the-era-of-operational-security-failures-has-arrived/">https://blog.trailofbits.com/2025/02/21/the-1.5b-bybit-hack-the-era-of-operational-security-failures-has-arrived/</a>, See on <a href="https://news.ycombinator.com/item?id=43140754">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main role="main"><article><div><p>Two weeks ago at the <a href="https://x.com/trailofbits/status/1893008382677659893">DeFi Security Summit</a>, Trail of Bits’ Josselin Feist (@Montyly) was asked if we’d see a billion-dollar exploit in 2025. His response: “If it happens, it won’t be a smart contract, it’ll be an operational security issue.”</p><p>Today, that prediction was validated.</p><h2 id="the-attack">The Attack</h2><p>On February 21, 2025, cryptocurrency exchange <a href="https://x.com/gauthamzzz/status/1893004593979859410">Bybit suffered the largest cryptocurrency theft</a> in history when attackers stole approximately $1.5B from their multisig cold storage wallet. At this time, it appears the attackers compromised multiple signers’ devices, manipulated what signers saw in their wallet interface, and collected the required signatures while the signers believed they were conducting routine transactions.</p><p>This hack is one of many that represent a dramatic shift in how centralized exchanges are compromised. For years, the industry has focused on hardening code and improving their technical security practices, but as the ecosystem’s secure development life cycle has matured, attackers have shifted to targeting the human and operational elements of cryptocurrency exchanges and other organizations.</p><p>These attacks reveal an escalating pattern, with each compromise building on the last:</p><ul><li><a href="https://blog.solidityscan.com/wazirx-hack-analysis-8bc8821928e9">WazirX Exchange</a> ($230M, July 2024)</li><li><a href="https://medium.com/@RadiantCapital/radiant-post-mortem-fecd6cd38081">Radiant Capital</a> ($50M, October 2024)</li><li><a href="https://www.bloomberg.com/news/articles/2025-02-21/bybit-says-exchange-wallet-hacked-1-5-billion-estimated-loss?utm_source=website&amp;utm_medium=share&amp;utm_campaign=copy">Bybit Exchange</a> ($1.5B, February 2025)</li></ul><p>In each case, the attackers didn’t exploit smart contract or application-level vulnerabilities. Instead, they compromised the computers used to manage those systems using sophisticated malware to manipulate what users saw versus what they actually signed.</p><h2 id="the-dprks-cryptocurrency-theft-infrastructure">The DPRK’s Cryptocurrency Theft Infrastructure</h2><p>These hacks are not isolated incidents. According to <a href="https://x.com/arkham/status/1893033424224411885">Arkham Intelligence</a>, famed researcher <a href="https://x.com/zachxbt">ZachXBT</a> has provided definitive proof linking this attack to North Korea, including detailed analysis of test transactions and connected wallets used ahead of the exploit. These incidents represent the maturation of sophisticated attack capabilities developed by <a href="https://www.fbi.gov/news/press-releases/fbi-dc3-and-npa-identification-of-north-korean-cyber-actors-tracked-as-tradertraitor-responsible-for-theft-of-308-million-from-bitcoindmmcom">North Korean state-sponsored threat actors</a>, specifically groups tracked as <a href="https://www.cisa.gov/news-events/cybersecurity-advisories/aa22-108a%20">TraderTraitor</a>, <a href="https://www.microsoft.com/en-us/security/security-insider/intelligence-reports/east-asia-threat-actors-employ-unique-methods">Jade Sleet</a>, <a href="https://cloud.google.com/blog/topics/threat-intelligence/north-korea-supply-chain">UNC4899</a>, and <a href="https://unit42.paloaltonetworks.com/threat-assessment-north-korean-threat-groups-2024/">Slow Pisces</a> under the DPRK’s Reconnaissance General Bureau (RGB).</p><figure><img src="https://blog.trailofbits.com/img/dprk-rgb-structure.png" alt="Figure 1: Organizational structure of DPRK cyber threat actors under the Reconnaissance General Bureau (RGB). This chart shows the relationship between different threat groups and their various industry designations. Source: Palo Alto Networks Unit 42, September 2024"><figcaption>Figure 1: Organizational structure of DPRK cyber threat actors under the Reconnaissance General Bureau (RGB). This chart shows the relationship between different threat groups and their various industry designations. Source: Palo Alto Networks Unit 42, September 2024</figcaption></figure><p>The attack chain typically begins with <a href="https://github.blog/security/vulnerability-research/security-alert-social-engineering-campaign-targets-technology-industry-employees/">aggressive social engineering campaigns</a> targeting multiple employees simultaneously within an organization. The RGB identifies key personnel in system administration, software development, and treasury roles, then creates detailed pretexts - often elaborate job recruitment schemes - customized to each target’s background and interests. These aren’t mass phishing campaigns; they’re meticulously crafted approaches designed to compromise specific individuals with access to critical systems.</p><p>What makes these attacks particularly concerning is their repeatability. The RGB has built a sophisticated cross-platform toolkit that can:</p><ul><li>Operate seamlessly across Windows, MacOS, and various wallet interfaces</li><li>Show minimal signs of compromise while maintaining persistence</li><li>Function as backdoors to execute arbitrary commands</li><li>Download and execute additional malicious payloads</li><li>Manipulate what users see in their interfaces</li></ul><p><a href="https://github.com/tayvano/lazarus-bluenoroff-research">Each successful compromise</a> has allowed the RGB to refine their tools and techniques. They’re not starting from scratch with each target - they’re executing a tested playbook that’s specifically engineered to defeat standard cryptocurrency security controls when those controls are used in isolation.</p><p>Organizations below a certain security threshold are now at serious risk. Without comprehensive security controls including:</p><ul><li>Air-gapped signing systems</li><li>Multiple layers of transaction verification</li><li>Endpoint detection and response (EDR) systems like CrowdStrike or SentinelOne</li><li>Regular security training and war games</li></ul><p>They are likely to face an adversary that has already built and tested the exact tools needed to defeat their existing protections.</p><h2 id="the-new-reality-of-cryptocurrency-security">The New Reality of Cryptocurrency Security</h2><p>This attack highlights a fundamental truth: no single security control, no matter how robust, can protect against sophisticated attackers targeting operational security. While secure code remains crucial, it must be part of a comprehensive security strategy.</p><p>Organizations must adopt new processes and controls that operate under the assumption that their infrastructure will eventually face compromise:</p><ol><li><strong>Infrastructure Segmentation:</strong> Critical operations like transaction signing require both physical and logical separation from day-to-day business operations. This isolation ensures that a breach of corporate systems cannot directly impact signing infrastructure. Critical operations should use dedicated hardware, separate networks, and strictly controlled access protocols.</li><li><strong>Defense-in-Depth:</strong> Security controls must work in concert - hardware wallets, multi-signature schemes, and transaction verification tools each provide important protections, but true security emerges from their coordinated operation. Organizations need multiple, overlapping controls that can detect and prevent sophisticated attacks.</li><li><strong>Organizational Preparedness:</strong> Technical controls must be supported by comprehensive security programs that include:<ul><li>Thorough threat modeling incorporating both technical and operational risks</li><li>Regular third-party security assessments of infrastructure and procedures</li><li>Well-documented and frequently tested incident response plans</li><li>Ongoing security awareness training tailored to specific roles</li><li>War games and attack simulations that test both systems and personnel</li></ul></li></ol><p>These principles aren’t new - they represent hard-won lessons from years of security incidents in both traditional finance and cryptocurrency. Trail of Bits has consistently advocated for this comprehensive approach to security, providing concrete guidance through several key publications:</p><ul><li><a href="https://blog.trailofbits.com/2018/11/27/10-rules-for-the-secure-use-of-cryptocurrency-hardware-wallets/">10 Rules for the Secure Use of Cryptocurrency Hardware Wallets</a> (2018) - Our foundational guidance on hardware wallet security that specifically warned about the risks of hardware wallet compromise and the need for high-assurance workstations - precisely the type of issues exploited in today’s attack.</li><li><a href="https://blog.trailofbits.com/2022/06/24/managing-risk-in-blockchain-deployments/">Managing Operational Risk in Blockchain Deployments</a> (2022) - A comprehensive framework highlighting the risks of centralized infrastructure and providing concrete guidance for implementing defense-in-depth approaches to protect high-value cryptocurrency operations.</li><li><a href="https://blog.trailofbits.com/2023/08/14/can-you-pass-the-rekt-test/">The Rekt Test - our simple framework for assessing basic security controls</a> (2023) - Our simple but thorough framework for assessing basic security controls, emphasizing the critical importance of proper key management, infrastructure separation, and incident response planning - all factors that proved critical in today’s incident.</li><li><a href="https://blog.trailofbits.com/2025/02/05/preventing-account-takeover-on-centralized-cryptocurrency-exchanges-in-2025/">Preventing Account Takeovers in Cryptocurrency Exchanges</a> (2025) - A detailed analysis of attack patterns targeting cryptocurrency exchanges that predicted the industry’s pivot from technical exploits toward operational attacks.</li></ul><p>These publications show a clear pattern that’s echoed by recent attacks: sophisticated attackers are increasingly targeting operational security vulnerabilities rather than technical flaws.</p><p>The cryptocurrency industry’s resistance to implementing traditional corporate security controls, combined with the high value of potential targets and this group’s sophisticated capabilities, suggests these attacks are likely to continue unless significant changes are made to how cryptocurrency companies approach operational security.</p><h2 id="moving-forward">Moving Forward</h2><p>The Bybit hack marks a new era in cryptocurrency security. Industry participants need to recognize the evolving threat landscape and invest additional resources in improving their operational security. No one understands this reality better than the security researchers who have been tracking these attacks.</p><p>Tay <a href="https://twitter.com/tayvano_/status/1847877033701122395">@tayvano_</a>, a renowned security researcher known for exposing on-chain thefts, dissecting DPRK crypto hacks, and fiercely advocating for better blockchain security practices, summarized the current reality bluntly:</p><blockquote><p>For all these reasons and more, it’s my opinion that once they get on your device, you’re fucked. The end.
If your keys are hot or in AWS, they fuck you immediately.
If they aren’t, they work slightly harder to fuck you.
But no matter what, you’re going to get fucked.</p></blockquote><p>Organizations must protect themselves through a comprehensive defense strategy combining isolation, verification, detection, and robust operational security controls. However, the time for basic security measures has passed. Organizations holding significant cryptocurrency assets must take immediate action:</p><ul><li>Conduct a thorough operational risk assessment using established frameworks like our “<a href="https://blog.trailofbits.com/2022/06/24/managing-risk-in-blockchain-deployments/">Managing Operational Risk in Blockchain Deployments</a>”</li><li>Implement dedicated, air-gapped signing infrastructure</li><li>Engage with security teams experienced in defending against sophisticated state actors</li><li>Build and regularly test incident response plans</li></ul><p>The next billion-dollar hack isn’t a matter of if, but when. The only question is: will your organization be ready?</p></div></article></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Exult: Recreating Ultima VII for modern operating systems (121 pts)]]></title>
            <link>https://exult.sourceforge.io/index.php</link>
            <guid>43140645</guid>
            <pubDate>Sat, 22 Feb 2025 16:56:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://exult.sourceforge.io/index.php">https://exult.sourceforge.io/index.php</a>, See on <a href="https://news.ycombinator.com/item?id=43140645">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	<td>
		<!-- HEADLINE -->
		<h2>
			What is it?
		</h2>
		<!-- CONTENT -->
		<table>
	<tbody><tr>
		<td><a href="https://exult.sourceforge.io/images/screenshots/si.png"><img src="https://exult.sourceforge.io/images/screenshots/thumbs/si.png" alt="The Cheats"></a></td>
		<td>
		As computers evolve, we risk losing classic games from
		the not-so-distant past.  One of these, Ultima VII, a two part RPG from the
		early 1990's, still has a huge following, and many consider it to
		be one of the most immersive games ever produced.  <i>Exult</i> is a
		project to recreate Ultima VII for modern
		operating systems, using the game's original plot, data, and graphics files.
		</td>
	</tr>
</tbody></table>

	</td>
</div><div>
	<td>
		<!-- HEADLINE -->
		<h2>
			News
		</h2>
		<!-- CONTENT -->
		<table>
	<tbody><tr><td>25 September 2024<br></td>
	<td><p><b><u>Exult releases version 1.10.1</u></b><br></p>
	<p>This is a bugfix release. Accidentally we've introduced crashes in our Windows 
	version by not allowing older CPUs. Also the Android launcher wouldn't install our 
	mods.</p>

	<p>Our short list of fixes:</p>
	<ul>
	<li>Fixed crash on Windows by increasing compatibility with old CPUs</li>
	<li>Fixed Android launcher not installing mods</li>
	<li>Fixed new releases being unable to download and install our mods on Windows</li>
	<li>Added new icons for our main platform (thanks Florian Piesche)</li>
	</ul>

	<p>You can find the Android, Windows and macOS releases on our
	<a href="https://exult.sourceforge.io/download.php">download page</a>.<br>
	Please play with it and tell us of any problem you encounter using the Github
	<a href="https://github.com/exult/exult/discussions">discussion page</a> or
	<a href="https://github.com/exult/exult/issues">bug tracker</a>.</p>

	</td></tr><tr><td></td><td></td></tr>
	
	<tr><td>9 September 2024<br></td>
	<td><p><b><u>Exult releases version 1.10</u></b><br></p>
	<p>We seem to be now in a roughly two year rhythm of releases, so here we go:<br>
	A much needed update of Exult and Exult Studio.<br>
	Much needed as we fixed a crash when entering combat pretty soon after the 1.8
	release and of course people encounter this again and again.</p>

	<p>But we fixed much more since the 1.8 release:</p>
	<ul>
	<li>The Android port is now fully working</li>
	<li>The Windows installer now offers to install several mods</li>
	<li>New Volume Mixer to set individual volumes for music, sfx and speech</li>
	<li>Cheat Screen overhauled so the options can now be activated by clicking or touching</li>
	<li>Much improved combat:</li>
		<ul>
		<li>Default attack mode “nearest” and attack mode “random” will try to select an enemy that is not already targeted by a party member</li>
		<li>Faking defend by selecting weakest enemy when low health, nearest otherwise</li>
		<li>more blood</li>
		</ul>
	<li>Better detecting of clicks on gumps over the shortcutbar to prevent accidental triggering of a shortcut</li>
	<li>mt32emu driver resampling fix</li>
	<li>Endgames now wait for ingame speech to finish</li>
	<li>Background sound effect music tracks are less annoying and disabled for FMOpl music driver</li>
	<li>Music looping improved</li>
	<li>Exult Studio allows zooming of the shapes view</li>
	<li>Fixed a crash when swapping weapons in combat</li>
	<li>Fixed random crash on sleeping past midnight in Britain</li>
	<li>Attacking locked doors did not work</li>
	<li>Immobile NPCs were able to move (e.g. Reapers)</li>
	<li>Enemies poison now</li>
	</ul>

	<p>You can find the Android, Windows and macOS releases on our
	<a href="https://exult.sourceforge.io/download.php">download page</a>.<br>
	Please play with it and tell us of any problem you encounter using the Github
	<a href="https://github.com/exult/exult/discussions">discussion page</a> or
	<a href="https://github.com/exult/exult/issues">bug tracker</a>.</p>

	<p><b><u>Ultima VI remake mod</u></b></p>
	<p>Last year the
	<a href="https://www.ultima6.realmofultima.com/">Ultima VI Remake project</a>
	finally released their mod that remade Ultima VI with the Exult engine and 
	Ultima VII graphics. That's quite a feat, so check it out. The mod is available 
	on our download page and our Exult installer for Windows offers to install it.</p>

	</td></tr><tr><td></td><td></td></tr>

	<tr><td>16 April 2022<br></td>
	<td><p><b><u>Ultima VII turns 30 - Exult releases version 1.8</u></b><br></p>
	<p>30 years ago Origin released Ultima VII - The Black Gate and many still
	hold this game in a very high regard. We certainly do!<br>
	Instead of waiting another decade this is the perfect opportunity to release
	our next version. Because of the measures we took to eliminate weird crashes
	it was important to make a new release available.<br>
	By default we will now play the extended intro of Serpent Isle, that we restored
	from an old recording of it. It was cut and slimmed down for the release of
	Ultima VII's Part 2 to conserve precious floppy disk space. A shout out to
	Denis Loubet for creating this masterpiece.<br>
	Two important things were always missing from Exult in regards to the Black
	Gate:<br>
	The sound effects in the intro and the congratulations screen! Both are now
	present!<br>
	Currently we are in the process of merging Ken Cecka's fork of Exult for
	<b>Android</b> (*). While this is not yet finished, Ken created a 1.8 version
	based on our release code.<br>

	You can find the Android, Windows and macOS releases on our
	<a href="https://exult.sourceforge.io/download.php">download page</a> (**).<br>
	Please play with it and tell us of any problem you encounter using the
	<a href="https://exult.sourceforge.io/forum/index.php">forum</a> or
	<a href="https://github.com/exult/exult/issues">bug tracker</a>.</p>

	<p>A brief list of the most important changes in Exult since v1.6:</p>
	<ul>
	<li>Windows builds are by default 64bit</li>
	<li>Exult Studio modernized by porting it to GTK+ 3 (thanks Dragon Baroque)</li>
	<li>Exult Studio now offered as a download for macOS</li>
	<li>Exult shows the proper ending screen for BG (you have beaten Ultima VII in nn days...)</li>
	<li>Sound effects in the BG intro were missing</li>
	<li>Extended intro for SI implemented</li>
	<li>More crashes eliminated caused by cached out objects</li>
	<li>"Gumps pause game" no longer delays usecode events</li>
	<li>Smooth virtual joystick movement on iOS</li>
	<li>iOS shows the mouse cursor when a real mouse device is used</li>
	<li>Screenshots will now be saved in the PNG format</li>
	<li>Status bars can now also be vertical on both sides of the screen</li>
	<li>Updated Windows installer to download and install the audio packs and our mods</li>
	<li>Our options have been reordered</li>
	</ul>

	<p>But we do have known issues:</p>
	<ul>
	<li>Antimagic rain caused by the cube generator is still not dissipating as fast as it should</li>
	<li>Exult does not return to the game menu after beating the game (instead it quits)</li>
	<li>Some schedules need more detailed love</li>
	<li>Several bugs that need more in-depth looking at but no plot-stopping bugs</li>
	</ul>
	<p>(*) Follow Ken's fork at his
	<a href="https://github.com/ceckak/exult/tree/android-port">github page</a>.</p>
	<p>(**) All files have been scanned and cleared with
	<a href="https://www.virustotal.com/">Virus Total's online scanner</a>, however Avast
	falsely flags our InnoSetup based installer for Windows.</p>
	</td></tr>

	<tr><td></td><td></td></tr>

	<tr><td>17 April 2020<br></td>
	<td><p><b><u>Exult 1.6 has been released to celebrate Ultima VII's 28th birthday!</u></b><br></p>
	<p>Almost ten years after the version 1.4.9rc1, 16 years after the last stable version (v1.2) and
	28 years after the official release of Ultima VII - The Black Gate (16 April 1992), we are finally
	ready to release a new version. With many developers busy with their real life and most having moved on,
	it took us this long. We have been busy squashing more of the inexplicable crashes but these changes
	will force us to stop supporting some ancient operating systems.<br>
	That's why we decided to release one last version of Exult, Exult Studio and Exult's tools for the old OS'
	before moving on with development. For really old Windows operating systems (95/98/ME/NT/2000) we prepared
	a legacy download.<br>
	So please grab the new version available on our <a href="https://exult.sourceforge.io/download.php">download page</a>.<br>
	Please play with it and tell us of any problem you encounter using the
	<a href="https://exult.sourceforge.io/forum/index.php">forum</a> or
	<a href="https://github.com/exult/exult/issues">bug tracker</a>.</p>

	<p>A brief list of the most important changes in Exult since v1.4.9rc1:</p>
	<ul>
	<li>Shortcut bar with important shortcuts right on top of the screen (thanks Litchie)</li>
	<li>Switch to SDL2 - important for up to date OS'</li>
	<li>NxBR and HQ3x/HQ4x scalers</li>
	<li>Option to drop stacks of items without confirmation</li>
	<li>Some more combat options to make charmed combat more difficult</li>
	<li>Schedules got a work-over and are more closer to the original but not yet perfect</li>
	<li>NPCs using beds are sleeping better now</li>
	<li>Paperdoll support of wearing diapers</li>
	<li>Portable option for Windows</li>
	<li>Separate settings for fullscreen and windowed mode possible</li>
	<li>HighDPI mode available on macOS</li>
	<li>Better pathfinding when the party boards a barge</li>
	<li>Fixed most inexplicable crashes</li>
	<li>Serpent Isle Beta version works</li>
	<li>Cleaned up the code in many places and fixed many compiler warnings</li>
	<li>Tons of bugfixes</li>
	</ul>

	<p>But we do have known issues:</p>
	<ul>
	<li>Some crashes due to some cached-out objects, we are working on this in another branch which will be the main snapshot after this release</li>
	<li>Antimagic rain caused by the cube generator is not dissipating as fast as it should</li>
	<li>Exult does not show the "you have beaten Ultima VII in n days" message</li>
	<li>Exult does not return to the game menu after beating the game (instead it quits)</li>
	<li>The BG intro does not have the proper sound effects</li>
	<li>Fire Elementals cannot walk across lava</li>
	<li>Some schedules need more detailed love</li>
	<li>Several bugs that need more in-depth looking at but no plot-stopping bugs</li>
	<li>When you disable "Gumps pause game", certain events might only happen after you close all gumps</li>
	</ul>
	</td></tr>

	<tr><td></td><td></td></tr>

	<tr><td>14 March 2016<br></td>
	<td><p><b><u>Source code versioning moved to Git on GitHub.</u></b><br></p>
	<p>We are now working on our code via Git on <a href="https://github.com/exult">GitHub</a><br>
	Everything else, website, forum, mailinglist, bug tracker, etc. remains hosted on Sourceforge.net.</p>
	</td></tr>

	<tr><td></td><td></td></tr>

	<tr><td>19 March 2015<br></td>
	<td><p><b><u>Fan Project of the Year 2014 - Ultima Codex</u></b><br></p>
	<p>Exult has been voted Project of the Year 2014 by the readers of the
	<a href="http://ultimacodex.com/2015/02/exult-the-2014-fan-project-of-the-year/">Ultima Codex</a>
	in a close race with <a href="http://nuvie.sf.net/">Nuvie</a>.<br>
	Our prize was a hand signed certificate by our Liege Lord British to each member of the
	development team.<br>
	<a href="https://exult.sourceforge.io/images/screenshots/project2014.png"><img src="https://exult.sourceforge.io/images/screenshots/thumbs/project2014.png" alt="Fan Project 2014 certificate"></a></p>
	<p><b><u>Exult on an iPhone/iPad</u></b><br>
	Chaoji Li (aka Litchie) forked Exult on <a href="https://github.com/litchie/exult-ios">Github</a> to work
	on the initial porting effort by Lanica Dragon (which had stopped in 2013).<br>
	Read more about it in our <a href="http://exult.sourceforge.net/docs.php#iOS%20Guide">Documentation</a>.</p>
	<p>As for a new version of Exult, again lot of bugs have been fixed, the game eggs bug referred to below among
	them but other bugs have of course appeared.</p>
	</td></tr>

	<tr><td></td><td></td></tr>

</tbody></table>

	</td>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FFmpeg School of Assembly Language (721 pts)]]></title>
            <link>https://github.com/FFmpeg/asm-lessons/blob/main/lesson_01/index.md</link>
            <guid>43140614</guid>
            <pubDate>Sat, 22 Feb 2025 16:52:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/FFmpeg/asm-lessons/blob/main/lesson_01/index.md">https://github.com/FFmpeg/asm-lessons/blob/main/lesson_01/index.md</a>, See on <a href="https://news.ycombinator.com/item?id=43140614">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true" aria-labelledby="file-name-id-wide file-name-id-mobile"><article itemprop="text"><p dir="auto"><strong>FFmpeg Assembly Language Lesson One</strong></p>
<p dir="auto"><strong>Introduction</strong></p>
<p dir="auto">Welcome to the FFmpeg School of Assembly Language. You have taken the first step on the most interesting, challenging, and rewarding journey in programming. These lessons will give you a grounding in the way assembly language is written in FFmpeg and open your eyes to what's actually going on in your computer..</p>
<p dir="auto"><strong>Required Knowledge</strong></p>
<ul dir="auto">
<li>Knowledge of C, in particular pointers. If you don't know C, work through <a href="https://en.wikipedia.org/wiki/The_C_Programming_Language" rel="nofollow">The C Programming Language</a> book</li>
<li>High School Mathematics (scalar vs vector, addition, multiplication etc)</li>
</ul>
<p dir="auto"><strong>What is assembly language?</strong></p>
<p dir="auto">Assembly language is a programming language where you write code that directly corresponds to the instructions a CPU processes. Human readable assembly language is, as the name suggests, <em>assembled</em> into binary data, known as <em>machine code</em>, that the CPU can understand. You might see assembly language code referred to as “assembly” or “asm” for short.</p>
<p dir="auto">The vast majority of assembly code in FFmpeg is what's known as <em>SIMD, Single Instruction Multiple Data</em>. SIMD is sometimes referred to as vector programming. This means that a particular instruction operates on multiple elements of data at the same time. Most programming languages operate on one data element at a time, known as scalar programming.</p>
<p dir="auto">As you might have guessed, SIMD lends itself well to processing images, video, and audio which have lots of data ordered sequentially in memory. There are specialist instructions available in the CPU to help us process sequential data.</p>
<p dir="auto">In FFmpeg, you'll see the terms “assembly function”, “SIMD”, and “vector(ise)” used interchangeably. They all refer to the same thing: Writing a function in assembly language by hand to process multiple elements of data in one go. Some projects may also refer to these as “assembly kernels”.</p>
<p dir="auto">All of this might sound complicated, but it's important to remember that in FFmpeg, high schoolers have written assembly code. As with everything, learning is 50% jargon and 50% actual learning.</p>
<p dir="auto"><strong>Why do we write in assembly language?</strong><br>
To make multimedia processing fast. It’s very common to get a 10x or more speed improvement from writing assembly code, which is especially important when wanting to play videos in real time without stuttering. It also saves energy and extends battery life. It’s worth pointing out that video encode and decode functions are some of the most heavily used functions on earth, both by end-users and by big companies in their datacentres. So even a small improvement adds up quickly.</p>
<p dir="auto">You’ll often see, online, people use <em>intrinsics,</em> which are C-like functions that map to assembly instructions to allow for faster development. In FFmpeg we don’t use intrinsics but instead write assembly code by hand. This is an area of controversy, but intrinsics are typically around 10-15% slower than hand-written assembly (intrinsics supporters would disagree), depending on the compiler. For FFmpeg, every bit of extra performance helps, which is why we write in assembly code directly. There’s also an argument that intrinsics are difficult to read owing to their use of “<a href="https://en.wikipedia.org/wiki/Hungarian_notation" rel="nofollow">Hungarian Notation</a>”.</p>
<p dir="auto">You may also see <em>inline assembly</em> (i.e. not using intrinsics) remaining in a few places in FFmpeg for historical reasons, or in projects like the Linux Kernel because of very specific use cases there. This is where assembly code is not in a separate file, but written inline with C code. The prevailing opinion in projects like FFmpeg is that this code is hard to read, not widely supported by compilers and unmaintainable.</p>
<p dir="auto">Lastly, you’ll see a lot of self-proclaimed experts online saying none of this is necessary and the compiler can do all of this “vectorisation” for you. At least for the purpose of learning, ignore them: recent tests in e.g. <a href="https://www.videolan.org/projects/dav1d.html" rel="nofollow">the dav1d project</a> showed around a 2x speedup from this automatic vectorisation, while the hand-written versions could reach 8x.</p>
<p dir="auto"><strong>Flavours of assembly language</strong><br>
These lessons will focus on x86 64-bit assembly language. This is also known as amd64, although it still works on Intel CPUs. There are other types of assembly for other CPUs like ARM and RISC-V and potentially in the future these lessons will be extended to cover those.</p>
<p dir="auto">There are two flavours of x86 assembly syntax that you’ll see online: AT&amp;T and Intel. AT&amp;T Syntax is older and harder to read compared to Intel syntax. So we will use Intel syntax.</p>
<p dir="auto"><strong>Supporting materials</strong><br>
You might be surprised to hear that books or online resources like Stack Overflow are not particularly helpful as references. This is in part because of our choice to use handwritten assembly with Intel syntax. But also because a lot of online resources are focused on operating system programming or hardware programming, usually using non-SIMD code. FFmpeg assembly is particularly focused on high performance image processing, and as you’ll see it’s a particularly unique approach to assembly programming. That said, it’s easy to understand other assembly use-cases once you’ve completed these lessons</p>
<p dir="auto">Many books go into a lot of computer architecture details before teaching assembly. This is fine if that’s what you want to learn, but from our standpoint, it’s like studying engines before learning to drive a car.</p>
<p dir="auto">That said, the diagrams in the later parts of “The Art of 64-bit assembly” book showing SIMD instructions and their behaviour in a visual form are helpful: <a href="https://artofasm.randallhyde.com/" rel="nofollow">https://artofasm.randallhyde.com/</a></p>
<p dir="auto">A discord server is available to answer questions:<br>
<a href="https://discord.com/invite/Ks5MhUhqfB" rel="nofollow">https://discord.com/invite/Ks5MhUhqfB</a></p>
<p dir="auto"><strong>Registers</strong><br>
Registers are areas in the CPU where data can be processed. CPUs don’t operate on memory directly, but instead data is loaded into registers, processed, and written back to memory. In assembly language, generally, you cannot directly copy data from one memory location to another without first passing that data through a register.</p>
<p dir="auto"><strong>General Purpose Registers</strong><br>
The first type of register is what is known as a General Purpose Register (GPR). GPRs are referred to as general purpose because they can contain either data, in this case up to a 64-bit value, or a memory address (a pointer). A value in a GPR can be processed through operations like addition, multiplication, shifting, etc.</p>
<p dir="auto">In most assembly books, there are whole chapters dedicated to the subtleties of GPRs, the historical background etc. This is because GPRs are important when it comes to operating system programming, reverse engineering, etc. In the assembly code written in FFmpeg, GPRs are more like scaffolding and most of the time their complexities are not needed and abstracted away.</p>
<p dir="auto"><strong>Vector registers</strong><br>
Vector (SIMD) registers, as the name suggests, contain multiple data elements. There are various types of vector registers:</p>
<ul dir="auto">
<li>mm registers - MMX registers, 64-bit sized, historic and not used much any more</li>
<li>xmm registers - XMM registers, 128-bit sized, widely available</li>
<li>ymm registers - YMM registers, 256-bit sized, some complications when using these</li>
<li>zmm registers - ZMM registers, 512-bit sized, limited availability</li>
</ul>
<p dir="auto">Most calculations in video compression and decompression are integer-based so we’ll stick to that. Here’s an example of 16 bytes in an xmm register:</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>a</th>
<th>b</th>
<th>c</th>
<th>d</th>
<th>e</th>
<th>f</th>
<th>g</th>
<th>h</th>
<th>i</th>
<th>j</th>
<th>k</th>
<th>l</th>
<th>m</th>
<th>n</th>
<th>o</th>
<th>p</th>
</tr>
</thead>
</table></markdown-accessiblity-table>
<p dir="auto">But it could be eight words (16-bit integers)</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>a</th>
<th>b</th>
<th>c</th>
<th>d</th>
<th>e</th>
<th>f</th>
<th>g</th>
<th>h</th>
</tr>
</thead>
</table></markdown-accessiblity-table>
<p dir="auto">Or four double words (32-bit integers)</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>a</th>
<th>b</th>
<th>c</th>
<th>d</th>
</tr>
</thead>
</table></markdown-accessiblity-table>
<p dir="auto">Or two quadwords (64-bit integers):</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>a</th>
<th>b</th>
</tr>
</thead>
</table></markdown-accessiblity-table>
<p dir="auto">To recap:</p>
<ul dir="auto">
<li><strong>b</strong>ytes - 8-bit data</li>
<li><strong>w</strong>ords - 16-bit data</li>
<li><strong>d</strong>oublewords - 32-bit data</li>
<li><strong>q</strong>uadwords - 64-bit data</li>
<li><strong>d</strong>ouble <strong>q</strong>uadwords - 128-bit data</li>
</ul>
<p dir="auto">The bold characters will be important later.</p>
<p dir="auto"><strong>x86inc.asm include</strong><br>
You’ll see in many examples we include the file x86inc.asm. X86inc.asm is a lightweight abstraction layer used in FFmpeg, x264, and dav1d to make an assembly programmer's life easier. It helps in many ways, but to begin with, one of the useful things it does is it labels GPRs, r0, r1, r2. This means you don’t have to remember any register names. As mentioned before, GPRs are generally just scaffolding so this makes life a lot easier.</p>
<p dir="auto"><strong>A simple scalar asm snippet</strong></p>
<p dir="auto">Let’s look at a simple (and very much artificial) snippet of scalar asm (assembly code that operates on individual data items, one at a time, within each instruction) to see what’s going on:</p>
<div dir="auto" data-snippet-clipboard-copy-content="mov  r0q, 3  
inc  r0q  
dec  r0q  
imul r0q, 5"><pre><span>mov</span><span>  r0q</span><span>,</span><span> </span><span>3</span><span>  </span>
<span>inc</span><span>  r0q  </span>
<span>dec</span><span>  r0q  </span>
<span>imul</span><span> r0q</span><span>,</span><span> </span><span>5</span></pre></div>
<p dir="auto">In the first line, the <em>immediate value</em> 3 (a value stored directly in the assembly code itself as opposed to a value fetched from memory) is being stored into register r0 as a quadword. Note that in Intel syntax, the source operand (the value or location providing the data, located on the right) is transferred to the destination operand (the location receiving the data, located on the left), much like the behavior of memcpy. You can also read it as “r0q = 3”, since the order is the same. The “q” suffix of r0 designates the register as being used as a quadword. inc increments the value so that r0q contains 4, dec decrements the value back to 3. imul multiplies the value by 5. So at the end, r0q contains 15.</p>
<p dir="auto">Note that the human readable instructions such as mov and inc, which are assembled into machine code by the assembler, are known as <em>mnemonics</em>. You may see online and in books mnemonics represented with capital letters like MOV and INC but these are the same as the lower case versions. In FFmpeg, we use lower case mnemonics and keep upper case reserved for macros.</p>
<p dir="auto"><strong>Understanding a basic vector function</strong></p>
<p dir="auto">Here’s our first SIMD function:</p>
<div dir="auto" data-snippet-clipboard-copy-content="%include &quot;x86inc.asm&quot;

SECTION .text

;static void add_values(const uint8_t *src, const uint8_t *src2)  
INIT_XMM sse2  
cglobal add_values, 2, 2, 2, src, src2   
    movu  m0, [srcq]  
    movu  m1, [src2q]

    paddb m0, m1

    movu  [srcq], m0

    RET"><pre><span>%include</span> <span>"x86inc.asm"</span>

<span>SECTION</span><span> .text</span>

<span>;static void add_values(const uint8_t *src, const uint8_t *src2)  </span>
<span>INIT_XMM sse2  </span>
<span>c</span><span>global</span> <span>add_values</span><span>,</span><span> </span><span>2</span><span>,</span><span> </span><span>2</span><span>,</span><span> </span><span>2</span><span>,</span><span> src</span><span>,</span><span> src2   </span>
<span>    movu  m0</span><span>,</span><span> </span><span>[</span><span>srcq</span><span>]</span><span>  </span>
<span>    movu  m1</span><span>,</span><span> </span><span>[</span><span>src2q</span><span>]</span>

<span>    </span><span>paddb</span><span> m0</span><span>,</span><span> m1</span>

<span>    movu  </span><span>[</span><span>srcq</span><span>],</span><span> m0</span>

<span>    </span><span>RET</span></pre></div>
<p dir="auto">Let’s go through it line by line:</p>

<p dir="auto">This is a “header” developed in the x264, FFmpeg, and dav1d communities to provide helpers, predefined names and macros (such as cglobal below) to simplify writing assembly.</p>

<p dir="auto">This denotes the section where the code you want to execute is placed. This is in contrast to the .data section, where you can put constant data.</p>
<div dir="auto" data-snippet-clipboard-copy-content=";static void add_values(const uint8_t *src, const uint8_t *src2);  
INIT_XMM sse2"><pre><span>;static void add_values(const uint8_t *src, const uint8_t *src2);  </span>
<span>INIT_XMM sse2</span></pre></div>
<p dir="auto">The first line is a comment (the semi-colon “;” in asm is like “//” in C) showing what the function argument looks like in C. The second line shows how we are initialising the function to use XMM registers, using the sse2 instruction set. This is because paddb is an sse2 instruction. We’ll cover sse2 in more detail in the next lesson.</p>
<div dir="auto" data-snippet-clipboard-copy-content="cglobal add_values, 2, 2, 2, src, src2"><pre><span>c</span><span>global</span> <span>add_values</span><span>,</span><span> </span><span>2</span><span>,</span><span> </span><span>2</span><span>,</span><span> </span><span>2</span><span>,</span><span> src</span><span>,</span><span> src2</span></pre></div>
<p dir="auto">This is an important line as it defines a C function called “add_values”.</p>
<p dir="auto">Let’s go through each item one at a time:</p>
<ul dir="auto">
<li>The next parameter shows it has two function arguments.</li>
<li>The parameter after that shows that we’ll use two GPRs for the arguments. In some cases we might want to use more GPRs so we have to tell x86util we need more.</li>
<li>The parameter after that tells x86util how many XMM registers we are going to use.</li>
<li>The following two parameters are labels for the function arguments.</li>
</ul>
<p dir="auto">It’s worth noting that older code may not have labels for the function arguments but instead address GPRs directly using r0, r1 etc.</p>
<div dir="auto" data-snippet-clipboard-copy-content="    movu  m0, [srcq]  
    movu  m1, [src2q]"><pre><span>    movu  m0</span><span>,</span><span> </span><span>[</span><span>srcq</span><span>]</span><span>  </span>
<span>    movu  m1</span><span>,</span><span> </span><span>[</span><span>src2q</span><span>]</span></pre></div>
<p dir="auto">movu is shorthand for movdqu (move double quad unaligned). Alignment will be covered in another lesson but for now movu can be treated as a 128-bit move from [srcq]. In the case of mov, the brackets mean that the address in [srcq] is being dereferenced, the equivalent of *<em>src in C.</em> This is what’s known as a load. Note that the “q” suffix refers to the size of the pointer *(*i.e in C it represents *sizeof(*src) == 8 on 64-bit systems, and x86asm is smart enough to use 32-bit on 32-bit systems) but the underlying load is 128-bit.</p>
<p dir="auto">Note that we don’t refer to vector registers by their full name, in this case xmm0,but as m0, an abstracted form. In future lessons you’ll see how this means you can write code once and have it work on multiple SIMD register sizes.</p>

<p dir="auto">paddb (read this in your head as <em>p-add-b</em>) is adding each byte in each register as shown below. The “p” prefix stands for “packed” and is used to identify vector instructions vs scalar instructions. The “b” suffix shows that this is bytewise addition (addition of bytes).</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>a</th>
<th>b</th>
<th>c</th>
<th>d</th>
<th>e</th>
<th>f</th>
<th>g</th>
<th>h</th>
<th>i</th>
<th>j</th>
<th>k</th>
<th>l</th>
<th>m</th>
<th>n</th>
<th>o</th>
<th>p</th>
</tr>
</thead>
</table></markdown-accessiblity-table>
<p dir="auto">+</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>q</th>
<th>r</th>
<th>s</th>
<th>t</th>
<th>u</th>
<th>v</th>
<th>w</th>
<th>x</th>
<th>y</th>
<th>z</th>
<th>aa</th>
<th>ab</th>
<th>ac</th>
<th>ad</th>
<th>ae</th>
<th>af</th>
</tr>
</thead>
</table></markdown-accessiblity-table>
<p dir="auto">=</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>a+q</th>
<th>b+r</th>
<th>c+s</th>
<th>d+t</th>
<th>e+u</th>
<th>f+v</th>
<th>g+w</th>
<th>h+x</th>
<th>i+y</th>
<th>j+z</th>
<th>k+aa</th>
<th>l+ab</th>
<th>m+ac</th>
<th>n+ad</th>
<th>o+ae</th>
<th>p+af</th>
</tr>
</thead>
</table></markdown-accessiblity-table>

<p dir="auto">This is what’s known as a store. The data is written back to the address in the srcq pointer.</p>

<p dir="auto">This is a macro to denote the function returns. Virtually all assembly functions in FFmpeg modify the data in the arguments as opposed to returning a value.</p>
<p dir="auto">As you’ll see in the assignment, we create function pointers to assembly functions and use them where available.</p>
<p dir="auto"><a href="https://github.com/FFmpeg/asm-lessons/blob/main/lesson_02/index.md">Next Lesson</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Recovering priceless audio and lost languages from old decaying tapes (125 pts)]]></title>
            <link>https://theconversation.com/how-were-recovering-priceless-audio-and-lost-languages-from-old-decaying-tapes-248116</link>
            <guid>43140547</guid>
            <pubDate>Sat, 22 Feb 2025 16:45:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://theconversation.com/how-were-recovering-priceless-audio-and-lost-languages-from-old-decaying-tapes-248116">https://theconversation.com/how-were-recovering-priceless-audio-and-lost-languages-from-old-decaying-tapes-248116</a>, See on <a href="https://news.ycombinator.com/item?id=43140547">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <p>Remember cassettes? If you’re old enough, you might remember dropping one into a player, only to have it screech at you when you pressed “play”. We’ve fixed that problem. But why would we bother?</p>

<p>Before the iPod came along, people recorded their favourite tunes straight from the radio. Some of us made home recordings with our sibling and grandparents – precious childhood snippets. </p>

<p>And a few of us even have recordings from that time we travelled to a village in Vanuatu, some 40 years ago, and heard the locals performing in a language that no longer exists.</p>

<p>In the field of linguistics, such recordings are beyond priceless – yet often out of reach, due to the degradation of old cassettes over time. With a new tool, we are able to repair those tapes, and in doing so can recover the stories, songs and memories they hold. </p>

<h2>A digital humanities telescope</h2>

<p>Our digital archive, <a href="https://paradisec.org.au/">PARADISEC</a> (Pacific and Regional Archive for Digital Sources in Endangered Cultures) contains thousands of hours of audio – mainly from musicological or linguistic fieldwork. This audio represents some 1,360 languages, with a major focus on languages of the Pacific and Papua New Guinea. </p>

<p>The PARADISEC research project was started in 2003 as a collaboration between the universities of Melbourne and Sydney, and the Australian National University. </p>

<p>Like a humanities telescope, PARADISEC allows us to learn more about the language diversity around us, as we explained in a 2016 <a href="https://theconversation.com/the-race-to-digitise-language-records-of-the-pacific-region-before-it-is-too-late-55568#comment_988678">Conversation article</a>.</p>

<h2>Lubing the screech</h2>

<p>While many of the tapes we get are in good condition and can be readily played and digitised, others need special care, and the removal of mould and dirt.</p>

<p>We work with colleagues at agencies such as the Solomon Islands National Museum, for whom we recently repaired a set of cassettes that were previously unplayable and just screeched. We’ll be taking those cassettes, now repaired and digitised, back to Honiara in February and expect to pick up more for further treatment. </p>

<p>Screeching happens when a tape is dried out and can’t move through the mechanism easily. The screeching covers the audio signal we want to capture. </p>

<p>In 2019, my colleague Sam King built (with the help of his colleague Doug Smith) a cassette-lubricating machine while working at the Australian Institute of Aboriginal and Torres Strait Islander Studies. This machine – likely the first of its kind in Australia – allowed us to play many previously unplayable tapes.</p>

<p>Last year, Sam built two versions of an updated machine called the LM-3032 Tape Restorator for PARADISEC, improving on the previous model. Between hand building some parts, 3D printing others and writing code for the controllers, it took him more than a year.</p>

<figure>
            <a href="https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=1000&amp;fit=clip"><p><img alt="" data-src="https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;fit=clip" data-srcset="https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=600&amp;h=800&amp;fit=crop&amp;dpr=1 600w, https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=600&amp;h=800&amp;fit=crop&amp;dpr=2 1200w, https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=600&amp;h=800&amp;fit=crop&amp;dpr=3 1800w, https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;h=1005&amp;fit=crop&amp;dpr=1 754w, https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=754&amp;h=1005&amp;fit=crop&amp;dpr=2 1508w, https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=754&amp;h=1005&amp;fit=crop&amp;dpr=3 2262w" sizes="(min-width: 1466px) 754px, (max-width: 599px) 100vw, (min-width: 600px) 600px, 237px" src="https://images.theconversation.com/files/644615/original/file-20250124-15-soc021.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;fit=clip"></p></a>
            <figcaption>
              <span>The 2024 LM-3032 Tape Restorator is an improved version of a model built in 2019.</span>
              <span><span>Sam King</span></span>
            </figcaption>
          </figure>

<h2>Preserving culture and heritage</h2>

<p>The LM-3032 Tape Restorator works by applying cyclomethicone (a silicone-based solvent used in cosmetics) to the length of a tape. This leaves behind an extremely thin film of lubrication that allows smoother playback, making digitisation possible. See more details <a href="https://www.paradisec.org.au/blog/2025/01/the-tape-restorator/">here</a>.</p>

<p>Tests have shown this process has no negative long-term effects on the tape. In fact, tapes treated with this method five years ago still play without issues. </p>

<p>This technological wizardry allows us to salvage precious analogue recordings before <a href="https://www.nfsa.gov.au/corporate-information/publications/deadline-2025">it’s too late</a>. For many languages, these may be the only known recordings – stored on a single cassette, in a single location, and virtually inaccessible. Some of the primary research records digitised by PARADISEC have survived long periods of neglect in offices, garages and attics.</p>

<p>The audio below is from a tape that was kept at Fitzroy Crossing in the Kimberley for 40 years. It features beautiful singing in the local Walmajarri language, with guitar accompaniment. The first seven seconds are from the untreated tape, while the rest is from the treated version.</p>

<p>
        Singing in Walmajarri, with guitar accompaniment. A side-by-side comparison of a tape treated with the LM-3032 Tape Restorator.
        <span><a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA</a><span><span>410 KB</span> <a target="_blank" rel="noopener" href="https://cdn.theconversation.com/audio/3069/tape-lubrication-example.mp3">(download)</a></span></span>
      </p>

<p>Our experience has shown community members truly value finding records in their own languages, and we’re committed to making this process easier for them.</p>

<p>Here’s one testimonial from E’ava Geita, Papua New Guinea’s current acting Solicitor General. In 2015, Geita was overjoyed to hear digitised records capturing PNG’s <a href="https://catalog.paradisec.org.au/collections/search?language_code=kqi">Koita language</a>:</p>

<blockquote>
<p>If only you witnessed and captured the reaction in me going through the recordings at home! It is quite an amazing experience! From feeling of awe to emotion to deep excitement! The feeling of knowing that your language has been documented or recorded in a structured way, kept safely somewhere in the world, hearing it spoken 50–60 years ago and by some people you haven’t seen but whose names you only hear in history is quite incredible. It is most heartwarming to know that it is possible to sustain the life of my language. Thank you once again for the opportunity to listen to the records. </p>
</blockquote>

<hr>

<p><em>Acknowlegement: I’d like to thank Sam King for the technical information provided in this article.</em></p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Discover the IndieWeb, one blog post at a time (256 pts)]]></title>
            <link>https://indieblog.page</link>
            <guid>43139953</guid>
            <pubDate>Sat, 22 Feb 2025 15:42:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://indieblog.page">https://indieblog.page</a>, See on <a href="https://news.ycombinator.com/item?id=43139953">Hacker News</a></p>
<div id="readability-page-1" class="page">
<header>
    <h2>indieblog.page</h2>
    <p>Discover the IndieWeb, one blog post at a time.</p>

    <nav>
    <a href="https://indieblog.page/">Home</a>
    <a href="https://indieblog.page/faq">FAQ</a>
    <a href="https://indieblog.page/rss">RSS</a>
    <a href="https://indieblog.page/all">List</a>
    <a href="https://indieblog.page/suggest">Suggest a blog</a>
</nav>
</header>

<main>
        <h2>👋 Hi there!</h2>

    <p>
        This website lets you randomly explore the IndieWeb. Simply click the button below and you
        will be redirected to a random post from a personal blog.
    </p>

    

    <blockquote>
        Disclaimer: the content linked to is aggregated automatically. I neither endorse nor necessarily agree with
        the linked sites. Use at your own risk.
    </blockquote>

    <p>
        <i>Hint:</i> you can drag the button to your bookmarks and have it always available when you want to be
        inspired.
    </p>

    

</main>







</div>]]></description>
        </item>
    </channel>
</rss>