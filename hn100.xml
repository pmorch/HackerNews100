<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 02 Oct 2025 15:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[NL Judge: Meta must respect user's choice of recommendation system (201 pts)]]></title>
            <link>https://www.bitsoffreedom.nl/2025/10/02/judge-in-the-bits-of-freedom-vs-meta-lawsuit-meta-must-respect-users-choice/</link>
            <guid>45448326</guid>
            <pubDate>Thu, 02 Oct 2025 11:32:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bitsoffreedom.nl/2025/10/02/judge-in-the-bits-of-freedom-vs-meta-lawsuit-meta-must-respect-users-choice/">https://www.bitsoffreedom.nl/2025/10/02/judge-in-the-bits-of-freedom-vs-meta-lawsuit-meta-must-respect-users-choice/</a>, See on <a href="https://news.ycombinator.com/item?id=45448326">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		<article id="post-57096">
							
			
			
			<div>
									<div>
								<ul>
									<li>
										02 oktober 2025									</li>
																	</ul>
							</div>
				
				
				

	<div>
			<h3>
				<p><strong>Today the judge issued a ruling in the summary proceedings brought by digital human rights organisation Bits of Freedom against Meta. The organisation demanded that Meta gives its users on apps such as Instagram and Facebook the option to select a feed that is not based on profiling.</strong></p>
			</h3>
		</div>

	<div>
								
									<div>
						<p><img width="150" height="150" src="https://www.bitsoffreedom.nl/wp-content/uploads/2017/03/evelyn-austin-juri-hiensch-150x150.jpg" alt="" decoding="async" srcset="https://www.bitsoffreedom.nl/wp-content/uploads/2017/03/evelyn-austin-juri-hiensch-150x150.jpg 150w, https://www.bitsoffreedom.nl/wp-content/uploads/2017/03/evelyn-austin-juri-hiensch-478x478.jpg 478w, https://www.bitsoffreedom.nl/wp-content/uploads/2017/03/evelyn-austin-juri-hiensch-100x100.jpg 100w" sizes="(max-width: 150px) 100vw, 150px" data-srcset="https://www.bitsoffreedom.nl/wp-content/uploads/2017/03/evelyn-austin-juri-hiensch-150x150.jpg 150w, https://www.bitsoffreedom.nl/wp-content/uploads/2017/03/evelyn-austin-juri-hiensch-478x478.jpg 478w, https://www.bitsoffreedom.nl/wp-content/uploads/2017/03/evelyn-austin-juri-hiensch-100x100.jpg 100w" data-src="https://www.bitsoffreedom.nl/wp-content/uploads/2017/03/evelyn-austin-juri-hiensch-150x150.jpg"></p>
					</div>
									<div>
						<p><img width="150" height="150" src="https://www.bitsoffreedom.nl/wp-content/uploads/2023/10/maartje-foto-website-150x150.png" alt="" decoding="async" srcset="https://www.bitsoffreedom.nl/wp-content/uploads/2023/10/maartje-foto-website-150x150.png 150w, https://www.bitsoffreedom.nl/wp-content/uploads/2023/10/maartje-foto-website-478x478.png 478w, https://www.bitsoffreedom.nl/wp-content/uploads/2023/10/maartje-foto-website-100x100.png 100w" sizes="(max-width: 150px) 100vw, 150px" data-srcset="https://www.bitsoffreedom.nl/wp-content/uploads/2023/10/maartje-foto-website-150x150.png 150w, https://www.bitsoffreedom.nl/wp-content/uploads/2023/10/maartje-foto-website-478x478.png 478w, https://www.bitsoffreedom.nl/wp-content/uploads/2023/10/maartje-foto-website-100x100.png 100w" data-src="https://www.bitsoffreedom.nl/wp-content/uploads/2023/10/maartje-foto-website-150x150.png"></p>
					</div>
						</div>



<div>
				<p>Bits of Freedom sued Meta for a breach of the Digital Services Act (DSA). This European legislation is intended to give users more autonomy and control over the major online platforms. One of the core elements of the DSA is that users must have greater influence over the information they see.</p>
<p>For many people, and especially for young people, social media platforms are a major source of news and information. Therefore it is crucial that users themselves can decide which content appears on their feed. Without that freedom of choice, participation in the public debate is seriously hampered. That is problematic at any time, but especially so during election periods. In the Netherlands, national elections will be held at the end of this month.</p>
<p>The judge states that Meta is indeed acting in violation of the law. He says that “a non‑persistent choice option for a recommendation system runs counter to the purpose of the DSA, which is to give users genuine autonomy, freedom of choice, and control over how information is presented to them.” The judge also concludes that the way Meta has designed its platforms constitutes “a significant disruption of the autonomy of Facebook and Instagram users.” The judge orders Meta to adjust its apps so that the user’s choice is preserved, even when the user navigates to another section or restarts the app.</p>
<blockquote><p>“We are pleased that the judge now makes clear that Meta must respect the user’s choice,” says Maartje Knaap, spokesperson for Bits of Freedom. “It is absolutely unacceptable that a handful of American tech billionaires determine how we see the world. That concentration of power poses a risk to our democracy. At the same time, it is regrettable that we need to go to court to ensure Meta complies with the law.”</p></blockquote>
<p>Meta has an interest in steering users toward a feed where it can show as many interest‑ and behavior‑based ads as possible. That is the core of Meta’s revenue model. Subtle design techniques push users toward that feed, while the non‑profiled feed is hidden behind a logo, making it hard to find. Users who do choose the alternative timeline also lose direct access to features such as Direct Messages. Moreover, when you open the app, it always starts with Meta’s feed, even if the user selected a different one before. Because of the judge’s ruling, Meta must change its behavior.</p>
<blockquote><p>“This ruling shows that Meta is not untouchable,” continues Maartje Knaap. “But we are also realistic, this is just a drop in the ocean. There’s still a long way to go. We hope the decision will inspire individuals, civil society organisations, regulators and lawmakers worldwide around the world who are working to rein in Meta’s power. Together we can stand up to a company that has become overwhelmingly powerful.”</p></blockquote>
<p>You can find the ruling <a href="https://www.bitsoffreedom.nl/wp-content/uploads/2025/10/20251002-vonnis-kort-geding.pdf" data-cke-saved-href="https://www.bitsoffreedom.nl/wp-content/uploads/2025/10/20251002-vonnis-kort-geding.pdf">here</a> (in Dutch).</p>
	</div>

				
									
				
				
		
	</div>
	</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How the AI Bubble Will Pop (175 pts)]]></title>
            <link>https://www.derekthompson.org/p/this-is-how-the-ai-bubble-will-pop</link>
            <guid>45448199</guid>
            <pubDate>Thu, 02 Oct 2025 11:05:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.derekthompson.org/p/this-is-how-the-ai-bubble-will-pop">https://www.derekthompson.org/p/this-is-how-the-ai-bubble-will-pop</a>, See on <a href="https://news.ycombinator.com/item?id=45448199">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p>Some people think artificial intelligence will be the most important technology of the 21st century. Others insist that it is an obvious economic bubble. I believe both sides are right. Like the 19th century railroads and the 20th century broadband Internet build-out, AI will rise first, crash second, and eventually change the world. </p><p><span>The numbers just don’t make sense. Tech companies are projected to spend about $400 billion this year on infrastructure to train and operate AI models. By nominal dollar sums, that is more than any group of firms has ever spent to do just about anything. The Apollo program allocated about $300 billion in inflation-adjusted dollars to get America to the moon between the early 1960s and the early 1970s. The AI buildout requires companies to collectively fund a new Apollo program, not every 10 years, but </span><em>every 10 months.</em></p><p><span>It’s not clear that firms are prepared to earn back the investment, and yet by their own testimony, they’re just going to keep spending, anyway. Total AI capital expenditures in the U.S. are projected to exceed $500 billion in 2026 and 2027—roughly the annual GDP of Singapore. But the </span><em>Wall Street Journal</em><span> has reported that American consumers spend only $12 billion a year on AI services. That’s roughly the GDP of Somalia. If you can grok the economic difference between Singapore and Somalia, you get a sense of the economic chasm between vision and reality in AI-Land. Some reports </span><a href="https://futurism.com/ai-hype-automation-decline#:~:text=Artificial%20intelligence%20might%20be%20booming,began%20in%20November%20of%202023." rel="">indicate</a><span> that AI usage is actually declining at large companies that are still trying to figure out how large language models can save them money.</span></p><p><span>Every financial bubble has moments where, looking back, one thinks: </span><em>How did any sentient person miss the signs?</em><span> Today’s omens abound. Thinking Machines, an AI startup helmed by former Open AI executive Mira Murati, just raised the largest seed round in history: $2 billion in funding at a $10 billion valuation. The company has not released a product and has refused to tell investors what they’re even trying to build. “It was the most absurd pitch meeting,” one investor who met with Murati </span><a href="https://www.bloomberg.com/opinion/newsletters/2025-09-29/the-perfect-ai-startup" rel="">said</a><span>. “She was like, ‘So we’re doing an AI company with the best AI people, but we can’t answer any questions.” Meanwhile, a recent analysis of stock market trends found that </span><a href="https://x.com/modestproposal1/status/1973045734401282343" rel="">none of the typical rules for sensible investing</a><span> can explain what’s going on with stock prices right now. Whereas equity prices have historically followed earnings fundamentals, today’s market is driven overwhelmingly by momentum, as retail investors pile into meme stocks and AI companies because they think everybody else is piling into meme stocks and AI companies.</span></p><p><span>Every economic bubble also has tell-tale signs of financial over-engineering, like the collateralized debt obligations and subprime mortgage-backed securities that blew up during the mid-2000s housing bubble. Ominously, AI appears to be entering its own phase of financial wizardry. As the </span><em>Economist</em><span> has pointed out, the AI hyperscalers—that is, the largest spenders on AI—are </span><a href="https://www.economist.com/business/2025/09/18/the-4trn-accounting-puzzle-at-the-heart-of-the-ai-cloud" rel="">using accounting tricks</a><span> to depress their reported infrastructure spending, which has the effect of inflating their profits</span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-174944187" href="https://www.derekthompson.org/p/this-is-how-the-ai-bubble-will-pop#footnote-1-174944187" target="_self" rel="">1</a><span>. As the investor and author </span><a href="https://paulkedrosky.com/" rel="">Paul Kedrosky</a><span> told me on my podcast </span><em><a href="https://podcasts.apple.com/us/podcast/plain-english-with-derek-thompson/id1594471023" rel="">Plain English</a></em><span>, the big AI firms are also shifting huge amounts of AI spending off their books into SPVs, or special purpose vehicles, that disguise the cost of the AI build-out. </span></p><p>My interview with Kedrosky received the most enthusiastic and complimentary feedback of any show I’ve done in a while. His level of insight-per-minute was off the charts, touching on:</p><ul><li><p><strong>How AI capital expenditures break down</strong></p></li><li><p><strong>Why the AI build-out is different from past infrastructure projects, like the railroad and dot-com build-outs</strong></p></li><li><p><strong>How AI spending is creating a black hole of capital that’s sucking resources away from other parts of the economy</strong></p></li><li><p><strong>How ordinary investors might be able to sense the popping of the bubble just before it happens</strong></p></li><li><p><strong>Why the entire financial system is balancing on big chip-makers like Nvidia</strong></p></li><li><p><strong>If the bubble pops, what surprising industries will face a reckoning</strong></p></li></ul><p>Below is a polished transcript of our conversation, organized by topic area and adorned with charts and graphs to visualize his points. I hope you learn as much from his commentary as much as I did. From a sheer economic perspective, I don’t think there’s a more important story in the world.</p><p><strong>Derek Thompson:</strong><span> How big is the AI infrastructure build-out?</span></p><p><strong>Paul Kedrosky:</strong><span> There’s a huge amount of money being deployed and it’s going to a very narrow set of recipients and some really small geographies, like Northern Virginia. So it’s an incredibly concentrated pool of capital that’s also large enough to affect GDP. I did the math and found out that in the first half of this year, the data-center related spending—these giant buildings full of GPUs [graphical processing units] and racks and servers that are used by the large AI firms to generate responses and train models—probably accounted for half of GDP growth in the first half of the year. Which is absolutely bananas. This spending is huge.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!ClnP!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!ClnP!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png 424w, https://substackcdn.com/image/fetch/$s_!ClnP!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png 848w, https://substackcdn.com/image/fetch/$s_!ClnP!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png 1272w, https://substackcdn.com/image/fetch/$s_!ClnP!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!ClnP!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png" width="707" height="484" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:484,&quot;width&quot;:707,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:141165,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.derekthompson.org/i/174944187?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!ClnP!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png 424w, https://substackcdn.com/image/fetch/$s_!ClnP!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png 848w, https://substackcdn.com/image/fetch/$s_!ClnP!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png 1272w, https://substackcdn.com/image/fetch/$s_!ClnP!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc8b22759-21ee-4b1a-afcc-9d1bfd53c11d_707x484.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>JP Morgan chart showing the rising contribution to GDP growth from tech capex</figcaption></figure></div><p><strong>Thompson:</strong><span> Where is all this money going?</span></p><p><strong>Kedrosky:</strong><span> For the biggest companies—Meta and Google and Amazon—a little more than half the cost of a data center is the GPU chips that are going in. About 60 percent. The rest is a combination of cooling and energy. And then a relatively small component is the actual construction of the data center: the frame of the building, the concrete pad, the real estate.</span></p><p><strong>Thompson:</strong><span> How do you see AI spending already warping the 2025 economy?</span></p><p><strong>Kedrosky</strong><span>: Looking back, the analogy I draw is this: massive capital spending in one narrow slice of the economy during the 1990s caused a diversion of capital away from manufacturing in the United States. This starved small manufacturers of capital and made it difficult for them to raise money cheaply. Their cost of capital increased, meaning their margins had to be higher. During that time, China had entered the World Trade Organization and tariffs were dropping. We’ve made it very difficult for domestic manufacturers to compete against China, in large part because of the rising cost of capital. It all got sucked into this “death star” of telecom.</span></p><p>So in a weird way, we can trace some of the loss of manufacturing jobs in the 1990s to what happened in telecom because it was the great sucking sound that sucked all the capital out of everywhere else in the economy.</p><p>The exact same thing is happening now. If I’m a large private equity firm, there is no reward for spending money anywhere else but in data centers. So it’s the same phenomenon. If I’m a small manufacturer and I’m hoping to benefit from the on-shoring of manufacturing as a result of tariffs, I go out trying to raise money with that as my thesis. The hurdle rate just got a lot higher, meaning that I have to generate much higher returns because they’re comparing me to this other part of the economy that will accept giant amounts of money. And it looks like the returns are going to be tremendous because look at what’s happening in AI and the massive uptake of OpenAI. So I end up inadvertently starving a huge slice of the economy yet again, much like what we did in the 1990s.</p><p><strong>Thompson: </strong><span>That’s so interesting. The story I’m used to telling about manufacturing is that China took our jobs. “The China shock,” as economists like David Autor call it, essentially took manufacturing to China and production in Shenzhen replaced production in Ohio, and that’s what hollowed out the Rust Belt. You’re adding that telecom absorbed the capital. </span></p><p>And now you fast-forward to the 2020s. Trump is trying to reverse the China shock with the tariffs. But we’re recreating the capital shock with AI as the new telecom, the new death star that’s taking capital that might at the margin go to manufacturing.</p><p><strong>Kedrosky:</strong><span> It’s even more insidious than that. Let’s say you’re Derek’s Giant Private Equity Firm and you control $500 billion. You do not want to allocate that money one $5 million check at a time to a bunch of manufacturers. All I see is a nightmare of having to keep track of all of these little companies doing who knows what.</span></p><p>What I’d like to do is to write 30 separate $50 billion checks. I’d like to write a small number of huge checks. And this is a dynamic in private equity that people don’t understand. Capital can be allocated in lots of different ways, but the partners at these firms do not want to write a bunch of small checks to a bunch of small manufacturers, even if the hurdle rate is competitive. I’m a human, I don’t want to sit on 40 boards. And so you have this other perverse dynamic that even if everything else is equal, it’s not equal. So we’ve put manufacturers who might otherwise benefit from the onshoring phenomenon at an even worse position in part because of the internal dynamics of capital.</p><p><strong>Thompson</strong><span>: What about the energy piece of this? Electricity prices rising. Data centers are incredibly energy thirsty. I think consumers will revolt against the construction of local data centers, but the data centers have enormous political power of their own. How is this going to play out?</span></p><p><strong>Kedrosky</strong><span>: So I think you’re going to rapidly see an offshoring of data centers. That will be the response. It’ll increasingly be that it’s happening in India, it’s happening in the Middle East, where massive allocations are being made to new data centers. It’s happening all over the world. The focus will be to move offshore for exactly this reason. Bloomberg had a great story the other day about an exurb in Northern Virginia that’s essentially surrounded now by data centers. This was previously a rural area and everything around them, all the farms sold out, and people in this area were like, wait a minute, who do I sue? I never signed up for this. This is the beginnings of the NIMBY phenomenon because it’s become visceral and emotional for people. It’s not just about prices. It’s also about: If you’ve got a six acre building beside you that’s making noise all the time, that is not what you signed up for.</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How Israeli actions caused famine, visualized (159 pts)]]></title>
            <link>https://www.cnn.com/2025/10/02/middleeast/gaza-famine-causes-vis-intl</link>
            <guid>45447699</guid>
            <pubDate>Thu, 02 Oct 2025 09:23:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2025/10/02/middleeast/gaza-famine-causes-vis-intl">https://www.cnn.com/2025/10/02/middleeast/gaza-famine-causes-vis-intl</a>, See on <a href="https://news.ycombinator.com/item?id=45447699">Hacker News</a></p>
Couldn't get https://www.cnn.com/2025/10/02/middleeast/gaza-famine-causes-vis-intl: Error: Request failed with status code 451]]></description>
        </item>
        <item>
            <title><![CDATA[Asked to do something illegal at work? Here's what these software engineers did (136 pts)]]></title>
            <link>https://blog.pragmaticengineer.com/asked-to-do-something-illegal-at-work/</link>
            <guid>45447536</guid>
            <pubDate>Thu, 02 Oct 2025 08:51:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.pragmaticengineer.com/asked-to-do-something-illegal-at-work/">https://blog.pragmaticengineer.com/asked-to-do-something-illegal-at-work/</a>, See on <a href="https://news.ycombinator.com/item?id=45447536">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main">
    <article>

        

        <section id="content">
            <p><em>Update on 2 Oct 2025: back in 2021, Charlie Javice, CEO of student loan startup Frank pressured a software engineer to inflate customer numbers. She told the engineer that she did not believe that anyone would end up in an ‘orange jumpsuit’ just for this. Still, the engineer refused – and was proven right. Javice, in fact, did end up in an orange jumpsuit, </em><a href="https://www.justice.gov/usao-sdny/pr/startup-ceo-charlie-javice-sentenced-85-months-prison-175-million-fraud?ref=blog.pragmaticengineer.com" rel="noreferrer"><em>sentenced</em></a><em> to 7 years of prison in 2025 for fraud.</em></p><hr><p><em>The below topic was sent out to full subscribers of </em><a href="https://newsletter.pragmaticengineer.com/about?ref=blog.pragmaticengineer.com" rel="noreferrer"><em>The Pragmatic Engineer</em></a><em>, three weeks ago, in </em><a href="https://newsletter.pragmaticengineer.com/p/the-pulse-66?ref=blog.pragmaticengineer.com" rel="noopener noreferrer nofollow"><em>The Pulse #66</em></a><em>. I have received several messages from people asking if they can pay to “unlock” this information for others, given how vital it is for software engineers. It is vital, and so I’m sharing this with all readers, without a paywall. In the unlikely case that you are asked to do something fishy or illegal: I hope the below will help decide how to do the right thing. </em></p><p><a href="https://newsletter.pragmaticengineer.com/about?ref=blog.pragmaticengineer.com" rel="noreferrer"><strong><em>Sign up to The Pragmatic Engineer</em></strong></a><em> to get articles like this earlier in your inbox. It's a pretty good read, and the </em><a href="https://substack.com/top/technology?ref=blog.pragmaticengineer.com" rel="noreferrer"><em>#1 tech publication</em></a><em> on Substack.</em></p><p>What would you do if you learned your company is up to something illegal like stealing customer funds, or you’re asked to make code changes that will enable something illegal to happen, like misleading investors, or defrauding customers? Here are three real-life cases, where what engineers and engineering managers did had serious consequences.</p><h4 id="ftx-an-engineering-director-went-along-with-the-fraud">FTX: an engineering director went along with the fraud</h4><p>A trial related to FTX, the cryptocurrency exchange which allegedly defrauded investors of $9B, is ongoing. Day 9 of the trial of former FTX CEO Sam Bankman-Fried trial, heard testimony from Nishad Singh, who joined the business as a software engineer, and later became an engineering director. Here is software engineer and writer Molly White <a href="https://newsletter.mollywhite.net/p/the-ftx-trial-day-nine-nishad-singh?ref=blog.pragmaticengineer.com" rel="noopener noreferrer nofollow">summarizes of his evidence</a>:</p><div><p>“To hear Singh tell it, he didn’t even really realize what was going on at FTX and Alameda Research until September 2022 — only a month or two before everything came crashing down. (...) Several times throughout various testimonies, we’ve seen a document written by Sam Bankman-Fried, in which he describes his thinking that Alameda Research should be shut down. That document was, ultimately, how Singh learned in September 2022 that Alameda Research had taken billions of dollars of customer funds from FTX.&nbsp;</p><p>This was when Gary Wang told Singh that Alameda was borrowing massive amounts of customer money from FTX — at the time, around $13 billion of it. Singh testified that he felt ‘really afraid’, and called an in-person meeting immediately. Bankman-Fried, who was sitting next to Singh at the time, ‘seemed unsurprised and made up what I understood to be a false excuse for dodging the meeting.’ Singh, Ellison, and Wang met without him, and Singh confirmed his fears: that he had not misunderstood Wang, and that Alameda had actually taken customer funds to that extent.”</p></div><p>Okay, so in September 2022, Singh had confirmation that something illegal was happening at the company, which he had no direct knowledge of, <em>until then</em>. At that point, if he wanted to avoid being an accomplice to potentially illegal activity, his options were:</p><ol><li>Talk to a lawyer on how to avoid assisting a crime</li><li>Turn whistleblower. See the <a href="https://thesignalsnetwork.org/twh/?ref=blog.pragmaticengineer.com" rel="noopener noreferrer nofollow">tech whistleblower guide</a></li><li>Quit the company, ensuring he did not further aid this activity&nbsp;</li></ol><p>The smart thing would have been to do #1. The profitable thing could have been to do #2 because in the US, a whistleblower may receive a <a href="https://www.phillipsandcohen.com/whistleblower-rewards?ref=blog.pragmaticengineer.com" rel="noopener noreferrer nofollow">whistleblower reward</a> of between 10-30% of what the government recovers from fraudulent activities. The final choice #3 is hard, but could have meant Singh would not have had to plead guilty as he did.&nbsp;</p><p>Here’s what Singh did instead: he asked for a personal meeting with Bankman-Fried and confronted him about the missing funds. However, Bankman-Fried replied there not much to worry about, and that they’d repay the funds by raising more money from investors (!!) This should have been the point at which Singh quit. Instead:</p><blockquote>“He thought about leaving the company then, he testified, but worried that his departure could cause everything to fall apart. He felt that if he stayed, maybe he could help the companies make back what they owed.”</blockquote><p>For the next two months, Singh tried to make things better, but it was fruitless. FTX collapsed in November 2022.</p><p><strong>Lesson #1: when you discover fraud may be happening, do not “stay around to fix it.” </strong>Any other approach would have been better for Singh; seeking legal advice, turning whistleblower, or quitting on the spot.</p><p>To be fair, Singh didn’t seen <em>totally</em> clueless, and it seems he decided to profit on the developments. Days after he found about this fraud, he took a $3.7M loan from FTX (!!) to buy a house, The Verge <a href="https://www.theverge.com/2023/10/17/23921745/sam-bankman-fried-nishad-singh-house-loan?ref=blog.pragmaticengineer.com" rel="noopener noreferrer nofollow">pointed out</a>. It’s exactly the type of thing you don’t want to do after you discover fraud.</p><p>Now, Singh is facing up to 75 years in jail thanks to his decision to aid the company after discovering the fraud. His sentence will most likely be reduced due to his plea deal, but any course of action which leads to a criminal conviction is surely a grave error of judgment.</p><h4 id="frank-a-software-engineer-refuses-to-fake-customer-data">Frank: a software engineer refuses to fake customer data</h4><p>Frank was a student loan startup founded by Charlie Javice in 2016. In 2019, Javice was featured on the Forbes “30 under 30” <a href="https://www.forbes.com/30-under-30/2019/finance/?ref=blog.pragmaticengineer.com#67e877a27e80" rel="noopener noreferrer nofollow">finance list</a>, suggesting she was a high-flying founder:</p><figure><img src="https://blog.pragmaticengineer.com/content/images/2023/11/Screenshot-2023-11-09-at-11.46.08.png" alt="How Charlie Javice appeared on the Forbes 30 under 30 list in 2019. We now know the 300,000 user number was fake. Source: Forbes" loading="lazy" width="1180" height="414" srcset="https://blog.pragmaticengineer.com/content/images/size/w600/2023/11/Screenshot-2023-11-09-at-11.46.08.png 600w, https://blog.pragmaticengineer.com/content/images/size/w1000/2023/11/Screenshot-2023-11-09-at-11.46.08.png 1000w, https://blog.pragmaticengineer.com/content/images/2023/11/Screenshot-2023-11-09-at-11.46.08.png 1180w" sizes="(min-width: 720px) 720px"><figcaption><span>How Charlie Javice appeared on the Forbes 30 under 30 list in 2019. We now know the 300,000 user number was fake. Source: Forbes</span></figcaption></figure><p>It certainly seemed like Charlie Javice was a standout founder; in 2021, JP Morgan purchased Frank for $175M. However, things turned sour quickly. JP Morgan thought it bought a startup with 5 million customers, which worked with 6,000 schools. But after the purchase, this data was found to be mostly fake.</p><p>Let’s get to a software engineer’s involvement. This April, founder Charlie Javice was arrested, and a lawsuit is ongoing between her, former Chief Growth Officer Olivier Amar, and JP Morgan. From to this lawsuit, we get an inside look at how events unfolded inside Frank.</p><p><strong>In 2021, an engineer was asked to produce fake data for 4.2M non-existent customers. </strong>As acquisition talks were ongoing, JP Morgan wanted to validate that Frank had the nearly 5M customers it claimed. In reality, Frank had 293,000 customers, so the CEO asked an engineer to fake the data and turn this list into 4.2M members. Here’s what happened next – from<a href="https://www.documentcloud.org/documents/23570243-frank_suit?ref=blog.pragmaticengineer.com#document/p21" rel="noopener noreferrer nofollow"> the lawsuit</a>:</p><div><p>“[In 2021] Javice [CEO], Amar [Chief Growth Officer] and the Director of Engineering then had a Zoom meeting during which Javice and Amar asked the Director of Engineering to help them create a synthetic list of customer data. She asked the Director of Engineering if he could help take a known set of FAFSA application data and use it to artificially augment a much larger set of anonymous data tht her systems had collected over time.</p><p>The Director of Engineering questioned whether creating and using such a data set was legal, but Javice tried to assure the engineer by claiming that this was perfectly acceptable in an investment situation and she did not believe that anyone would end up in an ‘orange jumpsuit’ over this project.”</p></div><p><strong>Lesson #2: when your manager claims they don’t believe anyone would end up in an “orange jumpsuit,” assume that someone definitely could. </strong>The engineering director’s next step? They refused:</p><p>“The Director of Engineering was not persuaded and told Javice and Amar that he would not perform the task, and only would send them the file containing Frank’s actual users, which amounted to approximately 293,000 individuals at the time.”</p><p>And this engineering director played it right, as the people who are likely to go to jail and end up in orange jumpsuits are the other two people on the call, who knowingly went along with the illegal.</p><h4 id="pollen-an-engineer-told-to-double-charge-customers-by-the-ceo">Pollen: an engineer told to double charge customers by the CEO</h4><p>Last year, I published my first – and to date only– investigative article on <a href="https://newsletter.pragmaticengineer.com/p/pollen?ref=blog.pragmaticengineer.com" rel="noopener noreferrer nofollow">how events tech startup Pollen raised $200M and then collapsed</a>, owing months of wages to staff. In the investigation, I focused on an unusual detail: $3.2M worth of funds taken months early from customers. The incident was described internally by Pollen as a mistake, and an incident review <em>should</em> have followed. Even more confusing, the company blamed the payments processor Stripe for the incident.</p><p>The reality was that this was a very deliberate double charge. I could not share this fact at the time – as the company threatened me with libel after I informed them of this detail – but the BBC has now produced a documentary <a href="https://www.bbc.co.uk/iplayer/episode/m001n327/crashed-800m-festival-fail?ref=blog.pragmaticengineer.com" rel="noopener noreferrer nofollow">revealing details</a> about this deliberate double charge that was covered up as an outage. From <a href="https://www.bbc.co.uk/programmes/m001n327?ref=blog.pragmaticengineer.com" rel="noopener noreferrer nofollow">the documentary</a>:</p><p>[Narrator] “Pollen initially told some customers that the problem was with their payments provider. Later, Callum [the CEO] addressed his staff who were demanding to know what happened.”</p><p>[CEO of Pollen talking] “All that happened was that a couple millions of dollars of payment plans that were due to be paid at a later month were then paid earlier. It’s being investigated. We’ve committed already that once that investigation is done, it will be shared with the company so that people understand what happened.”</p><p>[Narrator] “With over 1,500 customers impacted, rumors began to circulate about the causes of the incident.”</p><p>[Dan Taylor, managing editor at Tech.eu] “From my understanding, there was a creative code ‘malfunction’ that all of the sudden, double charged customers. But that double charge magically happened to meet Pollen’s payroll, that month. Hmm! Odd, don’t you think?”</p><p>[Narrator] “The internal investigation due to be shared with the company was never completed, but a group of Pollen staff did their own, unofficial digging. (...) The code contained in the report confirms that the customer's monthly payment plans had been manually altered, which meant that double or triple charges will take place on a single day, without the customer’s authorization.”</p><p>The engineer making this change even did a test run the day before, to ensure that this code change “correctly” double charges customers! A former Pollen software engineer appearing in the documentary also makes the point that any code changing production code in payments needs to go through code review, so whoever made this change could have not been acting alone.</p><p>Two days after the incident, a senior engineering team member sent an internal chat message to 3 colleagues, where they admit that they had run the script at the request of the CEO. Here is what this message said:</p><blockquote>“Also want to come clean that it was me who ran a bad script - in hindsight I wasn’t knowledgeable enough to alter a subset of payment plans for Balvin [one of the events organized by Pollen]. I did this as a special request from Callum and didn’t want to raise on call to handle. It’s been a long week and I displayed a very poor form of judgement.”</blockquote><p>In the video, a Pollen software engineer is shown the message, and he says: “I’m not sure I buy this. It seems a bit fishy.”</p><p><strong>Lesson #3: if the CEO asks you to do something potentially illegal – document it, and consider not doing it. </strong>We don’t know what happened with the senior engineering member who carried out the code changes, following a request from the CEO. This person could have said no, like the engineering director at Frank did. The message sent a few days ago already said that this person regretted doing so, and it’s unlikely that this action was worth the risk it carried.</p><p><strong>If you take one lesson from this, it’s that you can always say no. </strong>In these three stories, the only engineer who’s legally safe is the former engineering director at Frank who point blank refused to assist what could be an illegal request. The engineering director at FTX who stayed after he confirmed fraud was occurring is now facing jail time, while the senior engineering member at Pollen is at the mercy of the UK police, and how they deal with what could be a potential wire fraud case.&nbsp;</p>


            <!-- Newsletter -->
            <p>
              <a href="https://newsletter.pragmaticengineer.com/about">Subscribe to my weekly newsletter</a> to get articles like this in your inbox. It's a pretty good read - and the <a href="https://substack.com/top/technology">#1 tech newsletter</a> on Substack.
            </p>
            
        </section>

        
    </article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Immich v2.0.0 – First stable release (369 pts)]]></title>
            <link>https://github.com/immich-app/immich/discussions/22546</link>
            <guid>45446834</guid>
            <pubDate>Thu, 02 Oct 2025 06:25:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/immich-app/immich/discussions/22546">https://github.com/immich-app/immich/discussions/22546</a>, See on <a href="https://news.ycombinator.com/item?id=45446834">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="presentation" data-paste-markdown-skip="">
    <tbody data-target-translation-id="8971417" data-target-translation-type="discussion">
        <tr>
    <td>
        <h2 dir="auto">v2.0.0 - Stable Release of Immich</h2>
<p dir="auto"><a href="https://www.youtube.com/watch?v=xz8LfGXgFAI" rel="nofollow">Watch the video</a></p>
<p dir="auto"><a href="https://www.youtube.com/watch?v=xz8LfGXgFAI" rel="nofollow"><img src="https://camo.githubusercontent.com/ed58cd08a441dd9a013bcc51e61ef4c4fe0f4bd852807fd5204d6d4ecdb0c82d/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f787a384c664758674641492f6d617872657364656661756c742e6a7067" alt="YouTube Video" data-canonical-src="https://img.youtube.com/vi/xz8LfGXgFAI/maxresdefault.jpg"></a></p>
<h2 dir="auto">Welcome</h2>
<p dir="auto">Hello everyone,</p>
<p dir="auto">After:</p>
<ul dir="auto">
<li><em>~1,337 days,</em></li>
<li><em>271 releases,</em></li>
<li><em>78,000 stars on GitHub,</em></li>
<li><em>1,558 contributors,</em></li>
<li><em>31,500 members on Discord,</em></li>
<li><em>36,000 members on Reddit,</em></li>
<li><em>68 languages on Weblate,</em></li>
<li><em>Surviving the controversial announcement about joining FUTO,</em></li>
<li><em>Having overwhelming success and support from the community with the product keys model,</em></li>
<li><em>Launching the Merch store,</em></li>
<li><em>Attending our first FOSDEM,</em></li>
<li><em>...and <strong>before</strong></em> <em>the release of GTA VI</em></li>
</ul>
<p dir="auto">We are thrilled to announce the <strong>stable release of Immich!</strong> 🎉</p>
<p dir="auto">This has been a journey long in the making. So much has changed since the first commit on the project, all the way back in February, 2022. The project and team continue to grow, and today we’re proud to announce <code>v2.0.0</code>, our stable release. Stable signifies that we have now resolved a significant amount of technical debt. It also means we will be prioritizing compatibility and less effort will be required to keep Immich up-to-date. Finally, it means that the warning banner on the website has been removed! Along with this, we’re happy to announce a new version of the <a href="https://immich.app/" rel="nofollow">https://immich.app/</a> website.</p>
<p dir="auto">For more specifics about the stable release, see our <a href="#user-content-faqs">FAQs</a> below.</p>
<h2 dir="auto">Merch and DVD</h2>
<p dir="auto">To celebrate this release, we want to capture this moment in a nostalgic form, reminiscent of how software was distributed in our childhood - on a CD (or DVD, in this “case”). Introducing Immich Stable in physical form! You can find the link to the disk <a href="https://immich.store/products/immich-retro" rel="nofollow">here</a></p>
<a href="https://immich.store/products/immich-retro" rel="nofollow">
<img width="1200" alt="image" src="https://private-user-images.githubusercontent.com/27055614/496353055-c3883849-ffeb-4022-9b7a-09cbdd7c714c.png?jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTkzOTc3MDIsIm5iZiI6MTc1OTM5NzQwMiwicGF0aCI6Ii8yNzA1NTYxNC80OTYzNTMwNTUtYzM4ODM4NDktZmZlYi00MDIyLTliN2EtMDljYmRkN2M3MTRjLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTEwMDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUxMDAyVDA5MzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTRmMTZmZDA5MzlhNjA1OGYzYTc5NTNiMjI2YjZiYjQ1MThiOGZlYWVmYWExNjBmOGJiYjMwY2YyOWY0MTIyYWEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.uXCyqI3xWs9Iuv7G1W3exnxrWVKXO3wKSst9nTuIkpY" secured-asset-link="">
</a>
<p dir="auto">The disk comes with a fully bootable Immich instance, featuring a selection of curated photos chosen by the team. You can purchase the disk from our merch store, along with a client or server product key, to support and celebrate this milestone with us.</p>
<p dir="auto">The merch store is also updated with retro-styled Immich designs, check it out in <a href="https://immich.store/" rel="nofollow">https://immich.store</a></p>
<a href="https://immich.store/" rel="nofollow">
<img width="1200" alt="image" src="https://private-user-images.githubusercontent.com/27055614/496353135-d2dc89c2-61af-4f64-afae-10c98ffbb08f.png?jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NTkzOTc3MDIsIm5iZiI6MTc1OTM5NzQwMiwicGF0aCI6Ii8yNzA1NTYxNC80OTYzNTMxMzUtZDJkYzg5YzItNjFhZi00ZjY0LWFmYWUtMTBjOThmZmJiMDhmLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTEwMDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUxMDAyVDA5MzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTI2OWY5NmFmYzYwMjQ5MTNhNmQyNDRjYThiZWEzZjA2MzEwZTI4OTkyMmMwNmNkODJiMTllZjAwMWY3ZWU1ODgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.bZxwNO6jqlW6RrDTbKHvsfmOWEm85cbghrgC2nriPCA" secured-asset-link="">
</a>
<h2 dir="auto">Future plans</h2>
<p dir="auto">Now that Immich is stable, here are some of the things that we will be focusing on:</p>
<ul dir="auto">
<li><strong>Roadmap</strong> — There are still a few items on our roadmap that we want to complete before the year ends such as auto-stacking, and achieving feature parity between the web and mobile app. We also have plans to start work on improved stack support, better sharing, group management, and ownership improvements, as well as many other enhancements.</li>
<li><strong>Usage data</strong> — The team wants to understand how the software is used, so that we can make better, informed decisions as we design and build Immich. We want to collect that information in a non-invasive and transparent way. We plan to discuss it with the community and gather feedback from everyone to come up with the best solution.</li>
<li><strong>Backup services</strong> — We aim to introduce additional paid services (<em>not paywalled features, as we will never implement paywalled features</em>), which will help support the project and that enhance self-hosting, making it easier and more reliable. First among the many services already planned is an end-to-end encrypted, off-site backup and restore feature, built directly into Immich. This will enable a buddy backup feature as well.</li>
</ul>
<h2 dir="auto">Thank you</h2>
<p dir="auto">We cannot thank you enough for the support over the past three years. Community participation, from the first comments on the <a href="https://www.reddit.com/r/selfhosted/comments/si5lp6/i_am_building_a_selfhosted_alternative_version_of/" rel="nofollow">original reddit post</a>, to the feedback when we joined FUTO, have contributed to the awesome product Immich is today. Thank you for joining us and believing in our mission to regain control over your most precious data. Here’s to many more years!</p>
<p dir="auto">We'll also be hosting a Q&amp;A livestream tomorrow, <strong>October 2nd, 2025 at 6 PM UTC</strong>. You can submit your questions <a href="https://www.live-ask.com/event/01K6GFKQGJSB1GQC086ZJW6F6R" rel="nofollow">here</a> and subscribe for notifications when the livestream starts <a href="https://www.youtube.com/live/qgQ4ci2hRMQ" rel="nofollow">here</a>.</p>
<p dir="auto">Cheers,</p>
<p dir="auto">The Immich Team</p>
<hr>
<h2 id="user-content-faqs" dir="auto">FAQs</h2>
<h2 dir="auto">Will there be a live stream?</h2>
<p dir="auto">Yes. We'll be hosting a Q&amp;A livestream tomorrow, <strong>October 2nd, 2025 at 6 PM UTC</strong>. You can submit your questions <a href="https://www.live-ask.com/event/01K6GFKQGJSB1GQC086ZJW6F6R" rel="nofollow">here</a> and subscribe for notifications when the livestream starts <a href="https://www.youtube.com/live/qgQ4ci2hRMQ" rel="nofollow">here</a>.</p>
<h2 dir="auto">Do I still need backups?</h2>
<p dir="auto">Yes! A 3-2-1 backup strategy is still crucial. The team has the responsibility to ensure that the application doesn’t cause loss of your precious memories; however, we cannot guarantee that hard drives will not fail, or an electrical event causes unexpected shutdown of your server/system, leading to data loss. Therefore, we still encourage users to follow best practices when safeguarding their data. Keep multiple copies of your most precious data: at least two local copies and one copy offsite in cold storage. Additionally, we are starting to work on a cloud backup service to make backups easier.</p>
<h2 dir="auto">When will <code>v2.0.0</code> be available?</h2>
<p dir="auto">The Docker images for <code>v2.0.0</code> will be pushed out a few hours after this post is released.</p>
<h2 dir="auto">How can I update to <code>v2.0.0</code>?</h2>
<p dir="auto">You can follow the upgrade documentation, <a href="https://docs.immich.app/install/upgrading" rel="nofollow">here</a>.</p>
<h2 dir="auto">What versioning strategy will Immich use?</h2>
<p dir="auto">Starting with <code>v2.0.0</code>, we will now follow <a href="https://semver.org/" rel="nofollow">semantic versioning</a>.</p>
<h2 dir="auto">What mobile app versions will work with <code>v2.0.0</code>?</h2>
<p dir="auto">Any <code>v2.x.x</code> version of the mobile app will work with any <code>2.x.x</code> version of the server. For example, a mobile app on version <code>v2.9.0</code> will continue to work with server versions: <code>v2.0.0</code>, <code>v2.1.0</code>, <code>v2.3.1</code>, etc.</p>
<h2 dir="auto">Will new features continue to be released?</h2>
<p dir="auto">Yes. Immich will continue to build, develop, and release new features.</p>
    </td>
  </tr>

    </tbody>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Keyhive – Local-first access control (142 pts)]]></title>
            <link>https://www.inkandswitch.com/keyhive/notebook/</link>
            <guid>45445114</guid>
            <pubDate>Thu, 02 Oct 2025 00:12:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.inkandswitch.com/keyhive/notebook/">https://www.inkandswitch.com/keyhive/notebook/</a>, See on <a href="https://news.ycombinator.com/item?id=45445114">Hacker News</a></p>
<div id="readability-page-1" class="page">

  <header>
    
    <h2>Local-first access control</h2>

    

    <div>
<p>🐝</p>
<p>Keyhive is a project exploring local-first access control. It aims to provide a firm basis for secure collaboration, similar to the guarantees of private chat but for any local-first application.</p>
<p>In this lab notebook, we’ll share snippets of our findings as we explore the problem space and prototype potential solutions.</p>
<p>The entries start from the beginning, but you can jump to the most recent post: <a href="https://www.inkandswitch.com/keyhive/notebook/05/">05 · Syncing Keyhive</a></p>
    </div>
  </header>

<article>
  <h2><a href="https://www.inkandswitch.com/keyhive/notebook/00/">00 · Keyhive Background</a></h2>
  <p>2024 Aug 1</p>
<p>As the <a href="https://www.inkandswitch.com/local-first/">local-first</a> ecosystem matures, the contexts that local-first applications fill has also expanded. Local-first emphasizes collaboration, but the constraints on an application are different if you build an application for you and a handful of friends versus delivering a team-oriented product. Your data not being viewable or editable by everyone in the world is a basic requirement of applications ranging from planning a surprise party, corporate meeting notes, book drafts, and legal contracts.</p>
<p>Today’s most common access control patterns assume a central server. While cloud auth tools are forever developing, generally speaking existing tools for cloud auth are very mature. Doing access control without a cloud auth server requires rethinking the underlying mechanics of how auth works. Keyhive is an attempt to do secure and efficient local-first auth while retaining the user experience found in familiar applications like Google Docs, Dropbox, GitHub, and Discord. We believe that these are table stakes for the next generation of local-first applications.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/00/github-rbac.png" alt="GitHub Repo Membership Page">
<figcaption>
<p>A GitHub repository permissions page</p>
</figcaption>
</figure>
<p>We’ve seen user-agency principals successfully applied to other contexts. <a href="https://signal.org/">Signal</a> popularized end-to-end encrypted chat while retaining much of the convenience of less-secure messaging applications. We find ourselves asking “what would Signal for documents look like?”</p>
<h2>Least Surprise</h2>
<p>Unlike a cloud auth system which can depend on the network to keep data hidden behind a web API, local-first runs a complete copy of the application at each replica. What are the correct bounds on access control when everyone has direct access to all of the content? Ultimately access control is about collaboration. Collaboration and access control can be seen as two sides of the same topic: who do you want to collaborate with, in which ways, and for how long?</p>
<p>CRDTs try to merge data in the least surprising way possible. For example, concurrent text will merge to produce the same data on all replicas, but the resulting paragraphs may not make sense next to each other. Users then fix these semantic errors manually. We believe that this is a major improvement over the user experience of something like Git, which often gets stuck and demands user intervention.</p>
<p>The equivalent situation exists for concurrent access control, but the stakes are higher. Preventing your friend from learning that you’re planning a surprise party, or opposing legal councel from altering your case prep are both important, and it should be clear how they will behave despite any underlying concurrency. The behavior of an access control system should be as clear to the end user as possible. Since there is no single source of truth about who can do what at any given time, the rules themselves need to be straightforward.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/00/history.png" alt="Ranges of authorization over time">
<figcaption>
<p>Ranges of authorization (and revocation) over time. Here 🙋‍♀️ is added, removed, and re-added later. Some of 🙋‍♀️’s updates are not materialized based on where they’re ordered in the document history.</p>
</figcaption>
</figure>
<h2>Out of Obscurity</h2>
<p>Often local-first applications today depend on <a href="https://en.wikipedia.org/wiki/Security_through_obscurity">“security through obscurity”</a>. For example, by default you can write into any <a href="https://automerge.org/">Automerge</a> document that you know the document ID for. This style is sometimes called “<a href="http://erights.org/talks/thesis/markm-thesis.pdf">Swiss number</a>” or “<a href="https://en.wikipedia.org/wiki/Rumpelstiltskin">Rumpelstiltskin</a>” security. It works as long as the document ID is only ever shared with people that you want to collaborate with, your security is all-or-nothing, and you never want to later remove someone from a document. If the document ID leaks (e.g. someone posts it to Bluesky), then the document is world-writable.</p>
<p>In lieu of a widely-adopted<sup><a href="#fn1" id="fnref1">1</a></sup> purely local-first access control system, some teams have tried leveraging existing auth methods by routing updates through a cloud auth server (e.g. <a href="https://en.wikipedia.org/wiki/OAuth">OAuth</a> login and auth logic in a server). Others have opted to emphasize decentralized user agency by using a blockchain to store access control policies. Both of these approaches require a network connection in order to check if an update is valid, which is not local-first. Bringing access control features to a local-first context requires rethinking how authority flows between nodes.</p>
<p>What we want is a system that retains the best of the above: the self-certification of Rumpelstiltskin, the power of auth servers, and the user agency of decentralized solutions. Following the definition of local-first, applications should accept updates after arbitrarily long periods of disconnection. Extending that requirement to access control means the ability to revoke access or have finer grained control (e.g. read vs write) requires tracking who has authorization to do what, and at which point in the document’s history.</p>
<!-- Footnotes -->
<!-- External Links -->
<section role="doc-endnotes"><hr><ol>
<li id="fn1"><p>While we believe that local-first access control is nascent, the Keyhive team is grateful to benefit from work done by other projects. Some of our inspirations include <a href="https://mattweidner.com/assets/pdf/acs-dissertation.pdf">Causal TreeKEM</a>, <a href="https://ieeexplore.ieee.org/document/4032481">Cryptree</a>, <a href="https://dl.acm.org/doi/pdf/10.1145/3460120.3484542">DCGKA</a>, <a href="https://github.com/local-first-web/auth">Local-First Auth</a>, <a href="https://matrix.org/">Matrix</a>, <a href="https://www.serenity.page/">Serenity</a>, <a href="https://tahoe-lafs.org/trac/tahoe-lafs">Tahoe-LAFS</a>, <a href="https://github.com/ucan-wg">UCAN</a>, and <a href="https://github.com/wnfs-wg">Web Native File System</a>. <a href="#fnref1">↩︎</a></p>
</li>
</ol>
</section>
</article>
<article>
  <h2><a href="https://www.inkandswitch.com/keyhive/notebook/01/">01 · Welcome to the Keyhive</a></h2>
  <p>2024 Sept 5</p>
<p>Today’s cloud services have very mature access control features. These systems depend on a key architectural detail: they are able to rely on encapsulation by taking advantage of the network boundary. Since data is not available to read or write directly by the client, a privileged guard process is able to apply arbitrary access control rules. This process retrieves and/or mutates data on behalf of clients.</p>
<p>This power unfortunately comes at a price: since auth is on the hot path of every request — and generally depends on a central single-source-of-truth auth database — authorization at scale often bottlenecks overall application performance. And yet, an attacker that is able to bypass the auth part of the request lifecycle has unmitigated access to arbitrarily read, change, or delete the application’s data. This is to say nothing of the complexity of building, deploying, and maintaining cloud architectures to get that network boundary in the first place!</p>
<p>For local-first software to be successful in many production contexts, it needs to provide similar features without relying on a central authorization server. The local-first setting does not have the luxury of a network boundary: access control must travel with the data itself and work without a central guard.</p>
<p>There are also some tricky edge cases due to causal consistency. What should happen to honest operations that causally depend on content that’s later discovered to be malicious? What is the best strategy to handle operations from an agent that was revoked concurrently, especially given that “back-dating” operations is always possible. If a document has exactly two admins (and many non-admin users), what should happen if the admins concurrently revoke each other (for instance, one is malicious)?</p>

<p>To address the above challenges, we’ve started work on Keyhive: a project focused on local-first access control. Our goal is to design and build a production ready instance of such a system which is general enough for most local-first applications.</p>
<h2 id="audience-and-application"><a href="#audience-and-application">Audience &amp; Application</a></h2>
<p>To date, the local-first ecosystem has primarily used a purely pull-based model where users manually decide which changes to accept. This approach is often sufficient for personal projects: each user can manually decide which peers to connect to and which changes should be applied. On the other hand, many production contexts have lower trust, require higher alignment, and are ideally low touch <em>enough</em> so that it’s not up to each person in a large organization to separately and manually infer who to trust. As a rough north star, we’re keeping the following use cases in mind:</p>
<ul>
<li>Publishing (publicly visible data with restricted edits, like a blog)</li>
<li>Planning a surprise party: small groups, low risk</li>
<li>Meeting notes: small-to-medium groups, low-to-medium risk</li>
<li>Corporate legal documents: medium-to-large groups, medium-to-high risk</li>
<li>Journalists &amp; activists: small-to-medium groups, high risk</li>
</ul>
<p>Cryptography has a reputation for being slow, especially if there’s crypto-heavy code running on low-powered devices. To have a performance margin that can cover a large range of practical use cases, Keyhive aims to run efficiently over at least ten-of-thousands of documents, millions of readers, thousands of writers, and hundreds of admins/superusers.</p>
<h3 id="antigoals"><a href="#antigoals">Antigoals</a></h3>
<p>Since authorization, authentication, and identity are often conflated, it is worth highlighting that Keyhive deliberately excludes user identity (i.e. the binding of a human identity to an application’s identifier like a public key). In our initial community consultations we found that there are many different identity mechanisms that developers downstream of Keyhive would like to use. As such, we’re designing the system to be <a href="https://en.wikipedia.org/wiki/Zooko's_triangle">decentralized and secure</a>, and leave name registration/discovery and user verification (e.g. email or social) to a future layer above Keyhive.</p>
<p>The following are left out of our design goals:</p>
<ul>
<li>Constraining downstream applications to use a small predefined set of policies or roles</li>
<li>Interactive protocols (since local-first must work under network partition)</li>
<li>Reliance on a central authority</li>
<li><a href="https://en.wikipedia.org/wiki/Cryptographic_agility">Cryptographic agility</a></li>
<li><a href="https://en.wikipedia.org/wiki/Federal_Information_Processing_Standards">FIPS</a> (or similar) compliance</li>
</ul>
<h2 id="layers"><a href="#layers">Layers</a></h2>
<p>Most client/server backends place data at the bottom, and compute over it. In that model, auth is just another kind of computation. Leaving access control to a central process is not possible in a local-first context. In our context, the auth layer must act as a foundation.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/01/stack-changes.png" alt="Comparing how authorization is layered in centralized and local-first applications">
</figure>
<p>Static authorization typically impacts the design of all other layers of a project. As an intuition, the storage layer will need to support data that is encrypted-at-rest, and so its design has a dependency on the auth layer. This means that since the design of an authorization mechanism may impose downstream constraints, its design should consider such potential impacts on the design of the rest of the stack. As much as possible, this project attempts to minimize imposing such constraints on other layers.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/01/block-diagram.png" alt="Dependency Stack">
</figure>
<p>Keyhive (as currently designed) carves out three layers to handle this:</p>
<ol>
<li><strong>Convergent Capabilities:</strong> A new <a href="https://en.wikipedia.org/wiki/Object-capability_model">capability</a> model appropriate for CRDTs, and sits between object- and certificate-capabilities</li>
<li><strong>A Group Management CRDT:</strong> Self-certifying, concurrent group management complete with coordination-free revocation</li>
<li><strong>E2EE with Causal Keys:</strong> With <a href="https://eprint.iacr.org/2016/221.pdf">post-compromise security (PCS)</a> and symmetric key management granting access to causal predessesors.</li>
</ol>
<p>These three have a strong dependency between each other. Capabilities enable use to manage groups, and groups let us share keys for E2EE. We will go into more detail on all three in future posts, but in the meantime here is a very high level treatment:</p>
<h3 id="convergent-capabilities"><a href="#convergent-capabilities">Convergent Capabilities</a></h3>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/01/granovetter.png">
<figcaption>
<h4>Granovetter Diagram</h4>
<p>A diagram showing Alice delegating to Bob her existing access to Carol</p>
</figcaption>
</figure>
<p>Capabilities and delegation form the basic access control mechanism that are known to be <a href="https://srl.cs.jhu.edu/pubs/SRL2003-02.pdf">very expressive</a>. In short: all Automerge documents get identified by a public key, and delegate control over themselves to other public keys. This provides stateless self-certification with a cryptographic proof. Public keys in the system can represent anything: other documents, users, groups, or anything else. This is a very low-level mechanism that can be used to model high level concepts like <a href="http://wiki.erights.org/wiki/Walnut/Secure_Distributed_Computing#Powerbox_Capability_Manager">powerboxes</a>, <a href="https://en.wikipedia.org/wiki/Role-based_access_control">roles</a>, device groups, and more with very little code, all while remaining extensible to new patterns.</p>
<p><a href="https://en.wikipedia.org/wiki/Object-capability_model">Object-capabilities</a> (AKA “ocap”) are “<a href="https://en.wikipedia.org/wiki/Fail-stop">fail-stop</a>”, meaning that they intentionally stop working if there’s a network partition to <a href="https://en.wikipedia.org/wiki/PACELC_theorem">preserve consistency over availability</a>. Since local-first operates under partition (e.g. offline), parts of the classic object-capability design are not suitable. Certificate capabilities such as <a href="https://www.rfc-editor.org/rfc/rfc2693">SPKI/SDSI</a>, <a href="https://w3c-ccg.github.io/zcap-spec/">zcap-ld</a> and <a href="https://github.com/ucan-wg">UCAN</a> are partition-tolerant, but depend on stateless certificate chains which is highly scalable but somewhat limits their flexibility. We propose a system between the two: convergent capabilities (“concap” for short) which contain CRDT state to get the benefits of both while retaining suitability for local-first applications.</p>

<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/01/doc-group.png">
<figcaption>
<h4>An Automerge Document Agent</h4>
<p>A Keyhive document in isolation, with a simplified view of its stateful delegation graph.</p>
</figcaption>
</figure>
<p>Concurrent access control will always have some tricky situations. The big obvious ones are what to do if two admins concurrently revoke each other, or happened if operations depend on others that were revoked, and how to handle maliciously back-dated updates. There is quite a lot to discuss on this topic, so we’ll leave it for a future post.</p>
<h3 id="transitive-groups"><a href="#transitive-groups">Transitive Groups</a></h3>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/01/device-management.png">
<figcaption>
<h4>Device Management</h4>
<p>A Keyhive group showing how devices can be managed behind a proxy (‘Alice’). Documents in this scenario only need to know about Alice, not every device.</p>
</figcaption>
</figure>
<p>Groups are built on top of convergent capabilities. They’re “just” a thin design pattern, but help model things like user devices, teams, and more. By following the delegations between groups, we can discover which public keys have what kind of access to a certain document. This provides a handy abstraction over teams and user devices. By following the links, it both lets a writer know who has read access (i.e. who to share keys for the latest E2EE chunk with), and lets the <a href="#trust-minimized-sync-servers">trust-minimized sync engine</a> know which documents the current device can request from the server.</p>
<h3 id="e2ee-with-causal-keys"><a href="#e2ee-with-causal-keys">E2EE with Causal Keys</a></h3>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/01/causal-encryption.png">
<figcaption>
<h4>Causal Encryption</h4>
<p>Causal key management: a strategy for managing E2EE keys based on the causal structure of a document. Similar to a <a href="https://ieeexplore.ieee.org/document/4032481">Cryptree</a>, having the key to some encrypted chunk lets you iteratively discover the rest of the keys for that chunk’s causal history, but not its parents or siblings.</p>
</figcaption>
</figure>
<p>Data in Keyhive is encrypted-at-rest. Encrypting every Automerge operation separately would lead to very large documents that cannot be compressed. Instead we use the <a href="https://automerge.org/automerge-binary-format-spec/">Automerge Binary Format</a> to compress-then-encrypt ranges of changes. We expect these encryption boundaries to change over time as parts of the document become more stable, so we need a way to manage (and prune) a potentially large number of keys with changing envelope boundaries.</p>
<p>We achieve the above by including the keys to all of their causal predessesor chunks. This sacrifices forward secrecy (FS) — leaking old message keys in the case of a later compromised key — but retains secrecy of concurrent and future chunks. Of course “leaking” <em>anything</em> sounds bad. However, unlike ephemeral messaging (e.g. <a href="https://signal.org/">Signal</a>) where not all users are nessesarily expected to have the entire chat history, CRDTs like Automerge require access to the entire causal history in order to render a view. This means that in all scenarios we need to pass around all historical keys, whether or not they’re in the same encryption envelope. We believe that this choice is appropriate for static control context on documents that require the entire history. As a nice side-effect of this choice, we also gain flexibility and simplicity.</p>
<p>In this design, keys behave a bit like pointers, so we can apply all of the standard data structure pointer indirection tricks to do smooth updates to encryption boundaries. This is fairly well-developed at this stage, so we will save a deeper exploration of this topic for a future post.</p>
<h2 id="pull-control"><a href="#pull-control">Pull Control</a></h2>
<p>E2EE raises a new issue: there is no such thing as perfect security. All encryption algorithms are deemed secure with respect to some explicitly-defined assumptions (such as the difficulty of factoring large primes or group operations). There may be mathematical breakthroughs, edge cases discovered, or new hardware that render your choice of encryption algorithm useless. Even more worse, keys can be accidentally leaked or devices stolen. While we can revoke future write access, if someone has the data and the symmetric key, then they have the ability to read that data. The best practice is to have defense in depth: don’t make ciphertexts retrievable by anyone, but only those with “pull access” or higher. “Pull” is weaker than the more familiar “read” and “write” access effects: it’s only the ability to retrieve bytes from the network but not decrypt or modify them. This is especially helpful for trust-minimizing sync servers, since by definition they cannot have the ability to see the plaintext if we want to claim E2EE.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/01/effects.png">
<figcaption>
<h4>Access Effects</h4>
<p>An example of delegation across the Keyhive access effect types</p>
</figcaption>
</figure>
<h2 id="trust-minimized-sync-servers"><a href="#trust-minimized-sync-servers">Trust Minimized Sync Servers</a></h2>
<p>If <a href="https://youtu.be/NMq0vncHJvU?si=_U53CwSnbpkyf5gB&amp;t=1016">we want to move towards an ecosystem of interchangeable relays</a>, minimizing trust on such relays is a must. Our approach (perhaps unsurprisingly) is to end-to-end encrypt the data, removing read access from sync servers altogether. Under this regime, sync engines are “merely” a way to move random-looking bytes between clients.</p>
<p>There is another ongoing project at the lab focused improving data synchronization for peer-to-peer and via sync servers. We’ve realized that sync and secrecy strongly interact. Broadly speaking, sync protocols benefit from more metadata (to efficiently calculate deltas), but cryptographic protocols aim to minimize or eliminate metadata exposure. This tension extends across related systems, including merging E2EE <a href="https://automerge.org/automerge-binary-format-spec/">compressed chunks</a>, and determining if a peer has already received specific operations when a sync server cannot access them in plaintext.</p>
<p>Fortunately, combining these systems can sometimes result in more than the sum of their parts. For instance, convergent capabilities help facilitate the calculation of which documents are of interest to particular agent, helping the sync system know which documents to send deltas of. For these reasons, we’re treating synchronization and authorization as part of a larger, unified project, even though each will yield distinct artifacts.</p>
<h2 id="whats-next"><a href="#whats-next">What’s Next?</a></h2>
<p>Cryptographic code is notoriously difficult to debug, so we decided to start with design and move to code when we had some fairly good theories on how the basics of this system should work. Now that we’re at that point, we’ve very recently begun to implement this design. We’ll report on our progress in future posts, as well as dive deeper into some of the topics we touched on in the overview here.</p>
</article>
<article>
  <h2><a href="https://www.inkandswitch.com/keyhive/notebook/02/">02 · Group Key Agreement with BeeKEM</a></h2>
  <p>2025 Jan 21</p>
<p>As we’ve seen in past lab notes, Keyhive provides access control for local-first applications. We support both server-based collaboration and peer-to-peer operation without a trusted server. And individuals might work offline for extended periods of time. In the context of Automerge, our goal is to control access to documents, collections of documents, and parts of documents.</p>
<p>Every document has a group of users with access to that document. That group might include other groups as members (in which case the members of those groups are also members of the document). Importantly, a document group’s membership is dynamic, with new members added and removed over time. We must be able to handle concurrent changes in a distributed context.</p>
<p>Of course, if we want to limit read access to just our group, we can’t safely share our document as plaintext via sync servers. We need a way to encrypt and decrypt our data that is accessible to only our document’s members. This means we need a way for our group to agree on the keys that will be used for encryption and decryption over time.</p>
<h2 id="continuous-group-key-agreement"><a href="#continuous-group-key-agreement">Continuous Group Key Agreement</a></h2>
<p>In the literature, this problem is known as <a href="https://eprint.iacr.org/2019/1189.pdf">Continuous Group Key Agreement (CGKA)</a>. A <strong>CGKA protocol</strong> enables a dynamic group to agree on a sequence of keys over time. CGKAs ordinarily guarantee two properties: forward secrecy (FS) and <a href="https://eprint.iacr.org/2016/221.pdf">post-compromise security (PCS)</a>. Imagine a successful attacker compromises a single key. In the simplest terms, forward secrecy means that this key will not enable access to past data. And post-compromise security means it will not enable access to future data. If you can guarantee both, then you can limit the damage from a key compromise.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/forward_secrecy_and_post-compromise_security.png" alt="Forward secrecy and post-compromise security">
</figure>
<p>One way to achieve <strong>forward secrecy</strong> is through “ratcheting”. With a ratchet, honest users employ a key derivation function (KDF) to deterministically transform a key in a way that is effectively impossible to reverse. A cryptographic hash function is one way to achieve this. Ratcheting with such a one-way function prevents an attacker from discovering past keys since there is no feasible way to reverse the function. But a one-way function on its own does not prevent an attacker from discovering future keys, since you can derive all future keys from a compromised key by repeatedly applying the hash function.</p>
<p>Of course, we don’t want a system that once compromised is always insecure. That’s where <strong>post-compromise security</strong> comes in. The intuitive idea is that a system with post-compromise security has some mechanism to deny access after an attack. Compromised information will no longer be enough to derive future keys. One way to achieve this is to periodically rotate information required for determining future keys in a way that is not accessible to a past attacker.</p>
<p>In practice, ratcheting protocols mix in fresh information with each ratchet so that knowledge of a key is not by itself sufficient to derive future keys. For example, Signal’s <a href="https://signal.org/docs/specifications/doubleratchet/">Double Ratchet protocol</a> includes sending a Diffie-Hellman public key with each message so that the receiver can derive a shared Diffie-Hellman secret to use as a side input to the key derivation function (KDF) that is used for ratcheting.</p>
<h3 id="treekem"><a href="#treekem">TreeKEM</a></h3>
<p>The current Message Layer Security (MLS) protocol for CGKA uses <a href="https://inria.hal.science/hal-02425247v1/file/treekem%20%281%29.pdf">TreeKEM</a>, a protocol for asynchronous, decentralized key agreement for dynamic groups<sup><a href="#fn1" id="fnref1">1</a></sup>. TreeKEM uses a binary tree with group members’ public keys at the leaves and the current group secret encrypted at the root. All other inner nodes act like the root for their subtrees (and subtrees act like subgroups with their own shared, encrypted secrets). Members can be dynamically added and removed from the tree.</p>
<p>For post-compromise security, each member periodically rotates out its public keys on its leaf, which leads to cascading secret updates all the way to the root. Both updating and decrypting the root secret requires traversing the path from the member’s leaf to the root, performing <code>log(n)</code> operations (although there is a linear worst case under certain conditions).</p>
<p>Unfortunately, Keyhive’s requirements rule out TreeKEM as it stands. That’s because TreeKEM depends on a central server to create a total order of operations, and to pick winners among concurrent operations. Keyhive’s local-first model is peer-to-peer compatible and does not require such a central server. And for Keyhive, concurrent operations can be merged in long after they were actually performed (for example, if a member made changes while aboard a long-haul flight).</p>
<h3 id="decentralized-cgka-alternatives"><a href="#decentralized-cgka-alternatives">Decentralized CGKA alternatives</a></h3>
<p>An alternative that is more aligned with our requirements is the <a href="https://dl.acm.org/doi/pdf/10.1145/3460120.3484542">Decentralized Continuous Group Key Agreement (DCGKA) protocol</a> developed by <a href="https://mattweidner.com/">Matthew Weidner</a> and <a href="https://martin.kleppmann.com/">Martin Kleppmann</a>. This protocol assumes a decentralized network that does not depend on a trusted central server. However, unlike TreeKEM, it provides linear rather than logarithmic performance. As a result, they target groups on the order of 100 members as opposed to MLS’s target of 50k members. A design goal for Keyhive is to target at least thousands of members<sup><a href="#fn2" id="fnref2">2</a></sup>.</p>
<p>Matthew Weidner has also proposed an alternative to TreeKEM called <a href="https://mattweidner.com/assets/pdf/acs-dissertation.pdf">Causal TreeKEM</a>. Whereas TreeKEM requires a total order imposed by a central server, Causal TreeKEM only requires a causal order, which is much better suited to a decentralized network. Like TreeKEM, it has logarithmic performance (with a linear worst case) and is meant to ensure both forward secrecy and post-compromise security.</p>
<p>However, Causal TreeKEM depends on fancier crypto than we’d prefer in order to merge concurrent updates in any order. It requires a cryptographic operation to combine updates at a node that is both associative and commutative. One option here would be BLS, but this is far less common than the standard options and there is not currently a great library option for Rust (the language Keyhive is written in). And we have definitely ruled out rolling our own crypto (you probably should too).</p>
<p>For these reasons, we’ve proposed our own alternative<sup><a href="#fn3" id="fnref3">3</a></sup> for Keyhive that we call “BeeKEM”. It is closely modelled on TreeKEM with insights from Causal TreeKEM. It requires no central server and only a causal order of operations. It provides logarithmic performance (with linear worst case). And like the other TreeKEM variants, it provides forward secrecy and post-compromise secrecy<sup><a href="#fn4" id="fnref4">4</a></sup>. Furthermore, it relies exclusively on standard crypto, such as <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Diffie Hellman key exchange</a> and <a href="https://github.com/BLAKE3-team/BLAKE3-specs/blob/master/blake3.pdf">BLAKE3</a> hashing.</p>
<h2 id="beekem"><a href="#beekem">BeeKEM</a></h2>
<p>In this section, we’ll see how BeeKEM works in more detail.</p>
<p>In BeeKEM (as in TreeKEM), the current group secret is stored encrypted at the root node of a binary tree. We’ll call this the “root secret”. The root secret is used for encrypting and decrypting document chunks shared with our group over the network<sup><a href="#fn5" id="fnref5">5</a></sup>.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/basic_beekem_tree.png" alt="Basic BeeKEM tree">
</figure>
<p>Each leaf of the tree corresponds to a member of the group and contains its ID and latest Diffie Hellman (DH) public key. A member’s ID is persistent over time but each member will periodically rotate its DH public key. When a member rotates its DH public key, that will cause the root secret to change as well. Thus, member key rotations help provide post-compromise security. From the point of view of an adversary, they introduce fresh randomness.</p>
<p>Each leaf has an implicit secret known only to the corresponding member (i.e. not stored in the tree). All other “inner” nodes in the tree contain a DH public key for that node and a corresponding secret key that is stored encrypted at the node.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/beekem_inner_nodes.png" alt="BeeKEM inner nodes">
</figure>
<p>Each node in a binary tree has a single sibling node, as illustrated in the following diagram:</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/siblings.png" alt="Node sibling">
</figure>
<p>When encrypting or decrypting a new secret at a parent node, a child node performs a <strong>Diffie Hellman key exchange</strong> with its sibling. That means it will use its sibling DH public key and its own secret key to derive what we’ll call a “shared DH secret”. The shared DH secret is used to encrypt and decrypt the new secret at the parent.</p>
<p>A brief (simplified) aside on how Diffie Hellman key exchange works. Imagine Alice and Bob each have their own DH public keys (alice_pk and bob_pk) and DH secrets (alice_sk and bob_sk). If Alice combines her DH public key with Bob’s secret key, she can derive a shared DH secret. If Bob combines his DH public key with Alice’s secret key, he can derive the same shared DH secret. In this way, they can agree on a shared secret just by exchanging their public keys in the open.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/diffie_hellman_basics.png" alt="Diffie Hellman basics">
</figure>
<p>We use this same principle to derive a shared DH secret for any sibling pair in our tree. For example, to decrypt Alice’s parent node, Alice can use its secret <code>alice_sk</code> and its sibling’s public key <code>bob_pk</code> to derive a shared DH secret. It can then use that shared secret to decrypt the secret at the parent node.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/beekem_diffie_hellman_example.png" alt="BeeKEM Diffie Hellman example">
</figure>
<p>In pseudocode, this might look like:</p>
<div>
<pre><code>shared_dh_secret = DH(bob_pk, alice_sk)
parent_secret =
  encrypted_parent_secret.decrypt_with(shared_dh_secret)
</code></pre>
</div>
<p>That parent secret can in turn be used for a Diffie Hellman exchange with the parent’s sibling’s DH public key.</p>
<p>For a member to decrypt the root secret, it must start from its leaf and traverse the tree one parent at a time until it reaches the root. The sequence of nodes from leaf to root is called that leaf’s “path”. At each node in its path, it will derive a shared DH secret with its sibling to decrypt the secret at its parent. Once it’s decrypted the root secret, it’s done.</p>
<p>In the following diagram, the decrypting leaf’s path is marked in green. The siblings used as Diffie Hellman partners along the way are marked in purple:</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/beekem_path.png" alt="BeeKEM path">
</figure>
<p>There are three mutating operations that can be performed on the tree: Update Key (i.e. key rotation), Remove Member, and Add Member. Let’s look at these in more detail.</p>
<h3 id="update-key"><a href="#update-key">Update Key</a></h3>
<p>Every member must periodically update the DH public key at its leaf in order to guarantee post-compromise security. When we update our leaf DH public key, we must then update the secrets for all the nodes on our path, eventually updating the root secret for the entire group.</p>
<p>Before traversing our path, we can derive a sequence of path secrets by applying BLAKE3’s key derivation function to an initial secret once for each node on the path. As we move up each parent on our path, we will encrypt the next derived secret and store it on that parent.</p>
<p>In order to encrypt the secret for a parent, we use Diffie Hellman key exchange as described above. We then derive a new Diffie Hellman public key from the secret for the parent, and store both that new DH public key and the corresponding encrypted secret at the parent.</p>
<p>In pseudocode:</p>
<div>
<pre><code>parent_secret = derived_secrets[next_idx]
shared_dh_secret = DH(child_sibling_pk, child_sk)
encrypted_parent_secret =
  parent_secret.encrypt_with(shared_dh_secret)
parent_pk = DH_pk_from(parent_secret)
parent_node.insert(parent_pk, encrypted_parent_secret)
</code></pre>
</div>
<p>Later on, when the sibling wants to decrypt that parent secret, it can do Diffie Hellman the other way, using the encrypter node’s DH public key with the sibling node’s secret to derive the same shared DH secret that was used to encrypt the parent.</p>
<div>
<pre><code>shared_dh_secret = DH(encrypter_pk, sibling_sk)
encrypted_parent_secret = parent_node.encrypted_secret
parent_secret =
  encrypted_parent_secret.decrypt_with(shared_dh_secret)
</code></pre>
</div>
<h3 id="membership-changes"><a href="#membership-changes">Membership Changes</a></h3>
<p>In order to explain membership changes, we must introduce the concept of “blanking” a node. Blanking a node means that we remove all key and secret information from that node. If the root node is blank, then the tree does not currently hold a shared group key. Some nodes are blanked after membership change operations, and all leaves beyond the last member leaf on the right are blank.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/blank_nodes.png" alt="Blank nodes">
</figure>
<p>If a tree has a blank root, then at least one member must perform an Update Key operation to restore a root secret. An update will replace all blank nodes on its update path with key information.</p>
<p>When we perform a <strong>Remove Member</strong> operation, we first blank the leaf corresponding to that member. We then blank the entire path from that leaf up to the root node.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/remove_member.png" alt="Remove member">
</figure>
<p>Notice that if a removed member performs an update concurrently with its removal, we need to ensure that the update does not survive (or else the member will continue to have access to the root secret). When merging concurrent removes with other operations, BeeKEM ensures that the remove paths are blanked after all other concurrent operations are merged.</p>
<p>When we perform an <strong>Add Member</strong> operation, we add the new member’s ID and public key to the next blank leaf on the right. We then blank the path from that leaf to the root.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/add_member.png" alt="Add member">
</figure>
<p>Notice that if two members add a member concurrently to the same tree, they will add them to the same leaf. BeeKEM resolves such conflicts on merge by sorting all concurrently added leaves and blanking their paths.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/merging_concurrent_adds.png" alt="Resolving add conflicts">
</figure>
<h3 id="handling-blank-nodes-on-update-and-decryption"><a href="#handling-blank-nodes-on-update-and-decryption">Handling Blank Nodes on Update and Decryption</a></h3>
<p>So far, we’ve assumed that every node has a sibling with key information. That’s what allowed us to use Diffie Hellman to derive a shared DH secret. But what happens when a node’s sibling is blank?</p>
<p>In that case, we must find the blank node’s <strong>resolution</strong>. A node’s resolution is the set of its highest non-blank descendents. Here’s an example:</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/node_resolution_examples.png" alt="Node resolution example">
</figure>
<p>If you have a blank sibling, you must do a separate encryption of the new parent secret for every member of your sibling’s resolution. For each of those members, you use its Diffie Hellman public key with your secret to derive a shared DH secret. You then encrypt the new parent secret using that shared secret and store it for that member.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/blank_sibling.png" alt="Blank sibling">
</figure>
<p>This means that if the resolution of a sibling node contains 5 members, you will need to store the parent secret 5 times, each one encrypted for a separate member.</p>
<p>The worse case scenario is if the entire inner tree is blank. Encrypting a new path will no longer be a logarithmic operation since every leaf will be contained in the resolution of some blank node on your path. Instead, the cost will be linear in the number of leaves: you will have to perform a separate encryption for every other leaf somewhere on your path.</p>
<p>When decrypting a leaf with blanks on its path, you simply skip those blanks. This works because the highest blank in your path will contain its last non-blank descendent in its resolution. So when you encounter a blank on your path, you hold onto the last secret you’ve seen and start skipping. When you eventually get to a non-blank node, you’ll use that secret you’re holding onto to derive the shared DH secret you need to decrypt the non-blank parent.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/skipping_blanks.png" alt="Skipping blanks">
</figure>
<h3 id="handling-concurrent-updates-with-conflict-keys"><a href="#handling-concurrent-updates-with-conflict-keys">Handling Concurrent Updates with “Conflict Keys”</a></h3>
<p>Keyhive assumes that concurrent operations can be merged in any causal order. Concurrent updates will always have some overlapping nodes in their paths (at least the root is shared by all paths). How does BeeKEM resolve these conflicts?</p>
<p>We must first consider our potential vulnerabilities. Imagine that an adversary has compromised a group member and their leaf secrets. They can use a compromised leaf secret to decrypt the root secret at some point in time. Recall that knowing a leaf secret means you can decrypt all of the inner node secrets along your path.</p>
<p>If an adversary knows the secret for a leaf, it’s possible they will continue to be able to decrypt the group secret even if that leaf is rotated during a future concurrent update. This depends on how we handle merging concurrent updates.</p>
<p>If we just naively pick a winner for updates to a series of overlapping nodes, then the new information added by the loser’s key rotation will no longer be necessary to decrypt the root secret. We effectively forget that information.</p>
<p>Notice that the winner used the outdated keys from the loser for its update (since the winner’s and loser’s updates were concurrent). That means an adversary with the loser’s outdated leaf keys will still be able to decrypt the winner’s nodes. Subsequent updates by other leaves that only intersect with the winner’s path will also fail to exclude our adversary.</p>
<p>In BeeKEM, when merging concurrent updates, we ensure that all updates contribute information along their entire paths. We keep conflicting information around at each node until it is overwritten by a causally subsequent operation (or blanked by a membership change).</p>
<p>If two leaves update the same node concurrently, then they would have each written a distinct Diffie Hellman public key and encrypted secret to that node. In this scenario, we call these “conflict keys” and store them both when merging conflicts.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/03/merging_concurrent_updates.png" alt="Merging conflict keys">
</figure>
<p>Imagine a member subsequently updates the tree. If a node on its leaf’s path has a sibling with conflict keys, this means there is an unresolved merge at that sibling. An adversary could have access to both sides of the corresponding fork. So it wouldn’t be secure to use those conflict keys for Diffie Hellman. Instead, we take the resolution of the node, just as we did with blank nodes. We then separately encrypt the secret for every DH public key in the resolution, again just as we did with blank nodes.</p>
<p>This means that for BeeKEM we update the definition of the “resolution of a node” to mean either (1) the single DH public key at that node <strong>if there is exactly one</strong> or (2) the set of highest non-blank, <strong>non-conflict</strong> descendents of that node.</p>
<p>If we merged in both sides of a fork, then we know we’ve updated both corresponding leaves with their latest rotated DH public key. Since taking the resolution skips all conflict nodes, it ensures that we integrate the latest information when encrypting a parent node. That’s because any non-conflict nodes have successfully integrated all causally prior information from their descendents.</p>
<p>This means an adversary needs to compromise one of the latest leaf secrets to be able to decrypt an entire path to the root. Even knowing outdated leaf secrets at multiple leaves will not be enough to accomplish this. An honest user, on the other hand, will always know the latest secret for its leaf.</p>
<p>During a future update (key rotation), if you find a conflict key node on the path you’re updating, you can remove all conflict keys at that node and replace them with a single new public key and encrypted secret (as with normal parent encryption). That’s because your update operation is the causal successor of all the operations that placed those conflict keys. This means your tree contains the necessary information from all of those past updates, which is integrated into your update.</p>
<p>BeeKEM’s approach comes with two downsides. First, before conflicts are resolved by subsequent updates or blanks, we must store extra information at each conflict node. Second, conflict keys add extra encryption and decryption overhead. In the worst case, where the tree is populated with the maximum number of possible conflict keys, the space cost would be <code>n log(n)</code> (as opposed to the best case of <code>2n</code>). The time cost in the worst case would be linear (as opposed to logarithmic), as when the tree is maximally blanked. Our current set of benchmarks reflect these time costs when we intentionally exercise our worst cases.</p>
<p>BeeKEM provides Keyhive with a Continuous Group Key Agreement protocol that is well-suited to distributed local-first applications that require end-to-end encryption for groups on the order of thousands of members. It exhibits logarithmic performance in the common case with linear worst case. And it provides both forward secrecy and post-compromise security.</p>
<p>In the future, we plan to write a paper explaining this protocol and its security and performance characteristics in more detail. But hopefully this has given you a sense for how it works.</p>
<!-- Footnotes -->
<!-- External Links -->
<section role="doc-endnotes"><hr><ol>
<li id="fn1"><p>TreeKEM was inspired by earlier work on <a href="https://eprint.iacr.org/2017/666.pdf">Asynchronous Ratcheting Trees (ART)</a>. <a href="#fnref1">↩︎</a></p>
</li>
<li id="fn2"><p>Weidner and Kleppmann argue that secure messaging for large groups does not have a plausible threat model since it would be too easy to infiltrate them. But Keyhive is designed for shared documents. In the context of private documents shared within a company with thousands of employees, for example, we would still expect access control. It’s also worth mentioning that in Keyhive, a single user might have multiple device-specific keys (each of which will count as a member from Keyhive’s perspective). <a href="#fnref2">↩︎</a></p>
</li>
<li id="fn3"><p>Other alternatives include <a href="https://eprint.iacr.org/2022/251">CoCoA</a> and <a href="https://eprint.iacr.org/2022/559.pdf">DeCAF</a>. <a href="#fnref3">↩︎</a></p>
</li>
<li id="fn4"><p>BeeKEM in isolation provides forward secrecy, but Keyhive as a whole does not. That’s because users require access to an entire document and Keyhive is used to encrypt that document in chunks. If you can decrypt a chunk, you will gain access to the key for decrypting the previous chunk (as described in an earlier lab note). <a href="#fnref4">↩︎</a></p>
</li>
<li id="fn5"><p>More precisely, we use the root secret as one input into deriving an “application secret”. It is the application secret that is directly used for encrypting and decrypting document chunks. There can be multiple application secrets derived from one root secret, but each application secret is used to encrypt exactly one document chunk. Updating the root secret provides post-compromise security by ensuring no prior key can be used to derive application secrets associated with it. We are glossing over these details in this lab note since they strictly speaking happen outside BeeKEM, which is concerned with group agreement on the root secrets. <a href="#fnref5">↩︎</a></p>
</li>
</ol>
</section>
</article>
<article>
  <h2><a href="https://www.inkandswitch.com/keyhive/notebook/03/">03 · What's In a Name?</a></h2>
  <p>2025 Feb 27</p>
<p>The Beehive project is now officially renamed <em>“Keyhive”!</em></p>
<p>Changing names can be a painful process, and doing so as early as possible in a project’s life is helpful. As <a href="https://www.karlton.org/2017/12/naming-things-hard/">Phil Karlton famously said</a>, there’s exactly two hard problems in computer science: caching, naming, and off-by-one errors. Naming is important for orienting readers, searching the web, and avoiding ambiguity. We wanted to make sure that the name was finalized prior to open sourcing the code.</p>
<p>There is a naming philosophy that says names should be descriptive, or at least present a direct “mental hook” that implies what the signified thing does. Additional puns and whimsey help with memorability.</p>
<p>The previous project name “Beehive” was intended to present a sense of safety and collaboration: bees build complex-yet-sturdy structures together while working independently, and guard their hives to make a safe space on the inside. This metaphor was also inspired by earlier conversations with <a href="https://en.wikipedia.org/wiki/Christine_Lemmer-Webber">Christine Lemmer-Webber</a> about metaphors to help explain capability systems (like Keyhive) to folks not familiar with formal concepts from the <a href="https://en.wikipedia.org/wiki/Object-capability_model">object-capabilities</a> world like <a href="https://erights.org/elib/concurrency/vat.html">Vats</a>.</p>

<p>At the time that we decided on “Beehive”, the team was aware of namespace conflicts in the academic distributed systems literature<sup><a href="#fn1" id="fnref1">1</a></sup>. Over time it’s become clear that we also have this problem with packages in more than one language ecosystem. Since we don’t want to tie the project to <a href="https://automerge.org/">Automerge</a> exclusively, prefixing the core project with <code>automerge-*</code> was not appropriate.</p>
<p>We are retaining our apian naming for other parts of the project. <a href="https://www.inkandswitch.com/keyhive/notebook/#beekem">BeeKEM</a> maintains it’s pun on TreeKEM, and Beelay is the Keyhive-enabled relay.</p>
<p>Beehive is dead. Long live Keyhive!</p>
<!-- Footnotes -->
<!-- Internal Links -->
<!-- External Links -->
<section role="doc-endnotes"><hr><ol>
<li id="fn1"><p>Some examples include <a href="https://www.cs.cornell.edu/people/egs/615/beehive.pdf">Beehive: Exploiting Power Law Query Distributions for O(1) Lookup Performance in Peer to Peer Overlays</a>, <a href="https://iqua.ece.toronto.edu/papers/junli-tpds17.pdf">Beehive: Erasure Codes for Fixing Multiple
Failures in Distributed Storage Systems</a>, and <a href="https://courses.cs.duke.edu/spring17/compsci590.7/Papers/Beehive16.pdf">Beehive: Simple Distributed Programming in Software-Defined Networks</a>. <a href="#fnref1">↩︎</a></p>
</li>
</ol>
</section>
</article>
<article>
  <h2><a href="https://www.inkandswitch.com/keyhive/notebook/04/">04 · Opening the Pre-Alpha</a></h2>
  <p>2025 Mar 10</p>
<p>We’re excited to announce that we’re opening the <em>pre-alpha</em> code for the following libraries:</p>
<ul>
<li><a href="https://github.com/inkandswitch/keyhive/tree/main/beelay/beelay-core">beelay-core</a>: Auth-enabled sync over end-to-end encrypted data</li>
<li><a href="https://github.com/inkandswitch/keyhive/tree/main/keyhive_core">keyhive_core</a>: The core signing, encryption, and delegation system</li>
<li><a href="https://github.com/inkandswitch/keyhive/tree/main/keyhive_wasm">keyhive_wasm</a>: <a href="https://webassembly.org/">Wasm</a> wrapper around <code>keyhive_core</code>, plus TypeScript bindings</li>
</ul>
<p>⚠️ <strong>DO NOT use this release in production applications</strong> ⚠️</p>
<p>We want to emphasize that this is an early preview release for those that are curious about the project. Expect there to be bugs, inconsistencies, and unstable APIs. This code has also not been through a security audit at time of writing.</p>
<p>If you have any questions, thoughts, or feedback, please contact the team at by filing a <a href="https://github.com/inkandswitch/keyhive/issues/new">GitHub Issue</a>, or in the <a href="https://discord.com/channels/1200006940210757672/1347253710048333884"><code>keyhive-beelay</code> channel in the Automerge Discord</a>.</p>
<!-- External Links -->
</article>
<article>
  <h2><a href="https://www.inkandswitch.com/keyhive/notebook/05/">05 · Syncing Keyhive</a></h2>
  <p>2025 Mar 13</p>
<h2>Syncing Keyhive</h2>
<p>The last few lab notes have focused on the cryptographic components which support a local first access control system. Those being a capability based system for managing write access to documents, and a key agreement protocol for encrypting and decrypting writes (thus implementing read control). We now have to think about how to actually transfer this data between devices.</p>
<p>Alongside the Keyhive project we have also been working on a new sync protocol for Automerge. The existing sync protocol works well for a single document but it is common for Automerge applications to have thousands of documents. Furthermore, the sync protocol requires that both ends are able to read the document whilst one of the objectives of Keyhive is for the server to only have access to the encrypted data.</p>
<p>Solving all of these problems in one go is the job of Beelay (the name is inspired by the idea of Beehive being the relay for all the bees (peers) in the Keyhive).</p>
<h2 id="overview"><a href="#overview">Overview</a></h2>
<p>Beelay is an RPC protocol which is designed to be usable over any transport which can provide confidentiality (in practice, HTTPS, WebSockets, or raw TLS). The intended usage is to create a local Beelay instance and then connect it to other peers, Beelay will then authenticate with the other peers and synchronise everything which each side thinks the other has access to.</p>
<p>Each message is authenticated by signing it with the <a href="https://en.wikipedia.org/wiki/EdDSA#Ed25519">Ed25519</a> key that the local node controls. To synchronise we first synchronise the Keyhive membership graph which each end has, this allows each end to determine what documents the other end should have access to. Then we synchronise the collection of documents to figure out which documents are out of sync, before finally synchroising each individual document.</p>
<h2 id="authentication"><a href="#authentication">Authentication</a></h2>

<h3 id="what-are-we-authenticating"><a href="#what-are-we-authenticating">What are we authenticating?</a></h3>
<p>It will be useful here to review how we intend to represent devices, people, and documents in Keyhive. In Keyhive there are two important kinds of principal: “groups” and “individuals”. An individual is identified by a single Ed25519 public key - which is immutable - whilst a group is a collection of other principals (groups or individuals) and can be updated by it’s members. One way we intend to use this is to represent a person (or more specifically their authority) as a group, with each of the persons devices being an individual member of the group. Key rotation can then be handled by adding a new individual to the group and removing the old one.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/05/person-group.png" alt="A diagram of a group representing a person, with three nodes representing devices called 'phon', 'laptop', and 'table' all of which have arrows pointing to the person node">
</figure>
<p>Groups can contain other groups. This means that we can represent as groups, where each member of the organisation is another group representing a person (or for that matter another organisation, such as a department).</p>
<p>Another useful aspect of this structure is that documents can also be represented as groups. This allows documents to have members which can access the document. For example, a document representing this lab note might add the Ink &amp; Switch group so that all (transitive) members of the Ink &amp; Switch group can read and write to it. Documents can also add other documents which represents “folder” style relationships. The “lab notes” folder document (which is also a group, because all documents are) might contain all the lab notes and have the Ink &amp; Switch as a member.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/05/person-doc-group.png" alt="Another diagram, this time with a node labelled 'Ink &amp; Switch' which represents an organisation with the original 'person' diagram being a member of that group">
</figure>
<p>What this all means for the sync protocol is that any given peer is represented by an “individual”. The task of authentication is to ensure that each end knows what Ed25519 public key the other end is using so that we can relate that individual key to the Keyhive membership graph.</p>
<h3 id="how-do-we-authenticate"><a href="#how-do-we-authenticate">How do we authenticate?</a></h3>
<p>One solution which might seem obvious here is to rely on an authenticated TLS session. While we use TLS for confidentiality, and the browser itself authenticates the server, our application <em>also</em> needs to know about the server’s public key. Unfortunately, the browser doesn’t expose this information to the application context; there is no way in the browser to obtain the connection’s TLS certificate. We don’t just need to know that a connection is secure, we need to know the public key of the other end in order to use it for access control decisions and so on.</p>
<p>Given that each peer is represented by a public key, the simplest possible authentication scheme would be to sign each message. I.e. a message might look like this:</p>
<div>
<pre><code>type Envelope = {
    message: Uint8Array,
    signature: Signature,
    sender: PublicKey,
}

type PublicKey = Uint8Array
type Signature = Uint8Array
</code></pre>
</div>
<p>To authenticate a message we check that the signature is valid over the message, then we know that the other end is the individual represented by the given public key. There are two problems with this, <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">person in the middle (PITM)</a> attacks, and <a href="https://en.wikipedia.org/wiki/Replay_attack">replay attacks</a>.</p>
<h3 id="person-in-the-middle-attacks"><a href="#person-in-the-middle-attacks">Person in the middle attacks</a></h3>
<p>A good example of PITM attack on this protocol would be a phishing based attack. Imagine an application which allows users to input the URL of a sync server to sync from. Let’s say an attacker creates a sync server at a familiar looking URL, such as <code>wss://sync.automege.org</code> (note the misspelling) and convinces the user to enter this URL into their application. The attacker can now intercept all messages intended for the real <code>sync.automerge.org</code> server and forward them on to the sync server. This means the attacker can read all the messages and even modify messages sent back to the client.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/05/pitm.png" alt="A diagram with three nodes connnected in a line, the right most is labelled 'browser', the middle is labelled 'sync.automerge.org (attacker)' and the rightmost is labelled 'sync.automerge.org'">
</figure>
<p>The fundamental problem here is that the message is bound to the sender but not to the receiver. We can solve this by adding an “audience” field to the message.</p>
<div>
<pre><code>type Envelope = {
    message: Message,
    signature: Signature,
    sender: PublicKey,
}

type Message = {
    payload: Uint8Array,
    audience: PublicKey,
}
</code></pre>
</div>
<p>This doesn’t quite solve the problem above though. At this stage we only have a URL, we don’t have a public key for the server. To solve this we allow the audience field to either be a public key, or the URL we are addresssing. In this case the audience would be <code>sync.automege.org</code>. This means that when the PITM forwards the message to <code>sync.automerge.org</code> the real server can check and see that the audience doesn’t match <code>sync.automerge.org</code> and reject the message.</p>

<p>This works because the connection is being made over TLS, which binds the network transport to the hostname, ensuring that whoever is at the other end, they definitely control <code>sync.automerge.org</code>. Beelay is designed to work over arbitrary transports though, in other network setups such as P2P transports you will need to obtain the public key of the receiver out of band.</p>
<h3 id="replay-attacks"><a href="#replay-attacks">Replay attacks</a></h3>
<p>In a replay attack an attacker is somehow able to intercept messages and store them, and then later replay them to the server. To mitigate this we add a timestamp to the message and then reject messages which are older than some validity window that accounts for latency plus a <a href="https://en.wikipedia.org/wiki/Clock_skew">clock skew</a> grace period — e.g. 5 minutes.</p>
<p>The main issue with this scheme is that the clocks of two peers might be out of sync by arbitrary amounts of time. Soft locking the sync system due to clock sync issues is not acceptable. To solve this, when a peer rejects a message due to an old timestamp, the rejecting peer sends their current timestamp along with the rejection message. This allows the sending peer to determine the drift between their local clock and the remote clock and adjust the timestamps on the messages they send, and account for it during this session.</p>
<h3 id="summary"><a href="#summary">Summary</a></h3>
<p>Altogether then, our messages look a bit like this:</p>
<div>
<pre><code>type Envelope = {
    message: Message,
    signature: Signature,
    sender: PublicKey,
}

type Message = {
    payload: Uint8Array,
    audience: PublicKey | string,
    timestamp: number,
}
</code></pre>
</div>
<p>To authenticate a message we check that the signature is valid, that the audience is either our public key or the hash of our hostname (or some other string which is bound to the recipient in some way) and that the timestamp is new enough.</p>
<h2 id="syncing-the-membership-graph"><a href="#syncing-the-membership-graph">Syncing the membership graph</a></h2>
<p>Once we are authenticated, we need to determine what each side thinks the other should have access to. This means that we need to sync the Keyhive “membership graph”. This is the graph of groups and individuals which represent devices, people, organisations, and documents.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/05/what-are-we-syncing.png" alt="An image of three large boxes labelled group, document, and document. Each box has arrows pointing to the other and also contains within it a set of smaller boxes pointing to each other labelled op">
</figure>
<p>The membership graph is a directed graph of “operations” where each operation either creates a new node, delegates access to some other node, or revokes access. Unlike Automerge documents (which are also graphs) the membership operation graph is very shallow and wide, and the linked groups and documents can have cycles. There are many approaches to this problem, but it becomes much simpler if we frame it as <em>set reconciliation</em>, where each side has an unstructured set of operations and needs to figure out what operations the other side has that it needs (i.e. the delta between the two sets). We will encounter a very similar problem later, when we sync the collection of documents. In both cases we use a construction called <a href="https://arxiv.org/html/2402.02668v2">Rateless Invertible Bloom Lookup Tables</a> (RIBLT) to solve this problem.</p>
<h3 id="riblt-set-reconciliation"><a href="#riblt-set-reconciliation">RIBLT set reconciliation</a></h3>
<p>RIBLT is described in detail in <a href="https://arxiv.org/html/2402.02668v2">this paper</a>, what I will describe here are the important properties that the scheme gives us.</p>
<p>RIBLT is a set reconciliation protocol, which means there are two peers who have some possibly overlapping set of things which they want to have the same view of. I.e. after the protocol completes each side should have the union of the things each started with.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/05/set-reconciliation-1.png" alt="set reconciliation">
</figure>
<p>RIBLT solves this problem by having each side encode it’s set of things into a set of hashes and then generate a set of special “symbols” which one side sends to the other.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/05/riblt-things-to-hashes-to-symbols.png" alt="an image of a set of boxes labeled thing1, thing2, and thing3, with each box pointing to another box labelled hash(thing1), hash(thing2), hash(thing3). A larger box surrounds the entire set of boxese pointing to a sequence of boxes labelled symbol1, symbol2, symbol3">
</figure>
<p>These symbols are structured in such a way that once the receiver has received enough of them they will be able to decode the symbols into the set difference.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/05/riblt-symbols-decoded.png" alt="an image of three boxes labeled symbol1, symbol2, symbol3 with an arrow - labelled decode - pointing to two bases labeled things we have which they dont and things they have which we dont containg a box labelled hash(thing1) and hash(thing2) respectively">
</figure>
<p>The details are a bit fiddly but the really important part is that the number of symbols which must be sent is proportaional to the set difference between the two peers. Specifically, the number of symbols sent ranges from 1.7x (for small sets) down to 1.35x (for large sets) the set difference.</p>
<p>For example, If we have one billion items each, but only five differing items, we can reconcile in 5 * ~1.5 = 7.5 symbols. The symbols themselves are (in our case) 32 bytes long, so we can reconcile a billion items in 240 bytes.</p>
<p>The other important part is that the result of decoding is the set of hashes - not the things themselves. In fact, we can use any fixed length array which uniquely represents the thing.</p>
<h3 id="syncing-the-membership-graph"><a href="#syncing-the-membership-graph">Syncing the Membership Graph</a></h3>
<p>So, we use RIBLT sync to synchronise the membership graph. The process is mostly driven by the client (in the peer to peer case we arbitrarily choose that the peer who initiated the connection is the client).</p>
<p>First, the client sends a request to the server to begin membership sync. The server stores a pointer to the current set of ops which it thinks the other end needs and then responds with a session ID to identify this sync session, and the first 10 symbols of the RIBLT sync.</p>
<p>The client now receives the first 10 symbols and attempts to decode them. If they are able to decode then they are done and they know the set difference, otherwise, they send a request for the next 10 symbols, using the session ID to specify which state they are syncing with.</p>
<p>Eventually the client knows the set difference in terms of hashes of operations which only the server has, and operations which only the client has. Finally, the client requests the missing operations by sending their hash, and uploads the symbols which they believe the server is missing.</p>
<figure>
<img src="https://www.inkandswitch.com/keyhive/notebook/static/05/beginsync-1.png" alt="begin sync">
</figure>
<h2 id="document-collection-sync"><a href="#document-collection-sync">Document Collection Sync</a></h2>
<p>At this point each end has determine what documents it thinks the other should have acces to. The next step is to determine which documents are out of sync. To achieve this we use RIBLT sync again, this time instead of the set we are synchronising being the set of membership operations it is the set of (document ID, state) pairs, where <code>state</code> here is a hash of the document state.</p>
<p>There are two components to the document state which we care about for the purposes of synchronisation. One is the heads of the Automerge document - the document content is encrypted but we keep the hashes of the Automerge commit graph outside of the encryption envelope, so the sync server knows the heads.</p>
<p>The other piece of state are the BeeKEM operations for the document. Recall that BeeKEM is a continuous group key agreement (CGKA) protocol which allows peers to concurrently decide on what keys to encrypt content to. We need to have the latest CGKA ops in order to be able to decrypt the document content.</p>
<p>How do we form our RIBLT symbols then? One way would be to make each symbol <code>hash(document ID, document heads, cgka ops)</code>. Then, once we’ve performed RIBLT sync we make another network call to convert each symbol into the document ID which is out of sync. However, we can do a little better than this. Recall that the RIBLT symbol is just any fixed length byte array, and document IDs are a 32 byte array. This means that instead of a hash for the symbol, we use <code>(document ID, hash(heads, cgka ops)</code>. This means that once we have decoded the symbol we already know what the document ID is for the symbol in question without doing any more round trips.</p>
<p>The process for actually running this sync then is similar to the membership sync. Using the session ID from the membership sync the client fetches new document symbols from the server until it is able to decode the first symbol it received, at which point it knows which symbols are out of sync.</p>
<h2 id="document-sync"><a href="#document-sync">Document Sync</a></h2>
<p>By this point we have a list of document IDs which are out of sync. We now have to sync the CGKA ops and encrypted commit graph for each document. For the CGKA sync we can use our old friend RIBLT sync to sync the set of CGKA ops, but for the document content we need to do something a bit different because we want to be able to take advantage of the bandwidth gains we get from compacting Automerge documents.</p>
<h3 id="cgka-ops"><a href="#cgka-ops">CGKA Ops</a></h3>
<p>The set we are synchronizing here is the set of CGKA ops for the document. We use the hash of each op to create our RIBLT symbols. As with other RIBLT syncs, the client requests symbols from the server until it is able to decode it’s first symbols at which point it knows what ops to upload and what ops to request.</p>
<h3 id="sedimentree"><a href="#sedimentree">Sedimentree</a></h3>
<p>Syncing the document content is more complicated. Initially it might seem that we could just use RIBLT sync again where the symbols to sync are the commit hashes of the commits in the Automerge commit graph. This would certainly work, however, it would use <em>a lot</em> of bandwidth. Automerge commits are frequently made for each keystroke, adding a 32 byte hash for each keystroke would be very expensive.</p>
<p>This is a specific instance of a general problem which is that naive encodings of the Automerge commit graph contain enormous amounts of metadata overhead. We have a <a href="https://automerge.org/automerge-binary-format-spec/">compact binary encoding</a> which reduces this overhead to around 10% over the underlying data. What we need is a way to use this data in the sync protocol.</p>
<p>In the current sync protocol this is not a problem, the sync server has the plaintext in memory and so it can compact the document on the fly when a new peer comes online. For Beelay this isn’t an option because the server only has the ciphertext. What to do?</p>
<p>We have come up with a simple protocol for this which we call “sedimentree”. The idea is that every so often we compress ranges of the commit graph into chunks and we do this recursively, so that every so often smaller chunks get compressed into larger chunks. We do this in such a way that older (i.e. closer to the root of the commit graph) end up in larger and larger chunks as time goes on. This forms a tree structure, with older chunks being closer to the root of the tree - hence sedimentree, with chunks being like layers of sedimentree rock.</p>
<p>Choosing the boundaries of the chunks is a little fiddly because we need to do it in such a way that peers with different sets of changes still agree on what should go into each chunk. We do this by using the number of trailing zeros in the hash of a commit as the boundary. There are more details on this <a href="https://github.com/inkandswitch/keyhive/blob/main/design/sedimentree.md">here</a>.</p>
<p>The end result of this structure is that we can sync the document in two steps:</p>
<ul>
<li>Download a “summary” of the sedimentree, which contains just the boundaries of the chunks.</li>
<li>Download the chunks we don’t have, and upload the ones the other end doesn’t have</li>
</ul>
<h2 id="conclusion"><a href="#conclusion">Conclusion</a></h2>
<p>Overall then sync looks like this:</p>
<ul>
<li>Sync membership graph
<ul>
<li>Run RIBLT set reconciliation on the membership ops</li>
<li>Download ops we are missing</li>
<li>Upload ops the remote is missing</li>
</ul>
</li>
<li>Sync collection state
<ul>
<li>Run RIBLT set reconciliation on the set of document states</li>
</ul>
</li>
<li>Sync out of sync documents, for each document which is out of date
<ul>
<li>Run RIBLT sync on the CGKA ops</li>
<li>Download CGKA ops we are missing</li>
<li>UPload CGKA ops the remote is missing</li>
<li>Run sedimentree sync on the document content</li>
</ul>
</li>
</ul>
<p>One thing which may be concerning here is the number of round trips. We should especially worry about this in the common case where only one document has changed</p>
<ul>
<li>One round trip for the membership sync</li>
<li>One round trip for collection state</li>
<li>One round trip for CGKA sync</li>
<li>Two round trips for sedimentree sync</li>
</ul>
<p>We should be able to simplify this. One the initial message when we begin membership sync we can send the clients first 5 (say) membership RIBLT symbols and first 5 collection state symbols. In the common case the server will be able to decode these symbols (because only one document has changed) and immediately determine which document has changed, then the server can send back a response with the sedimentree summary for the changed document and the first 5 symbols of the server CGKA RIBLT state. The client will in most cases be able to determine if any CGKA ops are missing and immediately download any missing document state.</p>
<p>Thus in the common case we can sync graph updates (auth, content, etc) in just two round trips.</p>
<!-- External Links -->
</article>

  <article>
    <hr>
    <div>
  <h6>The Ink &amp; Switch Dispatch</h6>
  <p>Keep up-to-date with the lab's latest findings, appearances, and happenings by subscribing to our newsletter. For a sneak peek, <a href="https://www.inkandswitch.com/newsletter">browse the archive</a>.</p>
  

</div>
  </article>

  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cormac McCarthy's personal library (236 pts)]]></title>
            <link>https://www.smithsonianmag.com/arts-culture/two-years-cormac-mccarthys-death-rare-access-to-personal-library-reveals-man-behind-myth-180987150/</link>
            <guid>45444694</guid>
            <pubDate>Wed, 01 Oct 2025 23:06:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.smithsonianmag.com/arts-culture/two-years-cormac-mccarthys-death-rare-access-to-personal-library-reveals-man-behind-myth-180987150/">https://www.smithsonianmag.com/arts-culture/two-years-cormac-mccarthys-death-rare-access-to-personal-library-reveals-man-behind-myth-180987150/</a>, See on <a href="https://news.ycombinator.com/item?id=45444694">Hacker News</a></p>
Couldn't get https://www.smithsonianmag.com/arts-culture/two-years-cormac-mccarthys-death-rare-access-to-personal-library-reveals-man-behind-myth-180987150/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Edge264 – Minimalist, high-performance software decoder for H.264/AVC video (144 pts)]]></title>
            <link>https://github.com/tvlabs/edge264</link>
            <guid>45443462</guid>
            <pubDate>Wed, 01 Oct 2025 21:00:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tvlabs/edge264">https://github.com/tvlabs/edge264</a>, See on <a href="https://news.ycombinator.com/item?id=45443462">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">edge264</h2><a id="user-content-edge264" aria-label="Permalink: edge264" href="#edge264"></a></p>
<p dir="auto">Minimalist software decoder with state-of-the-art performance for the H.264/AVC video format.</p>
<p dir="auto"><em>Please note this is a work in progress and will be ready for use after making GStreamer/VLC plugins.</em></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Supports <strong>Progressive High</strong> and <strong>MVC 3D</strong> profiles, up to level 6.2</li>
<li>Any resolution up to 8K UHD</li>
<li>8-bit 4:2:0 planar YUV output</li>
<li>Slices and Arbitrary Slice Order</li>
<li>Slice and frame multi-threading</li>
<li>Per-slice reference picture list</li>
<li>Memory Management Control Operations</li>
<li>Long-term reference frames</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Supported platforms</h2><a id="user-content-supported-platforms" aria-label="Permalink: Supported platforms" href="#supported-platforms"></a></p>
<ul dir="auto">
<li>Windows: x86, x64</li>
<li>Linux: x86, x64, ARM64</li>
<li>Mac OS: x64</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Compiling and testing</h2><a id="user-content-compiling-and-testing" aria-label="Permalink: Compiling and testing" href="#compiling-and-testing"></a></p>
<p dir="auto">edge264 is entirely developed in C using 128-bit <a href="https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html" rel="nofollow">vector extensions</a> and vector intrinsics, and can be compiled with GNU GCC or LLVM Clang. <a href="https://www.libsdl.org/" rel="nofollow">SDL2</a> runtime library may be used (optional) to enable display with <code>edge264_test</code>.</p>
<p dir="auto">Here are the <code>make</code> options for tuning the compiled library file:</p>
<ul dir="auto">
<li><code>CC</code> - C compiler used to convert source files to object files (default <code>cc</code>)</li>
<li><code>CFLAGS</code> - additional compilation flags passed to <code>CC</code> and <code>TARGETCC</code></li>
<li><code>TARGETCC</code> - C compiler used to link object files into library file (default <code>CC</code>)</li>
<li><code>LDFLAGS</code> - additional compilation flags passed to <code>TARGETCC</code></li>
<li><code>TARGETOS</code> - resulting file naming convention among <code>Windows</code>|<code>Linux</code>|<code>Darwin</code> (default host)</li>
<li><code>VARIANTS</code> - comma-separated list of additional variants included in the library and selected at runtime (default <code>logs</code>)
<ul dir="auto">
<li><code>x86-64-v2</code> - variant compiled for x86-64 microarchitecture level 2 (SSSE3, SSE4.1 and POPCOUNT)</li>
<li><code>x86-64-v3</code> - variant compiled for x86-64 microarchitecture level 3 (AVX2, BMI, LZCNT, MOVBE)</li>
<li><code>logs</code> - variant compiled with logging support in YAML format (headers and slices)</li>
</ul>
</li>
<li><code>BUILD_TEST</code> - toggles compilation of <code>edge264_test</code> (default <code>yes</code>)</li>
<li><code>FORCEINTRIN</code> - enforce the use of intrinsics among <code>x86</code>|<code>ARM64</code> (for WebAssembly)</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="$ make CFLAGS=&quot;-march=x86-64&quot; VARIANTS=x86-64-v2,x86-64-v3 BUILD_TEST=no # example x86 build"><pre>$ make CFLAGS=<span><span>"</span>-march=x86-64<span>"</span></span> VARIANTS=x86-64-v2,x86-64-v3 BUILD_TEST=no <span><span>#</span> example x86 build</span></pre></div>
<p dir="auto">The automated test program <code>edge264_test</code> can browse files in a given directory, decoding each <code>&lt;video&gt;.264</code> file and comparing its output with each sibling file <code>&lt;video&gt;.yuv</code> if found. On the set of AVCv1, FRExt and MVC <a href="https://www.itu.int/wftp3/av-arch/jvt-site/draft_conformance/" rel="nofollow">conformance bitstreams</a>, 109/224 files are decoded without errors, the rest using yet unsupported features.</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ make
$ ./edge264_test --help # prints all options available
$ ffmpeg -i vid.mp4 -vcodec copy -bsf h264_mp4toannexb -an vid.264 # optional, converts from MP4 format
$ ./edge264_test -d vid.264 # replace -d with -b to benchmark instead of display"><pre>$ make
$ ./edge264_test --help <span><span>#</span> prints all options available</span>
$ ffmpeg -i vid.mp4 -vcodec copy -bsf h264_mp4toannexb -an vid.264 <span><span>#</span> optional, converts from MP4 format</span>
$ ./edge264_test -d vid.264 <span><span>#</span> replace -d with -b to benchmark instead of display</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example code</h2><a id="user-content-example-code" aria-label="Permalink: Example code" href="#example-code"></a></p>
<p dir="auto">Here is a complete example that opens an input file in Annex B format from command line, and dumps its decoded frames in planar YUV order to standard output. See <a href="https://github.com/tvlabs/edge264/blob/master/edge264_test.c">edge264_test.c</a> for a more complete example which can also display frames.</p>
<div dir="auto" data-snippet-clipboard-copy-content="#include <fcntl.h>
#include <unistd.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <sys/types.h>

#include &quot;edge264.h&quot;

int main(int argc, char *argv[]) {
	int fd = open(argv[1], O_RDONLY);
	struct stat st;
	fstat(fd, &amp;st);
	uint8_t *buf = mmap(NULL, st.st_size, PROT_READ, MAP_SHARED, fd, 0);
	const uint8_t *nal = buf + 3 + (buf[2] == 0); // skip the [0]001 delimiter
	const uint8_t *end = buf + st.st_size;
	// auto threads, no logs, auto allocs
	Edge264Decoder *dec = edge264_alloc(-1, NULL, NULL, 0, NULL, NULL, NULL);
	Edge264Frame frm;
	int res;
	do {
		res = edge264_decode_NAL(dec, nal, end, 0, NULL, NULL, &amp;nal);
		while (!edge264_get_frame(dec, &amp;frm, 0)) {
			for (int y = 0; y < frm.height_Y; y++)
				write(1, frm.samples[0] + y * frm.stride_Y, frm.width_Y);
			for (int y = 0; y < frm.height_C; y++)
				write(1, frm.samples[1] + y * frm.stride_C, frm.width_C);
			for (int y = 0; y < frm.height_C; y++)
				write(1, frm.samples[2] + y * frm.stride_C, frm.width_C);
		}
	} while (res == 0 || res == ENOBUFS);
	edge264_free(&amp;dec);
	munmap(buf, st.st_size);
	close(fd);
	return 0;
}"><pre><span>#include</span> <span>&lt;fcntl.h&gt;</span>
<span>#include</span> <span>&lt;unistd.h&gt;</span>
<span>#include</span> <span>&lt;sys/mman.h&gt;</span>
<span>#include</span> <span>&lt;sys/stat.h&gt;</span>
<span>#include</span> <span>&lt;sys/types.h&gt;</span>

<span>#include</span> <span>"edge264.h"</span>

<span>int</span> <span>main</span>(<span>int</span> <span>argc</span>, <span>char</span> <span>*</span><span>argv</span>[]) {
	<span>int</span> <span>fd</span> <span>=</span> <span>open</span>(<span>argv</span>[<span>1</span>], <span>O_RDONLY</span>);
	<span>struct</span> <span>stat</span> <span>st</span>;
	<span>fstat</span>(<span>fd</span>, <span>&amp;</span><span>st</span>);
	<span>uint8_t</span> <span>*</span><span>buf</span> <span>=</span> <span>mmap</span>(<span>NULL</span>, <span>st</span>.<span>st_size</span>, <span>PROT_READ</span>, <span>MAP_SHARED</span>, <span>fd</span>, <span>0</span>);
	<span>const</span> <span>uint8_t</span> <span>*</span><span>nal</span> <span>=</span> <span>buf</span> <span>+</span> <span>3</span> <span>+</span> (<span>buf</span>[<span>2</span>] <span>==</span> <span>0</span>); <span>// skip the [0]001 delimiter</span>
	<span>const</span> <span>uint8_t</span> <span>*</span><span>end</span> <span>=</span> <span>buf</span> <span>+</span> <span>st</span>.<span>st_size</span>;
	<span>// auto threads, no logs, auto allocs</span>
	<span>Edge264Decoder</span> <span>*</span><span>dec</span> <span>=</span> <span>edge264_alloc</span>(<span>-1</span>, <span>NULL</span>, <span>NULL</span>, <span>0</span>, <span>NULL</span>, <span>NULL</span>, <span>NULL</span>);
	<span>Edge264Frame</span> <span>frm</span>;
	<span>int</span> <span>res</span>;
	<span>do</span> {
		<span>res</span> <span>=</span> <span>edge264_decode_NAL</span>(<span>dec</span>, <span>nal</span>, <span>end</span>, <span>0</span>, <span>NULL</span>, <span>NULL</span>, <span>&amp;</span><span>nal</span>);
		<span>while</span> (!<span>edge264_get_frame</span>(<span>dec</span>, <span>&amp;</span><span>frm</span>, <span>0</span>)) {
			<span>for</span> (<span>int</span> <span>y</span> <span>=</span> <span>0</span>; <span>y</span> <span>&lt;</span> <span>frm</span>.<span>height_Y</span>; <span>y</span><span>++</span>)
				<span>write</span>(<span>1</span>, <span>frm</span>.<span>samples</span>[<span>0</span>] <span>+</span> <span>y</span> <span>*</span> <span>frm</span>.<span>stride_Y</span>, <span>frm</span>.<span>width_Y</span>);
			<span>for</span> (<span>int</span> <span>y</span> <span>=</span> <span>0</span>; <span>y</span> <span>&lt;</span> <span>frm</span>.<span>height_C</span>; <span>y</span><span>++</span>)
				<span>write</span>(<span>1</span>, <span>frm</span>.<span>samples</span>[<span>1</span>] <span>+</span> <span>y</span> <span>*</span> <span>frm</span>.<span>stride_C</span>, <span>frm</span>.<span>width_C</span>);
			<span>for</span> (<span>int</span> <span>y</span> <span>=</span> <span>0</span>; <span>y</span> <span>&lt;</span> <span>frm</span>.<span>height_C</span>; <span>y</span><span>++</span>)
				<span>write</span>(<span>1</span>, <span>frm</span>.<span>samples</span>[<span>2</span>] <span>+</span> <span>y</span> <span>*</span> <span>frm</span>.<span>stride_C</span>, <span>frm</span>.<span>width_C</span>);
		}
	} <span>while</span> (<span>res</span> <span>==</span> <span>0</span> <span>||</span> <span>res</span> <span>==</span> <span>ENOBUFS</span>);
	<span>edge264_free</span>(<span>&amp;</span><span>dec</span>);
	<span>munmap</span>(<span>buf</span>, <span>st</span>.<span>st_size</span>);
	<span>close</span>(<span>fd</span>);
	<span>return</span> <span>0</span>;
}</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">API reference</h2><a id="user-content-api-reference" aria-label="Permalink: API reference" href="#api-reference"></a></p>
<p dir="auto"><code>const uint8_t * <b>edge264_find_start_code(buf, end, four_byte)</b></code></p>
<p dir="auto">Return a pointer to the next three or four byte (0)001 start code prefix, or <code>end</code> if not found.</p>
<ul dir="auto">
<li><code>const uint8_t * buf</code> - first byte of buffer to search into</li>
<li><code>const uint8_t * end</code> - first invalid byte past the buffer that stops the search</li>
<li><code>int four_byte</code> - if 0 seek a 001 prefix, otherwise seek a 0001</li>
</ul>
<hr>
<p dir="auto"><code>Edge264Decoder * <b>edge264_alloc(n_threads, log_cb, log_arg, log_mbs, alloc_cb, free_cb, alloc_arg)</b></code></p>
<p dir="auto">Allocate and initialize a decoding context.</p>
<ul dir="auto">
<li><code>int n_threads</code> - number of background worker threads, with 0 to disable multithreading and -1 to detect the number of logical cores at runtime</li>
<li><code>void (* log_cb)(const char * str, void * log_arg)</code> - if not NULL, a <code>fputs</code>-compatible function pointer that <code>edge264_decode_NAL</code> will call to log every header, SEI or macroblock (requires the <code>logs</code> variant otherwise fails at runtime, called from the same thread except macroblocks in multithreaded decoding)</li>
<li><code>void * log_arg</code> - custom value passed to <code>log_cb</code></li>
<li><code>int log_mbs</code> - set to 1 to enable logging of macroblocks</li>
<li><code>void (* alloc_cb)(void ** samples, unsigned samples_size, void ** mbs, unsigned mbs_size, int errno_on_fail, void * alloc_arg)</code> - if not NULL, a function pointer that <code>edge264_decode_NAL</code> will call (on the same thread) instead of malloc to request allocation of samples and macroblock buffers for a frame (<code>errno_on_fail</code> is ENOMEM for mandatory allocations, or ENOBUFS for allocations that may be skipped to save memory but reduce playback smoothness)</li>
<li><code>void (* free_cb)(void * samples, void * mbs, void * alloc_arg)</code> - if not NULL, a function pointer that <code>edge264_decode_NAL</code> and <code>edge264_free</code> will call (on the same thread) to free buffers allocated through <code>alloc_cb</code></li>
<li><code>void * alloc_arg</code> - custom value passed to <code>alloc_cb</code> and <code>free_cb</code></li>
</ul>
<hr>
<p dir="auto"><code>int <b>edge264_decode_NAL(dec, buf, end, non_blocking, free_cb, free_arg, next_NAL)</b></code></p>
<p dir="auto">Decode a single NAL unit containing any parameter set or slice.</p>
<ul dir="auto">
<li><code>Edge264Decoder * dec</code> - initialized decoding context</li>
<li><code>const uint8_t * buf</code> - first byte of NAL unit (containing <code>nal_unit_type</code>)</li>
<li><code>const uint8_t * end</code> - first byte past the buffer (max buffer size is 2<sup>31</sup>-1 on 32-bit and 2<sup>63</sup>-1 on 64-bit)</li>
<li><code>int non_blocking</code> - set to 1 if the current thread has other processing thus cannot block here</li>
<li><code>void (* free_cb)(void * free_arg, int ret)</code> - callback that may be called from another thread when multithreaded, to signal the end of parsing and release the NAL buffer</li>
<li><code>void * free_arg</code> - custom value that will be passed to <code>free_cb</code></li>
<li><code>const uint8_t ** next_NAL</code> - if not NULL and the return code is <code>0</code>|<code>ENOTSUP</code>|<code>EBADMSG</code>, will receive a pointer to the next NAL unit after the next start code in an Annex B stream</li>
</ul>
<p dir="auto">Return codes are:</p>
<ul dir="auto">
<li><code>0</code> on success</li>
<li><code>ENOTSUP</code> on unsupported stream (decoding may proceed but could return zero frames)</li>
<li><code>EBADMSG</code> on invalid stream (decoding may proceed but could show visual artefacts, if you can check with another decoder that the stream is actually flawless, please consider filling a bug report 🙏)</li>
<li><code>EINVAL</code> if the function was called with <code>dec == NULL</code> or <code>dec-&gt;buf == NULL</code></li>
<li><code>ENODATA</code> if the function was called while <code>dec-&gt;buf &gt;= dec-&gt;end</code></li>
<li><code>ENOMEM</code> if <code>malloc</code> failed to allocate memory</li>
<li><code>ENOBUFS</code> if more frames should be consumed with <code>edge264_get_frame</code> to release a picture slot</li>
<li><code>EWOULDBLOCK</code> if the non-blocking function would have to wait before a picture slot is available</li>
</ul>
<hr>
<p dir="auto"><code>int <b>edge264_get_frame(dec, out, borrow)</b></code></p>
<p dir="auto">Fetch the next frame ready for output.</p>
<ul dir="auto">
<li><code>Edge264Decoder * dec</code> - initialized decoding context</li>
<li><code>Edge264Frame *out</code> - a structure that will be filled with data for the frame returned</li>
<li><code>int borrow</code> - if 0 the frame may be accessed until the next call to <code>edge264_decode_NAL</code>, otherwise the frame should be explicitly returned with <code>edge264_return_frame</code>. Note that access is not exclusive, it may be used concurrently as reference for other frames.</li>
</ul>
<p dir="auto">Return codes are:</p>
<ul dir="auto">
<li><code>0</code> on success (one frame is returned)</li>
<li><code>EINVAL</code> if the function was called with <code>dec == NULL</code> or <code>out == NULL</code></li>
<li><code>ENOMSG</code> if there is no frame to output at the moment</li>
</ul>
<p dir="auto">While reference frames may be decoded ahead of their actual display (ex. B-Pyramid technique), all frames are buffered for reordering before being released for display:</p>
<ul dir="auto">
<li>Decoding a non-reference frame releases it and all frames set to be displayed before it.</li>
<li>Decoding a key frame releases all stored frames (but not the key frame itself which might be reordered later).</li>
<li>Exceeding the maximum number of frames held for reordering releases the next frame in display order.</li>
<li>Lacking an available frame buffer releases the next non-reference frame in display order (to salvage its buffer) and all reference frames displayed before it.</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="typedef struct Edge264Frame {
	const uint8_t *samples[3]; // Y/Cb/Cr planes
	const uint8_t *samples_mvc[3]; // second view
	const uint8_t *mb_errors; // probabilities (0..100) for each macroblock to be erroneous, NULL if there are no errors, values are spaced by stride_mb in memory
	int8_t pixel_depth_Y; // 0 for 8-bit, 1 for 16-bit
	int8_t pixel_depth_C;
	int16_t width_Y;
	int16_t width_C;
	int16_t height_Y;
	int16_t height_C;
	int16_t stride_Y;
	int16_t stride_C;
	int16_t stride_mb;
	uint32_t FrameId;
	uint32_t FrameId_mvc; // second view
	int16_t frame_crop_offsets[4]; // {top,right,bottom,left}, useful to derive the original frame with 16x16 macroblocks
	void *return_arg;
} Edge264Frame;"><pre><span>typedef</span> <span>struct</span> <span>Edge264Frame</span> {
	<span>const</span> <span>uint8_t</span> <span>*</span><span>samples</span>[<span>3</span>]; <span>// Y/Cb/Cr planes</span>
	<span>const</span> <span>uint8_t</span> <span>*</span><span>samples_mvc</span>[<span>3</span>]; <span>// second view</span>
	<span>const</span> <span>uint8_t</span> <span>*</span><span>mb_errors</span>; <span>// probabilities (0..100) for each macroblock to be erroneous, NULL if there are no errors, values are spaced by stride_mb in memory</span>
	<span>int8_t</span> <span>pixel_depth_Y</span>; <span>// 0 for 8-bit, 1 for 16-bit</span>
	<span>int8_t</span> <span>pixel_depth_C</span>;
	<span>int16_t</span> <span>width_Y</span>;
	<span>int16_t</span> <span>width_C</span>;
	<span>int16_t</span> <span>height_Y</span>;
	<span>int16_t</span> <span>height_C</span>;
	<span>int16_t</span> <span>stride_Y</span>;
	<span>int16_t</span> <span>stride_C</span>;
	<span>int16_t</span> <span>stride_mb</span>;
	<span>uint32_t</span> <span>FrameId</span>;
	<span>uint32_t</span> <span>FrameId_mvc</span>; <span>// second view</span>
	<span>int16_t</span> <span>frame_crop_offsets</span>[<span>4</span>]; <span>// {top,right,bottom,left}, useful to derive the original frame with 16x16 macroblocks</span>
	<span>void</span> <span>*</span><span>return_arg</span>;
} <span>Edge264Frame</span>;</pre></div>
<hr>
<p dir="auto"><code>void <b>edge264_return_frame(dec, return_arg)</b></code></p>
<p dir="auto">Give back ownership of the frame if it was borrowed from a previous call to <code>edge264_get_frame</code>.</p>
<ul dir="auto">
<li><code>Edge264Decoder * dec</code> - initialized decoding context</li>
<li><code>void * return_arg</code> - the value stored inside the frame to return</li>
</ul>
<hr>
<p dir="auto"><code>void <b>edge264_flush(dec)</b></code></p>
<p dir="auto">For use when seeking, stop all background processing, flush all delayed frames while keeping them allocated, and clear the internal decoder state.</p>
<ul dir="auto">
<li><code>Edge264Decoder * dec</code> - initialized decoding context</li>
</ul>
<hr>
<p dir="auto"><code>void <b>edge264_free(pdec)</b></code></p>
<p dir="auto">Deallocate the entire decoding context, and unset the pointer.</p>
<ul dir="auto">
<li><code>Edge264Decoder ** pdec</code> - pointer to a decoding context, initialized or not</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Roadmap</h2><a id="user-content-roadmap" aria-label="Permalink: Roadmap" href="#roadmap"></a></p>
<ul dir="auto">
<li>Stress testing (in progress)</li>
<li>Multithreading (in progress)</li>
<li>Error recovery (in progress)</li>
<li>Integration in VLC/ffmpeg/GStreamer</li>
<li>ARM32</li>
<li>PAFF and MBAFF</li>
<li>4:0:0, 4:2:2 and 4:4:4</li>
<li>9-14 bit depths with possibility of different luma/chroma depths</li>
<li>Transform-bypass for macroblocks with QP==0</li>
<li>SEI messages</li>
<li>AVX-2 optimizations</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Programming techniques</h2><a id="user-content-programming-techniques" aria-label="Permalink: Programming techniques" href="#programming-techniques"></a></p>
<p dir="auto">I use edge264 to experiment on new programming techniques to improve performance and code size over existing decoders, and presented a few of these techniques at <a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2931-innovations-in-h-264-avc-software-decoding-architecture-and-optimization-of-a-block-based-video-decoder-to-reach-10-faster-speed-and-3x-code-reduction-over-the-state-of-the-art-/" rel="nofollow">FOSDEM'24</a> and <a href="https://fosdem.org/2025/schedule/event/fosdem-2025-5455-more-innovations-in-h-264-avc-software-decoding/" rel="nofollow">FOSDEM'25</a>.</p>
<ol dir="auto">
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_internal.h">Single header file</a> - It contains all struct definitions, common constants and enums, SIMD aliases, inline functions and macros, and exported functions for each source file. To understand the code base you should look at this file first.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_slice.c">Code blocks instead of functions</a> - The main decoding loop is a forward pipeline designed as a DAG loosely resembling hardware decoders, with nodes being non-inlined functions and edges being tail calls. It helps mutualize code branches wherever possible, thus reduces code size to help fit in L1 cache.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_intra.c">Tree branching</a> - Directional intra modes are implemented with a jump table to the leaves of a tree then unconditional jumps down to the trunk. It allows sharing the bottom code among directional modes, to reduce code size.</li>
<li><del>Global context register - The pointer to the main structure holding context data is assigned to a register when supported by the compiler (GCC).</del> This technique was dropped as Clang eventually reached on-par performance, so there is little incentive to maintain this hack.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_internal.h">Default neighboring values</a> (search <code>unavail_mb</code>) - Tests for availability of neighbors are replaced with fake neighboring macroblocks around each frame. It reduces the number of conditional tests inside the main decoding loop, thus reduces code size and branch predictor pressure.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_internal.h">Relative neighboring offsets</a> (look for <code>A4x4_int8</code> and related variables) - Access to left/top macroblock values is done with direct offsets in memory instead of copying their values to a buffer beforehand. It helps to reduce the reads and writes in the main decoding loop.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_slice.c">Parsing uneven block shapes</a> (look at function <code>parse_P_sub_mb</code>) - Each Inter macroblock paving specified with mb_type and sub_mb_type is first converted to a bitmask, then iterated on set bits to fetch the correct number of reference indices and motion vectors. This helps to reduce code size and number of conditional blocks.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_internal.h">Using vector extensions</a> - GCC's vector extensions are used along vector intrinsics to write more compact code. All intrinsics from Intel are aliased with shorter names, which also provides an enumeration of all SIMD instructions used in the decoder.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_deblock.c">Register-saturating SIMD</a> - Some critical SIMD algorithms use more simultaneous vectors than available registers, effectively saturating the register bank and generating stack spills on purpose. In some cases this is more efficient than splitting the algorithm into smaller bits, and has the additional benefit of scaling well with later CPUs.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_bitstream.c">Piston cached bitstream reader</a> - The bitstream bits are read in a size_t[2] intermediate cache with a trailing set bit to keep track of the number of cached bits, giving access to 32/64 bits per read from the cache, and allowing wide refills from memory.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_bitstream.c">On-the-fly SIMD unescaping</a> - The input bitstream is unescaped on the fly using vector code, avoiding a full preprocessing pass to remove escape sequences, and thus reducing memory reads/writes.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_internal.h">Multiarch SIMD programming</a> - Using vector extensions along with aliased intrinsics allows supporting both Intel SSE and ARM NEON with around 80% common code and few #if #else blocks, while keeping state-of-the-art performance for both architectures.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_internal.h">The Structure of Arrays pattern</a> - The frame buffer is stored with arrays for each distinct field rather than an array of structures, to express operations on frames with bitwise and vector operators (see <a href="https://en.wikipedia.org/wiki/AoS_and_SoA" rel="nofollow">AoS and SoA</a>). The task buffer for multithreading also relies on it partially.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_headers.c">Deferred error checking</a> - Error detection is performed once in each type of NAL unit (search for <code>return</code> statements), by clamping all input values to their expected ranges, then expecting <code>rbsp_trailing_bit</code> afterwards (with <em>very high</em> probability of catching an error if the stream is corrupted). This design choice is discussed in <a href="https://traffaillac.github.io/parsing.html" rel="nofollow">A case about parsing errors</a>.</li>
</ol>
<p dir="auto">Other yet-to-be-presented bits:</p>
<ul dir="auto">
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264.h">Minimalistic API</a> with FFI-friendly design (7 functions and 1 structure).</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_internal.h">The bitstream caches</a> for CAVLC and CABAC (search for <code>rbsp_reg</code>) are stored in two size_t variables each, which may be mapped to Global Register Variables in the future.</li>
<li><a href="https://github.com/tvlabs/edge264/blob/master/edge264_slice.c">The decoding of input symbols</a> is interspersed with their parsing (instead of parsing to a <code>struct</code> then decoding the data). It deduplicates branches and loops that are present in both parsing and decoding, and even eliminates the need to store some symbols (e.g. mb_type, sub_mb_type, mb_qp_delta).</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Testing (work in progress)</h2><a id="user-content-testing-work-in-progress" aria-label="Permalink: Testing (work in progress)" href="#testing-work-in-progress"></a></p>
<p dir="auto">With the help of a <a href="https://github.com/tvlabs/edge264/blob/master/tools/gen_avc.py">custom bitstream writer</a> using the same YAML format edge264 outputs, a set of extensive tests are being created in <a href="https://github.com/tvlabs/edge264/blob/master/tools/raw_tests">tools/raw_tests</a> to stress the darkest corners of this decoder. The following table lists them all, along with the files implementing them.</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>General tests</th>
<th>Expected</th>
<th>Test files</th>
</tr>
</thead>
<tbody>
<tr>
<td>All supported types of NAL units</td>
<td>All OK</td>
<td>supp-nals</td>
</tr>
<tr>
<td>All unsupported types of NAL units</td>
<td>All unsupp</td>
<td>unsupp-nals</td>
</tr>
<tr>
<td>Maximal header log-wise</td>
<td>All OK</td>
<td>max-logs</td>
</tr>
<tr>
<td>All conditions (incl. ignored) for detecting the start of a new frame</td>
<td>All OK</td>
<td>finish-frame</td>
</tr>
<tr>
<td>nal_ref_idc=0 on a IDR</td>
<td>All OK</td>
<td>non-ref-idr</td>
</tr>
<tr>
<td>Missing rbsp_trailing_bit for all supported NAL types</td>
<td>All OK</td>
<td>no-trailing-bit</td>
</tr>
<tr>
<td>NAL of less than 11 bytes starting/ending at page boundary</td>
<td>All OK</td>
<td>tiny-nal</td>
</tr>
<tr>
<td>SEI/slice referencing an uninitialized SPS/PPS</td>
<td>1 OK, 4 errors</td>
<td>missing-ps</td>
</tr>
<tr>
<td>Two non-ref frames with decreasing POC</td>
<td>All OK, any order</td>
<td>non-ref-dec-poc</td>
</tr>
<tr>
<td>Horizontal/vertical cropping leaving zero space</td>
<td>All OK, 1x1 frames</td>
<td>zero-cropping</td>
</tr>
<tr>
<td>P/B slice with nal_unit_type=5 or max_num_ref_frames=0</td>
<td>4 OK, 2 errors</td>
<td>no-refs-P-B-slice</td>
</tr>
<tr>
<td>IDR slice with frame_num&gt;0</td>
<td>All OK, clamped to 0</td>
<td>pos-frame-num-idr</td>
</tr>
<tr>
<td>A ref that must bump out higher POCs to enter DPB (C.4.5.2)</td>
<td>All OK, check output order</td>
<td>poc-out-of-order</td>
</tr>
<tr>
<td>Two ref frames with the same frame_num but differing POC, then a third frame referencing both</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Gap in frame_num while gaps_in_frame_num_value_allowed_flag=0</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Stream starting with non-IDR I frame</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Stream starting with P/B frame</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ref slice with delta_pic_order_cnt_bottom=-2**31, then a second frame referencing it</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Two frames A/B with intersecting top/bottom POC intervals in all possible intersections</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A 32-bit POC overflow between 2 frames</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A B-frame referencing frames with more than 2**16 POC diff</td>
<td></td>
<td></td>
</tr>
<tr>
<td>num_ref_idx_active&gt;15 in SPS then no override in slice for L0 and L1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A slice with more ref_pic_list_modifications than num_ref_idx_active/16 for L0 and L1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A slice with ref_pic_list_modifications duplicating a ref then referencing the second one</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A slice with insufficient ref frames with and without override of num_ref_idx_active for L0 and L1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A modification of RefPicList[0/1] to a non-existing short/long term frame, then referencing it in mb</td>
<td></td>
<td></td>
</tr>
<tr>
<td>33 IDR with long_term_reference_flag=0/1 while max_num_ref_frames=0 (8.2.5.1)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A new reference while max_num_ref_frames are already all long-term</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All combinations of mmco on all non-existing/short/long refs, with at least twice each mmco</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Two fields of the same frame being assigned different long-term frame indices then referenced</td>
<td></td>
<td></td>
</tr>
<tr>
<td>While all max_num_ref_frames are long-term, a ref_pic_list_modification that references all of them</td>
<td></td>
<td></td>
</tr>
<tr>
<td>An IDR picture with POC&gt;0</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A picture with mmco=5 decoded after a picture with greater POC (8.2.1)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A P/B frame with zero references before or received with a gap in frame_num equal to max_ref_frames</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A P/B frame referencing a non-existing/erroneous ref</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A B frame with colPic set to a non-existing frame</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A current frame mmco'ed to long-term while all max_num_ref_frames are already long-term</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A mmco marking a non-existing picture to long-term</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All combinations of IntraNxNPredMode with A/B/C/D unavailability with asserts for out-of-bounds reads</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A direct Inter reference from colPic that is not present in RefPicList0</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A residual block with all coeffs at maximum 32-bit values</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Two slices of the same frame separated by a currPic reset (ex. AUD)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Two frames with the same POC yet differing TopFieldOrderCnt/BottomFieldOrderCnt</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Differing mmcos on two slices of the same frame</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Sending 2 IDR, then reaching the lowest possible POC, then getting all frames</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Two slices with mmco=5 yet frame_num&gt;0 (to make it look like a new frame)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>POCs spaced by more than half max bits, such that relying on a stale prevPicOrderCnt yields wrong POC</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Filling the DPB with 16 refs then setting max_num_ref_frames=1 and adding a new ref frame</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Adding a frame cropping after decoding a frame</td>
<td>Crop should not apply retroactively</td>
<td></td>
</tr>
<tr>
<td>Making a Direct ref_pic be used after it has been unreferenced</td>
<td></td>
<td></td>
</tr>
<tr>
<td>poc_type=2 and non-ref frame followed by non-ref pic, and the opposite (7.4.2.1.1)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>direct_8x8_inference_flag=1 with frame_mbs_only_flag=0</td>
<td></td>
<td></td>
</tr>
<tr>
<td>checking that a gap in frame_num with poc_type==0 does not insert refs in B slices</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A SPS changing frame format while currPic&gt;=0</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A frame allocator putting all allocs at start/end of a page boundary</td>
<td></td>
<td></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Parameter sets tests</th>
<th>Expected</th>
<th>Test files</th>
</tr>
</thead>
<tbody>
<tr>
<td>Invalid profile_idc=0/255</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Highest level_idc=255</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All unsupported values of chroma_format_idc</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All unsupported values of bit_depth_luma/chroma</td>
<td></td>
<td></td>
</tr>
<tr>
<td>qpprime_y_zero_transform_bypass_flag=1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All scaling lists default/fallback rules and repeated values for all indices, with residual macroblock</td>
<td></td>
<td></td>
</tr>
<tr>
<td>log2_max_frame_num=4 and a frame referencing another with the same frame_num%4</td>
<td></td>
<td></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>CAVLC tests</th>
<th>Expected</th>
<th>Test files</th>
</tr>
</thead>
<tbody>
<tr>
<td>All valid total_zeros=0-8-prefix+3-bit-suffix for TotalCoeffs in [0;15] for 4x4 and 2x2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Invalid total_zeros=31/63/127-prefix for TotalCoeffs in [0;15] for 4x4 and 2x2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All valid coeff_token=0-14-prefix+4-bit-suffix for nC=0/2/4, and valid 6-bit-values for nC=8</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Invalid coeff_token=31/63/127-prefix for nC=0/2/4, and invalid 6-bit-values for nC=8</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All valid levelCode=25-prefix+suffixLength-bit-suffix for all values of suffixLength</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All valid run_before for all values of zerosLeft&lt;=7</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Invalid run_before=31/63/127 for zerosLeft=7</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Macroblock of maximal size for all values of mb_type</td>
<td></td>
<td></td>
</tr>
<tr>
<td>mb_qp_delta=-26/25 that overflows on both sides</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All valid inferences of nC for all values of nA/nB=unavail/other-slice/0-16</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All coded_block_pattern=[0;47] for I and P/B slices</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All combinations of intra_chroma_pred_mode and Intra4x4/8x8/16x16PredMode with A/B-unavailability</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All values of mb_type+sub_mb_types for I/P/B with ref_idx/mvds different than values from B_Direct</td>
<td></td>
<td></td>
</tr>
<tr>
<td>mvd=[-32768/0/32767,-32768/0/32767] in a single 16x16 macroblock</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TotalCoeff=16 for a Intra16x16 AC block</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A residual block with run_length=14 making zerosLeft negative</td>
<td></td>
<td></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>CABAC tests</th>
<th>Expected</th>
<th>Test files</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mixing CAVLC and CABAC in a same frame</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Single slice with at least 8 cabac_zero_word</td>
<td></td>
<td></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>MVC tests</th>
<th>Expected</th>
<th>Test files</th>
</tr>
</thead>
<tbody>
<tr>
<td>All wrong combinations of non_idr_flag with nal_unit_type=1/5 and nal_ref_idc=0/1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>nal_unit_type=14 then filler unit then nal_unit_type=1/5</td>
<td></td>
<td></td>
</tr>
<tr>
<td>An nal_unit_type=5 view paired with a non_idr_flag=0 P view, or a non_idr_flag=1 view</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Missing a base or non-base view</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Receiving a SSPS yet only base views then</td>
<td></td>
<td></td>
</tr>
<tr>
<td>16 ref base views while non base are non-refs</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A SSPS with different pic_width_in_mbs/pic_height_in_mbs/chroma_format_idc than its SPS</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A SSPS with num_views=1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A non-base view with weighted_bipred_idc=2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A non-base view with its base in RefPicList1[0] and direct_spatial_mv_pred_flag=0 (H.7.4.3)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A slice with num_ref_idx_l0_active&gt;8</td>
<td></td>
<td></td>
</tr>
<tr>
<td>svc_extension_flag=1 on a MVC stream</td>
<td></td>
<td></td>
</tr>
<tr>
<td>SSPS with additional_extension2_flag=1 and more trailing data</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Gap in frame_num of 16 frames on both views</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Specifying extra_frames=1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Receiving a non-base view before its base</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A stream sending non-base views after a few frames have been output</td>
<td></td>
<td></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Error recovery tests</th>
<th>Expected</th>
<th>Test files</th>
</tr>
</thead>
<tbody>
<tr>
<td>Tests to implement</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A complete frame received twice</td>
<td></td>
<td></td>
</tr>
<tr>
<td>A slice of a frame received twice</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Frame with correct and erroneous slice</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All combinations erroneous/correct and all interval intersections on 2 slices</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All failures of malloc</td>
<td></td>
<td></td>
</tr>
<tr>
<td>All (dis-)allowed bit positions at the end without rbsp_trailing_bit</td>
<td></td>
<td></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DARPA project for automated translation from C to Rust (2024) (131 pts)]]></title>
            <link>https://www.darpa.mil/news/2024/memory-safety-vulnerabilities</link>
            <guid>45443368</guid>
            <pubDate>Wed, 01 Oct 2025 20:53:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.darpa.mil/news/2024/memory-safety-vulnerabilities">https://www.darpa.mil/news/2024/memory-safety-vulnerabilities</a>, See on <a href="https://news.ycombinator.com/item?id=45443368">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Memory safety vulnerabilities are the most prevalent type of disclosed software vulnerability<sup>1</sup> and affect a computer's memory in two primary ways. First, programming languages like C allow programmers to manipulate memory directly, making it easy to accidentally introduce errors in their program that would enable a seemingly routine operation to corrupt the state of memory. Second, memory safety issues can arise when a programming language exhibits an “undefined behavior.” Undefined behaviors happen when the programming language standard provides no specification or guidance on how the program should behave under conditions not explicitly defined in the standard.</p><p>After more than two decades of grappling with memory safety issues in C and C++, the software engineering community has reached a consensus. Relying on bug-finding tools is not enough. Even the Office of the National Cyber Director has called for more proactive approaches to eliminate memory safety vulnerabilities to reduce potential attacks<sup>2</sup>.</p><p>While it's been no secret that memory safe programming languages can eliminate memory safety vulnerabilities, the challenge has been rewriting legacy code at scale that matches the vastness of the problem. The C language was created in the 1970s and has become ubiquitous. It has been used to develop applications that run everything from modern smartphones to space vehicles and beyond. And the Department of Defense has long-lived systems that disproportionately depend on programming languages like C.</p><p>However, in recent years, a cultural shift toward the programming language Rust and recent breakthroughs in machine learning techniques, like large language models (LLMs), have created an environment that may lend itself to a new class of solutions.</p><p>DARPA’s Translating All C to Rust (TRACTOR) program wants to seize this opportunity by substantially automating the translation of the world’s legacy C code to Rust.</p><p>“You can go to any of the LLM websites, start chatting with one of the AI chatbots, and all you need to say is ‘here's some C code, please translate it to safe idiomatic Rust code,’ cut, paste, and something comes out, and it's often very good, but not always,” said Dr. Dan Wallach, DARPA program manager for TRACTOR. “The research challenge is to dramatically improve the automated translation from C to Rust, particularly for program constructs with the most relevance."</p><p>TRACTOR will strive to create the same quality and style that a skilled Rust developer would produce, thereby eliminating the entire class of memory safety security vulnerabilities in C programs.</p><p>Wallach anticipates proposals that include novel combinations of software analysis, such as static and dynamic analysis, and large language models. The program will host public competitions throughout the effort to test the capabilities of the LLM-powered solutions.</p><p>"Rust forces the programmer to get things right,” said Wallach. “It can feel constraining to deal with all the rules it forces, but when you acclimate to them, the rules give you freedom. They're like guardrails; once you realize they're there to protect you, you'll become free to focus on more important things."</p><p>DARPA will sponsor a Proposers Day on Aug. 26, 2024, which attendees can attend in person or virtually. Participants must register by Aug. 19, 2024. Details and registration info are available at <a href="https://sam.gov/opp/1e45d648886b4e9ca91890285af77eb7/view" target="_blank">SAM.Gov</a>.</p><p>[1]<a href="https://www.cisa.gov/sites/default/files/2023-12/The-Case-for-Memory-Safe-Roadmaps-508c.pdf" target="_blank">https://www.cisa.gov/sites/default/files/2023-12/The-Case-for-Memory-Safe-Roadmaps-508c.pdf</a></p><p>[2]<a href="https://www.whitehouse.gov/oncd/briefing-room/2024/02/26/memory-safety-fact-sheet/" target="_blank">https://www.whitehouse.gov/oncd/briefing-room/2024/02/26/memory-safety-fact-sheet/</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft declares bring your Copilot to work day, usurping IT authority (138 pts)]]></title>
            <link>https://www.theregister.com/2025/10/01/microsoft_consumer_copilot_corporate/</link>
            <guid>45443304</guid>
            <pubDate>Wed, 01 Oct 2025 20:48:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2025/10/01/microsoft_consumer_copilot_corporate/">https://www.theregister.com/2025/10/01/microsoft_consumer_copilot_corporate/</a>, See on <a href="https://news.ycombinator.com/item?id=45443304">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>Your job may not support BYOD, but how about BYOC? Microsoft has declared that people can bring their personal Microsoft 365 subscriptions to work to access various Copilot features at companies that fail to provide an AI fix.</p>
<p>Redmond has done so unilaterally, effectively endorsing "shadow IT" – the practice of bringing unapproved software and devices into the workplace.</p>
<p>Earlier this year, Microsoft said it had adopted a new approach to shadow IT. "While earlier eras of our IT history focused on trying to prevent shadow IT, we are now concentrating on managing it," the biz said in a <a href="https://www.microsoft.com/insidetrack/blog/digitally-transforming-microsoft-our-it-journey/">blog post</a>. By "managing," Microsoft also means "enabling."</p>

    

<p>Samer Baroudi, senior product marketing manager at Microsoft, insists this is for your own good.</p>

        


        

<p>"This offers a safer alternative to other bring-your-own-AI scenarios, and empowers users with Copilot in their daily jobs while keeping IT firmly in control and all enterprise data protections intact," Baroudi explained in a <a href="https://techcommunity.microsoft.com/blog/microsoft365copilotblog/employees-can-bring-copilot-from-their-personal-microsoft-365-plans-to-work---wh/4458212">blog post</a>.</p>
<p>Makers of competing AI products might disagree.</p>

        

<p>Microsoft says that employees can sign into Microsoft 365 apps using both personal and work accounts and now can use Copilot features from their personal plan (Personal, Family, or Premium) for business documents – even if their work account lacks a Copilot license.</p>
<ul>

<li><a href="https://www.theregister.com/2025/10/01/raspberry_pi_price_hikes/">Raspberry Pi prices hiked as AI gobbles all the memory</a></li>

<li><a href="https://www.theregister.com/2025/10/01/ai_isnt_taking_people_jobs/">AI has had zero effect on jobs so far, says Yale study</a></li>

<li><a href="https://www.theregister.com/2025/10/01/us_air_force_investigates_breach/">Air Force admits SharePoint privacy issue as reports trickle out of possible breach</a></li>

<li><a href="https://www.theregister.com/2025/10/01/hundreds_businesses_urge_microsoft_not_end_win10_support/">Hundreds of orgs urge Microsoft: don't kill off free Windows 10 updates</a></li>
</ul>
<p>IT admins miffed at having their authority usurped by a diktat from Redmond can console themselves with the knowledge that Copilot's level of access "is strictly governed by the user’s work account permissions, ensuring enterprise data remains protected." The user's Entra (work) identity governs file permissions and access controls.</p>
<p>Also, "IT retains full control and oversight" – apart from the bit about allowing this to happen in the first place.</p>
<p>Admins have the ability to disallow personal Copilot usage on work documents using cloud policy controls. And they can audit personal Copilot interactions and can apply enterprise identity, permission, and compliance policies.</p>
<p>Government tenants (GCC/DoD) for some reason don't support this capability, the one that Baroudi insists "does not create new data exposure risks."</p>

        

<p>Meanwhile, employees who decide to fire up their personal Copilot accounts within the workplace should be mindful that their prompts and responses will be captured by their employer.</p>
<p>As to why Microsoft would bother, Baroudi provides a hint in the FAQs detailing the bring-your-own-Copilot-to-work initiative that accompanies his post.</p>
<blockquote>Can use of Copilot from personal Microsoft 365 subscriptions help drive AI adoption? &nbsp;
<p>

Yes. It allows users to experience AI productivity benefits while IT retains control.</p></blockquote>
<p>Of course, when Microsoft next cites enterprise adoption statistics for its AI products, it will be worth asking whether the company is counting personal usage of Copilot. ®</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Company Man (181 pts)]]></title>
            <link>https://www.lesswrong.com/posts/JH6tJhYpnoCfFqAct/the-company-man</link>
            <guid>45443298</guid>
            <pubDate>Wed, 01 Oct 2025 20:47:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.lesswrong.com/posts/JH6tJhYpnoCfFqAct/the-company-man">https://www.lesswrong.com/posts/JH6tJhYpnoCfFqAct/the-company-man</a>, See on <a href="https://news.ycombinator.com/item?id=45443298">Hacker News</a></p>
Couldn't get https://www.lesswrong.com/posts/JH6tJhYpnoCfFqAct/the-company-man: Error: Request failed with status code 429]]></description>
        </item>
        <item>
            <title><![CDATA[Evaluating the impact of AI on the labor market: Current state of affairs (139 pts)]]></title>
            <link>https://budgetlab.yale.edu/research/evaluating-impact-ai-labor-market-current-state-affairs</link>
            <guid>45442743</guid>
            <pubDate>Wed, 01 Oct 2025 20:07:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://budgetlab.yale.edu/research/evaluating-impact-ai-labor-market-current-state-affairs">https://budgetlab.yale.edu/research/evaluating-impact-ai-labor-market-current-state-affairs</a>, See on <a href="https://news.ycombinator.com/item?id=45442743">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="block-budgetlab-content">
  
    
      

<article id="node-publication-1154" data-js="publication">
  

  <div>
          <section id="paragraph-key-takeaways-4326" data-js="key-takeaways">
        <h2>   Key Takeaways </h2>
  
      <ol>
              <li>
          <p>While the occupational mix is changing more quickly than it has in the past, it is not a large difference and predates the widespread introduction of AI in the workforce.</p>
        </li>
              <li>
          <p>Currently, measures of exposure, automation, and augmentation show no sign of being related to changes in employment or unemployment.</p>
        </li>
              <li>
          <p>Better data is needed to fully understand the impact of AI on the labor market.</p>
        </li>
              <li>
          <p>We plan on updating this analysis regularly moving forward to see how the impact of AI on the labor market changes over time.</p>
        </li>
          </ol>
  </section>

  <div id="paragraph-html-content-4287" data-js="html-content">
  <p>How has AI impacted the labor market? Since generative AI was first introduced nearly three years ago, surveys show widespread public anxiety about AI’s potential for job losses. While it is impossible to accurately predict the future, we can examine how U.S. employment has changed since ChatGPT’s release in November 2022.</p><p>Our analysis complements other recent studies that provide nascent evidence of possible AI impacts on specific occupations and sub-populations, such as early career workers. We took a broader lens, widening the aperture to the whole labor market, and asked two main questions.</p><p>First, is the pace of labor market change in this 33-month period of employment disruption different from past periods of early technological change? Second, is there evidence of economy-wide employment effects? To answer these questions, we compare how quickly the occupational mix has changed across a range of measures since ChatGPT’s launch, and compare this to past disruptions from computers and the internet.</p><p>Overall, our metrics indicate that the broader labor market has not experienced a discernible disruption since ChatGPT’s release 33 months ago, undercutting fears that AI automation is currently eroding the demand for cognitive labor across the economy.<sup>1</sup></p><p>While this finding may contradict the most alarming headlines, it is not surprising given past precedents. Historically, widespread technological disruption in workplaces tends to occur over decades, rather than months or years. Computers didn’t become commonplace in offices until nearly a decade after their release to the public, and it took even longer for them to transform office workflows. Even if new AI technologies will go on to impact the labor market as much, or more, dramatically, it is reasonable to expect that widespread effects will take longer than 33 months to materialize.</p><p>Of course, our analysis is not predictive of the future. We plan to continue monitoring these trends monthly to assess how AI’s job impacts might change. It is important to remember that the effects of new technologies are evolving and a simple snapshot in time is not enough to explicitly determine what the future holds.</p></div>

  <div aria-labelledby="heading-layout-4288">
                        <div id="paragraph-html-content-4289" data-js="html-content">
  <p>The current rhetoric about AI mirrors the anxiety over earlier generations of technological progress. So far, is this time different?</p><p>First, we look at how quickly the overall occupational mix changed in the first 33 months since ChatGPT’s relative to previous periods of technological change. Figure 1 compares the occupational mix by month to the mix in a baseline period at the start of a major technological development (e.g. January 1996 is the baseline month for the growing adoption of the internet). The job mix for AI appears to be changing faster than it has in the past, although not markedly so. (See the appendix for a discussion of pre-trends.)</p></div>
                                
                                <div id="paragraph-html-content-4290" data-js="html-content">
  <p>The occupational mix refers to the distribution of workers amongst all the jobs in the economy. In this context, a percentage point difference means that, relative to the start point, that percent of workers are in new occupations. This can occur by workers changing jobs, losing jobs, or unemployed people getting a new job. As such, this metric attempts to capture how different the sum of occupations that make up the labor force is relative to another point in time. By measuring this over the time generative AI has been publicly available, we can test the claim that AI is substantially changing the workforce by any of the methods mentioned above (pushing workers from one job to another, automating workers out of a job, or creating new jobs). Note that a change over this time period simply reflects <em>change</em> — it does not take a stance on the <em>cause</em> of that change. Note that if recent grads are not getting hired, that would show up in this measure in as much as recent grads (as discussed below) are often in different occupations than older workers.</p><p>With the development of the internet and the growing prevalence of computers, the turn of the 21st century gave rise to concerns over an imminent computerization of many jobs. Despite this automation anxiety, the occupational mix by 2002 was at most around 7 percentage points different than it was in 1996; i.e., only 7 percent of workers in 2002 would need to switch occupations to match the composition of the 1996 labor market.</p><p>Changes in the occupational mix since the advent of generative AI in 2022 seem to mirror the trends seen during the three comparison periods. The recent changes appear to be on a path only about 1 percentage point higher than it was at the turn of the 21st century with the adoption of the internet. Although recent trends seemingly outpace historical shifts in the occupational mix, the potential effects of AI on the labor market so far are not out of the ordinary. In fact, taking a closer look at recent years, the data suggests that this recent trend is not necessarily attributable to AI (Figure 2). Shifts in the occupational mix were well on their way during 2021, before the release of generative AI, and more recent changes do not seem any more pronounced, even as the use of AI continues to grow in popularity.</p></div>
                                
                                <div id="paragraph-html-content-4291" data-js="html-content">
      

<p>Repeating this analysis by industry similarly suggests a limited effect of AI. Figure 3 reports the change in the occupational mix from November 2022 within different industries. The Information, Financial Activities, and Professional and Business Services sectors have all seen larger shifts in the job mix compared to the shifts in the aggregate labor market, with the largest changes in the Information sector. (As a reminder the information sector includes things like newspapers, movies, and data processing.) These industries are among those with the highest exposure to generative AI. Although at first glance these changes may seem attributable to generative AI, the data again suggests that the trends within these industries started before the release of ChatGPT (Figures 4-6). In fact, over a broader time horizon, the large shifts in the Information Industry seem to be a feature of the industry itself rather than a consequence of any one technological development (Figure 7).</p>

    </div>
                                
                                
                                
                                
                                
                                <div id="paragraph-html-content-4292" data-js="html-content">
      

<p>Looking over an even longer horizon, labor market volatility appears rather low. As a chart Jed Kolko shows, the change in the occupational mix seen in Figure 1 is sluggish compared to the change seen in the 40s and 50s (which reflected mass labor market changes due to world events).&nbsp;<a href="https://hbr.org/2018/12/5-questions-we-should-be-asking-about-automation-and-jobs">Kolko cautioned</a> that “we simply don’t know for sure whether automation, algorithms, and AI will ultimately create more jobs than they destroy.”&nbsp;</p>

    </div>
                                
                                <div id="paragraph-html-content-4293" data-js="html-content">
      

<p>The dissimilarity data we have examined indicates that there is no substantial acceleration in the rate of change in the composition of the labor market since the introduction of ChatGPT. Lacking that, there is nothing meaningful we can either attribute or misattribute to AI.</p>

    </div>
                                <div id="paragraph-html-content-4294" data-js="html-content">
      

<p>Figure 9 compares the occupational mix for recent college graduates (ages 20-24) to that of their older counterparts (ages 25-34).<sup>2</sup> If generative AI were in fact substantially changing the labor market for recent college graduates, we would expect to see a growing dissimilarity in the occupational mix between these two groups. The dissimilarity has increased slightly faster in recent months than it did in a previous time period, which could be consistent with a recent&nbsp;<a href="https://digitaleconomy.stanford.edu/publications/canaries-in-the-coal-mine/">paper</a> from Brynjolfsson et al. showing a possible impact of AI on employment of early career workers. It could also simply reflect a slowing labor market. However, our results should be interpreted with caution particularly given small sample sizes.</p>

    </div>
                                
                                <div id="paragraph-html-content-4295" data-js="html-content">
      

<p>Taking a closer look at the trend since January 2021, the dissimilarity between older and more recent college graduates rarely deviates outside of the 30-33% range (Figure 10). This implies that these trends of growing dissimilarity may pre-date ChatGPT’s release and may not be attributable to AI. However, there is perhaps some slight upward momentum more recently, though this is consistent with both Brynjolfsson et al.’s work and the CPS’s noisiness (and a slowing labor market hitting younger workers). Further, the same caution in interpretation given the small sample sizes holds in this figure as well.</p>

    </div>
                                
                                </div>

  <div aria-labelledby="heading-layout-4296">
                        <div id="paragraph-html-content-4297" data-js="html-content">
  <p>To better understand whether AI is impacting the labor market, we would want to analyze whether the share of workers in occupations that are most impacted by AI usage is changing over time. If AI were automating jobs at scale, we would expect to see a smaller share of workers in some of the jobs that are most negatively impacted.</p><p>Unfortunately, comprehensive usage data is not publicly available. The best available data we have is from&nbsp;<a href="https://www.brookings.edu/articles/generative-ai-the-american-worker-and-the-future-of-work/">OpenAI</a> and&nbsp;<a href="https://www.anthropic.com/economic-index">Anthropic</a>, respectively, that detail the occupations that are most “exposed” to genAI tools (a theoretical, forward-looking metric across all jobs) and that have the highest actual usage of one specific AI tool, Claude (a more narrow, present-focused metric). While imperfect, these data are our best approximation of AI job “risk”. (See discussion of limitations in the next section and in the appendix.)</p><p>Importantly, OpenAI and Anthropic are measuring different things and we look at them separately.</p></div>
                                <div id="paragraph-html-content-4298" data-js="html-content">
  <p>We use data from OpenAI that shows a measure of “exposure” to ChatGPT technology. This refers, generally, to whether utilizing ChatGPT4 technology can help reduce the time it takes to complete the occupation’s tasks by at least 50%. (The data appendix describes this metric in more detail.)</p><p>We utilize the “Beta” exposure metric, which also accounts for if a model with additional software built on top of it can help reduce task completion time, though this capability is weighted half that of “direct” exposure. An exposure score is created on a scale from 0 to 1 based on a percent of an occupation’s tasks that are “exposed” to genAI. The data appendix describes this metric in more detail.</p><p>For our purposes, we categorize occupations into three groups using their exposure score quintile; an occupation has the lowest degree of exposure if it falls in the first two quintiles, a medium degree if in the 3rd and 4th quintiles, and the highest degree if in the top quintile. In other words, these metrics look at <em>relative</em> not <em>absolute</em> exposure. We provide a further discussion of this in the appendix.</p><p>We ask: has the share of workers in occupational exposure quintiles changed since ChatGPT’s launch? Our analysis shows that it has not (Figure 11). The share of workers in the lowest, middle, and highest occupational exposure groups stay stable at around 29%, 46% and 18%, respectively.</p></div>
                                
                                <div id="paragraph-html-content-4299" data-js="html-content">
      

<p>Even when specifically examining the unemployed population, there is no clear growth in exposure to generative AI. Figure 12 depicts the average percentage of tasks exposed amongst unemployed workers by duration of unemployment. AI-driven displacement might suggest a growth in the proportion of exposed tasks amongst recently unemployed workers. Irrespective of the duration of unemployment, however, unemployed workers were in occupations where about 25 to 35 percent of tasks, on average, could be performed by generative AI. Although there is some variation between months, the data demonstrate no clear upward trend and no clear difference by the duration of unemployment.&nbsp;</p>

    </div>
                                
                                
                                <div id="paragraph-html-content-4300" data-js="html-content">
  <p>Given Anthropic’s usage data’s novelty and uniqueness, there is no established standard for how to aggregate it. The usage Anthropic observes does not contain every single task in the O*NET task database, so the question of how to handle the missing tasks remains ambiguous. We proceed in two ways:</p><p>First, we ignore tasks that are not included in the Anthropic data and aggregate following the method detailed in the appendix. This method makes no assumption about how workers are using or could utilize Claude to perform the task, or how workers in occupations with tasks like those observed would use Claude. However, this method significantly limits the number of tasks and therefore occupations we can include. Further, an occupation may appear to have very high usage while in fact only a single of that occupation’s tasks were observed in the data.</p><p>Alternatively, we include all of the missing tasks and assume their usage is zero. There is some truth to this, as those tasks were not observed in Claude during the period in which the data was collected. However, it makes strong assumptions about those tasks’ potential usage. Two comparable tasks, where one appears in the data and one does not, would have totally different usage values. Given how the observed Claude data is a representation of the users who happened to utilize the model over a sample period, the following period could have had that similar task included.</p><p>In pursuit of a balanced and well-informed exploration of this data, we include results from both methods below.</p><p>Anthropic’s data on AI usage shows similar trends of stability over time, rather than disruption. The proportion of employment in occupations with high levels of task AI usage, whether automation or augmentation (as defined as more than half of AI usage), is stable at around 70% or 11%, respectively (Figure 15). When assuming that unobserved tasks indicate zero usage, however, these proportions drop to 3% and 0%, respectively. Repeating a similar analysis as above, Figures 16 and 18 report the occupation-level share of tasks that are automation or augmentation, respectively, amongst unemployed workers by duration of unemployment. Note: for this analysis, we use Anthropic’s most recent data on AI usage, which was released in mid-September. We discuss Anthropic’s data vintages more fully in the Appendix.</p></div>
                                </div>

  

  

  

  

  

  

  <div aria-labelledby="heading-layout-4301">
                        <div id="paragraph-html-content-4302" data-js="html-content">
  <p>As previously noted, the metrics from OpenAI and Anthropic are imperfect proxies for AI risk and usage, while still being the best available.</p><p>A key limitation of OpenAI’s “exposure” data is that it is not based on actual usage, and should therefore be interpreted as a theoretical estimate of the jobs and sectors that <em>could</em>, in theory, be impacted. In reality, actual AI usage and workplace diffusion has varied dramatically between sectors and occupations with similar levels of “exposure.” For instance, generative AI tools were adopted extremely quickly and at mass scale among coders and software developers, who are in the top quintile of exposure. Meanwhile, adoption has lagged considerably in clerical sectors, despite a similar level of exposure. Thus analyzing occupations by exposure alone likely <em>under-</em>estimates potential labor market disruption, as the top quintiles of exposure will include occupations that are theoretically exposed but not actively using AI at a meaningful scale, and thus unlikely to see AI impacts.</p><p>A comparison of the OpenAI “exposure” data with the Anthropic usage data makes this limitation clear. The two measures appear to have only a limited correlation with one another (Figure 20).</p></div>
                                
                                <div id="paragraph-html-content-4303" data-js="html-content">
      

<p>Figure 20 consists of occupations that have data for both the OpenAI and Anthropic measures, which amounts to about 80% of CPS occupations in our sample. Figure 21 splits the data from figure 20 into quadrants along the axes of low-high exposure and low-high usage and then groups the data into its SOC job categories. Particularly striking is the greater range of different job categories in the quadrants with low usage (the left side of figure 20) and conversely the concentration in just a handful of categories in the high usage quadrants. Across both high and low exposure, high usage occupations are dominated by scientific and quantitative professions and general business occupations. The occupations clustered in the low usage/exposure (bottom left of figure 20) tend to be production occupations with little computerization.</p>

    </div>
                                
                                
                                <div id="paragraph-html-content-4304" data-js="html-content">
  <p>Just as the OpenAI metric has limitations, so too does Anthropic’s usage data. Figure 22 shows the occupational shares of all “conversations” with Claude (the AI chatbot), and illustrates the occupation groups that are over- and under- represented in this usage, compared to their exposure ranking and employment share.</p><p>It is clear from the data that Claude’s usage is heavily dominated by one occupational group — computer and mathematical, which includes coders — and that arts and media (including writers) is also considerably overrepresented. While certainly coding is among the most prominent use cases of AI, it is likely that Claude’s userbase skews more heavily to these tasks due to Claude’s stand-out reputation among LLMs as being particularly good at writing and coding. <a href="https://cdn.openai.com/pdf/3c7f7e1b-36c4-446b-916c-11183e4266b7/chatgpt-usage-and-adoption-patterns-at-work.pdf">New data recently published by OpenAI</a> shows a broad pattern of usage among ChatGPT customers across a range of industries, including not only information services (including software development) but also professional services and even manufacturing. It is entirely possible, and even likely, that usage data from other AI models like Google’s Gemini or Microsoft’s Copilot would show different and more varied patterns of usage. Thus data from Claude usage alone is not representative of how workers across the economy are using AI chatbots and tools.</p><p>To accurately measure AI’s impact on the labor force, the most important data needed is comprehensive usage data from all the leading AI companies at the individual and enterprise level, including APIs.&nbsp;<a href="https://www.linkedin.com/company/anthropicresearch/">Anthropic</a> has led the way in transparently sharing Claude usage data, including a new release of enterprise data. To further our understanding of AI’s impact, it is important that all leading AI labs do the same in a similarly transparent and privacy-protected way.&nbsp;</p></div>
                                </div>

  <div id="paragraph-html-content-4306" data-js="html-content" aria-labelledby="heading-layout-4305">
      

<p>While anxiety over the effects of AI on today’s labor market is widespread, our data suggests it remains largely speculative. The picture of AI’s impact on the labor market that emerges from our data is one that largely reflects stability, not major disruption at an economy-wide level. While generative AI looks likely to join the ranks of transformative, general purpose technologies, it is too soon to tell how disruptive the technology will be to jobs. The lack of widespread impacts at this early stage is not unlike the pace of change with previous periods of technological disruption. Preregistering areas where we would expect to see the impact and continuing to monitor monthly impacts will help us distinguish rumor from fact.&nbsp;</p>

    </div>

  <div aria-labelledby="heading-layout-4307">
                        <div id="paragraph-html-content-4308" data-js="html-content">
  <p>Code used to create the data can be found <a href="https://github.com/Budget-Lab-Yale/AI-Employment-Model">here</a>.</p><p>We adapt&nbsp;<a href="https://inequality.stanford.edu/sites/default/files/media/_media/pdf/Classic_Media/Dudley_1955_Measurement.pdf">Duncan and Duncan’s</a> methodology to construct a dissimilarity index of the change in the occupational mix over time using monthly CPS data. Going month by month, we measure each occupation’s constituent percentage of the workforce and compare it to the starting month. To address noise in the data, we take a 12 month moving average for each month. We then sum up the absolute differences in percentage of workforce across all occupations to get our dissimilarity index for that given month. This captures both the advent of new occupations and the expansion or contraction of existing ones.</p><p>To examine generative AI’s impact, we begin in November 2022 and continue into the latest monthly CPS release in July, as this lines up with AI’s public introduction and the beginning of its adoption. We compare AI’s dissimilarity index to three other time periods:</p><ol><li>1984-1989: Capturing the popularization of PCs and the start of the computer revolution.</li><li>1996-2002: Capturing mass adoption of the internet in public life and the workplace.</li><li>2016-2019: A control period following the 2008 Recession recovery during which there was little change to the occupational mix.</li></ol><p>Figure A1 adds pre-trends in the occupational mix for the prior 12 months to the data from Figure 1. In all but one period, the pre-trends show a similar degree of dissimilarity as compared to the trend observed over the first year. This lack of a substantial difference suggests the advent of new technologies has minimal immediate effects; i.e., shifts in the labor market take time to develop. Note that the large pre-trends in the “Computers” period are likely due to issues with the quality of data prior to 1981.</p></div>
                                
                                <div id="paragraph-html-content-4309" data-js="html-content">
  <p>Using&nbsp;<a href="https://arxiv.org/pdf/2303.10130">OpenAI’s occupational exposure data</a>, we classify occupations as mildly, moderately, or highly exposed to AI provided that generative AI can reduce the time to complete at least one task (or a greater portion of tasks given the exposure level) by 50%. The raw occupational exposure data allocates tasks into one of three categories:</p><ol><li>No exposure: Generative AI cannot reduce the time to complete the task or lowers the quality of the output.</li><li>Direct exposure: Generative AI can reduce the time to complete a task by at least 50%.</li><li>LLM+ Exposed: Generative AI alone cannot reduce task completion time, but a piece of software built on top of a model could.</li></ol><p>We utilize the GPT4 categorized “Beta” exposure, which gives a task a score of 1 if it is directly exposed, or a score of .5 if it is LLM+ Exposed. An occupation’s exposure is the weighted average of the exposure of each individual task.</p><p>Following the methods in OpenAI’s paper presenting these results, when aggregating exposure to the occupational level, a job’s “core” tasks have a weight of 1 while their “supplemental” tasks have a weight of .5. After exposure and usage are aggregated to the SOC code level, they are weighted by that occupation’s OES labor count. This weight is used when aggregating from SOC code to CPS code.</p><p>Given the exposure data was created a few years and thus does not include the more advanced capabilities of today’s large language models, a relative comparison of exposure appears more appropriate. Rather than measuring the now aged direct exposure, we broke GPT4 Beta exposure (after our aggregation and weighting) into quintiles and bucketed them as described in the text above. The average exposure, rounded to the second digit, for each quintile is as follows:</p></div>
                                
                                <div id="paragraph-html-content-4310" data-js="html-content">
      

<p>Figure A2 replicates the prior analysis in Figure 12 with occupation-level exposure groups instead defined using the absolute measure of exposure. The lowest and medium exposure groups (scores less than 0.4 and between 0.4 and 0.8, respectively) stably comprise around 45% of workers each, while the highest exposure group represents only around 2% of workers (scores greater than 0.8). Like in Figure 12, there is no observable trend over time.</p>

    </div>
                                
                                <div id="paragraph-html-content-4327" data-js="html-content">
  <p>Anthropic’s usage metrics are aggregated similarly to the OpenAI exposure data. We follow the method their researchers use <a href="https://huggingface.co/datasets/Anthropic/EconomicIndex/tree/main/release_2025_03_27">here</a>. We aggregate the individual kinds of usage into their respective categories for each task:</p><ul><li>Augmentation = Validation + Task Iteration + Learning</li><li>Automation = Directive + Feedback Loop.</li></ul><p>We then weight the tasks using the same core/supplemental weighting method described above. Following that, the aggregation to CPS code level is identical to the OpenAI aggregation.&nbsp;<br>Throughout this piece we use Anthropic’s AI usage data from their most recent release in August. This data, however, only provides a static snapshot of AI usage. As more data is made available in future releases, the Budget Lab will continue to update this analysis to provide a more comprehensive picture of how changes in AI usage may be affecting the labor market. Figure A3 shows the trend in the automation/augmentation of tasks using data from a prior March release until August 2025 (note that to ensure consistency between the two releases, the August usage data excludes enterprise usage).</p></div>
                                
                                
                                </div>

  <div id="paragraph-html-content-4311" data-js="html-content">
  <ol><li>Much of the press focuses on <a href="https://www.cnbc.com/2025/08/28/generative-ai-reshapes-us-job-market-stanford-study-shows-entry-level-young-workers.html">early career</a> and <a href="https://fortune.com/2025/08/10/ai-unemployment-white-collar-knowledge-workers-jobless-recovery-recession/">white collar</a> workers being in <a href="https://www.cnbc.com/2025/08/05/ai-labor-market-young-tech-workers-goldman-economist.html">lower demand</a>.&nbsp;</li><li>In any given year, recent and older college graduates account for around 1,100 and 5,600 observations (3% and 12% of the overall sample), respectively.</li></ol></div>


    </div>

  </article>


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[U.S. Lost 32,000 Private-Sector Jobs in September, Says Payroll Processor (215 pts)]]></title>
            <link>https://www.wsj.com/economy/jobs/u-s-lost-32-000-jobs-in-september-says-payroll-processor-06528340</link>
            <guid>45442185</guid>
            <pubDate>Wed, 01 Oct 2025 19:30:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/economy/jobs/u-s-lost-32-000-jobs-in-september-says-payroll-processor-06528340">https://www.wsj.com/economy/jobs/u-s-lost-32-000-jobs-in-september-says-payroll-processor-06528340</a>, See on <a href="https://news.ycombinator.com/item?id=45442185">Hacker News</a></p>
Couldn't get https://www.wsj.com/economy/jobs/u-s-lost-32-000-jobs-in-september-says-payroll-processor-06528340: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[ICE Is Buying a Tool to Track Phones, Without Warrants (153 pts)]]></title>
            <link>https://olgalautman.substack.com/p/ice-is-buying-a-tool-to-track-hundreds</link>
            <guid>45441983</guid>
            <pubDate>Wed, 01 Oct 2025 19:15:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://olgalautman.substack.com/p/ice-is-buying-a-tool-to-track-hundreds">https://olgalautman.substack.com/p/ice-is-buying-a-tool-to-track-hundreds</a>, See on <a href="https://news.ycombinator.com/item?id=45441983">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!xTUX!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!xTUX!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg 424w, https://substackcdn.com/image/fetch/$s_!xTUX!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg 848w, https://substackcdn.com/image/fetch/$s_!xTUX!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!xTUX!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!xTUX!,w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg" width="1200" height="800" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:400,&quot;width&quot;:600,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Several agents wearing green uniforms and heavy-duty face masks are seen up close. One of them has a patch that says “HSI,” a reference to Homeland Security Investigations.&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:&quot;center&quot;,&quot;offset&quot;:false}" alt="Several agents wearing green uniforms and heavy-duty face masks are seen up close. One of them has a patch that says “HSI,” a reference to Homeland Security Investigations." title="Several agents wearing green uniforms and heavy-duty face masks are seen up close. One of them has a patch that says “HSI,” a reference to Homeland Security Investigations." srcset="https://substackcdn.com/image/fetch/$s_!xTUX!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg 424w, https://substackcdn.com/image/fetch/$s_!xTUX!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg 848w, https://substackcdn.com/image/fetch/$s_!xTUX!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!xTUX!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F513e54a8-0c1a-40ab-a994-6f04fdba9089_600x400.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>Federal agents stand guard on a road outside an agricultural facility where an immigration raid occurred in Camarillo, Calif., in July.Credit...Daniel Cole/Reuters</figcaption></figure></div><p data-attrs="{&quot;url&quot;:&quot;https://olgalautman.substack.com/p/ice-is-buying-a-tool-to-track-hundreds?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://olgalautman.substack.com/p/ice-is-buying-a-tool-to-track-hundreds?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p><p><span>While putting together my </span><a href="https://trumptyrannytracker.substack.com/" rel="">Trump Tyranny Tracker</a><span>, I came across alarming news that has gone largely unnoticed but needs our attention—ASAP. Documents reviewed by </span><em><a href="https://www.404media.co/ice-to-buy-tool-that-tracks-locations-of-hundreds-of-millions-of-phones-every-day/" rel="">404 Media</a></em><span> reveal that ICE is purchasing access to a powerful surveillance tool that harvests billions of pieces of location data daily from hundreds of millions of phones. This move reverses Biden-era curbs and marks a dramatic expansion of ICE’s ability to track people inside the U.S. without a warrant.</span></p><p>The contract has been awarded to PenLink, a little-known surveillance company headquartered in Nebraska that has quietly spent decades perfecting tools for geolocation data mining, mass communications interception, and real-time tracking, operating largely outside public scrutiny while steadily expanding its reach into the law enforcement and intelligence space. </p><p><span>This is not ICE’s first engagement with the company: in 2018, the agency signed a </span><a href="https://www.newsweek.com/ice-just-signed-24m-contract-secretive-data-surveillance-company-can-track-you-962493" rel="">$2.4 million contract</a><span> with PenLink, granting it access to the firm’s proprietary telecommunications analysis and intercept software suite, which was used to collect and analyze massive amounts of internet and social media communications data in real time. ICE has now deliberately selected PenLink over its competitors once again because it offers a comprehensive “all-in-one” platform capable of merging immense repositories of location data with sophisticated social media monitoring capabilities, thereby giving the agency an unprecedented ability to track, map, and analyze individuals’ movements and networks. In doing so, ICE is not simply reverting to its previous practice of warrantless location tracking; it is escalating this surveillance to a level of precision and integration that blurs the line between targeted investigation and dragnet monitoring.</span></p><p>Under the Biden administration, the Department of Homeland Security had suspended the purchase of commercial location data after the Inspector General found the agency had violated federal law, but that temporary safeguard has now been dismantled. Trump’s federal agencies are resurrecting these programs with renewed vigor, tapping into massive datasets assembled by surveillance contractors that systematically harvest and monetize the movements of hundreds of millions of people through their smartphones, effectively creating a parallel data-acquisition pipeline that allows federal agencies to sidestep judicial oversight and bypass the warrant requirements that govern direct requests to telecommunications providers. These practices were controversial even before Trump returned to power, and now, under his direction, they are being normalized, expanded, and institutionalized.</p><p>The threat posed by these capabilities is very real and happening now. These datasets can locate an individual within a single city block, construct detailed social graphs based on patterns of physical proximity, and generate real-time alerts when specific targets move, meet, or communicate. ICE has already tested similar analytical systems to assign “gang membership” through algorithmic inference — a program so deeply flawed that it infamously misidentified toddlers as gang members — and under Trump, these same technologies are being scaled up and turned loose on entire communities, dramatically increasing their potential for error, abuse, and political weaponization.</p><p>The latest developments around ICE’s surveillance powers should be setting off alarms everywhere. Trump is quietly building the machinery of a domestic surveillance state using tools that, so far, have faced almost no scrutiny. Shortly after returning to power, he and Musk created unauthorized DOGE, a shadow structure created without congressional approval. Under the banner of “efficiency,” DOGE quietly began consolidating massive amounts of federal data. It functioned as a bureaucratic Trojan horse, allowing Trump’s inner circle to merge agency datasets, centralize information flows, and bypass the oversight mechanisms that typically govern intelligence operations.</p><p>That initial framework is now being supercharged. ICE is being armed with a growing list of commercial surveillance tools: Graphite, an invasive spyware platform that can penetrate Signal and turn your phone into a surveillance tool using the camera and microphone; PenLink, which merges mass location tracking with social media monitoring; Flock’s license plate reader network; Clearview AI’s facial recognition database; and Palantir’s powerful data-integration and analysis systems. These are just a few examples. Together, they can weave DOGE’s centralized data stores with private-sector capabilities into a single, flexible, and largely unaccountable surveillance apparatus.</p><blockquote><p><strong>More on Graphite spyware….</strong></p></blockquote><p>This is exactly how Russia built its surveillance state. It began with the quiet centralization of telecommunications data, followed by the rollout of SORM, which gave the government mass interception and geolocation powers, and ended with the targeted use of those capabilities against political opponents, journalists, and civil society. Immigrants, ethnic minorities, and marginalized groups were the first targets—people with little power to resist. Once the system was normalized, the net widened, and tools designed for “security” quickly became instruments of political control.</p><p>And Trump is following the same blueprint. Immigrants are the test case, but the surveillance architecture being built is meant to reach far beyond them. ICE is being transformed into a personal security force equipped with spyware, dragnet tracking, and powers that bypass the courts and Congress. This is a deliberate, methodical effort to fuse state power with commercial surveillance markets, creating a system that operates with no transparency or accountability. </p><p>Russia offers a chilling preview of where this leads. Once surveillance infrastructure is in place, legal limits become irrelevant. The tools designed for “security” end up targeting opposition politicians, journalists, NGOs, and eventually ordinary citizens. If this trajectory continues unchecked, the same will happen here.</p><p>This story should be front-page news, but it isn’t. So it is up to us to make noise.</p><ul><li><p><strong>Spread this story</strong><span> widely. Most Americans have no idea ICE is buying tools that let them track phones in real time without warrants.</span></p></li><li><p><strong>Contact your representatives</strong><span> in Congress and at the state level. Demand hearings, oversight, and legal restrictions on warrantless location tracking.</span></p></li><li><p><strong>Support watchdog groups</strong><span> like the </span><a href="https://www.aclu.org/" rel="">ACLU</a><span>, </span><a href="https://www.eff.org/" rel="">EFF</a><span>, and </span><a href="https://citizenlab.ca/" rel="">Citizen Lab</a><span> that investigate these surveillance programs.</span></p></li><li><p><strong>Harden your devices</strong><span>: keep phones updated, consider Lockdown Mode, and reduce app location sharing.</span></p></li></ul><div data-attrs="{&quot;url&quot;:&quot;https://olgalautman.substack.com/p/ice-is-buying-a-tool-to-track-hundreds?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;}" data-component-name="CaptionedButtonToDOM"><p>Thanks for reading Unmasking Russia! This post is public, so feel free to share it.</p><p data-attrs="{&quot;url&quot;:&quot;https://olgalautman.substack.com/p/ice-is-buying-a-tool-to-track-hundreds?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;}" data-component-name="ButtonCreateButton"><a href="https://olgalautman.substack.com/p/ice-is-buying-a-tool-to-track-hundreds?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Increasing your practice surface area (146 pts)]]></title>
            <link>https://www.indiehackers.com/post/lifestyle/increasing-your-practice-surface-area-agxYGi9bL0gd1WYYQZAu</link>
            <guid>45441222</guid>
            <pubDate>Wed, 01 Oct 2025 18:20:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.indiehackers.com/post/lifestyle/increasing-your-practice-surface-area-agxYGi9bL0gd1WYYQZAu">https://www.indiehackers.com/post/lifestyle/increasing-your-practice-surface-area-agxYGi9bL0gd1WYYQZAu</a>, See on <a href="https://news.ycombinator.com/item?id=45441222">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <p>Budapest. Sometime around 1978. It's past 1am and all the lights in a high-rise apartment are out, except for one. A Hungarian girl — not yet 10 years old — sits on the cold bathroom floor balancing a chessboard on her knees.</p><p>Her father opens the door and finds her there, crying, "Sofia! Leave the pieces alone!"</p><p>The girl looks up at him. "Daddy," she says almost desperately, "they won't leave&nbsp;<em>me</em>&nbsp;alone!"</p><p>If you aren't familiar with <a target="_blank" href="https://x.com/ChanningAllen/status/1961850905709666428">this story</a>, the girl is Sofia Polgar. In the years following the above scene in the bathroom, she'd go on to achieve one of the highest-performing ratings in chess history, playing for Hungary in four Chess Olympiads and winning two team gold medals, one team silver, three individual golds, and one individual bronze.</p><p>A lot has been written about the training regimen that Sofia went through with her two sisters: 5–6 hours of daily chess practice alongside studies in multiple languages and high-level mathematics in an apartment packed with thousands of chess books and detailed filing systems of their opponents' histories.</p><p>But not much has been written — how could it be? — about all the hidden reps Sofia got in&nbsp;<em>outside</em>&nbsp;of her official sessions. Like most elite performers, she had dissolved the boundaries of what counts as training and become high in something I call "practice surface area." It means what it sounds like: the total volume of time and space in your life where practice can happen.</p><h2>The false dilemma of "talent vs training"</h2><p>Let's say you and a friend decide to learn something new together. Guitar, chess, coding, whatever. You both sign up for the same class, practice for the same scheduled hour each day, watch the same YouTube tutorials.</p><p>Six weeks later, they’re proficient and you’re still stuttering through the basics.</p><p>We all know the standard explanation: talent. They’ve got it, you don’t. Some people are just wired for certain things. Better to cut your losses and find something that comes naturally to you.</p><p>Right?</p><p>Maybe! Usually what people mean when they call someone "talented" or a "natural" is that the person is genetically gifted. And genetics is real. But it's also not a very satisfying explanation because it's so nonspecific.</p><p>So if I may, I think what's actually taking place in most cases is a difference in practice surface area. You and your friend both&nbsp;<em>officially</em>&nbsp;practiced for the same "3 hours per week," but in reality your friend put in closer to 30. And they weren't even aware they were doing it.</p><p>They started hearing music differently. Every song on their commute became a lesson in chord progressions. Their fingers unconsciously worked through scales during meetings. They fell asleep running through the next day's session. They dreamed in tablature.</p><p>You began&nbsp;<em>practicing</em>&nbsp;guitar. They began&nbsp;<em>living</em>&nbsp;guitar.</p><h2>High surface area is the rule, not the exception</h2><p>I like studying world-class performers, and I can’t think of a single high-level pro who isn’t also high in practice surface area.</p><p>Take George Orwell. In his essay <a target="_blank" href="https://www.orwellfoundation.com/the-orwell-foundation/orwell/essays-and-other-works/why-i-write/">Why I Write</a>, he reveals something that should have disqualified him from ever becoming a writer: he had a terrible time actually sitting down to write. The physical act of writing was torture for him. By his own admission, he would avoid it whenever possible.</p><p>So how did this writing-avoidant person become one of the most famous prose stylists of the 20th century?</p><p>Here’s the secret he buried in that same essay:</p><blockquote><p><em>For fifteen years or more, I was carrying out a literary exercise of a quite different kind: this was the making up of a continuous “story” about myself, a sort of diary existing only in the mind… For minutes at a time this kind of thing would be running through my head: ‘He pushed the door open and entered the room. A yellow beam of sunlight, filtering through the muslin curtains, slanted on to the table, where a matchbox, half-open, lay beside the inkpot. With his right hand in his pocket he moved across to the window. Down in the street a tortoiseshell cat was chasing a dead leaf,’ etc. etc.</em></p></blockquote><p>From childhood until age twenty-five, Orwell was practicing descriptive prose every waking moment. He wasn’t "writing," he was just&nbsp;<em>existing</em>&nbsp;lol. But his brain was secretly logging thousands of hours of narrative practice.</p><p>This pattern shows up everywhere once you know to look for it.</p><p>Richard Feynman didn’t become a legendary teacher by practicing lectures. He became one by explaining physics to imaginary students while walking around campus. He’d work through problems out loud in empty rooms, turning every moment of solitude into a teaching rehearsal.</p><p>Bobby Fischer carried a pocket chess set everywhere and would analyze positions using ceiling tiles as boards while lying in bed. Insomnia became chess study. Waiting rooms became tournaments. His opponents thought they were facing someone with supernatural talent. They were actually facing someone who’d turned every idle moment into chess.</p><p>In fact I've found so many examples of high practice surface area that I created a companion piece to this essay filled with nothing but examples.</p><p>Here it is: <a target="_blank" href="https://www.indiehackers.com/post/the-hidden-training-habits-of-21-world-class-performers-m3AgqjN63WLHJGLrKJPa">The hidden training habits of 21 world-class performers.</a></p><div><header><hr><p><em>Btw if you're enjoying this, consider checking out the Indie Hackers Newsletter.</em></p><p><em>It's full of stories, trends, and insights to help you work for yourself and make $10k/mo from wherever, whenever:</em></p></header></div><hr><h2>How to increase your surface area</h2><p>It should go without saying that the best way to increase your practice surface area in a given field is to be obsessed with that field. Obsession makes quick work of formal and bounded training sessions, and it doesn't need "tips" on how to do so.</p><p>So the question then becomes, "How do I increase my practice surface area if I'm not already obsessed?"</p><p>I've got a few ideas:</p><h3>1. Find the “minimum viable repetition”</h3><p>Identify the smallest possible practice unit that requires no equipment, setup, or specific location.</p><p>Like Bobby Fischer analyzing chess positions on ceiling tiles while lying in bed, you need a version of practice so minimal it can happen anywhere, requiring zero setup or equipment.</p><h3>2. Turn idle time into mental rehearsal</h3><p>Waiting periods and dead time are great opportunities for visualization sessions where you mentally simulate perfect performance.</p><p>Michael Phelps would run “mental movies” of perfect races in waiting rooms and before sleep.</p><h3>3. Embed practice into routine activities</h3><p>Layer your craft directly onto daily activities.</p><p>Maya Angelou composed entire poems while mopping floors. She claims to have used the rhythm of physical work as a metronome for her words.</p><h3>4. Create background processing systems</h3><p>Develop automatic mental habits that keep your craft running in the background of consciousness throughout the day.</p><p>Eminem can’t turn off the part of his brain that rhymes everything. Every conversation, interview, even argument becomes inadvertent freestyle practice as he generates rhyme patterns for everything he hears.</p><h3>5. Use environmental constraints as creative parameters</h3><p>Convert physical limitations and situational constraints into practice parameters that force innovation.</p><p>The UFC fighter Anderson Silva would practice his striking combinations disguised as dancing at Brazilian clubs. He'd throw actual combat sequences to the rhythm while everyone thought he was just getting down.</p>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Announcing Tinker (139 pts)]]></title>
            <link>https://thinkingmachines.ai/blog/announcing-tinker/</link>
            <guid>45441219</guid>
            <pubDate>Wed, 01 Oct 2025 18:20:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thinkingmachines.ai/blog/announcing-tinker/">https://thinkingmachines.ai/blog/announcing-tinker/</a>, See on <a href="https://news.ycombinator.com/item?id=45441219">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="wrapper">
    










    
<main id="main">
  
  
  
  
  
  
  
  

  

  
  
  

  

  <article>
    
    <nav id="left-toc" aria-label="Table of contents"></nav>
    
    <p>
  <a href="https://www.computerhistory.org/collections/catalog/X39.81/" target="_blank" rel="noopener">TinkerToy Computer</a> invented by <a href="https://en.wikipedia.org/wiki/Danny_Hillis" target="_blank" rel="noopener">Daniel Hillis</a> and <a href="https://en.wikipedia.org/wiki/Brian_Silverman" target="_blank" rel="noopener">Brian Silverman</a>
</p>
<p>Today, we are launching <a href="https://thinkingmachines.ai/tinker">Tinker</a>, a flexible API for fine-tuning language models. It empowers researchers and hackers to experiment with models by giving them control over the algorithms and data while we handle the complexity of distributed training. Tinker advances our mission of enabling more people to do research on cutting-edge models and customize them to their needs.</p>
<p>Tinker lets you fine-tune a range of large and small open-weight models, including large mixture-of-experts models such as Qwen-235B-A22B. Switching from a small model to a large one is as simple as changing a single string in your Python code.</p>
<p>Tinker is a managed service that runs on our internal clusters and training infrastructure. We handle scheduling, resource allocation, and failure recovery. This allows you to get small or large runs started immediately, without worrying about managing infrastructure. We use LoRA so that we can share the same pool of compute between multiple training runs, lowering costs.</p>
<p>Tinker’s API gives you low-level primitives like <code>forward_backward</code> and <code>sample</code>, which can be used to express most common post-training methods. Even so, achieving good results requires getting many details right. That’s why we’re releasing an open-source library, the <a href="http://github.com/thinking-machines-lab/tinker-cookbook">Tinker Cookbook</a>, with modern implementations of post-training methods that run on top of the Tinker API.</p>
<p>Groups at Princeton, Stanford, Berkeley, and Redwood Research have already been using Tinker:</p>
<ul>
<li>The <a href="https://blog.goedel-prover.com/">Princeton Goedel Team</a> trained mathematical theorem provers</li>
<li>The <a href="https://statmech.stanford.edu/">Rotskoff Chemistry group</a> at Stanford fine-tuned a model to complete chemistry reasoning tasks</li>
<li><a href="https://sky.cs.berkeley.edu/project/skyrl/">Berkeley’s SkyRL group</a> ran experiments on a custom async off-policy RL training loop with multi-agents and multi-turn tool-use.</li>
<li><a href="https://www.redwoodresearch.org/">Redwood Research</a> used Tinker to RL Qwen3-32B on difficult AI control tasks</li>
</ul>
<p>Tinker is now in private beta for researchers and developers. You can sign up for the Tinker waitlist <a href="https://thinkingmachines.ai/tinker">here</a>. We will be onboarding users to the platform starting today.</p>
<p>If you’re an organization interested in using Tinker, please contact us <a href="https://thinkingmachines.ai/cdn-cgi/l/email-protection#691d0007020c1b291d0100070200070e04080a0100070c1a470800">here</a>.</p>
<p>Tinker will be free to start. We will introduce usage-based pricing in the coming weeks.</p>
<p>We’re excited to see what you discover and make with Tinker!</p>

    
  </article>

  

  
  
  
  
  
  

  
  
  
  

  
  
</main>

    
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Jane Goodall has died (1236 pts)]]></title>
            <link>https://www.latimes.com/obituaries/story/2025-10-01/jane-goodall-chimpanzees-dead</link>
            <guid>45441069</guid>
            <pubDate>Wed, 01 Oct 2025 18:10:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.latimes.com/obituaries/story/2025-10-01/jane-goodall-chimpanzees-dead">https://www.latimes.com/obituaries/story/2025-10-01/jane-goodall-chimpanzees-dead</a>, See on <a href="https://news.ycombinator.com/item?id=45441069">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-element="story-body" data-subscriber-content=""> <p>Jane Goodall, the trailblazing naturalist whose intimate observations of chimpanzees in the African wild produced powerful insights that transformed basic conceptions of humankind, has died. She was 91.</p><p>A tireless advocate of preserving chimpanzees’ natural habitat, Goodall died on Wednesday morning in California of natural causes, the Jane Goodall Institute announced on its <a href="https://www.instagram.com/p/DPRn2HTCFYt/?igsh=NTc4MTIwNjQ2YQ%3D%3D" target="_blank">Instagram page</a>. </p><p>“Dr. Goodall’s discoveries as an ethologist revolutionized science,” the Jane Goodall Institute said in a statement. </p><p>A protege of anthropologist Louis S.B. Leakey, Goodall made history in 1960 when she discovered that chimpanzees, humankind’s closest living ancestors, made and used tools, characteristics that scientists had long thought were exclusive to humans.</p><p>She also found that chimps hunted prey, ate meat, and were capable of a range of emotions and behaviors similar to those of humans, including filial love, grief and violence bordering on warfare.</p><p>In the course of establishing one of the world’s longest-running studies of wild animal behavior at what is now Tanzania’s Gombe Stream National Park, she gave her chimp subjects names instead of numbers, a practice that raised eyebrows in the male-dominated field of primate studies in the 1960s. But within a decade, the trim British scientist with the tidy ponytail was a National Geographic heroine, whose books and films educated a worldwide audience with stories of the apes she called David Graybeard, Mr. McGregor, Gilka and Flo.</p><p>“When we read about a woman who gives funny names to chimpanzees and then follows them into the bush, meticulously recording their every grunt and groom, we are reluctant to admit such activity into the big leagues,” the late biologist Stephen Jay Gould wrote of the scientific world’s initial reaction to Goodall.</p><p>But Goodall overcame her critics and produced work that Gould later characterized as “one of the Western world’s great scientific achievements.”</p><p>Tenacious and keenly observant, Goodall paved the way for other women in primatology, including the late gorilla researcher Dian Fossey and orangutan expert Birutė Galdikas. She was honored in 1995 with the National Geographic Society’s Hubbard Medal, which then had been bestowed only 31 times in the previous 90 years to such eminent figures as North Pole explorer Robert E. Peary and aviator Charles Lindbergh.</p><p>In her 80s she continued to travel 300 days a year to speak to schoolchildren and others about the need to fight deforestation, preserve chimpanzees’ natural habitat and promote sustainable development in Africa. She was in California as part of her speaking tour in the U.S. at the time of her death.</p><div data-click="enhancement" data-align-center=""><figure> <picture>    <source type="image/webp" srcset="https://ca-times.brightspotcdn.com/dims4/default/4ac8360/2147483647/strip/true/crop/1024x680+0+0/resize/320x213!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 320w,https://ca-times.brightspotcdn.com/dims4/default/482653b/2147483647/strip/true/crop/1024x680+0+0/resize/568x377!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 568w,https://ca-times.brightspotcdn.com/dims4/default/2a1995f/2147483647/strip/true/crop/1024x680+0+0/resize/768x510!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 768w,https://ca-times.brightspotcdn.com/dims4/default/169fbf0/2147483647/strip/true/crop/1024x680+0+0/resize/1024x680!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 1024w,https://ca-times.brightspotcdn.com/dims4/default/f152c13/2147483647/strip/true/crop/1024x680+0+0/resize/1200x797!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 1200w" sizes="100vw">       <img alt="Jane Goodall in Gombe National Park in Tanzania." srcset="https://ca-times.brightspotcdn.com/dims4/default/855f60f/2147483647/strip/true/crop/1024x680+0+0/resize/320x213!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 320w,https://ca-times.brightspotcdn.com/dims4/default/2b83032/2147483647/strip/true/crop/1024x680+0+0/resize/568x377!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 568w,https://ca-times.brightspotcdn.com/dims4/default/b66c829/2147483647/strip/true/crop/1024x680+0+0/resize/768x510!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 768w,https://ca-times.brightspotcdn.com/dims4/default/7570df9/2147483647/strip/true/crop/1024x680+0+0/resize/1024x680!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 1024w,https://ca-times.brightspotcdn.com/dims4/default/04e829c/2147483647/strip/true/crop/1024x680+0+0/resize/1200x797!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg 1200w" sizes="100vw" width="1200" height="797" src="https://ca-times.brightspotcdn.com/dims4/default/04e829c/2147483647/strip/true/crop/1024x680+0+0/resize/1200x797!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F9c%2F39%2F72e661ad406e8fbe8af7e121da8e%2Fhope-art-56.jpg" decoding="async" loading="lazy">   </picture>   <div>      <p>(Chase Pickering / Jane Goodall Institute)</p>   </div>   </figure> </div><p>Goodall was born April 3, 1934, in London and grew up in the English coastal town of Bournemouth. The daughter of a businessman and a writer who separated when she was a child and later divorced, she was raised in a matriarchal household that included her maternal grandmother, her mother, Vanne, some aunts and her sister, Judy.</p><p>She demonstrated an affinity for nature from a young age, filling her bedroom with worms and sea snails that she rushed back to their natural homes after her mother told her they would otherwise die.</p><p>When she was about 5, she disappeared for hours to a dark henhouse to see how chickens laid eggs, so absorbed that she was oblivious to her family’s frantic search for her. She did not abandon her study until she observed the wondrous event.</p><p>“Suddenly with a plop, the egg landed on the straw. With clucks of pleasure the hen shook her feathers, nudged the egg with her beak, and left,” Goodall wrote almost 60 years later. “It is quite extraordinary how clearly I remember that whole sequence of events.”</p><p>When finally she ran out of the henhouse with the exciting news, her mother did not scold her but patiently listened to her daughter’s account of her first scientific observation.</p><p>Later, she gave Goodall books about animals and adventure — especially the Doctor Dolittle tales and Tarzan. Her daughter became so enchanted with Tarzan’s world that she insisted on doing her homework in a tree.</p><p>“I was madly in love with the Lord of the Jungle, terribly jealous of his Jane,” Goodall wrote in her 1999 memoir, “Reason for Hope: A Spiritual Journey.” “It was daydreaming about life in the forest with Tarzan that led to my determination to go to Africa, to live with animals and write books about them.”</p><p>Her opportunity came after she finished high school. A week before Christmas in 1956 she was invited to visit an old school chum’s family farm in Kenya. Goodall saved her earnings from a waitress job until she had enough for a round-trip ticket.</p><div data-click="enhancement" data-align-center-expanded=""><figure> <picture>    <source type="image/webp" srcset="https://ca-times.brightspotcdn.com/dims4/default/48fc7d0/2147483647/strip/true/crop/1992x1334+0+0/resize/320x214!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 320w,https://ca-times.brightspotcdn.com/dims4/default/95b8306/2147483647/strip/true/crop/1992x1334+0+0/resize/568x381!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 568w,https://ca-times.brightspotcdn.com/dims4/default/17a7894/2147483647/strip/true/crop/1992x1334+0+0/resize/768x515!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 768w,https://ca-times.brightspotcdn.com/dims4/default/1c876f0/2147483647/strip/true/crop/1992x1334+0+0/resize/1024x686!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 1024w,https://ca-times.brightspotcdn.com/dims4/default/30c89ba/2147483647/strip/true/crop/1992x1334+0+0/resize/1200x804!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 1200w" sizes="100vw">       <img alt="Jane Goodall gives a little kiss to Tess, a 5- or 6-year-old female chimpanzee, in 1997." srcset="https://ca-times.brightspotcdn.com/dims4/default/ab5b58c/2147483647/strip/true/crop/1992x1334+0+0/resize/320x214!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 320w,https://ca-times.brightspotcdn.com/dims4/default/ef5412a/2147483647/strip/true/crop/1992x1334+0+0/resize/568x381!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 568w,https://ca-times.brightspotcdn.com/dims4/default/62ea93b/2147483647/strip/true/crop/1992x1334+0+0/resize/768x515!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 768w,https://ca-times.brightspotcdn.com/dims4/default/b8e4b6b/2147483647/strip/true/crop/1992x1334+0+0/resize/1024x686!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 1024w,https://ca-times.brightspotcdn.com/dims4/default/d37bd3f/2147483647/strip/true/crop/1992x1334+0+0/resize/1200x804!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG 1200w" sizes="100vw" width="1200" height="804" src="https://ca-times.brightspotcdn.com/dims4/default/d37bd3f/2147483647/strip/true/crop/1992x1334+0+0/resize/1200x804!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F77%2Ff9%2Fe58d647d4f408ecab087c086fc4c%2Fla-photos-wgetty-kenya-jane-goodall.JPG" decoding="async" loading="lazy">   </picture>   <div>      <p>(Jean-Marc Bouju / Associated Press)</p>   </div>   </figure> </div><p>She arrived in Kenya in 1957, thrilled to be living in the Africa she had “always felt stirring in my blood.” At a dinner party in Nairobi shortly after her arrival, someone told her that if she was interested in animals, she should meet Leakey, already famous for his discoveries in East Africa of man’s fossil ancestors.</p><p>She went to see him at what’s now the National Museum of Kenya, where he was curator. He hired her as a secretary and soon had her helping him and his wife, Mary, dig for fossils at Olduvai Gorge, a famous site in the Serengeti Plains in what is now northern Tanzania.</p><p>Leakey spoke to her of his desire to learn more about all the great apes. He said he had heard of a community of chimpanzees on the rugged eastern shore of Lake Tanganyika where an intrepid researcher might make valuable discoveries.</p><p>When Goodall told him this was exactly the kind of work she dreamed of doing, Leakey agreed to send her there.</p><p>It took Leakey two years to find funding, which gave Goodall time to study primate behavior and anatomy in London. She finally landed in Gombe in the summer of 1960.</p><p>On a rocky outcropping she called the Peak, Goodall made her first important observation. Scientists had thought chimps were docile vegetarians, but on this day about three months after her arrival, Goodall spied a group of the apes feasting on something pink. It turned out to be a baby bush pig.</p><p>Two weeks later, she made an even more exciting discovery — the one that would establish her reputation. She had begun to recognize individual chimps, and on a rainy October day in 1960, she spotted the one with white hair on his chin. He was sitting beside a mound of red earth, carefully pushing a blade of grass into a hole, then withdrawing it and poking it into his mouth.</p><p>When he finally ambled off, Goodall hurried over for a closer look. She picked up the abandoned grass stalk, stuck it into the same hole and pulled it out to find it covered with termites. The chimp she later named David Graybeard had been using the stalk to fish for the bugs.</p><p>“It was hard for me to believe what I had seen,” Goodall later wrote. “It had long been thought that we were the only creatures on earth that used and made tools. ‘Man the Toolmaker’ is how we were defined...” What Goodall saw challenged man’s uniqueness.</p><p>When she sent her report to Leakey, he responded: “We must now redefine man, redefine tool, or accept chimpanzees as human!”</p><p>Goodall’s startling finding, published in Nature in 1964, enabled Leakey to line up funding to extend her stay at Gombe. It also eased Goodall’s admission to Cambridge University to study ethology. In 1965, she became the eighth person in Cambridge history to earn a doctorate without first having a bachelor’s degree.</p><p>In the meantime, she had met and in 1964 married Hugo Van Lawick, a gifted filmmaker who had traveled to Gombe to make a documentary about her chimp project. They had a child, Hugo Eric Louis — later nicknamed Grub — in 1967.</p><p>Goodall later said that raising Grub, who lived at Gombe until he was 9, gave her insights into the behavior of chimp mothers. Conversely, she had “no doubt that my observation of the chimpanzees helped me to be a better mother.”</p><p>She and Van Lawick were married for 10 years, divorcing in 1974. The following year she married Derek Bryceson, director of Tanzania National Parks. He died of colon cancer four years later.</p><p>Within a year of arriving at Gombe, Goodall had chimps literally eating out of her hands. Toward the end of her second year there, David Graybeard, who had shown the least fear of her, was the first to allow her physical contact. She touched him lightly and he permitted her to groom him for a full minute before gently pushing her hand away. For an adult male chimpanzee who had grown up in the wild to tolerate physical contact with a human was, she wrote in her 1971 book “In the Shadow of Man,” “a Christmas gift to treasure.”</p><div data-click="enhancement" data-align-center=""><figure> <picture>    <source type="image/webp" srcset="https://ca-times.brightspotcdn.com/dims4/default/fdcd33a/2147483647/strip/true/crop/1992x1344+0+0/resize/320x216!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 320w,https://ca-times.brightspotcdn.com/dims4/default/b6a5133/2147483647/strip/true/crop/1992x1344+0+0/resize/568x383!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 568w,https://ca-times.brightspotcdn.com/dims4/default/5652127/2147483647/strip/true/crop/1992x1344+0+0/resize/768x518!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 768w,https://ca-times.brightspotcdn.com/dims4/default/c9d1992/2147483647/strip/true/crop/1992x1344+0+0/resize/1024x691!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 1024w,https://ca-times.brightspotcdn.com/dims4/default/0e0c1d4/2147483647/strip/true/crop/1992x1344+0+0/resize/1200x810!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 1200w" sizes="100vw">       <img alt="Jane Goodall shares a play with Bahati, a 3 year-old female chimpanzee" srcset="https://ca-times.brightspotcdn.com/dims4/default/d73d494/2147483647/strip/true/crop/1992x1344+0+0/resize/320x216!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 320w,https://ca-times.brightspotcdn.com/dims4/default/aa710d0/2147483647/strip/true/crop/1992x1344+0+0/resize/568x383!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 568w,https://ca-times.brightspotcdn.com/dims4/default/6f21bf4/2147483647/strip/true/crop/1992x1344+0+0/resize/768x518!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 768w,https://ca-times.brightspotcdn.com/dims4/default/45da23e/2147483647/strip/true/crop/1992x1344+0+0/resize/1024x691!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 1024w,https://ca-times.brightspotcdn.com/dims4/default/dd65665/2147483647/strip/true/crop/1992x1344+0+0/resize/1200x810!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG 1200w" sizes="100vw" width="1200" height="810" src="https://ca-times.brightspotcdn.com/dims4/default/dd65665/2147483647/strip/true/crop/1992x1344+0+0/resize/1200x810!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fd9%2Fa9%2Fca7199564ac18bd4fa065efdfd96%2Fla-photos-wgetty-kenya-jane-goodall1.JPG" decoding="async" loading="lazy">   </picture>   <div>   <p>Jane Goodall shares a play with Bahati, a 3 year-old female chimpanzee at the Sweetwaters Chimpanzee Sanctuary,  north of Nairobi Sunday December 6, 1997.</p>   <p>(Jean-Marc Bouju/Associated Press)</p>   </div>   </figure> </div><p>Her studies yielded a trove of other observations on behaviors, including etiquette (such as soliciting a pat on the rump to indicate submission) and the sex lives of chimps. She collected some of the most fascinating information on the latter by watching Flo, an older female with a bulbous nose and an amazing retinue of suitors who was bearing children well into her 40s.</p><p>Her reports initially caused much skepticism in the scientific community. “I was not taken very seriously by many of the scientists. I was known as a [National] Geographic cover girl,” she recalled in a CBS interview in 2012.</p><p>Her unorthodox personalizing of the chimps was particularly controversial. The editor of one of her first published papers insisted on crossing out all references to the creatures as “he” or “she” in favor of “it.” Goodall eventually prevailed.</p><p>Her most disturbing studies came in the mid-1970s, when she and her team of field workers began to record a series of savage attacks.</p><p>The incidents grew into what Goodall called the four-year war, a period of brutality carried out by a band of male chimpanzees from a region known as the Kasakela Valley. The marauders beat and slashed to death all the males in a neighboring colony and subjugated the breeding females, essentially annihilating an entire community.</p><p>It was the first time a scientist had witnessed organized aggression by one group of non-human primates against another. Goodall said this “nightmare time” forever changed her view of ape nature.</p><p>“During the first 10 years of the study I had believed ... that the Gombe chimpanzees were, for the most part, rather nicer than human beings,” she wrote in “Reason for Hope: A Spiritual Journey,” a 1999 book co-authored with Phillip Berman. “Then suddenly we found that the chimpanzees could be brutal — that they, like us, had a dark side to their nature.”</p><p>Critics tried to dismiss the evidence as merely anecdotal. Others thought she was wrong to publicize the violence, fearing that irresponsible scientists would use the information to “prove” that the tendency to war is innate in humans, a legacy from their ape ancestors. Goodall persisted in talking about the attacks, maintaining that her purpose was not to support or debunk theories about human aggression but to “understand a little better” the nature of chimpanzee aggression.</p><p>“My question was: How far along our human path, which has led to hatred and evil and full-scale war, have chimpanzees traveled?”</p><p>Her observations of chimp violence marked a turning point for primate researchers, who had considered it taboo to talk about chimpanzee behavior in human terms. But by the 1980s, much chimp behavior was being interpreted in ways that would have been labeled anthropomorphism — ascribing human traits to non-human entities — decades earlier. Goodall, in removing the barriers, raised primatology to new heights, opening the way for research on subjects ranging from political coalitions among baboons to the use of deception by an array of primates.</p><p>Her concern about protecting chimpanzees in the wild and in captivity led her in 1977 to found the <a href="https://www.janegoodall.org/" target="_blank">Jane Goodall Institute</a> to advocate for great apes and support research and public education. She also established Roots and Shoots, a program aimed at youths in 130 countries, and TACARE, which involves African villagers in sustainable development.</p><p>She became an international ambassador for chimps and conservation in 1986 when she saw a film about the mistreatment of laboratory chimps. The secretly taped footage “was like looking into the Holocaust,” she told interviewer Cathleen Rountree in 1998. From that moment, she became a globe-trotting crusader for animal rights. </p><p>In the 2017 documentary “Jane,” the producer poured through 140 hours of footage of Goodall that had been hidden away in the National Geographic archives. The film won a Los Angeles Film Critics Assn. Award, one of many honors it received.</p><div data-video-disable-history="" data-click="enhancement" data-align-center="">  <ps-youtubeplayer data-video-player="" data-player-id="f826de22fae514bee8031d59e313f3fbc" data-video-id="X6CW7dSXKWo" data-video-title="Jane Goodall discusses “The Book of Hope”" data-slot-name="/21787098806/web.latimes/obituaries/video" data-lazy-offset="1.0" data-autoplay-threshold="50" data-miniplayer="" data-internal-video-id="X6CW7dSXKWo" data-ad-slot-name="/21787098806/web.latimes/obituaries/video" data-ad-provider="ima" data-ima-sdk-url="https://imasdk.googleapis.com/js/sdkloader/ima3.js" data-ima-ad-tag-url="https://pubads.g.doubleclick.net/gampad/ads?sz=640x480&amp;gdfp_req=1&amp;env=vp&amp;output=vast&amp;unviewed_position_start=1&amp;cmsid=2652439&amp;ad_rule=0&amp;plcmt=1">  <picture> <source srcset="https://img.youtube.com/vi_webp/X6CW7dSXKWo/maxresdefault.webp" type="image/webp"> <source srcset="https://img.youtube.com/vi/X6CW7dSXKWo/maxresdefault.jpg"> <img id="yt-img-X6CW7dSXKWo" alt="" src="https://img.youtube.com/vi/X6CW7dSXKWo/hqdefault.jpg" loading="lazy" decoding="async"> </picture>       </ps-youtubeplayer> </div><p>In a <a href="https://www.latimes.com/la-oe-morrison18-2009jul18-column.html" target="_blank">ranging 2009 interview</a> with Times columnist Patt Morrison, Goodall mused on topics from traditional zoos — she said most captive environments should be abolished — to climate change, a battle she feared humankind was quickly losing, if not lost already. She also spoke about the power of what one human can accomplish.</p><p>“I always say, ‘If you would spend just a little bit of time learning about the consequences of the choices you make each day’ — what you buy, what you eat, what you wear, how you interact with people and animals — and start consciously making choices, that would be beneficial rather than harmful.”</p><p>As the years  passed, Goodall continued to track Gombe’s chimps, accumulating enough information to draw the arcs of their lives — from birth through sometimes troubled adolescence, maturity, illness and finally death.</p><p>She wrote movingly about how she followed Mr. McGregor, an older, somewhat curmudgeonly chimp, through his agonizing death from polio, and how the orphan Gilka survived to lonely adulthood only to have her babies snatched from her by a pair of cannibalistic female chimps.</p><div data-click="enhancement" data-align-left=""><figure> <picture>    <source type="image/webp" srcset="https://ca-times.brightspotcdn.com/dims4/default/fe7d253/2147483647/strip/true/crop/3960x2640+0+0/resize/320x213!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 320w,https://ca-times.brightspotcdn.com/dims4/default/097a3cb/2147483647/strip/true/crop/3960x2640+0+0/resize/568x379!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 568w,https://ca-times.brightspotcdn.com/dims4/default/2cf83f8/2147483647/strip/true/crop/3960x2640+0+0/resize/768x512!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 768w,https://ca-times.brightspotcdn.com/dims4/default/fed4802/2147483647/strip/true/crop/3960x2640+0+0/resize/1024x683!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 1024w,https://ca-times.brightspotcdn.com/dims4/default/66b9217/2147483647/strip/true/crop/3960x2640+0+0/resize/1200x800!/format/webp/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 1200w" sizes="100vw">       <img alt="Jane Goodall in San Diego." srcset="https://ca-times.brightspotcdn.com/dims4/default/e0c32f5/2147483647/strip/true/crop/3960x2640+0+0/resize/320x213!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 320w,https://ca-times.brightspotcdn.com/dims4/default/7700788/2147483647/strip/true/crop/3960x2640+0+0/resize/568x379!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 568w,https://ca-times.brightspotcdn.com/dims4/default/fd7c124/2147483647/strip/true/crop/3960x2640+0+0/resize/768x512!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 768w,https://ca-times.brightspotcdn.com/dims4/default/f2aaab4/2147483647/strip/true/crop/3960x2640+0+0/resize/1024x683!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 1024w,https://ca-times.brightspotcdn.com/dims4/default/4373298/2147483647/strip/true/crop/3960x2640+0+0/resize/1200x800!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG 1200w" sizes="100vw" width="1200" height="800" src="https://ca-times.brightspotcdn.com/dims4/default/4373298/2147483647/strip/true/crop/3960x2640+0+0/resize/1200x800!/quality/75/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2F2f%2F63%2Fcffde3f94732b171d7b069c37f19%2F458667-sd-me-jane-goodall001.JPG" decoding="async" loading="lazy">   </picture>   <div>      <p>(Sam Hodgson/The San Diego Union-Tribune)</p>   </div>   </figure> </div><p>Her reaction in 1972 to the death of Flo, a prolific female known as Gombe’s most devoted mother, suggested the depth of feeling that Goodall had for the animals. Knowing that Flo’s faithful son Flint was nearby and grieving, Goodall watched over the body all night to keep marauding bush pigs from violating her remains.</p><p>“People say to me, thank you for giving them characters and personalities,” Goodall once told CBS’s “60 Minutes.” “I said I didn’t give them anything. I merely translated them for people.”</p><p><i>Woo is a former Times staff writer.</i></p><div data-list-id="00000192-be42-da32-a3db-ff76fc3b0000" data-module-id="00000192-be42-da32-a3db-ff76fc3b0000" data-click="enhancement" data-align-center="">  <p data-element="element-header" data-click="liZZListTitleCTA">  <h3 data-element="element-header-title" data-counter="3">More to Read </h3>  </p>      </div> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Stop Avoiding Politics (510 pts)]]></title>
            <link>https://terriblesoftware.org/2025/10/01/stop-avoiding-politics/</link>
            <guid>45440571</guid>
            <pubDate>Wed, 01 Oct 2025 17:36:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://terriblesoftware.org/2025/10/01/stop-avoiding-politics/">https://terriblesoftware.org/2025/10/01/stop-avoiding-politics/</a>, See on <a href="https://news.ycombinator.com/item?id=45440571">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Say the word “politics” to most engineers and watch their face scrunch up like they just bit into a lemon. We’ve all been conditioned to believe that workplace politics is this dirty game played by manipulative ladder-climbers while the “real” engineers focus on the code.</p>



<p>I used to think the same way. For years as an engineer, I wore my hatred of politics like a badge of honor. I was above all that nonsense. I just wanted to ship. Politics was for those other people, the ones who didn’t have what it takes technically.</p>



<p>Now I think the opposite: <strong>politics isn’t the problem; bad politics is.</strong> And pretending politics doesn’t exist? That’s how bad politics wins.</p>



<p>Politics is just how humans coordinate in groups. It’s the invisible network of relationships, influence, and informal power that exists in every organization. You can refuse to participate, but that doesn’t make it go away. It just means decisions get made without you.</p>



<p>Think about the last time a terrible technical decision got pushed through at your company. Maybe it was adopting some overcomplicated architecture, or choosing a vendor that everyone knew was wrong, or killing a project that was actually working. I bet if you dig into what happened, you’ll find it wasn’t because the decision-makers were stupid. It’s because the people with the right information weren’t in the room. They “didn’t do politics.”</p>



<p>Meanwhile, someone who understood how influence works was in that room, making their case, building coalitions, showing they’d done their homework. And their idea won. Not because it was better, but because they showed up to play while everyone else was “too pure” for politics.</p>



<p>Ideas don’t speak. People do. And the people who understand how to navigate organizational dynamics, build relationships, and yes, play politics? Their ideas get heard.</p>



<p>When you build strong relationships across teams, understand what motivates different stakeholders, and know how to build consensus, you’re doing politics. When you take time to explain your technical decisions to non-technical stakeholders in language they understand, that’s politics. When you grab coffee with someone from another team to understand their challenges, that’s politics too.</p>



<p><strong>Good politics is just being strategic about relationships and influence in the service of good outcomes.</strong></p>



<p>The best technical leaders are incredibly political. They just don’t call it that. They call it “stakeholder management” or “building alignment” or “organizational awareness.” But it’s politics, and they’re good at it.</p>



<p>The engineers who refuse to engage with politics often complain that their companies make bad technical decisions. But they’re not willing to do what it takes to influence those decisions. They want a world where technical merit alone determines outcomes. That world doesn’t exist and never has.</p>



<p>This isn’t about becoming a scheming backstabber. As I wrote in <a href="https://terriblesoftware.org/2025/03/31/your-strengths-are-your-weaknesses/">Your Strengths Are Your Weaknesses</a>, the same trait can be positive or negative depending on how you use it. Politics is the same way. You can use political skills to manipulate and self-promote, or you can use them to get good ideas implemented and protect your team from bad decisions.</p>



<p>Here’s what good politics looks like in practice:</p>



<ol>
<li><strong>Building relationships before you need them.</strong> That random coffee with someone from the data team? Six months later, they’re your biggest advocate for getting engineering resources for your data pipeline project.</li>



<li><strong>Understanding the real incentives.</strong> Your VP doesn’t care about your beautiful microservices architecture. They care about shipping features faster. Frame your technical proposals in terms of what they actually care about.</li>



<li><strong>Managing up effectively.</strong> Your manager is juggling competing priorities you don’t see. Keep them informed about what matters, flag problems early with potential solutions, and help them make good decisions. When they trust you to handle things, they’ll fight for you when it matters</li>



<li><strong>Creating win-win situations.</strong> Instead of fighting for resources, find ways to help other teams while getting what you need. It doesn’t have to be a zero-sum game.</li>



<li><strong>Being visible.</strong> If you do great work but nobody knows about it, did it really happen? Share your wins, present at all-hands, write those design docs that everyone will reference later.</li>
</ol>



<p>The alternative to good politics isn’t no politics. It’s bad politics winning by default. It’s the loud person who’s wrong getting their way because the quiet person who’s right won’t speak up. It’s good projects dying because nobody advocated for them. It’s talented people leaving because they couldn’t navigate the organizational dynamics.</p>



<p>Stop pretending you’re above politics. You’re not. Nobody is. The only question is whether you’ll get good at it or keep losing to people who already are.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenTSLM: Language models that understand time series (260 pts)]]></title>
            <link>https://www.opentslm.com/</link>
            <guid>45440431</guid>
            <pubDate>Wed, 01 Oct 2025 17:25:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.opentslm.com/">https://www.opentslm.com/</a>, See on <a href="https://news.ycombinator.com/item?id=45440431">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p>The Future of AI Delivered on Time</p><div><p>Paper Released Sep 30, 2025</p><p>Stanford Repo Released Oct 1, 2025</p></div></div><section><p>AI understands text, images, audio, and video.<br>But the real world runs on time.</p><p>Every heartbeat, price tick, sensor pulse, machine log, and user click is a temporal signal.<br>Current models can't reason about them.</p><p>We're changing that.</p></section><section><h2>A New Class of Foundation Models</h2><div><p><span>Time-Series Language Models (TSLMs)</span> are multimodal foundation models with time series as a native modality, next to text, enabling direct reasoning, explanation, and forecasting over temporal data in natural language.</p><p>Our research shows order-of-magnitude gains in temporal reasoning while running on smaller, faster backbones. TSLMs are not an add-on. They're a new modality for AI.</p></div></section><section><h2>Open Core, Frontier Edge</h2><div><p><span>OpenTSLM:</span> Lightweight base models trained on public data, released openly. They set the standard for temporal reasoning and power a global developer and research ecosystem.</p><p><span>Frontier TSLMs:</span> Advanced proprietary models trained on specialized data, delivering enterprise-grade performance and powering APIs, fine-tuning, and vertical solutions.</p></div></section><section><h2>Our Vision</h2><div><p>We're building the temporal interface for AI - the layer that connects continuous real-world signals to intelligent decisions and autonomous agents.</p><p>A universal TSLM will power proactive healthcare, adaptive robotics, resilient infrastructure, and new forms of human-AI collaboration.</p></div></section><section><h2>About Us</h2><p>OpenTSLM is a team of scientists, engineers, and builders from ETH, Stanford, Harvard, Cambridge, TUM, CDTM, Google, Meta, AWS, and beyond. We are the original authors of the OpenTSLM paper.</p></section><section><h2><p>Discover how TSLMs could transform</p></h2></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Solar leads EU electricity generation as renewables hit 54% (274 pts)]]></title>
            <link>https://electrek.co/2025/09/30/solar-leads-eu-electricity-generation-as-renewables-hit-54-percent/</link>
            <guid>45440387</guid>
            <pubDate>Wed, 01 Oct 2025 17:22:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://electrek.co/2025/09/30/solar-leads-eu-electricity-generation-as-renewables-hit-54-percent/">https://electrek.co/2025/09/30/solar-leads-eu-electricity-generation-as-renewables-hit-54-percent/</a>, See on <a href="https://news.ycombinator.com/item?id=45440387">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
					
<figure>
	<img width="1600" height="900" src="https://electrek.co/wp-content/uploads/sites/3/2025/09/pexels-photo-30762864.jpeg?quality=82&amp;strip=all&amp;w=1600" alt="EU electricity" srcset="https://i0.wp.com/electrek.co/wp-content/uploads/sites/3/2025/09/pexels-photo-30762864.jpeg?w=320&amp;quality=82&amp;strip=all&amp;ssl=1 320w, https://i0.wp.com/electrek.co/wp-content/uploads/sites/3/2025/09/pexels-photo-30762864.jpeg?w=640&amp;quality=82&amp;strip=all&amp;ssl=1 640w, https://i0.wp.com/electrek.co/wp-content/uploads/sites/3/2025/09/pexels-photo-30762864.jpeg?w=1024&amp;quality=82&amp;strip=all&amp;ssl=1 1024w, https://i0.wp.com/electrek.co/wp-content/uploads/sites/3/2025/09/pexels-photo-30762864.jpeg?w=1500&amp;quality=82&amp;strip=all&amp;ssl=1 1500w" decoding="async" fetchpriority="high">			<figcaption>
				Photo by Wolfgang Weiser on <a href="https://www.pexels.com/photo/historic-war-memorial-in-salzkotten-germany-30762864/" rel="nofollow">Pexels.com</a>			</figcaption>
			</figure>

<p>More than half of the European Union’s (EU) electricity came from renewables in the second quarter of 2025, and solar is leading from the front.</p>



<p>According to new data from Eurostat, renewable energy sources generated 54% of the EU’s net electricity in Q2 2025, up from 52.7% year-over-year. The growth came mainly from solar, which produced 122,317 gigawatt-hours (GWh) – nearly 20% of the total electricity generation mix.</p>



<p>June 2025 was a milestone month: Solar became the EU’s single largest electricity source for the first time ever. It supplied 22% of all power that month, edging out nuclear (21.6%), wind (15.8%), hydro (14.1%), and natural gas (13.8%).</p>



<p>Some countries are already nearly 100% renewable. Denmark led with an impressive 94.7% share of renewables in net electricity generated, followed by Latvia (93.4%), Austria (91.8%), Croatia (89.5%), and Portugal (85.6%). At the other end of the spectrum, Slovakia (19.9%), Malta (21.2%), and the Czech Republic (22.1%) lagged behind.</p>	
	



<p>In total, 15 EU countries saw their share of renewable generation rise year-over-year. Luxembourg (+13.5 percentage points) and Belgium (+9.1 pp) posted the most significant gains, driven largely by solar power growth.</p>



<p>Across the EU, solar made up 36.8% of renewable generation, followed by wind at 29.5%, hydro at 26%, biomass at 7.3%, and geothermal at 0.4%.</p>



<p><strong>Read more:</strong> <a href="https://electrek.co/2025/09/24/eia-solar-and-wind-crush-coal-with-20-percent-more-power-in-2025/">EIA: Solar and wind crush coal with 20% more power in 2025</a></p>



<figure><a href="https://www.energysage.com/landing/home-solar/p/electrek-rsm-ml/?utm_medium=Partner&amp;utm_source=Electrek" target="_blank" rel=" noreferrer noopener"><img decoding="async" width="750" height="150" src="https://electrek.co/wp-content/uploads/sites/3/2025/09/DES-1038_Electrek-Banners_Resiliency_b651c0.png" alt="" srcset="https://electrek.co/wp-content/uploads/sites/3/2025/09/DES-1038_Electrek-Banners_Resiliency_b651c0.png 750w, https://electrek.co/wp-content/uploads/sites/3/2025/09/DES-1038_Electrek-Banners_Resiliency_b651c0.png?resize=150,30 150w, https://electrek.co/wp-content/uploads/sites/3/2025/09/DES-1038_Electrek-Banners_Resiliency_b651c0.png?resize=300,60 300w, https://electrek.co/wp-content/uploads/sites/3/2025/09/DES-1038_Electrek-Banners_Resiliency_b651c0.png?resize=350,70 350w, https://electrek.co/wp-content/uploads/sites/3/2025/09/DES-1038_Electrek-Banners_Resiliency_b651c0.png?resize=140,28 140w" sizes="(max-width: 750px) 100vw, 750px"></a></figure>



<hr>



<p><strong><em>The 30% federal solar tax credit is ending this year. If you’ve ever considered going solar, now’s the time to act. To make sure you find a trusted, reliable solar installer near you that offers competitive pricing, check out </em></strong><a href="https://c32b704.na1.hs-sales-engage.com/Ctc/P+23284/c32B704/JlF3crJ5W8wLKSR6lZ3p-W7s8QC84nlPDsW35x5rq5vFtfyW88cj9v1vtBqZVbfGXn1xzh51W8jvN5t8yhpLdW57_shc5Rp3MdMN0T8GbTR9LW5kbjcl41XSlfW1DWv0v4vFzCtW8zy2kd45l-lnW8TNZ_52QnSx-W54zS-f2SKtm5W5WK2df426XsKV7j3fd6CkxT7W7x6GCb20V3brW6qqHST3bthfYW6CpFKd7_yQ0XW2ysWt869bCphW6r8YtG4GrsVkW46V-MQ5bp2VwW5m6Bnn8b0H0_VsQ6Xw673G4GW2FfPnr6RDKb7W7dQjKN7Mqbk0W2D2_x791FrC9W84mN5P1JPzsPW5Ymmh58m7YHdW2RdHWF257Zzhf4hJ8JP04"><strong><em>EnergySage</em></strong></a><strong><em>, a free service that makes it easy for you to go solar. It has hundreds of pre-vetted solar installers competing for your business, ensuring you get high-quality solutions and save 20-30% compared to going it alone. Plus, it’s free to use, and you won’t get sales calls until you select an installer and share your phone number with them.&nbsp;</em></strong></p>



<p><strong><em>Your personalized solar quotes are easy to compare online and you’ll get access to unbiased Energy Advisors to help you every step of the way. </em></strong><a href="https://c32b704.na1.hs-sales-engage.com/Ctc/P+23284/c32B704/JlF3crJ5W8wLKSR6lZ3p-W7s8QC84nlPDsW35x5rq5vFtfyW88cj9v1vtBqZVbfGXn1xzh51W8jvN5t8yhpLdW57_shc5Rp3MdMN0T8GbTR9LW5kbjcl41XSlfW1DWv0v4vFzCtW8zy2kd45l-lnW8TNZ_52QnSx-W54zS-f2SKtm5W5WK2df426XsKV7j3fd6CkxT7W7x6GCb20V3brW6qqHST3bthfYW6CpFKd7_yQ0XW2ysWt869bCphW6r8YtG4GrsVkW46V-MQ5bp2VwW5m6Bnn8b0H0_VsQ6Xw673G4GW2FfPnr6RDKb7W7dQjKN7Mqbk0W2D2_x791FrC9W84mN5P1JPzsPW5Ymmh58m7YHdW2RdHWF257Zzhf4hJ8JP04"><strong><em>Get started here</em></strong></a><strong><em>.</em></strong></p>
	<p>
				<a target="_blank" rel="nofollow" href="https://news.google.com/publications/CAAqBwgKMKqD-Qow6c_gAg?hl=en-US&amp;gl=US&amp;ceid=US:en">
			<em>Add Electrek to your Google News feed.</em>&nbsp;
					</a>
			</p>
	<p><em>FTC: We use income earning auto affiliate links.</em> <a href="https://electrek.co/about/#affiliate">More.</a></p>				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The RAG Obituary: Killed by agents, buried by context windows (195 pts)]]></title>
            <link>https://www.nicolasbustamante.com/p/the-rag-obituary-killed-by-agents</link>
            <guid>45439997</guid>
            <pubDate>Wed, 01 Oct 2025 16:51:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nicolasbustamante.com/p/the-rag-obituary-killed-by-agents">https://www.nicolasbustamante.com/p/the-rag-obituary-killed-by-agents</a>, See on <a href="https://news.ycombinator.com/item?id=45439997">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><span>I’ve been working in AI and search for a decade. First building Doctrine, the largest European legal search engine and now building </span><a href="https://fintool.com/" rel="">Fintool</a><span>, an AI-powered financial research platform that helps institutional investors analyze companies, screen stocks, and make investment decisions. </span></p><p>After three years of building, optimizing, and scaling LLMs with retrieval-augmented generation (RAG) systems, I believe we’re witnessing the twilight of RAG-based architectures. As context windows explode and agent-based architectures mature, my controversial opinion is that the current RAG infrastructure we spent so much time building and optimizing is on the decline.</p><p>In late 2022, ChatGPT took the world by storm. People started endless conversations, delegating crucial work only to realize that the underlying model, GPT-3.5 could only handle 4,096 tokens... roughly six pages of text!</p><p><span>The AI world faced a fundamental problem: </span><strong>how do you make an intelligent system work with knowledge bases that are orders of magnitude larger than what it can read at once?</strong></p><p>The answer became Retrieval-Augmented Generation (RAG), an architectural pattern that would dominate AI for the next three years. </p><p>GPT-3.5 could handle 4,096 token and the next model GPT-4 doubled it to 8,192 tokens, about twelve pages. This wasn’t just inconvenient; it was architecturally devastating. </p><p><span>Consider the numbers: </span><strong>A single SEC 10-K filing contains approximately 51,000 tokens (130+ pages).</strong></p><p>With 8,192 tokens, you could see less than 16% of a 10-K filing. It’s like reading a financial report through a keyhole!</p><p>RAG emerged as an elegant solution borrowed directly from search engines. Just as Google displays 10 blue links with relevant snippets for your query, RAG retrieves the most pertinent document fragments and feeds them to the LLM for synthesis.</p><p><span>The core idea is beautifully simple: </span><strong>if you can’t fit everything in context, find the most relevant pieces and use those</strong><span>. It turns LLMs into sophisticated search result summarizers.</span></p><p>Basically, LLMs can’t read the whole book but they can know who dies at the end; convenient!</p><p>Long documents need to be chunked into pieces and it’s when problems start. Those digestible pieces are typically 400-1,000 tokens each which is basically 300-750 words.</p><p>The problem? It isn’t as simple as cutting every 500 words.</p><p>Consider chunking a typical SEC 10-K annual report. The document has a complex hierarchical structure:</p><p>- Item 1: Business Overview (10-15 pages)</p><p>- Item 1A: Risk Factors (20-30 pages)</p><p>- Item 7: Management’s Discussion and Analysis (30-40 pages)</p><p>- Item 8: Financial Statements (40-50 pages)</p><p>After naive chunking at 500 tokens, critical information gets scattered:</p><p>- Revenue recognition policies split across 3 chunks</p><p>- A risk factor explanation broken mid-sentence</p><p>- Financial table headers separated from their data</p><p>- MD&amp;A narrative divorced from the numbers it’s discussing</p><p>If you search for “revenue growth drivers,” you might get a chunk mentioning growth but miss the actual numerical data in a different chunk, or the strategic context from MD&amp;A in yet another chunk!</p><p>At Fintool, we’ve developed sophisticated chunking strategies that go beyond naive text splitting:</p><p><span>- </span><strong>Hierarchical Structure Preservation</strong><span>: We maintain the nested structure from Item 1 (Business) down to sub-sections like geographic segments, creating a tree-like document representation</span></p><p><span>- </span><strong>Table Integrity</strong><span>: Financial tables are never split—income statements, balance sheets, and cash flow statements remain atomic units with headers and data together</span></p><p><span>- </span><strong>Cross-Reference Preservation</strong><span>: We maintain links between narrative sections and their corresponding financial data, preserving the “See Note X” relationships</span></p><p><span>- </span><strong>Temporal Coherence</strong><span>: Year-over-year comparisons and multi-period analyses stay together as single chunks</span></p><p><span>- </span><strong>Footnote Association</strong><span>: Footnotes remain connected to their referenced items through metadata linking</span></p><p>Each chunk at Fintool is enriched with extensive metadata:</p><p>- Filing type (10-K, 10-Q, 8-K)</p><p>- Fiscal period and reporting date</p><p>- Section hierarchy (Item 7 &gt; Liquidity &gt; Cash Position)</p><p>- Table identifiers and types</p><p>- Cross-reference mappings</p><p>- Company identifiers (CIK, ticker)</p><p>- Industry classification codes</p><p><span>This allows for more accurate retrieval but </span><strong>even our intelligent chunking can’t solve the fundamental problem: we’re still working with fragments instead of complete documents!</strong></p><p>Once you have the chunks, you need a way to search them. One way is to embed your chunks.</p><p>Each chunk is converted into a high‑dimensional vector (typically 1,536 dimensions in most embedding models). These vectors live in a space where, theoretically, similar concepts are close together.</p><p>When a user asks a question, that question also becomes a vector. The system finds the chunks whose vectors are closest to the query vector using cosine similarity.</p><p><strong>It’s elegant in theory and in practice, it’s a nightmare of edge cases.</strong></p><p>Embedding models are trained on general text and struggle with specific terminologies. They find similarities but they can’t distinguish between “revenue recognition” (accounting policy) and “revenue growth” (business performance).</p><p><span>Consider that example: Query: “</span><em>What is the company’s litigation exposure</em><span>?</span></p><p>RAG searches for “litigation” and returns 50 chunks:</p><p>- Chunks 1-10: Various mentions of “litigation” in boilerplate risk factors</p><p>- Chunks 11-20: Historical cases from 2019 (already settled)</p><p>- Chunks 21-30: Forward-looking safe harbor statements</p><p>- Chunks 31-40: Duplicate descriptions from different sections</p><p>- Chunks 41-50: Generic “we may face litigation” warnings</p><p><strong>What RAG Reports:</strong><span> $500M in litigation (from Legal Proceedings section)</span></p><p><strong>What’s Actually There:</strong></p><p>- $500M in Legal Proceedings (Item 3)</p><p>- $700M in Contingencies note (”not material individually”)</p><p>- $1B new class action in Subsequent Events</p><p>- $800M indemnification obligations (different section)</p><p>- $2B probable losses in footnotes (keyword “probable” not “litigation”)</p><p>The actual Exposure is $5.1B. 10x what RAG found. Oupsy! By late 2023, most builders realized pure vector search wasn’t enough.</p><p>Enter hybrid search: combine semantic search (embeddings) with the traditional keyword search (BM25). This is where things get interesting.</p><p>BM25 (Best Matching 25) is a probabilistic retrieval model that excels at exact term matching. Unlike embeddings, BM25:</p><p><span>- </span><strong>Rewards Exact Matches</strong><span>: When you search for “EBITDA,” you get documents with “EBITDA,” not “operating income” or “earnings”</span></p><p><span>- </span><strong>Handles Rare Terms Better</strong><span>: Financial jargon like “CECL” (Current Expected Credit Losses) or “ASC 606” gets proper weight</span></p><p><span>- </span><strong>Document Length Normalization</strong><span>: Doesn’t penalize longer documents</span></p><p><span>- </span><strong>Term Frequency Saturation</strong><span>: Multiple mentions of “revenue” don’t overshadow other important terms</span></p><p>At Fintool, we’ve built a sophisticated hybrid search system:</p><p><span>1. </span><strong>Parallel Processing</strong><span>: We run semantic and keyword searches simultaneously</span></p><p><span>2. </span><strong>Dynamic Weighting</strong><span>: Our system adjusts weights based on query characteristics:</span></p><p>- Specific financial metrics? BM25 gets 70% weight</p><p>- Conceptual questions? Embeddings get 60% weight</p><p>- Mixed queries? 50/50 split with result analysis</p><p><span>3. </span><strong>Score Normalization</strong><span>: Different scoring scales are normalized using:</span></p><p>- Min-max scaling for BM25 scores</p><p>- Cosine similarity already normalized for embeddings</p><p>- Z-score normalization for outlier handling</p><p>So at the end the embeddings search and the keywords search retrieve chunks and the search engine combines them using Reciprocal Rank Fusion. RRF merges rankings so items that consistently appear near the top across systems float higher, even if no system put them at #1!</p><p>So now you think it’s done right? But hell no!</p><p>Here’s what nobody talks about: even after all that retrieval work, you’re not done. You need to rerank the chunks one more time to get a good retrieval and it’s not easy. Rerankers are ML models that take the search results and reorder them by relevance to your specific query limiting the number of chunks sent to the LLM.</p><p><strong>Not only LLMs are context poor, they also struggle when dealing with too much information</strong><span>. It’s vital to reduce the number of chunks sent to the LLM for the final answer.</span></p><p><strong>The Reranking Pipeline:</strong></p><p>1. Initial search retrieval with embeddings + keywords gets you 100-200 chunks</p><p>2. Reranker ranks the top 10</p><p>3. Top 10 are fed to the LLM to answer the question</p><p>Here is the challenge with reranking:</p><p><span>- </span><strong>Latency Explosion</strong><span>: Rerank adds between 300-2000ms per query. Ouch.</span></p><p><span>- </span><strong>Cost Multiplication</strong><span>: it adds significant extra cost to every query. For instance, Cohere Rerank 3.5 costs $2.00 per 1,000 search units, making reranking expensive.</span></p><p><span>- </span><strong>Context Limits</strong><span>: Rerankers typically handle few chunks (Cohere Rerank supports only 4096 tokens), so if you need to re-rank more than that, you have to split it into different parallel API calls and merge them!</span></p><p><span>- </span><strong>Another Model to Manage</strong><span>: One more API, one more failure point</span></p><p>Re-rank is one more step in a complex pipeline.</p><p>What I find difficult with RAG is what I call the “cascading failure problem”.</p><p>1. Chunking can fail (split tables) or be too slow (especially when you have to ingest and chunk gigabytes of data in real-time)</p><p>2. Embedding can fail (wrong similarity)</p><p>3. BM25 can fail (term mismatch)</p><p>4. Hybrid fusion can fail (bad weights)</p><p>5. Reranking can fail (wrong priorities)</p><p>Each stage compounds the errors of the previous stage. Beyond the complexity of hybrid search itself, there’s an infrastructure burden that’s rarely discussed.</p><p>Running production Elasticsearch is not easy. You’re looking at maintaining TB+ of indexed data for comprehensive document coverage, which requires 128-256GB RAM minimum just to get decent performance. The real nightmare comes with re-indexing. Every schema change forces a full re-indexing that takes 48-72 hours for large datasets. On top of that, you’re constantly dealing with cluster management, sharding strategies, index optimization, cache tuning, backup and disaster recovery, and version upgrades that regularly include breaking changes.</p><p>Here are some structural limitations:</p><p><span>1. </span><strong>Context Fragmentation</strong></p><p>- Long documents are interconnected webs, not independent paragraphs</p><p>- A single question might require information from 20+ documents</p><p>- Chunking destroys these relationships permanently</p><p><span>2. </span><strong>Semantic Search Fails on Numbers</strong></p><p>- “$45.2M” and “$45,200,000” have different embeddings</p><p>- “Revenue increased 10%” and “Revenue grew by a tenth” rank differently</p><p>- Tables full of numbers have poor semantic representations</p><p><span>3. </span><strong>No Causal Understanding</strong></p><p>- RAG can’t follow “See Note 12” → Note 12 → Schedule K</p><p>- Can’t understand that discontinued operations affect continuing operations</p><p>- Can’t trace how one financial item impacts another</p><p><span>4. </span><strong>The Vocabulary Mismatch Problem</strong></p><p>- Companies use different terms for the same concept</p><p>- “Adjusted EBITDA” vs “Operating Income Before Special Items”</p><p>- RAG retrieves based on terms, not concepts</p><p><span>5. </span><strong>Temporal Blindness</strong></p><p>- Can’t distinguish Q3 2024 from Q3 2023 reliably</p><p>- Mixes current period with prior period comparisons</p><p>- No understanding of fiscal year boundaries</p><p>These aren’t minor issues. They’re fundamental limitations of the retrieval paradigm.</p><p>Three months ago I stumbled on an innovation on retrievial that blew my mind</p><p>In May 2025, Anthropic released Claude Code, an AI coding agent that works in the terminal. At first, I was surprised by the form factor. A terminal? Are we back in 1980? no UI?</p><p>Back then, I was using Cursor, a product that excelled at traditional RAG. I gave it access to my codebase to embed my files and Cursor ran a search n my codebase before answering my query. Life was good. But when testing Claude Code, one thing stood out:</p><p><strong>It was better and faster and not because their RAG was better but because there was no RAG.</strong></p><p>Instead of a complex pipeline of chunking, embedding, and searching, Claude Code uses direct filesystem tools:</p><p><span>1. </span><strong>Grep (Ripgrep)</strong><span> </span></p><p>- Lightning-fast regex search through file contents</p><p>- No indexing required. It searches live files instantly</p><p>- Full regex support for precise pattern matching</p><p>- Can filter by file type or use glob patterns</p><p>- Returns exact matches with context lines</p><p><span>2. </span><strong>Glob</strong><span> </span></p><p>- Direct file discovery by name patterns</p><p>- Finds files like `**/*.py` or `src/**/*.ts` instantly</p><p>- Returns files sorted by modification time (recency bias)</p><p>- Zero overhead—just filesystem traversal</p><p><span>3. </span><strong>Task Agents</strong></p><p>- Autonomous multi-step exploration</p><p>- Handle complex queries requiring investigation</p><p>- Combine multiple search strategies adaptively</p><p>- Build understanding incrementally</p><p>- Self-correct based on findings</p><p>By the way, Grep was invented in 1973. It’s so... primitive. And that’s the genius of it.</p><p><strong>Claude Code doesn’t retrieve. It investigates:</strong></p><p>- Runs multiple searches in parallel (Grep + Glob simultaneously)</p><p>- Starts broad, then narrows based on discoveries</p><p>- Follows references and dependencies naturally</p><p>- No embeddings, no similarity scores, no reranking</p><p><strong>It’s simple, it’s fast and it’s based on a new assumption that LLMs will go from context poor to context rich.</strong></p><p>Claude Code proved that with sufficient context and intelligent navigation, you don’t need RAG at all. The agent can:</p><p>- Load entire files or modules directly</p><p>- Follow cross-references in real-time</p><p>- Understand structure and relationships</p><p>- Maintain complete context throughout investigation</p><p>This isn’t just better than RAG—it’s a fundamentally different paradigm. And what works for code can work for any long documents that are not coding files.</p><p>The context window explosion made Claude Code possible:</p><p><strong>2022-2025 Context-Poor Era:</strong></p><p>- GPT-4: 8K tokens (~12 pages)</p><p>- GPT-4-32k: 32K tokens (~50 pages)</p><p><strong>2025 and beyond Context Revolution:</strong></p><p>- Claude Sonnet 4: 200k tokens (~700 pages)</p><p>- Gemini 2.5: 1M tokens (~3,000 pages)</p><p>- Grok 4-fast: 2M tokens (~6,000 pages)</p><p>At 2M tokens, you can fit an entire year of SEC filings for most companies.</p><p>The trajectory is even more dramatic: we’re likely heading toward 10M+ context windows by 2027, with Sam Altman hinting at billions of context tokens on the horizon. This represents a fundamental shift in how AI systems process information. Equally important, attention mechanisms are rapidly improving—LLMs are becoming far better at maintaining coherence and focus across massive context windows without getting “lost” in the noise.</p><p>Claude Code demonstrated that with enough context, search becomes navigation:</p><p>- No need to retrieve fragments when you can load complete files</p><p>- No need for similarity when you can use exact matches</p><p>- No need for reranking when you follow logical paths</p><p>- No need for embeddings when you have direct access</p><p>It’s mind-blowing. LLMs are getting really good at agentic behaviors meaning they can organize their work into tasks to accomplish an objective.</p><p>Here’s what tools like ripgrep bring to the search table:</p><p><span>- </span><strong>No Setup</strong><span>: No index. No overhead. Just point and search.</span></p><p><span>- </span><strong>Instant Availability</strong><span>: New documents are searchable the moment they hit the filesystem (no indexing latency!)</span></p><p><span>- </span><strong>Zero Maintenance</strong><span>: No clusters to manage, no indices to optimize, no RAM to provision</span></p><p><span>- </span><strong>Blazing Fast</strong><span>: For a 100K line codebase, Elasticsearch needs minutes to index. Ripgrep searches it in milliseconds with zero prep.</span></p><p><span>- </span><strong>Cost</strong><span>: $0 infrastructure cost vs a lot of $$$ for Elasticsearch</span></p><p>So back to our previous example on SEC filings. An agent can SEC filing structure intrinsically:</p><p><span>- </span><strong>Hierarchical Awareness</strong><span>: Knows that Item 1A (Risk Factors) relates to Item 7 (MD&amp;A)</span></p><p><span>- </span><strong>Cross-Reference Following</strong><span>: Automatically traces “See Note 12” references</span></p><p><span>- </span><strong>Multi-Document Coordination</strong><span>: Connects 10-K, 10-Q, 8-K, and proxy statements</span></p><p><span>- </span><strong>Temporal Analysis</strong><span>: Compares year-over-year changes systematically</span></p><p>For searches across thousands of companies or decades of filings, it might still use hybrid search, but now as a tool for agents:</p><p>- Initial broad search using hybrid retrieval</p><p>- Agent loads full documents for top results</p><p>- Deep analysis within full context</p><p>- Iterative refinement based on findings</p><p>My guess is traditional RAG is now a search tool among others and that agents will always prefer grep and reading the whole file because they are context rich and can handle long-running tasks.</p><p>Consider our $6.5B lease obligation question as an example:</p><p><strong>Step 1: Find “lease” in main financial statements</strong></p><p>→ Discovers “See Note 12”</p><p><strong>Step 2: Navigate to Note 12</strong></p><p>→ Finds “excluding discontinued operations (Note 23)”</p><p><strong>Step 3: Check Note 23</strong></p><p>→ Discovers $2B additional obligations</p><p><strong>Step 4: Cross-reference with MD&amp;A</strong></p><p>→ Identifies management’s explanation and adjustments</p><p><strong>Step 5: Search for “subsequent events”</strong></p><p>→ Finds post-balance sheet $500M lease termination</p><p><strong>Final answer: $5B continuing + $2B discontinued - $500M terminated = $6.5B</strong></p><p>The agent follows references like a human analyst would. No chunks. No embeddings. No reranking. Just intelligent navigation.</p><p>Basically, RAG is like a research assistant with perfect memory but no understanding:</p><p>- “Here are 50 passages that mention debt”</p><p>- Can’t tell you if debt is increasing or why</p><p>- Can’t connect debt to strategic changes</p><p>- Can’t identify hidden obligations</p><p>- Just retrieves text, doesn’t comprehend relationships</p><p>Agentic search is like a forensic accountant:</p><p>- Follows the money systematically</p><p>- Understands accounting relationships (assets = liabilities + equity)</p><p>- Identifies what’s missing or hidden</p><p>- Connects dots across time periods and documents</p><p>- Challenges management assertions with data</p><p><strong>1. Increasing Document Complexity</strong></p><p>- Documents are becoming longer and more interconnected</p><p>- Cross-references and external links are proliferating</p><p>- Multiple related documents need to be understood together</p><p>- Systems must follow complex trails of information</p><p><strong>2. Structured Data Integration</strong></p><p>- More documents combine structured and unstructured data</p><p>- Tables, narratives, and metadata must be understood together</p><p>- Relationships matter more than isolated facts</p><p>- Context determines meaning</p><p><strong>3. Real-Time Requirements</strong></p><p>- Information needs instant processing</p><p>- No time for re-indexing or embedding updates</p><p>- Dynamic document structures require adaptive approaches</p><p>- Live data demands live search</p><p><strong>4. Cross-Document Understanding</strong></p><p>Modern analysis requires connecting multiple sources:</p><p>- Primary documents</p><p>- Supporting materials</p><p>- Historical versions</p><p>- Related filings</p><p>RAG treats each document independently. Agentic search builds cumulative understanding.</p><p><strong>5. Precision Over Similarity</strong></p><p>- Exact information matters more than similar content</p><p>- Following references beats finding related text</p><p>- Structure and hierarchy provide crucial context</p><p>- Navigation beats retrieval</p><p>The evidence is becoming clear. While RAG served us well in the context-poor era, agentic search represents a fundamental evolution. The potential benefits of agentic search are compelling:</p><p>- Elimination of hallucinations from missing context</p><p>- Complete answers instead of fragments</p><p>- Faster insights through parallel exploration</p><p>- Higher accuracy through systematic navigation</p><p>- Massive infrastructure cost reduction</p><p>- Zero index maintenance overhead</p><p>The key insight? Complex document analysis—whether code, financial filings, or legal contracts—isn’t about finding similar text. It’s about understanding relationships, following references, and maintaining precision. The combination of large context windows and intelligent navigation delivers what retrieval alone never could.</p><p><strong>RAG was a clever workaround for a context-poor era</strong><span>. It helped us bridge the gap between tiny windows and massive documents, but it was always a band-aid. The future won’t be about splitting documents into fragments and juggling embeddings. It will be about agents that can navigate, reason, and hold entire corpora in working memory.</span></p><p>We are entering the post-retrieval age. The winners will not be the ones who maintain the biggest vector databases, but the ones who design the smartest agents to traverse abundant context and connect meaning across documents. In hindsight, RAG will look like training wheels. Useful, necessary, but temporary.</p><p>The next decade of AI search will belong to systems that read and reason end-to-end. Retrieval isn’t dead—it’s just been demoted.</p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Codeberg Reaches 300k Projects (207 pts)]]></title>
            <link>https://codeberg.org/</link>
            <guid>45439955</guid>
            <pubDate>Wed, 01 Oct 2025 16:48:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://codeberg.org/">https://codeberg.org/</a>, See on <a href="https://news.ycombinator.com/item?id=45439955">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	<header>
		
	</header>

	<section id="home-section-about">
		<div>
				<div>
					<h3>NON-PROFIT</h3>
					<p>
						Codeberg is maintained by the non-profit organization <b>Codeberg e.V.</b>,
						based in <b>Berlin, Germany</b>. For us, supporting the commons comes <b>first</b>.
					</p>
					<p>
						<b>
							 Its future is in the hands of its users. You can help too!
						</b>
					</p>
				</div>
				<div>
					<h3>COMMUNITY</h3>
					<p>
						We are more than just Git hosting: Our community is comprised of like-minded
						developers, artists, academics, hobbyists and professionals.
					</p>
					<p>
						<b>
							We celebrate free culture, openness and creativity.
						</b>
					</p>
				</div>
				<div>
					<h3>RESPECT</h3>
					<p>
						No tracking. No third-party cookies. No profiteering.
						Everything runs on servers that we control. Your data is <b>not</b> for sale.
					</p>
					<p>
						<b>
							Hosted in Europe, we welcome the world.
						</b>
					</p>
				</div>
				
					
				
			</div>

		<div>
				<h4>POWERED BY</h4>
				
			</div>
	</section>

	<section id="home-section-support">
		<h3>Your support helps us grow!</h3>
		<div>
			<a href="https://join.codeberg.org/">
				
				Become a member
			</a>
			<p>
				Our non-profit structure reinforces our independence. Your donations and contributions sustain our community.
				Help us achieve our mission by joining Codeberg e.V. as a supporting or active member with full voting rights!
			</p>
		</div>
		<hr>
		<div>
			<a href="https://docs.codeberg.org/improving-codeberg/#donate-to-codeberg">
				
				Fund our project
			</a>
			<p>
				Free as in freedom, not as in beer! Maintaining our systems and developing our software has its costs, which
				are backed by optional donations. We appreciate them a lot, as they help provide a better service for everyone.
			</p>
		</div>
		<hr>
		<div>
			<a href="https://docs.codeberg.org/improving-codeberg/#contribute-to-codeberg">
				
				Develop Codeberg
			</a>
			<p>
				Powered by Free Software! Get involved with Codeberg and help improve your experience. We
				are always looking for contributions to our projects and services.
			</p>
		</div>
	</section>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DuckDuckGo Donates $25,000 to The Perl and Raku Foundation v2025 (152 pts)]]></title>
            <link>https://www.perl.com/article/duckduckgo-donates-25-000-to-the-perl-and-raku-foundation-v2025/</link>
            <guid>45439883</guid>
            <pubDate>Wed, 01 Oct 2025 16:42:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.perl.com/article/duckduckgo-donates-25-000-to-the-perl-and-raku-foundation-v2025/">https://www.perl.com/article/duckduckgo-donates-25-000-to-the-perl-and-raku-foundation-v2025/</a>, See on <a href="https://news.ycombinator.com/item?id=45439883">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
              
              <p>Oct 1, 2025 by
              
              
                
                
                <a href="#author-bio-olaf-alders">Olaf Alders</a>
              
              </p>
               <img alt="" src="https://www.perl.com/images/duck-duck-go/DuckDuckGo-Logo-1.png">
                <p>For the second consecutive year, The Perl and Raku Foundation (TPRF) is
overjoyed to announce <a href="https://spreadprivacy.com/2025-duckduckgo-charitable-donations/">a donation of USD 25,000 from
DuckDuckGo</a>.</p>
<blockquote>
<p>DuckDuckGo has demonstrated how Perl and its ecosystem can deliver power and
scale to drive the DuckDuckGo core systems, plug-in framework and Instant
Answers. The Foundation is grateful that DuckDuckGo recognises the importance
of Perl, and for their generous funding support for a second year through
their charitable donations programme.</p></blockquote>
<p>– Stuart J Mackintosh, President of The Perl and Raku Foundation</p>
<p><a href="https://www.perl.com/article/duckduckgo-donates-25-000-to-the-perl-and-raku-foundation/">Last year’s donation of USD 25,000 from
DuckDuckGo</a>
was instrumental in helping to fund the foundation’s Core Perl Maintenance Fund
and this year’s donation will help to fund more of the same crucial work that
keeps the Perl language moving forward.</p>
<p><img src="https://www.perl.com/images/duck-duck-go/fireworks.jpg" alt="Fireworks celebration"></p>
<p><a href="https://metacpan.org/author/PEVANS">Paul “LeoNerd” Evans</a> is one of the
developers who gets regular funding from the Perl Core Maintenance Fund. Here
is a short list of just some of the many contributions which Paul has made to
core Perl as part of the maintenance fund work:</p>
<hr>
<ul>
<li>The <a href="https://perldoc.perl.org/builtin">builtin</a> module (5.36), making
available many new useful language-level utilities that were previously
loaded from modules like <a href="https://metacpan.org/pod/Scalar::Util">Scalar::Util</a></li>
<li>The complete <a href="https://perldoc.perl.org/feature#The-'class'-feature">feature
‘class’</a> system
(5.38), adding proper object-orientation syntax and abilities</li>
<li>Lexical method support (5.42), adding <code>my method</code> and
the <code>$obj-&gt;&amp;method</code> invocation syntax for better object encapsulation</li>
<li>Stabilising some of the recent experiments - signatures (5.36),
try/catch (5.40), foreach on multiple vars (5.40)</li>
<li>Ability to use the //= and ||= operators in signatures (5.38),
performance improvements and named parameters (upcoming in next
release)</li>
<li>The new <a href="https://perldoc.perl.org/functions/any">any</a> and
<a href="https://perldoc.perl.org/functions/all">all</a> keywords (5.42)</li>
</ul>
<hr>
<p>We look forward to many more innovative contributions from Paul over the coming
year.</p>
<p>While TPRF never takes continued support for granted, when it does arrive, it
allows the foundation to plan for the future with much greater confidence.
Multi-year partnerships with our sponsors allow us to continue to prioritize
important work, knowing that we will have the runway that we need to fund the
work which helps to sustain the Perl Language and its associated communities.</p>
<p>For more information on how to become a sponsor, please contact:
<a href="mailto:olaf@perlfoundation.org">olaf@perlfoundation.org</a></p>
<hr>
<p><em>"<a href="https://www.flickr.com/photos/67458569@N00/7722577066">Fireworks</a>" by <a href="https://www.flickr.com/photos/67458569@N00">colink.</a> is licensed under <a href="https://creativecommons.org/licenses/by-sa/2.0/?ref=openverse">CC BY-SA 2.0</a>.</em></p>

              </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[No more "check mail from other accounts" in Gmail web (391 pts)]]></title>
            <link>https://support.google.com/mail/answer/16604719?hl=en</link>
            <guid>45439670</guid>
            <pubDate>Wed, 01 Oct 2025 16:25:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://support.google.com/mail/answer/16604719?hl=en">https://support.google.com/mail/answer/16604719?hl=en</a>, See on <a href="https://news.ycombinator.com/item?id=45439670">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="hcfe-content" role="main">                   <article class="page" sc-render-smart-button="false" itemscope=""> <div data-stats-ve="35"><p>Starting January 2026, Gmail will no longer provide support for the following:</p>

<ul>
  <li><strong>Gmailify:</strong> This feature allows you to get special features like spam protection or inbox organization applied to your third-party email account. <a href="https://support.google.com/mail/answer/6304825" rel="noopener">Learn more about Gmailify</a>.</li>
  <li><strong>POP:</strong> This feature allows you to read your messages from a third-party account in Gmail. Unlike IMAP connections, POP only works with a single device and doesn’t sync your email in real time. Instead, emails are downloaded, and you decide how often you want to download new emails. As an alternative, you can still link your third-party accounts in the Gmail app.</li>
</ul>

<p>These changes help provide the most secure and current options to access your messages in Gmail.</p>

<h2>Learn about changes to Gmailify</h2>

<p>You won’t be able to get specific features in Gmail applied to your third-party account, like:</p>

<ul>
  <li><a href="https://safety.google/intl/en_us/gmail/" rel="noopener" target="_blank">Spam protection</a></li>
  <li>Better email notifications on mobile</li>
  <li><a href="https://support.google.com/mail/answer/3094499" rel="noopener">Inbox categories</a></li>
  <li>Faster search with <a href="https://support.google.com/mail/answer/7190" rel="noopener">advanced search operators</a></li>
</ul>

<h3>What you need to do</h3>

<ul>
  <li>You can still read and send emails from your other account within the Gmail app. This uses a standard IMAP connection, which is supported in the Gmail mobile app.</li>
  <li><a href="https://support.google.com/mail/answer/6078445" rel="noopener">Learn how to add another email account to the Gmail app</a>.</li>
</ul>

<h2>Learn about changes to POP connections</h2>

<ul>
  <li>Gmail will no longer support checking emails from third-party accounts through POP.</li>
  <li>The option to "Check mail from other accounts" will no longer be available in Gmail on your computer.</li>
</ul>

<h3>What you need to do</h3>

<p><strong>Important:</strong> If you have a work or school account, your administrator can help migrate your email data into Google Workspace. <a href="https://support.google.com/a/topic/14012345" rel="noopener">Learn more about the data migration service</a>.</p>

<ul>
  <li>To continue to receive messages from your other account in Gmail, you need to set up IMAP access.
    <ul>
      <li>Check your email provider’s documentation for instructions on how to enable IMAP for your account.</li>
    </ul>
  </li>
  <li>To read your messages from your other account, use the Gmail app. <a href="https://support.google.com/mail/answer/6078445" rel="noopener">Learn how to add another email account to the Gmail app</a>.</li>
</ul>

<h2>Frequently asked questions</h2>
<p><a>Will I lose the emails I already imported?</a></p><p>No. All messages synced before the deprecation stay in Gmail.</p>
<p><a>Can I still use other email accounts in the Gmail app?</a></p><p>Yes. For third-party accounts like Yahoo! and Outlook, you can add them to the Gmail mobile app on Android and iPhone and iPad.</p>

<h2>Related resources</h2>

<ul>
  <li><a href="https://support.google.com/mail/answer/6304825" rel="noopener">Get Gmail features for your other email accounts</a></li>
  <li><a href="https://support.google.com/mail/answer/21289" rel="noopener">Add another email account on your computer</a></li>
</ul>
</div>      </article>            </div></div>]]></description>
        </item>
    </channel>
</rss>