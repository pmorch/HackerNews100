<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 14 Dec 2024 22:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Humans are unreliable models of mouse disease (130 pts)]]></title>
            <link>https://www.cell.com/cell/abstract/S0092-8674(24)00897-3</link>
            <guid>42418272</guid>
            <pubDate>Sat, 14 Dec 2024 17:23:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cell.com/cell/abstract/S0092-8674(24)00897-3">https://www.cell.com/cell/abstract/S0092-8674(24)00897-3</a>, See on <a href="https://news.ycombinator.com/item?id=42418272">Hacker News</a></p>
Couldn't get https://www.cell.com/cell/abstract/S0092-8674(24)00897-3: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[The 1955 Le Mans disaster changed motorsport (109 pts)]]></title>
            <link>https://www.essesmag.com/articles/racings-deadliest-day</link>
            <guid>42417480</guid>
            <pubDate>Sat, 14 Dec 2024 14:52:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.essesmag.com/articles/racings-deadliest-day">https://www.essesmag.com/articles/racings-deadliest-day</a>, See on <a href="https://news.ycombinator.com/item?id=42417480">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><section><div><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725.jpg" loading="lazy" sizes="(max-width: 479px) 100vw, (max-width: 767px) 90vw, (max-width: 1439px) 100vw, 1200px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725.jpg 2500w" alt=""></p></div><p><h2>How the 1955 Le Mans disaster changed motorsport forever</h2></p></section><section><div><div data-w-id="427ce4fb-b525-fa77-7840-9b60be473c41"><div><p><span>WORDS</span> Darrell Hartman</p><p><span>NOVEMBER 15, 2024</span></p></div><p><span>I</span>t is often said that the Le Mans 24-hour endurance race is more about stamina than speed, but in the days leading up to the 1955 edition, which would go down as one of the worst tragedies in motorsport history, you couldn’t help but notice how fast the cars were going.&nbsp;</p><p>The D-shaped Circuit de la Sarthe, located in the French countryside 120 miles southwest of Paris, consisted of public roads that were still regularly used by horse-drawn hay wagons. In 1950, the quickest lap around it had been done at an average speed of 102.7 mph. Four years later, a Jaguar and a Ferrari both surpassed 115 mph. In 1955, Ferrari’s Eugenio Castellotti demolished that record during practice, hitting 118.56 mph. The flat-out speeds achieved in practice were equally astonishing, with Juan Manuel Fangio, the driver widely agreed to be the world’s best, getting his Mercedes-Benz 300 SLR up to 181.57 mph on the 3.6-mile Mulsanne Straight.</p><p>After two years away from sportscar racing, Mercedes had returned with a masterfully engineered new machine. One of its drivers at Le Mans that year, John Fitch, later described the 300 SLR as “a ferocious racing car” with “a staggering complexity of parts.” Its body was made of ultralight magnesium alloy; <em>Motor Sport</em> reported that its fuel-injected 3-liter engine emitted an “unholy scream.” One month earlier, Fangio and the 25-year-old English driver Stirling Moss had powered theirs to a one-two finish at the Mille Miglia. In the hands of elite drivers like these, it seemed almost unbeatable.</p></div><div><div data-w-id="143281a4-5fd8-da83-2fe9-8357ea78b16e" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H.jpg" loading="lazy" sizes="(max-width: 991px) 100vw, (max-width: 1439px) 44vw, 650px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H.jpg 5085w" alt=""></p><div><p>Alfred Neubauer (Left) with Juan Manuel Fangio (Center). </p><p>Heritage Image Partnership Ltd / Alamy</p></div></div><div><p data-w-id="ca0f7162-993c-8bfa-82e7-e87e8c793677"><h2>Though notoriously grueling for car and driver, Le Mans was not considered all that dangerous.</h2></p><p>The 300 SLR was virtually identical to the company’s championship-winning W196 Formula 1 car. Like Ferrari and others, though, Mercedes dubiously classified it as a consumer “prototype” in order to enter it at Le Mans. The disparity between these specialized racers and the slower production models on the track rankled some. For the second year running, Austin-Healey had withdrawn its team of near-standard production cars in protest over the proliferation of bogus “prototypes.” For many others, though, the enormous gap in vehicle capabilities was just another defining element of the classic race also known as <em>La Ronde Infernale</em>.</p><p>Though notoriously grueling for car and driver, Le Mans was not considered all that dangerous. The eight-mile circuit had been rebuilt in 1949 to modern specifications after the old track was destroyed by German bombing. In the six years since, four drivers had been killed there, an unremarkable number by period standards. Tunnels ran under the track so that spectators could cross safely, and the viewing areas were protected by four-foot-tall earthen barriers.</p></div></div><div><p>Some of the best action was to be seen at the start-finish line, where a straightaway encouraged dramatic overtakes as other cars entered and exited the pits. A handful of naysayers had begun to complain that this section of the racecourse was unsafe. The quarter-mile-long pit area was undivided from the main track; it was also narrow, with no deceleration lane, and a right kink leading up to it gave harried drivers one more thing to think about as they approached this busy area at speed. Mercedes team director Alfred Neubauer later claimed that he had, for this reason, warned his drivers to pull over well in advance when pitting. Some of Neubauer’s fears were confirmed during the Wednesday evening test drive, when a DB-Panhard entering the pits collided with Moss’s Mercedes. French driver Jean Behra, who was standing nearby with two journalists, sustained head and leg injuries that prevented him from racing for Gordini that weekend.</p><p>Another topic of discussion leading up to the race was the hinged fap that Mercedes had attached to the rear deck of its cars. The driver pulled a dashboard lever to raise it, creating drag and an additional boost of stopping power that was sure to come in handy at the end of the Mulsanne Straight, where the dramatic comedown from speeds of around 180 mph created overtaking opportunities. An impressed Moss called the system “unbelievable,” but it left rivals confused. Seeing a Mercedes “wind brake” flip up for the first time, a Porsche driver assumed the car’s trunk latch had broken. Others complained that it obstructed their views on corners. The night before the race, Mercedes complied with an official request to cut a second Plexiglas window in its metal braking faps. This sort of compromise was typical during an age of motorsport in which teams were free to conduct experiments, including strange ones, and worry about the safety implications later.</p></div><div data-w-id="430014d9-f525-4071-0a52-ef86b180800f"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 1439px) 92vw, 1320px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52.jpg 5575w" alt=""></p><div><p>Mike Hawthorn pictured at Silverstone in 1956. </p><p>Keystone Press / Alamy</p></div></div><div><p>Mercedes’ wind brakes were its answer to the powerful disc brakes used by Jaguar, whose highly aerodynamic D-Type was one of the other fastest cars on the circuit. Jaguar had become a force at Le Mans in recent years, winning in 1953 and losing to Ferrari by less than three minutes in 1954. For Jaguar, the fact that it had no Formula 1 team made the 24 Hours an especially important prize.</p><p>Its star driver in 1955 was 26-year-old Englishman Mike Hawthorn. Fangio had decimated the Grand Prix competition the year before with Mercedes, but Hawthorn, racing for Ferrari, had finished third. People were still talking about the French Grand Prix of 1953, when he’d won a sixty-lap duel against Fangio by a single second after overtaking the unflappable Argentine on the last corner.</p></div><div><div><p>The six-foot-two Hawthorn was blonde, handsome, rowdy, and stylish. His habit of wearing butterfly-shaped bow ties in the cockpit had earned him the nickname Le Papillon. His Jaguar teammate Norman Dewis later remembered him as “genuinely debonair.” Hawthorn embraced the oftrack hedonism that was typical of the era. He liked beer and women, and often disappeared after a day of driving to indulge in both, sometimes with carousing buddies who drove for other teams. These included Moss and the lesser-known Lance Macklin, who was also competing at that year’s Le Mans. Macklin had a privileged and well-traveled background; he’d spent part of his childhood in Monte Carlo, attended Eton, and gone to college in Switzerland. Though talented, the playboyish Macklin had never taken the profession as seriously as Moss or Hawthorn. “Sometimes it was a nightmare to make him practice at all,” one of his Aston Martin teammates later recalled. “If there was some blonde he was after, he just wouldn’t show up.”</p><p>One of the best results of Macklin’s career had been at Le Mans, in 1951, when he’d logged a third-place finish in an Aston Martin. The Austin-Healey 100S he’d secured for 1955 was a private entry, since the manufacturer’s team was once again sitting out the race. Macklin’s was the first Austin-Healey to be outfitted with disc brakes, but these were far less impressive than the Jaguar’s, and the experienced Macklin was realistic about his prospects. He could compete with other roadsters, but one of his main tasks would be to keep out of the way of faster cars like Hawthorn’s.</p></div><div data-w-id="56f44674-a9cc-ae78-18da-432399729355" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 991px) 92vw, (max-width: 1439px) 44vw, 650px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741.jpg 3000w" alt=""></p><div><p>The “wind brake” in action on Fangio/Moss Mercedes. </p><p>LAT Photographic</p></div></div></div></div><div data-w-id="72e8d0f8-997c-42a1-41df-3d146436203c"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113.png" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 991px) 90vw, 800px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113-p-500.png 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113-p-800.png 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113-p-1080.png 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113-p-1600.png 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113.png 2000w" alt=""></p><div><p>Memories of the war were still fresh in the minds of the public. </p><p>Francois Mori / AP</p></div></div><div><div><p>Hawthorn’s celebrated French Grand Prix victory over Fangio had been in a Ferrari. This time around, he was driving a British car against a German one, and there was more national pride involved. Hawthorn’s anti-German prejudice was one of his defining passions. He was known to confront British motor enthusiasts and chew them out for buying “bloody Kraut cars,” and when driving himself to races in Germany, he timed his refueling stops to avoid buying gas in a country that he still, in many ways, viewed as the enemy. These feelings were no secret; they were, in fact, probably the reason that Neubauer had never approached him about driving for Mercedes and had signed Moss instead.</p><p>Nor was this sentiment unique to Hawthorn. Memories of the war were still fresh in the minds of the public; Nazis had imprisoned French resistance fighters in an internment camp just a few miles away from the Circuit de la Sarthe. The prospect of a Le Mans victory for Mercedes, the German powerhouse, ignited national sentiment in the French and British that can be hard to appreciate today. Aware of these sensitivities, Neubauer had assembled a six-man driving team for Le Mans that included just two Germans, Karl Kling and Hans Herrmann. Its biggest stars were Fangio and Moss. Its biggest curiosity was a 49-year-old Frenchman named Pierre Levegh.</p><p>Levegh was known to French racing fans, and his selection made sense from a PR perspective. Otherwise, the balding Parisian garage owner was a surprising choice. He was past his prime, and he hadn’t exactly distinguished himself in his prime, either. He had, however, shown himself to be capable of near-greatness at Le Mans.</p></div><div><p>Levegh had dreamed of winning the prestigious French race since adolescence. He’d attended every edition of Le Mans since 1930 and, beginning in 1938, had driven in it six times. After failing to secure a car for the first two postwar races, he had co-driven a factory Talbot to a fourth-place finish in 1951. The following year, aged 46, Levegh entered a Talbot that he’d done all the work on himself – and insisted on going the distance alone. When dawn broke on Sunday morning, many of the other fastest cars had retired, leaving Levegh and his Talbot with an astonishing three-lap lead. Each time he came in for refueling, he refused to hand the wheel over to his increasingly frustrated partner. His mileage total surpassed 2,000. He was 70 minutes away from glory, and borderline catatonic from exhaustion, when his car stopped running. Shortly after his race ended, Levegh was seen lying motionless on the grass behind the pits with a rug draped over him. Most chroniclers report that he made a shifting error that destroyed his crankshaft, although this account is disputed. Levegh himself never explained what happened.</p><p>That year, Mercedes finished first and second in front of a devastated and somewhat hostile French crowd. (The next year, the rules were changed to limit each driver’s time at the wheel to 18 hours.) The politically astute Neubauer, who’d brought all German drivers that year, made a mental note to put Levegh in a Mercedes when the team returned to Le Mans. When it did, in 1955, he followed through, pairing Levegh with another amateur driver, an American named John Fitch. Unlike the rest of the Mercedes team, Fitch got to know Levegh a little during the lead-up to the race. The Frenchman had a “habitually solemn demeanor,” he later wrote, and a “general air of deep reflection.” He spoke no English, and it only added to his air of somber mystery that Pierre Levegh was not his real name. He had changed his name from Pierre Bouillin to Pierre Levegh as a young man, in tribute to an uncle who’d been a race car driver – and originally, it was said, to keep his mother from knowing about the dangerous hobby he’d taken up.</p><p>Though he was generally not one for mingling, Levegh confided to Fitch before the 1955 Le Mans that he felt uncomfortable in the SLR. When the head of the Mercedes press department, Arthur Keser, teased Levegh for his oversized crash helmet, the Frenchman was unamused. It was the type worn by American fighter pilots, he explained, and offered “special protection.”</p><p>The Mercedes drivers Levegh, Fitch, Kling, and André Simon (a Frenchman who’d been brought in last-minute as a replacement for the injured Hermann) were expected to circulate, not win. These lower-tier drivers would be racing in the shadow of the 300 SLR being piloted by Moss and Fangio, a dream team that gave Mercedes even more of a presumptive edge against Ferrari and Jaguar. Hawthorn, for his part, had more confidence in his own abilities and his D-Type than he did in his co-driver, Ivor Bueb, who was competing in his first endurance race. Surely whatever small lead he could gain over Mercedes would start to disappear once the drivers swapped. Fangio took the first stint in his Mercedes car. Neubauer spat on the ground to wish him luck.</p></div></div><div data-w-id="7a9032a7-7a6a-56b8-4262-13ed44d741bb"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 991px) 90vw, 800px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521.jpg 3548w" alt=""></p><div><p>Drivers sprinting to their cars at the start of the 1955 24 Hours of Le Mans. </p><p>Shawshots / Alamy</p></div></div><div><div><div><p>The drivers dashed across the pits and into their cars at 4 p.m. exactly. (The theatrical ‘Le Mans Start’ was discontinued for safety reasons in 1970.) Fangio’s luck failed him immediately: his gear stick got stuck inside his trouser leg, and he started in the rear of the pack.</p><p>Castellotti took an early lead in his Ferrari, setting a new lap record on his first flying lap. Hawthorne slid into second after passing the Ferrari driven by Umberto Maglioli on the Mulsanne Straight. Fangio, once he’d gotten his khakis clear of his machinery, spent his first two laps battling all the way into fourth. Then he overtook Maglioli, in full view of the grandstand crowd, at the end of another record lap.</p><div><p>Ten new lap records would be set – by Castellotti, Fangio, and Hawthorn – within the first two hours. The pace at the front was bone-rattling, more like a Grand Prix than an endurance race, and spectators were transfixed. Around the grandstand area and elsewhere, they stood on tables, chairs, and boxes in order to get a better view over the four-foot-tall earth barriers.</p><p>Half an hour in, the top three cars had pulled away from the next-fastest group and begun lapping others. At 5:10 p.m., 70 minutes into the race, Castellotti’s foot slipped off his brake pedal. As he struggled to avoid spinning out, Hawthorn, and then Fangio, overtook him.</p></div><p>The race now became a duel for the ages, with Hawthorn fighting tenaciously to stay ahead. Fangio took the lead and promptly lost it. He took the lead again on the 18th lap and held it longer, causing Hawthorn to succumb to a moment of mental weakness. Hawthorn later recalled thinking that it was perhaps inevitable for him to be overtaken by a man-and-machine combo as awesome as Fangio in a 300SLR. “Then I came to my senses and thought: ‘Damn it, why should a German car beat a British car?’” He reclaimed the lead on the Mulsanne Straight.</p><p>The battle between Hawthorn and Fangio that kicked off that year’s Le Mans was all the more compelling because it represented a “clash of personalities,” Neubauer later wrote. “The small, wiry Argentinian took the bends with consummate artistry, never risking too much, yet never losing the slightest chance. The fair-haired Englishman, on the other hand, had something hard, almost brutal, in his driving, that demanded the maximum from his car and from himself.” Was his go-for-broke driving emotional, or part of a predetermined strategy to force the Fangio-Moss Mercedes beyond its limits? This point would be debated for years afterward. Norman Dewis, co-driver of the third Jaguar, claimed that Hawthorn had been instructed to “push on as hard as hell with no thought of finishing.” Others who knew the fiery Englishman disagreed. Aston Martin driver Tony Brooks believed that Hawthorn let his emotions get the better of him when he made his fateful first pit entry at 6:29 p.m. “I think it was a rush of blood to the head,” he said.</p></div><div><div data-w-id="5087366b-7add-d47f-4f83-4d8012ab0c44" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 991px) 92vw, (max-width: 1439px) 44vw, (max-width: 1919px) 650px, 630px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0.jpg 5304w" alt=""></p><div><p>The Hawthorn/Bueb Jaguar at the 1955 24 Hours of Le Mans. </p><p>Keystone Press / Alamy</p></div></div><p>“I think it was a rush of blood to the head.”</p></div></div><div data-w-id="51951bcb-b476-6bbb-34e4-005c42b4c39f"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 1439px) 92vw, 1320px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05.jpg 2000w" alt=""></p><div><p>The aftermath of the worst tragedy in motorsport history. </p><p>LAT Photographic</p></div></div><div><p>Hawthorn got the signal to refuel and change drivers after completing his 32nd lap. On the upward slope leading to the pit straight, with the grandstand approaching, he lapped Levegh’s Mercedes for the first time and began to gain rapidly on a slower car that he had lapped three times already: Lance Macklin’s Austin-Healey.</p><p>Macklin, traveling at about 135 mph, had glimpsed a green Jaguar and a silver Mercedes in his rearview mirror and edged to the right to let the faster cars pass. Hawthorn overtook him, as expected, and then did something that Macklin later characterized as a misjudgment: he pulled back in front of the Austin-Healey — “rather violently,” Fangio claimed — and braked for his pit entry. Macklin slammed on his brakes. Realizing he was about to rear-end the Jaguar, he swerved left to avoid it.</p><p>Levegh’s Mercedes collided with the sloping rear of the Austin-Healey at 150 mph and launched into the air. Macklin remembered feeling the “searing heat” of its exhaust on his face as it sailed over him, and seeing Levegh hunched over the wheel as his Mercedes flew off the track. It landed on an earth embankment, crashed into a concrete stairwell, and exploded like a grenade, sending shards of hot metal hurtling into an open public enclosure next to the grandstand.&nbsp;</p><p>Survivors positioned on both sides of the track said that the impact sounded like a bomb going off. What they heard next was screaming chaos. The enormous impact had torn the engine mount and front axle from the SLR’s chassis and sent both of these large pieces scything through a shoulder-to-shoulder crowd. Fifty people were killed in an instant, many of them decapitated. In the words of one eyewitness, the approximately ten-by-forty-foot area in which they had been standing had become “a clear patch with lots of bits.”</p></div><div><div><p>It began raining at dawn, and the grounds had turned to mud by the time Hawthorn and Bueb claimed a hollow victory.</p></div><div><p>The burning chassis of Levegh’s Mercedes sat atop the embankment; his dead body lay beneath it. Marshals sprayed water on the flames, which only made the magnesium components burn stronger. It would be hours before the blaze went out.&nbsp;</p><p>The collision had sent Macklin’s Austin-Healey spinning backwards through the pits. It mowed down a gendarme, a photographer, and two race officials; all four were gravely injured. Miraculously, Macklin exited his vehicle unhurt.</p><p>Fangio, who’d been roaring up behind Levegh, had cut such a tight path through the careening vehicles that a streak of green paint from one of the British cars was later found on his Mercedes. He later said that Levegh, by raising his arm in warning right before the collision, had saved his life.</p><p>Hawthorn overshot the Jaguar pits and got out of his car looking distraught. Because the rules prohibited driving backwards, team manager Lofty England ordered him to do another lap before handing the car over to Bueb.</p></div></div><div><p>It took hours for the full scale of the disaster to become known. Life mostly went on as usual outside the area that now resembled a warzone, and jaunty accordion music continued to play over the PA system as panicked spectators fled and gendarmes and volunteers entered the carnage, using advertising boards as stretchers. Doctors attended to the dead and wounded; priests administered last rites in French and German.</p><p>The organizers kept the race going and made no public announcement, reasoning that the ensuing panic and mass exodus would impede emergency vehicles. Radio listeners and television viewers learned that dozens had been killed before most people at the race did. Neubauer approached Jaguar about doing a joint withdrawal and was rebuffed. After holding an emergency meeting in Stuttgart, the Daimler-Benz board of directors told him to pull the two other cars from the race at around midnight. By the time he finally did, at 1:45, they were running first and third. Having held the lead for several hours, Nebauer later explained, the team “could now afford to retire.” It had packed up and left the track by daybreak.</p><p>It began raining at dawn, and the grounds had turned to mud by the time the Hawthorn-Bueb Jaguar claimed a hollow victory. The death toll had risen into the eighties, with more than one hundred injured. Front-page newspaper photos of Hawthorn sipping from a bottle of champagne would come back to haunt him. He later wrote of the disaster: “It was as though we were at the point where a great rock had been hurled into a pond, sending out waves of shock and horror and indignation which would later flow back, bringing consequences which no one could foresee.”</p></div></div><div data-w-id="9abe1c07-0eb6-c1ed-fa35-21a9b4589062"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 991px) 90vw, 800px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A.jpg 5592w" alt=""></p><div><p>Mike Hawthorn and Ivor Bueb after winning the 1955 24 Hours of Le Mans. </p><p>Keystone Press / Alamy</p></div></div><div><div><div><p>The rush to assign blame began immediately. Mercedes and Jaguar declared their innocence in press statements, but the early prevailing sentiment ran against the Germans and the supposedly incompetent Levegh. In his 1958 memoir, Hawthorn implicitly blamed Macklin, who in turn sued his ex-friend for libel. The proceedings ended a year later, when Hawthorn died in a road accident near his home in Surrey.&nbsp;</p><p>The scholarship of the intervening decades — including whole books on the 1955 Le Mans disaster by Mark Kahn and Chris Hilton — seems to agree that the driver who set the deadly chain of events in motion was Hawthorn. (Macklin, who died in 2002, claimed that Hawthorn admitted as much right after the accident and even apologized to him for it.) Years after the heat of the moment, the pointlessness of Hawthorn’s risky maneuver outside the pits stands out. Endurance races are decided by minutes, not seconds. By pulling ahead of Macklin instead of tucking in behind him, Hawthorn could not have hoped to gain more than a couple seconds on Fangio.</p></div><div><p>Years after the heat of the moment, the pointlessness of Hawthorn’s risky maneuver outside the pits stands out.</p></div></div><div><p>An official inquiry exonerated all drivers. The decision to continue the race, initially criticized as heartless, has come to be viewed as the right one. It almost certainly saved lives. The editors of <em>Motor Sport</em> argued in an editorial later that summer that it also probably preserved the existence of Le Mans. The racing press accused governments and the popular press of overreacting — “DEATH RACE,” blared the <em>Daily Mail</em> — but in hindsight, clearly something had to be done about the fact that a split-second misjudgment by an elite driver could create mass carnage. France banned all motor racing pending an investigation of the incident. Switzerland banned all motor racing, period, a restriction that endured until 2018. The 1955 Italian and Spanish Grand Prix were canceled. Races with a reputation for being dangerous came under special scrutiny: Nürburgring was called off that year, and the deadly Carrera Panamericana was discontinued.</p><p>The Automobile Club de l’Ouest, organizer of Le Mans, redesigned the track and spectator areas in light of the tragedy, moving the pits back nearly 50 feet and making other safety improvements. The 1956 race featured no fatal incidents – and drew even bigger crowds.</p></div></div><div data-w-id="c794cccd-ee1d-5dc0-e8d2-86a42d1f347a" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A.png" loading="lazy" data-w-id="c794cccd-ee1d-5dc0-e8d2-86a42d1f347b" sizes="100vw" alt="Daniel Riccardo shot during the 2022 French Grand Prix, Circuit Paul Ricard. July 24, 2023 at 2:22 p.m." srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A-p-500.png 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A-p-800.png 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A-p-1080.png 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A-p-1600.png 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A.png 2000w"></p><div><p>A memorial plaque near the grandstand area where the crash took place, photographed in 1969. </p><p>Rainer Schlegelmilch / LAT Photographic</p></div></div><div><div><p>Not that the lessons of 1955 ended here. In many ways, they were just beginning. The Le Mans disaster laid bare the grand illusion that motorsport had evolved beyond the bloodiness of its early years. The primitive scenes of violence from the grandstand area, which appeared in newsreels around the world, made it gruesomely clear that the sport’s safety standards had failed to keep up with the increasing speed and deadliness of its cars.</p><p>The moment marked the end of an age of innocence, which is probably one reason the scale of the 1955 Le Mans disaster has never been surpassed. Though it stands alone in this respect, the incident also served as just one example in a larger argument. Were horrific crashes like this one unavoidable? Or could more be done to prevent them without compromising the fundamental draw of the sport? The racing establishment of this era resisted self-reform, and only got serious about redefining safety standards following crashes in which innocent bystanders were killed and public outrage ensued. Le Mans was the most devastating of these disasters, but not the only one. Another was the 1957 crash during the Mille Miglia that killed two drivers and nine spectators, which led the Italian government to outlaw racing on public roads, and landed Enzo Ferrari on trial for manslaughter.&nbsp;</p><p>Change did not come swiftly. On the contrary, Formula 1’s deadliest season, in which separate accidents claimed the lives of four drivers in five months, occurred in 1958. Ferrari’s Wolfgang Von Trips and 15 spectators were killed at the 1961 Italian Grand Prix. It would take years before elite drivers stopped dying at alarming rates, and for the popular image of them as peacetime fighter pilots — fast, courageous, likely to be killed in action — to fade away. Even then, the argument that death had always been part of racing hindered efforts to protect drivers and contributed to a lingering expectation of self-sacrifice. World champions like Jackie Stewart could raise safety concerns, but they continued to be ignored until the death or near-death of a famous driver called attention to them. For example, Formula 1 drivers considered the Nürburgring so dangerous that they boycotted it for the 1970 Grand Prix, but it was not until Niki Lauda’s near-fatal crash there, six years later, that the track was comprehensively reimagined.</p></div><div><div><p>Safety considerations are paramount at the top levels of racing now. Since Ayrton Senna’s shocking death in 1994, only one Formula 1 driver, Jules Bianchi, has been killed while racing. Both tragedies forced the adoption of universal safety measures — including new standards for safety barriers, reductions in pit-lane speeds, the adoption of virtual safety cars, the halo, and more — far quicker and more comprehensively than the old disasters ever did.</p><p>Mercedes abandoned racing at the end of the 1955 season. It already had plans to do so, having proven itself as an all-conquering force in Formula 1, but the Le Mans disaster certainly made this a harder decision to reverse. Fangio went on to win that season’s Formula 1 title, his third and last for Mercedes. (He won again in 1956, with Ferrari, and in 1957, with Maserati.) In the short term, the Mercedes recusal helped Jaguar to dominate Le Mans and Ferrari to become more of a force in Formula 1. It was also part of a multi-decade identity shift for Mercedes, which would go on to pioneer anti-lock brakes, anti-collision radar systems, and other consumer safety technologies. It would be another 40 years before Mercedes got back into racing, and it did not win its next Formula 1 championship until 2014, with drivers Lewis Hamilton and Nico Rosberg.</p><p>Its cars were terrifyingly fast all over again. This time, though, they were far less deadly.<br></p></div><div data-w-id="33117215-f22a-c4cf-ee3b-c6dde1ec391a" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print.png" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 991px) 92vw, (max-width: 1439px) 44vw, 650px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print-p-500.png 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print-p-800.png 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print-p-1080.png 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print.png 1500w" alt=""></p><div><p>Niki Lauda’s near-fatal crash at Nürburgring in 1976 led to a redesign of the track.</p><p>dpa picture alliance / Alamy</p></div></div></div></div></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Open-sourcing my failed startup Buzee – A file search application (101 pts)]]></title>
            <link>https://github.com/gsidhu/buzee-tauri</link>
            <guid>42417330</guid>
            <pubDate>Sat, 14 Dec 2024 14:24:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/gsidhu/buzee-tauri">https://github.com/gsidhu/buzee-tauri</a>, See on <a href="https://news.ycombinator.com/item?id=42417330">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto">
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Buzee%20Logo.png"><img height="150" src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Buzee%20Logo.png"></a></p><p dir="auto"><span>Full-text search app for Mac and Windows</span></p>
<p dir="auto">Download the latest release from the <a href="https://buzee.co/" rel="nofollow">Buzee website</a>.</p>
</div>
<blockquote>
<p dir="auto"><g-emoji alias="warning">⚠️</g-emoji> I have <em>just</em> open sourced Buzee. The documentation is lacking. Please open an issue and I'd be happy to help! <g-emoji alias="warning">⚠️</g-emoji></p>
</blockquote>
<blockquote>
<p dir="auto">The OCR capabilities in Buzee are built on top of <a href="https://github.com/freedmand/textra">Textra on Mac</a> and <a href="https://github.com/gsidhu/winocr_cli">WinOCR on Windows</a>. Do check these repos out! I feel the native OCR capabilities of Mac and Windows are really good and should be used more!</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is Buzee?</h2><a id="user-content-what-is-buzee" aria-label="Permalink: What is Buzee?" href="#what-is-buzee"></a></p>
<p dir="auto">Buzee (pronounced <em>boozey</em>) is a eight-year-old labrador retriever who can't play fetch but can love you like no other.</p>
<p dir="auto">Buzee is also a full-text search application for your life. It helps you find your files, effortlessly.</p>
<p dir="auto">Download v0.2.0 from this <a href="https://github.com/gsidhu/buzee-releases/releases">Releases</a> page.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Screenshot1.png"><img src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Screenshot1.png" width="25%"></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Screenshot2.png"><img src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Screenshot2.png" width="25%"></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Screenshot3.png"><img src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Screenshot3.png" width="25%"></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Screenshot4.png"><img src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Screenshot4.png" width="25%"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Fast, full-text search for all your documents, images, audio, video, folders, and browser history.</li>
<li>Search all local documents and folders by keyword, time, type, or any combination of these.</li>
<li>Ignore specific files or folders from being indexed. Or ignore only their content.</li>
<li>View search results in a list or icon view.</li>
<li>View statistics about your files.</li>
<li>Sub-features:
<ul dir="auto">
<li>Extract text from PDFs and Images using OCR.</li>
<li>Use a Scratch Pad to quickly jot down notes.</li>
</ul>
</li>
<li>Automatically syncs with changes on your filesystem.</li>
<li>Lightweight installation package and low memory usage.</li>
<li>Supports these default file types:</li>
</ul>
<div data-snippet-clipboard-copy-content="Documents: csv, docx, key, md, numbers, pages, pdf, pptx, txt, xlsx, xls
Images: jpg, jpeg, png, gif
Books: epub, mobi, azw3, pdf
Audio: mp3, wav, aac, flac, ogg
Video: mp4, mkv, avi, mov, wmv"><pre><code>Documents: csv, docx, key, md, numbers, pages, pdf, pptx, txt, xlsx, xls
Images: jpg, jpeg, png, gif
Books: epub, mobi, azw3, pdf
Audio: mp3, wav, aac, flac, ogg
Video: mp4, mkv, avi, mov, wmv
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Building from Source</h2><a id="user-content-building-from-source" aria-label="Permalink: Building from Source" href="#building-from-source"></a></p>
<p dir="auto">Buzee works best on Mac. Windows may throw up some issues because I haven't had a change to properly test it. Linux is untested entirely, so you're on your own there.</p>
<ol dir="auto">
<li>Clone the repository.</li>
<li>Install Rust and NodeJS.</li>
<li>Run <code>npm install</code> in the root directory.</li>
<li>Run <code>cargo install</code> in the <code>src-tauri</code> directory.</li>
<li>Run <code>npm run tauri dev</code> in the root directory to run the app in development mode.</li>
<li>Run <code>npm run tauri build</code> in the root directory to build the app for production.</li>
</ol>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">TODO / Known Issues</h2><a id="user-content-todo--known-issues" aria-label="Permalink: TODO / Known Issues" href="#todo--known-issues"></a></p>
<div data-snippet-clipboard-copy-content="Index:
(~) : partly implemented
(+) : has to be built from scratch
(?) : not sure if it will add great value"><pre><code>Index:
(~) : partly implemented
(+) : has to be built from scratch
(?) : not sure if it will add great value
</code></pre></div>
<ul dir="auto">
<li>(~) Show matching text for search results by reading from the <code>body</code> table.</li>
<li>(~) Browser history search should support complex queries the way document search does.</li>
<li>(~) Icon view should load thumbnails in an efficient, non-blocking manner. Thumbnails should show up on the page as they are loaded.</li>
<li>(~) Enable adding 'comments' to documents.</li>
<li>(~) Enable pinning documents/folders to the top of search results.</li>
<li>(~) Allow user to add or remove supported file types.</li>
<li>(~) Allow user to switch between profiles on Arc and Chrome. (Currently uses the default profile)</li>
<li>(~) Test for Linux.</li>
<li>(~) Improve the speed of parsing PDFs, Images and XLSX files. Especially OCR operations.</li>
<li>(+) Enable adding 'tags' to documents.</li>
<li>(+) Create a 'Dashboard' view that shows statistics, pinned documents, and recent searches.</li>
<li>(+) Add tests to the codebase.</li>
<li>(?) Record frecency of documents and use it to sort search results.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tech Stack</h2><a id="user-content-tech-stack" aria-label="Permalink: Tech Stack" href="#tech-stack"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Dependencies</h3><a id="user-content-dependencies" aria-label="Permalink: Dependencies" href="#dependencies"></a></p>
<p dir="auto">Back-end:</p>
<ul dir="auto">
<li>Rust</li>
<li>Tauri v2</li>
<li>SQLite</li>
<li>Tantivy</li>
</ul>
<p dir="auto">Front-end:</p>
<ul dir="auto">
<li>Svelte 4 using TypeScript</li>
<li>shadcn-svelte</li>
<li>TailwindCSS</li>
</ul>
<p dir="auto">See all dependencies in the <a href="https://github.com/gsidhu/buzee-tauri/blob/main/src-tauri/Cargo.toml">Cargo.toml</a> and <a href="https://github.com/gsidhu/buzee-tauri/blob/main/package.json">package.json</a> files.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Architecture</h3><a id="user-content-architecture" aria-label="Permalink: Architecture" href="#architecture"></a></p>
<ul dir="auto">
<li>All file metadata is stored in SQLite in the <code>document</code> table. A central <code>metadata</code> table stores the metadata from files and eventually cloud services, emails etc.</li>
<li>A full-text index is created on <code>metadata</code> and stored as the <code>metadata_fts</code> table.</li>
<li>Parsed text from documents is stored in the <code>body</code> table.</li>
<li>A full-text index is created in Tantivy at the same time.</li>
<li>The Firefox, Chrome and Arc history is searched using their respective history databases directly.</li>
<li>All front-end code is in the <code>src</code> directory. All back-end code is in the <code>src-tauri</code> directory.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing / Way Forward</h2><a id="user-content-contributing--way-forward" aria-label="Permalink: Contributing / Way Forward" href="#contributing--way-forward"></a></p>
<p dir="auto">Read the <a href="https://github.com/gsidhu/buzee-tauri/blob/main/VISION&amp;ROADMAP">Vision and Roadmap</a>.</p>
<p dir="auto">I have spent two years building this project. It started as an Electron app, then I switched to Tauri for performance gains. When I started I barely new JavaScript and Svelte. Over the course of development, I learned NodeJS, TypeScript, SQLite, Rust, Tauri, Tantivy, and many other technologies. I learned so much about managing a project of this size and complexity. I am proud of what I have built but I am more proud of what I have learned.</p>
<p dir="auto">I am now letting go of this project because I have other priorities. Please feel free to do with this project as you wish. I am happy to help you get started with the codebase.</p>
<p dir="auto">If nothing else, this project can serve as an example of how to build a full-text search engine using Tauri and Tantivy. There are several tiny features and performance workarounds that I have implemented that you might find useful.</p>
<p dir="auto">If you do do something with this project, please let me know. I would love to see what you build!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">MIT</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Svader – Create GPU-rendered Svelte components (156 pts)]]></title>
            <link>https://github.com/sockmaster27/svader</link>
            <guid>42416230</guid>
            <pubDate>Sat, 14 Dec 2024 11:00:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/sockmaster27/svader">https://github.com/sockmaster27/svader</a>, See on <a href="https://news.ycombinator.com/item?id=42416230">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <themed-picture data-catalyst-inline="true"><picture>
    <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/logoDark.png">
    <img width="150" alt="Svader Logo" src="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/logoLight.png">
  </picture></themed-picture>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Svader</h2><a id="user-content-svader" aria-label="Permalink: Svader" href="#svader"></a></p>
<p dir="auto">Create GPU-rendered Svelte components with WebGL and WebGPU fragment shaders.</p>
<p dir="auto">Supports Svelte 4 and Svelte 5.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is a fragment shader?</h2><a id="user-content-what-is-a-fragment-shader" aria-label="Permalink: What is a fragment shader?" href="#what-is-a-fragment-shader"></a></p>
<p dir="auto">In short, a <em>fragment shader</em> can be written as a program that takes the coordinates of a pixel on the screen and returns the color that this pixel should have.
This program can be executed on the GPU, ensuring massive parallelism and speed.</p>
<p dir="auto">To learn more about how to write fragment shaders, check out <a href="https://thebookofshaders.com/" rel="nofollow">The Book of Shaders</a>.</p>
<p dir="auto">The following is a collection of examples all made using Svader. The live version of all of these can be previewed on <a href="https://svader.vercel.app/" rel="nofollow">svader.vercel.app</a>,
and the source code can be found in the <a href="https://github.com/sockmaster27/svader/tree/master/src/routes"><code>src/routes/</code></a> directory.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/collage.png"><img src="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/collage.png" alt="Shader example collage"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# npm
npm i -D svader

# pnpm
pnpm i -D svader

# Bun
bun i -D svader

# Yarn
yarn add -D svader"><pre><span><span>#</span> npm</span>
npm i -D svader

<span><span>#</span> pnpm</span>
pnpm i -D svader

<span><span>#</span> Bun</span>
bun i -D svader

<span><span>#</span> Yarn</span>
yarn add -D svader</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">To use a fragment shader component, you first need to decide whether to use WebGL or WebGPU.
If you're unsure about what to use, see the <a href="#webgl-vs-webgpu">WebGL vs. WebGPU</a> section.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Sections</h3><a id="user-content-sections" aria-label="Permalink: Sections" href="#sections"></a></p>
<ul dir="auto">
<li><a href="#webgl">WebGL</a>
<ul dir="auto">
<li><a href="#webgl-parameters">WebGL parameters</a>
<ul dir="auto">
<li><a href="#webgl-built-in-values">WebGL built-in values</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#webgpu">WebGPU</a>
<ul dir="auto">
<li><a href="#webgpu-parameters">WebGPU parameters</a>
<ul dir="auto">
<li><a href="#webgpu-built-in-values">WebGPU built-in values</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">WebGL</h3><a id="user-content-webgl" aria-label="Permalink: WebGL" href="#webgl"></a></p>
<p dir="auto">The following is a minimal example of a WebGL fragment shader component.</p>
<p dir="auto"><a href="https://svelte.dev/repl/3e4a38bca5ca49fa94e1106a841063d5?version=5.1.10" rel="nofollow"><strong>View in REPL</strong></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="<script>
    import { WebGlShader } from &quot;svader&quot;;

    const shaderCode = `#version 300 es

        precision mediump float;

        out vec4 fragColor;

        uniform vec2 u_resolution;
        uniform vec2 u_offset;

        void main() {
            vec2 pos = gl_FragCoord.xy + u_offset;
            vec2 st = pos / u_resolution;
            fragColor = vec4(st, 0.0, 1.0);
        }
    `;
</script>

<WebGlShader
    width=&quot;500px&quot;
    height=&quot;500px&quot;
    code={shaderCode}
    parameters={[
        {
            name: &quot;u_resolution&quot;,
            value: &quot;resolution&quot;,
        },
        {
            name: &quot;u_offset&quot;,
            value: &quot;offset&quot;,
        },
    ]}
>
    <div class=&quot;fallback&quot;>WebGL not supported in this environment.</div>
</WebGlShader>"><pre>&lt;<span>script</span>&gt;<span></span>
<span>    <span>import</span> { <span>WebGlShader</span> } <span>from</span> <span><span>"</span>svader<span>"</span></span>;</span>
<span></span>
<span>    <span>const</span> <span>shaderCode</span> <span>=</span> <span><span>`</span>#version 300 es</span></span>
<span><span></span></span>
<span><span>        precision mediump float;</span></span>
<span><span></span></span>
<span><span>        out vec4 fragColor;</span></span>
<span><span></span></span>
<span><span>        uniform vec2 u_resolution;</span></span>
<span><span>        uniform vec2 u_offset;</span></span>
<span><span></span></span>
<span><span>        void main() {</span></span>
<span><span>            vec2 pos = gl_FragCoord.xy + u_offset;</span></span>
<span><span>            vec2 st = pos / u_resolution;</span></span>
<span><span>            fragColor = vec4(st, 0.0, 1.0);</span></span>
<span><span>        }</span></span>
<span><span>    <span>`</span></span>;</span>
<span></span>&lt;/<span>script</span>&gt;

&lt;<span>WebGlShader</span>
    <span>width</span>=<span><span>"</span>500px<span>"</span></span>
    <span>height</span>=<span><span>"</span>500px<span>"</span></span>
    <span>code</span>={<span>shaderCode</span>}
    <span>parameters</span>={[
        {
            name: <span><span>"</span>u_resolution<span>"</span></span>,
            value: <span><span>"</span>resolution<span>"</span></span>,
        },
        {
            name: <span><span>"</span>u_offset<span>"</span></span>,
            value: <span><span>"</span>offset<span>"</span></span>,
        },
    ]}
&gt;
    &lt;<span>div</span> <span>class</span>=<span><span>"</span>fallback<span>"</span></span>&gt;WebGL not supported in this environment.&lt;/<span>div</span>&gt;
&lt;/<span>WebGlShader</span>&gt;</pre></div>
<p dir="auto">This produces the following output:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/debugShaderWebGl.png"><img src="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/debugShaderWebGl.png" alt="Output of the WebGL shader"></a></p>
<p dir="auto">Here, the <code>shaderCode</code> variable is a string containing the <a href="https://en.wikipedia.org/wiki/OpenGL_ES" rel="nofollow">GLES</a> shader code.
For simplicity, this is stored as a string, but it would typically be stored in a separate <code>myShader.frag</code> file.
When loading the shader from a file, it might be useful to know that the <code>code</code> property accepts both a <code>string</code> and a <code>Promise&lt;string&gt;</code>.</p>
<p dir="auto">What this code does is:</p>
<ol dir="auto">
<li>Add the given <code>u_offset</code> uniform to the 2D coordinates of the pixel given by <code>gl_FragCoord.xy</code>.</li>
<li>Divide the resulting coordinates entrywise by the <code>u_resolution</code> uniform to normalize the coordinates between 0 and 1.</li>
<li>Return the normalized coordinates as the color of the pixel, such that the <code>x</code> coordinate becomes the red channel and the <code>y</code> coordinate becomes the green channel. The blue channel is always set to 0, and the alpha (opacity) channel is always set to 1 (fully opaque).</li>
</ol>
<p dir="auto">In GLES, <em>uniforms</em> are inputs to the function, that are the same for every pixel on the screen.
These need to be passed in via the <code>parameters</code> property of the <code>&lt;WebGlShader&gt;</code> component.
In this case, we need to pass in two uniforms: <code>u_resolution</code> and <code>u_offset</code>.
Since these specific parameters are very commonly used, they are specially implemented in Svader
such that the <code>value</code> property of each parameter can simply be set to <code>"resolution"</code> and <code>"offset"</code> respectively.</p>
<p dir="auto">Lastly, the <code>&lt;WebGlShader&gt;</code> component accepts a fallback slot, which is rendered when the browser cannot render the shader.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">WebGL parameters</h4><a id="user-content-webgl-parameters" aria-label="Permalink: WebGL parameters" href="#webgl-parameters"></a></p>
<p dir="auto">The <code>parameters</code> property is an array of objects with the following properties:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>name</code></strong>: The name of the uniform parameter, e.g. <code>"my_uniform"</code>.
This must match the name of the parameter in the shader code.</p>
</li>
<li>
<p dir="auto"><strong><code>type</code></strong>: The type of the uniform parameter as it is written in the shader code, e.g. <code>"float"</code>.
If the <code>value</code> property is a <a href="#webgl-built-in-values">built-in value</a>, such as <code>"resolution"</code>,
the <code>type</code> will be determined automatically and should not be set.</p>
</li>
<li>
<p dir="auto"><strong><code>value</code></strong>: The value of the uniform parameter, or a string specifying a <a href="#webgl-built-in-values">built-in value</a>.
If not a built-in value, the type of this property must correspond to the <code>type</code> property, such that:</p>
<ul dir="auto">
<li><strong><code>float</code>, <code>int</code>, <code>uint</code></strong> is a <code>number</code>,</li>
<li><strong><code>vecN</code>, <code>ivecN</code>, <code>uvecN</code></strong> is a <code>number[]</code> with a length of <code>N</code>, e.g. <code>vec2</code> -&gt; <code>[1.2, 3.4]</code>.</li>
<li><strong><code>matN</code></strong> is a <code>number[]</code> with a length of <code>N * N</code>, e.g. <code>mat2</code> -&gt; <code>[1, 2, 3, 4]</code>.</li>
</ul>
</li>
</ul>
<p dir="auto"><h5 tabindex="-1" dir="auto">WebGL built-in values</h5><a id="user-content-webgl-built-in-values" aria-label="Permalink: WebGL built-in values" href="#webgl-built-in-values"></a></p>
<p dir="auto">Some types of uniforms are used very often. These are implemented in Svader itself, and referred to as <em>built-in values</em>.
To use these, the <code>value</code> property of the parameter object must be set to a string matching one of the following:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>"resolution"</code></strong>: A <code>vec2</code> of the canvas width and height in physical device pixels.</p>
</li>
<li>
<p dir="auto"><strong><code>"scale"</code></strong>: A <code>float</code> of the ratio between CSS pixels and physical device pixels, i.e. zoom level.
For example, if the browser has been zoomed to 150%, the <code>scale</code> parameter will be <code>1.5</code>.</p>
</li>
<li>
<p dir="auto"><strong><code>"time"</code></strong>: A <code>float</code> of the current time in seconds.
NOTE: Passing this parameter to the shader will cause it to rerender every frame.</p>
</li>
<li>
<p dir="auto"><strong><code>"offset"</code></strong>: A <code>vec2</code> to be added to the <code>gl_FragCoord.xy</code> of the fragment shader.
Sometimes the size of the canvas is limited by hardware.
To compensate for this, Svader creates a virtual canvas with a smaller cutout shifting around to cover the screen.
The <code>"resolution"</code> parameter is automatically adjusted to match the size of this virtual canvas, but for technical reasons,
the <code>gl_FragCoord.xy</code> cannot be adjusted from the outside.
Therefore, the <code>"offset"</code> parameter is provided to be manually added to these coordinates.</p>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">WebGPU</h3><a id="user-content-webgpu" aria-label="Permalink: WebGPU" href="#webgpu"></a></p>
<p dir="auto">The following is a minimal example of a WebGPU fragment shader component.</p>
<p dir="auto"><a href="https://svelte.dev/repl/498446d091964bb199e6a88bce90feae?version=5.1.10" rel="nofollow"><strong>View in REPL</strong></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="<script>
    import { WebGpuShader } from &quot;svader&quot;;

    const shaderCode = `
        @group(0) @binding(0) var<uniform> resolution: vec2f;
        @group(0) @binding(1) var<uniform> offset: vec2f;

        @fragment
        fn main(@builtin(position) raw_pos: vec4f) -> @location(0) vec4f {
            let pos = raw_pos.xy + offset;
            let st = pos / resolution;
            return vec4f(st, 0.0, 1.0);
        }
    `;
</script>

<WebGpuShader
    width=&quot;500px&quot;
    height=&quot;500px&quot;
    code={shaderCode}
    parameters={[
        {
            label: &quot;Resolution&quot;,
            binding: 0,
            value: &quot;resolution&quot;,
        },
        {
            label: &quot;Offset&quot;,
            binding: 1,
            value: &quot;offset&quot;,
        },
    ]}
>
    <div class=&quot;fallback&quot;>WebGPU not supported in this environment.</div>
</WebGpuShader>"><pre>&lt;<span>script</span>&gt;<span></span>
<span>    <span>import</span> { <span>WebGpuShader</span> } <span>from</span> <span><span>"</span>svader<span>"</span></span>;</span>
<span></span>
<span>    <span>const</span> <span>shaderCode</span> <span>=</span> <span><span>`</span></span></span>
<span><span>        @group(0) @binding(0) var&lt;uniform&gt; resolution: vec2f;</span></span>
<span><span>        @group(0) @binding(1) var&lt;uniform&gt; offset: vec2f;</span></span>
<span><span></span></span>
<span><span>        @fragment</span></span>
<span><span>        fn main(@builtin(position) raw_pos: vec4f) -&gt; @location(0) vec4f {</span></span>
<span><span>            let pos = raw_pos.xy + offset;</span></span>
<span><span>            let st = pos / resolution;</span></span>
<span><span>            return vec4f(st, 0.0, 1.0);</span></span>
<span><span>        }</span></span>
<span><span>    <span>`</span></span>;</span>
<span></span>&lt;/<span>script</span>&gt;

&lt;<span>WebGpuShader</span>
    <span>width</span>=<span><span>"</span>500px<span>"</span></span>
    <span>height</span>=<span><span>"</span>500px<span>"</span></span>
    <span>code</span>={<span>shaderCode</span>}
    <span>parameters</span>={[
        {
            label: <span><span>"</span>Resolution<span>"</span></span>,
            binding: <span>0</span>,
            value: <span><span>"</span>resolution<span>"</span></span>,
        },
        {
            label: <span><span>"</span>Offset<span>"</span></span>,
            binding: <span>1</span>,
            value: <span><span>"</span>offset<span>"</span></span>,
        },
    ]}
&gt;
    &lt;<span>div</span> <span>class</span>=<span><span>"</span>fallback<span>"</span></span>&gt;WebGPU not supported in this environment.&lt;/<span>div</span>&gt;
&lt;/<span>WebGpuShader</span>&gt;</pre></div>
<p dir="auto">This produces the following output:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/debugShaderWebGpu.png"><img src="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/debugShaderWebGpu.png" alt="Output of the WebGPU shader"></a></p>
<p dir="auto">Here, the <code>shaderCode</code> variable is a string containing the <a href="https://google.github.io/tour-of-wgsl/" rel="nofollow">WGSL</a> shader code.
For simplicity, this is stored as a string, but it would typically be stored in a separate <code>myShader.wgsl</code> file.
When loading the shader from a file, it might be useful to know that the <code>code</code> property accepts both a <code>string</code> and a <code>Promise&lt;string&gt;</code>.</p>
<p dir="auto">What this code does is:</p>
<ol dir="auto">
<li>Add the given <code>offset</code> uniform variable to the 2D coordinates of the pixel given by <code>raw_pos.xy</code>.</li>
<li>Divide the resulting coordinates entrywise by the <code>resolution</code> uniform to normalize the coordinates between 0 and 1.</li>
<li>Return the normalized coordinates as the color of the pixel, such that the <code>x</code> coordinate becomes the red channel and the <code>y</code> coordinate becomes the green channel. The blue channel is always set to 0, and the alpha (opacity) channel is always set to 1 (fully opaque).</li>
</ol>
<p dir="auto">In WGSL, these <code>var&lt;uniform&gt;</code>s are the primary way to pass in parameters to the shader.
These need to be passed in via the <code>parameters</code> property of the <code>&lt;WebGpuShader&gt;</code> component.
In this case, we need to pass in two uniforms: <code>resolution</code> and <code>offset</code>.
Since these specific parameters are very commonly used, they are specially implemented in Svader
such that the <code>value</code> property of each parameter can simply be set to <code>"resolution"</code> and <code>"offset"</code> respectively.</p>
<p dir="auto">Lastly, the <code>&lt;WebGpuShader&gt;</code> component accepts a fallback slot, which is rendered when the browser cannot render the shader.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">WebGPU parameters</h4><a id="user-content-webgpu-parameters" aria-label="Permalink: WebGPU parameters" href="#webgpu-parameters"></a></p>
<p dir="auto">The <code>parameters</code> property is an array of objects with the following properties:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>label</code></strong>: The name of the parameter to be used for debugging.
This does not have to correspond to the name of the parameter in the shader code.</p>
</li>
<li>
<p dir="auto"><strong><code>binding</code></strong>: An integer used to match the parameter to the variable in the shader code.
This has to match the <code>binding</code> property of the parameter in the shader code, e.g. for the variable declaration</p>
<div dir="auto" data-snippet-clipboard-copy-content="@group(0) @binding(42) var<uniform> my_variable: f32;"><pre>@<span>group</span>(<span>0</span>) @<span>binding</span>(<span>42</span>) <span>var</span>&lt;<span>uniform</span>&gt; <span>my_variable</span>: <span>f32</span>;</pre></div>
<p dir="auto">the <code>binding</code> property should be <code>42</code>.</p>
</li>
<li>
<p dir="auto"><strong><code>value</code></strong>: The value of the parameter, or a string specifying a <a href="#webgpu-built-in-values">built-in value</a>.
If not a built-in value, this parameter should be an <code>ArrayBuffer</code>/<code>ArrayBufferView</code>.
For example, to pass in a number to an <code>f32</code> parameter, it can be constructed like <code>new Float32Array([myNumberValue])</code>.</p>
</li>
<li>
<p dir="auto"><strong><code>storage</code></strong>: [Optional - defaults to <code>false</code>] Whether the parameter is a storage variable rather than a uniform variable.
This has to match the declaration in the shader code, e.g. for the variable declaration</p>
<div dir="auto" data-snippet-clipboard-copy-content="@group(0) @binding(0) var<uniform> my_variable: f32;"><pre>@<span>group</span>(<span>0</span>) @<span>binding</span>(<span>0</span>) <span>var</span>&lt;<span>uniform</span>&gt; <span>my_variable</span>: <span>f32</span>;</pre></div>
<p dir="auto">the <code>storage</code> property should be <code>false</code> or omitted, and for</p>
<div dir="auto" data-snippet-clipboard-copy-content="@group(0) @binding(0) var<storage, read> my_variable: f32;"><pre>@<span>group</span>(<span>0</span>) @<span>binding</span>(<span>0</span>) <span>var</span>&lt;<span>storage</span>, <span>read</span>&gt; <span>my_variable</span>: <span>f32</span>;</pre></div>
<p dir="auto">it should be <code>true</code>.
Note that Svader currently only supports <code>var&lt;storage, read&gt;</code> and not <code>var&lt;storage, read_write&gt;</code>.</p>
</li>
</ul>
<p dir="auto"><h5 tabindex="-1" dir="auto">WebGPU built-in values</h5><a id="user-content-webgpu-built-in-values" aria-label="Permalink: WebGPU built-in values" href="#webgpu-built-in-values"></a></p>
<p dir="auto">Some types of inputs are used very often. These are implemented in Svader itself, and referred to as <em>built-in values</em>.
To use these, the <code>value</code> property of the parameter object must be set to a string matching one of the following:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>"resolution"</code></strong>: A <code>vec2f</code> of the canvas width and height in physical device pixels.</p>
</li>
<li>
<p dir="auto"><strong><code>"scale"</code></strong>: An <code>f32</code> of the ratio between CSS pixels and physical device pixels, i.e. zoom level.
For example, if the browser has been zoomed to 150%, the <code>scale</code> parameter will be <code>1.5</code>.</p>
</li>
<li>
<p dir="auto"><strong><code>"time"</code></strong>: An <code>f32</code> of the current time in seconds.
NOTE: Passing this parameter to the shader will cause it to rerender every frame.</p>
</li>
<li>
<p dir="auto"><strong><code>"offset"</code></strong>: A <code>vec2f</code> to be added to the <code>@builtin(position)</code> of the fragment shader.
Sometimes the size of the canvas is limited by hardware.
To compensate for this, Svader creates a virtual canvas with a smaller cutout shifting around to cover the screen.
The <code>"resolution"</code> parameter is automatically adjusted to match the size of this virtual canvas, but for technical reasons,
the <code>@builtin(position)</code> cannot be adjusted from the outside.
Therefore, the <code>"offset"</code> parameter is provided to be manually added to these coordinates.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">WebGL vs. WebGPU</h2><a id="user-content-webgl-vs-webgpu" aria-label="Permalink: WebGL vs. WebGPU" href="#webgl-vs-webgpu"></a></p>
<p dir="auto"><strong>For practical applications, default to using WebGL.</strong></p>
<p dir="auto">WebGL and WebGPU are both rendering APIs that allow web applications to render GPU-accelerated graphics.</p>
<p dir="auto">WebGL is the older of the two and is supported by <a href="https://caniuse.com/webgl" rel="nofollow">all modern browsers</a>.</p>
<p dir="auto">WebGPU is still in the experimental stage and is only supported in a <a href="https://caniuse.com/webgpu" rel="nofollow">few browsers</a>.
However, it supports certain features that WebGL does not. For example, as of writing, WebGL in Google Chrome only supports having 8 canvases active in the document at once, while WebGPU supports a practically unlimited number.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Svader is licensed under the <a href="https://github.com/sockmaster27/svader/blob/master/LICENSE.md">MIT License</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I made a free Figma library packed with components for fast prototyping (177 pts)]]></title>
            <link>https://veryfront.com/figma-kit</link>
            <guid>42415637</guid>
            <pubDate>Sat, 14 Dec 2024 08:54:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://veryfront.com/figma-kit">https://veryfront.com/figma-kit</a>, See on <a href="https://news.ycombinator.com/item?id=42415637">Hacker News</a></p>
Couldn't get https://veryfront.com/figma-kit: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Uv, a fast Python package and project manager (170 pts)]]></title>
            <link>https://docs.astral.sh/uv/</link>
            <guid>42415602</guid>
            <pubDate>Sat, 14 Dec 2024 08:44:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://docs.astral.sh/uv/">https://docs.astral.sh/uv/</a>, See on <a href="https://news.ycombinator.com/item?id=42415602">Hacker News</a></p>
Couldn't get https://docs.astral.sh/uv/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[What Is Entropy? A Measure of Just How Little We Know (203 pts)]]></title>
            <link>https://www.quantamagazine.org/what-is-entropy-a-measure-of-just-how-little-we-really-know-20241213/</link>
            <guid>42415386</guid>
            <pubDate>Sat, 14 Dec 2024 07:49:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.quantamagazine.org/what-is-entropy-a-measure-of-just-how-little-we-really-know-20241213/">https://www.quantamagazine.org/what-is-entropy-a-measure-of-just-how-little-we-really-know-20241213/</a>, See on <a href="https://news.ycombinator.com/item?id=42415386">Hacker News</a></p>
Couldn't get https://www.quantamagazine.org/what-is-entropy-a-measure-of-just-how-little-we-really-know-20241213/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Byte Latent Transformer: Patches Scale Better Than Tokens (258 pts)]]></title>
            <link>https://ai.meta.com/research/publications/byte-latent-transformer-patches-scale-better-than-tokens/?_fb_noscript=1</link>
            <guid>42415122</guid>
            <pubDate>Sat, 14 Dec 2024 06:36:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ai.meta.com/research/publications/byte-latent-transformer-patches-scale-better-than-tokens/?_fb_noscript=1">https://ai.meta.com/research/publications/byte-latent-transformer-patches-scale-better-than-tokens/?_fb_noscript=1</a>, See on <a href="https://news.ycombinator.com/item?id=42415122">Hacker News</a></p>
Couldn't get https://ai.meta.com/research/publications/byte-latent-transformer-patches-scale-better-than-tokens/?_fb_noscript=1: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Htmx 2.0.4 Released (186 pts)]]></title>
            <link>https://github.com/bigskysoftware/htmx/blob/v2.0.4/CHANGELOG.md</link>
            <guid>42413845</guid>
            <pubDate>Sat, 14 Dec 2024 01:23:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/CHANGELOG.md">https://github.com/bigskysoftware/htmx/blob/v2.0.4/CHANGELOG.md</a>, See on <a href="https://news.ycombinator.com/item?id=42413845">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true" aria-labelledby="file-name-id-wide file-name-id-mobile"><article itemprop="text">
<p dir="auto"><h2 tabindex="-1" dir="auto">[2.0.4] - 2024-12-13</h2><a id="user-content-204---2024-12-13" aria-label="Permalink: [2.0.4] - 2024-12-13" href="#204---2024-12-13"></a></p>
<ul dir="auto">
<li>Calling <code>htmx.ajax</code> with no target or source now defaults to body (previously did nothing)</li>
<li>Nested <a href="https://github.com/bigskysoftware/htmx/commit/5ab508f6523a37890932176f7dc54be9f7a281ff">shadow root</a> fix</li>
<li>The <code>htmx:trigger</code> event now properly fires on the synthetic <code>load</code> event</li>
<li>The synthetic <code>load</code> event will not be re-called when an element is reinitialized via <code>htmx.process()</code></li>
<li>Boosted <code>&lt;form&gt;</code> tags that issue a <code>GET</code> with no or empty <code>action</code> attributes will properly replace all existing query
parameters</li>
<li>Events that are triggered on htmx-powered elements located outside a form, but that refer to a form via the<code>form</code>
attribute, now properly cancel the submission of the referred-to form</li>
<li>Extension Updates
<ul dir="auto">
<li><code>preload</code> extension was
<a href="https://github.com/bigskysoftware/htmx-extensions/commit/fb68dfb48063505d2d7420d717c24ac9a8dae244">completely reworked</a>
by @marisst to be compatible with <code>hx-boost</code>, not cause side effect, etc. Thank you!</li>
<li><code>response-targets</code> was updated to not use deprecated methods</li>
<li>A <a href="https://github.com/bigskysoftware/htmx-extensions/commit/e87e1c3d0bf728b4e43861c7459f3f937883eb99">small fix</a> to
<code>ws</code> to avoid an error when closing in some cases</li>
<li>The <code>head-support</code> extension was updated to work with the <code>sse</code> extension</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[2.0.3] - 2024-10-03</h2><a id="user-content-203---2024-10-03" aria-label="Permalink: [2.0.3] - 2024-10-03" href="#203---2024-10-03"></a></p>
<ul dir="auto">
<li>Added support for the experimental <code>moveBefore()</code> functionality in <a href="https://www.google.com/chrome/canary/" rel="nofollow">Chrome Canary</a>,
see the <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/examples/move-before">demo page</a> for more information.</li>
<li>Fixed <code>revealed</code> event when a resize reveals an element</li>
<li>Enabled <code>hx-preserve</code> in oob-swaps</li>
<li>Better degredation of <code>hx-boost</code> on forms with query parameters in their <code>action</code></li>
<li>Improved shadowRoot support</li>
<li>Many smaller bug fixes</li>
<li>Moved the core extension documentation back to <a href="https://htmx.org/extensions" rel="nofollow">https://htmx.org/extensions</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[2.0.2] - 2024-08-12</h2><a id="user-content-202---2024-08-12" aria-label="Permalink: [2.0.2] - 2024-08-12" href="#202---2024-08-12"></a></p>
<ul dir="auto">
<li>no longer boost forms of type <code>dialog</code></li>
<li>properly trigger the <code>htmx:trigger</code> event when an event is delayed or throttled</li>
<li>file upload is now fixed</li>
<li>empty templates that are not used for oob swaps are no longer removed from the DOM</li>
<li>request indicators are not removed when a full page redirect or refresh occurs</li>
<li>elements that have been disabled for a request are properly re-enabled before snapshotting for history</li>
<li>you can now trigger events on other elements using the <code>HX-Trigger</code> response header</li>
<li>The <code>.d.ts</code> file should now work properly</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[2.0.1] - 2024-07-12</h2><a id="user-content-201---2024-07-12" aria-label="Permalink: [2.0.1] - 2024-07-12" href="#201---2024-07-12"></a></p>
<ul dir="auto">
<li>Make the <code>/dist/htmx.esm.js</code> file the <code>main</code> file in <code>package.json</code> to make installing htmx smoother</li>
<li>Update <code>htmx.d.ts</code> &amp; include it in the distribution</li>
<li>A fix to avoid removing text-only templates on htmx cleanup</li>
<li>A fix for outerHTML swapping of the <code>body</code> tag</li>
<li>Many docs fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[2.0.0] - 2024-06-17</h2><a id="user-content-200---2024-06-17" aria-label="Permalink: [2.0.0] - 2024-06-17" href="#200---2024-06-17"></a></p>
<ul dir="auto">
<li>Removed extensions and moved to their own repos linked off of <a href="https://extensions.htmx.org/" rel="nofollow">https://extensions.htmx.org</a></li>
<li>The website now supports dark mode! (Thanks <a href="https://github.com/pokonski">@pokonski</a>!)</li>
<li>The older, deprecated <a href="https://v1.htmx.org/docs/#websockets-and-sse" rel="nofollow">SSE &amp; WS</a> attributes were removed</li>
<li>Better support for <a href="https://htmx.org/examples/web-components/" rel="nofollow">Web Components &amp; Shadow DOM</a></li>
<li>HTTP <code>DELETE</code> requests now use parameters, rather than form encoded bodies, for their payload (This is in accordance w/ the spec.)</li>
<li>Module support was split into different files:</li>
<li>We now provide specific files in <code>/dist</code> for the various JavaScript module styles:
<ul dir="auto">
<li>ESM Modules: <code>/dist/htmx.esm.js</code></li>
<li>AMD Modules: <code>/dist/htmx.amd.js</code></li>
<li>CJS Modules: <code>/dist/htmx.cjs.js</code></li>
<li>The <code>/dist/htmx.js</code> file continues to be browser-loadable</li>
</ul>
</li>
<li>The <code>hx-on</code> attribute, with its special syntax, has been removed in favor of the less-hacky <code>hx-on:</code> syntax.</li>
<li>See the <a href="https://htmx.org/migration-guide-htmx-1/" rel="nofollow">Upgrade Guide</a> for more details on upgrade steps</li>
<li>The <code>selectAndSwap()</code> internal API method was replaced with the public (and much better) <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/api/#swap"><code>swap()</code></a> method</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.12] - 2024-04-17</h2><a id="user-content-1912---2024-04-17" aria-label="Permalink: [1.9.12] - 2024-04-17" href="#1912---2024-04-17"></a></p>
<ul dir="auto">
<li><a href="https://github.com/bigskysoftware/htmx/commit/e64238dba3113c2eabe26b1e9e9ba7fe29ba3010">IE Fixes</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.11] - 2024-03-15</h2><a id="user-content-1911---2024-03-15" aria-label="Permalink: [1.9.11] - 2024-03-15" href="#1911---2024-03-15"></a></p>
<ul dir="auto">
<li>Fix for new issue w/ web sockets &amp; SSE on iOS 17.4 (thanks apple!)</li>
<li>Fix for double script execution issue when using template parsing</li>
<li>Fix TypeScript types file</li>
<li>Fix SSE Ext: reinstantiate EventSource listeners upon reconnection logic (#2272)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.10] - 2023-12-21</h2><a id="user-content-1910---2023-12-21" aria-label="Permalink: [1.9.10] - 2023-12-21" href="#1910---2023-12-21"></a></p>
<ul dir="auto">
<li><code>hx-on*</code> attributes now support the form <code>hx-on-</code>, with a trailing dash, to better support template systems (such as EJS)
that do not like double colons in HTML attributes.</li>
<li>Added an <code>htmx.config.triggerSpecsCache</code> configuration property that can be set to an object to cache the trigger spec parsing</li>
<li>Added a <code>path-params.js</code> extension for populating request paths with variable values</li>
<li>Many smaller bug fixes &amp; improvements</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.9] - 2023-11-21</h2><a id="user-content-199---2023-11-21" aria-label="Permalink: [1.9.9] - 2023-11-21" href="#199---2023-11-21"></a></p>
<ul dir="auto">
<li>Allow CSS selectors with whitespace in attributes like <code>hx-target</code> by using parens or curly-braces</li>
<li>Properly allow users to override the <code>Content-Type</code> request header</li>
<li>Added the <code>select</code> option to <code>htmx.ajax()</code></li>
<li>Fixed a race condition in readystate detection that lead to htmx not being initialized in some scenarios with 3rd
party script loaders</li>
<li>Fixed a bug that caused relative resources to resolve against the wrong base URL when a new URL is pushed</li>
<li>Fixed a UI issue that could cause indicators to briefly flash</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.8] - 2023-11-06</h2><a id="user-content-198---2023-11-06" aria-label="Permalink: [1.9.8] - 2023-11-06" href="#198---2023-11-06"></a></p>
<ul dir="auto">
<li>Fixed a few npm &amp; build related issues</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.7] - 2023-11-03</h2><a id="user-content-197---2023-11-03" aria-label="Permalink: [1.9.7] - 2023-11-03" href="#197---2023-11-03"></a></p>
<ul dir="auto">
<li>Fixed a bug where a button associated with a form that is swapped out of the DOM caused errors</li>
<li>The <code>hx-target-error</code> attribute was added to the <code>response-targets</code> extension, allowing you to capture all 400 &amp; 500
responses with a single attribute</li>
<li><code>hx-on</code> now properly supports multiple listeners</li>
<li>The <code>hx-confirm</code> prompt is now passed into custom confirmation handlers</li>
<li><code>next</code> and <code>previous</code> are now valid <em>extended CSS</em> symbols in htmx</li>
<li>The <code>htmx:beforeHistoryUpdate</code> event was added</li>
<li>Properly ignore the <code>dialog</code> formmethod on buttons when resolving the HTTP method to use</li>
<li>Added a <code>htmx.config.scrollIntoViewOnBoost</code> option that may be set to <code>false</code> to disable scrolling the top of the
body into view for boosted elements</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.6] - 2023-09-22</h2><a id="user-content-196---2023-09-22" aria-label="Permalink: [1.9.6] - 2023-09-22" href="#196---2023-09-22"></a></p>
<ul dir="auto">
<li>IE support has been restored (thank you @telroshan!)</li>
<li>Introduced the <code>hx-disabled-elt</code> attribute to allow specifying elements to disable during a request</li>
<li>You can now explicitly decide to ignore <code>title</code> tags found in new content via the <code>ignoreTitle</code> option in <code>hx-swap</code> and the <code>htmx.config.ignoreTitle</code> configuration variable.</li>
<li><code>hx-swap</code> modifiers may be used without explicitly specifying the swap mechanism</li>
<li>Arrays are now supported in the <code>client-side-templates</code> extension</li>
<li>XSLT support in the <code>client-side-templates</code> extension</li>
<li>Support <code>preventDefault()</code> in extension event handling</li>
<li>Allow the <code>HX-Refresh</code> header to apply even after an <code>HX-Redirect</code> has occurred</li>
<li>the <code>formaction</code> and <code>formmethod</code> attributes on buttons are now properly respected</li>
<li><code>hx-on</code> can now handle events with dots in their name</li>
<li><code>htmx.ajax()</code> now always returns a Promise</li>
<li>Handle leading <code>style</code> tag parsing more effectively</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.5] - 2023-08-25</h2><a id="user-content-195---2023-08-25" aria-label="Permalink: [1.9.5] - 2023-08-25" href="#195---2023-08-25"></a></p>
<ul dir="auto">
<li>Web sockets now properly pass the target id in the HEADERS struct</li>
<li>A very rare loading state bug was fixed (see <a href="https://github.com/bigskysoftware/htmx/commit/93bd81b6d003bb7bc445f10192bdb8089fa3495d">https://github.com/bigskysoftware/htmx/commit/93bd81b6d003bb7bc445f10192bdb8089fa3495d</a>)</li>
<li><code>hx-on</code> will not evaluate if <code>allowEval</code> is set to false</li>
<li>You can disable the interpretation of script tags with the new <code>htmx.config.allowScriptTags</code> config variable</li>
<li>You can now disable htmx-based requests to non-origin hosts via the <code>htmx.config.selfRequestsOnly</code> config variable</li>
<li>The <a href="https://htmx.org/docs#security" rel="nofollow">Security</a> section has been expanded to help developers better understand how to
properly secure their htmx-based applications.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.4] - 2023-07-25</h2><a id="user-content-194---2023-07-25" aria-label="Permalink: [1.9.4] - 2023-07-25" href="#194---2023-07-25"></a></p>
<ul dir="auto">
<li>This is a bug-fix release for the most part, w/a heavy dose of @telroshan</li>
<li>The <code>HX-Trigger</code> response header now supports comma separated event names</li>
<li>Submit buttons that use the <code>form</code> attribute now work correctly</li>
<li>The <code>changed</code> modifier now uses the triggering element, rather than the element the <code>hx-trigger</code> is defined on</li>
<li><code>hx-disable</code> is now handled dynamically so it can be added and removed</li>
<li>IE11 compatibility restored! (maybe, hard to test)</li>
<li>Fixed bug with <code>hx-on</code> event handler cleanup</li>
<li>Many smaller bug fixes, typo fixes and general improvements</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.3] - 2023-07-14</h2><a id="user-content-193---2023-07-14" aria-label="Permalink: [1.9.3] - 2023-07-14" href="#193---2023-07-14"></a></p>
<ul dir="auto">
<li>The <code>hx-on</code> attribute has been deprecated (sorry) in favor of <code>hx-on:&lt;event name&gt;</code> attributes.  See <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/attributes/hx-on"><code>hx-on</code></a> for more information.</li>
<li>We now have functioning CI using GitHub actions!</li>
<li>You can now configure if a type of HTTP request uses the body for parameters or not.  In particular, the <code>DELETE</code> <em>should</em> use
query parameters, according to the spec.  htmx has used the body, instead.  To avoid breaking code we are keeping this undefined
behavior for now, but allowing people to fix it for their use cases by updating the <code>htmx.config.methodsThatUseUrlParams</code> config
option.  Thank you to Alex and Vincent for their feedback and work on this issue!</li>
<li>The <code>this</code> symbol is now available in event filter expressions, and refers to the element the <code>hx-trigger</code> is on</li>
<li>Fix bug where the <code>htmx:afterSettle</code> event was raised multiple times with oob swaps occurred</li>
<li>A large number of accessibility fixes were made in the docs (Thank you Denis &amp; crew!)</li>
<li>Fixed bug w/ WebSocket extension initialization caused by "naked" <code>hx-trigger</code> feature</li>
<li>The <code>HX-Reselect</code> HTTP response header has been added to change the selection from the returned content</li>
<li>Many other smaller bug fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.2] - 2023-04-28</h2><a id="user-content-192---2023-04-28" aria-label="Permalink: [1.9.2] - 2023-04-28" href="#192---2023-04-28"></a></p>
<ul dir="auto">
<li>Fixed bug w/ <code>hx-on</code> not properly de-initializing</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.1] - 2023-04-27</h2><a id="user-content-191---2023-04-27" aria-label="Permalink: [1.9.1] - 2023-04-27" href="#191---2023-04-27"></a></p>
<ul dir="auto">
<li>Fixed a bug with the new naked triggers that prevented boosted elements with explicit <code>hx-trigger</code>'s from functioning
properly</li>
<li>Added code to play well with other libraries that also use the <code>window.onpopstate</code> Daily reminder: <a href="https://htmx.org/img/memes/javascripthistory.png" rel="nofollow">https://htmx.org/img/memes/javascripthistory.png</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.9.0] - 2023-04-11</h2><a id="user-content-190---2023-04-11" aria-label="Permalink: [1.9.0] - 2023-04-11" href="#190---2023-04-11"></a></p>
<ul dir="auto">
<li>Support for generalized inline event handling via the new <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/attributes/hx-on"><code>hx-on</code></a> attribute, which addresses
the shortcoming of limited <a href="https://developer.mozilla.org/en-US/docs/Web/Events/Event_handlers#using_onevent_properties" rel="nofollow"><code>onevent</code> properties</a> attributes in HTML.</li>
<li>Support for <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/docs#view-transitions">view transitions</a>, based on the experimental <a href="https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API" rel="nofollow">View Transitions API</a>
currently available in Chrome 111+ and coming to other browsers soon.</li>
<li>Support for "naked" <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/attributes/hx-trigger"><code>hx-trigger</code></a> attributes, where an <code>hx-trigger</code> is present on an element
that does not have an <code>hx-get</code>, etc. defined on it.  Instead, it will trigger the new <code>htmx:triggered</code> event, which can
be responded to via your <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/docs#scripting">preferred scripting solution</a>.</li>
<li>A memory leak fix by <a href="https://github.com/bigskysoftware/htmx/commit/8cd3a480a7388877628ce8b9b8e50cd5df48bb81">@croxton</a></li>
<li>The htmx website has been migrated from 11ty to <a href="https://www.getzola.org/" rel="nofollow">zola</a> by <a href="https://github.com/danieljsummers">@danieljsummers</a>, cutting
way down on the number of "development" javascript dependencies</li>
<li>Many other smaller bug fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.8.6] - 2023-03-02</h2><a id="user-content-186---2023-03-02" aria-label="Permalink: [1.8.6] - 2023-03-02" href="#186---2023-03-02"></a></p>
<ul dir="auto">
<li>ESM support!</li>
<li>Sass has been vanquished from the htmx.org website, which should set us up for some good progress going forward</li>
<li>Fixed a bug where the <code>changed</code> modifier on <code>keyup</code> did not work properly if an input was tabbed into</li>
<li>Many other smaller bug fixes and doc fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.8.5] - 2023-01-17</h2><a id="user-content-185---2023-01-17" aria-label="Permalink: [1.8.5] - 2023-01-17" href="#185---2023-01-17"></a></p>
<ul dir="auto">
<li>Support a new optional cache-busting configuration option, <code>getCacheBusterParam</code>, to allow browsers to disambiguate
between <code>GET</code> requests from htmx and from the raw browser</li>
<li>Support new <code>hx-history='false'</code> attribute, to prevent sensitive data from being stored in the history cache. (Thank you @croxton!)</li>
<li>Extensive new event-oriented features are available in the <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/extensions/web-sockets">Web Socket</a> extension (Thank you @Renerick!)</li>
<li>A bug fix for when a form contains multiple empty input values with the same name (Thank you @bluekeyes!)</li>
<li>A bug fix around inputs that throw exceptions when calling <code>setSelectionRange()</code> (Thank you @gone!)</li>
<li>A bug fix to pass through the proper event for the <code>htmx:configRequest</code> event</li>
<li>A bug fix/improvement for the <code>preload</code> extension</li>
<li>Many other small bug fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.8.4] - 2022-11-05</h2><a id="user-content-184---2022-11-05" aria-label="Permalink: [1.8.4] - 2022-11-05" href="#184---2022-11-05"></a></p>
<ul dir="auto">
<li>Fix the <em>exact same</em> regression in <code>revealed</code> logic as in 1.8.2</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.8.3] - 2022-11-04</h2><a id="user-content-183---2022-11-04" aria-label="Permalink: [1.8.3] - 2022-11-04" href="#183---2022-11-04"></a></p>
<ul dir="auto">
<li>A new <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/events#htmx:confirm"><code>htmx:confirm</code> event</a> was added that allows for asynchronous confirmation dialogs to
be integrated into htmx requests</li>
<li>The new <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/extensions/head-support">head-support</a> extension allows for more elaborate head tag merging than standard htmx
supports.  This functionality may be integrated into htmx 2.0, depending on feedback.</li>
<li>The new <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/extensions/multi-swap">multi-swap</a> provides more elaborate swapping of multiple elements on a screen using
a custom swap strategy</li>
<li>Many doc fixes (thank you to everyone who contributed!)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.8.2] - 2022-10-12</h2><a id="user-content-182---2022-10-12" aria-label="Permalink: [1.8.2] - 2022-10-12" href="#182---2022-10-12"></a></p>
<ul dir="auto">
<li>Fix regression in <code>revealed</code> logic</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.8.1] - 2022-10-11</h2><a id="user-content-181---2022-10-11" aria-label="Permalink: [1.8.1] - 2022-10-11" href="#181---2022-10-11"></a></p>
<ul dir="auto">
<li>We now keep a count of outstanding requests for an indicator, so more than one overlapping request can share the same
indicator without issues</li>
<li>We now track the attribute state of an element and re-initialize it if <code>htmx.process()</code> is called on the element and
the attributes have changed</li>
<li><a href="https://github.com/bigskysoftware/idiomorph">Idiomorph</a> is now available for all your morph-swapping needs</li>
<li>The <code>unset</code> directive now works properly for <code>hx-vals</code> and <code>hx-vars</code></li>
<li>The title of the page is now properly set on a history cache miss</li>
<li>The new <a href="https://htmx.org/attributes/hx-validate" rel="nofollow"><code>hx-validate</code></a> attribute will force elements to validate before a request, even if
they are not within a form being submitted</li>
<li>Many smaller bug and docs fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.8.0] - 2022-7-12</h2><a id="user-content-180---2022-7-12" aria-label="Permalink: [1.8.0] - 2022-7-12" href="#180---2022-7-12"></a></p>
<ul dir="auto">
<li><strong>NOTE</strong>: This release involved some changes to touchy code (e.g. history support) so please test thoroughly and let
us know if you see any issues</li>
<li>Boosted forms now will automatically push URLs into history as with links.  The <a href="https://caniuse.com/mdn-api_xmlhttprequest_responseurl" rel="nofollow">response URL</a>
detection API support is good enough that we feel comfortable making this the default now.
<ul dir="auto">
<li>If you do not want this behavior you can add <code>hx-push-url='false'</code> to your boosted forms</li>
</ul>
</li>
<li>The <a href="https://htmx.org/attributes/hx-replace-url" rel="nofollow"><code>hx-replace-url</code></a> attribute was introduced, allowing you to replace
the current URL in history (to complement <code>hx-push-url</code>)</li>
<li>Bug fix - if htmx is included in a page more than once, we do not process elements multiple times</li>
<li>Bug fix - When localStorage is not available we do not attempt to save history in it</li>
<li><a href="https://github.com/bigskysoftware/htmx/issues/908" data-hovercard-type="issue" data-hovercard-url="/bigskysoftware/htmx/issues/908/hovercard">Bug fix</a> - <code>hx-boost</code> respects the <code>enctype</code> attribute</li>
<li><code>m</code> is now a valid timing modifier (e.g. <code>hx-trigger="every 2m"</code>)</li>
<li><code>next</code> and <code>previous</code> are now valid extended query selector modifiers, e.g. <code>hx-target="next div"</code> will target the
next div from the current element</li>
<li>Bug fix - <code>hx-boost</code> will boost anchor tags with a <code>_self</code> target</li>
<li>The <code>load</code> event now properly supports event filters</li>
<li>The websocket extension has had many improvements: (A huge thank you to Denis Palashevskii, our newest committer on the project!)
<ul dir="auto">
<li>Implement proper <code>hx-trigger</code> support</li>
<li>Expose trigger handling API to extensions</li>
<li>Implement safe message sending with sending queue</li>
<li>Fix <code>ws-send</code> attributes connecting in new elements</li>
<li>Fix OOB swapping of multiple elements in response</li>
</ul>
</li>
<li>The <code>HX-Location</code> response header now implements client-side redirects entirely within htmx</li>
<li>The <code>HX-Reswap</code> response header allows you to change the swap behavior of htmx</li>
<li>The new <a href="https://htmx.org/attributes/hx-select-oob" rel="nofollow"><code>hx-select-oob</code></a> attribute selects one or more elements from a server response to swap in via an out of band swap</li>
<li>The new <a href="https://htmx.org/attributes/hx-replace-url" rel="nofollow"><code>hx-replace-url</code></a> attribute can be used to replace the current URL in the location
bar (very similar to <code>hx-push-url</code> but no new history entry is created).  The corresponding <code>HX-Replace-Url</code> response header can be used as well.</li>
<li>htmx now properly handles anchors in both boosted links, as well as in <code>hx-get</code>, etc. attributes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.7.0] - 2022-02-22</h2><a id="user-content-170---2022-02-22" aria-label="Permalink: [1.7.0] - 2022-02-22" href="#170---2022-02-22"></a></p>
<ul dir="auto">
<li>The new <a href="https://htmx.org/attributes/hx-sync" rel="nofollow"><code>hx-sync</code></a> attribute allows you to synchronize multiple element requests on a single
element using various strategies (e.g. replace)
<ul dir="auto">
<li>You can also now abort an element making a request by sending it the <code>htmx:abort</code> event</li>
</ul>
</li>
<li><a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/extensions/server-sent-events">Server Sent Events</a> and <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/extensions/web-sockets">Web Sockets</a> are now available as
extensions, in addition to the normal core support.  In htmx 2.0, the current <code>hx-sse</code> and <code>hx-ws</code> attributes will be
moved entirely out to these new extensions.  By moving these features to extensions we will be able to add functionality
to both of them without compromising the core file size of htmx.  You are encouraged to move over to the new
extensions, but <code>hx-sse</code> and <code>hx-ws</code> will continue to work indefinitely in htmx 1.x.</li>
<li>You can now mask out <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/docs#inheritance">attribute inheritance</a> via the <a href="https://htmx.org/attributes/hx-disinherit" rel="nofollow"><code>hx-disinherit</code></a> attribute.</li>
<li>The <code>HX-Push</code> header can now have the <code>false</code> value, which will prevent a history snapshot from occurring.</li>
<li>Many new extensions, with a big thanks to all the contributors!
<ul dir="auto">
<li>A new <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/extensions/alpine-morph"><code>alpine-morph</code></a> allows you to use Alpine's swapping engine, which preserves Alpine</li>
<li>A <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/extensions/restored">restored</a> extension was added that will trigger a <code>restore</code> event on all elements in the DOM
on history restoration.</li>
<li>A <a href="https://github.com/bigskysoftware/htmx/blob/v2.0.4/extensions/loading-states">loading-states</a> extension was added that allows you to easily manage loading states
while a request is in flight, including disabling elements, and adding and removing CSS classes.</li>
</ul>
</li>
<li>The <code>this</code> symbol now resolves properly for the <a href="https://htmx.org/attributes/hx-include" rel="nofollow"><code>hx-include</code></a> and <a href="https://htmx.org/attributes/hx-indicator" rel="nofollow"><code>hx-indicator</code></a>
attributes</li>
<li>When an object is included via the <a href="https://htmx.org/attributes/hx-vals" rel="nofollow"><code>hx-vals</code></a> attribute, it will be converted to JSON (rather
than rendering as the string <code>[Object object]"</code>)</li>
<li>You can now pass a swap style in to the <code>htmx.ajax()</code> function call.</li>
<li>Poll events now contain a <code>target</code> attribute, allowing you to filter a poll on the element that is polling.</li>
<li>Two new Out Of Band-related events were added: <code>htmx:oobBeforeSwap</code> &amp; <code>htmx:oobAfterSwap</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.6.1] - 2021-11-22</h2><a id="user-content-161---2021-11-22" aria-label="Permalink: [1.6.1] - 2021-11-22" href="#161---2021-11-22"></a></p>
<ul dir="auto">
<li>A new <code>HX-Retarget</code> header allows you to change the default target of returned content</li>
<li>The <code>htmx:beforeSwap</code> event now includes another configurable property: <code>detail.isError</code> which can
be used to indicate if a given response should be treated as an error or not</li>
<li>The <code>htmx:afterRequest</code> event has two new detail properties: <code>success</code> and <code>failed</code>, allowing you to write
trigger filters in htmx or hyperscript:
<div dir="auto" data-snippet-clipboard-copy-content="  on htmx:afterRequest[failed]
    set #myCheckbox's checked to true"><pre>  <span>on</span> htmx:afterRequest[failed]
    <span>set</span> <span><span>#</span>myCheckbox's checked to true</span></pre></div>
</li>
<li>Fixed the <code>from:</code> option in <a href="https://htmx.org/attributes/hx-trigger" rel="nofollow"><code>hx-trigger</code></a> to support <code>closest &lt;CSS selector&gt;</code>
and <code>find &lt;CSS selector&gt;</code> forms</li>
<li>Don't boost anchor tags with an explicit <code>target</code> set</li>
<li>Don't cancel all events on boosted elements, only the events that naturally trigger them (click for anchors, submit
for forms)</li>
<li>Persist revealed state in the DOM so that on history navigation, revealed elements are not re-requested</li>
<li>Process all <a href="https://htmx.org/attributes/hx-ext" rel="nofollow"><code>hx-ext</code></a> attributes, even if no other htmx attribute is on the element</li>
<li>Snapshot the current URL on load so that history support works properly after a page refresh occurs</li>
<li>Many, many documentation updates (thank you to all the contributors!)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.6.0] - 2021-10-01</h2><a id="user-content-160---2021-10-01" aria-label="Permalink: [1.6.0] - 2021-10-01" href="#160---2021-10-01"></a></p>
<ul dir="auto">
<li>Completely reworked <code>&lt;script&gt;</code> tag support that now supports the <code>&lt;script src="...'/&gt;</code> form</li>
<li>You can now use the value <code>unset</code> to clear a property that would normally be inherited (e.g. hx-confirm)</li>
<li>The <code>htmx-added</code> class is added to new content before a swap and removed after the settle phase, which allows you
more flexibility in writing CSS transitions for added content (rather than relying on the target, as with <code>htmx-settling</code>)</li>
<li>The <code>htmx:beforeSwap</code> event has been updated to allow you to <a href="https://htmx.org/docs/#modifying_swapping_behavior_with_events" rel="nofollow">configure swapping</a>
behavior</li>
<li>Improved <code>&lt;title&gt;</code> extraction support</li>
<li>You can listen to events on the <code>window</code> object using the <code>from:</code> modifier in <code>hx-trigger</code></li>
<li>The <code>root</code> option of the <code>intersect</code> event was fixed</li>
<li>Boosted forms respect the <code>enctype</code> declaration</li>
<li>The <code>HX-Boosted</code> header will be sent on requests from boosted elements</li>
<li>Promises are not returned from the main ajax function unless it is an api call (i.e. <code>htmx.ajax</code>)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.5.0] - 2021-7-12</h2><a id="user-content-150---2021-7-12" aria-label="Permalink: [1.5.0] - 2021-7-12" href="#150---2021-7-12"></a></p>
<ul dir="auto">
<li>Support tracking of button clicked during a form submission</li>
<li>Conditional polling via the <a href="https://htmx.org/attributes/hx-trigger" rel="nofollow">hx-trigger</a> attribute</li>
<li><code>document</code> is now a valid pseudo-selector on the <a href="https://htmx.org/attributes/hx-trigger" rel="nofollow">hx-trigger</a> <code>from:</code> argument, allowing you
to listen for events on the document.</li>
<li>Added the <a href="https://htmx.org/attributes/hx-request" rel="nofollow">hx-request</a> attribute, allowing you to configure the following aspects of the request
<ul dir="auto">
<li><code>timeout</code> - the timeout of the request</li>
<li><code>credentials</code> - if the request will send credentials</li>
<li><code>noHeaders</code> - strips all headers from the request</li>
</ul>
</li>
<li>Along with the above attribute, you can configure the default values for each of these via the corresponding <code>htmx.config</code>
properties (e.g. <code>htmx.config.timeout</code>)</li>
<li>Both the <code>scroll</code> and <code>show</code> options on <a href="https://htmx.org/attributes/hx-swap" rel="nofollow">hx-swap</a> now support extended syntax for selecting the
element to scroll or to show, including the pseudo-selectors <code>window:top</code> and <code>window:bottom</code>.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.4.1] - 2021-6-1</h2><a id="user-content-141---2021-6-1" aria-label="Permalink: [1.4.1] - 2021-6-1" href="#141---2021-6-1"></a></p>
<ul dir="auto">
<li>typo fix</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.4.0] - 2021-5-25</h2><a id="user-content-140---2021-5-25" aria-label="Permalink: [1.4.0] - 2021-5-25" href="#140---2021-5-25"></a></p>
<ul dir="auto">
<li>Added the <code>queue</code> option to the <a href="https://htmx.org/attributes/hx-trigger" rel="nofollow">hx-trigger</a> attribute, allowing you to specify how events
should be queued when they are received with a request in flight</li>
<li>The <code>htmx.config.useTemplateFragments</code> option was added, allowing you to use HTML template tags for parsing content
from the server.  This allows you to use Out of Band content when returning things like table rows, but it is not
IE11 compatible.</li>
<li>The <code>defaultSettleDelay</code> was dropped to 20ms from 100ms</li>
<li>Introduced a new synthetic event, <a href="https://htmx.org/docs#pecial-events" rel="nofollow">intersect</a> that allows you to trigger when an item is scrolled into view
as specified by the <code>IntersectionObserver</code> API</li>
<li>Fixed timing issue that caused exceptions in the <code>reveal</code> logic when scrolling at incredible speeds - <a data-error-text="Failed to load title" data-id="868189825" data-permission-text="Title is private" data-url="https://github.com/bigskysoftware/htmx/issues/463" data-hovercard-type="issue" data-hovercard-url="/bigskysoftware/htmx/issues/463/hovercard" href="https://github.com/bigskysoftware/htmx/issues/463">#463</a></li>
<li>Fixed bug causing SVG titles to be incorrectly used as page title - <a data-error-text="Failed to load title" data-id="863194897" data-permission-text="Title is private" data-url="https://github.com/bigskysoftware/htmx/issues/459" data-hovercard-type="issue" data-hovercard-url="/bigskysoftware/htmx/issues/459/hovercard" href="https://github.com/bigskysoftware/htmx/issues/459">#459</a></li>
<li>Boosted forms that issue a GET will now push the URL by default - <a data-error-text="Failed to load title" data-id="891349891" data-permission-text="Title is private" data-url="https://github.com/bigskysoftware/htmx/issues/485" data-hovercard-type="issue" data-hovercard-url="/bigskysoftware/htmx/issues/485/hovercard" href="https://github.com/bigskysoftware/htmx/issues/485">#485</a></li>
<li>Better dispatch of request events when an element is removed from the DOM</li>
<li>Fixed a bug causing <code>hx-prompt</code> to fail</li>
<li>The <code>htmx.config.withCredentials</code> option was added, to send credentials with ajax requests (default is <code>false</code>)</li>
<li>The <code>throttle</code> option on <code>hx-trigger</code> does not delay the initial request any longer</li>
<li>The <code>meta</code> key is ignored on boosted links</li>
<li><code>&lt;script&gt;</code> tags are now evaluated in the global scope</li>
<li><code>hx-swap</code> now supports the <code>none</code> option</li>
<li>Safari text selection bug - <a data-error-text="Failed to load title" data-id="844318856" data-permission-text="Title is private" data-url="https://github.com/bigskysoftware/htmx/issues/438" data-hovercard-type="issue" data-hovercard-url="/bigskysoftware/htmx/issues/438/hovercard" href="https://github.com/bigskysoftware/htmx/issues/438">#438</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.3.3] - 2021-4-5</h2><a id="user-content-133---2021-4-5" aria-label="Permalink: [1.3.3] - 2021-4-5" href="#133---2021-4-5"></a></p>
<ul dir="auto">
<li>Added the <a href="https://htmx.org/docs#security" rel="nofollow"><code>hx-disabled</code></a> attribute to allow htmx to be turned off for parts of the DOM</li>
<li>SSE now uses a full-jitter exponential backoff algorithm on reconnection, using the <code>htmx.config.wsReconnectDelay</code>
setting</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.3.2] - 2021-3-9</h2><a id="user-content-132---2021-3-9" aria-label="Permalink: [1.3.2] - 2021-3-9" href="#132---2021-3-9"></a></p>
<ul dir="auto">
<li>Bug fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.3.1] - 2021-3-9</h2><a id="user-content-131---2021-3-9" aria-label="Permalink: [1.3.1] - 2021-3-9" href="#131---2021-3-9"></a></p>
<ul dir="auto">
<li>IE11 fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.3.0] - 2021-3-6</h2><a id="user-content-130---2021-3-6" aria-label="Permalink: [1.3.0] - 2021-3-6" href="#130---2021-3-6"></a></p>
<ul dir="auto">
<li>Support a <code>target</code> modifier on <code>hx-trigger</code> to filter based on the element targeted by an event.  This allows
lazy binding to that target selector.</li>
<li>Events are no longer consumed by the first element that might handle them, unless the <code>consume</code> keyword is
added to the <code>hx-trigger</code> specification</li>
<li>Added the <code>htmx:beforeSend</code> event, fired just before an ajax request begins</li>
<li>SSE swaps are properly settled</li>
<li>Fixed bug that was improperly cancelling all clicks on anchors</li>
<li><code>htmx.ajax()</code> now returns a promise</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.2.1] - 2021-2-19</h2><a id="user-content-121---2021-2-19" aria-label="Permalink: [1.2.1] - 2021-2-19" href="#121---2021-2-19"></a></p>
<ul dir="auto">
<li>Fixed an issue with the history cache, where the cache was getting blown out after the first navigation backwards</li>
<li>Added the <code>htmx.config.refreshOnHistoryMiss</code> option, allowing users to trigger a full page refresh on history cache miss
rather than issuing an AJAX request</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.2.0] - 2021-2-13</h2><a id="user-content-120---2021-2-13" aria-label="Permalink: [1.2.0] - 2021-2-13" href="#120---2021-2-13"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">New Features</h3><a id="user-content-new-features" aria-label="Permalink: New Features" href="#new-features"></a></p>
<ul dir="auto">
<li><code>hx-vars</code> has been deprecated in favor of <code>hx-vals</code></li>
<li><code>hx-vals</code> now supports a <code>javascript:</code> prefix to achieve the behavior that <code>hx-vars</code> provided</li>
<li>The new <code>hx-headers</code> attribute allows you to add headers to a request via an attribute.  Like <code>hx-vals</code> it supports
JSON or javascript via the <code>javascript:</code> prefix</li>
<li><code>hx-include</code> will now include all inputs under an element, even if that element is not a form tag</li>
<li>The <a href="https://htmx.org/extensions/preload/" rel="nofollow">preload extension</a> now offers a <code>preload-images="true"</code> attribute that will aggressively load images in preloaded content</li>
<li>On requests driven by a history cache miss, the new <code>HX-History-Restore-Request</code> header is included so that the server
can differentiate between history requests and normal requests</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Improvements &amp; Bug fixes</h3><a id="user-content-improvements--bug-fixes" aria-label="Permalink: Improvements &amp; Bug fixes" href="#improvements--bug-fixes"></a></p>
<ul dir="auto">
<li>Improved handling of precedence of input values to favor the enclosing form (see <a href="https://github.com/bigskysoftware/htmx/commit/a10e43d619dc340aa324d37772c06a69a2f47ec9">here</a>)</li>
<li>Moved event filtering logic <em>after</em> <code>preventDefault</code> so filtering still allows events to be properly handled</li>
<li>No longer trigger after swap events on elements that have been removed via an <code>outerHTML</code> swap</li>
<li>Properly remove event handlers added to other elements when an element is removed from the DOM</li>
<li>Handle the <code>scroll:</code> modifier in <code>hx-swap</code> properly when an <code>outerHTML</code> swap occurs</li>
<li>Lots of docs fixes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.1.0] - 2021-1-6</h2><a id="user-content-110---2021-1-6" aria-label="Permalink: [1.1.0] - 2021-1-6" href="#110---2021-1-6"></a></p>
<ul dir="auto">
<li>Newly added <a href="https://htmx.org/extensions/preload/" rel="nofollow">preload extension</a> allows you to preload resources for lower
latency requests!</li>
<li>Support the <code>ignore:</code> modifier for extensions</li>
<li>Updated form variable order inclusion to include the enclosing form <em>last</em> so that, in the presence of multiple
values, the most relevant value is the most likely to be selected by the server</li>
<li>Support for the <a href="https://dev.htmx.org/api/#ajax" rel="nofollow"><code>htmx.ajax()</code></a> javascript function, to issue an htmx-style ajax
request from javascript</li>
<li>Removed the following htmx request headers for better cache behavior: <code>HX-Event-Target</code>, <code>HX-Active-Element</code>,
<code>HX-Active-Element-Name</code>, <code>HX-Active-Element-Value</code></li>
<li>Added the <a href="https://dev.htmx.org/attributes/hx-preserve" rel="nofollow"><code>hx-preserve</code></a> attribute, which allows
you to preserve elements across requests (for example, to keep a video element playing properly)</li>
<li>The <a href="https://dev.htmx.org/extensions/path-deps/#refresh" rel="nofollow">path-deps</a> now surfaces a small api
for refreshing path dependencies manually in javascript</li>
<li>Now support the <code>from:</code> clause on <a href="https://dev.htmx.org/attributes/hx-trigger" rel="nofollow"><code>hx-trigger</code></a> to
allow an element to respond to events on other elements.</li>
<li>Added the <code>htmx:beforeProcessNode</code> event, renamed the (previously undocumented) <code>htmx:processedNode</code> to <code>htmx:afterProcessNode</code></li>
<li>Added <code>closest</code> syntax support for the <a href="https://dev.htmx.org/attributes/hx-indicator" rel="nofollow"><code>hx-indicator</code></a> attribute</li>
<li>Added <code>on load</code> support for the newest version of <a href="https://hyperscript.org/" rel="nofollow">hyperscript</a></li>
<li>Added the <code>htmx.config.allowEval</code> configuration value, for CSP compatibility</li>
<li>Bug fixes &amp; improvements</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.0.2] - 2020-12-12</h2><a id="user-content-102---2020-12-12" aria-label="Permalink: [1.0.2] - 2020-12-12" href="#102---2020-12-12"></a></p>
<ul dir="auto">
<li>Extend all API methods to take a string selector as well as an element</li>
<li>Out of band swap elements need not be top level now</li>
<li><a href="https://htmx.org/attributes/hx-swap-oob" rel="nofollow"><code>hx-swap-oob</code></a> now can accept a CSS selector to retarget with</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.0.1] - 2020-12-04</h2><a id="user-content-101---2020-12-04" aria-label="Permalink: [1.0.1] - 2020-12-04" href="#101---2020-12-04"></a></p>
<ul dir="auto">
<li>AJAX file upload now correctly fires events, allowing for <a href="https://htmx.org/examples/file-upload" rel="nofollow">a proper progress bar</a></li>
<li>htmx api functions that expect an element now can accept a string selector instead:
<div dir="auto" data-snippet-clipboard-copy-content=" htmx.on('#form', 'htmx:xhr:progress', function(evt) {
   htmx.find('#progress').setAttribute('value', evt.detail.loaded/evt.detail.total * 100)
 });"><pre> <span>htmx</span><span>.</span><span>on</span><span>(</span><span>'#form'</span><span>,</span> <span>'htmx:xhr:progress'</span><span>,</span> <span>function</span><span>(</span><span>evt</span><span>)</span> <span>{</span>
   <span>htmx</span><span>.</span><span>find</span><span>(</span><span>'#progress'</span><span>)</span><span>.</span><span>setAttribute</span><span>(</span><span>'value'</span><span>,</span> <span>evt</span><span>.</span><span>detail</span><span>.</span><span>loaded</span><span>/</span><span>evt</span><span>.</span><span>detail</span><span>.</span><span>total</span> <span>*</span> <span>100</span><span>)</span>
 <span>}</span><span>)</span><span>;</span></pre></div>
</li>
<li>htmx now properly handles the <code>multiple</code> attribute on <code>&lt;select&gt;</code> elements</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[1.0.0] - 2020-11-24</h2><a id="user-content-100---2020-11-24" aria-label="Permalink: [1.0.0] - 2020-11-24" href="#100---2020-11-24"></a></p>
<ul dir="auto">
<li>Bumped the release version :)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.4.1] - 2020-11-23</h2><a id="user-content-041---2020-11-23" aria-label="Permalink: [0.4.1] - 2020-11-23" href="#041---2020-11-23"></a></p>
<ul dir="auto">
<li>Fixed bug with title tag support when title tag contained HTML entities</li>
<li>Pass properties for the <code>loadstart</code>, <code>loadend</code>, <code>progress</code>, <code>abort</code> events through properly to the htmx equivalents</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.4.0] - 2020-11-16</h2><a id="user-content-040---2020-11-16" aria-label="Permalink: [0.4.0] - 2020-11-16" href="#040---2020-11-16"></a></p>
<ul dir="auto">
<li>Now support the <code>HX-Redirect</code> and <code>HX-Refresh</code> response headers for redirecting client side and triggering a page refresh, respectively</li>
<li><code>hx-vars</code> now overrides input values</li>
<li><code>&lt;title&gt;</code> tags in responses will be used to update page titles</li>
<li>All uses of <code>eval()</code> have been removed in favor of <code>Function</code></li>
<li><a href="https://htmx.org/attributes/hx-vals" rel="nofollow"><code>hx-vals</code></a> is available as a safe alternative to <code>hx-vars</code>.  It uses <code>JSON.parse()</code> rather than evaluation, if you wish to safely pass user-provided values through to htmx.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.3.0] - 2020-10-27</h2><a id="user-content-030---2020-10-27" aria-label="Permalink: [0.3.0] - 2020-10-27" href="#030---2020-10-27"></a></p>
<ul dir="auto">
<li><code>hx-trigger</code> parsing has been rewritten and now supports <a href="https://htmx.org/docs/#trigger-filters" rel="nofollow">trigger filters</a> to filter
events based on arbitrary javascript expressions</li>
<li>htmx now supports two additional response headers <code>HX-Trigger-After-Swap</code> and <code>HX-Trigger-After-Settle</code> allowing
an event to be triggered after a given life cycle event (instead of before the swap)</li>
<li>The <code>requestConfig</code> is now passed out to events surrounding the AJAX life cycle</li>
<li>htmx now evaluates <code>&lt;script&gt;</code> tags as javascript when no language is defined on them</li>
<li>A new <a href="https://htmx.org/extensions/event-header" rel="nofollow"><code>event-header</code></a> extension, which will include a serialized JSON representation of the triggering event in requests</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.2.0] - 2020-9-30</h2><a id="user-content-020---2020-9-30" aria-label="Permalink: [0.2.0] - 2020-9-30" href="#020---2020-9-30"></a></p>
<ul dir="auto">
<li>AJAX file upload <a href="https://htmx.org/docs#files" rel="nofollow">support</a></li>
<li>The HTML validation API is <a href="https://htmx.org/docs#validation" rel="nofollow">respected</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.1.0] - 2020-9-18</h2><a id="user-content-010---2020-9-18" aria-label="Permalink: [0.1.0] - 2020-9-18" href="#010---2020-9-18"></a></p>
<ul dir="auto">
<li><em>BREAKING CHANGE</em>: The SSE attribute <a href="https://htmx.org/attributes/hx-sse/" rel="nofollow"><code>hx-sse</code></a> and the Web Sockets attribute <a href="https://htmx.org/attributes/hx-ws" rel="nofollow"><code>hx-ws</code></a> have changed syntax to now use colon separators: <code>hx-sse='connect:/chat swap:message'</code></li>
<li>The SSE attribute <a href="https://htmx.org/attributes/hx-sse/" rel="nofollow"><code>hx-sse</code></a> allows for swapping content directly on an event, in addition to triggering an htmx element,
with the new <code>swap:&lt;event name&gt;</code> syntax.</li>
<li><a href="https://htmx.org/attributes/hx-target" rel="nofollow"><code>hx-target</code></a> now supports a <code>find</code> syntax to find elements below the element by a CSS selector</li>
<li>htmx plays better with deferred loading and many package managers</li>
<li>All htmx events are dispatched in both camelCase as well as kebab-case, for better compatibility with AlpineJS and other frameworks.  (e.g. <code>htmx:afterOnLoad</code> will also be triggered as
<code>htmx:after-on-load</code>)</li>
<li><a href="https://hyperscript.org/" rel="nofollow">hypeerscript</a> is now initialized independently of htmx</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.0.8] - 2020-7-8</h2><a id="user-content-008---2020-7-8" aria-label="Permalink: [0.0.8] - 2020-7-8" href="#008---2020-7-8"></a></p>
<ul dir="auto">
<li>The <code>view</code> modifier on <code>hx-swap</code> has been renamed to <code>show</code>: <code>hx-swap='innerHTML show:top'</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.0.7] - 2020-6-30</h2><a id="user-content-007---2020-6-30" aria-label="Permalink: [0.0.7] - 2020-6-30" href="#007---2020-6-30"></a></p>
<ul dir="auto">
<li>The <a href="https://htmx.org/attributes/hx-swap" rel="nofollow"><code>hx-swap</code></a> attribute now supports two new modifiers:
<ul dir="auto">
<li><code>scroll</code> - allows you to scroll the target to the <code>top</code> or <code>bottom</code></li>
<li><code>view</code> - allows you to scroll the <code>top</code> or <code>bottom</code> of the target into view</li>
</ul>
</li>
<li>The <a href="https://htmx.org/attributes/hx-push-url" rel="nofollow"><code>hx-push-url</code></a> attribute now can optionally take a URL to push, in addition to <code>true</code> and <code>false</code></li>
<li>Added the <a href="https://htmx.org/attributes/hx-vars" rel="nofollow"><code>hx-vars</code></a> attribute that allows you to dynamically add to the parameters that will be submitted with a request</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.0.6] - 2020-6-20</h2><a id="user-content-006---2020-6-20" aria-label="Permalink: [0.0.6] - 2020-6-20" href="#006---2020-6-20"></a></p>
<ul dir="auto">
<li>Custom request/response headers no longer start with the <code>X-</code> prefix, which is no longer recommended</li>
<li>empty verb attributes are now allowed and follow the anchor tag semantics (e.g. <code>&lt;div hx-get&gt;&lt;/div&gt;</code>)</li>
<li>nunjuks inline rendering is now supported in the <code>client-side-templates</code> extension</li>
<li>the new <code>ajax-header</code> extension includes the <code>X-Requested-With</code> header</li>
<li>bad JSON is now handled more gracefully</li>
<li><code>hx-swap="none"</code> will cause no swap to take place <a data-error-text="Failed to load title" data-id="636558621" data-permission-text="Title is private" data-url="https://github.com/bigskysoftware/htmx/issues/89" data-hovercard-type="issue" data-hovercard-url="/bigskysoftware/htmx/issues/89/hovercard" href="https://github.com/bigskysoftware/htmx/issues/89">#89</a></li>
<li><code>hx-trigger</code> now supports a <code>throttle</code> modifier <a data-error-text="Failed to load title" data-id="636555082" data-permission-text="Title is private" data-url="https://github.com/bigskysoftware/htmx/issues/88" data-hovercard-type="issue" data-hovercard-url="/bigskysoftware/htmx/issues/88/hovercard" href="https://github.com/bigskysoftware/htmx/issues/88">#88</a></li>
<li>the focused element is preserved if possible after a replacement</li>
<li>perf improvements for large DOM trees with sparse <code>hx-</code> annotations</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.0.4] - 2020-5-24</h2><a id="user-content-004---2020-5-24" aria-label="Permalink: [0.0.4] - 2020-5-24" href="#004---2020-5-24"></a></p>
<ul dir="auto">
<li>Extension mechanism added</li>
<li>SSE support added</li>
<li>WebSocket support added</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.0.3] - 2020-5-17</h2><a id="user-content-003---2020-5-17" aria-label="Permalink: [0.0.3] - 2020-5-17" href="#003---2020-5-17"></a></p>
<ul dir="auto">
<li>Renamed to htmx</li>
<li>A bug fix for the <code>hx-prompt</code> attribute</li>
<li>A bug fix for multiple <code>hx-swap-oob</code> attributes</li>
<li>Moved the default CSS indicator injection into its own sheet to avoid breaking</li>
<li>Added the <code>htmx.config.includeIndicatorStyles</code> configuration option so people can opt out of injecting the indicator CSS</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">[0.0.1] - 2020-5-15</h2><a id="user-content-001---2020-5-15" aria-label="Permalink: [0.0.1] - 2020-5-15" href="#001---2020-5-15"></a></p>
<ul dir="auto">
<li>Initial release (originally named kutty)</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[macOS 15.2 breaks the ability to copy the OS to another drive (346 pts)]]></title>
            <link>https://www.shirtpocket.com/blog/index.php/shadedgrey/youre_a_mean_one/</link>
            <guid>42413757</guid>
            <pubDate>Sat, 14 Dec 2024 01:04:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.shirtpocket.com/blog/index.php/shadedgrey/youre_a_mean_one/">https://www.shirtpocket.com/blog/index.php/shadedgrey/youre_a_mean_one/</a>, See on <a href="https://news.ycombinator.com/item?id=42413757">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><em><a href="https://www.shirtpocket.com/blog/index.php/shadedgrey/comments/youre_a_mean_one/">You’re a Mean One</a></em> Friday, December 13, 2024 </p></div><div>

<p>macOS 15.2 was released a few days ago, with a surprise. A terrible, awful surprise.</p>

<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/oUUdW2bTa3Y?si=jBClddjKqYf7jqLu" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>

<p>Apple broke the replicator. Towards the end of replicating the Data volume, seemingly when it's about to copy either Preboot or Recovery, it fails with a <strong>Resource Busy</strong> error.</p>

<p>In the past, <strong>Resource Busy</strong> could be worked around by ensuring the system was kept awake. But this new bug means, on most systems, there's no fix. It just fails.</p>

<h3>Puppet on Strings</h3>

<p>Since Apple took away the ability for 3rd parties (eg, us) to copy the OS, and took on the responsibility themselves, it's been up to them to ensure this functionality continues to work. And in that, they've failed in macOS 15.2.</p>

<p>Because this is their code, and we're forced to rely on it to copy the OS, OS copying will not work until they fix it.</p>

<p>To put it bluntly, this sucks. It's bad enough we have to work around other bugs in this code, but when it breaks completely, we're stuck pointing fingers and offering workarounds that don't involve the replicator.</p>

<h3>Workaround Runaround Redux</h3>

<p>What this means is this: until Apple fixes the bug, you'll have to use "Backup - all files" with "Smart Update" to copy everything but the OS.</p>

<p>This backup, as I've explained before, has all your stuff: applications, data, settings, etc. The System volume (the OS, effectively), is read-only and you can't change it. So a clean install brings it back exactly as it was...and then you can restore when prompted during first boot.</p>

<h3>We Know This Sucks</h3>

<p>The section title says it all. I know. This sucks. We think it sucks. You think it sucks. But we can't fix it: Apple has to do so.</p>

<p>For those who may be working for Apple, or have good contacts, the bug is FB16090831. A fix would be really helpful, folks.</p>

<h3>Happy Holidays</h3>

<p>It's unfortunate this is happening during this period, since Apple rarely releases updates between now and New Year's.</p>

<p>I sincerely hope you'll be having a better Holiday Season than I am about to have, with fewer emails and more fun.</p>

<p>Thanks for using SuperDuper, and thanks for your understanding.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ilya Sutskever NeurIPS talk [video] (233 pts)]]></title>
            <link>https://www.youtube.com/watch?v=YD-9NG1Ke5Y</link>
            <guid>42413677</guid>
            <pubDate>Sat, 14 Dec 2024 00:49:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=YD-9NG1Ke5Y">https://www.youtube.com/watch?v=YD-9NG1Ke5Y</a>, See on <a href="https://news.ycombinator.com/item?id=42413677">Hacker News</a></p>
Couldn't get https://www.youtube.com/watch?v=YD-9NG1Ke5Y: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Performant intracontinental public transport routing in Rust (142 pts)]]></title>
            <link>https://github.com/ellenhp/farebox</link>
            <guid>42413464</guid>
            <pubDate>Sat, 14 Dec 2024 00:00:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ellenhp/farebox">https://github.com/ellenhp/farebox</a>, See on <a href="https://news.ycombinator.com/item?id=42413464">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Farebox</h2><a id="user-content-farebox" aria-label="Permalink: Farebox" href="#farebox"></a></p>
<p dir="auto">Fast RAPTOR implementation in Rust designed for memory-constrained machines.</p>
<ul dir="auto">
<li>Built on top of Valhalla for transfers and first/last mile routing.</li>
<li>Multi-agency and timezone-aware routing.</li>
<li>Route shapes are not returned with the itineraries.</li>
</ul>
<p dir="auto">The goal of this project is to supplement OpenTripPlanner in <a href="https://github.com/headwaymaps/headway">Headway</a> as an infill service for areas not covered by <a href="https://www.opentripplanner.org/" rel="nofollow">OpenTripPlanner</a> instances.
Memory mapping is used for the timetables with the aim of enabling planet-scale coverage with a single instance, and affordable hosting costs.
GTFS-RT support is in scope.
Per-request walking/cycling costing model tweaks will likely never be supported because RAPTOR requires pre-computation of transfers, but pre-defined costing models for walking, cycling, and wheelchair usage are in scope.</p>
<p dir="auto">This project may be obsoleted by Valhalla's built-in multimodal support depending on its performance characteristics.
Based on the information in the RAPTOR paper about its performance versus A* based methods, it seems likely that there will still be a place for <code>farebox</code> even once Valhalla can do multimodal trips.
This project may also eventually support a rRAPTOR routing option which would allow simultaneous calculation of itineraries across a wide range of departure times, which isn't something you can do with an A* search through a time-dependant routing graph to my knowledge.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Luon programming language (201 pts)]]></title>
            <link>https://github.com/rochus-keller/Luon/blob/master/Readme.md</link>
            <guid>42413343</guid>
            <pubDate>Fri, 13 Dec 2024 23:37:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/rochus-keller/Luon/blob/master/Readme.md">https://github.com/rochus-keller/Luon/blob/master/Readme.md</a>, See on <a href="https://news.ycombinator.com/item?id=42413343">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true" aria-labelledby="file-name-id-wide file-name-id-mobile"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a23297ec362f4920d47ecc5869aee3773ca25ff3ee2cf7c07be4f6bf0b90f8e9/687474703a2f2f736f6674776172652e726f636875732d6b656c6c65722e63682f6c756f6e5f6c6f676f5f323030783133302e706e67"><img src="https://camo.githubusercontent.com/a23297ec362f4920d47ecc5869aee3773ca25ff3ee2cf7c07be4f6bf0b90f8e9/687474703a2f2f736f6674776172652e726f636875732d6b656c6c65722e63682f6c756f6e5f6c6f676f5f323030783133302e706e67" alt="Logo" data-canonical-src="http://software.rochus-keller.ch/luon_logo_200x130.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Welcome to the Luon Programming Language</h2><a id="user-content-welcome-to-the-luon-programming-language" aria-label="Permalink: Welcome to the Luon Programming Language" href="#welcome-to-the-luon-programming-language"></a></p>
<p dir="auto">Luon is a high-level programming language with a syntax similar to <a href="https://github.com/rochus-keller/oberon/">Oberon+</a>, Oberon-07 and Oberon-2, integrating concepts from Lua, and targeting the LuaJIT VM. Luon can be regarded as a statically typed version of Lua. The name is thus a combination of "Lua" and "Oberon".</p>
<p dir="auto">Luon procedures can be declared "external" and be implemented in Lua. This allows the re-use of libraries written in Lua, and also C libraries via
the LuaJIT foreign function interface.</p>
<p dir="auto">The language specification can be found in the <a href="https://github.com/rochus-keller/Luon/tree/master/specification">specification subdirectory</a>.
See also the code examples below.</p>
<p dir="auto">The project is the result of the author's experience with the <a href="https://github.com/rochus-keller/Smalltalk/">Smalltalk-80</a> and <a href="https://github.com/rochus-keller/Som/">SOM VM</a> implementation, and the prospect to build a <a href="https://github.com/rochus-keller/Gingko/">LuaJIT based Interlisp VM</a>.</p>
<p dir="auto">In contrast to Oberon+, Luon doesn't have pointers, but instead all structured datatypes have reference semantics and are dynamically created. In addition to the ARRAY type, there is also a HASHMAP type for compatibility with Lua. There is also a STRING data type which - like Lua - is immutable and follows a value semantics.</p>
<p dir="auto">In particular, Luon solves the following Lua shortcomings recognized during the aforementioned projects:</p>
<ul dir="auto">
<li>conditional compilation to enable or disable statements only used for debugging and to avoid wasting calculation time</li>
<li>constants not requiring local slots or hashed element access</li>
<li>explicit inline declaration, so the code can be better structured without additional context
switches and slot consumption</li>
<li>no implicit global declarations, and other means to detect as many errors as possible during compile time</li>
<li>locals can no longer be used before declaration</li>
<li>switch/case control statement to avoid writing the relation expression all over again</li>
</ul>
<p dir="auto">This project implements a compiler and IDE for the Luon programming language. Representative example projects demonstrating the
capabilities of the language and the IDE can be found in the <a href="https://github.com/rochus-keller/Luon/tree/master/testcases/">testcases subdirectory</a>.</p>
<p dir="auto">Here is a screenshot of the IDE:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b36d0d0e54171fe3534c92f705581ba3dbd79da18a812e2e71bd78aac4080ef9/687474703a2f2f736f6674776172652e726f636875732d6b656c6c65722e63682f6c756f6e2d6964652d73637265656e73686f742d302e372e302d312e706e67"><img src="https://camo.githubusercontent.com/b36d0d0e54171fe3534c92f705581ba3dbd79da18a812e2e71bd78aac4080ef9/687474703a2f2f736f6674776172652e726f636875732d6b656c6c65722e63682f6c756f6e2d6964652d73637265656e73686f742d302e372e302d312e706e67" alt="IDE Screenshot 1" data-canonical-src="http://software.rochus-keller.ch/luon-ide-screenshot-0.7.0-1.png"></a></p>
<p dir="auto">And here is the source-level debugger of the IDE:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0f2996c7901d0807b60a9d66738643c8b36ffaf67d9025da37d2d7e130a09507/687474703a2f2f736f6674776172652e726f636875732d6b656c6c65722e63682f6c756f6e2d6964652d73637265656e73686f742d302e372e302d322e706e67"><img src="https://camo.githubusercontent.com/0f2996c7901d0807b60a9d66738643c8b36ffaf67d9025da37d2d7e130a09507/687474703a2f2f736f6674776172652e726f636875732d6b656c6c65722e63682f6c756f6e2d6964652d73637265656e73686f742d302e372e302d322e706e67" alt="IDE Screenshot 2" data-canonical-src="http://software.rochus-keller.ch/luon-ide-screenshot-0.7.0-2.png"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Code examples</h3><a id="user-content-code-examples" aria-label="Permalink: Code examples" href="#code-examples"></a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Procedural Programming</h5><a id="user-content-procedural-programming" aria-label="Permalink: Procedural Programming" href="#procedural-programming"></a></p>
<div data-snippet-clipboard-copy-content="module Fibonacci
  proc calc*(n : integer): integer
    var a, b, i, next: integer // comma is optional
  begin
   <* if use_recursion then *>
    if n > 1 then 
      a := calc(n - 1)
      b := calc(n - 2)
      return a + b
    elsif n = 0 then return 0
    else return 1
    end
   <* else *>
    b := 1
    for i := 0 to n-1 do
      next := a + b
      a := b
      b := next
    end
    return a
   <* end *>
  end calc
  var res: integer
begin
  res := calc(21)
  assert(res = 10946)
  print(&quot;Fibonaccy result: &quot;)
  println(res)
end Fibonacci
"><pre><code>module Fibonacci
  proc calc*(n : integer): integer
    var a, b, i, next: integer // comma is optional
  begin
   &lt;* if use_recursion then *&gt;
    if n &gt; 1 then 
      a := calc(n - 1)
      b := calc(n - 2)
      return a + b
    elsif n = 0 then return 0
    else return 1
    end
   &lt;* else *&gt;
    b := 1
    for i := 0 to n-1 do
      next := a + b
      a := b
      b := next
    end
    return a
   &lt;* end *&gt;
  end calc
  var res: integer
begin
  res := calc(21)
  assert(res = 10946)
  print("Fibonaccy result: ")
  println(res)
end Fibonacci

</code></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Generic Programming</h5><a id="user-content-generic-programming" aria-label="Permalink: Generic Programming" href="#generic-programming"></a></p>
<div data-snippet-clipboard-copy-content="module Collections(T) 
  type Deque* = record data: array of T
                      size: integer end
                      
  proc createDeque*(): Deque 
    const initial_len = 1_000 // separators
    var this: Deque  // this is initialized to nil
  begin 
    new(this); 
    new(this.data,initial_len) 
    return this 
    // this and data will be garbage collected
  end createDeque
  
  proc (this: Deque) append*(element: T)
  begin 
    if this.size = len(this.data) then assert(false) end
    this.data[this.size] := element inc(this.size) 
  end append
  
  type Iterator* = record end
  proc (this: Iterator) apply*(element: T) end
  
  proc (this: Deque) forEach*(iter: Iterator)
    var i: integer; val: T
  begin 
    for i := 0 to this.size-1 do 
      iter.apply(this.data[i]) 
    end
  end forEach
end Collections"><pre><code>module Collections(T) 
  type Deque* = record data: array of T
                      size: integer end
                      
  proc createDeque*(): Deque 
    const initial_len = 1_000 // separators
    var this: Deque  // this is initialized to nil
  begin 
    new(this); 
    new(this.data,initial_len) 
    return this 
    // this and data will be garbage collected
  end createDeque
  
  proc (this: Deque) append*(element: T)
  begin 
    if this.size = len(this.data) then assert(false) end
    this.data[this.size] := element inc(this.size) 
  end append
  
  type Iterator* = record end
  proc (this: Iterator) apply*(element: T) end
  
  proc (this: Deque) forEach*(iter: Iterator)
    var i: integer; val: T
  begin 
    for i := 0 to this.size-1 do 
      iter.apply(this.data[i]) 
    end
  end forEach
end Collections
</code></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Object Oriented Programming</h5><a id="user-content-object-oriented-programming" aria-label="Permalink: Object Oriented Programming" href="#object-oriented-programming"></a></p>
<div data-snippet-clipboard-copy-content="module Drawing
  import F := Fibonacci
         C := Collections(Figure)
  
  type Figure* = record position: record 
                     x,y: integer end end  
  proc (this: Figure) draw*() end
    
  type
    Circle* = record (Figure) diameter: integer end
    Square* = record (Figure) width: integer end 
    proc (this: Circle) draw*() end
    proc (this: Square) draw*() end
        
  var figures: C.Deque
      circle: Circle
      square: Square
    
  proc drawAll()
    type I = record(C.Iterator) count: integer end
    proc (this: I) apply( figure: Figure ) 
    begin 
      figure.draw(); inc(this.count) 
    end apply
    var i: I // count is initialized to zero
  begin
    new(i)
    figures.forEach(i)
    assert(i.count = 2)
    println(&quot;drawing done&quot;)
  end drawAll
  
begin 
  figures := C.createDeque()
  // use constructors instead of new:
  circle := { { F.calc(3), F.calc(4) }, diameter: 3 }
  figures.append(circle)
  square := { { x: F.calc(5), y: F.calc(6) }, 4 }
  figures.append(square)
  drawAll()
end Drawing  "><pre><code>module Drawing
  import F := Fibonacci
         C := Collections(Figure)
  
  type Figure* = record position: record 
                     x,y: integer end end  
  proc (this: Figure) draw*() end
    
  type
    Circle* = record (Figure) diameter: integer end
    Square* = record (Figure) width: integer end 
    proc (this: Circle) draw*() end
    proc (this: Square) draw*() end
        
  var figures: C.Deque
      circle: Circle
      square: Square
    
  proc drawAll()
    type I = record(C.Iterator) count: integer end
    proc (this: I) apply( figure: Figure ) 
    begin 
      figure.draw(); inc(this.count) 
    end apply
    var i: I // count is initialized to zero
  begin
    new(i)
    figures.forEach(i)
    assert(i.count = 2)
    println("drawing done")
  end drawAll
  
begin 
  figures := C.createDeque()
  // use constructors instead of new:
  circle := { { F.calc(3), F.calc(4) }, diameter: 3 }
  figures.append(circle)
  square := { { x: F.calc(5), y: F.calc(6) }, 4 }
  figures.append(square)
  drawAll()
end Drawing  
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Planned features</h3><a id="user-content-planned-features" aria-label="Permalink: Planned features" href="#planned-features"></a></p>
<ul>
<li> Implement lexer with directive support</li>
<li> Implement parser and AST</li>
<li> Implement semantic validator</li>
<li> Implement a LuaJIT backend based on LjTools</li>
<li> Implement an IDE similar to the Oberon+ IDE</li>
<li> Document the language (specification is available)</li>
<li> Migrate the Smalltalk-80 VM to Luon as a proof-of-concept and to optimize the language</li>
<li> BUSY build and precompiled versions for some platforms</li>
<li> Migrate PAL2 from C to Lua, fix BitBlt, separate deployment</li>
<li> Complete the language implementation according to the specification (inline, invar, pcall, visibility, etc.)</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Development history</h3><a id="user-content-development-history" aria-label="Permalink: Development history" href="#development-history"></a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on October 14, 2024</h5><a id="user-content-status-on-october-14-2024" aria-label="Permalink: Status on October 14, 2024" href="#status-on-october-14-2024"></a></p>
<p dir="auto">Derived the syntax from Oberon+ and Micron and generated a parser using <a href="https://github.com/micron-language/specification/blob/master/Micron_Programming_Language.ebnf">the grammar</a> and adopted the lexer from <a href="https://github.com/rochus-keller/Micron">the Micron project</a>. The parser is able to successfully read the ongoing Luon migration of the
<a href="https://github.com/rochus-keller/Are-we-fast-yet/tree/main/Luon">Are-we-fast-yet benchmark suite</a> (not yet commited).</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on October 15, 2024</h5><a id="user-content-status-on-october-15-2024" aria-label="Permalink: Status on October 15, 2024" href="#status-on-october-15-2024"></a></p>
<p dir="auto">Adopted the AST infrastructure from Micron and extended the AST for full program coverage.
Implemented a recursive descent parser (modified the one generated  by <a href="https://github.com/rochus-keller/EbnfStudio">EbnfStudio</a>) which generates the AST.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on October 16, 2024</h5><a id="user-content-status-on-october-16-2024" aria-label="Permalink: Status on October 16, 2024" href="#status-on-october-16-2024"></a></p>
<p dir="auto">Improved language: constructors generate object, extended for arrays and hashmaps; extra set constructor no longer needed. Can generate AST for ongoing AWFY with no memory leaks.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on October 25, 2024</h5><a id="user-content-status-on-october-25-2024" aria-label="Permalink: Status on October 25, 2024" href="#status-on-october-25-2024"></a></p>
<p dir="auto">The semantic validator is complete and tested. I developed it in parallel with <a href="https://github.com/rochus-keller/Are-we-fast-yet/tree/main/Luon">the Luon version of the Are-we-fast-yet benchmark suite</a>. Some refactorings and language changes were necessary. As in Oberon-07, there is now only one INTEGER and REAL type, the former with 53 bits of precision. The validator was feature complete on October 22, so development took six, and testing and debugging three calendar days.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on October 27, 2024</h5><a id="user-content-status-on-october-27-2024" aria-label="Permalink: Status on October 27, 2024" href="#status-on-october-27-2024"></a></p>
<p dir="auto">The IDE is ready for testing and debugging. I derived it from the LuaJIT version of the Oberon IDE, but many changes were necessary because the AST and code model are completely different. This included an optional cross-referencing infrastructure integrated with the validator. Also the import logic had to be extended for compatibility with the project file concept, which required refactoring of AST, parser and validator.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on November 05, 2024</h5><a id="user-content-status-on-november-05-2024" aria-label="Permalink: Status on November 05, 2024" href="#status-on-november-05-2024"></a></p>
<p dir="auto">The LuaJIT bytecode generator including most built-in procedures is complete and ready for testing and debugging. All functions of the LuonFfi.c file
were migrated to LUON.lua to avoid C dependencies. Added Oakwood implementations in Lua (Files is no longer Oakwood compatible).</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on November 09, 2024</h5><a id="user-content-status-on-november-09-2024" aria-label="Permalink: Status on November 09, 2024" href="#status-on-november-09-2024"></a></p>
<p dir="auto">After a lot of testing, debugging and fixes the generated code seems to be sufficiently correct for the moment to continue with other stuff. The testcases
in the all.lnpro project, which I migrated from Oberon+ ("features" subfolder), work, which covers most aspect of the language. I also
implemented delegates and the copy() builtin, and made some other language changes (e.g. := no longer copies char arrays by value). Next goal is
to run the Luon Awfy suite.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on November 13, 2024</h5><a id="user-content-status-on-november-13-2024" aria-label="Permalink: Status on November 13, 2024" href="#status-on-november-13-2024"></a></p>
<p dir="auto">The Luon Are-we-fast-yet suite works up to Json; a significant refactoring of the code generator was necessary for this to properly intitialize all
class objects up-front; the performance is currently slightly (1%) better than Lua, and there is room for improvement. Now after a calendar month
in the project, the compiler and IDE seem ready for implementing a Smalltalk VM, so let's go for it.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on November 26, 2024</h5><a id="user-content-status-on-november-26-2024" aria-label="Permalink: Status on November 26, 2024" href="#status-on-november-26-2024"></a></p>
<p dir="auto">All benchmarks of the Luon Are-we-fast-yet suite now work and show a performance equal to the Lua on LuaJIT version of the benchmark. The debugger has been significantly improved. The BYTE type and TOSTRING builtin have been added to the language.
The Project Oberon System has been migrated to Luon; the code works so far, but for correct display output many changes would be required (maybe in future).
The Smalltalk VM is work in progress and expected to be complete in a week. Both compiler and IDE are used to implement the Smalltalk VM and have proved to be useful so far.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on December 1. 2024</h5><a id="user-content-status-on-december-1-2024" aria-label="Permalink: Status on December 1. 2024" href="#status-on-december-1-2024"></a></p>
<p dir="auto">The migration of <a href="https://github.com/rochus-keller/Smalltalk/blob/master/Smalltalk.lnpro">the Luon implementation of the Smalltalk VM</a> (see for *.luon and *.lnpro) is complete. I migrated the C++ version with a few architectural changes. In contrast to the C++ version which uses Qt, this version uses SDL2 via LuaJIT FFI. It is also an example how the EXTERN keyword works, i.e. how the external implementations are provided. Now the debugging starts; wish me luck ;-)</p>
<p dir="auto">Meanwhile also <a href="https://github.com/rochus-keller/Luon/tree/master/specification">the Luon specification</a> is available, though not all features are yet implemented.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on December 8. 2024</h5><a id="user-content-status-on-december-8-2024" aria-label="Permalink: Status on December 8. 2024" href="#status-on-december-8-2024"></a></p>
<p dir="auto">The ST-80 display representation works, but only with the C version of the BitBlt so far. Also added a Qt version of the PAL to ease debugging. Extended the language (KEYS function) and made other hasmap fixes. The ST VM requires still more debugging.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on December 10. 2024</h5><a id="user-content-status-on-december-10-2024" aria-label="Permalink: Status on December 10. 2024" href="#status-on-december-10-2024"></a></p>
<p dir="auto">The Smalltalk-80 VM implemented in Luon works (with a few issues WIP), with both the SDL2 and Qt based PAL. Added the source code of the VM as
a local testcase and demonstration to the Luon repository (as a copy of the corresponding files in the Smalltalk repository).
The same applies to the Are-we-fast-yet implementation. The project is close to an MVP release.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Status on December 12. 2024</h5><a id="user-content-status-on-december-12-2024" aria-label="Permalink: Status on December 12. 2024" href="#status-on-december-12-2024"></a></p>
<p dir="auto">With only a few changes, the IDE and demo projects also work on Windows. Provided precompiled packages for a few platforms. LuaJIT is statically linked
on all platforms. MVP release.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Precompiled versions</h3><a id="user-content-precompiled-versions" aria-label="Permalink: Precompiled versions" href="#precompiled-versions"></a></p>
<p dir="auto">The following precompiled versions are available at this time:</p>
<ul dir="auto">
<li><a href="http://software.rochus-keller.ch/LuonIDE_linux_i386.tar.gz" rel="nofollow">Linux x86</a></li>
<li><a href="http://software.rochus-keller.ch/LuonIDE_linux_x64.tar.gz" rel="nofollow">Linux x86_64</a></li>
<li><a href="http://software.rochus-keller.ch/LuonIDE_win32.zip" rel="nofollow">Windows x86</a></li>
</ul>
<p dir="auto">Just download and unpack the compressed file to a directory. Start the IDE by double clicking on the LuonIDE executable. The specification and some demonstration projects are included.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to build</h3><a id="user-content-how-to-build" aria-label="Permalink: How to build" href="#how-to-build"></a></p>
<p dir="auto">Follow these steps if you want to build the Luon IDE yourself. The build is using LeanQt and the BUSY build system. Note that compiling on Linux requires the build essentials, xcb, libxcb1-dev and libx11-dev packages. On Mac and Windows there are no additional requirements than a toolchain.</p>
<ol dir="auto">
<li>Create a new directory; we call it the root directory here</li>
<li>Download <a href="https://github.com/rochus-keller/Luon/archive/refs/heads/master.zip">https://github.com/rochus-keller/Luon/archive/refs/heads/master.zip</a> and unpack it to the root directory; rename the resulting directory to "Oberon".</li>
<li>Download <a href="https://github.com/rochus-keller/LuaJIT/archive/refs/heads/LjTools.zip">https://github.com/rochus-keller/LuaJIT/archive/refs/heads/LjTools.zip</a> and unpack it to the root directory; rename the resulting directory to "LuaJIT".</li>
<li>Download <a href="https://github.com/rochus-keller/LjTools/archive/refs/heads/master.zip">https://github.com/rochus-keller/LjTools/archive/refs/heads/master.zip</a> and unpack it to the root directory; rename the resulting directory to "MonoTools".</li>
<li>Download <a href="https://github.com/rochus-keller/GuiTools/archive/refs/heads/master.zip">https://github.com/rochus-keller/GuiTools/archive/refs/heads/master.zip</a> and unpack it to the root directory; rename the resulting directory to "GuiTools".</li>
<li>Download <a href="https://github.com/rochus-keller/LeanQt/archive/refs/heads/master.zip">https://github.com/rochus-keller/LeanQt/archive/refs/heads/master.zip</a> and unpack it to the root directory; rename the resulting directory to "LeanQt".</li>
<li>Download <a href="https://github.com/rochus-keller/BUSY/archive/refs/heads/master.zip">https://github.com/rochus-keller/BUSY/archive/refs/heads/master.zip</a> and unpack it to the root directory; rename the resulting directory to "build".</li>
<li>Open a command line in the "LuaJIT" directory and follow the instructions there to build LuaJIT for your platform.</li>
<li>Open a command line in the "build" directory and type <code>cc *.c -O2 -lm -o lua</code> or <code>cl /O2 /MD /Fe:lua.exe *.c</code> depending on whether you are on a Unix or Windows machine; wait a few seconds until the Lua executable is built.</li>
<li>Now type <code>./lua build.lua ../Luon</code> (or <code>lua build.lua ../Luon</code> on Windows); wait until the LuonIDE executable is built; you find it in the output subdirectory.</li>
</ol>
<p dir="auto">Instead of the command line you can run the build using <a href="https://github.com/rochus-keller/LeanCreator">LeanCreator</a> which uses multiple cores and thus builds faster.</p>
<p dir="auto">It is still possible to build the IDE using Qt 5 with qmake; use LnIde.pro for this purpose and proceed as usual when building with Qt.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Support</h3><a id="user-content-support" aria-label="Permalink: Support" href="#support"></a></p>
<p dir="auto">If you need support or would like to post issues or feature requests please use the Github issue list at <a href="https://github.com/rochus-keller/Luon/issues">https://github.com/rochus-keller/Luon/issues</a> or send an email to the author.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">License</h3><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Luon is available under GPL 2 or 3. The runtime libraries in the runtime subfolder, in addition, are available under MPL or LGPL.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Additional Credits</h3><a id="user-content-additional-credits" aria-label="Permalink: Additional Credits" href="#additional-credits"></a></p>
<ul dir="auto">
<li><a href="http://luajit.org/" rel="nofollow">LuaJIT</a> is Copyright © 2005-2023 Mike Pall, released under the MIT open source license.</li>
<li><a href="https://github.com/rochus-keller/LeanQt">LeanQt</a> is based on Qt, which is Copyright (C) 2016 by The Qt Company Ltd, 2008 by Nokia Corporation and/or its subsidiary(-ies), 1992-2005 by Trolltech AS, and many individual contributors around the world.</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI whistleblower found dead in apartment (120 pts)]]></title>
            <link>https://old.reddit.com/r/sanfrancisco/comments/1hdmn62/openai_whistleblower_suchir_balaji_found_dead_in/</link>
            <guid>42413195</guid>
            <pubDate>Fri, 13 Dec 2024 23:14:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/sanfrancisco/comments/1hdmn62/openai_whistleblower_suchir_balaji_found_dead_in/">https://old.reddit.com/r/sanfrancisco/comments/1hdmn62/openai_whistleblower_suchir_balaji_found_dead_in/</a>, See on <a href="https://news.ycombinator.com/item?id=42413195">Hacker News</a></p>
Couldn't get https://old.reddit.com/r/sanfrancisco/comments/1hdmn62/openai_whistleblower_suchir_balaji_found_dead_in/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[McKinsey and Company to pay $650M for role in opioid crisis (363 pts)]]></title>
            <link>https://www.npr.org/2024/12/13/nx-s1-5155962/mckinsey-purdue-opioid-prosecution-doj</link>
            <guid>42413086</guid>
            <pubDate>Fri, 13 Dec 2024 22:57:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.npr.org/2024/12/13/nx-s1-5155962/mckinsey-purdue-opioid-prosecution-doj">https://www.npr.org/2024/12/13/nx-s1-5155962/mckinsey-purdue-opioid-prosecution-doj</a>, See on <a href="https://news.ycombinator.com/item?id=42413086">Hacker News</a></p>
Couldn't get https://www.npr.org/2024/12/13/nx-s1-5155962/mckinsey-purdue-opioid-prosecution-doj: Error: timeout of 10000ms exceeded]]></description>
        </item>
    </channel>
</rss>